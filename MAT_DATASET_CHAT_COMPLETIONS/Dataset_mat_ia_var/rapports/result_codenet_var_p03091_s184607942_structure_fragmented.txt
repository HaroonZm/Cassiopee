================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_input():
    return sys.stdin.buffer.readline

def parse_first_line(input_func):
    N, M = map(int, input_func().split())
    return N, M

def create_adjacency_list(N):
    return [[] for _ in range(N+1)]

def add_edge(adj, a, b):
    adj[a].append(b)
    adj[b].append(a)

def fill_edges(adj, M, input_func):
    for _ in range(M):
        a, b = map(int, input_func().split())
        add_edge(adj, a, b)

def calculate_degrees(adj):
    return [len(A) for A in adj]

def collect_deg4_and_detect_odd(deg, N):
    nodes_deg4 = []
    found_odd = False
    for i in range(1, N+1):
        if deg[i] % 2 == 1:
            return 'odd', None
        elif deg[i] == 4:
            nodes_deg4.append(i)
    return 'ok', nodes_deg4

def check_deg6(deg, N):
    for i in range(1, N+1):
        if deg[i] >= 6:
            return True
    return False

def check_easy_yes(nodes_deg4):
    if len(nodes_deg4) >= 3:
        return True
    return False

def check_easy_no(nodes_deg4):
    if len(nodes_deg4) <= 1:
        return True
    return False

def setup_seen(N, t1, t2):
    seen = [0] * (N+1)
    seen[t1] = 1
    seen[t2] = 1
    return seen

def dfs_from(adj, N, t1, t2):
    seen = setup_seen(N, t1, t2)
    stack = [t1]
    while stack:
        v = stack.pop()
        for u in adj[v]:
            if seen[u] == 0:
                seen[u] = 1
                stack.append(u)
    return seen

def decide_by_seen(seen, N):
    if sum(seen) != N:
        print('Yes')
    else:
        print('No')

def early_exit(result):
    print(result)
    exit()

def main():
    input_func = read_input()
    N, M = parse_first_line(input_func)
    adj = create_adjacency_list(N)
    fill_edges(adj, M, input_func)
    deg = calculate_degrees(adj)
    status, nodes_deg4 = collect_deg4_and_detect_odd(deg, N)
    if status == 'odd':
        early_exit('No')
    if check_deg6(deg, N):
        early_exit('Yes')
    if check_easy_yes(nodes_deg4):
        early_exit('Yes')
    if check_easy_no(nodes_deg4):
        early_exit('No')
    t1, t2 = nodes_deg4[0], nodes_deg4[1]
    seen = dfs_from(adj, N, t1, t2)
    decide_by_seen(seen, N)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2861274480819702
    2. '\n' → logprob: -2.2861275672912598
    3. 'import' → logprob: -2.2861275672912598
    4. '<|end|>' → logprob: -4.03612756729126
    5. '' → logprob: -4.91112756729126
    6. ' ' → logprob: -5.53612756729126
    7. '
' → logprob: -6.03612756729126
    8. '\' → logprob: -6.16112756729126
    9. 'newline' → logprob: -6.28612756729126
    10. '<|end|>' → logprob: -6.28612756729126

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02042287401854992
    2. ' ' → logprob: -5.39542293548584
    3. '  ' → logprob: -6.39542293548584
    4. '<|end|>' → logprob: -6.39542293548584
    5. ' process' → logprob: -6.52042293548584
    6. ' space' → logprob: -6.64542293548584
    7. ' sys' → logprob: -6.89542293548584
    8. ' main' → logprob: -6.89542293548584
    9. ' a' → logprob: -7.02042293548584
    10. ')' → logprob: -7.27042293548584

Token 5: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25461360812187195
    2. '_' → logprob: -1.5046136379241943
    3. ' (' → logprob: -6.629613399505615
    4. '_line' → logprob: -7.379613399505615
    5. '```' → logprob: -9.379613876342773
    6. ':' → logprob: -9.504613876342773
    7. ' ' → logprob: -9.629613876342773
    8. '_input' → logprob: -9.879613876342773
    9. 's' → logprob: -9.879613876342773
    10. '_data' → logprob: -10.004613876342773

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008111790753901005
    2. '_' → logprob: -5.133111953735352
    3. '():' → logprob: -6.383111953735352
    4. ' (' → logprob: -9.258111953735352
    5. '(_' → logprob: -9.508111953735352
    6. '(_:' → logprob: -9.758111953735352
    7. '(:' → logprob: -10.133111953735352
    8. '_input' → logprob: -10.883111953735352
    9. '_line' → logprob: -11.008111953735352
    10. ':' → logprob: -11.133111953735352

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6745647192001343
    2. '   ' → logprob: -1.0495647192001343
    3. '\' → logprob: -3.674564838409424
    4. '```' → logprob: -4.174564838409424
    5. '\n' → logprob: -4.424564838409424
    6. '()' → logprob: -4.549564838409424
    7. '(
' → logprob: -4.549564838409424
    8. ' return' → logprob: -4.549564838409424
    9. '    
' → logprob: -4.674564838409424
    10. ''' → logprob: -4.799564838409424

Token 8: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.534618079662323
    2. 'return' (adapté à ' return') → logprob: -1.0346181392669678
    3. ' return' → logprob: -3.4096181392669678
    4. 'data' → logprob: -4.909617900848389
    5. 'input' → logprob: -4.909617900848389
    6. ' ' → logprob: -5.284617900848389
    7. '    ' → logprob: -6.784617900848389
    8. 'r' → logprob: -7.284617900848389
    9. '```' → logprob: -7.284617900848389
    10. ' input' → logprob: -7.784617900848389

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.007286911830306053
    2. 'sys' → logprob: -5.75728702545166
    3. ' ' → logprob: -6.13228702545166
    4. ' input' → logprob: -6.38228702545166
    5. 'input' → logprob: -8.63228702545166
    6. ' None' → logprob: -11.13228702545166
    7. ' int' → logprob: -11.38228702545166
    8. ' list' → logprob: -11.63228702545166
    9. '	sys' → logprob: -11.88228702545166
    10. ' ' → logprob: -12.50728702545166

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4244939088821411
    2. '.' → logprob: -1.1744939088821411
    3. '.argv' → logprob: -3.5494937896728516
    4. '.stdout' → logprob: -5.049493789672852
    5. ' .' → logprob: -6.924493789672852
    6. '.exit' → logprob: -8.299493789672852
    7. '.input' → logprob: -8.799493789672852
    8. '.readline' → logprob: -8.799493789672852
    9. '.std' → logprob: -9.049493789672852
    10. '.stderr' → logprob: -10.674493789672852

Token 11: '.buffer' (ID: 48964)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4414442181587219
    2. '.readline' → logprob: -1.1914441585540771
    3. '.read' → logprob: -2.941444158554077
    4. '.readlines' → logprob: -8.316444396972656
    5. 'read' → logprob: -10.441444396972656
    6. '.Read' → logprob: -10.566444396972656
    7. ' .' → logprob: -11.941444396972656
    8. '.write' → logprob: -12.441444396972656
    9. '.`' → logprob: -13.066444396972656
    10. '.READ' → logprob: -13.441444396972656

Token 12: '.readline' (ID: 74673)
  Prédit: '.read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.3871767818927765
    2. '.readline' → logprob: -1.137176752090454
    3. 'read' → logprob: -8.637176513671875
    4. '.' → logprob: -9.887176513671875
    5. '.readlines' → logprob: -10.137176513671875
    6. '_read' → logprob: -10.887176513671875
    7. '.raw' → logprob: -11.762176513671875
    8. ' readline' → logprob: -12.137176513671875
    9. ' read' → logprob: -13.762176513671875
    10. ' .' → logprob: -13.762176513671875

Token 13: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009549126960337162
    2. '(' → logprob: -4.759549140930176
    3. '().' → logprob: -7.384549140930176
    4. ' ()' → logprob: -9.009549140930176
    5. '()(' → logprob: -9.884549140930176
    6. '()
' → logprob: -10.134549140930176
    7. '()\' → logprob: -10.384549140930176
    8. '(\' → logprob: -10.509549140930176
    9. '`()' → logprob: -11.509549140930176
    10. '(
' → logprob: -12.259549140930176

Token 14: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00034702493576332927
    2. '().' → logprob: -8.375347137451172
    3. '(' → logprob: -9.750347137451172
    4. '()(' → logprob: -10.250347137451172
    5. '()
' → logprob: -12.000347137451172
    6. ' ()' → logprob: -12.375347137451172
    7. '`()' → logprob: -12.375347137451172
    8. '()

' → logprob: -13.125347137451172
    9. '()`' → logprob: -13.625347137451172
    10. '()]' → logprob: -14.250347137451172

Token 15: ' parse' (ID: 8420)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.05160409212112427
    2. ' main' → logprob: -4.051604270935059
    3. ' process' → logprob: -4.551604270935059
    4. 'read' → logprob: -5.301604270935059
    5. '_read' → logprob: -5.551604270935059
    6. ' ' → logprob: -5.926604270935059
    7. ' readline' → logprob: -6.051604270935059
    8. '_' → logprob: -6.301604270935059
    9. ' write' → logprob: -6.676604270935059
    10. '()' → logprob: -7.551604270935059

Token 16: '_first' (ID: 29347)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.42854589223861694
    2. '(' → logprob: -1.8035459518432617
    3. '_input' → logprob: -2.0535459518432617
    4. '()' → logprob: -3.8035459518432617
    5. '_' → logprob: -3.9285459518432617
    6. '(line' → logprob: -4.803545951843262
    7. '_data' → logprob: -6.678545951843262
    8. '(input' → logprob: -7.428545951843262
    9. '_token' → logprob: -7.553545951843262
    10. '(_)' → logprob: -7.928545951843262

Token 17: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0022391125094145536
    2. '_' → logprob: -6.877239227294922
    3. '_token' → logprob: -7.377239227294922
    4. '()' → logprob: -7.752239227294922
    5. '_word' → logprob: -10.377239227294922
    6. '(' → logprob: -10.502239227294922
    7. 'line' → logprob: -10.752239227294922
    8. '_element' → logprob: -11.377239227294922
    9. '_name' → logprob: -11.627239227294922
    10. '_value' → logprob: -12.002239227294922

Token 18: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34148067235946655
    2. '():' → logprob: -1.5914807319641113
    3. '(' → logprob: -2.4664807319641113
    4. ' ()' → logprob: -9.091480255126953
    5. ':' → logprob: -9.841480255126953
    6. '()>' → logprob: -9.966480255126953
    7. '();' → logprob: -9.966480255126953
    8. '().' → logprob: -10.091480255126953
    9. '("("' → logprob: -10.091480255126953
    10. '())' → logprob: -10.091480255126953

Token 19: '_func' (ID: 22252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036476414650678635
    2. '_line' → logprob: -4.2864766120910645
    3. '())' → logprob: -4.6614766120910645
    4. '_' → logprob: -5.2864766120910645
    5. '()' → logprob: -5.5364766120910645
    6. '(' → logprob: -6.4114766120910645
    7. '_)' → logprob: -7.0364766120910645
    8. ')_' → logprob: -8.411476135253906
    9. ' )' → logprob: -8.536476135253906
    10. '_data' → logprob: -8.786476135253906

Token 20: '):
' (ID: 1883)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.9124118685722351
    2. '):' → logprob: -1.2874119281768799
    3. '()' → logprob: -1.7874119281768799
    4. ')' → logprob: -1.9124119281768799
    5. '())' → logprob: -5.287411689758301
    6. '(' → logprob: -6.287411689758301
    7. '():
' → logprob: -9.9124116897583
    8. ' ):' → logprob: -10.0374116897583
    9. '(),' → logprob: -10.1624116897583
    10. ' ' → logprob: -10.2874116897583

Token 21: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07582946121692657
    2. '   ' → logprob: -2.70082950592041
    3. '(' → logprob: -5.45082950592041
    4. ' ()' → logprob: -7.45082950592041
    5. '():' → logprob: -7.57582950592041
    6. '())' → logprob: -9.20082950592041
    7. '    ' → logprob: -10.07582950592041
    8. '()(' → logprob: -10.32582950592041
    9. ' ' → logprob: -10.45082950592041
    10. ')' → logprob: -10.70082950592041

Token 22: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3086489737033844
    2. 'line' → logprob: -1.558648943901062
    3. '   ' → logprob: -2.9336490631103516
    4. 'data' → logprob: -7.308649063110352
    5. ' data' → logprob: -7.933649063110352
    6. ' first' → logprob: -8.433649063110352
    7. ' return' → logprob: -8.933649063110352
    8. 'tokens' → logprob: -9.808649063110352
    9. '(line' → logprob: -9.808649063110352
    10. ' input' → logprob: -9.933649063110352

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24407237768173218
    2. ' =' → logprob: -1.744072437286377
    3. '=' → logprob: -3.244072437286377
    4. ' ,' → logprob: -5.994072437286377
    5. ' ' → logprob: -8.869071960449219
    6. '=int' → logprob: -9.619071960449219
    7. '   ' → logprob: -11.369071960449219
    8. ')' → logprob: -11.494071960449219
    9. '_' → logprob: -11.869071960449219
    10. ',int' → logprob: -11.869071960449219

Token 24: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5207959413528442
    2. ' K' → logprob: -1.2707959413528442
    3. ' M' → logprob: -2.3957958221435547
    4. 'K' → logprob: -4.145795822143555
    5. ' =' → logprob: -5.145795822143555
    6. 'M' → logprob: -5.770795822143555
    7. '=' → logprob: -6.145795822143555
    8. ' space' → logprob: -6.770795822143555
    9. ' input' → logprob: -6.895795822143555
    10. '  ' → logprob: -7.270795822143555

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04862869903445244
    2. '=' → logprob: -3.048628807067871
    3. ',' → logprob: -10.173628807067871
    4. ' ' → logprob: -13.423628807067871
    5. ')' → logprob: -14.173628807067871
    6. '=input' → logprob: -15.798628807067871
    7. ' ,' → logprob: -16.048627853393555
    8. '   ' → logprob: -16.173627853393555
    9. ' =",' → logprob: -16.423627853393555
    10. '  ' → logprob: -16.673627853393555

Token 26: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05685059353709221
    2. ' input' → logprob: -3.0568506717681885
    3. 'map' → logprob: -5.056850433349609
    4. 'input' → logprob: -6.306850433349609
    5. ' ' → logprob: -11.18185043334961
    6. ' list' → logprob: -11.30685043334961
    7. ' tuple' → logprob: -12.80685043334961
    8. ' int' → logprob: -12.93185043334961
    9. 'int' → logprob: -13.68185043334961
    10. ' [' → logprob: -13.93185043334961

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1260959506034851
    2. '(' → logprob: -2.25109601020813
    3. '(lambda' → logprob: -4.501095771789551
    4. '(str' → logprob: -6.501095771789551
    5. '(input' → logprob: -7.626095771789551
    6. '(list' → logprob: -10.50109577178955
    7. '(eval' → logprob: -11.12609577178955
    8. '(
' → logprob: -11.25109577178955
    9. '(tuple' → logprob: -11.25109577178955
    10. ' (' → logprob: -12.50109577178955

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28918686509132385
    2. ')' → logprob: -2.164186954498291
    3. '(input' → logprob: -2.289186954498291
    4. ',input' → logprob: -4.039186954498291
    5. '(' → logprob: -4.414186954498291
    6. '(read' → logprob: -6.289186954498291
    7. 'input' → logprob: -6.914186954498291
    8. '<|end|>' → logprob: -7.039186954498291
    9. '(next' → logprob: -7.914186954498291
    10. '<|end|>' → logprob: -9.164186477661133

Token 29: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07889782637357712
    2. 'input' → logprob: -2.578897714614868
    3. ')' → logprob: -12.703897476196289
    4. ' read' → logprob: -12.828897476196289
    5. 'read' → logprob: -14.078897476196289
    6. ' readline' → logprob: -14.703897476196289
    7. '(input' → logprob: -15.078897476196289
    8. ',input' → logprob: -15.203897476196289
    9. ' )' → logprob: -15.328897476196289
    10. '	input' → logprob: -16.32889747619629

Token 30: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.009702860377728939
    2. '(' → logprob: -5.009702682495117
    3. ')' → logprob: -6.634702682495117
    4. '(func' → logprob: -7.884702682495117
    5. 'func' → logprob: -7.884702682495117
    6. '_' → logprob: -8.259702682495117
    7. '()' → logprob: -8.884702682495117
    8. '_function' → logprob: -9.134702682495117
    9. ')_' → logprob: -9.759702682495117
    10. '(_' → logprob: -10.009702682495117

Token 31: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5388439297676086
    2. '())' → logprob: -0.9138439297676086
    3. '().' → logprob: -4.788844108581543
    4. ')' → logprob: -5.163844108581543
    5. '()))' → logprob: -7.038844108581543
    6. '(),' → logprob: -7.788844108581543
    7. '()
' → logprob: -10.413844108581543
    8. '());' → logprob: -10.538844108581543
    9. '()[' → logprob: -10.663844108581543
    10. '()),' → logprob: -10.913844108581543

Token 32: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4192968010902405
    2. 'split' → logprob: -1.1692967414855957
    3. 'rstrip' → logprob: -3.9192967414855957
    4. 'decode' → logprob: -4.419296741485596
    5. 'read' → logprob: -11.919297218322754
    6. ')' → logprob: -14.919297218322754
    7. ' strip' → logprob: -14.919297218322754
    8. ' split' → logprob: -15.294297218322754
    9. '```' → logprob: -15.294297218322754
    10. '(split' → logprob: -16.419296264648438

Token 33: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005700892303138971
    2. '()' → logprob: -5.380701065063477
    3. '()))' → logprob: -6.880701065063477
    4. ')' → logprob: -10.380701065063477
    5. '(' → logprob: -11.630701065063477
    6. '())
' → logprob: -12.505701065063477
    7. '(),' → logprob: -13.130701065063477
    8. ' ())' → logprob: -13.130701065063477
    9. '))' → logprob: -14.005701065063477
    10. '()),' → logprob: -14.255701065063477

Token 34: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007731554098427296
    2. ')' → logprob: -5.5077314376831055
    3. '()
' → logprob: -5.8827314376831055
    4. '())' → logprob: -7.3827314376831055
    5. '(' → logprob: -9.257731437683105
    6. '()

' → logprob: -9.757731437683105
    7. '()[' → logprob: -10.632731437683105
    8. '()\' → logprob: -10.632731437683105
    9. '(
' → logprob: -11.757731437683105
    10. '())
' → logprob: -12.757731437683105

Token 35: ' return' (ID: 622)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28376898169517517
    2. ')' → logprob: -1.5337690114974976
    3. '(' → logprob: -4.283769130706787
    4. '()
' → logprob: -4.783769130706787
    5. '())' → logprob: -6.533769130706787
    6. '()\' → logprob: -6.533769130706787
    7. '   ' → logprob: -7.033769130706787
    8. '
' → logprob: -7.158769130706787
    9. '<|end|>' → logprob: -7.283769130706787
    10. '```' → logprob: -7.658769130706787

Token 36: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6979608535766602
    2. ' N' → logprob: -0.6979608535766602
    3. '(N' → logprob: -6.07296085357666
    4. ' (' → logprob: -6.19796085357666
    5. ' ' → logprob: -8.44796085357666
    6. '(' → logprob: -8.57296085357666
    7. '[N' → logprob: -10.32296085357666
    8. ' ' → logprob: -11.19796085357666
    9. '  ' → logprob: -12.69796085357666
    10. ' [' → logprob: -12.82296085357666

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32611751556396484
    2. '<|end|>' → logprob: -1.3261175155639648
    3. '<|end|>' → logprob: -5.576117515563965
    4. ')' → logprob: -5.576117515563965
    5. ' ' → logprob: -6.701117515563965
    6. ' ,' → logprob: -6.701117515563965
    7. ',N' → logprob: -6.951117515563965
    8. '```' → logprob: -8.201117515563965
    9. '+' → logprob: -8.326117515563965
    10. '  ' → logprob: -8.451117515563965

Token 38: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.048693422228097916
    2. 'M' → logprob: -3.0486934185028076
    3. ' ' → logprob: -9.298693656921387
    4. ' ' → logprob: -11.673693656921387
    5. 'space' → logprob: -13.298693656921387
    6. ' space' → logprob: -13.673693656921387
    7. '<|end|>' → logprob: -14.673693656921387
    8. '​' → logprob: -15.298693656921387
    9. '‌' → logprob: -15.548693656921387
    10. '    ' → logprob: -15.673693656921387

Token 39: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4856826066970825
    2. '<|end|>' → logprob: -2.110682487487793
    3. '()' → logprob: -2.610682487487793
    4. '\n' → logprob: -3.110682487487793
    5. '```' → logprob: -3.485682487487793
    6. '()
' → logprob: -3.860682487487793
    7. '(
' → logprob: -3.985682487487793
    8. 'newline' → logprob: -3.985682487487793
    9. '(' → logprob: -4.360682487487793
    10. '' → logprob: -4.860682487487793

Token 40: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48141491413116455
    2. '
' → logprob: -1.7314149141311646
    3. '(' → logprob: -2.731414794921875
    4. '()
' → logprob: -2.856414794921875
    5. '(
' → logprob: -3.856414794921875
    6. '\n' → logprob: -3.981414794921875
    7. '```' → logprob: -4.731414794921875
    8. ')' → logprob: -4.981414794921875
    9. '<|end|>' → logprob: -5.356414794921875
    10. '()

' → logprob: -5.606414794921875

Token 41: ' create' (ID: 2501)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.5275135636329651
    2. ' solve' → logprob: -1.2775135040283203
    3. ' calculate' → logprob: -2.9025135040283203
    4. ' process' → logprob: -3.2775135040283203
    5. ' read' → logprob: -4.02751350402832
    6. ' compute' → logprob: -4.90251350402832
    7. ' def' → logprob: -6.02751350402832
    8. ' main' → logprob: -6.15251350402832
    9. ' find' → logprob: -6.40251350402832
    10. ' build' → logprob: -6.65251350402832

Token 42: '_ad' (ID: 23782)
  Prédit: '_matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.5846241116523743
    2. '_array' → logprob: -1.5846240520477295
    3. '_map' → logprob: -3.0846240520477295
    4. '_graph' → logprob: -3.2096240520477295
    5. '_' → logprob: -3.4596240520477295
    6. '_table' → logprob: -3.9596240520477295
    7. '_list' → logprob: -4.209624290466309
    8. '_grid' → logprob: -4.209624290466309
    9. '_board' → logprob: -4.209624290466309
    10. '_ad' → logprob: -4.834624290466309

Token 43: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.47685933113098145
    2. 'jac' → logprob: -0.9768593311309814
    3. '_j' → logprob: -5.976859092712402
    4. 'acency' → logprob: -9.101859092712402
    5. '[j' → logprob: -10.476859092712402
    6. '_list' → logprob: -10.726859092712402
    7. 'Jac' → logprob: -11.351859092712402
    8. '_' → logprob: -11.601859092712402
    9. '	j' → logprob: -11.726859092712402
    10. ' jac' → logprob: -11.726859092712402

Token 44: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.0053625330328941345
    2. 'acency' → logprob: -5.255362510681152
    3. '```' → logprob: -9.880362510681152
    4. '_list' → logprob: -10.880362510681152
    5. 'acy' → logprob: -11.130362510681152
    6. 'ancy' → logprob: -12.005362510681152
    7. 'encies' → logprob: -12.505362510681152
    8. '   ' → logprob: -12.630362510681152
    9. 'list' → logprob: -12.630362510681152
    10. 'e' → logprob: -12.755362510681152

Token 45: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.012684931047260761
    2. '_matrix' → logprob: -4.7626848220825195
    3. '_' → logprob: -5.5126848220825195
    4. '_lists' → logprob: -11.01268482208252
    5. '_array' → logprob: -12.76268482208252
    6. '(' → logprob: -13.51268482208252
    7. '_dict' → logprob: -13.63768482208252
    8. 'list' → logprob: -13.76268482208252
    9. 'List' → logprob: -14.01268482208252
    10. ' _' → logprob: -14.38768482208252

Token 46: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.1440032571554184
    2. '(' → logprob: -2.14400315284729
    3. '(n' → logprob: -4.769003391265869
    4. ' (' → logprob: -5.269003391265869
    5. '(num' → logprob: -6.019003391265869
    6. '(size' → logprob: -7.269003391265869
    7. '(node' → logprob: -10.269002914428711
    8. '   ' → logprob: -11.144002914428711
    9. '(len' → logprob: -11.269002914428711
    10. '((' → logprob: -11.269002914428711

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06778321415185928
    2. ',' → logprob: -2.8177831172943115
    3. ' ):' → logprob: -5.317783355712891
    4. ')' → logprob: -7.692783355712891
    5. '):
' → logprob: -8.56778335571289
    6. ' ,' → logprob: -8.81778335571289
    7. ':' → logprob: -10.81778335571289
    8. '   ' → logprob: -10.81778335571289
    9. ' )' → logprob: -10.94278335571289
    10. '):
' → logprob: -11.56778335571289

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5063249468803406
    2. ' adjacency' → logprob: -1.6313250064849854
    3. '    ' → logprob: -2.1313250064849854
    4. ' return' → logprob: -3.7563250064849854
    5. 'adj' → logprob: -4.131324768066406
    6. '[' → logprob: -4.381324768066406
    7. ' adj' → logprob: -4.631324768066406
    8. '[]' → logprob: -5.006324768066406
    9. ' [[]' → logprob: -6.006324768066406
    10. '```' → logprob: -6.256324768066406

Token 49: ' return' (ID: 622)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.6887034177780151
    2. ' [' → logprob: -1.0637034177780151
    3. '[' → logprob: -2.6887035369873047
    4. ' []' → logprob: -3.3137035369873047
    5. '[]' → logprob: -4.188703536987305
    6. 'adj' → logprob: -4.688703536987305
    7. ' adjacency' → logprob: -4.938703536987305
    8. ' return' → logprob: -5.063703536987305
    9. ' adj' → logprob: -5.938703536987305
    10. ' ' → logprob: -6.063703536987305

Token 50: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.252921998500824
    2. ' [[]' → logprob: -1.5029220581054688
    3. ' [' → logprob: -7.002922058105469
    4. '{' → logprob: -9.752922058105469
    5. '[]' → logprob: -11.377922058105469
    6. ' {' → logprob: -11.752922058105469
    7. '[[' → logprob: -13.627922058105469
    8. ' ' → logprob: -14.252922058105469
    9. ' [{}' → logprob: -14.377922058105469
    10. '{}' → logprob: -14.627922058105469

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47425463795661926
    2. 'for' → logprob: -0.9742546081542969
    3. ')' → logprob: -8.849254608154297
    4. ']' → logprob: -11.099254608154297
    5. ' ' → logprob: -11.474254608154297
    6. '   ' → logprob: -12.474254608154297
    7. '	for' → logprob: -13.099254608154297
    8. ',' → logprob: -14.099254608154297
    9. '()' → logprob: -14.849254608154297
    10. 'f' → logprob: -14.849254608154297

Token 52: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.39377516508102417
    2. '_' → logprob: -1.143775224685669
    3. ' ' → logprob: -5.14377498626709
    4. ' range' → logprob: -7.01877498626709
    5. ' i' → logprob: -9.64377498626709
    6. 'range' → logprob: -10.14377498626709
    7. '_range' → logprob: -10.64377498626709
    8. ' in' → logprob: -12.14377498626709
    9. '(range' → logprob: -12.26877498626709
    10. '_i' → logprob: -13.01877498626709

Token 53: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3879595696926117
    2. ' in' → logprob: -1.137959599494934
    3. 'range' → logprob: -7.3879594802856445
    4. 'i' → logprob: -8.512959480285645
    5. 'n' → logprob: -8.512959480285645
    6. ' ' → logprob: -10.387959480285645
    7. ' i' → logprob: -11.637959480285645
    8. '  ' → logprob: -12.387959480285645
    9. 'x' → logprob: -12.637959480285645
    10. '_' → logprob: -12.762959480285645

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858771339058876
    2. ' range' → logprob: -3.0485877990722656
    3. '	range' → logprob: -15.798587799072266
    4. '(range' → logprob: -15.923587799072266
    5. ' ' → logprob: -16.798587799072266
    6. '   ' → logprob: -17.548587799072266
    7. '  ' → logprob: -18.048587799072266
    8. '_range' → logprob: -18.798587799072266
    9. 'rang' → logprob: -18.923587799072266
    10. '```' → logprob: -19.798587799072266

Token 55: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002476135268807411
    2. '(' → logprob: -6.002476215362549
    3. ')' → logprob: -16.00247573852539
    4. '(n' → logprob: -16.37747573852539
    5. ' (' → logprob: -16.62747573852539
    6. 'N' → logprob: -17.25247573852539
    7. '(
' → logprob: -17.37747573852539
    8. ')(' → logprob: -17.75247573852539
    9. '```' → logprob: -18.37747573852539
    10. '((' → logprob: -19.25247573852539

Token 56: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.2603901015827432e-05
    2. ')' → logprob: -11.125022888183594
    3. ' )' → logprob: -12.500022888183594
    4. ']' → logprob: -13.000022888183594
    5. ')])' → logprob: -14.375022888183594
    6. '))' → logprob: -15.250022888183594
    7. '   ' → logprob: -15.250022888183594
    8. '])]' → logprob: -15.500022888183594
    9. ')}' → logprob: -15.750022888183594
    10. ')]
' → logprob: -16.000022888183594

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. '2' → logprob: -15.000040054321289
    4. ')' → logprob: -17.25004005432129
    5. '１' → logprob: -18.62504005432129
    6. '0' → logprob: -18.75004005432129
    7. '```' → logprob: -18.75004005432129
    8. '   ' → logprob: -19.37504005432129
    9. '  ' → logprob: -20.12504005432129
    10. '7' → logprob: -20.18754005432129

Token 58: ')]

' (ID: 56882)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004640049301087856
    2. ')]' → logprob: -5.379640102386475
    3. ']' → logprob: -11.504639625549316
    4. ')])' → logprob: -12.379639625549316
    5. ')
' → logprob: -12.879639625549316
    6. ' )' → logprob: -13.379639625549316
    7. '）' → logprob: -15.004639625549316
    8. '))' → logprob: -15.254639625549316
    9. ')}' → logprob: -15.254639625549316
    10. '])' → logprob: -15.879639625549316

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2849338948726654
    2. '
' → logprob: -1.4099339246749878
    3. '```' → logprob: -7.034934043884277
    4. '<|end|>' → logprob: -7.034934043884277
    5. '\' → logprob: -7.284934043884277
    6. '

' → logprob: -7.784934043884277
    7. ' def' → logprob: -8.409934043884277
    8. '<|end|>' → logprob: -8.784934043884277
    9. '\n' → logprob: -9.034934043884277
    10. '
' → logprob: -9.159934043884277

Token 60: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.03266904875636101
    2. ' create' → logprob: -3.9076690673828125
    3. ' build' → logprob: -4.6576690673828125
    4. ' read' → logprob: -7.2826690673828125
    5. '_add' → logprob: -7.9076690673828125
    6. ' parse' → logprob: -8.157669067382812
    7. 'add' → logprob: -8.407669067382812
    8. ' def' → logprob: -8.782669067382812
    9. ' write' → logprob: -9.032669067382812
    10. ' dfs' → logprob: -9.157669067382812

Token 61: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.03726735711097717
    2. '_edges' → logprob: -3.7872674465179443
    3. '_' → logprob: -4.287267208099365
    4. '_connection' → logprob: -9.787267684936523
    5. '_to' → logprob: -10.287267684936523
    6. '_neighbor' → logprob: -11.537267684936523
    7. ' _' → logprob: -11.662267684936523
    8. '_ed' → logprob: -11.662267684936523
    9. '_neighbors' → logprob: -12.162267684936523
    10. '(_' → logprob: -12.412267684936523

Token 62: '(adj' (ID: 141921)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017050696536898613
    2. '(edges' → logprob: -5.517050743103027
    3. '(parent' → logprob: -5.767050743103027
    4. ' (' → logprob: -6.017050743103027
    5. '(edge' → logprob: -6.392050743103027
    6. '(node' → logprob: -6.517050743103027
    7. '(ad' → logprob: -7.017050743103027
    8. '(s' → logprob: -7.642050743103027
    9. '(A' → logprob: -7.642050743103027
    10. '(adj' → logprob: -7.642050743103027

Token 63: ',' (ID: 11)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.8005219101905823
    2. '[' → logprob: -0.9255219101905823
    3. ')' → logprob: -2.0505218505859375
    4. ',' → logprob: -4.4255218505859375
    5. '   ' → logprob: -5.4255218505859375
    6. '_list' → logprob: -6.4255218505859375
    7. 'acent' → logprob: -6.6755218505859375
    8. '(' → logprob: -7.1755218505859375
    9. '[])' → logprob: -7.1755218505859375
    10. '[]' → logprob: -7.3005218505859375

Token 64: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.08221910148859024
    2. ' u' → logprob: -2.707219123840332
    3. 'a' → logprob: -4.457219123840332
    4. ' a' → logprob: -8.082219123840332
    5. 'from' → logprob: -8.707219123840332
    6. '   ' → logprob: -10.332219123840332
    7. ')' → logprob: -10.332219123840332
    8. ' from' → logprob: -11.457219123840332
    9. '	u' → logprob: -11.707219123840332
    10. 'x' → logprob: -11.957219123840332

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02746843546628952
    2. ' ,' → logprob: -3.65246844291687
    3. ',a' → logprob: -7.527468204498291
    4. '[],' → logprob: -9.27746868133545
    5. ',d' → logprob: -9.40246868133545
    6. ',u' → logprob: -9.40246868133545
    7. '[' → logprob: -9.52746868133545
    8. '_,' → logprob: -9.65246868133545
    9. 'd' → logprob: -9.90246868133545
    10. '[a' → logprob: -10.15246868133545

Token 66: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2519296407699585
    2. 'b' → logprob: -1.5019296407699585
    3. ' ' → logprob: -15.00192928314209
    4. '<|end|>' → logprob: -16.751930236816406
    5. '	b' → logprob: -17.501930236816406
    6. ',b' → logprob: -18.126930236816406
    7. ' б' → logprob: -18.251930236816406
    8. ' ' → logprob: -18.251930236816406
    9. ')b' → logprob: -18.251930236816406
    10. '<|end|>' → logprob: -18.251930236816406

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00043591417488642037
    2. ')' → logprob: -8.125435829162598
    3. '):
' → logprob: -9.375435829162598
    4. ' ):' → logprob: -10.500435829162598
    5. ',' → logprob: -10.625435829162598
    6. '):
' → logprob: -13.750435829162598
    7. ':' → logprob: -14.500435829162598
    8. '   ' → logprob: -15.000435829162598
    9. ')：' → logprob: -15.000435829162598
    10. '),' → logprob: -15.500435829162598

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04841133952140808
    2. 'adj' → logprob: -3.9234113693237305
    3. ' adj' → logprob: -3.9234113693237305
    4. '.' → logprob: -5.4234113693237305
    5. '<|end|>' → logprob: -6.7984113693237305
    6. '.ad' → logprob: -7.4234113693237305
    7. '.append' → logprob: -7.6734113693237305
    8. '[' → logprob: -8.04841136932373
    9. ' ' → logprob: -8.67341136932373
    10. ' .' → logprob: -8.79841136932373

Token 69: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.144834965467453
    2. ' adj' → logprob: -2.0198349952697754
    3. '   ' → logprob: -6.144834995269775
    4. 'a' → logprob: -12.769834518432617
    5. 'append' → logprob: -12.894834518432617
    6. 'ad' → logprob: -13.394834518432617
    7. '```' → logprob: -14.019834518432617
    8. '(adj' → logprob: -14.144834518432617
    9. ' ' → logprob: -14.269834518432617
    10. '  ' → logprob: -14.394834518432617

Token 70: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00012475410767365247
    2. '[b' → logprob: -9.62512493133545
    3. '[' → logprob: -9.75012493133545
    4. 'a' → logprob: -16.000123977661133
    5. '```' → logprob: -16.625123977661133
    6. '[]' → logprob: -17.250123977661133
    7. '[A' → logprob: -17.500123977661133
    8. '[
' → logprob: -17.875123977661133
    9. ' [' → logprob: -18.125123977661133
    10. '.append' → logprob: -18.500123977661133

Token 71: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00022296691895462573
    2. ']' → logprob: -9.125223159790039
    3. ').' → logprob: -9.500223159790039
    4. '.append' → logprob: -10.750223159790039
    5. '.' → logprob: -11.625223159790039
    6. ' ].' → logprob: -11.875223159790039
    7. '   ' → logprob: -14.000223159790039
    8. '][' → logprob: -15.875223159790039
    9. '```' → logprob: -16.12522315979004
    10. '[' → logprob: -16.12522315979004

Token 72: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.5048530030981055e-06
    2. ' append' → logprob: -13.750001907348633
    3. 'appen' → logprob: -15.625001907348633
    4. '.append' → logprob: -15.625001907348633
    5. 'push' → logprob: -18.000001907348633
    6. '	append' → logprob: -18.500001907348633
    7. '_append' → logprob: -18.875001907348633
    8. '```' → logprob: -19.250001907348633
    9. 'add' → logprob: -19.750001907348633
    10. 'app' → logprob: -20.000001907348633

Token 73: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0019351851660758257
    2. '(' → logprob: -6.251935005187988
    3. '((' → logprob: -12.876935005187988
    4. 'b' → logprob: -13.251935005187988
    5. '(
' → logprob: -13.251935005187988
    6. ' (' → logprob: -14.876935005187988
    7. ')b' → logprob: -16.626935958862305
    8. ' b' → logprob: -17.626935958862305
    9. '(

' → logprob: -18.001935958862305
    10. '(a' → logprob: -18.126935958862305

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1054253011243418e-05
    2. ')
' → logprob: -11.125020980834961
    3. ' )' → logprob: -12.125020980834961
    4. '),' → logprob: -15.125020980834961
    5. '   ' → logprob: -16.25002098083496
    6. ')

' → logprob: -16.37502098083496
    7. ',' → logprob: -16.62502098083496
    8. ')`' → logprob: -16.75002098083496
    9. ')}' → logprob: -17.50002098083496
    10. '<|end|>' → logprob: -17.62502098083496

Token 75: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.01095101609826088
    2. ' adj' → logprob: -4.635951042175293
    3. '   ' → logprob: -6.885951042175293
    4. '<|end|>' → logprob: -9.885951042175293
    5. '(adj' → logprob: -10.385951042175293
    6. ' 
' → logprob: -11.010951042175293
    7. '\n' → logprob: -11.510951042175293
    8. ' ' → logprob: -11.510951042175293
    9. '    
' → logprob: -11.510951042175293
    10. '_adj' → logprob: -11.635951042175293

Token 77: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0004360334132798016
    2. '[' → logprob: -7.750435829162598
    3. '```' → logprob: -13.250435829162598
    4. 'b' → logprob: -13.500435829162598
    5. '[a' → logprob: -14.500435829162598
    6. ' [' → logprob: -14.875435829162598
    7. '   ' → logprob: -15.375435829162598
    8. '	b' → logprob: -15.500435829162598
    9. '\[' → logprob: -15.500435829162598
    10. '[B' → logprob: -15.500435829162598

Token 78: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.012119313701987267
    2. ').' → logprob: -4.887119293212891
    3. ']' → logprob: -5.762119293212891
    4. ')' → logprob: -7.512119293212891
    5. '.' → logprob: -7.762119293212891
    6. '[a' → logprob: -9.38711929321289
    7. '])' → logprob: -9.51211929321289
    8. ' ].' → logprob: -9.88711929321289
    9. '[' → logprob: -10.01211929321289
    10. '.append' → logprob: -10.13711929321289

Token 79: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. ' append' → logprob: -14.125000953674316
    3. 'appen' → logprob: -16.500001907348633
    4. 'a' → logprob: -16.625001907348633
    5. '	append' → logprob: -16.750001907348633
    6. 'app' → logprob: -16.875001907348633
    7. 'add' → logprob: -17.000001907348633
    8. '.append' → logprob: -17.375001907348633
    9. 'adj' → logprob: -18.125001907348633
    10. '```' → logprob: -18.750001907348633

Token 80: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00015979631280060858
    2. '(' → logprob: -8.750160217285156
    3. '(
' → logprob: -13.875160217285156
    4. 'a' → logprob: -15.000160217285156
    5. ' (' → logprob: -18.500160217285156
    6. '(

' → logprob: -19.000160217285156
    7. '((' → logprob: -19.375160217285156
    8. ')' → logprob: -19.750160217285156
    9. '```' → logprob: -19.875160217285156
    10. '(
' → logprob: -20.125160217285156

Token 81: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. ')
' → logprob: -10.250035285949707
    3. ' )' → logprob: -16.000036239624023
    4. ')

' → logprob: -16.625036239624023
    5. '   ' → logprob: -17.125036239624023
    6. ')return' → logprob: -17.750036239624023
    7. ')
' → logprob: -18.500036239624023
    8. '),' → logprob: -18.750036239624023
    9. ')`' → logprob: -19.000036239624023
    10. '')' → logprob: -19.000036239624023

Token 82: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6412503123283386
    2. '
' → logprob: -0.7662503123283386
    3. 'd' → logprob: -5.766250133514404
    4. '

' → logprob: -5.891250133514404
    5. '\' → logprob: -6.766250133514404
    6. '```' → logprob: -7.516250133514404
    7. '#' → logprob: -7.891250133514404
    8. '' → logprob: -8.641250610351562
    9. '
' → logprob: -8.641250610351562
    10. '\n' → logprob: -8.891250610351562

Token 83: ' fill' (ID: 6954)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.6387519240379333
    2. ' dfs' → logprob: -0.7637519240379333
    3. ' find' → logprob: -6.013751983642578
    4. ' main' → logprob: -6.763751983642578
    5. 'dfs' → logprob: -7.013751983642578
    6. ' ' → logprob: -7.763751983642578
    7. 'b' → logprob: -7.888751983642578
    8. ' is' → logprob: -9.013751983642578
    9. ' shortest' → logprob: -9.013751983642578
    10. ' solve' → logprob: -9.263751983642578

Token 84: '_edges' (ID: 68870)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.9329238533973694
    2. '_ad' → logprob: -1.8079237937927246
    3. '_adj' → logprob: -2.1829237937927246
    4. '_queue' → logprob: -3.3079237937927246
    5. '_graph' → logprob: -3.5579237937927246
    6. '_neighbors' → logprob: -3.5579237937927246
    7. '_' → logprob: -3.6829237937927246
    8. '_order' → logprob: -3.8079237937927246
    9. '_edges' → logprob: -3.9329237937927246
    10. '_depth' → logprob: -4.182923793792725

Token 85: '(adj' (ID: 141921)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6122531890869141
    2. '(adj' → logprob: -0.9872531890869141
    3. ' (' → logprob: -2.487253189086914
    4. '(ad' → logprob: -6.612253189086914
    5. '(input' → logprob: -8.112253189086914
    6. '```' → logprob: -9.237253189086914
    7. '(args' → logprob: -9.737253189086914
    8. '(def' → logprob: -9.987253189086914
    9. '(parent' → logprob: -10.237253189086914
    10. '(N' → logprob: -10.362253189086914

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.431207682704553e-05
    2. ' ,' → logprob: -9.875054359436035
    3. ')' → logprob: -14.125054359436035
    4. ',N' → logprob: -14.500054359436035
    5. ',n' → logprob: -14.625054359436035
    6. '),' → logprob: -14.875054359436035
    7. '):' → logprob: -15.750054359436035
    8. ',
' → logprob: -16.00005340576172
    9. '‌,' → logprob: -16.12505340576172
    10. '```' → logprob: -16.37505340576172

Token 87: ' M' (ID: 391)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6326460838317871
    2. 'M' → logprob: -1.382646083831787
    3. ' input' → logprob: -2.132646083831787
    4. ' M' → logprob: -2.632646083831787
    5. 'N' → logprob: -4.007646083831787
    6. ' N' → logprob: -5.882646083831787
    7. ' edges' → logprob: -6.257646083831787
    8. 'edges' → logprob: -6.257646083831787
    9. ' sys' → logprob: -7.382646083831787
    10. '```' → logprob: -7.757646083831787

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023764846846461296
    2. ',input' → logprob: -6.377376556396484
    3. '):' → logprob: -7.627376556396484
    4. ' ,' → logprob: -8.627376556396484
    5. '):
' → logprob: -13.002376556396484
    6. ',args' → logprob: -14.377376556396484
    7. '   ' → logprob: -14.502376556396484
    8. ')' → logprob: -14.502376556396484
    9. ' ):' → logprob: -14.502376556396484
    10. 'input' → logprob: -14.627376556396484

Token 89: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4289604127407074
    2. 'input' → logprob: -1.0539604425430298
    3. 'read' → logprob: -9.178960800170898
    4. ' read' → logprob: -9.928960800170898
    5. ' ' → logprob: -10.678960800170898
    6. '   ' → logprob: -11.428960800170898
    7. '```' → logprob: -11.553960800170898
    8. ')' → logprob: -11.991460800170898
    9. '  ' → logprob: -12.178960800170898
    10. 'import' → logprob: -12.303960800170898

Token 90: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -4.572941179503687e-05
    2. '_' → logprob: -10.750045776367188
    3. '_f' → logprob: -11.625045776367188
    4. '_function' → logprob: -12.000045776367188
    5. '_fun' → logprob: -12.750045776367188
    6. 'func' → logprob: -13.000045776367188
    7. ')_' → logprob: -13.250045776367188
    8. ')' → logprob: -14.375045776367188
    9. ' _' → logprob: -14.500045776367188
    10. '_funcs' → logprob: -15.125045776367188

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008268986130133271
    2. ')' → logprob: -7.125826835632324
    3. ',' → logprob: -11.375826835632324
    4. ' ):' → logprob: -12.375826835632324
    5. '):
' → logprob: -12.500826835632324
    6. ':' → logprob: -13.500826835632324
    7. '():' → logprob: -13.875826835632324
    8. '   ' → logprob: -15.500826835632324
    9. '(' → logprob: -16.12582778930664
    10. ' ' → logprob: -16.62582778930664

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034028785303235054
    2. ' for' → logprob: -6.0034027099609375
    3. 'for' → logprob: -7.0034027099609375
    4. '	for' → logprob: -11.128402709960938
    5. '
' → logprob: -14.003402709960938
    6. '    
' → logprob: -14.253402709960938
    7. '   ' → logprob: -14.378402709960938
    8. '```' → logprob: -14.878402709960938
    9. ')' → logprob: -15.503402709960938
    10. '    ' → logprob: -15.878402709960938

Token 93: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20179474353790283
    2. 'for' (adapté à ' for') → logprob: -1.9517947435379028
    3. '   ' → logprob: -3.2017946243286133
    4. '
' → logprob: -10.951794624328613
    5. '	for' → logprob: -11.951794624328613
    6. '    
' → logprob: -12.826794624328613
    7. ' ' → logprob: -13.201794624328613
    8. '  ' → logprob: -15.201794624328613
    9. ' 
' → logprob: -15.451794624328613
    10. '```' → logprob: -15.576794624328613

Token 94: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0013519029598683119
    2. ' ' → logprob: -6.876351833343506
    3. '_' → logprob: -8.126352310180664
    4. ' i' → logprob: -10.876352310180664
    5. ' ‌' → logprob: -12.876352310180664
    6. ' ' → logprob: -13.751352310180664
    7. ' ​' → logprob: -14.626352310180664
    8. ' ▁' → logprob: -15.251352310180664
    9. ' in' → logprob: -15.501352310180664
    10. '  ' → logprob: -17.501352310180664

Token 95: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5761924386024475
    2. ' in' → logprob: -0.8261924386024475
    3. ' ' → logprob: -8.951192855834961
    4. 'i' → logprob: -10.576192855834961
    5. '	in' → logprob: -10.951192855834961
    6. '  ' → logprob: -11.201192855834961
    7. '```' → logprob: -11.326192855834961
    8. '_' → logprob: -11.326192855834961
    9. 'import' → logprob: -11.951192855834961
    10. '   ' → logprob: -11.951192855834961

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043949027894996107
    2. ' range' → logprob: -7.750439643859863
    3. '(range' → logprob: -12.000439643859863
    4. 'ange' → logprob: -13.125439643859863
    5. '	range' → logprob: -14.625439643859863
    6. '_range' → logprob: -16.000438690185547
    7. '.range' → logprob: -16.750438690185547
    8. '```' → logprob: -17.375438690185547
    9. ' ' → logprob: -17.500438690185547
    10. ' xrange' → logprob: -17.750438690185547

Token 97: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.030516333878040314
    2. ' (' → logprob: -3.7805163860321045
    3. '(' → logprob: -5.280516147613525
    4. ' M' → logprob: -6.155516147613525
    5. ',' → logprob: -11.405516624450684
    6. 'M' → logprob: -11.780516624450684
    7. ' ' → logprob: -12.030516624450684
    8. '   ' → logprob: -13.280516624450684
    9. ' range' → logprob: -13.280516624450684
    10. ' ,' → logprob: -13.405516624450684

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027095344848930836
    2. ' ):' → logprob: -6.50270938873291
    3. ':' → logprob: -7.75270938873291
    4. '):
' → logprob: -7.75270938873291
    5. ')' → logprob: -8.00270938873291
    6. ' )' → logprob: -12.25270938873291
    7. '   ' → logprob: -12.87770938873291
    8. '():' → logprob: -13.50270938873291
    9. ' ):
' → logprob: -13.62770938873291
    10. ' :' → logprob: -14.12770938873291

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06299606710672379
    2. '   ' → logprob: -2.8129961490631104
    3. ' a' → logprob: -7.437995910644531
    4. '    
' → logprob: -9.187995910644531
    5. '    ' → logprob: -9.312995910644531
    6. ',' → logprob: -9.812995910644531
    7. '        
' → logprob: -10.187995910644531
    8. ' ' → logprob: -10.687995910644531
    9. '<|end|>' → logprob: -10.687995910644531
    10. 'a' → logprob: -10.812995910644531

Token 100: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.003635111730545759
    2. ' a' → logprob: -5.628634929656982
    3. '   ' → logprob: -10.37863540649414
    4. '       ' → logprob: -13.25363540649414
    5. '	a' → logprob: -13.37863540649414
    6. '>a' → logprob: -15.62863540649414
    7. ',a' → logprob: -16.37863540649414
    8. '_a' → logprob: -16.75363540649414
    9. '  ' → logprob: -16.87863540649414
    10. '    ' → logprob: -16.87863540649414

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030573306139558554
    2. ' ,' → logprob: -6.378057479858398
    3. ',b' → logprob: -6.628057479858398
    4. 'b' → logprob: -10.378057479858398
    5. ' b' → logprob: -15.128057479858398
    6. ',int' → logprob: -17.3780574798584
    7. ',
' → logprob: -18.1280574798584
    8. '_,' → logprob: -18.2530574798584
    9. '‌,' → logprob: -18.2530574798584
    10. ',B' → logprob: -18.8780574798584

Token 102: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03969646617770195
    2. 'b' → logprob: -3.289696455001831
    3. ' ' → logprob: -6.41469669342041
    4. '<|end|>' → logprob: -11.53969669342041
    5. '<|end|>' → logprob: -13.41469669342041
    6. '    ' → logprob: -14.03969669342041
    7. '  ' → logprob: -14.28969669342041
    8. ' 
' → logprob: -14.28969669342041
    9. ' ' → logprob: -14.53969669342041
    10. ',' → logprob: -14.78969669342041

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519300878047943
    2. '=' → logprob: -1.5019301176071167
    3. ')' → logprob: -14.626930236816406
    4. ' ' → logprob: -15.376930236816406
    5. '   ' → logprob: -16.126930236816406
    6. ',' → logprob: -16.126930236816406
    7. '＝' → logprob: -17.126930236816406
    8. '=int' → logprob: -17.126930236816406
    9. ')=' → logprob: -17.376930236816406
    10. '    ' → logprob: -17.751930236816406

Token 104: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00035048185964114964
    2. 'map' → logprob: -8.000350952148438
    3. ' ' → logprob: -11.250350952148438
    4. ' ' → logprob: -14.250350952148438
    5. '	map' → logprob: -14.875350952148438
    6. ' mapa' → logprob: -15.250350952148438
    7. ' m' → logprob: -15.375350952148438
    8. ' list' → logprob: -15.750350952148438
    9. '(map' → logprob: -16.250350952148438
    10. '.map' → logprob: -16.500350952148438

Token 105: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0025024134665727615
    2. '(' → logprob: -6.00250244140625
    3. '<int' → logprob: -11.00250244140625
    4. 'int' → logprob: -13.12750244140625
    5. ' (' → logprob: -13.25250244140625
    6. '[int' → logprob: -13.50250244140625
    7. '(input' → logprob: -13.50250244140625
    8. '=int' → logprob: -13.87750244140625
    9. '(lambda' → logprob: -14.25250244140625
    10. '(
' → logprob: -14.87750244140625

Token 106: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08122304826974869
    2. ',' → logprob: -3.2062230110168457
    3. '(' → logprob: -3.4562230110168457
    4. ',input' → logprob: -5.581223011016846
    5. ' (' → logprob: -6.581223011016846
    6. ')' → logprob: -7.331223011016846
    7. ' ,' → logprob: -10.581223487854004
    8. ' input' → logprob: -10.706223487854004
    9. '(),' → logprob: -10.706223487854004
    10. ')(' → logprob: -11.331223487854004

Token 107: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0430099181830883
    2. 'input' → logprob: -3.1680099964141846
    3. '(input' → logprob: -12.293009757995605
    4. ')' → logprob: -12.918009757995605
    5. ' ' → logprob: -13.168009757995605
    6. ' )' → logprob: -14.418009757995605
    7. ',input' → logprob: -14.668009757995605
    8. '	input' → logprob: -15.668009757995605
    9. '=input' → logprob: -15.918009757995605
    10. '_input' → logprob: -16.418010711669922

Token 108: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00075769261457026
    2. 'func' → logprob: -7.375757694244385
    3. '_' → logprob: -9.125757217407227
    4. ')' → logprob: -12.375757217407227
    5. 'Func' → logprob: -12.625757217407227
    6. '```' → logprob: -13.000757217407227
    7. '().' → logprob: -13.125757217407227
    8. '._' → logprob: -13.250757217407227
    9. '_FUNC' → logprob: -13.500757217407227
    10. '.func' → logprob: -13.500757217407227

Token 109: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00282984203658998
    2. '()' → logprob: -5.8778300285339355
    3. '())' → logprob: -11.252829551696777
    4. ')' → logprob: -11.502829551696777
    5. '()
' → logprob: -14.877829551696777
    6. '()[' → logprob: -15.252829551696777
    7. ' ().' → logprob: -15.377829551696777
    8. '(' → logprob: -15.877829551696777
    9. '());' → logprob: -16.127830505371094
    10. '()))' → logprob: -16.127830505371094

Token 110: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005417120410129428
    2. 'strip' → logprob: -7.875541687011719
    3. ')' → logprob: -9.125541687011719
    4. ' split' → logprob: -10.125541687011719
    5. 'rstrip' → logprob: -11.375541687011719
    6. 'decode' → logprob: -14.500541687011719
    7. '(split' → logprob: -14.875541687011719
    8. 'read' → logprob: -16.00054168701172
    9. 'spl' → logprob: -16.37554168701172
    10. '())' → logprob: -16.62554168701172

Token 111: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0016161426901817322
    2. '()' → logprob: -6.87661600112915
    3. '()))' → logprob: -8.001616477966309
    4. ')' → logprob: -8.376616477966309
    5. '())
' → logprob: -11.251616477966309
    6. ' ())' → logprob: -13.126616477966309
    7. '))' → logprob: -13.626616477966309
    8. '())

' → logprob: -14.001616477966309
    9. '(' → logprob: -15.126616477966309
    10. '()]' → logprob: -15.501616477966309

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01276073046028614
    2. ')' → logprob: -5.512760639190674
    3. 'add' → logprob: -5.512760639190674
    4. '   ' → logprob: -5.887760639190674
    5. ')add' → logprob: -7.137760639190674
    6. ' add' → logprob: -7.762760639190674
    7. '        
' → logprob: -8.762761116027832
    8. 'fill' → logprob: -9.012761116027832
    9. '
' → logprob: -10.012761116027832
    10. '```' → logprob: -10.137761116027832

Token 113: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.0056981579400599
    2. ' add' → logprob: -5.255698204040527
    3. '   ' → logprob: -7.755698204040527
    4. '       ' → logprob: -11.005698204040527
    5. ')add' → logprob: -11.255698204040527
    6. '	add' → logprob: -12.755698204040527
    7. '
' → logprob: -14.380698204040527
    8. '.add' → logprob: -14.380698204040527
    9. '```' → logprob: -14.380698204040527
    10. ' ' → logprob: -15.130698204040527

Token 114: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0002719449403230101
    2. '_' → logprob: -8.250271797180176
    3. '_edges' → logprob: -11.750271797180176
    4. '_ed' → logprob: -13.250271797180176
    5. '_e' → logprob: -15.375271797180176
    6. '_line' → logprob: -15.625271797180176
    7. ' _' → logprob: -16.125272750854492
    8. '```' → logprob: -16.500272750854492
    9. ')_' → logprob: -17.125272750854492
    10. '_node' → logprob: -17.250272750854492

Token 115: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.029922885820269585
    2. '(' → logprob: -3.5299229621887207
    3. '(ad' → logprob: -8.779922485351562
    4. '(
' → logprob: -11.904922485351562
    5. 'adj' → logprob: -12.154922485351562
    6. '<|end|>' → logprob: -13.154922485351562
    7. '(ans' → logprob: -13.779922485351562
    8. ' adj' → logprob: -14.154922485351562
    9. '(

' → logprob: -14.529922485351562
    10. '(paren' → logprob: -15.029922485351562

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004763803444802761
    2. '(adj' → logprob: -5.504763603210449
    3. ')' → logprob: -8.00476360321045
    4. 'adj' → logprob: -8.50476360321045
    5. '(' → logprob: -9.37976360321045
    6. ' adj' → logprob: -10.25476360321045
    7. ' ,' → logprob: -10.87976360321045
    8. '```' → logprob: -13.00476360321045
    9. ',)' → logprob: -13.12976360321045
    10. '),' → logprob: -13.37976360321045

Token 117: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023246292024850845
    2. ' a' → logprob: -3.7732462882995605
    3. ')a' → logprob: -14.398246765136719
    4. '	a' → logprob: -15.273246765136719
    5. ')' → logprob: -17.52324676513672
    6. '<|end|>' → logprob: -18.89824676513672
    7. ' ' → logprob: -19.14824676513672
    8. '_a' → logprob: -19.52324676513672
    9. '#a' → logprob: -19.77324676513672
    10. '   ' → logprob: -19.89824676513672

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000960296718403697
    2. ',b' → logprob: -7.000960350036621
    3. ' ,' → logprob: -10.000960350036621
    4. 'b' → logprob: -12.625960350036621
    5. ')' → logprob: -16.625959396362305
    6. ',
' → logprob: -16.750959396362305
    7. ' b' → logprob: -17.000959396362305
    8. '‌,' → logprob: -17.875959396362305
    9. ' ' → logprob: -18.000959396362305
    10. '```' → logprob: -18.125959396362305

Token 119: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020710527896881
    2. ' b' → logprob: -2.3502070903778076
    3. ')b' → logprob: -14.975207328796387
    4. ' ' → logprob: -16.47520637512207
    5. ')' → logprob: -17.72520637512207
    6. '	b' → logprob: -18.47520637512207
    7. '<|end|>' → logprob: -18.47520637512207
    8. ' ' → logprob: -18.47520637512207
    9. '_b' → logprob: -20.22520637512207
    10. ' б' → logprob: -20.35020637512207

Token 120: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.576873758807778e-05
    2. ')
' → logprob: -9.500075340270996
    3. ' )' → logprob: -15.000075340270996
    4. '   ' → logprob: -15.250075340270996
    5. ')return' → logprob: -15.625075340270996
    6. ')

' → logprob: -17.000076293945312
    7. '`)' → logprob: -17.250076293945312
    8. '))' → logprob: -17.250076293945312
    9. ')
' → logprob: -17.250076293945312
    10. '
' → logprob: -18.500076293945312

Token 121: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022937096655368805
    2. '
' → logprob: -7.127293586730957
    3. 'd' → logprob: -7.502293586730957
    4. '```' → logprob: -7.627293586730957
    5. '<|end|>' → logprob: -8.627293586730957
    6. '\' → logprob: -9.002293586730957
    7. '#' → logprob: -10.377293586730957
    8. '    
' → logprob: -10.752293586730957
    9. '

' → logprob: -11.002293586730957
    10. '\n' → logprob: -11.252293586730957

Token 122: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12660707533359528
    2. ' bfs' → logprob: -2.6266071796417236
    3. ' dfs' → logprob: -4.2516069412231445
    4. 'main' → logprob: -4.6266069412231445
    5. ' top' → logprob: -5.0016069412231445
    6. ' solve' → logprob: -5.2516069412231445
    7. 'dfs' → logprob: -5.6266069412231445
    8. ' find' → logprob: -5.8766069412231445
    9. 'b' → logprob: -6.6266069412231445
    10. ' def' → logprob: -7.0016069412231445

Token 123: '_de' (ID: 5047)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.37887144088745117
    2. '_de' → logprob: -1.5038714408874512
    3. '_d' → logprob: -3.753871440887451
    4. '_degree' → logprob: -3.878871440887451
    5. '_short' → logprob: -4.128871440887451
    6. '_distance' → logprob: -4.628871440887451
    7. '_b' → logprob: -5.253871440887451
    8. '_depth' → logprob: -5.503871440887451
    9. '_components' → logprob: -5.628871440887451
    10. '_max' → logprob: -6.003871440887451

Token 124: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -0.6341108083724976
    2. 'gree' → logprob: -0.7591108083724976
    3. 'g' → logprob: -7.009110927581787
    4. 'pth' → logprob: -7.634110927581787
    5. 'scription' → logprob: -10.259110450744629
    6. 'f' → logprob: -11.134110450744629
    7. 'egree' → logprob: -11.509110450744629
    8. '

' → logprob: -12.134110450744629
    9. 'pendencies' → logprob: -12.134110450744629
    10. 'gress' → logprob: -12.384110450744629

Token 125: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.006741065997630358
    2. '(' → logprob: -5.006741046905518
    3. '(ad' → logprob: -11.131741523742676
    4. ' (' → logprob: -11.506741523742676
    5. '(def' → logprob: -14.756741523742676
    6. '(ans' → logprob: -15.381741523742676
    7. '(
' → logprob: -17.00674057006836
    8. 'adj' → logprob: -17.00674057006836
    9. '(acc' → logprob: -17.25674057006836
    10. '(arr' → logprob: -17.38174057006836

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003424373921006918
    2. ',' → logprob: -5.878424167633057
    3. ')' → logprob: -8.003424644470215
    4. '):
' → logprob: -8.753424644470215
    5. ' ):' → logprob: -9.128424644470215
    6. ' ' → logprob: -12.878424644470215
    7. '   ' → logprob: -13.128424644470215
    8. ':' → logprob: -13.128424644470215
    9. '):
' → logprob: -13.253424644470215
    10. ' ,' → logprob: -13.503424644470215

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09633798897266388
    2. ' return' → logprob: -2.9713380336761475
    3. 'return' → logprob: -3.3463380336761475
    4. 'degrees' → logprob: -5.721337795257568
    5. ' degrees' → logprob: -6.346337795257568
    6. '```' → logprob: -8.221338272094727
    7. 'def' → logprob: -10.346338272094727
    8. 'de' → logprob: -10.596338272094727
    9. 'degree' → logprob: -11.721338272094727
    10. 'deg' → logprob: -12.221338272094727

Token 128: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8139812350273132
    2. 'return' (adapté à ' return') → logprob: -0.8139812350273132
    3. '   ' → logprob: -2.313981294631958
    4. 'degrees' → logprob: -4.813981056213379
    5. ' degrees' → logprob: -5.063981056213379
    6. 'def' → logprob: -9.188981056213379
    7. 'degree' → logprob: -9.313981056213379
    8. 'deg' → logprob: -9.438981056213379
    9. '```' → logprob: -9.438981056213379
    10. ' ' → logprob: -10.188981056213379

Token 129: ' [' (ID: 723)
  Prédit: '[len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[len' → logprob: -0.022714106366038322
    2. '[' → logprob: -4.022714138031006
    3. ' [' → logprob: -5.522714138031006
    4. '[list' → logprob: -8.272713661193848
    5. '[i' → logprob: -8.522713661193848
    6. '[length' → logprob: -10.397713661193848
    7. '[max' → logprob: -10.772713661193848
    8. '[a' → logprob: -11.522713661193848
    9. '[num' → logprob: -11.897713661193848
    10. '[node' → logprob: -12.147713661193848

Token 130: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.860340752406046e-05
    2. ' len' → logprob: -9.7500581741333
    3. '(len' → logprob: -15.5000581741333
    4. '0' → logprob: -19.875059127807617
    5. '   ' → logprob: -19.875059127807617
    6. '	len' → logprob: -20.000059127807617
    7. '[len' → logprob: -21.625059127807617
    8. ',len' → logprob: -21.875059127807617
    9. '=len' → logprob: -22.125059127807617
    10. ' ' → logprob: -22.125059127807617

Token 131: '(A' (ID: 10706)
  Prédit: '(ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.04145825654268265
    2. '(adj' → logprob: -3.5414583683013916
    3. '(node' → logprob: -5.2914581298828125
    4. '(lst' → logprob: -5.5414581298828125
    5. '(x' → logprob: -6.7914581298828125
    6. '(nodes' → logprob: -7.6664581298828125
    7. '(edges' → logprob: -8.541458129882812
    8. '(v' → logprob: -8.541458129882812
    9. 'neighbors' → logprob: -8.666458129882812
    10. '(vertices' → logprob: -8.666458129882812

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2518772780895233
    2. 'd' → logprob: -1.6268773078918457
    3. 'dj' → logprob: -4.501877307891846
    4. 'j' → logprob: -5.251877307891846
    5. '(adj' → logprob: -6.001877307891846
    6. 'l' → logprob: -6.501877307891846
    7. 'list' → logprob: -6.876877307891846
    8. ')]' → logprob: -7.126877307891846
    9. 'r' → logprob: -7.251877307891846
    10. ')d' → logprob: -7.626877307891846

Token 133: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22007933259010315
    2. ' for' → logprob: -1.7200793027877808
    3. ')' → logprob: -4.09507942199707
    4. '(adj' → logprob: -6.59507942199707
    5. 'adj' → logprob: -7.84507942199707
    6. '()' → logprob: -9.97007942199707
    7. '	for' → logprob: -11.09507942199707
    8. ' adj' → logprob: -11.47007942199707
    9. ']' → logprob: -13.34507942199707
    10. '(' → logprob: -13.47007942199707

Token 134: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6515558958053589
    2. ' A' → logprob: -1.0265558958053589
    3. ' adj' → logprob: -2.4015560150146484
    4. 'adj' → logprob: -3.5265560150146484
    5. '(adj' → logprob: -8.026556015014648
    6. '(A' → logprob: -9.151556015014648
    7. 'Adj' → logprob: -10.151556015014648
    8. '_adj' → logprob: -10.651556015014648
    9. ' ' → logprob: -11.026556015014648
    10. '   ' → logprob: -12.151556015014648

Token 135: ' in' (ID: 306)
  Prédit: '(adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.0400540828704834
    2. 'adj' → logprob: -3.6650540828704834
    3. 'in' → logprob: -4.5400543212890625
    4. ' in' → logprob: -5.9150543212890625
    5. ' adj' → logprob: -8.915054321289062
    6. '(ad' → logprob: -9.915054321289062
    7. '(' → logprob: -10.290054321289062
    8. ' (' → logprob: -10.540054321289062
    9. '(in' → logprob: -10.915054321289062
    10. '_adj' → logprob: -10.915054321289062

Token 136: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.02340061217546463
    2. ' adj' → logprob: -3.7734005451202393
    3. '(adj' → logprob: -8.77340030670166
    4. 'ad' → logprob: -15.39840030670166
    5. '_adj' → logprob: -16.773401260375977
    6. 'aj' → logprob: -18.523401260375977
    7. '
' → logprob: -18.648401260375977
    8. 'Adj' → logprob: -19.023401260375977
    9. ' ' → logprob: -19.773401260375977
    10. 'adm' → logprob: -19.773401260375977

Token 137: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005599428550340235
    2. ')]' → logprob: -8.12555980682373
    3. '()]' → logprob: -8.37555980682373
    4. ' ]' → logprob: -11.12555980682373
    5. ']
' → logprob: -11.25055980682373
    6. ')' → logprob: -13.00055980682373
    7. '[' → logprob: -13.37555980682373
    8. '])' → logprob: -14.50055980682373
    9. ']

' → logprob: -15.00055980682373
    10. '(' → logprob: -15.87555980682373

Token 138: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39557942748069763
    2. '<|end|>' → logprob: -1.77057945728302
    3. '
' → logprob: -1.89557945728302
    4. '```' → logprob: -5.2705793380737305
    5. '<|end|>' → logprob: -8.14557933807373
    6. '

' → logprob: -8.27057933807373
    7. '\' → logprob: -9.27057933807373
    8. '#' → logprob: -9.39557933807373
    9. '[' → logprob: -9.64557933807373
    10. '  
' → logprob: -9.89557933807373

Token 139: ' collect' (ID: 7916)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.17396210134029388
    2. ' main' → logprob: -2.298962116241455
    3. 'find' → logprob: -3.423962116241455
    4. 'b' → logprob: -4.798962116241455
    5. ' find' → logprob: -5.173962116241455
    6. 'top' → logprob: -6.048962116241455
    7. 'count' → logprob: -6.173962116241455
    8. 'dfs' → logprob: -6.173962116241455
    9. 'solve' → logprob: -6.548962116241455
    10. ' bfs' → logprob: -6.798962116241455

Token 140: '_deg' (ID: 144310)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.17520871758460999
    2. '_high' → logprob: -3.425208806991577
    3. '_vertices' → logprob: -3.425208806991577
    4. '_le' → logprob: -3.925208806991577
    5. '_degree' → logprob: -4.425208568572998
    6. '_de' → logprob: -4.550208568572998
    7. '_candidates' → logprob: -4.675208568572998
    8. '_low' → logprob: -4.675208568572998
    9. '_non' → logprob: -5.175208568572998
    10. '_' → logprob: -5.550208568572998

Token 141: '4' (ID: 19)
  Prédit: 'rees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rees' → logprob: -0.040669143199920654
    2. 'ree' → logprob: -4.040668964385986
    3. '_nodes' → logprob: -5.540668964385986
    4. '_' → logprob: -5.665668964385986
    5. 're' → logprob: -5.665668964385986
    6. 's' → logprob: -6.790668964385986
    7. '_re' → logprob: -7.290668964385986
    8. 'reed' → logprob: -7.540668964385986
    9. '_sum' → logprob: -7.790668964385986
    10. 'enerate' → logprob: -7.915668964385986

Token 142: '_and' (ID: 18645)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.015536383725702763
    2. '_vertices' → logprob: -4.765536308288574
    3. 'er' → logprob: -5.515536308288574
    4. '(' → logprob: -7.515536308288574
    5. 'ert' → logprob: -7.765536308288574
    6. '_and' → logprob: -8.015536308288574
    7. '(adj' → logprob: -8.265536308288574
    8. 'ree' → logprob: -8.765536308288574
    9. '_' → logprob: -9.265536308288574
    10. '_candidates' → logprob: -9.390536308288574

Token 143: '_detect' (ID: 110060)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.6728189587593079
    2. 'remove' → logprob: -2.422818899154663
    3. 'adj' → logprob: -2.422818899154663
    4. 'count' → logprob: -2.797818899154663
    5. '4' → logprob: -3.672818899154663
    6. '_deg' → logprob: -3.797818899154663
    7. '_nodes' → logprob: -3.922818899154663
    8. 'neighbors' → logprob: -4.297819137573242
    9. 'above' → logprob: -4.422819137573242
    10. 'degree' → logprob: -4.547819137573242

Token 144: '_' (ID: 62)
  Prédit: '(adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.652473509311676
    2. '_cycle' → logprob: -1.1524734497070312
    3. '_cycles' → logprob: -1.9024734497070312
    4. '_conf' → logprob: -5.527473449707031
    5. '_nodes' → logprob: -6.152473449707031
    6. '_' → logprob: -6.402473449707031
    7. '_duplicates' → logprob: -6.902473449707031
    8. '_br' → logprob: -7.527473449707031
    9. 's' → logprob: -7.777473449707031
    10. '_loop' → logprob: -8.152473449707031

Token 145: 'odd' (ID: 18303)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.333837628364563
    2. 'triangle' → logprob: -2.2088375091552734
    3. 'cycles' → logprob: -2.8338375091552734
    4. 'conf' → logprob: -2.9588375091552734
    5. 'odd' → logprob: -4.708837509155273
    6. 'loop' → logprob: -4.958837509155273
    7. 'node' → logprob: -5.208837509155273
    8. 'adj' → logprob: -5.208837509155273
    9. 'diamond' → logprob: -5.708837509155273
    10. 'chain' → logprob: -5.958837509155273

Token 146: '(de' (ID: 20586)
  Prédit: '(adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.3163234293460846
    2. '_degree' → logprob: -1.6913233995437622
    3. '_cycles' → logprob: -3.8163235187530518
    4. '_nodes' → logprob: -4.066323280334473
    5. '_vertices' → logprob: -4.316323280334473
    6. '(de' → logprob: -4.691323280334473
    7. '_de' → logprob: -4.816323280334473
    8. '_deg' → logprob: -4.816323280334473
    9. '_cycle' → logprob: -5.441323280334473
    10. '(' → logprob: -6.066323280334473

Token 147: 'g' (ID: 70)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5835141539573669
    2. 'g' → logprob: -0.8335141539573669
    3. 'grees' → logprob: -5.333514213562012
    4. 'fg' → logprob: -6.333514213562012
    5. 'gree' → logprob: -7.958514213562012
    6. 'gf' → logprob: -8.333514213562012
    7. 'gs' → logprob: -9.583514213562012
    8. '(g' → logprob: -9.708514213562012
    9. 'q' → logprob: -10.208514213562012
    10. 'eg' → logprob: -10.458514213562012

Token 148: ',' (ID: 11)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.36257246136665344
    2. 's' → logprob: -1.862572431564331
    3. '):' → logprob: -1.987572431564331
    4. '):
' → logprob: -4.61257266998291
    5. ')' → logprob: -8.11257266998291
    6. 'ects' → logprob: -8.11257266998291
    7. '_nodes' → logprob: -8.61257266998291
    8. '):
' → logprob: -8.73757266998291
    9. 'rees' → logprob: -9.11257266998291
    10. ',' → logprob: -9.36257266998291

Token 149: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1911165416240692
    2. 'adj' → logprob: -2.0661165714263916
    3. ' N' → logprob: -3.5661165714263916
    4. 'deg' → logprob: -5.1911163330078125
    5. 'M' → logprob: -6.3161163330078125
    6. ' adj' → logprob: -6.3161163330078125
    7. ')' → logprob: -6.4411163330078125
    8. '   ' → logprob: -7.0036163330078125
    9. 'visited' → logprob: -7.1911163330078125
    10. 'n' → logprob: -7.4411163330078125

Token 150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007820852100849152
    2. '):
' → logprob: -4.882821083068848
    3. ')' → logprob: -8.632821083068848
    4. '):
' → logprob: -10.632821083068848
    5. ' ):' → logprob: -11.757821083068848
    6. ',' → logprob: -12.632821083068848
    7. ':' → logprob: -14.257821083068848
    8. '):

' → logprob: -14.632821083068848
    9. ')：' → logprob: -16.50782012939453
    10. '():' → logprob: -16.75782012939453

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009828930720686913
    2. '():
' → logprob: -5.509829044342041
    3. '():' → logprob: -6.384829044342041
    4. '    
' → logprob: -6.884829044342041
    5. ' odd' → logprob: -7.134829044342041
    6. '()' → logprob: -7.884829044342041
    7. '
' → logprob: -8.009828567504883
    8. '(' → logprob: -8.259828567504883
    9. ':
' → logprob: -8.634828567504883
    10. '```' → logprob: -9.134828567504883

Token 152: ' nodes' (ID: 15749)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06606164574623108
    2. ' deg' → logprob: -3.6910617351531982
    3. 'deg' → logprob: -3.6910617351531982
    4. ' nodes' → logprob: -5.816061496734619
    5. ' odd' → logprob: -6.066061496734619
    6. 'odd' → logprob: -6.941061496734619
    7. 'nodes' (adapté à ' nodes') → logprob: -6.941061496734619
    8. 'de' → logprob: -7.628561496734619
    9. 'def' → logprob: -7.753561496734619
    10. ' has' → logprob: -7.941061496734619

Token 153: '_deg' (ID: 144310)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2868659198284149
    2. '=' → logprob: -1.4118659496307373
    3. '_with' → logprob: -5.911865711212158
    4. '_' → logprob: -6.036865711212158
    5. 'with' → logprob: -8.411866188049316
    6. ',' → logprob: -8.911866188049316
    7. '=[]' → logprob: -9.286866188049316
    8. ' ' → logprob: -9.536866188049316
    9. '_=' → logprob: -11.161866188049316
    10. '4' → logprob: -11.161866188049316

Token 154: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1022043526172638
    2. '_' → logprob: -2.3522043228149414
    3. '=' → logprob: -6.352204322814941
    4. ' =' → logprob: -8.852204322814941
    5. '_four' → logprob: -10.227204322814941
    6. '=_' → logprob: -11.102204322814941
    7. '```' → logprob: -11.602204322814941
    8. '_=' → logprob: -11.977204322814941
    9. '_equal' → logprob: -12.102204322814941
    10. '_equals' → logprob: -12.227204322814941

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03383391350507736
    2. '=' → logprob: -3.4088339805603027
    3. '_' → logprob: -8.908833503723145
    4. '=[]' → logprob: -10.783833503723145
    5. ' ' → logprob: -11.033833503723145
    6. ',' → logprob: -11.408833503723145
    7. '4' → logprob: -13.658833503723145
    8. '_with' → logprob: -14.533833503723145
    9. ' ' → logprob: -14.783833503723145
    10. '=[]
' → logprob: -15.158833503723145

Token 156: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3875277042388916
    2. ' []' → logprob: -1.1375277042388916
    3. '[' → logprob: -8.012527465820312
    4. ' [' → logprob: -8.887527465820312
    5. '[]
' → logprob: -8.887527465820312
    6. ' []
' → logprob: -10.512527465820312
    7. '[]

' → logprob: -11.887527465820312
    8. ' ' → logprob: -12.262527465820312
    9. '[]}' → logprob: -12.637527465820312
    10. 'set' → logprob: -13.262527465820312

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07296329736709595
    2. 'odd' → logprob: -3.447963237762451
    3. 'for' → logprob: -3.697963237762451
    4. 'has' → logprob: -4.572963237762451
    5. ' for' → logprob: -6.947963237762451
    6. ' has' → logprob: -7.447963237762451
    7. 'count' → logprob: -7.572963237762451
    8. '    
' → logprob: -8.07296371459961
    9. 'found' → logprob: -8.69796371459961
    10. 'od' → logprob: -8.94796371459961

Token 158: ' found' (ID: 2491)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.7968410849571228
    2. 'has' → logprob: -1.1718411445617676
    3. 'for' → logprob: -2.0468411445617676
    4. '   ' → logprob: -3.4218411445617676
    5. 'count' → logprob: -3.9218411445617676
    6. 'found' (adapté à ' found') → logprob: -3.9218411445617676
    7. 'flag' → logprob: -4.546841144561768
    8. 'cnt' → logprob: -5.296841144561768
    9. 'is' → logprob: -5.421841144561768
    10. 'deg' → logprob: -6.046841144561768

Token 159: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003649017889983952
    2. ' =' → logprob: -8.875365257263184
    3. '=' → logprob: -9.000365257263184
    4. '_=' → logprob: -10.625365257263184
    5. '_od' → logprob: -10.875365257263184
    6. '_any' → logprob: -11.375365257263184
    7. '=_' → logprob: -11.625365257263184
    8. ' _' → logprob: -12.000365257263184
    9. '_nodes' → logprob: -12.625365257263184
    10. '_for' → logprob: -13.000365257263184

Token 160: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.03126267343759537
    2. '_' → logprob: -3.5312626361846924
    3. 'od' → logprob: -7.4062628746032715
    4. 'node' → logprob: -8.156262397766113
    5. 'degree' → logprob: -8.906262397766113
    6. 'ode' → logprob: -9.406262397766113
    7. ' odd' → logprob: -9.906262397766113
    8. 'deg' → logprob: -10.031262397766113
    9. 'cycle' → logprob: -10.781262397766113
    10. 'o' → logprob: -10.781262397766113

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2956523597240448
    2. '=' → logprob: -1.4206523895263672
    3. '_degree' → logprob: -4.545652389526367
    4. '_' → logprob: -5.670652389526367
    5. '_deg' → logprob: -9.045652389526367
    6. ' ' → logprob: -9.545652389526367
    7. '_nodes' → logprob: -10.545652389526367
    8. '_node' → logprob: -11.045652389526367
    9. '=False' → logprob: -11.170652389526367
    10. '_de' → logprob: -11.170652389526367

Token 162: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.47410455346107483
    2. ' False' → logprob: -0.9741045236587524
    3. '=False' → logprob: -10.974104881286621
    4. '0' → logprob: -12.599104881286621
    5. '(False' → logprob: -12.849104881286621
    6. '   ' → logprob: -13.474104881286621
    7. '[]' → logprob: -13.724104881286621
    8. ' ' → logprob: -14.599104881286621
    9. '_false' → logprob: -14.724104881286621
    10. '[' → logprob: -15.724104881286621

Token 163: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0005333751323632896
    2. ' for' → logprob: -8.250533103942871
    3. '<|end|>' → logprob: -8.750533103942871
    4. '   ' → logprob: -10.375533103942871
    5. 'for' → logprob: -10.375533103942871
    6. '
' → logprob: -10.625533103942871
    7. ' 
' → logprob: -12.000533103942871
    8. '  
' → logprob: -12.250533103942871
    9. '

' → logprob: -12.375533103942871
    10. '<|end|>' → logprob: -12.500533103942871

Token 164: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3806091248989105
    2. '   ' → logprob: -1.255609154701233
    3. ' for' → logprob: -3.7556090354919434
    4. 'for' → logprob: -5.005609035491943
    5. '    
' → logprob: -7.380609035491943
    6. '<|end|>' → logprob: -7.880609035491943
    7. ' 
' → logprob: -8.755609512329102
    8. '	for' → logprob: -8.880609512329102
    9. '  
' → logprob: -9.505609512329102
    10. '	
' → logprob: -9.755609512329102

Token 165: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.236495241522789
    2. '   ' → logprob: -1.9864952564239502
    3. ' for' → logprob: -2.61149525642395
    4. '
' → logprob: -12.111495018005371
    5. '	for' → logprob: -12.611495018005371
    6. '    
' → logprob: -14.486495018005371
    7. ' ' → logprob: -14.736495018005371
    8. '  ' → logprob: -15.736495018005371
    9. 'def' → logprob: -16.111495971679688
    10. ' 
' → logprob: -16.486495971679688

Token 166: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03975247964262962
    2. 'i' → logprob: -3.28975248336792
    3. ' node' → logprob: -6.53975248336792
    4. ' u' → logprob: -8.664752006530762
    5. ' v' → logprob: -10.289752006530762
    6. 'node' → logprob: -10.664752006530762
    7. 'u' → logprob: -10.914752006530762
    8. 'v' → logprob: -11.914752006530762
    9. '   ' → logprob: -12.539752006530762
    10. ' idx' → logprob: -13.164752006530762

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012713184580206871
    2. 'in' → logprob: -4.3877129554748535
    3. ' ' → logprob: -8.762713432312012
    4. 'n' → logprob: -10.887713432312012
    5. ',' → logprob: -11.012713432312012
    6. ' i' → logprob: -13.387713432312012
    7. '(' → logprob: -13.512713432312012
    8. '1' → logprob: -13.762713432312012
    9. '_' → logprob: -13.762713432312012
    10. '0' → logprob: -14.137713432312012

Token 168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759647488594055
    2. ' range' → logprob: -0.8259647488594055
    3. '(range' → logprob: -10.70096492767334
    4. ' ' → logprob: -13.70096492767334
    5. '	range' → logprob: -14.32596492767334
    6. '1' → logprob: -14.95096492767334
    7. 'ange' → logprob: -16.075963973999023
    8. '  ' → logprob: -16.325963973999023
    9. ' xrange' → logprob: -16.450963973999023
    10. '(' → logprob: -16.450963973999023

Token 169: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015920029545668513
    2. '1' → logprob: -8.75015926361084
    3. '(N' → logprob: -14.25015926361084
    4. ' (' → logprob: -16.500158309936523
    5. '   ' → logprob: -16.875158309936523
    6. ' ' → logprob: -18.250158309936523
    7. '(
' → logprob: -18.500158309936523
    8. ',' → logprob: -19.375158309936523
    9. '```' → logprob: -20.500158309936523
    10. '[' → logprob: -20.500158309936523

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.727905979962088e-05
    2. 'N' → logprob: -10.12504768371582
    3. ' ' → logprob: -12.00004768371582
    4. '2' → logprob: -14.12504768371582
    5. '   ' → logprob: -16.62504768371582
    6. '(' → logprob: -16.62504768371582
    7. ' N' → logprob: -16.87504768371582
    8. '0' → logprob: -17.50004768371582
    9. '
' → logprob: -18.31254768371582
    10. '```' → logprob: -18.68754768371582

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.049755782238208e-05
    2. ' ,' → logprob: -10.37505054473877
    3. ',N' → logprob: -10.87505054473877
    4. ',
' → logprob: -17.125049591064453
    5. '1' → logprob: -17.500049591064453
    6. ' ' → logprob: -17.500049591064453
    7. '，' → logprob: -17.625049591064453
    8. 'to' → logprob: -17.625049591064453
    9. 'N' → logprob: -17.875049591064453
    10. ',len' → logprob: -18.000049591064453

Token 172: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0031777136027812958
    2. ' N' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.878177642822266
    4. '	N' → logprob: -18.503177642822266
    5. ' ' → logprob: -19.503177642822266
    6. '```' → logprob: -20.253177642822266
    7. 'len' → logprob: -20.628177642822266
    8. 'n' → logprob: -21.878177642822266
    9. ' ' → logprob: -21.878177642822266
    10. '(N' → logprob: -22.003177642822266

Token 173: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007100477814674377
    2. ' +' → logprob: -7.2507100105285645
    3. '+
' → logprob: -16.125709533691406
    4. '＋' → logprob: -17.625709533691406
    5. '):
' → logprob: -18.500709533691406
    6. '):' → logprob: -18.750709533691406
    7. '1' → logprob: -18.750709533691406
    8. ')' → logprob: -19.500709533691406
    9. '()+' → logprob: -19.625709533691406
    10. '+)' → logprob: -20.125709533691406

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -14.750001907348633
    4. '   ' → logprob: -16.000001907348633
    5. ')' → logprob: -16.375001907348633
    6. '):
' → logprob: -16.750001907348633
    7. '
' → logprob: -17.750001907348633
    8. '``' → logprob: -18.375001907348633
    9. '2' → logprob: -19.500001907348633
    10. '+' → logprob: -19.625001907348633

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013818973675370216
    2. '):
' → logprob: -4.763818740844727
    3. ':' → logprob: -5.263818740844727
    4. ' ):' → logprob: -11.763818740844727
    5. ')' → logprob: -12.513818740844727
    6. '   ' → logprob: -13.888818740844727
    7. ':
' → logprob: -14.013818740844727
    8. ',' → logprob: -14.138818740844727
    9. '):
' → logprob: -14.763818740844727
    10. '():' → logprob: -15.138818740844727

Token 176: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5908938646316528
    2. '       ' → logprob: -1.0908938646316528
    3. '<|end|>' → logprob: -2.3408937454223633
    4. '   ' → logprob: -5.840893745422363
    5. '<|end|>' → logprob: -5.965893745422363
    6. ':
' → logprob: -5.965893745422363
    7. '
' → logprob: -6.590893745422363
    8. ' ' → logprob: -6.590893745422363
    9. '        
' → logprob: -7.840893745422363
    10. ' if' → logprob: -7.840893745422363

Token 177: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11955767124891281
    2. '       ' → logprob: -2.6195576190948486
    3. 'if' (adapté à ' if') → logprob: -3.2445576190948486
    4. 'd' → logprob: -8.11955738067627
    5. ' d' → logprob: -8.49455738067627
    6. ' deg' → logprob: -8.86955738067627
    7. '   ' → logprob: -8.99455738067627
    8. 'deg' → logprob: -10.11955738067627
    9. 'degree' → logprob: -11.74455738067627
    10. ' ' → logprob: -11.74455738067627

Token 178: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.47422221302986145
    2. ' deg' → logprob: -0.9742221832275391
    3. '   ' → logprob: -8.974222183227539
    4. '       ' → logprob: -11.974222183227539
    5. '	de' → logprob: -12.724222183227539
    6. ' ' → logprob: -13.349222183227539
    7. 'len' → logprob: -13.349222183227539
    8. '(de' → logprob: -13.724222183227539
    9. 'de' → logprob: -14.224222183227539
    10. '           ' → logprob: -14.349222183227539

Token 179: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.1093578804284334e-05
    2. '[' → logprob: -10.000051498413086
    3. ' [' → logprob: -12.750051498413086
    4. '```' → logprob: -13.750051498413086
    5. '[I' → logprob: -14.625051498413086
    6. '[
' → logprob: -15.500051498413086
    7. 'i' → logprob: -15.750051498413086
    8. '\[' → logprob: -15.750051498413086
    9. '
' → logprob: -16.500051498413086
    10. '4' → logprob: -16.500051498413086

Token 180: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6353721022605896
    2. '==' → logprob: -0.7603721022605896
    3. ')' → logprob: -6.635372161865234
    4. ']' → logprob: -7.260372161865234
    5. ']==' → logprob: -8.260372161865234
    6. '%' → logprob: -8.510372161865234
    7. '>' → logprob: -9.635372161865234
    8. ' >=' → logprob: -9.885372161865234
    9. '>=' → logprob: -9.885372161865234
    10. ')==' → logprob: -10.010372161865234

Token 181: ' %' (ID: 1851)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5783236026763916
    2. ' ==' → logprob: -0.9533236026763916
    3. '%' → logprob: -3.0783236026763916
    4. ' %' → logprob: -5.7033233642578125
    5. '>' → logprob: -6.4533233642578125
    6. '>=' → logprob: -6.7033233642578125
    7. ' >=' → logprob: -6.9533233642578125
    8. '4' → logprob: -8.578323364257812
    9. '=' → logprob: -9.328323364257812
    10. ' >' → logprob: -9.578323364257812

Token 182: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010020548506872728
    2. '4' → logprob: -9.750100135803223
    3. ' ' → logprob: -10.125100135803223
    4. '```' → logprob: -14.500100135803223
    5. '==' → logprob: -15.000100135803223
    6. '!' → logprob: -16.12510108947754
    7. '!=' → logprob: -16.75010108947754
    8. '22' → logprob: -16.81260108947754
    9. '20' → logprob: -16.81260108947754
    10. '۲' → logprob: -16.93760108947754

Token 183: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5094070477061905e-05
    2. '4' → logprob: -11.500015258789062
    3. ' ' → logprob: -12.625015258789062
    4. '```' → logprob: -14.125015258789062
    5. '
' → logprob: -15.375015258789062
    6. '3' → logprob: -15.937515258789062
    7. '1' → logprob: -16.000015258789062
    8. '   ' → logprob: -16.437515258789062
    9. '==' → logprob: -16.812515258789062
    10. '!' → logprob: -17.000015258789062

Token 184: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.796413242816925
    2. '!=' → logprob: -0.921413242816925
    3. ' !=' → logprob: -2.1714131832122803
    4. ' ==' → logprob: -3.2964131832122803
    5. ':' → logprob: -10.54641342163086
    6. '=' → logprob: -11.17141342163086
    7. '1' → logprob: -11.79641342163086
    8. '>' → logprob: -12.54641342163086
    9. '!' → logprob: -12.67141342163086
    10. '()!=' → logprob: -12.92141342163086

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000616889214143157
    2. ' ' → logprob: -7.500617027282715
    3. '0' → logprob: -9.750617027282715
    4. '4' → logprob: -12.375617027282715
    5. '
' → logprob: -15.000617027282715
    6. '```' → logprob: -15.375617027282715
    7. '01' → logprob: -15.813117027282715
    8. '3' → logprob: -16.3131160736084
    9. '!=' → logprob: -16.4381160736084
    10. '   ' → logprob: -16.6256160736084

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.93448489275761e-05
    2. '0' → logprob: -9.500079154968262
    3. ' ' → logprob: -13.375079154968262
    4. '4' → logprob: -14.125079154968262
    5. '
' → logprob: -14.375079154968262
    6. '```' → logprob: -14.937579154968262
    7. '

' → logprob: -15.562579154968262
    8. 'odd' → logprob: -16.500080108642578
    9. '01' → logprob: -16.562580108642578
    10. '3' → logprob: -16.875080108642578

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02981668710708618
    2. ':
' → logprob: -3.5298166275024414
    3. '):' → logprob: -10.154816627502441
    4. ':
' → logprob: -11.779816627502441
    5. '):
' → logprob: -12.029816627502441
    6. ':return' → logprob: -12.154816627502441
    7. ')' → logprob: -12.904816627502441
    8. ' :' → logprob: -13.029816627502441
    9. '           ' → logprob: -13.904816627502441
    10. ' and' → logprob: -14.404816627502441

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03647170215845108
    2. ':
' → logprob: -4.286471843719482
    3. ':' → logprob: -4.786471843719482
    4. ' found' → logprob: -5.161471843719482
    5. '
' → logprob: -5.286471843719482
    6. '       ' → logprob: -6.786471843719482
    7. 'found' → logprob: -7.036471843719482
    8. '(found' → logprob: -7.786471843719482
    9. '):
' → logprob: -9.536471366882324
    10. '	found' → logprob: -9.786471366882324

Token 189: ' return' (ID: 622)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.062596395611763
    2. ' found' → logprob: -2.812596321105957
    3. '           ' → logprob: -7.437596321105957
    4. '	found' → logprob: -11.062596321105957
    5. '       ' → logprob: -11.687596321105957
    6. '   ' → logprob: -12.187596321105957
    7. 'return' (adapté à ' return') → logprob: -12.312596321105957
    8. '
' → logprob: -12.812596321105957
    9. '               ' → logprob: -13.687596321105957
    10. '(found' → logprob: -13.812596321105957

Token 190: ' '' (ID: 461)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.017146678641438484
    2. ' True' → logprob: -4.142146587371826
    3. 'None' → logprob: -7.267146587371826
    4. 'False' → logprob: -8.767147064208984
    5. 'i' → logprob: -9.267147064208984
    6. '(True' → logprob: -9.392147064208984
    7. '[],' → logprob: -10.767147064208984
    8. ' None' → logprob: -11.017147064208984
    9. '-' → logprob: -11.767147064208984
    10. ' i' → logprob: -12.142147064208984

Token 191: 'odd' (ID: 18303)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14204786717891693
    2. 'None' → logprob: -2.767047882080078
    3. '"' → logprob: -4.017047882080078
    4. 'False' → logprob: -4.267047882080078
    5. ''' → logprob: -4.767047882080078
    6. 'True' → logprob: -4.892047882080078
    7. 'im' → logprob: -5.392047882080078
    8. ''-' → logprob: -5.892047882080078
    9. '"No' → logprob: -6.267047882080078
    10. 'No' → logprob: -6.642047882080078

Token 192: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01885220967233181
    2. '',' → logprob: -4.143852233886719
    3. ''
' → logprob: -7.643852233886719
    4. ',' → logprob: -7.893852233886719
    5. '_' → logprob: -8.018852233886719
    6. '\n' → logprob: -8.268852233886719
    7. ')' → logprob: -8.518852233886719
    8. '_nodes' → logprob: -8.768852233886719
    9. ','' → logprob: -9.018852233886719
    10. ')'' → logprob: -9.268852233886719

Token 193: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3097764551639557
    2. 'nodes' → logprob: -2.059776544570923
    3. '[]' → logprob: -2.684776544570923
    4. 'True' → logprob: -3.684776544570923
    5. ' None' → logprob: -3.934776544570923
    6. 'False' → logprob: -4.809776306152344
    7. ' nodes' → logprob: -5.434776306152344
    8. '[]
' → logprob: -5.809776306152344
    9. '<|end|>' → logprob: -5.809776306152344
    10. '0' → logprob: -6.684776306152344

Token 194: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059194259345531464
    2. '
' → logprob: -3.684194326400757
    3. '<|end|>' → logprob: -3.809194326400757
    4. ',' → logprob: -5.434194087982178
    5. '        
' → logprob: -5.809194087982178
    6. '    ' → logprob: -6.809194087982178
    7. '   ' → logprob: -7.434194087982178
    8. '<|end|>' → logprob: -8.684194564819336
    9. ' ' → logprob: -9.059194564819336
    10. '    
' → logprob: -9.059194564819336

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013730073347687721
    2. '
' → logprob: -4.513730049133301
    3. '<|end|>' → logprob: -6.763730049133301
    4. '        
' → logprob: -7.138730049133301
    5. '   ' → logprob: -8.6387300491333
    6. ',' → logprob: -8.8887300491333
    7. '    ' → logprob: -9.6387300491333
    8. '	' → logprob: -10.1387300491333
    9. '  
' → logprob: -10.3887300491333
    10. '        ' → logprob: -10.5137300491333

Token 196: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15947027504444122
    2. 'if' → logprob: -2.034470319747925
    3. 'elif' (adapté à ' elif') → logprob: -4.659470081329346
    4. ' if' → logprob: -5.159470081329346
    5. '   ' → logprob: -6.659470081329346
    6. '<|end|>' → logprob: -9.909470558166504
    7. ' elif' → logprob: -10.159470558166504
    8. '     ' → logprob: -11.784470558166504
    9. '	if' → logprob: -11.784470558166504
    10. '    ' → logprob: -11.784470558166504

Token 197: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.10020699352025986
    2. ' deg' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.600207328796387
    4. ' ' → logprob: -16.97520637512207
    5. '       ' → logprob: -17.10020637512207
    6. '           ' → logprob: -17.60020637512207
    7. ' ' → logprob: -18.10020637512207
    8. 'len' → logprob: -18.22520637512207
    9. '_deg' → logprob: -18.85020637512207
    10. '	de' → logprob: -19.10020637512207

Token 198: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011752246646210551
    2. '[' → logprob: -6.751175403594971
    3. ' [' → logprob: -12.376174926757812
    4. '[I' → logprob: -15.376174926757812
    5. '```' → logprob: -15.876174926757812
    6. '   ' → logprob: -16.626174926757812
    7. '[
' → logprob: -17.001174926757812
    8. '[int' → logprob: -17.251174926757812
    9. 'i' → logprob: -17.501174926757812
    10. '4' → logprob: -17.626174926757812

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02281199023127556
    2. ']==' → logprob: -4.1478118896484375
    3. ' ==' → logprob: -5.7728118896484375
    4. '==' → logprob: -6.1478118896484375
    5. ' ]' → logprob: -7.2728118896484375
    6. '%' → logprob: -7.6478118896484375
    7. ')' → logprob: -9.147811889648438
    8. ']%' → logprob: -9.522811889648438
    9. '[]' → logprob: -10.022811889648438
    10. '[i' → logprob: -10.647811889648438

Token 200: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18258288502693176
    2. '==' → logprob: -1.8075828552246094
    3. '%' → logprob: -6.432582855224609
    4. ' %' → logprob: -7.057582855224609
    5. ' ' → logprob: -8.80758285522461
    6. ' >=' → logprob: -9.18258285522461
    7. '   ' → logprob: -10.80758285522461
    8. '[' → logprob: -10.80758285522461
    9. '>=' → logprob: -10.80758285522461
    10. '>' → logprob: -11.55758285522461

Token 201: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0013269031187519431
    2. ' ' → logprob: -6.626327037811279
    3. '۴' → logprob: -15.626326560974121
    4. '```' → logprob: -15.813826560974121
    5. '４' → logprob: -16.251327514648438
    6. '٤' → logprob: -16.251327514648438
    7. '   ' → logprob: -16.501327514648438
    8. '' → logprob: -16.626327514648438
    9. '
' → logprob: -17.063827514648438
    10. ' ' → logprob: -17.063827514648438

Token 202: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.37501335144043
    3. '۴' → logprob: -14.75001335144043
    4. '४' → logprob: -15.37501335144043
    5. '٤' → logprob: -15.62501335144043
    6. '```' → logprob: -15.62501335144043
    7. '４' → logprob: -15.75001335144043
    8. '৪' → logprob: -15.81251335144043
    9. '' → logprob: -15.87501335144043
    10. '
' → logprob: -17.93751335144043

Token 203: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004128030501306057
    2. ':
' → logprob: -5.5041279792785645
    3. '       ' → logprob: -10.504128456115723
    4. ',' → logprob: -11.504128456115723
    5. '):' → logprob: -12.629128456115723
    6. ' and' → logprob: -12.879128456115723
    7. ' :' → logprob: -13.004128456115723
    8. '   ' → logprob: -14.004128456115723
    9. ':
' → logprob: -14.254128456115723
    10. 'and' → logprob: -14.504128456115723

Token 204: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015576524659991264
    2. '           ' → logprob: -5.390576362609863
    3. ':
' → logprob: -5.515576362609863
    4. ':' → logprob: -6.140576362609863
    5. ' nodes' → logprob: -6.515576362609863
    6. ',' → logprob: -6.890576362609863
    7. '(nodes' → logprob: -7.015576362609863
    8. 'nodes' → logprob: -7.140576362609863
    9. '	nodes' → logprob: -8.265576362609863
    10. '.nodes' → logprob: -9.765576362609863

Token 205: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.3147733807563782
    2. ' nodes' → logprob: -1.3147733211517334
    3. '               ' → logprob: -7.3147735595703125
    4. '	nodes' → logprob: -7.9397735595703125
    5. '.nodes' → logprob: -8.689773559570312
    6. '           ' → logprob: -8.814773559570312
    7. '(nodes' → logprob: -9.439773559570312
    8. '       ' → logprob: -10.314773559570312
    9. '_nodes' → logprob: -10.689773559570312
    10. '
' → logprob: -10.689773559570312

Token 206: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.0005588700296357274
    2. '.append' → logprob: -7.500558853149414
    3. '_' → logprob: -13.625558853149414
    4. 'deg' → logprob: -13.875558853149414
    5. '._' → logprob: -14.250558853149414
    6. '_de' → logprob: -14.250558853149414
    7. '_d' → logprob: -14.500558853149414
    8. '4' → logprob: -14.750558853149414
    9. '.' → logprob: -15.125558853149414
    10. '_.' → logprob: -15.750558853149414

Token 207: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.4849443838757e-06
    2. '.append' → logprob: -13.250004768371582
    3. ' ' → logprob: -14.000004768371582
    4. 'append' → logprob: -14.375004768371582
    5. '```' → logprob: -14.500004768371582
    6. '[' → logprob: -14.750004768371582
    7. '   ' → logprob: -15.375004768371582
    8. '.' → logprob: -17.000003814697266
    9. 'app' → logprob: -17.375003814697266
    10. '
' → logprob: -18.000003814697266

Token 208: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007135047344490886
    2. '.' → logprob: -7.250713348388672
    3. '.app' → logprob: -13.375713348388672
    4. ' .' → logprob: -14.000713348388672
    5. '.add' → logprob: -14.125713348388672
    6. '.Append' → logprob: -16.125713348388672
    7. '.ap' → logprob: -16.250713348388672
    8. '.push' → logprob: -16.375713348388672
    9. 'append' → logprob: -16.500713348388672
    10. '.py' → logprob: -17.625713348388672

Token 209: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.625
    3. 'i' → logprob: -16.75
    4. '(
' → logprob: -20.75
    5. ' (' → logprob: -21.5
    6. '((' → logprob: -22.875
    7. ' i' → logprob: -23.625
    8. '(I' → logprob: -23.625
    9. '[i' → logprob: -24.625
    10. '(ii' → logprob: -25.125

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.792751032160595e-05
    2. ')
' → logprob: -9.50008773803711
    3. ')return' → logprob: -12.12508773803711
    4. '<|end|>' → logprob: -12.87508773803711
    5. ' )' → logprob: -13.12508773803711
    6. '   ' → logprob: -13.62508773803711
    7. '())' → logprob: -14.25008773803711
    8. '       ' → logprob: -15.25008773803711
    9. ']' → logprob: -16.12508773803711
    10. '),' → logprob: -16.25008773803711

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010310318320989609
    2. '
' → logprob: -5.385310173034668
    3. 'return' → logprob: -5.510310173034668
    4. '       ' → logprob: -7.010310173034668
    5. ' return' → logprob: -7.385310173034668
    6. '	return' → logprob: -10.260310173034668
    7. '    
' → logprob: -10.885310173034668
    8. '```' → logprob: -11.635310173034668
    9. ',' → logprob: -11.760310173034668
    10. '<|end|>' → logprob: -11.885310173034668

Token 212: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7640219926834106
    2. 'return' (adapté à ' return') → logprob: -1.0140219926834106
    3. ' return' → logprob: -1.7640219926834106
    4. 'else' → logprob: -10.764021873474121
    5. '	return' → logprob: -10.889021873474121
    6. ' ' → logprob: -10.889021873474121
    7. '
' → logprob: -11.639021873474121
    8. '       ' → logprob: -11.764021873474121
    9. ' else' → logprob: -11.889021873474121
    10. ' if' → logprob: -12.139021873474121

Token 213: ' '' (ID: 461)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.007630754727870226
    2. ' nodes' → logprob: -5.007630825042725
    3. '(nodes' → logprob: -7.257630825042725
    4. 'None' → logprob: -8.632630348205566
    5. ' None' → logprob: -11.507630348205566
    6. '('' → logprob: -11.632630348205566
    7. ''' → logprob: -12.507630348205566
    8. '(' → logprob: -12.882630348205566
    9. ''n' → logprob: -13.257630348205566
    10. ' (' → logprob: -13.507630348205566

Token 214: 'ok' (ID: 525)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.1850677877664566
    2. 'ok' → logprob: -2.560067892074585
    3. 'normal' → logprob: -2.810067892074585
    4. ''' → logprob: -4.435067653656006
    5. ''ok' → logprob: -4.810067653656006
    6. 'none' → logprob: -4.935067653656006
    7. 'None' → logprob: -6.185067653656006
    8. 'even' → logprob: -7.310067653656006
    9. '(nodes' → logprob: -7.935067653656006
    10. ''n' → logprob: -8.435068130493164

Token 215: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -13.500001907348633
    3. ',
' → logprob: -16.000001907348633
    4. ',node' → logprob: -16.000001907348633
    5. '‌,' → logprob: -16.125001907348633
    6. ',None' → logprob: -16.500001907348633
    7. 'nodes' → logprob: -16.750001907348633
    8. '<|end|>' → logprob: -16.750001907348633
    9. '(nodes' → logprob: -17.125001907348633
    10. ',n' → logprob: -17.250001907348633

Token 216: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.005234002135694027
    2. ' nodes' → logprob: -5.2552337646484375
    3. '(nodes' → logprob: -15.630233764648438
    4. 'node' → logprob: -17.130233764648438
    5. '	nodes' → logprob: -17.505233764648438
    6. 'nod' → logprob: -18.255233764648438
    7. '.nodes' → logprob: -19.880233764648438
    8. '_nodes' → logprob: -20.380233764648438
    9. ' ' → logprob: -20.505233764648438
    10. '`' → logprob: -20.755233764648438

Token 217: '_deg' (ID: 144310)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007846517488360405
    2. '_deg' → logprob: -4.882846355438232
    3. 'odes' → logprob: -8.88284683227539
    4. 'deg' → logprob: -10.38284683227539
    5. '_s' → logprob: -10.50784683227539
    6. '_nodes' → logprob: -11.38284683227539
    7. 'es' → logprob: -12.00784683227539
    8. '_de' → logprob: -12.13284683227539
    9. '_' → logprob: -12.50784683227539
    10. ' s' → logprob: -12.63284683227539

Token 218: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -14.250001907348633
    3. 'nodes' → logprob: -14.750001907348633
    4. ' ' → logprob: -15.625001907348633
    5. '```' → logprob: -15.750001907348633
    6. '   ' → logprob: -16.000001907348633
    7. 'i' → logprob: -16.125001907348633
    8. '<|end|>' → logprob: -16.625001907348633
    9. '' → logprob: -17.000001907348633
    10. '_nodes' → logprob: -17.125001907348633

Token 219: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030639570206403732
    2. '<|end|>' → logprob: -3.7806396484375
    3. '
' → logprob: -5.2806396484375
    4. '```' → logprob: -6.7806396484375
    5. '

' → logprob: -7.0306396484375
    6. '<|end|>' → logprob: -9.0306396484375
    7. '\' → logprob: -10.4056396484375
    8. '\n' → logprob: -11.1556396484375
    9. '#' → logprob: -11.4056396484375
    10. '.' → logprob: -11.9056396484375

Token 220: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.1557283111615106e-05
    2. '```' → logprob: -10.375041961669922
    3. '<|end|>' → logprob: -12.125041961669922
    4. '
' → logprob: -12.750041961669922
    5. '\' → logprob: -14.625041961669922
    6. '#' → logprob: -14.625041961669922
    7. 'import' → logprob: -15.375041961669922
    8. '``' → logprob: -16.000041961669922
    9. '<|end|>' → logprob: -16.000041961669922
    10. ':def' → logprob: -16.375041961669922

Token 221: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5238267183303833
    2. ' solve' → logprob: -1.8988267183303833
    3. ' find' → logprob: -2.5238265991210938
    4. ' check' → logprob: -3.2738265991210938
    5. 'main' → logprob: -3.2738265991210938
    6. 'solve' → logprob: -3.6488265991210938
    7. ' is' → logprob: -4.023826599121094
    8. ' process' → logprob: -4.273826599121094
    9. ' dfs' → logprob: -4.523826599121094
    10. 'dfs' → logprob: -5.398826599121094

Token 222: '_deg' (ID: 144310)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.169791340827942
    2. '_degree' → logprob: -1.669791340827942
    3. '_' → logprob: -2.6697912216186523
    4. '_de' → logprob: -3.1697912216186523
    5. '_four' → logprob: -3.1697912216186523
    6. '_special' → logprob: -3.4197912216186523
    7. '_cycle' → logprob: -3.4197912216186523
    8. '_condition' → logprob: -3.5447912216186523
    9. '_structure' → logprob: -3.6697912216186523
    10. '_conditions' → logprob: -3.9197912216186523

Token 223: '6' (ID: 21)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0004966750275343657
    2. '_' → logprob: -7.875496864318848
    3. '_four' → logprob: -9.375496864318848
    4. '```' → logprob: -11.500496864318848
    5. '_nodes' → logprob: -11.750496864318848
    6. 'four' → logprob: -13.375496864318848
    7. 's' → logprob: -13.625496864318848
    8. 'def' → logprob: -14.000496864318848
    9. '[' → logprob: -14.125496864318848
    10. 'nodes' → logprob: -14.625496864318848

Token 224: '(de' (ID: 20586)
  Prédit: '_and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.27836382389068604
    2. '_(' → logprob: -2.2783637046813965
    3. '_or' → logprob: -3.1533637046813965
    4. '(nodes' → logprob: -3.1533637046813965
    5. '(' → logprob: -4.0283637046813965
    6. '_' → logprob: -4.0283637046813965
    7. '_nodes' → logprob: -4.5283637046813965
    8. '(adj' → logprob: -5.6533637046813965
    9. '(_' → logprob: -7.0283637046813965
    10. 'and' → logprob: -7.0283637046813965

Token 225: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.008263377472758293
    2. 'f' → logprob: -4.88326358795166
    3. ' g' → logprob: -8.13326358795166
    4. '(g' → logprob: -9.00826358795166
    5. 'q' → logprob: -10.13326358795166
    6. 'G' → logprob: -10.38326358795166
    7. 'г' → logprob: -10.69576358795166
    8. '[g' → logprob: -11.07076358795166
    9. '_g' → logprob: -11.19576358795166
    10. '	g' → logprob: -11.32076358795166

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5716286301612854
    2. '):' → logprob: -0.9466286301612854
    3. '):
' → logprob: -3.0716285705566406
    4. ')' → logprob: -7.571628570556641
    5. '):
' → logprob: -8.32162857055664
    6. ' ,' → logprob: -9.44662857055664
    7. '):

' → logprob: -10.44662857055664
    8. ' ):' → logprob: -10.44662857055664
    9. ',
' → logprob: -10.82162857055664
    10. ',de' → logprob: -11.07162857055664

Token 227: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007906838320195675
    2. ' N' → logprob: -4.882906913757324
    3. 'nodes' → logprob: -8.507906913757324
    4. ' nodes' → logprob: -10.257906913757324
    5. ')' → logprob: -11.007906913757324
    6. '):
' → logprob: -11.882906913757324
    7. 'n' → logprob: -12.007906913757324
    8. 'deg' → logprob: -12.007906913757324
    9. ' ' → logprob: -12.507906913757324
    10. '   ' → logprob: -13.007906913757324

Token 228: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007626149337738752
    2. '):
' → logprob: -4.882626056671143
    3. '):
' → logprob: -11.3826265335083
    4. ')' → logprob: -11.8826265335083
    5. ':' → logprob: -13.7576265335083
    6. ' ):' → logprob: -14.8826265335083
    7. '):

' → logprob: -15.8826265335083
    8. '   ' → logprob: -16.257625579833984
    9. ',' → logprob: -17.507625579833984
    10. '():' → logprob: -18.507625579833984

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07526751607656479
    2. 'for' → logprob: -2.8252675533294678
    3. 'count' → logprob: -4.700267314910889
    4. 'def' → logprob: -5.575267314910889
    5. ' for' → logprob: -8.825267791748047
    6. '
' → logprob: -10.325267791748047
    7. ' count' → logprob: -10.325267791748047
    8. 'cnt' → logprob: -10.325267791748047
    9. 'nodes' → logprob: -10.450267791748047
    10. '```' → logprob: -10.700267791748047

Token 230: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4378253221511841
    2. 'count' → logprob: -1.187825322151184
    3. '   ' → logprob: -3.3128252029418945
    4. 'cnt' → logprob: -4.8128252029418945
    5. 'def' → logprob: -6.1878252029418945
    6. 'return' → logprob: -6.5628252029418945
    7. ' for' → logprob: -7.4378252029418945
    8. 'nodes' → logprob: -7.5628252029418945
    9. ' count' → logprob: -8.562825202941895
    10. 'max' → logprob: -8.937825202941895

Token 231: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4740821421146393
    2. 'i' → logprob: -0.9740821123123169
    3. '   ' → logprob: -12.599081993103027
    4. ' ' → logprob: -14.224081993103027
    5. '	i' → logprob: -14.224081993103027
    6. ' ' → logprob: -15.474081993103027
    7. ' node' → logprob: -16.724082946777344
    8. '_i' → logprob: -17.099082946777344
    9. '```' → logprob: -17.599082946777344
    10. 'node' → logprob: -17.724082946777344

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016184048727154732
    2. 'in' → logprob: -4.141183853149414
    3. '(' → logprob: -9.016183853149414
    4. ' ' → logprob: -11.516183853149414
    5. ',' → logprob: -12.391183853149414
    6. 'n' → logprob: -12.641183853149414
    7. '```' → logprob: -12.766183853149414
    8. '1' → logprob: -13.391183853149414
    9. 'i' → logprob: -13.641183853149414
    10. '   ' → logprob: -13.766183853149414

Token 233: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889022678136826
    2. ' range' → logprob: -2.578890323638916
    3. '(range' → logprob: -14.828889846801758
    4. '(' → logprob: -16.828889846801758
    5. ' ' → logprob: -16.953889846801758
    6. '1' → logprob: -17.578889846801758
    7. '   ' → logprob: -18.203889846801758
    8. '	range' → logprob: -18.578889846801758
    9. '  ' → logprob: -18.953889846801758
    10. '
' → logprob: -19.703889846801758

Token 234: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.759734732331708e-05
    2. '1' → logprob: -11.125017166137695
    3. ' (' → logprob: -13.125017166137695
    4. ',' → logprob: -14.750017166137695
    5. '   ' → logprob: -14.750017166137695
    6. 'def' → logprob: -17.500017166137695
    7. '	' → logprob: -18.000017166137695
    8. ' ' → logprob: -18.875017166137695
    9. ' ,' → logprob: -19.125017166137695
    10. '(
' → logprob: -19.750017166137695

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.641841820150148e-05
    2. ' ' → logprob: -10.62502670288086
    3. '   ' → logprob: -13.25002670288086
    4. 'N' → logprob: -15.87502670288086
    5. '0' → logprob: -16.62502670288086
    6. ',' → logprob: -17.50002670288086
    7. 'def' → logprob: -17.75002670288086
    8. '(' → logprob: -17.81252670288086
    9. '2' → logprob: -17.87502670288086
    10. '
' → logprob: -17.93752670288086

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004550099838525057
    2. '1' → logprob: -5.504549980163574
    3. ' ,' → logprob: -8.254549980163574
    4. ' ' → logprob: -9.129549980163574
    5. '+' → logprob: -10.129549980163574
    6. 'N' → logprob: -10.629549980163574
    7. ',N' → logprob: -10.879549980163574
    8. '(' → logprob: -12.379549980163574
    9. '   ' → logprob: -12.629549980163574
    10. '(N' → logprob: -12.754549980163574

Token 237: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0297523383051157
    2. ' N' → logprob: -3.529752254486084
    3. '   ' → logprob: -13.654752731323242
    4. ' ' → logprob: -14.904752731323242
    5. '	N' → logprob: -16.529752731323242
    6. ' ' → logprob: -17.154752731323242
    7. '(N' → logprob: -17.279752731323242
    8. ',' → logprob: -17.279752731323242
    9. 'len' → logprob: -17.779752731323242
    10. '```' → logprob: -17.779752731323242

Token 238: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.2020991056924686e-05
    2. ' +' → logprob: -10.375032424926758
    3. '+
' → logprob: -14.750032424926758
    4. '):
' → logprob: -15.625032424926758
    5. '):' → logprob: -16.750032424926758
    6. '()+' → logprob: -17.250032424926758
    7. '   ' → logprob: -17.375032424926758
    8. '1' → logprob: -17.625032424926758
    9. '```' → logprob: -17.875032424926758
    10. '[' → logprob: -18.750032424926758

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10449041426181793
    2. '+' → logprob: -2.6044905185699463
    3. 'N' → logprob: -3.9794905185699463
    4. 'i' → logprob: -5.354490280151367
    5. '(N' → logprob: -6.854490280151367
    6. ' ' → logprob: -8.479490280151367
    7. '   ' → logprob: -8.479490280151367
    8. '```' → logprob: -9.104490280151367
    9. ')' → logprob: -9.479490280151367
    10. '(' → logprob: -9.729490280151367

Token 240: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.313334196805954
    2. '):' → logprob: -1.3133342266082764
    3. ':' → logprob: -10.188334465026855
    4. '):
' → logprob: -10.938334465026855
    5. '   ' → logprob: -11.313334465026855
    6. ':
' → logprob: -13.063334465026855
    7. ' ):
' → logprob: -14.313334465026855
    8. '):

' → logprob: -14.563334465026855
    9. '():
' → logprob: -14.563334465026855
    10. ')' → logprob: -15.188334465026855

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04084951430559158
    2. '   ' → logprob: -3.290849447250366
    3. ' if' → logprob: -6.165849685668945
    4. 'if' → logprob: -7.915849685668945
    5. '	   ' → logprob: -9.415849685668945
    6. '<|end|>' → logprob: -9.790849685668945
    7. ',' → logprob: -10.040849685668945
    8. '	' → logprob: -10.165849685668945
    9. ':' → logprob: -10.540849685668945
    10. '	if' → logprob: -11.165849685668945

Token 242: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2247142493724823
    2. '   ' → logprob: -2.2247142791748047
    3. ' if' → logprob: -2.5997142791748047
    4. '       ' → logprob: -3.9747142791748047
    5. '	if' → logprob: -10.099714279174805
    6. ' ' → logprob: -10.599714279174805
    7. '    ' → logprob: -12.599714279174805
    8. '	   ' → logprob: -12.849714279174805
    9. '  ' → logprob: -13.224714279174805
    10. '	' → logprob: -13.724714279174805

Token 243: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.31326377391815186
    2. ' deg' → logprob: -1.3132637739181519
    3. '   ' → logprob: -13.813263893127441
    4. ' ' → logprob: -14.938263893127441
    5. '	de' → logprob: -15.688263893127441
    6. 'degree' → logprob: -15.938263893127441
    7. 'de' → logprob: -16.188262939453125
    8. '  ' → logprob: -17.063262939453125
    9. '_deg' → logprob: -17.313262939453125
    10. 'dep' → logprob: -17.688262939453125

Token 244: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.76759916334413e-05
    2. '[' → logprob: -9.500077247619629
    3. ' [' → logprob: -14.000077247619629
    4. 'i' → logprob: -14.125077247619629
    5. '```' → logprob: -14.375077247619629
    6. '[I' → logprob: -15.750077247619629
    7. '[
' → logprob: -16.250078201293945
    8. '
' → logprob: -16.375078201293945
    9. '[int' → logprob: -16.500078201293945
    10. '\[' → logprob: -17.000078201293945

Token 245: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026955097913742065
    2. '>' → logprob: -4.2769551277160645
    3. ']>=' → logprob: -5.0269551277160645
    4. '>=' → logprob: -6.2769551277160645
    5. ' >=' → logprob: -6.4019551277160645
    6. ']>' → logprob: -7.1519551277160645
    7. '[i' → logprob: -7.7769551277160645
    8. ' >' → logprob: -8.026954650878906
    9. '[' → logprob: -8.276954650878906
    10. ')' → logprob: -8.276954650878906

Token 246: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.0476527214050293
    2. '>=' → logprob: -1.1726527214050293
    3. '>' → logprob: -1.7976527214050293
    4. '==' → logprob: -2.4226527214050293
    5. ' ==' → logprob: -3.0476527214050293
    6. ' >' → logprob: -3.2976527214050293
    7. '   ' → logprob: -8.047653198242188
    8. ' ' → logprob: -8.672653198242188
    9. ')' → logprob: -9.047653198242188
    10. '6' → logprob: -9.297653198242188

Token 247: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.875003814697266
    3. '7' → logprob: -14.250003814697266
    4. '```' → logprob: -15.500003814697266
    5. '   ' → logprob: -16.750003814697266
    6. '
' → logprob: -17.250003814697266
    7. '٦' → logprob: -18.250003814697266
    8. '६' → logprob: -18.312503814697266
    9. '5' → logprob: -18.375003814697266
    10. '  ' → logprob: -18.500003814697266

Token 248: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.500004768371582
    3. '7' → logprob: -14.375004768371582
    4. '```' → logprob: -15.500004768371582
    5. '
' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.1875057220459
    7. '5' → logprob: -16.3125057220459
    8. '' → logprob: -17.0625057220459
    9. '६' → logprob: -17.1250057220459
    10. '٦' → logprob: -17.5000057220459

Token 249: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11105915904045105
    2. ':
' → logprob: -2.4860591888427734
    3. ':return' → logprob: -4.111059188842773
    4. '       ' → logprob: -5.236059188842773
    5. '   ' → logprob: -9.861059188842773
    6. '           ' → logprob: -9.861059188842773
    7. '):
' → logprob: -11.361059188842773
    8. '):' → logprob: -11.861059188842773
    9. ' :' → logprob: -12.111059188842773
    10. ',' → logprob: -12.111059188842773

Token 250: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09569697827100754
    2. '           ' → logprob: -2.4706969261169434
    3. ':
' → logprob: -5.970696926116943
    4. ':return' → logprob: -6.595696926116943
    5. ':' → logprob: -6.720696926116943
    6. ' return' → logprob: -6.970696926116943
    7. '   ' → logprob: -7.970696926116943
    8. 'return' → logprob: -8.470697402954102
    9. ',' → logprob: -10.345697402954102
    10. '	       ' → logprob: -11.095697402954102

Token 251: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03209812939167023
    2. '           ' → logprob: -3.5320980548858643
    3. ' return' → logprob: -6.782098293304443
    4. '               ' → logprob: -7.032098293304443
    5. '   ' → logprob: -8.282097816467285
    6. '       ' → logprob: -10.407097816467285
    7. '
' → logprob: -10.532097816467285
    8. '	return' → logprob: -11.532097816467285
    9. 'print' → logprob: -13.032097816467285
    10. '                   ' → logprob: -13.532097816467285

Token 252: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5762739181518555
    2. 'False' → logprob: -0.9512739181518555
    3. ''' → logprob: -3.3262739181518555
    4. ''i' → logprob: -4.3262739181518555
    5. 'i' → logprob: -7.3262739181518555
    6. ''ok' → logprob: -7.5762739181518555
    7. ''s' → logprob: -8.451273918151855
    8. ' True' → logprob: -8.576273918151855
    9. ' False' → logprob: -9.201273918151855
    10. ''t' → logprob: -9.201273918151855

Token 253: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2964189350605011
    2. '<|end|>' → logprob: -1.4214189052581787
    3. '
' → logprob: -4.421419143676758
    4. '<|end|>' → logprob: -6.921419143676758
    5. ' return' → logprob: -7.796419143676758
    6. '    
' → logprob: -8.046419143676758
    7. 'return' → logprob: -8.546419143676758
    8. '	return' → logprob: -8.546419143676758
    9. 'None' → logprob: -8.671419143676758
    10. ' ' → logprob: -8.671419143676758

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006664811633527279
    2. ' return' → logprob: -6.006664752960205
    3. '
' → logprob: -6.381664752960205
    4. 'return' → logprob: -6.631664752960205
    5. 'False' → logprob: -7.506664752960205
    6. '<|end|>' → logprob: -8.256665229797363
    7. '	return' → logprob: -9.006665229797363
    8. 'None' → logprob: -10.131665229797363
    9. '  ' → logprob: -10.381665229797363
    10. '    
' → logprob: -10.506665229797363

Token 255: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07913895696401596
    2. '   ' → logprob: -2.829138994216919
    3. ' return' → logprob: -4.82913875579834
    4. 'False' → logprob: -4.82913875579834
    5. '
' → logprob: -7.07913875579834
    6. 'None' → logprob: -9.32913875579834
    7. 'false' → logprob: -10.20413875579834
    8. ' ' → logprob: -10.82913875579834
    9. '	return' → logprob: -11.45413875579834
    10. ' False' → logprob: -11.82913875579834

Token 256: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019286326132714748
    2. ' False' → logprob: -6.251928806304932
    3. '(False' → logprob: -18.751928329467773
    4. 'True' → logprob: -22.251928329467773
    5. '=False' → logprob: -22.501928329467773
    6. '_false' → logprob: -24.126928329467773
    7. '.False' → logprob: -24.376928329467773
    8. 'false' → logprob: -24.501928329467773
    9. ' ' → logprob: -25.501928329467773
    10. 'F' → logprob: -25.501928329467773

Token 257: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.93535977602005
    2. 'def' → logprob: -1.1853597164154053
    3. '<|end|>' → logprob: -1.3103597164154053
    4. '

' → logprob: -3.5603597164154053
    5. '```' → logprob: -6.435359954833984
    6. '\n' → logprob: -6.685359954833984
    7. '<|end|>' → logprob: -7.935359954833984
    8. 'newline' → logprob: -8.935359954833984
    9. '\' → logprob: -9.435359954833984
    10. '  
' → logprob: -9.685359954833984

Token 258: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015753143816255033
    2. '<|end|>' → logprob: -9.000157356262207
    3. '
' → logprob: -11.250157356262207
    4. '```' → logprob: -11.750157356262207
    5. 'import' → logprob: -12.375157356262207
    6. '\' → logprob: -13.250157356262207
    7. '#' → logprob: -13.375157356262207
    8. '<|end|>' → logprob: -13.750157356262207
    9. '

' → logprob: -14.250157356262207
    10. ')' → logprob: -14.250157356262207

Token 259: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1285896897315979
    2. 'main' → logprob: -2.628589630126953
    3. ' solve' → logprob: -4.503589630126953
    4. ' dfs' → logprob: -4.878589630126953
    5. ' is' → logprob: -5.003589630126953
    6. ' find' → logprob: -5.003589630126953
    7. ' check' → logprob: -5.253589630126953
    8. ' can' → logprob: -6.128589630126953
    9. 'solve' → logprob: -6.128589630126953
    10. 'dfs' → logprob: -6.378589630126953

Token 260: '_easy' (ID: 159722)
  Prédit: '_deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.12507504224777222
    2. '_nodes' → logprob: -2.375075101852417
    3. '_len' → logprob: -4.125074863433838
    4. '_degree' → logprob: -5.750074863433838
    5. '(nodes' → logprob: -6.625074863433838
    6. '_de' → logprob: -7.750074863433838
    7. 'len' → logprob: -7.875074863433838
    8. '(len' → logprob: -8.000075340270996
    9. '_four' → logprob: -8.250075340270996
    10. '_' → logprob: -8.375075340270996

Token 261: '_yes' (ID: 151898)
  Prédit: '_case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.0602821446955204
    2. '_' → logprob: -4.185282230377197
    3. '_path' → logprob: -4.810282230377197
    4. '_solution' → logprob: -5.060282230377197
    5. '_flip' → logprob: -5.310282230377197
    6. '_to' → logprob: -5.560282230377197
    7. '_cycle' → logprob: -5.810282230377197
    8. '_cases' → logprob: -5.935282230377197
    9. '_condition' → logprob: -6.185282230377197
    10. '_pattern' → logprob: -7.185282230377197

Token 262: '(nodes' (ID: 86139)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009376663947477937
    2. '()' → logprob: -7.375937461853027
    3. '():
' → logprob: -9.000937461853027
    4. ' ():' → logprob: -9.500937461853027
    5. '(N' → logprob: -10.125937461853027
    6. '(de' → logprob: -10.500937461853027
    7. '(' → logprob: -11.125937461853027
    8. '_case' → logprob: -11.875937461853027
    9. ':' → logprob: -12.500937461853027
    10. '(:' → logprob: -12.875937461853027

Token 263: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.0018593916902318597
    2. '4' → logprob: -7.001859188079834
    3. '_' → logprob: -7.376859188079834
    4. '_degree' → logprob: -9.501859664916992
    5. '):' → logprob: -9.626859664916992
    6. 'deg' → logprob: -10.251859664916992
    7. '_de' → logprob: -10.376859664916992
    8. '_def' → logprob: -10.751859664916992
    9. '_len' → logprob: -10.876859664916992
    10. ')' → logprob: -10.876859664916992

Token 264: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -15.125000953674316
    3. ',' → logprob: -15.375000953674316
    4. ' ' → logprob: -15.625000953674316
    5. '[' → logprob: -16.250001907348633
    6. ')' → logprob: -16.875001907348633
    7. '```' → logprob: -16.875001907348633
    8. '' → logprob: -17.625001907348633
    9. 'def' → logprob: -18.375001907348633
    10. '=' → logprob: -18.812501907348633

Token 265: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007875737734138966
    2. ',' → logprob: -5.257875919342041
    3. ')' → logprob: -6.632875919342041
    4. '):
' → logprob: -7.007875919342041
    5. ' ):' → logprob: -9.132875442504883
    6. ':' → logprob: -9.507875442504883
    7. '==' → logprob: -9.507875442504883
    8. '[' → logprob: -10.007875442504883
    9. ')==' → logprob: -10.257875442504883
    10. ' ==' → logprob: -10.882875442504883

Token 266: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0021195695735514164
    2. '():
' → logprob: -6.252119541168213
    3. ':' → logprob: -8.877120018005371
    4. '()' → logprob: -10.377120018005371
    5. '   ' → logprob: -11.752120018005371
    6. ' ():' → logprob: -12.502120018005371
    7. '):' → logprob: -12.627120018005371
    8. '():
' → logprob: -12.877120018005371
    9. '(' → logprob: -13.127120018005371
    10. '()>' → logprob: -15.377120018005371

Token 267: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01136775966733694
    2. 'return' → logprob: -4.5113677978515625
    3. ' return' → logprob: -8.261367797851562
    4. 'if' (adapté à ' if') → logprob: -10.136367797851562
    5. '	return' → logprob: -11.261367797851562
    6. ' if' → logprob: -12.386367797851562
    7. '```' → logprob: -13.011367797851562
    8. '       ' → logprob: -14.136367797851562
    9. '    ' → logprob: -14.511367797851562
    10. 'for' → logprob: -15.011367797851562

Token 268: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.09024558961391449
    2. 'len' → logprob: -2.465245485305786
    3. ' not' → logprob: -6.715245723724365
    4. 'not' → logprob: -10.215245246887207
    5. ' nodes' → logprob: -10.215245246887207
    6. 'nodes' → logprob: -12.090245246887207
    7. '(len' → logprob: -12.090245246887207
    8. ' ' → logprob: -12.215245246887207
    9. '	len' → logprob: -13.215245246887207
    10. '0' → logprob: -14.965245246887207

Token 269: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.0009206312242895365
    2. '(' → logprob: -7.00092077255249
    3. ' (' → logprob: -12.000920295715332
    4. 'nodes' → logprob: -13.125920295715332
    5. '(tokens' → logprob: -14.625920295715332
    6. '(node' → logprob: -15.750920295715332
    7. '	nodes' → logprob: -16.37592124938965
    8. ' nodes' → logprob: -16.75092124938965
    9. '(
' → logprob: -16.75092124938965
    10. '(n' → logprob: -17.37592124938965

Token 270: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.34538474678993225
    2. '4' → logprob: -1.4703847169876099
    3. '_nodes' → logprob: -3.4703848361968994
    4. ')' → logprob: -4.09538459777832
    5. 'nodes' → logprob: -5.34538459777832
    6. '_' → logprob: -5.84538459777832
    7. '(nodes' → logprob: -6.09538459777832
    8. 'deg' → logprob: -6.09538459777832
    9. ')==' → logprob: -7.09538459777832
    10. '==' → logprob: -8.72038459777832

Token 271: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00024870390188880265
    2. '(nodes' → logprob: -8.750248908996582
    3. 'nodes' → logprob: -10.125248908996582
    4. '_nodes' → logprob: -10.875248908996582
    5. '_' → logprob: -11.125248908996582
    6. ')' → logprob: -12.000248908996582
    7. '(' → logprob: -12.125248908996582
    8. ' nodes' → logprob: -13.875248908996582
    9. ' ' → logprob: -14.125248908996582
    10. '```' → logprob: -14.250248908996582

Token 272: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001449398696422577
    2. ')==' → logprob: -7.5014495849609375
    3. ')<=' → logprob: -7.7514495849609375
    4. ' )' → logprob: -8.751449584960938
    5. '==' → logprob: -9.001449584960938
    6. '<=' → logprob: -9.876449584960938
    7. ')<' → logprob: -10.251449584960938
    8. ' <=' → logprob: -10.251449584960938
    9. ' ==' → logprob: -10.376449584960938
    10. ')>=' → logprob: -11.126449584960938

Token 273: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5248064994812012
    2. ' ==' → logprob: -1.7748064994812012
    3. '<=' → logprob: -1.8998064994812012
    4. '==' → logprob: -2.649806499481201
    5. ' <' → logprob: -4.899806499481201
    6. '<' → logprob: -5.774806499481201
    7. ' >' → logprob: -5.774806499481201
    8. ' >=' → logprob: -6.274806499481201
    9. '>' → logprob: -6.399806499481201
    10. '>=' → logprob: -7.274806499481201

Token 274: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.17481133341789246
    2. '5' → logprob: -2.299811363220215
    3. '4' → logprob: -3.174811363220215
    4. '2' → logprob: -5.049811363220215
    5. '8' → logprob: -5.174811363220215
    6. '1' → logprob: -5.799811363220215
    7. '7' → logprob: -6.299811363220215
    8. '6' → logprob: -7.424811363220215
    9. '9' → logprob: -8.299811363220215
    10. '10' → logprob: -8.674811363220215

Token 275: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.047040462493896484
    2. '5' → logprob: -3.6720404624938965
    3. '4' → logprob: -4.2970404624938965
    4. '2' → logprob: -5.2970404624938965
    5. '1' → logprob: -6.9220404624938965
    6. '8' → logprob: -7.9220404624938965
    7. '7' → logprob: -8.172040939331055
    8. '6' → logprob: -9.297040939331055
    9. '9' → logprob: -9.672040939331055
    10. '10' → logprob: -10.547040939331055

Token 276: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00569389620795846
    2. ':
' → logprob: -5.7556939125061035
    3. ':return' → logprob: -6.0056939125061035
    4. ' and' → logprob: -10.505693435668945
    5. '   ' → logprob: -11.630693435668945
    6. '):' → logprob: -12.505693435668945
    7. ' or' → logprob: -12.880693435668945
    8. '<|end|>' → logprob: -13.505693435668945
    9. ' :' → logprob: -13.630693435668945
    10. 'and' → logprob: -13.880693435668945

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31083616614341736
    2. '   ' → logprob: -1.6858361959457397
    3. ':
' → logprob: -2.68583607673645
    4. ':' → logprob: -4.435836315155029
    5. ':return' → logprob: -6.685836315155029
    6. ' return' → logprob: -8.060835838317871
    7. 'return' → logprob: -8.810835838317871
    8. '):
' → logprob: -9.810835838317871
    9. '	return' → logprob: -10.310835838317871
    10. ' :
' → logprob: -11.560835838317871

Token 278: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08935730159282684
    2. '   ' → logprob: -2.589357376098633
    3. ' return' → logprob: -4.964357376098633
    4. '       ' → logprob: -5.714357376098633
    5. '           ' → logprob: -9.464357376098633
    6. 'print' → logprob: -10.589357376098633
    7. '	return' → logprob: -11.214357376098633
    8. ' ' → logprob: -11.714357376098633
    9. '
' → logprob: -12.714357376098633
    10. '  ' → logprob: -13.214357376098633

Token 279: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7479299902915955
    2. '"' → logprob: -0.9979299902915955
    3. ''' → logprob: -1.8729300498962402
    4. '   ' → logprob: -5.74793004989624
    5. 'Yes' → logprob: -7.74793004989624
    6. ' True' → logprob: -7.74793004989624
    7. '       ' → logprob: -9.747929573059082
    8. 'yes' → logprob: -9.872929573059082
    9. ' ' → logprob: -10.622929573059082
    10. ' '' → logprob: -10.622929573059082

Token 280: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008045564405620098
    2. '
' → logprob: -5.383045673370361
    3. '<|end|>' → logprob: -5.758045673370361
    4. '    
' → logprob: -9.258045196533203
    5. '	return' → logprob: -9.633045196533203
    6. '<|end|>' → logprob: -10.633045196533203
    7. 'return' → logprob: -10.758045196533203
    8. 'def' → logprob: -11.258045196533203
    9. ' return' → logprob: -11.383045196533203
    10. ' ' → logprob: -12.133045196533203

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004078282043337822
    2. '
' → logprob: -6.004078388214111
    3. '<|end|>' → logprob: -6.879078388214111
    4. '    
' → logprob: -8.129077911376953
    5. '	return' → logprob: -9.254077911376953
    6. 'return' → logprob: -10.004077911376953
    7. 'False' → logprob: -10.504077911376953
    8. ' return' → logprob: -10.629077911376953
    9. 'def' → logprob: -11.129077911376953
    10. '<|end|>' → logprob: -11.254077911376953

Token 282: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08852670341730118
    2. 'return' (adapté à ' return') → logprob: -2.838526725769043
    3. ' return' → logprob: -4.088526725769043
    4. '
' → logprob: -4.963526725769043
    5. 'def' → logprob: -6.838526725769043
    6. '	return' → logprob: -7.963526725769043
    7. ' ' → logprob: -8.213526725769043
    8. '    
' → logprob: -8.463526725769043
    9. 'False' → logprob: -9.213526725769043
    10. '<|end|>' → logprob: -9.213526725769043

Token 283: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6931471824645996
    2. 'False' → logprob: -0.6931471824645996
    3. '(False' → logprob: -17.568147659301758
    4. '_false' → logprob: -20.568147659301758
    5. ' false' → logprob: -20.693147659301758
    6. '=False' → logprob: -21.443147659301758
    7. ' True' → logprob: -22.568147659301758
    8. 'false' → logprob: -22.818147659301758
    9. ' None' → logprob: -22.943147659301758
    10. '.False' → logprob: -22.943147659301758

Token 284: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8384165167808533
    2. '
' → logprob: -0.9634165167808533
    3. '

' → logprob: -2.213416576385498
    4. '<|end|>' → logprob: -2.588416576385498
    5. '```' → logprob: -7.213416576385498
    6. '\n' → logprob: -7.838416576385498
    7. '<|end|>' → logprob: -8.71341609954834
    8. '\' → logprob: -10.08841609954834
    9. 'newline' → logprob: -10.21341609954834
    10. '  
' → logprob: -10.58841609954834

Token 285: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005288423039019108
    2. '

' → logprob: -5.630288600921631
    3. '
' → logprob: -6.505288600921631
    4. '```' → logprob: -9.130288124084473
    5. '<|end|>' → logprob: -9.880288124084473
    6. '\' → logprob: -11.755288124084473
    7. '\n' → logprob: -12.005288124084473
    8. '<|end|>' → logprob: -12.505288124084473
    9. 'ndef' → logprob: -13.380288124084473
    10. '#' → logprob: -13.505288124084473

Token 286: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4778692424297333
    2. ' solve' → logprob: -1.4778692722320557
    3. ' check' → logprob: -3.1028692722320557
    4. ' can' → logprob: -3.8528692722320557
    5. 'main' → logprob: -3.9778692722320557
    6. 'solve' → logprob: -4.102869033813477
    7. ' is' → logprob: -4.352869033813477
    8. ' try' → logprob: -4.477869033813477
    9. ' dfs' → logprob: -4.602869033813477
    10. ' find' → logprob: -5.602869033813477

Token 287: '_easy' (ID: 159722)
  Prédit: '_easy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_easy' → logprob: -0.2857350707054138
    2. '_deg' → logprob: -2.4107351303100586
    3. '_len' → logprob: -2.6607351303100586
    4. '_nodes' → logprob: -3.0357351303100586
    5. '_' → logprob: -3.7857351303100586
    6. 'len' → logprob: -5.035735130310059
    7. '(len' → logprob: -6.035735130310059
    8. '(nodes' → logprob: -7.035735130310059
    9. '_diff' → logprob: -7.410735130310059
    10. '_(' → logprob: -7.535735130310059

Token 288: '_no' (ID: 13575)
  Prédit: '_yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_yes' → logprob: -0.0004067202680744231
    2. '_no' → logprob: -8.375406265258789
    3. '_' → logprob: -9.375406265258789
    4. ' _' → logprob: -10.125406265258789
    5. '_y' → logprob: -11.375406265258789
    6. '_you' → logprob: -12.500406265258789
    7. '```' → logprob: -12.875406265258789
    8. '_ok' → logprob: -13.000406265258789
    9. '_answer' → logprob: -13.000406265258789
    10. '_any' → logprob: -13.000406265258789

Token 289: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.09410302340984344
    2. '(de' → logprob: -2.9691030979156494
    3. '():' → logprob: -3.3441030979156494
    4. '(' → logprob: -5.84410285949707
    5. '(s' → logprob: -9.71910285949707
    6. '(def' → logprob: -9.84410285949707
    7. '(n' → logprob: -10.84410285949707
    8. '()' → logprob: -10.96910285949707
    9. '(len' → logprob: -11.21910285949707
    10. '(depth' → logprob: -11.21910285949707

Token 290: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.0003136552404612303
    2. 'deg' → logprob: -8.625313758850098
    3. '_de' → logprob: -10.375313758850098
    4. '_' → logprob: -10.500313758850098
    5. 'def' → logprob: -11.000313758850098
    6. '4' → logprob: -11.250313758850098
    7. '_degree' → logprob: -11.375313758850098
    8. '```' → logprob: -11.500313758850098
    9. '_def' → logprob: -12.000313758850098
    10. '_d' → logprob: -12.125313758850098

Token 291: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.612634362885728e-05
    2. '[' → logprob: -10.000076293945312
    3. '_' → logprob: -11.000076293945312
    4. '```' → logprob: -11.625076293945312
    5. '[:' → logprob: -13.375076293945312
    6. '[]' → logprob: -14.625076293945312
    7. '=' → logprob: -15.250076293945312
    8. ' ' → logprob: -15.375076293945312
    9. '['' → logprob: -15.625076293945312
    10. 's' → logprob: -15.750076293945312

Token 292: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020782900974154472
    2. ')' → logprob: -6.627078056335449
    3. '):
' → logprob: -7.252078056335449
    4. ')==' → logprob: -10.12707805633545
    5. '):

' → logprob: -14.12707805633545
    6. '==' → logprob: -14.37707805633545
    7. ' ):' → logprob: -14.50207805633545
    8. '():' → logprob: -14.62707805633545
    9. ':' → logprob: -15.25207805633545
    10. '):
' → logprob: -15.25207805633545

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001370320824207738
    2. 'return' → logprob: -9.125137329101562
    3. 'if' → logprob: -10.500137329101562
    4. '
' → logprob: -15.875137329101562
    5. ' return' → logprob: -15.875137329101562
    6. ' if' → logprob: -16.125137329101562
    7. '	return' → logprob: -16.500137329101562
    8. '  ' → logprob: -17.375137329101562
    9. '    
' → logprob: -17.625137329101562
    10. '	if' → logprob: -18.000137329101562

Token 294: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7204523086547852
    2. 'if' (adapté à ' if') → logprob: -0.9704523086547852
    3. '   ' → logprob: -2.095452308654785
    4. ' return' → logprob: -5.095452308654785
    5. ' if' → logprob: -5.220452308654785
    6. 'len' → logprob: -12.845452308654785
    7. '
' → logprob: -12.970452308654785
    8. '	return' → logprob: -12.970452308654785
    9. '    ' → logprob: -13.970452308654785
    10. ' ' → logprob: -14.095452308654785

Token 295: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11305101960897446
    2. ' len' → logprob: -2.238050937652588
    3. 'not' → logprob: -9.613051414489746
    4. ' not' → logprob: -9.738051414489746
    5. 'nodes' → logprob: -10.113051414489746
    6. '0' → logprob: -11.238051414489746
    7. ' ' → logprob: -11.238051414489746
    8. ' nodes' → logprob: -11.488051414489746
    9. 'all' → logprob: -11.988051414489746
    10. ' all' → logprob: -12.113051414489746

Token 296: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.000006675720215
    3. '(tokens' → logprob: -15.375006675720215
    4. ' (' → logprob: -16.2500057220459
    5. '(lines' → logprob: -17.1250057220459
    6. 'nodes' → logprob: -17.6250057220459
    7. '	nodes' → logprob: -18.0000057220459
    8. '(users' → logprob: -18.1250057220459
    9. '(objects' → logprob: -18.3750057220459
    10. ' ' → logprob: -18.5000057220459

Token 297: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.011368579231202602
    2. '4' → logprob: -4.511368751525879
    3. 'deg' → logprob: -8.636368751525879
    4. '(nodes' → logprob: -9.761368751525879
    5. '_nodes' → logprob: -9.761368751525879
    6. '_degree' → logprob: -11.636368751525879
    7. '_de' → logprob: -12.386368751525879
    8. '```' → logprob: -12.886368751525879
    9. '_grad' → logprob: -13.511368751525879
    10. ')' → logprob: -13.636368751525879

Token 298: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.625005722045898
    3. '```' → logprob: -14.125005722045898
    4. '[' → logprob: -14.875005722045898
    5. ')' → logprob: -15.250005722045898
    6. '=' → logprob: -15.625005722045898
    7. '   ' → logprob: -15.750005722045898
    8. '_' → logprob: -16.7500057220459
    9. '
' → logprob: -17.0625057220459
    10. '>' → logprob: -17.3750057220459

Token 299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006675214972347021
    2. ')==' → logprob: -7.625667572021484
    3. '==' → logprob: -9.125667572021484
    4. ')<=' → logprob: -10.750667572021484
    5. ')<' → logprob: -10.875667572021484
    6. ')>=' → logprob: -11.500667572021484
    7. ' )' → logprob: -11.875667572021484
    8. ')>' → logprob: -12.625667572021484
    9. '<=' → logprob: -13.125667572021484
    10. ' ==' → logprob: -13.125667572021484

Token 300: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2698185443878174
    2. ' ==' → logprob: -2.2698185443878174
    3. '<=' → logprob: -2.6448185443878174
    4. '<' → logprob: -3.2698185443878174
    5. ' <=' → logprob: -4.019818305969238
    6. ' <' → logprob: -5.394818305969238
    7. '>' → logprob: -7.019818305969238
    8. '>=' → logprob: -8.269818305969238
    9. '=' → logprob: -8.769818305969238
    10. '()' → logprob: -9.394818305969238

Token 301: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002446162048727274
    2. '0' → logprob: -6.377446174621582
    3. '2' → logprob: -7.252446174621582
    4. '3' → logprob: -11.127446174621582
    5. ' ' → logprob: -11.502446174621582
    6. '4' → logprob: -11.877446174621582
    7. '   ' → logprob: -13.752446174621582
    8. '
' → logprob: -14.252446174621582
    9. '```' → logprob: -14.939946174621582
    10. '  ' → logprob: -15.002446174621582

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019559232518076897
    2. '2' → logprob: -4.019559383392334
    3. '0' → logprob: -7.019559383392334
    4. '3' → logprob: -8.019558906555176
    5. '4' → logprob: -8.644558906555176
    6. ' ' → logprob: -12.707058906555176
    7. '   ' → logprob: -13.582058906555176
    8. '```' → logprob: -14.019558906555176
    9. '5' → logprob: -14.394558906555176
    10. '
' → logprob: -14.769558906555176

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03433774411678314
    2. ':
' → logprob: -3.4093377590179443
    3. ':return' → logprob: -7.534337520599365
    4. '   ' → logprob: -9.159337997436523
    5. ' and' → logprob: -11.159337997436523
    6. ',' → logprob: -11.909337997436523
    7. ' or' → logprob: -12.034337997436523
    8. ' :' → logprob: -12.159337997436523
    9. '       ' → logprob: -12.284337997436523
    10. '):
' → logprob: -12.784337997436523

Token 304: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29043421149253845
    2. '       ' → logprob: -1.4154342412948608
    3. ':' → logprob: -5.16543436050415
    4. ':
' → logprob: -5.79043436050415
    5. ':return' → logprob: -8.290433883666992
    6. ',' → logprob: -8.790433883666992
    7. '  ' → logprob: -11.540433883666992
    8. '      ' → logprob: -11.790433883666992
    9. ' ' → logprob: -11.915433883666992
    10. '    ' → logprob: -12.165433883666992

Token 305: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009998070076107979
    2. 'return' (adapté à ' return') → logprob: -5.259997844696045
    3. '       ' → logprob: -5.509997844696045
    4. ' return' → logprob: -7.259997844696045
    5. '	return' → logprob: -13.509998321533203
    6. '  ' → logprob: -13.884998321533203
    7. ' ' → logprob: -14.509998321533203
    8. '    ' → logprob: -14.884998321533203
    9. ':return' → logprob: -15.634998321533203
    10. '           ' → logprob: -16.259998321533203

Token 306: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.008672484196722507
    2. ' True' → logprob: -4.758672714233398
    3. 'False' → logprob: -9.758672714233398
    4. ' False' → logprob: -15.758672714233398
    5. '(True' → logprob: -18.1336727142334
    6. 'None' → logprob: -20.0086727142334
    7. '=True' → logprob: -20.5086727142334
    8. '   ' → logprob: -20.6336727142334
    9. 'Tr' → logprob: -21.0086727142334
    10. ' ' → logprob: -21.1336727142334

Token 307: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004608249757438898
    2. '
' → logprob: -6.129608154296875
    3. '<|end|>' → logprob: -6.254608154296875
    4. '    
' → logprob: -8.129608154296875
    5. '	return' → logprob: -9.379608154296875
    6. 'return' → logprob: -10.129608154296875
    7. '<|end|>' → logprob: -10.629608154296875
    8. '  
' → logprob: -11.629608154296875
    9. 'def' → logprob: -11.629608154296875
    10. ' return' → logprob: -11.754608154296875

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.7385154428193346e-05
    2. '	return' → logprob: -11.00003719329834
    3. '<|end|>' → logprob: -11.75003719329834
    4. 'return' → logprob: -12.12503719329834
    5. '    
' → logprob: -12.75003719329834
    6. ' return' → logprob: -13.12503719329834
    7. '
' → logprob: -14.12503719329834
    8. ',' → logprob: -14.62503719329834
    9. '       ' → logprob: -15.50003719329834
    10. ' ' → logprob: -15.50003719329834

Token 309: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009771942859515548
    2. 'return' (adapté à ' return') → logprob: -7.250977039337158
    3. ' return' → logprob: -8.500977516174316
    4. '	return' → logprob: -10.125977516174316
    5. '
' → logprob: -11.500977516174316
    6. 'def' → logprob: -11.625977516174316
    7. '    
' → logprob: -14.125977516174316
    8. 'False' → logprob: -14.250977516174316
    9. ' ' → logprob: -14.375977516174316
    10. '       ' → logprob: -14.500977516174316

Token 310: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005235529970377684
    2. ' False' → logprob: -5.25523567199707
    3. 'True' → logprob: -13.25523567199707
    4. '(False' → logprob: -17.00523567199707
    5. ' True' → logprob: -17.88023567199707
    6. 'F' → logprob: -19.88023567199707
    7. '   ' → logprob: -19.88023567199707
    8. 'len' → logprob: -19.88023567199707
    9. '_false' → logprob: -20.88023567199707
    10. 'false' → logprob: -20.88023567199707

Token 311: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004552946425974369
    2. '
' → logprob: -5.754552841186523
    3. '<|end|>' → logprob: -7.129552841186523
    4. '```' → logprob: -7.879552841186523
    5. '\' → logprob: -10.004552841186523
    6. '

' → logprob: -10.254552841186523
    7. '#' → logprob: -10.254552841186523
    8. ')' → logprob: -10.879552841186523
    9. '\n' → logprob: -11.254552841186523
    10. ':' → logprob: -11.879552841186523

Token 312: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8670179997570813e-05
    2. 'import' → logprob: -11.625019073486328
    3. '```' → logprob: -11.875019073486328
    4. '#' → logprob: -13.750019073486328
    5. 'from' → logprob: -15.125019073486328
    6. 'if' → logprob: -15.250019073486328
    7. '\' → logprob: -15.250019073486328
    8. 'class' → logprob: -15.375019073486328
    9. '
' → logprob: -15.875019073486328
    10. '    
' → logprob: -16.500019073486328

Token 313: ' setup' (ID: 11064)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19111576676368713
    2. 'main' → logprob: -2.3161158561706543
    3. ' solve' → logprob: -2.9411158561706543
    4. ' dfs' → logprob: -4.941115856170654
    5. 'solve' → logprob: -5.066115856170654
    6. ' find' → logprob: -6.066115856170654
    7. ' can' → logprob: -6.441115856170654
    8. ' is' → logprob: -6.941115856170654
    9. 'dfs' → logprob: -6.941115856170654
    10. ' check' → logprob: -6.941115856170654

Token 314: '_seen' (ID: 158839)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8196735382080078
    2. '_graph' → logprob: -1.3196735382080078
    3. '_stack' → logprob: -2.444673538208008
    4. '()' → logprob: -3.069673538208008
    5. '_d' → logprob: -3.319673538208008
    6. '_adj' → logprob: -4.069673538208008
    7. '(' → logprob: -4.694673538208008
    8. '_chain' → logprob: -5.069673538208008
    9. '_states' → logprob: -5.069673538208008
    10. '_colors' → logprob: -5.069673538208008

Token 315: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.056452054530382156
    2. '(de' → logprob: -3.6814520359039307
    3. '(size' → logprob: -4.55645227432251
    4. '(' → logprob: -4.93145227432251
    5. '(N' → logprob: -5.43145227432251
    6. '():
' → logprob: -6.05645227432251
    7. ' ():' → logprob: -6.18145227432251
    8. '(depth' → logprob: -7.18145227432251
    9. '(se' → logprob: -7.43145227432251
    10. '()' → logprob: -7.55645227432251

Token 316: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018365677446126938
    2. '):
' → logprob: -4.018365859985352
    3. ',' → logprob: -9.268365859985352
    4. ')' → logprob: -9.768365859985352
    5. '):
' → logprob: -10.018365859985352
    6. ' ):' → logprob: -11.143365859985352
    7. '   ' → logprob: -13.018365859985352
    8. '):

' → logprob: -13.643365859985352
    9. '+' → logprob: -14.143365859985352
    10. ':' → logprob: -15.393365859985352

Token 317: ' t' (ID: 260)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.349246621131897
    2. ' adj' → logprob: -1.599246621131897
    3. '):' → logprob: -1.724246621131897
    4. '):
' → logprob: -2.9742465019226074
    5. ' M' → logprob: -2.9742465019226074
    6. ')' → logprob: -2.9742465019226074
    7. ' nodes' → logprob: -3.3492465019226074
    8. ' )' → logprob: -4.099246501922607
    9. 'M' → logprob: -4.099246501922607
    10. 'visited' → logprob: -4.224246501922607

Token 318: '1' (ID: 16)
  Prédit: 'ype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ype' → logprob: -0.009423128329217434
    2. '):
' → logprob: -5.38442325592041
    3. '):' → logprob: -5.50942325592041
    4. 'ypes' → logprob: -7.88442325592041
    5. ')' → logprob: -9.50942325592041
    6. '=' → logprob: -9.63442325592041
    7. 'arget' → logprob: -10.00942325592041
    8. 'yp' → logprob: -10.25942325592041
    9. 'YPE' → logprob: -10.63442325592041
    10. 'yped' → logprob: -10.88442325592041

Token 319: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.21953488886356354
    2. 'ype' → logprob: -2.2195348739624023
    3. '+' → logprob: -3.4695348739624023
    4. '):' → logprob: -3.4695348739624023
    5. ',' → logprob: -4.469534873962402
    6. 'o' → logprob: -5.719534873962402
    7. 'ypes' → logprob: -6.094534873962402
    8. ')' → logprob: -6.219534873962402
    9. '):

' → logprob: -6.719534873962402
    10. '=' → logprob: -6.844534873962402

Token 320: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.31832247972488403
    2. ' t' → logprob: -1.3183224201202393
    3. 'N' → logprob: -7.568322658538818
    4. ')' → logprob: -7.693322658538818
    5. ' nodes' → logprob: -7.755822658538818
    6. ' ' → logprob: -8.13082218170166
    7. 'nodes' → logprob: -8.13082218170166
    8. ' N' → logprob: -8.19332218170166
    9. '
' → logprob: -8.25582218170166
    10. 'adj' → logprob: -8.31832218170166

Token 321: '2' (ID: 17)
  Prédit: 'ype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ype' → logprob: -0.10093799233436584
    2. '2' → logprob: -3.225938081741333
    3. '1' → logprob: -3.725938081741333
    4. '):' → logprob: -4.100937843322754
    5. '):
' → logprob: -5.600937843322754
    6. 'ypes' → logprob: -5.850937843322754
    7. '=' → logprob: -6.350937843322754
    8. ',' → logprob: -6.725937843322754
    9. 'ime' → logprob: -6.975937843322754
    10. 'pe' → logprob: -7.100937843322754

Token 322: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04728461429476738
    2. ',' → logprob: -3.6722846031188965
    3. '):
' → logprob: -3.9222846031188965
    4. ')' → logprob: -7.0472846031188965
    5. '):
' → logprob: -9.922285079956055
    6. ' ):' → logprob: -10.672285079956055
    7. '):

' → logprob: -11.297285079956055
    8. '   ' → logprob: -12.672285079956055
    9. ' ,' → logprob: -13.172285079956055
    10. ':' → logprob: -13.297285079956055

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007967620622366667
    2. ' return' → logprob: -7.250796794891357
    3. 'return' → logprob: -9.3757963180542
    4. '	return' → logprob: -13.5007963180542
    5. '   ' → logprob: -15.7507963180542
    6. '[' → logprob: -16.125797271728516
    7. '  ' → logprob: -16.500797271728516
    8. '{return' → logprob: -16.500797271728516
    9. ' seen' → logprob: -17.250797271728516
    10. '    ' → logprob: -17.375797271728516

Token 324: ' seen' (ID: 6177)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23744764924049377
    2. '   ' → logprob: -1.8624476194381714
    3. ' return' → logprob: -3.112447738647461
    4. 'seen' (adapté à ' seen') → logprob: -4.487447738647461
    5. ' seen' → logprob: -8.362447738647461
    6. ' ' → logprob: -10.237447738647461
    7. '  ' → logprob: -11.362447738647461
    8. '	return' → logprob: -11.987447738647461
    9. 'size' → logprob: -12.112447738647461
    10. 'visited' → logprob: -12.362447738647461

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2522154748439789
    2. '=' → logprob: -1.5022155046463013
    3. '=[' → logprob: -8.377215385437012
    4. '   ' → logprob: -11.127215385437012
    5. '[' → logprob: -11.377215385437012
    6. ' =[' → logprob: -11.377215385437012
    7. '=[[' → logprob: -12.002215385437012
    8. ' ' → logprob: -13.002215385437012
    9. '[N' → logprob: -13.752215385437012
    10. ')' → logprob: -13.752215385437012

Token 326: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.40266260504722595
    2. '[' → logprob: -1.1526626348495483
    3. ' [[' → logprob: -4.652662754058838
    4. ' [' → logprob: -5.652662754058838
    5. '[N' → logprob: -6.027662754058838
    6. '{' → logprob: -9.40266227722168
    7. 'set' → logprob: -9.90266227722168
    8. '{}' → logprob: -10.52766227722168
    9. '[n' → logprob: -11.65266227722168
    10. '[-' → logprob: -11.77766227722168

Token 327: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.09219011664390564
    2. '[' → logprob: -2.7171900272369385
    3. '0' → logprob: -3.8421900272369385
    4. '[[' → logprob: -8.59218978881836
    5. '-' → logprob: -8.84218978881836
    6. '[-' → logprob: -9.59218978881836
    7. '[]' → logprob: -9.96718978881836
    8. ' [' → logprob: -10.46718978881836
    9. ' False' → logprob: -10.46718978881836
    10. '[N' → logprob: -11.09218978881836

Token 328: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00912324246019125
    2. ']*(' → logprob: -4.8841233253479
    3. ']*' → logprob: -6.7591233253479
    4. ' for' → logprob: -8.509122848510742
    5. ' ]' → logprob: -9.134122848510742
    6. ']+' → logprob: -10.759122848510742
    7. 'for' → logprob: -11.134122848510742
    8. '   ' → logprob: -12.259122848510742
    9. ',' → logprob: -13.759122848510742
    10. ' ' → logprob: -13.884122848510742

Token 329: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4445359706878662
    2. ' *' → logprob: -1.6945359706878662
    3. ' for' → logprob: -2.319535970687866
    4. '*(' → logprob: -3.694535970687866
    5. '   ' → logprob: -3.819535970687866
    6. 'for' → logprob: -4.444536209106445
    7. ']' → logprob: -4.444536209106445
    8. ',' → logprob: -6.194536209106445
    9. ' ' → logprob: -6.694536209106445
    10. ']*(' → logprob: -6.819536209106445

Token 330: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0010261393617838621
    2. '(' → logprob: -7.126026153564453
    3. '((' → logprob: -9.126026153564453
    4. ' (' → logprob: -9.376026153564453
    5. '(t' → logprob: -11.626026153564453
    6. '(n' → logprob: -12.251026153564453
    7. 'N' → logprob: -12.501026153564453
    8. '(len' → logprob: -13.001026153564453
    9. '(max' → logprob: -13.376026153564453
    10. '   ' → logprob: -13.626026153564453

Token 331: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011075885966420174
    2. '(N' → logprob: -4.511075973510742
    3. ' N' → logprob: -11.136075973510742
    4. '(' → logprob: -12.011075973510742
    5. ' (' → logprob: -13.011075973510742
    6. '   ' → logprob: -13.386075973510742
    7. '[N' → logprob: -14.011075973510742
    8. '2' → logprob: -15.136075973510742
    9. 'len' → logprob: -15.136075973510742
    10. ' ' → logprob: -15.136075973510742

Token 332: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.240481914370321e-05
    2. ' +' → logprob: -9.875052452087402
    3. '+
' → logprob: -14.000052452087402
    4. '
' → logprob: -19.125051498413086
    5. '()+' → logprob: -19.875051498413086
    6. '+

' → logprob: -20.250051498413086
    7. '＋' → logprob: -20.250051498413086
    8. ' plus' → logprob: -20.375051498413086
    9. '```' → logprob: -20.500051498413086
    10. ' +
' → logprob: -20.500051498413086

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009763598791323602
    2. '2' → logprob: -7.0009765625
    3. '3' → logprob: -10.3759765625
    4. ' ' → logprob: -10.3759765625
    5. '7' → logprob: -14.0009765625
    6. '   ' → logprob: -14.2509765625
    7. '5' → logprob: -15.5634765625
    8. '10' → logprob: -15.6884765625
    9. '```' → logprob: -15.8134765625
    10. '
' → logprob: -16.0009765625

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.888114098226652e-05
    2. ')
' → logprob: -9.375088691711426
    3. ' )' → logprob: -12.625088691711426
    4. ')

' → logprob: -15.750088691711426
    5. '<|end|>' → logprob: -16.375089645385742
    6. '),' → logprob: -16.625089645385742
    7. '}' → logprob: -17.000089645385742
    8. '   ' → logprob: -17.125089645385742
    9. ']' → logprob: -17.500089645385742
    10. ')#' → logprob: -17.625089645385742

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001535812160000205
    2. ' seen' → logprob: -7.376535892486572
    3. '
' → logprob: -7.751535892486572
    4. 'seen' → logprob: -8.251535415649414
    5. '<|end|>' → logprob: -9.126535415649414
    6. '    
' → logprob: -10.876535415649414
    7. '_seen' → logprob: -11.126535415649414
    8. '	se' → logprob: -11.626535415649414
    9. 'return' → logprob: -11.751535415649414
    10. '<|end|>' → logprob: -11.876535415649414

Token 336: ' seen' (ID: 6177)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5848353505134583
    2. 'seen' (adapté à ' seen') → logprob: -0.8348353505134583
    3. ' seen' → logprob: -5.584835529327393
    4. 'for' → logprob: -5.709835529327393
    5. 'return' → logprob: -7.834835529327393
    6. 'def' → logprob: -8.084835052490234
    7. '
' → logprob: -8.334835052490234
    8. ' for' → logprob: -8.459835052490234
    9. 'if' → logprob: -9.334835052490234
    10. 't' → logprob: -9.584835052490234

Token 337: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0028506405651569366
    2. '[' → logprob: -5.877850532531738
    3. 't' → logprob: -10.877850532531738
    4. '[s' → logprob: -11.627850532531738
    5. ' [' → logprob: -12.502850532531738
    6. '[T' → logprob: -13.502850532531738
    7. '[a' → logprob: -14.002850532531738
    8. '[token' → logprob: -14.127850532531738
    9. '[q' → logprob: -14.127850532531738
    10. '```' → logprob: -14.127850532531738

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001673061487963423
    2. '2' → logprob: -8.750166893005371
    3. ',' → logprob: -13.500166893005371
    4. ' ' → logprob: -13.500166893005371
    5. '[' → logprob: -13.500166893005371
    6. '_' → logprob: -13.500166893005371
    7. '0' → logprob: -14.062666893005371
    8. ')' → logprob: -14.562666893005371
    9. ']' → logprob: -14.562666893005371
    10. '   ' → logprob: -14.687666893005371

Token 339: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009120595059357584
    2. ' ]' → logprob: -7.875912189483643
    3. ']=' → logprob: -8.500911712646484
    4. ')' → logprob: -9.000911712646484
    5. ']+=' → logprob: -9.250911712646484
    6. '])' → logprob: -9.625911712646484
    7. ')]' → logprob: -11.375911712646484
    8. '[' → logprob: -11.875911712646484
    9. ']==' → logprob: -12.375911712646484
    10. '+' → logprob: -12.625911712646484

Token 340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2031298577785492
    2. '=' → logprob: -1.7031298875808716
    3. ']' → logprob: -7.078129768371582
    4. ',' → logprob: -8.078129768371582
    5. '[' → logprob: -8.703129768371582
    6. ' ' → logprob: -9.078129768371582
    7. ' +=' → logprob: -9.453129768371582
    8. ' |=' → logprob: -9.828129768371582
    9. ']=' → logprob: -10.453129768371582
    10. '+=' → logprob: -10.578129768371582

Token 341: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01923583820462227
    2. '2' → logprob: -4.144235610961914
    3. 't' → logprob: -6.519235610961914
    4. '3' → logprob: -7.269235610961914
    5. '4' → logprob: -8.269235610961914
    6. 'True' → logprob: -8.394235610961914
    7. ' ' → logprob: -8.519235610961914
    8. '-' → logprob: -8.644235610961914
    9. '7' → logprob: -10.019235610961914
    10. '0' → logprob: -10.519235610961914

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016334522515535355
    2. '2' → logprob: -4.516334533691406
    3. 't' → logprob: -5.891334533691406
    4. '3' → logprob: -6.891334533691406
    5. 'True' → logprob: -7.391334533691406
    6. '-' → logprob: -7.891334533691406
    7. ' ' → logprob: -8.516334533691406
    8. '4' → logprob: -8.891334533691406
    9. '7' → logprob: -9.766334533691406
    10. '0' → logprob: -10.641334533691406

Token 343: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03720797598361969
    2. '
' → logprob: -4.037208080291748
    3. '<|end|>' → logprob: -4.037208080291748
    4. ' seen' → logprob: -7.412208080291748
    5. '<|end|>' → logprob: -8.66220760345459
    6. 'seen' → logprob: -8.78720760345459
    7. ' ' → logprob: -9.03720760345459
    8. '    
' → logprob: -9.78720760345459
    9. '  ' → logprob: -10.41220760345459
    10. '	se' → logprob: -10.66220760345459

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006784808938391507
    2. ' seen' → logprob: -7.625678539276123
    3. 'seen' → logprob: -8.750678062438965
    4. '<|end|>' → logprob: -11.750678062438965
    5. '
' → logprob: -12.250678062438965
    6. '	se' → logprob: -12.375678062438965
    7. '_seen' → logprob: -12.875678062438965
    8. '  ' → logprob: -13.250678062438965
    9. '   ' → logprob: -13.375678062438965
    10. ' ' → logprob: -13.375678062438965

Token 345: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.20450857281684875
    2. '   ' → logprob: -1.7045085430145264
    3. ' seen' → logprob: -5.8295087814331055
    4. ' ' → logprob: -9.954508781433105
    5. 't' → logprob: -10.329508781433105
    6. '  ' → logprob: -10.579508781433105
    7. '
' → logprob: -11.829508781433105
    8. 'visited' → logprob: -12.079508781433105
    9. '       ' → logprob: -12.454508781433105
    10. 'return' → logprob: -12.454508781433105

Token 346: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.00016873658751137555
    2. '[' → logprob: -8.750168800354004
    3. ' [' → logprob: -12.125168800354004
    4. 't' → logprob: -13.250168800354004
    5. '   ' → logprob: -14.000168800354004
    6. '	t' → logprob: -14.750168800354004
    7. '
' → logprob: -15.000168800354004
    8. ' ' → logprob: -15.250168800354004
    9. '[
' → logprob: -15.250168800354004
    10. '```' → logprob: -15.500168800354004

Token 347: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.629921436891891e-05
    2. '1' → logprob: -12.12502670288086
    3. ' ' → logprob: -12.75002670288086
    4. '_' → logprob: -12.87502670288086
    5. ']' → logprob: -12.93752670288086
    6. '
' → logprob: -13.18752670288086
    7. ')' → logprob: -13.31252670288086
    8. '```' → logprob: -13.31252670288086
    9. '   ' → logprob: -14.00002670288086
    10. 't' → logprob: -14.25002670288086

Token 348: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023965541913639754
    2. ']=' → logprob: -8.625239372253418
    3. '=' → logprob: -10.375239372253418
    4. ' ]' → logprob: -10.625239372253418
    5. ')' → logprob: -12.500239372253418
    6. ' =' → logprob: -14.375239372253418
    7. ']
' → logprob: -16.500240325927734
    8. '[' → logprob: -17.125240325927734
    9. ']+=' → logprob: -17.125240325927734
    10. '']' → logprob: -17.375240325927734

Token 349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931508183479309
    2. ' =' → logprob: -0.6931508183479309
    3. ' ' → logprob: -13.193150520324707
    4. '   ' → logprob: -14.443150520324707
    5. ')' → logprob: -14.818150520324707
    6. '=True' → logprob: -15.818150520324707
    7. ',' → logprob: -15.943150520324707
    8. ' +=' → logprob: -16.443151473999023
    9. '[' → logprob: -16.818151473999023
    10. '+=' → logprob: -16.818151473999023

Token 350: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027286101132631302
    2. ' ' → logprob: -3.7772860527038574
    3. '2' → logprob: -5.527286052703857
    4. '4' → logprob: -11.152286529541016
    5. '3' → logprob: -11.714786529541016
    6. '   ' → logprob: -11.964786529541016
    7. '0' → logprob: -12.152286529541016
    8. '-' → logprob: -12.464786529541016
    9. ' -' → logprob: -12.464786529541016
    10. '  ' → logprob: -12.714786529541016

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020609859377145767
    2. '2' → logprob: -3.8956098556518555
    3. '0' → logprob: -11.020609855651855
    4. '-' → logprob: -11.270609855651855
    5. '3' → logprob: -11.270609855651855
    6. ' ' → logprob: -11.270609855651855
    7. '4' → logprob: -11.895609855651855
    8. 't' → logprob: -12.645609855651855
    9. '6' → logprob: -14.083109855651855
    10. '5' → logprob: -14.708109855651855

Token 352: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00028612653841264546
    2. '<|end|>' → logprob: -9.375286102294922
    3. 'return' → logprob: -9.625286102294922
    4. '	return' → logprob: -9.750286102294922
    5. '
' → logprob: -9.750286102294922
    6. ' return' → logprob: -11.250286102294922
    7. '    
' → logprob: -13.250286102294922
    8. ' ' → logprob: -13.875286102294922
    9. ',' → logprob: -14.500286102294922
    10. '  ' → logprob: -14.750286102294922

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.709308167453855e-05
    2. 'return' → logprob: -10.250086784362793
    3. '	return' → logprob: -10.375086784362793
    4. '<|end|>' → logprob: -11.000086784362793
    5. ' return' → logprob: -12.875086784362793
    6. '
' → logprob: -15.250086784362793
    7. '    
' → logprob: -15.250086784362793
    8. '       ' → logprob: -15.875086784362793
    9. ' ' → logprob: -15.875086784362793
    10. '<|end|>' → logprob: -16.12508773803711

Token 354: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1604861170053482
    2. 'return' (adapté à ' return') → logprob: -1.910486102104187
    3. ' return' → logprob: -8.660486221313477
    4. '	return' → logprob: -9.410486221313477
    5. '<|end|>' → logprob: -12.410486221313477
    6. '  ' → logprob: -14.535486221313477
    7. ' ' → logprob: -14.660486221313477
    8. 'def' → logprob: -14.785486221313477
    9. '       ' → logprob: -14.785486221313477
    10. '    ' → logprob: -15.660486221313477

Token 355: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.16022604703903198
    2. ' seen' → logprob: -1.9102261066436768
    3. 'se' → logprob: -13.785225868225098
    4. 'shown' → logprob: -15.285225868225098
    5. '[' → logprob: -15.785225868225098
    6. '_seen' → logprob: -15.910225868225098
    7. 'visible' → logprob: -16.910226821899414
    8. 'see' → logprob: -17.285226821899414
    9. 'Seen' → logprob: -17.410226821899414
    10. ' unseen' → logprob: -17.410226821899414

Token 356: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015033314935863018
    2. '<|end|>' → logprob: -4.26503324508667
    3. '```' → logprob: -8.140033721923828
    4. '
' → logprob: -8.140033721923828
    5. '<|end|>' → logprob: -9.140033721923828
    6. '#' → logprob: -10.015033721923828
    7. '\' → logprob: -11.390033721923828
    8. 'import' → logprob: -11.390033721923828
    9. 'from' → logprob: -11.515033721923828
    10. ')' → logprob: -11.515033721923828

Token 358: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.6111869215965271
    2. ' dfs' → logprob: -1.1111869812011719
    3. 'b' → logprob: -3.736186981201172
    4. 'main' → logprob: -3.736186981201172
    5. ' main' → logprob: -3.861186981201172
    6. 'def' → logprob: -4.486186981201172
    7. ' bfs' → logprob: -4.736186981201172
    8. 'solve' → logprob: -5.236186981201172
    9. ' find' → logprob: -5.486186981201172
    10. 'find' → logprob: -5.486186981201172

Token 359: '_from' (ID: 12526)
  Prédit: '(adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.005737390834838152
    2. '(node' → logprob: -5.6307373046875
    3. '(ad' → logprob: -7.2557373046875
    4. '(graph' → logprob: -7.3807373046875
    5. '(u' → logprob: -8.1307373046875
    6. '(v' → logprob: -8.3807373046875
    7. '(' → logprob: -8.6307373046875
    8. '(stack' → logprob: -11.0057373046875
    9. ' (' → logprob: -11.2557373046875
    10. '(depth' → logprob: -11.3807373046875

Token 360: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -1.1088203191757202
    2. '(u' → logprob: -1.3588203191757202
    3. '(' → logprob: -2.2338204383850098
    4. '(node' → logprob: -2.6088204383850098
    5. '(nodes' → logprob: -2.7338204383850098
    6. '(t' → logprob: -2.8588204383850098
    7. '_nodes' → logprob: -4.35882043838501
    8. 't' → logprob: -4.60882043838501
    9. 'adj' → logprob: -4.73382043838501
    10. '_node' → logprob: -4.85882043838501

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.102680633077398e-05
    2. ' ,' → logprob: -9.750090599060059
    3. ',node' → logprob: -11.125090599060059
    4. ',u' → logprob: -12.375090599060059
    5. ',v' → logprob: -12.875090599060059
    6. ',
' → logprob: -13.250090599060059
    7. ',n' → logprob: -13.500090599060059
    8. '   ' → logprob: -13.750090599060059
    9. '):' → logprob: -13.875090599060059
    10. ')' → logprob: -14.500090599060059

Token 362: ' N' (ID: 478)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.2548531293869019
    2. 'node' → logprob: -1.3798531293869019
    3. 'v' → logprob: -2.0048532485961914
    4. 'start' → logprob: -2.2548532485961914
    5. 'seen' → logprob: -2.5048532485961914
    6. ' node' → logprob: -2.8798532485961914
    7. 'current' → logprob: -3.2548532485961914
    8. ' u' → logprob: -4.629853248596191
    9. ' v' → logprob: -4.879853248596191
    10. ' current' → logprob: -5.129853248596191

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.857719275401905e-05
    2. ' ,' → logprob: -10.375038146972656
    3. '):' → logprob: -12.375038146972656
    4. ',
' → logprob: -13.750038146972656
    5. 'def' → logprob: -14.875038146972656
    6. ',node' → logprob: -15.000038146972656
    7. '):
' → logprob: -15.500038146972656
    8. ',t' → logprob: -15.625038146972656
    9. 't' → logprob: -15.750038146972656
    10. '   ' → logprob: -16.500038146972656

Token 364: ' t' (ID: 260)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.23623126745224
    2. 'u' → logprob: -2.6112313270568848
    3. 'node' → logprob: -3.1112313270568848
    4. 'current' → logprob: -3.7362313270568848
    5. ' start' → logprob: -3.8612313270568848
    6. 'v' → logprob: -3.9862313270568848
    7. ' node' → logprob: -4.986231327056885
    8. 'seen' → logprob: -5.236231327056885
    9. ' u' → logprob: -5.861231327056885
    10. 'cur' → logprob: -5.861231327056885

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002464121440425515
    2. '2' → logprob: -6.752464294433594
    3. ',' → logprob: -6.877464294433594
    4. 'ype' → logprob: -9.252464294433594
    5. ')' → logprob: -10.252464294433594
    6. '_,' → logprob: -10.252464294433594
    7. '_' → logprob: -10.877464294433594
    8. 't' → logprob: -11.252464294433594
    9. ',_' → logprob: -11.502464294433594
    10. 'start' → logprob: -11.627464294433594

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034630970912985504
    2. ' ,' → logprob: -8.250346183776855
    3. ',t' → logprob: -9.500346183776855
    4. ',
' → logprob: -12.500346183776855
    5. '   ' → logprob: -12.875346183776855
    6. '):' → logprob: -14.250346183776855
    7. 't' → logprob: -14.250346183776855
    8. '):
' → logprob: -15.125346183776855
    9. ' ' → logprob: -15.250346183776855
    10. '  ' → logprob: -15.750346183776855

Token 367: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10022812336683273
    2. ' t' → logprob: -2.3502280712127686
    3. '   ' → logprob: -10.975228309631348
    4. ' ' → logprob: -13.225228309631348
    5. '  ' → logprob: -14.225228309631348
    6. '	t' → logprob: -14.600228309631348
    7. '    ' → logprob: -14.600228309631348
    8. ',' → logprob: -15.725228309631348
    9. '
' → logprob: -15.725228309631348
    10. '_t' → logprob: -15.850228309631348

Token 368: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008899023523554206
    2. ')' → logprob: -7.250889778137207
    3. ',' → logprob: -8.875889778137207
    4. '_' → logprob: -11.000889778137207
    5. '_)' → logprob: -11.500889778137207
    6. '₂' → logprob: -13.125889778137207
    7. '1' → logprob: -13.250889778137207
    8. '+' → logprob: -13.750889778137207
    9. ' ' → logprob: -13.750889778137207
    10. '_,' → logprob: -13.875889778137207

Token 369: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013357169227674603
    2. '):' → logprob: -6.626335620880127
    3. '):
' → logprob: -12.501336097717285
    4. ' ,' → logprob: -12.626336097717285
    5. '   ' → logprob: -13.501336097717285
    6. ')' → logprob: -15.001336097717285
    7. ':' → logprob: -15.626336097717285
    8. ' ):' → logprob: -15.751336097717285
    9. ',t' → logprob: -15.876336097717285
    10. ',
' → logprob: -15.876336097717285

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1279439926147461
    2. 'stack' → logprob: -2.127943992614746
    3. 'seen' → logprob: -7.752943992614746
    4. ' stack' → logprob: -7.752943992614746
    5. 'from' → logprob: -9.752943992614746
    6. '	stack' → logprob: -9.877943992614746
    7. 'visited' → logprob: -10.502943992614746
    8. ' seen' → logprob: -12.127943992614746
    9. 'import' → logprob: -12.377943992614746
    10. '```' → logprob: -13.252943992614746

Token 371: ' seen' (ID: 6177)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.00756119517609477
    2. 'seen' (adapté à ' seen') → logprob: -5.507561206817627
    3. '   ' → logprob: -6.007561206817627
    4. ' stack' → logprob: -7.632561206817627
    5. 'from' → logprob: -7.757561206817627
    6. 'visited' → logprob: -10.007560729980469
    7. 'import' → logprob: -10.132560729980469
    8. ' seen' → logprob: -12.382560729980469
    9. '	stack' → logprob: -12.507560729980469
    10. 'stk' → logprob: -12.507560729980469

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10181780159473419
    2. '=' → logprob: -2.3518178462982178
    3. ',' → logprob: -6.476817607879639
    4. '[' → logprob: -10.976818084716797
    5. '   ' → logprob: -11.101818084716797
    6. ')' → logprob: -11.101818084716797
    7. ' ' → logprob: -11.726818084716797
    8. '  ' → logprob: -12.976818084716797
    9. ' ,' → logprob: -12.976818084716797
    10. ' =[' → logprob: -13.601818084716797

Token 373: ' setup' (ID: 11064)
  Prédit: 'setup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'setup' → logprob: -0.14259421825408936
    2. '[' → logprob: -2.517594337463379
    3. ' setup' → logprob: -3.142594337463379
    4. ' [' → logprob: -4.767594337463379
    5. '   ' → logprob: -7.642594337463379
    6. '[t' → logprob: -10.267594337463379
    7. '	setup' → logprob: -10.892594337463379
    8. ' ' → logprob: -11.392594337463379
    9. '[start' → logprob: -11.642594337463379
    10. '.setup' → logprob: -12.892594337463379

Token 374: '_seen' (ID: 158839)
  Prédit: '_seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seen' → logprob: -0.0002346488763578236
    2. 'seen' → logprob: -8.375234603881836
    3. '_' → logprob: -13.750234603881836
    4. '```' → logprob: -13.875234603881836
    5. '(N' → logprob: -14.875234603881836
    6. '(_' → logprob: -15.000234603881836
    7. '_visible' → logprob: -15.000234603881836
    8. 'Seen' → logprob: -15.125234603881836
    9. 's' → logprob: -15.750234603881836
    10. '_se' → logprob: -15.750234603881836

Token 375: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -5.2166411478538066e-05
    2. '(' → logprob: -10.500052452087402
    3. '<|end|>' → logprob: -11.000052452087402
    4. '```' → logprob: -12.250052452087402
    5. ' (' → logprob: -13.875052452087402
    6. ',' → logprob: -14.125052452087402
    7. '(
' → logprob: -15.000052452087402
    8. '(adj' → logprob: -15.625052452087402
    9. 'N' → logprob: -16.000051498413086
    10. '<|end|>' → logprob: -16.250051498413086

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4881879400927573e-05
    2. ',t' → logprob: -10.375035285949707
    3. ' ,' → logprob: -12.625035285949707
    4. '   ' → logprob: -15.375035285949707
    5. ',
' → logprob: -16.50003433227539
    6. '‌,' → logprob: -17.12503433227539
    7. 't' → logprob: -17.37503433227539
    8. ')' → logprob: -17.37503433227539
    9. ' ' → logprob: -18.25003433227539
    10. '```' → logprob: -18.37503433227539

Token 377: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0002613358374219388
    2. ' t' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.500261306762695
    4. '	t' → logprob: -17.000261306762695
    5. '`t' → logprob: -18.625261306762695
    6. ' ' → logprob: -19.375261306762695
    7. '  ' → logprob: -19.625261306762695
    8. '
' → logprob: -20.250261306762695
    9. ')t' → logprob: -20.375261306762695
    10. '_t' → logprob: -20.375261306762695

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ',' → logprob: -13.250003814697266
    3. '_' → logprob: -13.875003814697266
    4. '2' → logprob: -15.500003814697266
    5. 't' → logprob: -15.750003814697266
    6. ' ' → logprob: -16.125003814697266
    7. '   ' → logprob: -16.625003814697266
    8. '```' → logprob: -16.625003814697266
    9. ')' → logprob: -17.812503814697266
    10. '_,' → logprob: -17.875003814697266

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.543733904138207e-05
    2. ',t' → logprob: -9.75009536743164
    3. ' ,' → logprob: -10.25009536743164
    4. '   ' → logprob: -14.37509536743164
    5. ',
' → logprob: -14.87509536743164
    6. '‌,' → logprob: -15.62509536743164
    7. 't' → logprob: -16.25009536743164
    8. ')' → logprob: -17.00009536743164
    9. '```' → logprob: -17.12509536743164
    10. ',b' → logprob: -17.37509536743164

Token 380: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00033558503491804004
    2. ' t' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.000335693359375
    4. '`t' → logprob: -17.500335693359375
    5. '	t' → logprob: -17.625335693359375
    6. ' ' → logprob: -19.250335693359375
    7. '  ' → logprob: -19.875335693359375
    8. ')t' → logprob: -20.000335693359375
    9. '    ' → logprob: -20.500335693359375
    10. '_t' → logprob: -21.125335693359375

Token 381: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016218038217630237
    2. ')' → logprob: -8.750162124633789
    3. ',' → logprob: -13.625162124633789
    4. ' ' → logprob: -14.250162124633789
    5. '```' → logprob: -14.750162124633789
    6. '   ' → logprob: -15.000162124633789
    7. '_' → logprob: -15.625162124633789
    8. 'def' → logprob: -15.625162124633789
    9. '1' → logprob: -16.12516212463379
    10. 't' → logprob: -16.25016212463379

Token 382: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007223221473395824
    2. ')
' → logprob: -7.625722408294678
    3. ',' → logprob: -8.87572193145752
    4. '   ' → logprob: -9.37572193145752
    5. ' )' → logprob: -11.87572193145752
    6. ')
' → logprob: -13.50072193145752
    7. ' ' → logprob: -14.75072193145752
    8. ')

' → logprob: -15.37572193145752
    9. '  ' → logprob: -15.62572193145752
    10. ',)' → logprob: -15.75072193145752

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07838917523622513
    2. ' stack' → logprob: -2.8283891677856445
    3. '
' → logprob: -4.7033891677856445
    4. 'stack' → logprob: -5.7033891677856445
    5. '	stack' → logprob: -5.8283891677856445
    6. '    
' → logprob: -8.078389167785645
    7. ' for' → logprob: -8.203389167785645
    8. '_stack' → logprob: -8.328389167785645
    9. 'for' → logprob: -10.828389167785645
    10. 'Stack' → logprob: -11.328389167785645

Token 384: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.003721576649695635
    2. ' stack' → logprob: -6.128721714019775
    3. '   ' → logprob: -6.753721714019775
    4. 'from' → logprob: -8.253721237182617
    5. 'import' → logprob: -9.503721237182617
    6. 'for' → logprob: -10.878721237182617
    7. 'stk' → logprob: -12.128721237182617
    8. '	stack' → logprob: -12.253721237182617
    9. '_stack' → logprob: -13.503721237182617
    10. 'Stack' → logprob: -13.878721237182617

Token 385: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003645210759714246
    2. '=' → logprob: -5.628645420074463
    3. '=[]' → logprob: -10.378644943237305
    4. '.append' → logprob: -11.628644943237305
    5. ' =[' → logprob: -12.753644943237305
    6. '=[' → logprob: -13.253644943237305
    7. '=[]
' → logprob: -15.378644943237305
    8. '[:]' → logprob: -15.878644943237305
    9. '[]' → logprob: -16.878644943237305
    10. '[' → logprob: -16.878644943237305

Token 386: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.03849916160106659
    2. '[' → logprob: -3.913499116897583
    3. '[]' → logprob: -4.663499355316162
    4. '[(' → logprob: -5.538499355316162
    5. 'adj' → logprob: -6.038499355316162
    6. ' [' → logprob: -6.538499355316162
    7. '[top' → logprob: -8.788498878479004
    8. '[node' → logprob: -9.413498878479004
    9. '[s' → logprob: -10.038498878479004
    10. '[n' → logprob: -10.413498878479004

Token 387: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002514539286494255
    2. '(t' → logprob: -6.127514362335205
    3. '1' → logprob: -9.252514839172363
    4. '(' → logprob: -9.377514839172363
    5. ']' → logprob: -10.252514839172363
    6. 'adj' → logprob: -10.627514839172363
    7. '[t' → logprob: -10.877514839172363
    8. ' t' → logprob: -11.127514839172363
    9. 'i' → logprob: -11.877514839172363
    10. ']
' → logprob: -11.877514839172363

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002309408038854599
    2. '2' → logprob: -6.127309322357178
    3. 't' → logprob: -9.752309799194336
    4. '_' → logprob: -11.002309799194336
    5. ']' → logprob: -11.002309799194336
    6. ')' → logprob: -11.939809799194336
    7. '(' → logprob: -12.002309799194336
    8. '[' → logprob: -12.564809799194336
    9. '(t' → logprob: -12.752309799194336
    10. '
' → logprob: -13.064809799194336

Token 389: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029154305811971426
    2. ' ]' → logprob: -6.377915382385254
    3. ']
' → logprob: -6.752915382385254
    4. ',' → logprob: -11.002915382385254
    5. '   ' → logprob: -11.752915382385254
    6. '
' → logprob: -12.752915382385254
    7. ' ]
' → logprob: -12.877915382385254
    8. '+' → logprob: -13.377915382385254
    9. ':]' → logprob: -13.377915382385254
    10. ']
' → logprob: -13.502915382385254

Token 390: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02227316051721573
    2. '   ' → logprob: -4.647273063659668
    3. '    
' → logprob: -5.397273063659668
    4. '<|end|>' → logprob: -5.772273063659668
    5. '  
' → logprob: -6.647273063659668
    6. '\n' → logprob: -7.272273063659668
    7. '```' → logprob: -7.272273063659668
    8. ' 
' → logprob: -7.397273063659668
    9. '' → logprob: -8.647273063659668
    10. '<|end|>' → logprob: -8.772273063659668

Token 391: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.30997154116630554
    2. ' while' → logprob: -1.434971570968628
    3. '   ' → logprob: -3.684971570968628
    4. '	while' → logprob: -6.184971332550049
    5. 'idx' → logprob: -8.434971809387207
    6. ' ' → logprob: -8.684971809387207
    7. '    
' → logprob: -8.684971809387207
    8. ')' → logprob: -8.934971809387207
    9. '```' → logprob: -9.184971809387207
    10. 'index' → logprob: -9.684971809387207

Token 392: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.03804286941885948
    2. ' stack' → logprob: -3.2880427837371826
    3. '	stack' → logprob: -13.788043022155762
    4. 'len' → logprob: -15.663043022155762
    5. '(stack' → logprob: -15.663043022155762
    6. ' ' → logprob: -18.163042068481445
    7. 'Stack' → logprob: -18.663042068481445
    8. 'st' → logprob: -18.913042068481445
    9. '
' → logprob: -19.038042068481445
    10. '   ' → logprob: -19.163042068481445

Token 393: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00460386136546731
    2. '[-' → logprob: -6.004603862762451
    3. ':
' → logprob: -6.754603862762451
    4. '.pop' → logprob: -7.004603862762451
    5. '):' → logprob: -11.629603385925293
    6. 'and' → logprob: -11.629603385925293
    7. ' and' → logprob: -11.754603385925293
    8. '.append' → logprob: -11.754603385925293
    9. 'pop' → logprob: -12.629603385925293
    10. '[' → logprob: -12.629603385925293

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014994330704212189
    2. '   ' → logprob: -5.014994144439697
    3. ' v' → logprob: -5.764994144439697
    4. ' node' → logprob: -6.014994144439697
    5. 'v' → logprob: -6.514994144439697
    6. 'node' → logprob: -7.389994144439697
    7. '    ' → logprob: -8.639994621276855
    8. ' current' → logprob: -9.389994621276855
    9. '```' → logprob: -9.389994621276855
    10. ' u' → logprob: -10.389994621276855

Token 395: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1950540691614151
    2. 'v' (adapté à ' v') → logprob: -1.945054054260254
    3. 'node' → logprob: -3.945054054260254
    4. ' u' → logprob: -4.695054054260254
    5. ' node' → logprob: -5.695054054260254
    6. 'cur' → logprob: -6.945054054260254
    7. ' v' → logprob: -6.945054054260254
    8. 'curr' → logprob: -8.695054054260254
    9. '   ' → logprob: -9.195054054260254
    10. 'current' → logprob: -9.195054054260254

Token 396: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012510236352682114
    2. '=' → logprob: -4.387510299682617
    3. '   ' → logprob: -16.262510299682617
    4. ' ' → logprob: -16.262510299682617
    5. '.pop' → logprob: -16.387510299682617
    6. '=v' → logprob: -16.762510299682617
    7. ')' → logprob: -17.137510299682617
    8. ',' → logprob: -17.137510299682617
    9. '    ' → logprob: -17.387510299682617
    10. ' =
' → logprob: -17.512510299682617

Token 397: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.1002068892121315
    2. ' stack' → logprob: -2.3502068519592285
    3. '	stack' → logprob: -15.350207328796387
    4. '(stack' → logprob: -16.97520637512207
    5. '   ' → logprob: -18.97520637512207
    6. '.stack' → logprob: -19.10020637512207
    7. 'pop' → logprob: -19.22520637512207
    8. ' ' → logprob: -19.85020637512207
    9. '_stack' → logprob: -20.60020637512207
    10. 'Stack' → logprob: -20.60020637512207

Token 398: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.292907877039397e-06
    2. 'pop' → logprob: -13.00000286102295
    3. '[-' → logprob: -14.00000286102295
    4. '.' → logprob: -16.500003814697266
    5. '   ' → logprob: -19.375003814697266
    6. ' pop' → logprob: -20.125003814697266
    7. ' .' → logprob: -20.625003814697266
    8. '_pop' → logprob: -21.125003814697266
    9. 'Pop' → logprob: -21.500003814697266
    10. '.p' → logprob: -21.750003814697266

Token 399: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20153416693210602
    2. '()
' → logprob: -1.7015341520309448
    3. ')' → logprob: -10.076534271240234
    4. '(' → logprob: -10.576534271240234
    5. '   ' → logprob: -11.451534271240234
    6. '       ' → logprob: -11.451534271240234
    7. ')
' → logprob: -12.076534271240234
    8. '()
' → logprob: -12.451534271240234
    9. '
' → logprob: -12.576534271240234
    10. ' ()' → logprob: -12.701534271240234

Token 400: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0816510915756226
    2. '       ' → logprob: -1.0816510915756226
    3. ' 
' → logprob: -2.331651210784912
    4. '<|end|>' → logprob: -2.456651210784912
    5. '
' → logprob: -2.831651210784912
    6. ' for' → logprob: -3.456651210784912
    7. '    
' → logprob: -4.081651210784912
    8. '  
' → logprob: -4.581651210784912
    9. '        
' → logprob: -4.831651210784912
    10. ' if' → logprob: -5.706651210784912

Token 401: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011692718835547566
    2. ' for' → logprob: -7.251169204711914
    3. 'if' → logprob: -8.001169204711914
    4. '   ' → logprob: -9.001169204711914
    5. ' if' → logprob: -14.751169204711914
    6. '       ' → logprob: -15.001169204711914
    7. '	for' → logprob: -17.126169204711914
    8. '```' → logprob: -17.251169204711914
    9. '
' → logprob: -17.626169204711914
    10. '    
' → logprob: -18.501169204711914

Token 402: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5203350186347961
    2. 'w' → logprob: -1.0203349590301514
    3. 'nv' → logprob: -3.8953349590301514
    4. 'nx' → logprob: -5.0203351974487305
    5. 'x' → logprob: -5.5203351974487305
    6. ' u' → logprob: -5.5203351974487305
    7. ' w' → logprob: -5.7703351974487305
    8. 'n' → logprob: -6.1453351974487305
    9. 'to' → logprob: -6.2703351974487305
    10. ' nxt' → logprob: -6.6453351974487305

Token 403: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995132565498352
    2. 'in' → logprob: -2.694951295852661
    3. '	in' → logprob: -11.694951057434082
    4. ' ' → logprob: -12.319951057434082
    5. ',' → logprob: -14.319951057434082
    6. 's' → logprob: -15.569951057434082
    7. ' ' → logprob: -15.569951057434082
    8. 'import' → logprob: -15.944951057434082
    9. ',in' → logprob: -15.944951057434082
    10. 'n' → logprob: -16.0699520111084

Token 404: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0009120595059357584
    2. ' adj' → logprob: -7.000912189483643
    3. 'ad' → logprob: -15.250911712646484
    4. '(adj' → logprob: -15.375911712646484
    5. '   ' → logprob: -18.375911712646484
    6. 'adm' → logprob: -19.875911712646484
    7. 'Adj' → logprob: -20.125911712646484
    8. 'aj' → logprob: -20.625911712646484
    9. '_adj' → logprob: -21.250911712646484
    10. '[' → logprob: -22.375911712646484

Token 405: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.750001907348633
    3. '[u' → logprob: -14.500001907348633
    4. 'v' → logprob: -15.750001907348633
    5. ' [' → logprob: -19.375001907348633
    6. '<v' → logprob: -20.250001907348633
    7. '[V' → logprob: -20.375001907348633
    8. '][' → logprob: -20.875001907348633
    9. '```' → logprob: -21.250001907348633
    10. '[
' → logprob: -21.625001907348633

Token 406: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0004192330234218389
    2. ']:
' → logprob: -8.000419616699219
    3. ']' → logprob: -9.625419616699219
    4. ':' → logprob: -11.375419616699219
    5. ']:
' → logprob: -12.625419616699219
    6. ']>' → logprob: -13.750419616699219
    7. ']:

' → logprob: -14.875419616699219
    8. ' ]' → logprob: -15.000419616699219
    9. '):' → logprob: -15.125419616699219
    10. '>:' → logprob: -15.375419616699219

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01757897436618805
    2. '<|end|>' → logprob: -5.517579078674316
    3. '	       ' → logprob: -5.642579078674316
    4. '        ' → logprob: -5.642579078674316
    5. ' if' → logprob: -5.767579078674316
    6. '       ' → logprob: -6.642579078674316
    7. '            ' → logprob: -8.142579078674316
    8. ',' → logprob: -8.267579078674316
    9. ' ' → logprob: -8.267579078674316
    10. '               ' → logprob: -8.517579078674316

Token 408: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37952151894569397
    2. '               ' → logprob: -1.7545214891433716
    3. ' ' → logprob: -2.004521608352661
    4. 'if' (adapté à ' if') → logprob: -6.129521369934082
    5. '       ' → logprob: -6.379521369934082
    6. '<|end|>' → logprob: -7.004521369934082
    7. '                ' → logprob: -7.629521369934082
    8. ' 
' → logprob: -7.879521369934082
    9. '        ' → logprob: -7.879521369934082
    10. '    ' → logprob: -8.004521369934082

Token 409: ' seen' (ID: 6177)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7772876620292664
    2. 'not' → logprob: -0.9022876620292664
    3. 'seen' → logprob: -2.277287721633911
    4. ' seen' → logprob: -3.527287721633911
    5. ' u' → logprob: -6.527287483215332
    6. 'u' → logprob: -7.027287483215332
    7. '!' → logprob: -9.402287483215332
    8. '   ' → logprob: -9.589787483215332
    9. 'se' → logprob: -9.652287483215332
    10. '	not' → logprob: -10.152287483215332

Token 410: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.141186450899113e-05
    2. '[' → logprob: -10.875020980834961
    3. ' [' → logprob: -13.125020980834961
    4. '[v' → logprob: -15.500020980834961
    5. 'u' → logprob: -16.00002098083496
    6. ' u' → logprob: -17.37502098083496
    7. '[
' → logprob: -17.62502098083496
    8. '<u' → logprob: -18.25002098083496
    9. '[user' → logprob: -18.62502098083496
    10. '```' → logprob: -18.62502098083496

Token 411: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5094088315963745
    2. ']==' → logprob: -1.0094088315963745
    3. '==' → logprob: -3.384408950805664
    4. ' ==' → logprob: -7.384408950805664
    5. '']==' → logprob: -10.009408950805664
    6. '   ' → logprob: -10.259408950805664
    7. ')==' → logprob: -10.384408950805664
    8. ')' → logprob: -10.634408950805664
    9. ' ]' → logprob: -11.009408950805664
    10. ']<' → logprob: -12.009408950805664

Token 412: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1129336953163147
    2. ' ==' → logprob: -2.23793363571167
    3. ']==' → logprob: -9.612934112548828
    4. '==
' → logprob: -11.737934112548828
    5. ' ' → logprob: -12.112934112548828
    6. '=' → logprob: -12.362934112548828
    7. '<' → logprob: -12.362934112548828
    8. ')==' → logprob: -12.487934112548828
    9. ':' → logprob: -12.487934112548828
    10. ']' → logprob: -12.612934112548828

Token 413: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -16.375030517578125
    4. '2' → logprob: -17.250030517578125
    5. '   ' → logprob: -18.125030517578125
    6. 'False' → logprob: -18.625030517578125
    7. '  ' → logprob: -18.937530517578125
    8. '۰' → logprob: -19.125030517578125
    9. '    ' → logprob: -19.937530517578125
    10. '```' → logprob: -20.250030517578125

Token 414: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -14.750008583068848
    4. '2' → logprob: -16.00000762939453
    5. 'False' → logprob: -16.37500762939453
    6. '   ' → logprob: -17.68750762939453
    7. '۰' → logprob: -18.87500762939453
    8. '  ' → logprob: -19.25000762939453
    9. '```' → logprob: -19.37500762939453
    10. '
' → logprob: -19.75000762939453

Token 415: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2534142732620239
    2. ' and' → logprob: -2.0034141540527344
    3. ':
' → logprob: -2.5034141540527344
    4. '<|end|>' → logprob: -5.878414154052734
    5. '               ' → logprob: -6.128414154052734
    6. 'and' → logprob: -7.628414154052734
    7. '           ' → logprob: -8.003414154052734
    8. ' ' → logprob: -8.128414154052734
    9. ' :
' → logprob: -8.503414154052734
    10. ')' → logprob: -8.878414154052734

Token 416: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001266613689949736
    2. '<|end|>' → logprob: -10.375126838684082
    3. ' seen' → logprob: -10.875126838684082
    4. '           ' → logprob: -11.000126838684082
    5. ',' → logprob: -11.500126838684082
    6. '```' → logprob: -11.625126838684082
    7. '                   ' → logprob: -11.875126838684082
    8. '   ' → logprob: -12.250126838684082
    9. '<|end|>' → logprob: -12.375126838684082
    10. '
' → logprob: -12.625126838684082

Token 417: ' seen' (ID: 6177)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4878543019294739
    2. ' seen' → logprob: -1.487854242324829
    3. '               ' → logprob: -1.987854242324829
    4. 'seen' (adapté à ' seen') → logprob: -4.112854480743408
    5. '   ' → logprob: -5.237854480743408
    6. '           ' → logprob: -7.112854480743408
    7. '                       ' → logprob: -7.987854480743408
    8. '```' → logprob: -9.61285400390625
    9. '       ' → logprob: -9.86285400390625
    10. '                ' → logprob: -9.98785400390625

Token 418: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. 'u' → logprob: -17.375
    4. '[user' → logprob: -19.125
    5. '```' → logprob: -19.5
    6. ' [' → logprob: -20.875
    7. '[v' → logprob: -21.0
    8. '	u' → logprob: -21.875
    9. '[
' → logprob: -22.25
    10. '<u' → logprob: -22.375

Token 419: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21074792742729187
    2. '=' → logprob: -1.7107479572296143
    3. ']=' → logprob: -4.960747718811035
    4. ' =' → logprob: -6.085747718811035
    5. ' ]' → logprob: -12.585747718811035
    6. ')' → logprob: -12.960747718811035
    7. '[' → logprob: -13.960747718811035
    8. ']+=' → logprob: -14.585747718811035
    9. ')=' → logprob: -15.460747718811035
    10. '[u' → logprob: -15.835747718811035

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. '[' → logprob: -17.298587799072266
    4. ' ' → logprob: -17.423587799072266
    5. '=
' → logprob: -17.798587799072266
    6. ']' → logprob: -17.798587799072266
    7. ')' → logprob: -18.048587799072266
    8. ']=' → logprob: -18.423587799072266
    9. '```' → logprob: -19.173587799072266
    10. '<|end|>' → logprob: -19.423587799072266

Token 421: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003774670185521245
    2. 'seen' → logprob: -5.878774642944336
    3. ' ' → logprob: -7.503774642944336
    4. 'v' → logprob: -8.503774642944336
    5. '2' → logprob: -9.003774642944336
    6. ' seen' → logprob: -10.003774642944336
    7. '   ' → logprob: -11.378774642944336
    8. 'u' → logprob: -12.066274642944336
    9. 'True' → logprob: -12.378774642944336
    10. 't' → logprob: -12.441274642944336

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017163509037345648
    2. 'v' → logprob: -7.376716136932373
    3. 'seen' → logprob: -7.501716136932373
    4. ' ' → logprob: -8.251716613769531
    5. '2' → logprob: -8.376716613769531
    6. ' seen' → logprob: -11.626716613769531
    7. 't' → logprob: -11.751716613769531
    8. 'u' → logprob: -11.814216613769531
    9. 'True' → logprob: -12.439216613769531
    10. 'stack' → logprob: -12.939216613769531

Token 423: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001052338513545692
    2. '
' → logprob: -7.501052379608154
    3. '			' → logprob: -8.751051902770996
    4. '<|end|>' → logprob: -8.751051902770996
    5. 'stack' → logprob: -9.376051902770996
    6. '                
' → logprob: -10.876051902770996
    7. ',' → logprob: -10.876051902770996
    8. '	stack' → logprob: -11.501051902770996
    9. ' stack' → logprob: -11.501051902770996
    10. '(stack' → logprob: -12.376051902770996

Token 424: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00023250321100931615
    2. 'stack' → logprob: -8.625232696533203
    3. '			' → logprob: -10.875232696533203
    4. '	stack' → logprob: -11.500232696533203
    5. ' stack' → logprob: -12.000232696533203
    6. '<|end|>' → logprob: -12.375232696533203
    7. '       ' → logprob: -13.125232696533203
    8. ',' → logprob: -13.250232696533203
    9. '           ' → logprob: -13.500232696533203
    10. '_stack' → logprob: -13.625232696533203

Token 425: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -1.676292231422849e-05
    2. ' stack' → logprob: -11.000017166137695
    3. '	stack' → logprob: -17.500017166137695
    4. '   ' → logprob: -18.000017166137695
    5. '               ' → logprob: -18.250017166137695
    6. '           ' → logprob: -19.625017166137695
    7. '                   ' → logprob: -20.500017166137695
    8. 'Stack' → logprob: -21.125017166137695
    9. '_stack' → logprob: -21.375017166137695
    10. '       ' → logprob: -21.375017166137695

Token 426: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.625001907348633
    3. '.extend' → logprob: -14.750001907348633
    4. 'append' → logprob: -15.625001907348633
    5. ' .' → logprob: -17.375001907348633
    6. '.push' → logprob: -17.625001907348633
    7. ' append' → logprob: -18.375001907348633
    8. '.app' → logprob: -19.500001907348633
    9. '.Append' → logprob: -19.625001907348633
    10. 'Append' → logprob: -20.500001907348633

Token 427: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.375000953674316
    3. 'u' → logprob: -17.625
    4. '(
' → logprob: -20.5
    5. '[u' → logprob: -20.5
    6. '(U' → logprob: -20.75
    7. '(user' → logprob: -20.875
    8. '	u' → logprob: -21.125
    9. ' (' → logprob: -21.625
    10. '(ui' → logprob: -22.0

Token 428: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.396757089532912e-05
    2. ' )' → logprob: -10.3750638961792
    3. ')
' → logprob: -10.6250638961792
    4. 'u' → logprob: -12.1250638961792
    5. '[u' → logprob: -13.6250638961792
    6. '(u' → logprob: -14.0000638961792
    7. '<|end|>' → logprob: -15.7500638961792
    8. ' u' → logprob: -15.7500638961792
    9. ')v' → logprob: -16.625064849853516
    10. '),' → logprob: -17.000064849853516

Token 429: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6530394554138184
    2. 'return' (adapté à ' return') → logprob: -1.2780394554138184
    3. '<|end|>' → logprob: -2.1530394554138184
    4. ' return' → logprob: -2.7780394554138184
    5. '	return' → logprob: -4.278039455413818
    6. ' ' → logprob: -5.653039455413818
    7. '
' → logprob: -7.028039455413818
    8. '    ' → logprob: -7.403039455413818
    9. '  ' → logprob: -7.528039455413818
    10. '\n' → logprob: -7.778039455413818

Token 431: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.006815423723310232
    2. 'any' → logprob: -5.506815433502197
    3. 'all' → logprob: -6.131815433502197
    4. ' seen' → logprob: -8.506814956665039
    5. 'sum' → logprob: -8.631814956665039
    6. 'False' → logprob: -9.506814956665039
    7. 'len' → logprob: -10.256814956665039
    8. 'not' → logprob: -10.631814956665039
    9. '[' → logprob: -11.506814956665039
    10. 'True' → logprob: -11.756814956665039

Token 432: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: ' decide' (ID: 13001)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2336273342370987
    2. 'main' → logprob: -2.1086273193359375
    3. ' find' → logprob: -4.1086273193359375
    4. ' check' → logprob: -4.2336273193359375
    5. ' solve' → logprob: -4.6086273193359375
    6. ' is' → logprob: -4.8586273193359375
    7. ' dfs' → logprob: -4.8586273193359375
    8. ' can' → logprob: -4.9836273193359375
    9. 'solve' → logprob: -5.6086273193359375
    10. ' has' → logprob: -5.6086273193359375

Token 435: '_by' (ID: 8214)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11490023881196976
    2. '_result' → logprob: -3.2399003505706787
    3. '_' → logprob: -4.2399001121521
    4. '_answer' → logprob: -4.3649001121521
    5. '_next' → logprob: -4.4899001121521
    6. '(N' → logprob: -5.2399001121521
    7. '_output' → logprob: -5.3649001121521
    8. '_case' → logprob: -6.1149001121521
    9. '_de' → logprob: -6.4899001121521
    10. '_degree' → logprob: -6.8649001121521

Token 436: '_seen' (ID: 158839)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -1.1305227279663086
    2. '_deg' → logprob: -1.5055227279663086
    3. '_nodes' → logprob: -1.8805227279663086
    4. '_degree' → logprob: -2.0055227279663086
    5. 'nodes' → logprob: -3.2555227279663086
    6. 'degree' → logprob: -3.7555227279663086
    7. '_seen' → logprob: -4.130522727966309
    8. 'adj' → logprob: -4.380522727966309
    9. 'dfs' → logprob: -4.380522727966309
    10. '_d' → logprob: -4.880522727966309

Token 437: '(se' (ID: 19430)
  Prédit: '(adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.03733270242810249
    2. '(' → logprob: -3.412332773208618
    3. '(ad' → logprob: -5.787332534790039
    4. '(def' → logprob: -8.162332534790039
    5. '(_' → logprob: -8.912332534790039
    6. '_(' → logprob: -9.537332534790039
    7. ' (' → logprob: -10.787332534790039
    8. '(N' → logprob: -10.912332534790039
    9. '_adj' → logprob: -10.912332534790039
    10. '_' → logprob: -11.912332534790039

Token 438: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -2.2007883671903983e-05
    2. 'e' → logprob: -11.250021934509277
    3. '[' → logprob: -13.500021934509277
    4. 'een' → logprob: -13.750021934509277
    5. ' en' → logprob: -13.875021934509277
    6. 'ens' → logprob: -13.875021934509277
    7. 'len' → logprob: -14.375021934509277
    8. 'ent' → logprob: -14.375021934509277
    9. '(en' → logprob: -14.375021934509277
    10. 'es' → logprob: -15.250021934509277

Token 439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16202862560749054
    2. '):' → logprob: -1.9120286703109741
    3. '):
' → logprob: -6.912028789520264
    4. ')' → logprob: -7.787028789520264
    5. '[' → logprob: -8.537028312683105
    6. ' ,' → logprob: -9.412028312683105
    7. ',t' → logprob: -10.787028312683105
    8. ',
' → logprob: -11.037028312683105
    9. ' ):' → logprob: -11.537028312683105
    10. ',v' → logprob: -11.912028312683105

Token 440: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6029637455940247
    2. 't' → logprob: -1.8529636859893799
    3. 'nodes' → logprob: -1.8529636859893799
    4. ' nodes' → logprob: -3.10296368598938
    5. ' N' → logprob: -3.35296368598938
    6. ' t' → logprob: -3.97796368598938
    7. 'adj' → logprob: -4.727963924407959
    8. ')' → logprob: -5.227963924407959
    9. 'len' → logprob: -5.477963924407959
    10. '2' → logprob: -5.477963924407959

Token 441: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7095432281494141
    2. '):' → logprob: -0.9595432281494141
    3. '):
' → logprob: -2.084543228149414
    4. ')' → logprob: -8.084543228149414
    5. '):
' → logprob: -8.459543228149414
    6. ' ):' → logprob: -9.584543228149414
    7. ' ,' → logprob: -9.709543228149414
    8. '):

' → logprob: -10.959543228149414
    9. ' ):
' → logprob: -11.709543228149414
    10. '   ' → logprob: -11.959543228149414

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021577725186944008
    2. ' for' → logprob: -4.021577835083008
    3. 'for' → logprob: -5.771577835083008
    4. ' return' → logprob: -8.771577835083008
    5. 'count' → logprob: -9.896577835083008
    6. ' count' → logprob: -10.271577835083008
    7. ' if' → logprob: -10.646577835083008
    8. 'return' → logprob: -11.396577835083008
    9. '    
' → logprob: -11.896577835083008
    10. '```' → logprob: -12.396577835083008

Token 443: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03138259798288345
    2. 'return' → logprob: -3.6563825607299805
    3. '   ' → logprob: -5.4063825607299805
    4. 'if' (adapté à ' if') → logprob: -7.9063825607299805
    5. ' for' → logprob: -8.78138256072998
    6. 'count' → logprob: -10.15638256072998
    7. ' return' → logprob: -11.40638256072998
    8. 'cnt' → logprob: -12.65638256072998
    9. 'def' → logprob: -13.28138256072998
    10. 'nodes' → logprob: -13.40638256072998

Token 444: ' sum' (ID: 4215)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.4182494580745697
    2. 'all' → logprob: -1.293249487876892
    3. ' any' → logprob: -3.6682493686676025
    4. ' all' → logprob: -3.7932493686676025
    5. '0' → logprob: -4.668249607086182
    6. 'seen' → logprob: -5.543249607086182
    7. 'sum' → logprob: -5.668249607086182
    8. '1' → logprob: -6.918249607086182
    9. ' ' → logprob: -7.543249607086182
    10. 'not' → logprob: -7.918249607086182

Token 445: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -5.657694418914616e-05
    2. '(' → logprob: -10.000056266784668
    3. '([' → logprob: -12.000056266784668
    4. 'seen' → logprob: -12.875056266784668
    5. 'se' → logprob: -13.250056266784668
    6. '(i' → logprob: -15.375056266784668
    7. '(s' → logprob: -16.250057220458984
    8. '[' → logprob: -17.250057220458984
    9. '((' → logprob: -17.375057220458984
    10. ' (' → logprob: -17.375057220458984

Token 446: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -2.2007883671903983e-05
    2. 'e' → logprob: -11.375021934509277
    3. '[' → logprob: -12.250021934509277
    4. 'n' → logprob: -12.875021934509277
    5. 'em' → logprob: -14.125021934509277
    6. '(en' → logprob: -14.375021934509277
    7. 'seen' → logprob: -14.500021934509277
    8. 'een' → logprob: -14.750021934509277
    9. 'ed' → logprob: -15.875021934509277
    10. 'end' → logprob: -15.875021934509277

Token 447: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1329469531774521
    2. '[' → logprob: -2.1329469680786133
    3. ')==' → logprob: -5.132946968078613
    4. ')>' → logprob: -9.757946968078613
    5. ' )' → logprob: -11.257946968078613
    6. '==' → logprob: -11.882946968078613
    7. ')!=' → logprob: -12.382946968078613
    8. ')<' → logprob: -12.382946968078613
    9. '(' → logprob: -12.507946968078613
    10. ')>=' → logprob: -13.257946968078613

Token 448: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8970297574996948
    2. ' <' → logprob: -1.5220297574996948
    3. '<' → logprob: -1.6470297574996948
    4. '==' → logprob: -2.0220298767089844
    5. ' !=' → logprob: -3.2720298767089844
    6. '!=' → logprob: -4.897029876708984
    7. '[' → logprob: -6.772029876708984
    8. ' ' → logprob: -7.522029876708984
    9. '>' → logprob: -7.897029876708984
    10. ' >=' → logprob: -8.272029876708984

Token 449: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.022083930671215057
    2. ' N' → logprob: -3.8970839977264404
    3. '2' → logprob: -6.772083759307861
    4. ' ' → logprob: -8.52208423614502
    5. '   ' → logprob: -9.77208423614502
    6. '1' → logprob: -10.39708423614502
    7. '(N' → logprob: -10.52208423614502
    8. '3' → logprob: -10.77208423614502
    9. '4' → logprob: -11.27208423614502
    10. '(' → logprob: -11.52208423614502

Token 450: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025099629536271095
    2. ':
' → logprob: -3.775099515914917
    3. ':return' → logprob: -6.900099754333496
    4. '+' → logprob: -8.150099754333496
    5. ' :' → logprob: -8.775099754333496
    6. '   ' → logprob: -8.900099754333496
    7. '):' → logprob: -9.025099754333496
    8. ' or' → logprob: -10.400099754333496
    9. ' :
' → logprob: -10.650099754333496
    10. ')' → logprob: -10.775099754333496

Token 451: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6106498837471008
    2. ':
' → logprob: -1.360649824142456
    3. '   ' → logprob: -1.860649824142456
    4. '       ' → logprob: -3.485649824142456
    5. ' :
' → logprob: -5.610650062561035
    6. ':return' → logprob: -5.860650062561035
    7. ' :' → logprob: -5.985650062561035
    8. ' return' → logprob: -6.485650062561035
    9. '    ' → logprob: -6.985650062561035
    10. '
' → logprob: -7.235650062561035

Token 452: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9211147427558899
    2. '   ' → logprob: -1.2961146831512451
    3. ' return' → logprob: -1.5461146831512451
    4. 'return' → logprob: -2.171114683151245
    5. '           ' → logprob: -6.921114921569824
    6. '	return' → logprob: -9.421114921569824
    7. ' ' → logprob: -9.921114921569824
    8. '
' → logprob: -10.921114921569824
    9. '```' → logprob: -11.171114921569824
    10. '  ' → logprob: -11.671114921569824

Token 453: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.15816830098628998
    2. '('' → logprob: -2.283168315887451
    3. '(' → logprob: -3.908168315887451
    4. '"No' → logprob: -4.408168315887451
    5. 'No' → logprob: -5.408168315887451
    6. '"' → logprob: -6.408168315887451
    7. '(-' → logprob: -6.783168315887451
    8. '(No' → logprob: -6.908168315887451
    9. 'NO' → logprob: -7.033168315887451
    10. '(no' → logprob: -7.158168315887451

Token 454: 'Yes' (ID: 13022)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.04479548707604408
    2. 'NO' → logprob: -3.419795513153076
    3. 'no' → logprob: -5.419795513153076
    4. '"No' → logprob: -5.919795513153076
    5. ''' → logprob: -6.919795513153076
    6. '"' → logprob: -7.419795513153076
    7. 'Yes' → logprob: -7.919795513153076
    8. 'None' → logprob: -7.919795513153076
    9. 'N' → logprob: -8.294795036315918
    10. 'Impossible' → logprob: -8.294795036315918

Token 455: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005406642332673073
    2. '')
' → logprob: -5.255406856536865
    3. ')' → logprob: -9.255406379699707
    4. '')
' → logprob: -10.130406379699707
    5. '")' → logprob: -10.755406379699707
    6. '!' → logprob: -12.005406379699707
    7. ''' → logprob: -12.505406379699707
    8. '\n' → logprob: -13.005406379699707
    9. '()' → logprob: -14.255406379699707
    10. '')

' → logprob: -14.630406379699707

Token 456: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0631633773446083
    2. '   ' → logprob: -2.8131632804870605
    3. '
' → logprob: -6.9381632804870605
    4. '<|end|>' → logprob: -9.188163757324219
    5. ' else' → logprob: -9.813163757324219
    6. 'else' → logprob: -10.688163757324219
    7. '           ' → logprob: -11.563163757324219
    8. ',' → logprob: -11.813163757324219
    9. '    
' → logprob: -12.188163757324219
    10. '<|end|>' → logprob: -12.813163757324219

Token 457: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7707676887512207
    2. ' else' → logprob: -1.1457676887512207
    3. '   ' → logprob: -1.5207676887512207
    4. 'elif' → logprob: -8.145767211914062
    5. ' ' → logprob: -8.895767211914062
    6. '	else' → logprob: -9.020767211914062
    7. '<|end|>' → logprob: -9.270767211914062
    8. ' elif' → logprob: -9.520767211914062
    9. '
' → logprob: -10.770767211914062
    10. ',' → logprob: -11.395767211914062

Token 458: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05827714130282402
    2. ':
' → logprob: -3.308277130126953
    3. ':' → logprob: -3.933277130126953
    4. '   ' → logprob: -7.933277130126953
    5. '      ' → logprob: -10.308277130126953
    6. ' :
' → logprob: -11.183277130126953
    7. '     ' → logprob: -11.433277130126953
    8. 'print' → logprob: -12.308277130126953
    9. '```' → logprob: -12.558277130126953
    10. '           ' → logprob: -12.683277130126953

Token 459: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5248937010765076
    2. '   ' → logprob: -1.2748937606811523
    3. '       ' → logprob: -2.2748937606811523
    4. ' print' → logprob: -3.6498937606811523
    5. '	print' → logprob: -9.274893760681152
    6. ' ' → logprob: -11.274893760681152
    7. '     ' → logprob: -12.774893760681152
    8. '  ' → logprob: -13.274893760681152
    9. '```' → logprob: -13.399893760681152
    10. '    ' → logprob: -13.774893760681152

Token 460: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.981667537620524e-06
    2. ' print' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.375001907348633
    4. '	print' → logprob: -21.125001907348633
    5. '```' → logprob: -21.875001907348633
    6. 'pass' → logprob: -22.750001907348633
    7. 'prin' → logprob: -23.000001907348633
    8. 'prit' → logprob: -23.500001907348633
    9. ' ' → logprob: -23.500001907348633
    10. '
' → logprob: -23.750001907348633

Token 461: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0021965294145047665
    2. '(' → logprob: -6.127196311950684
    3. '(
' → logprob: -11.627196311950684
    4. '("' → logprob: -14.002196311950684
    5. ' ('' → logprob: -14.127196311950684
    6. '('(' → logprob: -14.377196311950684
    7. '(('' → logprob: -16.252197265625
    8. '(

' → logprob: -16.377197265625
    9. '("("' → logprob: -17.127197265625
    10. ' (' → logprob: -17.252197265625

Token 462: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0019330393988639116
    2. ''' → logprob: -6.2519330978393555
    3. '"No' → logprob: -13.001933097839355
    4. '   ' → logprob: -13.876933097839355
    5. ' No' → logprob: -14.501933097839355
    6. ' ' → logprob: -15.376933097839355
    7. 'Yes' → logprob: -15.626933097839355
    8. 'NO' → logprob: -15.876933097839355
    9. '('' → logprob: -16.62693214416504
    10. '  ' → logprob: -17.62693214416504

Token 463: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0005947356694377959
    2. ')' → logprob: -7.500594615936279
    3. '')
' → logprob: -10.125595092773438
    4. '")' → logprob: -13.375595092773438
    5. '()' → logprob: -17.875595092773438
    6. ')
' → logprob: -18.000595092773438
    7. '   ' → logprob: -18.125595092773438
    8. ''' → logprob: -18.125595092773438
    9. '}')' → logprob: -18.125595092773438
    10. '```' → logprob: -18.375595092773438

Token 464: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01271152961999178
    2. '<|end|>' → logprob: -4.762711524963379
    3. 't' → logprob: -6.887711524963379
    4. 'if' → logprob: -7.262711524963379
    5. '#' → logprob: -7.262711524963379
    6. 'for' → logprob: -7.512711524963379
    7. '```' → logprob: -7.637711524963379
    8. '
' → logprob: -9.137711524963379
    9. 'adj' → logprob: -9.137711524963379
    10. '<|end|>' → logprob: -9.262711524963379

Token 465: ' early' (ID: 6047)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6975276470184326
    2. 'main' → logprob: -0.6975276470184326
    3. 'def' → logprob: -5.447527885437012
    4. ' def' → logprob: -9.697527885437012
    5. 'solve' → logprob: -13.572527885437012
    6. ' solve' → logprob: -14.697527885437012
    7. 'm' → logprob: -15.947527885437012
    8. 'process' → logprob: -15.947527885437012
    9. '__' → logprob: -16.572526931762695
    10. '_main' → logprob: -16.572526931762695

Token 466: '_exit' (ID: 41242)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010740168392658234
    2. '_yes' → logprob: -5.260740280151367
    3. '_continue' → logprob: -6.260740280151367
    4. '_check' → logprob: -7.010740280151367
    5. '_stop' → logprob: -7.760740280151367
    6. '_return' → logprob: -7.760740280151367
    7. '_easy' → logprob: -8.385740280151367
    8. '_no' → logprob: -8.385740280151367
    9. '_def' → logprob: -9.010740280151367
    10. '_if' → logprob: -9.010740280151367

Token 467: '(result' (ID: 8111)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.49752023816108704
    2. '(' → logprob: -1.1225202083587646
    3. ' (' → logprob: -3.4975202083587646
    4. '_' → logprob: -4.622520446777344
    5. ' ():' → logprob: -4.997520446777344
    6. '(N' → logprob: -5.372520446777344
    7. ':' → logprob: -5.372520446777344
    8. '(_' → logprob: -5.872520446777344
    9. '('_' → logprob: -7.122520446777344
    10. '_if' → logprob: -7.372520446777344

Token 468: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11445146799087524
    2. '):' → logprob: -2.2394514083862305
    3. ')' → logprob: -7.2394514083862305
    4. ' ,' → logprob: -8.23945140838623
    5. '_,' → logprob: -9.11445140838623
    6. '):
' → logprob: -9.36445140838623
    7. ',result' → logprob: -9.36445140838623
    8. ',_' → logprob: -9.48945140838623
    9. '_' → logprob: -9.73945140838623
    10. ''):' → logprob: -9.98945140838623

Token 469: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036458070389926434
    2. ':' → logprob: -5.628645896911621
    3. ':
' → logprob: -11.378645896911621
    4. ' if' → logprob: -12.003645896911621
    5. '```' → logprob: -12.253645896911621
    6. '():' → logprob: -12.878645896911621
    7. ':return' → logprob: -12.878645896911621
    8. '):' → logprob: -13.003645896911621
    9. 'def' → logprob: -13.003645896911621
    10. ',' → logprob: -13.128645896911621

Token 470: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40294790267944336
    2. '   ' → logprob: -1.1529479026794434
    3. ' if' → logprob: -4.152947902679443
    4. 'return' → logprob: -8.527948379516602
    5. 'print' (adapté à ' print') → logprob: -11.652948379516602
    6. 'pass' → logprob: -11.777948379516602
    7. ' return' → logprob: -11.777948379516602
    8. '```' → logprob: -12.152948379516602
    9. ' pass' → logprob: -13.527948379516602
    10. 'import' → logprob: -13.527948379516602

Token 471: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4061892628669739
    2. '('' → logprob: -1.281189203262329
    3. '(result' → logprob: -3.531189203262329
    4. '()' → logprob: -3.656189203262329
    5. '("' → logprob: -7.906189441680908
    6. '("("' → logprob: -8.78118896484375
    7. 'result' → logprob: -9.28118896484375
    8. '(None' → logprob: -9.78118896484375
    9. '(
' → logprob: -9.90618896484375
    10. '("")' → logprob: -10.03118896484375

Token 472: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. '')' → logprob: -12.500005722045898
    3. ' )' → logprob: -14.875005722045898
    4. '()' → logprob: -15.000005722045898
    5. '())' → logprob: -15.000005722045898
    6. ')
' → logprob: -15.125005722045898
    7. '))' → logprob: -15.875005722045898
    8. '")' → logprob: -16.1250057220459
    9. ')`' → logprob: -16.3750057220459
    10. ',' → logprob: -16.7500057220459

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015240294160321355
    2. 'import' → logprob: -7.251523971557617
    3. 'exit' → logprob: -8.126523971557617
    4. '
' → logprob: -8.251523971557617
    5. '<|end|>' → logprob: -9.001523971557617
    6. '    
' → logprob: -9.751523971557617
    7. '```' → logprob: -10.876523971557617
    8. ' exit' → logprob: -11.501523971557617
    9. 'sys' → logprob: -11.501523971557617
    10. '	exit' → logprob: -11.876523971557617

Token 474: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.39560896158218384
    2. 'sys' → logprob: -1.145608901977539
    3. '   ' → logprob: -4.895608901977539
    4. 'return' → logprob: -6.895608901977539
    5. 'import' → logprob: -8.645608901977539
    6. ' sys' → logprob: -10.895608901977539
    7. ' exit' → logprob: -11.520608901977539
    8. '
' → logprob: -13.520608901977539
    9. '```' → logprob: -13.895608901977539
    10. 'raise' → logprob: -14.270608901977539

Token 475: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00290603912435472
    2. '(' → logprob: -5.87790584564209
    3. '()
' → logprob: -9.37790584564209
    4. ' ()' → logprob: -12.25290584564209
    5. '()\' → logprob: -12.50290584564209
    6. '()`' → logprob: -13.00290584564209
    7. '();' → logprob: -14.00290584564209
    8. '()<' → logprob: -14.12790584564209
    9. '()

' → logprob: -14.25290584564209
    10. '()]' → logprob: -14.37790584564209

Token 476: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003428528143558651
    2. 'if' → logprob: -8.000343322753906
    3. '```' → logprob: -11.875343322753906
    4. 'import' → logprob: -14.875343322753906
    5. ' def' → logprob: -16.125343322753906
    6. '\' → logprob: -17.375343322753906
    7. '    
' → logprob: -17.750343322753906
    8. '#' → logprob: -18.000343322753906
    9. 'for' → logprob: -18.125343322753906
    10. '``' → logprob: -18.250343322753906

Token 477: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1607227474451065
    2. 'main' → logprob: -1.9107227325439453
    3. 'def' → logprob: -7.660722732543945
    4. ' def' → logprob: -10.535722732543945
    5. ' solve' → logprob: -15.410722732543945
    6. 'solve' → logprob: -15.660722732543945
    7. '_main' → logprob: -15.910722732543945
    8. ' run' → logprob: -16.285722732543945
    9. 'Main' → logprob: -17.035722732543945
    10. 'import' → logprob: -17.035722732543945

Token 478: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.3856492842023727e-06
    2. ' ():' → logprob: -14.250000953674316
    3. '():
' → logprob: -14.750000953674316
    4. '()' → logprob: -16.250001907348633
    5. '(' → logprob: -16.750001907348633
    6. ':' → logprob: -18.750001907348633
    7. '():
' → logprob: -19.250001907348633
    8. '(":' → logprob: -19.375001907348633
    9. '()>' → logprob: -19.750001907348633
    10. '(:' → logprob: -20.000001907348633

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0281826164573431
    2. ' input' → logprob: -4.278182506561279
    3. 'input' → logprob: -4.278182506561279
    4. '(input' → logprob: -10.278182983398438
    5. ',input' → logprob: -11.778182983398438
    6. ' N' → logprob: -12.403182983398438
    7. '	input' → logprob: -13.403182983398438
    8. '    
' → logprob: -14.028182983398438
    9. '```' → logprob: -14.028182983398438
    10. 'N' → logprob: -14.153182983398438

Token 480: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.00028266964363865554
    2. ' input' → logprob: -8.750282287597656
    3. '   ' → logprob: -9.000282287597656
    4. 'import' → logprob: -14.500282287597656
    5. 'read' → logprob: -16.125282287597656
    6. '_input' → logprob: -17.000282287597656
    7. '	input' → logprob: -17.875282287597656
    8. 'inp' → logprob: -17.875282287597656
    9. 'Input' → logprob: -18.000282287597656
    10. '
' → logprob: -18.375282287597656

Token 481: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.08930550515651703
    2. '()' → logprob: -2.7143054008483887
    3. '_' → logprob: -3.9643054008483887
    4. '_f' → logprob: -10.089305877685547
    5. '_fun' → logprob: -10.339305877685547
    6. '_fn' → logprob: -10.714305877685547
    7. '(' → logprob: -10.714305877685547
    8. 'func' → logprob: -10.964305877685547
    9. '()(' → logprob: -11.214305877685547
    10. '_function' → logprob: -11.589305877685547

Token 482: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6652016639709473
    2. '()' → logprob: -1.4152016639709473
    3. ' =' → logprob: -1.4152016639709473
    4. '(' → logprob: -10.915201187133789
    5. ' ()' → logprob: -11.415201187133789
    6. '()='' → logprob: -11.540201187133789
    7. ')' → logprob: -11.665201187133789
    8. ':' → logprob: -12.540201187133789
    9. 's' → logprob: -13.165201187133789
    10. '=lambda' → logprob: -13.290201187133789

Token 483: ' read' (ID: 1729)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0684233158826828
    2. ' sys' → logprob: -2.818423271179199
    3. 'read' → logprob: -5.068423271179199
    4. ' read' → logprob: -8.9434232711792
    5. '(sys' → logprob: -11.5684232711792
    6. '	sys' → logprob: -13.5684232711792
    7. '=sys' → logprob: -14.1934232711792
    8. 'lambda' → logprob: -15.1934232711792
    9. ' ' → logprob: -16.068424224853516
    10. 'input' → logprob: -17.193424224853516

Token 484: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.010500852949917316
    2. '_' → logprob: -4.635500907897949
    3. '()' → logprob: -8.01050090789795
    4. '_line' → logprob: -8.38550090789795
    5. '_func' → logprob: -9.38550090789795
    6. '(' → logprob: -9.88550090789795
    7. 'input' → logprob: -10.88550090789795
    8. '_inputs' → logprob: -12.13550090789795
    9. '_function' → logprob: -12.38550090789795
    10. '_in' → logprob: -13.01050090789795

Token 485: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.7372048862162046e-05
    2. '()
' → logprob: -10.625027656555176
    3. '()

' → logprob: -13.375027656555176
    4. '()`' → logprob: -15.000027656555176
    5. '())' → logprob: -15.375027656555176
    6. '();' → logprob: -15.625027656555176
    7. '().' → logprob: -15.625027656555176
    8. '()]' → logprob: -16.00002670288086
    9. '(' → logprob: -16.25002670288086
    10. '()"' → logprob: -16.25002670288086

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001778234145604074
    2. '    
' → logprob: -6.8767781257629395
    3. '()' → logprob: -7.3767781257629395
    4. '
' → logprob: -9.501778602600098
    5. ')' → logprob: -11.626778602600098
    6. '    ' → logprob: -11.876778602600098
    7. '(' → logprob: -12.501778602600098
    8. '       ' → logprob: -12.876778602600098
    9. '(N' → logprob: -12.876778602600098
    10. '#' → logprob: -13.126778602600098

Token 487: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0003544118662830442
    2. '   ' → logprob: -8.000354766845703
    3. ' N' → logprob: -10.875354766845703
    4. 'n' → logprob: -17.000354766845703
    5. ' ' → logprob: -17.125354766845703
    6. '	N' → logprob: -17.500354766845703
    7. '  ' → logprob: -17.875354766845703
    8. '```' → logprob: -19.250354766845703
    9. '    
' → logprob: -19.500354766845703
    10. '
' → logprob: -20.000354766845703

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.133198283147067e-05
    2. ',M' → logprob: -10.125051498413086
    3. ' ,' → logprob: -11.625051498413086
    4. ',
' → logprob: -13.375051498413086
    5. ',N' → logprob: -14.500051498413086
    6. '=' → logprob: -16.875051498413086
    7. '   ' → logprob: -17.000051498413086
    8. '‌,' → logprob: -17.000051498413086
    9. ',m' → logprob: -17.125051498413086
    10. ',\
' → logprob: -18.000051498413086

Token 489: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.11292239278554916
    2. 'M' → logprob: -2.237922430038452
    3. ' ' → logprob: -9.862922668457031
    4. '<|end|>' → logprob: -10.237922668457031
    5. ' ' → logprob: -12.487922668457031
    6. ')' → logprob: -12.612922668457031
    7. 'space' → logprob: -13.737922668457031
    8. '    ' → logprob: -13.862922668457031
    9. '_' → logprob: -14.237922668457031
    10. ' 
' → logprob: -14.987922668457031

Token 490: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269301027059555
    2. ' =' → logprob: -2.126929998397827
    3. ',' → logprob: -14.126930236816406
    4. '   ' → logprob: -14.376930236816406
    5. ')' → logprob: -14.626930236816406
    6. '=input' → logprob: -16.126930236816406
    7. '=int' → logprob: -17.251930236816406
    8. ')=' → logprob: -17.501930236816406
    9. '=
' → logprob: -17.876930236816406
    10. '＝' → logprob: -17.876930236816406

Token 491: ' parse' (ID: 8420)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05775327607989311
    2. 'map' → logprob: -3.307753324508667
    3. ' input' → logprob: -4.057753086090088
    4. 'input' → logprob: -6.807753086090088
    5. ' parse' → logprob: -6.932753086090088
    6. 'parse' → logprob: -8.807753562927246
    7. ' ' → logprob: -14.432753562927246
    8. ' tuple' → logprob: -16.05775260925293
    9. ' read' → logprob: -16.68275260925293
    10. '   ' → logprob: -17.30775260925293

Token 492: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.00030197695014066994
    2. '_' → logprob: -9.1253023147583
    3. 'first' → logprob: -9.5003023147583
    4. '(' → logprob: -10.1253023147583
    5. '_input' → logprob: -10.3753023147583
    6. '_(' → logprob: -11.5003023147583
    7. '(N' → logprob: -12.1253023147583
    8. 'First' → logprob: -12.2503023147583
    9. '_func' → logprob: -12.5003023147583
    10. 'input' → logprob: -12.8753023147583

Token 493: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00010533124441280961
    2. '_token' → logprob: -9.500104904174805
    3. 'line' → logprob: -10.500104904174805
    4. '_' → logprob: -13.375104904174805
    5. 'token' → logprob: -14.125104904174805
    6. '_func' → logprob: -15.125104904174805
    7. 'Line' → logprob: -16.625104904174805
    8. '_LINE' → logprob: -16.625104904174805
    9. ' line' → logprob: -16.750104904174805
    10. 'func' → logprob: -17.500104904174805

Token 494: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.73052782076411e-05
    2. '(' → logprob: -9.625067710876465
    3. ' (' → logprob: -13.875067710876465
    4. 'input' → logprob: -16.37506675720215
    5. ',input' → logprob: -16.37506675720215
    6. '(
' → logprob: -17.62506675720215
    7. '=input' → logprob: -17.75006675720215
    8. '()' → logprob: -19.25006675720215
    9. '<input' → logprob: -19.50006675720215
    10. '(import' → logprob: -19.50006675720215

Token 495: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00012248923303559422
    2. ')' → logprob: -9.7501220703125
    3. 'func' → logprob: -9.8751220703125
    4. ')_' → logprob: -12.1251220703125
    5. '_' → logprob: -13.2501220703125
    6. '()' → logprob: -13.6251220703125
    7. '_line' → logprob: -14.1251220703125
    8. '())' → logprob: -14.2501220703125
    9. '_FUNC' → logprob: -14.5001220703125
    10. '_)' → logprob: -15.0001220703125

Token 496: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.541112427134067e-05
    2. '())' → logprob: -9.875075340270996
    3. '()' → logprob: -10.750075340270996
    4. ')
' → logprob: -13.250075340270996
    5. ')#' → logprob: -15.500075340270996
    6. ' )' → logprob: -15.500075340270996
    7. '   ' → logprob: -16.125076293945312
    8. '))' → logprob: -16.625076293945312
    9. '),' → logprob: -17.125076293945312
    10. ')`' → logprob: -17.375076293945312

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004015241749584675
    2. '
' → logprob: -6.2540154457092285
    3. 'adj' → logprob: -7.1290154457092285
    4. '    
' → logprob: -7.3790154457092285
    5. '```' → logprob: -7.3790154457092285
    6. ' adj' → logprob: -11.25401496887207
    7. '<|end|>' → logprob: -12.12901496887207
    8. '``' → logprob: -12.62901496887207
    9. '  
' → logprob: -13.00401496887207
    10. '
' → logprob: -13.75401496887207

Token 498: ' adj' (ID: 20251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6967396140098572
    2. 'adj' (adapté à ' adj') → logprob: -0.8217396140098572
    3. ' adj' → logprob: -3.446739673614502
    4. '
' → logprob: -3.571739673614502
    5. '    
' → logprob: -6.321739673614502
    6. '```' → logprob: -8.696739196777344
    7. ' 
' → logprob: -9.946739196777344
    8. '_adj' → logprob: -10.571739196777344
    9. '(adj' → logprob: -11.071739196777344
    10. '  ' → logprob: -11.321739196777344

Token 499: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014150768518448
    2. '=' → logprob: -1.7014150619506836
    3. ',' → logprob: -13.951415061950684
    4. '=create' → logprob: -15.201415061950684
    5. '[' → logprob: -15.576415061950684
    6. ')' → logprob: -15.701415061950684
    7. '＝' → logprob: -16.451416015625
    8. '.' → logprob: -16.451416015625
    9. '  ' → logprob: -16.951416015625
    10. ' ' → logprob: -17.326416015625

Token 500: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.10020741820335388
    2. ' create' → logprob: -2.3502073287963867
    3. '(create' → logprob: -14.600207328796387
    4. '=create' → logprob: -15.850207328796387
    5. '.create' → logprob: -16.475208282470703
    6. '[]' → logprob: -17.850208282470703
    7. '	create' → logprob: -18.100208282470703
    8. '_create' → logprob: -18.475208282470703
    9. '[' → logprob: -18.475208282470703
    10. 'reate' → logprob: -20.600208282470703

Token 501: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -7.85104202805087e-05
    2. '_adj' → logprob: -9.750078201293945
    3. 'adj' → logprob: -10.875078201293945
    4. '(ad' → logprob: -14.250078201293945
    5. '_' → logprob: -15.125078201293945
    6. 'ad' → logprob: -15.375078201293945
    7. '(adj' → logprob: -16.625078201293945
    8. ' adjacency' → logprob: -16.625078201293945
    9. '```' → logprob: -18.125078201293945
    10. '(' → logprob: -18.625078201293945

Token 502: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.10022532939910889
    2. 'j' → logprob: -2.3502254486083984
    3. 'acency' → logprob: -12.225225448608398
    4. 'jc' → logprob: -12.850225448608398
    5. '(j' → logprob: -12.975225448608398
    6. '[j' → logprob: -13.100225448608398
    7. 'dj' → logprob: -13.350225448608398
    8. 'adj' → logprob: -13.600225448608398
    9. '_j' → logprob: -14.225225448608398
    10. '
' → logprob: -14.350225448608398

Token 503: 'ency' (ID: 2799)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.2623075544834137
    2. 'ency' → logprob: -2.012307643890381
    3. 'cy' → logprob: -2.887307643890381
    4. '[' → logprob: -4.137307643890381
    5. 'n' → logprob: -4.262307643890381
    6. 'y' → logprob: -6.012307643890381
    7. 'list' → logprob: -6.637307643890381
    8. '   ' → logprob: -6.762307643890381
    9. 'c' → logprob: -6.887307643890381
    10. 'acency' → logprob: -7.012307643890381

Token 504: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2113979209971149e-05
    2. 'list' → logprob: -11.375012397766113
    3. 'List' → logprob: -14.750012397766113
    4. '_' → logprob: -17.250011444091797
    5. '```' → logprob: -17.375011444091797
    6. 'adj' → logprob: -17.625011444091797
    7. 'ist' → logprob: -18.125011444091797
    8. '_lists' → logprob: -18.125011444091797
    9. '(_' → logprob: -18.250011444091797
    10. '(N' → logprob: -18.750011444091797

Token 505: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -3.2378600735682994e-05
    2. '(' → logprob: -10.375032424926758
    3. 'N' → logprob: -14.125032424926758
    4. ' (' → logprob: -14.875032424926758
    5. '(
' → logprob: -17.375032424926758
    6. '```' → logprob: -17.375032424926758
    7. '   ' → logprob: -18.500032424926758
    8. '\(' → logprob: -19.125032424926758
    9. '	N' → logprob: -19.500032424926758
    10. '
' → logprob: -19.750032424926758

Token 506: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7968066206085496e-05
    2. ')
' → logprob: -10.500027656555176
    3. ' )' → logprob: -16.500028610229492
    4. '   ' → logprob: -16.625028610229492
    5. '))' → logprob: -16.875028610229492
    6. '),' → logprob: -16.875028610229492
    7. ')
' → logprob: -17.375028610229492
    8. ')#' → logprob: -18.125028610229492
    9. ')

' → logprob: -18.250028610229492
    10. ')`' → logprob: -18.500028610229492

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014844004064798355
    2. 'fill' → logprob: -4.264843940734863
    3. ' fill' → logprob: -7.389843940734863
    4. '	fill' → logprob: -9.764843940734863
    5. '.fill' → logprob: -13.139843940734863
    6. '(fill' → logprob: -13.639843940734863
    7. '```' → logprob: -14.389843940734863
    8. '_fill' → logprob: -14.514843940734863
    9. '   ' → logprob: -15.014843940734863
    10. '  ' → logprob: -15.764843940734863

Token 508: ' fill' (ID: 6954)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' (adapté à ' fill') → logprob: -4.215330409351736e-05
    2. ' fill' → logprob: -10.125041961669922
    3. '   ' → logprob: -13.125041961669922
    4. '	fill' → logprob: -17.250041961669922
    5. '.fill' → logprob: -17.750041961669922
    6. '(fill' → logprob: -18.125041961669922
    7. '```' → logprob: -18.375041961669922
    8. '
' → logprob: -20.000041961669922
    9. ' ' → logprob: -20.000041961669922
    10. '`' → logprob: -20.500041961669922

Token 509: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -4.1557283111615106e-05
    2. 'edges' → logprob: -10.250041961669922
    3. '```' → logprob: -13.125041961669922
    4. '(edges' → logprob: -13.375041961669922
    5. '_' → logprob: -13.875041961669922
    6. '_lines' → logprob: -14.500041961669922
    7. 'Edges' → logprob: -15.500041961669922
    8. '_edge' → logprob: -16.000041961669922
    9. 'fill' → logprob: -16.500041961669922
    10. '(_' → logprob: -16.750041961669922

Token 510: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -8.77627644513268e-06
    2. '(' → logprob: -12.250008583068848
    3. 'adj' → logprob: -12.750008583068848
    4. '(ad' → logprob: -14.250008583068848
    5. ' adj' → logprob: -15.250008583068848
    6. '(ans' → logprob: -17.250009536743164
    7. ' (' → logprob: -17.750009536743164
    8. '(inv' → logprob: -17.750009536743164
    9. '(
' → logprob: -17.875009536743164
    10. '```' → logprob: -18.000009536743164

Token 511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007813957636244595
    2. '(M' → logprob: -7.875781536102295
    3. ',M' → logprob: -8.250781059265137
    4. ')' → logprob: -9.875781059265137
    5. ' ,' → logprob: -10.125781059265137
    6. '(' → logprob: -10.500781059265137
    7. ' (' → logprob: -12.125781059265137
    8. '(adj' → logprob: -12.125781059265137
    9. '   ' → logprob: -12.375781059265137
    10. ',(' → logprob: -13.375781059265137

Token 512: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.2519293427467346
    2. ' M' → logprob: -1.5019292831420898
    3. '   ' → logprob: -15.25192928314209
    4. ' ' → logprob: -17.126930236816406
    5. '    ' → logprob: -18.251930236816406
    6. ')' → logprob: -18.251930236816406
    7. '  ' → logprob: -19.001930236816406
    8. '(M' → logprob: -19.001930236816406
    9. ',M' → logprob: -19.501930236816406
    10. '	M' → logprob: -19.501930236816406

Token 513: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.931863051955588e-05
    2. ',input' → logprob: -9.750059127807617
    3. ' ,' → logprob: -14.125059127807617
    4. 'input' → logprob: -16.625059127807617
    5. '(input' → logprob: -16.750059127807617
    6. ')' → logprob: -17.500059127807617
    7. '=input' → logprob: -18.375059127807617
    8. ',
' → logprob: -19.000059127807617
    9. '```' → logprob: -19.000059127807617
    10. '   ' → logprob: -19.250059127807617

Token 514: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01416350994259119
    2. ' input' → logprob: -4.264163494110107
    3. '(input' → logprob: -17.764163970947266
    4. '_input' → logprob: -19.764163970947266
    5. '<input' → logprob: -20.264163970947266
    6. '=input' → logprob: -20.389163970947266
    7. ',input' → logprob: -20.764163970947266
    8. '[input' → logprob: -20.889163970947266
    9. 'Input' → logprob: -21.264163970947266
    10. '	input' → logprob: -22.014163970947266

Token 515: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.8624639324116288e-06
    2. 'func' → logprob: -13.250001907348633
    3. '```' → logprob: -17.375001907348633
    4. '_FUNC' → logprob: -18.250001907348633
    5. '_function' → logprob: -18.875001907348633
    6. 'Func' → logprob: -18.875001907348633
    7. '_' → logprob: -18.875001907348633
    8. ')' → logprob: -19.000001907348633
    9. ')_' → logprob: -19.000001907348633
    10. '__' → logprob: -20.875001907348633

Token 516: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.500001907348633
    4. ' )' → logprob: -17.125001907348633
    5. '))' → logprob: -18.125001907348633
    6. ')

' → logprob: -18.500001907348633
    7. '())' → logprob: -18.750001907348633
    8. '),' → logprob: -19.000001907348633
    9. ')`' → logprob: -19.625001907348633
    10. '()' → logprob: -19.750001907348633

Token 517: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1644047498703003
    2. 'deg' → logprob: -2.28940486907959
    3. '
' → logprob: -3.28940486907959
    4. ' deg' → logprob: -4.53940486907959
    5. '    
' → logprob: -6.16440486907959
    6. '```' → logprob: -9.53940486907959
    7. '  
' → logprob: -10.16440486907959
    8. '  ' → logprob: -10.53940486907959
    9. '
' → logprob: -11.03940486907959
    10. '   
' → logprob: -11.28940486907959

Token 518: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' (adapté à ' deg') → logprob: -8.537868779967539e-06
    2. '   ' → logprob: -12.000008583068848
    3. ' deg' → logprob: -13.000008583068848
    4. 'degree' → logprob: -16.87500762939453
    5. 'degrees' → logprob: -18.50000762939453
    6. '_deg' → logprob: -20.37500762939453
    7. 'de' → logprob: -20.75000762939453
    8. 'dep' → logprob: -21.12500762939453
    9. ' ' → logprob: -21.62500762939453
    10. '    
' → logprob: -21.75000762939453

Token 519: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023253746330738068
    2. '=' → logprob: -3.7732536792755127
    3. 's' → logprob: -11.898253440856934
    4. 'rees' → logprob: -15.023253440856934
    5. '＝' → logprob: -15.148253440856934
    6. '=create' → logprob: -15.273253440856934
    7. '=e' → logprob: -16.39825439453125
    8. '=[' → logprob: -16.52325439453125
    9. '```' → logprob: -16.64825439453125
    10. '_' → logprob: -16.77325439453125

Token 520: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.011047814972698689
    2. ' calculate' → logprob: -4.511047840118408
    3. '.calculate' → logprob: -17.63604736328125
    4. 'alculate' → logprob: -18.51104736328125
    5. '[' → logprob: -19.01104736328125
    6. 'Calculate' → logprob: -19.38604736328125
    7. 'calcul' → logprob: -19.88604736328125
    8. 'calc' → logprob: -20.01104736328125
    9. 'compute' → logprob: -20.26104736328125
    10. 'c' → logprob: -20.76104736328125

Token 521: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -17.5
    3. 'de' → logprob: -17.5
    4. '```' → logprob: -18.75
    5. '_lengths' → logprob: -19.125
    6. 'degrees' → logprob: -19.375
    7. '_levels' → logprob: -19.375
    8. '_degree' → logprob: -20.0
    9. '_DE' → logprob: -20.25
    10. '_gr' → logprob: -20.875

Token 522: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -0.0067208209075033665
    2. 'g' → logprob: -5.006721019744873
    3. 'eg' → logprob: -13.131720542907715
    4. 'gree' → logprob: -13.631720542907715
    5. 'degrees' → logprob: -13.881720542907715
    6. 'gs' → logprob: -14.506720542907715
    7. 'gr' → logprob: -14.881720542907715
    8. 'gress' → logprob: -15.631720542907715
    9. 'd' → logprob: -15.881720542907715
    10. 'ges' → logprob: -16.63172149658203

Token 523: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -2.570319702499546e-05
    2. 'adj' → logprob: -10.625025749206543
    3. '(ad' → logprob: -14.375025749206543
    4. '(' → logprob: -14.875025749206543
    5. '(de' → logprob: -15.125025749206543
    6. '(ans' → logprob: -16.875024795532227
    7. ' adj' → logprob: -17.000024795532227
    8. '(def' → logprob: -17.125024795532227
    9. ' (' → logprob: -17.875024795532227
    10. 'Adj' → logprob: -18.250024795532227

Token 524: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1677524745464325
    2. '()' → logprob: -1.9177525043487549
    3. '())' → logprob: -4.917752265930176
    4. '()
' → logprob: -9.042752265930176
    5. '   ' → logprob: -10.667752265930176
    6. ' )' → logprob: -10.667752265930176
    7. ')
' → logprob: -11.167752265930176
    8. '())
' → logprob: -14.292752265930176
    9. '()]' → logprob: -14.542752265930176
    10. ' ())' → logprob: -14.667752265930176

Token 525: '   ' (ID: 271)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'status' → logprob: -0.020947644487023354
    2. '   ' → logprob: -4.270947456359863
    3. 'result' → logprob: -5.270947456359863
    4. 'res' → logprob: -6.895947456359863
    5. ' status' → logprob: -7.520947456359863
    6. 'state' → logprob: -10.270947456359863
    7. '```' → logprob: -10.895947456359863
    8. 'stat' → logprob: -12.145947456359863
    9. '_status' → logprob: -13.520947456359863
    10. 'r' → logprob: -13.770947456359863

Token 526: ' status' (ID: 4495)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'status' (adapté à ' status') → logprob: -0.036081984639167786
    2. 'res' → logprob: -4.036081790924072
    3. 'result' → logprob: -4.036081790924072
    4. 'state' → logprob: -9.66108226776123
    5. 'stat' → logprob: -10.78608226776123
    6. 'ret' → logprob: -12.16108226776123
    7. 'ok' → logprob: -12.41108226776123
    8. 'r' → logprob: -12.53608226776123
    9. 'flag' → logprob: -12.66108226776123
    10. 'mode' → logprob: -13.66108226776123

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033522743615321815
    2. '_,' → logprob: -8.125335693359375
    3. ' ,' → logprob: -11.250335693359375
    4. '=' → logprob: -11.625335693359375
    5. ',_' → logprob: -11.750335693359375
    6. ',status' → logprob: -13.000335693359375
    7. '_' → logprob: -13.500335693359375
    8. ' =' → logprob: -14.000335693359375
    9. '‌,' → logprob: -14.000335693359375
    10. 's' → logprob: -14.375335693359375

Token 528: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.018169023096561432
    2. ' nodes' → logprob: -4.018168926239014
    3. 'data' → logprob: -11.518169403076172
    4. '	nodes' → logprob: -12.393169403076172
    5. '_nodes' → logprob: -12.768169403076172
    6. 'result' → logprob: -14.518169403076172
    7. '```' → logprob: -15.143169403076172
    8. ' data' → logprob: -15.518169403076172
    9. '(nodes' → logprob: -15.643169403076172
    10. 'node' → logprob: -15.893169403076172

Token 529: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -1.8312570318812504e-05
    2. '_de' → logprob: -11.500018119812012
    3. '_' → logprob: -12.125018119812012
    4. '_degree' → logprob: -13.750018119812012
    5. '_d' → logprob: -14.625018119812012
    6. '=' → logprob: -14.875018119812012
    7. 'deg' → logprob: -15.000018119812012
    8. '=_' → logprob: -15.250018119812012
    9. ' =' → logprob: -16.500019073486328
    10. '4' → logprob: -16.750019073486328

Token 530: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.25
    3. '```' → logprob: -17.375
    4. '_' → logprob: -17.875
    5. ' ' → logprob: -18.75
    6. '=' → logprob: -19.375
    7. '۴' → logprob: -19.875
    8. '' → logprob: -19.875
    9. '   ' → logprob: -20.5
    10. '٤' → logprob: -20.75

Token 531: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759401917457581
    2. ' =' → logprob: -0.8259401917457581
    3. ' ' → logprob: -15.075940132141113
    4. '_' → logprob: -15.450940132141113
    5. ')' → logprob: -16.07594108581543
    6. 's' → logprob: -16.20094108581543
    7. '```' → logprob: -16.82594108581543
    8. '＝' → logprob: -17.32594108581543
    9. ',' → logprob: -17.95094108581543
    10. '=create' → logprob: -17.95094108581543

Token 532: ' collect' (ID: 7916)
  Prédit: 'collect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collect' → logprob: -0.006715370807796717
    2. ' collect' → logprob: -5.006715297698975
    3. 'col' → logprob: -19.881715774536133
    4. '.collect' → logprob: -20.381715774536133
    5. '_collect' → logprob: -21.381715774536133
    6. 'Collect' → logprob: -23.006715774536133
    7. 'collection' → logprob: -23.631715774536133
    8. 'coll' → logprob: -23.756715774536133
    9. 'check' → logprob: -23.881715774536133
    10. 'collector' → logprob: -24.006715774536133

Token 533: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.00028171599842607975
    2. '_de' → logprob: -8.62528133392334
    3. 'deg' → logprob: -9.25028133392334
    4. '_def' → logprob: -13.25028133392334
    5. '(de' → logprob: -13.37528133392334
    6. '_degree' → logprob: -13.50028133392334
    7. '_' → logprob: -14.87528133392334
    8. 'def' → logprob: -15.25028133392334
    9. '4' → logprob: -15.62528133392334
    10. '('_' → logprob: -16.250282287597656

Token 534: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.751746746478602e-05
    2. '_' → logprob: -10.25004768371582
    3. '```' → logprob: -12.12504768371582
    4. '_nodes' → logprob: -13.87504768371582
    5. '(nodes' → logprob: -14.12504768371582
    6. '_four' → logprob: -14.25004768371582
    7. '   ' → logprob: -14.37504768371582
    8. '(' → logprob: -14.37504768371582
    9. ' ' → logprob: -14.50004768371582
    10. 'nodes' → logprob: -14.50004768371582

Token 535: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.001458808546885848
    2. 'and' → logprob: -7.251458644866943
    3. '_deg' → logprob: -7.876458644866943
    4. '_nodes' → logprob: -8.751459121704102
    5. '(nodes' → logprob: -9.626459121704102
    6. '(de' → logprob: -9.876459121704102
    7. '_status' → logprob: -10.501459121704102
    8. '_' → logprob: -10.751459121704102
    9. '(adj' → logprob: -11.876459121704102
    10. '_de' → logprob: -11.876459121704102

Token 536: '_detect' (ID: 110060)
  Prédit: 'detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'detect' → logprob: -0.00012654215970542282
    2. '_detect' → logprob: -9.000126838684082
    3. ' detect' → logprob: -12.750126838684082
    4. 'det' → logprob: -16.125125885009766
    5. '
' → logprob: -18.250125885009766
    6. 'etect' → logprob: -18.375125885009766
    7. 'Detect' → logprob: -19.250125885009766
    8. 'return' → logprob: -19.875125885009766
    9. '.detect' → logprob: -20.250125885009766
    10. 'decode' → logprob: -20.375125885009766

Token 537: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.643152740551159e-05
    2. 'odd' → logprob: -10.250036239624023
    3. '_od' → logprob: -15.250036239624023
    4. '`' → logprob: -16.250036239624023
    5. '(de' → logprob: -16.625036239624023
    6. '(' → logprob: -16.625036239624023
    7. '```' → logprob: -16.750036239624023
    8. '_even' → logprob: -17.000036239624023
    9. '_deg' → logprob: -17.125036239624023
    10. ' odd' → logprob: -17.125036239624023

Token 538: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.00044473158777691424
    2. '4' → logprob: -8.500444412231445
    3. ' odd' → logprob: -9.000444412231445
    4. 'od' → logprob: -9.250444412231445
    5. '_' → logprob: -11.750444412231445
    6. '```' → logprob: -12.500444412231445
    7. '1' → logprob: -13.500444412231445
    8. ' ' → logprob: -13.750444412231445
    9. 'o' → logprob: -13.875444412231445
    10. 'ord' → logprob: -14.000444412231445

Token 539: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.0033420445397496223
    2. '(' → logprob: -6.503342151641846
    3. 'deg' → logprob: -6.628342151641846
    4. '_deg' → logprob: -8.378341674804688
    5. ',' → logprob: -9.378341674804688
    6. ' (' → logprob: -9.878341674804688
    7. '```' → logprob: -10.253341674804688
    8. '(status' → logprob: -10.378341674804688
    9. '(_,' → logprob: -10.753341674804688
    10. ')' → logprob: -11.378341674804688

Token 540: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0002702760975807905
    2. 'f' → logprob: -8.375269889831543
    3. ' g' → logprob: -12.000269889831543
    4. 'eg' → logprob: -12.375269889831543
    5. '(g' → logprob: -12.500269889831543
    6. 'г' → logprob: -12.625269889831543
    7. '[' → logprob: -12.750269889831543
    8. '[g' → logprob: -12.750269889831543
    9. 'p' → logprob: -13.250269889831543
    10. 'q' → logprob: -13.250269889831543

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000777707842644304
    2. ',N' → logprob: -7.750777721405029
    3. ',input' → logprob: -9.750777244567871
    4. ' ,' → logprob: -9.875777244567871
    5. '   ' → logprob: -10.125777244567871
    6. ',n' → logprob: -10.125777244567871
    7. ')' → logprob: -10.125777244567871
    8. '```' → logprob: -10.500777244567871
    9. '(N' → logprob: -10.875777244567871
    10. '_,' → logprob: -11.000777244567871

Token 542: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019295861711725593
    2. ' N' → logprob: -6.251929759979248
    3. '   ' → logprob: -13.87692928314209
    4. '	N' → logprob: -19.376930236816406
    5. ' ' → logprob: -19.626930236816406
    6. '(N' → logprob: -19.876930236816406
    7. ',N' → logprob: -20.626930236816406
    8. '  ' → logprob: -21.001930236816406
    9. '[N' → logprob: -21.126930236816406
    10. '```' → logprob: -21.126930236816406

Token 543: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019424250058364123
    2. ')
' → logprob: -9.125194549560547
    3. '   ' → logprob: -9.375194549560547
    4. ')
' → logprob: -16.250194549560547
    5. ' )' → logprob: -16.250194549560547
    6. ')`' → logprob: -16.625194549560547
    7. '))' → logprob: -17.250194549560547
    8. ' ' → logprob: -17.375194549560547
    9. '()' → logprob: -17.625194549560547
    10. '),' → logprob: -17.750194549560547

Token 544: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005778160993941128
    2. '
' → logprob: -7.750577926635742
    3. '```' → logprob: -9.500577926635742
    4. '    
' → logprob: -10.250577926635742
    5. ' if' → logprob: -10.875577926635742
    6. 'if' → logprob: -11.125577926635742
    7. '<|end|>' → logprob: -13.500577926635742
    8. 'If' → logprob: -15.125577926635742
    9. '  
' → logprob: -15.250577926635742
    10. '``' → logprob: -15.500577926635742

Token 545: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1623547077178955
    2. 'if' (adapté à ' if') → logprob: -1.9123547077178955
    3. ' if' → logprob: -6.162354469299316
    4. '```' → logprob: -10.787354469299316
    5. '	if' → logprob: -15.537354469299316
    6. 'If' → logprob: -16.037355422973633
    7. '
' → logprob: -17.662355422973633
    8. '    
' → logprob: -17.662355422973633
    9. '``' → logprob: -17.787355422973633
    10. '   ' → logprob: -18.412355422973633

Token 546: ' status' (ID: 4495)
  Prédit: ' status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' status' → logprob: -0.1269282102584839
    2. 'status' → logprob: -2.1269283294677734
    3. '   ' → logprob: -16.001928329467773
    4. ' ' → logprob: -17.126928329467773
    5. '(status' → logprob: -17.501928329467773
    6. '	status' → logprob: -17.876928329467773
    7. '    ' → logprob: -18.126928329467773
    8. '=status' → logprob: -19.626928329467773
    9. ' ' → logprob: -19.751928329467773
    10. '$status' → logprob: -19.876928329467773

Token 547: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20170938968658447
    2. '==' → logprob: -1.7017093896865845
    3. '=='' → logprob: -8.451709747314453
    4. '=' → logprob: -10.451709747314453
    5. ' !=' → logprob: -11.201709747314453
    6. ' =='' → logprob: -11.201709747314453
    7. ''' → logprob: -11.576709747314453
    8. ' ' → logprob: -12.326709747314453
    9. '!=' → logprob: -12.326709747314453
    10. ' ' → logprob: -12.826709747314453

Token 548: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03400871902704239
    2. ' '' → logprob: -3.409008741378784
    3. ''ok' → logprob: -8.659008979797363
    4. ''o' → logprob: -9.159008979797363
    5. '"' → logprob: -10.659008979797363
    6. ' ' → logprob: -11.409008979797363
    7. ''s' → logprob: -11.909008979797363
    8. ''ol' → logprob: -12.034008979797363
    9. ''air' → logprob: -12.534008979797363
    10. ' odd' → logprob: -12.909008979797363

Token 549: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -1.9361264946837764e-07
    2. 'od' → logprob: -16.625
    3. ' odd' → logprob: -18.125
    4. 'o' → logprob: -19.5
    5. 'old' → logprob: -20.25
    6. 'ood' → logprob: -20.5
    7. ''' → logprob: -21.125
    8. '```' → logprob: -21.75
    9. '`' → logprob: -22.0
    10. 'oddi' → logprob: -22.375

Token 550: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.8633154630661011
    2. '':
' → logprob: -0.8633154630661011
    3. ':' → logprob: -2.1133155822753906
    4. '):' → logprob: -4.113315582275391
    5. '):
' → logprob: -4.863315582275391
    6. ':
' → logprob: -4.988315582275391
    7. ')' → logprob: -6.238315582275391
    8. ''):
' → logprob: -6.613315582275391
    9. ''' → logprob: -7.613315582275391
    10. ')':' → logprob: -7.988315582275391

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004179217794444412
    2. '```' → logprob: -9.000417709350586
    3. '
' → logprob: -9.125417709350586
    4. '   ' → logprob: -10.000417709350586
    5. ':
' → logprob: -10.000417709350586
    6. '):
' → logprob: -10.500417709350586
    7. '        
' → logprob: -11.250417709350586
    8. ',' → logprob: -11.500417709350586
    9. 'early' → logprob: -11.750417709350586
    10. ':' → logprob: -11.875417709350586

Token 552: ' early' (ID: 6047)
  Prédit: 'early'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'early' (adapté à ' early') → logprob: -0.053202658891677856
    2. ' early' → logprob: -3.6782026290893555
    3. '       ' → logprob: -4.1782026290893555
    4. '   ' → logprob: -4.5532026290893555
    5. 'ear' → logprob: -8.053202629089355
    6. 'print' → logprob: -8.553202629089355
    7. '```' → logprob: -9.553202629089355
    8. '           ' → logprob: -10.428202629089355
    9. ' print' → logprob: -11.553202629089355
    10. '
' → logprob: -11.553202629089355

Token 553: '_exit' (ID: 41242)
  Prédit: '_exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exit' → logprob: -3.292907877039397e-06
    2. 'exit' → logprob: -12.75000286102295
    3. '_' → logprob: -15.87500286102295
    4. '_EXIT' → logprob: -17.125003814697266
    5. '_return' → logprob: -17.250003814697266
    6. '_print' → logprob: -17.500003814697266
    7. '_out' → logprob: -17.875003814697266
    8. '_continue' → logprob: -18.250003814697266
    9. '_enter' → logprob: -18.625003814697266
    10. '_exception' → logprob: -18.625003814697266

Token 554: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0019764534663408995
    2. '("' → logprob: -6.251976490020752
    3. '(' → logprob: -10.001976013183594
    4. ''' → logprob: -13.626976013183594
    5. '(
' → logprob: -14.501976013183594
    6. ' ('' → logprob: -14.501976013183594
    7. '(('' → logprob: -17.001976013183594
    8. '   ' → logprob: -17.126976013183594
    9. '('\' → logprob: -17.626976013183594
    10. '('"' → logprob: -17.626976013183594

Token 555: 'No' (ID: 3160)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.20199629664421082
    2. 'No' → logprob: -1.7019963264465332
    3. ''' → logprob: -7.576996326446533
    4. 'Odd' → logprob: -10.201995849609375
    5. '"No' → logprob: -11.076995849609375
    6. 'YES' → logprob: -11.826995849609375
    7. '"' → logprob: -12.951995849609375
    8. ' Yes' → logprob: -13.201995849609375
    9. 'NO' → logprob: -13.326995849609375
    10. 'Impossible' → logprob: -13.701995849609375

Token 556: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0032286944333463907
    2. '')
' → logprob: -5.753228664398193
    3. ')' → logprob: -10.003229141235352
    4. '")' → logprob: -13.378229141235352
    5. '')
' → logprob: -13.503229141235352
    6. '\n' → logprob: -13.628229141235352
    7. '()' → logprob: -14.128229141235352
    8. ')')
' → logprob: -14.378229141235352
    9. '')

' → logprob: -15.878229141235352
    10. '')")
' → logprob: -16.00322914123535

Token 557: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021735437214374542
    2. '
' → logprob: -3.896735429763794
    3. '    
' → logprob: -6.896735668182373
    4. '```' → logprob: -9.271735191345215
    5. '<|end|>' → logprob: -9.771735191345215
    6. 'if' → logprob: -10.896735191345215
    7. ' if' → logprob: -12.146735191345215
    8. 'elif' → logprob: -13.521735191345215
    9. '  
' → logprob: -13.646735191345215
    10. '
' → logprob: -14.396735191345215

Token 558: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02671707049012184
    2. '
' → logprob: -3.776717185974121
    3. 'if' (adapté à ' if') → logprob: -6.401717185974121
    4. ' if' → logprob: -6.651717185974121
    5. '    
' → logprob: -8.276717185974121
    6. '```' → logprob: -8.276717185974121
    7. ' 
' → logprob: -13.526717185974121
    8. 'elif' → logprob: -13.776717185974121
    9. 'If' → logprob: -14.401717185974121
    10. '  
' → logprob: -14.651717185974121

Token 559: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.3132668435573578
    2. ' check' → logprob: -1.3132668733596802
    3. 'len' → logprob: -13.06326675415039
    4. ' len' → logprob: -13.18826675415039
    5. 'status' → logprob: -14.93826675415039
    6. '	check' → logprob: -15.06326675415039
    7. ' ' → logprob: -15.81326675415039
    8. ' status' → logprob: -15.81326675415039
    9. '(check' → logprob: -16.06326675415039
    10. '   ' → logprob: -17.06326675415039

Token 560: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.0011711753904819489
    2. '_easy' → logprob: -6.751171112060547
    3. '_' → logprob: -14.376171112060547
    4. '_degree' → logprob: -15.626171112060547
    5. 'easy' → logprob: -15.876171112060547
    6. '_de' → logprob: -16.376171112060547
    7. 'deg' → logprob: -18.251171112060547
    8. '_diag' → logprob: -19.126171112060547
    9. '_grad' → logprob: -19.376171112060547
    10. '_e' → logprob: -19.626171112060547

Token 561: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.741137283621356e-05
    2. '_easy' → logprob: -10.125057220458984
    3. 'easy' → logprob: -11.250057220458984
    4. '_' → logprob: -12.875057220458984
    5. '4' → logprob: -13.750057220458984
    6. 'Easy' → logprob: -14.875057220458984
    7. '```' → logprob: -16.250057220458984
    8. '۶' → logprob: -17.062557220458984
    9. ' easy' → logprob: -17.125057220458984
    10. ' ' → logprob: -17.125057220458984

Token 562: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -5.200166469876422e-06
    2. ' (' → logprob: -12.375004768371582
    3. '(' → logprob: -14.250004768371582
    4. '(def' → logprob: -15.375004768371582
    5. '(d' → logprob: -16.8750057220459
    6. '(DE' → logprob: -18.0000057220459
    7. '(dep' → logprob: -18.1250057220459
    8. '(dec' → logprob: -18.7500057220459
    9. 'deg' → logprob: -18.7500057220459
    10. '(dev' → logprob: -18.8750057220459

Token 563: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.3306015716807451e-05
    2. 'f' → logprob: -11.87501335144043
    3. 'grees' → logprob: -13.25001335144043
    4. 'г' → logprob: -13.87501335144043
    5. ' g' → logprob: -14.00001335144043
    6. 'gree' → logprob: -14.25001335144043
    7. 'eg' → logprob: -14.50001335144043
    8. '(g' → logprob: -14.62501335144043
    9. 'p' → logprob: -15.87501335144043
    10. 'G' → logprob: -16.12501335144043

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001557355048134923
    2. ' ,' → logprob: -7.251557350158691
    3. '):' → logprob: -7.376557350158691
    4. ',de' → logprob: -8.876557350158691
    5. '(de' → logprob: -10.001557350158691
    6. ',
' → logprob: -11.626557350158691
    7. ')' → logprob: -12.001557350158691
    8. ',d' → logprob: -12.501557350158691
    9. 'deg' → logprob: -12.876557350158691
    10. '(' → logprob: -12.876557350158691

Token 565: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0031797364354133606
    2. ' N' → logprob: -5.753179550170898
    3. '   ' → logprob: -14.128179550170898
    4. ')' → logprob: -14.253179550170898
    5. ' ' → logprob: -14.878179550170898
    6. '	N' → logprob: -16.3781795501709
    7. '  ' → logprob: -16.3781795501709
    8. '    ' → logprob: -17.0031795501709
    9. ',N' → logprob: -17.1281795501709
    10. ',' → logprob: -17.8781795501709

Token 566: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017324176151305437
    2. '):
' → logprob: -6.376732349395752
    3. ')' → logprob: -11.12673282623291
    4. ' ):' → logprob: -11.25173282623291
    5. ':' → logprob: -13.37673282623291
    6. '   ' → logprob: -14.62673282623291
    7. '():' → logprob: -14.87673282623291
    8. '):
' → logprob: -16.876731872558594
    9. ' ):
' → logprob: -17.501731872558594
    10. ' ' → logprob: -17.751731872558594

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006958735757507384
    2. ' early' → logprob: -7.875695705413818
    3. '   ' → logprob: -8.500696182250977
    4. 'early' → logprob: -9.125696182250977
    5. '           ' → logprob: -13.625696182250977
    6. '```' → logprob: -13.875696182250977
    7. '      ' → logprob: -14.875696182250977
    8. ' ' → logprob: -14.875696182250977
    9. '     ' → logprob: -15.750696182250977
    10. '    ' → logprob: -16.125696182250977

Token 568: ' early' (ID: 6047)
  Prédit: 'early'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'early' (adapté à ' early') → logprob: -0.06332821398973465
    2. '   ' → logprob: -3.313328266143799
    3. ' early' → logprob: -4.188328266143799
    4. '       ' → logprob: -4.688328266143799
    5. 'print' → logprob: -8.06332778930664
    6. '```' → logprob: -8.43832778930664
    7. '           ' → logprob: -10.81332778930664
    8. '``' → logprob: -11.31332778930664
    9. '        
' → logprob: -11.81332778930664
    10. '    
' → logprob: -11.93832778930664

Token 569: '_exit' (ID: 41242)
  Prédit: '_exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exit' → logprob: -0.00645470479503274
    2. '_' → logprob: -5.1314544677734375
    3. '_return' → logprob: -8.131454467773438
    4. '```' → logprob: -9.631454467773438
    5. '_output' → logprob: -9.881454467773438
    6. '_escape' → logprob: -11.006454467773438
    7. '_space' → logprob: -11.006454467773438
    8. '_out' → logprob: -11.631454467773438
    9. ''_' → logprob: -11.756454467773438
    10. '_continue' → logprob: -11.756454467773438

Token 570: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.771655115589965e-05
    2. '(' → logprob: -11.000018119812012
    3. '("' → logprob: -14.500018119812012
    4. ''' → logprob: -15.000018119812012
    5. ' ('' → logprob: -16.375017166137695
    6. '(True' → logprob: -18.250017166137695
    7. '(('' → logprob: -18.375017166137695
    8. '(
' → logprob: -18.500017166137695
    9. '()' → logprob: -19.375017166137695
    10. ''S' → logprob: -19.750017166137695

Token 571: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.004153906833380461
    2. 'No' → logprob: -5.504153728485107
    3. ''' → logprob: -9.504154205322266
    4. 'YES' → logprob: -14.504154205322266
    5. ' Yes' → logprob: -14.754154205322266
    6. '"' → logprob: -17.879154205322266
    7. '"No' → logprob: -18.379154205322266
    8. 'yes' → logprob: -19.004154205322266
    9. 'Ye' → logprob: -19.379154205322266
    10. ''''' → logprob: -19.754154205322266

Token 572: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.21641187369823456
    2. ')' → logprob: -1.716411828994751
    3. ')')
' → logprob: -4.59141206741333
    4. '')
' → logprob: -5.84141206741333
    5. '   ' → logprob: -6.34141206741333
    6. ')'
' → logprob: -10.716411590576172
    7. ')
' → logprob: -10.841411590576172
    8. ')'' → logprob: -10.966411590576172
    9. '")' → logprob: -11.591411590576172
    10. '')
' → logprob: -12.716411590576172

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002837087959051132
    2. 'if' → logprob: -6.502837181091309
    3. '```' → logprob: -6.752837181091309
    4. '
' → logprob: -9.377837181091309
    5. ' if' → logprob: -9.502837181091309
    6. '    
' → logprob: -12.127837181091309
    7. '``' → logprob: -14.377837181091309
    8. '`' → logprob: -15.127837181091309
    9. '>' → logprob: -15.627837181091309
    10. '       ' → logprob: -16.127836227416992

Token 574: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3160475492477417
    2. '   ' → logprob: -1.3160475492477417
    3. ' if' → logprob: -6.066047668457031
    4. '```' → logprob: -7.941047668457031
    5. '
' → logprob: -9.191047668457031
    6. '    
' → logprob: -13.066047668457031
    7. '  ' → logprob: -14.816047668457031
    8. 'elif' → logprob: -14.941047668457031
    9. '``' → logprob: -15.316047668457031
    10. '`' → logprob: -15.441047668457031

Token 575: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.3868711292743683
    2. ' check' → logprob: -1.136871099472046
    3. '(check' → logprob: -17.636871337890625
    4. '	check' → logprob: -18.386871337890625
    5. 'len' → logprob: -19.011871337890625
    6. ' len' → logprob: -19.886871337890625
    7. 'not' → logprob: -20.886871337890625
    8. ' not' → logprob: -21.011871337890625
    9. ' ' → logprob: -21.136871337890625
    10. '_check' → logprob: -21.511871337890625

Token 576: '_easy' (ID: 159722)
  Prédit: '_easy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_easy' → logprob: -5.512236498361744e-07
    2. 'easy' → logprob: -14.875000953674316
    3. '_e' → logprob: -16.25
    4. '_safe' → logprob: -17.75
    5. '_' → logprob: -18.125
    6. '_deg' → logprob: -18.25
    7. '```' → logprob: -18.75
    8. '_even' → logprob: -19.625
    9. '_else' → logprob: -19.75
    10. ' easy' → logprob: -20.0

Token 577: '_yes' (ID: 151898)
  Prédit: '_no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.10022187232971191
    2. '_yes' → logprob: -2.350221872329712
    3. '_' → logprob: -12.600221633911133
    4. 'no' → logprob: -12.725221633911133
    5. '_ok' → logprob: -13.725221633911133
    6. 'yes' → logprob: -13.975221633911133
    7. '```' → logprob: -14.225221633911133
    8. 'Yes' → logprob: -14.475221633911133
    9. ' _' → logprob: -14.600221633911133
    10. '_y' → logprob: -14.725221633911133

Token 578: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.875001907348633
    3. ' (' → logprob: -13.875001907348633
    4. '(tokens' → logprob: -17.625001907348633
    5. '(numbers' → logprob: -18.125001907348633
    6. '(len' → logprob: -18.250001907348633
    7. '(objects' → logprob: -19.000001907348633
    8. '(notes' → logprob: -19.000001907348633
    9. '(n' → logprob: -19.250001907348633
    10. '(users' → logprob: -19.375001907348633

Token 579: '_deg' (ID: 144310)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.14293630421161652
    2. '_deg' → logprob: -2.0179362297058105
    3. '_' → logprob: -8.517936706542969
    4. '_d' → logprob: -10.767936706542969
    5. '_degree' → logprob: -11.392936706542969
    6. 'deg' → logprob: -12.017936706542969
    7. '_de' → logprob: -12.142936706542969
    8. '_def' → logprob: -12.517936706542969
    9. '```' → logprob: -12.642936706542969
    10. '_len' → logprob: -13.142936706542969

Token 580: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '_' → logprob: -16.000001907348633
    5. '```' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.187501907348633
    7. '_list' → logprob: -17.812501907348633
    8. '=' → logprob: -17.875001907348633
    9. ',' → logprob: -18.250001907348633
    10. 'list' → logprob: -18.437501907348633

Token 581: '):
' (ID: 1883)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.17483504116535187
    2. '):' → logprob: -1.9248350858688354
    3. ':' → logprob: -5.049835205078125
    4. '()' → logprob: -5.174835205078125
    5. '(nodes' → logprob: -6.924835205078125
    6. ' ():' → logprob: -7.924835205078125
    7. '(n' → logprob: -8.174835205078125
    8. '(' → logprob: -8.299835205078125
    9. ' ):' → logprob: -8.424835205078125
    10. '(len' → logprob: -8.799835205078125

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00449575437232852
    2. 'early' → logprob: -5.754495620727539
    3. ' early' → logprob: -7.004495620727539
    4. '   ' → logprob: -7.879495620727539
    5. ':
' → logprob: -11.129495620727539
    6. ':' → logprob: -12.129495620727539
    7. '):
' → logprob: -12.879495620727539
    8. '```' → logprob: -13.004495620727539
    9. '           ' → logprob: -13.754495620727539
    10. '      ' → logprob: -13.879495620727539

Token 583: ' early' (ID: 6047)
  Prédit: 'early'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'early' (adapté à ' early') → logprob: -0.0024484232999384403
    2. '   ' → logprob: -7.002448558807373
    3. '       ' → logprob: -7.002448558807373
    4. ' early' → logprob: -7.377448558807373
    5. ' ' → logprob: -14.752448081970215
    6. '    ' → logprob: -15.752448081970215
    7. 'ear' → logprob: -16.12744903564453
    8. '           ' → logprob: -16.12744903564453
    9. '  ' → logprob: -16.37744903564453
    10. '```' → logprob: -16.87744903564453

Token 584: '_exit' (ID: 41242)
  Prédit: '_exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exit' → logprob: -6.511406809295295e-06
    2. 'exit' → logprob: -12.000006675720215
    3. '_return' → logprob: -15.000006675720215
    4. '_escape' → logprob: -17.2500057220459
    5. 'Exit' → logprob: -17.3750057220459
    6. '_EXIT' → logprob: -17.6250057220459
    7. '_out' → logprob: -18.7500057220459
    8. '_' → logprob: -19.1250057220459
    9. '_output' → logprob: -19.3750057220459
    10. '_continue' → logprob: -19.7500057220459

Token 585: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. '("' → logprob: -15.500021934509277
    4. ' ('' → logprob: -15.750021934509277
    5. '(
' → logprob: -18.12502098083496
    6. '(('' → logprob: -18.75002098083496
    7. '('(' → logprob: -19.37502098083496
    8. ''' → logprob: -19.50002098083496
    9. '(True' → logprob: -19.75002098083496
    10. '(',' → logprob: -19.87502098083496

Token 586: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.011052302084863186
    2. ''' → logprob: -4.511052131652832
    3. 'YES' → logprob: -13.386052131652832
    4. 'No' → logprob: -13.636052131652832
    5. ' Yes' → logprob: -14.011052131652832
    6. '"' → logprob: -14.386052131652832
    7. 'Ye' → logprob: -16.26105308532715
    8. '('' → logprob: -16.88605308532715
    9. '`' → logprob: -17.13605308532715
    10. ''''' → logprob: -17.13605308532715

Token 587: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33320942521095276
    2. '   ' → logprob: -2.20820951461792
    3. '')' → logprob: -2.20820951461792
    4. ')
' → logprob: -3.33320951461792
    5. '')
' → logprob: -3.58320951461792
    6. ')')
' → logprob: -9.458209037780762
    7. '")' → logprob: -11.083209037780762
    8. '")
' → logprob: -12.333209037780762
    9. '')
' → logprob: -12.583209037780762
    10. '()' → logprob: -12.708209037780762

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007175540085881948
    2. ' if' → logprob: -7.875717639923096
    3. 'if' → logprob: -8.125717163085938
    4. '```' → logprob: -10.250717163085938
    5. ' ' → logprob: -13.500717163085938
    6. '  ' → logprob: -13.625717163085938
    7. '    
' → logprob: -13.875717163085938
    8. '<|end|>' → logprob: -14.250717163085938
    9. '
' → logprob: -14.625717163085938
    10. 'If' → logprob: -14.750717163085938

Token 589: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5762296319007874
    2. 'if' (adapté à ' if') → logprob: -0.8262296319007874
    3. ' if' → logprob: -8.3262300491333
    4. '```' → logprob: -9.9512300491333
    5. '``' → logprob: -16.451229095458984
    6. '	if' → logprob: -16.576229095458984
    7. '
' → logprob: -16.701229095458984
    8. '    
' → logprob: -17.451229095458984
    9. 'elif' → logprob: -17.576229095458984
    10. '       ' → logprob: -17.701229095458984

Token 590: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.10020806640386581
    2. 'check' → logprob: -2.350208044052124
    3. '(check' → logprob: -13.600208282470703
    4. '	check' → logprob: -15.725208282470703
    5. ' not' → logprob: -16.850208282470703
    6. '_check' → logprob: -17.100208282470703
    7. 'not' → logprob: -17.725208282470703
    8. ' ' → logprob: -18.100208282470703
    9. 'Check' → logprob: -18.475208282470703
    10. '   ' → logprob: -18.725208282470703

Token 591: '_easy' (ID: 159722)
  Prédit: '_easy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_easy' → logprob: -0.00021259987261146307
    2. '```' → logprob: -9.875212669372559
    3. '_deg' → logprob: -10.250212669372559
    4. '_safe' → logprob: -10.500212669372559
    5. '_' → logprob: -10.750212669372559
    6. '('_' → logprob: -10.875212669372559
    7. ''_' → logprob: -11.250212669372559
    8. 'easy' → logprob: -11.625212669372559
    9. '_else' → logprob: -11.875212669372559
    10. '_low' → logprob: -12.500212669372559

Token 592: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.9361264946837764e-07
    2. 'no' → logprob: -15.875
    3. '```' → logprob: -17.0
    4. '_' → logprob: -18.625
    5. '_NO' → logprob: -18.75
    6. 'No' → logprob: -18.75
    7. '_n' → logprob: -19.0
    8. '	no' → logprob: -19.5
    9. '_No' → logprob: -20.125
    10. '
' → logprob: -20.5

Token 593: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -7.803360495017841e-05
    2. ' (' → logprob: -9.750078201293945
    3. '(' → logprob: -10.875078201293945
    4. '(n' → logprob: -16.125078201293945
    5. '	nodes' → logprob: -16.125078201293945
    6. '(numbers' → logprob: -16.375078201293945
    7. '(notes' → logprob: -16.500078201293945
    8. '(tokens' → logprob: -16.625078201293945
    9. '(
' → logprob: -16.750078201293945
    10. '   ' → logprob: -17.125078201293945

Token 594: '_deg' (ID: 144310)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.15310683415737e-05
    2. '_deg' → logprob: -11.000021934509277
    3. '_' → logprob: -13.000021934509277
    4. '```' → logprob: -14.625021934509277
    5. '   ' → logprob: -14.750021934509277
    6. '_nodes' → logprob: -14.750021934509277
    7. ' ' → logprob: -15.500021934509277
    8. '__' → logprob: -15.750021934509277
    9. '_de' → logprob: -15.750021934509277
    10. '۴' → logprob: -15.875021934509277

Token 595: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.0921942703134846e-05
    2. '(nodes' → logprob: -12.50001049041748
    3. '_nodes' → logprob: -13.25001049041748
    4. '   ' → logprob: -13.25001049041748
    5. '```' → logprob: -13.37501049041748
    6. ' ' → logprob: -13.87501049041748
    7. '(' → logprob: -15.50001049041748
    8. '_' → logprob: -15.87501049041748
    9. '[' → logprob: -15.87501049041748
    10. '۴' → logprob: -16.250011444091797

Token 596: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5308182835578918
    2. '(nodes' → logprob: -0.9058182835578918
    3. '   ' → logprob: -6.030818462371826
    4. '(n' → logprob: -6.780818462371826
    5. ',' → logprob: -6.905818462371826
    6. '):
' → logprob: -7.030818462371826
    7. '(' → logprob: -7.155818462371826
    8. ' ):' → logprob: -7.530818462371826
    9. ':' → logprob: -7.905818462371826
    10. ')' → logprob: -8.405817985534668

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16061483323574066
    2. '   ' → logprob: -1.9106148481369019
    3. 'early' → logprob: -7.910614967346191
    4. ' early' → logprob: -10.910614967346191
    5. '```' → logprob: -12.535614967346191
    6. '           ' → logprob: -14.160614967346191
    7. '      ' → logprob: -15.410614967346191
    8. 'return' → logprob: -15.535614967346191
    9. '     ' → logprob: -15.660614967346191
    10. '    ' → logprob: -15.660614967346191

Token 598: ' early' (ID: 6047)
  Prédit: 'early'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'early' (adapté à ' early') → logprob: -4.084206375409849e-05
    2. '   ' → logprob: -10.250041007995605
    3. ' early' → logprob: -12.250041007995605
    4. '       ' → logprob: -14.625041007995605
    5. '```' → logprob: -16.62504005432129
    6. '
' → logprob: -16.62504005432129
    7. '  ' → logprob: -19.62504005432129
    8. ' ' → logprob: -19.62504005432129
    9. '    
' → logprob: -19.75004005432129
    10. '           ' → logprob: -19.87504005432129

Token 599: '_exit' (ID: 41242)
  Prédit: '_exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exit' → logprob: -5.2166411478538066e-05
    2. 'exit' → logprob: -9.875052452087402
    3. '_return' → logprob: -14.500052452087402
    4. 'Exit' → logprob: -16.625051498413086
    5. '_EXIT' → logprob: -16.625051498413086
    6. '_' → logprob: -18.250051498413086
    7. '_escape' → logprob: -19.125051498413086
    8. 'return' → logprob: -19.250051498413086
    9. ' exit' → logprob: -19.375051498413086
    10. '_output' → logprob: -19.375051498413086

Token 600: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00012964145571459085
    2. '(' → logprob: -9.000129699707031
    3. '(
' → logprob: -13.000129699707031
    4. ''' → logprob: -13.250129699707031
    5. '(No' → logprob: -13.500129699707031
    6. '("' → logprob: -14.750129699707031
    7. 'No' → logprob: -15.375129699707031
    8. '(None' → logprob: -16.37512969970703
    9. ' ('' → logprob: -16.62512969970703
    10. '(('' → logprob: -17.25012969970703

Token 601: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.1269463747739792
    2. ''' → logprob: -2.126946449279785
    3. '"No' → logprob: -11.001946449279785
    4. 'Yes' → logprob: -14.001946449279785
    5. '`' → logprob: -15.251946449279785
    6. ' No' → logprob: -16.00194549560547
    7. '('' → logprob: -16.12694549560547
    8. 'NO' → logprob: -16.37694549560547
    9. '(No' → logprob: -16.37694549560547
    10. '_No' → logprob: -16.37694549560547

Token 602: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03110114485025406
    2. '   ' → logprob: -3.6561012268066406
    3. ')
' → logprob: -5.406101226806641
    4. '()' → logprob: -8.90610122680664
    5. '
' → logprob: -9.28110122680664
    6. '')' → logprob: -10.65610122680664
    7. '```' → logprob: -11.90610122680664
    8. '(' → logprob: -12.03110122680664
    9. '")' → logprob: -12.15610122680664
    10. '    
' → logprob: -12.15610122680664

Token 603: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08932720869779587
    2. '
' → logprob: -2.589327096939087
    3. '```' → logprob: -5.339327335357666
    4. '    
' → logprob: -5.589327335357666
    5. '  
' → logprob: -8.339326858520508
    6. '[' → logprob: -8.714326858520508
    7. 'if' → logprob: -8.964326858520508
    8. ' if' → logprob: -8.964326858520508
    9. 't' → logprob: -8.964326858520508
    10. '``' → logprob: -9.089326858520508

Token 604: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.11333589255809784
    2. ' t' → logprob: -2.6133358478546143
    3. '   ' → logprob: -3.6133358478546143
    4. 'for' → logprob: -6.113336086273193
    5. ' for' → logprob: -6.113336086273193
    6. 'v' → logprob: -7.488336086273193
    7. 'seen' → logprob: -7.738336086273193
    8. '#' → logprob: -8.238335609436035
    9. ' seen' → logprob: -8.988335609436035
    10. ' v' → logprob: -9.113335609436035

Token 605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004890497075393796
    2. ' =' → logprob: -8.125489234924316
    3. '=' → logprob: -9.750489234924316
    4. '_' → logprob: -10.250489234924316
    5. 'wo' → logprob: -10.375489234924316
    6. '_nodes' → logprob: -10.750489234924316
    7. 'nodes' → logprob: -11.500489234924316
    8. '4' → logprob: -11.625489234924316
    9. '2' → logprob: -11.625489234924316
    10. ',' → logprob: -12.250489234924316

Token 606: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037156980484724045
    2. '=' → logprob: -3.7871570587158203
    3. ',' → logprob: -4.28715705871582
    4. ' ,' → logprob: -10.16215705871582
    5. ',t' → logprob: -11.03715705871582
    6. '=t' → logprob: -12.28715705871582
    7. ' =
' → logprob: -13.28715705871582
    8. ' ' → logprob: -13.53715705871582
    9. ' =[' → logprob: -13.66215705871582
    10. '<|end|>' → logprob: -13.66215705871582

Token 607: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.1133396103978157
    2. 't' → logprob: -2.23833966255188
    3. ' =' → logprob: -7.988339424133301
    4. '=' → logprob: -9.8633394241333
    5. ' ' → logprob: -10.1133394241333
    6. ' nodes' → logprob: -10.3633394241333
    7. '=t' → logprob: -10.3633394241333
    8. 'space' → logprob: -11.7383394241333
    9. 'nodes' → logprob: -11.9883394241333
    10. ' space' → logprob: -13.4883394241333

Token 608: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.164640873670578
    2. '=' → logprob: -1.9146409034729004
    3. ' =' → logprob: -5.6646409034729
    4. ',t' → logprob: -7.7896409034729
    5. 't' → logprob: -8.664640426635742
    6. '_' → logprob: -8.789640426635742
    7. ' ,' → logprob: -9.289640426635742
    8. '=t' → logprob: -11.039640426635742
    9. ' t' → logprob: -11.414640426635742
    10. ',_' → logprob: -11.414640426635742

Token 609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2886032164096832
    2. ' =' → logprob: -1.4136031866073608
    3. ',' → logprob: -4.91360330581665
    4. ',n' → logprob: -10.038602828979492
    5. ',t' → logprob: -11.288602828979492
    6. '=node' → logprob: -12.163602828979492
    7. '=n' → logprob: -12.538602828979492
    8. ',node' → logprob: -12.663602828979492
    9. '(nodes' → logprob: -13.038602828979492
    10. '=t' → logprob: -13.038602828979492

Token 610: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.023250136524438858
    2. ' nodes' → logprob: -3.773250102996826
    3. '(nodes' → logprob: -12.398250579833984
    4. '	nodes' → logprob: -14.773250579833984
    5. '.nodes' → logprob: -17.273250579833984
    6. '_nodes' → logprob: -17.523250579833984
    7. 'tuple' → logprob: -18.273250579833984
    8. 'node' → logprob: -18.523250579833984
    9. 'sorted' → logprob: -18.648250579833984
    10. '0' → logprob: -18.773250579833984

Token 611: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -4.8590300139039755e-05
    2. 'deg' → logprob: -10.375048637390137
    3. '[' → logprob: -11.875048637390137
    4. '_degree' → logprob: -12.000048637390137
    5. '_de' → logprob: -14.000048637390137
    6. '_' → logprob: -14.125048637390137
    7. '[_' → logprob: -14.875048637390137
    8. '4' → logprob: -15.000048637390137
    9. 's' → logprob: -15.000048637390137
    10. '_d' → logprob: -15.125048637390137

Token 612: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2113979209971149e-05
    2. '[' → logprob: -11.375012397766113
    3. '```' → logprob: -15.000012397766113
    4. '_deg' → logprob: -15.625012397766113
    5. 'deg' → logprob: -16.625011444091797
    6. '_' → logprob: -17.250011444091797
    7. '[:' → logprob: -17.750011444091797
    8. '_four' → logprob: -18.000011444091797
    9. ' ' → logprob: -18.250011444091797
    10. '[-' → logprob: -18.375011444091797

Token 613: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013392893597483635
    2. '[:' → logprob: -6.626339435577393
    3. ',' → logprob: -12.126338958740234
    4. '0' → logprob: -12.501338958740234
    5. '[-' → logprob: -13.501338958740234
    6. '
' → logprob: -14.501338958740234
    7. '   ' → logprob: -14.626338958740234
    8. '.' → logprob: -15.251338958740234
    9. ' =' → logprob: -15.251338958740234
    10. '```' → logprob: -15.251338958740234

Token 614: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -17.25
    3. ':' → logprob: -18.25
    4. ' ' → logprob: -18.375
    5. '۰' → logprob: -18.375
    6. '1' → logprob: -18.625
    7. '```' → logprob: -19.3125
    8. '
' → logprob: -19.5
    9. '(' → logprob: -20.125
    10. '٠' → logprob: -20.1875

Token 615: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.3101027011871338
    2. ']' → logprob: -1.4351027011871338
    3. ',' → logprob: -3.560102701187134
    4. ']
' → logprob: -9.560102462768555
    5. ' ],' → logprob: -11.185102462768555
    6. ' ,' → logprob: -12.185102462768555
    7. ' ]' → logprob: -13.060102462768555
    8. ':' → logprob: -13.185102462768555
    9. ',t' → logprob: -13.185102462768555
    10. '),' → logprob: -13.685102462768555

Token 616: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.31326520442962646
    2. 'nodes' → logprob: -1.3132652044296265
    3. '	nodes' → logprob: -13.188264846801758
    4. '(nodes' → logprob: -13.688264846801758
    5. '_nodes' → logprob: -15.188264846801758
    6. '.nodes' → logprob: -15.563264846801758
    7. 'node' → logprob: -17.063264846801758
    8. 'Nodes' → logprob: -17.438264846801758
    9. ' ' → logprob: -18.563264846801758
    10. ' Nodes' → logprob: -19.813264846801758

Token 617: '_deg' (ID: 144310)
  Prédit: '_deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.012585461139678955
    2. '4' → logprob: -4.512585639953613
    3. 'deg' → logprob: -7.012585639953613
    4. '[' → logprob: -7.512585639953613
    5. '_' → logprob: -10.012585639953613
    6. '_d' → logprob: -11.887585639953613
    7. '2' → logprob: -11.887585639953613
    8. '_degree' → logprob: -12.262585639953613
    9. '```' → logprob: -12.387585639953613
    10. '3' → logprob: -13.012585639953613

Token 618: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.4121114822482923e-06
    2. '```' → logprob: -13.375003814697266
    3. '[' → logprob: -14.000003814697266
    4. ' ' → logprob: -14.875003814697266
    5. '_four' → logprob: -16.000003814697266
    6. '_' → logprob: -16.125003814697266
    7. '2' → logprob: -16.500003814697266
    8. '1' → logprob: -16.875003814697266
    9. '``' → logprob: -17.000003814697266
    10. '   ' → logprob: -17.125003814697266

Token 619: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '1' → logprob: -13.000003814697266
    3. ' [' → logprob: -14.125003814697266
    4. '```' → logprob: -15.000003814697266
    5. '2' → logprob: -16.625003814697266
    6. '[
' → logprob: -17.000003814697266
    7. '\[' → logprob: -18.000003814697266
    8. '4' → logprob: -19.250003814697266
    9. '   ' → logprob: -19.500003814697266
    10. '3' → logprob: -19.750003814697266

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -16.625003814697266
    4. ']' → logprob: -17.375003814697266
    5. '-' → logprob: -18.875003814697266
    6. ')' → logprob: -19.500003814697266
    7. '2' → logprob: -19.750003814697266
    8. '۱' → logprob: -19.875003814697266
    9. '   ' → logprob: -20.062503814697266
    10. '１' → logprob: -20.062503814697266

Token 621: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04433271288871765
    2. ']' → logprob: -3.16933274269104
    3. '   ' → logprob: -7.044332504272461
    4. '<|end|>' → logprob: -7.919332504272461
    5. '}' → logprob: -10.419332504272461
    6. ')
' → logprob: -10.669332504272461
    7. ')]' → logprob: -11.419332504272461
    8. '<|end|>' → logprob: -11.794332504272461
    9. '```' → logprob: -12.544332504272461
    10. ' ' → logprob: -12.669332504272461

Token 622: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20139266550540924
    2. '   ' → logprob: -1.826392650604248
    3. ' seen' → logprob: -4.951392650604248
    4. 'seen' → logprob: -5.326392650604248
    5. '```' → logprob: -5.576392650604248
    6. '    
' → logprob: -5.701392650604248
    7. '
' → logprob: -7.201392650604248
    8. '_seen' → logprob: -7.451392650604248
    9. ' for' → logprob: -8.076393127441406
    10. '   
' → logprob: -8.951393127441406

Token 623: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.31883299350738525
    2. '   ' → logprob: -1.3188329935073853
    3. ' seen' → logprob: -5.818832874298096
    4. '```' → logprob: -6.693832874298096
    5. 'for' → logprob: -7.068832874298096
    6. '
' → logprob: -8.693833351135254
    7. '    
' → logprob: -9.693833351135254
    8. '_seen' → logprob: -9.818833351135254
    9. '``' → logprob: -9.943833351135254
    10. 'se' → logprob: -10.193833351135254

Token 624: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010374527191743255
    2. '=' → logprob: -6.87603759765625
    3. '_' → logprob: -12.62603759765625
    4. '1' → logprob: -14.62603759765625
    5. 's' → logprob: -16.12603759765625
    6. ',' → logprob: -16.12603759765625
    7. ' =
' → logprob: -16.37603759765625
    8. '[' → logprob: -16.37603759765625
    9. ' _' → logprob: -16.62603759765625
    10. ' =[' → logprob: -16.62603759765625

Token 625: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.12698301672935486
    2. ' dfs' → logprob: -2.1269829273223877
    3. 'df' → logprob: -9.876982688903809
    4. '   ' → logprob: -14.251982688903809
    5. 'DFS' → logprob: -14.626982688903809
    6. ' DFS' → logprob: -15.001982688903809
    7. ' df' → logprob: -15.376982688903809
    8. ' ' → logprob: -15.501982688903809
    9. 'fs' → logprob: -15.501982688903809
    10. 'dfa' → logprob: -15.501982688903809

Token 626: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.843177233240567e-05
    2. '(adj' → logprob: -11.875018119812012
    3. 'from' → logprob: -12.500018119812012
    4. '_' → logprob: -12.625018119812012
    5. '_FROM' → logprob: -14.125018119812012
    6. '```' → logprob: -14.500018119812012
    7. '_for' → logprob: -14.625018119812012
    8. 'From' → logprob: -14.625018119812012
    9. '_adj' → logprob: -14.750018119812012
    10. '[' → logprob: -15.125018119812012

Token 627: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -7.226628895296017e-06
    2. 'adj' → logprob: -12.000007629394531
    3. ' adj' → logprob: -14.625007629394531
    4. '(' → logprob: -14.750007629394531
    5. '(ad' → logprob: -16.75000762939453
    6. '```' → logprob: -17.62500762939453
    7. ' (' → logprob: -17.75000762939453
    8. '(ans' → logprob: -18.00000762939453
    9. '(
' → logprob: -18.75000762939453
    10. '_adj' → logprob: -19.00000762939453

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ',
' → logprob: -15.750004768371582
    4. ',N' → logprob: -16.375003814697266
    5. '(' → logprob: -16.875003814697266
    6. ',n' → logprob: -17.375003814697266
    7. '(adj' → logprob: -17.500003814697266
    8. ')' → logprob: -17.875003814697266
    9. '   ' → logprob: -18.125003814697266
    10. ',t' → logprob: -18.375003814697266

Token 629: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07889474183320999
    2. ' N' → logprob: -2.578894853591919
    3. ')' → logprob: -13.70389461517334
    4. '   ' → logprob: -13.95389461517334
    5. ' ' → logprob: -14.32889461517334
    6. '>N' → logprob: -14.82889461517334
    7. '	N' → logprob: -14.95389461517334
    8. '```' → logprob: -15.07889461517334
    9. '<|end|>' → logprob: -15.32889461517334
    10. 'n' → logprob: -15.57889461517334

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011534435179783031
    2. ',t' → logprob: -9.500115394592285
    3. ' ,' → logprob: -10.125115394592285
    4. 't' → logprob: -15.125115394592285
    5. ' t' → logprob: -16.75011444091797
    6. '(t' → logprob: -17.75011444091797
    7. '(' → logprob: -17.75011444091797
    8. '   ' → logprob: -17.87511444091797
    9. ',
' → logprob: -18.12511444091797
    10. ',n' → logprob: -19.00011444091797

Token 631: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -9.615255839889869e-05
    2. ' t' → logprob: -9.250096321105957
    3. ')t' → logprob: -17.12509536743164
    4. '	t' → logprob: -18.00009536743164
    5. '`t' → logprob: -18.00009536743164
    6. '   ' → logprob: -18.50009536743164
    7. ')' → logprob: -19.50009536743164
    8. '
' → logprob: -20.00009536743164
    9. '(t' → logprob: -20.25009536743164
    10. ' ' → logprob: -21.12509536743164

Token 632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4378848391061183e-05
    2. '2' → logprob: -11.625014305114746
    3. '4' → logprob: -12.875014305114746
    4. '_' → logprob: -13.625014305114746
    5. ',' → logprob: -14.750014305114746
    6. '```' → logprob: -14.937514305114746
    7. 't' → logprob: -15.687514305114746
    8. '   ' → logprob: -16.000015258789062
    9. ' ' → logprob: -16.000015258789062
    10. ')' → logprob: -16.625015258789062

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003196154139004648
    2. ' ,' → logprob: -8.375319480895996
    3. ',t' → logprob: -9.375319480895996
    4. 't' → logprob: -13.250319480895996
    5. ')' → logprob: -13.500319480895996
    6. ',
' → logprob: -14.250319480895996
    7. '[' → logprob: -16.375320434570312
    8. ' t' → logprob: -16.750320434570312
    9. ',n' → logprob: -17.125320434570312
    10. '   ' → logprob: -17.750320434570312

Token 634: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.007608278188854456
    2. ' t' → logprob: -4.882608413696289
    3. '`t' → logprob: -13.757608413696289
    4. '   ' → logprob: -14.132608413696289
    5. ')t' → logprob: -15.257608413696289
    6. '	t' → logprob: -15.632608413696289
    7. ' ' → logprob: -17.25760841369629
    8. 'T' → logprob: -18.25760841369629
    9. '_t' → logprob: -18.75760841369629
    10. '  ' → logprob: -19.00760841369629

Token 635: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2113979209971149e-05
    2. ',' → logprob: -12.250012397766113
    3. '   ' → logprob: -12.750012397766113
    4. ' ' → logprob: -12.875012397766113
    5. '```' → logprob: -14.125012397766113
    6. '_' → logprob: -15.125012397766113
    7. '1' → logprob: -15.250012397766113
    8. '    ' → logprob: -16.062511444091797
    9. ')' → logprob: -16.125011444091797
    10. 't' → logprob: -16.625011444091797

Token 636: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025317834224551916
    2. ')
' → logprob: -6.002532005310059
    3. '   ' → logprob: -10.252532005310059
    4. ' )' → logprob: -11.002532005310059
    5. ',' → logprob: -12.752532005310059
    6. ')
' → logprob: -15.002532005310059
    7. ' )
' → logprob: -15.377532005310059
    8. ' ' → logprob: -15.752532005310059
    9. '  ' → logprob: -16.252531051635742
    10. ')

' → logprob: -16.377531051635742

Token 637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011599812423810363
    2. 'dec' → logprob: -7.751160144805908
    3. '```' → logprob: -8.00115966796875
    4. '
' → logprob: -8.87615966796875
    5. '    
' → logprob: -9.37615966796875
    6. '(dec' → logprob: -9.87615966796875
    7. ' if' → logprob: -10.25115966796875
    8. 'def' → logprob: -10.25115966796875
    9. ' decide' → logprob: -11.50115966796875
    10. 'if' → logprob: -12.12615966796875

Token 638: ' decide' (ID: 13001)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5765612721443176
    2. 'dec' → logprob: -0.8265612721443176
    3. 'if' → logprob: -8.201560974121094
    4. ' decide' → logprob: -9.076560974121094
    5. '```' → logprob: -9.326560974121094
    6. 'def' → logprob: -10.326560974121094
    7. ' dec' → logprob: -10.451560974121094
    8. ' if' → logprob: -10.576560974121094
    9. '(dec' → logprob: -11.076560974121094
    10. '    
' → logprob: -11.076560974121094

Token 639: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. '_par' → logprob: -17.5
    4. '_BY' → logprob: -18.375
    5. '_from' → logprob: -19.125
    6. 'by' → logprob: -19.25
    7. '_based' → logprob: -19.625
    8. '_to' → logprob: -19.75
    9. '_By' → logprob: -19.75
    10. '_seen' → logprob: -20.125

Token 640: '_seen' (ID: 158839)
  Prédit: '_seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seen' → logprob: -0.020576458424329758
    2. 'seen' → logprob: -3.8955764770507812
    3. '_se' → logprob: -11.145576477050781
    4. '(se' → logprob: -11.270576477050781
    5. 's' → logprob: -13.270576477050781
    6. 'se' → logprob: -13.395576477050781
    7. '_' → logprob: -13.895576477050781
    8. 'Seen' → logprob: -14.270576477050781
    9. '```' → logprob: -14.395576477050781
    10. ' seen' → logprob: -14.395576477050781

Token 641: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.0006277294596657157
    2. '(' → logprob: -7.375627517700195
    3. '(space' → logprob: -14.750627517700195
    4. ',se' → logprob: -16.125627517700195
    5. '(SE' → logprob: -16.375627517700195
    6. '()' → logprob: -16.625627517700195
    7. ' (' → logprob: -16.875627517700195
    8. '(new' → logprob: -16.875627517700195
    9. '(`' → logprob: -17.125627517700195
    10. '(separator' → logprob: -17.125627517700195

Token 642: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.2664456789934775e-06
    2. '(en' → logprob: -14.375000953674316
    3. ' en' → logprob: -15.000000953674316
    4. '[' → logprob: -16.125001907348633
    5. '```' → logprob: -17.125001907348633
    6. 'ен' → logprob: -17.500001907348633
    7. 'een' → logprob: -17.625001907348633
    8. '_en' → logprob: -18.000001907348633
    9. ',en' → logprob: -18.000001907348633
    10. 'e' → logprob: -18.125001907348633

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014168102643452585
    2. ',N' → logprob: -9.000142097473145
    3. ' ,' → logprob: -11.125142097473145
    4. '(N' → logprob: -13.375142097473145
    5. '   ' → logprob: -13.500142097473145
    6. '(' → logprob: -14.875142097473145
    7. ',n' → logprob: -16.500141143798828
    8. ')' → logprob: -17.125141143798828
    9. ',
' → logprob: -17.875141143798828
    10. '```' → logprob: -18.000141143798828

Token 644: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00317783304490149
    2. ' N' → logprob: -5.753177642822266
    3. '   ' → logprob: -15.878177642822266
    4. ' ' → logprob: -17.878177642822266
    5. '	N' → logprob: -19.628177642822266
    6. '  ' → logprob: -19.878177642822266
    7. '    ' → logprob: -20.628177642822266
    8. ' ' → logprob: -20.878177642822266
    9. '```' → logprob: -22.253177642822266
    10. ')' → logprob: -22.378177642822266

Token 645: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.625005722045898
    3. ' )' → logprob: -13.000005722045898
    4. '   ' → logprob: -15.000005722045898
    5. '())' → logprob: -16.5000057220459
    6. ')#' → logprob: -17.1250057220459
    7. ')}' → logprob: -17.7500057220459
    8. '))' → logprob: -17.8750057220459
    9. ')

' → logprob: -18.1250057220459
    10. ')`' → logprob: -18.1250057220459

Token 646: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0012395139783620834
    2. '```' → logprob: -6.75123929977417
    3. ' if' → logprob: -9.876239776611328
    4. '
' → logprob: -11.626239776611328
    5. '<|end|>' → logprob: -12.501239776611328
    6. '#' → logprob: -13.626239776611328
    7. 'main' → logprob: -13.626239776611328
    8. '``' → logprob: -14.876239776611328
    9. '\n' → logprob: -15.376239776611328
    10. '(if' → logprob: -15.501239776611328

Token 647: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5332465171813965
    2. '(' → logprob: -0.9082465171813965
    3. '(
' → logprob: -5.4082465171813965
    4. '()
' → logprob: -5.9082465171813965
    5. '```' → logprob: -6.9082465171813965
    6. '
' → logprob: -7.9082465171813965
    7. 'newline' → logprob: -8.033246994018555
    8. '#' → logprob: -8.033246994018555
    9. '<|end|>' → logprob: -8.283246994018555
    10. '()\' → logprob: -8.658246994018555


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 645
Tokens correctement prédits (1ère position, stricte): 308
Tokens correctement prédits (1ère position, avec adaptation): 339
Tokens correctement prédits (top 10): 582
Précision stricte (1ère position): 47.75%
Précision adaptée (1ère position): 52.56%
Précision (top 10): 90.23%
================================================================================
