================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
N = int(input())
ans = sum(reduce(lambda acc, i: acc + (len(str(i)) % 2 ^ 1) * 0 + (len(str(i)) % 2) * 1, [i for i in range(1, N + 1)], 0) for _ in [0])
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2093115597963333
    2. '\' → logprob: -2.0843114852905273
    3. 'def' → logprob: -3.2093114852905273
    4. ' ' → logprob: -4.709311485290527
    5. ',' → logprob: -6.209311485290527
    6. '```' → logprob: -6.209311485290527
    7. '(
' → logprob: -6.709311485290527
    8. '\(' → logprob: -6.959311485290527
    9. '\n' → logprob: -7.209311485290527
    10. ' (' → logprob: -7.209311485290527

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5288276076316833
    2. ' =' → logprob: -1.1538276672363281
    3. ',' → logprob: -3.403827667236328
    4. '_' → logprob: -3.778827667236328
    5. ' ' → logprob: -3.778827667236328
    6. 'umber' → logprob: -5.028827667236328
    7. 'um' → logprob: -6.278827667236328
    8. 'u' → logprob: -6.528827667236328
    9. '   ' → logprob: -6.653827667236328
    10. ' ,' → logprob: -6.903827667236328

Token 7: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025233548134565353
    2. '10' → logprob: -4.025233745574951
    3. '100' → logprob: -5.900233745574951
    4. '0' → logprob: -6.650233745574951
    5. 'int' → logprob: -6.775233745574951
    6. ' int' → logprob: -7.400233745574951
    7. '5' → logprob: -7.525233745574951
    8. '20' → logprob: -8.275233268737793
    9. '1' → logprob: -8.650233268737793
    10. '50' → logprob: -9.650233268737793

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00044127836008556187
    2. '('' → logprob: -8.250441551208496
    3. ''' → logprob: -9.500441551208496
    4. '`' → logprob: -10.625441551208496
    5. '()' → logprob: -11.000441551208496
    6. '("("' → logprob: -11.125441551208496
    7. '```' → logprob: -11.250441551208496
    8. '(
' → logprob: -11.875441551208496
    9. '(`' → logprob: -12.500441551208496
    10. '(N' → logprob: -12.750441551208496

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028839299455285072
    2. '(' → logprob: -3.903839349746704
    3. '))' → logprob: -5.403839111328125
    4. '())' → logprob: -6.153839111328125
    5. '')' → logprob: -7.278839111328125
    6. '`)' → logprob: -7.778839111328125
    7. '()' → logprob: -8.278839111328125
    8. '('' → logprob: -9.778839111328125
    9. '")' → logprob: -9.903839111328125
    10. '(
' → logprob: -10.153839111328125

Token 10: 'ans' (ID: 616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7152149677276611
    2. 'arr' → logprob: -1.8402149677276611
    3. 'data' → logprob: -2.090214967727661
    4. 'numbers' → logprob: -2.340214967727661
    5. 'result' → logprob: -3.215214967727661
    6. 'lst' → logprob: -3.465214967727661
    7. ' numbers' → logprob: -4.590214729309082
    8. 'nums' → logprob: -4.590214729309082
    9. 'array' → logprob: -4.590214729309082
    10. 's' → logprob: -5.090214729309082

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37217050790786743
    2. '=' → logprob: -1.3721704483032227
    3. '(' → logprob: -3.2471704483032227
    4. '_' → logprob: -4.372170448303223
    5. ' ' → logprob: -5.997170448303223
    6. '[' → logprob: -6.372170448303223
    7. ' +=' → logprob: -7.622170448303223
    8. ',' → logprob: -7.997170448303223
    9. ')' → logprob: -9.247170448303223
    10. '.' → logprob: -9.372170448303223

Token 12: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2944433391094208
    2. ' ' → logprob: -1.6694433689117432
    3. '1' → logprob: -3.044443368911743
    4. 'reduce' → logprob: -4.669443130493164
    5. ' reduce' → logprob: -5.419443130493164
    6. ' []' → logprob: -6.419443130493164
    7. ' N' → logprob: -7.294443130493164
    8. '[]' → logprob: -7.794443130493164
    9. '"' → logprob: -7.919443130493164
    10. 'sum' → logprob: -8.169443130493164

Token 13: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015581895131617785
    2. '(lambda' → logprob: -7.376558303833008
    3. '(range' → logprob: -7.876558303833008
    4. '((' → logprob: -8.126558303833008
    5. '(list' → logprob: -9.251558303833008
    6. '([' → logprob: -9.876558303833008
    7. '(map' → logprob: -10.751558303833008
    8. '(
' → logprob: -10.876558303833008
    9. '(max' → logprob: -11.626558303833008
    10. ' (' → logprob: -11.751558303833008

Token 14: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.0017675277777016163
    2. 'ad' → logprob: -7.126767635345459
    3. 'verse' → logprob: -7.251767635345459
    4. 'duced' → logprob: -9.1267671585083
    5. 'd' → logprob: -9.8767671585083
    6. 'versed' → logprob: -10.1267671585083
    7. 'place' → logprob: -11.3767671585083
    8. '[' → logprob: -11.3767671585083
    9. 'du' → logprob: -12.0017671585083
    10. 'range' → logprob: -12.7517671585083

Token 15: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.693638026714325
    2. '(lambda' → logprob: -0.693638026714325
    3. '(operator' → logprob: -8.56863784790039
    4. '((' → logprob: -9.06863784790039
    5. ')' → logprob: -9.44363784790039
    6. '(int' → logprob: -11.19363784790039
    7. '(
' → logprob: -11.44363784790039
    8. '(sum' → logprob: -11.56863784790039
    9. '(range' → logprob: -11.81863784790039
    10. 'lambda' → logprob: -11.81863784790039

Token 16: ' acc' (ID: 1259)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.36330869793891907
    2. ' a' → logprob: -1.8633086681365967
    3. ' lambda' → logprob: -2.4883086681365967
    4. 'a' → logprob: -3.6133086681365967
    5. 'x' → logprob: -3.9883086681365967
    6. 'lambda' → logprob: -4.488308906555176
    7. ' ' → logprob: -5.613308906555176
    8. '(lambda' → logprob: -6.238308906555176
    9. ',' → logprob: -6.863308906555176
    10. ' ,' → logprob: -7.613308906555176

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020225929096341133
    2. ' ,' → logprob: -4.270226001739502
    3. 'lambda' → logprob: -5.770226001739502
    4. ' lambda' → logprob: -6.270226001739502
    5. '=lambda' → logprob: -7.395226001739502
    6. '(lambda' → logprob: -8.645225524902344
    7. ' x' → logprob: -9.145225524902344
    8. ' ' → logprob: -10.145225524902344
    9. ',x' → logprob: -10.395225524902344
    10. 'x' → logprob: -11.395225524902344

Token 18: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.40369364619255066
    2. 'x' → logprob: -1.153693675994873
    3. ' n' → logprob: -6.028693675994873
    4. ' a' → logprob: -6.403693675994873
    5. ' ' → logprob: -6.653693675994873
    6. 'a' → logprob: -6.903693675994873
    7. 'n' → logprob: -6.903693675994873
    8. ' s' → logprob: -7.028693675994873
    9. ' c' → logprob: -7.153693675994873
    10. ' b' → logprob: -7.278693675994873

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006264712195843458
    2. ' :' → logprob: -5.631264686584473
    3. ',' → logprob: -6.131264686584473
    4. '+' → logprob: -8.631264686584473
    5. '+:' → logprob: -9.131264686584473
    6. ':i' → logprob: -10.256264686584473
    7. ',:' → logprob: -10.381264686584473
    8. ' +' → logprob: -10.631264686584473
    9. ',i' → logprob: -10.756264686584473
    10. '=' → logprob: -11.256264686584473

Token 20: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.6416609287261963
    2. 'acc' → logprob: -1.3916609287261963
    3. '(acc' → logprob: -1.7666609287261963
    4. ' (' → logprob: -3.7666609287261963
    5. '[' → logprob: -4.266660690307617
    6. '(' → logprob: -5.141660690307617
    7. ' [' → logprob: -5.766660690307617
    8. '(lambda' → logprob: -6.016660690307617
    9. ' lambda' → logprob: -6.266660690307617
    10. 'lambda' → logprob: -6.766660690307617

Token 21: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0853915885090828
    2. ' +' → logprob: -2.5853915214538574
    3. '*' → logprob: -5.335391521453857
    4. '+[' → logprob: -7.835391521453857
    5. '+i' → logprob: -7.835391521453857
    6. '|' → logprob: -8.085391998291016
    7. ' *' → logprob: -8.835391998291016
    8. ',' → logprob: -9.210391998291016
    9. '-' → logprob: -9.460391998291016
    10. '+,' → logprob: -10.335391998291016

Token 22: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9704338908195496
    2. '[i' → logprob: -1.4704339504241943
    3. 'i' → logprob: -1.9704339504241943
    4. '(i' → logprob: -2.4704339504241943
    5. ' [' → logprob: -2.5954339504241943
    6. ' (' → logprob: -3.3454339504241943
    7. ' ' → logprob: -4.220433712005615
    8. '[' → logprob: -4.470433712005615
    9. '1' → logprob: -5.220433712005615
    10. ' int' → logprob: -5.470433712005615

Token 23: 'len' (ID: 3303)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5613102912902832
    2. '1' → logprob: -1.5613102912902832
    3. '(i' → logprob: -2.686310291290283
    4. 'N' → logprob: -2.936310291290283
    5. 'int' → logprob: -3.936310291290283
    6. ' i' → logprob: -3.936310291290283
    7. '[i' → logprob: -4.311310291290283
    8. ' ' → logprob: -4.436310291290283
    9. '(' → logprob: -4.936310291290283
    10. 'str' → logprob: -5.936310291290283

Token 24: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.2091333270072937
    2. '(' → logprob: -2.2091333866119385
    3. '(i' → logprob: -3.2091333866119385
    4. '(set' → logprob: -3.9591333866119385
    5. '(input' → logprob: -4.334133148193359
    6. '(list' → logprob: -6.084133148193359
    7. '(s' → logprob: -6.834133148193359
    8. '('' → logprob: -6.959133148193359
    9. '([' → logprob: -7.459133148193359
    10. '((' → logprob: -8.83413314819336

Token 25: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004202813375741243
    2. '(' → logprob: -6.129202842712402
    3. '(N' → logprob: -6.504202842712402
    4. '((' → logprob: -8.879202842712402
    5. '(abs' → logprob: -9.004202842712402
    6. 'i' → logprob: -9.379202842712402
    7. '(ans' → logprob: -10.379202842712402
    8. '(max' → logprob: -10.754202842712402
    9. ' (' → logprob: -11.129202842712402
    10. '(a' → logprob: -11.254202842712402

Token 26: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4225437343120575
    2. '**' → logprob: -1.1725437641143799
    3. ')))' → logprob: -4.422543525695801
    4. '*' → logprob: -4.547543525695801
    5. '))+' → logprob: -5.922543525695801
    6. '+' → logprob: -5.922543525695801
    7. '*i' → logprob: -6.047543525695801
    8. ')),' → logprob: -7.172543525695801
    9. '!' → logprob: -7.297543525695801
    10. ')' → logprob: -7.672543525695801

Token 27: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9527112245559692
    2. ' for' → logprob: -0.9527112245559692
    3. 'for' → logprob: -2.4527111053466797
    4. '),' → logprob: -3.0777111053466797
    5. '*i' → logprob: -3.5777111053466797
    6. '*' → logprob: -3.8277111053466797
    7. ' *' → logprob: -4.32771110534668
    8. '**' → logprob: -4.57771110534668
    9. '+' → logprob: -5.07771110534668
    10. ' ,' → logprob: -5.82771110534668

Token 28: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018521785736083984
    2. '3' → logprob: -4.768521785736084
    3. 'N' → logprob: -5.518521785736084
    4. ' ' → logprob: -6.018521785736084
    5. '10' → logprob: -6.768521785736084
    6. '1' → logprob: -7.768521785736084
    7. '7' → logprob: -8.018522262573242
    8. 'k' → logprob: -8.393522262573242
    9. 'K' → logprob: -8.643522262573242
    10. '5' → logprob: -8.643522262573242

Token 29: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004718126263469458
    2. '3' → logprob: -5.62971830368042
    3. '10' → logprob: -8.254717826843262
    4. ' ' → logprob: -8.379717826843262
    5. 'N' → logprob: -9.129717826843262
    6. '1' → logprob: -9.379717826843262
    7. '6' → logprob: -9.629717826843262
    8. '7' → logprob: -9.629717826843262
    9. '4' → logprob: -9.754717826843262
    10. '5' → logprob: -10.129717826843262

Token 30: ' ^' (ID: 7602)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.9509011507034302
    2. ' ==' → logprob: -1.2009011507034302
    3. ',' → logprob: -2.0759010314941406
    4. '==' → logprob: -2.0759010314941406
    5. ' ),' → logprob: -3.3259010314941406
    6. ' ,' → logprob: -4.575901031494141
    7. ')' → logprob: -5.075901031494141
    8. ' ' → logprob: -5.950901031494141
    9. ' for' → logprob: -6.200901031494141
    10. ')),' → logprob: -6.825901031494141

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2526251971721649
    2. ' ' → logprob: -1.5026252269744873
    3. ' (' → logprob: -8.752625465393066
    4. '(i' → logprob: -8.752625465393066
    5. '(' → logprob: -9.877625465393066
    6. '(N' → logprob: -9.877625465393066
    7. '0' → logprob: -10.377625465393066
    8. ' i' → logprob: -10.440125465393066
    9. 'N' → logprob: -10.565125465393066
    10. ' N' → logprob: -10.815125465393066

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004989399458281696
    2. ' ' → logprob: -8.37549877166748
    3. '(i' → logprob: -9.37549877166748
    4. '0' → logprob: -10.25049877166748
    5. '(' → logprob: -10.50049877166748
    6. 'True' → logprob: -10.62549877166748
    7. 'i' → logprob: -10.87549877166748
    8. '(N' → logprob: -10.87549877166748
    9. 'int' → logprob: -11.25049877166748
    10. 'N' → logprob: -11.37549877166748

Token 33: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09349782019853592
    2. '),' → logprob: -2.5934977531433105
    3. ' ,' → logprob: -5.0934977531433105
    4. ' for' → logprob: -5.2184977531433105
    5. ')' → logprob: -6.7184977531433105
    6. '))' → logprob: -7.4684977531433105
    7. ' ),' → logprob: -8.218498229980469
    8. 'for' → logprob: -8.343498229980469
    9. ' and' → logprob: -8.468498229980469
    10. ' ' → logprob: -9.343498229980469

Token 34: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19794902205467224
    2. ' for' → logprob: -1.9479490518569946
    3. '(range' → logprob: -3.947948932647705
    4. 'for' → logprob: -4.322948932647705
    5. ' ,' → logprob: -6.072948932647705
    6. '(' → logprob: -7.572948932647705
    7. 'range' → logprob: -7.572948932647705
    8. ')' → logprob: -8.072949409484863
    9. '+' → logprob: -8.447949409484863
    10. ' range' → logprob: -8.947949409484863

Token 35: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33867138624191284
    2. '1' → logprob: -1.3386714458465576
    3. '(i' → logprob: -4.3386712074279785
    4. ' i' → logprob: -5.4636712074279785
    5. ' ' → logprob: -5.5886712074279785
    6. 'int' → logprob: -6.2136712074279785
    7. 'N' → logprob: -7.2136712074279785
    8. '(' → logprob: -7.8386712074279785
    9. '2' → logprob: -8.463671684265137
    10. ' (' → logprob: -8.713671684265137

Token 36: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5406022071838379
    2. 'i' → logprob: -0.9156022071838379
    3. '(i' → logprob: -4.665602207183838
    4. 'int' → logprob: -5.415602207183838
    5. ' ' → logprob: -6.540602207183838
    6. ' i' → logprob: -7.540602207183838
    7. '(' → logprob: -7.915602207183838
    8. 'N' → logprob: -8.29060173034668
    9. '[i' → logprob: -8.29060173034668
    10. '   ' → logprob: -9.54060173034668

Token 37: ' +' (ID: 659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7141124606132507
    2. 'i' → logprob: -1.3391125202178955
    3. ',' → logprob: -2.8391125202178955
    4. '(i' → logprob: -2.9641125202178955
    5. '5' → logprob: -3.4641125202178955
    6. '.' → logprob: -3.5891125202178955
    7. '9' → logprob: -4.339112281799316
    8. '2' → logprob: -4.589112281799316
    9. ' i' → logprob: -4.964112281799316
    10. ')' → logprob: -5.339112281799316

Token 38: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13480910658836365
    2. ' ' → logprob: -2.3848090171813965
    3. ' (' → logprob: -4.2598090171813965
    4. ' i' → logprob: -4.8848090171813965
    5. 'i' → logprob: -5.3848090171813965
    6. '(i' → logprob: -5.6348090171813965
    7. '0' → logprob: -6.2598090171813965
    8. '(' → logprob: -6.7598090171813965
    9. 'len' → logprob: -8.384809494018555
    10. '   ' → logprob: -8.384809494018555

Token 39: 'len' (ID: 3303)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15125837922096252
    2. 'i' → logprob: -2.9012584686279297
    3. 'len' → logprob: -3.0262584686279297
    4. '(i' → logprob: -4.40125846862793
    5. ' ' → logprob: -4.77625846862793
    6. '(' → logprob: -5.65125846862793
    7. ' i' → logprob: -5.90125846862793
    8. '(len' → logprob: -5.90125846862793
    9. ' (' → logprob: -6.02625846862793
    10. '0' → logprob: -6.65125846862793

Token 40: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.002277054125443101
    2. '(' → logprob: -6.12727689743042
    3. 'str' → logprob: -9.502277374267578
    4. ' (' → logprob: -12.127277374267578
    5. '(s' → logprob: -12.627277374267578
    6. '<|end|>' → logprob: -12.627277374267578
    7. ' str' → logprob: -13.502277374267578
    8. ')' → logprob: -14.127277374267578
    9. '=str' → logprob: -14.377277374267578
    10. '[str' → logprob: -14.502277374267578

Token 41: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00033403540146537125
    2. '(str' → logprob: -8.250333786010742
    3. '(' → logprob: -10.250333786010742
    4. 'i' → logprob: -10.375333786010742
    5. 'str' → logprob: -13.375333786010742
    6. ' (' → logprob: -14.375333786010742
    7. '((' → logprob: -14.500333786010742
    8. '(n' → logprob: -14.625333786010742
    9. '{i' → logprob: -14.625333786010742
    10. '(a' → logprob: -14.750333786010742

Token 42: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004800818860530853
    2. ')' → logprob: -5.379800796508789
    3. '%' → logprob: -9.879800796508789
    4. ')))' → logprob: -10.129800796508789
    5. '//' → logprob: -10.879800796508789
    6. ' ' → logprob: -11.254800796508789
    7. ')%' → logprob: -11.379800796508789
    8. '-' → logprob: -11.629800796508789
    9. ' ))' → logprob: -11.879800796508789
    10. 'i' → logprob: -12.254800796508789

Token 43: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07855912297964096
    2. ' %' → logprob: -2.828559160232544
    3. ')' → logprob: -4.328558921813965
    4. '(i' → logprob: -6.578558921813965
    5. ')%' → logprob: -6.828558921813965
    6. ' ' → logprob: -8.578558921813965
    7. '%i' → logprob: -8.953558921813965
    8. '()%' → logprob: -9.078558921813965
    9. '```' → logprob: -9.453558921813965
    10. '(' → logprob: -9.453558921813965

Token 44: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10032959282398224
    2. ' ' → logprob: -2.350329637527466
    3. '1' → logprob: -9.350329399108887
    4. ')' → logprob: -11.725329399108887
    5. '0' → logprob: -12.787829399108887
    6. '(' → logprob: -13.037829399108887
    7. '3' → logprob: -13.162829399108887
    8. '<|end|>' → logprob: -13.475329399108887
    9. '```' → logprob: -13.600329399108887
    10. '  ' → logprob: -13.662829399108887

Token 45: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001523790997453034
    2. ' ' → logprob: -7.126523971557617
    3. '1' → logprob: -7.376523971557617
    4. ')' → logprob: -10.939023971557617
    5. '```' → logprob: -11.189023971557617
    6. '0' → logprob: -11.314023971557617
    7. '3' → logprob: -11.939023971557617
    8. '10' → logprob: -12.564023971557617
    9. '>' → logprob: -12.751523971557617
    10. '7' → logprob: -13.251523971557617

Token 46: ')' (ID: 8)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.06116770580410957
    2. '^' → logprob: -3.3111677169799805
    3. ')' → logprob: -4.4361677169799805
    4. ' ' → logprob: -4.6861677169799805
    5. ' *' → logprob: -7.4361677169799805
    6. ' ' → logprob: -8.31116771697998
    7. ' )' → logprob: -8.43616771697998
    8. ' %' → logprob: -9.06116771697998
    9. '%' → logprob: -9.43616771697998
    10. '),' → logprob: -9.43616771697998

Token 47: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.24707508087158203
    2. '*' → logprob: -1.622075080871582
    3. ')' → logprob: -4.622075080871582
    4. ' ' → logprob: -5.622075080871582
    5. '*i' → logprob: -5.747075080871582
    6. ',' → logprob: -6.122075080871582
    7. '1' → logprob: -7.247075080871582
    8. ')*' → logprob: -7.747075080871582
    9. '),' → logprob: -8.372075080871582
    10. '<|end|>' → logprob: -9.122075080871582

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02516101486980915
    2. 'i' → logprob: -4.025160789489746
    3. ' ' → logprob: -5.400160789489746
    4. '(i' → logprob: -6.775160789489746
    5. '(' → logprob: -7.900160789489746
    6. ' i' → logprob: -8.150160789489746
    7. '0' → logprob: -8.525160789489746
    8. 'int' → logprob: -8.775160789489746
    9. '2' → logprob: -9.525160789489746
    10. '   ' → logprob: -9.775160789489746

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01304457988590002
    2. 'i' → logprob: -4.513044357299805
    3. ' ' → logprob: -7.263044357299805
    4. '(i' → logprob: -8.263044357299805
    5. 'int' → logprob: -8.388044357299805
    6. '(' → logprob: -8.388044357299805
    7. '-' → logprob: -9.138044357299805
    8. '0' → logprob: -9.138044357299805
    9. '   ' → logprob: -9.513044357299805
    10. '2' → logprob: -9.763044357299805

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035876594483852386
    2. ' for' → logprob: -4.285876750946045
    3. '(i' → logprob: -4.410876750946045
    4. '(' → logprob: -6.035876750946045
    5. ' ,' → logprob: -6.160876750946045
    6. ',i' → logprob: -6.160876750946045
    7. 'for' → logprob: -6.910876750946045
    8. '(range' → logprob: -7.410876750946045
    9. ')' → logprob: -7.910876750946045
    10. ' (' → logprob: -8.285876274108887

Token 51: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4748947322368622
    2. ' range' → logprob: -0.9748947620391846
    3. '(range' → logprob: -7.4748945236206055
    4. '[' → logprob: -9.474894523620605
    5. ')' → logprob: -9.599894523620605
    6. '	range' → logprob: -9.724894523620605
    7. ' xrange' → logprob: -10.974894523620605
    8. ' [' → logprob: -11.974894523620605
    9. ' ' → logprob: -12.224894523620605
    10. '<|end|>' → logprob: -13.162394523620605

Token 52: 'i' (ID: 72)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036366537678986788
    2. ' range' → logprob: -5.628636837005615
    3. '(range' → logprob: -10.753636360168457
    4. 'i' → logprob: -12.378636360168457
    5. '	range' → logprob: -13.128636360168457
    6. ' ' → logprob: -13.378636360168457
    7. 'list' → logprob: -13.378636360168457
    8. 'str' → logprob: -14.003636360168457
    9. ')' → logprob: -14.253636360168457
    10. '```' → logprob: -14.378636360168457

Token 53: ' for' (ID: 395)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.5969913601875305
    2. ',' → logprob: -1.2219913005828857
    3. ' for' → logprob: -2.7219913005828857
    4. 'range' → logprob: -3.0969913005828857
    5. '(' → logprob: -3.5969913005828857
    6. ' range' → logprob: -4.596991539001465
    7. '(N' → logprob: -6.096991539001465
    8. 'for' → logprob: -6.471991539001465
    9. ' in' → logprob: -7.346991539001465
    10. ' ' → logprob: -7.596991539001465

Token 54: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.030454229563474655
    2. 'range' → logprob: -3.530454158782959
    3. '(range' → logprob: -7.280454158782959
    4. '<|end|>' → logprob: -11.905454635620117
    5. '	range' → logprob: -12.155454635620117
    6. ' ' → logprob: -13.280454635620117
    7. ' in' → logprob: -14.780454635620117
    8. ' xrange' → logprob: -15.530454635620117
    9. '_range' → logprob: -16.030454635620117
    10. '<|end|>' → logprob: -16.280454635620117

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6729860305786133
    2. 'range' → logprob: -1.5479860305786133
    3. ' range' → logprob: -1.5479860305786133
    4. 'in' → logprob: -3.1729860305786133
    5. '(range' → logprob: -3.7979860305786133
    6. '<|end|>' → logprob: -9.297986030578613
    7. ' ' → logprob: -10.547986030578613
    8. '	range' → logprob: -10.797986030578613
    9. ')' → logprob: -12.172986030578613
    10. '_range' → logprob: -12.297986030578613

Token 56: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38688352704048157
    2. ' range' → logprob: -1.1368834972381592
    3. ' ' → logprob: -12.386883735656738
    4. '	range' → logprob: -12.386883735656738
    5. '(range' → logprob: -12.886883735656738
    6. ' xrange' → logprob: -14.761883735656738
    7. '<|end|>' → logprob: -15.261883735656738
    8. ')' → logprob: -15.886883735656738
    9. 'rang' → logprob: -16.261882781982422
    10. '```' → logprob: -16.386882781982422

Token 57: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009777102619409561
    2. '(N' → logprob: -4.634777069091797
    3. '(n' → logprob: -11.634777069091797
    4. '1' → logprob: -12.009777069091797
    5. ' (' → logprob: -13.009777069091797
    6. '```' → logprob: -13.634777069091797
    7. '(
' → logprob: -14.009777069091797
    8. ')' → logprob: -14.884777069091797
    9. 'N' → logprob: -15.009777069091797
    10. ' ' → logprob: -15.009777069091797

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02840835601091385
    2. 'N' → logprob: -3.6534082889556885
    3. '(' → logprob: -6.903408527374268
    4. ' ' → logprob: -7.403408527374268
    5. '2' → logprob: -8.15340805053711
    6. ' N' → logprob: -9.27840805053711
    7. '(N' → logprob: -10.27840805053711
    8. '0' → logprob: -10.65340805053711
    9. ',' → logprob: -11.02840805053711
    10. '   ' → logprob: -11.65340805053711

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007832915522158146
    2. ',N' → logprob: -5.382833003997803
    3. ' ,' → logprob: -6.257833003997803
    4. '(N' → logprob: -7.507833003997803
    5. 'N' → logprob: -7.882833003997803
    6. '1' → logprob: -8.757832527160645
    7. '(' → logprob: -8.757832527160645
    8. ',n' → logprob: -11.007832527160645
    9. ' N' → logprob: -11.132832527160645
    10. ' ' → logprob: -11.507832527160645

Token 60: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.020543403923511505
    2. ' N' → logprob: -3.895543336868286
    3. ' ' → logprob: -14.895543098449707
    4. '1' → logprob: -15.395543098449707
    5. '(N' → logprob: -15.395543098449707
    6. 'n' → logprob: -15.645543098449707
    7. '	N' → logprob: -15.645543098449707
    8. ' ' → logprob: -15.895543098449707
    9. ',' → logprob: -17.270544052124023
    10. '{' → logprob: -17.645544052124023

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009757863357663155
    2. ' +' → logprob: -4.634757995605469
    3. ')' → logprob: -14.384757995605469
    4. ')+' → logprob: -15.134757995605469
    5. '+
' → logprob: -15.384757995605469
    6. '```' → logprob: -15.509757995605469
    7. '＋' → logprob: -15.759757995605469
    8. ' ' → logprob: -16.25975799560547
    9. '),' → logprob: -16.63475799560547
    10. ')])' → logprob: -17.25975799560547

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010590101592242718
    2. ' ' → logprob: -6.876059055328369
    3. '2' → logprob: -10.626058578491211
    4. 'N' → logprob: -14.501058578491211
    5. '```' → logprob: -14.501058578491211
    6. '   ' → logprob: -15.251058578491211
    7. '  ' → logprob: -15.876058578491211
    8. ' N' → logprob: -16.12605857849121
    9. '(' → logprob: -16.37605857849121
    10. '`' → logprob: -16.81355857849121

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.690834273584187e-05
    2. ' ' → logprob: -10.87503719329834
    3. '2' → logprob: -11.25003719329834
    4. 'N' → logprob: -13.12503719329834
    5. '```' → logprob: -13.75003719329834
    6. '   ' → logprob: -15.18753719329834
    7. '+' → logprob: -15.31253719329834
    8. '  ' → logprob: -16.250036239624023
    9. '))' → logprob: -16.250036239624023
    10. '``' → logprob: -16.250036239624023

Token 64: ')],' (ID: 60559)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.9354647397994995
    2. ')],' → logprob: -1.0604647397994995
    3. ')]' → logprob: -1.4354647397994995
    4. '],' → logprob: -4.935464859008789
    5. '),' → logprob: -5.310464859008789
    6. ')' → logprob: -5.310464859008789
    7. '])' → logprob: -5.935464859008789
    8. ']))' → logprob: -6.185464859008789
    9. ',' → logprob: -7.935464859008789
    10. ']),' → logprob: -8.185464859008789

Token 65: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002479700604453683
    2. ' ' → logprob: -6.002479553222656
    3. '1' → logprob: -12.752479553222656
    4. ')' → logprob: -13.877479553222656
    5. '  ' → logprob: -17.127479553222656
    6. '2' → logprob: -17.127479553222656
    7. '   ' → logprob: -17.752479553222656
    8. ' )' → logprob: -17.939979553222656
    9. '`' → logprob: -18.189979553222656
    10. '00' → logprob: -18.439979553222656

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.090760431718081e-05
    2. ' ' → logprob: -9.375090599060059
    3. '1' → logprob: -12.125090599060059
    4. ')' → logprob: -14.750090599060059
    5. '2' → logprob: -16.875091552734375
    6. '000' → logprob: -18.187591552734375
    7. '00' → logprob: -18.250091552734375
    8. '`' → logprob: -18.375091552734375
    9. '   ' → logprob: -18.437591552734375
    10. '۰' → logprob: -18.562591552734375

Token 67: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001933873863890767
    2. '))' → logprob: -6.251934051513672
    3. ')))' → logprob: -12.501934051513672
    4. ' )' → logprob: -14.126934051513672
    5. ')`' → logprob: -15.126934051513672
    6. ')
' → logprob: -15.376934051513672
    7. '),' → logprob: -15.876934051513672
    8. '`)' → logprob: -16.501934051513672
    9. ')>' → logprob: -17.126934051513672
    10. '）' → logprob: -17.376934051513672

Token 68: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.951771421066951e-05
    2. '))' → logprob: -10.750029563903809
    3. ' )' → logprob: -13.125029563903809
    4. ')
' → logprob: -13.375029563903809
    5. ')))' → logprob: -13.625029563903809
    6. '`)' → logprob: -13.875029563903809
    7. '')' → logprob: -14.625029563903809
    8. ')`' → logprob: -14.625029563903809
    9. '**' → logprob: -15.125029563903809
    10. '),' → logprob: -15.500029563903809

Token 69: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2999442517757416
    2. ' _' → logprob: -1.424944281578064
    3. ' i' → logprob: -4.9249444007873535
    4. ' range' → logprob: -5.1749444007873535
    5. ' ' → logprob: -6.4249444007873535
    6. 'range' → logprob: -7.2999444007873535
    7. ' str' → logprob: -7.6749444007873535
    8. ' s' → logprob: -7.9249444007873535
    9. 'i' → logprob: -7.9249444007873535
    10. ' n' → logprob: -8.174943923950195

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04192133620381355
    2. ' ' → logprob: -4.416921138763428
    3. ' _' → logprob: -4.416921138763428
    4. ' range' → logprob: -5.166921138763428
    5. '_' → logprob: -5.291921138763428
    6. ' )' → logprob: -6.291921138763428
    7. 'in' → logprob: -6.291921138763428
    8. 'range' → logprob: -6.791921138763428
    9. ')' → logprob: -6.916921138763428
    10. '  ' → logprob: -9.166921615600586

Token 71: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08797643333673477
    2. ' range' → logprob: -2.5879764556884766
    3. '[' → logprob: -4.712976455688477
    4. '[]' → logprob: -10.462976455688477
    5. ' [' → logprob: -11.462976455688477
    6. ' ' → logprob: -12.212976455688477
    7. '(range' → logprob: -12.337976455688477
    8. '(' → logprob: -12.712976455688477
    9. '	range' → logprob: -12.712976455688477
    10. '['' → logprob: -13.587976455688477

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003809833142440766
    2. 'None' → logprob: -8.750380516052246
    3. 'range' → logprob: -8.750380516052246
    4. ' ' → logprob: -10.125380516052246
    5. '_' → logprob: -11.250380516052246
    6. ' range' → logprob: -11.750380516052246
    7. '1' → logprob: -13.750380516052246
    8. '[' → logprob: -14.750380516052246
    9. 'True' → logprob: -15.375380516052246
    10. ' None' → logprob: -15.375380516052246

Token 73: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07911328971385956
    2. ']' → logprob: -2.579113245010376
    3. ' ])' → logprob: -8.954113006591797
    4. '],' → logprob: -10.704113006591797
    5. ')' → logprob: -11.204113006591797
    6. ')]' → logprob: -11.329113006591797
    7. ']])' → logprob: -11.454113006591797
    8. ')])' → logprob: -11.829113006591797
    9. ' ]' → logprob: -12.329113006591797
    10. '])]' → logprob: -12.704113006591797

Token 74: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046146612614393234
    2. '<|end|>' → logprob: -3.1711466312408447
    3. '
' → logprob: -6.671146392822266
    4. '(' → logprob: -7.296146392822266
    5. '#' → logprob: -7.921146392822266
    6. ' ' → logprob: -8.046146392822266
    7. '<|end|>' → logprob: -8.921146392822266
    8. '```' → logprob: -9.046146392822266
    9. ' )' → logprob: -9.796146392822266
    10. ')
' → logprob: -10.046146392822266

Token 75: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.062014512717723846
    2. '(' → logprob: -2.812014579772949
    3. '(
' → logprob: -10.93701457977295
    4. 'ans' → logprob: -11.81201457977295
    5. '(answer' → logprob: -12.43701457977295
    6. '('' → logprob: -12.56201457977295
    7. '(len' → logprob: -12.93701457977295
    8. '(sum' → logprob: -12.93701457977295
    9. ' (' → logprob: -13.06201457977295
    10. '(an' → logprob: -13.93701457977295

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. '))' → logprob: -11.75001335144043
    3. '`)' → logprob: -12.75001335144043
    4. ')`' → logprob: -14.50001335144043
    5. ')
' → logprob: -14.75001335144043
    6. ' )' → logprob: -15.00001335144043
    7. '')' → logprob: -15.50001335144043
    8. ')))' → logprob: -16.12501335144043
    9. '）' → logprob: -16.12501335144043
    10. '```' → logprob: -16.25001335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 74
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 28
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 37.84%
Précision adaptée (1ère position): 37.84%
Précision (top 10): 72.97%
================================================================================
