================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np
from collections import Counter

# On lit les deux entiers (pourquoi pas split tout court ?)
N, K = [int(x) for x in input().split()]

# ok, là je veux tous les restes possibles sur 1..N
restes = np.array(range(1, N + 1)) % K

# Je compte les occurrences de chaque reste, ça ira plus vite après
stats = Counter(restes)

# c'est cette formule bizarre... enfin, j'ai compris l'idée
result = 0
for r in stats:
    if (r + r) % K == 0:
        c = stats[r]
        result = result + c * c * c  # bon c**3 passe aussi, mais voilà

# Affichage final (nada de f-string ici)
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.001180704333819449
    2. 'np' → logprob: -6.751180648803711
    3. ' ' → logprob: -12.001180648803711
    4. ' numpy' → logprob: -12.376180648803711
    5. ' ' → logprob: -15.751180648803711
    6. '```' → logprob: -17.75118064880371
    7. 'numpy' → logprob: -17.87618064880371
    8. '_np' → logprob: -18.12618064880371
    9. '(np' → logprob: -18.50118064880371
    10. ' n' → logprob: -18.75118064880371

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.605406641960144
    2. '\n' → logprob: -1.480406641960144
    3. 'newline' → logprob: -2.3554067611694336
    4. 'import' → logprob: -3.2304067611694336
    5. '\' → logprob: -3.2304067611694336
    6. '<|end|>' → logprob: -3.8554067611694336
    7. '```' → logprob: -4.480406761169434
    8. '
' → logprob: -5.480406761169434
    9. '[' → logprob: -5.855406761169434
    10. '<|end|>' → logprob: -6.480406761169434

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01564916968345642
    2. '\n' → logprob: -5.140649318695068
    3. '\' → logprob: -6.015649318695068
    4. '```' → logprob: -6.140649318695068
    5. '<|end|>' → logprob: -6.890649318695068
    6. 'import' → logprob: -6.890649318695068
    7. 'newline' → logprob: -7.390649318695068
    8. '
' → logprob: -7.640649318695068
    9. '#' → logprob: -8.01564884185791
    10. '[' → logprob: -8.26564884185791

Token 6: ' collections' (ID: 22690)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.07032729685306549
    2. ' pandas' → logprob: -3.5703272819519043
    3. 'sk' → logprob: -3.6953272819519043
    4. ' scipy' → logprob: -4.445327281951904
    5. ' tensorflow' → logprob: -6.070327281951904
    6. 'sc' → logprob: -8.195327758789062
    7. ' keras' → logprob: -9.320327758789062
    8. ' matplotlib' → logprob: -9.320327758789062
    9. ' math' → logprob: -9.320327758789062
    10. 'p' → logprob: -9.695327758789062

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.474537193775177
    2. 'import' → logprob: -0.974537193775177
    3. '```' → logprob: -8.349536895751953
    4. 'Counter' → logprob: -9.849536895751953
    5. '.Counter' → logprob: -10.474536895751953
    6. '.' → logprob: -10.724536895751953
    7. ' defaultdict' → logprob: -10.724536895751953
    8. ' Counter' → logprob: -10.849536895751953
    9. ' ' → logprob: -11.224536895751953
    10. 'abc' → logprob: -11.349536895751953

Token 8: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2906546890735626
    2. ' deque' → logprob: -1.7906546592712402
    3. ' abc' → logprob: -2.9156546592712402
    4. 'deque' → logprob: -3.6656546592712402
    5. ' Counter' → logprob: -5.66565465927124
    6. ' named' → logprob: -7.04065465927124
    7. 'abc' → logprob: -7.16565465927124
    8. ' Ordered' → logprob: -8.665655136108398
    9. ' import' → logprob: -9.165655136108398
    10. 'Counter' → logprob: -9.790655136108398

Token 9: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0048125982284546
    2. '\n' → logprob: -1.0048125982284546
    3. 'import' → logprob: -2.004812717437744
    4. '```' → logprob: -2.879812717437744
    5. '

' → logprob: -4.254812717437744
    6. '\' → logprob: -4.379812717437744
    7. '' → logprob: -5.004812717437744
    8. 'n' → logprob: -5.254812717437744
    9. 'def' → logprob: -5.504812717437744
    10. '#' → logprob: -5.504812717437744

Token 10: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.658757746219635
    2. 'd' → logprob: -1.6587576866149902
    3. '.' → logprob: -2.2837576866149902
    4. '\' → logprob: -3.4087576866149902
    5. 'def' → logprob: -3.6587576866149902
    6. 'data' → logprob: -3.6587576866149902
    7. ',' → logprob: -3.6587576866149902
    8. '`' → logprob: -3.9087576866149902
    9. '\n' → logprob: -4.28375768661499
    10. '```' → logprob: -5.15875768661499

Token 11: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3773366212844849
    2. 'd' → logprob: -1.7523366212844849
    3. ' data' → logprob: -1.8773366212844849
    4. 'data' → logprob: -2.0023365020751953
    5. 'def' → logprob: -2.1273365020751953
    6. ' def' → logprob: -2.7523365020751953
    7. ' #' → logprob: -3.2523365020751953
    8. ' d' → logprob: -4.377336502075195
    9. '#' → logprob: -4.377336502075195
    10. 'result' → logprob: -5.377336502075195

Token 12: ' lit' (ID: 11980)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.022012678906321526
    2. ' e' → logprob: -3.897012710571289
    3. 'line' → logprob: -7.897012710571289
    4. ' import' → logprob: -8.272012710571289
    5. 'ce' → logprob: -8.522012710571289
    6. ' the' → logprob: -8.897012710571289
    7. 'ly' → logprob: -9.397012710571289
    8. 'eline' → logprob: -9.397012710571289
    9. ' line' → logprob: -10.022012710571289
    10. 'c' → logprob: -10.147012710571289

Token 13: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5817839503288269
    2. ' ' → logprob: -1.0817840099334717
    3. ' le' → logprob: -3.2067840099334717
    4. ' (' → logprob: -3.8317840099334717
    5. '('' → logprob: -3.9567840099334717
    6. ' la' → logprob: -5.831783771514893
    7. ' the' → logprob: -5.956783771514893
    8. 'le' → logprob: -6.331783771514893
    9. '()' → logprob: -6.456783771514893
    10. '("' → logprob: -6.456783771514893

Token 14: ' deux' (ID: 10301)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.6766219139099121
    2. 'd' → logprob: -1.801621913909912
    3. ' mots' → logprob: -1.926621913909912
    4. ' tokens' → logprob: -3.426621913909912
    5. ' data' → logprob: -3.551621913909912
    6. ' textes' → logprob: -4.051621913909912
    7. 'tokens' → logprob: -4.051621913909912
    8. 'data' → logprob: -4.176621913909912
    9. 'm' → logprob: -4.301621913909912
    10. 'texte' → logprob: -4.926621913909912

Token 15: ' ent' (ID: 1121)
  Prédit: ' fichiers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fichiers' → logprob: -0.49832847714424133
    2. ' tableaux' → logprob: -2.248328447341919
    3. ' lignes' → logprob: -2.248328447341919
    4. ' listes' → logprob: -2.873328447341919
    5. ' ' → logprob: -2.998328447341919
    6. 'f' → logprob: -3.748328447341919
    7. ' f' → logprob: -4.498328685760498
    8. ' arrays' → logprob: -4.623328685760498
    9. '_' → logprob: -4.998328685760498
    10. 'l' → logprob: -5.748328685760498

Token 16: 'iers' (ID: 11012)
  Prédit: 'êtes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.3659469187259674
    2. 'r' → logprob: -1.740946888923645
    3. 'etes' → logprob: -2.1159470081329346
    4. 'ités' → logprob: -5.3659467697143555
    5. 'iers' → logprob: -5.6159467697143555
    6. 't' → logprob: -7.6159467697143555
    7. 'rees' → logprob: -8.115946769714355
    8. 'ières' → logprob: -8.365946769714355
    9. 'ites' → logprob: -8.615946769714355
    10. 'et' → logprob: -8.865946769714355

Token 17: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1626358926296234
    2. 'n' → logprob: -2.4126358032226562
    3. 'a' → logprob: -3.6626358032226562
    4. 's' → logprob: -4.287635803222656
    5. '(' → logprob: -5.162635803222656
    6. ' n' → logprob: -5.537635803222656
    7. ' a' → logprob: -5.787635803222656
    8. ' )' → logprob: -6.787635803222656
    9. 'x' → logprob: -7.537635803222656
    10. '_' → logprob: -7.537635803222656

Token 18: 'pour' (ID: 52723)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5735453367233276
    2. ')' → logprob: -1.3235453367233276
    3. ' ' → logprob: -2.698545455932617
    4. ' n' → logprob: -3.573545455932617
    5. 'a' → logprob: -3.698545455932617
    6. 'n' → logprob: -3.823545455932617
    7. ',' → logprob: -5.198545455932617
    8. 'l' → logprob: -5.448545455932617
    9. 'd' → logprob: -5.448545455932617
    10. ' ,' → logprob: -6.073545455932617

Token 19: 'quoi' (ID: 27876)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8092426657676697
    2. 'l' → logprob: -1.5592427253723145
    3. 'la' → logprob: -2.6842427253723145
    4. ' le' → logprob: -3.1842427253723145
    5. 'a' → logprob: -3.3092427253723145
    6. ' n' → logprob: -3.5592427253723145
    7. 'le' → logprob: -3.9342427253723145
    8. ')' → logprob: -4.0592427253723145
    9. ' l' → logprob: -4.0592427253723145
    10. ' input' → logprob: -4.1842427253723145

Token 20: ' pas' (ID: 2173)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2437878847122192
    2. '?' → logprob: -1.2437878847122192
    3. ' ' → logprob: -1.7437878847122192
    4. ' ' → logprob: -2.2437877655029297
    5. ' )' → logprob: -2.4937877655029297
    6. '?)' → logprob: -4.36878776550293
    7. ' ?)' → logprob: -4.74378776550293
    8. 's' → logprob: -5.36878776550293
    9. '_' → logprob: -5.36878776550293
    10. 't' → logprob: -5.99378776550293

Token 21: ' split' (ID: 12648)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.4671604633331299
    2. ')' → logprob: -2.09216046333313
    3. ',' → logprob: -2.71716046333313
    4. ' en' → logprob: -3.59216046333313
    5. ' ' → logprob: -3.71716046333313
    6. '?)' → logprob: -4.092160224914551
    7. ' on' → logprob: -4.217160224914551
    8. ' ?' → logprob: -4.467160224914551
    9. ' dans' → logprob: -4.592160224914551
    10. ' pour' → logprob: -4.842160224914551

Token 22: ' tout' (ID: 5501)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5069351196289062
    2. ')' → logprob: -1.1319351196289062
    3. '())' → logprob: -3.2569351196289062
    4. ' )' → logprob: -3.7569351196289062
    5. '('' → logprob: -5.506935119628906
    6. '?' → logprob: -6.131935119628906
    7. '(' → logprob: -7.006935119628906
    8. '()?' → logprob: -7.131935119628906
    9. ',' → logprob: -7.381935119628906
    10. '(',' → logprob: -7.881935119628906

Token 23: ' court' (ID: 10314)
  Prédit: ' simplement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' simplement' → logprob: -0.051310595124959946
    2. ' en' → logprob: -4.3013105392456055
    3. ' le' → logprob: -4.9263105392456055
    4. ')' → logprob: -5.4263105392456055
    5. 'simple' → logprob: -5.5513105392456055
    6. ' ' → logprob: -5.6763105392456055
    7. '?' → logprob: -5.8013105392456055
    8. '```' → logprob: -6.0513105392456055
    9. 'sur' → logprob: -6.5513105392456055
    10. 'en' → logprob: -6.8013105392456055

Token 24: ' ?' (ID: 1423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7998822331428528
    2. '?' → logprob: -1.299882173538208
    3. '?)' → logprob: -1.799882173538208
    4. ' ?)' → logprob: -2.549882173538208
    5. ' ?' → logprob: -3.799882173538208
    6. ',' → logprob: -5.299882411956787
    7. ' )' → logprob: -5.549882411956787
    8. '()' → logprob: -7.174882411956787
    9. ')?' → logprob: -7.299882411956787
    10. ' sur' → logprob: -7.924882411956787

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22831612825393677
    2. '?' → logprob: -2.228316068649292
    3. '?)' → logprob: -3.603316068649292
    4. '()' → logprob: -4.103316307067871
    5. ' ?' → logprob: -4.228316307067871
    6. ',' → logprob: -4.478316307067871
    7. ' )' → logprob: -4.603316307067871
    8. ' ?)' → logprob: -4.728316307067871
    9. ' sur' → logprob: -6.228316307067871
    10. '):' → logprob: -6.478316307067871

Token 26: 'N' (ID: 45)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7396619319915771
    2. 'input' → logprob: -1.7396619319915771
    3. 'ent' → logprob: -1.7396619319915771
    4. 'n' → logprob: -1.8646619319915771
    5. 'a' → logprob: -2.739661931991577
    6. ',' → logprob: -3.114661931991577
    7. '(' → logprob: -3.489661931991577
    8. 'num' → logprob: -3.864661931991577
    9. 'user' → logprob: -4.489662170410156
    10. ')' → logprob: -4.489662170410156

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005487450980581343
    2. ' ,' → logprob: -8.500548362731934
    3. ' =' → logprob: -8.500548362731934
    4. '=' → logprob: -9.500548362731934
    5. ',N' → logprob: -10.875548362731934
    6. ',S' → logprob: -11.250548362731934
    7. ' ' → logprob: -12.125548362731934
    8. ',s' → logprob: -12.250548362731934
    9. ',M' → logprob: -12.625548362731934
    10. ',K' → logprob: -12.875548362731934

Token 28: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5808915495872498
    2. ' M' → logprob: -0.8308915495872498
    3. 'K' → logprob: -6.4558916091918945
    4. ' K' → logprob: -6.7058916091918945
    5. ' ' → logprob: -7.4558916091918945
    6. '=' → logprob: -8.205891609191895
    7. 'input' → logprob: -8.330891609191895
    8. 'Q' → logprob: -8.830891609191895
    9. 'm' → logprob: -8.955891609191895
    10. 'T' → logprob: -9.080891609191895

Token 29: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144598186016083
    2. ' =' → logprob: -1.7014459371566772
    3. '=input' → logprob: -10.576445579528809
    4. '=int' → logprob: -12.326445579528809
    5. ',' → logprob: -13.451445579528809
    6. ')' → logprob: -15.076445579528809
    7. '=

' → logprob: -15.826445579528809
    8. '=line' → logprob: -16.076446533203125
    9. ' ' → logprob: -16.576446533203125
    10. '=N' → logprob: -16.576446533203125

Token 30: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004082554951310158
    2. 'map' → logprob: -5.504082679748535
    3. ' ' → logprob: -13.004082679748535
    4. ' input' → logprob: -13.754082679748535
    5. ' list' → logprob: -15.004082679748535
    6. ' ' → logprob: -15.754082679748535
    7. ' int' → logprob: -15.879082679748535
    8. '	map' → logprob: -16.62908172607422
    9. 'input' → logprob: -16.75408172607422
    10. 'int' → logprob: -16.75408172607422

Token 31: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018169725313782692
    2. ' int' → logprob: -4.01816987991333
    3. 'map' → logprob: -11.643169403076172
    4. ' map' → logprob: -12.768169403076172
    5. ' ' → logprob: -12.893169403076172
    6. '```' → logprob: -13.518169403076172
    7. ']int' → logprob: -13.768169403076172
    8. '0' → logprob: -14.018169403076172
    9. '1' → logprob: -14.768169403076172
    10. '(int' → logprob: -14.768169403076172

Token 32: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.48477575182914734
    2. '(i' → logprob: -0.9847757816314697
    3. '(s' → logprob: -4.859775543212891
    4. '(' → logprob: -6.484775543212891
    5. ']' → logprob: -7.359775543212891
    6. '()]' → logprob: -7.859775543212891
    7. '(input' → logprob: -8.35977554321289
    8. '()' → logprob: -10.85977554321289
    9. '(_)' → logprob: -10.85977554321289
    10. '(n' → logprob: -11.35977554321289

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.625001907348633
    3. '())' → logprob: -14.875001907348633
    4. 'input' → logprob: -15.625001907348633
    5. '(' → logprob: -16.250001907348633
    6. '(x' → logprob: -16.625001907348633
    7. ')`' → logprob: -16.625001907348633
    8. '))' → logprob: -16.750001907348633
    9. '')' → logprob: -17.000001907348633
    10. '()' → logprob: -17.000001907348633

Token 34: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7053797245025635
    2. ' for' → logprob: -1.3303797245025635
    3. 'for' → logprob: -1.8303797245025635
    4. 'input' → logprob: -2.8303797245025635
    5. '(input' → logprob: -4.330379486083984
    6. ']' → logprob: -5.205379486083984
    7. '<|end|>' → logprob: -7.080379486083984
    8. '()' → logprob: -7.455379486083984
    9. ' input' → logprob: -7.580379486083984
    10. '(' → logprob: -7.705379486083984

Token 35: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.00761136319488287
    2. 'input' → logprob: -4.882611274719238
    3. ' in' → logprob: -13.507611274719238
    4. ' x' → logprob: -13.507611274719238
    5. '=input' → logprob: -14.132611274719238
    6. '(input' → logprob: -14.382611274719238
    7. ' ' → logprob: -15.007611274719238
    8. '	input' → logprob: -15.632611274719238
    9. ' line' → logprob: -16.007612228393555
    10. '_input' → logprob: -16.257612228393555

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.37836527824401855
    2. 'input' → logprob: -1.6283652782440186
    3. ' input' → logprob: -2.2533652782440186
    4. 'in' → logprob: -5.378365516662598
    5. '(input' → logprob: -5.378365516662598
    6. '=input' → logprob: -5.878365516662598
    7. 'import' → logprob: -7.753365516662598
    8. '<|end|>' → logprob: -8.503365516662598
    9. ' ' → logprob: -8.628365516662598
    10. ')' → logprob: -8.628365516662598

Token 37: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047935113310814
    2. ' input' → logprob: -4.511047840118408
    3. '(input' → logprob: -17.26104736328125
    4. '=input' → logprob: -17.88604736328125
    5. '<input' → logprob: -18.13604736328125
    6. ' ' → logprob: -18.13604736328125
    7. '```' → logprob: -18.26104736328125
    8. '	input' → logprob: -18.76104736328125
    9. 'range' → logprob: -18.76104736328125
    10. '`' → logprob: -19.51104736328125

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1445547193288803
    2. '()]' → logprob: -2.394554615020752
    3. '()' → logprob: -3.144554615020752
    4. '(' → logprob: -8.51955509185791
    5. '()].' → logprob: -9.51955509185791
    6. '())' → logprob: -11.39455509185791
    7. '()][' → logprob: -13.39455509185791
    8. '()],' → logprob: -13.51955509185791
    9. ' ()' → logprob: -14.14455509185791
    10. '()>' → logprob: -14.39455509185791

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011727249948307872
    2. 'strip' → logprob: -6.7511725425720215
    3. 'rstrip' → logprob: -13.37617301940918
    4. ' split' → logprob: -14.00117301940918
    5. '(split' → logprob: -16.87617301940918
    6. 'spl' → logprob: -16.87617301940918
    7. 'read' → logprob: -17.50117301940918
    8. 's' → logprob: -20.37617301940918
    9. ' strip' → logprob: -20.50117301940918
    10. '```' → logprob: -21.12617301940918

Token 40: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.4018907845020294
    2. '())' → logprob: -1.151890754699707
    3. '()' → logprob: -4.401890754699707
    4. '(' → logprob: -6.151890754699707
    5. '('' → logprob: -8.276890754699707
    6. ')]' → logprob: -8.526890754699707
    7. ')' → logprob: -10.776890754699707
    8. ']' → logprob: -11.651890754699707
    9. '()))' → logprob: -11.776890754699707
    10. ' ())' → logprob: -11.901890754699707

Token 41: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014521090313792229
    2. ')' → logprob: -4.26452112197876
    3. ']' → logprob: -8.014520645141602
    4. ')])' → logprob: -11.264520645141602
    5. '()]' → logprob: -12.389520645141602
    6. '])' → logprob: -12.639520645141602
    7. ' )' → logprob: -13.639520645141602
    8. '())' → logprob: -13.764520645141602
    9. '))' → logprob: -14.014520645141602
    10. '()' → logprob: -14.264520645141602

Token 42: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.183819055557251
    2. '<|end|>' → logprob: -1.808819055557251
    3. '\' → logprob: -1.933819055557251
    4. '#' → logprob: -2.058819055557251
    5. '
' → logprob: -2.183819055557251
    6. 'a' → logprob: -3.558819055557251
    7. ')' → logprob: -3.808819055557251
    8. '```' → logprob: -4.058818817138672
    9. '<|end|>' → logprob: -4.058818817138672
    10. 's' → logprob: -4.933818817138672

Token 43: ' ok' (ID: 4763)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4928286075592041
    2. 'A' → logprob: -1.867828607559204
    3. 'a' → logprob: -2.492828607559204
    4. 'numbers' → logprob: -3.492828607559204
    5. 'array' → logprob: -3.617828607559204
    6. 'lst' → logprob: -3.867828607559204
    7. 'values' → logprob: -3.992828607559204
    8. 'data' → logprob: -4.492828369140625
    9. ' A' → logprob: -4.617828369140625
    10. ' arr' → logprob: -4.617828369140625

Token 44: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8903245329856873
    2. '<|end|>' → logprob: -2.140324592590332
    3. '
' → logprob: -2.265324592590332
    4. 's' → logprob: -2.765324592590332
    5. ' ' → logprob: -2.765324592590332
    6. 'a' → logprob: -3.390324592590332
    7. ')' → logprob: -3.390324592590332
    8. 'data' → logprob: -3.640324592590332
    9. 'n' → logprob: -3.765324592590332
    10. '<|end|>' → logprob: -4.015324592590332

Token 45: ' là' (ID: 8052)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5595166683197021
    2. 'arr' → logprob: -1.4345166683197021
    3. ' arr' → logprob: -3.559516668319702
    4. ' a' → logprob: -3.559516668319702
    5. 'numbers' → logprob: -3.684516668319702
    6. 'values' → logprob: -4.184516906738281
    7. 'array' → logprob: -4.559516906738281
    8. ' A' → logprob: -4.809516906738281
    9. ' numbers' → logprob: -4.934516906738281
    10. 'A' → logprob: -5.059516906738281

Token 46: ' je' (ID: 1264)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1082233116030693
    2. ' ' → logprob: -3.3582231998443604
    3. ' on' → logprob: -3.4832231998443604
    4. ' je' → logprob: -5.1082234382629395
    5. ' ,' → logprob: -5.4832234382629395
    6. 'c' → logprob: -5.7332234382629395
    7. '.' → logprob: -6.1082234382629395
    8. 'on' → logprob: -6.2332234382629395
    9. 't' → logprob: -6.3582234382629395
    10. 'for' → logprob: -6.3582234382629395

Token 47: ' veux' (ID: 55673)
  Prédit: 'veux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'veux' → logprob: -1.4905743598937988
    2. 'compr' → logprob: -1.4905743598937988
    3. 'vais' → logprob: -1.6155743598937988
    4. 's' → logprob: -2.240574359893799
    5. 'pe' → logprob: -2.865574359893799
    6. 'p' → logprob: -3.365574359893799
    7. 'f' → logprob: -3.490574359893799
    8. 'n' → logprob: -4.365574359893799
    9. 'ne' → logprob: -4.365574359893799
    10. 'vo' → logprob: -4.490574359893799

Token 48: ' tous' (ID: 10688)
  Prédit: 'just'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'just' → logprob: -1.739603877067566
    2. 'comp' → logprob: -2.8646039962768555
    3. 'count' → logprob: -2.9896039962768555
    4. ' compter' → logprob: -2.9896039962768555
    5. 'mettre' → logprob: -2.9896039962768555
    6. 't' → logprob: -3.1146039962768555
    7. 'faire' → logprob: -3.3646039962768555
    8. 'con' → logprob: -3.4896039962768555
    9. ' juste' → logprob: -3.4896039962768555
    10. ' ' → logprob: -3.6146039962768555

Token 49: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.4049057364463806
    2. '_' → logprob: -1.9049057960510254
    3. '<|end|>' → logprob: -3.1549057960510254
    4. ' les' → logprob: -3.6549057960510254
    5. 'le' → logprob: -4.154905796051025
    6. 's' → logprob: -4.279905796051025
    7. ',' → logprob: -4.279905796051025
    8. '.' → logprob: -4.654905796051025
    9. 'des' → logprob: -5.029905796051025
    10. ':' → logprob: -5.904905796051025

Token 50: ' rest' (ID: 2867)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.8091414570808411
    2. ' nombres' → logprob: -0.9341414570808411
    3. 'n' → logprob: -3.3091413974761963
    4. 'val' → logprob: -3.9341413974761963
    5. 'nombre' → logprob: -4.059141635894775
    6. 'm' → logprob: -4.809141635894775
    7. ' éléments' → logprob: -4.809141635894775
    8. 'ent' → logprob: -4.934141635894775
    9. 'elements' → logprob: -5.309141635894775
    10. 'd' → logprob: -5.559141635894775

Token 51: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0009651767322793603
    2. 'e' → logprob: -7.000965118408203
    3. 's' → logprob: -10.875965118408203
    4. 'ants' → logprob: -11.250965118408203
    5. '```' → logprob: -11.625965118408203
    6. 'ant' → logprob: -12.875965118408203
    7. 'a' → logprob: -13.875965118408203
    8. '#' → logprob: -13.875965118408203
    9. 'eux' → logprob: -14.188465118408203
    10. 'е' → logprob: -14.500965118408203

Token 52: ' possibles' (ID: 97753)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0715947300195694
    2. ' ' → logprob: -3.571594715118408
    3. 's' → logprob: -4.571594715118408
    4. '(' → logprob: -4.821594715118408
    5. '=' → logprob: -5.196594715118408
    6. 'mod' → logprob: -5.446594715118408
    7. ',' → logprob: -5.946594715118408
    8. ' %' → logprob: -5.946594715118408
    9. '_' → logprob: -6.696594715118408
    10. '[' → logprob: -6.696594715118408

Token 53: ' sur' (ID: 1512)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3252629041671753
    2. ':' → logprob: -2.200263023376465
    3. ',' → logprob: -2.825263023376465
    4. '%' → logprob: -3.325263023376465
    5. 's' → logprob: -4.200263023376465
    6. 'mod' → logprob: -4.700263023376465
    7. 'rest' → logprob: -4.950263023376465
    8. '=' → logprob: -5.700263023376465
    9. ' =' → logprob: -5.700263023376465
    10. '(' → logprob: -5.700263023376465

Token 54: ' ' (ID: 220)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.3254871070384979
    2. 'K' → logprob: -2.0754871368408203
    3. 'div' → logprob: -3.4504871368408203
    4. 'la' → logprob: -3.5754871368408203
    5. 'les' → logprob: -3.8254871368408203
    6. ' la' → logprob: -4.57548713684082
    7. 'l' → logprob: -4.70048713684082
    8. ' N' → logprob: -4.82548713684082
    9. ' les' → logprob: -5.07548713684082
    10. 'N' → logprob: -5.07548713684082

Token 55: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.018931744620203972
    2. 'N' → logprob: -4.893931865692139
    3. ' K' → logprob: -4.893931865692139
    4. 'div' → logprob: -6.768931865692139
    5. 'la' → logprob: -7.643931865692139
    6. 'l' → logprob: -7.768931865692139
    7. 'range' → logprob: -8.01893138885498
    8. '100' → logprob: -8.01893138885498
    9. 'le' → logprob: -8.39393138885498
    10. 'mod' → logprob: -8.89393138885498

Token 56: '..' (ID: 485)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.8671039938926697
    2. '0' → logprob: -1.7421040534973145
    3. ',' → logprob: -2.4921040534973145
    4. ' ' → logprob: -2.6171040534973145
    5. ' space' → logprob: -3.3671040534973145
    6. ' ,' → logprob: -3.4921040534973145
    7. ' K' → logprob: -3.4921040534973145
    8. ' (' → logprob: -4.2421040534973145
    9. ' `' → logprob: -4.4921040534973145
    10. ' N' → logprob: -4.7421040534973145

Token 57: 'N' (ID: 45)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.48590654134750366
    2. 'K' → logprob: -0.9859065413475037
    3. 'N' → logprob: -5.360906600952148
    4. ' N' → logprob: -5.485906600952148
    5. ' range' → logprob: -6.985906600952148
    6. ' ' → logprob: -7.235906600952148
    7. ' (' → logprob: -7.610906600952148
    8. 'range' → logprob: -7.985906600952148
    9. '(' → logprob: -9.235906600952148
    10. '100' → logprob: -9.610906600952148

Token 58: '
' (ID: 198)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.7444052696228027
    2. 'for' → logprob: -2.4944052696228027
    3. '#' → logprob: -2.8694052696228027
    4. ',' → logprob: -2.9944052696228027
    5. 'r' → logprob: -3.1194052696228027
    6. 'range' → logprob: -3.2444052696228027
    7. ':' → logprob: -3.3694052696228027
    8. 's' → logprob: -3.4944052696228027
    9. ' ' → logprob: -3.4944052696228027
    10. '=' → logprob: -3.7444052696228027

Token 59: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.7791198492050171
    2. 're' → logprob: -1.654119849205017
    3. 'rema' → logprob: -2.1541199684143066
    4. 'r' → logprob: -2.7791199684143066
    5. 'rests' → logprob: -2.7791199684143066
    6. 's' → logprob: -3.6541199684143066
    7. 'res' → logprob: -4.654119968414307
    8. ':' → logprob: -4.904119968414307
    9. ',' → logprob: -5.029119968414307
    10. '#' → logprob: -5.154119968414307

Token 60: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5242299437522888
    2. 's' → logprob: -0.8992299437522888
    3. 'a' → logprob: -7.399230003356934
    4. ' =' → logprob: -8.649230003356934
    5. '=' → logprob: -8.774230003356934
    6. 'e' → logprob: -9.774230003356934
    7. '_' → logprob: -10.024230003356934
    8. '_s' → logprob: -11.274230003356934
    9. 'as' → logprob: -11.649230003356934
    10. '_counts' → logprob: -12.149230003356934

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44936060905456543
    2. '=' → logprob: -1.1993606090545654
    3. '_' → logprob: -3.1993606090545654
    4. 's' → logprob: -3.9493606090545654
    5. ' ' → logprob: -8.449360847473145
    6. ',' → logprob: -9.199360847473145
    7. '_counts' → logprob: -9.949360847473145
    8. '_=' → logprob: -10.699360847473145
    9. 'es' → logprob: -10.824360847473145
    10. '_space' → logprob: -10.949360847473145

Token 62: ' np' (ID: 5374)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1901848316192627
    2. '[i' → logprob: -1.4401848316192627
    3. '[np' → logprob: -1.8151848316192627
    4. ' [' → logprob: -2.1901848316192627
    5. 'np' → logprob: -2.6901848316192627
    6. '[N' → logprob: -3.1901848316192627
    7. '[n' → logprob: -4.190184593200684
    8. '[(' → logprob: -4.315184593200684
    9. ' np' → logprob: -4.565184593200684
    10. '[x' → logprob: -4.815184593200684

Token 63: '.array' (ID: 14557)
  Prédit: '.arange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -0.030444180592894554
    2. '.' → logprob: -3.6554441452026367
    3. '.linspace' → logprob: -6.530444145202637
    4. '.zeros' → logprob: -7.405444145202637
    5. '.re' → logprob: -7.530444145202637
    6. '.array' → logprob: -7.780444145202637
    7. 'ar' → logprob: -8.030444145202637
    8. '.mod' → logprob: -8.155444145202637
    9. '.ndarray' → logprob: -9.155444145202637
    10. '.%' → logprob: -9.155444145202637

Token 64: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.5104023814201355
    2. '([' → logprob: -1.1354024410247803
    3. '(np' → logprob: -3.1354024410247803
    4. '(' → logprob: -3.6354024410247803
    5. '([(' → logprob: -5.635402202606201
    6. '([]' → logprob: -6.010402202606201
    7. '((' → logprob: -6.635402202606201
    8. '(list' → logprob: -6.885402202606201
    9. '(([' → logprob: -9.63540267944336
    10. '[(' → logprob: -10.26040267944336

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.448370838072151e-05
    2. '1' → logprob: -9.750094413757324
    3. '(N' → logprob: -10.250094413757324
    4. '(
' → logprob: -14.625094413757324
    5. ' (' → logprob: -16.00009536743164
    6. ')' → logprob: -16.50009536743164
    7. '(n' → logprob: -17.12509536743164
    8. '```' → logprob: -17.62509536743164
    9. 'N' → logprob: -18.50009536743164
    10. ',' → logprob: -18.87509536743164

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01893513649702072
    2. '(' → logprob: -4.393935203552246
    3. 'N' → logprob: -5.143935203552246
    4. ' ' → logprob: -8.143935203552246
    5. '(N' → logprob: -9.018935203552246
    6. ' N' → logprob: -9.393935203552246
    7. '2' → logprob: -10.768935203552246
    8. ')' → logprob: -11.143935203552246
    9. 'K' → logprob: -11.456435203552246
    10. ' (' → logprob: -12.143935203552246

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004551996476948261
    2. ',N' → logprob: -5.629551887512207
    3. ' ,' → logprob: -7.004551887512207
    4. ',K' → logprob: -10.879551887512207
    5. ',n' → logprob: -11.254551887512207
    6. '1' → logprob: -12.254551887512207
    7. '+' → logprob: -13.004551887512207
    8. ',
' → logprob: -13.254551887512207
    9. 'N' → logprob: -14.129551887512207
    10. ',

' → logprob: -14.629551887512207

Token 68: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06197451800107956
    2. ' N' → logprob: -2.81197452545166
    3. 'K' → logprob: -12.18697452545166
    4. ' ' → logprob: -14.06197452545166
    5. ' K' → logprob: -14.93697452545166
    6. '	N' → logprob: -15.56197452545166
    7. ')' → logprob: -16.186973571777344
    8. 'n' → logprob: -16.561973571777344
    9. '1' → logprob: -17.561973571777344
    10. '    ' → logprob: -17.686973571777344

Token 69: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011073877103626728
    2. ' +' → logprob: -4.511074066162109
    3. '))' → logprob: -10.76107406616211
    4. ')' → logprob: -13.88607406616211
    5. '+
' → logprob: -14.01107406616211
    6. ' ' → logprob: -14.38607406616211
    7. ')))' → logprob: -14.88607406616211
    8. ',' → logprob: -15.01107406616211
    9. '),' → logprob: -15.01107406616211
    10. ' ))' → logprob: -15.13607406616211

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008067715098150074
    2. ' ' → logprob: -7.12580680847168
    3. ')' → logprob: -13.75080680847168
    4. '2' → logprob: -14.50080680847168
    5. '```' → logprob: -15.87580680847168
    6. '  ' → logprob: -16.00080680847168
    7. '))' → logprob: -16.68830680847168
    8. '   ' → logprob: -16.87580680847168
    9. ',' → logprob: -16.93830680847168
    10. ' )' → logprob: -17.06330680847168

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. ')' → logprob: -16.500085830688477
    4. '2' → logprob: -16.750085830688477
    5. '))' → logprob: -16.875085830688477
    6. '```' → logprob: -16.875085830688477
    7. '  ' → logprob: -17.937585830688477
    8. '   ' → logprob: -18.312585830688477
    9. '),' → logprob: -18.375085830688477
    10. '+' → logprob: -19.000085830688477

Token 72: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0416799858212471
    2. ')' → logprob: -3.291680097579956
    3. '),' → logprob: -6.166679859161377
    4. '%' → logprob: -7.416679859161377
    5. ' ))' → logprob: -7.666679859161377
    6. ')))' → logprob: -8.541680335998535
    7. ')%' → logprob: -8.666680335998535
    8. ' )' → logprob: -10.416680335998535
    9. ' %' → logprob: -11.291680335998535
    10. ')),' → logprob: -11.541680335998535

Token 73: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.18680253624916077
    2. '%' → logprob: -1.8118025064468384
    3. ')' → logprob: -5.061802387237549
    4. ',' → logprob: -8.936802864074707
    5. ' %
' → logprob: -9.061802864074707
    6. ' ' → logprob: -9.061802864074707
    7. ')%' → logprob: -9.436802864074707
    8. ' ' → logprob: -10.061802864074707
    9. ' )' → logprob: -10.311802864074707
    10. ' %)' → logprob: -10.311802864074707

Token 74: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00017183588352054358
    2. ' K' → logprob: -8.750171661376953
    3. '<|end|>' → logprob: -12.375171661376953
    4. ' ' → logprob: -12.625171661376953
    5. '>K' → logprob: -13.375171661376953
    6. '	K' → logprob: -14.125171661376953
    7. '(' → logprob: -14.250171661376953
    8. '7' → logprob: -15.125171661376953
    9. '  ' → logprob: -15.250171661376953
    10. '>' → logprob: -15.625171661376953

Token 75: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10333698987960815
    2. '\n' → logprob: -3.353337049484253
    3. '[' → logprob: -4.478336811065674
    4. '#' → logprob: -4.728336811065674
    5. '<|end|>' → logprob: -4.978336811065674
    6. '.' → logprob: -5.228336811065674
    7. ')' → logprob: -5.228336811065674
    8. '  
' → logprob: -5.603336811065674
    9. ' ' → logprob: -5.853336811065674
    10. ' 
' → logprob: -5.853336811065674

Token 76: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5928746461868286
    2. ')' → logprob: -1.8428746461868286
    3. 'rest' → logprob: -1.9678746461868286
    4. '#' → logprob: -3.217874526977539
    5. '\n' → logprob: -3.592874526977539
    6. ' ' → logprob: -4.467874526977539
    7. '' → logprob: -4.592874526977539
    8. '.' → logprob: -4.717874526977539
    9. '
' → logprob: -4.842874526977539
    10. '[' → logprob: -4.967874526977539

Token 77: ' Je' (ID: 4678)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.46667543053627014
    2. 'counter' → logprob: -1.7166754007339478
    3. 'rest' → logprob: -2.4666755199432373
    4. 'count' → logprob: -3.2166755199432373
    5. 'c' → logprob: -3.8416755199432373
    6. 'cnt' → logprob: -4.716675281524658
    7. 'freq' → logprob: -4.716675281524658
    8. 'values' → logprob: -5.216675281524658
    9. 'Counter' → logprob: -5.466675281524658
    10. '#' → logprob: -5.466675281524658

Token 78: ' compte' (ID: 19657)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08370614051818848
    2. ' ' → logprob: -2.9587061405181885
    3. 's' → logprob: -4.208705902099609
    4. ',' → logprob: -5.833705902099609
    5. ' =' → logprob: -5.958705902099609
    6. '=' → logprob: -6.708705902099609
    7. '[' → logprob: -6.833705902099609
    8. '_' → logprob: -7.333705902099609
    9. ' .' → logprob: -7.833705902099609
    10. 'u' → logprob: -7.833705902099609

Token 79: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.180841326713562
    2. ' =' → logprob: -1.305841326713562
    3. ' les' → logprob: -1.555841326713562
    4. 'rest' → logprob: -2.5558414459228516
    5. ' rest' → logprob: -2.9308414459228516
    6. 's' → logprob: -3.5558414459228516
    7. '=' → logprob: -3.9308414459228516
    8. ' la' → logprob: -4.805841445922852
    9. ' le' → logprob: -5.430841445922852
    10. 'le' → logprob: -5.680841445922852

Token 80: ' occurrences' (ID: 108073)
  Prédit: ' occurrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occurrences' → logprob: -0.6401965618133545
    2. ' rest' → logprob: -1.7651965618133545
    3. ' fré' → logprob: -2.2651965618133545
    4. ' frequencies' → logprob: -2.5151965618133545
    5. 'rest' → logprob: -3.6401965618133545
    6. '<|end|>' → logprob: -3.6401965618133545
    7. ' nombres' → logprob: -4.140196800231934
    8. ' valeurs' → logprob: -4.515196800231934
    9. 'occ' → logprob: -4.890196800231934
    10. 'fre' → logprob: -5.265196800231934

Token 81: ' de' (ID: 334)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.49596476554870605
    2. ')' → logprob: -2.245964765548706
    3. ',' → logprob: -2.870964765548706
    4. ':' → logprob: -3.370964765548706
    5. 'counts' → logprob: -3.370964765548706
    6. '(rest' → logprob: -3.495964765548706
    7. 'counter' → logprob: -3.620964765548706
    8. '(' → logprob: -3.870964765548706
    9. 's' → logprob: -3.995964765548706
    10. '.' → logprob: -4.245965003967285

Token 82: ' chaque' (ID: 21194)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.12781265377998352
    2. ' rest' → logprob: -2.127812623977661
    3. 'each' → logprob: -8.377812385559082
    4. '(rest' → logprob: -8.377812385559082
    5. ' chaque' → logprob: -9.002812385559082
    6. ' each' → logprob: -9.002812385559082
    7. 'reste' → logprob: -9.377812385559082
    8. 'list' → logprob: -10.002812385559082
    9. ' chacune' → logprob: -11.502812385559082
    10. 'rests' → logprob: -11.877812385559082

Token 83: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.06540282070636749
    2. 'rest' → logprob: -2.9404027462005615
    3. 'val' → logprob: -5.315402984619141
    4. ' reste' → logprob: -5.440402984619141
    5. ' valeur' → logprob: -8.31540298461914
    6. 'value' → logprob: -8.56540298461914
    7. '```' → logprob: -8.69040298461914
    8. ' rest' → logprob: -9.31540298461914
    9. 'élé' → logprob: -9.44040298461914
    10. 're' → logprob: -9.94040298461914

Token 84: ',' (ID: 11)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.5275735855102539
    2. 'c' → logprob: -1.902573585510254
    3. 'rest' → logprob: -2.527573585510254
    4. 'counter' → logprob: -2.902573585510254
    5. ')' → logprob: -2.902573585510254
    6. 'count' → logprob: -3.527573585510254
    7. 'occ' → logprob: -4.027573585510254
    8. ',' → logprob: -5.152573585510254
    9. 'occur' → logprob: -5.402573585510254
    10. 's' → logprob: -6.152573585510254

Token 85: ' ça' (ID: 13590)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.3720737099647522
    2. ' counts' → logprob: -2.6220736503601074
    3. ' c' → logprob: -2.7470736503601074
    4. 'c' → logprob: -2.7470736503601074
    5. 'count' → logprob: -3.6220736503601074
    6. 'counter' → logprob: -3.6220736503601074
    7. 'rest' → logprob: -3.8720736503601074
    8. ' counter' → logprob: -5.247073650360107
    9. 'occ' → logprob: -5.372073650360107
    10. ' ' → logprob: -5.622073650360107

Token 86: ' ira' (ID: 51468)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.5809028148651123
    2. 'counts' → logprob: -2.2059028148651123
    3. 'count' → logprob: -2.7059028148651123
    4. 's' → logprob: -3.0809028148651123
    5. 'va' → logprob: -3.7059028148651123
    6. ' =' → logprob: -3.8309028148651123
    7. '=' → logprob: -3.9559028148651123
    8. 'c' → logprob: -4.080903053283691
    9. 'don' → logprob: -4.205903053283691
    10. 'counter' → logprob: -4.455903053283691

Token 87: ' plus' (ID: 2932)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.32797345519065857
    2. 'count' → logprob: -2.2029733657836914
    3. 'counter' → logprob: -2.3279733657836914
    4. 'rest' → logprob: -3.0779733657836914
    5. 'occ' → logprob: -4.577973365783691
    6. 'c' → logprob: -5.827973365783691
    7. 'cnt' → logprob: -5.827973365783691
    8. 'comp' → logprob: -5.952973365783691
    9. 'freq' → logprob: -6.077973365783691
    10. ')' → logprob: -6.827973365783691

Token 88: ' vite' (ID: 38682)
  Prédit: 'vite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vite' → logprob: -0.4084799289703369
    2. 'loin' → logprob: -1.283479928970337
    3. 'fac' → logprob: -3.408479928970337
    4. 'fin' → logprob: -5.408479690551758
    5. 'v' → logprob: -5.408479690551758
    6. 't' → logprob: -5.783479690551758
    7. 'simple' → logprob: -6.283479690551758
    8. 'bien' → logprob: -6.783479690551758
    9. 'fine' → logprob: -6.783479690551758
    10. 's' → logprob: -6.908479690551758

Token 89: ' après' (ID: 16460)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.7530609965324402
    2. 'c' → logprob: -1.128061056137085
    3. 'rest' → logprob: -2.753061056137085
    4. 'counter' → logprob: -2.878061056137085
    5. 'count' → logprob: -3.253061056137085
    6. 'occ' → logprob: -4.003060817718506
    7. 's' → logprob: -4.878060817718506
    8. ')' → logprob: -5.003060817718506
    9. 'occur' → logprob: -6.003060817718506
    10. ',' → logprob: -6.378060817718506

Token 90: '
' (ID: 198)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.16481103003025055
    2. 'counter' → logprob: -2.664811134338379
    3. 'count' → logprob: -3.164811134338379
    4. 'c' → logprob: -4.039811134338379
    5. 'comp' → logprob: -4.539811134338379
    6. 'occ' → logprob: -5.164811134338379
    7. 'cnt' → logprob: -6.164811134338379
    8. 'com' → logprob: -6.289811134338379
    9. 'rest' → logprob: -7.039811134338379
    10. 'freq' → logprob: -7.164811134338379

Token 91: 'stats' (ID: 36908)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.2328769564628601
    2. 'count' → logprob: -2.857877016067505
    3. 'counter' → logprob: -2.857877016067505
    4. 'c' → logprob: -3.607877016067505
    5. 'comp' → logprob: -3.732877016067505
    6. 'occ' → logprob: -4.107876777648926
    7. 'rest' → logprob: -5.107876777648926
    8. 'com' → logprob: -5.232876777648926
    9. 'cnt' → logprob: -5.357876777648926
    10. 'freq' → logprob: -5.482876777648926

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06997744739055634
    2. '=' → logprob: -2.6949775218963623
    3. '_' → logprob: -10.694977760314941
    4. '.' → logprob: -11.694977760314941
    5. 's' → logprob: -12.444977760314941
    6. ' ' → logprob: -13.694977760314941
    7. '  ' → logprob: -13.944977760314941
    8. '_=' → logprob: -13.944977760314941
    9. ',' → logprob: -14.069977760314941
    10. 'es' → logprob: -14.569977760314941

Token 93: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.22545704245567322
    2. ' Counter' → logprob: -1.6004570722579956
    3. 'np' → logprob: -10.725457191467285
    4. '.Counter' → logprob: -12.475457191467285
    5. ' ' → logprob: -12.600457191467285
    6. 'C' → logprob: -12.600457191467285
    7. ' np' → logprob: -12.850457191467285
    8. 'Counters' → logprob: -13.100457191467285
    9. ' counter' → logprob: -13.475457191467285
    10. 'counter' → logprob: -14.162957191467285

Token 94: '(rest' (ID: 117922)
  Prédit: '(rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.005946571473032236
    2. '(' → logprob: -5.130946636199951
    3. ' (' → logprob: -11.630946159362793
    4. '(re' → logprob: -12.755946159362793
    5. '(Rest' → logprob: -13.130946159362793
    6. '(res' → logprob: -13.255946159362793
    7. '(list' → logprob: -14.505946159362793
    8. '(
' → logprob: -14.630946159362793
    9. 'rest' → logprob: -14.755946159362793
    10. '(rem' → logprob: -15.255946159362793

Token 95: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.000433291686931625
    2. 'est' → logprob: -7.750433444976807
    3. 'estes' → logprob: -13.250432968139648
    4. 'etes' → logprob: -14.625432968139648
    5. 'tes' → logprob: -15.500432968139648
    6. 'e' → logprob: -16.62543296813965
    7. 'rest' → logprob: -17.50043296813965
    8. 'et' → logprob: -17.75043296813965
    9. 'ests' → logprob: -17.87543296813965
    10. '(rest' → logprob: -18.50043296813965

Token 96: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ' )' → logprob: -11.750011444091797
    3. '))' → logprob: -13.000011444091797
    4. ').' → logprob: -14.625011444091797
    5. ')`' → logprob: -15.625011444091797
    6. '())' → logprob: -16.375011444091797
    7. '.values' → logprob: -16.875011444091797
    8. '()' → logprob: -17.375011444091797
    9. ')
' → logprob: -17.500011444091797
    10. '）' → logprob: -17.750011444091797

Token 97: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.5218408107757568
    2. 'for' → logprob: -1.6468408107757568
    3. '#' → logprob: -2.021840810775757
    4. 'rest' → logprob: -2.396840810775757
    5. 'result' → logprob: -2.521840810775757
    6. ')' → logprob: -2.646840810775757
    7. '\n' → logprob: -3.271840810775757
    8. '
' → logprob: -3.646840810775757
    9. 'print' → logprob: -4.146841049194336
    10. 's' → logprob: -4.146841049194336

Token 98: ' c' (ID: 274)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5604643821716309
    2. 'answer' → logprob: -2.435464382171631
    3. 'res' → logprob: -2.560464382171631
    4. 'pairs' → logprob: -2.935464382171631
    5. 'total' → logprob: -3.060464382171631
    6. 'max' → logprob: -3.685464382171631
    7. 'for' → logprob: -3.685464382171631
    8. 'ans' → logprob: -3.935464382171631
    9. 'count' → logprob: -4.060464382171631
    10. 's' → logprob: -4.435464382171631

Token 99: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2189334630966187
    2. 'for' → logprob: -1.3439334630966187
    3. 'ount' → logprob: -1.9689334630966187
    4. 'omb' → logprob: -2.093933582305908
    5. 'om' → logprob: -2.593933582305908
    6. 'on' → logprob: -3.843933582305908
    7. 'omp' → logprob: -4.343933582305908
    8. 'ont' → logprob: -4.468933582305908
    9. 'omm' → logprob: -5.093933582305908
    10. 'ounter' → logprob: -5.593933582305908

Token 100: ' cette' (ID: 7696)
  Prédit: ' quoi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' quoi' → logprob: -0.9899099469184875
    2. 'tout' → logprob: -1.8649098873138428
    3. 'à' → logprob: -2.9899098873138428
    4. ' ici' → logprob: -2.9899098873138428
    5. 'l' → logprob: -3.2399098873138428
    6. ' le' → logprob: -3.6149098873138428
    7. ' un' → logprob: -3.8649098873138428
    8. ' la' → logprob: -3.9899098873138428
    9. 'quoi' → logprob: -3.9899098873138428
    10. ' ' → logprob: -3.9899098873138428

Token 101: ' formule' (ID: 84316)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.7176759243011475
    2. 'ligne' → logprob: -1.7176759243011475
    3. 'part' → logprob: -2.8426759243011475
    4. 'stats' → logprob: -2.9676759243011475
    5. 's' → logprob: -3.4676759243011475
    6. '#' → logprob: -3.8426759243011475
    7. ' phrase' → logprob: -3.9676759243011475
    8. ' partie' → logprob: -4.342676162719727
    9. '.' → logprob: -4.342676162719727
    10. 'counter' → logprob: -4.467676162719727

Token 102: ' bizarre' (ID: 61150)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40560922026634216
    2. ' :' → logprob: -2.280609130859375
    3. '<|end|>' → logprob: -2.780609130859375
    4. '(' → logprob: -3.155609130859375
    5. ')' → logprob: -3.405609130859375
    6. 'for' → logprob: -3.905609130859375
    7. ',' → logprob: -4.655609130859375
    8. ' for' → logprob: -4.905609130859375
    9. 'stats' → logprob: -5.280609130859375
    10. '<|end|>' → logprob: -5.530609130859375

Token 103: '...' (ID: 1008)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.6509528160095215
    2. ':' → logprob: -1.7759528160095215
    3. 'res' → logprob: -1.9009528160095215
    4. 'total' → logprob: -2.0259528160095215
    5. 'ans' → logprob: -2.0259528160095215
    6. 'for' → logprob: -2.4009528160095215
    7. 'answer' → logprob: -3.6509528160095215
    8. 's' → logprob: -4.2759528160095215
    9. 'def' → logprob: -4.5259528160095215
    10. 'count' → logprob: -4.9009528160095215

Token 104: ' enfin' (ID: 50642)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2287232875823975
    2. 'ans' → logprob: -2.1037232875823975
    3. 'total' → logprob: -2.2287232875823975
    4. '(' → logprob: -2.2287232875823975
    5. 'answer' → logprob: -2.6037232875823975
    6. 'for' → logprob: -2.8537232875823975
    7. 'res' → logprob: -3.2287232875823975
    8. 'count' → logprob: -3.3537232875823975
    9. 'sum' → logprob: -4.228723526000977
    10. ')' → logprob: -4.353723526000977

Token 105: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.6104503870010376
    2. 'result' → logprob: -1.6104503870010376
    3. 'res' → logprob: -1.9854503870010376
    4. 'answer' → logprob: -2.110450267791748
    5. ' ans' → logprob: -2.360450267791748
    6. 'total' → logprob: -2.485450267791748
    7. 'for' → logprob: -3.735450267791748
    8. 'count' → logprob: -3.860450267791748
    9. ' result' → logprob: -4.110450267791748
    10. ' res' → logprob: -4.110450267791748

Token 106: ' j' (ID: 441)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9845986366271973
    2. 'res' → logprob: -1.6095986366271973
    3. 'ans' → logprob: -1.9845986366271973
    4. 'total' → logprob: -2.2345986366271973
    5. 'answer' → logprob: -2.6095986366271973
    6. 'count' → logprob: -3.9845986366271973
    7. 'c' → logprob: -3.9845986366271973
    8. 'pairs' → logprob: -4.234598636627197
    9. 'def' → logprob: -4.484598636627197
    10. 's' → logprob: -4.859598636627197

Token 107: ''ai' (ID: 12480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.030016131699085236
    2. 'veux' → logprob: -3.9050161838531494
    3. ''ai' → logprob: -5.78001594543457
    4. ''' → logprob: -6.15501594543457
    5. ''arrive' → logprob: -7.28001594543457
    6. ''aj' → logprob: -7.53001594543457
    7. ''espère' → logprob: -7.78001594543457
    8. ''aimerais' → logprob: -8.03001594543457
    9. 'a' → logprob: -8.28001594543457
    10. ''é' → logprob: -9.28001594543457

Token 108: ' compris' (ID: 49173)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8461124897003174
    2. 'pas' → logprob: -0.8461124897003174
    3. 'l' → logprob: -3.5961124897003174
    4. 'oub' → logprob: -4.096112251281738
    5. 'vu' → logprob: -4.471112251281738
    6. 'dé' → logprob: -4.846112251281738
    7. 'le' → logprob: -4.971112251281738
    8. 'bien' → logprob: -5.346112251281738
    9. 'une' → logprob: -5.596112251281738
    10. 'tout' → logprob: -5.596112251281738

Token 109: ' l' (ID: 305)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.216568946838379
    2. 'ans' → logprob: -1.716568946838379
    3. 'answer' → logprob: -1.716568946838379
    4. 'res' → logprob: -2.341568946838379
    5. 'total' → logprob: -2.466568946838379
    6. 'pairs' → logprob: -2.966568946838379
    7. 'for' → logprob: -3.091568946838379
    8. 'c' → logprob: -4.341568946838379
    9. 'comb' → logprob: -4.841568946838379
    10. 'count' → logprob: -4.966568946838379

Token 110: ''idée' (ID: 131945)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4905126392841339
    2. 'e' → logprob: -0.9905126094818115
    3. ''' → logprob: -4.740512847900391
    4. ''idée' → logprob: -6.615512847900391
    5. ''a' → logprob: -6.740512847900391
    6. 'es' → logprob: -7.115512847900391
    7. ''instant' → logprob: -7.365512847900391
    8. '#' → logprob: -7.615512847900391
    9. ''effet' → logprob: -8.24051284790039
    10. ''ess' → logprob: -8.49051284790039

Token 111: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7506489157676697
    2. 'res' → logprob: -1.8756489753723145
    3. 'answer' → logprob: -1.8756489753723145
    4. 'total' → logprob: -2.6256489753723145
    5. 'ans' → logprob: -2.7506489753723145
    6. 'count' → logprob: -3.7506489753723145
    7. 'pairs' → logprob: -3.8756489753723145
    8. 'c' → logprob: -4.8756489753723145
    9. 'for' → logprob: -5.3756489753723145
    10. 's' → logprob: -5.7506489753723145

Token 112: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9200197458267212
    2. 'answer' → logprob: -1.6700197458267212
    3. 'ans' → logprob: -2.0450196266174316
    4. 'pairs' → logprob: -2.0450196266174316
    5. 'res' → logprob: -2.7950196266174316
    6. 'total' → logprob: -2.9200196266174316
    7. 'count' → logprob: -4.545019626617432
    8. 'for' → logprob: -5.295019626617432
    9. 'c' → logprob: -5.420019626617432
    10. 'pair' → logprob: -6.045019626617432

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06771872192621231
    2. 's' → logprob: -2.817718744277954
    3. '=' → logprob: -5.317718505859375
    4. '_' → logprob: -7.442718505859375
    5. ' ' → logprob: -8.692718505859375
    6. ')' → logprob: -11.067718505859375
    7. ' s' → logprob: -11.192718505859375
    8. '_s' → logprob: -11.317718505859375
    9. ' ' → logprob: -11.817718505859375
    10. '  ' → logprob: -12.317718505859375

Token 114: ' ' (ID: 220)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.46817806363105774
    2. 'sum' → logprob: -1.0931780338287354
    3. '0' → logprob: -3.3431780338287354
    4. ' ' → logprob: -6.2181782722473145
    5. ' K' → logprob: -7.4681782722473145
    6. '1' → logprob: -7.9681782722473145
    7. '(sum' → logprob: -8.718177795410156
    8. ' np' → logprob: -9.343177795410156
    9. 'np' → logprob: -9.468177795410156
    10. 'K' → logprob: -10.093177795410156

Token 115: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.003268618369475007
    2. '0' → logprob: -6.003268718719482
    3. 'np' → logprob: -7.628268718719482
    4. 'K' → logprob: -9.253268241882324
    5. ' sum' → logprob: -9.378268241882324
    6. '(sum' → logprob: -9.878268241882324
    7. '1' → logprob: -10.503268241882324
    8. 'max' → logprob: -11.128268241882324
    9. 'N' → logprob: -11.378268241882324
    10. 'int' → logprob: -12.003268241882324

Token 116: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03731260448694229
    2. '
' → logprob: -3.5373125076293945
    3. ' for' → logprob: -4.9123125076293945
    4. '<|end|>' → logprob: -9.287312507629395
    5. '\n' → logprob: -9.912312507629395
    6. ' ' → logprob: -12.287312507629395
    7. '
' → logprob: -12.287312507629395
    8. '

' → logprob: -12.287312507629395
    9. ' 
' → logprob: -12.412312507629395
    10. ')' → logprob: -12.537312507629395

Token 117: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03859998285770416
    2. ' for' → logprob: -3.663599967956543
    3. '
' → logprob: -4.413599967956543
    4. '<|end|>' → logprob: -10.163599967956543
    5. '\n' → logprob: -10.788599967956543
    6. ' 
' → logprob: -11.288599967956543
    7. ')' → logprob: -11.413599967956543
    8. ' ' → logprob: -11.663599967956543
    9. '+' → logprob: -12.413599967956543
    10. ',' → logprob: -12.788599967956543

Token 118: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.17602738738059998
    2. 'r' → logprob: -2.801027297973633
    3. ' i' → logprob: -4.051027297973633
    4. ' k' → logprob: -4.301027297973633
    5. ' key' → logprob: -4.676027297973633
    6. ' val' → logprob: -4.801027297973633
    7. ' reste' → logprob: -4.801027297973633
    8. ' x' → logprob: -5.176027297973633
    9. ' remainder' → logprob: -5.176027297973633
    10. ' value' → logprob: -5.426027297973633

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06451471149921417
    2. ',' → logprob: -3.064514636993408
    3. 'in' → logprob: -4.189514636993408
    4. ' ' → logprob: -8.314515113830566
    5. ' ,' → logprob: -8.439515113830566
    6. '1' → logprob: -9.439515113830566
    7. 's' → logprob: -10.314515113830566
    8. 'r' → logprob: -11.689515113830566
    9. 'ange' → logprob: -11.689515113830566
    10. 'range' → logprob: -12.064515113830566

Token 120: ' stats' (ID: 19708)
  Prédit: 'stats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stats' → logprob: -0.20890748500823975
    2. 'range' → logprob: -1.7089074850082397
    3. ' stats' → logprob: -5.458907604217529
    4. ' range' → logprob: -5.833907604217529
    5. 'rest' → logprob: -8.458907127380371
    6. 'list' → logprob: -10.208907127380371
    7. 'stat' → logprob: -11.458907127380371
    8. 'sorted' → logprob: -12.333907127380371
    9. '(stats' → logprob: -12.583907127380371
    10. ' ' → logprob: -12.833907127380371

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011772842844948173
    2. '.keys' → logprob: -9.500117301940918
    3. ',' → logprob: -11.375117301940918
    4. ' :' → logprob: -11.625117301940918
    5. '.values' → logprob: -11.625117301940918
    6. '):' → logprob: -12.375117301940918
    7. ':
' → logprob: -12.750117301940918
    8. ':**' → logprob: -13.500117301940918
    9. ',:' → logprob: -14.000117301940918
    10. 'values' → logprob: -14.500117301940918

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21340101957321167
    2. ' ' → logprob: -1.8384010791778564
    3. '    ' → logprob: -3.7134010791778564
    4. '  ' → logprob: -5.588400840759277
    5. '<|end|>' → logprob: -5.963400840759277
    6. ' 
' → logprob: -7.713400840759277
    7. ':' → logprob: -7.838400840759277
    8. '    
' → logprob: -8.213400840759277
    9. '       ' → logprob: -8.338400840759277
    10. 'result' → logprob: -8.713400840759277

Token 123: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.24501490592956543
    2. 'result' → logprob: -2.1200149059295654
    3. '   ' → logprob: -2.7450149059295654
    4. 'c' → logprob: -3.8700149059295654
    5. ' count' → logprob: -5.3700151443481445
    6. 'cnt' → logprob: -5.8700151443481445
    7. 'if' (adapté à ' if') → logprob: -6.3700151443481445
    8. 'counts' → logprob: -7.2450151443481445
    9. 'for' → logprob: -7.6200151443481445
    10. 'freq' → logprob: -7.6200151443481445

Token 124: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18531306087970734
    2. ' r' → logprob: -1.935313105583191
    3. 'stats' → logprob: -3.9353129863739014
    4. ' stats' → logprob: -5.4353132247924805
    5. '(stats' → logprob: -8.81031322479248
    6. '(r' → logprob: -8.81031322479248
    7. ' (' → logprob: -9.06031322479248
    8. 'K' → logprob: -9.18531322479248
    9. '   ' → logprob: -9.18531322479248
    10. 'rest' → logprob: -9.56031322479248

Token 125: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02126033790409565
    2. ' r' → logprob: -5.0212602615356445
    3. 'K' → logprob: -5.3962602615356445
    4. 'stats' → logprob: -5.3962602615356445
    5. '2' → logprob: -5.7712602615356445
    6. '(r' → logprob: -7.1462602615356445
    7. '(K' → logprob: -7.6462602615356445
    8. '(' → logprob: -8.396260261535645
    9. ' (' → logprob: -8.646260261535645
    10. ' stats' → logprob: -8.771260261535645

Token 126: ' +' (ID: 659)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4429457187652588
    2. '!=' → logprob: -2.067945718765259
    3. ' ==' → logprob: -3.067945718765259
    4. '+' → logprob: -3.067945718765259
    5. ')' → logprob: -3.442945718765259
    6. '==' → logprob: -3.692945718765259
    7. ' +' → logprob: -3.817945718765259
    8. '*' → logprob: -4.19294548034668
    9. ' >' → logprob: -4.19294548034668
    10. ' *' → logprob: -4.44294548034668

Token 127: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3486253321170807
    2. '1' → logprob: -1.5986253023147583
    3. '(' → logprob: -3.223625421524048
    4. 'K' → logprob: -3.848625421524048
    5. '(K' → logprob: -4.098625183105469
    6. ' (' → logprob: -5.473625183105469
    7. ' r' → logprob: -5.598625183105469
    8. '0' → logprob: -6.723625183105469
    9. 'stats' → logprob: -6.723625183105469
    10. '(N' → logprob: -6.723625183105469

Token 128: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009867232292890549
    2. ')%' → logprob: -7.250986576080322
    3. ' )' → logprob: -8.62598705291748
    4. ')<' → logprob: -10.00098705291748
    5. ')>=' → logprob: -10.75098705291748
    6. ')<=' → logprob: -12.00098705291748
    7. '+' → logprob: -12.25098705291748
    8. '<' → logprob: -12.50098705291748
    9. ' <' → logprob: -12.50098705291748
    10. '>=' → logprob: -13.00098705291748

Token 129: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10896004736423492
    2. '>=' → logprob: -3.3589601516723633
    3. '<' → logprob: -3.7339601516723633
    4. ' %' → logprob: -4.108960151672363
    5. ' >=' → logprob: -4.108960151672363
    6. '<=' → logprob: -5.608960151672363
    7. ' <' → logprob: -5.983960151672363
    8. ' <=' → logprob: -6.358960151672363
    9. '>' → logprob: -6.483960151672363
    10. '==' → logprob: -7.233960151672363

Token 130: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.001502598519437015
    2. ' K' → logprob: -6.501502513885498
    3. ' ' → logprob: -15.876502990722656
    4. 'k' → logprob: -16.126502990722656
    5. '>K' → logprob: -17.751502990722656
    6. '   ' → logprob: -17.876502990722656
    7. '  ' → logprob: -19.501502990722656
    8. '	K' → logprob: -19.751502990722656
    9. '>' → logprob: -20.376502990722656
    10. '<K' → logprob: -21.876502990722656

Token 131: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011510361917316914
    2. ' ==' → logprob: -4.636510372161865
    3. '!=' → logprob: -6.386510372161865
    4. ' !=' → logprob: -10.511509895324707
    5. ':' → logprob: -11.011509895324707
    6. '=' → logprob: -11.636509895324707
    7. '>' → logprob: -11.886509895324707
    8. ')' → logprob: -12.636509895324707
    9. ' ' → logprob: -13.386509895324707
    10. ')==' → logprob: -13.886509895324707

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.125139236450195
    4. '  ' → logprob: -17.375139236450195
    5. '    ' → logprob: -18.375139236450195
    6. '

' → logprob: -19.250139236450195
    7. '1' → logprob: -19.875139236450195
    8. ' ' → logprob: -19.875139236450195
    9. '     ' → logprob: -20.250139236450195
    10. '```' → logprob: -20.375139236450195

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.000009536743164
    4. '    ' → logprob: -19.500009536743164
    5. '  ' → logprob: -19.500009536743164
    6. '1' → logprob: -20.562509536743164
    7. 'r' → logprob: -20.687509536743164
    8. '۰' → logprob: -21.000009536743164
    9. '     ' → logprob: -21.312509536743164
    10. '

' → logprob: -21.750009536743164

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003588224353734404
    2. ':
' → logprob: -8.000358581542969
    3. '   ' → logprob: -11.625358581542969
    4. '):' → logprob: -12.125358581542969
    5. ' :' → logprob: -12.125358581542969
    6. '       ' → logprob: -13.000358581542969
    7. ',' → logprob: -14.375358581542969
    8. ' and' → logprob: -16.25035858154297
    9. ')' → logprob: -16.37535858154297
    10. '):
' → logprob: -16.50035858154297

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009617198375053704
    2. '   ' → logprob: -7.625961780548096
    3. 'result' → logprob: -8.250961303710938
    4. ' result' → logprob: -8.750961303710938
    5. ',' → logprob: -10.875961303710938
    6. ':' → logprob: -11.750961303710938
    7. '<|end|>' → logprob: -11.875961303710938
    8. '      ' → logprob: -12.500961303710938
    9. '     ' → logprob: -12.500961303710938
    10. ' ' → logprob: -13.375961303710938

Token 136: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26479196548461914
    2. 'result' → logprob: -1.7647919654846191
    3. '       ' → logprob: -3.389791965484619
    4. ' result' → logprob: -3.639791965484619
    5. '
' → logprob: -6.639791965484619
    6. '	result' → logprob: -10.264791488647461
    7. '    
' → logprob: -10.389791488647461
    8. '  ' → logprob: -10.889791488647461
    9. '    ' → logprob: -11.389791488647461
    10. '           ' → logprob: -11.514791488647461

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3522628843784332
    2. '=' → logprob: -1.2272628545761108
    3. 'ount' → logprob: -6.8522629737854
    4. '=result' → logprob: -6.9772629737854
    5. '+=' → logprob: -7.3522629737854
    6. 'ont' → logprob: -7.8522629737854
    7. ' +=' → logprob: -8.727262496948242
    8. 'c' → logprob: -8.852262496948242
    9. 'ounter' → logprob: -8.977262496948242
    10. 'result' → logprob: -9.352262496948242

Token 138: ' stats' (ID: 19708)
  Prédit: 'stats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stats' → logprob: -0.16025236248970032
    2. ' stats' → logprob: -1.910252332687378
    3. '(stats' → logprob: -10.660252571105957
    4. ' ' → logprob: -13.410252571105957
    5. '	stats' → logprob: -13.410252571105957
    6. 'stat' → logprob: -14.535252571105957
    7. '.stats' → logprob: -14.660252571105957
    8. '   ' → logprob: -15.160252571105957
    9. ' (' → logprob: -16.16025161743164
    10. '_stats' → logprob: -16.28525161743164

Token 139: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -9.014684110297821e-06
    2. 'r' → logprob: -11.750008583068848
    3. '[' → logprob: -13.875008583068848
    4. ' [' → logprob: -16.875009536743164
    5. '(r' → logprob: -17.875009536743164
    6. ' r' → logprob: -18.375009536743164
    7. '[
' → logprob: -18.500009536743164
    8. '	r' → logprob: -19.500009536743164
    9. '[c' → logprob: -19.750009536743164
    10. '[i' → logprob: -20.125009536743164

Token 140: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05350463464856148
    2. '       ' → logprob: -3.303504705429077
    3. ']' → logprob: -5.178504467010498
    4. ']
' → logprob: -5.928504467010498
    5. ')
' → logprob: -5.928504467010498
    6. '           ' → logprob: -6.053504467010498
    7. ')' → logprob: -7.553504467010498
    8. '   ' → logprob: -7.678504467010498
    9. '         ' → logprob: -9.053504943847656
    10. ' 
' → logprob: -9.178504943847656

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005703500472009182
    2. '
' → logprob: -5.630703449249268
    3. '   ' → logprob: -6.880703449249268
    4. '<|end|>' → logprob: -7.505703449249268
    5. ')' → logprob: -8.755703926086426
    6. '        
' → logprob: -9.755703926086426
    7. '           ' → logprob: -9.880703926086426
    8. 'result' → logprob: -9.880703926086426
    9. ',' → logprob: -10.005703926086426
    10. '  
' → logprob: -10.255703926086426

Token 142: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0024603179190307856
    2. '       ' → logprob: -6.127460479736328
    3. ' result' → logprob: -8.252460479736328
    4. '   ' → logprob: -12.002460479736328
    5. '           ' → logprob: -12.502460479736328
    6. '
' → logprob: -12.627460479736328
    7. '	result' → logprob: -14.252460479736328
    8. '(result' → logprob: -15.377460479736328
    9. '        
' → logprob: -15.752460479736328
    10. 'if' → logprob: -16.252460479736328

Token 143: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023248042911291122
    2. '+=' → logprob: -3.7732479572296143
    3. '+=(' → logprob: -14.023247718811035
    4. '+' → logprob: -14.273247718811035
    5. ' -=' → logprob: -15.023247718811035
    6. '    ' → logprob: -15.398247718811035
    7. ' ' → logprob: -15.398247718811035
    8. ' ' → logprob: -16.14824867248535
    9. '   ' → logprob: -16.14824867248535
    10. ']+=' → logprob: -16.27324867248535

Token 144: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5071953535079956
    2. 'result' → logprob: -1.1321953535079956
    3. ' c' → logprob: -2.882195472717285
    4. 'c' → logprob: -4.132195472717285
    5. ' (' → logprob: -6.132195472717285
    6. '(result' → logprob: -6.882195472717285
    7. ' max' → logprob: -9.132195472717285
    8. ' ' → logprob: -10.007195472717285
    9. 'max' → logprob: -10.382195472717285
    10. '(c' → logprob: -10.632195472717285

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008620958775281906
    2. ' +' → logprob: -4.758620738983154
    3. ' +=' → logprob: -12.633621215820312
    4. '+=' → logprob: -12.883621215820312
    5. ' plus' → logprob: -16.008621215820312
    6. ' ' → logprob: -16.508621215820312
    7. '+c' → logprob: -16.508621215820312
    8. '<|end|>' → logprob: -16.633621215820312
    9. '+r' → logprob: -16.883621215820312
    10. '+
' → logprob: -17.133621215820312

Token 146: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06533849984407425
    2. 'c' → logprob: -2.815338611602783
    3. ' (' → logprob: -5.940338611602783
    4. '(c' → logprob: -7.315338611602783
    5. '(' → logprob: -9.940338134765625
    6. '   ' → logprob: -11.565338134765625
    7. ' ' → logprob: -12.315338134765625
    8. ' int' → logprob: -13.440338134765625
    9. '```' → logprob: -14.315338134765625
    10. '	c' → logprob: -14.502838134765625

Token 147: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0016839897725731134
    2. ' *' → logprob: -6.501684188842773
    3. '*(' → logprob: -8.626684188842773
    4. ' ' → logprob: -13.251684188842773
    5. '**' → logprob: -15.501684188842773
    6. ' ' → logprob: -16.001684188842773
    7. '*c' → logprob: -16.626684188842773
    8. '#' → logprob: -17.126684188842773
    9. '  ' → logprob: -17.751684188842773
    10. '-' → logprob: -17.876684188842773

Token 148: ' c' (ID: 274)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0006753815687261522
    2. ' (' → logprob: -7.375675201416016
    3. '(' → logprob: -10.000675201416016
    4. '(
' → logprob: -14.000675201416016
    5. '   ' → logprob: -14.125675201416016
    6. '(result' → logprob: -14.750675201416016
    7. ' ' → logprob: -15.375675201416016
    8. '  ' → logprob: -15.875675201416016
    9. '(C' → logprob: -15.875675201416016
    10. '(n' → logprob: -16.375675201416016

Token 149: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4018198847770691
    2. 'else' → logprob: -1.4018199443817139
    3. ' else' → logprob: -3.526819944381714
    4. '
' → logprob: -3.776819944381714
    5. '<|end|>' → logprob: -4.276819705963135
    6. 'elif' → logprob: -5.151819705963135
    7. ' ' → logprob: -5.401819705963135
    8. '+' → logprob: -6.401819705963135
    9. '    
' → logprob: -6.776819705963135
    10. '<|end|>' → logprob: -6.776819705963135

Token 150: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.33688369393348694
    2. '1' → logprob: -2.336883783340454
    3. '0' → logprob: -2.586883783340454
    4. '2' → logprob: -2.836883783340454
    5. ' c' → logprob: -4.211883544921875
    6. ' ' → logprob: -4.336883544921875
    7. 'r' → logprob: -4.836883544921875
    8. '(' → logprob: -5.461883544921875
    9. '-' → logprob: -5.836883544921875
    10. '.' → logprob: -6.086883544921875

Token 151: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7428320050239563
    2. '   ' → logprob: -1.1178319454193115
    3. '<|end|>' → logprob: -2.6178319454193115
    4. '
' → logprob: -3.1178319454193115
    5. ')' → logprob: -4.117832183837891
    6. 'else' → logprob: -4.367832183837891
    7. ' ' → logprob: -4.367832183837891
    8. '+
' → logprob: -4.492832183837891
    9. '\n' → logprob: -4.617832183837891
    10. 'elif' → logprob: -5.117832183837891

Token 152: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2780418395996094
    2. '+' → logprob: -2.6530418395996094
    3. '\n' → logprob: -2.6530418395996094
    4. '<|end|>' → logprob: -2.6530418395996094
    5. ')' → logprob: -4.153041839599609
    6. '+
' → logprob: -5.903041839599609
    7. '<|end|>' → logprob: -6.528041839599609
    8. '   ' → logprob: -6.778041839599609
    9. 'print' → logprob: -6.903041839599609
    10. 'newline' → logprob: -7.028041839599609

Token 153: ' bon' (ID: 4846)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4990473985671997
    2. '
' → logprob: -2.12404727935791
    3. ' continue' → logprob: -2.12404727935791
    4. ' ' → logprob: -2.24904727935791
    5. '<|end|>' → logprob: -2.24904727935791
    6. ')' → logprob: -2.37404727935791
    7. 'continue' → logprob: -2.62404727935791
    8. '\n' → logprob: -2.74904727935791
    9. '   ' → logprob: -3.37404727935791
    10. '	continue' → logprob: -4.74904727935791

Token 154: ' c' (ID: 274)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.170957326889038
    2. '<|end|>' → logprob: -1.170957326889038
    3. '\n' → logprob: -1.670957326889038
    4. ')' → logprob: -3.045957326889038
    5. '
' → logprob: -3.295957326889038
    6. 'else' → logprob: -3.920957326889038
    7. '<|end|>' → logprob: -3.920957326889038
    8. ' ' → logprob: -3.920957326889038
    9. 'elif' → logprob: -5.045957565307617
    10. '\' → logprob: -5.795957565307617

Token 155: '**' (ID: 410)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2250111103057861
    2. '<|end|>' → logprob: -1.4750111103057861
    3. '   ' → logprob: -1.9750111103057861
    4. '       ' → logprob: -1.9750111103057861
    5. ''est' → logprob: -3.475011110305786
    6. '```' → logprob: -4.100010871887207
    7. ''' → logprob: -4.100010871887207
    8. '*' → logprob: -4.350010871887207
    9. 'ont' → logprob: -4.725010871887207
    10. 'else' → logprob: -4.850010871887207

Token 156: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -13.000004768371582
    3. '(' → logprob: -13.125004768371582
    4. '³' → logprob: -14.750004768371582
    5. '**' → logprob: -14.875004768371582
    6. '```' → logprob: -16.8750057220459
    7. ')' → logprob: -17.3750057220459
    8. '  ' → logprob: -18.2500057220459
    9. '***' → logprob: -18.2500057220459
    10. '.' → logprob: -18.3750057220459

Token 157: ' passe' (ID: 22210)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6657262444496155
    2. '
' → logprob: -1.5407261848449707
    3. '<|end|>' → logprob: -2.4157261848449707
    4. '+' → logprob: -2.9157261848449707
    5. 'else' → logprob: -3.2907261848449707
    6. '\n' → logprob: -3.5407261848449707
    7. 'continue' → logprob: -4.790726184844971
    8. ')' → logprob: -4.915726184844971
    9. ' ' → logprob: -5.040726184844971
    10. ' else' → logprob: -5.040726184844971

Token 158: ' aussi' (ID: 9894)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12041862308979034
    2. '
' → logprob: -3.3704185485839844
    3. '<|end|>' → logprob: -3.6204185485839844
    4. 'else' → logprob: -3.9954185485839844
    5. '+' → logprob: -4.995418548583984
    6. '\n' → logprob: -5.245418548583984
    7. ' else' → logprob: -5.495418548583984
    8. ' ' → logprob: -5.620418548583984
    9. ')' → logprob: -5.745418548583984
    10. 'continue' → logprob: -5.995418548583984

Token 160: ' mais' (ID: 2899)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.19629719853401184
    2. ' ' → logprob: -2.4462971687316895
    3. '   ' → logprob: -3.1962971687316895
    4. '\' → logprob: -4.4462971687316895
    5. 'continue' → logprob: -5.1962971687316895
    6. '  ' → logprob: -5.5712971687316895
    7. '"\' → logprob: -5.6962971687316895
    8. '  
' → logprob: -5.8212971687316895
    9. ''\' → logprob: -5.8212971687316895
    10. ' 
' → logprob: -5.8212971687316895

Token 161: ' voilà' (ID: 77612)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1063001155853271
    2. '\n' → logprob: -2.106300115585327
    3. '   ' → logprob: -2.356300115585327
    4. '=' → logprob: -2.731300115585327
    5. ' continue' → logprob: -2.981300115585327
    6. ' c' → logprob: -2.981300115585327
    7. ' result' → logprob: -3.231300115585327
    8. ' +=' → logprob: -3.231300115585327
    9. ')' → logprob: -3.731300115585327
    10. '    ' → logprob: -3.731300115585327

Token 162: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3716287314891815
    2. '<|end|>' → logprob: -1.246628761291504
    3. '\n' → logprob: -4.496628761291504
    4. ')' → logprob: -5.621628761291504
    5. '<|end|>' → logprob: -5.621628761291504
    6. '   ' → logprob: -6.371628761291504
    7. ' ' → logprob: -7.996628761291504
    8. '+' → logprob: -7.996628761291504
    9. '```' → logprob: -7.996628761291504
    10. 'newline' → logprob: -8.121628761291504

Token 163: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.366245836019516
    2. ' else' → logprob: -1.9912458658218384
    3. '
' → logprob: -2.241245746612549
    4. '\n' → logprob: -3.741245746612549
    5. '   ' → logprob: -4.116245746612549
    6. ' ' → logprob: -5.241245746612549
    7. 'continue' → logprob: -5.241245746612549
    8. 'elif' → logprob: -5.741245746612549
    9. ')' → logprob: -6.241245746612549
    10. '+' → logprob: -6.491245746612549

Token 164: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0832737386226654
    2. ' else' → logprob: -2.9582736492156982
    3. 'else' → logprob: -3.5832736492156982
    4. ' continue' → logprob: -9.833273887634277
    5. ' ' → logprob: -10.083273887634277
    6. 'continue' → logprob: -10.458273887634277
    7. 'elif' → logprob: -10.958273887634277
    8. ' for' → logprob: -11.083273887634277
    9. ' elif' → logprob: -11.208273887634277
    10. '    ' → logprob: -11.833273887634277

Token 165: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.07997654378414154
    2. 'ichage' → logprob: -2.8299765586853027
    3. 'iche' → logprob: -4.454976558685303
    4. '#' → logprob: -5.329976558685303
    5. 'ich' → logprob: -6.704976558685303
    6. '   ' → logprob: -9.829976081848145
    7. 'ic' → logprob: -10.079976081848145
    8. '```' → logprob: -11.079976081848145
    9. 'iché' → logprob: -11.454976081848145
    10. 'ichier' → logprob: -11.829976081848145

Token 166: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.054500666621607e-06
    2. '```' → logprob: -13.50000286102295
    3. '
' → logprob: -13.75000286102295
    4. ' print' → logprob: -14.87500286102295
    5. 'result' → logprob: -16.625003814697266
    6. ')
' → logprob: -17.000003814697266
    7. ')' → logprob: -17.500003814697266
    8. '``' → logprob: -18.750003814697266
    9. '(print' → logprob: -18.875003814697266
    10. '  
' → logprob: -19.125003814697266

Token 167: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3306015716807451e-05
    2. '
' → logprob: -11.37501335144043
    3. ' print' → logprob: -14.37501335144043
    4. '```' → logprob: -14.37501335144043
    5. ')
' → logprob: -14.62501335144043
    6. ')' → logprob: -16.25001335144043
    7. 'result' → logprob: -18.37501335144043
    8. '  
' → logprob: -18.37501335144043
    9. 'for' → logprob: -19.12501335144043
    10. '``' → logprob: -19.50001335144043

Token 168: 'n' (ID: 77)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011178683489561081
    2. ')' → logprob: -4.511178493499756
    3. ' print' → logprob: -9.011178970336914
    4. ')
' → logprob: -12.011178970336914
    5. ' )' → logprob: -13.636178970336914
    6. 'else' → logprob: -14.636178970336914
    7. '```' → logprob: -14.886178970336914
    8. ',' → logprob: -15.511178970336914
    9. 'result' → logprob: -15.761178970336914
    10. '   ' → logprob: -16.511178970336914

Token 169: 'ada' (ID: 1194)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25219905376434326
    2. ')' → logprob: -1.5021990537643433
    3. ' print' → logprob: -8.752199172973633
    4. ')
' → logprob: -10.377199172973633
    5. '```' → logprob: -10.502199172973633
    6. ' )' → logprob: -11.502199172973633
    7. '   ' → logprob: -12.127199172973633
    8. 'else' → logprob: -12.127199172973633
    9. '`)' → logprob: -12.377199172973633
    10. ')

' → logprob: -12.502199172973633

Token 170: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007936627953313291
    2. '()' → logprob: -8.00079345703125
    3. '())' → logprob: -8.62579345703125
    4. 'print' → logprob: -8.87579345703125
    5. ' )' → logprob: -9.25079345703125
    6. '(' → logprob: -10.75079345703125
    7. 'result' → logprob: -11.87579345703125
    8. '(result' → logprob: -12.62579345703125
    9. ')
' → logprob: -13.25079345703125
    10. '))' → logprob: -13.37579345703125

Token 171: ' f' (ID: 285)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.012465854175388813
    2. ' result' → logprob: -5.512465953826904
    3. ')' → logprob: -5.762465953826904
    4. 'print' → logprob: -5.762465953826904
    5. '(result' → logprob: -6.262465953826904
    6. '")' → logprob: -10.137465476989746
    7. '```' → logprob: -10.637465476989746
    8. ')
' → logprob: -10.887465476989746
    9. ' )' → logprob: -11.262465476989746
    10. ' ' → logprob: -11.262465476989746

Token 172: '-string' (ID: 73286)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5286781191825867
    2. 'print' → logprob: -2.0286781787872314
    3. 'ormat' → logprob: -2.0286781787872314
    4. '")' → logprob: -2.9036781787872314
    5. 'string' → logprob: -3.6536781787872314
    6. ''' → logprob: -4.028677940368652
    7. ')' → logprob: -4.278677940368652
    8. '-string' → logprob: -4.528677940368652
    9. '-' → logprob: -4.653677940368652
    10. '""' → logprob: -5.028677940368652

Token 173: ' ici' (ID: 27994)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18566864728927612
    2. ')' → logprob: -1.935668706893921
    3. ')
' → logprob: -3.685668706893921
    4. '
' → logprob: -11.3106689453125
    5. 'result' → logprob: -11.5606689453125
    6. ' print' → logprob: -11.8106689453125
    7. ',' → logprob: -12.4356689453125
    8. 'for' → logprob: -12.5606689453125
    9. ')

' → logprob: -13.8106689453125
    10. ',
' → logprob: -13.8106689453125

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.161011204123497
    2. 'print' → logprob: -1.9110112190246582
    3. ')
' → logprob: -7.161011219024658
    4. 'result' → logprob: -12.6610107421875
    5. ' print' → logprob: -12.6610107421875
    6. ' )' → logprob: -13.2860107421875
    7. ')

' → logprob: -14.5360107421875
    8. '(print' → logprob: -14.5360107421875
    9. ',' → logprob: -14.9110107421875
    10. '")' → logprob: -15.2860107421875

Token 175: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7432603272027336e-06
    2. '
' → logprob: -13.500001907348633
    3. '```' → logprob: -15.500001907348633
    4. ' print' → logprob: -17.000001907348633
    5. ')
' → logprob: -19.375001907348633
    6. '``' → logprob: -19.750001907348633
    7. '
' → logprob: -22.000001907348633
    8. '#print' → logprob: -22.125001907348633
    9. ')' → logprob: -22.500001907348633
    10. '.print' → logprob: -22.625001907348633

Token 176: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014676393941044807
    2. '(result' → logprob: -4.264676570892334
    3. '("("' → logprob: -7.764676570892334
    4. '("' → logprob: -9.639676094055176
    5. '('' → logprob: -11.514676094055176
    6. 'result' → logprob: -12.014676094055176
    7. ' (' → logprob: -13.139676094055176
    8. '(
' → logprob: -13.639676094055176
    9. '((' → logprob: -13.639676094055176
    10. '("(' → logprob: -13.889676094055176

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.117345684382599e-05
    2. ' )' → logprob: -11.000020980834961
    3. '))' → logprob: -13.125020980834961
    4. '+' → logprob: -13.500020980834961
    5. ')`' → logprob: -15.000020980834961
    6. '`)' → logprob: -15.625020980834961
    7. '+)' → logprob: -16.75002098083496
    8. ')
' → logprob: -16.75002098083496
    9. ')#' → logprob: -16.75002098083496
    10. ')**' → logprob: -17.00002098083496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 175
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 97
Précision stricte (1ère position): 24.00%
Précision adaptée (1ère position): 24.57%
Précision (top 10): 55.43%
================================================================================
