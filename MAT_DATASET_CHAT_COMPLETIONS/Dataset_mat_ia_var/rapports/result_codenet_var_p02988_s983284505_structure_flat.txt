================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
P = list(map(int, input().split()))
ans = 0
i = 1
while i < N - 1:
    if (P[i-1] < P[i] < P[i+1]) or (P[i-1] > P[i] > P[i+1]):
        ans += 1
    i += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6509547829627991
    2. '(' → logprob: -0.7759547829627991
    3. '()' → logprob: -4.650954723358154
    4. '())' → logprob: -4.900954723358154
    5. '(
' → logprob: -8.525955200195312
    6. '>' → logprob: -8.900955200195312
    7. '```' → logprob: -8.900955200195312
    8. '`)' → logprob: -9.025955200195312
    9. '>)' → logprob: -9.275955200195312
    10. '('' → logprob: -9.775955200195312

Token 5: 'P' (ID: 47)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5341090559959412
    2. 'if' → logprob: -1.034109115600586
    3. 's' → logprob: -4.409109115600586
    4. 'x' → logprob: -4.659109115600586
    5. 'i' → logprob: -4.909109115600586
    6. 'a' → logprob: -5.659109115600586
    7. 'print' → logprob: -6.034109115600586
    8. 'f' → logprob: -6.034109115600586
    9. '`' → logprob: -6.284109115600586
    10. 'result' → logprob: -6.284109115600586

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010876971296966076
    2. '.' → logprob: -5.7608771324157715
    3. '[i' → logprob: -6.3858771324157715
    4. '[:]' → logprob: -6.7608771324157715
    5. '\[' → logprob: -7.2608771324157715
    6. '=' → logprob: -7.2608771324157715
    7. '(' → logprob: -7.5108771324157715
    8. '+' → logprob: -7.8858771324157715
    9. '[]' → logprob: -8.135876655578613
    10. ')' → logprob: -8.260876655578613

Token 7: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.2502471208572388
    2. 'int' → logprob: -1.6252471208572388
    3. '[]' → logprob: -1.7502471208572388
    4. '[int' → logprob: -1.7502471208572388
    5. ' list' → logprob: -3.375247001647949
    6. ' []' → logprob: -3.750247001647949
    7. '0' → logprob: -3.750247001647949
    8. '1' → logprob: -3.875247001647949
    9. ' [' → logprob: -4.375247001647949
    10. '[' → logprob: -4.375247001647949

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018446780450176448
    2. '(range' → logprob: -8.875184059143066
    3. '(input' → logprob: -12.250184059143066
    4. '(
' → logprob: -12.375184059143066
    5. '()' → logprob: -12.500184059143066
    6. '("("' → logprob: -12.625184059143066
    7. '```' → logprob: -12.750184059143066
    8. '(P' → logprob: -13.000184059143066
    9. ' (' → logprob: -13.125184059143066
    10. '((' → logprob: -13.250184059143066

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06395597755908966
    2. '(' → logprob: -2.9389560222625732
    3. '(input' → logprob: -5.313955783843994
    4. '(str' → logprob: -5.813955783843994
    5. ')' → logprob: -8.063956260681152
    6. '```' → logprob: -8.438956260681152
    7. 'int' → logprob: -9.063956260681152
    8. '<int' → logprob: -9.063956260681152
    9. '(lambda' → logprob: -9.313956260681152
    10. '(
' → logprob: -9.438956260681152

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00317521789111197
    2. '(' → logprob: -6.503175258636475
    3. ',input' → logprob: -6.503175258636475
    4. 'input' → logprob: -9.503174781799316
    5. '=input' → logprob: -10.378174781799316
    6. '))' → logprob: -11.253174781799316
    7. ',' → logprob: -11.753174781799316
    8. ')' → logprob: -11.878174781799316
    9. '<|end|>' → logprob: -11.878174781799316
    10. ' input' → logprob: -12.003174781799316

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07911152392625809
    2. ' input' → logprob: -2.5791115760803223
    3. '(input' → logprob: -8.454111099243164
    4. ',input' → logprob: -12.079111099243164
    5. '=input' → logprob: -13.704111099243164
    6. ')' → logprob: -13.829111099243164
    7. '	input' → logprob: -15.204111099243164
    8. ' ' → logprob: -16.204111099243164
    9. '<input' → logprob: -16.204111099243164
    10. '```' → logprob: -16.204111099243164

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9864320755004883
    2. '()))' → logprob: -1.2364320755004883
    3. '().' → logprob: -1.3614320755004883
    4. '())' → logprob: -2.6114320755004883
    5. '(' → logprob: -6.486432075500488
    6. '()));' → logprob: -6.486432075500488
    7. ')' → logprob: -6.611432075500488
    8. '))' → logprob: -6.736432075500488
    9. '()>' → logprob: -7.361432075500488
    10. '());' → logprob: -8.361432075500488

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007229181355796754
    2. 'strip' → logprob: -7.250722885131836
    3. 'rstrip' → logprob: -11.500722885131836
    4. ' split' → logprob: -12.875722885131836
    5. '(split' → logprob: -15.750722885131836
    6. 'spl' → logprob: -16.625722885131836
    7. ')' → logprob: -17.500722885131836
    8. ' strip' → logprob: -19.000722885131836
    9. 'replace' → logprob: -19.000722885131836
    10. '```' → logprob: -19.250722885131836

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6136597990989685
    2. '()))' → logprob: -1.2386598587036133
    3. ')' → logprob: -2.1136598587036133
    4. '())' → logprob: -3.2386598587036133
    5. '()' → logprob: -5.113659858703613
    6. '(' → logprob: -6.363659858703613
    7. '('' → logprob: -7.238659858703613
    8. ''))' → logprob: -8.863659858703613
    9. ')))' → logprob: -9.488659858703613
    10. '(','' → logprob: -9.863659858703613

Token 15: 'ans' (ID: 616)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5540251731872559
    2. 's' → logprob: -2.804025173187256
    3. 'dp' → logprob: -3.054025173187256
    4. 'c' → logprob: -3.179025173187256
    5. 'p' → logprob: -3.304025173187256
    6. 'd' → logprob: -3.554025173187256
    7. 'S' → logprob: -3.554025173187256
    8. 'M' → logprob: -3.679025173187256
    9. 'Q' → logprob: -3.679025173187256
    10. 'a' → logprob: -4.179025173187256

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4438852071762085
    2. ' =' → logprob: -1.6938852071762085
    3. '_' → logprob: -1.9438852071762085
    4. '[' → logprob: -3.568885326385498
    5. '(' → logprob: -6.318885326385498
    6. 's' → logprob: -7.943885326385498
    7. '[:]' → logprob: -8.19388484954834
    8. '[]' → logprob: -8.56888484954834
    9. '_=' → logprob: -8.81888484954834
    10. '=[]' → logprob: -9.19388484954834

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18311356008052826
    2. '[' → logprob: -2.5581135749816895
    3. ' ' → logprob: -3.0581135749816895
    4. '[]' → logprob: -3.8081135749816895
    5. ' [' → logprob: -4.4331135749816895
    6. ' []' → logprob: -5.4331135749816895
    7. '[max' → logprob: -6.5581135749816895
    8. 'max' → logprob: -7.6831135749816895
    9. '[len' → logprob: -8.183113098144531
    10. '1' → logprob: -8.183113098144531

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.050106048583984375
    2. '[' → logprob: -3.8001060485839844
    3. 'max' → logprob: -4.300106048583984
    4. 'P' → logprob: -5.800106048583984
    5. 'sum' → logprob: -5.800106048583984
    6. '[]' → logprob: -6.425106048583984
    7. '[max' → logprob: -6.425106048583984
    8. '[P' → logprob: -7.425106048583984
    9. 'N' → logprob: -7.675106048583984
    10. '1' → logprob: -7.925106048583984

Token 19: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34577423334121704
    2. ' for' → logprob: -1.8457741737365723
    3. '\n' → logprob: -2.3457741737365723
    4. '
' → logprob: -3.3457741737365723
    5. '' → logprob: -7.220774173736572
    6. '<|end|>' → logprob: -7.220774173736572
    7. ' ' → logprob: -7.345774173736572
    8. ' 
' → logprob: -7.970774173736572
    9. '\' → logprob: -8.09577465057373
    10. '```' → logprob: -8.34577465057373

Token 20: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011490292381495237
    2. ' for' → logprob: -7.0011491775512695
    3. '```' → logprob: -9.12614917755127
    4. 'i' → logprob: -9.37614917755127
    5. '\n' → logprob: -11.00114917755127
    6. '
' → logprob: -11.87614917755127
    7. '\' → logprob: -12.12614917755127
    8. '``' → logprob: -12.37614917755127
    9. 'f' → logprob: -13.37614917755127
    10. '`' → logprob: -13.50114917755127

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9098042845726013
    2. '=' → logprob: -1.784804344177246
    3. ' +=' → logprob: -1.784804344177246
    4. ' ' → logprob: -2.159804344177246
    5. '+' → logprob: -2.534804344177246
    6. 'n' → logprob: -3.034804344177246
    7. 'f' → logprob: -5.034804344177246
    8. 's' → logprob: -5.409804344177246
    9. '+=' → logprob: -5.909804344177246
    10. ' n' → logprob: -6.284804344177246

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05006704106926918
    2. ' ' → logprob: -3.0500669479370117
    3. '1' → logprob: -6.550066947937012
    4. '2' → logprob: -10.800066947937012
    5. 'N' → logprob: -11.550066947937012
    6. ' N' → logprob: -12.550066947937012
    7. '-' → logprob: -13.050066947937012
    8. ' -' → logprob: -13.300066947937012
    9. 'i' → logprob: -13.487566947937012
    10. ' i' → logprob: -13.737566947937012

Token 23: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011505997739732265
    2. ' ' → logprob: -4.511506080627441
    3. '1' → logprob: -7.761506080627441
    4. '2' → logprob: -11.636506080627441
    5. 'N' → logprob: -12.011506080627441
    6. '-' → logprob: -12.824006080627441
    7. ')' → logprob: -12.886506080627441
    8. 'i' → logprob: -13.199006080627441
    9. 'len' → logprob: -13.386506080627441
    10. ' -' → logprob: -14.324006080627441

Token 24: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3261208534240723
    2. 'while' → logprob: -1.4511208534240723
    3. ' while' → logprob: -1.7011208534240723
    4. ' ' → logprob: -2.4511208534240723
    5. '
' → logprob: -2.7011208534240723
    6. '<|end|>' → logprob: -2.7011208534240723
    7. '0' → logprob: -3.4511208534240723
    8. '\n' → logprob: -4.451120853424072
    9. ')' → logprob: -4.576120853424072
    10. '```' → logprob: -4.826120853424072

Token 25: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04420497640967369
    2. ' while' → logprob: -3.4192049503326416
    3. '+' → logprob: -5.794205188751221
    4. '
' → logprob: -6.169205188751221
    5. '```' → logprob: -6.294205188751221
    6. '\n' → logprob: -6.419205188751221
    7. '\' → logprob: -7.794205188751221
    8. '<|end|>' → logprob: -8.294204711914062
    9. '0' → logprob: -8.794204711914062
    10. ',' → logprob: -9.169204711914062

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4353495240211487
    2. ' ' → logprob: -1.060349464416504
    3. 'i' → logprob: -5.060349464416504
    4. '  ' → logprob: -8.810349464416504
    5. ' (' → logprob: -10.685349464416504
    6. ' P' → logprob: -10.810349464416504
    7. ' N' → logprob: -11.185349464416504
    8. ' space' → logprob: -11.310349464416504
    9. '<|end|>' → logprob: -11.435349464416504
    10. ' ans' → logprob: -11.685349464416504

Token 27: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.37894406914711
    2. ' <=' → logprob: -1.5039440393447876
    3. '<' → logprob: -2.503944158554077
    4. '<=' → logprob: -4.503943920135498
    5. ' ' → logprob: -8.253944396972656
    6. '<len' → logprob: -10.253944396972656
    7. '<n' → logprob: -11.878944396972656
    8. '+' → logprob: -12.628944396972656
    9. '<size' → logprob: -12.628944396972656
    10. ' ≤' → logprob: -12.628944396972656

Token 28: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10117632895708084
    2. ' N' → logprob: -2.3511762619018555
    3. 'len' → logprob: -7.8511762619018555
    4. ' ' → logprob: -7.8511762619018555
    5. ' len' → logprob: -8.851176261901855
    6. '  ' → logprob: -11.851176261901855
    7. 'n' → logprob: -11.851176261901855
    8. '   ' → logprob: -12.163676261901855
    9. '100' → logprob: -12.913676261901855
    10. '(' → logprob: -13.163676261901855

Token 29: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013768645003437996
    2. ' :' → logprob: -4.763768672943115
    3. ' and' → logprob: -5.513768672943115
    4. '+' → logprob: -7.888768672943115
    5. 'and' → logprob: -8.138768196105957
    6. '+:' → logprob: -8.763768196105957
    7. ':
' → logprob: -9.013768196105957
    8. ' ' → logprob: -9.513768196105957
    9. '):' → logprob: -11.263768196105957
    10. ' :
' → logprob: -11.513768196105957

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007463791989721358
    2. ' ' → logprob: -7.250746250152588
    3. '2' → logprob: -10.250746726989746
    4. '3' → logprob: -15.500746726989746
    5. '-' → logprob: -15.563246726989746
    6. '１' → logprob: -15.688246726989746
    7. '0' → logprob: -15.875746726989746
    8. '4' → logprob: -16.62574577331543
    9. '  ' → logprob: -16.68824577331543
    10. '   ' → logprob: -16.81324577331543

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.392824874026701e-05
    2. '2' → logprob: -11.00003433227539
    3. ' ' → logprob: -11.00003433227539
    4. '3' → logprob: -16.00003433227539
    5. '１' → logprob: -16.50003433227539
    6. '0' → logprob: -16.81253433227539
    7. '4' → logprob: -17.56253433227539
    8. '-' → logprob: -17.62503433227539
    9. '```' → logprob: -17.93753433227539
    10. '  ' → logprob: -18.06253433227539

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03370194882154465
    2. ' :' → logprob: -3.5337018966674805
    3. ':
' → logprob: -6.5337018966674805
    4. ' and' → logprob: -6.5337018966674805
    5. ' ' → logprob: -7.5337018966674805
    6. ' :
' → logprob: -8.03370189666748
    7. 'and' → logprob: -9.78370189666748
    8. ':**' → logprob: -10.15870189666748
    9. '   ' → logprob: -10.53370189666748
    10. '<|end|>' → logprob: -12.03370189666748

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10987761616706848
    2. ' ' → logprob: -2.484877586364746
    3. '<|end|>' → logprob: -4.109877586364746
    4. ' if' → logprob: -6.734877586364746
    5. '    ' → logprob: -6.984877586364746
    6. '  ' → logprob: -7.734877586364746
    7. '<|end|>' → logprob: -7.734877586364746
    8. ':' → logprob: -8.484877586364746
    9. ',' → logprob: -8.734877586364746
    10. '```' → logprob: -8.859877586364746

Token 34: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2823730409145355
    2. '   ' → logprob: -1.907373070716858
    3. ' if' → logprob: -2.4073729515075684
    4. ' ' → logprob: -5.032372951507568
    5. '    ' → logprob: -7.907372951507568
    6. '  ' → logprob: -9.032373428344727
    7. 'while' → logprob: -9.032373428344727
    8. ' while' → logprob: -9.157373428344727
    9. '```' → logprob: -9.532373428344727
    10. 'i' → logprob: -10.157373428344727

Token 35: ' (' (ID: 350)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.5238447189331055
    2. 'P' → logprob: -0.8988447189331055
    3. ' ' → logprob: -7.8988447189331055
    4. ' (' → logprob: -9.023844718933105
    5. '(P' → logprob: -9.648844718933105
    6. '(' → logprob: -9.898844718933105
    7. '0' → logprob: -10.648844718933105
    8. '   ' → logprob: -10.898844718933105
    9. 'i' → logprob: -11.148844718933105
    10. ' i' → logprob: -11.398844718933105

Token 36: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0070263962261378765
    2. ' P' → logprob: -5.007026195526123
    3. '(P' → logprob: -9.007026672363281
    4. '   ' → logprob: -9.757026672363281
    5. 'abs' → logprob: -10.382026672363281
    6. ')' → logprob: -10.757026672363281
    7. ' ' → logprob: -10.882026672363281
    8. ' (' → logprob: -11.007026672363281
    9. 'i' → logprob: -11.007026672363281
    10. '(' → logprob: -12.132026672363281

Token 37: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023250321100931615
    2. '[' → logprob: -8.500232696533203
    3. ' [' → logprob: -10.875232696533203
    4. '[I' → logprob: -12.375232696533203
    5. '[P' → logprob: -12.750232696533203
    6. '[j' → logprob: -14.875232696533203
    7. '[a' → logprob: -15.250232696533203
    8. '[A' → logprob: -15.500232696533203
    9. '```' → logprob: -15.500232696533203
    10. '   ' → logprob: -15.625232696533203

Token 38: '-' (ID: 12)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7599080204963684
    2. '>' → logprob: -0.8849080204963684
    3. ' <' → logprob: -2.7599079608917236
    4. '-' → logprob: -3.3849079608917236
    5. '<' → logprob: -4.259908199310303
    6. ' ==' → logprob: -6.259908199310303
    7. ' ' → logprob: -6.259908199310303
    8. ')' → logprob: -6.384908199310303
    9. ' -' → logprob: -6.634908199310303
    10. '==' → logprob: -7.009908199310303

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001310719089815393
    2. ']' → logprob: -9.375130653381348
    3. ' ' → logprob: -11.125130653381348
    4. '0' → logprob: -11.750130653381348
    5. '2' → logprob: -12.125130653381348
    6. 'i' → logprob: -12.500130653381348
    7. '])' → logprob: -13.062630653381348
    8. '>' → logprob: -13.187630653381348
    9. ')' → logprob: -13.312630653381348
    10. ']>' → logprob: -13.500130653381348

Token 40: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8478339910507202
    2. ' >' → logprob: -1.3478339910507202
    3. ' <' → logprob: -1.5978339910507202
    4. '<' → logprob: -2.2228341102600098
    5. ' ' → logprob: -7.97283411026001
    6. ')' → logprob: -8.222833633422852
    7. ' ==' → logprob: -9.097833633422852
    8. '==' → logprob: -9.222833633422852
    9. '<P' → logprob: -9.347833633422852
    10. '+' → logprob: -9.597833633422852

Token 41: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12805777788162231
    2. ' >' → logprob: -2.5030577182769775
    3. '<' → logprob: -3.3780577182769775
    4. ' <' → logprob: -5.503057956695557
    5. ')' → logprob: -9.753057479858398
    6. ' ' → logprob: -10.378057479858398
    7. '==' → logprob: -10.878057479858398
    8. '>=' → logprob: -11.253057479858398
    9. '<P' → logprob: -11.753057479858398
    10. '>P' → logprob: -11.753057479858398

Token 42: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.011205092072486877
    2. ' P' → logprob: -4.511205196380615
    3. '=' → logprob: -9.386204719543457
    4. ' ' → logprob: -10.261204719543457
    5. '=P' → logprob: -11.011204719543457
    6. '>P' → logprob: -11.886204719543457
    7. '>' → logprob: -12.761204719543457
    8. 'p' → logprob: -12.886204719543457
    9. ')' → logprob: -13.136204719543457
    10. 'i' → logprob: -13.823704719543457

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.383526149671525e-05
    2. '[' → logprob: -9.875053405761719
    3. '>' → logprob: -14.000053405761719
    4. 'and' → logprob: -14.875053405761719
    5. 'i' → logprob: -15.000053405761719
    6. '[j' → logprob: -15.125053405761719
    7. ' [' → logprob: -15.500053405761719
    8. ' ' → logprob: -16.75005340576172
    9. '   ' → logprob: -16.75005340576172
    10. ')' → logprob: -17.00005340576172

Token 44: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4861453175544739
    2. '>' → logprob: -1.361145257949829
    3. ' >' → logprob: -2.361145257949829
    4. 'and' → logprob: -3.736145257949829
    5. ' <' → logprob: -5.486145496368408
    6. ' ' → logprob: -5.986145496368408
    7. '<' → logprob: -6.111145496368408
    8. ')' → logprob: -6.736145496368408
    9. ' )' → logprob: -8.36114501953125
    10. '>)' → logprob: -8.86114501953125

Token 45: ' <' (ID: 464)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08186878263950348
    2. 'and' → logprob: -2.706868886947632
    3. '>' → logprob: -4.706868648529053
    4. ' >' → logprob: -6.081868648529053
    5. ' ' → logprob: -7.956868648529053
    6. ')' → logprob: -8.956869125366211
    7. ' <' → logprob: -10.456869125366211
    8. '<' → logprob: -10.706869125366211
    9. ' )' → logprob: -11.956869125366211
    10. '    ' → logprob: -13.206869125366211

Token 46: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.03375185653567314
    2. ' P' → logprob: -3.408751964569092
    3. ' ' → logprob: -10.158751487731934
    4. '=P' → logprob: -10.658751487731934
    5. '>P' → logprob: -10.908751487731934
    6. '=' → logprob: -12.033751487731934
    7. ')' → logprob: -12.658751487731934
    8. '<P' → logprob: -13.033751487731934
    9. '>' → logprob: -13.158751487731934
    10. '	P' → logprob: -13.283751487731934

Token 47: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011371295899152756
    2. '[' → logprob: -4.51137113571167
    3. '+' → logprob: -8.261371612548828
    4. 'i' → logprob: -11.636371612548828
    5. '1' → logprob: -11.636371612548828
    6. '-' → logprob: -12.011371612548828
    7. '>[' → logprob: -12.011371612548828
    8. '```' → logprob: -12.011371612548828
    9. ' [' → logprob: -12.511371612548828
    10. '[j' → logprob: -12.761371612548828

Token 48: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011951096821576357
    2. ' +' → logprob: -6.876194953918457
    3. '[' → logprob: -9.626194953918457
    4. '1' → logprob: -9.626194953918457
    5. '-' → logprob: -10.876194953918457
    6. '>' → logprob: -13.251194953918457
    7. '＋' → logprob: -13.751194953918457
    8. '`' → logprob: -13.876194953918457
    9. '```' → logprob: -14.001194953918457
    10. '   ' → logprob: -14.251194953918457

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.875024795532227
    3. '0' → logprob: -12.750024795532227
    4. '+' → logprob: -14.500024795532227
    5. ']' → logprob: -14.625024795532227
    6. '   ' → logprob: -14.750024795532227
    7. '```' → logprob: -14.875024795532227
    8. '])' → logprob: -15.125024795532227
    9. '2' → logprob: -15.375024795532227
    10. '-' → logprob: -15.625024795532227

Token 50: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22623401880264282
    2. '):' → logprob: -1.601233959197998
    3. ' )' → logprob: -7.976233959197998
    4. '):
' → logprob: -9.101234436035156
    5. ' and' → logprob: -9.351234436035156
    6. ':' → logprob: -9.351234436035156
    7. ' ):' → logprob: -9.601234436035156
    8. '   ' → logprob: -10.101234436035156
    9. ' ' → logprob: -10.976234436035156
    10. ' or' → logprob: -11.226234436035156

Token 51: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008512092754244804
    2. 'or' → logprob: -5.508512020111084
    3. ':' → logprob: -5.758512020111084
    4. '   ' → logprob: -8.133512496948242
    5. ' and' → logprob: -8.133512496948242
    6. ')' → logprob: -8.133512496948242
    7. ' ' → logprob: -8.508512496948242
    8. '	or' → logprob: -10.008512496948242
    9. '       ' → logprob: -10.383512496948242
    10. ' :' → logprob: -10.383512496948242

Token 52: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.015289867296814919
    2. '(P' → logprob: -4.265289783477783
    3. '(' → logprob: -7.515289783477783
    4. '<|end|>' → logprob: -7.890289783477783
    5. ' ' → logprob: -8.890290260314941
    6. ' P' → logprob: -10.390290260314941
    7. ' ' → logprob: -10.640290260314941
    8. '(True' → logprob: -12.765290260314941
    9. '(False' → logprob: -13.390290260314941
    10. ' True' → logprob: -13.515290260314941

Token 53: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.38702428340911865
    2. ' P' → logprob: -1.1370242834091187
    3. ' ' → logprob: -9.76202392578125
    4. '(P' → logprob: -10.26202392578125
    5. ' (' → logprob: -10.88702392578125
    6. '   ' → logprob: -11.13702392578125
    7. ')' → logprob: -11.63702392578125
    8. 'i' → logprob: -12.63702392578125
    9. '  ' → logprob: -12.76202392578125
    10. ' ' → logprob: -12.76202392578125

Token 54: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000442351185483858
    2. '[' → logprob: -7.7504425048828125
    3. 'i' → logprob: -12.500442504882812
    4. '>' → logprob: -13.000442504882812
    5. ' [' → logprob: -13.375442504882812
    6. '[I' → logprob: -14.500442504882812
    7. '>[' → logprob: -14.500442504882812
    8. ']' → logprob: -14.875442504882812
    9. '   ' → logprob: -15.125442504882812
    10. '[user' → logprob: -15.375442504882812

Token 55: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005580356228165329
    2. '+' → logprob: -8.625557899475098
    3. ']' → logprob: -8.625557899475098
    4. ' -' → logprob: -9.625557899475098
    5. '>' → logprob: -10.125557899475098
    6. ']>' → logprob: -10.125557899475098
    7. '[' → logprob: -10.500557899475098
    8. '[-' → logprob: -11.625557899475098
    9. '[i' → logprob: -11.625557899475098
    10. ' ' → logprob: -12.875557899475098

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000429596402682364
    2. ' ' → logprob: -8.250429153442383
    3. '2' → logprob: -9.250429153442383
    4. '-' → logprob: -10.875429153442383
    5. '```' → logprob: -11.500429153442383
    6. '>' → logprob: -11.562929153442383
    7. '   ' → logprob: -11.937929153442383
    8. '+' → logprob: -12.187929153442383
    9. '0' → logprob: -12.312929153442383
    10. ')' → logprob: -12.812929153442383

Token 57: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1806887537240982
    2. '>' → logprob: -1.805688738822937
    3. ')' → logprob: -7.680688858032227
    4. ' <' → logprob: -8.430688858032227
    5. ' ' → logprob: -8.555688858032227
    6. '<' → logprob: -11.055688858032227
    7. ' ' → logprob: -11.805688858032227
    8. '<|end|>' → logprob: -11.805688858032227
    9. '```' → logprob: -12.055688858032227
    10. ']' → logprob: -12.430688858032227

Token 58: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3137286305427551
    2. '>' → logprob: -1.3137285709381104
    3. ' ' → logprob: -8.063728332519531
    4. ')' → logprob: -9.313728332519531
    5. ' <' → logprob: -10.813728332519531
    6. '<' → logprob: -11.938728332519531
    7. ' ' → logprob: -12.063728332519531
    8. '```' → logprob: -12.438728332519531
    9. ' and' → logprob: -12.626228332519531
    10. 'and' → logprob: -13.001228332519531

Token 59: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.030067717656493187
    2. 'P' → logprob: -3.6550676822662354
    3. ' ' → logprob: -5.6550679206848145
    4. '<|end|>' → logprob: -8.905067443847656
    5. ')' → logprob: -9.780067443847656
    6. ' ' → logprob: -10.655067443847656
    7. '>' → logprob: -11.905067443847656
    8. '>P' → logprob: -12.030067443847656
    9. '  ' → logprob: -12.280067443847656
    10. '	P' → logprob: -12.842567443847656

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021343429398257285
    2. '[' → logprob: -9.000213623046875
    3. ' [' → logprob: -9.750213623046875
    4. 'i' → logprob: -11.000213623046875
    5. ' ' → logprob: -12.000213623046875
    6. '   ' → logprob: -12.500213623046875
    7. 'P' → logprob: -13.625213623046875
    8. ')' → logprob: -14.375213623046875
    9. ' i' → logprob: -14.375213623046875
    10. '[P' → logprob: -14.375213623046875

Token 61: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5988929271697998
    2. ' >' → logprob: -0.8488929271697998
    3. ']' → logprob: -3.8488929271698
    4. ']>' → logprob: -7.723893165588379
    5. ' ' → logprob: -8.348893165588379
    6. ')' → logprob: -8.848893165588379
    7. '[' → logprob: -9.098893165588379
    8. ' ]' → logprob: -9.473893165588379
    9. '```' → logprob: -9.723893165588379
    10. '[i' → logprob: -9.848893165588379

Token 62: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.030067142099142075
    2. '>' → logprob: -3.530067205429077
    3. ' ' → logprob: -8.905067443847656
    4. ' and' → logprob: -9.530067443847656
    5. ')' → logprob: -10.030067443847656
    6. 'and' → logprob: -10.405067443847656
    7. ' <' → logprob: -11.030067443847656
    8. '```' → logprob: -12.280067443847656
    9. ' )' → logprob: -12.780067443847656
    10. ' ' → logprob: -13.155067443847656

Token 63: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.10026684403419495
    2. ' P' → logprob: -2.350266933441162
    3. ' ' → logprob: -10.350266456604004
    4. ')' → logprob: -10.850266456604004
    5. '   ' → logprob: -12.475266456604004
    6. '>' → logprob: -13.350266456604004
    7. '>P' → logprob: -13.975266456604004
    8. '  ' → logprob: -14.100266456604004
    9. '=P' → logprob: -15.350266456604004
    10. '	P' → logprob: -15.475266456604004

Token 64: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011200665176147595
    2. 'i' → logprob: -9.25011157989502
    3. ' [' → logprob: -11.50011157989502
    4. '[' → logprob: -12.87511157989502
    5. '   ' → logprob: -14.37511157989502
    6. ' ' → logprob: -14.37511157989502
    7. '+' → logprob: -14.50011157989502
    8. ' i' → logprob: -14.75011157989502
    9. '[P' → logprob: -15.25011157989502
    10. '[
' → logprob: -15.50011157989502

Token 65: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002986392646562308
    2. '-' → logprob: -8.125298500061035
    3. '[' → logprob: -13.875298500061035
    4. '1' → logprob: -14.625298500061035
    5. '[i' → logprob: -14.875298500061035
    6. ' +' → logprob: -15.125298500061035
    7. '   ' → logprob: -15.875298500061035
    8. '+)' → logprob: -17.00029945373535
    9. ']+' → logprob: -17.00029945373535
    10. '+]' → logprob: -17.12529945373535

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. '2' → logprob: -11.500014305114746
    3. '+' → logprob: -13.250014305114746
    4. ' ' → logprob: -13.375014305114746
    5. '   ' → logprob: -14.750014305114746
    6. '```' → logprob: -15.375014305114746
    7. '0' → logprob: -17.00001335144043
    8. '-' → logprob: -17.75001335144043
    9. 'i' → logprob: -17.87501335144043
    10. '`' → logprob: -18.56251335144043

Token 67: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017376672476530075
    2. ')' → logprob: -4.142376899719238
    3. ' ):' → logprob: -6.892376899719238
    4. ')):' → logprob: -8.642376899719238
    5. '):
' → logprob: -9.267376899719238
    6. ':' → logprob: -10.642376899719238
    7. ' )' → logprob: -11.267376899719238
    8. '))' → logprob: -12.142376899719238
    9. ''):' → logprob: -12.892376899719238
    10. ')：' → logprob: -13.017376899719238

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002390279434621334
    2. '   ' → logprob: -6.252390384674072
    3. ':' → logprob: -8.002389907836914
    4. ')' → logprob: -11.127389907836914
    5. '```' → logprob: -11.127389907836914
    6. '    ' → logprob: -11.252389907836914
    7. 'i' → logprob: -11.252389907836914
    8. '      ' → logprob: -11.377389907836914
    9. '     ' → logprob: -11.377389907836914
    10. ' i' → logprob: -11.502389907836914

Token 69: ' ans' (ID: 3345)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1102511882781982
    2. '   ' → logprob: -1.2352511882781982
    3. '       ' → logprob: -1.6102511882781982
    4. 'i' → logprob: -1.7352511882781982
    5. 'ans' (adapté à ' ans') → logprob: -6.360251426696777
    6. ' ans' → logprob: -7.110251426696777
    7. '```' → logprob: -7.485251426696777
    8. ' ' → logprob: -8.860251426696777
    9. '    ' → logprob: -9.110251426696777
    10. '  ' → logprob: -9.985251426696777

Token 70: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01854226365685463
    2. '+=' → logprob: -4.018542289733887
    3. '+' → logprob: -7.893542289733887
    4. ' =' → logprob: -11.643542289733887
    5. ' +' → logprob: -12.143542289733887
    6. '=' → logprob: -12.893542289733887
    7. ' ' → logprob: -14.393542289733887
    8. '    ' → logprob: -14.768542289733887
    9. '+='' → logprob: -14.768542289733887
    10. '   ' → logprob: -15.268542289733887

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015118853189051151
    2. ' ' → logprob: -6.501512050628662
    3. '2' → logprob: -12.001511573791504
    4. '0' → logprob: -12.876511573791504
    5. 'P' → logprob: -15.001511573791504
    6. ' P' → logprob: -16.12651252746582
    7. '3' → logprob: -16.25151252746582
    8. '   ' → logprob: -16.62651252746582
    9. '(P' → logprob: -17.25151252746582
    10. '-' → logprob: -17.31401252746582

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3915141355246305e-05
    2. '2' → logprob: -11.37502384185791
    3. ' ' → logprob: -11.87502384185791
    4. '0' → logprob: -12.62502384185791
    5. 'P' → logprob: -13.50002384185791
    6. '(P' → logprob: -15.00002384185791
    7. 'abs' → logprob: -15.62502384185791
    8. '(' → logprob: -16.687524795532227
    9. '3' → logprob: -17.000024795532227
    10. '１' → logprob: -17.187524795532227

Token 73: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6568637490272522
    2. '
' → logprob: -0.9068637490272522
    3. '\n' → logprob: -3.1568636894226074
    4. '    
' → logprob: -4.656863689422607
    5. '       ' → logprob: -4.906863689422607
    6. ' i' → logprob: -5.156863689422607
    7. '  
' → logprob: -5.281863689422607
    8. 'i' → logprob: -6.031863689422607
    9. '   
' → logprob: -6.656863689422607
    10. '	i' → logprob: -7.031863689422607

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03982740640640259
    2. 'i' → logprob: -3.414827346801758
    3. ' i' → logprob: -5.539827346801758
    4. '
' → logprob: -6.664827346801758
    5. '	i' → logprob: -8.039827346801758
    6. '    
' → logprob: -8.164827346801758
    7. '\n' → logprob: -9.039827346801758
    8. '       ' → logprob: -9.164827346801758
    9. '```' → logprob: -9.914827346801758
    10. '[i' → logprob: -10.664827346801758

Token 75: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061998505145311356
    2. ' i' → logprob: -3.0619986057281494
    3. 'i' (adapté à ' i') → logprob: -4.43699836730957
    4. '       ' → logprob: -7.68699836730957
    5. '	i' → logprob: -7.68699836730957
    6. '\n' → logprob: -8.31199836730957
    7. '    
' → logprob: -9.06199836730957
    8. '\t' → logprob: -9.43699836730957
    9. ' 
' → logprob: -10.56199836730957
    10. '    ' → logprob: -10.93699836730957

Token 76: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0492941252887249
    2. '+=' → logprob: -3.0492942333221436
    3. ' +=' → logprob: -7.6742939949035645
    4. '++' → logprob: -8.424294471740723
    5. '+++' → logprob: -11.549294471740723
    6. ' +' → logprob: -12.424294471740723
    7. '```' → logprob: -13.049294471740723
    8. '=' → logprob: -13.174294471740723
    9. '+="' → logprob: -13.424294471740723
    10. '+='' → logprob: -13.924294471740723

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '2' → logprob: -15.875019073486328
    4. '   ' → logprob: -18.500019073486328
    5. '```' → logprob: -19.000019073486328
    6. '  ' → logprob: -20.375019073486328
    7. '１' → logprob: -20.375019073486328
    8. '3' → logprob: -20.500019073486328
    9. '    ' → logprob: -21.500019073486328
    10. '۱' → logprob: -21.875019073486328

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.875001907348633
    3. '2' → logprob: -14.625001907348633
    4. '```' → logprob: -19.750001907348633
    5. '１' → logprob: -20.000001907348633
    6. '   ' → logprob: -21.125001907348633
    7. '  ' → logprob: -21.250001907348633
    8. '۱' → logprob: -21.437501907348633
    9. '१' → logprob: -21.812501907348633
    10. '3' → logprob: -22.062501907348633

Token 79: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000514548271894455
    2. '
' → logprob: -7.625514507293701
    3. '\n' → logprob: -12.00051498413086
    4. '#' → logprob: -12.37551498413086
    5. '```' → logprob: -12.37551498413086
    6. ' print' → logprob: -12.50051498413086
    7. 'pr' → logprob: -13.50051498413086
    8. '#print' → logprob: -13.62551498413086
    9. 'p' → logprob: -13.62551498413086
    10. '\' → logprob: -13.75051498413086

Token 80: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.843177233240567e-05
    2. '
' → logprob: -11.875018119812012
    3. '#' → logprob: -12.875018119812012
    4. 'p' → logprob: -13.125018119812012
    5. ' print' → logprob: -13.250018119812012
    6. '```' → logprob: -13.625018119812012
    7. 'pr' → logprob: -13.750018119812012
    8. 'prin' → logprob: -14.375018119812012
    9. '#print' → logprob: -14.625018119812012
    10. '\n' → logprob: -14.750018119812012

Token 81: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07893969118595123
    2. '(ans' → logprob: -2.57893967628479
    3. '("("' → logprob: -10.703939437866211
    4. '('' → logprob: -10.828939437866211
    5. '(`' → logprob: -13.578939437866211
    6. '(len' → logprob: -13.828939437866211
    7. '(
' → logprob: -13.953939437866211
    8. '((' → logprob: -14.203939437866211
    9. ' (' → logprob: -14.203939437866211
    10. '(answer' → logprob: -14.328939437866211

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. '))' → logprob: -17.375
    4. ')`' → logprob: -17.625
    5. '')' → logprob: -18.25
    6. ')
' → logprob: -18.875
    7. '`)' → logprob: -18.875
    8. '）' → logprob: -19.5
    9. '()' → logprob: -20.25
    10. '(' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 80
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 68
Précision stricte (1ère position): 45.00%
Précision adaptée (1ère position): 46.25%
Précision (top 10): 85.00%
================================================================================
