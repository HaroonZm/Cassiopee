================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

# c'est classique... on lit les entrées
N, K = map(int, input().split())
A = list(map(int, input().split()))
mod = 10**9 + 7

# ici, on prépare une sorte de triangle de Pascal bricolé
Combi = [[] for _ in range(N+1)]
Combi[0] = [1, 0]

for i in range(1, N+1):
    Combi[i].append(1)
    for j in range(i):
        # petit bricolage pour la suite, pas sûr que ce soit optimal
        Combi[i].append((Combi[i-1][j] + Combi[i-1][j+1]) % mod)
    Combi[i].append(0)  # on rajoute un zéro, pourquoi pas !

DP = [0] * (N+1)
DP[0] = 1  # on commence forcément par 1 façon

for k in range(K):  # c'est censé faire K étapes, ok
    use = A[k]

    NDP = [0] * (N+1)

    for i in range(N+1):
        ANS = 0
        for j in range(i+1):
            # attention à ne pas dépasser les bornes, enfin je crois...
            if use - (i-j) >= 0:
                ANS = (ANS + DP[j] * Combi[N-j][i-j] * Combi[N - (i-j)][use - (i-j)]) % mod

        NDP[i] = ANS  # ça doit marcher comme ça

    # print(DP)  # j'utilise pas, mais je laisse au cas où

    DP = NDP  # on met à jour pour la prochaine étape

print(DP[N])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009539559483528137
    2. '.' → logprob: -4.759539604187012
    3. ''' → logprob: -8.259539604187012
    4. '```' → logprob: -8.884539604187012
    5. ')' → logprob: -9.009539604187012
    6. ' (' → logprob: -9.634539604187012
    7. '(
' → logprob: -9.634539604187012
    8. '"' → logprob: -9.759539604187012
    9. ''s' → logprob: -10.259539604187012
    10. '()' → logprob: -10.259539604187012

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00685567781329155
    2. 'sys' → logprob: -5.006855487823486
    3. ' input' → logprob: -9.006855964660645
    4. 'input' → logprob: -11.631855964660645
    5. '	sys' → logprob: -12.381855964660645
    6. ' ' → logprob: -13.256855964660645
    7. '=sys' → logprob: -13.381855964660645
    8. '(sys' → logprob: -14.006855964660645
    9. ' system' → logprob: -14.881855964660645
    10. ' lambda' → logprob: -16.381855010986328

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00016074994346126914
    2. ' .' → logprob: -9.875161170959473
    3. '[' → logprob: -10.750161170959473
    4. '.readline' → logprob: -10.750161170959473
    5. '.stdin' → logprob: -11.125161170959473
    6. '.
' → logprob: -11.500161170959473
    7. '.import' → logprob: -11.875161170959473
    8. '.​' → logprob: -12.625161170959473
    9. '.argv' → logprob: -12.875161170959473
    10. '```' → logprob: -12.875161170959473

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2856382131576538
    2. '.' → logprob: -1.5356382131576538
    3. '.read' → logprob: -3.4106383323669434
    4. '.readlines' → logprob: -9.785637855529785
    5. '.Read' → logprob: -10.660637855529785
    6. 'read' → logprob: -11.535637855529785
    7. ' .' → logprob: -11.785637855529785
    8. '```' → logprob: -11.910637855529785
    9. '.buffer' → logprob: -12.535637855529785
    10. '.write' → logprob: -13.285637855529785

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18799513578414917
    2. '(' → logprob: -1.812995195388794
    3. '()
' → logprob: -6.062994956970215
    4. '(
' → logprob: -6.062994956970215
    5. '().' → logprob: -6.687994956970215
    6. '
' → logprob: -6.937994956970215
    7. '\n' → logprob: -7.937994956970215
    8. '()\' → logprob: -8.187994956970215
    9. '\' → logprob: -8.687994956970215
    10. '()

' → logprob: -9.437994956970215

Token 9: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01860487461090088
    2. '(' → logprob: -4.018604755401611
    3. '()
' → logprob: -8.89360523223877
    4. '().' → logprob: -9.26860523223877
    5. 'def' → logprob: -9.89360523223877
    6. '()

' → logprob: -9.89360523223877
    7. '(
' → logprob: -10.39360523223877
    8. '()\' → logprob: -10.39360523223877
    9. '())' → logprob: -11.76860523223877
    10. ')' → logprob: -12.26860523223877

Token 10: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25308114290237427
    2. 'd' → logprob: -2.8780810832977295
    3. '#' → logprob: -3.1280810832977295
    4. 'i' → logprob: -3.6280810832977295
    5. 's' → logprob: -4.003081321716309
    6. ' #' → logprob: -4.128081321716309
    7. 'n' → logprob: -4.503081321716309
    8. 'a' → logprob: -4.753081321716309
    9. 'def' → logprob: -4.753081321716309
    10. 'data' → logprob: -4.878081321716309

Token 11: ''est' (ID: 6616)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.6896973848342896
    2. 'ounter' → logprob: -1.5646973848342896
    3. 'on' → logprob: -2.439697265625
    4. 'ont' → logprob: -3.189697265625
    5. ' =' → logprob: -3.314697265625
    6. 'o' → logprob: -3.439697265625
    7. '=' → logprob: -3.689697265625
    8. 'ode' → logprob: -3.939697265625
    9. ':' → logprob: -4.689697265625
    10. 'h' → logprob: -5.189697265625

Token 12: ' classique' (ID: 76895)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7776511907577515
    2. ' un' → logprob: -0.9026511907577515
    3. 'une' → logprob: -3.652651309967041
    4. ' ' → logprob: -3.902651309967041
    5. ' la' → logprob: -3.902651309967041
    6. 'un' → logprob: -4.402651309967041
    7. ' le' → logprob: -4.527651309967041
    8. ' l' → logprob: -5.277651309967041
    9. ' souvent' → logprob: -5.402651309967041
    10. '_' → logprob: -5.402651309967041

Token 13: '...' (ID: 1008)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0362730026245117
    2. '\n' → logprob: -1.1612730026245117
    3. '\' → logprob: -1.6612730026245117
    4. ',' → logprob: -3.2862730026245117
    5. '
' → logprob: -3.2862730026245117
    6. '.' → logprob: -4.036273002624512
    7. 'def' → logprob: -4.661273002624512
    8. ' ' → logprob: -5.036273002624512
    9. '  
' → logprob: -5.411273002624512
    10. ':' → logprob: -5.411273002624512

Token 14: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6919626593589783
    2. ' ' → logprob: -1.441962718963623
    3. '(' → logprob: -2.691962718963623
    4. '\n' → logprob: -3.441962718963623
    5. '\' → logprob: -3.566962718963623
    6. '()' → logprob: -3.816962718963623
    7. ' 
' → logprob: -3.941962718963623
    8. '
' → logprob: -3.941962718963623
    9. ',' → logprob: -4.191962718963623
    10. 'def' → logprob: -4.566962718963623

Token 15: ' lit' (ID: 11980)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.817218005657196
    2. ' a' → logprob: -1.0672180652618408
    3. '_' → logprob: -2.442218065261841
    4. ' veut' → logprob: -3.817218065261841
    5. ' code' → logprob: -4.567217826843262
    6. ' avance' → logprob: -4.692217826843262
    7. ' ' → logprob: -4.942217826843262
    8. ' trouve' → logprob: -5.067217826843262
    9. ' peut' → logprob: -5.317217826843262
    10. ' va' → logprob: -5.317217826843262

Token 16: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46356749534606934
    2. '()' → logprob: -1.2135674953460693
    3. ' (' → logprob: -3.7135674953460693
    4. ' ' → logprob: -3.8385674953460693
    5. ' ()' → logprob: -3.9635674953460693
    6. ',' → logprob: -5.963567733764648
    7. '(
' → logprob: -7.463567733764648
    8. 'a' → logprob: -7.463567733764648
    9. '\n' → logprob: -7.713567733764648
    10. 's' → logprob: -7.838567733764648

Token 17: ' entr' (ID: 7072)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -1.5033280849456787
    2. ' ent' → logprob: -1.7533280849456787
    3. 'ent' → logprob: -2.0033280849456787
    4. 'n' → logprob: -2.1283280849456787
    5. ' données' → logprob: -2.1283280849456787
    6. 'd' → logprob: -2.7533280849456787
    7. ' inputs' → logprob: -3.7533280849456787
    8. ' ' → logprob: -4.003328323364258
    9. ' input' → logprob: -4.128328323364258
    10. 'nombre' → logprob: -4.253328323364258

Token 18: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.002284076064825058
    2. 'ée' → logprob: -6.377284049987793
    3. 'ees' → logprob: -7.502284049987793
    4. 'é' → logprob: -10.502284049987793
    5. 'és' → logprob: -13.752284049987793
    6. 'es' → logprob: -14.252284049987793
    7. 'e' → logprob: -15.752284049987793
    8. 'ee' → logprob: -16.12728500366211
    9. 'éis' → logprob: -16.50228500366211
    10. 'ê' → logprob: -16.62728500366211

Token 19: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.36835339665412903
    2. 'n' → logprob: -1.6183533668518066
    3. 's' → logprob: -2.7433533668518066
    4. '\' → logprob: -4.118353366851807
    5. '(n' → logprob: -4.618353366851807
    6. 'a' → logprob: -6.118353366851807
    7. 'x' → logprob: -6.243353366851807
    8. '(' → logprob: -6.493353366851807
    9. ',' → logprob: -6.618353366851807
    10. ' ' → logprob: -6.618353366851807

Token 20: 'N' (ID: 45)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6644907593727112
    2. 'n' → logprob: -0.9144907593727112
    3. 'a' → logprob: -3.9144906997680664
    4. 's' → logprob: -4.164490699768066
    5. '
' → logprob: -4.789490699768066
    6. '\' → logprob: -5.039490699768066
    7. '(n' → logprob: -5.039490699768066
    8. ' n' → logprob: -5.664490699768066
    9. ',' → logprob: -5.789490699768066
    10. 'x' → logprob: -5.789490699768066

Token 21: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10792446881532669
    2. ' ' → logprob: -2.482924461364746
    3. '=' → logprob: -4.232924461364746
    4. ',' → logprob: -6.107924461364746
    5. ' ,' → logprob: -7.232924461364746
    6. '  ' → logprob: -7.482924461364746
    7. ')' → logprob: -7.857924461364746
    8. ' )' → logprob: -8.982924461364746
    9. '=int' → logprob: -9.857924461364746
    10. '.' → logprob: -10.107924461364746

Token 22: ' K' (ID: 658)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.6179324984550476
    2. ' ' → logprob: -1.6179325580596924
    3. 'M' → logprob: -1.7429325580596924
    4. ' K' → logprob: -2.6179325580596924
    5. 'K' → logprob: -4.367932319641113
    6. '  ' → logprob: -7.617932319641113
    7. 'space' → logprob: -7.867932319641113
    8. '=' → logprob: -8.367932319641113
    9. ' =' → logprob: -8.367932319641113
    10. '_' → logprob: -9.117932319641113

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03808923065662384
    2. '=' → logprob: -3.2880892753601074
    3. ',' → logprob: -10.16308879852295
    4. ' ' → logprob: -12.03808879852295
    5. '=input' → logprob: -13.03808879852295
    6. ' ,' → logprob: -14.91308879852295
    7. '=int' → logprob: -15.16308879852295
    8. ')' → logprob: -15.78808879852295
    9. ' =
' → logprob: -16.788089752197266
    10. '  ' → logprob: -17.038089752197266

Token 24: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004488869570195675
    2. 'map' → logprob: -5.504488945007324
    3. ' input' → logprob: -7.879488945007324
    4. ' ' → logprob: -10.879488945007324
    5. 'input' → logprob: -11.629488945007324
    6. ' list' → logprob: -13.379488945007324
    7. ' ' → logprob: -14.004488945007324
    8. '	map' → logprob: -14.504488945007324
    9. ' [' → logprob: -14.879488945007324
    10. ' ma' → logprob: -16.004487991333008

Token 25: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6979442238807678
    2. '(int' → logprob: -0.6979442238807678
    3. '(str' → logprob: -5.697944164276123
    4. '(input' → logprob: -6.822944164276123
    5. '(lambda' → logprob: -8.072944641113281
    6. '(
' → logprob: -11.197944641113281
    7. '(eval' → logprob: -12.322944641113281
    8. '(tuple' → logprob: -12.947944641113281
    9. '(list' → logprob: -13.072944641113281
    10. '(`' → logprob: -13.572944641113281

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06764262169599533
    2. '(' → logprob: -3.3176426887512207
    3. ',' → logprob: -4.317642688751221
    4. ')' → logprob: -4.942642688751221
    5. ',input' → logprob: -5.192642688751221
    6. 'input' → logprob: -5.817642688751221
    7. '=input' → logprob: -9.692642211914062
    8. ' input' → logprob: -10.442642211914062
    9. '(sys' → logprob: -10.817642211914062
    10. '(
' → logprob: -11.317642211914062

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759813785552979
    2. ' input' → logprob: -0.8259813785552979
    3. ')' → logprob: -10.200981140136719
    4. '(input' → logprob: -12.950981140136719
    5. ' )' → logprob: -13.700981140136719
    6. '=input' → logprob: -14.825981140136719
    7. ',input' → logprob: -14.950981140136719
    8. ' ' → logprob: -15.450981140136719
    9. '	input' → logprob: -15.950981140136719
    10. 'sys' → logprob: -16.07598114013672

Token 28: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1122865080833435
    2. '()' → logprob: -2.6122865676879883
    3. '().' → logprob: -3.4872865676879883
    4. ')' → logprob: -6.362286567687988
    5. '(' → logprob: -8.862286567687988
    6. '()))' → logprob: -8.862286567687988
    7. '());' → logprob: -9.237286567687988
    8. ' ())' → logprob: -10.112286567687988
    9. '()),' → logprob: -10.487286567687988
    10. '();)' → logprob: -10.987286567687988

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04110217094421387
    2. 'strip' → logprob: -3.291102170944214
    3. 'rstrip' → logprob: -5.791102409362793
    4. '(split' → logprob: -14.291102409362793
    5. ' split' → logprob: -14.791102409362793
    6. ')' → logprob: -15.541102409362793
    7. 'read' → logprob: -16.666101455688477
    8. 'rs' → logprob: -17.041101455688477
    9. '())' → logprob: -17.166101455688477
    10. '().' → logprob: -17.291101455688477

Token 30: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016022215131670237
    2. '())' → logprob: -6.7516021728515625
    3. '))' → logprob: -8.251602172851562
    4. '()' → logprob: -8.876602172851562
    5. '(' → logprob: -11.001602172851562
    6. '),' → logprob: -13.126602172851562
    7. ')`' → logprob: -13.126602172851562
    8. '')' → logprob: -13.376602172851562
    9. ')")' → logprob: -13.376602172851562
    10. '('' → logprob: -13.626602172851562

Token 31: 'A' (ID: 32)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9509473443031311
    2. ' ' → logprob: -1.0759472846984863
    3. '<|end|>' → logprob: -2.9509472846984863
    4. '
' → logprob: -3.0759472846984863
    5. 'for' → logprob: -3.4509472846984863
    6. '\n' → logprob: -3.4509472846984863
    7. '#' → logprob: -3.5759472846984863
    8. '[' → logprob: -4.325947284698486
    9. ' 
' → logprob: -4.450947284698486
    10. 'a' → logprob: -4.950947284698486

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2303144335746765
    2. '=' → logprob: -1.6053144931793213
    3. '[' → logprob: -5.605314254760742
    4. ')' → logprob: -7.605314254760742
    5. '[:]' → logprob: -8.355314254760742
    6. '.' → logprob: -8.480314254760742
    7. '[]' → logprob: -9.480314254760742
    8. ',' → logprob: -10.105314254760742
    9. '_' → logprob: -10.605314254760742
    10. ' ' → logprob: -10.730314254760742

Token 33: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10021303594112396
    2. 'list' → logprob: -2.350213050842285
    3. 'map' → logprob: -13.225213050842285
    4. '[' → logprob: -13.350213050842285
    5. ' map' → logprob: -13.350213050842285
    6. ' [' → logprob: -13.725213050842285
    7. '[list' → logprob: -16.35021209716797
    8. ' []' → logprob: -16.72521209716797
    9. '[]' → logprob: -16.85021209716797
    10. '=list' → logprob: -18.22521209716797

Token 34: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01065078005194664
    2. '(map' → logprob: -4.760650634765625
    3. '()' → logprob: -6.885650634765625
    4. '(int' → logprob: -7.010650634765625
    5. '(input' → logprob: -10.760650634765625
    6. '(range' → logprob: -10.885650634765625
    7. '(
' → logprob: -11.885650634765625
    8. '(s' → logprob: -12.010650634765625
    9. '("("' → logprob: -12.260650634765625
    10. '(eval' → logprob: -12.385650634765625

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.062029752880334854
    2. '(' → logprob: -2.8120298385620117
    3. '(str' → logprob: -11.312029838562012
    4. '<int' → logprob: -11.437029838562012
    5. '[int' → logprob: -12.062029838562012
    6. '<|end|>' → logprob: -12.187029838562012
    7. '(input' → logprob: -12.312029838562012
    8. 'int' → logprob: -12.562029838562012
    9. ' (' → logprob: -12.562029838562012
    10. '(lambda' → logprob: -12.687029838562012

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7347740530967712
    2. '(input' → logprob: -1.234774112701416
    3. '(' → logprob: -1.859774112701416
    4. ',input' → logprob: -2.609774112701416
    5. ' ,' → logprob: -9.234773635864258
    6. ')' → logprob: -10.234773635864258
    7. 'input' → logprob: -10.359773635864258
    8. '(),' → logprob: -10.984773635864258
    9. ' (' → logprob: -11.359773635864258
    10. '(int' → logprob: -11.859773635864258

Token 37: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3869568705558777
    2. ' input' → logprob: -1.1369569301605225
    3. '(input' → logprob: -9.386957168579102
    4. ',input' → logprob: -14.261957168579102
    5. '=input' → logprob: -14.636957168579102
    6. ')' → logprob: -14.761957168579102
    7. '	input' → logprob: -15.136957168579102
    8. ' ' → logprob: -16.1369571685791
    9. '_input' → logprob: -17.0119571685791
    10. '<input' → logprob: -17.1369571685791

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5213274309644476e-05
    2. '()' → logprob: -11.375015258789062
    3. '(.' → logprob: -12.625015258789062
    4. '(' → logprob: -15.000015258789062
    5. ' ().' → logprob: -16.500015258789062
    6. '.' → logprob: -18.125015258789062
    7. '(),' → logprob: -18.375015258789062
    8. '()-' → logprob: -19.250015258789062
    9. '()
' → logprob: -19.750015258789062
    10. '()))' → logprob: -20.125015258789062

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4855663721391466e-05
    2. 'strip' → logprob: -11.250015258789062
    3. 'rstrip' → logprob: -13.625015258789062
    4. ' split' → logprob: -15.500015258789062
    5. '(split' → logprob: -15.625015258789062
    6. 'read' → logprob: -16.500015258789062
    7. 'spl' → logprob: -18.250015258789062
    8. 'plit' → logprob: -18.500015258789062
    9. ')' → logprob: -18.750015258789062
    10. '().' → logprob: -19.125015258789062

Token 40: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7477280497550964
    2. '()))' → logprob: -0.7477280497550964
    3. ')' → logprob: -3.497728109359741
    4. '())' → logprob: -3.997728109359741
    5. '(' → logprob: -5.997727870941162
    6. '()' → logprob: -6.247727870941162
    7. '()))
' → logprob: -10.74772834777832
    8. ')))' → logprob: -11.37272834777832
    9. '()));' → logprob: -11.37272834777832
    10. ' ))' → logprob: -11.99772834777832

Token 41: 'mod' (ID: 4847)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039613962173461914
    2. 'A' → logprob: -4.164613723754883
    3. ' 
' → logprob: -5.289613723754883
    4. '\n' → logprob: -5.664613723754883
    5. '<|end|>' → logprob: -5.914613723754883
    6. '#' → logprob: -6.039613723754883
    7. '.' → logprob: -6.289613723754883
    8. ')' → logprob: -6.289613723754883
    9. '' → logprob: -7.414613723754883
    10. 'for' → logprob: -7.664613723754883

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6559473276138306
    2. '=' → logprob: -0.7809473276138306
    3. '_' → logprob: -4.405947208404541
    4. ' ' → logprob: -5.405947208404541
    5. ' ' → logprob: -6.905947208404541
    6. '  ' → logprob: -7.405947208404541
    7. 'uler' → logprob: -7.530947208404541
    8. ')' → logprob: -7.655947208404541
    9. 'ular' → logprob: -7.655947208404541
    10. '<|end|>' → logprob: -7.780947208404541

Token 43: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4841470420360565
    2. ' ' → logprob: -0.9841470718383789
    3. '100' → logprob: -4.609147071838379
    4. '1' → logprob: -10.484147071838379
    5. '998' → logprob: -10.859147071838379
    6. ' (' → logprob: -12.109147071838379
    7. '(' → logprob: -12.734147071838379
    8. ' ' → logprob: -13.734147071838379
    9. 'int' → logprob: -14.359147071838379
    10. ' int' → logprob: -14.484147071838379

Token 44: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.002130991080775857
    2. '100' → logprob: -6.25213098526001
    3. '998' → logprob: -9.377131462097168
    4. '1' → logprob: -9.752131462097168
    5. ' ' → logprob: -10.377131462097168
    6. '(' → logprob: -10.752131462097168
    7. 'int' → logprob: -12.127131462097168
    8. 'pow' → logprob: -14.252131462097168
    9. '0' → logprob: -15.502131462097168
    10. '999' → logprob: -15.877131462097168

Token 45: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.004417655523866415
    2. '09' → logprob: -5.629417419433594
    3. '**' → logprob: -7.129417419433594
    4. '009' → logprob: -12.254417419433594
    5. '```' → logprob: -12.504417419433594
    6. '_' → logprob: -12.629417419433594
    7. '+' → logprob: -13.254417419433594
    8. ' ' → logprob: -14.004417419433594
    9. '0' → logprob: -14.629417419433594
    10. '^' → logprob: -15.004417419433594

Token 46: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.088346359931165e-07
    2. '09' → logprob: -14.000000953674316
    3. '```' → logprob: -16.875
    4. '+' → logprob: -17.125
    5. '10' → logprob: -17.875
    6. ' ' → logprob: -19.25
    7. '18' → logprob: -19.5
    8. '8' → logprob: -19.75
    9. '15' → logprob: -20.125
    10. '4' → logprob: -20.125

Token 47: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003594184236135334
    2. ' +' → logprob: -8.250359535217285
    3. '7' → logprob: -9.250359535217285
    4. '+
' → logprob: -13.875359535217285
    5. '9' → logprob: -15.375359535217285
    6. '+

' → logprob: -15.625359535217285
    7. ' ' → logprob: -16.00035858154297
    8. '```' → logprob: -16.25035858154297
    9. '＋' → logprob: -16.25035858154297
    10. ' plus' → logprob: -16.37535858154297

Token 48: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '+' → logprob: -15.625000953674316
    4. '9' → logprob: -18.25
    5. '07' → logprob: -19.25
    6. '```' → logprob: -20.0
    7. '   ' → logprob: -20.5
    8. '  ' → logprob: -21.25
    9. ' ' → logprob: -21.3125
    10. '1' → logprob: -22.0

Token 49: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '+' → logprob: -18.0
    4. '07' → logprob: -20.0
    5. '```' → logprob: -20.625
    6. '9' → logprob: -21.0
    7. '７' → logprob: -21.5
    8. '   ' → logprob: -21.625
    9. ' ' → logprob: -22.125
    10. '  ' → logprob: -22.6875

Token 50: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04805317148566246
    2. ' 
' → logprob: -4.42305326461792
    3. '' → logprob: -4.54805326461792
    4. '\n' → logprob: -4.79805326461792
    5. '#' → logprob: -5.29805326461792
    6. '<|end|>' → logprob: -5.54805326461792
    7. '\' → logprob: -6.67305326461792
    8. '

' → logprob: -6.79805326461792
    9. '
' → logprob: -7.17305326461792
    10. '  
' → logprob: -7.17305326461792

Token 51: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8199705481529236
    2. 'dp' → logprob: -1.8199706077575684
    3. 'A' → logprob: -2.0699706077575684
    4. '#' → logprob: -2.0699706077575684
    5. 'result' → logprob: -3.5699706077575684
    6. '' → logprob: -3.8199706077575684
    7. 'a' → logprob: -4.319970607757568
    8. ' 
' → logprob: -4.569970607757568
    9. 'def' → logprob: -4.694970607757568
    10. 'd' → logprob: -4.694970607757568

Token 52: ' ici' (ID: 27994)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5827867984771729
    2. ' dp' → logprob: -1.2077867984771729
    3. 'def' → logprob: -3.957786798477173
    4. '#' → logprob: -4.082786560058594
    5. 'count' → logprob: -4.207786560058594
    6. ' A' → logprob: -4.582786560058594
    7. 'A' → logprob: -4.707786560058594
    8. ' ans' → logprob: -4.957786560058594
    9. 's' → logprob: -5.082786560058594
    10. ' count' → logprob: -5.332786560058594

Token 53: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4301923513412476
    2. 'for' → logprob: -1.4301923513412476
    3. 'A' → logprob: -1.5551923513412476
    4. '#' → logprob: -1.8051923513412476
    5. ',' → logprob: -3.680192470550537
    6. '<|end|>' → logprob: -3.805192470550537
    7. ' for' → logprob: -3.930192470550537
    8. ' A' → logprob: -4.305192470550537
    9. '=' → logprob: -4.680192470550537
    10. ')' → logprob: -4.805192470550537

Token 54: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0833979845046997
    2. ' ' → logprob: -1.2083979845046997
    3. ' c' → logprob: -1.4583979845046997
    4. 'c' → logprob: -3.58339786529541
    5. ' ans' → logprob: -3.95839786529541
    6. ' A' → logprob: -4.20839786529541
    7. ' result' → logprob: -5.08339786529541
    8. ' ' → logprob: -5.33339786529541
    9. 'A' → logprob: -5.45839786529541
    10. 'on' → logprob: -5.58339786529541

Token 55: ' prépare' (ID: 150142)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -1.548397421836853
    2. ' veut' → logprob: -2.1733975410461426
    3. ' cherche' → logprob: -2.4233975410461426
    4. ' souhaite' → logprob: -2.5483975410461426
    5. 'for' → logprob: -3.0483975410461426
    6. ' veux' → logprob: -3.2983975410461426
    7. 'tr' → logprob: -3.2983975410461426
    8. 's' → logprob: -3.2983975410461426
    9. 'cherche' → logprob: -3.7983975410461426
    10. 'def' → logprob: -3.9233975410461426

Token 56: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.3093212842941284
    2. ' la' → logprob: -1.5593212842941284
    3. ' un' → logprob: -1.8093212842941284
    4. 'dp' → logprob: -2.184321403503418
    5. ' dp' → logprob: -2.684321403503418
    6. ' les' → logprob: -2.934321403503418
    7. ' ' → logprob: -3.934321403503418
    8. ' l' → logprob: -3.934321403503418
    9. ' a' → logprob: -4.309321403503418
    10. 'un' → logprob: -4.809321403503418

Token 57: ' sorte' (ID: 37800)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5236610770225525
    2. ' dp' → logprob: -1.1486611366271973
    3. 'table' → logprob: -3.7736611366271973
    4. 'liste' → logprob: -3.7736611366271973
    5. ' table' → logprob: -4.023661136627197
    6. ' liste' → logprob: -5.023661136627197
    7. 'fact' → logprob: -5.523661136627197
    8. '_dp' → logprob: -5.523661136627197
    9. ' DP' → logprob: -6.023661136627197
    10. 'DP' → logprob: -6.148661136627197

Token 58: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.06731980293989182
    2. 'de' → logprob: -3.192319869995117
    3. ' d' → logprob: -4.067319869995117
    4. 'd' → logprob: -5.317319869995117
    5. '_de' → logprob: -7.442319869995117
    6. 'def' → logprob: -8.067319869995117
    7. '[]' → logprob: -8.067319869995117
    8. ' ' → logprob: -8.192319869995117
    9. 's' → logprob: -8.942319869995117
    10. '[' → logprob: -10.067319869995117

Token 59: ' triangle' (ID: 41487)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6161000728607178
    2. ' dp' → logprob: -1.2411000728607178
    3. ' table' → logprob: -2.8661000728607178
    4. 'table' → logprob: -3.1161000728607178
    5. ' tableau' → logprob: -3.7411000728607178
    6. 'fact' → logprob: -5.366100311279297
    7. ' DP' → logprob: -5.616100311279297
    8. 'factor' → logprob: -5.741100311279297
    9. '```' → logprob: -5.741100311279297
    10. '_dp' → logprob: -5.866100311279297

Token 60: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5470719337463379
    2. '[' → logprob: -1.672071933746338
    3. ' ' → logprob: -2.797071933746338
    4. ',' → logprob: -2.922071933746338
    5. '[]' → logprob: -3.672071933746338
    6. '_' → logprob: -3.672071933746338
    7. ' dp' → logprob: -4.172071933746338
    8. '.' → logprob: -4.672071933746338
    9. 'de' → logprob: -4.797071933746338
    10. 'd' → logprob: -4.797071933746338

Token 61: ' Pascal' (ID: 93550)
  Prédit: ' Pascal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Pascal' → logprob: -0.062444329261779785
    2. ' pas' → logprob: -3.5624442100524902
    3. 'Pas' → logprob: -3.9374442100524902
    4. 'P' → logprob: -5.18744421005249
    5. 'pas' → logprob: -5.81244421005249
    6. ' Pasc' → logprob: -6.93744421005249
    7. '_pas' → logprob: -7.06244421005249
    8. '```' → logprob: -7.31244421005249
    9. ' P' → logprob: -7.93744421005249
    10. 'p' → logprob: -8.187444686889648

Token 62: ' bricol' (ID: 181488)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05500899255275726
    2. ',' → logprob: -3.680008888244629
    3. ' dp' → logprob: -4.555008888244629
    4. 'DP' → logprob: -5.680008888244629
    5. ' ' → logprob: -5.805008888244629
    6. '\' → logprob: -6.430008888244629
    7. '[' → logprob: -6.805008888244629
    8. '```' → logprob: -7.180008888244629
    9. ':' → logprob: -7.430008888244629
    10. '_dp' → logprob: -7.555008888244629

Token 63: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0007619839743711054
    2. 'age' → logprob: -7.750761985778809
    3. 'e' → logprob: -8.375761985778809
    4. 'er' → logprob: -9.500761985778809
    5. 'ée' → logprob: -12.625761985778809
    6. '_' → logprob: -12.750761985778809
    7. 'É' → logprob: -12.750761985778809
    8. '#' → logprob: -12.750761985778809
    9. 'és' → logprob: -12.750761985778809
    10. 'agé' → logprob: -13.250761985778809

Token 64: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9763769507408142
    2. ',' → logprob: -1.601377010345459
    3. 'dp' → logprob: -1.601377010345459
    4. ' 
' → logprob: -2.476377010345459
    5. '[' → logprob: -3.726377010345459
    6. 'for' → logprob: -4.351377010345459
    7. '<|end|>' → logprob: -4.601377010345459
    8. '  
' → logprob: -4.726377010345459
    9. '
' → logprob: -4.726377010345459
    10. '\n' → logprob: -5.101377010345459

Token 65: 'Com' (ID: 1059)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05579172074794769
    2. ' dp' → logprob: -3.4307916164398193
    3. 'DP' → logprob: -5.180791854858398
    4. 'C' → logprob: -5.930791854858398
    5. ' 
' → logprob: -6.555791854858398
    6. '
' → logprob: -6.680791854858398
    7. 'pas' → logprob: -6.805791854858398
    8. 'f' → logprob: -6.930791854858398
    9. 'fact' → logprob: -7.305791854858398
    10. 'd' → logprob: -7.430791854858398

Token 66: 'bi' (ID: 6738)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.017329225316643715
    2. ' =' → logprob: -4.517329216003418
    3. '=' → logprob: -5.517329216003418
    4. 'p' → logprob: -7.142329216003418
    5. 'bination' → logprob: -7.767329216003418
    6. 'bi' → logprob: -8.267329216003418
    7. 'bine' → logprob: -8.642329216003418
    8. 'bs' → logprob: -8.892329216003418
    9. 'bin' → logprob: -9.517329216003418
    10. 's' → logprob: -9.642329216003418

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3568021357059479
    2. '=' → logprob: -1.3568021059036255
    3. 'nation' → logprob: -3.606802225112915
    4. 'n' → logprob: -4.981801986694336
    5. 'ne' → logprob: -6.231801986694336
    6. '[n' → logprob: -7.106801986694336
    7. '=[' → logprob: -7.231801986694336
    8. '_n' → logprob: -7.231801986694336
    9. '   ' → logprob: -7.356801986694336
    10. '2' → logprob: -7.856801986694336

Token 68: ' [[]' (ID: 182908)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.11646901816129684
    2. ' [[' → logprob: -2.366468906402588
    3. '[' → logprob: -4.241468906402588
    4. ' [' → logprob: -6.366468906402588
    5. '[]' → logprob: -11.991469383239746
    6. '[n' → logprob: -12.616469383239746
    7. '[N' → logprob: -12.616469383239746
    8. '[len' → logprob: -12.866469383239746
    9. ' [[]' → logprob: -13.491469383239746
    10. '[list' → logprob: -13.741469383239746

Token 69: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22567862272262573
    2. ' for' → logprob: -2.2256786823272705
    3. ']' → logprob: -2.6006786823272705
    4. ',' → logprob: -4.100678443908691
    5. '[' → logprob: -6.850678443908691
    6. '.append' → logprob: -7.725678443908691
    7. ']+' → logprob: -7.850678443908691
    8. ')' → logprob: -8.100678443908691
    9. 'range' → logprob: -8.100678443908691
    10. ' ' → logprob: -9.225678443908691

Token 70: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5796135663986206
    2. '_' → logprob: -0.8296135663986206
    3. ' i' → logprob: -5.95461368560791
    4. ' range' → logprob: -7.20461368560791
    5. '_i' → logprob: -8.95461368560791
    6. '_range' → logprob: -8.95461368560791
    7. ' ' → logprob: -10.20461368560791
    8. 'range' → logprob: -10.70461368560791
    9. ' in' → logprob: -12.07961368560791
    10. 'i' → logprob: -12.57961368560791

Token 71: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6961323618888855
    2. 'range' → logprob: -0.6961323618888855
    3. '_' → logprob: -6.571132183074951
    4. ' in' → logprob: -6.946132183074951
    5. ' range' → logprob: -7.446132183074951
    6. ' ' → logprob: -11.19613265991211
    7. 'i' → logprob: -11.57113265991211
    8. 'n' → logprob: -12.82113265991211
    9. 'ange' → logprob: -13.57113265991211
    10. 'x' → logprob: -13.69613265991211

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1797594577074051
    2. ' range' → logprob: -1.8047595024108887
    3. '(range' → logprob: -12.05475902557373
    4. ' ' → logprob: -13.30475902557373
    5. '	range' → logprob: -13.30475902557373
    6. 'rang' → logprob: -13.55475902557373
    7. 'r' → logprob: -13.67975902557373
    8. ')' → logprob: -14.17975902557373
    9. '   ' → logprob: -14.80475902557373
    10. '```' → logprob: -14.80475902557373

Token 73: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0008727516396902502
    2. '(K' → logprob: -7.375872611999512
    3. '(' → logprob: -8.375872611999512
    4. ' (' → logprob: -11.500872611999512
    5. '((' → logprob: -13.000872611999512
    6. '(n' → logprob: -13.125872611999512
    7. 'N' → logprob: -14.500872611999512
    8. '(range' → logprob: -14.750872611999512
    9. ' N' → logprob: -16.375873565673828
    10. 'K' → logprob: -16.750873565673828

Token 74: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003697581822052598
    2. ' +' → logprob: -5.628697395324707
    3. ')]' → logprob: -9.253697395324707
    4. ')' → logprob: -14.128697395324707
    5. '+
' → logprob: -14.628697395324707
    6. ')]
' → logprob: -16.378698348999023
    7. '1' → logprob: -16.378698348999023
    8. '＋' → logprob: -16.878698348999023
    9. '+)' → logprob: -16.878698348999023
    10. ')])' → logprob: -17.253698348999023

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005692371050827205
    2. ' ' → logprob: -8.000569343566895
    3. '2' → logprob: -8.375569343566895
    4. '3' → logprob: -14.500569343566895
    5. 'N' → logprob: -15.063069343566895
    6. '7' → logprob: -15.250569343566895
    7. '  ' → logprob: -15.250569343566895
    8. '10' → logprob: -15.750569343566895
    9. '5' → logprob: -15.813069343566895
    10. '   ' → logprob: -15.938069343566895

Token 76: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00016837897419463843
    2. ']' → logprob: -8.875168800354004
    3. ')' → logprob: -10.625168800354004
    4. ')]
' → logprob: -13.375168800354004
    5. '])' → logprob: -14.500168800354004
    6. ' ]' → logprob: -14.500168800354004
    7. ' )' → logprob: -14.875168800354004
    8. ')]

' → logprob: -15.125168800354004
    9. '>]' → logprob: -15.125168800354004
    10. ')])' → logprob: -15.625168800354004

Token 77: 'Com' (ID: 1059)
  Prédit: 'Com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.15221340954303741
    2. 'for' → logprob: -2.0272133350372314
    3. ' for' → logprob: -5.4022135734558105
    4. '[' → logprob: -5.5272135734558105
    5. 'com' → logprob: -7.7772135734558105
    6. ' Com' → logprob: -8.277213096618652
    7. '0' → logprob: -9.152213096618652
    8. '<|end|>' → logprob: -9.777213096618652
    9. '[]' → logprob: -10.652213096618652
    10. ' ' → logprob: -10.652213096618652

Token 78: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.00025919382460415363
    2. 'b' → logprob: -9.000259399414062
    3. 'i' → logprob: -9.500259399414062
    4. 'pi' → logprob: -10.750259399414062
    5. '[' → logprob: -11.625259399414062
    6. '[i' → logprob: -11.750259399414062
    7. 'Bi' → logprob: -12.750259399414062
    8. 'vi' → logprob: -13.125259399414062
    9. ' bi' → logprob: -13.125259399414062
    10. '=' → logprob: -13.500259399414062

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0445127372804563e-05
    2. '=' → logprob: -12.62501049041748
    3. ' [' → logprob: -13.12501049041748
    4. ' =' → logprob: -13.50001049041748
    5. '0' → logprob: -14.50001049041748
    6. '=[' → logprob: -14.50001049041748
    7. '[][' → logprob: -14.50001049041748
    8. '[N' → logprob: -14.75001049041748
    9. '[:]' → logprob: -14.87501049041748
    10. '][' → logprob: -15.00001049041748

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '1' → logprob: -15.62515926361084
    4. ']' → logprob: -16.250158309936523
    5. '[' → logprob: -17.500158309936523
    6. ')' → logprob: -17.500158309936523
    7. '][' → logprob: -18.250158309936523
    8. '-' → logprob: -18.500158309936523
    9. '  ' → logprob: -19.000158309936523
    10. '   ' → logprob: -19.250158309936523

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13414832949638367
    2. '].' → logprob: -2.134148359298706
    3. ']=' → logprob: -5.009148120880127
    4. ' ]' → logprob: -8.384148597717285
    5. ' ].' → logprob: -8.509148597717285
    6. '.append' → logprob: -10.509148597717285
    7. '][' → logprob: -10.884148597717285
    8. '[' → logprob: -11.009148597717285
    9. '=' → logprob: -11.134148597717285
    10. '=[' → logprob: -13.009148597717285

Token 82: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5916181206703186
    2. '=' → logprob: -0.8416181206703186
    3. '=[' → logprob: -4.716618061065674
    4. ' =' → logprob: -5.091618061065674
    5. '.' → logprob: -8.091618537902832
    6. ' =[' → logprob: -9.091618537902832
    7. '[' → logprob: -10.841618537902832
    8. '.=' → logprob: -11.841618537902832
    9. '.extend' → logprob: -12.216618537902832
    10. 'append' → logprob: -12.591618537902832

Token 83: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4121114822482923e-06
    2. ' [' → logprob: -12.625003814697266
    3. '1' → logprob: -17.875003814697266
    4. ' ' → logprob: -20.875003814697266
    5. '{' → logprob: -21.625003814697266
    6. ' ' → logprob: -22.375003814697266
    7. '([' → logprob: -22.500003814697266
    8. '   ' → logprob: -22.750003814697266
    9. '[int' → logprob: -22.750003814697266
    10. '[]' → logprob: -23.875003814697266

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -17.375009536743164
    4. '[' → logprob: -17.750009536743164
    5. '   ' → logprob: -17.812509536743164
    6. '

' → logprob: -18.625009536743164
    7. '(' → logprob: -18.687509536743164
    8. '  ' → logprob: -18.875009536743164
    9. '{' → logprob: -19.437509536743164
    10. ']' → logprob: -19.687509536743164

Token 85: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005755512393079698
    2. ' ]' → logprob: -7.500575542449951
    3. ',' → logprob: -11.37557601928711
    4. ']
' → logprob: -11.62557601928711
    5. ']

' → logprob: -13.50057601928711
    6. ']
' → logprob: -16.00057601928711
    7. ' ' → logprob: -16.12557601928711
    8. '1' → logprob: -16.37557601928711
    9. '0' → logprob: -16.37557601928711
    10. ']%' → logprob: -16.50057601928711

Token 86: ' ' (ID: 220)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08295296132564545
    2. '1' → logprob: -2.5829529762268066
    3. ' ' → logprob: -6.332952976226807
    4. ' ]' → logprob: -6.332952976226807
    5. '0' → logprob: -7.707952976226807
    6. '<|end|>' → logprob: -10.582952499389648
    7. '])' → logprob: -12.332952499389648
    8. ' 
' → logprob: -12.457952499389648
    9. ')' → logprob: -12.957952499389648
    10. ']int' → logprob: -13.207952499389648

Token 87: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.033869288861751556
    2. '1' → logprob: -3.4088692665100098
    3. '0' → logprob: -8.783869743347168
    4. '<|end|>' → logprob: -10.908869743347168
    5. ' ' → logprob: -11.033869743347168
    6. '])' → logprob: -11.408869743347168
    7. ' ]' → logprob: -11.533869743347168
    8. ']]' → logprob: -12.533869743347168
    9. ']

' → logprob: -13.158869743347168
    10. ']
' → logprob: -13.533869743347168

Token 88: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002937883138656616
    2. ' ]' → logprob: -5.8779377937316895
    3. ',' → logprob: -9.002938270568848
    4. ']
' → logprob: -12.752938270568848
    5. '1' → logprob: -13.127938270568848
    6. '0' → logprob: -13.627938270568848
    7. '7' → logprob: -13.752938270568848
    8. ']

' → logprob: -14.252938270568848
    9. '6' → logprob: -14.377938270568848
    10. ' ' → logprob: -15.127938270568848

Token 89: 'for' (ID: 1938)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6615686416625977
    2. ' for' → logprob: -1.4115686416625977
    3. 'for' → logprob: -2.4115686416625977
    4. ' ' → logprob: -2.6615686416625977
    5. '
' → logprob: -3.1615686416625977
    6. '<|end|>' → logprob: -3.6615686416625977
    7. '\n' → logprob: -5.286568641662598
    8. '  
' → logprob: -5.661568641662598
    9. '[' → logprob: -6.786568641662598
    10. '' → logprob: -7.911568641662598

Token 90: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004177767783403397
    2. 'i' → logprob: -5.879177570343018
    3. ' n' → logprob: -7.129177570343018
    4. ' ' → logprob: -8.629178047180176
    5. ' k' → logprob: -8.879178047180176
    6. ' r' → logprob: -9.504178047180176
    7. ' x' → logprob: -10.004178047180176
    8. ' j' → logprob: -10.629178047180176
    9. 'n' → logprob: -11.004178047180176
    10. ' ' → logprob: -11.254178047180176

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024350080639123917
    2. 'in' → logprob: -3.774350166320801
    3. ' ' → logprob: -6.899350166320801
    4. '1' → logprob: -10.6493501663208
    5. '	in' → logprob: -11.2743501663208
    6. 'n' → logprob: -11.5243501663208
    7. '+' → logprob: -11.7743501663208
    8. '  ' → logprob: -12.2743501663208
    9. ' ' → logprob: -12.2743501663208
    10. ' i' → logprob: -12.3993501663208

Token 92: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.34845542907714844
    2. 'range' → logprob: -1.2234554290771484
    3. ' ' → logprob: -11.973455429077148
    4. '	range' → logprob: -13.723455429077148
    5. '(range' → logprob: -14.098455429077148
    6. '1' → logprob: -14.598455429077148
    7. ' ' → logprob: -14.973455429077148
    8. '   ' → logprob: -15.223455429077148
    9. '  ' → logprob: -15.223455429077148
    10. ')' → logprob: -15.348455429077148

Token 93: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009486184571869671
    2. '1' → logprob: -7.375948429107666
    3. ' ' → logprob: -8.375948905944824
    4. ' (' → logprob: -9.375948905944824
    5. '(N' → logprob: -12.125948905944824
    6. '(i' → logprob: -14.375948905944824
    7. '(
' → logprob: -14.375948905944824
    8. '2' → logprob: -16.125947952270508
    9. '(n' → logprob: -17.125947952270508
    10. '	' → logprob: -17.125947952270508

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015562419139314443
    2. ' ' → logprob: -8.875155448913574
    3. 'N' → logprob: -11.125155448913574
    4. ' N' → logprob: -14.875155448913574
    5. 'i' → logprob: -14.875155448913574
    6. '0' → logprob: -15.750155448913574
    7. '   ' → logprob: -15.875155448913574
    8. '2' → logprob: -16.75015640258789
    9. '(' → logprob: -17.62515640258789
    10. ' i' → logprob: -18.00015640258789

Token 95: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.5815452933311462
    2. ',' → logprob: -0.8315452933311462
    3. ',N' → logprob: -5.456545352935791
    4. ' ' → logprob: -7.456545352935791
    5. ' N' → logprob: -8.206544876098633
    6. ' ):' → logprob: -8.581544876098633
    7. '(N' → logprob: -9.956544876098633
    8. '):' → logprob: -10.081544876098633
    9. ',len' → logprob: -10.206544876098633
    10. ' :' → logprob: -10.331544876098633

Token 96: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03804241120815277
    2. ' N' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.413042068481445
    4. '	N' → logprob: -16.413042068481445
    5. 'i' → logprob: -16.788042068481445
    6. '   ' → logprob: -16.788042068481445
    7. '  ' → logprob: -17.413042068481445
    8. 'K' → logprob: -17.413042068481445
    9. 'n' → logprob: -17.413042068481445
    10. 'len' → logprob: -17.663042068481445

Token 97: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013261953135952353
    2. ' +' → logprob: -6.626326084136963
    3. '+
' → logprob: -15.501326560974121
    4. '):
' → logprob: -16.626325607299805
    5. '+i' → logprob: -16.876325607299805
    6. ' ' → logprob: -17.251325607299805
    7. '＋' → logprob: -18.001325607299805
    8. '1' → logprob: -18.126325607299805
    9. ')+' → logprob: -18.626325607299805
    10. '()+' → logprob: -18.876325607299805

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.375001907348633
    4. '```' → logprob: -16.750001907348633
    5. '+' → logprob: -17.625001907348633
    6. '  ' → logprob: -19.375001907348633
    7. ')' → logprob: -19.750001907348633
    8. '):
' → logprob: -19.750001907348633
    9. '2' → logprob: -20.000001907348633
    10. '１' → logprob: -20.312501907348633

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028316345065832138
    2. '):
' → logprob: -3.6533162593841553
    3. ' ):' → logprob: -6.528316497802734
    4. ')' → logprob: -8.153316497802734
    5. ':' → logprob: -9.028316497802734
    6. ' ):
' → logprob: -9.528316497802734
    7. '):
' → logprob: -9.653316497802734
    8. ' )' → logprob: -12.778316497802734
    9. ' :' → logprob: -13.778316497802734
    10. '   ' → logprob: -13.903316497802734

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7297496199607849
    2. ' Com' → logprob: -0.7297496199607849
    3. 'Com' → logprob: -3.6047496795654297
    4. '	' → logprob: -5.60474967956543
    5. ' ' → logprob: -6.35474967956543
    6. ' row' → logprob: -7.10474967956543
    7. ' for' → logprob: -7.22974967956543
    8. '  ' → logprob: -8.60474967956543
    9. '    ' → logprob: -8.72974967956543
    10. ' t' → logprob: -8.72974967956543

Token 101: ' Com' (ID: 1390)
  Prédit: ' Com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Com' → logprob: -0.6183258295059204
    2. 'Com' (adapté à ' Com') → logprob: -0.9933258295059204
    3. '   ' → logprob: -2.743325710296631
    4. ' row' → logprob: -3.993325710296631
    5. 'row' → logprob: -5.743325710296631
    6. ' ' → logprob: -7.118325710296631
    7. ' for' → logprob: -7.368325710296631
    8. 'com' → logprob: -7.493325710296631
    9. ' line' → logprob: -7.868325710296631
    10. 'temp' → logprob: -8.118326187133789

Token 102: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -3.583550642360933e-05
    2. '[i' → logprob: -11.000036239624023
    3. 'i' → logprob: -11.750036239624023
    4. 'b' → logprob: -11.875036239624023
    5. 'pi' → logprob: -13.250036239624023
    6. '[' → logprob: -14.000036239624023
    7. ' bi' → logprob: -14.500036239624023
    8. 'com' → logprob: -15.750036239624023
    9. 'Bi' → logprob: -16.000036239624023
    10. 'vi' → logprob: -16.125036239624023

Token 103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.558399319241289e-05
    2. '.append' → logprob: -11.375025749206543
    3. '_i' → logprob: -12.375025749206543
    4. '[I' → logprob: -12.500025749206543
    5. '[' → logprob: -13.250025749206543
    6. '   ' → logprob: -13.375025749206543
    7. 'i' → logprob: -13.750025749206543
    8. '][' → logprob: -15.000025749206543
    9. ' [' → logprob: -15.250025749206543
    10. '
' → logprob: -15.375025749206543

Token 104: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028684547170996666
    2. '].' → logprob: -4.153684616088867
    3. ' =' → logprob: -5.403684616088867
    4. '=' → logprob: -5.528684616088867
    5. ']=' → logprob: -5.778684616088867
    6. ' ]' → logprob: -7.778684616088867
    7. '.append' → logprob: -7.778684616088867
    8. '=[' → logprob: -9.903684616088867
    9. ' ].' → logprob: -10.278684616088867
    10. '.' → logprob: -10.528684616088867

Token 105: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.7432603272027336e-06
    2. 'extend' → logprob: -13.875001907348633
    3. '.append' → logprob: -14.375001907348633
    4. ' append' → logprob: -16.250001907348633
    5. 'appen' → logprob: -16.750001907348633
    6. 'ap' → logprob: -18.375001907348633
    7. 'app' → logprob: -19.125001907348633
    8. 'appe' → logprob: -19.625001907348633
    9. '=' → logprob: -19.875001907348633
    10. '	append' → logprob: -19.875001907348633

Token 106: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04354795068502426
    2. '(' → logprob: -3.1685478687286377
    3. ' ' → logprob: -8.043547630310059
    4. 'Com' → logprob: -8.793547630310059
    5. '   ' → logprob: -9.793547630310059
    6. ' (' → logprob: -11.918547630310059
    7. ' Com' → logprob: -12.668547630310059
    8. '  ' → logprob: -13.168547630310059
    9. '((' → logprob: -13.168547630310059
    10. '[' → logprob: -14.106047630310059

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008509726263582706
    2. 'Com' → logprob: -5.008509635925293
    3. '(' → logprob: -6.758509635925293
    4. ' ' → logprob: -7.758509635925293
    5. ' Com' → logprob: -9.008509635925293
    6. '   ' → logprob: -10.133509635925293
    7. ' (' → logprob: -11.258509635925293
    8. 'com' → logprob: -11.821009635925293
    9. '  ' → logprob: -13.008509635925293
    10. '0' → logprob: -13.071009635925293

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00875378493219614
    2. ')
' → logprob: -4.758753776550293
    3. ' )' → logprob: -9.258753776550293
    4. ')

' → logprob: -10.883753776550293
    5. ')
' → logprob: -11.258753776550293
    6. ' )
' → logprob: -11.883753776550293
    7. '   ' → logprob: -13.008753776550293
    8. ' ' → logprob: -13.633753776550293
    9. ')i' → logprob: -14.633753776550293
    10. '0' → logprob: -15.383753776550293

Token 109: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.59402996301651
    2. '   ' → logprob: -1.2190299034118652
    3. 'for' → logprob: -2.0940299034118652
    4. ' ' → logprob: -3.8440299034118652
    5. '	for' → logprob: -6.344029903411865
    6. '    
' → logprob: -6.344029903411865
    7. '<|end|>' → logprob: -6.844029903411865
    8. ' 
' → logprob: -6.969029903411865
    9. '  ' → logprob: -7.094029903411865
    10. '  
' → logprob: -8.094030380249023

Token 110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21855200827121735
    2. ' for' → logprob: -1.7185519933700562
    3. '   ' → logprob: -4.093552112579346
    4. ' ' → logprob: -8.468551635742188
    5. '	for' → logprob: -10.218551635742188
    6. '  ' → logprob: -10.468551635742188
    7. 'j' → logprob: -11.218551635742188
    8. '    
' → logprob: -11.718551635742188
    9. ' j' → logprob: -11.843551635742188
    10. ' 
' → logprob: -12.593551635742188

Token 111: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5759970545768738
    2. 'j' → logprob: -0.8259970545768738
    3. 'k' → logprob: -10.575997352600098
    4. ' k' → logprob: -11.200997352600098
    5. ' ' → logprob: -11.325997352600098
    6. '	j' → logprob: -13.325997352600098
    7. 'x' → logprob: -13.825997352600098
    8. '   ' → logprob: -13.825997352600098
    9. '_j' → logprob: -14.700997352600098
    10. ' x' → logprob: -14.950997352600098

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004315349273383617
    2. 'in' → logprob: -5.504315376281738
    3. ' ' → logprob: -8.379315376281738
    4. '  ' → logprob: -12.379315376281738
    5. 'n' → logprob: -13.879315376281738
    6. '   ' → logprob: -14.879315376281738
    7. '1' → logprob: -14.879315376281738
    8. ',' → logprob: -15.504315376281738
    9. 'range' → logprob: -15.504315376281738
    10. 's' → logprob: -16.129314422607422

Token 113: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759438872337341
    2. ' range' → logprob: -0.8259438872337341
    3. '(range' → logprob: -13.075943946838379
    4. ' ' → logprob: -13.575943946838379
    5. '   ' → logprob: -14.450943946838379
    6. '	range' → logprob: -14.950943946838379
    7. '  ' → logprob: -15.325943946838379
    8. '    ' → logprob: -17.700942993164062
    9. '(' → logprob: -18.575942993164062
    10. ' in' → logprob: -18.825942993164062

Token 114: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030905256047844887
    2. ' range' → logprob: -3.905905246734619
    3. ' (' → logprob: -5.280905246734619
    4. '(range' → logprob: -5.655905246734619
    5. 'range' → logprob: -7.030905246734619
    6. ' in' → logprob: -7.155905246734619
    7. 'in' → logprob: -10.030905723571777
    8. ' ' → logprob: -12.405905723571777
    9. '(len' → logprob: -12.530905723571777
    10. '	range' → logprob: -12.780905723571777

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2995354235172272
    2. '-' → logprob: -1.6745353937149048
    3. '):
' → logprob: -3.7995355129241943
    4. ')' → logprob: -3.7995355129241943
    5. ' ):' → logprob: -4.299535274505615
    6. ' -' → logprob: -4.424535274505615
    7. '   ' → logprob: -7.924535274505615
    8. ' )' → logprob: -8.549535751342773
    9. ' ):
' → logprob: -8.799535751342773
    10. ' ' → logprob: -8.924535751342773

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018416560487821698
    2. '   ' → logprob: -6.5018415451049805
    3. '    ' → logprob: -8.87684154510498
    4. ' Com' → logprob: -9.62684154510498
    5. ',' → logprob: -10.37684154510498
    6. ' ' → logprob: -10.62684154510498
    7. 'Com' → logprob: -11.00184154510498
    8. '      ' → logprob: -11.50184154510498
    9. '     ' → logprob: -11.50184154510498
    10. '	   ' → logprob: -11.50184154510498

Token 117: ' #' (ID: 1069)
  Prédit: ' Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Com' → logprob: -0.7707022428512573
    2. 'Com' → logprob: -1.3957022428512573
    3. '       ' → logprob: -1.5207022428512573
    4. '   ' → logprob: -2.770702362060547
    5. '    ' → logprob: -5.520702362060547
    6. ' ' → logprob: -6.020702362060547
    7. '        ' → logprob: -7.020702362060547
    8. ' ' → logprob: -8.020702362060547
    9. '           ' → logprob: -8.145702362060547
    10. '  ' → logprob: -9.395702362060547

Token 118: ' petit' (ID: 20577)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.45242592692375183
    2. ' Com' → logprob: -1.0774259567260742
    3. '   ' → logprob: -3.952425956726074
    4. '       ' → logprob: -5.827425956726074
    5. ' ' → logprob: -7.827425956726074
    6. '    ' → logprob: -8.202425956726074
    7. ' ' → logprob: -8.702425956726074
    8. '           ' → logprob: -9.202425956726074
    9. 'com' → logprob: -9.327425956726074
    10. '        ' → logprob: -9.827425956726074

Token 119: ' bricol' (ID: 181488)
  Prédit: ' Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Com' → logprob: -0.26729848980903625
    2. 'Com' → logprob: -1.5172984600067139
    3. ' ' → logprob: -5.392298698425293
    4. '   ' → logprob: -5.892298698425293
    5. ' token' → logprob: -6.267298698425293
    6. ' s' → logprob: -6.642298698425293
    7. ' val' → logprob: -7.517298698425293
    8. 'com' → logprob: -7.767298698425293
    9. 's' → logprob: -7.892298698425293
    10. '+' → logprob: -7.892298698425293

Token 120: 'age' (ID: 477)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03602460026741028
    2. '   ' → logprob: -4.661024570465088
    3. ' =' → logprob: -5.036024570465088
    4. ',' → logprob: -5.536024570465088
    5. '           ' → logprob: -5.661024570465088
    6. '    ' → logprob: -5.786024570465088
    7. '        ' → logprob: -6.036024570465088
    8. '(' → logprob: -6.786024570465088
    9. '=' → logprob: -7.161024570465088
    10. '[' → logprob: -7.286024570465088

Token 121: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021212607622146606
    2. '           ' → logprob: -4.396212577819824
    3. 'Com' → logprob: -5.771212577819824
    4. ' Com' → logprob: -6.021212577819824
    5. '   ' → logprob: -6.146212577819824
    6. ',' → logprob: -7.646212577819824
    7. '        ' → logprob: -9.521212577819824
    8. '    ' → logprob: -9.646212577819824
    9. '<|end|>' → logprob: -9.771212577819824
    10. ':' → logprob: -10.521212577819824

Token 122: ' la' (ID: 557)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.0003873109817505
    2. 'Com' → logprob: -1.3753873109817505
    3. ' Com' → logprob: -1.6253873109817505
    4. 'j' → logprob: -2.375387191772461
    5. 'append' → logprob: -4.375387191772461
    6. ' len' → logprob: -4.625387191772461
    7. '   ' → logprob: -4.750387191772461
    8. 'len' → logprob: -4.875387191772461
    9. ' comb' → logprob: -5.250387191772461
    10. ' ' → logprob: -5.250387191772461

Token 123: ' suite' (ID: 13800)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.13465648889541626
    2. 'if' → logprob: -3.3846564292907715
    3. ' len' → logprob: -3.5096564292907715
    4. 'j' → logprob: -4.2596564292907715
    5. ' j' → logprob: -4.3846564292907715
    6. 'while' → logprob: -5.1346564292907715
    7. 'sum' → logprob: -5.1346564292907715
    8. 's' → logprob: -5.3846564292907715
    9. ' somme' → logprob: -6.1346564292907715
    10. 'i' → logprob: -6.2596564292907715

Token 124: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05375749617815018
    2. ' Com' → logprob: -3.678757429122925
    3. '           ' → logprob: -4.428757667541504
    4. 'Com' → logprob: -4.928757667541504
    5. ',' → logprob: -5.428757667541504
    6. '   ' → logprob: -6.678757667541504
    7. '        ' → logprob: -7.553757667541504
    8. ' ,' → logprob: -8.053757667541504
    9. '<|end|>' → logprob: -8.178757667541504
    10. '    ' → logprob: -8.428757667541504

Token 125: ' pas' (ID: 2173)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.6962351202964783
    2. ' Com' → logprob: -0.8212351202964783
    3. ' if' → logprob: -3.571235179901123
    4. 'if' → logprob: -4.321235179901123
    5. '       ' → logprob: -4.696235179901123
    6. '           ' → logprob: -4.696235179901123
    7. '   ' → logprob: -7.071235179901123
    8. ' while' → logprob: -8.696234703063965
    9. ' val' → logprob: -8.696234703063965
    10. 'val' → logprob: -9.071234703063965

Token 126: ' sûr' (ID: 46415)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.4828897714614868
    2. '   ' → logprob: -1.9828897714614868
    3. ' Com' → logprob: -2.4828896522521973
    4. 'for' → logprob: -3.6078896522521973
    5. ' j' → logprob: -4.232889652252197
    6. ' i' → logprob: -4.357889652252197
    7. ' ' → logprob: -4.482889652252197
    8. 'i' → logprob: -4.482889652252197
    9. 'j' → logprob: -4.482889652252197
    10. '    ' → logprob: -4.607889652252197

Token 127: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08052828162908554
    2. '   ' → logprob: -3.4555282592773438
    3. '    ' → logprob: -4.330528259277344
    4. '(' → logprob: -4.455528259277344
    5. '        ' → logprob: -5.580528259277344
    6. '           ' → logprob: -5.705528259277344
    7. ',' → logprob: -5.955528259277344
    8. ' (' → logprob: -5.955528259277344
    9. ' Com' → logprob: -5.955528259277344
    10. '[' → logprob: -6.330528259277344

Token 128: ' ce' (ID: 2357)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.051270604133606
    2. ' j' → logprob: -1.301270604133606
    3. 'j' → logprob: -1.551270604133606
    4. 'len' → logprob: -1.801270604133606
    5. 'Com' → logprob: -7.551270484924316
    6. ' Com' → logprob: -7.676270484924316
    7. '(len' → logprob: -9.301270484924316
    8. ' ' → logprob: -9.676270484924316
    9. ' ' → logprob: -10.176270484924316
    10. '(j' → logprob: -11.613770484924316

Token 129: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.7077877521514893
    2. 'so' → logprob: -0.8327877521514893
    3. 'Com' → logprob: -4.08278751373291
    4. 's' → logprob: -4.95778751373291
    5. 'So' → logprob: -5.08278751373291
    6. '+' → logprob: -5.20778751373291
    7. 'len' → logprob: -5.45778751373291
    8. 'if' → logprob: -5.83278751373291
    9. ' so' → logprob: -5.83278751373291
    10. 'ne' → logprob: -5.95778751373291

Token 130: ' optimal' (ID: 24174)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4303125739097595
    2. ' len' → logprob: -1.1803126335144043
    3. 'Com' → logprob: -3.6803126335144043
    4. ' j' → logprob: -4.805312633514404
    5. 'j' → logprob: -5.430312633514404
    6. ' Com' → logprob: -5.930312633514404
    7. '(len' → logprob: -7.055312633514404
    8. ' ' → logprob: -8.305312156677246
    9. '(' → logprob: -8.680312156677246
    10. '0' → logprob: -8.930312156677246

Token 131: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013675399124622345
    2. '   ' → logprob: -5.263675212860107
    3. 'Com' → logprob: -5.888675212860107
    4. ' Com' → logprob: -6.013675212860107
    5. ',' → logprob: -6.513675212860107
    6. '           ' → logprob: -7.263675212860107
    7. '    ' → logprob: -8.138675689697266
    8. '	   ' → logprob: -9.138675689697266
    9. ' ,' → logprob: -9.388675689697266
    10. '        ' → logprob: -9.638675689697266

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04522544890642166
    2. ' Com' → logprob: -3.4202253818511963
    3. 'Com' → logprob: -5.295225620269775
    4. '           ' → logprob: -6.045225620269775
    5. '   ' → logprob: -6.170225620269775
    6. ',' → logprob: -7.920225620269775
    7. '    ' → logprob: -8.170225143432617
    8. '        ' → logprob: -8.420225143432617
    9. ' ' → logprob: -8.420225143432617
    10. ' ' → logprob: -8.670225143432617

Token 133: ' Com' (ID: 1390)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' (adapté à ' Com') → logprob: -0.24588543176651
    2. ' Com' → logprob: -1.6208853721618652
    3. '       ' → logprob: -4.120885372161865
    4. '   ' → logprob: -6.745885372161865
    5. ' if' → logprob: -6.995885372161865
    6. 'if' → logprob: -7.495885372161865
    7. '           ' → logprob: -7.620885372161865
    8. 'com' → logprob: -8.245885848999023
    9. ' while' → logprob: -8.995885848999023
    10. ' ' → logprob: -9.245885848999023

Token 134: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -5.764977686339989e-05
    2. 'b' → logprob: -11.000057220458984
    3. 'pi' → logprob: -11.250057220458984
    4. 'Bi' → logprob: -11.500057220458984
    5. 'i' → logprob: -12.250057220458984
    6. ' bi' → logprob: -12.500057220458984
    7. '[i' → logprob: -13.375057220458984
    8. '   ' → logprob: -14.000057220458984
    9. 'vi' → logprob: -14.125057220458984
    10. 'by' → logprob: -14.375057220458984

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3306015716807451e-05
    2. '[j' → logprob: -11.37501335144043
    3. '[' → logprob: -13.37501335144043
    4. '[I' → logprob: -15.50001335144043
    5. '```' → logprob: -17.75001335144043
    6. '[-' → logprob: -18.12501335144043
    7. 'i' → logprob: -18.87501335144043
    8. '][' → logprob: -19.25001335144043
    9. '[ii' → logprob: -19.25001335144043
    10. '[N' → logprob: -19.50001335144043

Token 136: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07221254706382751
    2. '][' → logprob: -2.6972124576568604
    3. '][-' → logprob: -6.6972126960754395
    4. ']' → logprob: -7.9472126960754395
    5. '-' → logprob: -8.322212219238281
    6. '[j' → logprob: -8.572212219238281
    7. '   ' → logprob: -9.447212219238281
    8. ' ' → logprob: -9.572212219238281
    9. ' ].' → logprob: -9.822212219238281
    10. '[-' → logprob: -11.447212219238281

Token 137: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.0219828002154827e-05
    2. ' append' → logprob: -11.625020027160645
    3. '.append' → logprob: -11.875020027160645
    4. 'appen' → logprob: -13.250020027160645
    5. 'app' → logprob: -14.000020027160645
    6. 'insert' → logprob: -14.125020027160645
    7. 'extend' → logprob: -15.500020027160645
    8. ' ' → logprob: -15.625020027160645
    9. '	append' → logprob: -15.625020027160645
    10. 'ap' → logprob: -15.750020027160645

Token 138: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019130534492433071
    2. '((' → logprob: -6.626913070678711
    3. 'Com' → logprob: -8.126913070678711
    4. ' (' → logprob: -8.376913070678711
    5. '(com' → logprob: -11.001913070678711
    6. '(
' → logprob: -11.501913070678711
    7. ' Com' → logprob: -12.126913070678711
    8. '(int' → logprob: -12.501913070678711
    9. '   ' → logprob: -12.626913070678711
    10. '(Mod' → logprob: -12.751913070678711

Token 139: 'Com' (ID: 1059)
  Prédit: 'Com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.00033296257606707513
    2. ' Com' → logprob: -8.375332832336426
    3. '(' → logprob: -9.375332832336426
    4. 'Comb' → logprob: -11.625332832336426
    5. '   ' → logprob: -12.000332832336426
    6. '_Com' → logprob: -14.625332832336426
    7. ' ' → logprob: -15.000332832336426
    8. 'com' → logprob: -15.125332832336426
    9. '	' → logprob: -15.125332832336426
    10. '       ' → logprob: -15.875332832336426

Token 140: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.0002925598528236151
    2. '[i' → logprob: -8.250292778015137
    3. 'i' → logprob: -10.875292778015137
    4. 'b' → logprob: -11.750292778015137
    5. 'Bi' → logprob: -13.125292778015137
    6. 'pi' → logprob: -13.375292778015137
    7. 'vi' → logprob: -14.875292778015137
    8. ' bi' → logprob: -15.000292778015137
    9. '[' → logprob: -16.37529182434082
    10. 'bo' → logprob: -17.62529182434082

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. 'i' → logprob: -13.25000286102295
    3. '[j' → logprob: -13.87500286102295
    4. '[' → logprob: -16.125003814697266
    5. '   ' → logprob: -17.000003814697266
    6. '[I' → logprob: -17.000003814697266
    7. ' [' → logprob: -17.250003814697266
    8. ')' → logprob: -18.250003814697266
    9. '```' → logprob: -18.250003814697266
    10. '
' → logprob: -18.500003814697266

Token 142: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3200313448905945
    2. '[i' → logprob: -1.3200314044952393
    3. '[j' → logprob: -5.19503116607666
    4. '[-' → logprob: -6.82003116607666
    5. ' -' → logprob: -9.57003116607666
    6. '][' → logprob: -10.94503116607666
    7. '[' → logprob: -11.69503116607666
    8. '   ' → logprob: -11.82003116607666
    9. 'i' → logprob: -12.82003116607666
    10. '−' → logprob: -14.44503116607666

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.786196975852363e-05
    2. ' ' → logprob: -10.500038146972656
    3. '   ' → logprob: -11.750038146972656
    4. '-' → logprob: -14.750038146972656
    5. '    ' → logprob: -14.875038146972656
    6. '       ' → logprob: -15.000038146972656
    7. 'j' → logprob: -15.437538146972656
    8. '```' → logprob: -15.500038146972656
    9. '  ' → logprob: -15.562538146972656
    10. '][' → logprob: -15.812538146972656

Token 144: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.14408622682094574
    2. '][' → logprob: -2.0190861225128174
    3. '[' → logprob: -7.7690863609313965
    4. ' ][' → logprob: -7.8940863609313965
    5. ' ' → logprob: -8.269085884094238
    6. '   ' → logprob: -8.894085884094238
    7. ' [' → logprob: -9.644085884094238
    8. ']' → logprob: -10.019085884094238
    9. 'j' → logprob: -10.519085884094238
    10. '    ' → logprob: -11.019085884094238

Token 145: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00095267134020105
    2. ' j' → logprob: -7.00095272064209
    3. '   ' → logprob: -10.25095272064209
    4. ' ' → logprob: -12.87595272064209
    5. '	j' → logprob: -13.37595272064209
    6. '[j' → logprob: -14.00095272064209
    7. '  ' → logprob: -15.25095272064209
    8. '    ' → logprob: -15.37595272064209
    9. 'jj' → logprob: -16.125951766967773
    10. ',j' → logprob: -16.750951766967773

Token 146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4304945468902588
    2. ']+' → logprob: -1.3054945468902588
    3. '+' → logprob: -2.680494546890259
    4. ' +' → logprob: -4.68049430847168
    5. ' ]' → logprob: -7.55549430847168
    6. '%' → logprob: -9.05549430847168
    7. ' ' → logprob: -9.18049430847168
    8. '0' → logprob: -10.30549430847168
    9. '1' → logprob: -11.05549430847168
    10. '```' → logprob: -11.18049430847168

Token 147: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38698866963386536
    2. ' +' → logprob: -1.136988639831543
    3. '+
' → logprob: -9.386988639831543
    4. ' +
' → logprob: -11.386988639831543
    5. '%' → logprob: -11.511988639831543
    6. ' ' → logprob: -12.261988639831543
    7. ' plus' → logprob: -13.011988639831543
    8. ' %' → logprob: -13.511988639831543
    9. '   ' → logprob: -14.011988639831543
    10. '
' → logprob: -14.386988639831543

Token 148: ' Com' (ID: 1390)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.04304235056042671
    2. ' Com' → logprob: -3.1680424213409424
    3. '   ' → logprob: -11.168042182922363
    4. ' ' → logprob: -11.543042182922363
    5. 'com' → logprob: -12.168042182922363
    6. '_Com' → logprob: -12.168042182922363
    7. '  ' → logprob: -12.793042182922363
    8. '    ' → logprob: -12.793042182922363
    9. '       ' → logprob: -14.793042182922363
    10. '_com' → logprob: -14.793042182922363

Token 149: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.0002964935847558081
    2. '[i' → logprob: -8.375296592712402
    3. 'i' → logprob: -9.875296592712402
    4. 'b' → logprob: -11.625296592712402
    5. 'Bi' → logprob: -13.250296592712402
    6. 'vi' → logprob: -13.875296592712402
    7. ' bi' → logprob: -14.125296592712402
    8. 'pi' → logprob: -14.250296592712402
    9. 'bo' → logprob: -14.750296592712402
    10. '[' → logprob: -15.125296592712402

Token 150: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010926496179308742
    2. 'i' → logprob: -9.750109672546387
    3. '-' → logprob: -10.250109672546387
    4. '[' → logprob: -12.500109672546387
    5. '[-' → logprob: -13.000109672546387
    6. '_i' → logprob: -13.250109672546387
    7. ' [' → logprob: -13.750109672546387
    8. '```' → logprob: -14.125109672546387
    9. ' i' → logprob: -14.250109672546387
    10. '_[' → logprob: -14.250109672546387

Token 151: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015511675737798214
    2. '1' → logprob: -7.126551151275635
    3. ' -' → logprob: -7.251551151275635
    4. '][' → logprob: -11.001551628112793
    5. ' ' → logprob: -11.501551628112793
    6. '   ' → logprob: -12.376551628112793
    7. 'i' → logprob: -13.626551628112793
    8. '```' → logprob: -13.626551628112793
    9. '  ' → logprob: -14.501551628112793
    10. '_' → logprob: -14.751551628112793

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.273621405242011e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.562532424926758
    4. '2' → logprob: -15.187532424926758
    5. '-' → logprob: -15.625032424926758
    6. '0' → logprob: -15.750032424926758
    7. '11' → logprob: -16.687532424926758
    8. '  ' → logprob: -16.812532424926758
    9. '
' → logprob: -17.000032424926758
    10. '```' → logprob: -17.062532424926758

Token 153: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6949859261512756
    2. '[j' → logprob: -0.6949859261512756
    3. '[' → logprob: -6.569985866546631
    4. 'j' → logprob: -8.819986343383789
    5. ']' → logprob: -9.069986343383789
    6. ' ][' → logprob: -10.069986343383789
    7. '
' → logprob: -10.569986343383789
    8. ')[' → logprob: -11.194986343383789
    9. ''][' → logprob: -11.444986343383789
    10. '   ' → logprob: -11.694986343383789

Token 154: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1517960956552997e-05
    2. ' j' → logprob: -11.750011444091797
    3. '(j' → logprob: -13.250011444091797
    4. '
' → logprob: -13.750011444091797
    5. '   ' → logprob: -15.875011444091797
    6. '
' → logprob: -15.875011444091797
    7. '[j' → logprob: -16.375011444091797
    8. ' ' → logprob: -16.875011444091797
    9. '	j' → logprob: -16.875011444091797
    10. ',j' → logprob: -16.875011444091797

Token 155: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18810655176639557
    2. '])' → logprob: -1.8131065368652344
    3. ']' → logprob: -4.938106536865234
    4. ']+' → logprob: -8.313106536865234
    5. ' ])' → logprob: -8.563106536865234
    6. '1' → logprob: -8.938106536865234
    7. ' +' → logprob: -8.938106536865234
    8. '   ' → logprob: -9.688106536865234
    9. '+
' → logprob: -9.688106536865234
    10. '-' → logprob: -9.938106536865234

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -12.000009536743164
    3. '])' → logprob: -13.125009536743164
    4. '   ' → logprob: -14.375009536743164
    5. '0' → logprob: -15.250009536743164
    6. ']' → logprob: -15.375009536743164
    7. '  ' → logprob: -15.875009536743164
    8. '2' → logprob: -16.375009536743164
    9. '```' → logprob: -16.875009536743164
    10. '
' → logprob: -17.125009536743164

Token 157: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001330360071733594
    2. ')%' → logprob: -6.876330375671387
    3. ' )' → logprob: -8.126330375671387
    4. '   ' → logprob: -14.001330375671387
    5. ')
' → logprob: -15.126330375671387
    6. '%' → logprob: -15.126330375671387
    7. ']' → logprob: -16.12632942199707
    8. '）' → logprob: -16.12632942199707
    9. '))' → logprob: -16.75132942199707
    10. ' ' → logprob: -17.25132942199707

Token 158: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.048696938902139664
    2. ' %' → logprob: -3.048696994781494
    3. ')' → logprob: -9.298696517944336
    4. ')%' → logprob: -11.298696517944336
    5. ' ' → logprob: -13.048696517944336
    6. '%m' → logprob: -13.798696517944336
    7. '%n' → logprob: -14.548696517944336
    8. '%i' → logprob: -14.673696517944336
    9. '%c' → logprob: -14.923696517944336
    10. ' ' → logprob: -15.173696517944336

Token 159: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011048054322600365
    2. ' mod' → logprob: -4.511047840118408
    3. '	mod' → logprob: -16.01104736328125
    4. ' ' → logprob: -16.38604736328125
    5. '(mod' → logprob: -16.88604736328125
    6. '   ' → logprob: -18.76104736328125
    7. ' ' → logprob: -19.63604736328125
    8. 'MOD' → logprob: -20.26104736328125
    9. '  ' → logprob: -20.51104736328125
    10. ' мод' → logprob: -20.88604736328125

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010568885772954673
    2. ' )' → logprob: -9.500105857849121
    3. ')
' → logprob: -10.500105857849121
    4. '   ' → logprob: -13.000105857849121
    5. '       ' → logprob: -15.375105857849121
    6. ' ' → logprob: -15.750105857849121
    7. ')`' → logprob: -16.125104904174805
    8. ')
' → logprob: -16.500104904174805
    9. '))' → logprob: -16.625104904174805
    10. '	' → logprob: -16.750104904174805

Token 161: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' Com' (ID: 1390)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -2.4034345187828876e-05
    2. 'i' → logprob: -10.87502384185791
    3. 'pi' → logprob: -12.62502384185791
    4. 'b' → logprob: -14.25002384185791
    5. '[i' → logprob: -14.50002384185791
    6. 'vi' → logprob: -16.125024795532227
    7. 'bo' → logprob: -16.250024795532227
    8. 'hi' → logprob: -16.250024795532227
    9. 'би' → logprob: -17.000024795532227
    10. 'xi' → logprob: -17.125024795532227

Token 164: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.12500286102295
    3. '[I' → logprob: -13.87500286102295
    4. 'i' → logprob: -15.25000286102295
    5. '```' → logprob: -17.875003814697266
    6. '[j' → logprob: -18.375003814697266
    7. '[int' → logprob: -19.250003814697266
    8. '[...]' → logprob: -19.250003814697266
    9. '[s' → logprob: -19.500003814697266
    10. '[N' → logprob: -19.625003814697266

Token 165: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0008285674848593771
    2. ']' → logprob: -7.500828742980957
    3. '.append' → logprob: -9.375828742980957
    4. '][' → logprob: -9.625828742980957
    5. '.' → logprob: -10.000828742980957
    6. '][-' → logprob: -10.000828742980957
    7. '[' → logprob: -11.250828742980957
    8. '[-' → logprob: -11.750828742980957
    9. ').' → logprob: -12.375828742980957
    10. '}.' → logprob: -13.000828742980957

Token 166: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.610702363715973e-06
    2. 'extend' → logprob: -12.250009536743164
    3. ' append' → logprob: -12.875009536743164
    4. '.append' → logprob: -13.375009536743164
    5. 'appen' → logprob: -14.750009536743164
    6. 'pop' → logprob: -15.625009536743164
    7. '	append' → logprob: -16.625009536743164
    8. 'app' → logprob: -17.250009536743164
    9. ' ' → logprob: -18.000009536743164
    10. 'ap' → logprob: -18.250009536743164

Token 167: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011726059019565582
    2. '1' → logprob: -6.7511725425720215
    3. '0' → logprob: -13.75117301940918
    4. ' (' → logprob: -14.37617301940918
    5. ' ' → logprob: -14.87617301940918
    6. '   ' → logprob: -15.62617301940918
    7. '((' → logprob: -15.87617301940918
    8. '  ' → logprob: -17.25117301940918
    9. '(
' → logprob: -17.25117301940918
    10. '(int' → logprob: -18.75117301940918

Token 168: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012639728374779224
    2. '0' → logprob: -4.38763952255249
    3. ' ' → logprob: -9.012639999389648
    4. '   ' → logprob: -12.012639999389648
    5. '  ' → logprob: -14.137639999389648
    6. '(' → logprob: -14.262639999389648
    7. ')' → logprob: -14.762639999389648
    8. '2' → logprob: -16.20013999938965
    9. '    ' → logprob: -16.88763999938965
    10. '
' → logprob: -17.20013999938965

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -12.375007629394531
    3. ' )' → logprob: -12.875007629394531
    4. '   ' → logprob: -15.000007629394531
    5. '<|end|>' → logprob: -15.000007629394531
    6. '))' → logprob: -16.87500762939453
    7. ']' → logprob: -16.87500762939453
    8. '`)' → logprob: -17.00000762939453
    9. '```' → logprob: -17.00000762939453
    10. '#' → logprob: -17.12500762939453

Token 170: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' raj' (ID: 46358)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -7.159660890465602e-05
    2. 'out' → logprob: -9.62507152557373
    3. 'outer' → logprob: -12.25007152557373
    4. 'outez' → logprob: -14.75007152557373
    5. 'outes' → logprob: -16.000072479248047
    6. 'o' → logprob: -16.000072479248047
    7. 'OUT' → logprob: -17.375072479248047
    8. 'uste' → logprob: -17.625072479248047
    9. 'pute' → logprob: -18.250072479248047
    10. 'ute' → logprob: -18.375072479248047

Token 175: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' zéro' (ID: 182040)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' pourquoi' (ID: 39224)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: ' pas' (ID: 2173)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' !

' (ID: 13547)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: 'DP' (ID: 16851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06207580119371414
    2. '=' → logprob: -2.8120758533477783
    3. '[' → logprob: -9.4370756149292
    4. '=[' → logprob: -11.3120756149292
    5. '_' → logprob: -12.3120756149292
    6. ' =[' → logprob: -13.3120756149292
    7. '0' → logprob: -13.6870756149292
    8. ']' → logprob: -13.8120756149292
    9. '=[[' → logprob: -13.8120756149292
    10. ' ' → logprob: -13.8120756149292

Token 183: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.03454563766717911
    2. ' [[' → logprob: -3.534545660018921
    3. '[' → logprob: -5.409545421600342
    4. ' [' → logprob: -8.4095458984375
    5. ' [[[' → logprob: -9.9095458984375
    6. '[-' → logprob: -11.6595458984375
    7. ' [[]' → logprob: -12.0345458984375
    8. '[N' → logprob: -12.4095458984375
    9. '[{' → logprob: -12.5345458984375
    10. '([[' → logprob: -13.2845458984375

Token 184: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01527848094701767
    2. '0' → logprob: -4.390278339385986
    3. '[[' → logprob: -6.765278339385986
    4. ' [' → logprob: -7.015278339385986
    5. '[-' → logprob: -7.890278339385986
    6. '1' → logprob: -9.265278816223145
    7. '[K' → logprob: -10.265278816223145
    8. '(' → logprob: -10.390278816223145
    9. '[N' → logprob: -10.640278816223145
    10. '[A' → logprob: -10.765278816223145

Token 185: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016284562647342682
    2. ']*(' → logprob: -4.641284465789795
    3. ' for' → logprob: -5.391284465789795
    4. 'for' → logprob: -6.891284465789795
    5. ']*' → logprob: -7.266284465789795
    6. ']+' → logprob: -9.016284942626953
    7. ' ]' → logprob: -9.516284942626953
    8. ',' → logprob: -10.891284942626953
    9. '][' → logprob: -11.641284942626953
    10. ' *' → logprob: -12.391284942626953

Token 186: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5303331017494202
    2. ' for' → logprob: -1.1553330421447754
    3. ']' → logprob: -3.1553330421447754
    4. ']*(' → logprob: -3.4053330421447754
    5. '*(' → logprob: -4.655333042144775
    6. '*' → logprob: -5.530333042144775
    7. '
' → logprob: -6.155333042144775
    8. ']+' → logprob: -6.405333042144775
    9. ']*' → logprob: -6.405333042144775
    10. ' *' → logprob: -7.280333042144775

Token 187: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.12047220766544342
    2. '(N' → logprob: -2.2454721927642822
    3. '(' → logprob: -5.120472431182861
    4. '((' → logprob: -6.745472431182861
    5. '(k' → logprob: -8.495471954345703
    6. '(max' → logprob: -9.245471954345703
    7. ' (' → logprob: -10.120471954345703
    8. 'N' → logprob: -10.245471954345703
    9. '101' → logprob: -10.745471954345703
    10. 'K' → logprob: -11.120471954345703

Token 188: 'N' (ID: 45)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.5684599280357361
    2. 'K' → logprob: -0.9434599280357361
    3. 'N' → logprob: -3.443459987640381
    4. '(N' → logprob: -4.443459987640381
    5. '(' → logprob: -8.193459510803223
    6. ' (' → logprob: -8.693459510803223
    7. ' K' → logprob: -10.068459510803223
    8. '((' → logprob: -10.193459510803223
    9. '101' → logprob: -11.318459510803223
    10. '   ' → logprob: -11.568459510803223

Token 189: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009144435753114522
    2. ' +' → logprob: -7.000914573669434
    3. '+
' → logprob: -13.500914573669434
    4. '
' → logprob: -14.375914573669434
    5. '1' → logprob: -14.750914573669434
    6. '+B' → logprob: -16.250913619995117
    7. '```' → logprob: -16.375913619995117
    8. ')' → logprob: -16.625913619995117
    9. '＋' → logprob: -16.875913619995117
    10. '*' → logprob: -17.250913619995117

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.360996485454962e-05
    2. '2' → logprob: -10.0000638961792
    3. ' ' → logprob: -11.0000638961792
    4. '(' → logprob: -14.6250638961792
    5. '   ' → logprob: -15.6250638961792
    6. '3' → logprob: -15.6875638961792
    7. '```' → logprob: -15.8750638961792
    8. '+' → logprob: -16.187562942504883
    9. 'K' → logprob: -16.687562942504883
    10. '(N' → logprob: -17.187562942504883

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028729885816574097
    2. ')
' → logprob: -6.002872943878174
    3. ' )' → logprob: -7.877872943878174
    4. ')
' → logprob: -11.752873420715332
    5. ' )
' → logprob: -12.252873420715332
    6. ')

' → logprob: -13.127873420715332
    7. '
' → logprob: -14.002873420715332
    8. '+' → logprob: -14.002873420715332
    9. '' → logprob: -15.377873420715332
    10. '```' → logprob: -15.627873420715332

Token 192: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.004395459778606892
    2. 'for' → logprob: -5.504395484924316
    3. 'dp' → logprob: -8.629395484924316
    4. 'sum' → logprob: -10.004395484924316
    5. '0' → logprob: -10.504395484924316
    6. 'total' → logprob: -11.504395484924316
    7. '_DP' → logprob: -11.754395484924316
    8. 'ans' → logprob: -12.129395484924316
    9. 'result' → logprob: -12.254395484924316
    10. ' for' → logprob: -12.629395484924316

Token 193: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007393499254249036
    2. '[K' → logprob: -7.375739574432373
    3. '[N' → logprob: -9.875739097595215
    4. ' =' → logprob: -11.000739097595215
    5. '[-' → logprob: -11.625739097595215
    6. ' [' → logprob: -11.875739097595215
    7. '[:]' → logprob: -12.125739097595215
    8. '0' → logprob: -12.500739097595215
    9. '=' → logprob: -12.625739097595215
    10. '[
' → logprob: -12.875739097595215

Token 194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000431861262768507
    2. '1' → logprob: -8.625432014465332
    3. 'K' → logprob: -8.625432014465332
    4. ' ' → logprob: -9.750432014465332
    5. 'N' → logprob: -12.375432014465332
    6. ']' → logprob: -13.125432014465332
    7. 'A' → logprob: -13.437932014465332
    8. ' K' → logprob: -13.750432014465332
    9. '[' → logprob: -14.000432014465332
    10. '-' → logprob: -14.000432014465332

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.539801688631997e-05
    2. ' ]' → logprob: -10.000065803527832
    3. ']=' → logprob: -10.875065803527832
    4. ')' → logprob: -14.875065803527832
    5. '=' → logprob: -15.000065803527832
    6. '[' → logprob: -15.875065803527832
    7. '1' → logprob: -16.625064849853516
    8. ']
' → logprob: -16.750064849853516
    9. '])' → logprob: -17.000064849853516
    10. ']+=' → logprob: -17.000064849853516

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038047224283218384
    2. ' =' → logprob: -3.2880473136901855
    3. '[' → logprob: -13.413046836853027
    4. ',' → logprob: -14.538046836853027
    5. '=[' → logprob: -14.538046836853027
    6. '=True' → logprob: -14.663046836853027
    7. '+=' → logprob: -14.788046836853027
    8. '=
' → logprob: -14.788046836853027
    9. ']' → logprob: -15.288046836853027
    10. '=

' → logprob: -15.538046836853027

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2961512513575144e-05
    2. ' ' → logprob: -10.875022888183594
    3. '0' → logprob: -12.625022888183594
    4. '(' → logprob: -15.125022888183594
    5. 'pow' → logprob: -16.375022888183594
    6. 'K' → logprob: -16.750022888183594
    7. '-' → logprob: -16.875022888183594
    8. '[' → logprob: -17.062522888183594
    9. '   ' → logprob: -17.250022888183594
    10. 'com' → logprob: -17.562522888183594

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4418171455617994e-05
    2. '0' → logprob: -10.625044822692871
    3. '(' → logprob: -11.750044822692871
    4. 'pow' → logprob: -12.250044822692871
    5. 'K' → logprob: -13.000044822692871
    6. 'A' → logprob: -13.250044822692871
    7. 'Com' → logprob: -14.125044822692871
    8. '-' → logprob: -14.125044822692871
    9. 'com' → logprob: -14.625044822692871
    10. 'mod' → logprob: -14.625044822692871

Token 199: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04007848724722862
    2. ' for' → logprob: -3.5400784015655518
    3. '
' → logprob: -4.915078639984131
    4. '<|end|>' → logprob: -5.915078639984131
    5. '+' → logprob: -9.040078163146973
    6. '\n' → logprob: -10.290078163146973
    7. ' 
' → logprob: -10.415078163146973
    8. '```' → logprob: -10.915078163146973
    9. '\' → logprob: -11.915078163146973
    10. ')' → logprob: -12.165078163146973

Token 200: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06317681819200516
    2. ' for' → logprob: -3.0631768703460693
    3. '
' → logprob: -4.31317663192749
    4. '\n' → logprob: -7.68817663192749
    5. '<|end|>' → logprob: -7.81317663192749
    6. '+' → logprob: -9.438177108764648
    7. '```' → logprob: -9.938177108764648
    8. ' 
' → logprob: -10.188177108764648
    9. '\' → logprob: -10.938177108764648
    10. '' → logprob: -11.563177108764648

Token 201: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1661798506975174
    2. ' for' → logprob: -1.916179895401001
    3. '0' → logprob: -6.416179656982422
    4. ')' → logprob: -6.666179656982422
    5. ' ' → logprob: -7.041179656982422
    6. '#' → logprob: -7.041179656982422
    7. '
' → logprob: -7.916179656982422
    8. '<|end|>' → logprob: -8.541179656982422
    9. '+' → logprob: -8.791179656982422
    10. '=' → logprob: -9.041179656982422

Token 202: ' commence' (ID: 44755)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.048386812210083
    2. ' =' → logprob: -1.798386812210083
    3. ' for' → logprob: -1.923386812210083
    4. '=' → logprob: -2.423386812210083
    5. '#' → logprob: -2.548386812210083
    6. '.' → logprob: -3.798386812210083
    7. 's' → logprob: -3.923386812210083
    8. ' #' → logprob: -4.798386573791504
    9. ' veux' → logprob: -4.798386573791504
    10. ' continue' → logprob: -4.923386573791504

Token 203: ' forcément' (ID: 96692)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3022494316101074
    2. ' for' → logprob: -1.9272494316101074
    3. '
' → logprob: -2.1772494316101074
    4. '\n' → logprob: -6.427249431610107
    5. '<|end|>' → logprob: -8.927249908447266
    6. ' 
' → logprob: -9.552249908447266
    7. '' → logprob: -10.427249908447266
    8. '

' → logprob: -11.302249908447266
    9. '    
' → logprob: -11.302249908447266
    10. '\' → logprob: -11.677249908447266

Token 204: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5142251253128052
    2. '0' → logprob: -1.1392251253128052
    3. ' ' → logprob: -2.5142250061035156
    4. '[' → logprob: -7.389225006103516
    5. ' une' → logprob: -9.139225006103516
    6. ' la' → logprob: -9.514225006103516
    7. '[]' → logprob: -10.514225006103516
    8. '...' → logprob: -10.639225006103516
    9. ' un' → logprob: -10.764225006103516
    10. ' le' → logprob: -10.764225006103516

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005024425219744444
    2. '0' → logprob: -5.380024433135986
    3. 'le' → logprob: -9.130023956298828
    4. 'la' → logprob: -9.130023956298828
    5. '[' → logprob: -10.255023956298828
    6. 'une' → logprob: -10.255023956298828
    7. '[]' → logprob: -10.380023956298828
    8. 'l' → logprob: -10.380023956298828
    9. ' ' → logprob: -10.630023956298828
    10. 'un' → logprob: -12.130023956298828

Token 207: ' façon' (ID: 33381)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06645949184894562
    2. ' for' → logprob: -3.4414594173431396
    3. '
' → logprob: -3.6914594173431396
    4. '<|end|>' → logprob: -4.941459655761719
    5. '+' → logprob: -9.191459655761719
    6. '```' → logprob: -10.566459655761719
    7. '<|end|>' → logprob: -10.941459655761719
    8. ' 
' → logprob: -11.566459655761719
    9. '\n' → logprob: -11.691459655761719
    10. '[' → logprob: -12.066459655761719

Token 208: '

' (ID: 279)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8713744878768921
    2. 'for' → logprob: -0.9963744878768921
    3. '<|end|>' → logprob: -1.621374487876892
    4. '
' → logprob: -4.496374607086182
    5. '\n' → logprob: -6.246374607086182
    6. '<|end|>' → logprob: -7.121374607086182
    7. ' ' → logprob: -8.496374130249023
    8. '```' → logprob: -8.496374130249023
    9. '\' → logprob: -9.246374130249023
    10. '[' → logprob: -9.496374130249023

Token 209: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003416607796680182
    2. ' for' → logprob: -8.000341415405273
    3. 'A' → logprob: -13.250341415405273
    4. ')' → logprob: -13.750341415405273
    5. 'dp' → logprob: -14.625341415405273
    6. '```' → logprob: -14.875341415405273
    7. '#' → logprob: -15.375341415405273
    8. '
' → logprob: -15.375341415405273
    9. '=' → logprob: -15.750341415405273
    10. 'i' → logprob: -15.750341415405273

Token 210: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16182251274585724
    2. 'i' → logprob: -2.036822557449341
    3. ' length' → logprob: -5.411822319030762
    4. ' a' → logprob: -5.661822319030762
    5. ' k' → logprob: -5.911822319030762
    6. 'a' → logprob: -6.036822319030762
    7. ' x' → logprob: -6.036822319030762
    8. 'x' → logprob: -7.161822319030762
    9. 'k' → logprob: -7.286822319030762
    10. ' num' → logprob: -8.286822319030762

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026345815509557724
    2. 'in' → logprob: -3.651345729827881
    3. ' ' → logprob: -10.276346206665039
    4. ',' → logprob: -13.776346206665039
    5. '	in' → logprob: -13.776346206665039
    6. 'k' → logprob: -13.901346206665039
    7. '1' → logprob: -14.026346206665039
    8. '_in' → logprob: -14.026346206665039
    9. ' ' → logprob: -14.151346206665039
    10. '_' → logprob: -14.338846206665039

Token 212: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002477677771821618
    2. ' range' → logprob: -6.002477645874023
    3. '(range' → logprob: -14.252477645874023
    4. 'rang' → logprob: -15.502477645874023
    5. 'in' → logprob: -15.877477645874023
    6. '   ' → logprob: -15.877477645874023
    7. ')' → logprob: -15.877477645874023
    8. ' ' → logprob: -15.877477645874023
    9. '	range' → logprob: -16.002477645874023
    10. '  ' → logprob: -16.377477645874023

Token 213: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03808923065662384
    2. '(K' → logprob: -3.2880892753601074
    3. '(k' → logprob: -10.28808879852295
    4. '1' → logprob: -11.53808879852295
    5. ' (' → logprob: -13.53808879852295
    6. 'K' → logprob: -13.66308879852295
    7. '(N' → logprob: -13.91308879852295
    8. '((' → logprob: -15.66308879852295
    9. '(
' → logprob: -16.413089752197266
    10. ' K' → logprob: -16.413089752197266

Token 214: '):' (ID: 3127)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47799229621887207
    2. '):' → logprob: -0.9779922962188721
    3. ' +' → logprob: -5.727992057800293
    4. '):
' → logprob: -7.852992057800293
    5. ' ):' → logprob: -8.352992057800293
    6. ',' → logprob: -11.477992057800293
    7. ')' → logprob: -11.727992057800293
    8. ':' → logprob: -12.352992057800293
    9. '+:' → logprob: -12.602992057800293
    10. '1' → logprob: -14.227992057800293

Token 215: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4396340847015381
    2. ' for' → logprob: -1.564634084701538
    3. ' new' → logprob: -3.189634084701538
    4. 'for' → logprob: -3.314634084701538
    5. 'DP' → logprob: -3.689634084701538
    6. ' DP' → logprob: -3.814634084701538
    7. ' next' → logprob: -4.814634323120117
    8. 'new' → logprob: -5.064634323120117
    9. 'next' → logprob: -6.189634323120117
    10. 'temp' → logprob: -6.689634323120117

Token 216: ' #' (ID: 1069)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.5442327857017517
    2. '   ' → logprob: -1.6692328453063965
    3. 'new' → logprob: -1.7942328453063965
    4. 'next' → logprob: -3.9192328453063965
    5. ' new' → logprob: -4.1692328453063965
    6. 'for' → logprob: -4.5442328453063965
    7. ' DP' → logprob: -4.5442328453063965
    8. 'temp' → logprob: -6.0442328453063965
    9. ' next' → logprob: -6.0442328453063965
    10. 'tmp' → logprob: -6.5442328453063965

Token 217: ' c' (ID: 274)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -1.2210495471954346
    2. 'for' → logprob: -1.3460495471954346
    3. 'new' → logprob: -1.7210495471954346
    4. ' new' → logprob: -2.0960495471954346
    5. ' DP' → logprob: -3.0960495471954346
    6. ' for' → logprob: -3.4710495471954346
    7. 'next' → logprob: -3.4710495471954346
    8. ' next' → logprob: -4.3460493087768555
    9. 'temp' → logprob: -4.9710493087768555
    10. '   ' → logprob: -4.9710493087768555

Token 218: ''est' (ID: 6616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28279736638069153
    2. 'range' → logprob: -2.907797336578369
    3. 'om' → logprob: -3.782797336578369
    4. 'omme' → logprob: -3.782797336578369
    5. 'ol' → logprob: -4.282797336578369
    6. '   ' → logprob: -4.282797336578369
    7. 'on' → logprob: -4.532797336578369
    8. 'ont' → logprob: -4.657797336578369
    9. '#' → logprob: -4.657797336578369
    10. ' for' → logprob: -4.782797336578369

Token 219: ' cens' (ID: 55288)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2033831775188446
    2. ' range' → logprob: -2.703383207321167
    3. 'k' → logprob: -3.328383207321167
    4. 'for' → logprob: -3.703383207321167
    5. ' k' → logprob: -3.953383207321167
    6. ' for' → logprob: -4.578382968902588
    7. '   ' → logprob: -5.828382968902588
    8. '_' → logprob: -5.828382968902588
    9. 'à' → logprob: -6.078382968902588
    10. ' ' → logprob: -6.078382968902588

Token 220: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0005121642025187612
    2. 'és' → logprob: -8.75051212310791
    3. '#' → logprob: -9.37551212310791
    4. 'sé' → logprob: -9.50051212310791
    5. 'u' → logprob: -10.00051212310791
    6. 'sens' → logprob: -10.62551212310791
    7. '```' → logprob: -10.62551212310791
    8. 's' → logprob: -10.87551212310791
    9. '   ' → logprob: -10.87551212310791
    10. 'cé' → logprob: -11.12551212310791

Token 221: ' faire' (ID: 8119)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7923116087913513
    2. 'for' → logprob: -2.042311668395996
    3. 'in' → logprob: -2.167311668395996
    4. '   ' → logprob: -2.417311668395996
    5. ' in' → logprob: -2.792311668395996
    6. ':' → logprob: -3.167311668395996
    7. 'range' → logprob: -3.542311668395996
    8. ' #' → logprob: -3.667311668395996
    9. ' for' → logprob: -3.917311668395996
    10. ' ' → logprob: -4.792311668395996

Token 222: ' K' (ID: 658)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.45292869210243225
    2. 'for' → logprob: -1.8279286623001099
    3. 'N' → logprob: -1.9529286623001099
    4. ' range' → logprob: -4.32792854309082
    5. ' for' → logprob: -4.57792854309082
    6. '1' → logprob: -4.57792854309082
    7. ' N' → logprob: -4.70292854309082
    8. 'la' → logprob: -5.57792854309082
    9. ' ' → logprob: -6.20292854309082
    10. '#' → logprob: -6.32792854309082

Token 223: ' étapes' (ID: 96583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4338464140892029
    2. ' for' → logprob: -1.5588464736938477
    3. '   ' → logprob: -2.5588464736938477
    4. 'DP' → logprob: -3.4338464736938477
    5. 'range' → logprob: -4.058846473693848
    6. 'dp' → logprob: -5.808846473693848
    7. ' range' → logprob: -6.183846473693848
    8. ' DP' → logprob: -6.433846473693848
    9. ' ' → logprob: -6.683846473693848
    10. '#' → logprob: -6.683846473693848

Token 224: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7212317585945129
    2. ' for' → logprob: -0.9712317585945129
    3. 'for' → logprob: -2.471231698989868
    4. ' ' → logprob: -3.721231698989868
    5. '<|end|>' → logprob: -3.971231698989868
    6. '    
' → logprob: -6.471231937408447
    7. '  ' → logprob: -6.596231937408447
    8. '    ' → logprob: -6.846231937408447
    9. ' 
' → logprob: -7.096231937408447
    10. '	for' → logprob: -7.471231937408447

Token 225: ' ok' (ID: 4763)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.057883858680725
    2. 'DP' → logprob: -1.057883858680725
    3. 'for' → logprob: -1.807883858680725
    4. 'next' → logprob: -2.3078837394714355
    5. '   ' → logprob: -4.3078837394714355
    6. ' new' → logprob: -4.6828837394714355
    7. 'temp' → logprob: -5.0578837394714355
    8. 'nd' → logprob: -5.8078837394714355
    9. ' next' → logprob: -5.9328837394714355
    10. 'tmp' → logprob: -6.3078837394714355

Token 226: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9559977650642395
    2. ' for' → logprob: -1.2059977054595947
    3. '   ' → logprob: -1.7059977054595947
    4. 'DP' → logprob: -2.2059977054595947
    5. 'new' → logprob: -5.205997943878174
    6. 'dp' → logprob: -5.330997943878174
    7. ' DP' → logprob: -5.830997943878174
    8. ' new' → logprob: -5.830997943878174
    9. '    ' → logprob: -5.955997943878174
    10. 'next' → logprob: -6.830997943878174

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0208584070205688
    2. ' for' → logprob: -1.2708584070205688
    3. 'for' → logprob: -1.7708584070205688
    4. 'DP' → logprob: -2.1458582878112793
    5. ' new' → logprob: -3.6458582878112793
    6. ' DP' → logprob: -4.020858287811279
    7. 'new' → logprob: -4.645858287811279
    8. ' next' → logprob: -5.020858287811279
    9. 'next' → logprob: -5.395858287811279
    10. 'dp' → logprob: -5.770858287811279

Token 228: ' use' (ID: 1199)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.18418598175048828
    2. 'DP' → logprob: -2.4341859817504883
    3. 'next' → logprob: -3.0591859817504883
    4. ' new' → logprob: -4.059185981750488
    5. 'nd' → logprob: -5.809185981750488
    6. 'tmp' → logprob: -5.934185981750488
    7. 'for' → logprob: -6.059185981750488
    8. 'temp' → logprob: -6.184185981750488
    9. ' next' → logprob: -6.309185981750488
    10. ' DP' → logprob: -6.559185981750488

Token 229: ' =' (ID: 314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.038535065948963165
    2. 'r' → logprob: -3.9135351181030273
    3. ' =' → logprob: -4.163535118103027
    4. '=' → logprob: -7.038535118103027
    5. 'rs' → logprob: -7.788535118103027
    6. 'dp' → logprob: -8.288535118103027
    7. 'ful' → logprob: -8.413535118103027
    8. 'D' → logprob: -8.663535118103027
    9. 'DP' → logprob: -9.788535118103027
    10. 'f' → logprob: -10.288535118103027

Token 230: ' A' (ID: 355)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00035357745946384966
    2. ' [' → logprob: -8.375353813171387
    3. '[A' → logprob: -10.250353813171387
    4. '0' → logprob: -10.875353813171387
    5. '[int' → logprob: -11.125353813171387
    6. '[]' → logprob: -11.500353813171387
    7. '[len' → logprob: -12.250353813171387
    8. '[k' → logprob: -12.375353813171387
    9. '[N' → logprob: -12.375353813171387
    10. '[a' → logprob: -12.625353813171387

Token 231: '[k' (ID: 14298)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.1275617778301239
    2. '[:' → logprob: -2.6275618076324463
    3. '.copy' → logprob: -3.2525618076324463
    4. '[k' → logprob: -5.752561569213867
    5. '[' → logprob: -5.877561569213867
    6. '[::-' → logprob: -6.127561569213867
    7. '.count' → logprob: -9.252561569213867
    8. '<|end|>' → logprob: -9.502561569213867
    9. '[:-' → logprob: -9.627561569213867
    10. '.' → logprob: -9.877561569213867

Token 232: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004047767724841833
    2. ']
' → logprob: -5.754047870635986
    3. ' ]' → logprob: -7.879047870635986
    4. '-' → logprob: -8.504047393798828
    5. ']

' → logprob: -9.504047393798828
    6. ']+' → logprob: -9.879047393798828
    7. ']-' → logprob: -10.129047393798828
    8. ']
' → logprob: -10.754047393798828
    9. '%' → logprob: -10.879047393798828
    10. ']%' → logprob: -11.004047393798828

Token 233: '   ' (ID: 271)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.9904281497001648
    2. ' DP' → logprob: -1.6154282093048096
    3. ' for' → logprob: -1.9904282093048096
    4. '   ' → logprob: -1.9904282093048096
    5. '[' → logprob: -3.2404282093048096
    6. 'for' → logprob: -3.4904282093048096
    7. ' new' → logprob: -3.6154282093048096
    8. ' 
' → logprob: -4.4904279708862305
    9. '    
' → logprob: -4.4904279708862305
    10. '
' → logprob: -5.2404279708862305

Token 234: ' N' (ID: 478)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.17057950794696808
    2. 'next' → logprob: -2.420579433441162
    3. 'for' → logprob: -3.045579433441162
    4. 'DP' → logprob: -5.045579433441162
    5. 'n' → logprob: -5.170579433441162
    6. 'nd' → logprob: -5.545579433441162
    7. 'tmp' → logprob: -6.420579433441162
    8. 'temp' → logprob: -6.920579433441162
    9. 'nou' → logprob: -7.670579433441162
    10. 'ND' → logprob: -8.29557991027832

Token 235: 'DP' (ID: 16851)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.5475908517837524
    2. 'for' → logprob: -1.6725908517837524
    3. 'ext' → logprob: -2.547590732574463
    4. '+' → logprob: -2.922590732574463
    5. 'w' → logprob: -3.547590732574463
    6. '-=' → logprob: -3.547590732574463
    7. '-' → logprob: -4.797590732574463
    8. 'DP' → logprob: -5.047590732574463
    9. '=' → logprob: -5.547590732574463
    10. 'new' → logprob: -5.797590732574463

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054914891719818115
    2. '=' → logprob: -2.929914951324463
    3. '[' → logprob: -10.804914474487305
    4. '=[' → logprob: -11.554914474487305
    5. ' =[' → logprob: -13.429914474487305
    6. ']' → logprob: -15.054914474487305
    7. ' ' → logprob: -15.054914474487305
    8. ',' → logprob: -15.554914474487305
    9. '[:]' → logprob: -15.804914474487305
    10. ' [' → logprob: -16.054914474487305

Token 237: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028060602489858866
    2. ' [' → logprob: -5.877806186676025
    3. '0' → logprob: -14.252805709838867
    4. ' ' → logprob: -16.002805709838867
    5. '[N' → logprob: -16.002805709838867
    6. '[-' → logprob: -17.377805709838867
    7. '([' → logprob: -17.627805709838867
    8. '   ' → logprob: -17.752805709838867
    9. '[]' → logprob: -17.877805709838867
    10. 'DP' → logprob: -18.002805709838867

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '[' → logprob: -16.625001907348633
    4. ')' → logprob: -17.375001907348633
    5. ']' → logprob: -17.687501907348633
    6. '۰' → logprob: -18.062501907348633
    7. '(' → logprob: -18.125001907348633
    8. 'False' → logprob: -18.625001907348633
    9. ' [' → logprob: -18.875001907348633
    10. '000' → logprob: -19.062501907348633

Token 239: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030414804816246033
    2. ']*(' → logprob: -3.6554148197174072
    3. ' *' → logprob: -6.280414581298828
    4. '*(' → logprob: -7.030414581298828
    5. ' for' → logprob: -7.405414581298828
    6. ']*' → logprob: -8.155414581298828
    7. '*' → logprob: -8.280414581298828
    8. ')' → logprob: -9.780414581298828
    9. 'for' → logprob: -9.780414581298828
    10. '(N' → logprob: -10.280414581298828

Token 240: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.08749641478061676
    2. ' *' → logprob: -3.087496519088745
    3. '*' → logprob: -3.837496519088745
    4. ' for' → logprob: -5.087496280670166
    5. 'for' → logprob: -5.587496280670166
    6. ']*(' → logprob: -5.587496280670166
    7. ')' → logprob: -6.712496280670166
    8. '(N' → logprob: -7.587496280670166
    9. '
' → logprob: -8.337496757507324
    10. ']' → logprob: -8.337496757507324

Token 241: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.721228368813172e-05
    2. ' (' → logprob: -9.375086784362793
    3. '(n' → logprob: -14.125086784362793
    4. '(' → logprob: -14.250086784362793
    5. '   ' → logprob: -14.875086784362793
    6. '(len' → logprob: -15.125086784362793
    7. '((' → logprob: -15.625086784362793
    8. 'N' → logprob: -17.75008773803711
    9. ' ' → logprob: -18.12508773803711
    10. '(D' → logprob: -18.12508773803711

Token 242: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.38694480061531067
    2. '(N' → logprob: -1.1369447708129883
    3. ' N' → logprob: -10.386944770812988
    4. ' (' → logprob: -10.761944770812988
    5. '   ' → logprob: -12.386944770812988
    6. '
' → logprob: -12.386944770812988
    7. '(' → logprob: -12.636944770812988
    8. '	N' → logprob: -13.261944770812988
    9. 'len' → logprob: -13.511944770812988
    10. '[N' → logprob: -13.636944770812988

Token 243: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2200749754119897e-06
    2. ' +' → logprob: -13.250001907348633
    3. '1' → logprob: -15.125001907348633
    4. '+
' → logprob: -16.000001907348633
    5. '```' → logprob: -18.375001907348633
    6. '()+' → logprob: -18.750001907348633
    7. 'plus' → logprob: -19.625001907348633
    8. '﻿' → logprob: -19.750001907348633
    9. ')+' → logprob: -20.000001907348633
    10. '
' → logprob: -20.250001907348633

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -14.000001907348633
    3. '2' → logprob: -14.500001907348633
    4. '```' → logprob: -15.500001907348633
    5. '+' → logprob: -15.625001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '(' → logprob: -17.500001907348633
    8. '(N' → logprob: -18.187501907348633
    9. '
' → logprob: -18.625001907348633
    10. '0' → logprob: -18.875001907348633

Token 245: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011076593771576881
    2. ')
' → logprob: -4.5110764503479
    3. '   ' → logprob: -11.136076927185059
    4. ')
' → logprob: -11.761076927185059
    5. ')

' → logprob: -13.261076927185059
    6. ' )' → logprob: -13.386076927185059
    7. ']' → logprob: -13.636076927185059
    8. ')]' → logprob: -14.011076927185059
    9. '
' → logprob: -14.761076927185059
    10. '）' → logprob: -14.886076927185059

Token 246: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2661058008670807
    2. '   ' → logprob: -1.5161057710647583
    3. ' for' → logprob: -4.266105651855469
    4. '	for' → logprob: -10.266105651855469
    5. '<|end|>' → logprob: -12.641105651855469
    6. '    
' → logprob: -14.516105651855469
    7. '  ' → logprob: -14.516105651855469
    8. '```' → logprob: -15.391105651855469
    9. ' ' → logprob: -15.516105651855469
    10. '       ' → logprob: -15.641105651855469

Token 247: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0020323728676885366
    2. 'prefix' → logprob: -7.502032279968262
    3. 'sum' → logprob: -8.002032279968262
    4. 'acc' → logprob: -8.502032279968262
    5. 's' → logprob: -8.627032279968262
    6. 'cum' → logprob: -9.002032279968262
    7. 'ptr' → logprob: -9.252032279968262
    8. 'j' → logprob: -9.627032279968262
    9. 'pos' → logprob: -9.752032279968262
    10. 'cur' → logprob: -9.752032279968262

Token 248: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28908687829971313
    2. 'i' → logprob: -2.2890868186950684
    3. ' j' → logprob: -2.5390868186950684
    4. 'j' → logprob: -3.9140868186950684
    5. ' x' → logprob: -4.289086818695068
    6. ' length' → logprob: -4.789086818695068
    7. 'x' → logprob: -5.414086818695068
    8. ' l' → logprob: -5.539086818695068
    9. ' pos' → logprob: -6.289086818695068
    10. 'l' → logprob: -6.289086818695068

Token 249: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01607859693467617
    2. 'in' → logprob: -4.141078472137451
    3. '+' → logprob: -12.01607894897461
    4. ' ' → logprob: -12.14107894897461
    5. 'range' → logprob: -12.14107894897461
    6. '(' → logprob: -12.26607894897461
    7. '_' → logprob: -13.01607894897461
    8. '	in' → logprob: -13.01607894897461
    9. '```' → logprob: -13.01607894897461
    10. ')' → logprob: -13.14107894897461

Token 250: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038051363080739975
    2. ' range' → logprob: -3.2880513668060303
    3. '(range' → logprob: -12.28805160522461
    4. ')' → logprob: -13.66305160522461
    5. '   ' → logprob: -13.66305160522461
    6. ' ' → logprob: -14.03805160522461
    7. 'in' → logprob: -14.78805160522461
    8. 'rang' → logprob: -14.91305160522461
    9. ' in' → logprob: -15.03805160522461
    10. '	range' → logprob: -15.03805160522461

Token 251: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.014316628687083721
    2. '(' → logprob: -4.264316558837891
    3. '(i' → logprob: -9.51431655883789
    4. '(len' → logprob: -9.88931655883789
    5. '(use' → logprob: -11.38931655883789
    6. ' (' → logprob: -12.13931655883789
    7. '(n' → logprob: -12.38931655883789
    8. '(A' → logprob: -12.88931655883789
    9. '(M' → logprob: -13.88931655883789
    10. '1' → logprob: -14.38931655883789

Token 252: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001265355502255261
    2. '):' → logprob: -7.501265525817871
    3. ' +' → logprob: -7.751265525817871
    4. '):
' → logprob: -8.251265525817871
    5. '-' → logprob: -11.501265525817871
    6. '   ' → logprob: -12.251265525817871
    7. ',' → logprob: -12.876265525817871
    8. '+
' → logprob: -14.001265525817871
    9. ' -' → logprob: -14.251265525817871
    10. ')' → logprob: -14.501265525817871

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '2' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '+' → logprob: -18.500001907348633
    6. ')' → logprob: -18.875001907348633
    7. '0' → logprob: -18.875001907348633
    8. '```' → logprob: -19.812501907348633
    9. '(' → logprob: -19.875001907348633
    10. '１' → logprob: -20.125001907348633

Token 254: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016076013445854187
    2. '):
' → logprob: -4.14107608795166
    3. ')' → logprob: -11.14107608795166
    4. '   ' → logprob: -11.64107608795166
    5. ':' → logprob: -12.01607608795166
    6. '):
' → logprob: -12.01607608795166
    7. '+' → logprob: -13.14107608795166
    8. '):

' → logprob: -13.64107608795166
    9. ' ):' → logprob: -13.76607608795166
    10. '       ' → logprob: -14.01607608795166

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2857992947101593
    2. 'for' → logprob: -1.535799264907837
    3. ' for' → logprob: -3.410799264907837
    4. 'if' → logprob: -8.535799026489258
    5. '   ' → logprob: -9.785799026489258
    6. ' if' → logprob: -10.910799026489258
    7. '	for' → logprob: -11.410799026489258
    8. '```' → logprob: -13.035799026489258
    9. '	   ' → logprob: -13.660799026489258
    10. '	' → logprob: -14.160799026489258

Token 256: ' AN' (ID: 3473)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004496465437114239
    2. 'if' → logprob: -5.8794965744018555
    3. '   ' → logprob: -7.0044965744018555
    4. ' for' → logprob: -8.129496574401855
    5. '       ' → logprob: -8.629496574401855
    6. 'val' → logprob: -9.754496574401855
    7. 'step' → logprob: -10.004496574401855
    8. 'limit' → logprob: -10.004496574401855
    9. 'j' → logprob: -10.379496574401855
    10. 'max' → logprob: -10.754496574401855

Token 257: 'S' (ID: 50)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.28624528646469116
    2. 'D' → logprob: -1.911245346069336
    3. '=' → logprob: -3.036245346069336
    4. 'swer' → logprob: -3.411245346069336
    5. ' =' → logprob: -4.661245346069336
    6. 'S' → logprob: -5.161245346069336
    7. 's' → logprob: -6.786245346069336
    8. 'for' → logprob: -7.286245346069336
    9. '=i' → logprob: -7.786245346069336
    10. 'i' → logprob: -8.286245346069336

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03621385991573334
    2. ' =' → logprob: -3.4112138748168945
    3. 'for' → logprob: -6.4112138748168945
    4. '+=' → logprob: -7.4112138748168945
    5. '=N' → logprob: -9.536213874816895
    6. '   ' → logprob: -10.036213874816895
    7. '=
' → logprob: -10.161213874816895
    8. '=int' → logprob: -10.536213874816895
    9. '=i' → logprob: -10.786213874816895
    10. ' +=' → logprob: -11.036213874816895

Token 259: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07713595777750015
    2. '(' → logprob: -2.9521360397338867
    3. 'DP' → logprob: -5.202136039733887
    4. ' ' → logprob: -5.452136039733887
    5. '(N' → logprob: -5.452136039733887
    6. ' (' → logprob: -5.452136039733887
    7. '(D' → logprob: -7.202136039733887
    8. 'Com' → logprob: -7.577136039733887
    9. '(i' → logprob: -7.827136039733887
    10. ' DP' → logprob: -7.952136039733887

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28258684277534485
    2. '(' → logprob: -2.5325868129730225
    3. 'DP' → logprob: -2.5325868129730225
    4. '(N' → logprob: -2.6575868129730225
    5. '(D' → logprob: -5.032587051391602
    6. '(i' → logprob: -5.532587051391602
    7. 'N' → logprob: -6.532587051391602
    8. 'Com' → logprob: -6.657587051391602
    9. 'sum' → logprob: -7.282587051391602
    10. '(A' → logprob: -7.532587051391602

Token 261: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9438870549201965
    2. '
' → logprob: -1.3188869953155518
    3. '       ' → logprob: -1.8188869953155518
    4. ' for' → logprob: -2.1938869953155518
    5. '<|end|>' → logprob: -3.0688869953155518
    6. 'for' → logprob: -4.943887233734131
    7. ' 
' → logprob: -5.443887233734131
    8. ' ' → logprob: -5.943887233734131
    9. '    
' → logprob: -6.068887233734131
    10. '        
' → logprob: -6.568887233734131

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04965909197926521
    2. ' for' → logprob: -3.549659013748169
    3. '   ' → logprob: -4.674659252166748
    4. 'for' → logprob: -4.799659252166748
    5. '<|end|>' → logprob: -6.674659252166748
    6. ' ' → logprob: -8.42465877532959
    7. '	' → logprob: -8.79965877532959
    8. '        
' → logprob: -9.04965877532959
    9. '	for' → logprob: -9.04965877532959
    10. '	   ' → logprob: -9.42465877532959

Token 263: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013272935524582863
    2. ' for' → logprob: -4.388272762298584
    3. '   ' → logprob: -7.263272762298584
    4. '       ' → logprob: -10.388273239135742
    5. 'j' → logprob: -11.513273239135742
    6. ')' → logprob: -12.138273239135742
    7. '	for' → logprob: -12.513273239135742
    8. '<|end|>' → logprob: -12.638273239135742
    9. 'range' → logprob: -13.013273239135742
    10. '```' → logprob: -13.263273239135742

Token 264: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029334424063563347
    2. 'x' → logprob: -3.904334306716919
    3. 'l' → logprob: -5.279334545135498
    4. 'length' → logprob: -6.904334545135498
    5. 'r' → logprob: -7.654334545135498
    6. ' j' → logprob: -8.15433406829834
    7. 'w' → logprob: -8.15433406829834
    8. 'p' → logprob: -8.77933406829834
    9. 'd' → logprob: -8.77933406829834
    10. 'nb' → logprob: -9.27933406829834

Token 265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010569837177172303
    2. 'in' → logprob: -6.876057147979736
    3. 'range' → logprob: -12.126056671142578
    4. ' i' → logprob: -12.501056671142578
    5. ',' → logprob: -12.751056671142578
    6. '(i' → logprob: -13.001056671142578
    7. '=' → logprob: -13.126056671142578
    8. '       ' → logprob: -13.376056671142578
    9. ')' → logprob: -13.376056671142578
    10. ' range' → logprob: -13.626056671142578

Token 266: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04861791059374809
    2. ' range' → logprob: -3.0486178398132324
    3. '(range' → logprob: -11.17361831665039
    4. '   ' → logprob: -11.54861831665039
    5. ' ' → logprob: -13.17361831665039
    6. 'i' → logprob: -13.67361831665039
    7. '
' → logprob: -14.42361831665039
    8. '  ' → logprob: -14.42361831665039
    9. 'r' → logprob: -14.67361831665039
    10. '	range' → logprob: -15.04861831665039

Token 267: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001093903905712068
    2. '(N' → logprob: -7.251093864440918
    3. '(use' → logprob: -8.501093864440918
    4. '(' → logprob: -9.001093864440918
    5. '(min' → logprob: -10.376093864440918
    6. 'i' → logprob: -11.501093864440918
    7. '(A' → logprob: -12.876093864440918
    8. '(range' → logprob: -13.001093864440918
    9. 'use' → logprob: -13.126093864440918
    10. ' (' → logprob: -13.126093864440918

Token 268: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0058839949779212475
    2. ',' → logprob: -5.755884170532227
    3. ' +' → logprob: -6.005884170532227
    4. '+i' → logprob: -9.130884170532227
    5. '):' → logprob: -9.755884170532227
    6. ' ,' → logprob: -11.255884170532227
    7. '+,' → logprob: -11.255884170532227
    8. ',i' → logprob: -11.505884170532227
    9. '   ' → logprob: -12.005884170532227
    10. ',N' → logprob: -12.130884170532227

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.167648876318708e-05
    2. ' ' → logprob: -10.375041961669922
    3. '2' → logprob: -12.375041961669922
    4. '
' → logprob: -12.500041961669922
    5. '   ' → logprob: -14.312541961669922
    6. '```' → logprob: -15.062541961669922
    7. '           ' → logprob: -15.250041961669922
    8. ')' → logprob: -15.375041961669922
    9. '       ' → logprob: -15.750041961669922
    10. '0' → logprob: -16.000041961669922

Token 270: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2520480453968048
    2. '):
' → logprob: -1.5020480155944824
    3. '       ' → logprob: -9.87704849243164
    4. '):
' → logprob: -11.00204849243164
    5. ')' → logprob: -11.12704849243164
    6. '+' → logprob: -11.75204849243164
    7. ':' → logprob: -12.37704849243164
    8. '   ' → logprob: -12.50204849243164
    9. '           ' → logprob: -12.50204849243164
    10. ' ):' → logprob: -12.62704849243164

Token 271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009089602972380817
    2. '	       ' → logprob: -8.125908851623535
    3. '<|end|>' → logprob: -9.125908851623535
    4. '               ' → logprob: -9.250908851623535
    5. '            ' → logprob: -9.750908851623535
    6. ' ' → logprob: -9.750908851623535
    7. '		' → logprob: -9.875908851623535
    8. ',' → logprob: -9.875908851623535
    9. ' ' → logprob: -10.500908851623535
    10. '       ' → logprob: -11.000908851623535

Token 272: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1103307008743286
    2. '               ' → logprob: -1.1103307008743286
    3. 'N' → logprob: -1.3603307008743286
    4. 'if' → logprob: -2.860330581665039
    5. 'ANS' → logprob: -4.235330581665039
    6. ' if' → logprob: -4.860330581665039
    7. ' N' → logprob: -6.735330581665039
    8. '```' → logprob: -6.985330581665039
    9. '                
' → logprob: -7.360330581665039
    10. 'ans' → logprob: -7.610330581665039

Token 273: ' attention' (ID: 8684)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.06129463016986847
    2. 'if' → logprob: -3.6862945556640625
    3. 'N' → logprob: -4.3112945556640625
    4. 'ans' → logprob: -5.0612945556640625
    5. 'AN' → logprob: -5.0612945556640625
    6. '           ' → logprob: -5.1862945556640625
    7. 'val' → logprob: -6.6862945556640625
    8. 'DP' → logprob: -8.061294555664062
    9. '               ' → logprob: -8.686294555664062
    10. 'term' → logprob: -8.811294555664062

Token 274: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04545910283923149
    2. '           ' → logprob: -3.795459032058716
    3. ' if' → logprob: -4.545459270477295
    4. ' N' → logprob: -5.420459270477295
    5. ',' → logprob: -6.045459270477295
    6. ')' → logprob: -6.795459270477295
    7. 'N' → logprob: -7.170459270477295
    8. '):
' → logprob: -7.795459270477295
    9. ' ' → logprob: -8.045458793640137
    10. '                       ' → logprob: -8.545458793640137

Token 275: ' ne' (ID: 453)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5330855250358582
    2. ' j' → logprob: -1.783085584640503
    3. 'Com' → logprob: -2.283085584640503
    4. ' Com' → logprob: -2.283085584640503
    5. ' (' → logprob: -4.533085346221924
    6. '(' → logprob: -4.533085346221924
    7. '(j' → logprob: -4.533085346221924
    8. ' use' → logprob: -6.783085346221924
    9. 'i' → logprob: -6.908085346221924
    10. '(N' → logprob: -7.033085346221924

Token 276: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.22604802250862122
    2. ' pas' → logprob: -1.6010479927062988
    3. 'j' → logprob: -8.601048469543457
    4. ' j' → logprob: -9.226048469543457
    5. '           ' → logprob: -9.726048469543457
    6. 'Pas' → logprob: -9.976048469543457
    7. '+' → logprob: -10.101048469543457
    8. 'plus' → logprob: -10.226048469543457
    9. 'pass' → logprob: -10.226048469543457
    10. '_pas' → logprob: -10.601048469543457

Token 277: ' dépasser' (ID: 187375)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -1.6919766664505005
    2. 'overflow' → logprob: -1.9419766664505005
    3. ' exceed' → logprob: -2.191976547241211
    4. ' j' → logprob: -2.441976547241211
    5. ' out' → logprob: -2.566976547241211
    6. 'j' → logprob: -2.566976547241211
    7. 'index' → logprob: -2.691976547241211
    8. ' dépasser' → logprob: -3.066976547241211
    9. ' overflow' → logprob: -3.441976547241211
    10. 'indent' → logprob: -4.066976547241211

Token 278: ' les' (ID: 1341)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7210272550582886
    2. 'N' → logprob: -1.7210272550582886
    3. '           ' → logprob: -1.7210272550582886
    4. '(N' → logprob: -2.721027374267578
    5. ' N' → logprob: -2.971027374267578
    6. 'j' → logprob: -4.846027374267578
    7. ' j' → logprob: -4.971027374267578
    8. '```' → logprob: -5.846027374267578
    9. ' if' → logprob: -6.346027374267578
    10. '[N' → logprob: -6.471027374267578

Token 279: ' born' (ID: 12275)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13670766353607178
    2. 'len' → logprob: -2.3867077827453613
    3. 'i' → logprob: -4.136707782745361
    4. 'N' → logprob: -4.511707782745361
    5. 'indices' → logprob: -5.261707782745361
    6. 'index' → logprob: -7.386707782745361
    7. 'k' → logprob: -7.636707782745361
    8. 'indexes' → logprob: -7.761707782745361
    9. 'range' → logprob: -8.136707305908203
    10. 'lim' → logprob: -8.511707305908203

Token 280: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.16047494113445282
    2. 'd' → logprob: -3.285475015640259
    3. 's' → logprob: -3.535475015640259
    4. 'res' → logprob: -4.28547477722168
    5. 'j' → logprob: -4.78547477722168
    6. 'ces' → logprob: -4.91047477722168
    7. 'ières' → logprob: -4.91047477722168
    8. 'ds' → logprob: -5.03547477722168
    9. 'jes' → logprob: -5.16047477722168
    10. '[j' → logprob: -5.41047477722168

Token 281: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16083967685699463
    2. '               ' → logprob: -2.785839557647705
    3. ' N' → logprob: -3.160839557647705
    4. 'N' → logprob: -3.160839557647705
    5. ' if' → logprob: -7.785839557647705
    6. '```' → logprob: -8.035840034484863
    7. ')' → logprob: -8.410840034484863
    8. '(N' → logprob: -8.535840034484863
    9. ' ' → logprob: -8.910840034484863
    10. '       ' → logprob: -8.910840034484863

Token 282: ' enfin' (ID: 50642)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06671222299337387
    2. ' if' → logprob: -3.1917121410369873
    3. '               ' → logprob: -4.691712379455566
    4. ' N' → logprob: -4.941712379455566
    5. 'if' → logprob: -5.691712379455566
    6. 'N' → logprob: -6.441712379455566
    7. '            ' → logprob: -7.816712379455566
    8. ' ans' → logprob: -7.941712379455566
    9. '```' → logprob: -8.816712379455566
    10. '            
' → logprob: -9.191712379455566

Token 283: ' je' (ID: 1264)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5832491517066956
    2. ' if' → logprob: -1.0832490921020508
    3. 'if' → logprob: -2.458249092102051
    4. '               ' → logprob: -4.208249092102051
    5. ' j' → logprob: -7.833249092102051
    6. 'len' → logprob: -8.20824909210205
    7. '```' → logprob: -8.20824909210205
    8. ' N' → logprob: -8.33324909210205
    9. '                   ' → logprob: -8.58324909210205
    10. 'range' → logprob: -8.70824909210205

Token 284: ' crois' (ID: 65485)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4743288457393646
    2. 'if' → logprob: -3.2243287563323975
    3. ' j' → logprob: -3.2243287563323975
    4. 's' → logprob: -3.3493287563323975
    5. ' continue' → logprob: -3.4743287563323975
    6. ')' → logprob: -3.4743287563323975
    7. 'ans' → logprob: -3.5993287563323975
    8. 'continue' → logprob: -3.5993287563323975
    9. ':' → logprob: -3.7243287563323975
    10. ' if' → logprob: -3.8493287563323975

Token 285: '...
' (ID: 4908)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20911987125873566
    2. '               ' → logprob: -1.7091199159622192
    3. ')' → logprob: -5.83411979675293
    4. ',' → logprob: -7.08411979675293
    5. '<|end|>' → logprob: -7.08411979675293
    6. ' ' → logprob: -7.33411979675293
    7. 'N' → logprob: -7.70911979675293
    8. ' N' → logprob: -7.95911979675293
    9. '(N' → logprob: -8.45911979675293
    10. '                       ' → logprob: -9.08411979675293

Token 286: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04422038421034813
    2. '               ' → logprob: -3.169220447540283
    3. ' if' → logprob: -7.794220447540283
    4. '```' → logprob: -8.669219970703125
    5. ' N' → logprob: -8.794219970703125
    6. 'N' → logprob: -9.044219970703125
    7. 'if' → logprob: -9.544219970703125
    8. '                   ' → logprob: -9.919219970703125
    9. '            
' → logprob: -9.919219970703125
    10. '       ' → logprob: -10.169219970703125

Token 287: ' if' (ID: 538)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4628992974758148
    2. '           ' → logprob: -1.8378993272781372
    3. 'ANS' → logprob: -2.0878992080688477
    4. '               ' → logprob: -3.0878992080688477
    5. ' N' → logprob: -4.087899208068848
    6. 'if' (adapté à ' if') → logprob: -4.337899208068848
    7. ' if' → logprob: -4.962899208068848
    8. 'AN' → logprob: -6.837899208068848
    9. ' AN' → logprob: -7.212899208068848
    10. 'ans' → logprob: -7.462899208068848

Token 288: ' use' (ID: 1199)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.168028324842453
    2. 'i' → logprob: -2.6680283546447754
    3. ' j' → logprob: -2.9180283546447754
    4. 'use' → logprob: -4.043028354644775
    5. ' i' → logprob: -5.168028354644775
    6. ' use' → logprob: -5.668028354644775
    7. '   ' → logprob: -7.168028354644775
    8. '0' → logprob: -7.168028354644775
    9. 'k' → logprob: -7.293028354644775
    10. '           ' → logprob: -7.293028354644775

Token 289: ' -' (ID: 533)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7622531652450562
    2. ' >=' → logprob: -1.3872531652450562
    3. '<=' → logprob: -2.1372532844543457
    4. ' <=' → logprob: -2.6372532844543457
    5. '==' → logprob: -3.6372532844543457
    6. '>' → logprob: -3.8872532844543457
    7. ' ==' → logprob: -4.512253284454346
    8. ' >' → logprob: -4.512253284454346
    9. '+' → logprob: -4.762253284454346
    10. '-' → logprob: -5.012253284454346

Token 290: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012269926257431507
    2. '0' → logprob: -4.887269973754883
    3. '1' → logprob: -6.387269973754883
    4. 'i' → logprob: -6.887269973754883
    5. ' j' → logprob: -6.887269973754883
    6. '(' → logprob: -8.637269973754883
    7. '(j' → logprob: -8.637269973754883
    8. 'A' → logprob: -9.012269973754883
    9. ' (' → logprob: -9.387269973754883
    10. 'Com' → logprob: -9.387269973754883

Token 291: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5238626599311829
    2. 'i' → logprob: -0.8988626599311829
    3. '(i' → logprob: -9.023862838745117
    4. 'A' → logprob: -9.273862838745117
    5. ' i' → logprob: -9.523862838745117
    6. 'Com' → logprob: -9.523862838745117
    7. 'use' → logprob: -9.523862838745117
    8. ' j' → logprob: -9.648862838745117
    9. '0' → logprob: -9.773862838745117
    10. '(j' → logprob: -10.273862838745117

Token 292: '-j' (ID: 19720)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3181864321231842
    2. ' -' → logprob: -1.3181864023208618
    3. '-j' → logprob: -5.318186283111572
    4. '+' → logprob: -12.06818675994873
    5. '   ' → logprob: -13.56818675994873
    6. ' +' → logprob: -14.06818675994873
    7. ' ' → logprob: -14.44318675994873
    8. '-k' → logprob: -14.94318675994873
    9. '-t' → logprob: -15.06818675994873
    10. '>=' → logprob: -15.06818675994873

Token 293: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18249419331550598
    2. ')>=' → logprob: -1.9324941635131836
    3. '>=' → logprob: -3.9324941635131836
    4. '+' → logprob: -7.057494163513184
    5. '-' → logprob: -7.432494163513184
    6. ' >=' → logprob: -7.932494163513184
    7. ']>=' → logprob: -8.807494163513184
    8. ' )' → logprob: -8.932494163513184
    9. ')>' → logprob: -8.932494163513184
    10. ')<=' → logprob: -9.807494163513184

Token 294: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.04353208839893341
    2. ' >=' → logprob: -3.168532133102417
    3. '<' → logprob: -8.293532371520996
    4. '<=' → logprob: -8.793532371520996
    5. '>' → logprob: -9.918532371520996
    6. ')>=' → logprob: -10.918532371520996
    7. '==' → logprob: -11.043532371520996
    8. ' <' → logprob: -11.168532371520996
    9. ']>=' → logprob: -11.293532371520996
    10. ' ' → logprob: -11.918532371520996

Token 295: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004892880679108202
    2. ' ' → logprob: -7.625489234924316
    3. 'j' → logprob: -14.375489234924316
    4. '1' → logprob: -15.375489234924316
    5. '           ' → logprob: -16.000490188598633
    6. '   ' → logprob: -16.125490188598633
    7. ' j' → logprob: -17.000490188598633
    8. '                   ' → logprob: -17.500490188598633
    9. '۰' → logprob: -17.562990188598633
    10. '  ' → logprob: -17.687990188598633

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005555360112339258
    2. ' ' → logprob: -7.500555515289307
    3. '1' → logprob: -13.875555992126465
    4. '   ' → logprob: -14.813055992126465
    5. 'j' → logprob: -14.875555992126465
    6. '  ' → logprob: -16.18805503845215
    7. '-' → logprob: -16.25055503845215
    8. '           ' → logprob: -16.50055503845215
    9. '00' → logprob: -16.75055503845215
    10. '۰' → logprob: -16.87555503845215

Token 297: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.259231299161911
    2. ':' → logprob: -1.5092313289642334
    3. ':
' → logprob: -5.634231090545654
    4. 'and' → logprob: -6.259231090545654
    5. '           ' → logprob: -7.009231090545654
    6. '               ' → logprob: -8.009231567382812
    7. '<|end|>' → logprob: -8.134231567382812
    8. ' :' → logprob: -9.509231567382812
    9. '<|end|>' → logprob: -10.259231567382812
    10. '):' → logprob: -10.509231567382812

Token 298: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002967320033349097
    2. '           ' → logprob: -8.375296592712402
    3. ' and' → logprob: -11.375296592712402
    4. ' N' → logprob: -11.750296592712402
    5. '                   ' → logprob: -11.750296592712402
    6. '```' → logprob: -11.875296592712402
    7. ')' → logprob: -12.500296592712402
    8. '                       ' → logprob: -12.500296592712402
    9. 'N' → logprob: -12.625296592712402
    10. ':' → logprob: -12.875296592712402

Token 299: ' AN' (ID: 3473)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003753647906705737
    2. '                   ' → logprob: -6.253753662109375
    3. ' N' → logprob: -6.378753662109375
    4. '               ' → logprob: -9.753753662109375
    5. '                       ' → logprob: -10.003753662109375
    6. 'ANS' → logprob: -11.878753662109375
    7. 'ans' → logprob: -12.253753662109375
    8. 'if' → logprob: -12.628753662109375
    9. '           ' → logprob: -13.378753662109375
    10. '(N' → logprob: -14.003753662109375

Token 300: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.1472419600977446e-06
    2. 'SOR' → logprob: -14.500000953674316
    3. 'SP' → logprob: -14.875000953674316
    4. '(S' → logprob: -17.125001907348633
    5. '=' → logprob: -17.125001907348633
    6. ' =' → logprob: -17.375001907348633
    7. ' S' → logprob: -17.625001907348633
    8. 'SR' → logprob: -17.750001907348633
    9. 's' → logprob: -18.000001907348633
    10. '   ' → logprob: -18.250001907348633

Token 301: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03560122475028038
    2. ' +=' → logprob: -3.6606011390686035
    3. '=' → logprob: -4.7856011390686035
    4. ' =' → logprob: -7.0356011390686035
    5. '+' → logprob: -11.660601615905762
    6. '+=(' → logprob: -11.785601615905762
    7. ']+=' → logprob: -11.910601615905762
    8. '=(' → logprob: -13.160601615905762
    9. '   ' → logprob: -13.410601615905762
    10. ' ' → logprob: -14.785601615905762

Token 302: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002619318547658622
    2. '(A' → logprob: -9.750262260437012
    3. '(N' → logprob: -9.750262260437012
    4. '(ans' → logprob: -9.750262260437012
    5. ' (' → logprob: -9.875262260437012
    6. '(AL' → logprob: -11.875262260437012
    7. '(NS' → logprob: -12.000262260437012
    8. '(S' → logprob: -12.125262260437012
    9. '(OP' → logprob: -12.625262260437012
    10. '(D' → logprob: -12.625262260437012

Token 303: 'ANS' (ID: 18850)
  Prédit: 'ANS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -3.2617008400848135e-05
    2. ' AN' → logprob: -11.000032424926758
    3. '(' → logprob: -11.875032424926758
    4. 'AN' → logprob: -12.250032424926758
    5. '(ans' → logprob: -13.125032424926758
    6. 'ANSWER' → logprob: -14.250032424926758
    7. 'Ans' → logprob: -14.375032424926758
    8. 'ans' → logprob: -14.750032424926758
    9. '   ' → logprob: -16.000032424926758
    10. ' ans' → logprob: -16.375032424926758

Token 304: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889099419116974
    2. '+' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.703890800476074
    4. ' +
' → logprob: -14.953890800476074
    5. ' ' → logprob: -15.328890800476074
    6. 'ANS' → logprob: -16.45389175415039
    7. '
' → logprob: -16.82889175415039
    8. ' plus' → logprob: -17.20389175415039
    9. '+
' → logprob: -17.32889175415039
    10. '＋' → logprob: -18.20389175415039

Token 305: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.006408396642655134
    2. 'Com' → logprob: -5.131408214569092
    3. 'N' → logprob: -8.00640869140625
    4. ' DP' → logprob: -9.13140869140625
    5. ' Com' → logprob: -11.38140869140625
    6. '   ' → logprob: -11.88140869140625
    7. '(' → logprob: -11.88140869140625
    8. 'com' → logprob: -12.50640869140625
    9. '(N' → logprob: -13.00640869140625
    10. '(D' → logprob: -13.25640869140625

Token 306: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.1318875446449965e-05
    2. '[i' → logprob: -11.000041007995605
    3. '[' → logprob: -11.375041007995605
    4. 'j' → logprob: -12.375041007995605
    5. ' [' → logprob: -12.750041007995605
    6. '```' → logprob: -13.750041007995605
    7. '   ' → logprob: -14.500041007995605
    8. '[N' → logprob: -14.500041007995605
    9. ')' → logprob: -14.625041007995605
    10. ')[' → logprob: -14.625041007995605

Token 307: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003951648832298815
    2. '])' → logprob: -8.125394821166992
    3. ']*' → logprob: -9.875394821166992
    4. '*' → logprob: -10.625394821166992
    5. ' *' → logprob: -10.875394821166992
    6. ' ]' → logprob: -13.125394821166992
    7. ')' → logprob: -14.375394821166992
    8. ']
' → logprob: -14.375394821166992
    9. '   ' → logprob: -15.000394821166992
    10. '+' → logprob: -15.250394821166992

Token 308: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01253849733620882
    2. '*' → logprob: -4.387538433074951
    3. ')' → logprob: -10.51253890991211
    4. ' ' → logprob: -14.51253890991211
    5. '   ' → logprob: -15.51253890991211
    6. ' ' → logprob: -15.88753890991211
    7. '       ' → logprob: -16.01253890991211
    8. '          ' → logprob: -16.38753890991211
    9. ' *
' → logprob: -16.63753890991211
    10. '*(' → logprob: -16.63753890991211

Token 309: ' Com' (ID: 1390)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.003194589400663972
    2. ' Com' → logprob: -5.753194808959961
    3. '   ' → logprob: -12.128194808959961
    4. '(' → logprob: -12.378194808959961
    5. '                           ' → logprob: -13.378194808959961
    6. 'com' → logprob: -13.753194808959961
    7. 'Comb' → logprob: -13.878194808959961
    8. '                               ' → logprob: -14.003194808959961
    9. '                   ' → logprob: -14.378194808959961
    10. '               ' → logprob: -14.503194808959961

Token 310: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -7.896309739408025e-07
    2. 'Bi' → logprob: -14.375000953674316
    3. 'pi' → logprob: -16.5
    4. 'b' → logprob: -17.0
    5. ' bi' → logprob: -18.875
    6. 'би' → logprob: -19.25
    7. 'vi' → logprob: -19.25
    8. 'Com' → logprob: -19.625
    9. 'obi' → logprob: -19.75
    10. 'i' → logprob: -19.75

Token 311: '[N' (ID: 49776)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028453653678297997
    2. '[N' → logprob: -4.153453826904297
    3. '[i' → logprob: -4.403453826904297
    4. '[A' → logprob: -10.403453826904297
    5. '[len' → logprob: -10.403453826904297
    6. '[j' → logprob: -10.528453826904297
    7. '[n' → logprob: -12.653453826904297
    8. 'N' → logprob: -13.153453826904297
    9. 'use' → logprob: -13.153453826904297
    10. '[min' → logprob: -13.278453826904297

Token 312: '-j' (ID: 19720)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0288947820663452
    2. '-use' → logprob: -1.0288947820663452
    3. '[' → logprob: -1.5288947820663452
    4. '-i' → logprob: -3.5288949012756348
    5. '[N' → logprob: -4.278894901275635
    6. 'use' → logprob: -4.653894901275635
    7. '-' → logprob: -5.028894901275635
    8. ' -' → logprob: -5.653894901275635
    9. '[j' → logprob: -6.153894901275635
    10. '-j' → logprob: -6.778894901275635

Token 313: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0023397314362227917
    2. '[' → logprob: -6.377339839935303
    3. 'use' → logprob: -8.627339363098145
    4. '[i' → logprob: -8.752339363098145
    5. ' ][' → logprob: -8.752339363098145
    6. ']' → logprob: -10.502339363098145
    7. '[N' → logprob: -10.627339363098145
    8. '   ' → logprob: -11.377339363098145
    9. '][-' → logprob: -11.502339363098145
    10. '+' → logprob: -11.939839363098145

Token 314: 'i' (ID: 72)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.004460743162781
    2. 'i' → logprob: -6.12946081161499
    3. 'N' → logprob: -7.12946081161499
    4. '(use' → logprob: -7.37946081161499
    5. ' use' → logprob: -7.50446081161499
    6. '(' → logprob: -8.754460334777832
    7. '(i' → logprob: -9.879460334777832
    8. '   ' → logprob: -10.129460334777832
    9. '[' → logprob: -11.379460334777832
    10. ' (' → logprob: -12.004460334777832

Token 315: '-j' (ID: 19720)
  Prédit: '-j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.004589742049574852
    2. ' -' → logprob: -6.004589557647705
    3. '-' → logprob: -7.004589557647705
    4. ']' → logprob: -8.254590034484863
    5. 'j' → logprob: -8.254590034484863
    6. '][' → logprob: -8.504590034484863
    7. ']-' → logprob: -9.254590034484863
    8. '])' → logprob: -9.379590034484863
    9. '[j' → logprob: -9.629590034484863
    10. '```' → logprob: -10.129590034484863

Token 316: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005190743831917644
    2. ']' → logprob: -7.875519275665283
    3. ']%' → logprob: -9.000518798828125
    4. '-' → logprob: -11.875518798828125
    5. ' ])' → logprob: -13.250518798828125
    6. '   ' → logprob: -13.875518798828125
    7. ']])' → logprob: -13.875518798828125
    8. '+' → logprob: -14.125518798828125
    9. '%' → logprob: -14.250518798828125
    10. ']
' → logprob: -14.250518798828125

Token 317: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007875907467678189
    2. ' )' → logprob: -7.875787734985352
    3. ')%' → logprob: -7.875787734985352
    4. '%' → logprob: -10.625787734985352
    5. ' %' → logprob: -13.875787734985352
    6. '       ' → logprob: -14.250787734985352
    7. '           ' → logprob: -14.625787734985352
    8. '   ' → logprob: -15.375787734985352
    9. '')' → logprob: -15.375787734985352
    10. '               ' → logprob: -15.500787734985352

Token 318: ' Com' (ID: 1390)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.14546255767345428
    2. 'pow' → logprob: -2.6454625129699707
    3. 'use' → logprob: -4.270462512969971
    4. '(' → logprob: -4.395462512969971
    5. 'A' → logprob: -4.520462512969971
    6. 'DP' → logprob: -4.645462512969971
    7. '(A' → logprob: -5.270462512969971
    8. ' Com' → logprob: -5.895462512969971
    9. '1' → logprob: -6.020462512969971
    10. '(use' → logprob: -6.145462512969971

Token 319: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -4.1318875446449965e-05
    2. 'b' → logprob: -11.000041007995605
    3. 'pi' → logprob: -12.125041007995605
    4. 'Bi' → logprob: -12.625041007995605
    5. 'bin' → logprob: -12.875041007995605
    6. 'i' → logprob: -13.625041007995605
    7. 'vi' → logprob: -14.000041007995605
    8. '[' → logprob: -14.062541007995605
    9. '(' → logprob: -14.312541007995605
    10. 'fi' → logprob: -14.437541007995605

Token 320: '[N' (ID: 49776)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0704282894730568
    2. '[N' → logprob: -2.6954283714294434
    3. '[A' → logprob: -8.445427894592285
    4. '[j' → logprob: -9.195427894592285
    5. '[i' → logprob: -9.445427894592285
    6. 'N' → logprob: -9.820427894592285
    7. 'use' → logprob: -11.695427894592285
    8. '[u' → logprob: -12.070427894592285
    9. '[n' → logprob: -12.320427894592285
    10. '[k' → logprob: -12.695427894592285

Token 321: ' -' (ID: 533)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.17400957643985748
    2. '[' → logprob: -3.1740095615386963
    3. 'use' → logprob: -3.2990095615386963
    4. 'j' → logprob: -3.4240095615386963
    5. '-j' → logprob: -3.7990095615386963
    6. '-use' → logprob: -3.9240095615386963
    7. '[N' → logprob: -5.924009799957275
    8. '-' → logprob: -6.549009799957275
    9. '[u' → logprob: -7.424009799957275
    10. ' -' → logprob: -8.174009323120117

Token 322: ' (' (ID: 350)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.23080183565616608
    2. 'j' → logprob: -1.6058018207550049
    3. 'i' → logprob: -5.855802059173584
    4. '(use' → logprob: -6.605802059173584
    5. ' use' → logprob: -7.855802059173584
    6. '(' → logprob: -8.855801582336426
    7. 'k' → logprob: -9.355801582336426
    8. '   ' → logprob: -9.355801582336426
    9. 'N' → logprob: -9.355801582336426
    10. 'A' → logprob: -9.480801582336426

Token 323: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06366037577390671
    2. 'use' → logprob: -2.8136603832244873
    3. 'i' → logprob: -6.938660144805908
    4. '(use' → logprob: -7.938660144805908
    5. 'k' → logprob: -8.813660621643066
    6. '(j' → logprob: -9.813660621643066
    7. ' use' → logprob: -10.313660621643066
    8. '   ' → logprob: -10.688660621643066
    9. '(i' → logprob: -10.813660621643066
    10. '(' → logprob: -11.188660621643066

Token 324: '-j' (ID: 19720)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006834367755800486
    2. '-j' → logprob: -5.756834506988525
    3. 'use' → logprob: -7.006834506988525
    4. '[j' → logprob: -7.381834506988525
    5. '[' → logprob: -7.881834506988525
    6. ' j' → logprob: -8.256834030151367
    7. '-use' → logprob: -8.381834030151367
    8. '][' → logprob: -8.381834030151367
    9. 'k' → logprob: -8.506834030151367
    10. ']' → logprob: -8.756834030151367

Token 325: ')][' (ID: 112886)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4698820412158966
    2. ')][' → logprob: -1.4698820114135742
    3. '-' → logprob: -2.219882011413574
    4. '-j' → logprob: -4.094882011413574
    5. ']][' → logprob: -4.594882011413574
    6. ']' → logprob: -5.594882011413574
    7. ')' → logprob: -6.219882011413574
    8. '[j' → logprob: -6.719882011413574
    9. ' -' → logprob: -6.844882011413574
    10. '   ' → logprob: -7.969882011413574

Token 326: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.008509134873747826
    2. 'N' → logprob: -5.508509159088135
    3. '(use' → logprob: -5.633509159088135
    4. ' use' → logprob: -7.633509159088135
    5. '(' → logprob: -8.883508682250977
    6. '(N' → logprob: -9.633508682250977
    7. '   ' → logprob: -10.133508682250977
    8. '[' → logprob: -11.133508682250977
    9. 'i' → logprob: -11.383508682250977
    10. 'K' → logprob: -11.508508682250977

Token 327: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3766258955001831
    2. '-' → logprob: -1.251625895500183
    3. '-(' → logprob: -3.6266260147094727
    4. ' -(' → logprob: -6.751626014709473
    5. ']' → logprob: -12.126626014709473
    6. ' ' → logprob: -12.751626014709473
    7. '   ' → logprob: -13.626626014709473
    8. '])' → logprob: -14.501626014709473
    9. ' ' → logprob: -14.626626014709473
    10. '	' → logprob: -15.064126014709473

Token 328: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.038057904690504074
    2. ' (' → logprob: -3.288057804107666
    3. '(' → logprob: -11.413058280944824
    4. ' ' → logprob: -12.913058280944824
    5. '   ' → logprob: -13.663058280944824
    6. '(ii' → logprob: -14.663058280944824
    7. '(I' → logprob: -15.038058280944824
    8. '  ' → logprob: -15.663058280944824
    9. '(j' → logprob: -15.788058280944824
    10. '[i' → logprob: -16.413057327270508

Token 329: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1562993973493576
    2. '(i' → logprob: -2.031299352645874
    3. 'j' → logprob: -4.406299591064453
    4. '(j' → logprob: -7.281299591064453
    5. ' (' → logprob: -7.781299591064453
    6. ' i' → logprob: -9.531299591064453
    7. '   ' → logprob: -10.281299591064453
    8. '1' → logprob: -10.781299591064453
    9. '(N' → logprob: -11.031299591064453
    10. '(' → logprob: -11.281299591064453

Token 330: '-j' (ID: 19720)
  Prédit: '-j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.0736212208867073
    2. 'j' → logprob: -2.6986212730407715
    3. '-' → logprob: -6.1986212730407715
    4. ' -' → logprob: -6.5736212730407715
    5. ' j' → logprob: -9.073620796203613
    6. ' ' → logprob: -9.948620796203613
    7. '   ' → logprob: -11.448620796203613
    8. '[j' → logprob: -11.823620796203613
    9. ')' → logprob: -11.948620796203613
    10. '_j' → logprob: -12.073620796203613

Token 331: ')])' (ID: 99066)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.1667829006910324
    2. '])' → logprob: -2.916782855987549
    3. ']]' → logprob: -2.916782855987549
    4. ']' → logprob: -3.416782855987549
    5. ')])' → logprob: -4.916782855987549
    6. '])]' → logprob: -6.041782855987549
    7. ']))' → logprob: -6.541782855987549
    8. ')]' → logprob: -7.291782855987549
    9. ' ]' → logprob: -8.166783332824707
    10. ' ])' → logprob: -9.041783332824707

Token 332: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04134765639901161
    2. '%' → logprob: -4.041347503662109
    3. ')%' → logprob: -4.166347503662109
    4. ' )' → logprob: -5.541347503662109
    5. ' %' → logprob: -5.666347503662109
    6. '%)' → logprob: -11.79134750366211
    7. '           ' → logprob: -12.04134750366211
    8. '<|end|>' → logprob: -12.54134750366211
    9. '
' → logprob: -12.79134750366211
    10. ']' → logprob: -13.16634750366211

Token 333: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.639096970204264e-05
    2. ' mod' → logprob: -9.250096321105957
    3. '(mod' → logprob: -15.250096321105957
    4. '	mod' → logprob: -19.750097274780273
    5. '```' → logprob: -20.375097274780273
    6. 'MOD' → logprob: -21.000097274780273
    7. ' ' → logprob: -21.250097274780273
    8. ' мод' → logprob: -21.500097274780273
    9. '
' → logprob: -21.875097274780273
    10. '   ' → logprob: -22.625097274780273

Token 334: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5611950755119324
    2. '<|end|>' → logprob: -1.5611951351165771
    3. '   ' → logprob: -2.311195135116577
    4. '       ' → logprob: -3.186195135116577
    5. ' ' → logprob: -3.686195135116577
    6. '    ' → logprob: -5.186194896697998
    7. 'N' → logprob: -5.186194896697998
    8. '\t' → logprob: -5.186194896697998
    9. ' N' → logprob: -5.436194896697998
    10. '\n' → logprob: -5.561194896697998

Token 336: ' N' (ID: 478)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1431890726089478
    2. ' N' → logprob: -1.7681890726089478
    3. '\n' → logprob: -2.143188953399658
    4. '\t' → logprob: -2.143188953399658
    5. '   ' → logprob: -2.393188953399658
    6. ' )' → logprob: -3.518188953399658
    7. ' ' → logprob: -3.768188953399658
    8. 'N' (adapté à ' N') → logprob: -3.893188953399658
    9. '+' → logprob: -4.143188953399658
    10. '=' → logprob: -4.643188953399658

Token 337: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -6.869017852295656e-06
    2. 'P' → logprob: -12.125006675720215
    3. 'D' → logprob: -13.500006675720215
    4. '
' → logprob: -18.75000762939453
    5. ' DP' → logprob: -18.75000762939453
    6. 'PD' → logprob: -19.37500762939453
    7. '=' → logprob: -20.12500762939453
    8. 'dp' → logprob: -20.25000762939453
    9. 'for' → logprob: -20.87500762939453
    10. 'TP' → logprob: -21.12500762939453

Token 338: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002366753324167803
    2. '[' → logprob: -8.375236511230469
    3. '=' → logprob: -13.000236511230469
    4. '[I' → logprob: -13.500236511230469
    5. '[j' → logprob: -14.250236511230469
    6. '[:]' → logprob: -14.875236511230469
    7. '[N' → logprob: -15.000236511230469
    8. ')[' → logprob: -15.375236511230469
    9. '```' → logprob: -15.625236511230469
    10. ' [' → logprob: -16.00023651123047

Token 339: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031218640506267548
    2. ']+=' → logprob: -6.378121852874756
    3. '[i' → logprob: -6.628121852874756
    4. ']=' → logprob: -9.628122329711914
    5. '[' → logprob: -11.003122329711914
    6. '[j' → logprob: -12.003122329711914
    7. ' ]' → logprob: -12.753122329711914
    8. '(i' → logprob: -14.003122329711914
    9. '   ' → logprob: -14.003122329711914
    10. ')' → logprob: -14.128122329711914

Token 340: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07476156204938889
    2. ' =' → logprob: -2.9497616291046143
    3. '+=' → logprob: -4.074761390686035
    4. ' +=' → logprob: -5.949761390686035
    5. '%=' → logprob: -9.824761390686035
    6. ']+=' → logprob: -12.074761390686035
    7. ' %=' → logprob: -12.324761390686035
    8. ' |=' → logprob: -12.574761390686035
    9. ' ^=' → logprob: -12.824761390686035
    10. '.=' → logprob: -12.949761390686035

Token 341: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.0005780545179732144
    2. '(' → logprob: -8.000577926635742
    3. '(ans' → logprob: -9.000577926635742
    4. ' AN' → logprob: -9.500577926635742
    5. 'AN' → logprob: -11.125577926635742
    6. 'ans' → logprob: -11.750577926635742
    7. 'ANSWER' → logprob: -11.750577926635742
    8. ' (' → logprob: -11.875577926635742
    9. ' ans' → logprob: -13.250577926635742
    10. 'Ans' → logprob: -13.500577926635742

Token 342: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.3795937522663735e-05
    2. 'SP' → logprob: -11.00002384185791
    3. '(S' → logprob: -13.00002384185791
    4. ' S' → logprob: -13.12502384185791
    5. '[' → logprob: -14.50002384185791
    6. '[S' → logprob: -14.75002384185791
    7. '(' → logprob: -14.87502384185791
    8. 'SOR' → logprob: -15.37502384185791
    9. '   ' → logprob: -16.000022888183594
    10. '```' → logprob: -16.125022888183594

Token 343: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2712728679180145
    2. '<|end|>' → logprob: -2.146272897720337
    3. '    
' → logprob: -2.896272897720337
    4. ' 
' → logprob: -4.146272659301758
    5. ' ' → logprob: -4.521272659301758
    6. '  
' → logprob: -4.896272659301758
    7. '   
' → logprob: -5.021272659301758
    8. ')' → logprob: -5.146272659301758
    9. '\n' → logprob: -5.521272659301758
    10. '
' → logprob: -5.521272659301758

Token 345: ' ça' (ID: 13590)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.03134135529398918
    2. '   ' → logprob: -3.906341314315796
    3. '
' → logprob: -5.781341552734375
    4. ')' → logprob: -6.281341552734375
    5. '    
' → logprob: -6.656341552734375
    6. ' DP' → logprob: -6.781341552734375
    7. 'N' → logprob: -7.281341552734375
    8. '_DP' → logprob: -7.406341552734375
    9. 'for' → logprob: -7.531341552734375
    10. '        
' → logprob: -8.281341552734375

Token 346: ' doit' (ID: 21822)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: ' marcher' (ID: 171848)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3418855667114258
    2. '<|end|>' → logprob: -1.3418855667114258
    3. '    
' → logprob: -4.466885566711426
    4. ' ' → logprob: -5.091885566711426
    5. ' 
' → logprob: -5.591885566711426
    6. '
' → logprob: -6.466885566711426
    7. '  
' → logprob: -6.841885566711426
    8. ')' → logprob: -7.091885566711426
    9. '  ' → logprob: -7.091885566711426
    10. '<|end|>' → logprob: -7.716885566711426

Token 349: ' ça' (ID: 13590)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3437767028808594
    2. 'cela' → logprob: -1.8437767028808594
    3. ' prévu' → logprob: -1.9687767028808594
    4. 'expected' → logprob: -2.0937767028808594
    5. 'ça' → logprob: -2.7187767028808594
    6. '   ' → logprob: -2.7187767028808594
    7. ' intended' → logprob: -2.8437767028808594
    8. ' ça' → logprob: -3.0937767028808594
    9. 'ind' → logprob: -4.343776702880859
    10. '```' → logprob: -5.093776702880859

Token 350: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25793778896331787
    2. '<|end|>' → logprob: -1.6329377889633179
    3. '    
' → logprob: -4.507937908172607
    4. ')' → logprob: -5.257937908172607
    5. ' ' → logprob: -5.507937908172607
    6. '
' → logprob: -6.007937908172607
    7. ' 
' → logprob: -6.382937908172607
    8. '  ' → logprob: -7.132937908172607
    9. '  
' → logprob: -7.132937908172607
    10. 'for' → logprob: -7.257937908172607

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1390533745288849
    2. ' DP' → logprob: -2.6390533447265625
    3. 'DP' → logprob: -3.5140533447265625
    4. '<|end|>' → logprob: -4.3890533447265625
    5. ')' → logprob: -5.1390533447265625
    6. ' ' → logprob: -5.2640533447265625
    7. ' for' → logprob: -6.8890533447265625
    8. '    ' → logprob: -7.1390533447265625
    9. ' )' → logprob: -7.5140533447265625
    10. '  ' → logprob: -7.6390533447265625

Token 352: ' #' (ID: 1069)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.001626025652512908
    2. '   ' → logprob: -6.876626014709473
    3. ' DP' → logprob: -8.001626014709473
    4. 'for' → logprob: -8.501626014709473
    5. ' for' → logprob: -10.251626014709473
    6. ' ' → logprob: -11.626626014709473
    7. '_DP' → logprob: -12.001626014709473
    8. '    
' → logprob: -13.626626014709473
    9. 'DJ' → logprob: -14.126626014709473
    10. '  ' → logprob: -14.501626014709473

Token 353: ' print' (ID: 2123)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -7.862962229410186e-05
    2. ' DP' → logprob: -9.500078201293945
    3. '   ' → logprob: -12.750078201293945
    4. 'for' → logprob: -14.250078201293945
    5. '_DP' → logprob: -16.500078201293945
    6. 'DJ' → logprob: -16.875078201293945
    7. ' ' → logprob: -17.375078201293945
    8. '    
' → logprob: -17.375078201293945
    9. '
' → logprob: -17.500078201293945
    10. 'D' → logprob: -17.625078201293945

Token 354: '(D' (ID: 9908)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.23739218711853027
    2. '(D' → logprob: -1.7373921871185303
    3. '()' → logprob: -4.362392425537109
    4. '(' → logprob: -4.987392425537109
    5. '(*' → logprob: -4.987392425537109
    6. '(len' → logprob: -5.362392425537109
    7. '("' → logprob: -6.487392425537109
    8. 'N' → logprob: -7.487392425537109
    9. 'DP' → logprob: -7.612392425537109
    10. '('' → logprob: -7.862392425537109

Token 355: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00012082771718269214
    2. 'DP' → logprob: -10.375121116638184
    3. '
' → logprob: -11.000121116638184
    4. ' P' → logprob: -11.125121116638184
    5. '[' → logprob: -11.375121116638184
    6. ')' → logprob: -11.375121116638184
    7. '[P' → logprob: -11.500121116638184
    8. '```' → logprob: -12.750121116638184
    9. '(P' → logprob: -13.000121116638184
    10. 'PP' → logprob: -13.125121116638184

Token 356: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33420535922050476
    2. '=' → logprob: -1.3342053890228271
    3. ' =' → logprob: -3.959205389022827
    4. ' )' → logprob: -7.209205150604248
    5. ')
' → logprob: -7.584205150604248
    6. ')=' → logprob: -8.959205627441406
    7. '=N' → logprob: -9.084205627441406
    8. '   ' → logprob: -10.459205627441406
    9. '[:]' → logprob: -10.709205627441406
    10. ' =)' → logprob: -10.959205627441406

Token 357: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4780426323413849
    2. 'DP' → logprob: -0.9780426025390625
    3. ' DP' → logprob: -5.7280426025390625
    4. '
' → logprob: -7.7280426025390625
    5. '    
' → logprob: -8.978042602539062
    6. '_DP' → logprob: -9.853042602539062
    7. ' ' → logprob: -10.228042602539062
    8. '  ' → logprob: -11.103042602539062
    9. '    ' → logprob: -12.103042602539062
    10. ' 
' → logprob: -12.103042602539062

Token 358: ' #' (ID: 1069)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.023387568071484566
    2. '   ' → logprob: -3.7733876705169678
    3. ' DP' → logprob: -8.898387908935547
    4. '_DP' → logprob: -13.148387908935547
    5. '    
' → logprob: -13.523387908935547
    6. ' ' → logprob: -14.273387908935547
    7. '  ' → logprob: -14.523387908935547
    8. '
' → logprob: -15.023387908935547
    9. '=' → logprob: -15.648387908935547
    10. 'DJ' → logprob: -15.898387908935547

Token 359: ' j' (ID: 441)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0008918096427805722
    2. ' DP' → logprob: -7.37589168548584
    3. '   ' → logprob: -8.25089168548584
    4. '_DP' → logprob: -13.25089168548584
    5. ' ' → logprob: -14.50089168548584
    6. ')' → logprob: -15.00089168548584
    7. '...' → logprob: -15.12589168548584
    8. ' for' → logprob: -15.12589168548584
    9. 'for' → logprob: -15.62589168548584
    10. '    
' → logprob: -15.87589168548584

Token 360: ''util' (ID: 37761)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.15765567123889923
    2. 'P' → logprob: -2.407655715942383
    3. '   ' → logprob: -3.782655715942383
    4. ' DP' → logprob: -3.782655715942383
    5. '=' → logprob: -4.782655715942383
    6. ' =' → logprob: -7.157655715942383
    7. '
' → logprob: -7.782655715942383
    8. '#' → logprob: -8.407655715942383
    9. '    
' → logprob: -9.032655715942383
    10. ' ' → logprob: -9.407655715942383

Token 361: 'ise' (ID: 1096)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7386518120765686
    2. '=' → logprob: -1.3636517524719238
    3. '#' → logprob: -2.988651752471924
    4. 'se' → logprob: -3.238651752471924
    5. 'z' → logprob: -3.363651752471924
    6. 'DP' → logprob: -3.363651752471924
    7. '   ' → logprob: -3.738651752471924
    8. 'ze' → logprob: -3.863651752471924
    9. 'es' → logprob: -4.988651752471924
    10. 'zer' → logprob: -4.988651752471924

Token 362: ' pas' (ID: 2173)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2797060012817383
    2. '()' → logprob: -1.5297060012817383
    3. '()
' → logprob: -4.779706001281738
    4. '(' → logprob: -5.154706001281738
    5. '(D' → logprob: -5.654706001281738
    6. 'N' → logprob: -5.904706001281738
    7. '   ' → logprob: -6.279706001281738
    8. '(
' → logprob: -6.529706001281738
    9. '("' → logprob: -7.154706001281738
    10. '#' → logprob: -7.529706001281738

Token 363: ',' (ID: 11)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0017552643548697233
    2. '   ' → logprob: -6.501755237579346
    3. ' DP' → logprob: -8.376755714416504
    4. '
' → logprob: -11.626755714416504
    5. '    
' → logprob: -12.251755714416504
    6. '_DP' → logprob: -12.751755714416504
    7. 'for' → logprob: -13.501755714416504
    8. '#' → logprob: -14.126755714416504
    9. ' ' → logprob: -14.251755714416504
    10. 'N' → logprob: -14.626755714416504

Token 364: ' mais' (ID: 2899)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0059484681114554405
    2. '   ' → logprob: -5.255948543548584
    3. ' DP' → logprob: -7.255948543548584
    4. '    
' → logprob: -12.880948066711426
    5. ' ' → logprob: -13.130948066711426
    6. '_DP' → logprob: -13.380948066711426
    7. '
' → logprob: -13.755948066711426
    8. '#' → logprob: -14.255948066711426
    9. '  ' → logprob: -15.380948066711426
    10. ' 
' → logprob: -16.380949020385742

Token 365: ' je' (ID: 1264)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0011449799640104175
    2. '   ' → logprob: -7.001144886016846
    3. ' DP' → logprob: -8.376145362854004
    4. '_DP' → logprob: -13.501145362854004
    5. '#' → logprob: -14.376145362854004
    6. '
' → logprob: -14.876145362854004
    7. '    
' → logprob: -15.001145362854004
    8. ' ' → logprob: -15.126145362854004
    9. '  ' → logprob: -16.001144409179688
    10. '    ' → logprob: -17.001144409179688

Token 366: ' laisse' (ID: 66691)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009606543462723494
    2. 'DP' → logprob: -7.625960826873779
    3. ' =' → logprob: -8.250960350036621
    4. '=
' → logprob: -9.250960350036621
    5. 'continue' → logprob: -10.500960350036621
    6. '   ' → logprob: -10.750960350036621
    7. '#' → logprob: -11.750960350036621
    8. ' DP' → logprob: -12.000960350036621
    9. '[' → logprob: -12.125960350036621
    10. '[:]' → logprob: -12.250960350036621

Token 367: ' au' (ID: 2791)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.02384839579463005
    2. '   ' → logprob: -3.898848295211792
    3. ' DP' → logprob: -6.773848533630371
    4. '
' → logprob: -6.898848533630371
    5. '    
' → logprob: -7.148848533630371
    6. '_DP' → logprob: -9.023848533630371
    7. ' 
' → logprob: -9.773848533630371
    8. '<|end|>' → logprob: -10.148848533630371
    9. '  
' → logprob: -10.773848533630371
    10. ' ' → logprob: -10.773848533630371

Token 368: ' cas' (ID: 2108)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.827162504196167
    2. 'k' → logprob: -1.452162504196167
    3. 'pass' → logprob: -2.702162504196167
    4. 'for' → logprob: -3.077162504196167
    5. 'coder' → logprob: -3.327162504196167
    6. 'comment' → logprob: -3.577162504196167
    7. 'N' → logprob: -4.077162742614746
    8. 'pr' → logprob: -4.077162742614746
    9. 'sys' → logprob: -4.452162742614746
    10. 'print' → logprob: -4.452162742614746

Token 369: ' où' (ID: 15113)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.37246838212013245
    2. '   ' → logprob: -1.24746835231781
    3. '    
' → logprob: -4.1224684715271
    4. ' DP' → logprob: -6.1224684715271
    5. '
' → logprob: -6.2474684715271
    6. ' 
' → logprob: -6.9974684715271
    7. ' ' → logprob: -7.1224684715271
    8. 'D' → logprob: -7.6224684715271
    9. '   
' → logprob: -7.8724684715271
    10. '  
' → logprob: -8.872467994689941

Token 370: '

' (ID: 279)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.012572398409247398
    2. '   ' → logprob: -4.637572288513184
    3. ' DP' → logprob: -5.887572288513184
    4. '_DP' → logprob: -10.512572288513184
    5. ' ' → logprob: -12.387572288513184
    6. ' for' → logprob: -13.262572288513184
    7. '    
' → logprob: -13.262572288513184
    8. '<|end|>' → logprob: -14.262572288513184
    9. '  ' → logprob: -14.387572288513184
    10. '```' → logprob: -14.762572288513184

Token 371: '   ' (ID: 271)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.01595037616789341
    2. '   ' → logprob: -4.2659502029418945
    3. ' DP' → logprob: -6.3909502029418945
    4. '_DP' → logprob: -10.140950202941895
    5. '    
' → logprob: -11.015950202941895
    6. ' ' → logprob: -11.015950202941895
    7. '
' → logprob: -11.640950202941895
    8. ' for' → logprob: -11.890950202941895
    9. 'for' → logprob: -12.390950202941895
    10. ')' → logprob: -13.015950202941895

Token 372: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.0032907098066061735
    2. '   ' → logprob: -5.75329065322876
    3. ' DP' → logprob: -9.128291130065918
    4. '_DP' → logprob: -13.503291130065918
    5. '    
' → logprob: -13.878291130065918
    6. ' ' → logprob: -14.253291130065918
    7. 'DJ' → logprob: -14.753291130065918
    8. '  ' → logprob: -15.253291130065918
    9. '
' → logprob: -15.628291130065918
    10. 'for' → logprob: -15.753291130065918

Token 373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05491320416331291
    2. ' =' → logprob: -2.929913282394409
    3. '=N' → logprob: -11.304913520812988
    4. '[:]' → logprob: -11.554913520812988
    5. ',' → logprob: -11.804913520812988
    6. '[' → logprob: -15.054913520812988
    7. '=
' → logprob: -15.429913520812988
    8. '＝' → logprob: -15.929913520812988
    9. '<|end|>' → logprob: -16.304912567138672
    10. '=}' → logprob: -16.554912567138672

Token 374: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011048054322600365
    2. ' N' → logprob: -4.511047840118408
    3. ' ' → logprob: -15.886048316955566
    4. '[N' → logprob: -16.51104736328125
    5. '   ' → logprob: -17.51104736328125
    6. '[' → logprob: -17.51104736328125
    7. ' ' → logprob: -17.76104736328125
    8. '	N' → logprob: -17.76104736328125
    9. 'ND' → logprob: -18.26104736328125
    10. '```' → logprob: -18.51104736328125

Token 375: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -7.636475493200123e-05
    2. 'P' → logprob: -9.500076293945312
    3. '[P' → logprob: -14.250076293945312
    4. '[' → logprob: -14.750076293945312
    5. ' DP' → logprob: -15.375076293945312
    6. '
' → logprob: -16.625076293945312
    7. '=' → logprob: -17.125076293945312
    8. 'D' → logprob: -17.250076293945312
    9. 'PD' → logprob: -17.250076293945312
    10. '[i' → logprob: -17.875076293945312

Token 376: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 378: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 379: ' met' (ID: 1421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7242878079414368
    2. '<|end|>' → logprob: -0.8492878079414368
    3. 'continue' → logprob: -2.974287748336792
    4. 'contin' → logprob: -4.099287986755371
    5. ' continue' → logprob: -5.099287986755371
    6. '<|end|>' → logprob: -5.599287986755371
    7. ' =' → logprob: -6.599287986755371
    8. '[:]' → logprob: -6.599287986755371
    9. ')' → logprob: -6.974287986755371
    10. '#' → logprob: -7.224287986755371

Token 380: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.0011066367151215672
    2. ' à' → logprob: -8.126106262207031
    3. 'À' → logprob: -8.251106262207031
    4. 'la' → logprob: -9.001106262207031
    5. 'au' → logprob: -9.376106262207031
    6. 'les' → logprob: -9.501106262207031
    7. 'le' → logprob: -10.251106262207031
    8. '```' → logprob: -10.376106262207031
    9. 'en' → logprob: -10.626106262207031
    10. ' ' → logprob: -10.751106262207031

Token 381: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0021294450853019953
    2. '```' → logprob: -6.502129554748535
    3. 'jou' → logprob: -7.877129554748535
    4. 'jours' → logprob: -8.877129554748535
    5. 'journ' → logprob: -10.627129554748535
    6. ' ' → logprob: -10.877129554748535
    7. 'day' → logprob: -11.252129554748535
    8. 'la' → logprob: -11.377129554748535
    9. ' jour' → logprob: -11.877129554748535
    10. 'DP' → logprob: -12.377129554748535

Token 382: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.016050206497311592
    2. ' la' → logprob: -4.391050338745117
    3. 'le' → logprob: -6.516050338745117
    4. 'l' → logprob: -6.891050338745117
    5. 'next' → logprob: -7.641050338745117
    6. 'lap' → logprob: -8.516050338745117
    7. 'k' → logprob: -9.016050338745117
    8. 'the' → logprob: -9.266050338745117
    9. 'pro' → logprob: -9.766050338745117
    10. 'len' → logprob: -10.641050338745117

Token 384: ' prochaine' (ID: 78876)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.022387532517313957
    2. 'next' → logprob: -4.022387504577637
    3. ' prochaine' → logprob: -6.147387504577637
    4. ' next' → logprob: -6.772387504577637
    5. 'suite' → logprob: -7.897387504577637
    6. ' prochain' → logprob: -8.272387504577637
    7. 'tour' → logprob: -9.147387504577637
    8. 'for' → logprob: -9.272387504577637
    9. '```' → logprob: -10.522387504577637
    10. 'su' → logprob: -10.772387504577637

Token 385: ' étape' (ID: 83661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02540208213031292
    2. '<|end|>' → logprob: -4.275402069091797
    3. 'return' → logprob: -5.025402069091797
    4. '```' → logprob: -5.775402069091797
    5. 'for' → logprob: -6.900402069091797
    6. '#' → logprob: -8.400402069091797
    7. ')' → logprob: -9.150402069091797
    8. '#print' → logprob: -9.900402069091797
    9. 'DP' → logprob: -10.025402069091797
    10. 'result' → logprob: -10.150402069091797

Token 388: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.06718192994594574
    2. '(' → logprob: -3.3171818256378174
    3. '(sum' → logprob: -3.5671818256378174
    4. '(max' → logprob: -8.067181587219238
    5. '(len' → logprob: -9.067181587219238
    6. '((' → logprob: -10.817181587219238
    7. '(dp' → logprob: -11.317181587219238
    8. '()' → logprob: -11.692181587219238
    9. '('' → logprob: -12.692181587219238
    10. '(*' → logprob: -12.817181587219238

Token 389: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.981667537620524e-06
    2. '(P' → logprob: -13.750001907348633
    3. ' P' → logprob: -14.625001907348633
    4. ')' → logprob: -15.750001907348633
    5. '(' → logprob: -16.625001907348633
    6. '[P' → logprob: -16.625001907348633
    7. 'Ｐ' → logprob: -16.875001907348633
    8. '```' → logprob: -17.500001907348633
    9. 'П' → logprob: -17.875001907348633
    10. '​' → logprob: -17.875001907348633

Token 390: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.0015415230300277472
    2. '[-' → logprob: -6.501541614532471
    3. '[' → logprob: -10.751541137695312
    4. '[K' → logprob: -11.126541137695312
    5. ')' → logprob: -13.626541137695312
    6. '(N' → logprob: -14.126541137695312
    7. 'N' → logprob: -14.376541137695312
    8. '[A' → logprob: -16.251541137695312
    9. '[len' → logprob: -16.501541137695312
    10. '[end' → logprob: -16.501541137695312

Token 391: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0001222508290084079
    2. ')' → logprob: -9.6251220703125
    3. ']' → logprob: -10.3751220703125
    4. ' ])' → logprob: -11.6251220703125
    5. '])
' → logprob: -12.0001220703125
    6. '-' → logprob: -12.5001220703125
    7. ']%' → logprob: -13.2501220703125
    8. '))' → logprob: -13.5001220703125
    9. '%' → logprob: -14.2501220703125
    10. '})' → logprob: -14.6251220703125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 389
Tokens correctement prédits (1ère position, stricte): 141
Tokens correctement prédits (1ère position, avec adaptation): 146
Tokens correctement prédits (top 10): 269
Précision stricte (1ère position): 36.25%
Précision adaptée (1ère position): 37.53%
Précision (top 10): 69.15%
================================================================================
