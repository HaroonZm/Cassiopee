================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
S = input()
T = input()

X = 0
i = 0
while i < 3:
    if S[i] == T[i]:
        X = X + 1
    i = i + 1
print(X)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'S' (ID: 50)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029876865446567535
    2. '('' → logprob: -6.627987861633301
    3. ''' → logprob: -7.002987861633301
    4. '()' → logprob: -8.1279878616333
    5. '"' → logprob: -8.6279878616333
    6. '(
' → logprob: -9.3779878616333
    7. '`' → logprob: -9.8779878616333
    8. '("("' → logprob: -10.1279878616333
    9. '.' → logprob: -11.1279878616333
    10. ''s' → logprob: -11.3779878616333

Token 4: 'T' (ID: 51)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009918992407619953
    2. '[' → logprob: -5.634919166564941
    3. '.strip' → logprob: -6.259919166564941
    4. '[::-' → logprob: -6.509919166564941
    5. '+' → logprob: -6.759919166564941
    6. '.lower' → logprob: -7.634919166564941
    7. '.split' → logprob: -8.134919166564941
    8. '.count' → logprob: -8.759919166564941
    9. '.upper' → logprob: -8.759919166564941
    10. '#' → logprob: -8.759919166564941

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26804083585739136
    2. '=' → logprob: -1.6430408954620361
    3. '[' → logprob: -4.018040657043457
    4. '+' → logprob: -5.018040657043457
    5. '.' → logprob: -5.268040657043457
    6. ' +=' → logprob: -5.268040657043457
    7. ' ' → logprob: -5.643040657043457
    8. '+=' → logprob: -6.893040657043457
    9. ''' → logprob: -7.893040657043457
    10. '_' → logprob: -8.018040657043457

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5245146751403809
    2. 'input' → logprob: -0.8995146751403809
    3. ' S' → logprob: -7.399514675140381
    4. 'int' → logprob: -7.899514675140381
    5. ' int' → logprob: -9.024515151977539
    6. 'S' → logprob: -9.399515151977539
    7. ' ' → logprob: -9.399515151977539
    8. '"' → logprob: -10.899515151977539
    9. 'list' → logprob: -11.024515151977539
    10. '(input' → logprob: -11.274515151977539

Token 7: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005275976378470659
    2. '(' → logprob: -5.255276203155518
    3. '()
' → logprob: -11.38027572631836
    4. '`()' → logprob: -11.63027572631836
    5. '()`' → logprob: -12.25527572631836
    6. '()

' → logprob: -12.50527572631836
    7. '```' → logprob: -12.63027572631836
    8. ' ()' → logprob: -12.75527572631836
    9. ')' → logprob: -13.38027572631836
    10. '(
' → logprob: -13.75527572631836

Token 8: 'X' (ID: 55)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5893926620483398
    2. 'for' → logprob: -0.8393926620483398
    3. 'i' → logprob: -4.46439266204834
    4. 'd' → logprob: -7.83939266204834
    5. 'while' → logprob: -7.83939266204834
    6. '```' → logprob: -8.33939266204834
    7. 'n' → logprob: -9.08939266204834
    8. 'a' → logprob: -9.08939266204834
    9. ' for' → logprob: -9.46439266204834
    10. 'dp' → logprob: -9.58939266204834

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4911027252674103
    2. ' =' → logprob: -0.9911026954650879
    3. '_' → logprob: -4.741102695465088
    4. 'for' → logprob: -6.491102695465088
    5. '=len' → logprob: -6.491102695465088
    6. 's' → logprob: -7.116102695465088
    7. '=[]' → logprob: -7.491102695465088
    8. ',' → logprob: -7.491102695465088
    9. 'if' → logprob: -7.866102695465088
    10. 'len' → logprob: -7.991102695465088

Token 10: ' ' (ID: 220)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7220385074615479
    2. 'T' → logprob: -1.9720385074615479
    3. 'len' → logprob: -2.097038507461548
    4. 'set' → logprob: -2.597038507461548
    5. '[]' → logprob: -2.847038507461548
    6. '""' → logprob: -3.097038507461548
    7. 'list' → logprob: -3.722038507461548
    8. '''' → logprob: -4.722038269042969
    9. '[len' → logprob: -5.097038269042969
    10. ' S' → logprob: -5.347038269042969

Token 11: '0' (ID: 15)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3440869152545929
    2. 'T' → logprob: -1.9690868854522705
    3. 'len' → logprob: -2.5940868854522705
    4. 'set' → logprob: -3.5940868854522705
    5. 'list' → logprob: -3.5940868854522705
    6. '""' → logprob: -5.21908712387085
    7. '[]' → logprob: -5.34408712387085
    8. '0' → logprob: -6.21908712387085
    9. '[len' → logprob: -6.59408712387085
    10. '{}' → logprob: -6.84408712387085

Token 12: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 13: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02607802487909794
    2. ' for' → logprob: -4.151078224182129
    3. ' ' → logprob: -5.901078224182129
    4. 'f' → logprob: -6.276078224182129
    5. 'i' → logprob: -6.276078224182129
    6. '
' → logprob: -7.026078224182129
    7. 'if' → logprob: -7.526078224182129
    8. '' → logprob: -7.651078224182129
    9. 'x' → logprob: -8.026078224182129
    10. ',' → logprob: -8.151078224182129

Token 14: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4925903379917145
    2. 'n' → logprob: -1.742590308189392
    3. '=' → logprob: -2.1175904273986816
    4. ' =' → logprob: -2.7425904273986816
    5. '+' → logprob: -4.242590427398682
    6. ' +=' → logprob: -4.867590427398682
    7. ' ' → logprob: -5.992590427398682
    8. '+=' → logprob: -6.617590427398682
    9. 's' → logprob: -6.742590427398682
    10. ' n' → logprob: -7.492590427398682

Token 15: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20162414014339447
    2. ' ' → logprob: -1.7016241550445557
    3. '1' → logprob: -8.576623916625977
    4. 'len' → logprob: -11.326623916625977
    5. ' len' → logprob: -12.764123916625977
    6. '2' → logprob: -13.514123916625977
    7. '  ' → logprob: -14.264123916625977
    8. '<|end|>' → logprob: -14.389123916625977
    9. '+' → logprob: -14.514123916625977
    10. ' S' → logprob: -14.639123916625977

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001507405104348436
    2. ' ' → logprob: -9.000150680541992
    3. '1' → logprob: -10.625150680541992
    4. '2' → logprob: -14.125150680541992
    5. 'i' → logprob: -14.250150680541992
    6. 'len' → logprob: -14.625150680541992
    7. 'X' → logprob: -15.375150680541992
    8. 'S' → logprob: -15.375150680541992
    9. '3' → logprob: -16.437650680541992
    10. '+' → logprob: -16.437650680541992

Token 17: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20659789443016052
    2. ' while' → logprob: -2.3315978050231934
    3. '<|end|>' → logprob: -2.5815978050231934
    4. '
' → logprob: -4.456597805023193
    5. ' 
' → logprob: -7.831597805023193
    6. ' ' → logprob: -7.831597805023193
    7. '<|end|>' → logprob: -7.831597805023193
    8. '```' → logprob: -8.706598281860352
    9. 's' → logprob: -9.081598281860352
    10. 'While' → logprob: -9.331598281860352

Token 18: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09198420494794846
    2. ' while' → logprob: -2.716984272003174
    3. '<|end|>' → logprob: -4.091984272003174
    4. ' ' → logprob: -5.966984272003174
    5. '
' → logprob: -7.966984272003174
    6. 's' → logprob: -8.091983795166016
    7. 'if' → logprob: -8.216983795166016
    8. '```' → logprob: -8.466983795166016
    9. 'for' → logprob: -8.716983795166016
    10. 'w' → logprob: -8.966983795166016

Token 19: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00786852091550827
    2. 'i' → logprob: -4.88286828994751
    3. ' X' → logprob: -8.757868766784668
    4. ' ' → logprob: -9.382868766784668
    5. 'X' → logprob: -11.382868766784668
    6. ' (' → logprob: -13.257868766784668
    7. ' not' → logprob: -13.757868766784668
    8. ' True' → logprob: -13.757868766784668
    9. ' ' → logprob: -13.882868766784668
    10. '(i' → logprob: -13.882868766784668

Token 20: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10233855992555618
    2. '<' → logprob: -2.3523385524749756
    3. '<len' → logprob: -6.227338790893555
    4. ' ' → logprob: -8.852338790893555
    5. '<size' → logprob: -12.727338790893555
    6. ' <=' → logprob: -12.977338790893555
    7. '<n' → logprob: -13.227338790893555
    8. 's' → logprob: -14.602338790893555
    9. '<int' → logprob: -14.602338790893555
    10. 'len' → logprob: -14.602338790893555

Token 21: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.11285925656557083
    2. 'len' → logprob: -2.2378592491149902
    3. '(len' → logprob: -11.112859725952148
    4. ' ' → logprob: -11.237859725952148
    5. ' min' → logprob: -12.737859725952148
    6. '<len' → logprob: -12.987859725952148
    7. '=len' → logprob: -13.237859725952148
    8. '[len' → logprob: -14.612859725952148
    9. 'min' → logprob: -14.612859725952148
    10. '	len' → logprob: -15.237859725952148

Token 22: '3' (ID: 18)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0020173825323581696
    2. ' len' → logprob: -6.252017498016357
    3. 'min' → logprob: -9.7520170211792
    4. '(len' → logprob: -10.7520170211792
    5. '3' → logprob: -13.0020170211792
    6. '=len' → logprob: -13.1270170211792
    7. '<len' → logprob: -13.2520170211792
    8. '2' → logprob: -14.0020170211792
    9. '[len' → logprob: -14.5020170211792
    10. '	len' → logprob: -15.3770170211792

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002658893121406436
    2. ' :' → logprob: -6.002658843994141
    3. ':
' → logprob: -9.37765884399414
    4. ' and' → logprob: -9.37765884399414
    5. '   ' → logprob: -13.00265884399414
    6. 'and' → logprob: -13.00265884399414
    7. ' :
' → logprob: -13.25265884399414
    8. '+:' → logprob: -13.87765884399414
    9. ':i' → logprob: -14.12765884399414
    10. '):' → logprob: -14.25265884399414

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4558408558368683
    2. ':' → logprob: -1.705840826034546
    3. ' ' → logprob: -2.080840826034546
    4. ' if' → logprob: -3.830840826034546
    5. ' and' → logprob: -4.455841064453125
    6. '    ' → logprob: -4.580841064453125
    7. ' :' → logprob: -5.205841064453125
    8. '  ' → logprob: -6.455841064453125
    9. 's' → logprob: -6.830841064453125
    10. ':
' → logprob: -6.830841064453125

Token 25: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2421645075082779
    2. 'if' (adapté à ' if') → logprob: -1.8671644926071167
    3. ' ' → logprob: -3.6171646118164062
    4. 'i' → logprob: -4.742164611816406
    5. 'S' → logprob: -5.242164611816406
    6. 'X' → logprob: -5.367164611816406
    7. '   ' → logprob: -5.492164611816406
    8. ' i' → logprob: -5.492164611816406
    9. ' S' → logprob: -5.742164611816406
    10. ' X' → logprob: -6.742164611816406

Token 26: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.07900083065032959
    2. 'S' → logprob: -2.579000949859619
    3. ' ' → logprob: -10.329000473022461
    4. ' i' → logprob: -10.954000473022461
    5. ' X' → logprob: -11.079000473022461
    6. 'X' → logprob: -11.204000473022461
    7. ' T' → logprob: -11.329000473022461
    8. 'i' → logprob: -12.329000473022461
    9. 's' → logprob: -12.454000473022461
    10. ' s' → logprob: -12.579000473022461

Token 27: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01616820879280567
    2. '[' → logprob: -4.141168117523193
    3. ' ==' → logprob: -9.641168594360352
    4. '==' → logprob: -10.141168594360352
    5. ' [' → logprob: -11.016168594360352
    6. '[X' → logprob: -11.766168594360352
    7. '   ' → logprob: -13.641168594360352
    8. '[I' → logprob: -14.016168594360352
    9. '[T' → logprob: -14.516168594360352
    10. '[x' → logprob: -14.766168594360352

Token 28: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08376885205507278
    2. '==' → logprob: -3.208768844604492
    3. ' ==' → logprob: -4.083768844604492
    4. ' ]' → logprob: -4.333768844604492
    5. ']==' → logprob: -4.833768844604492
    6. '=' → logprob: -7.333768844604492
    7. '!=' → logprob: -8.083768844604492
    8. ' !=' → logprob: -8.583768844604492
    9. '[' → logprob: -8.708768844604492
    10. ' ' → logprob: -8.958768844604492

Token 29: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6697894334793091
    2. ' ==' → logprob: -0.7947894334793091
    3. '!=' → logprob: -3.9197893142700195
    4. ' !=' → logprob: -4.1697893142700195
    5. ' ' → logprob: -7.6697893142700195
    6. '=' → logprob: -8.41978931427002
    7. ' in' → logprob: -9.41978931427002
    8. '>' → logprob: -9.54478931427002
    9. '+' → logprob: -9.54478931427002
    10. '<' → logprob: -9.79478931427002

Token 30: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.1761118620634079
    2. ' T' → logprob: -1.9261118173599243
    3. ''' → logprob: -4.426111698150635
    4. ' '' → logprob: -6.051111698150635
    5. ' ' → logprob: -7.176111698150635
    6. ''T' → logprob: -7.926111698150635
    7. 'S' → logprob: -9.426112174987793
    8. '"' → logprob: -9.551112174987793
    9. '"T' → logprob: -10.051112174987793
    10. '  ' → logprob: -10.176112174987793

Token 31: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001105762057704851
    2. '[' → logprob: -9.125110626220703
    3. '[I' → logprob: -14.625110626220703
    4. 'i' → logprob: -15.250110626220703
    5. '[j' → logprob: -15.625110626220703
    6. '```' → logprob: -15.750110626220703
    7. '[X' → logprob: -16.125110626220703
    8. '   ' → logprob: -16.250110626220703
    9. ']' → logprob: -16.250110626220703
    10. ' [' → logprob: -17.000110626220703

Token 32: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.10240290313959122
    2. ']' → logprob: -2.352402925491333
    3. ' ]' → logprob: -6.477402687072754
    4. '):' → logprob: -8.477402687072754
    5. '']:' → logprob: -8.977402687072754
    6. ']:
' → logprob: -8.977402687072754
    7. ':' → logprob: -9.727402687072754
    8. '']' → logprob: -10.977402687072754
    9. ']==' → logprob: -10.977402687072754
    10. '"]:' → logprob: -10.977402687072754

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01586589589715004
    2. 'X' → logprob: -5.015865802764893
    3. '   ' → logprob: -5.390865802764893
    4. ' ' → logprob: -6.640865802764893
    5. '    ' → logprob: -7.265865802764893
    6. '        
' → logprob: -7.640865802764893
    7. ' X' → logprob: -7.765865802764893
    8. ':' → logprob: -8.01586627960205
    9. '\n' → logprob: -8.01586627960205
    10. '     ' → logprob: -9.51586627960205

Token 34: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.21916823089122772
    2. 'i' → logprob: -2.094168186187744
    3. '   ' → logprob: -3.719168186187744
    4. ' X' → logprob: -3.844168186187744
    5. ' i' → logprob: -3.969168186187744
    6. '       ' → logprob: -5.719168186187744
    7. ' ' → logprob: -6.469168186187744
    8. '    ' → logprob: -6.844168186187744
    9. ' 
' → logprob: -6.969168186187744
    10. '    
' → logprob: -8.094168663024902

Token 35: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.009432812221348286
    2. ' +=' → logprob: -4.884432792663574
    3. '=' → logprob: -6.509432792663574
    4. '+' → logprob: -8.009432792663574
    5. ' =' → logprob: -14.134432792663574
    6. ']+=' → logprob: -14.509432792663574
    7. '+='' → logprob: -14.759432792663574
    8. '+=(' → logprob: -14.884432792663574
    9. '++' → logprob: -15.009432792663574
    10. '-=' → logprob: -15.009432792663574

Token 36: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.050912462174892426
    2. ' X' → logprob: -3.175912380218506
    3. '1' → logprob: -5.800912380218506
    4. '0' → logprob: -5.800912380218506
    5. '+' → logprob: -6.800912380218506
    6. '2' → logprob: -8.550912857055664
    7. ' ' → logprob: -8.800912857055664
    8. '3' → logprob: -8.925912857055664
    9. '10' → logprob: -9.800912857055664
    10. '5' → logprob: -10.175912857055664

Token 37: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008323782822117209
    2. ' +' → logprob: -7.125832557678223
    3. '+
' → logprob: -10.750832557678223
    4. '<|end|>' → logprob: -13.375832557678223
    5. 'else' → logprob: -13.875832557678223
    6. '1' → logprob: -13.875832557678223
    7. '
' → logprob: -14.125832557678223
    8. 'elif' → logprob: -15.000832557678223
    9. '+i' → logprob: -15.500832557678223
    10. '+=' → logprob: -15.750832557678223

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004807230085134506
    2. ' ' → logprob: -5.379806995391846
    3. '0' → logprob: -9.004807472229004
    4. '2' → logprob: -10.004807472229004
    5. '3' → logprob: -11.379807472229004
    6. '10' → logprob: -12.629807472229004
    7. '4' → logprob: -13.879807472229004
    8. '5' → logprob: -14.379807472229004
    9. '100' → logprob: -14.504807472229004
    10. '20' → logprob: -14.879807472229004

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020086953882128
    2. '0' → logprob: -6.25200891494751
    3. '2' → logprob: -9.877008438110352
    4. ' ' → logprob: -11.252008438110352
    5. '3' → logprob: -11.627008438110352
    6. '+' → logprob: -13.814508438110352
    7. '100' → logprob: -14.127008438110352
    8. '10' → logprob: -14.314508438110352
    9. 'S' → logprob: -14.314508438110352
    10. '   ' → logprob: -15.002008438110352

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03838478773832321
    2. '
' → logprob: -4.038384914398193
    3. '    
' → logprob: -4.288384914398193
    4. 'i' → logprob: -5.913384914398193
    5. ' i' → logprob: -6.913384914398193
    6. '\n' → logprob: -7.038384914398193
    7. ' 
' → logprob: -7.288384914398193
    8. '  
' → logprob: -8.163384437561035
    9. '   
' → logprob: -8.288384437561035
    10. '	i' → logprob: -9.163384437561035

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005762995686382055
    2. 'i' → logprob: -5.505763053894043
    3. '    
' → logprob: -7.130763053894043
    4. ' i' → logprob: -7.630763053894043
    5. '
' → logprob: -8.380763053894043
    6. '```' → logprob: -9.630763053894043
    7. '	i' → logprob: -10.380763053894043
    8. '   
' → logprob: -11.505763053894043
    9. '[i' → logprob: -11.630763053894043
    10. '\n' → logprob: -12.005763053894043

Token 42: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.6661268472671509
    2. '   ' → logprob: -0.9161268472671509
    3. ' i' → logprob: -2.5411267280578613
    4. '    
' → logprob: -6.166126728057861
    5. '	i' → logprob: -6.166126728057861
    6. ' ' → logprob: -6.791126728057861
    7. 'else' → logprob: -7.291126728057861
    8. ' else' → logprob: -7.291126728057861
    9. '\n' → logprob: -8.66612720489502
    10. '
' → logprob: -8.79112720489502

Token 43: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4177131950855255
    2. '+' → logprob: -1.1677131652832031
    3. ' +=' → logprob: -3.542713165283203
    4. '=' → logprob: -6.917713165283203
    5. '++' → logprob: -7.917713165283203
    6. '+++' → logprob: -10.417713165283203
    7. '+="' → logprob: -11.292713165283203
    8. '+='' → logprob: -11.542713165283203
    9. '<|end|>' → logprob: -11.667713165283203
    10. ' ' → logprob: -11.667713165283203

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5761218070983887
    2. 'i' → logprob: -0.8261218070983887
    3. '1' → logprob: -8.826122283935547
    4. ' ' → logprob: -10.576122283935547
    5. '+' → logprob: -12.326122283935547
    6. '	i' → logprob: -13.201122283935547
    7. '0' → logprob: -13.451122283935547
    8. '+i' → logprob: -14.951122283935547
    9. '```' → logprob: -15.201122283935547
    10. '_i' → logprob: -15.326122283935547

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003464289184194058
    2. ' +' → logprob: -8.000346183776855
    3. '1' → logprob: -11.875346183776855
    4. ' ' → logprob: -12.625346183776855
    5. '+
' → logprob: -15.375346183776855
    6. ' plus' → logprob: -15.500346183776855
    7. '+i' → logprob: -15.500346183776855
    8. '++' → logprob: -16.750347137451172
    9. '   ' → logprob: -17.750347137451172
    10. '0' → logprob: -17.750347137451172

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -17.62504005432129
    4. '   ' → logprob: -18.12504005432129
    5. '１' → logprob: -19.50004005432129
    6. '  ' → logprob: -20.06254005432129
    7. ' ' → logprob: -20.75004005432129
    8. '2' → logprob: -21.06254005432129
    9. '`' → logprob: -21.12504005432129
    10. '۱' → logprob: -21.25004005432129

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -16.0000057220459
    4. '   ' → logprob: -18.3125057220459
    5. '2' → logprob: -19.1250057220459
    6. '  ' → logprob: -19.1250057220459
    7. '0' → logprob: -19.1250057220459
    8. '+' → logprob: -19.2500057220459
    9. '１' → logprob: -19.3125057220459
    10. '`' → logprob: -19.8125057220459

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6676701903343201
    2. 'print' → logprob: -0.7926701903343201
    3. '#' → logprob: -4.292670249938965
    4. '<|end|>' → logprob: -4.292670249938965
    5. '\n' → logprob: -6.292670249938965
    6. '```' → logprob: -6.667670249938965
    7. ')' → logprob: -7.417670249938965
    8. ' 
' → logprob: -7.417670249938965
    9. '\' → logprob: -7.917670249938965
    10. 'X' → logprob: -7.917670249938965

Token 49: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022576642222702503
    2. 'if' → logprob: -6.252257823944092
    3. 'p' → logprob: -9.377257347106934
    4. '
' → logprob: -9.502257347106934
    5. '```' → logprob: -9.502257347106934
    6. 'X' → logprob: -10.877257347106934
    7. '#' → logprob: -11.002257347106934
    8. 'pr' → logprob: -11.502257347106934
    9. ' print' → logprob: -12.252257347106934
    10. ')' → logprob: -12.252257347106934

Token 50: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.5760037899017334
    2. '(' → logprob: -0.8260037899017334
    3. '('' → logprob: -10.701004028320312
    4. '(x' → logprob: -11.451004028320312
    5. '(S' → logprob: -11.576004028320312
    6. '()' → logprob: -11.951004028320312
    7. '("("' → logprob: -12.326004028320312
    8. '("' → logprob: -12.576004028320312
    9. 'X' → logprob: -12.826004028320312
    10. '((' → logprob: -13.076004028320312

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -18.5
    3. ')`' → logprob: -18.875
    4. ')
' → logprob: -19.625
    5. '))' → logprob: -19.75
    6. ')}' → logprob: -21.125
    7. '')' → logprob: -21.25
    8. '),' → logprob: -21.375
    9. ')#' → logprob: -21.75
    10. '}' → logprob: -22.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 49
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 42.86%
Précision adaptée (1ère position): 46.94%
Précision (top 10): 87.76%
================================================================================
