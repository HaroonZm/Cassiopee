================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = input()
a = raw_input().split()
a = [int(x) for x in a]

result = []
s = 1
count = 0

while len(a) != 0:
    temp = []
    for i in range(0, len(a)):
        if a[i] % 2 == 0 and a[i] != 0:
            temp.append(a[i] // 2)
    count = count + len(temp)
    a = []
    a.extend(temp)

print count
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023276021238416433
    2. '('' → logprob: -6.8773274421691895
    3. ''' → logprob: -7.0023274421691895
    4. '"' → logprob: -8.752327919006348
    5. '("("' → logprob: -9.502327919006348
    6. '(
' → logprob: -9.627327919006348
    7. '()' → logprob: -10.377327919006348
    8. '[' → logprob: -11.377327919006348
    9. ' (' → logprob: -12.127327919006348
    10. '`' → logprob: -12.127327919006348

Token 4: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6191835403442383
    2. '+' → logprob: -0.8691835403442383
    3. '.strip' → logprob: -4.869183540344238
    4. '*' → logprob: -5.119183540344238
    5. '\n' → logprob: -5.119183540344238
    6. '=' → logprob: -5.494183540344238
    7. '()' → logprob: -5.744183540344238
    8. ')' → logprob: -5.994183540344238
    9. '```' → logprob: -5.994183540344238
    10. '.split' → logprob: -6.369183540344238

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5275694727897644
    2. '=' → logprob: -1.2775695323944092
    3. '.' → logprob: -2.527569532394409
    4. '[' → logprob: -4.02756929397583
    5. '+' → logprob: -4.90256929397583
    6. 's' → logprob: -5.02756929397583
    7. ',' → logprob: -5.15256929397583
    8. ' ' → logprob: -5.65256929397583
    9. '_' → logprob: -5.90256929397583
    10. 'm' → logprob: -6.40256929397583

Token 6: ' raw' (ID: 11428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6933903694152832
    2. ' int' → logprob: -0.8183903694152832
    3. ' n' → logprob: -4.193390369415283
    4. ' input' → logprob: -4.193390369415283
    5. 'n' → logprob: -4.318390369415283
    6. 'input' → logprob: -4.443390369415283
    7. ' ' → logprob: -6.818390369415283
    8. '[int' → logprob: -7.318390369415283
    9. ' []' → logprob: -7.443390369415283
    10. '[]' → logprob: -7.818390369415283

Token 7: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019725920632481575
    2. '_input' → logprob: -4.269725799560547
    3. '_i' → logprob: -5.644725799560547
    4. '_in' → logprob: -6.269725799560547
    5. ' _' → logprob: -10.019725799560547
    6. 'i' → logprob: -11.019725799560547
    7. ')' → logprob: -11.894725799560547
    8. '_
' → logprob: -11.894725799560547
    9. 'in' → logprob: -12.269725799560547
    10. '_\' → logprob: -12.269725799560547

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009078874718397856
    2. '('' → logprob: -8.375907897949219
    3. '(
' → logprob: -8.750907897949219
    4. '()' → logprob: -8.875907897949219
    5. ''' → logprob: -9.000907897949219
    6. '(

' → logprob: -9.625907897949219
    7. ' (' → logprob: -9.875907897949219
    8. '"' → logprob: -10.125907897949219
    9. '`' → logprob: -10.500907897949219
    10. '("("' → logprob: -10.625907897949219

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011273691430687904
    2. 'strip' → logprob: -4.5112738609313965
    3. 's' → logprob: -8.511273384094238
    4. 'spl' → logprob: -11.636273384094238
    5. ' split' → logprob: -11.761273384094238
    6. 'rstrip' → logprob: -12.261273384094238
    7. 'sp' → logprob: -13.261273384094238
    8. 'replace' → logprob: -13.511273384094238
    9. 'r' → logprob: -16.011274337768555
    10. '.split' → logprob: -17.511274337768555

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038456751499325037
    2. '()' → logprob: -6.128845691680908
    3. '('' → logprob: -6.878845691680908
    4. '("("' → logprob: -7.503845691680908
    5. '(
' → logprob: -10.87884521484375
    6. '(

' → logprob: -11.12884521484375
    7. '((' → logprob: -11.37884521484375
    8. '(`' → logprob: -11.87884521484375
    9. '"' → logprob: -11.87884521484375
    10. ' (' → logprob: -12.50384521484375

Token 11: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3414621353149414
    2. '[' → logprob: -1.9664621353149414
    3. '.' → logprob: -2.8414621353149414
    4. 'a' → logprob: -3.2164621353149414
    5. '#' → logprob: -4.091462135314941
    6. '=' → logprob: -4.591462135314941
    7. ' for' → logprob: -5.341462135314941
    8. 'n' → logprob: -5.591462135314941
    9. '[:]' → logprob: -5.841462135314941
    10. 'if' → logprob: -6.216462135314941

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12953108549118042
    2. '.' → logprob: -2.254531145095825
    3. '<|end|>' → logprob: -4.754530906677246
    4. '```' → logprob: -6.504530906677246
    5. '#' → logprob: -7.004530906677246
    6. '[
' → logprob: -7.129530906677246
    7. '\[' → logprob: -7.129530906677246
    8. '[a' → logprob: -7.379530906677246
    9. ')' → logprob: -7.504530906677246
    10. '[:]' → logprob: -7.754530906677246

Token 13: ' [' (ID: 723)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4428211450576782
    2. ' map' → logprob: -2.1928210258483887
    3. '[' → logprob: -2.3178210258483887
    4. 'list' → logprob: -2.4428210258483887
    5. ' list' → logprob: -3.5678210258483887
    6. ' [' → logprob: -3.9428210258483887
    7. '[list' → logprob: -4.567821025848389
    8. '[a' → logprob: -7.067821025848389
    9. '[int' → logprob: -7.067821025848389
    10. '[n' → logprob: -7.817821025848389

Token 14: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.7755875129951164e-05
    2. ' int' → logprob: -10.00004768371582
    3. '(int' → logprob: -14.25004768371582
    4. 'n' → logprob: -14.75004768371582
    5. ']int' → logprob: -14.75004768371582
    6. 'float' → logprob: -15.00004768371582
    7. '[int' → logprob: -15.50004768371582
    8. ''int' → logprob: -16.37504768371582
    9. '	int' → logprob: -16.62504768371582
    10. 'i' → logprob: -17.25004768371582

Token 15: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.23453083634376526
    2. '(' → logprob: -1.7345308065414429
    3. '(i' → logprob: -3.4845309257507324
    4. '(a' → logprob: -6.484530925750732
    5. '(s' → logprob: -8.484530448913574
    6. '(item' → logprob: -10.109530448913574
    7. '(n' → logprob: -10.484530448913574
    8. '(token' → logprob: -11.109530448913574
    9. '(
' → logprob: -11.359530448913574
    10. '(o' → logprob: -11.484530448913574

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000844768132083118
    2. '(x' → logprob: -7.500844955444336
    3. ')]' → logprob: -8.250844955444336
    4. 'a' → logprob: -12.000844955444336
    5. '(a' → logprob: -12.000844955444336
    6. ')a' → logprob: -12.250844955444336
    7. ')x' → logprob: -12.250844955444336
    8. ' )' → logprob: -13.000844955444336
    9. ']' → logprob: -13.750844955444336
    10. ')])' → logprob: -13.750844955444336

Token 17: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20139345526695251
    2. '(x' → logprob: -1.826393485069275
    3. ']' → logprob: -4.5763936042785645
    4. ')]' → logprob: -5.2013936042785645
    5. 'for' → logprob: -6.2013936042785645
    6. '(' → logprob: -6.7013936042785645
    7. '(a' → logprob: -6.7013936042785645
    8. ' for' → logprob: -7.4513936042785645
    9. 'a' → logprob: -8.576393127441406
    10. '(n' → logprob: -9.451393127441406

Token 18: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16257601976394653
    2. ' ' → logprob: -1.9125759601593018
    3. 'x' → logprob: -6.787576198577881
    4. '(x' → logprob: -6.912576198577881
    5. '<|end|>' → logprob: -9.537575721740723
    6. '  ' → logprob: -9.787575721740723
    7. ' (' → logprob: -10.037575721740723
    8. ' a' → logprob: -11.162575721740723
    9. '(' → logprob: -11.412575721740723
    10. '	x' → logprob: -11.662575721740723

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20154783129692078
    2. 'in' → logprob: -1.7015478610992432
    3. 'a' → logprob: -9.826547622680664
    4. ' ' → logprob: -9.826547622680664
    5. '	in' → logprob: -11.951547622680664
    6. 'x' → logprob: -12.826547622680664
    7. ')' → logprob: -12.826547622680664
    8. '(x' → logprob: -13.076547622680664
    9. 'n' → logprob: -13.451547622680664
    10. 'inx' → logprob: -13.576547622680664

Token 20: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22541585564613342
    2. ' a' → logprob: -1.600415825843811
    3. ' ' → logprob: -13.97541618347168
    4. '	a' → logprob: -14.35041618347168
    5. '(a' → logprob: -14.47541618347168
    6. ')a' → logprob: -15.60041618347168
    7. 'x' → logprob: -16.10041618347168
    8. ' range' → logprob: -16.22541618347168
    9. 'raw' → logprob: -16.35041618347168
    10. '  ' → logprob: -16.47541618347168

Token 21: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009501680615358055
    2. ')]' → logprob: -7.375950336456299
    3. ')' → logprob: -8.50094985961914
    4. '])' → logprob: -9.12594985961914
    5. ']
' → logprob: -12.37594985961914
    6. ' ]' → logprob: -12.37594985961914
    7. '']' → logprob: -13.75094985961914
    8. '])]' → logprob: -14.50094985961914
    9. '`]' → logprob: -14.87594985961914
    10. '()]' → logprob: -15.62594985961914

Token 22: 'result' (ID: 2521)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1665436029434204
    2. 'for' → logprob: -1.2915436029434204
    3. 's' → logprob: -2.166543483734131
    4. 'c' → logprob: -2.541543483734131
    5. 'n' → logprob: -2.916543483734131
    6. 'k' → logprob: -3.291543483734131
    7. 'i' → logprob: -3.416543483734131
    8. 'if' → logprob: -3.666543483734131
    9. 'b' → logprob: -4.166543483734131
    10. 'sum' → logprob: -4.416543483734131

Token 23: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3935726284980774
    2. '=' → logprob: -2.0185725688934326
    3. ' =' → logprob: -2.0185725688934326
    4. 's' → logprob: -3.5185725688934326
    5. '_' → logprob: -4.268572807312012
    6. '[' → logprob: -4.768572807312012
    7. '.append' → logprob: -5.268572807312012
    8. '[:]' → logprob: -7.018572807312012
    9. '(' → logprob: -7.768572807312012
    10. '.=' → logprob: -8.768572807312012

Token 24: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7456669807434082
    2. 'sum' → logprob: -1.8706669807434082
    3. '[]' → logprob: -2.120666980743408
    4. 'max' → logprob: -2.120666980743408
    5. ' []' → logprob: -3.495666980743408
    6. ' ' → logprob: -3.620666980743408
    7. ' max' → logprob: -3.620666980743408
    8. 'a' → logprob: -4.120666980743408
    9. '[max' → logprob: -4.620666980743408
    10. ' sum' → logprob: -4.870666980743408

Token 25: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027266559191048145
    2. ' for' → logprob: -6.1277265548706055
    3. ' ' → logprob: -8.877726554870605
    4. 'n' → logprob: -9.002726554870605
    5. 'f' → logprob: -9.127726554870605
    6. 'i' → logprob: -9.627726554870605
    7. '(' → logprob: -10.252726554870605
    8. '
' → logprob: -11.002726554870605
    9. '\n' → logprob: -11.502726554870605
    10. ' 
' → logprob: -11.502726554870605

Token 26: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.08795350044965744
    2. 'u' → logprob: -3.087953567504883
    3. ' =' → logprob: -3.462953567504883
    4. '.' → logprob: -5.212953567504883
    5. '=' → logprob: -7.337953567504883
    6. 'e' → logprob: -7.587953567504883
    7. '_' → logprob: -8.712953567504883
    8. ' ' → logprob: -9.212953567504883
    9. '.append' → logprob: -9.462953567504883
    10. 'ums' → logprob: -10.212953567504883

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14144420623779297
    2. ' ' → logprob: -2.141444206237793
    3. 'set' → logprob: -4.766444206237793
    4. ' set' → logprob: -5.641444206237793
    5. 'sum' → logprob: -6.391444206237793
    6. ' sum' → logprob: -7.891444206237793
    7. ' []' → logprob: -8.891444206237793
    8. '{}' → logprob: -10.016444206237793
    9. 'a' → logprob: -10.391444206237793
    10. '[]' → logprob: -10.766444206237793

Token 28: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09360779821872711
    2. 'set' → logprob: -2.4686079025268555
    3. 'sum' → logprob: -5.4686079025268555
    4. '{}' → logprob: -8.468607902526855
    5. '[]' → logprob: -9.468607902526855
    6. '{' → logprob: -9.593607902526855
    7. ' set' → logprob: -10.718607902526855
    8. ' ' → logprob: -10.968607902526855
    9. '""' → logprob: -11.093607902526855
    10. 'a' → logprob: -11.218607902526855

Token 29: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2741450369358063
    2. ' for' → logprob: -1.5241450071334839
    3. '
' → logprob: -4.024145126342773
    4. '0' → logprob: -6.649145126342773
    5. '<|end|>' → logprob: -7.524145126342773
    6. ' ' → logprob: -7.774145126342773
    7. '+' → logprob: -7.899145126342773
    8. ',' → logprob: -8.024145126342773
    9. '*' → logprob: -8.149145126342773
    10. '.' → logprob: -9.024145126342773

Token 30: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010008218698203564
    2. ' for' → logprob: -4.635008335113525
    3. '
' → logprob: -8.885007858276367
    4. 'i' → logprob: -9.510007858276367
    5. '0' → logprob: -11.635007858276367
    6. '<|end|>' → logprob: -11.885007858276367
    7. 'n' → logprob: -12.135007858276367
    8. 'f' → logprob: -12.385007858276367
    9. '+' → logprob: -13.135007858276367
    10. '	for' → logprob: -13.260007858276367

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8346850275993347
    2. '=' → logprob: -1.2096850872039795
    3. '_' → logprob: -1.5846850872039795
    4. ' ' → logprob: -2.9596850872039795
    5. 's' → logprob: -4.9596848487854
    6. ')' → logprob: -6.7096848487854
    7. '[' → logprob: -7.8346848487854
    8. ',' → logprob: -8.084685325622559
    9. '  ' → logprob: -8.084685325622559
    10. ' +=' → logprob: -8.209685325622559

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14669789373874664
    2. ' ' → logprob: -2.021697998046875
    3. '1' → logprob: -5.521697998046875
    4. 's' → logprob: -11.646697998046875
    5. ' s' → logprob: -13.271697998046875
    6. '2' → logprob: -14.271697998046875
    7. 'n' → logprob: -14.459197998046875
    8. '  ' → logprob: -14.709197998046875
    9. 'a' → logprob: -14.834197998046875
    10. ' ' → logprob: -14.959197998046875

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1272432655096054
    2. '1' → logprob: -2.1272432804107666
    3. ' ' → logprob: -8.127243041992188
    4. 's' → logprob: -12.002243041992188
    5. 'a' → logprob: -12.752243041992188
    6. 'n' → logprob: -12.752243041992188
    7. '-' → logprob: -13.127243041992188
    8. '2' → logprob: -13.377243041992188
    9. 'len' → logprob: -13.502243041992188
    10. '   ' → logprob: -14.877243041992188

Token 34: '

' (ID: 279)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9981824159622192
    2. 'for' → logprob: -1.1231824159622192
    3. '<|end|>' → logprob: -1.2481824159622192
    4. ':' → logprob: -5.62318229675293
    5. '
' → logprob: -5.99818229675293
    6. '+' → logprob: -6.12318229675293
    7. '<|end|>' → logprob: -6.24818229675293
    8. ',' → logprob: -6.24818229675293
    9. '*' → logprob: -6.37318229675293
    10. '\n' → logprob: -6.62318229675293

Token 35: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002067588793579489
    2. ' for' → logprob: -8.50020694732666
    3. '
' → logprob: -13.62520694732666
    4. 'i' → logprob: -14.50020694732666
    5. 'if' → logprob: -14.50020694732666
    6. 'n' → logprob: -14.75020694732666
    7. '<|end|>' → logprob: -15.50020694732666
    8. '	for' → logprob: -16.125205993652344
    9. 'while' → logprob: -16.625205993652344
    10. '```' → logprob: -16.625205993652344

Token 36: ' len' (ID: 4631)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.049204353243112564
    2. ' s' → logprob: -3.6742043495178223
    3. 'count' → logprob: -4.049204349517822
    4. ' n' → logprob: -5.674204349517822
    5. 's' → logprob: -7.424204349517822
    6. '(count' → logprob: -7.424204349517822
    7. ' ' → logprob: -7.924204349517822
    8. ' len' → logprob: -9.54920482635498
    9. 'n' → logprob: -9.79920482635498
    10. ' True' → logprob: -10.42420482635498

Token 37: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02573546953499317
    2. '(' → logprob: -3.900735378265381
    3. '(s' → logprob: -5.900735378265381
    4. '(result' → logprob: -6.025735378265381
    5. 'a' → logprob: -11.275735855102539
    6. '(n' → logprob: -12.275735855102539
    7. ' (' → logprob: -12.400735855102539
    8. '()' → logprob: -14.150735855102539
    9. 'result' → logprob: -14.275735855102539
    10. 's' → logprob: -14.525735855102539

Token 38: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6281626224517822
    2. ' >' → logprob: -1.3781626224517822
    3. ')' → logprob: -2.2531626224517822
    4. ' and' → logprob: -2.3781626224517822
    5. ')>' → logprob: -4.378162384033203
    6. 'and' → logprob: -6.003162384033203
    7. ' )' → logprob: -6.753162384033203
    8. ' ' → logprob: -8.128162384033203
    9. '()>' → logprob: -9.753162384033203
    10. '&gt' → logprob: -11.253162384033203

Token 39: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5934889912605286
    2. ' >' → logprob: -0.8434889912605286
    3. ' and' → logprob: -4.093489170074463
    4. 'and' → logprob: -7.468489170074463
    5. ':' → logprob: -10.218488693237305
    6. ' ' → logprob: -10.468488693237305
    7. '()>' → logprob: -11.218488693237305
    8. '>=' → logprob: -11.218488693237305
    9. ' >=' → logprob: -11.468488693237305
    10. ')' → logprob: -11.843488693237305

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3486396074295044
    2. ' ' → logprob: -1.2236396074295044
    3. '1' → logprob: -8.848639488220215
    4. 's' → logprob: -10.723639488220215
    5. 'count' → logprob: -11.473639488220215
    6. ' s' → logprob: -11.723639488220215
    7. ' count' → logprob: -12.723639488220215
    8. '  ' → logprob: -12.848639488220215
    9. '2' → logprob: -13.848639488220215
    10. ' n' → logprob: -14.223639488220215

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005200279993005097
    2. ' ' → logprob: -8.000519752502441
    3. '1' → logprob: -8.625519752502441
    4. ')' → logprob: -13.375519752502441
    5. 's' → logprob: -14.000519752502441
    6. '  ' → logprob: -14.125519752502441
    7. '   ' → logprob: -14.625519752502441
    8. '    ' → logprob: -15.125519752502441
    9. '2' → logprob: -15.250519752502441
    10. 'n' → logprob: -15.500519752502441

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.722539834911004e-05
    2. ':
' → logprob: -9.375097274780273
    3. ' :' → logprob: -12.250097274780273
    4. ' and' → logprob: -12.375097274780273
    5. '   ' → logprob: -13.875097274780273
    6. ',' → logprob: -14.000097274780273
    7. ':**' → logprob: -14.750097274780273
    8. '):' → logprob: -15.500097274780273
    9. ':

' → logprob: -15.750097274780273
    10. '[' → logprob: -16.000097274780273

Token 43: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6768710613250732
    2. '   ' → logprob: -1.5518710613250732
    3. ':' → logprob: -1.6768710613250732
    4. '<|end|>' → logprob: -3.9268710613250732
    5. 'if' → logprob: -4.051871299743652
    6. ' ' → logprob: -4.176871299743652
    7. ' for' → logprob: -4.551871299743652
    8. ' and' → logprob: -5.176871299743652
    9. ':
' → logprob: -5.926871299743652
    10. ' s' → logprob: -6.051871299743652

Token 44: ' temp' (ID: 5484)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3138093650341034
    2. 'for' → logprob: -1.6888093948364258
    3. 'count' → logprob: -3.813809394836426
    4. ' if' → logprob: -4.188809394836426
    5. 'x' → logprob: -4.438809394836426
    6. 'i' → logprob: -4.563809394836426
    7. ' for' → logprob: -5.063809394836426
    8. 'min' → logprob: -5.563809394836426
    9. 'temp' (adapté à ' temp') → logprob: -6.188809394836426
    10. 'current' → logprob: -6.188809394836426

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42951732873916626
    2. '=' → logprob: -1.0545172691345215
    3. '_' → logprob: -7.1795172691345215
    4. ',' → logprob: -10.42951774597168
    5. 's' → logprob: -11.92951774597168
    6. ' ' → logprob: -12.42951774597168
    7. ')' → logprob: -13.30451774597168
    8. '=int' → logprob: -13.30451774597168
    9. '_=' → logprob: -13.30451774597168
    10. '=[]' → logprob: -13.42951774597168

Token 46: ' []
' (ID: 8911)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11382826417684555
    2. ' a' → logprob: -2.238828182220459
    3. '[]' → logprob: -8.238828659057617
    4. ' []' → logprob: -8.238828659057617
    5. 's' → logprob: -8.613828659057617
    6. '0' → logprob: -9.363828659057617
    7. ' ' → logprob: -9.488828659057617
    8. ' s' → logprob: -9.613828659057617
    9. 'max' → logprob: -11.738828659057617
    10. '	a' → logprob: -11.738828659057617

Token 47: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1835280954837799
    2. ' for' → logprob: -1.9335280656814575
    3. '   ' → logprob: -4.308527946472168
    4. 'if' → logprob: -5.808527946472168
    5. 'while' → logprob: -6.308527946472168
    6. 'i' → logprob: -6.683527946472168
    7. 'a' → logprob: -7.183527946472168
    8. 'n' → logprob: -7.683527946472168
    9. ' if' → logprob: -7.808527946472168
    10. '[' → logprob: -7.933527946472168

Token 48: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013404091820120811
    2. 'while' → logprob: -5.13840389251709
    3. 'temp' → logprob: -5.63840389251709
    4. 'if' → logprob: -6.26340389251709
    5. 'i' → logprob: -7.38840389251709
    6. ' for' → logprob: -7.63840389251709
    7. 'x' → logprob: -8.13840389251709
    8. 'count' → logprob: -8.63840389251709
    9. 'a' → logprob: -9.13840389251709
    10. 's' → logprob: -9.38840389251709

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.35974806547164917
    2. 'i' → logprob: -2.359748125076294
    3. ' x' → logprob: -2.484748125076294
    4. 'x' → logprob: -3.109748125076294
    5. ' a' → logprob: -3.484748125076294
    6. ' range' → logprob: -4.359747886657715
    7. ' _' → logprob: -4.484747886657715
    8. 'a' → logprob: -4.609747886657715
    9. '_' → logprob: -4.984747886657715
    10. 'range' → logprob: -5.734747886657715

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04868127033114433
    2. 'in' → logprob: -3.0486812591552734
    3. ' ' → logprob: -9.423681259155273
    4. '	in' → logprob: -12.298681259155273
    5. '  ' → logprob: -12.548681259155273
    6. 'range' → logprob: -13.548681259155273
    7. '<|end|>' → logprob: -14.048681259155273
    8. '   ' → logprob: -14.423681259155273
    9. '    ' → logprob: -14.798681259155273
    10. ',' → logprob: -14.798681259155273

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.33656856417655945
    2. 'a' → logprob: -1.4615685939788818
    3. ' range' → logprob: -3.086568593978882
    4. ' a' → logprob: -5.336568355560303
    5. ' xrange' → logprob: -5.711568355560303
    6. 'x' → logprob: -10.461568832397461
    7. ' ' → logprob: -10.461568832397461
    8. '  ' → logprob: -10.836568832397461
    9. '	range' → logprob: -11.211568832397461
    10. '   ' → logprob: -11.711568832397461

Token 52: '(' (ID: 7)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.16682679951190948
    2. '(len' → logprob: -2.0418267250061035
    3. '(' → logprob: -3.7918267250061035
    4. '(count' → logprob: -7.5418267250061035
    5. 's' → logprob: -7.9168267250061035
    6. '(n' → logprob: -8.416827201843262
    7. '(min' → logprob: -9.166827201843262
    8. ' (' → logprob: -10.166827201843262
    9. '(l' → logprob: -11.416827201843262
    10. 'len' → logprob: -11.791827201843262

Token 53: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00751505745574832
    2. 's' → logprob: -5.132514953613281
    3. '1' → logprob: -7.382514953613281
    4. ' len' → logprob: -7.882514953613281
    5. '0' → logprob: -8.757514953613281
    6. '(len' → logprob: -8.757514953613281
    7. 'n' → logprob: -9.257514953613281
    8. 'min' → logprob: -9.257514953613281
    9. 'count' → logprob: -10.007514953613281
    10. '2' → logprob: -11.007514953613281

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02286652848124504
    2. ',len' → logprob: -4.147866725921631
    3. ' ,' → logprob: -5.272866725921631
    4. 'len' → logprob: -6.897866725921631
    5. ' ' → logprob: -8.272866249084473
    6. ' len' → logprob: -8.397866249084473
    7. '   ' → logprob: -9.522866249084473
    8. ')' → logprob: -9.897866249084473
    9. '(len' → logprob: -11.522866249084473
    10. '  ' → logprob: -11.522866249084473

Token 55: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04495139792561531
    2. 's' → logprob: -3.5449514389038086
    3. ' len' → logprob: -4.419951438903809
    4. 'min' → logprob: -6.294951438903809
    5. ' s' → logprob: -7.044951438903809
    6. 'n' → logprob: -9.044951438903809
    7. ' min' → logprob: -9.544951438903809
    8. 'count' → logprob: -10.169951438903809
    9. '2' → logprob: -10.419951438903809
    10. ' ' → logprob: -11.044951438903809

Token 56: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0021907102782279253
    2. '(' → logprob: -6.127190589904785
    3. '(s' → logprob: -13.252190589904785
    4. 'a' → logprob: -13.252190589904785
    5. '(
' → logprob: -14.377190589904785
    6. ' (' → logprob: -14.502190589904785
    7. ')' → logprob: -14.627190589904785
    8. '(n' → logprob: -15.502190589904785
    9. '(i' → logprob: -16.6271915435791
    10. '(ai' → logprob: -16.8771915435791

Token 57: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.1447313129901886
    2. ')):
' → logprob: -2.894731283187866
    3. '))' → logprob: -3.394731283187866
    4. ')' → logprob: -3.769731283187866
    5. '):' → logprob: -4.519731521606445
    6. '-' → logprob: -5.394731521606445
    7. '),' → logprob: -6.019731521606445
    8. ')-' → logprob: -6.269731521606445
    9. ',' → logprob: -6.644731521606445
    10. ' ' → logprob: -7.269731521606445

Token 58: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16632068157196045
    2. ' if' → logprob: -3.16632080078125
    3. '<|end|>' → logprob: -3.54132080078125
    4. '):' → logprob: -3.66632080078125
    5. '   ' → logprob: -3.91632080078125
    6. ' ' → logprob: -4.79132080078125
    7. ':
' → logprob: -5.16632080078125
    8. '       ' → logprob: -5.16632080078125
    9. '):
' → logprob: -5.91632080078125
    10. ' :' → logprob: -6.04132080078125

Token 59: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06191423907876015
    2. 'if' (adapté à ' if') → logprob: -2.9369142055511475
    3. ' ' → logprob: -5.311914443969727
    4. '    ' → logprob: -6.811914443969727
    5. ' s' → logprob: -7.936914443969727
    6. '   ' → logprob: -8.811914443969727
    7. 's' → logprob: -9.186914443969727
    8. '       ' → logprob: -9.186914443969727
    9. '<|end|>' → logprob: -9.186914443969727
    10. ')' → logprob: -9.936914443969727

Token 60: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2313978224992752
    2. 'a' → logprob: -1.6063978672027588
    3. ' s' → logprob: -5.48139762878418
    4. 's' → logprob: -7.10639762878418
    5. ' (' → logprob: -7.73139762878418
    6. '(a' → logprob: -8.60639762878418
    7. ' i' → logprob: -8.73139762878418
    8. 'i' → logprob: -9.73139762878418
    9. ' abs' → logprob: -10.35639762878418
    10. ' ' → logprob: -10.98139762878418

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5213274309644476e-05
    2. '[' → logprob: -11.250015258789062
    3. '[a' → logprob: -14.625015258789062
    4. '[temp' → logprob: -14.750015258789062
    5. ' ' → logprob: -15.500015258789062
    6. 'i' → logprob: -15.750015258789062
    7. '```' → logprob: -15.875015258789062
    8. '   ' → logprob: -16.000015258789062
    9. '[s' → logprob: -16.000015258789062
    10. '[index' → logprob: -16.750015258789062

Token 62: ']' (ID: 60)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6074903607368469
    2. ' %' → logprob: -0.8574903607368469
    3. '>' → logprob: -4.357490539550781
    4. ' ' → logprob: -5.232490539550781
    5. '>=' → logprob: -5.232490539550781
    6. ' >=' → logprob: -6.357490539550781
    7. '==' → logprob: -6.482490539550781
    8. '%s' → logprob: -6.982490539550781
    9. ' >' → logprob: -7.107490539550781
    10. ' ==' → logprob: -7.482490539550781

Token 63: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.22701235115528107
    2. '>=' → logprob: -2.6020123958587646
    3. ' %' → logprob: -2.9770123958587646
    4. '>' → logprob: -3.3520123958587646
    5. '==' → logprob: -3.8520123958587646
    6. ' >=' → logprob: -4.6020121574401855
    7. ' ==' → logprob: -5.3520121574401855
    8. ' ' → logprob: -5.8520121574401855
    9. ' >' → logprob: -6.6020121574401855
    10. '<=' → logprob: -6.7270121574401855

Token 64: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0011484331917017698
    2. ' s' → logprob: -6.876148223876953
    3. '2' → logprob: -9.376148223876953
    4. ' ' → logprob: -10.751148223876953
    5. '   ' → logprob: -12.626148223876953
    6. '  ' → logprob: -13.876148223876953
    7. '>' → logprob: -14.376148223876953
    8. '3' → logprob: -14.376148223876953
    9. '10' → logprob: -14.376148223876953
    10. '1' → logprob: -14.626148223876953

Token 65: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004124111495912075
    2. '2' → logprob: -5.504124164581299
    3. ' s' → logprob: -10.62912368774414
    4. '3' → logprob: -12.37912368774414
    5. ' ' → logprob: -12.62912368774414
    6. 'p' → logprob: -13.25412368774414
    7. '7' → logprob: -13.25412368774414
    8. '1' → logprob: -13.50412368774414
    9. '10' → logprob: -13.50412368774414
    10. 'k' → logprob: -13.87912368774414

Token 66: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5801175236701965
    2. ' ==' → logprob: -0.9551175236701965
    3. '!=' → logprob: -3.3301174640655518
    4. ' !=' → logprob: -3.9551174640655518
    5. ' ' → logprob: -8.205117225646973
    6. '=' → logprob: -9.080117225646973
    7. ')' → logprob: -11.080117225646973
    8. ')==' → logprob: -11.080117225646973
    9. 's' → logprob: -11.955117225646973
    10. '>' → logprob: -12.080117225646973

Token 67: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.29069098830223083
    2. ' s' → logprob: -2.0406908988952637
    3. '0' → logprob: -2.1656908988952637
    4. ' ' → logprob: -4.915690898895264
    5. '1' → logprob: -8.290691375732422
    6. '=' → logprob: -10.040691375732422
    7. '==' → logprob: -12.290691375732422
    8. '=s' → logprob: -12.540691375732422
    9. '	s' → logprob: -12.790691375732422
    10. '  ' → logprob: -13.540691375732422

Token 68: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5327979922294617
    2. '0' → logprob: -0.9077979922294617
    3. '1' → logprob: -5.282797813415527
    4. ' s' → logprob: -5.782797813415527
    5. ' ' → logprob: -6.532797813415527
    6. '=' → logprob: -13.032797813415527
    7. 'count' → logprob: -13.095297813415527
    8. '	s' → logprob: -13.470297813415527
    9. '```' → logprob: -14.157797813415527
    10. '   ' → logprob: -14.282797813415527

Token 69: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017019602237269282
    2. ' and' → logprob: -6.626701831817627
    3. ':
' → logprob: -8.626702308654785
    4. '):' → logprob: -9.251702308654785
    5. 'and' → logprob: -10.001702308654785
    6. ' or' → logprob: -10.251702308654785
    7. ' :' → logprob: -11.126702308654785
    8. ')' → logprob: -13.376702308654785
    9. ',' → logprob: -14.126702308654785
    10. '       ' → logprob: -14.751702308654785

Token 70: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6817826628684998
    2. 'a' → logprob: -1.4317827224731445
    3. ' s' → logprob: -1.5567827224731445
    4. 's' → logprob: -3.3067827224731445
    5. ' (' → logprob: -5.6817827224731445
    6. ' ' → logprob: -6.6817827224731445
    7. '(a' → logprob: -6.6817827224731445
    8. ' count' → logprob: -7.5567827224731445
    9. 'count' → logprob: -8.181782722473145
    10. '(s' → logprob: -8.306782722473145

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000309840717818588
    2. '[' → logprob: -8.125309944152832
    3. ' [' → logprob: -11.750309944152832
    4. '[a' → logprob: -13.250309944152832
    5. 'i' → logprob: -13.500309944152832
    6. ' i' → logprob: -14.125309944152832
    7. '[
' → logprob: -14.875309944152832
    8. '[I' → logprob: -15.000309944152832
    9. ' ' → logprob: -15.250309944152832
    10. '[s' → logprob: -15.625309944152832

Token 72: ']' (ID: 60)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.626451313495636
    2. ' ==' → logprob: -2.251451253890991
    3. ' >=' → logprob: -2.376451253890991
    4. ' %' → logprob: -2.376451253890991
    5. ' !=' → logprob: -3.251451253890991
    6. '%' → logprob: -3.251451253890991
    7. ' >' → logprob: -3.501451253890991
    8. '==' → logprob: -3.876451253890991
    9. '>' → logprob: -4.37645149230957
    10. '>=' → logprob: -4.50145149230957

Token 73: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0833005905151367
    2. ' >=' → logprob: -1.0833005905151367
    3. ' ' → logprob: -2.4583005905151367
    4. ' !=' → logprob: -2.8333005905151367
    5. '==' → logprob: -3.0833005905151367
    6. ' >' → logprob: -3.4583005905151367
    7. '>=' → logprob: -3.4583005905151367
    8. '%' → logprob: -3.7083005905151367
    9. ' %' → logprob: -4.333300590515137
    10. '!=' → logprob: -4.333300590515137

Token 74: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3271324336528778
    2. ' ' → logprob: -1.3271324634552002
    3. 's' → logprob: -4.952132225036621
    4. ' s' → logprob: -5.077132225036621
    5. '1' → logprob: -7.827132225036621
    6. 'temp' → logprob: -11.077132225036621
    7. ' temp' → logprob: -11.202132225036621
    8. '  ' → logprob: -11.827132225036621
    9. '   ' → logprob: -12.327132225036621
    10. '    ' → logprob: -12.764632225036621

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04639166221022606
    2. 's' → logprob: -3.171391725540161
    3. ' ' → logprob: -6.296391487121582
    4. '1' → logprob: -6.546391487121582
    5. ' s' → logprob: -10.046391487121582
    6. 'temp' → logprob: -11.046391487121582
    7. '   ' → logprob: -11.546391487121582
    8. '-' → logprob: -11.921391487121582
    9. '2' → logprob: -12.046391487121582
    10. 'a' → logprob: -13.046391487121582

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004584161099046469
    2. '):' → logprob: -5.504584312438965
    3. ' and' → logprob: -8.379584312438965
    4. ' :' → logprob: -8.379584312438965
    5. ')' → logprob: -10.754584312438965
    6. 'and' → logprob: -11.504584312438965
    7. ':
' → logprob: -12.504584312438965
    8. ']:' → logprob: -12.629584312438965
    9. ':**' → logprob: -12.879584312438965
    10. ',' → logprob: -13.504584312438965

Token 77: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03757636994123459
    2. '       ' → logprob: -3.78757643699646
    3. '           ' → logprob: -5.037576198577881
    4. ' :' → logprob: -6.287576198577881
    5. ',' → logprob: -6.662576198577881
    6. ':
' → logprob: -6.787576198577881
    7. ' and' → logprob: -7.162576198577881
    8. '):' → logprob: -7.287576198577881
    9. ' ' → logprob: -7.787576198577881
    10. 'temp' → logprob: -8.037576675415039

Token 78: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.2918089032173157
    2. 'temp' (adapté à ' temp') → logprob: -1.416808843612671
    3. ' s' → logprob: -5.79180908203125
    4. ' a' → logprob: -5.91680908203125
    5. '               ' → logprob: -6.29180908203125
    6. 'a' → logprob: -7.16680908203125
    7. '           ' → logprob: -7.29180908203125
    8. 's' → logprob: -7.54180908203125
    9. '            ' → logprob: -8.41680908203125
    10. ' ' → logprob: -8.54180908203125

Token 79: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.31369927525520325
    2. '.' → logprob: -1.3136992454528809
    3. '=' → logprob: -8.063699722290039
    4. ' .' → logprob: -10.563699722290039
    5. '.ap' → logprob: -11.063699722290039
    6. ' +=' → logprob: -11.188699722290039
    7. 'append' → logprob: -11.313699722290039
    8. '+=' → logprob: -11.438699722290039
    9. '.=' → logprob: -11.563699722290039
    10. ' =' → logprob: -11.688699722290039

Token 80: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006907186936587095
    2. '(' → logprob: -5.006906986236572
    3. '(i' → logprob: -8.63190746307373
    4. '((' → logprob: -12.63190746307373
    5. 'a' → logprob: -12.75690746307373
    6. '(int' → logprob: -13.13190746307373
    7. '(
' → logprob: -13.25690746307373
    8. '('' → logprob: -14.00690746307373
    9. '(x' → logprob: -14.13190746307373
    10. '(s' → logprob: -14.38190746307373

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.1928003813372925e-05
    2. '[' → logprob: -9.875051498413086
    3. 'i' → logprob: -15.375051498413086
    4. '[
' → logprob: -15.625051498413086
    5. ')' → logprob: -16.125051498413086
    6. '[I' → logprob: -16.875051498413086
    7. '```' → logprob: -18.125051498413086
    8. '][' → logprob: -18.500051498413086
    9. ')[' → logprob: -18.875051498413086
    10. '[a' → logprob: -19.250051498413086

Token 82: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3705652952194214
    2. ')' → logprob: -1.4955652952194214
    3. ']' → logprob: -2.495565414428711
    4. ' ])' → logprob: -6.870565414428711
    5. '//' → logprob: -6.995565414428711
    6. ' )' → logprob: -7.995565414428711
    7. '*' → logprob: -8.870565414428711
    8. ' ' → logprob: -9.245565414428711
    9. ')//' → logprob: -9.495565414428711
    10. ' //' → logprob: -9.495565414428711

Token 83: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03002319112420082
    2. '*' → logprob: -3.9050230979919434
    3. ' ' → logprob: -5.780023097991943
    4. ' )' → logprob: -6.155023097991943
    5. ' *' → logprob: -6.905023097991943
    6. '   ' → logprob: -7.280023097991943
    7. '//' → logprob: -7.905023097991943
    8. '       ' → logprob: -8.030023574829102
    9. '-' → logprob: -8.155023574829102
    10. ' //' → logprob: -8.280023574829102

Token 84: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0027636289596557617
    2. ' ' → logprob: -6.377763748168945
    3. 's' → logprob: -6.877763748168945
    4. ' s' → logprob: -10.877763748168945
    5. '10' → logprob: -12.252763748168945
    6. '(' → logprob: -13.377763748168945
    7. '```' → logprob: -13.627763748168945
    8. '1' → logprob: -14.377763748168945
    9. '=' → logprob: -14.627763748168945
    10. '3' → logprob: -14.815263748168945

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006164124351926148
    2. 's' → logprob: -7.750616550445557
    3. ' ' → logprob: -8.625616073608398
    4. '10' → logprob: -13.625616073608398
    5. ' s' → logprob: -13.750616073608398
    6. '1' → logprob: -14.000616073608398
    7. '```' → logprob: -14.875616073608398
    8. '(' → logprob: -14.938116073608398
    9. '  ' → logprob: -15.000616073608398
    10. '3' → logprob: -15.125616073608398

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007461408386006951
    2. ' )' → logprob: -7.500746250152588
    3. '       ' → logprob: -9.37574577331543
    4. ')
' → logprob: -9.62574577331543
    5. '<|end|>' → logprob: -11.25074577331543
    6. '   ' → logprob: -12.00074577331543
    7. '           ' → logprob: -12.37574577331543
    8. ',' → logprob: -13.00074577331543
    9. '),' → logprob: -13.12574577331543
    10. '               ' → logprob: -13.50074577331543

Token 87: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5097784399986267
    2. '   ' → logprob: -1.2597784996032715
    3. ' ' → logprob: -2.7597784996032715
    4. '<|end|>' → logprob: -4.3847784996032715
    5. ',' → logprob: -4.6347784996032715
    6. ')' → logprob: -4.8847784996032715
    7. '           ' → logprob: -5.1347784996032715
    8. '  ' → logprob: -6.3847784996032715
    9. '    ' → logprob: -6.3847784996032715
    10. '    
' → logprob: -6.6347784996032715

Token 88: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1624075025320053
    2. 'a' → logprob: -2.412407398223877
    3. ' ' → logprob: -3.662407398223877
    4. '    
' → logprob: -4.412407398223877
    5. ' 
' → logprob: -5.537407398223877
    6. 'if' → logprob: -6.037407398223877
    7. '
' → logprob: -6.287407398223877
    8. ' if' → logprob: -6.287407398223877
    9. 's' → logprob: -6.412407398223877
    10. '       ' → logprob: -6.662407398223877

Token 89: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.17774908244609833
    2. '+=' → logprob: -1.9277490377426147
    3. '+' → logprob: -4.302749156951904
    4. '=' → logprob: -5.802749156951904
    5. ' =' → logprob: -7.302749156951904
    6. ' +' → logprob: -9.052748680114746
    7. ' ' → logprob: -10.927748680114746
    8. '++' → logprob: -12.427748680114746
    9. '<|end|>' → logprob: -13.052748680114746
    10. 's' → logprob: -13.427748680114746

Token 90: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.25244414806365967
    2. 'count' → logprob: -1.6274441480636597
    3. ' s' → logprob: -4.127444267272949
    4. ' len' → logprob: -4.877444267272949
    5. 's' → logprob: -6.627444267272949
    6. 'len' → logprob: -6.877444267272949
    7. ' ' → logprob: -8.37744426727295
    8. '0' → logprob: -9.25244426727295
    9. '+' → logprob: -9.75244426727295
    10. ' max' → logprob: -10.62744426727295

Token 91: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007223221473395824
    2. ' +' → logprob: -7.250722408294678
    3. 's' → logprob: -12.12572193145752
    4. '1' → logprob: -12.37572193145752
    5. '2' → logprob: -13.87572193145752
    6. ' ' → logprob: -14.62572193145752
    7. '0' → logprob: -15.12572193145752
    8. ' plus' → logprob: -15.50072193145752
    9. 'plus' → logprob: -15.87572193145752
    10. ' ' → logprob: -16.500722885131836

Token 92: ' len' (ID: 4631)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05413486436009407
    2. ' ' → logprob: -3.0541348457336426
    3. 's' → logprob: -5.679134845733643
    4. ' s' → logprob: -6.429134845733643
    5. ' len' → logprob: -8.1791353225708
    6. 'len' → logprob: -8.4291353225708
    7. '  ' → logprob: -14.4291353225708
    8. '2' → logprob: -14.5541353225708
    9. '   ' → logprob: -15.2416353225708
    10. 'sum' → logprob: -15.8041353225708

Token 93: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.1817917376756668
    2. '(a' → logprob: -2.1817917823791504
    3. '(' → logprob: -2.9317917823791504
    4. '(s' → logprob: -10.431791305541992
    5. '(t' → logprob: -10.431791305541992
    6. '(tmp' → logprob: -11.806791305541992
    7. 'temp' → logprob: -11.931791305541992
    8. 'a' → logprob: -13.056791305541992
    9. '(
' → logprob: -13.306791305541992
    10. '(te' → logprob: -14.181791305541992

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20750907063484192
    2. ')
' → logprob: -2.2075090408325195
    3. '
' → logprob: -2.5825090408325195
    4. '   ' → logprob: -7.5825090408325195
    5. '    
' → logprob: -8.45750904083252
    6. '<|end|>' → logprob: -8.58250904083252
    7. '+' → logprob: -8.70750904083252
    8. 's' → logprob: -9.45750904083252
    9. '  
' → logprob: -9.45750904083252
    10. '*' → logprob: -9.45750904083252

Token 95: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7159088253974915
    2. '   ' → logprob: -1.2159087657928467
    3. '    
' → logprob: -1.7159087657928467
    4. ' 
' → logprob: -4.215909004211426
    5. ' if' → logprob: -4.715909004211426
    6. '   
' → logprob: -5.590909004211426
    7. 'a' → logprob: -5.715909004211426
    8. 'if' → logprob: -6.715909004211426
    9. '```' → logprob: -7.590909004211426
    10. '     
' → logprob: -7.715909004211426

Token 96: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.3490639328956604
    2. '   ' → logprob: -1.8490638732910156
    3. '    
' → logprob: -3.5990638732910156
    4. 'if' → logprob: -3.7240638732910156
    5. '
' → logprob: -3.7240638732910156
    6. ' if' → logprob: -3.8490638732910156
    7. ' a' → logprob: -3.9740638732910156
    8. 'result' → logprob: -4.599063873291016
    9. ' 
' → logprob: -5.224063873291016
    10. ' result' → logprob: -6.724063873291016

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.69315105676651
    2. ' =' → logprob: -0.69315105676651
    3. ' ' → logprob: -13.943151473999023
    4. '[:]' → logprob: -14.068151473999023
    5. ' =[' → logprob: -14.318151473999023
    6. ',' → logprob: -15.068151473999023
    7. '＝' → logprob: -15.318151473999023
    8. '=

' → logprob: -16.193151473999023
    9. '=[]' → logprob: -16.318151473999023
    10. 'equals' → logprob: -16.568151473999023

Token 98: ' []
' (ID: 8911)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0302515160292387
    2. ' temp' → logprob: -3.5302515029907227
    3. '[temp' → logprob: -7.905251502990723
    4. '[' → logprob: -9.155251502990723
    5. 'tem' → logprob: -11.030251502990723
    6. ' [' → logprob: -12.155251502990723
    7. 'tmp' → logprob: -13.155251502990723
    8. '[]' → logprob: -13.280251502990723
    9. '	temp' → logprob: -14.655251502990723
    10. '$temp' → logprob: -15.780251502990723

Token 99: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08963021636009216
    2. '   ' → logprob: -2.464630126953125
    3. ' for' → logprob: -7.464630126953125
    4. 'temp' → logprob: -9.964630126953125
    5. 'a' → logprob: -10.089630126953125
    6. '  ' → logprob: -12.214630126953125
    7. 'if' → logprob: -12.339630126953125
    8. '       ' → logprob: -12.339630126953125
    9. ' ' → logprob: -12.589630126953125
    10. '    
' → logprob: -12.839630126953125

Token 100: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03379599750041962
    2. 'a' (adapté à ' a') → logprob: -3.6587960720062256
    3. '   ' → logprob: -4.9087958335876465
    4. ' for' → logprob: -10.033796310424805
    5. 'if' → logprob: -10.658796310424805
    6. 'temp' → logprob: -11.783796310424805
    7. 'while' → logprob: -12.783796310424805
    8. 'n' → logprob: -13.283796310424805
    9. '    
' → logprob: -13.283796310424805
    10. '  ' → logprob: -13.658796310424805

Token 101: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.25966203212738037
    2. '=' → logprob: -1.5096620321273804
    3. '+=' → logprob: -5.75966215133667
    4. ' =' → logprob: -6.00966215133667
    5. '.' → logprob: -6.38466215133667
    6. ' +=' → logprob: -8.509661674499512
    7. '.=' → logprob: -9.009661674499512
    8. '.append' → logprob: -9.634661674499512
    9. 'extend' → logprob: -12.134661674499512
    10. '+' → logprob: -12.759661674499512

Token 102: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -7.362307223957032e-05
    2. 'temp' → logprob: -9.750073432922363
    3. '(' → logprob: -11.125073432922363
    4. '(tmp' → logprob: -15.375073432922363
    5. '(t' → logprob: -15.500073432922363
    6. '[temp' → logprob: -17.37507438659668
    7. ' temp' → logprob: -17.75007438659668
    8. '(
' → logprob: -18.75007438659668
    9. '((' → logprob: -18.75007438659668
    10. '(list' → logprob: -19.12507438659668

Token 103: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005753128207288682
    2. ')
' → logprob: -7.625575542449951
    3. '<|end|>' → logprob: -9.625575065612793
    4. ')return' → logprob: -11.625575065612793
    5. ' )' → logprob: -11.875575065612793
    6. '<|end|>' → logprob: -13.750575065612793
    7. ')n' → logprob: -14.000575065612793
    8. ')

' → logprob: -14.625575065612793
    9. ')a' → logprob: -14.750575065612793
    10. '
' → logprob: -15.000575065612793

Token 104: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08316909521818161
    2. 'if' → logprob: -3.3331689834594727
    3. '
' → logprob: -3.8331689834594727
    4. ' if' → logprob: -4.583168983459473
    5. '<|end|>' → logprob: -4.958168983459473
    6. '\n' → logprob: -6.583168983459473
    7. '   ' → logprob: -6.958168983459473
    8. ')' → logprob: -7.583168983459473
    9. 'result' → logprob: -7.833168983459473
    10. ' 
' → logprob: -8.208168983459473

Token 105: ' count' (ID: 3605)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.006560363341122866
    2. '(' → logprob: -5.256560325622559
    3. 'count' → logprob: -6.631560325622559
    4. '(s' → logprob: -12.506560325622559
    5. ' (' → logprob: -14.006560325622559
    6. '(c' → logprob: -14.131560325622559
    7. ' count' → logprob: -14.506560325622559
    8. 's' → logprob: -14.881560325622559
    9. '((' → logprob: -15.131560325622559
    10. '(len' → logprob: -15.131560325622559


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 103
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 84
Précision stricte (1ère position): 31.07%
Précision adaptée (1ère position): 33.01%
Précision (top 10): 81.55%
================================================================================
