================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
h, w = map(int, input().split())
a = [list(input()) for _ in range(h)]
c = []
ng_h = []
ng_w = []

for i in range(h):
    ok = True
    for j in range(w):
        if a[i][j] != ".":
            ok = False
            break
    if ok:
        ng_h.append(i)

for i in range(w):
    ok = True
    for j in range(h):
        if a[j][i] != ".":
            ok = False
            break
    if ok:
        ng_w.append(i)

for i in range(h):
    t = ""
    if i in ng_h:
        continue
    for j in range(w):
        if j in ng_w:
            continue
        t += a[i][j]
    if t != "":
        c.append(t)

print(*c, sep='\n')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'h' (ID: 71)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' w' (ID: 286)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7141396999359131
    2. '=' → logprob: -0.7141396999359131
    3. ' =' → logprob: -4.089139938354492
    4. ')' → logprob: -6.464139938354492
    5. '*' → logprob: -6.839139938354492
    6. '.' → logprob: -7.964139938354492
    7. ':' → logprob: -8.839139938354492
    8. '[' → logprob: -8.839139938354492
    9. '```' → logprob: -9.339139938354492
    10. ' ' → logprob: -9.464139938354492

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20660795271396637
    2. ' image' → logprob: -2.4566080570220947
    3. ' h' → logprob: -3.0816080570220947
    4. ' img' → logprob: -3.3316080570220947
    5. ' map' → logprob: -4.956607818603516
    6. '0' → logprob: -5.956607818603516
    7. 'image' → logprob: -5.956607818603516
    8. 'map' → logprob: -6.456607818603516
    9. ' input' → logprob: -7.206607818603516
    10. ' np' → logprob: -7.331607818603516

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06916536390781403
    2. '(int' → logprob: -3.4441654682159424
    3. '(lambda' → logprob: -3.8191654682159424
    4. '(str' → logprob: -4.694165229797363
    5. '```' → logprob: -6.694165229797363
    6. '<|end|>' → logprob: -7.819165229797363
    7. '[int' → logprob: -8.069165229797363
    8. ')' → logprob: -8.319165229797363
    9. '(len' → logprob: -8.694165229797363
    10. '<int' → logprob: -8.819165229797363

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016287608072161674
    2. '(' → logprob: -4.891287803649902
    3. ')' → logprob: -4.891287803649902
    4. 'input' → logprob: -7.516287803649902
    5. '(str' → logprob: -8.891287803649902
    6. '(raw' → logprob: -9.141287803649902
    7. '```' → logprob: -9.141287803649902
    8. ' input' → logprob: -10.266287803649902
    9. '(int' → logprob: -10.391287803649902
    10. '[input' → logprob: -10.766287803649902

Token 7: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4742639660835266
    2. 'input' → logprob: -0.9742639660835266
    3. '(input' → logprob: -9.099264144897461
    4. ')' → logprob: -9.599264144897461
    5. ',input' → logprob: -12.474264144897461
    6. ' )' → logprob: -13.849264144897461
    7. '=input' → logprob: -13.974264144897461
    8. '<input' → logprob: -15.099264144897461
    9. '[input' → logprob: -15.349264144897461
    10. '	input' → logprob: -15.849264144897461

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5141751766204834
    2. '()' → logprob: -1.3891751766204834
    3. ')' → logprob: -2.2641751766204834
    4. '(' → logprob: -4.2641754150390625
    5. '`()' → logprob: -5.5141754150390625
    6. '()">' → logprob: -5.6391754150390625
    7. '()>' → logprob: -5.7641754150390625
    8. '(()' → logprob: -5.7641754150390625
    9. '```' → logprob: -5.7641754150390625
    10. '().' → logprob: -5.8891754150390625

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009176511666737497
    2. 'strip' → logprob: -7.000917434692383
    3. 'rstrip' → logprob: -12.250917434692383
    4. 'read' → logprob: -14.125917434692383
    5. ' split' → logprob: -14.625917434692383
    6. '(split' → logprob: -15.875917434692383
    7. ')' → logprob: -16.500917434692383
    8. 'startswith' → logprob: -17.750917434692383
    9. 'decode' → logprob: -18.250917434692383
    10. '```' → logprob: -18.375917434692383

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5657400488853455
    2. ')' → logprob: -0.9407400488853455
    3. '))' → logprob: -3.4407401084899902
    4. '()' → logprob: -5.19074010848999
    5. '()))' → logprob: -5.69074010848999
    6. '('' → logprob: -8.315739631652832
    7. '`)' → logprob: -8.815739631652832
    8. '(' → logprob: -8.815739631652832
    9. '')' → logprob: -10.190739631652832
    10. ' ())' → logprob: -10.565739631652832

Token 11: 'a' (ID: 64)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9505304098129272
    2. ',' → logprob: -1.8255304098129272
    3. 'a' → logprob: -1.9505304098129272
    4. '#' → logprob: -1.9505304098129272
    5. ')' → logprob: -3.325530529022217
    6. 'r' → logprob: -4.075530529022217
    7. 'print' → logprob: -4.200530529022217
    8. 'for' → logprob: -4.450530529022217
    9. 'n' → logprob: -4.700530529022217
    10. 'm' → logprob: -4.700530529022217

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4353376626968384
    2. '[i' → logprob: -2.310337543487549
    3. '[h' → logprob: -2.685337543487549
    4. 'rray' → logprob: -3.310337543487549
    5. 'r' → logprob: -3.310337543487549
    6. ' =' → logprob: -3.810337543487549
    7. '[r' → logprob: -3.810337543487549
    8. 'rr' → logprob: -4.435337543487549
    9. ',' → logprob: -4.810337543487549
    10. ' ' → logprob: -4.810337543487549

Token 13: ' [' (ID: 723)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.30559852719306946
    2. '[' → logprob: -2.680598497390747
    3. '[]' → logprob: -2.930598497390747
    4. ' [' → logprob: -3.055598497390747
    5. 'list' → logprob: -3.305598497390747
    6. '[[' → logprob: -4.430598735809326
    7. 'h' → logprob: -4.805598735809326
    8. '[int' → logprob: -4.805598735809326
    9. ' []' → logprob: -5.055598735809326
    10. '[list' → logprob: -5.055598735809326

Token 14: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.009041732177138329
    2. '[' → logprob: -5.509041786193848
    3. '[list' → logprob: -5.759041786193848
    4. '[]' → logprob: -6.634041786193848
    5. '[int' → logprob: -8.259041786193848
    6. ' list' → logprob: -9.134041786193848
    7. '0' → logprob: -9.384041786193848
    8. ']' → logprob: -11.759041786193848
    9. '[input' → logprob: -12.009041786193848
    10. 'map' → logprob: -12.009041786193848

Token 15: '(input' (ID: 10054)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.006401292514055967
    2. '(' → logprob: -5.631401062011719
    3. '(int' → logprob: -5.881401062011719
    4. '(input' → logprob: -12.881401062011719
    5. '(
' → logprob: -13.756401062011719
    6. '(eval' → logprob: -14.131401062011719
    7. '()' → logprob: -14.381401062011719
    8. 'map' → logprob: -14.756401062011719
    9. '(range' → logprob: -15.256401062011719
    10. '(

' → logprob: -15.631401062011719

Token 16: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009078874718397856
    2. '()' → logprob: -7.500907897949219
    3. '()]' → logprob: -8.625907897949219
    4. '().' → logprob: -9.000907897949219
    5. '()))' → logprob: -10.250907897949219
    6. '()),' → logprob: -12.125907897949219
    7. '());' → logprob: -12.250907897949219
    8. '()>' → logprob: -13.250907897949219
    9. ' ())' → logprob: -13.625907897949219
    10. '()+' → logprob: -14.375907897949219

Token 17: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030752286314964294
    2. '())' → logprob: -4.155752182006836
    3. ')' → logprob: -4.905752182006836
    4. '()]' → logprob: -5.655752182006836
    5. '().' → logprob: -6.530752182006836
    6. 'for' → logprob: -6.905752182006836
    7. '(' → logprob: -7.280752182006836
    8. ')]' → logprob: -9.030752182006836
    9. ']' → logprob: -9.030752182006836
    10. 'strip' → logprob: -9.405752182006836

Token 18: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002267539966851473
    2. '(range' → logprob: -7.127267360687256
    3. 'range' → logprob: -7.252267360687256
    4. ' ' → logprob: -8.627267837524414
    5. '	range' → logprob: -8.627267837524414
    6. '_' → logprob: -9.002267837524414
    7. '_range' → logprob: -9.002267837524414
    8. ' _' → logprob: -10.002267837524414
    9. ' in' → logprob: -10.127267837524414
    10. '(' → logprob: -10.627267837524414

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09758416563272476
    2. 'in' → logprob: -2.4725842475891113
    3. 'range' → logprob: -4.972584247589111
    4. ' range' → logprob: -6.472584247589111
    5. ' ' → logprob: -9.097583770751953
    6. '  ' → logprob: -11.597583770751953
    7. '_' → logprob: -12.722583770751953
    8. '	range' → logprob: -13.347583770751953
    9. 'i' → logprob: -13.472583770751953
    10. 'int' → logprob: -13.472583770751953

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -17.125158309936523
    4. '	range' → logprob: -18.250158309936523
    5. 'r' → logprob: -19.750158309936523
    6. '.range' → logprob: -20.000158309936523
    7. 'ran' → logprob: -20.000158309936523
    8. '```' → logprob: -20.125158309936523
    9. '_range' → logprob: -21.000158309936523
    10. '   ' → logprob: -21.000158309936523

Token 21: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0001239196863025427
    2. '(' → logprob: -9.125123977661133
    3. '(w' → logprob: -11.125123977661133
    4. '(s' → logprob: -17.250123977661133
    5. '(H' → logprob: -17.250123977661133
    6. ' (' → logprob: -17.375123977661133
    7. 'h' → logprob: -17.625123977661133
    8. '(n' → logprob: -17.875123977661133
    9. '(
' → logprob: -18.500123977661133
    10. '(int' → logprob: -18.625123977661133

Token 22: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00015097891446202993
    2. ')' → logprob: -8.875150680541992
    3. ']' → logprob: -11.750150680541992
    4. ')])' → logprob: -14.125150680541992
    5. '))' → logprob: -14.500150680541992
    6. ')],' → logprob: -14.875150680541992
    7. ' )' → logprob: -15.000150680541992
    8. ')}' → logprob: -15.500150680541992
    9. '])]' → logprob: -15.500150680541992
    10. ')].' → logprob: -15.625150680541992

Token 23: 'c' (ID: 66)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13870425522327423
    2. 'b' → logprob: -4.013704299926758
    3. 'c' → logprob: -4.263704299926758
    4. ')' → logprob: -4.263704299926758
    5. 'r' → logprob: -4.513704299926758
    6. ' for' → logprob: -4.638704299926758
    7. '#' → logprob: -4.638704299926758
    8. 'm' → logprob: -5.013704299926758
    9. 'result' → logprob: -5.138704299926758
    10. 'i' → logprob: -5.263704299926758

Token 24: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.5213534832000732
    2. ' =' → logprob: -1.6463534832000732
    3. 'ounter' → logprob: -1.7713534832000732
    4. '=' → logprob: -3.8963534832000732
    5. 'o' → logprob: -5.146353721618652
    6. '=[]' → logprob: -5.396353721618652
    7. 'ont' → logprob: -5.646353721618652
    8. 'nt' → logprob: -6.146353721618652
    9. 'ounters' → logprob: -6.396353721618652
    10. 'out' → logprob: -6.396353721618652

Token 25: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28750425577163696
    2. '[[' → logprob: -2.412504196166992
    3. ' [' → logprob: -2.787504196166992
    4. '0' → logprob: -3.037504196166992
    5. ' [[' → logprob: -3.662504196166992
    6. '[]' → logprob: -5.162504196166992
    7. '[['' → logprob: -5.162504196166992
    8. '[h' → logprob: -5.537504196166992
    9. '[a' → logprob: -6.287504196166992
    10. '['' → logprob: -6.412504196166992

Token 26: 'ng' (ID: 892)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019389885710552335
    2. ' for' → logprob: -6.376938819885254
    3. '[' → logprob: -9.001938819885254
    4. 'r' → logprob: -10.501938819885254
    5. 'f' → logprob: -10.501938819885254
    6. '(' → logprob: -10.876938819885254
    7. '_' → logprob: -11.126938819885254
    8. 'x' → logprob: -12.376938819885254
    9. 'range' → logprob: -12.626938819885254
    10. ' ' → logprob: -13.001938819885254

Token 27: '_h' (ID: 3434)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5008643865585327
    2. '=' → logprob: -1.0008643865585327
    3. '=[]' → logprob: -3.8758645057678223
    4. 'ount' → logprob: -6.375864505767822
    5. '.append' → logprob: -7.375864505767822
    6. ' ' → logprob: -8.000864028930664
    7. 'ounter' → logprob: -8.125864028930664
    8. 'c' → logprob: -8.125864028930664
    9. 'h' → logprob: -8.375864028930664
    10. 't' → logprob: -8.375864028930664

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08627229183912277
    2. '=' → logprob: -2.7112722396850586
    3. '_range' → logprob: -5.086272239685059
    4. 'or' → logprob: -6.336272239685059
    5. 'range' → logprob: -6.336272239685059
    6. ' ' → logprob: -6.836272239685059
    7. '_' → logprob: -6.961272239685059
    8. '=[]' → logprob: -7.336272239685059
    9. '_ranges' → logprob: -7.586272239685059
    10. 'orizontal' → logprob: -7.586272239685059

Token 29: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8243446946144104
    2. ' set' → logprob: -1.8243446350097656
    3. ' ' → logprob: -1.9493446350097656
    4. ' []' → logprob: -2.4493446350097656
    5. '0' → logprob: -2.5743446350097656
    6. '[' → logprob: -3.6993446350097656
    7. '[]' → logprob: -3.9493446350097656
    8. ' h' → logprob: -3.9493446350097656
    9. '[h' → logprob: -4.324344635009766
    10. ' {' → logprob: -4.949344635009766

Token 30: 'ng' (ID: 892)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02208545245230198
    2. ' for' → logprob: -3.897085428237915
    3. '[' → logprob: -6.772085666656494
    4. ']' → logprob: -9.147085189819336
    5. ')' → logprob: -9.397085189819336
    6. ',' → logprob: -10.022085189819336
    7. '=' → logprob: -10.522085189819336
    8. '[]' → logprob: -10.772085189819336
    9. 'f' → logprob: -10.897085189819336
    10. 'n' → logprob: -11.022085189819336

Token 31: '_w' (ID: 3567)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36623457074165344
    2. '_h' → logprob: -1.241234540939331
    3. '_w' → logprob: -4.36623477935791
    4. ' =' → logprob: -6.24123477935791
    5. '=' → logprob: -6.86623477935791
    6. 'h' → logprob: -7.24123477935791
    7. '_=' → logprob: -8.36623477935791
    8. 'w' → logprob: -8.49123477935791
    9. '_x' → logprob: -8.74123477935791
    10. '_c' → logprob: -8.99123477935791

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14303261041641235
    2. '=' → logprob: -2.0180325508117676
    3. ' ' → logprob: -8.268033027648926
    4. ',' → logprob: -9.768033027648926
    5. '=[]' → logprob: -10.518033027648926
    6. ' ,' → logprob: -12.393033027648926
    7. '_' → logprob: -12.768033027648926
    8. '[' → logprob: -13.268033027648926
    9. ')' → logprob: -13.393033027648926
    10. ' []' → logprob: -13.893033027648926

Token 33: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04162143915891647
    2. ' []' → logprob: -3.291621446609497
    3. 'set' → logprob: -5.666621208190918
    4. ' set' → logprob: -9.916621208190918
    5. '0' → logprob: -10.541621208190918
    6. '[' → logprob: -10.916621208190918
    7. ' ' → logprob: -12.041621208190918
    8. '[]}' → logprob: -12.166621208190918
    9. '[]
' → logprob: -12.291621208190918
    10. '[:]' → logprob: -14.041621208190918

Token 34: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.619311974034645e-05
    2. ' for' → logprob: -10.250036239624023
    3. 'f' → logprob: -14.500036239624023
    4. '```' → logprob: -15.875036239624023
    5. '#' → logprob: -18.625036239624023
    6. 'fo' → logprob: -19.125036239624023
    7. '`' → logprob: -19.375036239624023
    8. ',' → logprob: -20.000036239624023
    9. 'n' → logprob: -20.125036239624023
    10. 'For' → logprob: -20.250036239624023

Token 35: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01271294616162777
    2. ' _' → logprob: -4.6377129554748535
    3. 'i' → logprob: -6.1377129554748535
    4. '_' → logprob: -7.5127129554748535
    5. ' ' → logprob: -8.762712478637695
    6. ' row' → logprob: -10.137712478637695
    7. ' h' → logprob: -11.262712478637695
    8. ' r' → logprob: -11.387712478637695
    9. ' j' → logprob: -12.137712478637695
    10. ' x' → logprob: -12.137712478637695

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007154707331210375
    2. 'in' → logprob: -5.007154941558838
    3. ' ' → logprob: -7.757154941558838
    4. 'n' → logprob: -12.25715446472168
    5. 'range' → logprob: -13.38215446472168
    6. '	in' → logprob: -13.38215446472168
    7. '<|end|>' → logprob: -13.75715446472168
    8. ' range' → logprob: -14.00715446472168
    9. '  ' → logprob: -14.88215446472168
    10. ',' → logprob: -15.63215446472168

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38687655329704285
    2. 'range' → logprob: -1.1368765830993652
    3. ' ' → logprob: -12.761876106262207
    4. '	range' → logprob: -14.261876106262207
    5. 'r' → logprob: -14.636876106262207
    6. ')' → logprob: -15.011876106262207
    7. ' r' → logprob: -15.636876106262207
    8. '_range' → logprob: -15.886876106262207
    9. 'rang' → logprob: -16.011877059936523
    10. ' ran' → logprob: -16.011877059936523

Token 38: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.018170194700360298
    2. '(' → logprob: -4.018170356750488
    3. '(len' → logprob: -11.518170356750488
    4. '(w' → logprob: -11.893170356750488
    5. ' (' → logprob: -13.643170356750488
    6. '(s' → logprob: -14.393170356750488
    7. 'h' → logprob: -14.393170356750488
    8. '(n' → logprob: -14.893170356750488
    9. ' h' → logprob: -15.393170356750488
    10. '(range' → logprob: -16.268169403076172

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00041279601282440126
    2. ')' → logprob: -8.250412940979004
    3. ':' → logprob: -9.500412940979004
    4. '):
' → logprob: -9.625412940979004
    5. ' ):' → logprob: -11.875412940979004
    6. '+' → logprob: -13.250412940979004
    7. ']:' → logprob: -14.625412940979004
    8. ' ' → logprob: -15.125412940979004
    9. '}:' → logprob: -15.375412940979004
    10. '):
' → logprob: -15.750412940979004

Token 40: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3766458332538605
    2. '   ' → logprob: -2.376645803451538
    3. 'if' → logprob: -3.251645803451538
    4. ' cnt' → logprob: -3.251645803451538
    5. ' count' → logprob: -3.751645803451538
    6. '    ' → logprob: -3.751645803451538
    7. ' ng' → logprob: -4.251646041870117
    8. ' sum' → logprob: -4.376646041870117
    9. 'cnt' → logprob: -4.501646041870117
    10. ' ' → logprob: -4.751646041870117

Token 41: ' ok' (ID: 4763)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17600201070308685
    2. ' if' → logprob: -2.926002025604248
    3. 'all' → logprob: -3.051002025604248
    4. 'cnt' → logprob: -3.676002025604248
    5. 'sum' → logprob: -4.676002025604248
    6. 'row' → logprob: -5.176002025604248
    7. 'ng' → logprob: -5.551002025604248
    8. 'for' → logprob: -6.176002025604248
    9. 'count' → logprob: -6.301002025604248
    10. ' all' → logprob: -6.426002025604248

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1469045728445053
    2. '=' → logprob: -2.021904468536377
    3. '_' → logprob: -5.646904468536377
    4. 'ay' → logprob: -8.771904945373535
    5. '_=' → logprob: -8.896904945373535
    6. '=True' → logprob: -9.396904945373535
    7. '=False' → logprob: -9.521904945373535
    8. ' ' → logprob: -9.896904945373535
    9. ')' → logprob: -10.021904945373535
    10. ',' → logprob: -10.146904945373535

Token 43: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.017050234600901604
    2. 'False' → logprob: -4.517050266265869
    3. ' True' → logprob: -5.142050266265869
    4. '0' → logprob: -9.642049789428711
    5. ' False' → logprob: -10.267049789428711
    6. '[]' → logprob: -10.767049789428711
    7. 'Tr' → logprob: -11.767049789428711
    8. '1' → logprob: -12.517049789428711
    9. '(True' → logprob: -13.267049789428711
    10. ' ' → logprob: -13.517049789428711

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.865123450756073
    2. ' for' → logprob: -0.865123450756073
    3. 'for' → logprob: -2.1151235103607178
    4. '<|end|>' → logprob: -3.6151235103607178
    5. ' ' → logprob: -4.990123271942139
    6. ' if' → logprob: -6.115123271942139
    7. '  ' → logprob: -7.615123271942139
    8. '<|end|>' → logprob: -8.490123748779297
    9. ')' → logprob: -8.865123748779297
    10. 'if' → logprob: -8.990123748779297

Token 46: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07929611206054688
    2. ' for' → logprob: -2.704296112060547
    3. '   ' → logprob: -4.704296112060547
    4. ' ' → logprob: -8.579296112060547
    5. '	for' → logprob: -10.079296112060547
    6. '  ' → logprob: -10.829296112060547
    7. 'if' → logprob: -12.329296112060547
    8. '    ' → logprob: -13.829296112060547
    9. '<|end|>' → logprob: -13.954296112060547
    10. '       ' → logprob: -14.204296112060547

Token 47: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.931673526763916
    2. 'a' → logprob: -1.431673526763916
    3. ' j' → logprob: -1.556673526763916
    4. ' a' → logprob: -3.056673526763916
    5. ' range' → logprob: -3.056673526763916
    6. 'w' → logprob: -3.681673526763916
    7. 'range' → logprob: -3.931673526763916
    8. ' w' → logprob: -4.056673526763916
    9. ' ' → logprob: -9.431673049926758
    10. '0' → logprob: -10.931673049926758

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008666928857564926
    2. 'in' → logprob: -4.7586669921875
    3. ' ' → logprob: -10.3836669921875
    4. '<|end|>' → logprob: -11.8836669921875
    5. '    ' → logprob: -12.1336669921875
    6. '   ' → logprob: -12.8836669921875
    7. 'w' → logprob: -13.6336669921875
    8. 'range' → logprob: -13.7586669921875
    9. '	in' → logprob: -14.2586669921875
    10. '  ' → logprob: -14.2586669921875

Token 49: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20167051255702972
    2. 'range' → logprob: -1.701670527458191
    3. 'w' → logprob: -8.70167064666748
    4. ' w' → logprob: -9.32667064666748
    5. '(range' → logprob: -13.57667064666748
    6. ' ' → logprob: -16.076669692993164
    7. '   ' → logprob: -16.201669692993164
    8. '_range' → logprob: -16.326669692993164
    9. '	range' → logprob: -16.701669692993164
    10. 'ng' → logprob: -16.826669692993164

Token 50: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -3.91732100979425e-05
    2. '(' → logprob: -10.250039100646973
    3. 'w' → logprob: -13.500039100646973
    4. '(h' → logprob: -13.750039100646973
    5. '(range' → logprob: -14.625039100646973
    6. ' (' → logprob: -15.250039100646973
    7. ')' → logprob: -15.875039100646973
    8. '<w' → logprob: -16.12504005432129
    9. 'range' → logprob: -16.37504005432129
    10. '(s' → logprob: -16.75004005432129

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010095203295350075
    2. ')' → logprob: -5.135095119476318
    3. '):
' → logprob: -5.510095119476318
    4. ':' → logprob: -9.885095596313477
    5. ' ):' → logprob: -10.885095596313477
    6. 'if' → logprob: -11.260095596313477
    7. '):

' → logprob: -11.385095596313477
    8. '   ' → logprob: -11.385095596313477
    9. '):
' → logprob: -13.760095596313477
    10. ' if' → logprob: -14.010095596313477

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12244202196598053
    2. ' if' → logprob: -2.2474420070648193
    3. 'if' → logprob: -4.747442245483398
    4. '   ' → logprob: -7.747442245483398
    5. '    ' → logprob: -8.872442245483398
    6. '[' → logprob: -9.372442245483398
    7. ' ' → logprob: -9.497442245483398
    8. ',' → logprob: -10.747442245483398
    9. 'If' → logprob: -10.872442245483398
    10. ' and' → logprob: -11.247442245483398

Token 53: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.292524516582489
    2. 'if' (adapté à ' if') → logprob: -1.4175245761871338
    3. '       ' → logprob: -4.542524337768555
    4. '           ' → logprob: -8.042524337768555
    5. '   ' → logprob: -8.667524337768555
    6. 'a' → logprob: -10.292524337768555
    7. '    ' → logprob: -10.667524337768555
    8. ' ' → logprob: -10.917524337768555
    9. ' a' → logprob: -10.917524337768555
    10. '```' → logprob: -11.042524337768555

Token 54: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38704147934913635
    2. ' a' → logprob: -1.137041449546814
    3. ' not' → logprob: -9.137041091918945
    4. '   ' → logprob: -10.762041091918945
    5. ' ' → logprob: -11.137041091918945
    6. '    ' → logprob: -11.512041091918945
    7. 'not' → logprob: -11.762041091918945
    8. '(a' → logprob: -13.387041091918945
    9. 'c' → logprob: -13.512041091918945
    10. '	a' → logprob: -13.762041091918945

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.297462171758525e-05
    2. '[j' → logprob: -11.000033378601074
    3. '[' → logprob: -11.625033378601074
    4. '[h' → logprob: -12.000033378601074
    5. 'i' → logprob: -15.625033378601074
    6. '[I' → logprob: -15.750033378601074
    7. '[a' → logprob: -16.000032424926758
    8. ' [' → logprob: -16.125032424926758
    9. '   ' → logprob: -16.125032424926758
    10. '```' → logprob: -16.250032424926758

Token 56: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.10027211159467697
    2. '][' → logprob: -2.4752721786499023
    3. '[i' → logprob: -4.975272178649902
    4. '[' → logprob: -5.850272178649902
    5. '[h' → logprob: -7.475272178649902
    6. ']' → logprob: -8.100272178649902
    7. '[a' → logprob: -9.100272178649902
    8. '[m' → logprob: -9.600272178649902
    9. ' [' → logprob: -10.100272178649902
    10. '[
' → logprob: -10.475272178649902

Token 57: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.5776860184123507e-06
    2. ' j' → logprob: -13.12500286102295
    3. ']' → logprob: -15.25000286102295
    4. ' ' → logprob: -15.50000286102295
    5. '   ' → logprob: -16.625001907348633
    6. '	j' → logprob: -17.625001907348633
    7. '```' → logprob: -18.125001907348633
    8. ':j' → logprob: -18.250001907348633
    9. '[j' → logprob: -18.375001907348633
    10. '][' → logprob: -18.375001907348633

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7829058766365051
    2. '==' → logprob: -1.4079058170318604
    3. '!=' → logprob: -1.9079058170318604
    4. ' ==' → logprob: -2.6579058170318604
    5. ' !=' → logprob: -3.5329058170318604
    6. ']==' → logprob: -3.9079058170318604
    7. ' ' → logprob: -4.1579060554504395
    8. ' ]' → logprob: -4.9079060554504395
    9. ')' → logprob: -6.1579060554504395
    10. '=' → logprob: -6.4079060554504395

Token 59: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47839099168777466
    2. ' ==' → logprob: -1.1033909320831299
    3. '!=' → logprob: -3.35339093208313
    4. ' !=' → logprob: -4.853391170501709
    5. '=' → logprob: -5.978391170501709
    6. ' ' → logprob: -6.103391170501709
    7. '   ' → logprob: -8.60339069366455
    8. ' in' → logprob: -8.72839069366455
    9. ' not' → logprob: -8.72839069366455
    10. ']==' → logprob: -9.22839069366455

Token 60: ' "."' (ID: 50107)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.14729467034339905
    2. '.' → logprob: -2.272294759750366
    3. ''' → logprob: -3.647294759750366
    4. ''#' → logprob: -5.522294521331787
    5. ' ' → logprob: -6.397294521331787
    6. ' '' → logprob: -7.397294521331787
    7. '"."' → logprob: -7.772294521331787
    8. ' '#'' → logprob: -8.022294998168945
    9. ' '.'' → logprob: -8.147294998168945
    10. '#' → logprob: -8.522294998168945

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007214353419840336
    2. ' :' → logprob: -5.257214546203613
    3. ':
' → logprob: -6.632214546203613
    4. ')' → logprob: -8.507214546203613
    5. '):' → logprob: -8.632214546203613
    6. ' ' → logprob: -9.257214546203613
    7. ' and' → logprob: -9.757214546203613
    8. ' :
' → logprob: -11.007214546203613
    9. '":' → logprob: -11.132214546203613
    10. 'and' → logprob: -11.507214546203613

Token 62: '           ' (ID: 352)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.4575459957122803
    2. '           ' → logprob: -1.0825459957122803
    3. ' ok' → logprob: -3.7075459957122803
    4. '               ' → logprob: -6.457546234130859
    5. ' break' → logprob: -7.582546234130859
    6. '            ' → logprob: -7.957546234130859
    7. '
' → logprob: -8.45754623413086
    8. '	ok' → logprob: -8.45754623413086
    9. 'break' → logprob: -8.83254623413086
    10. '            
' → logprob: -8.83254623413086

Token 63: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.18028201162815094
    2. ' ok' → logprob: -1.8052819967269897
    3. ' break' → logprob: -7.930282115936279
    4. '           ' → logprob: -9.555281639099121
    5. 'break' → logprob: -9.930281639099121
    6. '               ' → logprob: -10.930281639099121
    7. '   ' → logprob: -11.680281639099121
    8. 'ng' → logprob: -12.305281639099121
    9. 'oki' → logprob: -12.555281639099121
    10. '	ok' → logprob: -12.680281639099121

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06201215833425522
    2. ' =' → logprob: -2.812012195587158
    3. '=False' → logprob: -10.06201171875
    4. ' ' → logprob: -14.06201171875
    5. '=True' → logprob: -14.43701171875
    6. '==' → logprob: -15.93701171875
    7. '   ' → logprob: -16.31201171875
    8. ')' → logprob: -16.43701171875
    9. '＝' → logprob: -16.81201171875
    10. ':' → logprob: -17.31201171875

Token 65: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5759403705596924
    2. 'False' → logprob: -0.8259403705596924
    3. ' True' → logprob: -14.575940132141113
    4. 'True' → logprob: -15.325940132141113
    5. 'F' → logprob: -15.950940132141113
    6. '=False' → logprob: -16.32594108581543
    7. '(False' → logprob: -17.20094108581543
    8. ' ' → logprob: -19.07594108581543
    9. ' F' → logprob: -19.57594108581543
    10. ' false' → logprob: -19.57594108581543

Token 66: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027687400579452515
    2. '   ' → logprob: -6.002768516540527
    3. '       ' → logprob: -8.502768516540527
    4. ' break' → logprob: -11.002768516540527
    5. '		' → logprob: -11.502768516540527
    6. '<|end|>' → logprob: -11.752768516540527
    7. ',' → logprob: -11.877768516540527
    8. '    
' → logprob: -11.877768516540527
    9. 'break' → logprob: -12.127768516540527
    10. '               ' → logprob: -12.252768516540527

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004727371269837022
    2. '   ' → logprob: -7.750472545623779
    3. '       ' → logprob: -10.750473022460938
    4. '		' → logprob: -11.750473022460938
    5. ' ' → logprob: -12.875473022460938
    6. '               ' → logprob: -13.500473022460938
    7. 'break' → logprob: -13.625473022460938
    8. '  ' → logprob: -13.750473022460938
    9. ' break' → logprob: -14.125473022460938
    10. '          ' → logprob: -14.250473022460938

Token 68: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6073672771453857
    2. ' break' → logprob: -0.9823672771453857
    3. 'break' (adapté à ' break') → logprob: -2.6073672771453857
    4. '       ' → logprob: -5.357367515563965
    5. '   ' → logprob: -6.232367515563965
    6. '	break' → logprob: -8.482367515563965
    7. '		' → logprob: -10.107367515563965
    8. ' ' → logprob: -10.357367515563965
    9. '               ' → logprob: -10.857367515563965
    10. '```' → logprob: -10.982367515563965

Token 69: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03496197238564491
    2. '
' → logprob: -3.4099619388580322
    3. '    
' → logprob: -7.534962177276611
    4. '<|end|>' → logprob: -7.784962177276611
    5. '  ' → logprob: -9.784961700439453
    6. 'if' → logprob: -10.409961700439453
    7. ' if' → logprob: -10.659961700439453
    8. '  
' → logprob: -10.784961700439453
    9. '       ' → logprob: -10.784961700439453
    10. ' ng' → logprob: -10.784961700439453

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009689626283943653
    2. ' if' → logprob: -5.509689807891846
    3. 'if' → logprob: -5.509689807891846
    4. ' ' → logprob: -6.884689807891846
    5. '  ' → logprob: -8.384689331054688
    6. '    
' → logprob: -9.509689331054688
    7. 'ng' → logprob: -10.009689331054688
    8. '
' → logprob: -10.259689331054688
    9. ' ng' → logprob: -10.509689331054688
    10. '  
' → logprob: -10.884689331054688

Token 71: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49092820286750793
    2. ' if' → logprob: -1.2409281730651855
    3. 'if' (adapté à ' if') → logprob: -2.3659281730651855
    4. ' ' → logprob: -5.8659281730651855
    5. ' ng' → logprob: -6.9909281730651855
    6. 'ng' → logprob: -7.2409281730651855
    7. ')' → logprob: -8.740928649902344
    8. '  ' → logprob: -9.490928649902344
    9. ']' → logprob: -9.740928649902344
    10. '    
' → logprob: -10.240928649902344

Token 72: ' ok' (ID: 4763)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7900457382202148
    2. ' ok' → logprob: -0.7900457382202148
    3. 'not' → logprob: -2.665045738220215
    4. 'ok' → logprob: -3.790045738220215
    5. ' ng' → logprob: -10.165045738220215
    6. ' okay' → logprob: -10.415045738220215
    7. '   ' → logprob: -10.415045738220215
    8. 'ng' → logprob: -10.915045738220215
    9. ' ' → logprob: -12.165045738220215
    10. ' ' → logprob: -12.290045738220215

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00412233080714941
    2. '==' → logprob: -6.254122257232666
    3. '   ' → logprob: -6.754122257232666
    4. ' ==' → logprob: -8.004122734069824
    5. ' continues' → logprob: -8.879122734069824
    6. '):' → logprob: -9.129122734069824
    7. '=' → logprob: -9.129122734069824
    8. ' continue' → logprob: -9.254122734069824
    9. '       ' → logprob: -9.879122734069824
    10. 'continue' → logprob: -9.879122734069824

Token 74: '       ' (ID: 309)
  Prédit: ' ng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ng' → logprob: -0.15081147849559784
    2. '   ' → logprob: -2.1508114337921143
    3. 'ng' → logprob: -4.275811672210693
    4. '       ' → logprob: -4.650811672210693
    5. '_ng' → logprob: -10.775811195373535
    6. '    ' → logprob: -11.150811195373535
    7. '           ' → logprob: -11.275811195373535
    8. ' ' → logprob: -11.275811195373535
    9. '```' → logprob: -11.275811195373535
    10. '  ' → logprob: -11.400811195373535

Token 75: ' ng' (ID: 1657)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' (adapté à ' ng') → logprob: -0.6940472722053528
    2. ' ng' → logprob: -0.6940472722053528
    3. '   ' → logprob: -7.194047451019287
    4. '_ng' → logprob: -9.569046974182129
    5. '```' → logprob: -11.194046974182129
    6. '.ng' → logprob: -11.569046974182129
    7. ' ' → logprob: -12.069046974182129
    8. 'n' → logprob: -12.194046974182129
    9. '       ' → logprob: -12.194046974182129
    10. '
' → logprob: -12.319046974182129

Token 76: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0005538671393878758
    2. '_w' → logprob: -7.500554084777832
    3. '_s' → logprob: -15.250554084777832
    4. '_v' → logprob: -15.500554084777832
    5. '_' → logprob: -15.625554084777832
    6. '_b' → logprob: -17.250553131103516
    7. ' _' → logprob: -17.250553131103516
    8. '```' → logprob: -17.375553131103516
    9. '_x' → logprob: -17.500553131103516
    10. '_g' → logprob: -17.875553131103516

Token 77: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015067668864503503
    2. '.' → logprob: -6.501506805419922
    3. '.add' → logprob: -13.501506805419922
    4. 'append' → logprob: -14.126506805419922
    5. '.app' → logprob: -14.251506805419922
    6. ' .' → logprob: -14.251506805419922
    7. '.ap' → logprob: -14.876506805419922
    8. '+' → logprob: -15.501506805419922
    9. '.push' → logprob: -16.001506805419922
    10. '.Append' → logprob: -16.001506805419922

Token 78: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.500003814697266
    3. 'i' → logprob: -19.625003814697266
    4. '(
' → logprob: -20.875003814697266
    5. '((' → logprob: -21.625003814697266
    6. '(j' → logprob: -21.875003814697266
    7. ' (' → logprob: -22.250003814697266
    8. '(a' → logprob: -22.375003814697266
    9. '(

' → logprob: -23.625003814697266
    10. '()' → logprob: -24.000003814697266

Token 79: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ')
' → logprob: -12.375004768371582
    3. ' )' → logprob: -15.750004768371582
    4. ')#' → logprob: -17.0000057220459
    5. '),' → logprob: -17.2500057220459
    6. '))' → logprob: -17.2500057220459
    7. ')return' → logprob: -17.6250057220459
    8. ')add' → logprob: -17.8750057220459
    9. ')`' → logprob: -17.8750057220459
    10. '<|end|>' → logprob: -18.1250057220459

Token 80: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009875434450805187
    2. ' for' → logprob: -4.634875297546387
    3. '
' → logprob: -9.509875297546387
    4. '```' → logprob: -11.759875297546387
    5. '  
' → logprob: -12.009875297546387
    6. ',' → logprob: -12.009875297546387
    7. '<|end|>' → logprob: -12.134875297546387
    8. ' 
' → logprob: -12.259875297546387
    9. 'n' → logprob: -12.884875297546387
    10. '   ' → logprob: -13.509875297546387

Token 81: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4458051919937134
    2. 'j' → logprob: -1.8208051919937134
    3. ' i' → logprob: -2.320805072784424
    4. 'i' → logprob: -2.320805072784424
    5. 'w' → logprob: -7.195805072784424
    6. ' w' → logprob: -7.570805072784424
    7. '_j' → logprob: -10.195805549621582
    8. ' ' → logprob: -10.445805549621582
    9. '_' → logprob: -10.570805549621582
    10. '   ' → logprob: -11.320805549621582

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01850774511694908
    2. 'in' → logprob: -4.018507957458496
    3. ' ' → logprob: -8.768507957458496
    4. 'w' → logprob: -9.518507957458496
    5. ' (' → logprob: -10.518507957458496
    6. 'range' → logprob: -10.518507957458496
    7. ' w' → logprob: -10.643507957458496
    8. ' range' → logprob: -10.768507957458496
    9. '(' → logprob: -11.268507957458496
    10. '(w' → logprob: -12.268507957458496

Token 83: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16081227362155914
    2. ' range' → logprob: -1.910812258720398
    3. '(range' → logprob: -8.285812377929688
    4. 'w' → logprob: -8.535812377929688
    5. '(w' → logprob: -8.910812377929688
    6. ' w' → logprob: -13.035812377929688
    7. '(' → logprob: -14.035812377929688
    8. ' ' → logprob: -14.785812377929688
    9. ' (' → logprob: -15.410812377929688
    10. 'r' → logprob: -15.535812377929688

Token 84: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.00019972586596850306
    2. '(' → logprob: -9.000199317932129
    3. '(range' → logprob: -9.625199317932129
    4. 'range' → logprob: -12.125199317932129
    5. 'w' → logprob: -12.750199317932129
    6. '(h' → logprob: -14.250199317932129
    7. ' range' → logprob: -14.625199317932129
    8. '(s' → logprob: -15.375199317932129
    9. ' (' → logprob: -15.625199317932129
    10. '(W' → logprob: -16.125200271606445

Token 85: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47415491938591003
    2. '):' → logprob: -0.9741549491882324
    3. '):
' → logprob: -9.974154472351074
    4. ')' → logprob: -10.724154472351074
    5. ':' → logprob: -12.599154472351074
    6. '):

' → logprob: -13.099154472351074
    7. ' ):' → logprob: -13.849154472351074
    8. '   ' → logprob: -14.099154472351074
    9. ' ):
' → logprob: -14.099154472351074
    10. ':
' → logprob: -14.224154472351074

Token 86: '   ' (ID: 271)
  Prédit: ' ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.2299196869134903
    2. 'ok' → logprob: -1.729919672012329
    3. '   ' → logprob: -3.604919672012329
    4. ' ' → logprob: -7.479919910430908
    5. '  ' → logprob: -8.85491943359375
    6. '	ok' → logprob: -9.22991943359375
    7. '    ' → logprob: -10.72991943359375
    8. '       ' → logprob: -11.22991943359375
    9. '    
' → logprob: -11.85491943359375
    10. ' okay' → logprob: -11.85491943359375

Token 87: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.2525208294391632
    2. ' ok' → logprob: -1.5025207996368408
    3. '   ' → logprob: -7.50252103805542
    4. ' ' → logprob: -11.252520561218262
    5. '  ' → logprob: -12.002520561218262
    6. '       ' → logprob: -12.377520561218262
    7. '_ok' → logprob: -12.502520561218262
    8. '	ok' → logprob: -12.627520561218262
    9. 'Ok' → logprob: -13.127520561218262
    10. '```' → logprob: -13.627520561218262

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018157200887799263
    2. '=' → logprob: -4.018157005310059
    3. '=True' → logprob: -12.268157005310059
    4. ' ' → logprob: -12.893157005310059
    5. '＝' → logprob: -17.393157958984375
    6. '=False' → logprob: -17.893157958984375
    7. 'True' → logprob: -18.143157958984375
    8. ' ' → logprob: -18.143157958984375
    9. 's' → logprob: -18.268157958984375
    10. ')' → logprob: -18.268157958984375

Token 89: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1002068892121315
    2. ' True' → logprob: -2.3502068519592285
    3. 'False' → logprob: -15.850207328796387
    4. '(True' → logprob: -15.975207328796387
    5. '=True' → logprob: -16.85020637512207
    6. ' ' → logprob: -18.10020637512207
    7. '   ' → logprob: -19.47520637512207
    8. 'true' → logprob: -20.35020637512207
    9. '.True' → logprob: -20.60020637512207
    10. ' ' → logprob: -20.72520637512207

Token 90: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8873092532157898
    2. ' for' → logprob: -1.0123093128204346
    3. '<|end|>' → logprob: -1.6373093128204346
    4. ' ' → logprob: -3.7623093128204346
    5. 'for' → logprob: -5.3873090744018555
    6. '  ' → logprob: -6.7623090744018555
    7. '
' → logprob: -7.1373090744018555
    8. '<|end|>' → logprob: -8.637309074401855
    9. '	for' → logprob: -9.012309074401855
    10. '    ' → logprob: -9.637309074401855

Token 91: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5829199552536011
    2. '   ' → logprob: -1.082919955253601
    3. 'for' → logprob: -2.3329200744628906
    4. '<|end|>' → logprob: -5.582920074462891
    5. ' ' → logprob: -6.207920074462891
    6. '  ' → logprob: -8.83292007446289
    7. '	for' → logprob: -8.83292007446289
    8. '
' → logprob: -10.83292007446289
    9. '```' → logprob: -12.20792007446289
    10. '    ' → logprob: -12.20792007446289

Token 92: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5908448100090027
    2. ' for' → logprob: -0.8408448100090027
    3. '   ' → logprob: -4.215844631195068
    4. ' ' → logprob: -10.590845108032227
    5. '	for' → logprob: -12.215845108032227
    6. '  ' → logprob: -13.090845108032227
    7. '_for' → logprob: -14.090845108032227
    8. 'For' → logprob: -14.340845108032227
    9. '<|end|>' → logprob: -14.590845108032227
    10. '       ' → logprob: -15.090845108032227

Token 93: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0383320115506649
    2. ' j' → logprob: -3.288331985473633
    3. 'h' → logprob: -8.663331985473633
    4. 'range' → logprob: -10.163331985473633
    5. ' ' → logprob: -10.538331985473633
    6. ' in' → logprob: -11.038331985473633
    7. ' range' → logprob: -11.538331985473633
    8. '<|end|>' → logprob: -11.663331985473633
    9. '   ' → logprob: -12.163331985473633
    10. ' h' → logprob: -13.038331985473633

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009774151258170605
    2. 'in' → logprob: -4.634774208068848
    3. '   ' → logprob: -12.259774208068848
    4. ' ' → logprob: -12.509774208068848
    5. '    ' → logprob: -13.134774208068848
    6. 'range' → logprob: -13.259774208068848
    7. '(' → logprob: -13.509774208068848
    8. 'In' → logprob: -13.884774208068848
    9. '<|end|>' → logprob: -14.134774208068848
    10. '	in' → logprob: -14.634774208068848

Token 95: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20273533463478088
    2. 'range' → logprob: -1.7027353048324585
    3. '(range' → logprob: -6.827735424041748
    4. '(h' → logprob: -8.70273494720459
    5. '(' → logprob: -10.20273494720459
    6. 'h' → logprob: -10.57773494720459
    7. ' h' → logprob: -12.82773494720459
    8. ' in' → logprob: -13.32773494720459
    9. '	range' → logprob: -13.95273494720459
    10. ' (' → logprob: -13.95273494720459

Token 96: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -8.363617962459102e-05
    2. '(' → logprob: -9.750083923339844
    3. '(range' → logprob: -11.750083923339844
    4. '(s' → logprob: -11.750083923339844
    5. 'h' → logprob: -12.375083923339844
    6. 'range' → logprob: -13.000083923339844
    7. ' range' → logprob: -13.625083923339844
    8. ' (' → logprob: -13.625083923339844
    9. '(H' → logprob: -15.125083923339844
    10. ' h' → logprob: -16.125083923339844

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10148268938064575
    2. '):
' → logprob: -2.351482629776001
    3. ':' → logprob: -6.85148286819458
    4. ')' → logprob: -8.851482391357422
    5. ':
' → logprob: -10.351482391357422
    6. '   ' → logprob: -10.726482391357422
    7. '       ' → logprob: -11.726482391357422
    8. '):

' → logprob: -12.601482391357422
    9. '):
' → logprob: -12.726482391357422
    10. ']:' → logprob: -13.476482391357422

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036799011286348104
    2. '   ' → logprob: -8.500368118286133
    3. 'if' → logprob: -9.125368118286133
    4. ' if' → logprob: -10.125368118286133
    5. '<|end|>' → logprob: -11.625368118286133
    6. '```' → logprob: -13.250368118286133
    7. ':
' → logprob: -14.125368118286133
    8. ':' → logprob: -14.375368118286133
    9. '
' → logprob: -14.625368118286133
    10. '    ' → logprob: -14.750368118286133

Token 99: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39788830280303955
    2. 'if' (adapté à ' if') → logprob: -1.1478883028030396
    3. ' if' → logprob: -5.14788818359375
    4. '   ' → logprob: -5.27288818359375
    5. '```' → logprob: -11.77288818359375
    6. ' ' → logprob: -13.02288818359375
    7. '           ' → logprob: -13.02288818359375
    8. '	if' → logprob: -13.02288818359375
    9. '
' → logprob: -14.14788818359375
    10. '     ' → logprob: -15.02288818359375

Token 100: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16025082767009735
    2. ' a' → logprob: -1.9102507829666138
    3. '   ' → logprob: -10.660250663757324
    4. '    ' → logprob: -14.035250663757324
    5. '	a' → logprob: -14.285250663757324
    6. ' ' → logprob: -14.535250663757324
    7. '       ' → logprob: -15.160250663757324
    8. '```' → logprob: -15.785250663757324
    9. '           ' → logprob: -16.03525161743164
    10. '(a' → logprob: -16.16025161743164

Token 101: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.842555426876061e-06
    2. '[i' → logprob: -12.500004768371582
    3. '[' → logprob: -14.375004768371582
    4. '[a' → logprob: -15.125004768371582
    5. '[h' → logprob: -16.6250057220459
    6. 'j' → logprob: -16.6250057220459
    7. '   ' → logprob: -17.2500057220459
    8. '[][' → logprob: -17.3750057220459
    9. '][' → logprob: -17.6250057220459
    10. '[y' → logprob: -18.2500057220459

Token 102: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1605941355228424
    2. '[i' → logprob: -1.91059410572052
    3. '[' → logprob: -8.16059398651123
    4. '[j' → logprob: -9.66059398651123
    5. ']' → logprob: -12.41059398651123
    6. '[][' → logprob: -12.41059398651123
    7. ')[' → logprob: -12.53559398651123
    8. '[I' → logprob: -13.41059398651123
    9. '[w' → logprob: -13.78559398651123
    10. ' ][' → logprob: -13.91059398651123

Token 103: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0012078535510227084
    2. '[i' → logprob: -6.7512078285217285
    3. ' i' → logprob: -10.501208305358887
    4. 'w' → logprob: -11.626208305358887
    5. '```' → logprob: -14.626208305358887
    6. '][' → logprob: -15.626208305358887
    7. '   ' → logprob: -16.00120735168457
    8. '	i' → logprob: -16.50120735168457
    9. '[' → logprob: -16.62620735168457
    10. ' ' → logprob: -16.87620735168457

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23722106218338013
    2. ']!=' → logprob: -1.9872210025787354
    3. '!=' → logprob: -2.8622210025787354
    4. ' !=' → logprob: -4.1122212409973145
    5. ' ]' → logprob: -7.6122212409973145
    6. ')!=' → logprob: -10.487220764160156
    7. ']!='' → logprob: -11.237220764160156
    8. '   ' → logprob: -11.487220764160156
    9. '[' → logprob: -11.737220764160156
    10. '']' → logprob: -11.862220764160156

Token 105: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.016067566350102425
    2. ' !=' → logprob: -4.1410675048828125
    3. ']!=' → logprob: -10.766067504882812
    4. ')!=' → logprob: -11.766067504882812
    5. '()!=' → logprob: -13.141067504882812
    6. '!==' → logprob: -14.391067504882812
    7. '!='' → logprob: -15.016067504882812
    8. '!=-' → logprob: -15.266067504882812
    9. ' not' → logprob: -15.641067504882812
    10. ' ' → logprob: -15.641067504882812

Token 106: ' "."' (ID: 50107)
  Prédit: '"."'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"."' → logprob: -0.038596656173467636
    2. '".' → logprob: -3.6635966300964355
    3. ''.' → logprob: -4.4135966300964355
    4. ' "."' → logprob: -9.663597106933594
    5. '.' → logprob: -10.163597106933594
    6. '"' → logprob: -12.288597106933594
    7. '   ' → logprob: -13.413597106933594
    8. ' ' → logprob: -14.913597106933594
    9. ' '.'' → logprob: -15.413597106933594
    10. ' ".' → logprob: -15.663597106933594

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0555090457201004
    2. ':
' → logprob: -2.930509090423584
    3. '           ' → logprob: -7.430509090423584
    4. '):' → logprob: -11.180508613586426
    5. '):
' → logprob: -11.805508613586426
    6. ':

' → logprob: -13.055508613586426
    7. '       ' → logprob: -13.180508613586426
    8. ')' → logprob: -13.555508613586426
    9. '               ' → logprob: -13.555508613586426
    10. '=' → logprob: -14.055508613586426

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00871384609490633
    2. '               ' → logprob: -5.258713722229004
    3. 'ok' → logprob: -6.008713722229004
    4. '       ' → logprob: -8.258713722229004
    5. ' ok' → logprob: -8.633713722229004
    6. ':
' → logprob: -8.633713722229004
    7. '          ' → logprob: -9.508713722229004
    8. '   ' → logprob: -9.633713722229004
    9. '```' → logprob: -10.133713722229004
    10. ':' → logprob: -10.383713722229004

Token 109: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.00012535012501757592
    2. ' ok' → logprob: -9.00012493133545
    3. '           ' → logprob: -14.00012493133545
    4. '       ' → logprob: -14.75012493133545
    5. 'False' → logprob: -14.87512493133545
    6. '   ' → logprob: -15.50012493133545
    7. '	ok' → logprob: -16.625125885009766
    8. 'Ok' → logprob: -17.375125885009766
    9. 'okay' → logprob: -18.375125885009766
    10. 'o' → logprob: -18.375125885009766

Token 110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002190948696807027
    2. ' =' → logprob: -6.127191066741943
    3. '           ' → logprob: -12.877190589904785
    4. '=False' → logprob: -13.002190589904785
    5. '=True' → logprob: -14.627190589904785
    6. '=
' → logprob: -14.752190589904785
    7. '=

' → logprob: -16.1271915435791
    8. ' ' → logprob: -18.0021915435791
    9. '```' → logprob: -18.2521915435791
    10. '               ' → logprob: -18.3771915435791

Token 111: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.583550642360933e-05
    2. ' False' → logprob: -10.250036239624023
    3. 'True' → logprob: -15.875036239624023
    4. '=False' → logprob: -16.000036239624023
    5. 'F' → logprob: -16.250036239624023
    6. '(False' → logprob: -17.125036239624023
    7. '   ' → logprob: -17.250036239624023
    8. '.False' → logprob: -18.875036239624023
    9. '           ' → logprob: -19.375036239624023
    10. '       ' → logprob: -19.875036239624023

Token 112: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003793144423980266
    2. '<|end|>' → logprob: -9.00037956237793
    3. '               ' → logprob: -9.12537956237793
    4. 'break' → logprob: -9.87537956237793
    5. '       ' → logprob: -10.37537956237793
    6. '            
' → logprob: -11.12537956237793
    7. '		' → logprob: -11.25037956237793
    8. '          ' → logprob: -12.12537956237793
    9. '   ' → logprob: -12.25037956237793
    10. '
' → logprob: -12.37537956237793

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.910643762443215e-05
    2. 'break' → logprob: -10.375079154968262
    3. '		' → logprob: -11.125079154968262
    4. '       ' → logprob: -11.375079154968262
    5. '               ' → logprob: -11.875079154968262
    6. '          ' → logprob: -13.000079154968262
    7. '<|end|>' → logprob: -13.000079154968262
    8. '   ' → logprob: -13.125079154968262
    9. '            
' → logprob: -13.125079154968262
    10. '```' → logprob: -13.250079154968262

Token 114: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.018834184855222702
    2. ' break' → logprob: -4.018834114074707
    3. '           ' → logprob: -7.393834114074707
    4. '	break' → logprob: -9.893834114074707
    5. '       ' → logprob: -12.143834114074707
    6. '```' → logprob: -12.643834114074707
    7. '   ' → logprob: -12.893834114074707
    8. 'b' → logprob: -13.393834114074707
    9. '               ' → logprob: -14.018834114074707
    10. ' ' → logprob: -14.268834114074707

Token 115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.229872087715194e-05
    2. '       ' → logprob: -10.125061988830566
    3. '           ' → logprob: -12.000061988830566
    4. 'ng' → logprob: -12.125061988830566
    5. ' ng' → logprob: -12.625061988830566
    6. ',' → logprob: -13.375061988830566
    7. '<|end|>' → logprob: -13.625061988830566
    8. ')' → logprob: -14.125061988830566
    9. ' if' → logprob: -14.125061988830566
    10. '    
' → logprob: -14.250061988830566

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007076582871377468
    2. 'if' → logprob: -5.007076740264893
    3. ' if' → logprob: -8.007076263427734
    4. 'ng' → logprob: -11.382076263427734
    5. '       ' → logprob: -11.507076263427734
    6. '  ' → logprob: -13.132076263427734
    7. ' ' → logprob: -13.757076263427734
    8. '```' → logprob: -14.257076263427734
    9. ',' → logprob: -14.507076263427734
    10. '	if' → logprob: -14.757076263427734

Token 117: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.022179078310728073
    2. ' if' → logprob: -4.397179126739502
    3. '   ' → logprob: -4.647179126739502
    4. ' ' → logprob: -10.897178649902344
    5. '```' → logprob: -11.897178649902344
    6. 'If' → logprob: -12.647178649902344
    7. '  ' → logprob: -13.022178649902344
    8. '	if' → logprob: -13.897178649902344
    9. ';if' → logprob: -14.272178649902344
    10. ')' → logprob: -15.147178649902344

Token 118: ' ok' (ID: 4763)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.48447173833847046
    2. 'not' → logprob: -1.3594717979431152
    3. ' ok' → logprob: -2.7344717979431152
    4. ' ng' → logprob: -3.6094717979431152
    5. 'ng' → logprob: -3.9844717979431152
    6. 'ok' → logprob: -4.109471797943115
    7. ' ' → logprob: -11.171971321105957
    8. 'n' → logprob: -11.234471321105957
    9. ' ' → logprob: -11.234471321105957
    10. '!' → logprob: -11.359471321105957

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016421416774392128
    2. ':
' → logprob: -4.141421318054199
    3. '       ' → logprob: -8.0164213180542
    4. '   ' → logprob: -10.8914213180542
    5. ':

' → logprob: -11.8914213180542
    6. '<|end|>' → logprob: -11.8914213180542
    7. ')' → logprob: -12.5164213180542
    8. '):' → logprob: -12.5164213180542
    9. ',' → logprob: -12.7664213180542
    10. '):
' → logprob: -12.8914213180542

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005053017754107714
    2. 'ng' → logprob: -5.6300530433654785
    3. ' ng' → logprob: -6.8800530433654785
    4. '   ' → logprob: -8.00505256652832
    5. ':
' → logprob: -10.38005256652832
    6. '           ' → logprob: -11.13005256652832
    7. '```' → logprob: -11.13005256652832
    8. '      ' → logprob: -11.75505256652832
    9. '.ng' → logprob: -12.50505256652832
    10. '_ng' → logprob: -12.88005256652832

Token 121: ' ng' (ID: 1657)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' (adapté à ' ng') → logprob: -0.0011667684884741902
    2. '   ' → logprob: -7.501166820526123
    3. ' ng' → logprob: -7.626166820526123
    4. '       ' → logprob: -9.126166343688965
    5. '           ' → logprob: -11.376166343688965
    6. '_ng' → logprob: -12.751166343688965
    7. '.ng' → logprob: -13.751166343688965
    8. '```' → logprob: -14.876166343688965
    9. '
' → logprob: -15.001166343688965
    10. '  ' → logprob: -15.126166343688965

Token 122: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.4617256056226324e-05
    2. '_h' → logprob: -11.625014305114746
    3. '_' → logprob: -12.125014305114746
    4. ' _' → logprob: -16.750015258789062
    5. 'w' → logprob: -17.000015258789062
    6. '_a' → logprob: -17.000015258789062
    7. '_s' → logprob: -17.125015258789062
    8. '_j' → logprob: -17.875015258789062
    9. '_v' → logprob: -18.125015258789062
    10. '_g' → logprob: -18.375015258789062

Token 123: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008322591311298311
    2. '.' → logprob: -7.1258320808410645
    3. '.app' → logprob: -11.250832557678223
    4. 'append' → logprob: -12.500832557678223
    5. '.push' → logprob: -12.625832557678223
    6. '.Append' → logprob: -13.125832557678223
    7. '.add' → logprob: -13.750832557678223
    8. '.ap' → logprob: -13.750832557678223
    9. '.py' → logprob: -14.250832557678223
    10. '.extend' → logprob: -14.500832557678223

Token 124: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. 'i' → logprob: -20.125
    4. '(ii' → logprob: -21.875
    5. ' (' → logprob: -22.5
    6. '(a' → logprob: -23.125
    7. '(j' → logprob: -23.125
    8. '((' → logprob: -23.375
    9. '(int' → logprob: -23.875
    10. '(I' → logprob: -24.0

Token 125: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -13.250003814697266
    3. ' )' → logprob: -15.000003814697266
    4. ')#' → logprob: -15.250003814697266
    5. '#' → logprob: -15.750003814697266
    6. ')return' → logprob: -15.875003814697266
    7. ')n' → logprob: -16.250003814697266
    8. '<|end|>' → logprob: -16.250003814697266
    9. ')add' → logprob: -16.375003814697266
    10. '}' → logprob: -16.750003814697266

Token 126: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00045200303429737687
    2. 'b' → logprob: -8.000452041625977
    3. 'print' → logprob: -9.875452041625977
    4. 'result' → logprob: -10.000452041625977
    5. 'c' → logprob: -12.000452041625977
    6. 'r' → logprob: -12.875452041625977
    7. ' for' → logprob: -13.000452041625977
    8. '#' → logprob: -13.375452041625977
    9. 'new' → logprob: -13.625452041625977
    10. 'd' → logprob: -13.625452041625977

Token 127: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14283233880996704
    2. 'i' → logprob: -2.0178322792053223
    3. ' ' → logprob: -9.89283275604248
    4. '_i' → logprob: -10.14283275604248
    5. '_' → logprob: -10.39283275604248
    6. '   ' → logprob: -11.64283275604248
    7. '	i' → logprob: -11.64283275604248
    8. ' _' → logprob: -12.39283275604248
    9. ' h' → logprob: -12.51783275604248
    10. '```' → logprob: -12.76783275604248

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08911001682281494
    2. 'in' → logprob: -2.4641098976135254
    3. ' ' → logprob: -8.839110374450684
    4. 'not' → logprob: -11.964110374450684
    5. '   ' → logprob: -12.339110374450684
    6. 'range' → logprob: -12.339110374450684
    7. 'n' → logprob: -13.339110374450684
    8. '  ' → logprob: -13.339110374450684
    9. ' not' → logprob: -13.714110374450684
    10. '	in' → logprob: -13.839110374450684

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003187459195032716
    2. ' range' → logprob: -5.753187656402588
    3. '(range' → logprob: -11.75318717956543
    4. 'r' → logprob: -13.87818717956543
    5. 'ange' → logprob: -15.50318717956543
    6. 'h' → logprob: -16.12818717956543
    7. 'rang' → logprob: -16.12818717956543
    8. 'ran' → logprob: -16.37818717956543
    9. '```' → logprob: -16.50318717956543
    10. ' ' → logprob: -16.75318717956543

Token 130: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0002099773846566677
    2. '(' → logprob: -8.62520980834961
    3. '(len' → logprob: -10.75020980834961
    4. 'h' → logprob: -12.00020980834961
    5. '(w' → logprob: -14.00020980834961
    6. '(
' → logprob: -14.12520980834961
    7. ' (' → logprob: -14.37520980834961
    8. ' h' → logprob: -15.62520980834961
    9. '(s' → logprob: -16.50020980834961
    10. ')' → logprob: -16.75020980834961

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008792423643171787
    2. '):
' → logprob: -4.883792400360107
    3. ':' → logprob: -6.758792400360107
    4. ')' → logprob: -11.633792877197266
    5. '+' → logprob: -12.383792877197266
    6. ' ):' → logprob: -12.508792877197266
    7. ':not' → logprob: -13.508792877197266
    8. '}:' → logprob: -13.633792877197266
    9. '   ' → logprob: -13.758792877197266
    10. '):
' → logprob: -13.758792877197266

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0170679222792387
    2. 'if' → logprob: -4.142067909240723
    3. ' if' → logprob: -6.892067909240723
    4. ' ' → logprob: -12.892067909240723
    5. 'for' → logprob: -13.017067909240723
    6. '       ' → logprob: -13.142067909240723
    7. '>' → logprob: -13.517067909240723
    8. '```' → logprob: -13.767067909240723
    9. '    
' → logprob: -14.017067909240723
    10. 'not' → logprob: -14.017067909240723

Token 133: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003042481606826186
    2. ' if' → logprob: -6.503042697906494
    3. '   ' → logprob: -6.628042697906494
    4. 'ok' → logprob: -8.628042221069336
    5. 'for' → logprob: -10.878042221069336
    6. '
' → logprob: -11.878042221069336
    7. ' ' → logprob: -12.253042221069336
    8. '  ' → logprob: -13.503042221069336
    9. '    ' → logprob: -13.628042221069336
    10. '    
' → logprob: -13.753042221069336

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5790910720825195
    2. ' =' → logprob: -1.4540910720825195
    3. 'if' → logprob: -2.0790910720825195
    4. ' ' → logprob: -3.3290910720825195
    5. ' if' → logprob: -3.3290910720825195
    6. 'r' → logprob: -5.8290910720825195
    7. 'f' → logprob: -6.4540910720825195
    8. '   ' → logprob: -6.8290910720825195
    9. '=[]' → logprob: -7.4540910720825195
    10. '  ' → logprob: -7.9540910720825195

Token 135: ' ""
' (ID: 18061)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004307634197175503
    2. '""' → logprob: -5.504307746887207
    3. '[]
' → logprob: -8.504307746887207
    4. '[' → logprob: -10.879307746887207
    5. '"' → logprob: -12.754307746887207
    6. '''' → logprob: -13.004307746887207
    7. ' []' → logprob: -13.379307746887207
    8. '[]

' → logprob: -14.629307746887207
    9. '["' → logprob: -15.379307746887207
    10. '[]"' → logprob: -15.754307746887207

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054805438965559006
    2. 'for' → logprob: -3.0548055171966553
    3. ' for' → logprob: -5.179805278778076
    4. '<|end|>' → logprob: -7.554805278778076
    5. '	for' → logprob: -10.804805755615234
    6. ' ' → logprob: -11.429805755615234
    7. '
' → logprob: -12.554805755615234
    8. '  ' → logprob: -12.554805755615234
    9. '    ' → logprob: -12.929805755615234
    10. '       ' → logprob: -13.304805755615234

Token 137: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020374169573187828
    2. ' for' → logprob: -4.020374298095703
    3. '   ' → logprob: -6.145374298095703
    4. 'if' (adapté à ' if') → logprob: -9.645374298095703
    5. '	for' → logprob: -12.520374298095703
    6. ' ' → logprob: -12.520374298095703
    7. ' if' → logprob: -12.770374298095703
    8. '<|end|>' → logprob: -13.395374298095703
    9. '    ' → logprob: -14.020374298095703
    10. '  ' → logprob: -14.270374298095703

Token 138: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005991128273308277
    2. ' i' → logprob: -5.130990982055664
    3. 'not' → logprob: -10.005990982055664
    4. ' not' → logprob: -11.380990982055664
    5. 'ng' → logprob: -13.005990982055664
    6. ' ' → logprob: -13.130990982055664
    7. '   ' → logprob: -14.255990982055664
    8. '(i' → logprob: -15.005990982055664
    9. '```' → logprob: -15.505990982055664
    10. '	i' → logprob: -15.880990982055664

Token 139: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11287171393632889
    2. 'not' → logprob: -2.2378716468811035
    3. ' in' → logprob: -10.112872123718262
    4. 'in' → logprob: -11.987872123718262
    5. ' ' → logprob: -14.362872123718262
    6. ')' → logprob: -14.612872123718262
    7. '	not' → logprob: -15.112872123718262
    8. 'n' → logprob: -15.237872123718262
    9. ' no' → logprob: -15.237872123718262
    10. 'no' → logprob: -15.987872123718262

Token 140: ' ng' (ID: 1657)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.0010343570029363036
    2. ' ng' → logprob: -6.876034259796143
    3. '   ' → logprob: -14.0010347366333
    4. 'n' → logprob: -16.001033782958984
    5. ' ' → logprob: -16.126033782958984
    6. '_ng' → logprob: -16.126033782958984
    7. '.ng' → logprob: -16.251033782958984
    8. 'ngr' → logprob: -16.501033782958984
    9. 'nh' → logprob: -17.251033782958984
    10. '  ' → logprob: -17.626033782958984

Token 141: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -5.5577775128767826e-06
    2. '_w' → logprob: -12.250005722045898
    3. '_' → logprob: -14.250005722045898
    4. ' _' → logprob: -18.0000057220459
    5. 'h' → logprob: -18.2500057220459
    6. '_g' → logprob: -18.8750057220459
    7. '‌' → logprob: -19.6250057220459
    8. '_t' → logprob: -19.6250057220459
    9. '_ht' → logprob: -19.6250057220459
    10. '_x' → logprob: -19.7500057220459

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007901876233518124
    2. ':
' → logprob: -4.882901668548584
    3. '       ' → logprob: -8.257902145385742
    4. '   ' → logprob: -10.882902145385742
    5. ' :' → logprob: -12.257902145385742
    6. ' continue' → logprob: -12.757902145385742
    7. 'continue' → logprob: -12.757902145385742
    8. '	continue' → logprob: -12.882902145385742
    9. '.' → logprob: -14.007902145385742
    10. ')' → logprob: -14.132902145385742

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.436450636712834e-05
    2. '   ' → logprob: -10.250094413757324
    3. 'continue' → logprob: -10.625094413757324
    4. ' continue' → logprob: -10.750094413757324
    5. '	continue' → logprob: -11.875094413757324
    6. '	   ' → logprob: -13.000094413757324
    7. '           ' → logprob: -13.500094413757324
    8. '     ' → logprob: -13.625094413757324
    9. '	' → logprob: -14.375094413757324
    10. ' ' → logprob: -15.375094413757324

Token 144: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.09282957762479782
    2. ' continue' → logprob: -3.092829465866089
    3. '   ' → logprob: -3.342829465866089
    4. '       ' → logprob: -4.842829704284668
    5. '	continue' → logprob: -10.592829704284668
    6. ' ' → logprob: -11.217829704284668
    7. '           ' → logprob: -11.592829704284668
    8. 'contin' → logprob: -12.092829704284668
    9. 'continu' → logprob: -13.842829704284668
    10. '_continue' → logprob: -14.717829704284668

Token 145: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045665193465538323
    2. ' for' → logprob: -8.250456809997559
    3. 'for' → logprob: -8.875456809997559
    4. '
' → logprob: -10.375456809997559
    5. '    
' → logprob: -10.750456809997559
    6. '  
' → logprob: -14.375456809997559
    7. '       ' → logprob: -14.875456809997559
    8. '  ' → logprob: -15.000456809997559
    9. ' 
' → logprob: -15.125456809997559
    10. '	for' → logprob: -15.250456809997559

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030169863253831863
    2. 'for' → logprob: -3.53016996383667
    3. ' for' → logprob: -7.78016996383667
    4. '	for' → logprob: -14.155169486999512
    5. '
' → logprob: -15.405169486999512
    6. '    
' → logprob: -15.905169486999512
    7. ' ' → logprob: -16.030170440673828
    8. '       ' → logprob: -16.280170440673828
    9. '   ' → logprob: -16.405170440673828
    10. '  ' → logprob: -17.405170440673828

Token 147: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11303313076496124
    2. 'for' (adapté à ' for') → logprob: -2.3630330562591553
    3. ' for' → logprob: -4.363033294677734
    4. '	for' → logprob: -12.738033294677734
    5. ' ' → logprob: -13.863033294677734
    6. '    
' → logprob: -15.363033294677734
    7. '       ' → logprob: -15.363033294677734
    8. '    ' → logprob: -15.613033294677734
    9. '
' → logprob: -15.863033294677734
    10. '   ' → logprob: -15.863033294677734

Token 148: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002613358374219388
    2. ' j' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.000261306762695
    4. '	j' → logprob: -18.375261306762695
    5. '```' → logprob: -19.125261306762695
    6. ' ' → logprob: -19.625261306762695
    7. '_j' → logprob: -20.375261306762695
    8. '    ' → logprob: -20.375261306762695
    9. '  ' → logprob: -20.750261306762695
    10. '$j' → logprob: -20.875261306762695

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08900260925292969
    2. 'in' → logprob: -2.4640026092529297
    3. '   ' → logprob: -10.46400260925293
    4. 'not' → logprob: -11.08900260925293
    5. ' ' → logprob: -11.83900260925293
    6. '    ' → logprob: -12.46400260925293
    7. ' not' → logprob: -12.83900260925293
    8. '  ' → logprob: -13.71400260925293
    9. 'import' → logprob: -13.71400260925293
    10. 'range' → logprob: -13.71400260925293

Token 150: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008683355525135994
    2. ' range' → logprob: -4.758683204650879
    3. 'w' → logprob: -9.883683204650879
    4. '(range' → logprob: -11.008683204650879
    5. 'ng' → logprob: -14.258683204650879
    6. '(w' → logprob: -15.008683204650879
    7. ' w' → logprob: -16.508684158325195
    8. 'rang' → logprob: -17.883684158325195
    9. '[w' → logprob: -18.258684158325195
    10. '	range' → logprob: -18.883684158325195

Token 151: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0015906770713627338
    2. 'w' → logprob: -6.751590728759766
    3. 'range' → logprob: -8.001590728759766
    4. ' range' → logprob: -10.001590728759766
    5. '(' → logprob: -10.751590728759766
    6. '(range' → logprob: -11.501590728759766
    7. ' (' → logprob: -12.001590728759766
    8. ' w' → logprob: -13.376590728759766
    9. '(W' → logprob: -15.126590728759766
    10. '   ' → logprob: -16.001590728759766

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28745365142822266
    2. '):
' → logprob: -1.4124536514282227
    3. ')' → logprob: -5.912453651428223
    4. ':' → logprob: -6.287453651428223
    5. '   ' → logprob: -7.037453651428223
    6. 'not' → logprob: -7.787453651428223
    7. ' not' → logprob: -8.412453651428223
    8. '):

' → logprob: -9.287453651428223
    9. ':not' → logprob: -10.162453651428223
    10. '):
' → logprob: -10.912453651428223

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02372453361749649
    2. '   ' → logprob: -4.023724555969238
    3. ' if' → logprob: -5.523724555969238
    4. 'if' → logprob: -6.523724555969238
    5. '<|end|>' → logprob: -9.898724555969238
    6. '    ' → logprob: -11.023724555969238
    7. '```' → logprob: -11.773724555969238
    8. ' ' → logprob: -11.773724555969238
    9. ',' → logprob: -12.648724555969238
    10. '  ' → logprob: -13.398724555969238

Token 154: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.315622478723526
    2. ' if' → logprob: -1.5656224489212036
    3. '       ' → logprob: -2.815622568130493
    4. '   ' → logprob: -6.315622329711914
    5. ' ' → logprob: -11.315622329711914
    6. '           ' → logprob: -11.565622329711914
    7. '    ' → logprob: -11.815622329711914
    8. '  ' → logprob: -13.815622329711914
    9. '	if' → logprob: -14.440622329711914
    10. '     ' → logprob: -15.315622329711914

Token 155: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013352400856092572
    2. ' j' → logprob: -6.626335144042969
    3. 'not' → logprob: -12.001335144042969
    4. '   ' → logprob: -13.126335144042969
    5. ' not' → logprob: -14.126335144042969
    6. ' ' → logprob: -16.25133514404297
    7. '    ' → logprob: -16.37633514404297
    8. '	j' → logprob: -16.50133514404297
    9. '  ' → logprob: -16.62633514404297
    10. 'i' → logprob: -17.00133514404297

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0125482082366943
    2. ' not' → logprob: -1.2625482082366943
    3. 'in' → logprob: -1.3875482082366943
    4. 'not' → logprob: -2.2625482082366943
    5. '   ' → logprob: -13.387548446655273
    6. ' ' → logprob: -14.012548446655273
    7. '	not' → logprob: -15.137548446655273
    8. ')' → logprob: -15.262548446655273
    9. '```' → logprob: -15.262548446655273
    10. 'In' → logprob: -15.887548446655273

Token 157: ' ng' (ID: 1657)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.4740939140319824
    2. ' ng' → logprob: -0.9740939140319824
    3. '_ng' → logprob: -11.22409439086914
    4. '.ng' → logprob: -13.22409439086914
    5. '-ng' → logprob: -14.72409439086914
    6. '<|end|>' → logprob: -15.22409439086914
    7. '/ng' → logprob: -15.59909439086914
    8. 'ngr' → logprob: -16.09909439086914
    9. 'n' → logprob: -16.09909439086914
    10. '
' → logprob: -16.09909439086914

Token 158: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -2.816093228830141e-06
    2. '_h' → logprob: -13.25000286102295
    3. 'w' → logprob: -14.00000286102295
    4. '_' → logprob: -16.375001907348633
    5. '_ng' → logprob: -21.750001907348633
    6. ' _' → logprob: -21.875001907348633
    7. '_g' → logprob: -21.875001907348633
    8. '	w' → logprob: -23.125001907348633
    9. '_v' → logprob: -23.250001907348633
    10. '_b' → logprob: -23.250001907348633

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004843765404075384
    2. ':
' → logprob: -5.629843711853027
    3. '       ' → logprob: -7.504843711853027
    4. '           ' → logprob: -7.629843711853027
    5. 'continue' → logprob: -9.379843711853027
    6. ' continue' → logprob: -9.629843711853027
    7. '):' → logprob: -11.754843711853027
    8. '==' → logprob: -11.754843711853027
    9. '   ' → logprob: -12.004843711853027
    10. ' :' → logprob: -12.004843711853027

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006233906373381615
    2. 'continue' → logprob: -5.5062336921691895
    3. ' continue' → logprob: -6.2562336921691895
    4. '       ' → logprob: -8.506234169006348
    5. '               ' → logprob: -11.506234169006348
    6. '	continue' → logprob: -12.006234169006348
    7. ':' → logprob: -12.131234169006348
    8. '   ' → logprob: -12.256234169006348
    9. '	       ' → logprob: -13.506234169006348
    10. '		' → logprob: -14.006234169006348

Token 161: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.09688909351825714
    2. ' continue' → logprob: -2.846889019012451
    3. '           ' → logprob: -3.846889019012451
    4. '               ' → logprob: -4.346889019012451
    5. '	continue' → logprob: -11.22188949584961
    6. '       ' → logprob: -12.22188949584961
    7. '   ' → logprob: -12.47188949584961
    8. '_continue' → logprob: -13.47188949584961
    9. 'contin' → logprob: -14.34688949584961
    10. '	       ' → logprob: -14.59688949584961

Token 162: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002659847668837756
    2. 't' → logprob: -8.500266075134277
    3. ' t' → logprob: -10.500266075134277
    4. '           ' → logprob: -10.750266075134277
    5. '<|end|>' → logprob: -12.375266075134277
    6. '
' → logprob: -12.625266075134277
    7. '   ' → logprob: -13.875266075134277
    8. ',' → logprob: -14.250266075134277
    9. '               ' → logprob: -14.375266075134277
    10. 'print' → logprob: -14.750266075134277

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011373057961463928
    2. 't' → logprob: -4.511373043060303
    3. '           ' → logprob: -8.261373519897461
    4. ' t' → logprob: -10.011373519897461
    5. '   ' → logprob: -11.386373519897461
    6. 'print' → logprob: -12.511373519897461
    7. '               ' → logprob: -13.511373519897461
    8. '
' → logprob: -14.136373519897461
    9. '#' → logprob: -14.386373519897461
    10. '      ' → logprob: -14.511373519897461

Token 164: ' t' (ID: 260)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5871682167053223
    2. 't' (adapté à ' t') → logprob: -0.8371682167053223
    3. ' t' → logprob: -5.087168216705322
    4. '           ' → logprob: -5.837168216705322
    5. '   ' → logprob: -6.212168216705322
    6. '               ' → logprob: -10.712167739868164
    7. ' ' → logprob: -11.212167739868164
    8. '
' → logprob: -12.212167739868164
    9. 's' → logprob: -12.337167739868164
    10. 'print' → logprob: -12.462167739868164

Token 165: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00016420685278717428
    2. ' +=' → logprob: -8.875164031982422
    3. '+' → logprob: -10.875164031982422
    4. '+='' → logprob: -13.000164031982422
    5. '+="' → logprob: -13.500164031982422
    6. '=' → logprob: -13.500164031982422
    7. ']+=' → logprob: -15.000164031982422
    8. '+=(' → logprob: -15.750164031982422
    9. '```' → logprob: -18.750164031982422
    10. '.append' → logprob: -19.625164031982422

Token 166: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.00020408630371
    4. '	a' → logprob: -20.87520408630371
    5. ' ' → logprob: -21.00020408630371
    6. '"a' → logprob: -22.50020408630371
    7. '_a' → logprob: -23.00020408630371
    8. ''a' → logprob: -23.00020408630371
    9. '(a' → logprob: -23.37520408630371
    10. '#a' → logprob: -23.37520408630371

Token 167: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.625
    3. '[j' → logprob: -15.875
    4. '[' → logprob: -16.5
    5. '[I' → logprob: -18.0
    6. '```' → logprob: -18.25
    7. '[
' → logprob: -18.5
    8. ' [' → logprob: -19.0
    9. '\[' → logprob: -20.125
    10. '[h' → logprob: -20.25

Token 168: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004267865791916847
    2. '[j' → logprob: -5.504267692565918
    3. ']' → logprob: -9.004267692565918
    4. '[' → logprob: -10.379267692565918
    5. ' ][' → logprob: -10.629267692565918
    6. '"][' → logprob: -11.879267692565918
    7. ''][' → logprob: -13.504267692565918
    8. '```' → logprob: -14.504267692565918
    9. '}[' → logprob: -14.629267692565918
    10. ']][' → logprob: -14.754267692565918

Token 169: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.088346359931165e-07
    2. ' j' → logprob: -14.750000953674316
    3. '[j' → logprob: -15.500000953674316
    4. '][' → logprob: -16.0
    5. ']' → logprob: -17.25
    6. '   ' → logprob: -18.125
    7. '```' → logprob: -18.375
    8. '	j' → logprob: -18.75
    9. ' ' → logprob: -20.25
    10. '_j' → logprob: -20.5

Token 170: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003645442193374038
    2. ']' → logprob: -8.125364303588867
    3. '<|end|>' → logprob: -10.125364303588867
    4. ')
' → logprob: -11.250364303588867
    5. ' )' → logprob: -12.000364303588867
    6. '}' → logprob: -12.750364303588867
    7. '）' → logprob: -13.375364303588867
    8. ')]' → logprob: -14.000364303588867
    9. '[' → logprob: -14.250364303588867
    10. '')' → logprob: -14.375364303588867

Token 171: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6390910744667053
    2. '   ' → logprob: -0.7640910744667053
    3. ' print' → logprob: -5.3890910148620605
    4. ')' → logprob: -6.5140910148620605
    5. '
' → logprob: -9.139091491699219
    6. '```' → logprob: -9.889091491699219
    7. '[' → logprob: -10.264091491699219
    8. '	print' → logprob: -10.389091491699219
    9. ' ' → logprob: -10.639091491699219
    10. '<|end|>' → logprob: -10.639091491699219

Token 172: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007215660531073809
    2. 'c' → logprob: -5.38221549987793
    3. '   ' → logprob: -6.25721549987793
    4. ' print' → logprob: -7.38221549987793
    5. ' c' → logprob: -10.63221549987793
    6. ')' → logprob: -11.63221549987793
    7. ' ' → logprob: -12.50721549987793
    8. 'p' → logprob: -12.63221549987793
    9. '```' → logprob: -12.75721549987793
    10. '-' → logprob: -12.75721549987793

Token 173: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3146573007106781
    2. 't' → logprob: -1.3146573305130005
    3. ' len' → logprob: -7.189657211303711
    4. 'len' → logprob: -7.564657211303711
    5. ' not' → logprob: -9.314657211303711
    6. 'not' → logprob: -11.439657211303711
    7. ' ' → logprob: -11.564657211303711
    8. '`t' → logprob: -12.189657211303711
    9. ' ' → logprob: -13.814657211303711
    10. ' a' → logprob: -14.502157211303711

Token 174: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.014283504337072372
    2. ':' → logprob: -4.639283657073975
    3. ' !=' → logprob: -6.014283657073975
    4. 'print' → logprob: -7.139283657073975
    5. '!='' → logprob: -7.389283657073975
    6. '!="' → logprob: -8.139283180236816
    7. '!==' → logprob: -8.889283180236816
    8. '>' → logprob: -9.889283180236816
    9. '+=' → logprob: -10.264283180236816
    10. '==' → logprob: -10.264283180236816

Token 175: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.0008227337966673076
    2. '''' → logprob: -7.8758225440979
    3. '"' → logprob: -8.000823020935059
    4. '"":' → logprob: -9.375823020935059
    5. ' ""' → logprob: -11.000823020935059
    6. '"."' → logprob: -12.625823020935059
    7. ''' → logprob: -13.500823020935059
    8. '"\' → logprob: -14.500823020935059
    9. '"""' → logprob: -15.250823020935059
    10. '("")' → logprob: -15.875823020935059

Token 176: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13461971282958984
    2. 'c' → logprob: -3.25961971282959
    3. '       ' → logprob: -3.63461971282959
    4. '   ' → logprob: -3.63461971282959
    5. ' print' → logprob: -3.75961971282959
    6. ' c' → logprob: -4.50961971282959
    7. '```' → logprob: -8.13461971282959
    8. '
' → logprob: -9.63461971282959
    9. '    ' → logprob: -10.50961971282959
    10. '           ' → logprob: -10.75961971282959

Token 177: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.2029867172241211
    2. 'print' → logprob: -1.702986717224121
    3. ' c' → logprob: -6.827986717224121
    4. ' print' → logprob: -7.702986717224121
    5. '```' → logprob: -10.827986717224121
    6. '   ' → logprob: -11.202986717224121
    7. '       ' → logprob: -13.452986717224121
    8. '
' → logprob: -13.827986717224121
    9. '``' → logprob: -14.452986717224121
    10. '	c' → logprob: -15.702986717224121

Token 178: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015127197839319706
    2. '.' → logprob: -6.50151252746582
    3. 'append' → logprob: -11.62651252746582
    4. '.app' → logprob: -14.25151252746582
    5. '.extend' → logprob: -14.75151252746582
    6. '.ap' → logprob: -15.12651252746582
    7. '.push' → logprob: -16.75151252746582
    8. ' .' → logprob: -17.25151252746582
    9. '.Append' → logprob: -17.75151252746582
    10. '.py' → logprob: -17.75151252746582

Token 179: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00013500562636181712
    2. '(' → logprob: -9.00013542175293
    3. 't' → logprob: -11.37513542175293
    4. ' t' → logprob: -18.00013542175293
    5. '(
' → logprob: -19.12513542175293
    6. ' (' → logprob: -19.75013542175293
    7. '()' → logprob: -20.37513542175293
    8. '	t' → logprob: -21.12513542175293
    9. '(T' → logprob: -21.25013542175293
    10. '((' → logprob: -21.25013542175293

Token 180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.375004768371582
    3. ' )' → logprob: -16.000003814697266
    4. '`)' → logprob: -18.000003814697266
    5. ')return' → logprob: -18.125003814697266
    6. ')`' → logprob: -18.250003814697266
    7. '')' → logprob: -18.625003814697266
    8. '))' → logprob: -18.750003814697266
    9. '   ' → logprob: -19.000003814697266
    10. ')#' → logprob: -19.125003814697266

Token 181: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1602540910243988
    2. 'print' → logprob: -1.9102541208267212
    3. '
' → logprob: -11.16025447845459
    4. '```' → logprob: -12.53525447845459
    5. ' for' → logprob: -12.78525447845459
    6. '\n' → logprob: -13.03525447845459
    7. '#' → logprob: -13.53525447845459
    8. '[' → logprob: -13.91025447845459
    9. '#print' → logprob: -14.03525447845459
    10. '\' → logprob: -14.16025447845459

Token 182: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02199460007250309
    2. '(*' → logprob: -4.271994590759277
    3. '('' → logprob: -5.896994590759277
    4. '('\' → logprob: -6.146994590759277
    5. '("("' → logprob: -6.271994590759277
    6. '("\' → logprob: -7.271994590759277
    7. '("' → logprob: -8.646994590759277
    8. '("")' → logprob: -9.896994590759277
    9. '(*)' → logprob: -10.396994590759277
    10. '()' → logprob: -10.396994590759277

Token 183: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.320199877838604e-07
    2. ' c' → logprob: -15.25
    3. '"\' → logprob: -16.125
    4. '[c' → logprob: -16.875
    5. '("\' → logprob: -18.25
    6. '(c' → logprob: -18.75
    7. '["' → logprob: -19.0
    8. '('\' → logprob: -19.25
    9. '	c' → logprob: -19.5
    10. ''\' → logprob: -19.75

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000282431225059554
    2. ')' → logprob: -8.250282287597656
    3. ' ,' → logprob: -10.875282287597656
    4. ',n' → logprob: -14.375282287597656
    5. 'sep' → logprob: -15.000282287597656
    6. '(),' → logprob: -15.375282287597656
    7. ',\' → logprob: -15.500282287597656
    8. ',)' → logprob: -15.875282287597656
    9. ',se' → logprob: -15.875282287597656
    10. ',end' → logprob: -16.500282287597656

Token 185: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0001717166742309928
    2. ' sep' → logprob: -8.750171661376953
    3. 'se' → logprob: -11.250171661376953
    4. ')' → logprob: -17.000171661376953
    5. ' ' → logprob: -17.125171661376953
    6. 'separator' → logprob: -17.250171661376953
    7. '  ' → logprob: -18.500171661376953
    8. '1' → logprob: -19.125171661376953
    9. '   ' → logprob: -19.375171661376953
    10. '0' → logprob: -19.500171661376953

Token 186: '='\' (ID: 106410)
  Prédit: '="\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '="\' → logprob: -0.10078129917383194
    2. '='\' → logprob: -2.350781202316284
    3. '"\' → logprob: -7.600781440734863
    4. '="
' → logprob: -10.350781440734863
    5. ''\' → logprob: -10.975781440734863
    6. '=\' → logprob: -11.600781440734863
    7. '=
' → logprob: -11.850781440734863
    8. '=' → logprob: -11.975781440734863
    9. '("\' → logprob: -14.350781440734863
    10. ',"\' → logprob: -14.725781440734863

Token 187: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.018327396363019943
    2. 'n' → logprob: -4.018327236175537
    3. '
' → logprob: -8.768327713012695
    4. '\
' → logprob: -11.143327713012695
    5. ''\' → logprob: -12.393327713012695
    6. '\' → logprob: -14.268327713012695
    7. '  
' → logprob: -14.268327713012695
    8. ' 
' → logprob: -15.143327713012695
    9. ' n' → logprob: -15.143327713012695
    10. '' → logprob: -15.268327713012695

Token 188: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033188804518431425
    2. '')' → logprob: -5.753318786621094
    3. '")' → logprob: -8.878318786621094
    4. ')")' → logprob: -14.253318786621094
    5. '`)' → logprob: -15.003318786621094
    6. ' )' → logprob: -15.128318786621094
    7. '))' → logprob: -15.378318786621094
    8. ')`' → logprob: -15.628318786621094
    9. ')
' → logprob: -16.378318786621094
    10. ')'' → logprob: -17.128318786621094


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 186
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 162
Précision stricte (1ère position): 39.25%
Précision adaptée (1ère position): 46.24%
Précision (top 10): 87.10%
================================================================================
