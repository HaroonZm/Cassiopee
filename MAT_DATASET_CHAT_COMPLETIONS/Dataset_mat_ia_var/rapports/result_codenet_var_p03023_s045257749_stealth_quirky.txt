================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
print([None, (lambda x: (x-2)*180)(int(eval("__import__('builtins').input()")))][1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'print' (ID: 1598)
  → Token d'amorce (pas de prédiction)

Token 1: '([' (ID: 5194)
  → Token d'amorce (pas de prédiction)

Token 2: 'None' (ID: 8505)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5185871720314026
    2. '])' → logprob: -1.0185871124267578
    3. ']' → logprob: -3.393587112426758
    4. ')' → logprob: -4.768587112426758
    5. ')])' → logprob: -7.518587112426758
    6. ',
' → logprob: -9.018587112426758
    7. ' ])' → logprob: -9.143587112426758
    8. ']))' → logprob: -9.143587112426758
    9. '])]' → logprob: -9.268587112426758
    10. ']])' → logprob: -9.393587112426758

Token 4: ' (' (ID: 350)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.179997056722641
    2. 'None' → logprob: -1.9299970865249634
    3. ' ' → logprob: -4.804996967315674
    4. ' True' → logprob: -5.179996967315674
    5. '0' → logprob: -6.429996967315674
    6. '1' → logprob: -6.554996967315674
    7. ' False' → logprob: -7.554996967315674
    8. 'True' → logprob: -7.554996967315674
    9. ' ]' → logprob: -7.679996967315674
    10. 'False' → logprob: -7.804996967315674

Token 5: 'lambda' (ID: 35280)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5324233174324036
    2. 'None' → logprob: -1.5324232578277588
    3. '1' → logprob: -1.9074232578277588
    4. 'lambda' → logprob: -4.157423496246338
    5. '0' → logprob: -4.782423496246338
    6. '3' → logprob: -5.282423496246338
    7. ')))' → logprob: -6.157423496246338
    8. '2' → logprob: -6.532423496246338
    9. ' ' → logprob: -6.657423496246338
    10. '),' → logprob: -6.657423496246338

Token 6: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08953705430030823
    2. 'x' → logprob: -2.5895371437072754
    3. ' None' → logprob: -5.214537143707275
    4. ' ' → logprob: -6.464537143707275
    5. 'None' → logprob: -6.464537143707275
    6. ' )' → logprob: -7.464537143707275
    7. ' a' → logprob: -7.839537143707275
    8. ')' → logprob: -8.464536666870117
    9. ' lambda' → logprob: -8.464536666870117
    10. 'a' → logprob: -8.839536666870117

Token 7: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1782076358795166
    2. ' :' → logprob: -1.9282076358795166
    3. ' x' → logprob: -4.5532073974609375
    4. ',' → logprob: -5.3032073974609375
    5. ' ,' → logprob: -6.9282073974609375
    6. ':x' → logprob: -8.053207397460938
    7. ')' → logprob: -8.803207397460938
    8. ' for' → logprob: -9.053207397460938
    9. 'x' → logprob: -9.178207397460938
    10. ' ' → logprob: -9.303207397460938

Token 8: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.523432195186615
    2. 'x' → logprob: -0.898432195186615
    3. ' ' → logprob: -9.773431777954102
    4. '   ' → logprob: -9.898431777954102
    5. ' None' → logprob: -10.523431777954102
    6. 'None' → logprob: -10.773431777954102
    7. ' (' → logprob: -11.148431777954102
    8. 'i' → logprob: -11.273431777954102
    9. ')' → logprob: -11.523431777954102
    10. '1' → logprob: -11.648431777954102

Token 9: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04357887804508209
    2. ' x' → logprob: -3.418578863143921
    3. 'None' → logprob: -5.1685791015625
    4. 'lambda' → logprob: -6.9185791015625
    5. ' None' → logprob: -7.4185791015625
    6. ' ' → logprob: -7.6685791015625
    7. '1' → logprob: -7.7935791015625
    8. '   ' → logprob: -8.1685791015625
    9. 'print' → logprob: -8.1685791015625
    10. '[' → logprob: -8.9185791015625

Token 10: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49224230647087097
    2. ' +' → logprob: -1.3672423362731934
    3. ',' → logprob: -3.1172423362731934
    4. '*' → logprob: -3.4922423362731934
    5. ' *' → logprob: -4.117242336273193
    6. '**' → logprob: -4.242242336273193
    7. ')' → logprob: -4.617242336273193
    8. ' **' → logprob: -5.492242336273193
    9. ' and' → logprob: -6.367242336273193
    10. ' ' → logprob: -6.367242336273193

Token 11: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027318695560097694
    2. ' ' → logprob: -3.6523187160491943
    3. '2' → logprob: -7.402318477630615
    4. '3' → logprob: -9.527318954467773
    5. ' x' → logprob: -9.652318954467773
    6. 'x' → logprob: -9.652318954467773
    7. '5' → logprob: -10.027318954467773
    8. '0' → logprob: -10.277318954467773
    9. '4' → logprob: -11.152318954467773
    10. '10' → logprob: -11.277318954467773

Token 12: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042217932641506195
    2. ' )' → logprob: -3.917217969894409
    3. ')**' → logprob: -4.16721773147583
    4. '))' → logprob: -6.16721773147583
    5. ')))' → logprob: -6.79221773147583
    6. ' ' → logprob: -7.66721773147583
    7. ')^' → logprob: -7.91721773147583
    8. ')x' → logprob: -8.167218208312988
    9. ')*' → logprob: -8.292218208312988
    10. '),' → logprob: -8.417218208312988

Token 13: '180' (ID: 7521)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5435088276863098
    2. '3' → logprob: -1.668508768081665
    3. 'x' → logprob: -1.793508768081665
    4. ' ' → logprob: -3.668508768081665
    5. '5' → logprob: -4.168509006500244
    6. '10' → logprob: -4.793509006500244
    7. '4' → logprob: -5.168509006500244
    8. ' x' → logprob: -5.168509006500244
    9. '7' → logprob: -6.793509006500244
    10. '1' → logprob: -7.293509006500244

Token 14: ')(' (ID: 4898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18945205211639404
    2. '/' → logprob: -2.1894521713256836
    3. '/x' → logprob: -3.5644521713256836
    4. ' /' → logprob: -4.689452171325684
    5. ')/' → logprob: -4.939452171325684
    6. ' )' → logprob: -5.564452171325684
    7. ' ' → logprob: -5.564452171325684
    8. ')])' → logprob: -6.314452171325684
    9. '))' → logprob: -6.689452171325684
    10. ')/(' → logprob: -6.814452171325684

Token 15: 'int' (ID: 491)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.17335335910320282
    2. '4' → logprob: -3.048353433609009
    3. '10' → logprob: -3.423353433609009
    4. '5' → logprob: -3.548353433609009
    5. '2' → logprob: -4.17335319519043
    6. '0' → logprob: -4.67335319519043
    7. '1' → logprob: -5.17335319519043
    8. '6' → logprob: -5.79835319519043
    9. 'None' → logprob: -5.92335319519043
    10. '90' → logprob: -6.29835319519043

Token 16: '(eval' (ID: 126973)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16479253768920898
    2. '(' → logprob: -2.289792537689209
    3. '(input' → logprob: -4.039792537689209
    4. '("' → logprob: -4.664792537689209
    5. ')' → logprob: -5.039792537689209
    6. ' ' → logprob: -5.164792537689209
    7. ''' → logprob: -5.414792537689209
    8. ' (' → logprob: -5.789792537689209
    9. 'input' → logprob: -6.914792537689209
    10. ' ('' → logprob: -7.164792537689209

Token 17: '("__' (ID: 143983)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5475720763206482
    2. '(' → logprob: -0.9225720763206482
    3. '(input' → logprob: -4.297572135925293
    4. '("("' → logprob: -5.172572135925293
    5. '('(' → logprob: -6.172572135925293
    6. '("' → logprob: -6.922572135925293
    7. ' ' → logprob: -8.172572135925293
    8. '("(' → logprob: -8.422572135925293
    9. '(user' → logprob: -8.422572135925293
    10. ''' → logprob: -8.922572135925293

Token 18: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.02971230261027813
    2. 'file' → logprob: -4.904712200164795
    3. 'repr' → logprob: -5.404712200164795
    4. 'code' → logprob: -5.529712200164795
    5. 'input' → logprob: -5.529712200164795
    6. 'name' → logprob: -6.029712200164795
    7. 'built' → logprob: -6.029712200164795
    8. '"' → logprob: -6.154712200164795
    9. ''' → logprob: -7.029712200164795
    10. ''import' → logprob: -7.529712200164795

Token 19: '__('' (ID: 54460)
  Prédit: '__(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.5070165991783142
    2. '(' → logprob: -2.132016658782959
    3. '__("' → logprob: -2.132016658782959
    4. '('__' → logprob: -3.007016658782959
    5. '('' → logprob: -3.257016658782959
    6. '("__' → logprob: -3.507016658782959
    7. '__' → logprob: -3.757016658782959
    8. '("' → logprob: -4.382016658782959
    9. '__(
' → logprob: -5.757016658782959
    10. '__(' → logprob: -6.382016658782959

Token 20: 'built' (ID: 81936)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.7740616202354431
    2. ''' → logprob: -1.024061679840088
    3. 'built' → logprob: -2.899061679840088
    4. '__' → logprob: -3.399061679840088
    5. ''s' → logprob: -3.399061679840088
    6. 'os' → logprob: -3.899061679840088
    7. ''b' → logprob: -4.149061679840088
    8. '"os' → logprob: -5.274061679840088
    9. ''m' → logprob: -5.524061679840088
    10. '"' → logprob: -5.774061679840088

Token 21: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0028085599187761545
    2. '```' → logprob: -6.252808570861816
    3. '__' → logprob: -8.002808570861816
    4. 'i' → logprob: -8.877808570861816
    5. 'in' → logprob: -9.127808570861816
    6. '_ins' → logprob: -9.627808570861816
    7. '``' → logprob: -10.627808570861816
    8. ''ins' → logprob: -11.127808570861816
    9. ')' → logprob: -11.377808570861816
    10. ' ' → logprob: -11.502808570861816

Token 22: '').' (ID: 3426)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18522995710372925
    2. '.__' → logprob: -2.185230016708374
    3. '').' → logprob: -4.435229778289795
    4. '.print' → logprob: -4.685229778289795
    5. ''.' → logprob: -5.060229778289795
    6. '.b' → logprob: -5.185229778289795
    7. ' .' → logprob: -5.685229778289795
    8. ').__' → logprob: -5.935229778289795
    9. '__.__' → logprob: -6.310229778289795
    10. '.eval' → logprob: -6.560229778289795

Token 23: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.24414977431297302
    2. '__' → logprob: -2.244149684906006
    3. 'get' → logprob: -3.244149684906006
    4. 'chr' → logprob: -3.744149684906006
    5. 'len' → logprob: -4.494149684906006
    6. 'exit' → logprob: -4.744149684906006
    7. 'abs' → logprob: -5.119149684906006
    8. 'int' → logprob: -5.619149684906006
    9. 'eval' → logprob: -6.244149684906006
    10. 'str' → logprob: -6.244149684906006

Token 24: '()' (ID: 416)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -1.046367883682251
    2. '())))' → logprob: -1.546367883682251
    3. '()' → logprob: -1.671367883682251
    4. '("' → logprob: -2.546367883682251
    5. '())' → logprob: -2.671367883682251
    6. '('' → logprob: -3.296367883682251
    7. '(""))' → logprob: -3.796367883682251
    8. '("("' → logprob: -4.296367645263672
    9. '(()' → logprob: -4.921367645263672
    10. ')))' → logprob: -5.171367645263672

Token 25: '")))' (ID: 81885)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4652547836303711
    2. '())))' → logprob: -1.340254783630371
    3. ')))' → logprob: -3.340254783630371
    4. '()' → logprob: -3.340254783630371
    5. '())' → logprob: -3.715254783630371
    6. '))' → logprob: -4.965254783630371
    7. '("' → logprob: -5.965254783630371
    8. ')' → logprob: -6.715254783630371
    9. '(' → logprob: -6.715254783630371
    10. '('' → logprob: -7.215254783630371

Token 26: '][' (ID: 2696)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.5021299123764038
    2. '])' → logprob: -1.1271299123764038
    3. ')' → logprob: -2.8771300315856934
    4. ']))' → logprob: -5.252130031585693
    5. ']' → logprob: -5.502130031585693
    6. ')]' → logprob: -6.002130031585693
    7. '))' → logprob: -7.502130031585693
    8. ',' → logprob: -7.752130031585693
    9. '-' → logprob: -7.752130031585693
    10. ']])' → logprob: -8.127129554748535

Token 27: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5007128715515137
    2. '0' → logprob: -1.2507128715515137
    3. '1' → logprob: -2.2507128715515137
    4. ' -' → logprob: -6.875712871551514
    5. ' ' → logprob: -6.875712871551514
    6. '])' → logprob: -9.000713348388672
    7. ']' → logprob: -10.750713348388672
    8. ':' → logprob: -11.750713348388672
    9. '-i' → logprob: -11.750713348388672
    10. '   ' → logprob: -12.125713348388672

Token 28: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02280663698911667
    2. ']' → logprob: -4.022806644439697
    3. ')])' → logprob: -5.897806644439697
    4. ')' → logprob: -6.897806644439697
    5. ' ])' → logprob: -7.522806644439697
    6. ']])' → logprob: -9.022806167602539
    7. ']))' → logprob: -9.397806167602539
    8. '])]' → logprob: -9.647806167602539
    9. ')]' → logprob: -10.147806167602539
    10. '],' → logprob: -11.647806167602539


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 26
Tokens correctement prédits (1ère position, stricte): 9
Tokens correctement prédits (1ère position, avec adaptation): 9
Tokens correctement prédits (top 10): 17
Précision stricte (1ère position): 34.62%
Précision adaptée (1ère position): 34.62%
Précision (top 10): 65.38%
================================================================================
