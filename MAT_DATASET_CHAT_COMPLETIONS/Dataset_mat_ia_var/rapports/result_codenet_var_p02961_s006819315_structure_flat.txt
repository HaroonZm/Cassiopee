================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
K = int(input())
x, y = 0, 0
X, Y = map(int, input().split())
if K % 2 == 0 and (X+Y) % 2:
    print(-1)
else:
    ANS = []
    while x != X or y != Y:
        a, b = x, y
        if abs(X-a)+abs(Y-b) >= 2*K:
            if abs(X-a) >= K:
                r1 = K if X > a else -K
            else:
                r1 = abs(X-a) * (1 if X > a else -1)
            r2 = (K-abs(r1)) * (1 if Y > b else -1)
        elif abs(X-a)+abs(Y-b) == K:
            r1, r2 = X-a, Y-b
        else:
            rr = 2*K - abs(X-a)-abs(Y-b)
            rr = 0 if rr % 2 else rr//2
            if abs(X-a) < abs(Y-b):
                r1 = (abs(X-a)+rr) * (1 if X > a else -1)
                r2 = (K-abs(r1)) * (1 if Y > b else -1)
            else:
                r2 = (abs(Y-b)+rr) * (1 if Y > b else -1)
                r1 = (K-abs(r2)) * (1 if X > a else -1)
        x, y = a + r1, b + r2
        ANS.append((x, y))
    print(len(ANS))
    for ans in ANS:
        print(*ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'K' (ID: 42)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005707169882953167
    2. '(K' → logprob: -5.880707263946533
    3. 'K' → logprob: -6.005707263946533
    4. ''' → logprob: -8.630706787109375
    5. '('' → logprob: -9.255706787109375
    6. '`' → logprob: -9.755706787109375
    7. '```' → logprob: -11.005706787109375
    8. '("("' → logprob: -11.130706787109375
    9. '(
' → logprob: -11.255706787109375
    10. '"' → logprob: -11.630706787109375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18194976449012756
    2. ')' → logprob: -2.0569498538970947
    3. '()' → logprob: -3.4319498538970947
    4. '())' → logprob: -5.681949615478516
    5. '(
' → logprob: -7.431949615478516
    6. '```' → logprob: -7.431949615478516
    7. '")' → logprob: -8.056949615478516
    8. '))' → logprob: -8.556949615478516
    9. '`)' → logprob: -8.806949615478516
    10. '("("' → logprob: -8.931949615478516

Token 5: 'x' (ID: 87)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7057105898857117
    2. 'for' → logprob: -0.8307105898857117
    3. '*' → logprob: -3.5807106494903564
    4. '\n' → logprob: -4.830710411071777
    5. 'i' → logprob: -5.330710411071777
    6. ' if' → logprob: -5.830710411071777
    7. ')' → logprob: -5.830710411071777
    8. '#' → logprob: -5.830710411071777
    9. ' for' → logprob: -5.955710411071777
    10. 's' → logprob: -5.955710411071777

Token 6: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17297020554542542
    2. '+' → logprob: -2.6729702949523926
    3. '=' → logprob: -3.6729702949523926
    4. ' =' → logprob: -4.047970294952393
    5. ')' → logprob: -4.672970294952393
    6. '_' → logprob: -4.797970294952393
    7. '**' → logprob: -5.172970294952393
    8. '*' → logprob: -5.297970294952393
    9. ' ' → logprob: -5.422970294952393
    10. '%' → logprob: -5.547970294952393

Token 7: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0020392718724906445
    2. ' y' → logprob: -6.252039432525635
    3. '=' → logprob: -9.627038955688477
    4. ' =' → logprob: -10.877038955688477
    5. ',y' → logprob: -11.752038955688477
    6. '_' → logprob: -12.127038955688477
    7. ',' → logprob: -12.502038955688477
    8. 'K' → logprob: -12.877038955688477
    9. '_y' → logprob: -13.002038955688477
    10. 'x' → logprob: -13.627038955688477

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5432950258255005
    2. ' =' → logprob: -0.9182950258255005
    3. ',' → logprob: -3.918294906616211
    4. ' ' → logprob: -10.293294906616211
    5. ')' → logprob: -10.918294906616211
    6. ' ,' → logprob: -11.293294906616211
    7. '<|end|>' → logprob: -11.668294906616211
    8. '[' → logprob: -12.543294906616211
    9. 's' → logprob: -12.793294906616211
    10. '_' → logprob: -13.168294906616211

Token 9: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44145888090133667
    2. 'map' → logprob: -1.0664589405059814
    3. ' map' → logprob: -4.691458702087402
    4. ' ' → logprob: -6.691458702087402
    5. 'input' → logprob: -6.816458702087402
    6. 'K' → logprob: -7.191458702087402
    7. 'list' → logprob: -8.941458702087402
    8. ' K' → logprob: -9.566458702087402
    9. '1' → logprob: -9.691458702087402
    10. '(map' → logprob: -10.191458702087402

Token 10: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1312105804681778
    2. 'map' → logprob: -2.1312105655670166
    3. '1' → logprob: -6.506210803985596
    4. 'K' → logprob: -6.756210803985596
    5. ' map' → logprob: -7.256210803985596
    6. 'input' → logprob: -8.381210327148438
    7. '(' → logprob: -8.631210327148438
    8. '(map' → logprob: -9.006210327148438
    9. 'list' → logprob: -9.131210327148438
    10. ' ' → logprob: -9.256210327148438

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010598049499094486
    2. '<|end|>' → logprob: -4.635598182678223
    3. ' ,' → logprob: -7.635598182678223
    4. '<|end|>' → logprob: -9.385598182678223
    5. '
' → logprob: -9.760598182678223
    6. '```' → logprob: -9.885598182678223
    7. '0' → logprob: -10.135598182678223
    8. ',
' → logprob: -10.510598182678223
    9. ' ' → logprob: -10.760598182678223
    10. ',y' → logprob: -11.760598182678223

Token 12: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029923528200015426
    2. ' ' → logprob: -8.125299453735352
    3. '1' → logprob: -12.875299453735352
    4. 'K' → logprob: -14.375299453735352
    5. 'x' → logprob: -17.62529945373535
    6. '```' → logprob: -17.75029945373535
    7. ' K' → logprob: -17.93779945373535
    8. '2' → logprob: -18.62529945373535
    9. '`' → logprob: -18.68779945373535
    10. '-' → logprob: -18.68779945373535

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.664371848164592e-05
    2. ' ' → logprob: -11.750016212463379
    3. '1' → logprob: -12.125016212463379
    4. 'K' → logprob: -12.750016212463379
    5. '-' → logprob: -15.375016212463379
    6. 'x' → logprob: -16.875017166137695
    7. '```' → logprob: -17.125017166137695
    8. '   ' → logprob: -18.000017166137695
    9. ' K' → logprob: -18.750017166137695
    10. '  ' → logprob: -18.750017166137695

Token 14: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.474629282951355
    2. '<|end|>' → logprob: -1.724629282951355
    3. ' for' → logprob: -2.2246294021606445
    4. '
' → logprob: -2.4746294021606445
    5. '<|end|>' → logprob: -5.8496294021606445
    6. '\n' → logprob: -6.5996294021606445
    7. 'while' → logprob: -6.7246294021606445
    8. '```' → logprob: -7.2246294021606445
    9. ' 
' → logprob: -8.224629402160645
    10. ' while' → logprob: -8.724629402160645

Token 15: 'X' (ID: 55)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0025183463003486395
    2. ' for' → logprob: -6.127518177032471
    3. 'while' → logprob: -8.127518653869629
    4. '```' → logprob: -11.127518653869629
    5. 'w' → logprob: -12.252518653869629
    6. 'd' → logprob: -12.627518653869629
    7. 'direction' → logprob: -12.627518653869629
    8. 'dire' → logprob: -13.002518653869629
    9. 'i' → logprob: -13.252518653869629
    10. 'if' → logprob: -14.002518653869629

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30318909883499146
    2. ' +=' → logprob: -1.5531890392303467
    3. ' =' → logprob: -4.303189277648926
    4. '+' → logprob: -4.553189277648926
    5. '_' → logprob: -4.803189277648926
    6. '+=' → logprob: -4.803189277648926
    7. '=' → logprob: -6.053189277648926
    8. ' ,' → logprob: -6.053189277648926
    9. '_,' → logprob: -7.428189277648926
    10. '-' → logprob: -7.803189277648926

Token 17: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.011221705935895443
    2. ' Y' → logprob: -4.511221885681152
    3. 'y' → logprob: -9.136221885681152
    4. 'K' → logprob: -10.761221885681152
    5. ' ' → logprob: -11.261221885681152
    6. '0' → logprob: -11.886221885681152
    7. '	Y' → logprob: -11.886221885681152
    8. '1' → logprob: -12.636221885681152
    9. '=' → logprob: -12.886221885681152
    10. ' =' → logprob: -13.011221885681152

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006798971444368362
    2. '=' → logprob: -5.00679874420166
    3. ',' → logprob: -9.50679874420166
    4. ' ' → logprob: -12.38179874420166
    5. '<|end|>' → logprob: -13.00679874420166
    6. ' =
' → logprob: -14.50679874420166
    7. ')' → logprob: -14.63179874420166
    8. ' ,' → logprob: -14.63179874420166
    9. '```' → logprob: -15.13179874420166
    10. '0' → logprob: -15.88179874420166

Token 19: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.399616003036499
    2. ' ' → logprob: -1.149616003036499
    3. '1' → logprob: -5.024616241455078
    4. ' K' → logprob: -6.024616241455078
    5. 'K' → logprob: -6.274616241455078
    6. '[' → logprob: -7.899616241455078
    7. ' (' → logprob: -8.149616241455078
    8. 'x' → logprob: -8.274616241455078
    9. ' [' → logprob: -8.524616241455078
    10. ' x' → logprob: -9.149616241455078

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010953732766211033
    2. '(input' → logprob: -5.135953903198242
    3. '(' → logprob: -5.760953903198242
    4. '(lambda' → logprob: -6.635953903198242
    5. '(map' → logprob: -8.385953903198242
    6. '(list' → logprob: -9.260953903198242
    7. '(str' → logprob: -9.385953903198242
    8. '(tuple' → logprob: -10.010953903198242
    9. '[int' → logprob: -10.760953903198242
    10. '(eval' → logprob: -11.010953903198242

Token 21: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0021058868151158094
    2. ',input' → logprob: -6.627105712890625
    3. 'input' → logprob: -7.877105712890625
    4. '(' → logprob: -8.752105712890625
    5. ')' → logprob: -8.877105712890625
    6. ',' → logprob: -9.877105712890625
    7. ' input' → logprob: -10.627105712890625
    8. ' (' → logprob: -11.502105712890625
    9. '=input' → logprob: -11.752105712890625
    10. '<input' → logprob: -12.627105712890625

Token 22: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5760274529457092
    2. 'input' → logprob: -0.8260274529457092
    3. ')' → logprob: -9.826027870178223
    4. '(input' → logprob: -11.076027870178223
    5. '[input' → logprob: -12.451027870178223
    6. ' ' → logprob: -12.826027870178223
    7. ',input' → logprob: -12.826027870178223
    8. ' )' → logprob: -12.951027870178223
    9. '	input' → logprob: -13.076027870178223
    10. '=input' → logprob: -13.576027870178223

Token 23: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.23222962021827698
    2. '()' → logprob: -1.6072295904159546
    3. '().' → logprob: -5.107229709625244
    4. '());' → logprob: -8.857229232788086
    5. '(),' → logprob: -9.232229232788086
    6. ')' → logprob: -9.357229232788086
    7. '()>' → logprob: -9.357229232788086
    8. '()))' → logprob: -9.357229232788086
    9. '();)' → logprob: -9.857229232788086
    10. '()),' → logprob: -10.232229232788086

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5107177862082608e-05
    2. 'strip' → logprob: -10.625024795532227
    3. ' split' → logprob: -15.000024795532227
    4. '(split' → logprob: -15.875024795532227
    5. 'rstrip' → logprob: -15.875024795532227
    6. ')' → logprob: -16.875024795532227
    7. 'spl' → logprob: -17.625024795532227
    8. 's' → logprob: -18.250024795532227
    9. '()' → logprob: -18.750024795532227
    10. ' ' → logprob: -19.750024795532227

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0074388510547578335
    2. '()' → logprob: -5.257438659667969
    3. ')' → logprob: -6.507438659667969
    4. '()))' → logprob: -7.757438659667969
    5. '('' → logprob: -8.507438659667969
    6. '(' → logprob: -10.757438659667969
    7. '())
' → logprob: -10.882438659667969
    8. '))' → logprob: -11.632438659667969
    9. '`)' → logprob: -11.882438659667969
    10. ' ())' → logprob: -12.132438659667969

Token 26: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.451063334941864
    2. ' x' → logprob: -2.076063394546509
    3. 'x' → logprob: -2.451063394546509
    4. 'K' → logprob: -3.076063394546509
    5. ' abs' → logprob: -3.326063394546509
    6. ' X' → logprob: -3.576063394546509
    7. ' ' → logprob: -4.07606315612793
    8. 'abs' → logprob: -4.82606315612793
    9. ' (' → logprob: -5.07606315612793
    10. 'X' → logprob: -5.20106315612793

Token 28: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.12311386317014694
    2. ' ==' → logprob: -2.9981138706207275
    3. '>' → logprob: -3.2481138706207275
    4. ' <' → logprob: -4.498113632202148
    5. '==' → logprob: -5.248113632202148
    6. ' ' → logprob: -5.623113632202148
    7. ' <=' → logprob: -6.123113632202148
    8. ' >=' → logprob: -6.123113632202148
    9. ' %' → logprob: -7.123113632202148
    10. '<' → logprob: -7.248113632202148

Token 29: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.039068982005119324
    2. ' ' → logprob: -3.6640689373016357
    3. '4' → logprob: -4.664069175720215
    4. '3' → logprob: -5.914069175720215
    5. '10' → logprob: -8.539069175720215
    6. '6' → logprob: -8.539069175720215
    7. '5' → logprob: -9.539069175720215
    8. '7' → logprob: -10.039069175720215
    9. '8' → logprob: -11.039069175720215
    10. '1' → logprob: -11.539069175720215

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.062377795577049255
    2. '4' → logprob: -3.312377691268921
    3. ' ' → logprob: -3.812377691268921
    4. '3' → logprob: -7.1873779296875
    5. '10' → logprob: -7.5623779296875
    6. 'X' → logprob: -8.9373779296875
    7. '5' → logprob: -9.0623779296875
    8. '6' → logprob: -9.1873779296875
    9. '7' → logprob: -9.8123779296875
    10. '(' → logprob: -10.1873779296875

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026568489149212837
    2. '==' → logprob: -3.6515684127807617
    3. ' !=' → logprob: -9.026568412780762
    4. ' =' → logprob: -9.651568412780762
    5. ':' → logprob: -10.026568412780762
    6. ' :' → logprob: -11.026568412780762
    7. '=' → logprob: -11.526568412780762
    8. ' ' → logprob: -11.776568412780762
    9. '!=' → logprob: -12.776568412780762
    10. ' <' → logprob: -14.526568412780762

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0381353534758091
    2. '0' → logprob: -3.288135290145874
    3. '1' → logprob: -9.288135528564453
    4. '2' → logprob: -15.100635528564453
    5. '  ' → logprob: -15.475635528564453
    6. '==' → logprob: -15.788135528564453
    7. ' ' → logprob: -15.975635528564453
    8. ' ==' → logprob: -16.413135528564453
    9. ' 

' → logprob: -16.725635528564453
    10. ')' → logprob: -16.850635528564453

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01380827371031046
    2. '1' → logprob: -4.763808250427246
    3. ' ' → logprob: -5.263808250427246
    4. '  ' → logprob: -14.263808250427246
    5. '<|end|>' → logprob: -14.326308250427246
    6. '```' → logprob: -14.638808250427246
    7. '==' → logprob: -15.013808250427246
    8. '

' → logprob: -15.201308250427246
    9. '2' → logprob: -15.763808250427246
    10. '...' → logprob: -15.763808250427246

Token 34: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016892236890271306
    2. ' :' → logprob: -6.501689434051514
    3. ':
' → logprob: -8.626688957214355
    4. ' :
' → logprob: -12.626688957214355
    5. ' and' → logprob: -13.501688957214355
    6. '):' → logprob: -14.126688957214355
    7. ',' → logprob: -14.376688957214355
    8. ':**' → logprob: -14.876688957214355
    9. ':return' → logprob: -15.001688957214355
    10. ':

' → logprob: -15.126688957214355

Token 35: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6407420039176941
    2. ' X' → logprob: -1.3907420635223389
    3. ' abs' → logprob: -2.765742063522339
    4. ' x' → logprob: -2.890742063522339
    5. ' K' → logprob: -3.640742063522339
    6. ' Y' → logprob: -4.39074182510376
    7. 'X' → logprob: -4.51574182510376
    8. '(' → logprob: -4.76574182510376
    9. '(x' → logprob: -4.89074182510376
    10. ' ((' → logprob: -4.89074182510376

Token 36: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.0749205350875854
    2. ' X' → logprob: -1.8249205350875854
    3. 'x' → logprob: -2.074920654296875
    4. ' (' → logprob: -2.574920654296875
    5. '(x' → logprob: -2.824920654296875
    6. ' x' → logprob: -2.824920654296875
    7. ' abs' → logprob: -2.949920654296875
    8. 'abs' → logprob: -3.199920654296875
    9. '(X' → logprob: -3.699920654296875
    10. ' K' → logprob: -4.074920654296875

Token 37: '+' (ID: 10)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1111713647842407
    2. '-' → logprob: -1.7361713647842407
    3. ' +' → logprob: -1.9861713647842407
    4. ' ==' → logprob: -2.361171245574951
    5. '+' → logprob: -2.986171245574951
    6. '==' → logprob: -3.361171245574951
    7. ' !=' → logprob: -3.486171245574951
    8. ' %' → logprob: -3.486171245574951
    9. '**' → logprob: -3.986171245574951
    10. ',' → logprob: -3.986171245574951

Token 38: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0061988383531570435
    2. ' Y' → logprob: -5.131198883056641
    3. ')' → logprob: -9.63119888305664
    4. ' ' → logprob: -9.75619888305664
    5. '	Y' → logprob: -9.75619888305664
    6. 'K' → logprob: -10.63119888305664
    7. '<|end|>' → logprob: -11.25619888305664
    8. 'x' → logprob: -11.25619888305664
    9. 'X' → logprob: -11.88119888305664
    10. '+' → logprob: -12.25619888305664

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015467642806470394
    2. ' )' → logprob: -6.876546859741211
    3. ')%' → logprob: -8.501546859741211
    4. '>=' → logprob: -9.626546859741211
    5. ')>=' → logprob: -9.626546859741211
    6. '==' → logprob: -10.376546859741211
    7. '<=' → logprob: -10.501546859741211
    8. ')<=' → logprob: -10.626546859741211
    9. '>' → logprob: -10.751546859741211
    10. ' >=' → logprob: -11.251546859741211

Token 40: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7465941309928894
    2. ' >=' → logprob: -1.3715941905975342
    3. '%' → logprob: -2.121594190597534
    4. ' <=' → logprob: -2.121594190597534
    5. ' ==' → logprob: -4.746593952178955
    6. ' ' → logprob: -4.871593952178955
    7. '>=' → logprob: -5.246593952178955
    8. ' !=' → logprob: -5.371593952178955
    9. '<=' → logprob: -6.246593952178955
    10. ' >' → logprob: -6.746593952178955

Token 41: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2812514901161194
    2. ' ' → logprob: -1.4062514305114746
    3. '3' → logprob: -10.156251907348633
    4. ' K' → logprob: -11.156251907348633
    5. '<|end|>' → logprob: -11.156251907348633
    6. '4' → logprob: -11.406251907348633
    7. ')' → logprob: -12.031251907348633
    8. '1' → logprob: -12.906251907348633
    9. '```' → logprob: -12.968751907348633
    10. '>' → logprob: -13.406251907348633

Token 42: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002284076064825058
    2. ' ' → logprob: -6.127284049987793
    3. '3' → logprob: -9.502284049987793
    4. '(' → logprob: -11.877284049987793
    5. 'K' → logprob: -12.627284049987793
    6. '{' → logprob: -12.752284049987793
    7. '1' → logprob: -12.877284049987793
    8. '<|end|>' → logprob: -13.127284049987793
    9. '4' → logprob: -13.502284049987793
    10. '  ' → logprob: -13.939784049987793

Token 43: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5246533751487732
    2. ' ==' → logprob: -0.8996533751487732
    3. ' !=' → logprob: -7.149653434753418
    4. '!=' → logprob: -7.524653434753418
    5. '=' → logprob: -9.649653434753418
    6. ' ' → logprob: -10.524653434753418
    7. ')==' → logprob: -10.649653434753418
    8. '()==' → logprob: -10.774653434753418
    9. ')' → logprob: -11.149653434753418
    10. '0' → logprob: -11.649653434753418

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3139314651489258
    2. ' print' → logprob: -1.6889314651489258
    3. '    ' → logprob: -3.563931465148926
    4. 'print' → logprob: -4.063931465148926
    5. ':' → logprob: -4.188931465148926
    6. ' :' → logprob: -5.313931465148926
    7. ' ' → logprob: -5.313931465148926
    8. ' x' → logprob: -5.563931465148926
    9. '    
' → logprob: -6.813931465148926
    10. '```' → logprob: -7.063931465148926

Token 45: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5646297335624695
    2. 'print' (adapté à ' print') → logprob: -1.1896297931671143
    3. '   ' → logprob: -2.1896297931671143
    4. ':' → logprob: -5.439629554748535
    5. ' ' → logprob: -5.939629554748535
    6. ' =' → logprob: -6.939629554748535
    7. '\' → logprob: -7.064629554748535
    8. ' x' → logprob: -7.064629554748535
    9. '    ' → logprob: -7.189629554748535
    10. '\n' → logprob: -7.314629554748535

Token 46: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7049443125724792
    2. '(-' → logprob: -1.079944372177124
    3. '("' → logprob: -1.829944372177124
    4. '('' → logprob: -5.454944133758545
    5. '()' → logprob: -6.704944133758545
    6. '("")' → logprob: -9.579944610595703
    7. '(False' → logprob: -9.829944610595703
    8. '("-' → logprob: -9.829944610595703
    9. '(None' → logprob: -9.954944610595703
    10. '(True' → logprob: -10.704944610595703

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -11.500019073486328
    3. '2' → logprob: -12.000019073486328
    4. '-' → logprob: -14.437519073486328
    5. '１' → logprob: -15.312519073486328
    6. ' -' → logprob: -15.375019073486328
    7. '   ' → logprob: -15.500019073486328
    8. '(' → logprob: -15.750019073486328
    9. 'K' → logprob: -15.875019073486328
    10. '10' → logprob: -16.000019073486328

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019395847339183092
    2. ')
' → logprob: -6.25193977355957
    3. ')
' → logprob: -12.37693977355957
    4. ' )' → logprob: -12.87693977355957
    5. '```' → logprob: -14.25193977355957
    6. ')

' → logprob: -14.37693977355957
    7. 'else' → logprob: -14.75193977355957
    8. '`)' → logprob: -14.87693977355957
    9. ')`' → logprob: -15.25193977355957
    10. ')**' → logprob: -15.25193977355957

Token 49: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10098530352115631
    2. ' else' → logprob: -3.100985288619995
    3. '   ' → logprob: -3.725985288619995
    4. 'elif' → logprob: -4.475985527038574
    5. ')' → logprob: -4.975985527038574
    6. '<|end|>' → logprob: -5.350985527038574
    7. '
' → logprob: -6.600985527038574
    8. ' ' → logprob: -7.225985527038574
    9. 'continue' → logprob: -7.975985527038574
    10. '```' → logprob: -8.100985527038574

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004521222144830972
    2. ':
' → logprob: -7.750452041625977
    3. ' :' → logprob: -11.375452041625977
    4. '   ' → logprob: -12.250452041625977
    5. '):' → logprob: -12.625452041625977
    6. ',' → logprob: -14.500452041625977
    7. ':**' → logprob: -15.000452041625977
    8. ' :
' → logprob: -15.500452041625977
    9. ':

' → logprob: -15.750452041625977
    10. '():' → logprob: -16.000452041625977

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03558339551091194
    2. ' for' → logprob: -4.03558349609375
    3. '```' → logprob: -4.78558349609375
    4. '<|end|>' → logprob: -6.16058349609375
    5. ' steps' → logprob: -6.41058349609375
    6. ' ' → logprob: -7.03558349609375
    7. '    ' → logprob: -7.28558349609375
    8. ' n' → logprob: -7.53558349609375
    9. ' if' → logprob: -7.53558349609375
    10. ' step' → logprob: -8.41058349609375

Token 52: ' AN' (ID: 3473)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.6305615901947021
    2. 'd' → logprob: -2.130561590194702
    3. ' if' → logprob: -2.130561590194702
    4. 'for' → logprob: -2.380561590194702
    5. 'steps' → logprob: -2.380561590194702
    6. 'if' → logprob: -2.755561590194702
    7. 'distance' → logprob: -3.005561590194702
    8. ' steps' → logprob: -3.130561590194702
    9. ' d' → logprob: -3.130561590194702
    10. 'dist' → logprob: -3.755561590194702

Token 53: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -6.027225754223764e-05
    2. 'SW' → logprob: -10.000060081481934
    3. 'swer' → logprob: -12.500060081481934
    4. ' =' → logprob: -12.500060081481934
    5. 'Sw' → logprob: -13.375060081481934
    6. '   ' → logprob: -13.875060081481934
    7. '=' → logprob: -14.000060081481934
    8. '=S' → logprob: -14.500060081481934
    9. '=[]
' → logprob: -14.875060081481934
    10. ' S' → logprob: -15.125060081481934

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47424039244651794
    2. '=' → logprob: -0.9742404222488403
    3. ' ' → logprob: -9.34924030303955
    4. 's' → logprob: -11.09924030303955
    5. '_' → logprob: -11.47424030303955
    6. ',' → logprob: -11.47424030303955
    7. '=[]' → logprob: -11.72424030303955
    8. ':' → logprob: -12.34924030303955
    9. 'S' → logprob: -12.59924030303955
    10. '   ' → logprob: -12.84924030303955

Token 55: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4827783703804016
    2. 'abs' → logprob: -1.8577783107757568
    3. ' []' → logprob: -2.357778310775757
    4. '[' → logprob: -3.107778310775757
    5. ' abs' → logprob: -3.607778310775757
    6. ' [' → logprob: -4.107778549194336
    7. '0' → logprob: -4.482778549194336
    8. '['' → logprob: -5.232778549194336
    9. '["' → logprob: -5.607778549194336
    10. ' K' → logprob: -5.607778549194336

Token 56: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7927066683769226
    2. '   ' → logprob: -1.6677067279815674
    3. '<|end|>' → logprob: -1.7927067279815674
    4. ' for' → logprob: -2.5427067279815674
    5. '    ' → logprob: -3.0427067279815674
    6. ' 
' → logprob: -3.6677067279815674
    7. 'for' → logprob: -4.167706489562988
    8. '<|end|>' → logprob: -5.042706489562988
    9. ':' → logprob: -5.417706489562988
    10. '     
' → logprob: -6.042706489562988

Token 57: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3129526972770691
    2. ' for' → logprob: -1.6879527568817139
    3. 'while' (adapté à ' while') → logprob: -3.437952756881714
    4. 'if' → logprob: -4.062952518463135
    5. ' while' → logprob: -4.812952518463135
    6. ' ' → logprob: -4.937952518463135
    7. 'd' → logprob: -5.437952518463135
    8. 'i' → logprob: -5.562952518463135
    9. ' if' → logprob: -5.812952518463135
    10. 'distance' → logprob: -6.562952518463135

Token 58: ' x' (ID: 1215)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5351747274398804
    2. 'K' → logprob: -1.4101747274398804
    3. ' abs' → logprob: -2.66017484664917
    4. 'abs' → logprob: -3.41017484664917
    5. 'X' → logprob: -4.28517484664917
    6. 'x' → logprob: -4.41017484664917
    7. ' X' → logprob: -4.78517484664917
    8. '(abs' → logprob: -5.03517484664917
    9. ' x' → logprob: -5.16017484664917
    10. ' (' → logprob: -5.41017484664917

Token 59: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3870964050292969
    2. ' !=' → logprob: -1.1370964050292969
    3. ',' → logprob: -9.137096405029297
    4. '+' → logprob: -10.387096405029297
    5. '!' → logprob: -10.637096405029297
    6. ' <' → logprob: -11.262096405029297
    7. '<' → logprob: -11.387096405029297
    8. '<=' → logprob: -11.887096405029297
    9. '!=(' → logprob: -11.887096405029297
    10. ')!=' → logprob: -12.887096405029297

Token 60: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.008637616410851479
    2. ' X' → logprob: -4.758637428283691
    3. ' ' → logprob: -11.258637428283691
    4. '	X' → logprob: -12.758637428283691
    5. 'Y' → logprob: -13.133637428283691
    6. '   ' → logprob: -13.258637428283691
    7. '  ' → logprob: -14.008637428283691
    8. '>X' → logprob: -14.258637428283691
    9. 'x' → logprob: -14.508637428283691
    10. 'K' → logprob: -15.133637428283691

Token 61: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07893297076225281
    2. 'or' → logprob: -2.578933000564575
    3. ' and' → logprob: -11.328932762145996
    4. '   ' → logprob: -11.703932762145996
    5. ' ' → logprob: -11.828932762145996
    6. '	or' → logprob: -11.953932762145996
    7. ':' → logprob: -12.703932762145996
    8. 'and' → logprob: -12.828932762145996
    9. '    ' → logprob: -13.703932762145996
    10. '  ' → logprob: -14.078932762145996

Token 62: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.01817510649561882
    2. 'y' → logprob: -4.01817512512207
    3. '    ' → logprob: -11.51817512512207
    4. '	y' → logprob: -12.64317512512207
    5. '<|end|>' → logprob: -13.01817512512207
    6. ' ' → logprob: -13.01817512512207
    7. ' ' → logprob: -13.14317512512207
    8. ' Y' → logprob: -13.51817512512207
    9. 'Y' → logprob: -13.64317512512207
    10. '   ' → logprob: -13.89317512512207

Token 63: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.026321083307266235
    2. '!=' → logprob: -3.6513211727142334
    3. '<|end|>' → logprob: -11.776321411132812
    4. '!=(' → logprob: -12.026321411132812
    5. '<|end|>' → logprob: -13.276321411132812
    6. ')!=' → logprob: -13.526321411132812
    7. '()!=' → logprob: -13.651321411132812
    8. ' ' → logprob: -14.151321411132812
    9. ']!=' → logprob: -14.651321411132812
    10. ' ' → logprob: -15.026321411132812

Token 64: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.22545677423477173
    2. ' Y' → logprob: -1.600456714630127
    3. ' ' → logprob: -11.350457191467285
    4. '	Y' → logprob: -11.475457191467285
    5. '<|end|>' → logprob: -11.725457191467285
    6. '   ' → logprob: -11.850457191467285
    7. '    ' → logprob: -13.350457191467285
    8. '  ' → logprob: -13.475457191467285
    9. 'y' → logprob: -13.475457191467285
    10. ' y' → logprob: -13.850457191467285

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005954395048320293
    2. ':
' → logprob: -5.130954265594482
    3. ' :' → logprob: -11.75595474243164
    4. ' and' → logprob: -12.00595474243164
    5. '   ' → logprob: -13.00595474243164
    6. ',' → logprob: -13.13095474243164
    7. '):' → logprob: -13.38095474243164
    8. ':

' → logprob: -13.38095474243164
    9. ':
' → logprob: -13.75595474243164
    10. ':**' → logprob: -14.38095474243164

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7469515204429626
    2. ' ' → logprob: -1.6219515800476074
    3. '<|end|>' → logprob: -1.7469515800476074
    4. '    ' → logprob: -2.3719515800476074
    5. '   ' → logprob: -3.2469515800476074
    6. ',' → logprob: -5.246951580047607
    7. '<|end|>' → logprob: -5.246951580047607
    8. ':' → logprob: -6.246951580047607
    9. '        ' → logprob: -6.621951580047607
    10. '  ' → logprob: -7.121951580047607

Token 67: ' a' (ID: 261)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -1.0172157287597656
    2. ' if' → logprob: -1.1422157287597656
    3. 'step' → logprob: -2.2672157287597656
    4. 'd' → logprob: -3.6422157287597656
    5. 'if' → logprob: -3.6422157287597656
    6. 't' → logprob: -3.7672157287597656
    7. ' for' → logprob: -3.8922157287597656
    8. 's' → logprob: -4.017215728759766
    9. '   ' → logprob: -4.142215728759766
    10. '    ' → logprob: -4.392215728759766

Token 68: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018758850172162056
    2. '=' → logprob: -4.768758773803711
    3. 'b' → logprob: -5.643758773803711
    4. 'dx' → logprob: -5.643758773803711
    5. ' ' → logprob: -7.143758773803711
    6. ',' → logprob: -7.393758773803711
    7. ' +=' → logprob: -7.893758773803711
    8. 'dd' → logprob: -8.518758773803711
    9. 'bs' → logprob: -8.768758773803711
    10. ',b' → logprob: -9.143758773803711

Token 69: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.015266970731317997
    2. ' b' → logprob: -4.2652668952941895
    3. '=' → logprob: -7.1402668952941895
    4. ' =' → logprob: -8.515267372131348
    5. ' ' → logprob: -10.890267372131348
    6. '_=' → logprob: -10.890267372131348
    7. '=b' → logprob: -11.390267372131348
    8. 'x' → logprob: -11.640267372131348
    9. '_' → logprob: -11.640267372131348
    10. '	b' → logprob: -12.015267372131348

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003743548411875963
    2. '=' → logprob: -5.628743648529053
    3. ',' → logprob: -9.253743171691895
    4. '<|end|>' → logprob: -10.253743171691895
    5. '<|end|>' → logprob: -12.378743171691895
    6. ' ' → logprob: -12.503743171691895
    7. ')' → logprob: -13.753743171691895
    8. ' =
' → logprob: -14.378743171691895
    9. 's' → logprob: -15.253743171691895
    10. 'for' → logprob: -15.503743171691895

Token 71: ' x' (ID: 1215)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.677202582359314
    2. '0' → logprob: -1.802202582359314
    3. ' (' → logprob: -2.6772027015686035
    4. ' X' → logprob: -2.6772027015686035
    5. '(X' → logprob: -2.8022027015686035
    6. 'abs' → logprob: -3.1772027015686035
    7. ' ' → logprob: -3.8022027015686035
    8. ' abs' → logprob: -4.0522027015686035
    9. '(abs' → logprob: -4.0522027015686035
    10. '1' → logprob: -4.8022027015686035

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0348542146384716
    2. '+' → logprob: -4.159854412078857
    3. ' =' → logprob: -5.284854412078857
    4. '=' → logprob: -5.409854412078857
    5. ' +' → logprob: -6.159854412078857
    6. ',Y' → logprob: -6.659854412078857
    7. '+,' → logprob: -7.034854412078857
    8. ' ,' → logprob: -7.159854412078857
    9. ' -' → logprob: -7.284854412078857
    10. '<|end|>' → logprob: -7.284854412078857

Token 73: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.007641532924026251
    2. ' y' → logprob: -4.882641315460205
    3. '<|end|>' → logprob: -10.507641792297363
    4. 'b' → logprob: -12.257641792297363
    5. '	y' → logprob: -13.632641792297363
    6. '+' → logprob: -14.507641792297363
    7. '(y' → logprob: -15.007641792297363
    8. ' ' → logprob: -15.382641792297363
    9. '+y' → logprob: -15.507641792297363
    10. '<|end|>' → logprob: -15.632641792297363

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27280542254447937
    2. '<|end|>' → logprob: -2.1478054523468018
    3. '+' → logprob: -3.2728054523468018
    4. '   ' → logprob: -3.7728054523468018
    5. '
' → logprob: -3.7728054523468018
    6. ',' → logprob: -4.772805213928223
    7. '<|end|>' → logprob: -4.897805213928223
    8. ' if' → logprob: -4.897805213928223
    9. 'if' → logprob: -5.397805213928223
    10. '        
' → logprob: -6.147805213928223

Token 76: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.27363431453704834
    2. '       ' → logprob: -1.7736343145370483
    3. ' if' → logprob: -2.898634433746338
    4. 'for' → logprob: -4.773634433746338
    5. ' for' → logprob: -6.648634433746338
    6. '
' → logprob: -7.023634433746338
    7. 'd' → logprob: -7.273634433746338
    8. 'dx' → logprob: -7.523634433746338
    9. 'step' → logprob: -7.773634433746338
    10. '        
' → logprob: -8.27363395690918

Token 77: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.9144092202186584
    2. ' (' → logprob: -1.4144091606140137
    3. 'abs' → logprob: -2.5394091606140137
    4. ' K' → logprob: -2.6644091606140137
    5. ' X' → logprob: -3.0394091606140137
    6. ' x' → logprob: -3.4144091606140137
    7. '(abs' → logprob: -3.5394091606140137
    8. '(x' → logprob: -3.9144091606140137
    9. 'x' → logprob: -4.164409160614014
    10. '(X' → logprob: -4.164409160614014

Token 78: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0038828575052320957
    2. '((' → logprob: -6.128882884979248
    3. '(x' → logprob: -7.378882884979248
    4. '(a' → logprob: -7.753882884979248
    5. '(K' → logprob: -8.12888240814209
    6. '(' → logprob: -8.50388240814209
    7. '(Y' → logprob: -9.12888240814209
    8. '(A' → logprob: -11.25388240814209
    9. 'X' → logprob: -12.12888240814209
    10. '(abs' → logprob: -12.25388240814209

Token 79: '-a' (ID: 8575)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5380347967147827
    2. '-' → logprob: -1.0380347967147827
    3. '-x' → logprob: -2.7880349159240723
    4. '-a' → logprob: -8.288034439086914
    5. ')' → logprob: -9.913034439086914
    6. '+' → logprob: -11.038034439086914
    7. 'x' → logprob: -11.038034439086914
    8. '>' → logprob: -11.663034439086914
    9. 'a' → logprob: -11.788034439086914
    10. '-X' → logprob: -12.163034439086914

Token 80: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06146986037492752
    2. '-' → logprob: -3.686469793319702
    3. ' -' → logprob: -4.186470031738281
    4. '+' → logprob: -4.686470031738281
    5. ')>' → logprob: -5.436470031738281
    6. '-x' → logprob: -5.811470031738281
    7. '-X' → logprob: -7.186470031738281
    8. ')>=' → logprob: -7.311470031738281
    9. '+x' → logprob: -7.936470031738281
    10. ' )' → logprob: -8.311470031738281

Token 81: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0003709701995830983
    2. ' abs' → logprob: -8.000370979309082
    3. '<|end|>' → logprob: -10.875370979309082
    4. '(abs' → logprob: -11.125370979309082
    5. '.abs' → logprob: -13.875370979309082
    6. '<|end|>' → logprob: -15.250370979309082
    7. 'y' → logprob: -15.625370979309082
    8. '_abs' → logprob: -16.125370025634766
    9. '1' → logprob: -16.250370025634766
    10. '0' → logprob: -16.500370025634766

Token 82: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.07958095520734787
    2. '(' → logprob: -2.9545810222625732
    3. '<|end|>' → logprob: -3.9545810222625732
    4. '(X' → logprob: -5.329580783843994
    5. '(y' → logprob: -8.829581260681152
    6. '<|end|>' → logprob: -9.829581260681152
    7. 'Y' → logprob: -9.954581260681152
    8. '((' → logprob: -10.204581260681152
    9. '(-' → logprob: -10.454581260681152
    10. ' (' → logprob: -11.704581260681152

Token 83: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.020953362807631493
    2. ' -' → logprob: -4.020953178405762
    3. '-' → logprob: -5.895953178405762
    4. '-a' → logprob: -11.020953178405762
    5. '<|end|>' → logprob: -11.270953178405762
    6. 'b' → logprob: -11.645953178405762
    7. '-б' → logprob: -12.145953178405762
    8. '-ai' → logprob: -14.145953178405762
    9. '-python' → logprob: -14.270953178405762
    10. ' ' → logprob: -14.395953178405762

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05115805193781853
    2. '>' → logprob: -3.6761579513549805
    3. ' >' → logprob: -4.3011579513549805
    4. ')>' → logprob: -5.6761579513549805
    5. ' )' → logprob: -6.1761579513549805
    6. '<=' → logprob: -6.1761579513549805
    7. '==' → logprob: -7.0511579513549805
    8. ' <=' → logprob: -7.0511579513549805
    9. ')<=' → logprob: -7.5511579513549805
    10. '>=' → logprob: -7.8011579513549805

Token 85: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4941294491291046
    2. '>' → logprob: -1.1191294193267822
    3. ' <=' → logprob: -3.6191294193267822
    4. '<=' → logprob: -4.119129657745361
    5. '==' → logprob: -4.869129657745361
    6. '<' → logprob: -5.744129657745361
    7. ' ==' → logprob: -5.994129657745361
    8. '>=' → logprob: -6.119129657745361
    9. ' <' → logprob: -6.244129657745361
    10. ' >=' → logprob: -6.619129657745361

Token 86: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3449403643608093
    2. ' ' → logprob: -1.969940423965454
    3. '1' → logprob: -2.344940423965454
    4. 'K' → logprob: -3.344940423965454
    5. ' K' → logprob: -4.594940185546875
    6. '(' → logprob: -5.844940185546875
    7. 'abs' → logprob: -5.969940185546875
    8. ' abs' → logprob: -7.094940185546875
    9. ' (' → logprob: -7.219940185546875
    10. '  ' → logprob: -7.469940185546875

Token 87: '2' (ID: 17)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.10927579551935196
    2. '1' → logprob: -3.1092758178710938
    3. '2' → logprob: -3.1092758178710938
    4. ' K' → logprob: -4.984275817871094
    5. ' ' → logprob: -6.109275817871094
    6. 'abs' → logprob: -6.234275817871094
    7. '(' → logprob: -6.484275817871094
    8. 'k' → logprob: -8.359275817871094
    9. '(K' → logprob: -8.359275817871094
    10. '  ' → logprob: -8.734275817871094

Token 88: '*K' (ID: 167586)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17319458723068237
    2. '**' → logprob: -2.548194646835327
    3. ' and' → logprob: -3.423194646835327
    4. '*K' → logprob: -3.673194646835327
    5. '*' → logprob: -4.798194408416748
    6. ' *' → logprob: -5.048194408416748
    7. 'and' → logprob: -5.173194408416748
    8. ':
' → logprob: -7.173194408416748
    9. ' **' → logprob: -7.923194408416748
    10. '*k' → logprob: -8.048194885253906

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003258161712437868
    2. ' :' → logprob: -6.378258228302002
    3. ' and' → logprob: -7.003258228302002
    4. 'and' → logprob: -8.503257751464844
    5. ':
' → logprob: -8.503257751464844
    6. '-' → logprob: -9.128257751464844
    7. '+' → logprob: -10.378257751464844
    8. '   ' → logprob: -10.753257751464844
    9. '+:' → logprob: -11.253257751464844
    10. '):' → logprob: -11.628257751464844

Token 90: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04656713083386421
    2. ',' → logprob: -4.921566963195801
    3. '<|end|>' → logprob: -5.171566963195801
    4. ':' → logprob: -5.296566963195801
    5. '        
' → logprob: -5.421566963195801
    6. ' and' → logprob: -5.421566963195801
    7. ' x' → logprob: -5.796566963195801
    8. ' if' → logprob: -5.921566963195801
    9. 'x' → logprob: -6.171566963195801
    10. '   ' → logprob: -6.171566963195801

Token 91: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28741270303726196
    2. 'if' (adapté à ' if') → logprob: -2.287412643432617
    3. '       ' → logprob: -2.412412643432617
    4. ' x' → logprob: -4.037412643432617
    5. 'x' → logprob: -4.412412643432617
    6. 'dx' → logprob: -5.162412643432617
    7. '        ' → logprob: -5.287412643432617
    8. '   ' → logprob: -5.787412643432617
    9. ' dx' → logprob: -5.787412643432617
    10. ' step' → logprob: -6.162412643432617

Token 92: ' abs' (ID: 8443)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -1.1801743507385254
    2. ' abs' → logprob: -1.1801743507385254
    3. 'X' → logprob: -1.5551743507385254
    4. 'abs' → logprob: -2.9301743507385254
    5. ' x' → logprob: -3.3051743507385254
    6. 'x' → logprob: -3.5551743507385254
    7. 'a' → logprob: -3.8051743507385254
    8. ' a' → logprob: -4.430174350738525
    9. ' ' → logprob: -5.180174350738525
    10. ' Y' → logprob: -5.680174350738525

Token 93: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.006032008212059736
    2. '(x' → logprob: -5.5060319900512695
    3. '(' → logprob: -7.3810319900512695
    4. '(a' → logprob: -7.5060319900512695
    5. '((' → logprob: -8.00603199005127
    6. '(Y' → logprob: -8.25603199005127
    7. '(K' → logprob: -9.38103199005127
    8. 'X' → logprob: -10.25603199005127
    9. 'a' → logprob: -10.75603199005127
    10. '(A' → logprob: -12.25603199005127

Token 94: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.17676658928394318
    2. ' -' → logprob: -2.5517666339874268
    3. '-' → logprob: -2.8017666339874268
    4. '-x' → logprob: -3.8017666339874268
    5. 'a' → logprob: -7.426766395568848
    6. '-(' → logprob: -9.301766395568848
    7. '-b' → logprob: -9.801766395568848
    8. '-а' → logprob: -10.176766395568848
    9. '-c' → logprob: -10.551766395568848
    10. '-X' → logprob: -10.551766395568848

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0320647656917572
    2. ')>=' → logprob: -4.407064914703369
    3. ')>' → logprob: -4.532064914703369
    4. ')+' → logprob: -5.532064914703369
    5. '+' → logprob: -6.532064914703369
    6. '-' → logprob: -7.282064914703369
    7. ')-' → logprob: -7.282064914703369
    8. ' )' → logprob: -7.657064914703369
    9. '-x' → logprob: -8.657064437866211
    10. ' -' → logprob: -8.657064437866211

Token 96: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5797885060310364
    2. ' >=' → logprob: -0.8297885060310364
    3. '>' → logprob: -5.954788684844971
    4. ' >' → logprob: -7.079788684844971
    5. '+' → logprob: -9.079788208007812
    6. '<' → logprob: -9.954788208007812
    7. ' ' → logprob: -10.329788208007812
    8. '>K' → logprob: -10.454788208007812
    9. ' <' → logprob: -10.829788208007812
    10. '```' → logprob: -10.829788208007812

Token 97: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.11776620894670486
    2. ' K' → logprob: -2.4927661418914795
    3. '2' → logprob: -4.117766380310059
    4. 'abs' → logprob: -5.117766380310059
    5. ' ' → logprob: -5.617766380310059
    6. ' abs' → logprob: -6.117766380310059
    7. '1' → logprob: -8.617766380310059
    8. '  ' → logprob: -10.430266380310059
    9. 'k' → logprob: -10.867766380310059
    10. '   ' → logprob: -11.555266380310059

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43910154700279236
    2. ':
' → logprob: -1.0641015768051147
    3. ' and' → logprob: -4.689101696014404
    4. 'and' → logprob: -7.314101696014404
    5. ' :' → logprob: -8.814101219177246
    6. '       ' → logprob: -8.939101219177246
    7. ' :
' → logprob: -9.564101219177246
    8. ':

' → logprob: -10.064101219177246
    9. ':
' → logprob: -10.689101219177246
    10. '           ' → logprob: -10.939101219177246

Token 99: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' r' (ID: 428)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43520593643188477
    2. 'if' → logprob: -1.6852059364318848
    3. 'x' → logprob: -2.8102059364318848
    4. ' x' → logprob: -2.8102059364318848
    5. '           ' → logprob: -3.4352059364318848
    6. 'dx' → logprob: -5.560205936431885
    7. '       ' → logprob: -6.185205936431885
    8. '	       ' → logprob: -6.560205936431885
    9. '               ' → logprob: -7.060205936431885
    10. 's' → logprob: -7.060205936431885

Token 101: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1968725621700287
    2. '=' → logprob: -2.4468724727630615
    3. ' +=' → logprob: -3.6968724727630615
    4. 'x' → logprob: -4.196872711181641
    5. ' x' → logprob: -4.321872711181641
    6. ' ' → logprob: -4.571872711181641
    7. 'eturn' → logprob: -4.696872711181641
    8. 'e' → logprob: -5.321872711181641
    9. 'ight' → logprob: -5.696872711181641
    10. '+=' → logprob: -6.196872711181641

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05688201263546944
    2. '=' → logprob: -2.931881904602051
    3. ' +=' → logprob: -6.806881904602051
    4. ',' → logprob: -7.556881904602051
    5. '+=' → logprob: -8.43188190460205
    6. ' ' → logprob: -9.80688190460205
    7. 'ight' → logprob: -10.55688190460205
    8. 'x' → logprob: -11.18188190460205
    9. '   ' → logprob: -12.05688190460205
    10. '+' → logprob: -12.05688190460205

Token 103: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.42171260714530945
    2. ' K' → logprob: -1.7967126369476318
    3. 'a' → logprob: -2.796712636947632
    4. 'x' → logprob: -2.796712636947632
    5. ' x' → logprob: -4.046712398529053
    6. ' a' → logprob: -4.671712398529053
    7. 'X' → logprob: -4.796712398529053
    8. ' ' → logprob: -5.171712398529053
    9. ' (' → logprob: -5.796712398529053
    10. '1' → logprob: -6.046712398529053

Token 104: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12293171882629395
    2. 'if' → logprob: -2.372931718826294
    3. '<|end|>' → logprob: -4.372931480407715
    4. ',' → logprob: -5.497931480407715
    5. '*' → logprob: -5.747931480407715
    6. '               ' → logprob: -7.622931480407715
    7. ' *' → logprob: -7.747931480407715
    8. ';if' → logprob: -7.872931480407715
    9. '           ' → logprob: -8.247931480407715
    10. '<|end|>' → logprob: -8.372931480407715

Token 105: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.35319218039512634
    2. ' X' → logprob: -1.2281922101974487
    3. '(X' → logprob: -5.978192329406738
    4. ' ' → logprob: -7.103192329406738
    5. ' (' → logprob: -7.353192329406738
    6. 'x' → logprob: -8.478192329406738
    7. 'a' → logprob: -9.228192329406738
    8. ' x' → logprob: -9.353192329406738
    9. ' abs' → logprob: -9.353192329406738
    10. '  ' → logprob: -9.603192329406738

Token 106: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5799957513809204
    2. '>' → logprob: -1.3299957513809204
    3. '>a' → logprob: -2.079995632171631
    4. '-' → logprob: -3.579995632171631
    5. '>x' → logprob: -4.704995632171631
    6. ' -' → logprob: -4.954995632171631
    7. '-a' → logprob: -5.204995632171631
    8. '>=' → logprob: -7.954995632171631
    9. 'a' → logprob: -8.079996109008789
    10. '-x' → logprob: -9.079996109008789

Token 107: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00893020536750555
    2. ' a' → logprob: -4.758930206298828
    3. 'x' → logprob: -8.133930206298828
    4. ' x' → logprob: -11.383930206298828
    5. '0' → logprob: -12.133930206298828
    6. ' ' → logprob: -12.383930206298828
    7. '   ' → logprob: -14.258930206298828
    8. '	a' → logprob: -15.633930206298828
    9. '  ' → logprob: -15.758930206298828
    10. '    ' → logprob: -16.008930206298828

Token 108: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.01816187985241413
    2. 'else' → logprob: -4.018161773681641
    3. ' ' → logprob: -11.51816177368164
    4. '	else' → logprob: -14.01816177368164
    5. '  ' → logprob: -15.51816177368164
    6. '        ' → logprob: -15.64316177368164
    7. '   ' → logprob: -15.64316177368164
    8. '    ' → logprob: -16.01816177368164
    9. '<|end|>' → logprob: -16.39316177368164
    10. '-' → logprob: -16.51816177368164

Token 109: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10122060775756836
    2. '-K' → logprob: -2.3512206077575684
    3. '-' → logprob: -7.101220607757568
    4. '-x' → logprob: -9.351221084594727
    5. '-X' → logprob: -9.851221084594727
    6. '-k' → logprob: -10.726221084594727
    7. '-a' → logprob: -11.851221084594727
    8. '-Q' → logprob: -12.351221084594727
    9. ' ' → logprob: -12.601221084594727
    10. '   ' → logprob: -12.851221084594727

Token 110: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.7120533811976202e-05
    2. ' K' → logprob: -11.500017166137695
    3. '1' → logprob: -11.875017166137695
    4. 'k' → logprob: -19.125017166137695
    5. ' ' → logprob: -19.375017166137695
    6. '<|end|>' → logprob: -19.750017166137695
    7. '	K' → logprob: -20.000017166137695
    8. '>K' → logprob: -20.500017166137695
    9. '_K' → logprob: -21.000017166137695
    10. '   ' → logprob: -21.375017166137695

Token 111: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3121384084224701
    2. 'else' (adapté à ' else') → logprob: -1.4371384382247925
    3. '           ' → logprob: -3.687138319015503
    4. '<|end|>' → logprob: -5.937138557434082
    5. '       ' → logprob: -6.187138557434082
    6. '<|end|>' → logprob: -8.187138557434082
    7. '	else' → logprob: -9.312138557434082
    8. ' elif' → logprob: -9.937138557434082
    9. ',' → logprob: -10.062138557434082
    10. 'elif' → logprob: -10.062138557434082

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2675800621509552
    2. ':
' → logprob: -1.5175800323486328
    3. '           ' → logprob: -4.892580032348633
    4. '               ' → logprob: -5.392580032348633
    5. ' if' → logprob: -7.142580032348633
    6. ' r' → logprob: -7.392580032348633
    7. 'r' → logprob: -7.767580032348633
    8. ' :
' → logprob: -7.767580032348633
    9. ',' → logprob: -8.392580032348633
    10. ':

' → logprob: -8.642580032348633

Token 115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29184359312057495
    2. ' r' → logprob: -1.5418436527252197
    3. 'r' → logprob: -3.6668436527252197
    4. '0' → logprob: -5.666843414306641
    5. '           ' → logprob: -5.666843414306641
    6. ' ' → logprob: -6.166843414306641
    7. '              ' → logprob: -6.916843414306641
    8. ':' → logprob: -7.291843414306641
    9. '                ' → logprob: -7.666843414306641
    10. '       ' → logprob: -8.29184341430664

Token 116: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.007762669585645199
    2. ' r' → logprob: -4.882762432098389
    3. 'if' → logprob: -9.507762908935547
    4. '               ' → logprob: -10.507762908935547
    5. ' if' → logprob: -11.132762908935547
    6. '           ' → logprob: -11.257762908935547
    7. 's' → logprob: -12.007762908935547
    8. 'x' → logprob: -12.632762908935547
    9. 'y' → logprob: -12.882762908935547
    10. '                   ' → logprob: -13.007762908935547

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027075769379734993
    2. ' =' → logprob: -4.27707576751709
    3. '2' → logprob: -4.40207576751709
    4. '=' → logprob: -7.65207576751709
    5. ' ' → logprob: -9.65207576751709
    6. 'r' → logprob: -11.90207576751709
    7. 'y' → logprob: -12.02707576751709
    8. ',' → logprob: -12.52707576751709
    9. 'x' → logprob: -12.52707576751709
    10. '=(' → logprob: -13.02707576751709

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026314815506339073
    2. '=' → logprob: -3.6513147354125977
    3. ' ' → logprob: -11.401314735412598
    4. ',' → logprob: -13.276314735412598
    5. '   ' → logprob: -15.026314735412598
    6. ' =
' → logprob: -15.651314735412598
    7. 's' → logprob: -15.651314735412598
    8. '    ' → logprob: -15.901314735412598
    9. '=r' → logprob: -15.901314735412598
    10. 'r' → logprob: -16.151315689086914

Token 119: ' abs' (ID: 8443)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.4450094997882843
    2. ' X' → logprob: -2.195009469985962
    3. '0' → logprob: -2.445009469985962
    4. '(X' → logprob: -2.945009469985962
    5. 'Y' → logprob: -3.195009469985962
    6. ' (' → logprob: -4.070009708404541
    7. ' ' → logprob: -4.195009708404541
    8. 'K' → logprob: -4.445009708404541
    9. ' Y' → logprob: -4.570009708404541
    10. '1' → logprob: -5.945009708404541

Token 120: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0001017551330733113
    2. '(x' → logprob: -9.875102043151855
    3. 'X' → logprob: -10.125102043151855
    4. '(' → logprob: -12.875102043151855
    5. '(Y' → logprob: -13.250102043151855
    6. 'a' → logprob: -13.250102043151855
    7. '(K' → logprob: -13.375102043151855
    8. '(a' → logprob: -13.625102043151855
    9. '((' → logprob: -14.500102043151855
    10. 'r' → logprob: -15.750102043151855

Token 121: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.051199495792388916
    2. ' -' → logprob: -3.176199436187744
    3. 'a' → logprob: -5.426199436187744
    4. '-' → logprob: -6.051199436187744
    5. '(a' → logprob: -6.676199436187744
    6. ' a' → logprob: -9.801199913024902
    7. '-r' → logprob: -11.176199913024902
    8. '-b' → logprob: -11.301199913024902
    9. '-k' → logprob: -11.551199913024902
    10. '()-' → logprob: -11.676199913024902

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008400625549256802
    2. ')
' → logprob: -4.8834004402160645
    3. ' if' → logprob: -8.008400917053223
    4. '<|end|>' → logprob: -8.133400917053223
    5. ' )' → logprob: -9.633400917053223
    6. ')*' → logprob: -10.133400917053223
    7. 'if' → logprob: -10.383400917053223
    8. ')#' → logprob: -12.008400917053223
    9. ')

' → logprob: -12.258400917053223
    10. 'else' → logprob: -12.758400917053223

Token 123: ' *' (ID: 425)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09562341868877411
    2. 'if' → logprob: -2.47062349319458
    3. '<|end|>' → logprob: -6.22062349319458
    4. ' *' → logprob: -6.34562349319458
    5. '           ' → logprob: -6.59562349319458
    6. '   ' → logprob: -7.84562349319458
    7. '       ' → logprob: -7.84562349319458
    8. '*' → logprob: -8.470623016357422
    9. '               ' → logprob: -8.970623016357422
    10. ' -' → logprob: -9.970623016357422

Token 124: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10847458988428116
    2. '(' → logprob: -3.3584744930267334
    3. '-' → logprob: -3.7334744930267334
    4. ' ' → logprob: -4.3584747314453125
    5. '(-' → logprob: -4.6084747314453125
    6. ' (' → logprob: -4.7334747314453125
    7. '(K' → logprob: -5.2334747314453125
    8. '((' → logprob: -5.4834747314453125
    9. 'K' → logprob: -6.6084747314453125
    10. 'sign' → logprob: -7.7334747314453125

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.052290163934230804
    2. '-' → logprob: -3.427290201187134
    3. 'K' → logprob: -4.427289962768555
    4. ' ' → logprob: -5.427289962768555
    5. '(K' → logprob: -6.927289962768555
    6. '(-' → logprob: -8.052289962768555
    7. '(' → logprob: -8.177289962768555
    8. ' K' → logprob: -8.677289962768555
    9. ' (' → logprob: -8.802289962768555
    10. ' -' → logprob: -9.552289962768555

Token 126: ' if' (ID: 538)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0423196405172348
    2. ' //' → logprob: -3.2923195362091064
    3. ')' → logprob: -5.9173197746276855
    4. ')//' → logprob: -7.5423197746276855
    5. '/' → logprob: -8.292319297790527
    6. '/k' → logprob: -8.667319297790527
    7. '/K' → logprob: -8.792319297790527
    8. '-' → logprob: -9.292319297790527
    9. ' ' → logprob: -9.542319297790527
    10. '   ' → logprob: -9.917319297790527

Token 127: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6986552476882935
    2. '(X' → logprob: -0.9486552476882935
    3. ' X' → logprob: -2.448655128479004
    4. ' (' → logprob: -3.573655128479004
    5. ' ' → logprob: -8.323655128479004
    6. '((' → logprob: -8.448655128479004
    7. '(x' → logprob: -8.823655128479004
    8. '(' → logprob: -8.948655128479004
    9. '(a' → logprob: -9.698655128479004
    10. 'a' → logprob: -9.698655128479004

Token 128: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4414639174938202
    2. ' >' → logprob: -1.0664639472961426
    3. '>a' → logprob: -5.066463947296143
    4. '>b' → logprob: -5.191463947296143
    5. '>x' → logprob: -7.191463947296143
    6. '>X' → logprob: -11.191463470458984
    7. '>=' → logprob: -11.316463470458984
    8. ' ' → logprob: -11.816463470458984
    9. '>K' → logprob: -11.816463470458984
    10. ' >=' → logprob: -12.566463470458984

Token 129: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007610532455146313
    2. ' a' → logprob: -4.882610321044922
    3. '(a' → logprob: -13.257610321044922
    4. ' ' → logprob: -14.007610321044922
    5. '   ' → logprob: -14.757610321044922
    6. '  ' → logprob: -15.507610321044922
    7. '	a' → logprob: -15.632610321044922
    8. '     ' → logprob: -16.132610321044922
    9. ' (' → logprob: -16.132610321044922
    10. '    ' → logprob: -16.257610321044922

Token 130: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06197518855333328
    2. 'else' → logprob: -2.8119752407073975
    3. ' ' → logprob: -12.936975479125977
    4. '         ' → logprob: -14.061975479125977
    5. '        ' → logprob: -14.186975479125977
    6. '           ' → logprob: -14.311975479125977
    7. '	else' → logprob: -14.311975479125977
    8. '   ' → logprob: -14.561975479125977
    9. '     ' → logprob: -15.311975479125977
    10. '    ' → logprob: -15.311975479125977

Token 131: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004307884373702109
    2. ' -' → logprob: -7.750430583953857
    3. '1' → logprob: -17.000431060791016
    4. ')' → logprob: -17.625431060791016
    5. '   ' → logprob: -18.125431060791016
    6. ' ' → logprob: -18.125431060791016
    7. '0' → logprob: -18.375431060791016
    8. '(-' → logprob: -18.625431060791016
    9. ')-' → logprob: -19.125431060791016
    10. '−' → logprob: -19.250431060791016

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '-' → logprob: -16.000003814697266
    4. ')' → logprob: -17.625003814697266
    5. '
' → logprob: -18.375003814697266
    6. ' -' → logprob: -18.750003814697266
    7. '```' → logprob: -19.250003814697266
    8. '   ' → logprob: -19.625003814697266
    9. '１' → logprob: -20.312503814697266
    10. '

' → logprob: -20.375003814697266

Token 133: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.39125022292137146
    2. ')' → logprob: -1.1412502527236938
    3. '       ' → logprob: -5.516250133514404
    4. '           ' → logprob: -8.391250610351562
    5. ')
' → logprob: -9.266250610351562
    6. ')

' → logprob: -12.016250610351562
    7. ' )
' → logprob: -12.391250610351562
    8. '
' → logprob: -12.891250610351562
    9. ')\' → logprob: -13.141250610351562
    10. '```' → logprob: -13.391250610351562

Token 134: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16079533100128174
    2. '
' → logprob: -2.285795211791992
    3. '           ' → logprob: -3.285795211791992
    4. ',' → logprob: -6.035795211791992
    5. '        
' → logprob: -6.160795211791992
    6. '<|end|>' → logprob: -6.285795211791992
    7. ',
' → logprob: -7.535795211791992
    8. ')
' → logprob: -7.910795211791992
    9. '            
' → logprob: -7.910795211791992
    10. '<|end|>' → logprob: -8.035795211791992

Token 135: ' r' (ID: 428)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3315748870372772
    2. ' r' → logprob: -2.3315749168395996
    3. ' if' → logprob: -2.7065749168395996
    4. 'r' (adapté à ' r') → logprob: -3.3315749168395996
    5. ' x' → logprob: -3.3315749168395996
    6. '           ' → logprob: -3.8315749168395996
    7. 'x' → logprob: -4.8315749168396
    8. ' K' → logprob: -5.2065749168396
    9. ',' → logprob: -6.0815749168396
    10. ' s' → logprob: -6.8315749168396

Token 136: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25216108560562134
    2. '1' → logprob: -1.5021610260009766
    3. '=r' → logprob: -10.002161026000977
    4. '=' → logprob: -10.252161026000977
    5. 'r' → logprob: -10.252161026000977
    6. 'es' → logprob: -11.127161026000977
    7. ' =' → logprob: -11.127161026000977
    8. 'em' → logprob: -11.252161026000977
    9. ' +=' → logprob: -11.502161026000977
    10. 's' → logprob: -11.877161026000977

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994032114744186
    2. '=' → logprob: -2.6949403285980225
    3. ',' → logprob: -13.444940567016602
    4. ' ' → logprob: -13.569940567016602
    5. '   ' → logprob: -14.819940567016602
    6. '	' → logprob: -15.194940567016602
    7. ' =
' → logprob: -16.3199405670166
    8. ')' → logprob: -16.4449405670166
    9. '＝' → logprob: -16.4449405670166
    10. '    ' → logprob: -16.5699405670166

Token 138: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020148009061813354
    2. 'K' → logprob: -4.020147800445557
    3. ' ' → logprob: -6.770147800445557
    4. 'abs' → logprob: -7.895147800445557
    5. ' K' → logprob: -8.895148277282715
    6. '(K' → logprob: -9.270148277282715
    7. 'y' → logprob: -9.770148277282715
    8. '(' → logprob: -9.770148277282715
    9. '   ' → logprob: -10.645148277282715
    10. 'max' → logprob: -10.645148277282715

Token 139: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.004579530563205481
    2. '0' → logprob: -6.254579544067383
    3. ' K' → logprob: -6.379579544067383
    4. 'abs' → logprob: -7.754579544067383
    5. '   ' → logprob: -8.879579544067383
    6. 'Y' → logprob: -9.129579544067383
    7. '           ' → logprob: -9.754579544067383
    8. '       ' → logprob: -9.754579544067383
    9. ' ' → logprob: -10.254579544067383
    10. '    ' → logprob: -11.004579544067383

Token 140: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20306046307086945
    2. ' -' → logprob: -1.703060507774353
    3. '-r' → logprob: -6.453060626983643
    4. ')' → logprob: -10.703060150146484
    5. ' abs' → logprob: -10.703060150146484
    6. 'abs' → logprob: -12.078060150146484
    7. '-s' → logprob: -12.078060150146484
    8. '   ' → logprob: -12.828060150146484
    9. '
' → logprob: -12.953060150146484
    10. '-
' → logprob: -13.453060150146484

Token 141: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.023406192660331726
    2. 'r' → logprob: -3.7734062671661377
    3. ' abs' → logprob: -8.773406028747559
    4. '(abs' → logprob: -12.273406028747559
    5. ' r' → logprob: -14.273406028747559
    6. '   ' → logprob: -15.523406028747559
    7. 'a' → logprob: -16.648406982421875
    8. '
' → logprob: -16.648406982421875
    9. '```' → logprob: -16.648406982421875
    10. 'len' → logprob: -16.898406982421875

Token 142: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.003217164659872651
    2. 'r' → logprob: -5.7532172203063965
    3. 'X' → logprob: -10.503216743469238
    4. ')' → logprob: -13.003216743469238
    5. '(X' → logprob: -13.128216743469238
    6. '(' → logprob: -13.253216743469238
    7. 'a' → logprob: -13.628216743469238
    8. ' (' → logprob: -14.128216743469238
    9. '(a' → logprob: -14.253216743469238
    10. '[r' → logprob: -14.503216743469238

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. 'X' → logprob: -12.125014305114746
    3. 'r' → logprob: -12.625014305114746
    4. 'a' → logprob: -12.875014305114746
    5. ')' → logprob: -14.625014305114746
    6. 'x' → logprob: -14.750014305114746
    7. 's' → logprob: -15.000014305114746
    8. '(' → logprob: -15.625014305114746
    9. '2' → logprob: -15.687514305114746
    10. '
' → logprob: -15.750014305114746

Token 144: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.025687361136078835
    2. ')' → logprob: -4.025687217712402
    3. '))*' → logprob: -4.900687217712402
    4. ')*' → logprob: -9.775687217712402
    5. ' ))' → logprob: -12.525687217712402
    6. ')))' → logprob: -13.150687217712402
    7. '))
' → logprob: -13.400687217712402
    8. ')
' → logprob: -14.025687217712402
    9. ' ' → logprob: -14.150687217712402
    10. ' )' → logprob: -14.400687217712402

Token 145: ' *' (ID: 425)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25588300824165344
    2. ' *' → logprob: -1.630882978439331
    3. '<|end|>' → logprob: -3.755882978439331
    4. 'if' → logprob: -5.75588321685791
    5. '*' → logprob: -6.38088321685791
    6. '*(' → logprob: -6.50588321685791
    7. ' ' → logprob: -9.38088321685791
    8. '
' → logprob: -9.88088321685791
    9. '*(-' → logprob: -10.00588321685791
    10. ',' → logprob: -10.63088321685791

Token 146: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01466405764222145
    2. ' (' → logprob: -4.264664173126221
    3. '(-' → logprob: -7.639664173126221
    4. '((' → logprob: -11.264663696289062
    5. ' (-' → logprob: -12.639663696289062
    6. '((-' → logprob: -13.514663696289062
    7. '(sign' → logprob: -14.639663696289062
    8. ' ((' → logprob: -14.639663696289062
    9. '(
' → logprob: -15.264663696289062
    10. '{' → logprob: -15.889663696289062

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46064919233322144
    2. '(' → logprob: -1.0856492519378662
    3. ' ' → logprob: -3.835649251937866
    4. ' (' → logprob: -5.210649013519287
    5. '-' → logprob: -5.710649013519287
    6. '(-' → logprob: -7.335649013519287
    7. '   ' → logprob: -8.710649490356445
    8. ' -' → logprob: -8.835649490356445
    9. '
' → logprob: -10.835649490356445
    10. '  ' → logprob: -11.085649490356445

Token 148: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023248272016644478
    2. 'if' → logprob: -3.7732481956481934
    3. '	if' → logprob: -13.773248672485352
    4. ' ' → logprob: -14.523248672485352
    5. '   ' → logprob: -14.523248672485352
    6. ')' → logprob: -14.898248672485352
    7. '  ' → logprob: -16.64824867248535
    8. '<|end|>' → logprob: -16.89824867248535
    9. '```' → logprob: -16.89824867248535
    10. '*' → logprob: -17.14824867248535

Token 149: ' Y' (ID: 865)
  Prédit: '(Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.415966659784317
    2. 'Y' → logprob: -1.7909666299819946
    3. ' (' → logprob: -2.665966749191284
    4. ' Y' → logprob: -2.790966749191284
    5. '1' → logprob: -3.790966749191284
    6. '(' → logprob: -4.040966510772705
    7. ' ' → logprob: -6.290966510772705
    8. '((' → logprob: -8.915966987609863
    9. '(y' → logprob: -9.040966987609863
    10. '   ' → logprob: -9.665966987609863

Token 150: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17983168363571167
    2. '>' → logprob: -1.8048317432403564
    3. '-' → logprob: -10.429831504821777
    4. ' >=' → logprob: -10.929831504821777
    5. ' -' → logprob: -11.054831504821777
    6. '>=' → logprob: -11.929831504821777
    7. ' <' → logprob: -12.679831504821777
    8. '>b' → logprob: -13.054831504821777
    9. ' ' → logprob: -13.179831504821777
    10. 'y' → logprob: -13.554831504821777

Token 151: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14277271926403046
    2. ' b' → logprob: -2.017772674560547
    3. 'y' → logprob: -9.892772674560547
    4. ' y' → logprob: -10.017772674560547
    5. ' ' → logprob: -13.517772674560547
    6. 'Y' → logprob: -15.517772674560547
    7. 'a' → logprob: -15.517772674560547
    8. '_b' → logprob: -16.017772674560547
    9. '   ' → logprob: -16.017772674560547
    10. 'B' → logprob: -16.142772674560547

Token 152: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6931581497192383
    2. 'else' → logprob: -0.6931581497192383
    3. ' ' → logprob: -11.943158149719238
    4. '   ' → logprob: -13.068158149719238
    5. '  ' → logprob: -13.943158149719238
    6. '	else' → logprob: -14.568158149719238
    7. '    ' → logprob: -14.568158149719238
    8. '-' → logprob: -16.193157196044922
    9. '     ' → logprob: -16.193157196044922
    10. 'e' → logprob: -16.568157196044922

Token 153: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03983427956700325
    2. '1' → logprob: -3.5398342609405518
    3. ' -' → logprob: -4.664834499359131
    4. ' ' → logprob: -7.414834499359131
    5. '+' → logprob: -11.914834022521973
    6. ')' → logprob: -13.664834022521973
    7. '(-' → logprob: -14.914834022521973
    8. '(' → logprob: -15.164834022521973
    9. '−' → logprob: -15.164834022521973
    10. '```' → logprob: -15.414834022521973

Token 154: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.9054008084349334e-05
    2. ' -' → logprob: -10.500039100646973
    3. '1' → logprob: -11.375039100646973
    4. ')' → logprob: -19.125038146972656
    5. ' ' → logprob: -19.500038146972656
    6. '(-' → logprob: -19.875038146972656
    7. '```' → logprob: -20.000038146972656
    8. '
' → logprob: -20.500038146972656
    9. '−' → logprob: -20.500038146972656
    10. '   ' → logprob: -21.000038146972656

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008687848225235939
    2. ')
' → logprob: -4.758687973022461
    3. '       ' → logprob: -9.758687973022461
    4. ')
' → logprob: -11.883687973022461
    5. ' )' → logprob: -12.008687973022461
    6. ')

' → logprob: -13.758687973022461
    7. ' )
' → logprob: -15.258687973022461
    8. '<|end|>' → logprob: -15.258687973022461
    9. '   ' → logprob: -15.383687973022461
    10. '           ' → logprob: -15.883687973022461

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011433282867074013
    2. '<|end|>' → logprob: -5.011433124542236
    3. '
' → logprob: -6.011433124542236
    4. ')' → logprob: -7.511433124542236
    5. '\n' → logprob: -7.511433124542236
    6. '	' → logprob: -8.136433601379395
    7. '<|end|>' → logprob: -8.761433601379395
    8. ',' → logprob: -8.761433601379395
    9. '   ' → logprob: -9.261433601379395
    10. '        
' → logprob: -9.386433601379395

Token 157: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16618600487709045
    2. '
' → logprob: -2.6661860942840576
    3. '<|end|>' → logprob: -3.2911860942840576
    4. ' else' → logprob: -4.7911858558654785
    5. ',' → logprob: -5.0411858558654785
    6. ')' → logprob: -5.1661858558654785
    7. ':' → logprob: -5.4161858558654785
    8. '\n' → logprob: -5.5411858558654785
    9. ':
' → logprob: -5.5411858558654785
    10. ' elif' → logprob: -5.6661858558654785

Token 158: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.45029202103614807
    2. ' abs' → logprob: -1.0752919912338257
    3. '(abs' → logprob: -5.200292110443115
    4. ' (' → logprob: -5.700292110443115
    5. 'X' → logprob: -6.200292110443115
    6. 'x' → logprob: -6.200292110443115
    7. ' X' → logprob: -6.450292110443115
    8. ' K' → logprob: -6.450292110443115
    9. 'K' → logprob: -6.575292110443115
    10. ' x' → logprob: -6.950292110443115

Token 159: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.00031627772841602564
    2. '(Y' → logprob: -8.250316619873047
    3. '(x' → logprob: -10.750316619873047
    4. '((' → logprob: -11.000316619873047
    5. '(' → logprob: -11.375316619873047
    6. '(K' → logprob: -12.750316619873047
    7. 'X' → logprob: -13.125316619873047
    8. '(R' → logprob: -16.375316619873047
    9. '(N' → logprob: -16.750316619873047
    10. '<|end|>' → logprob: -16.875316619873047

Token 160: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.013899032957851887
    2. 'a' → logprob: -5.013898849487305
    3. ' -' → logprob: -5.138898849487305
    4. '-' → logprob: -7.138898849487305
    5. '-x' → logprob: -7.638898849487305
    6. '-(' → logprob: -12.013898849487305
    7. '-а' → logprob: -12.888898849487305
    8. '-b' → logprob: -13.388898849487305
    9. 'x' → logprob: -13.388898849487305
    10. ' a' → logprob: -13.513898849487305

Token 161: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.1814984828233719
    2. ')' → logprob: -1.8064985275268555
    3. '-' → logprob: -7.0564985275268555
    4. ')-' → logprob: -8.181498527526855
    5. ' -' → logprob: -8.931498527526855
    6. '+' → logprob: -8.931498527526855
    7. ')>' → logprob: -9.181498527526855
    8. ')+(' → logprob: -9.181498527526855
    9. ')==' → logprob: -10.556498527526855
    10. ')>=' → logprob: -10.681498527526855

Token 162: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.012993743643164635
    2. ' abs' → logprob: -4.387993812561035
    3. '(abs' → logprob: -8.137993812561035
    4. 'K' → logprob: -9.262993812561035
    5. '2' → logprob: -9.762993812561035
    6. '(K' → logprob: -11.512993812561035
    7. '1' → logprob: -11.637993812561035
    8. ' ' → logprob: -12.012993812561035
    9. ' K' → logprob: -12.262993812561035
    10. ' (' → logprob: -12.262993812561035

Token 163: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.5962432622909546
    2. '(r' → logprob: -1.0962432622909546
    3. '(K' → logprob: -2.721243381500244
    4. '(b' → logprob: -3.471243381500244
    5. '(y' → logprob: -4.596243381500244
    6. 'b' → logprob: -5.846243381500244
    7. 'r' → logprob: -5.846243381500244
    8. '(x' → logprob: -7.221243381500244
    9. '(X' → logprob: -7.846243381500244
    10. 'Y' → logprob: -8.096242904663086

Token 164: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.010458849370479584
    2. ' -' → logprob: -4.760458946228027
    3. ')' → logprob: -7.010458946228027
    4. 'b' → logprob: -8.010458946228027
    5. '-a' → logprob: -8.385458946228027
    6. '-' → logprob: -8.635458946228027
    7. ')>' → logprob: -10.010458946228027
    8. '[' → logprob: -10.635458946228027
    9. '   ' → logprob: -10.760458946228027
    10. '```' → logprob: -10.885458946228027

Token 165: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026273811236023903
    2. '<=' → logprob: -7.002627372741699
    3. ')<=' → logprob: -7.627627372741699
    4. '==' → logprob: -8.5026273727417
    5. ' <=' → logprob: -8.7526273727417
    6. ')<' → logprob: -8.8776273727417
    7. ')>=' → logprob: -9.0026273727417
    8. ')==' → logprob: -9.1276273727417
    9. '>=' → logprob: -9.1276273727417
    10. '<' → logprob: -9.5026273727417

Token 166: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.48868080973625183
    2. ' <' → logprob: -2.113680839538574
    3. '<=' → logprob: -2.363680839538574
    4. ' >' → logprob: -2.488680839538574
    5. '>' → logprob: -3.363680839538574
    6. ' >=' → logprob: -3.613680839538574
    7. '<' → logprob: -4.363680839538574
    8. '>=' → logprob: -4.988680839538574
    9. '==' → logprob: -5.613680839538574
    10. ' ==' → logprob: -5.738680839538574

Token 167: ' K' (ID: 658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.091924786567688
    2. '0' → logprob: -1.341924786567688
    3. ' K' → logprob: -1.591924786567688
    4. 'K' → logprob: -2.0919246673583984
    5. '1' → logprob: -3.2169246673583984
    6. '2' → logprob: -3.3419246673583984
    7. '   ' → logprob: -8.091924667358398
    8. '  ' → logprob: -8.966924667358398
    9. ' (' → logprob: -10.029424667358398
    10. ' abs' → logprob: -10.341924667358398

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02345557138323784
    2. ':
' → logprob: -3.7734556198120117
    3. ' and' → logprob: -8.523455619812012
    4. 'and' → logprob: -12.773455619812012
    5. ' :' → logprob: -13.023455619812012
    6. ' or' → logprob: -13.148455619812012
    7. ':

' → logprob: -13.648455619812012
    8. '       ' → logprob: -14.273455619812012
    9. ':
' → logprob: -14.773455619812012
    10. '   ' → logprob: -15.148455619812012

Token 169: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.453700989484787
    2. '       ' → logprob: -1.7037010192871094
    3. ':
' → logprob: -1.7037010192871094
    4. ',' → logprob: -8.32870101928711
    5. '   ' → logprob: -8.82870101928711
    6. ' and' → logprob: -8.82870101928711
    7. '           ' → logprob: -9.57870101928711
    8. '{' → logprob: -10.82870101928711
    9. '):
' → logprob: -10.82870101928711
    10. ':

' → logprob: -11.45370101928711

Token 170: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.026595542207360268
    2. '       ' → logprob: -3.7765955924987793
    3. 'if' → logprob: -6.651595592498779
    4. ' r' → logprob: -7.026595592498779
    5. '           ' → logprob: -7.526595592498779
    6. ' if' → logprob: -7.776595592498779
    7. '   ' → logprob: -9.151595115661621
    8. 'a' → logprob: -10.401595115661621
    9. 'print' → logprob: -10.526595115661621
    10. '
' → logprob: -12.026595115661621

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0043714940547943115
    2. '=' → logprob: -6.004371643066406
    3. ' =' → logprob: -6.754371643066406
    4. 'r' → logprob: -7.379371643066406
    5. ',' → logprob: -10.504371643066406
    6. ' ' → logprob: -10.504371643066406
    7. '_' → logprob: -10.754371643066406
    8. '=r' → logprob: -11.754371643066406
    9. '2' → logprob: -11.879371643066406
    10. 'X' → logprob: -13.129371643066406

Token 172: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009772262535989285
    2. '=' → logprob: -4.634772300720215
    3. ',' → logprob: -11.759772300720215
    4. ' ' → logprob: -11.884772300720215
    5. 'r' → logprob: -14.259772300720215
    6. ' =)' → logprob: -15.259772300720215
    7. ')' → logprob: -15.509772300720215
    8. 's' → logprob: -16.3847713470459
    9. '=r' → logprob: -16.6347713470459
    10. ' r' → logprob: -16.7597713470459

Token 173: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.17720861732959747
    2. 'X' → logprob: -2.427208662033081
    3. '(X' → logprob: -2.677208662033081
    4. ' r' → logprob: -6.177208423614502
    5. ' (' → logprob: -7.052208423614502
    6. '0' → logprob: -7.052208423614502
    7. 'abs' → logprob: -7.177208423614502
    8. ' X' → logprob: -7.802208423614502
    9. ' abs' → logprob: -9.67720890045166
    10. '=' → logprob: -9.67720890045166

Token 174: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10877231508493423
    2. '=' → logprob: -2.3587722778320312
    3. '1' → logprob: -4.858772277832031
    4. ' =' → logprob: -7.483772277832031
    5. ',' → logprob: -9.358772277832031
    6. ' ' → logprob: -10.733772277832031
    7. 'Y' → logprob: -11.108772277832031
    8. '=None' → logprob: -11.358772277832031
    9. '=y' → logprob: -11.608772277832031
    10. '0' → logprob: -11.858772277832031

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575941264629364
    2. '=' → logprob: -0.825941264629364
    3. ',' → logprob: -14.45094108581543
    4. '=r' → logprob: -14.70094108581543
    5. ' ' → logprob: -14.82594108581543
    6. ' ' → logprob: -16.07594108581543
    7. '=input' → logprob: -17.20094108581543
    8. '＝' → logprob: -17.32594108581543
    9. '=(' → logprob: -17.45094108581543
    10. '=X' → logprob: -17.45094108581543

Token 176: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.29120537638664246
    2. '(X' → logprob: -1.4162054061889648
    3. ' X' → logprob: -5.291205406188965
    4. ' (' → logprob: -5.416205406188965
    5. '(' → logprob: -8.541205406188965
    6. '0' → logprob: -8.916205406188965
    7. '((' → logprob: -9.791205406188965
    8. '(
' → logprob: -10.166205406188965
    9. ' ' → logprob: -10.416205406188965
    10. '(abs' → logprob: -11.041205406188965

Token 177: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.665327787399292
    2. '-' → logprob: -1.415327787399292
    3. ' -' → logprob: -1.415327787399292
    4. '-b' → logprob: -9.165328025817871
    5. ',' → logprob: -9.665328025817871
    6. 'a' → logprob: -10.665328025817871
    7. '-а' → logprob: -12.290328025817871
    8. '-x' → logprob: -12.665328025817871
    9. '```' → logprob: -13.915328025817871
    10. '-A' → logprob: -13.915328025817871

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.133198283147067e-05
    2. ',Y' → logprob: -10.375051498413086
    3. ' ,' → logprob: -10.875051498413086
    4. ',y' → logprob: -14.625051498413086
    5. ',r' → logprob: -14.750051498413086
    6. ',
' → logprob: -15.375051498413086
    7. 'r' → logprob: -17.000051498413086
    8. 'Y' → logprob: -18.500051498413086
    9. ',K' → logprob: -18.625051498413086
    10. ',\
' → logprob: -18.625051498413086

Token 179: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.008614926598966122
    2. ' Y' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.008614540100098
    4. '	Y' → logprob: -17.133615493774414
    5. '  ' → logprob: -18.758615493774414
    6. '   ' → logprob: -19.383615493774414
    7. ' ' → logprob: -21.258615493774414
    8. '    ' → logprob: -21.758615493774414
    9. ',Y' → logprob: -22.383615493774414
    10. '(Y' → logprob: -22.383615493774414

Token 180: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.0025782748125493526
    2. '-' → logprob: -6.252578258514404
    3. ' -' → logprob: -7.502578258514404
    4. 'b' → logprob: -9.377578735351562
    5. '-y' → logprob: -11.502578735351562
    6. '-B' → logprob: -13.252578735351562
    7. '-a' → logprob: -14.377578735351562
    8. 'a' → logprob: -16.252578735351562
    9. '-б' → logprob: -16.502578735351562
    10. ' ' → logprob: -16.502578735351562

Token 181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02290404960513115
    2. 'else' → logprob: -4.397903919219971
    3. ' else' → logprob: -4.772903919219971
    4. '<|end|>' → logprob: -6.397903919219971
    5. '<|end|>' → logprob: -9.647904396057129
    6. ',' → logprob: -9.772904396057129
    7. '	else' → logprob: -10.522904396057129
    8. 'elif' → logprob: -10.772904396057129
    9. '
' → logprob: -11.272904396057129
    10. '   ' → logprob: -11.897904396057129

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055538032203912735
    2. 'else' → logprob: -3.1805379390716553
    3. ' else' → logprob: -4.430538177490234
    4. 'elif' → logprob: -8.680538177490234
    5. ',' → logprob: -8.805538177490234
    6. '<|end|>' → logprob: -8.930538177490234
    7. '   ' → logprob: -10.430538177490234
    8. '```' → logprob: -11.055538177490234
    9. '	else' → logprob: -11.430538177490234
    10. '
' → logprob: -11.430538177490234

Token 183: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7704340219497681
    2. ' else' → logprob: -1.145434021949768
    3. '       ' → logprob: -1.520434021949768
    4. '   ' → logprob: -8.145434379577637
    5. '	else' → logprob: -9.520434379577637
    6. 'elif' → logprob: -9.645434379577637
    7. ' elif' → logprob: -10.895434379577637
    8. ',' → logprob: -11.145434379577637
    9. ':
' → logprob: -12.020434379577637
    10. ' ' → logprob: -12.395434379577637

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2519468665122986
    2. ':
' → logprob: -1.5019469261169434
    3. '       ' → logprob: -11.876946449279785
    4. ':
' → logprob: -12.501946449279785
    5. ':

' → logprob: -13.126946449279785
    6. ',' → logprob: -13.376946449279785
    7. '   ' → logprob: -13.626946449279785
    8. '           ' → logprob: -14.251946449279785
    9. '):
' → logprob: -14.626946449279785
    10. ' :
' → logprob: -15.001946449279785

Token 185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5677601099014282
    2. '       ' → logprob: -0.9427601099014282
    3. ' r' → logprob: -4.067759990692139
    4. 'r' → logprob: -4.317759990692139
    5. ' for' → logprob: -5.692759990692139
    6. '   ' → logprob: -6.442759990692139
    7. ' step' → logprob: -6.567759990692139
    8. ' if' → logprob: -6.692759990692139
    9. 'd' → logprob: -6.942759990692139
    10. ' d' → logprob: -7.317759990692139

Token 186: ' rr' (ID: 54129)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27708929777145386
    2. ' for' → logprob: -2.5270893573760986
    3. 'if' → logprob: -2.7770893573760986
    4. 'd' → logprob: -3.2770893573760986
    5. 'r' → logprob: -4.2770891189575195
    6. 'import' → logprob: -4.7770891189575195
    7. 'dist' → logprob: -4.9020891189575195
    8. '#' → logprob: -5.5270891189575195
    9. ' if' → logprob: -5.9020891189575195
    10. 'diff' → logprob: -6.1520891189575195

Token 187: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17024655640125275
    2. ' =' → logprob: -1.9202466011047363
    3. '=' → logprob: -5.045246601104736
    4. ',' → logprob: -5.795246601104736
    5. '=[]
' → logprob: -9.670246124267578
    6. 'x' → logprob: -9.795246124267578
    7. 'r' → logprob: -9.920246124267578
    8. '2' → logprob: -10.045246124267578
    9. ' ' → logprob: -10.170246124267578
    10. 's' → logprob: -10.420246124267578

Token 188: ' ' (ID: 220)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.08767355978488922
    2. 'K' → logprob: -3.5876736640930176
    3. '(abs' → logprob: -3.5876736640930176
    4. 'abs' → logprob: -4.212673664093018
    5. '((' → logprob: -5.962673664093018
    6. '(' → logprob: -6.087673664093018
    7. '(X' → logprob: -6.212673664093018
    8. '(max' → logprob: -6.962673664093018
    9. '(min' → logprob: -6.962673664093018
    10. ' (' → logprob: -7.337673664093018

Token 189: '2' (ID: 17)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.35790690779685974
    2. 'K' → logprob: -1.8579069375991821
    3. 'abs' → logprob: -2.6079068183898926
    4. '(abs' → logprob: -2.9829068183898926
    5. '((' → logprob: -5.482906818389893
    6. '(' → logprob: -5.857906818389893
    7. '0' → logprob: -6.357906818389893
    8. 'max' → logprob: -6.607906818389893
    9. '(min' → logprob: -6.607906818389893
    10. 'min' → logprob: -6.607906818389893

Token 190: '*K' (ID: 167586)
  Prédit: '*K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*K' → logprob: -0.021724367514252663
    2. '*' → logprob: -4.271724224090576
    3. '*r' → logprob: -5.271724224090576
    4. '*(' → logprob: -6.771724224090576
    5. 'K' → logprob: -7.396724224090576
    6. '*k' → logprob: -8.521724700927734
    7. ' *' → logprob: -8.771724700927734
    8. '**' → logprob: -8.896724700927734
    9. 'abs' → logprob: -10.271724700927734
    10. 'r' → logprob: -11.271724700927734

Token 191: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2354498952627182
    2. ' -' → logprob: -2.23544979095459
    3. '-' → logprob: -2.86044979095459
    4. '       ' → logprob: -3.61044979095459
    5. ',' → logprob: -4.61044979095459
    6. '        
' → logprob: -6.23544979095459
    7. '           ' → logprob: -6.61044979095459
    8. '  
' → logprob: -6.73544979095459
    9. ' if' → logprob: -7.48544979095459
    10. '   ' → logprob: -7.61044979095459

Token 192: ' abs' (ID: 8443)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.0895167663693428
    2. 'abs' → logprob: -2.4645168781280518
    3. ' (' → logprob: -8.089516639709473
    4. ' abs' → logprob: -8.839516639709473
    5. '(' → logprob: -9.089516639709473
    6. '((' → logprob: -12.339516639709473
    7. '1' → logprob: -13.464516639709473
    8. '(x' → logprob: -13.464516639709473
    9. '(max' → logprob: -13.589516639709473
    10. '(X' → logprob: -14.214516639709473

Token 193: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -3.810037742368877e-05
    2. 'X' → logprob: -10.250038146972656
    3. '(' → logprob: -13.500038146972656
    4. '(Y' → logprob: -14.125038146972656
    5. '(x' → logprob: -15.000038146972656
    6. '((' → logprob: -17.125038146972656
    7. '(A' → logprob: -17.250038146972656
    8. '(R' → logprob: -17.375038146972656
    9. 'a' → logprob: -17.500038146972656
    10. ' (' → logprob: -18.000038146972656

Token 194: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.008066379465162754
    2. 'a' → logprob: -4.883066177368164
    3. ' -' → logprob: -8.133066177368164
    4. '+a' → logprob: -9.258066177368164
    5. '-а' → logprob: -10.383066177368164
    6. '_a' → logprob: -11.008066177368164
    7. ' a' → logprob: -11.383066177368164
    8. '-' → logprob: -12.133066177368164
    9. '+' → logprob: -13.758066177368164
    10. '-A' → logprob: -13.883066177368164

Token 195: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048662420362234116
    2. ')-' → logprob: -3.0486624240875244
    3. ')+' → logprob: -10.048662185668945
    4. '+' → logprob: -10.673662185668945
    5. ' )' → logprob: -12.423662185668945
    6. ')-(' → logprob: -12.673662185668945
    7. '+-' → logprob: -15.048662185668945
    8. ')
' → logprob: -15.173662185668945
    9. '+)' → logprob: -15.423662185668945
    10. 'Y' → logprob: -15.673662185668945

Token 196: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0006108098896220326
    2. ' abs' → logprob: -7.750610828399658
    3. '(abs' → logprob: -8.6256103515625
    4. '(' → logprob: -14.7506103515625
    5. ' ' → logprob: -15.6256103515625
    6. ' (' → logprob: -16.8756103515625
    7. '   ' → logprob: -17.2506103515625
    8. '.abs' → logprob: -17.2506103515625
    9. '  ' → logprob: -17.7506103515625
    10. 'max' → logprob: -18.0006103515625

Token 197: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -3.857719275401905e-05
    2. 'Y' → logprob: -10.625038146972656
    3. '(X' → logprob: -11.750038146972656
    4. '(b' → logprob: -13.125038146972656
    5. '(r' → logprob: -13.250038146972656
    6. '(y' → logprob: -13.875038146972656
    7. 'b' → logprob: -15.000038146972656
    8. '(a' → logprob: -15.375038146972656
    9. '(abs' → logprob: -15.375038146972656
    10. '(' → logprob: -15.375038146972656

Token 198: '-b' (ID: 2118)
  Prédit: '-a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.963249921798706
    2. 'a' → logprob: -1.213249921798706
    3. ')' → logprob: -2.338249921798706
    4. '-b' → logprob: -2.588249921798706
    5. '(a' → logprob: -3.213249921798706
    6. 'b' → logprob: -3.213249921798706
    7. '[a' → logprob: -3.338249921798706
    8. '+a' → logprob: -5.088250160217285
    9. ')a' → logprob: -5.088250160217285
    10. '[b' → logprob: -5.463250160217285

Token 199: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.18026337027549744
    2. ')' → logprob: -1.8052634000778198
    3. 'r' → logprob: -8.30526351928711
    4. '       ' → logprob: -9.05526351928711
    5. ' )
' → logprob: -9.80526351928711
    6. ')
' → logprob: -10.18026351928711
    7. '           ' → logprob: -10.93026351928711
    8. '
' → logprob: -11.43026351928711
    9. ' )' → logprob: -11.80526351928711
    10. ')

' → logprob: -11.93026351928711

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.051717642694711685
    2. '       ' → logprob: -3.426717758178711
    3. '
' → logprob: -4.301717758178711
    4. ' if' → logprob: -5.676717758178711
    5. 'if' → logprob: -7.551717758178711
    6. ',' → logprob: -9.301717758178711
    7. '        
' → logprob: -9.426717758178711
    8. '   ' → logprob: -9.551717758178711
    9. '            
' → logprob: -10.301717758178711
    10. '
' → logprob: -10.926717758178711

Token 201: ' rr' (ID: 54129)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12452524155378342
    2. ' if' → logprob: -2.874525308609009
    3. 'r' → logprob: -3.124525308609009
    4. '           ' → logprob: -4.74952507019043
    5. ' r' → logprob: -5.99952507019043
    6. 'for' → logprob: -6.62452507019043
    7. 'x' → logprob: -6.99952507019043
    8. 'd' → logprob: -7.24952507019043
    9. '       ' → logprob: -7.87452507019043
    10. '   ' → logprob: -8.49952507019043

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43880823254585266
    2. '//=' → logprob: -1.1888082027435303
    3. ' =' → logprob: -3.3138082027435303
    4. ' //' → logprob: -4.938808441162109
    5. '//' → logprob: -5.188808441162109
    6. 'div' → logprob: -7.938808441162109
    7. '%=' → logprob: -8.43880844116211
    8. '-=' → logprob: -8.56380844116211
    9. '2' → logprob: -8.93880844116211
    10. '+=' → logprob: -9.06380844116211

Token 203: ' ' (ID: 220)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.06906402111053467
    2. '(rr' → logprob: -3.069064140319824
    3. 'abs' → logprob: -4.569064140319824
    4. '(' → logprob: -5.944064140319824
    5. 'min' → logprob: -6.319064140319824
    6. '(abs' → logprob: -6.444064140319824
    7. ' rr' → logprob: -7.069064140319824
    8. '(K' → logprob: -7.319064140319824
    9. 'max' → logprob: -7.694064140319824
    10. '(min' → logprob: -7.819064140319824

Token 204: '0' (ID: 15)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.06175522133708
    2. '(rr' → logprob: -3.0617551803588867
    3. '(' → logprob: -5.061755180358887
    4. 'abs' → logprob: -6.311755180358887
    5. ' rr' → logprob: -6.561755180358887
    6. '(K' → logprob: -7.311755180358887
    7. ' (' → logprob: -7.311755180358887
    8. '(abs' → logprob: -7.436755180358887
    9. 'min' → logprob: -7.936755180358887
    10. '-' → logprob: -8.561755180358887

Token 205: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.02699337713420391
    2. '(rr' → logprob: -4.151993274688721
    3. ' rr' → logprob: -4.526993274688721
    4. 'K' → logprob: -11.151993751525879
    5. 'X' → logprob: -11.401993751525879
    6. 'abs' → logprob: -11.526993751525879
    7. '(r' → logprob: -11.651993751525879
    8. ' (' → logprob: -11.776993751525879
    9. ' not' → logprob: -11.901993751525879
    10. 'not' → logprob: -12.151993751525879

Token 207: ' %' (ID: 1851)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8058698773384094
    2. '<' → logprob: -1.0558698177337646
    3. '%' → logprob: -2.3058698177337646
    4. ' <' → logprob: -3.4308698177337646
    5. ' >' → logprob: -3.4308698177337646
    6. '<=' → logprob: -4.055870056152344
    7. '>=' → logprob: -4.805870056152344
    8. '==' → logprob: -5.055870056152344
    9. 'else' → logprob: -5.680870056152344
    10. ' %' → logprob: -6.055870056152344

Token 208: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.50020408630371
    4. '4' → logprob: -17.50020408630371
    5. '```' → logprob: -17.50020408630371
    6. '  ' → logprob: -17.62520408630371
    7. '>' → logprob: -18.50020408630371
    8. '
' → logprob: -18.62520408630371
    9. '202' → logprob: -19.25020408630371
    10. '=' → logprob: -19.25020408630371

Token 209: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.750008583068848
    3. '4' → logprob: -15.250008583068848
    4. '1' → logprob: -16.12500762939453
    5. '```' → logprob: -16.62500762939453
    6. '   ' → logprob: -17.12500762939453
    7. '{' → logprob: -17.31250762939453
    8. '
' → logprob: -17.81250762939453
    9. '  ' → logprob: -18.06250762939453
    10. '==' → logprob: -18.25000762939453

Token 210: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.21509814262390137
    2. '==' → logprob: -1.9650981426239014
    3. ' else' → logprob: -2.9650981426239014
    4. '!=' → logprob: -6.3400983810424805
    5. ' ==' → logprob: -9.59009838104248
    6. ' !=' → logprob: -12.34009838104248
    7. '==
' → logprob: -13.96509838104248
    8. ' ' → logprob: -14.84009838104248
    9. '   ' → logprob: -15.21509838104248
    10. '>' → logprob: -15.21509838104248

Token 211: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.29888439178466797
    2. '2' → logprob: -1.423884391784668
    3. 'min' → logprob: -4.798884391784668
    4. '1' → logprob: -4.923884391784668
    5. '(rr' → logprob: -6.798884391784668
    6. ' rr' → logprob: -8.298884391784668
    7. '-' → logprob: -8.423884391784668
    8. 'max' → logprob: -8.923884391784668
    9. ' min' → logprob: -9.173884391784668
    10. 'abs' → logprob: -9.548884391784668

Token 212: '//' (ID: 393)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014406540431082249
    2. '
' → logprob: -4.764406681060791
    3. '       ' → logprob: -5.514406681060791
    4. ',' → logprob: -7.639406681060791
    5. '//' → logprob: -8.389406204223633
    6. ' //' → logprob: -8.389406204223633
    7. '            
' → logprob: -8.514406204223633
    8. '   ' → logprob: -9.139406204223633
    9. ' +' → logprob: -9.514406204223633
    10. '<|end|>' → logprob: -9.889406204223633

Token 213: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.62510871887207
    4. '
' → logprob: -17.25010871887207
    5. '  ' → logprob: -19.00010871887207
    6. '２' → logprob: -19.50010871887207
    7. ' ' → logprob: -19.62510871887207
    8. '```' → logprob: -19.75010871887207
    9. '۲' → logprob: -19.87510871887207
    10. '           ' → logprob: -19.87510871887207

Token 214: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010547225829213858
    2. '       ' → logprob: -7.001054763793945
    3. ',' → logprob: -9.751054763793945
    4. 'r' → logprob: -10.751054763793945
    5. ' if' → logprob: -10.876054763793945
    6. '
' → logprob: -11.251054763793945
    7. '          ' → logprob: -11.876054763793945
    8. 'if' → logprob: -12.126054763793945
    9. '   ' → logprob: -12.876054763793945
    10. 'x' → logprob: -13.126054763793945

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3886328637599945
    2. '       ' → logprob: -1.138632893562317
    3. '
' → logprob: -7.138632774353027
    4. ' if' → logprob: -8.013632774353027
    5. ',' → logprob: -8.388632774353027
    6. '        
' → logprob: -9.138632774353027
    7. 'if' → logprob: -9.388632774353027
    8. '   ' → logprob: -10.013632774353027
    9. 'r' → logprob: -10.013632774353027
    10. '            
' → logprob: -10.888632774353027

Token 216: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26992955803871155
    2. 'r' → logprob: -1.5199295282363892
    3. ' if' → logprob: -4.7699294090271
    4. '           ' → logprob: -5.0199294090271
    5. ' r' → logprob: -6.8949294090271
    6. 'x' → logprob: -7.3949294090271
    7. 'dx' → logprob: -8.394929885864258
    8. 'a' → logprob: -8.644929885864258
    9. 'd' → logprob: -9.019929885864258
    10. 'import' → logprob: -9.269929885864258

Token 217: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.2728392779827118
    2. ' X' → logprob: -2.147839307785034
    3. 'abs' → logprob: -2.772839307785034
    4. 'X' → logprob: -3.897839307785034
    5. ' Y' → logprob: -4.022839069366455
    6. ' (' → logprob: -4.647839069366455
    7. 'Y' → logprob: -5.897839069366455
    8. '(abs' → logprob: -6.022839069366455
    9. ' x' → logprob: -6.522839069366455
    10. ' K' → logprob: -6.772839069366455

Token 218: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0024868345353752375
    2. '(Y' → logprob: -6.252486705780029
    3. 'X' → logprob: -8.252487182617188
    4. '(r' → logprob: -8.627487182617188
    5. '(x' → logprob: -9.377487182617188
    6. '(' → logprob: -11.627487182617188
    7. 'r' → logprob: -11.752487182617188
    8. 'Y' → logprob: -12.627487182617188
    9. '(R' → logprob: -12.877487182617188
    10. '(K' → logprob: -13.252487182617188

Token 219: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.056825485080480576
    2. ' -' → logprob: -2.9318253993988037
    3. 'a' → logprob: -6.306825637817383
    4. '-' → logprob: -9.806825637817383
    5. ' a' → logprob: -10.681825637817383
    6. '-а' → logprob: -11.056825637817383
    7. ' ' → logprob: -11.806825637817383
    8. '-x' → logprob: -12.556825637817383
    9. '-b' → logprob: -12.931825637817383
    10. '-A' → logprob: -13.431825637817383

Token 220: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6206324696540833
    2. ')' → logprob: -1.6206324100494385
    3. '-X' → logprob: -2.3706324100494385
    4. ')+' → logprob: -2.6206324100494385
    5. '-r' → logprob: -3.1206324100494385
    6. '-x' → logprob: -3.6206324100494385
    7. '+' → logprob: -3.9956324100494385
    8. '-' → logprob: -6.370632648468018
    9. ' +' → logprob: -6.495632648468018
    10. ')>' → logprob: -6.870632648468018

Token 221: ' <' (ID: 464)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.45182785391807556
    2. '+' → logprob: -1.326827883720398
    3. ' >' → logprob: -3.0768277645111084
    4. ' <' → logprob: -3.9518277645111084
    5. ' >=' → logprob: -4.3268280029296875
    6. '>' → logprob: -4.4518280029296875
    7. '>=' → logprob: -5.5768280029296875
    8. ' <=' → logprob: -6.2018280029296875
    9. '<' → logprob: -6.4518280029296875
    10. '<=' → logprob: -7.9518280029296875

Token 222: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.001295804977417
    2. 'K' → logprob: -1.126295804977417
    3. ' abs' → logprob: -1.376295804977417
    4. ' K' → logprob: -3.251295804977417
    5. 'rr' → logprob: -5.001296043395996
    6. 'r' → logprob: -5.001296043395996
    7. ' rr' → logprob: -6.626296043395996
    8. 'X' → logprob: -7.376296043395996
    9. '(abs' → logprob: -7.501296043395996
    10. '(' → logprob: -8.126296043395996

Token 223: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.0045554423704743385
    2. 'Y' → logprob: -5.7545552253723145
    3. '(X' → logprob: -6.6295552253723145
    4. '(' → logprob: -11.254555702209473
    5. 'r' → logprob: -11.504555702209473
    6. 'X' → logprob: -11.879555702209473
    7. '(K' → logprob: -12.254555702209473
    8. '(y' → logprob: -12.379555702209473
    9. '(r' → logprob: -12.504555702209473
    10. ' (' → logprob: -13.004555702209473

Token 224: '-b' (ID: 2118)
  Prédit: '-a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.013380685821175575
    2. '-b' → logprob: -4.388380527496338
    3. ' -' → logprob: -7.388380527496338
    4. 'a' → logprob: -8.388381004333496
    5. ')' → logprob: -12.138381004333496
    6. '-' → logprob: -12.513381004333496
    7. 'b' → logprob: -12.513381004333496
    8. '-а' → logprob: -12.513381004333496
    9. '```' → logprob: -13.138381004333496
    10. '):
' → logprob: -14.013381004333496

Token 225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13752232491970062
    2. ':
' → logprob: -3.0125222206115723
    3. ' and' → logprob: -3.3875222206115723
    4. ':' → logprob: -3.7625222206115723
    5. '):' → logprob: -4.012522220611572
    6. ')' → logprob: -6.762522220611572
    7. ' ):
' → logprob: -6.887522220611572
    8. 'and' → logprob: -7.262522220611572
    9. '           ' → logprob: -7.262522220611572
    10. ' :
' → logprob: -8.51252269744873

Token 226: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37570422887802124
    2. ' r' → logprob: -1.375704288482666
    3. '           ' → logprob: -3.125704288482666
    4. ',' → logprob: -4.750704288482666
    5. 'r' → logprob: -5.625704288482666
    6. ' if' → logprob: -7.125704288482666
    7. ':
' → logprob: -7.500704288482666
    8. ' x' → logprob: -7.625704288482666
    9. ' and' → logprob: -8.125703811645508
    10. ' ' → logprob: -8.375703811645508

Token 227: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.25611168146133423
    2. ' r' → logprob: -1.5061116218566895
    3. '           ' → logprob: -6.6311116218566895
    4. 'if' → logprob: -6.8811116218566895
    5. 'x' → logprob: -7.6311116218566895
    6. ' if' → logprob: -7.8811116218566895
    7. '               ' → logprob: -8.006112098693848
    8. '   ' → logprob: -9.006112098693848
    9. ' x' → logprob: -9.131112098693848
    10. ' ' → logprob: -9.381112098693848

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023277508094906807
    2. '2' → logprob: -3.773277521133423
    3. ' =' → logprob: -11.148277282714844
    4. ',' → logprob: -11.773277282714844
    5. ' ' → logprob: -12.648277282714844
    6. '=' → logprob: -13.148277282714844
    7. 'r' → logprob: -13.398277282714844
    8. '_' → logprob: -14.335777282714844
    9. '
' → logprob: -15.210777282714844
    10. ' +=' → logprob: -15.273277282714844

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1607585847377777
    2. '=' → logprob: -1.9107586145401
    3. ',' → logprob: -7.6607584953308105
    4. ' +=' → logprob: -9.910758972167969
    5. '+=' → logprob: -11.535758972167969
    6. ',r' → logprob: -14.035758972167969
    7. ' ,' → logprob: -14.410758972167969
    8. 'r' → logprob: -14.785758972167969
    9. '=r' → logprob: -14.785758972167969
    10. '=(' → logprob: -15.285758972167969

Token 230: ' (' (ID: 350)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6054733991622925
    2. 'min' → logprob: -1.4804733991622925
    3. '-(' → logprob: -3.230473518371582
    4. '(X' → logprob: -3.355473518371582
    5. 'K' → logprob: -3.730473518371582
    6. '(abs' → logprob: -3.730473518371582
    7. '0' → logprob: -3.980473518371582
    8. '(' → logprob: -3.980473518371582
    9. '(K' → logprob: -4.355473518371582
    10. ' min' → logprob: -4.730473518371582

Token 231: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.524126410484314
    2. 'K' → logprob: -1.524126410484314
    3. 'X' → logprob: -2.1491265296936035
    4. '0' → logprob: -4.0241265296936035
    5. 'min' → logprob: -4.3991265296936035
    6. 'rr' → logprob: -4.6491265296936035
    7. '(X' → logprob: -4.7741265296936035
    8. '(abs' → logprob: -4.8991265296936035
    9. 'r' → logprob: -5.6491265296936035
    10. 'max' → logprob: -6.2741265296936035

Token 232: '(X' (ID: 17061)
  Prédit: '(Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.5539335012435913
    2. '(X' → logprob: -0.9289335012435913
    3. 'Y' → logprob: -3.928933620452881
    4. 'X' → logprob: -4.553933620452881
    5. '(x' → logprob: -10.178933143615723
    6. '(y' → logprob: -10.303933143615723
    7. '[Y' → logprob: -11.241433143615723
    8. '[X' → logprob: -11.866433143615723
    9. 'a' → logprob: -11.991433143615723
    10. '(' → logprob: -12.053933143615723

Token 233: '-a' (ID: 8575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6948350667953491
    2. '-a' → logprob: -0.6948350667953491
    3. '(a' → logprob: -6.694835186004639
    4. ' -' → logprob: -7.944835186004639
    5. '_a' → logprob: -10.69483470916748
    6. ' a' → logprob: -10.94483470916748
    7. ')' → logprob: -11.19483470916748
    8. '(' → logprob: -12.44483470916748
    9. '-' → logprob: -12.56983470916748
    10. '```' → logprob: -12.69483470916748

Token 234: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09053963422775269
    2. ')+' → logprob: -2.4655396938323975
    3. ')+(' → logprob: -7.090539455413818
    4. '+' → logprob: -8.090539932250977
    5. '))' → logprob: -8.090539932250977
    6. ' )' → logprob: -10.340539932250977
    7. ')*' → logprob: -10.465539932250977
    8. '+r' → logprob: -10.840539932250977
    9. ' +' → logprob: -10.965539932250977
    10. '),' → logprob: -11.465539932250977

Token 235: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.0019337546546012163
    2. '(rr' → logprob: -7.001933574676514
    3. 'r' → logprob: -7.751933574676514
    4. 'min' → logprob: -8.626934051513672
    5. 'K' → logprob: -8.626934051513672
    6. ' rr' → logprob: -9.251934051513672
    7. 'abs' → logprob: -9.376934051513672
    8. '1' → logprob: -11.126934051513672
    9. 'rrrr' → logprob: -11.501934051513672
    10. '0' → logprob: -11.751934051513672

Token 236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008775646798312664
    2. ' if' → logprob: -5.13377571105957
    3. ')*(' → logprob: -6.38377571105957
    4. ')*' → logprob: -8.25877571105957
    5. 'if' → logprob: -8.25877571105957
    6. '+' → logprob: -8.38377571105957
    7. ' )' → logprob: -8.75877571105957
    8. ' +' → logprob: -9.00877571105957
    9. ' *' → logprob: -9.50877571105957
    10. '*' → logprob: -10.13377571105957

Token 237: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.006760960444808006
    2. '*' → logprob: -5.881761074066162
    3. ' if' → logprob: -6.006761074066162
    4. '*(' → logprob: -6.631761074066162
    5. 'if' → logprob: -8.756760597229004
    6. ' ' → logprob: -12.006760597229004
    7. ' *(' → logprob: -13.881760597229004
    8. '   ' → logprob: -14.131760597229004
    9. '*((' → logprob: -14.131760597229004
    10. '*(-' → logprob: -14.506760597229004

Token 238: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868746757507324
    2. ' (' → logprob: -1.1368746757507324
    3. '1' → logprob: -13.38687515258789
    4. ' ' → logprob: -14.26187515258789
    5. '(-' → logprob: -14.51187515258789
    6. ' (-' → logprob: -14.88687515258789
    7. '   ' → logprob: -15.51187515258789
    8. '  ' → logprob: -15.51187515258789
    9. '(sign' → logprob: -16.51187515258789
    10. ' -' → logprob: -16.63687515258789

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004947714623995125
    2. '-' → logprob: -7.875494956970215
    3. '(' → logprob: -9.500494956970215
    4. ' ' → logprob: -10.250494956970215
    5. ' -' → logprob: -12.875494956970215
    6. ' (' → logprob: -13.750494956970215
    7. '(-' → logprob: -14.500494956970215
    8. '(X' → logprob: -15.375494956970215
    9. '0' → logprob: -16.5004940032959
    10. 'X' → logprob: -16.7504940032959

Token 240: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03804194927215576
    2. 'if' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.788042068481445
    4. '	if' → logprob: -16.038042068481445
    5. 'If' → logprob: -16.788042068481445
    6. '```' → logprob: -17.288042068481445
    7. '<|end|>' → logprob: -17.913042068481445
    8. '1' → logprob: -17.913042068481445
    9. ' for' → logprob: -18.038042068481445
    10. '*' → logprob: -18.413042068481445

Token 241: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.18308459222316742
    2. ' X' → logprob: -1.8080846071243286
    3. 'Y' → logprob: -5.933084487915039
    4. ' Y' → logprob: -7.558084487915039
    5. '(X' → logprob: -9.308084487915039
    6. ' ' → logprob: -10.683084487915039
    7. 'x' → logprob: -10.808084487915039
    8. ' (' → logprob: -11.433084487915039
    9. ' x' → logprob: -12.620584487915039
    10. '  ' → logprob: -13.058084487915039

Token 242: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.603438675403595
    2. ' >' → logprob: -0.853438675403595
    3. '>a' → logprob: -3.72843861579895
    4. '>b' → logprob: -5.978438854217529
    5. '>x' → logprob: -7.728438854217529
    6. '>=' → logprob: -9.603438377380371
    7. '>X' → logprob: -10.728438377380371
    8. ' >=' → logprob: -11.103438377380371
    9. ' ' → logprob: -12.353438377380371
    10. ' <' → logprob: -13.478438377380371

Token 243: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12694595754146576
    2. ' a' → logprob: -2.126945972442627
    3. 'x' → logprob: -11.501945495605469
    4. ' ' → logprob: -13.001945495605469
    5. '	a' → logprob: -13.251945495605469
    6. ' x' → logprob: -13.376945495605469
    7. '   ' → logprob: -14.251945495605469
    8. '  ' → logprob: -14.876945495605469
    9. '(a' → logprob: -15.876945495605469
    10. '    ' → logprob: -15.939445495605469

Token 244: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6931476593017578
    2. 'else' → logprob: -0.6931476593017578
    3. ' ' → logprob: -15.318147659301758
    4. '	else' → logprob: -15.818147659301758
    5. '```' → logprob: -16.193147659301758
    6. '  ' → logprob: -17.693147659301758
    7. '         ' → logprob: -18.818147659301758
    8. '   ' → logprob: -19.193147659301758
    9. '_else' → logprob: -19.318147659301758
    10. 'Else' → logprob: -19.943147659301758

Token 245: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029750604182481766
    2. ' -' → logprob: -3.5297505855560303
    3. '1' → logprob: -16.40475082397461
    4. ' ' → logprob: -17.90475082397461
    5. '   ' → logprob: -20.52975082397461
    6. '-x' → logprob: -20.77975082397461
    7. '  ' → logprob: -21.02975082397461
    8. '−' → logprob: -21.52975082397461
    9. '```' → logprob: -21.52975082397461
    10. '-ok' → logprob: -22.65475082397461

Token 246: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00015860427811276168
    2. ' -' → logprob: -8.750158309936523
    3. '0' → logprob: -16.625158309936523
    4. '   ' → logprob: -18.375158309936523
    5. ' ' → logprob: -18.500158309936523
    6. '```' → logprob: -18.750158309936523
    7. '1' → logprob: -19.250158309936523
    8. '−' → logprob: -19.625158309936523
    9. '  ' → logprob: -20.125158309936523
    10. ')' → logprob: -20.125158309936523

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17992767691612244
    2. ')
' → logprob: -1.8049277067184448
    3. 'else' → logprob: -9.804927825927734
    4. '           ' → logprob: -10.554927825927734
    5. ' else' → logprob: -10.679927825927734
    6. '               ' → logprob: -10.804927825927734
    7. '       ' → logprob: -11.054927825927734
    8. '<|end|>' → logprob: -11.054927825927734
    9. ')

' → logprob: -11.679927825927734
    10. '```' → logprob: -12.429927825927734

Token 248: '               ' (ID: 506)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9641667008399963
    2. 'else' → logprob: -1.2141666412353516
    3. '               ' → logprob: -1.7141666412353516
    4. '           ' → logprob: -2.5891666412353516
    5. '       ' → logprob: -2.8391666412353516
    6. '<|end|>' → logprob: -5.214166641235352
    7. ')' → logprob: -7.089166641235352
    8. ',' → logprob: -7.839166641235352
    9. '	else' → logprob: -7.964166641235352
    10. '	       ' → logprob: -8.214166641235352

Token 249: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.024506084620952606
    2. ' r' → logprob: -4.649506092071533
    3. '               ' → logprob: -4.774506092071533
    4. '(r' → logprob: -5.274506092071533
    5. ' (' → logprob: -7.399506092071533
    6. '(abs' → logprob: -8.774505615234375
    7. 'rr' → logprob: -10.149505615234375
    8. 'abs' → logprob: -10.149505615234375
    9. '           ' → logprob: -10.149505615234375
    10. '(' → logprob: -10.649505615234375

Token 250: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7133641196996905e-05
    2. '1' → logprob: -10.75002670288086
    3. '=' → logprob: -13.81252670288086
    4. '_' → logprob: -14.12502670288086
    5. '₂' → logprob: -14.37502670288086
    6. ' ' → logprob: -14.43752670288086
    7. 'r' → logprob: -14.62502670288086
    8. ' =' → logprob: -14.75002670288086
    9. '２' → logprob: -15.31252670288086
    10. '۲' → logprob: -15.37502670288086

Token 251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11282741278409958
    2. ' =' → logprob: -2.2378273010253906
    3. '=(' → logprob: -13.23782730102539
    4. '   ' → logprob: -14.11282730102539
    5. '=
' → logprob: -14.48782730102539
    6. '           ' → logprob: -14.86282730102539
    7. ' ' → logprob: -14.86282730102539
    8. '=((' → logprob: -14.86282730102539
    9. '```' → logprob: -15.11282730102539
    10. ')' → logprob: -16.23782730102539

Token 252: ' (' (ID: 350)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.4359513223171234
    2. '(Y' → logprob: -1.3109513521194458
    3. '(' → logprob: -3.8109512329101562
    4. '(K' → logprob: -3.9359512329101562
    5. '((' → logprob: -3.9359512329101562
    6. ' (' → logprob: -4.060951232910156
    7. '(r' → logprob: -6.060951232910156
    8. 'abs' → logprob: -6.935951232910156
    9. '(y' → logprob: -7.060951232910156
    10. '   ' → logprob: -8.185951232910156

Token 253: 'K' (ID: 42)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -1.0868784189224243
    2. '(K' → logprob: -1.2118784189224243
    3. 'K' → logprob: -1.4618784189224243
    4. 'abs' → logprob: -2.0868782997131348
    5. '(' → logprob: -5.586878299713135
    6. ' abs' → logprob: -6.336878299713135
    7. ' (' → logprob: -6.961878299713135
    8. ' K' → logprob: -7.211878299713135
    9. '(r' → logprob: -7.461878299713135
    10. '((' → logprob: -7.961878299713135

Token 254: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18061961233615875
    2. ' -' → logprob: -1.8056195974349976
    3. '-r' → logprob: -7.555619716644287
    4. '-(' → logprob: -8.055619239807129
    5. '   ' → logprob: -12.180619239807129
    6. 'abs' → logprob: -12.555619239807129
    7. '  ' → logprob: -12.930619239807129
    8. ' ' → logprob: -13.055619239807129
    9. '-
' → logprob: -13.180619239807129
    10. '
' → logprob: -13.180619239807129

Token 255: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.002052120165899396
    2. '(abs' → logprob: -6.752052307128906
    3. 'r' → logprob: -7.252052307128906
    4. ' abs' → logprob: -8.752052307128906
    5. '(r' → logprob: -11.752052307128906
    6. '   ' → logprob: -12.377052307128906
    7. '
' → logprob: -14.252052307128906
    8. 'rr' → logprob: -15.002052307128906
    9. '(' → logprob: -15.127052307128906
    10. '```' → logprob: -15.502052307128906

Token 256: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0040799472481012344
    2. 'r' → logprob: -5.504079818725586
    3. '(
' → logprob: -14.629079818725586
    4. '(' → logprob: -14.754079818725586
    5. ' r' → logprob: -16.129079818725586
    6. '	r' → logprob: -16.129079818725586
    7. ' (' → logprob: -16.379079818725586
    8. '1' → logprob: -16.504079818725586
    9. '[r' → logprob: -16.754079818725586
    10. 'a' → logprob: -17.129079818725586

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3143821656703949
    2. 'r' → logprob: -1.5643821954727173
    3. '(r' → logprob: -2.8143820762634277
    4. ' r' → logprob: -8.314382553100586
    5. '[r' → logprob: -8.814382553100586
    6. ')' → logprob: -10.064382553100586
    7. 'a' → logprob: -10.314382553100586
    8. '	r' → logprob: -10.439382553100586
    9. 's' → logprob: -10.939382553100586
    10. '```' → logprob: -11.189382553100586

Token 258: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ' )' → logprob: -12.375006675720215
    3. '))' → logprob: -14.375006675720215
    4. '-' → logprob: -14.500006675720215
    5. '+' → logprob: -14.750006675720215
    6. ')*' → logprob: -15.750006675720215
    7. ' ' → logprob: -16.1250057220459
    8. '   ' → logprob: -16.6250057220459
    9. '+)' → logprob: -16.6250057220459
    10. '1' → logprob: -16.7500057220459

Token 259: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31442099809646606
    2. '*' → logprob: -1.3144209384918213
    3. '*(' → logprob: -6.8144211769104
    4. ' ' → logprob: -10.814420700073242
    5. ')' → logprob: -11.064420700073242
    6. '   ' → logprob: -11.189420700073242
    7. '  ' → logprob: -13.314420700073242
    8. 'if' → logprob: -13.439420700073242
    9. ' *(' → logprob: -13.939420700073242
    10. '    ' → logprob: -13.939420700073242

Token 260: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02630401775240898
    2. ' (' → logprob: -3.651304006576538
    3. '((' → logprob: -13.776304244995117
    4. '   ' → logprob: -13.901304244995117
    5. '(-' → logprob: -14.026304244995117
    6. ' ' → logprob: -15.276304244995117
    7. '  ' → logprob: -15.401304244995117
    8. '1' → logprob: -16.401304244995117
    9. '(sign' → logprob: -16.776304244995117
    10. '    ' → logprob: -17.151304244995117

Token 261: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011547001078724861
    2. '1' → logprob: -4.636547088623047
    3. ' (' → logprob: -6.386547088623047
    4. '(-' → logprob: -9.636547088623047
    5. '-' → logprob: -10.636547088623047
    6. ' ' → logprob: -11.886547088623047
    7. '   ' → logprob: -13.011547088623047
    8. ')(' → logprob: -13.136547088623047
    9. ')' → logprob: -13.636547088623047
    10. ' -' → logprob: -14.011547088623047

Token 262: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02691378816962242
    2. ' if' → logprob: -3.65191388130188
    3. '(' → logprob: -7.526913642883301
    4. '(if' → logprob: -10.2769136428833
    5. ' ' → logprob: -11.5269136428833
    6. '1' → logprob: -11.7769136428833
    7. ')' → logprob: -12.1519136428833
    8. ' (' → logprob: -12.5269136428833
    9. 'If' → logprob: -12.9019136428833
    10. '<|end|>' → logprob: -12.9019136428833

Token 263: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00020663968462031335
    2. ' Y' → logprob: -8.62520694732666
    3. 'y' → logprob: -10.75020694732666
    4. 'b' → logprob: -12.50020694732666
    5. '   ' → logprob: -14.25020694732666
    6. '(Y' → logprob: -15.00020694732666
    7. '  ' → logprob: -15.62520694732666
    8. 'a' → logprob: -15.87520694732666
    9. ' ' → logprob: -16.000205993652344
    10. '	Y' → logprob: -16.000205993652344

Token 264: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.018421847373247147
    2. '>' → logprob: -4.393421649932861
    3. '>b' → logprob: -5.143421649932861
    4. '>a' → logprob: -9.89342212677002
    5. ' ' → logprob: -12.76842212677002
    6. 'b' → logprob: -13.89342212677002
    7. ' ' → logprob: -14.39342212677002
    8. '<|end|>' → logprob: -15.14342212677002
    9. ' >
' → logprob: -15.26842212677002
    10. '>x' → logprob: -15.51842212677002

Token 265: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004643722902983427
    2. ' b' → logprob: -5.37964391708374
    3. 'a' → logprob: -11.004643440246582
    4. 'y' → logprob: -13.129643440246582
    5. ' ' → logprob: -13.879643440246582
    6. '  ' → logprob: -14.004643440246582
    7. '   ' → logprob: -14.129643440246582
    8. ' y' → logprob: -14.629643440246582
    9. ' a' → logprob: -14.629643440246582
    10. '    ' → logprob: -14.754643440246582

Token 266: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10021346807479858
    2. ' else' → logprob: -2.3502135276794434
    3. '	else' → logprob: -12.475213050842285
    4. '         ' → logprob: -14.225213050842285
    5. '```' → logprob: -14.725213050842285
    6. '<|end|>' → logprob: -14.725213050842285
    7. '_else' → logprob: -15.100213050842285
    8. ')' → logprob: -15.725213050842285
    9. ' ' → logprob: -15.725213050842285
    10. 'lse' → logprob: -16.1002140045166

Token 267: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11357193440198898
    2. '1' → logprob: -2.238571882247925
    3. ' -' → logprob: -7.488572120666504
    4. ' ' → logprob: -8.613572120666504
    5. '+' → logprob: -12.488572120666504
    6. '   ' → logprob: -13.238572120666504
    7. '           ' → logprob: -14.238572120666504
    8. '       ' → logprob: -14.738572120666504
    9. '  ' → logprob: -15.488572120666504
    10. '```' → logprob: -15.488572120666504

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033658724278211594
    2. '-' → logprob: -3.408658742904663
    3. ' ' → logprob: -11.908658981323242
    4. ' -' → logprob: -12.158658981323242
    5. '   ' → logprob: -15.033658981323242
    6. '```' → logprob: -15.033658981323242
    7. '
' → logprob: -16.533658981323242
    8. ')' → logprob: -16.846158981323242
    9. '  ' → logprob: -17.033658981323242
    10. '``' → logprob: -17.096158981323242

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005028736195527017
    2. ')
' → logprob: -7.625503063201904
    3. '       ' → logprob: -12.125502586364746
    4. '           ' → logprob: -12.375502586364746
    5. '<|end|>' → logprob: -12.875502586364746
    6. '               ' → logprob: -13.375502586364746
    7. ' )' → logprob: -15.375502586364746
    8. ')

' → logprob: -15.625502586364746
    9. '```' → logprob: -15.750502586364746
    10. '`)' → logprob: -16.250503540039062

Token 270: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2791823446750641
    2. '<|end|>' → logprob: -1.7791823148727417
    3. ' else' → logprob: -3.2791824340820312
    4. ')' → logprob: -4.029182434082031
    5. 'else' → logprob: -4.529182434082031
    6. '           ' → logprob: -5.154182434082031
    7. '```' → logprob: -7.279182434082031
    8. '	else' → logprob: -7.404182434082031
    9. '<|end|>' → logprob: -7.404182434082031
    10. '	       ' → logprob: -8.904182434082031

Token 271: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.19210325181484222
    2. ' else' → logprob: -2.067103147506714
    3. '       ' → logprob: -3.317103147506714
    4. '           ' → logprob: -4.442103385925293
    5. '	else' → logprob: -9.567103385925293
    6. 'elif' → logprob: -9.817103385925293
    7. '```' → logprob: -10.817103385925293
    8. '<|end|>' → logprob: -11.192103385925293
    9. '	       ' → logprob: -11.567103385925293
    10. ',' → logprob: -12.192103385925293

Token 272: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12202279269695282
    2. ':
' → logprob: -3.122022867202759
    3. '           ' → logprob: -3.372022867202759
    4. ' r' → logprob: -3.997022867202759
    5. ':' → logprob: -4.37202262878418
    6. '```' → logprob: -6.49702262878418
    7. '       ' → logprob: -6.87202262878418
    8. '              ' → logprob: -7.74702262878418
    9. '            ' → logprob: -8.12202262878418
    10. '   ' → logprob: -8.37202262878418

Token 273: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3272780179977417
    2. ' r' → logprob: -1.5772780179977417
    3. 'r' → logprob: -2.8272781372070312
    4. '           ' → logprob: -4.327278137207031
    5. '```' → logprob: -9.452278137207031
    6. '       ' → logprob: -9.952278137207031
    7. '              ' → logprob: -11.327278137207031
    8. ' ' → logprob: -11.327278137207031
    9. '             ' → logprob: -11.452278137207031
    10. '   ' → logprob: -11.577278137207031

Token 274: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0007152927573770285
    2. ' r' → logprob: -7.250715255737305
    3. '               ' → logprob: -12.625715255737305
    4. '           ' → logprob: -13.250715255737305
    5. '   ' → logprob: -15.750715255737305
    6. '       ' → logprob: -16.625715255737305
    7. '	r' → logprob: -17.625715255737305
    8. '```' → logprob: -17.750715255737305
    9. '
' → logprob: -18.500715255737305
    10. ' ' → logprob: -18.625715255737305

Token 275: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038586699520237744
    2. '2' → logprob: -7.875385761260986
    3. ' =' → logprob: -13.000386238098145
    4. '=' → logprob: -13.500386238098145
    5. '_' → logprob: -14.375386238098145
    6. 'r' → logprob: -14.687886238098145
    7. '
' → logprob: -15.875386238098145
    8. '#' → logprob: -16.375385284423828
    9. ' ' → logprob: -16.437885284423828
    10. '１' → logprob: -16.625385284423828

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931473612785339
    2. ' =' → logprob: -0.6931473612785339
    3. '=(' → logprob: -16.068147659301758
    4. ' =(' → logprob: -17.943147659301758
    5. '＝' → logprob: -17.943147659301758
    6. ' ' → logprob: -18.693147659301758
    7. '   ' → logprob: -19.318147659301758
    8. '=r' → logprob: -19.943147659301758
    9. ')' → logprob: -20.068147659301758
    10. 'r' → logprob: -20.193147659301758

Token 277: ' (' (ID: 350)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.004627241287380457
    2. ' (' → logprob: -5.379627227783203
    3. '   ' → logprob: -13.504627227783203
    4. 'K' → logprob: -14.129627227783203
    5. '(ans' → logprob: -14.379627227783203
    6. '(arr' → logprob: -14.379627227783203
    7. '(K' → logprob: -14.504627227783203
    8. '(' → logprob: -14.504627227783203
    9. ' ' → logprob: -14.629627227783203
    10. '  ' → logprob: -14.754627227783203

Token 278: 'abs' (ID: 6071)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.3879963755607605
    2. '(K' → logprob: -1.1379964351654053
    3. 'K' → logprob: -7.387996196746826
    4. 'abs' → logprob: -7.637996196746826
    5. '(' → logprob: -10.887996673583984
    6. ' (' → logprob: -12.637996673583984
    7. ' abs' → logprob: -14.387996673583984
    8. '((' → logprob: -14.387996673583984
    9. '.abs' → logprob: -14.887996673583984
    10. '   ' → logprob: -16.137996673583984

Token 279: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.0006274910410866141
    2. 'Y' → logprob: -7.375627517700195
    3. '[Y' → logprob: -15.250627517700195
    4. '
' → logprob: -15.250627517700195
    5. '(y' → logprob: -16.125627517700195
    6. '	Y' → logprob: -16.375627517700195
    7. '(' → logprob: -16.750627517700195
    8. '```' → logprob: -17.125627517700195
    9. '_Y' → logprob: -17.250627517700195
    10. '

' → logprob: -17.750627517700195

Token 280: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.016073083505034447
    2. 'b' → logprob: -4.141073226928711
    3. '+b' → logprob: -11.266073226928711
    4. ' b' → logprob: -11.766073226928711
    5. ' -' → logprob: -12.016073226928711
    6. '	b' → logprob: -12.016073226928711
    7. '(b' → logprob: -13.391073226928711
    8. '_b' → logprob: -13.516073226928711
    9. '   ' → logprob: -14.891073226928711
    10. '>b' → logprob: -14.891073226928711

Token 281: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.7087720036506653
    2. '+' → logprob: -1.2087719440460205
    3. '+r' → logprob: -1.7087719440460205
    4. ')+(' → logprob: -3.8337719440460205
    5. '+y' → logprob: -5.3337721824646
    6. '+(' → logprob: -6.7087721824646
    7. ')' → logprob: -8.083771705627441
    8. '+b' → logprob: -10.083771705627441
    9. ' +' → logprob: -10.333771705627441
    10. '+k' → logprob: -11.583771705627441

Token 282: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -5.512236498361744e-07
    2. ' rr' → logprob: -15.000000953674316
    3. '(rr' → logprob: -15.750000953674316
    4. '_rr' → logprob: -19.0
    5. 'rrrr' → logprob: -19.625
    6. '
' → logprob: -21.375
    7. '(' → logprob: -22.125
    8. '0' → logprob: -22.625
    9. ' ' → logprob: -22.875
    10. '+' → logprob: -23.0

Token 283: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026284540072083473
    2. ' +' → logprob: -6.502628326416016
    3. '+' → logprob: -7.002628326416016
    4. ' *' → logprob: -8.877628326416016
    5. '*' → logprob: -10.002628326416016
    6. ' )' → logprob: -11.127628326416016
    7. ')*' → logprob: -11.502628326416016
    8. '   ' → logprob: -13.252628326416016
    9. ')*(' → logprob: -13.502628326416016
    10. ' ' → logprob: -14.002628326416016

Token 284: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0014297593152150512
    2. '*' → logprob: -6.626429557800293
    3. '*(' → logprob: -9.626429557800293
    4. '   ' → logprob: -10.876429557800293
    5. '```' → logprob: -11.501429557800293
    6. ' ' → logprob: -12.751429557800293
    7. ' *(' → logprob: -13.751429557800293
    8. ' (' → logprob: -14.001429557800293
    9. ')' → logprob: -14.001429557800293
    10. '               ' → logprob: -14.751429557800293

Token 285: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20141352713108063
    2. ' (' → logprob: -1.7014135122299194
    3. '1' → logprob: -15.70141315460205
    4. ' ' → logprob: -19.201414108276367
    5. '```' → logprob: -19.451414108276367
    6. '(-' → logprob: -19.576414108276367
    7. '*(' → logprob: -20.326414108276367
    8. ' ' → logprob: -20.326414108276367
    9. '`' → logprob: -20.826414108276367
    10. '((' → logprob: -20.951414108276367

Token 286: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004703176207840443
    2. ' (' → logprob: -5.504703044891357
    3. '1' → logprob: -7.379703044891357
    4. ' ' → logprob: -14.504703521728516
    5. ')' → logprob: -16.004703521728516
    6. ')(' → logprob: -16.629703521728516
    7. '   ' → logprob: -17.379703521728516
    8. '{' → logprob: -17.879703521728516
    9. '-' → logprob: -18.129703521728516
    10. '<|end|>' → logprob: -18.254703521728516

Token 287: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02002287469804287
    2. ' (' → logprob: -4.145022869110107
    3. 'if' → logprob: -6.145022869110107
    4. ' if' → logprob: -6.395022869110107
    5. '1' → logprob: -9.020023345947266
    6. ')' → logprob: -10.520023345947266
    7. '   ' → logprob: -12.020023345947266
    8. ' ' → logprob: -12.270023345947266
    9. '```' → logprob: -12.895023345947266
    10. '*(' → logprob: -13.395023345947266

Token 288: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0006467910134233534
    2. 'X' → logprob: -7.500646591186523
    3. ' Y' → logprob: -9.375646591186523
    4. '   ' → logprob: -12.375646591186523
    5. 'y' → logprob: -12.625646591186523
    6. '  ' → logprob: -14.625646591186523
    7. ' ' → logprob: -14.625646591186523
    8. '	Y' → logprob: -15.500646591186523
    9. '    ' → logprob: -15.625646591186523
    10. 'K' → logprob: -16.750646591186523

Token 289: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.018707484006881714
    2. '>' → logprob: -4.518707275390625
    3. '>a' → logprob: -5.143707275390625
    4. '>b' → logprob: -6.393707275390625
    5. 'a' → logprob: -9.268707275390625
    6. 'b' → logprob: -11.643707275390625
    7. ' a' → logprob: -11.643707275390625
    8. ' ' → logprob: -12.268707275390625
    9. ' >
' → logprob: -12.768707275390625
    10. ' >
' → logprob: -14.268707275390625

Token 290: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005946809891611338
    2. ' b' → logprob: -5.255946636199951
    3. 'a' → logprob: -7.255946636199951
    4. ' a' → logprob: -12.38094711303711
    5. 'y' → logprob: -14.63094711303711
    6. ')b' → logprob: -14.88094711303711
    7. '   ' → logprob: -15.00594711303711
    8. '    ' → logprob: -15.38094711303711
    9. '         ' → logprob: -15.50594711303711
    10. ' ' → logprob: -15.50594711303711

Token 291: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.42873504757881165
    2. ' else' → logprob: -1.0537350177764893
    3. '	else' → logprob: -10.55373477935791
    4. 'd' → logprob: -13.80373477935791
    5. 'e' → logprob: -13.92873477935791
    6. 'lse' → logprob: -13.92873477935791
    7. ' ' → logprob: -14.05373477935791
    8. '         ' → logprob: -14.17873477935791
    9. ')' → logprob: -14.30373477935791
    10. '```' → logprob: -14.42873477935791

Token 292: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.4974866644479334e-05
    2. '1' → logprob: -11.500015258789062
    3. ' -' → logprob: -12.250015258789062
    4. ' ' → logprob: -18.875015258789062
    5. '```' → logprob: -19.875015258789062
    6. '   ' → logprob: -21.875015258789062
    7. '−' → logprob: -22.000015258789062
    8. ')' → logprob: -22.500015258789062
    9. '           ' → logprob: -22.625015258789062
    10. '+' → logprob: -22.750015258789062

Token 293: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07889826595783234
    2. '1' → logprob: -2.5788981914520264
    3. ' -' → logprob: -11.703898429870605
    4. ' ' → logprob: -15.328898429870605
    5. '```' → logprob: -17.45389747619629
    6. '−' → logprob: -18.45389747619629
    7. 'else' → logprob: -19.95389747619629
    8. '
' → logprob: -20.45389747619629
    9. '(-' → logprob: -20.57889747619629
    10. '   ' → logprob: -20.57889747619629

Token 294: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07276623696088791
    2. ')
' → logprob: -2.6977663040161133
    3. '               ' → logprob: -6.072766304016113
    4. '           ' → logprob: -8.072766304016113
    5. 'else' → logprob: -9.822766304016113
    6. '       ' → logprob: -9.947766304016113
    7. '<|end|>' → logprob: -10.572766304016113
    8. ' )' → logprob: -10.947766304016113
    9. ')

' → logprob: -11.697766304016113
    10. ' else' → logprob: -11.822766304016113

Token 295: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06706566363573074
    2. '       ' → logprob: -3.692065715789795
    3. '<|end|>' → logprob: -3.942065715789795
    4. '           ' → logprob: -4.567065715789795
    5. '                
' → logprob: -5.817065715789795
    6. '
' → logprob: -6.317065715789795
    7. '<|end|>' → logprob: -7.067065715789795
    8. '            
' → logprob: -7.817065715789795
    9. 'r' → logprob: -7.942065715789795
    10. '              ' → logprob: -7.942065715789795

Token 296: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0018831811612471938
    2. ' r' → logprob: -6.376883029937744
    3. '               ' → logprob: -8.626883506774902
    4. '   ' → logprob: -14.126883506774902
    5. '           ' → logprob: -14.626883506774902
    6. '                   ' → logprob: -15.376883506774902
    7. ' ' → logprob: -16.126882553100586
    8. '	r' → logprob: -16.501882553100586
    9. '                ' → logprob: -16.751882553100586
    10. '       ' → logprob: -17.126882553100586

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' =' → logprob: -15.125000953674316
    3. '=' → logprob: -15.875000953674316
    4. '2' → logprob: -16.3125
    5. ' +=' → logprob: -17.6875
    6. ' ' → logprob: -17.8125
    7. '１' → logprob: -18.1875
    8. '+=' → logprob: -18.4375
    9. ',' → logprob: -18.5
    10. '۱' → logprob: -18.5625

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.224077224731445
    4. '   ' → logprob: -17.474077224731445
    5. ')' → logprob: -17.599077224731445
    6. ' =(' → logprob: -17.599077224731445
    7. ',' → logprob: -17.724077224731445
    8. '＝' → logprob: -18.349077224731445
    9. '=
' → logprob: -18.349077224731445
    10. ' =)' → logprob: -18.599077224731445

Token 299: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0038846309762448072
    2. ' (' → logprob: -5.628884792327881
    3. '(abs' → logprob: -8.628884315490723
    4. 'K' → logprob: -10.003884315490723
    5. '(' → logprob: -10.628884315490723
    6. 'abs' → logprob: -11.378884315490723
    7. '(k' → logprob: -11.503884315490723
    8. ' K' → logprob: -12.878884315490723
    9. '((' → logprob: -13.128884315490723
    10. ' abs' → logprob: -13.378884315490723

Token 300: 'K' (ID: 42)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.03747463971376419
    2. '(abs' → logprob: -3.4124746322631836
    3. 'K' → logprob: -5.662474632263184
    4. 'abs' → logprob: -8.287474632263184
    5. '(' → logprob: -10.037474632263184
    6. ' (' → logprob: -10.537474632263184
    7. '(k' → logprob: -11.787474632263184
    8. ' abs' → logprob: -12.662474632263184
    9. ' K' → logprob: -13.162474632263184
    10. '   ' → logprob: -13.412474632263184

Token 301: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023319199681282043
    2. ' -' → logprob: -3.7733192443847656
    3. '-(' → logprob: -9.648319244384766
    4. '-r' → logprob: -12.648319244384766
    5. 'abs' → logprob: -13.023319244384766
    6. ')' → logprob: -14.398319244384766
    7. '*' → logprob: -14.523319244384766
    8. '-
' → logprob: -14.648319244384766
    9. ' abs' → logprob: -15.023319244384766
    10. '+' → logprob: -15.148319244384766

Token 302: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -6.2729995988775045e-06
    2. ' abs' → logprob: -12.000006675720215
    3. '(abs' → logprob: -17.1250057220459
    4. '.abs' → logprob: -20.6250057220459
    5. '
' → logprob: -21.1250057220459
    6. '   ' → logprob: -21.7500057220459
    7. '```' → logprob: -22.0000057220459
    8. 'r' → logprob: -22.7500057220459
    9. 'Abs' → logprob: -22.8750057220459
    10. '|' → logprob: -23.7500057220459

Token 303: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.9146995327901095e-05
    2. 'r' → logprob: -11.000019073486328
    3. '(' → logprob: -13.375019073486328
    4. ')' → logprob: -14.250019073486328
    5. '(
' → logprob: -16.500019073486328
    6. ')(' → logprob: -17.875019073486328
    7. 'a' → logprob: -18.375019073486328
    8. '	r' → logprob: -18.500019073486328
    9. '```' → logprob: -19.000019073486328
    10. ' (' → logprob: -19.375019073486328

Token 304: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.000000953674316
    3. '```' → logprob: -16.000001907348633
    4. ')' → logprob: -18.000001907348633
    5. '₂' → logprob: -18.000001907348633
    6. '２' → logprob: -18.250001907348633
    7. 'r' → logprob: -18.562501907348633
    8. '_' → logprob: -19.125001907348633
    9. '[' → logprob: -19.250001907348633
    10. '۲' → logprob: -19.312501907348633

Token 305: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.803360495017841e-05
    2. ' )' → logprob: -9.500078201293945
    3. '))' → logprob: -13.375078201293945
    4. ')*' → logprob: -13.750078201293945
    5. ')
' → logprob: -15.875078201293945
    6. '   ' → logprob: -16.125078201293945
    7. ' ' → logprob: -17.125078201293945
    8. '	' → logprob: -17.750078201293945
    9. '*)' → logprob: -17.875078201293945
    10. '*' → logprob: -18.250078201293945

Token 306: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.062073227018117905
    2. '*' → logprob: -2.812073230743408
    3. '*(' → logprob: -9.18707275390625
    4. ' ' → logprob: -13.56207275390625
    5. '   ' → logprob: -13.81207275390625
    6. '	' → logprob: -15.06207275390625
    7. ' *(' → logprob: -15.18707275390625
    8. ' ' → logprob: -16.43707275390625
    9. '**' → logprob: -16.56207275390625
    10. '  ' → logprob: -16.68707275390625

Token 307: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20141363143920898
    2. ' (' → logprob: -1.701413631439209
    3. '((' → logprob: -16.201414108276367
    4. ' ' → logprob: -16.951414108276367
    5. '  ' → logprob: -17.076414108276367
    6. '(-' → logprob: -17.201414108276367
    7. '   ' → logprob: -17.326414108276367
    8. '(if' → logprob: -17.451414108276367
    9. ' ' → logprob: -17.701414108276367
    10. '1' → logprob: -17.826414108276367

Token 308: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004908377304673195
    2. ' (' → logprob: -7.625490665435791
    3. '1' → logprob: -12.87549114227295
    4. '(-' → logprob: -15.75049114227295
    5. ')(' → logprob: -17.375490188598633
    6. ')' → logprob: -17.750490188598633
    7. ' ' → logprob: -18.750490188598633
    8. '((' → logprob: -18.875490188598633
    9. '   ' → logprob: -19.250490188598633
    10. '```' → logprob: -19.500490188598633

Token 309: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4192529320716858
    2. ' if' → logprob: -1.294252872467041
    3. '(' → logprob: -2.919252872467041
    4. '1' → logprob: -5.044252872467041
    5. '(if' → logprob: -5.669252872467041
    6. ' (' → logprob: -5.919252872467041
    7. '*(' → logprob: -7.044252872467041
    8. ')' → logprob: -8.1692533493042
    9. '*' → logprob: -8.2942533493042
    10. ' *' → logprob: -8.4192533493042

Token 310: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0009131324477493763
    2. ' X' → logprob: -7.000913143157959
    3. 'x' → logprob: -13.3759126663208
    4. 'a' → logprob: -16.750913619995117
    5. 'Y' → logprob: -17.875913619995117
    6. ' x' → logprob: -18.375913619995117
    7. ')' → logprob: -18.875913619995117
    8. ' (' → logprob: -19.125913619995117
    9. ' ' → logprob: -19.500913619995117
    10. '   ' → logprob: -19.500913619995117

Token 311: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04431036859750748
    2. '>' → logprob: -3.2943103313446045
    3. '>a' → logprob: -5.294310569763184
    4. ' ' → logprob: -6.919310569763184
    5. '>b' → logprob: -9.169310569763184
    6. 'a' → logprob: -10.169310569763184
    7. '<|end|>' → logprob: -10.169310569763184
    8. ' ' → logprob: -10.669310569763184
    9. ' a' → logprob: -11.294310569763184
    10. '   ' → logprob: -11.669310569763184

Token 312: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005930693820118904
    2. ' a' → logprob: -5.1309309005737305
    3. 'b' → logprob: -13.88093090057373
    4. ' ' → logprob: -15.00593090057373
    5. '	a' → logprob: -15.13093090057373
    6. ')a' → logprob: -15.75593090057373
    7. ' b' → logprob: -16.505929946899414
    8. ')' → logprob: -16.630929946899414
    9. 'x' → logprob: -16.880929946899414
    10. ''a' → logprob: -17.380929946899414

Token 313: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3869037330150604
    2. ' else' → logprob: -1.1369037628173828
    3. '	else' → logprob: -11.011903762817383
    4. '<|end|>' → logprob: -11.636903762817383
    5. ')' → logprob: -13.386903762817383
    6. '```' → logprob: -13.636903762817383
    7. ' ' → logprob: -13.761903762817383
    8. '_else' → logprob: -14.011903762817383
    9. 'elses' → logprob: -14.511903762817383
    10. 'lse' → logprob: -14.636903762817383

Token 314: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.93710636976175e-05
    2. ' -' → logprob: -9.500099182128906
    3. '1' → logprob: -10.625099182128906
    4. ' ' → logprob: -16.375099182128906
    5. '−' → logprob: -20.500099182128906
    6. '```' → logprob: -21.625099182128906
    7. '+' → logprob: -21.750099182128906
    8. ')' → logprob: -22.500099182128906
    9. '   ' → logprob: -22.500099182128906
    10. '-
' → logprob: -23.625099182128906

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25197383761405945
    2. '-' → logprob: -1.5019738674163818
    3. ' -' → logprob: -10.126974105834961
    4. ' ' → logprob: -12.376974105834961
    5. '```' → logprob: -15.751974105834961
    6. ')' → logprob: -16.25197410583496
    7. '−' → logprob: -16.62697410583496
    8. '' → logprob: -17.62697410583496
    9. '...' → logprob: -17.75197410583496
    10. '   ' → logprob: -17.75197410583496

Token 316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.623244553338736e-05
    2. ')
' → logprob: -10.375065803527832
    3. '       ' → logprob: -10.375065803527832
    4. ' )' → logprob: -13.125065803527832
    5. '<|end|>' → logprob: -14.375065803527832
    6. ')#' → logprob: -15.000065803527832
    7. '   ' → logprob: -15.375065803527832
    8. '           ' → logprob: -15.875065803527832
    9. '               ' → logprob: -16.12506675720215
    10. '),' → logprob: -16.50006675720215

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006945623317733407
    2. '
' → logprob: -8.000694274902344
    3. '           ' → logprob: -8.750694274902344
    4. '   ' → logprob: -9.750694274902344
    5. '        
' → logprob: -10.000694274902344
    6. ',' → logprob: -10.125694274902344
    7. '    
' → logprob: -11.875694274902344
    8. ')' → logprob: -12.000694274902344
    9. '	' → logprob: -12.250694274902344
    10. '               ' → logprob: -12.500694274902344

Token 318: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008243982680141926
    2. '	' → logprob: -5.133244037628174
    3. '
' → logprob: -6.508244037628174
    4. '\n' → logprob: -9.008243560791016
    5. '        
' → logprob: -9.508243560791016
    6. '		
' → logprob: -9.508243560791016
    7. ',' → logprob: -9.508243560791016
    8. '	   ' → logprob: -10.008243560791016
    9. '```' → logprob: -10.258243560791016
    10. '   ' → logprob: -10.383243560791016

Token 319: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3615976870059967
    2. '+=' → logprob: -1.2365976572036743
    3. ',' → logprob: -4.361597537994385
    4. '=' → logprob: -8.611598014831543
    5. ' =' → logprob: -10.361598014831543
    6. ',x' → logprob: -10.611598014831543
    7. '```' → logprob: -10.736598014831543
    8. '+' → logprob: -10.986598014831543
    9. ']+=' → logprob: -11.236598014831543
    10. ' ,' → logprob: -12.236598014831543

Token 320: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001234428636962548
    2. ' y' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.250123977661133
    4. 'x' → logprob: -18.375123977661133
    5. '	y' → logprob: -18.875123977661133
    6. '    ' → logprob: -20.250123977661133
    7. '(y' → logprob: -20.750123977661133
    8. ' ' → logprob: -21.250123977661133
    9. ',y' → logprob: -21.500123977661133
    10. '  ' → logprob: -21.500123977661133

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47631677985191345
    2. '+=' → logprob: -1.1013168096542358
    3. ' +=' → logprob: -3.3513166904449463
    4. ' =' → logprob: -4.476316928863525
    5. '+' → logprob: -10.601316452026367
    6. 'x' → logprob: -10.851316452026367
    7. '=x' → logprob: -11.226316452026367
    8. '<|end|>' → logprob: -11.726316452026367
    9. ',' → logprob: -12.101316452026367
    10. '.=' → logprob: -12.476316452026367

Token 322: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.056053925305604935
    2. 'a' → logprob: -3.056053876876831
    3. ' x' → logprob: -4.93105411529541
    4. ' a' → logprob: -8.43105411529541
    5. '   ' → logprob: -13.80605411529541
    6. '(x' → logprob: -15.05605411529541
    7. '(a' → logprob: -16.056053161621094
    8. '    ' → logprob: -16.306053161621094
    9. '	x' → logprob: -16.306053161621094
    10. ' ' → logprob: -16.431053161621094

Token 323: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5829618573188782
    2. ' +' → logprob: -0.8329618573188782
    3. '+r' → logprob: -5.0829620361328125
    4. '+x' → logprob: -7.2079620361328125
    5. ',' → logprob: -10.207962036132812
    6. 'x' → logprob: -12.582962036132812
    7. '+s' → logprob: -12.832962036132812
    8. '+
' → logprob: -12.957962036132812
    9. '+,' → logprob: -13.082962036132812
    10. '+t' → logprob: -13.332962036132812

Token 324: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.2729995988775045e-06
    2. ' r' → logprob: -12.000006675720215
    3. '```' → logprob: -21.8750057220459
    4. '   ' → logprob: -22.2500057220459
    5. '	r' → logprob: -22.5000057220459
    6. '
' → logprob: -23.2500057220459
    7. '`' → logprob: -25.1250057220459
    8. 'int' → logprob: -25.2500057220459
    9. ' ' → logprob: -25.3750057220459
    10. '       ' → logprob: -25.3750057220459

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '_' → logprob: -17.5
    4. '１' → logprob: -17.75
    5. '```' → logprob: -18.125
    6. '১' → logprob: -18.9375
    7. '۱' → logprob: -19.0625
    8. '`' → logprob: -19.25
    9. '[' → logprob: -19.5
    10. ')' → logprob: -19.6875

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.670925358776003e-05
    2. ',y' → logprob: -9.875066757202148
    3. ' ,' → logprob: -11.125066757202148
    4. ',
' → logprob: -15.000066757202148
    5. '<|end|>' → logprob: -16.50006675720215
    6. ',x' → logprob: -18.25006675720215
    7. ',b' → logprob: -18.75006675720215
    8. '‌,' → logprob: -18.75006675720215
    9. ',user' → logprob: -18.87506675720215
    10. ' y' → logprob: -19.12506675720215

Token 327: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4740772247314453
    2. 'b' → logprob: -0.9740772247314453
    3. '   ' → logprob: -15.599077224731445
    4. '    ' → logprob: -16.224077224731445
    5. ' ' → logprob: -17.974077224731445
    6. ' y' → logprob: -18.099077224731445
    7. '	b' → logprob: -18.724077224731445
    8. 'y' → logprob: -19.724077224731445
    9. '```' → logprob: -19.724077224731445
    10. '  ' → logprob: -20.099077224731445

Token 328: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3888947367668152
    2. '+' → logprob: -1.13889479637146
    3. '+r' → logprob: -6.388894557952881
    4. '+b' → logprob: -8.013895034790039
    5. '   ' → logprob: -13.013895034790039
    6. 'b' → logprob: -13.388895034790039
    7. ' ' → logprob: -13.763895034790039
    8. '+y' → logprob: -13.888895034790039
    9. '＋' → logprob: -13.888895034790039
    10. 'r' → logprob: -14.013895034790039

Token 329: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00023059594968799502
    2. ' r' → logprob: -8.37523078918457
    3. '	r' → logprob: -18.37523078918457
    4. '   ' → logprob: -19.12523078918457
    5. '_r' → logprob: -19.25023078918457
    6. '+r' → logprob: -19.25023078918457
    7. '­r' → logprob: -21.12523078918457
    8. ' ' → logprob: -21.62523078918457
    9. '    ' → logprob: -22.12523078918457
    10. '-r' → logprob: -22.62523078918457

Token 330: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.500000953674316
    3. 'token' → logprob: -17.5
    4. ' ' → logprob: -18.375
    5. '```' → logprob: -18.8125
    6. '۲' → logprob: -18.875
    7. '₂' → logprob: -18.875
    8. '<|end|>' → logprob: -19.25
    9. '２' → logprob: -19.8125
    10. '২' → logprob: -20.0

Token 331: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6865361332893372
    2. '   ' → logprob: -0.8115361332893372
    3. '
' → logprob: -3.0615360736846924
    4. '    
' → logprob: -6.1865363121032715
    5. '```' → logprob: -6.3115363121032715
    6. '        
' → logprob: -7.4365363121032715
    7. '  
' → logprob: -8.186535835266113
    8. ',' → logprob: -8.561535835266113
    9. '<|end|>' → logprob: -8.686535835266113
    10. '``' → logprob: -8.811535835266113

Token 332: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04351747781038284
    2. '```' → logprob: -3.293517589569092
    3. '       ' → logprob: -6.043517589569092
    4. '
' → logprob: -6.543517589569092
    5. '``' → logprob: -6.918517589569092
    6. '    
' → logprob: -7.918517589569092
    7. '<|end|>' → logprob: -9.293517112731934
    8. '[' → logprob: -10.418517112731934
    9. 'ANS' → logprob: -10.543517112731934
    10. '        
' → logprob: -10.793517112731934

Token 333: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.42106688022613525
    2. '   ' → logprob: -1.5460668802261353
    3. '       ' → logprob: -2.0460667610168457
    4. ' AN' → logprob: -7.921066761016846
    5. '```' → logprob: -8.421067237854004
    6. 'AN' (adapté à ' AN') → logprob: -8.671067237854004
    7. '	' → logprob: -9.171067237854004
    8. '    
' → logprob: -9.671067237854004
    9. 'ANSWER' → logprob: -9.921067237854004
    10. 'print' → logprob: -9.921067237854004

Token 334: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0280383548888494e-06
    2. ' S' → logprob: -14.000000953674316
    3. 'SOR' → logprob: -16.500001907348633
    4. 'Ｓ' → logprob: -17.875001907348633
    5. '	S' → logprob: -18.000001907348633
    6. '[S' → logprob: -18.000001907348633
    7. 'SR' → logprob: -18.250001907348633
    8. '[' → logprob: -19.000001907348633
    9. 'Ѕ' → logprob: -19.000001907348633
    10. '```' → logprob: -19.375001907348633

Token 335: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.9862216504407115e-05
    2. '.' → logprob: -10.875020027160645
    3. '.ap' → logprob: -14.750020027160645
    4. '.app' → logprob: -15.250020027160645
    5. 'append' → logprob: -16.125019073486328
    6. '.extend' → logprob: -16.375019073486328
    7. ' .' → logprob: -16.750019073486328
    8. '.push' → logprob: -17.250019073486328
    9. '.Append' → logprob: -18.125019073486328
    10. '.add' → logprob: -18.250019073486328

Token 336: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008241970092058182
    2. '(f' → logprob: -5.133242130279541
    3. '(str' → logprob: -6.258242130279541
    4. '(' → logprob: -8.133241653442383
    5. '(chr' → logprob: -9.508241653442383
    6. '([' → logprob: -11.383241653442383
    7. '(x' → logprob: -11.383241653442383
    8. '(r' → logprob: -13.008241653442383
    9. '('' → logprob: -14.008241653442383
    10. '(abs' → logprob: -14.883241653442383

Token 337: 'x' (ID: 87)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.620622712536715e-05
    2. 'x' → logprob: -10.000045776367188
    3. ' r' → logprob: -14.500045776367188
    4. '-r' → logprob: -16.375045776367188
    5. '   ' → logprob: -17.500045776367188
    6. '-' → logprob: -18.125045776367188
    7. '	r' → logprob: -18.625045776367188
    8. '(r' → logprob: -18.750045776367188
    9. '_r' → logprob: -19.750045776367188
    10. ' -' → logprob: -19.875045776367188

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002622894535306841
    2. ',y' → logprob: -8.500262260437012
    3. ' ,' → logprob: -9.750262260437012
    4. ',
' → logprob: -14.625262260437012
    5. ',r' → logprob: -17.000263214111328
    6. '<|end|>' → logprob: -18.250263214111328
    7. '```' → logprob: -18.375263214111328
    8. ')' → logprob: -18.750263214111328
    9. '‌,' → logprob: -19.375263214111328
    10. ',b' → logprob: -19.625263214111328

Token 339: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001170225441455841
    2. ' y' → logprob: -6.7511701583862305
    3. '	y' → logprob: -19.376171112060547
    4. ')y' → logprob: -19.751171112060547
    5. ' ' → logprob: -21.251171112060547
    6. '   ' → logprob: -21.876171112060547
    7. '<|end|>' → logprob: -21.876171112060547
    8. '    ' → logprob: -22.376171112060547
    9. ',y' → logprob: -22.626171112060547
    10. ')' → logprob: -22.626171112060547

Token 340: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04860837012529373
    2. ')' → logprob: -3.0486083030700684
    3. '))
' → logprob: -10.923608779907227
    4. ')
' → logprob: -13.548608779907227
    5. ')))' → logprob: -14.173608779907227
    6. ' ))' → logprob: -15.298608779907227
    7. ')}' → logprob: -15.673608779907227
    8. '),' → logprob: -15.673608779907227
    9. '))

' → logprob: -16.423608779907227
    10. '));' → logprob: -16.423608779907227

Token 341: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6453381776809692
    2. '\n' → logprob: -1.1453381776809692
    3. 'print' → logprob: -2.1453380584716797
    4. '    
' → logprob: -4.52033805847168
    5. ')' → logprob: -5.02033805847168
    6. ')
' → logprob: -5.27033805847168
    7. '  
' → logprob: -5.39533805847168
    8. '<|end|>' → logprob: -5.64533805847168
    9. ' 
' → logprob: -5.89533805847168
    10. '```' → logprob: -6.27033805847168

Token 342: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22829924523830414
    2. '
' → logprob: -2.478299140930176
    3. 'print' (adapté à ' print') → logprob: -2.478299140930176
    4. ')
' → logprob: -3.978299140930176
    5. ')' → logprob: -5.228299140930176
    6. ' for' → logprob: -5.353299140930176
    7. '\n' → logprob: -5.728299140930176
    8. '   ' → logprob: -6.228299140930176
    9. '    
' → logprob: -6.478299140930176
    10. '```' → logprob: -7.978299140930176

Token 343: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.08266030251979828
    2. '(' → logprob: -2.58266019821167
    3. '(*' → logprob: -5.70766019821167
    4. '('' → logprob: -8.707660675048828
    5. '(tuple' → logprob: -9.082660675048828
    6. '("' → logprob: -9.582660675048828
    7. '(sum' → logprob: -9.707660675048828
    8. '(
' → logprob: -11.832660675048828
    9. '((' → logprob: -11.832660675048828
    10. '(-' → logprob: -12.457660675048828

Token 344: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '(
' → logprob: -14.875000953674316
    3. '(

' → logprob: -15.625000953674316
    4. ')' → logprob: -16.125
    5. '(`' → logprob: -16.75
    6. '(ans' → logprob: -17.25
    7. 'ANS' → logprob: -18.125
    8. ' (' → logprob: -18.375
    9. '```' → logprob: -18.875
    10. '())' → logprob: -18.875

Token 345: 'ANS' (ID: 18850)
  Prédit: 'ANS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.375
    3. '(ans' → logprob: -16.625
    4. 'ANSWER' → logprob: -17.375
    5. 'Ans' → logprob: -18.625
    6. 'ans' → logprob: -18.875
    7. 'A' → logprob: -21.25
    8. 'ANTS' → logprob: -21.375
    9. ' AN' → logprob: -21.375
    10. '```' → logprob: -21.5

Token 346: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007779388688504696
    2. '))' → logprob: -7.250777721405029
    3. ',' → logprob: -9.750778198242188
    4. ')
' → logprob: -12.750778198242188
    5. '())' → logprob: -13.375778198242188
    6. ')`' → logprob: -13.375778198242188
    7. ',)' → logprob: -13.500778198242188
    8. '()' → logprob: -14.375778198242188
    9. '),' → logprob: -14.625778198242188
    10. ')}' → logprob: -15.250778198242188

Token 347: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.2729995988775045e-06
    2. ' for' → logprob: -12.500006675720215
    3. 'print' → logprob: -13.125006675720215
    4. '   ' → logprob: -14.750006675720215
    5. '```' → logprob: -17.1250057220459
    6. '	for' → logprob: -17.8750057220459
    7. '       ' → logprob: -18.2500057220459
    8. '    
' → logprob: -18.3750057220459
    9. '<|end|>' → logprob: -19.0000057220459
    10. '
' → logprob: -20.1250057220459

Token 348: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02617163397371769
    2. '\n' → logprob: -4.401171684265137
    3. ' for' → logprob: -4.901171684265137
    4. '    
' → logprob: -5.901171684265137
    5. '   ' → logprob: -6.776171684265137
    6. '
' → logprob: -6.776171684265137
    7. '```' → logprob: -7.776171684265137
    8. '  
' → logprob: -8.401171684265137
    9. ')
' → logprob: -8.901171684265137
    10. 'print' → logprob: -9.276171684265137

Token 349: ' ans' (ID: 3345)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25660809874534607
    2. 'p' → logprob: -2.506608009338379
    3. 'xx' → logprob: -2.756608009338379
    4. 'px' → logprob: -3.756608009338379
    5. 'nx' → logprob: -3.756608009338379
    6. 'i' → logprob: -4.881608009338379
    7. 'X' → logprob: -5.631608009338379
    8. 'ans' → logprob: -5.881608009338379
    9. 'pos' → logprob: -5.881608009338379
    10. 'a' → logprob: -5.881608009338379

Token 350: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038252752274274826
    2. 'in' → logprob: -3.288252830505371
    3. 'x' → logprob: -9.538252830505371
    4. ',' → logprob: -10.413252830505371
    5. ' ' → logprob: -10.413252830505371
    6. '1' → logprob: -10.413252830505371
    7. '_in' → logprob: -11.413252830505371
    8. '_' → logprob: -12.038252830505371
    9. '_x' → logprob: -12.288252830505371
    10. '0' → logprob: -12.413252830505371

Token 351: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -7.505351095460355e-05
    2. ' AN' → logprob: -9.500075340270996
    3. 'ANSWER' → logprob: -16.12507438659668
    4. 'AN' → logprob: -17.37507438659668
    5. 'ANTS' → logprob: -19.37507438659668
    6. '   ' → logprob: -20.00007438659668
    7. 'ans' → logprob: -21.12507438659668
    8. ' ans' → logprob: -21.25007438659668
    9. 'Ans' → logprob: -21.37507438659668
    10. 'ANK' → logprob: -22.00007438659668

Token 352: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: 0.0
    2. '(S' → logprob: -19.25
    3. '[S' → logprob: -20.625
    4. '   ' → logprob: -21.0
    5. ' S' → logprob: -21.125
    6. 'Ｓ' → logprob: -21.25
    7. '	S' → logprob: -21.5
    8. 'SOR' → logprob: -22.75
    9. '*S' → logprob: -23.0
    10. '[' → logprob: -23.125

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18254207074642181
    2. ':
' → logprob: -1.807542085647583
    3. ',' → logprob: -6.932541847229004
    4. 'print' → logprob: -7.307541847229004
    5. '[' → logprob: -8.182541847229004
    6. '.print' → logprob: -8.557541847229004
    7. ' print' → logprob: -8.682541847229004
    8. '   ' → logprob: -8.932541847229004
    9. '):
' → logprob: -9.307541847229004
    10. '.' → logprob: -10.057541847229004

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01977909915149212
    2. '   ' → logprob: -4.269779205322266
    3. ' print' → logprob: -5.394779205322266
    4. '<|end|>' → logprob: -7.644779205322266
    5. 'print' → logprob: -7.894779205322266
    6. '	print' → logprob: -9.769779205322266
    7. '[' → logprob: -10.769779205322266
    8. '        
' → logprob: -11.019779205322266
    9. '(print' → logprob: -11.144779205322266
    10. '(' → logprob: -11.144779205322266

Token 355: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.47511646151542664
    2. 'print' (adapté à ' print') → logprob: -0.975116491317749
    3. '   ' → logprob: -7.35011625289917
    4. '       ' → logprob: -8.100116729736328
    5. '	print' → logprob: -9.600116729736328
    6. '```' → logprob: -10.850116729736328
    7. '.print' → logprob: -12.850116729736328
    8. '#print' → logprob: -13.725116729736328
    9. '           ' → logprob: -14.725116729736328
    10. '<|end|>' → logprob: -15.350116729736328

Token 356: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.21111486852169037
    2. '(ans' → logprob: -1.7111148834228516
    3. 'ans' → logprob: -4.711114883422852
    4. '*' → logprob: -7.336114883422852
    5. '(f' → logprob: -12.336114883422852
    6. '	ans' → logprob: -13.086114883422852
    7. ' ans' → logprob: -14.586114883422852
    8. 'f' → logprob: -14.586114883422852
    9. '*f' → logprob: -15.336114883422852
    10. '(' → logprob: -15.336114883422852

Token 357: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9361264946837764e-07
    2. ' ans' → logprob: -16.25
    3. '(ans' → logprob: -18.375
    4. '	ans' → logprob: -20.625
    5. 'answer' → logprob: -22.75
    6. '   ' → logprob: -23.75
    7. 'ANS' → logprob: -24.0
    8. '[' → logprob: -25.0
    9. '_ans' → logprob: -25.0
    10. 'ann' → logprob: -26.375

Token 358: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.500000953674316
    3. ')`' → logprob: -17.0
    4. '))' → logprob: -17.625
    5. ' )' → logprob: -17.75
    6. '())' → logprob: -18.0
    7. ')}' → logprob: -18.125
    8. '`)' → logprob: -19.25
    9. '),' → logprob: -19.375
    10. '')' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 356
Tokens correctement prédits (1ère position, stricte): 159
Tokens correctement prédits (1ère position, avec adaptation): 170
Tokens correctement prédits (top 10): 321
Précision stricte (1ère position): 44.66%
Précision adaptée (1ère position): 47.75%
Précision (top 10): 90.17%
================================================================================
