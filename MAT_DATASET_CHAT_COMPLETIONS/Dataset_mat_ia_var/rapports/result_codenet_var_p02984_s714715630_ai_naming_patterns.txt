================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_count = int(input())
input_values = list(map(int, input().split()))
total_sum = sum(input_values)
values_length = len(input_values)
half_length = values_length // 2
even_index_sum = 0
for even_index in range(1, half_length + 1):
    even_index_sum += 2 * input_values[2 * (even_index - 1)]
second_value = total_sum - even_index_sum
first_value = input_values[-1] * 2 - second_value
result_values = [first_value]
for current_value in input_values:
    previous_value = result_values[-1]
    next_value = current_value * 2 - previous_value
    result_values.append(next_value)
result_values.pop()
print(*result_values)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25987550616264343
    2. '0' → logprob: -1.5098755359649658
    3. '1' → logprob: -6.009875297546387
    4. ' len' → logprob: -6.259875297546387
    5. ' int' → logprob: -6.384875297546387
    6. ' input' → logprob: -7.509875297546387
    7. 'input' → logprob: -8.259875297546387
    8. '4' → logprob: -8.259875297546387
    9. 'int' → logprob: -8.759875297546387
    10. '"' → logprob: -9.009875297546387

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004273315134923905
    2. '```' → logprob: -9.50042724609375
    3. ''' → logprob: -9.87542724609375
    4. ' (' → logprob: -10.00042724609375
    5. '()' → logprob: -10.00042724609375
    6. '(input' → logprob: -10.50042724609375
    7. '32' → logprob: -10.62542724609375
    8. '('' → logprob: -10.62542724609375
    9. ' ' → logprob: -10.75042724609375
    10. '`' → logprob: -10.87542724609375

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04423190653324127
    2. ')' → logprob: -3.91923189163208
    3. '()' → logprob: -3.91923189163208
    4. '())' → logprob: -5.79423189163208
    5. '('' → logprob: -9.294232368469238
    6. '(
' → logprob: -9.544232368469238
    7. '(()' → logprob: -9.919232368469238
    8. '(""))' → logprob: -9.919232368469238
    9. '```' → logprob: -10.044232368469238
    10. '("("' → logprob: -10.294232368469238

Token 6: 'input' (ID: 2586)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2205172777175903
    2. '*' → logprob: -1.7205172777175903
    3. ')' → logprob: -1.8455172777175903
    4. 'for' → logprob: -2.595517158508301
    5. '+' → logprob: -2.845517158508301
    6. '\n' → logprob: -2.970517158508301
    7. '#' → logprob: -3.345517158508301
    8. ''' → logprob: -3.720517158508301
    9. '>' → logprob: -3.845517158508301
    10. ' ' → logprob: -3.970517158508301

Token 7: '_values' (ID: 20393)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2054617702960968
    2. '(' → logprob: -1.9554617404937744
    3. '_' → logprob: -3.4554617404937744
    4. '_count' → logprob: -5.2054619789123535
    5. '```' → logprob: -6.8304619789123535
    6. '_counts' → logprob: -6.9554619789123535
    7. '_data' → logprob: -7.0804619789123535
    8. '_parent' → logprob: -7.3304619789123535
    9. '('' → logprob: -7.3304619789123535
    10. '().' → logprob: -7.7054619789123535

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4764513075351715
    2. '.' → logprob: -1.1014512777328491
    3. '[]' → logprob: -4.226451396942139
    4. ')' → logprob: -4.351451396942139
    5. '```' → logprob: -5.101451396942139
    6. '[:]' → logprob: -5.851451396942139
    7. '()' → logprob: -6.101451396942139
    8. '.append' → logprob: -6.101451396942139
    9. '[input' → logprob: -6.851451396942139
    10. '_' → logprob: -7.351451396942139

Token 9: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.16097943484783173
    2. ' list' → logprob: -2.7859795093536377
    3. 'input' → logprob: -3.9109795093536377
    4. ' input' → logprob: -4.035979270935059
    5. 'list' → logprob: -4.160979270935059
    6. '[]' → logprob: -4.285979270935059
    7. ' ' → logprob: -4.535979270935059
    8. ' [' → logprob: -5.035979270935059
    9. '[' → logprob: -6.535979270935059
    10. '[input' → logprob: -6.785979270935059

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005930667975917459
    2. '[' → logprob: -8.250593185424805
    3. '```' → logprob: -9.000593185424805
    4. ' (' → logprob: -10.125593185424805
    5. '(range' → logprob: -10.250593185424805
    6. '[(' → logprob: -10.750593185424805
    7. ')' → logprob: -10.750593185424805
    8. '`' → logprob: -10.875593185424805
    9. '(input' → logprob: -11.625593185424805
    10. '(
' → logprob: -11.625593185424805

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04089060425758362
    2. '(' → logprob: -3.290890693664551
    3. '(input' → logprob: -6.165890693664551
    4. '(lambda' → logprob: -7.540890693664551
    5. '(str' → logprob: -9.16589069366455
    6. 'int' → logprob: -10.04089069366455
    7. '(
' → logprob: -10.54089069366455
    8. '(eval' → logprob: -10.91589069366455
    9. '```' → logprob: -12.29089069366455
    10. ')' → logprob: -12.41589069366455

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00509951077401638
    2. ',input' → logprob: -5.380099296569824
    3. 'input' → logprob: -8.755099296569824
    4. '(' → logprob: -8.880099296569824
    5. ',' → logprob: -9.505099296569824
    6. '=input' → logprob: -10.255099296569824
    7. '))' → logprob: -10.255099296569824
    8. ' input' → logprob: -12.130099296569824
    9. '[input' → logprob: -12.255099296569824
    10. '```' → logprob: -12.255099296569824

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1603078991174698
    2. ' input' → logprob: -1.9103078842163086
    3. '(input' → logprob: -9.410307884216309
    4. ',input' → logprob: -14.535307884216309
    5. '	input' → logprob: -14.910307884216309
    6. '=input' → logprob: -15.160307884216309
    7. '<input' → logprob: -15.285307884216309
    8. 'range' → logprob: -15.785307884216309
    9. '```' → logprob: -15.910307884216309
    10. '[input' → logprob: -16.410308837890625

Token 14: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5111440420150757
    2. '())' → logprob: -1.5111440420150757
    3. '()' → logprob: -1.7611440420150757
    4. '().' → logprob: -5.511144161224365
    5. '(' → logprob: -6.511144161224365
    6. '()));' → logprob: -7.261144161224365
    7. '())))' → logprob: -7.886144161224365
    8. '(input' → logprob: -7.886144161224365
    9. '()`' → logprob: -8.761143684387207
    10. '))' → logprob: -9.386143684387207

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005580356228165329
    2. 'strip' → logprob: -7.500557899475098
    3. 'rstrip' → logprob: -12.625557899475098
    4. ' split' → logprob: -13.375557899475098
    5. '(split' → logprob: -16.375558853149414
    6. ')' → logprob: -17.250558853149414
    7. 'spl' → logprob: -17.375558853149414
    8. 'read' → logprob: -17.875558853149414
    9. '.split' → logprob: -18.625558853149414
    10. ' strip' → logprob: -18.750558853149414

Token 16: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.34514132142066956
    2. '))' → logprob: -1.3451412916183472
    3. '())' → logprob: -4.470141410827637
    4. '()' → logprob: -4.595141410827637
    5. ')' → logprob: -4.720141410827637
    6. '(' → logprob: -7.345141410827637
    7. ')))' → logprob: -9.345141410827637
    8. '())))' → logprob: -9.720141410827637
    9. '()))
' → logprob: -10.720141410827637
    10. '()));' → logprob: -10.845141410827637

Token 17: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6817423701286316
    2. 'if' → logprob: -1.6817424297332764
    3. 'sum' → logprob: -2.8067424297332764
    4. ')' → logprob: -3.0567424297332764
    5. 'total' → logprob: -3.5567424297332764
    6. 'result' → logprob: -3.5567424297332764
    7. '[' → logprob: -3.6817424297332764
    8. '#' → logprob: -3.8067424297332764
    9. 's' → logprob: -3.8067424297332764
    10. 'output' → logprob: -4.306742191314697

Token 18: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010947716422379017
    2. '_space' → logprob: -5.3859477043151855
    3. '_sum' → logprob: -6.3859477043151855
    4. '_count' → logprob: -6.6359477043151855
    5. ')' → logprob: -6.8859477043151855
    6. '.' → logprob: -7.5109477043151855
    7. '_counts' → logprob: -7.8859477043151855
    8. '(' → logprob: -8.510948181152344
    9. ' _' → logprob: -8.760948181152344
    10. '_value' → logprob: -9.010948181152344

Token 19: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.783612847328186
    2. ' =' → logprob: -1.408612847328186
    3. '=' → logprob: -1.783612847328186
    4. '+' → logprob: -2.6586127281188965
    5. '_' → logprob: -4.2836127281188965
    6. ' +' → logprob: -4.6586127281188965
    7. ')' → logprob: -4.6586127281188965
    8. '+=' → logprob: -5.0336127281188965
    9. ' ' → logprob: -5.0336127281188965
    10. '(' → logprob: -5.4086127281188965

Token 20: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5801936984062195
    2. ' ' → logprob: -1.4551937580108643
    3. ' sum' → logprob: -2.0801937580108643
    4. ' input' → logprob: -2.8301937580108643
    5. 'sum' → logprob: -4.205193519592285
    6. 'input' → logprob: -4.830193519592285
    7. '(sum' → logprob: -11.830193519592285
    8. ' int' → logprob: -12.080193519592285
    9. ' )' → logprob: -12.080193519592285
    10. ' total' → logprob: -12.455193519592285

Token 21: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.053607795387506485
    2. '(input' → logprob: -3.303607702255249
    3. '(total' → logprob: -4.178607940673828
    4. ' (' → logprob: -10.178607940673828
    5. '('' → logprob: -11.178607940673828
    6. '(user' → logprob: -11.178607940673828
    7. '(
' → logprob: -11.303607940673828
    8. '()' → logprob: -11.678607940673828
    9. '("("' → logprob: -11.928607940673828
    10. '(open' → logprob: -12.428607940673828

Token 22: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.000505730917211622
    2. '_' → logprob: -8.000505447387695
    3. '_count' → logprob: -8.875505447387695
    4. '_value' → logprob: -11.375505447387695
    5. ')_' → logprob: -12.125505447387695
    6. '_counts' → logprob: -12.250505447387695
    7. '_val' → logprob: -12.625505447387695
    8. '_vals' → logprob: -13.000505447387695
    9. ' _' → logprob: -13.500505447387695
    10. ')' → logprob: -14.875505447387695

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019355426775291562
    2. '))' → logprob: -6.2519354820251465
    3. ')))' → logprob: -12.876935958862305
    4. '`)' → logprob: -13.876935958862305
    5. ' )' → logprob: -14.251935958862305
    6. '()' → logprob: -14.251935958862305
    7. ')
' → logprob: -14.376935958862305
    8. '+' → logprob: -14.376935958862305
    9. '[' → logprob: -15.501935958862305
    10. '())' → logprob: -15.626935958862305

Token 24: 'values' (ID: 7222)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20176006853580475
    2. '\n' → logprob: -3.0767600536346436
    3. 'i' → logprob: -3.3267600536346436
    4. '
' → logprob: -3.8267600536346436
    5. 'print' → logprob: -3.8267600536346436
    6. '#' → logprob: -4.201760292053223
    7. '%' → logprob: -4.701760292053223
    8. 'n' → logprob: -5.451760292053223
    9. '```' → logprob: -5.451760292053223
    10. ')' → logprob: -5.576760292053223

Token 25: '_length' (ID: 11514)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23458778858184814
    2. '_' → logprob: -2.4845876693725586
    3. '.' → logprob: -3.6095876693725586
    4. ')' → logprob: -3.6095876693725586
    5. '_count' → logprob: -4.234587669372559
    6. '_counts' → logprob: -4.484587669372559
    7. '[:]' → logprob: -4.734587669372559
    8. '_values' → logprob: -4.859587669372559
    9. '```' → logprob: -5.359587669372559
    10. '[count' → logprob: -5.359587669372559

Token 26: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1629995107650757
    2. ')' → logprob: -1.4129995107650757
    3. '()' → logprob: -1.6629995107650757
    4. '<|end|>' → logprob: -2.9129996299743652
    5. ' =' → logprob: -3.0379996299743652
    6. '(len' → logprob: -3.2879996299743652
    7. ' ' → logprob: -3.2879996299743652
    8. '(input' → logprob: -4.162999629974365
    9. '=' → logprob: -4.537999629974365
    10. '```' → logprob: -4.787999629974365

Token 27: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.10022371262311935
    2. 'len' → logprob: -2.3502237796783447
    3. '(len' → logprob: -11.725223541259766
    4. ' ' → logprob: -12.225223541259766
    5. ' input' → logprob: -13.475223541259766
    6. '[len' → logprob: -14.100223541259766
    7. '  ' → logprob: -14.100223541259766
    8. '	len' → logprob: -14.725223541259766
    9. 'input' → logprob: -15.225223541259766
    10. '=len' → logprob: -15.225223541259766

Token 28: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4820483326911926
    2. '(' → logprob: -0.9820483326911926
    3. '(values' → logprob: -4.857048511505127
    4. '(total' → logprob: -9.857048034667969
    5. ' (' → logprob: -10.607048034667969
    6. '(
' → logprob: -10.732048034667969
    7. '(value' → logprob: -10.982048034667969
    8. '(

' → logprob: -11.107048034667969
    9. '(inputs' → logprob: -11.732048034667969
    10. '(output' → logprob: -12.482048034667969

Token 29: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -2.5941604690160602e-05
    2. '_' → logprob: -10.750025749206543
    3. ')_' → logprob: -13.625025749206543
    4. '_value' → logprob: -14.250025749206543
    5. '_count' → logprob: -14.375025749206543
    6. '(_' → logprob: -14.750025749206543
    7. '_)' → logprob: -15.000025749206543
    8. ')' → logprob: -15.500025749206543
    9. '_counts' → logprob: -15.750025749206543
    10. ' _' → logprob: -15.750025749206543

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002810007717926055
    2. '))' → logprob: -8.25028133392334
    3. ')
' → logprob: -11.62528133392334
    4. '()' → logprob: -12.75028133392334
    5. '())' → logprob: -13.00028133392334
    6. ' )' → logprob: -13.12528133392334
    7. ')))' → logprob: -13.37528133392334
    8. '`)' → logprob: -14.00028133392334
    9. '')' → logprob: -15.37528133392334
    10. '#' → logprob: -15.75028133392334

Token 31: 'half' (ID: 52836)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8318344950675964
    2. 'if' → logprob: -1.2068345546722412
    3. '\n' → logprob: -2.831834554672241
    4. '%' → logprob: -3.081834554672241
    5. '#' → logprob: -3.581834554672241
    6. '%
' → logprob: -4.206834316253662
    7. 'i' → logprob: -4.331834316253662
    8. ' if' → logprob: -4.331834316253662
    9. '' → logprob: -4.456834316253662
    10. 'n' → logprob: -4.581834316253662

Token 32: '_length' (ID: 11514)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010916594415903091
    2. '_total' → logprob: -5.385916709899902
    3. '_sum' → logprob: -5.885916709899902
    4. '_count' → logprob: -6.635916709899902
    5. '_length' → logprob: -7.635916709899902
    6. '_value' → logprob: -7.760916709899902
    7. ' =' → logprob: -8.010916709899902
    8. ' _' → logprob: -8.885916709899902
    9. '_split' → logprob: -9.260916709899902
    10. '_threshold' → logprob: -9.510916709899902

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014792917296290398
    2. '=' → logprob: -4.5147929191589355
    3. '_' → logprob: -5.6397929191589355
    4. ' ' → logprob: -9.139792442321777
    5. ' //' → logprob: -10.764792442321777
    6. '()' → logprob: -11.514792442321777
    7. ' _' → logprob: -11.889792442321777
    8. ' ' → logprob: -12.014792442321777
    9. ' /' → logprob: -12.139792442321777
    10. '(' → logprob: -12.639792442321777

Token 34: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.001723488443531096
    2. 'values' → logprob: -6.376723289489746
    3. ' input' → logprob: -11.876723289489746
    4. '(values' → logprob: -12.001723289489746
    5. ' len' → logprob: -13.126723289489746
    6. ' ' → logprob: -13.376723289489746
    7. '	values' → logprob: -13.751723289489746
    8. 'int' → logprob: -14.001723289489746
    9. ' (' → logprob: -14.001723289489746
    10. 'len' → logprob: -14.251723289489746

Token 35: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.5597102396423e-05
    2. '_' → logprob: -10.750035285949707
    3. '_count' → logprob: -11.500035285949707
    4. '_len' → logprob: -13.250035285949707
    5. '_l' → logprob: -14.125035285949707
    6. '_lengths' → logprob: -15.000035285949707
    7. 'length' → logprob: -15.125035285949707
    8. 's' → logprob: -15.625035285949707
    9. '_LENGTH' → logprob: -15.750035285949707
    10. '```' → logprob: -16.000036239624023

Token 36: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.07633974403142929
    2. '//' → logprob: -2.7013397216796875
    3. ' ' → logprob: -5.3263397216796875
    4. '<|end|>' → logprob: -6.8263397216796875
    5. '#' → logprob: -9.451339721679688
    6. ' >>' → logprob: -10.076339721679688
    7. '```' → logprob: -10.326339721679688
    8. ')' → logprob: -10.326339721679688
    9. '`' → logprob: -10.451339721679688
    10. '<|end|>' → logprob: -10.451339721679688

Token 37: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002185472520068288
    2. ' ' → logprob: -6.127185344696045
    3. '```' → logprob: -15.002185821533203
    4. '1' → logprob: -17.127185821533203
    5. '3' → logprob: -17.627185821533203
    6. '   ' → logprob: -18.002185821533203
    7. '>' → logprob: -18.189685821533203
    8. '  ' → logprob: -18.252185821533203
    9. '۲' → logprob: -18.752185821533203
    10. ' ' → logprob: -18.939685821533203

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '```' → logprob: -15.875066757202148
    4. '3' → logprob: -16.37506675720215
    5. '1' → logprob: -18.37506675720215
    6. '4' → logprob: -19.31256675720215
    7. '  ' → logprob: -19.37506675720215
    8. '   ' → logprob: -19.56256675720215
    9. '=' → logprob: -19.68756675720215
    10. '۲' → logprob: -20.00006675720215

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4243948757648468
    2. 'if' → logprob: -1.2993948459625244
    3. '#' → logprob: -3.9243948459625244
    4. '<|end|>' → logprob: -4.6743950843811035
    5. 'for' → logprob: -4.7993950843811035
    6. 'result' → logprob: -5.2993950843811035
    7. '+' → logprob: -5.2993950843811035
    8. 'n' → logprob: -5.4243950843811035
    9. '\n' → logprob: -5.4243950843811035
    10. ' if' → logprob: -6.1743950843811035

Token 40: 'even' (ID: 28689)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19922976195812225
    2. 'result' → logprob: -2.8242297172546387
    3. '
' → logprob: -3.3242297172546387
    4. 'i' → logprob: -4.074229717254639
    5. 'for' → logprob: -4.199229717254639
    6. '#' → logprob: -5.074229717254639
    7. 'print' → logprob: -5.449229717254639
    8. ' if' → logprob: -5.824229717254639
    9. 'n' → logprob: -5.824229717254639
    10. 'total' → logprob: -5.949229717254639

Token 41: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4361931085586548
    2. '_sum' → logprob: -1.6861931085586548
    3. '_count' → logprob: -2.3111929893493652
    4. '_values' → logprob: -3.3111929893493652
    5. '_indices' → logprob: -5.186192989349365
    6. '_index' → logprob: -5.686192989349365
    7. 's' → logprob: -6.061192989349365
    8. ' =' → logprob: -6.061192989349365
    9. '_counts' → logprob: -6.061192989349365
    10. '_split' → logprob: -6.311192989349365

Token 42: '_sum' (ID: 29859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03365446254611015
    2. '_s' → logprob: -3.7836544513702393
    3. 'es' → logprob: -4.783654689788818
    4. '_values' → logprob: -6.783654689788818
    5. '_indices' → logprob: -7.783654689788818
    6. ' s' → logprob: -9.15865421295166
    7. '_' → logprob: -9.40865421295166
    8. ' =' → logprob: -9.90865421295166
    9. '_sum' → logprob: -10.28365421295166
    10. '=' → logprob: -10.40865421295166

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02407512627542019
    2. '=' → logprob: -3.7740750312805176
    3. ' +=' → logprob: -7.649075031280518
    4. '_' → logprob: -8.399075508117676
    5. ' ' → logprob: -9.274075508117676
    6. '<|end|>' → logprob: -11.649075508117676
    7. ' +' → logprob: -12.274075508117676
    8. '+=' → logprob: -12.399075508117676
    9. '+' → logprob: -12.899075508117676
    10. ' ' → logprob: -13.024075508117676

Token 44: ' ' (ID: 220)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5398479700088501
    2. 'sum' → logprob: -0.9148479700088501
    3. '0' → logprob: -4.1648478507995605
    4. ' ' → logprob: -6.9148478507995605
    5. '(sum' → logprob: -11.039848327636719
    6. ' ' → logprob: -11.539848327636719
    7. '	sum' → logprob: -11.789848327636719
    8. '=sum' → logprob: -12.164848327636719
    9. '+' → logprob: -12.539848327636719
    10. '  ' → logprob: -12.664848327636719

Token 45: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00010390079842181876
    2. ' sum' → logprob: -9.625103950500488
    3. '0' → logprob: -10.250103950500488
    4. '(sum' → logprob: -13.875103950500488
    5. 'total' → logprob: -14.250103950500488
    6. 'input' → logprob: -14.875103950500488
    7. '=sum' → logprob: -15.625103950500488
    8. '	sum' → logprob: -16.125102996826172
    9. ' ' → logprob: -16.250102996826172
    10. '   ' → logprob: -17.375102996826172

Token 46: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02025770954787731
    2. ' for' → logprob: -4.145257472991943
    3. '<|end|>' → logprob: -6.020257472991943
    4. '
' → logprob: -6.395257472991943
    5. '<|end|>' → logprob: -10.270257949829102
    6. '\n' → logprob: -10.395257949829102
    7. ' ' → logprob: -11.020257949829102
    8. '' → logprob: -12.520257949829102
    9. '	for' → logprob: -12.645257949829102
    10. '```' → logprob: -12.770257949829102

Token 47: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028375647962093353
    2. ' for' → logprob: -5.877837657928467
    3. '<|end|>' → logprob: -10.752837181091309
    4. '
' → logprob: -12.002837181091309
    5. '```' → logprob: -12.877837181091309
    6. ' ' → logprob: -14.627837181091309
    7. '<|end|>' → logprob: -14.877837181091309
    8. '\n' → logprob: -15.127837181091309
    9. '	for' → logprob: -15.127837181091309
    10. ')' → logprob: -15.627837181091309

Token 48: ' even' (ID: 1952)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004364609718322754
    2. ' _' → logprob: -5.629364490509033
    3. ' ' → logprob: -7.754364490509033
    4. 'i' → logprob: -8.504364967346191
    5. '_' → logprob: -9.504364967346191
    6. ' index' → logprob: -10.379364967346191
    7. ' ' → logprob: -11.004364967346191
    8. ' idx' → logprob: -12.004364967346191
    9. '_i' → logprob: -13.879364967346191
    10. '  ' → logprob: -13.879364967346191

Token 49: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.052659839391708374
    2. '_i' → logprob: -3.302659749984741
    3. '_idx' → logprob: -5.55265998840332
    4. ' in' → logprob: -5.67765998840332
    5. '_indices' → logprob: -6.05265998840332
    6. '_' → logprob: -6.30265998840332
    7. ' i' → logprob: -7.05265998840332
    8. ' _' → logprob: -7.30265998840332
    9. '_indexes' → logprob: -7.42765998840332
    10. 'i' → logprob: -8.42765998840332

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030118273571133614
    2. 'in' → logprob: -3.655118227005005
    3. 's' → logprob: -6.030118465423584
    4. ' ' → logprob: -6.905118465423584
    5. '_in' → logprob: -9.030117988586426
    6. '_' → logprob: -9.280117988586426
    7. '```' → logprob: -9.655117988586426
    8. 'es' → logprob: -10.280117988586426
    9. '  ' → logprob: -10.905117988586426
    10. ',' → logprob: -11.155117988586426

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889717072248459
    2. 'range' → logprob: -2.57889723777771
    3. '	range' → logprob: -12.203897476196289
    4. ' ' → logprob: -13.203897476196289
    5. '(range' → logprob: -15.328897476196289
    6. ' ' → logprob: -15.828897476196289
    7. '```' → logprob: -16.70389747619629
    8. '   ' → logprob: -16.82889747619629
    9. '  ' → logprob: -17.45389747619629
    10. '_range' → logprob: -17.45389747619629

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -15.75
    3. '(e' → logprob: -16.5
    4. '0' → logprob: -17.125
    5. '(-' → logprob: -17.5
    6. '(
' → logprob: -17.5
    7. '((' → logprob: -18.875
    8. ' ' → logprob: -19.5
    9. '(start' → logprob: -19.5
    10. '(value' → logprob: -19.625

Token 53: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000181372175575234
    2. ' ' → logprob: -8.875181198120117
    3. '2' → logprob: -10.500181198120117
    4. '   ' → logprob: -12.000181198120117
    5. ')' → logprob: -13.250181198120117
    6. '```' → logprob: -13.500181198120117
    7. 'even' → logprob: -13.750181198120117
    8. '1' → logprob: -14.375181198120117
    9. '	' → logprob: -14.875181198120117
    10. '۰' → logprob: -14.875181198120117

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.408677290892228e-05
    2. ' ,' → logprob: -10.5000638961792
    3. ',len' → logprob: -10.7500638961792
    4. '0' → logprob: -11.5000638961792
    5. ',value' → logprob: -13.1250638961792
    6. 'values' → logprob: -14.2500638961792
    7. '2' → logprob: -14.8750638961792
    8. ',length' → logprob: -15.1250638961792
    9. '6' → logprob: -15.2500638961792
    10. ' ' → logprob: -15.6250638961792

Token 55: ' half' (ID: 6375)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.010281291790306568
    2. ' values' → logprob: -4.885281085968018
    3. 'half' → logprob: -6.760281085968018
    4. 'total' → logprob: -7.135281085968018
    5. 'len' → logprob: -7.885281085968018
    6. 'input' → logprob: -9.385281562805176
    7. 'even' → logprob: -9.885281562805176
    8. '	values' → logprob: -10.010281562805176
    9. 'value' → logprob: -10.260281562805176
    10. ' half' → logprob: -10.510281562805176

Token 56: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0001817297888919711
    2. '+' → logprob: -9.750182151794434
    3. '_l' → logprob: -10.000182151794434
    4. '_index' → logprob: -10.750182151794434
    5. ' _' → logprob: -11.250182151794434
    6. '_len' → logprob: -11.625182151794434
    7. '_le' → logprob: -11.750182151794434
    8. 'length' → logprob: -11.875182151794434
    9. '_' → logprob: -12.250182151794434
    10. ')' → logprob: -12.500182151794434

Token 57: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5255094766616821
    2. ' *' → logprob: -0.9005094766616821
    3. ',' → logprob: -6.650509357452393
    4. ' ' → logprob: -7.775509357452393
    5. ' ,' → logprob: -8.77550983428955
    6. ' +' → logprob: -9.02550983428955
    7. '+' → logprob: -9.02550983428955
    8. '):' → logprob: -9.52550983428955
    9. '   ' → logprob: -9.90050983428955
    10. '2' → logprob: -9.90050983428955

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02337196283042431
    2. ' ' → logprob: -3.773371934890747
    3. '2' → logprob: -9.023371696472168
    4. '   ' → logprob: -13.273371696472168
    5. ')' → logprob: -13.648371696472168
    6. '+' → logprob: -14.148371696472168
    7. '  ' → logprob: -15.085871696472168
    8. '```' → logprob: -15.085871696472168
    9. ',' → logprob: -15.460871696472168
    10. ' +' → logprob: -15.648371696472168

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011409306898713112
    2. '2' → logprob: -7.12614107131958
    3. ' ' → logprob: -8.001140594482422
    4. '0' → logprob: -15.501140594482422
    5. '   ' → logprob: -15.626140594482422
    6. '```' → logprob: -15.751140594482422
    7. '+' → logprob: -16.188640594482422
    8. ')' → logprob: -16.376140594482422
    9. 'half' → logprob: -16.438640594482422
    10. '  ' → logprob: -16.501140594482422

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15570181608200073
    2. ',' → logprob: -2.5307018756866455
    3. '*' → logprob: -2.9057018756866455
    4. ' *' → logprob: -5.530701637268066
    5. ')' → logprob: -5.655701637268066
    6. ':' → logprob: -6.655701637268066
    7. '):
' → logprob: -7.030701637268066
    8. ' ):' → logprob: -9.905701637268066
    9. ' ,' → logprob: -10.030701637268066
    10. '   ' → logprob: -10.155701637268066

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04337616637349129
    2. 'even' → logprob: -4.1683759689331055
    3. '    ' → logprob: -5.1683759689331055
    4. ':' → logprob: -5.1683759689331055
    5. ' even' → logprob: -5.4183759689331055
    6. ' ' → logprob: -5.4183759689331055
    7. '<|end|>' → logprob: -6.1683759689331055
    8. '[' → logprob: -7.2933759689331055
    9. '_even' → logprob: -7.2933759689331055
    10. '    
' → logprob: -7.6683759689331055

Token 62: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.6366763114929199
    2. 'even' (adapté à ' even') → logprob: -0.8866763114929199
    3. ' total' → logprob: -3.88667631149292
    4. ' ' → logprob: -4.26167631149292
    5. '   ' → logprob: -4.38667631149292
    6. 'total' → logprob: -5.13667631149292
    7. '_even' → logprob: -6.63667631149292
    8. '    ' → logprob: -6.76167631149292
    9. ' input' → logprob: -7.01167631149292
    10. '0' → logprob: -7.13667631149292

Token 63: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00010103991371579468
    2. '_' → logprob: -9.625101089477539
    3. '_indices' → logprob: -11.375101089477539
    4. ' _' → logprob: -11.500101089477539
    5. '_indexes' → logprob: -12.250101089477539
    6. 's' → logprob: -13.750101089477539
    7. ')' → logprob: -13.875101089477539
    8. '_value' → logprob: -14.250101089477539
    9. '```' → logprob: -14.375101089477539
    10. '[' → logprob: -14.625101089477539

Token 64: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3680030405521393
    2. '_' → logprob: -1.368003010749817
    3. ' _' → logprob: -3.2430031299591064
    4. '*' → logprob: -5.118002891540527
    5. '_index' → logprob: -5.618002891540527
    6. ' *' → logprob: -5.993002891540527
    7. '_s' → logprob: -7.618002891540527
    8. ' ' → logprob: -8.243002891540527
    9. '```' → logprob: -8.368002891540527
    10. '*_' → logprob: -8.493002891540527

Token 65: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0032930902671068907
    2. '+=' → logprob: -5.753293037414551
    3. '+' → logprob: -10.00329303741455
    4. ' +' → logprob: -10.00329303741455
    5. ' -=' → logprob: -12.00329303741455
    6. '    ' → logprob: -12.25329303741455
    7. ' ' → logprob: -12.25329303741455
    8. '   ' → logprob: -12.62829303741455
    9. '<|end|>' → logprob: -13.62829303741455
    10. '```' → logprob: -14.50329303741455

Token 66: ' ' (ID: 220)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47421708703041077
    2. 'input' → logprob: -0.9742170572280884
    3. ' ' → logprob: -10.224217414855957
    4. '   ' → logprob: -10.974217414855957
    5. ' values' → logprob: -11.099217414855957
    6. ' even' → logprob: -11.224217414855957
    7. 'even' → logprob: -11.599217414855957
    8. 'int' → logprob: -11.849217414855957
    9. '(input' → logprob: -12.349217414855957
    10. 'values' → logprob: -12.349217414855957

Token 67: '2' (ID: 17)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009364743018522859
    2. ' input' → logprob: -7.000936508178711
    3. 'even' → logprob: -11.500936508178711
    4. 'values' → logprob: -12.125936508178711
    5. '(input' → logprob: -13.250936508178711
    6. 'int' → logprob: -13.250936508178711
    7. '   ' → logprob: -13.750936508178711
    8. '2' → logprob: -13.875936508178711
    9. 'total' → logprob: -14.500936508178711
    10. 'value' → logprob: -14.750936508178711

Token 68: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.038272593170404434
    2. '*' → logprob: -3.2882726192474365
    3. ' ' → logprob: -9.288272857666016
    4. 'even' → logprob: -10.288272857666016
    5. '<|end|>' → logprob: -10.788272857666016
    6. '0' → logprob: -11.538272857666016
    7. '[' → logprob: -11.663272857666016
    8. ' **' → logprob: -11.663272857666016
    9. '```' → logprob: -12.163272857666016
    10. ' +' → logprob: -12.288272857666016

Token 69: ' input' (ID: 3422)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.7687649726867676
    2. 'input' → logprob: -1.3937649726867676
    3. ' input' → logprob: -1.7687649726867676
    4. ' even' → logprob: -2.1437649726867676
    5. ' ' → logprob: -8.51876449584961
    6. '(input' → logprob: -9.76876449584961
    7. 'e' → logprob: -10.14376449584961
    8. ' ' → logprob: -10.95626449584961
    9. '[input' → logprob: -11.26876449584961
    10. ' (' → logprob: -11.33126449584961

Token 70: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.2471589798224159e-05
    2. '_' → logprob: -11.875012397766113
    3. '_value' → logprob: -13.375012397766113
    4. '_count' → logprob: -13.375012397766113
    5. '[_' → logprob: -14.625012397766113
    6. 'values' → logprob: -14.750012397766113
    7. '_index' → logprob: -15.000012397766113
    8. 'Values' → logprob: -15.625012397766113
    9. '_counts' → logprob: -15.750012397766113
    10. '_vals' → logprob: -15.875012397766113

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00019340807921253145
    2. '[e' → logprob: -8.62519359588623
    3. '```' → logprob: -12.00019359588623
    4. '[
' → logprob: -12.87519359588623
    5. '[(' → logprob: -13.50019359588623
    6. 'even' → logprob: -13.87519359588623
    7. '[...]' → logprob: -14.37519359588623
    8. ' [' → logprob: -14.62519359588623
    9. '[-' → logprob: -15.00019359588623
    10. '[`' → logprob: -15.12519359588623

Token 72: '2' (ID: 17)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.055631279945373535
    2. '2' → logprob: -3.180631160736084
    3. ' even' → logprob: -4.430631160736084
    4. ' ' → logprob: -8.305631637573242
    5. '(' → logprob: -8.430631637573242
    6. ' (' → logprob: -10.305631637573242
    7. '0' → logprob: -10.305631637573242
    8. '_even' → logprob: -10.555631637573242
    9. '[' → logprob: -10.680631637573242
    10. 'e' → logprob: -11.555631637573242

Token 73: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.006570892408490181
    2. ' *' → logprob: -5.381570816040039
    3. 'even' → logprob: -6.256570816040039
    4. '_even' → logprob: -11.131570816040039
    5. ' even' → logprob: -11.381570816040039
    6. ' ' → logprob: -13.006570816040039
    7. ']' → logprob: -14.506570816040039
    8. '   ' → logprob: -14.631570816040039
    9. '0' → logprob: -15.006570816040039
    10. '*(' → logprob: -15.256570816040039

Token 74: ' (' (ID: 350)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.0009201543871313334
    2. ' even' → logprob: -7.000920295715332
    3. '_even' → logprob: -12.375920295715332
    4. 'e' → logprob: -12.625920295715332
    5. ' ' → logprob: -15.125920295715332
    6. '   ' → logprob: -15.750920295715332
    7. 'equal' → logprob: -15.750920295715332
    8. 'Even' → logprob: -16.625919342041016
    9. '<|end|>' → logprob: -16.750919342041016
    10. ')' → logprob: -16.750919342041016

Token 75: 'even' (ID: 28689)
  Prédit: 'even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.0005564896273426712
    2. ' even' → logprob: -7.500556468963623
    3. ' ' → logprob: -14.000556945800781
    4. '_even' → logprob: -14.250556945800781
    5. ')' → logprob: -14.500556945800781
    6. '   ' → logprob: -14.750556945800781
    7. 'e' → logprob: -15.375556945800781
    8. 'evenodd' → logprob: -15.750556945800781
    9. '<|end|>' → logprob: -15.750556945800781
    10. 'Even' → logprob: -16.12555694580078

Token 76: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0030776485800743103
    2. 'dex' → logprob: -6.378077507019043
    3. 'index' → logprob: -6.753077507019043
    4. 'd' → logprob: -9.753077507019043
    5. 'ex' → logprob: -10.003077507019043
    6. '_' → logprob: -10.128077507019043
    7. 'x' → logprob: -11.003077507019043
    8. 'nd' → logprob: -11.378077507019043
    9. ' index' → logprob: -11.878077507019043
    10. '-' → logprob: -12.378077507019043

Token 77: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6386721730232239
    2. ' -' → logprob: -1.138672113418579
    3. ')' → logprob: -2.138672113418579
    4. ')]' → logprob: -3.763672113418579
    5. ' )' → logprob: -5.638672351837158
    6. '1' → logprob: -5.888672351837158
    7. ' ' → logprob: -6.013672351837158
    8. '   ' → logprob: -7.513672351837158
    9. ']' → logprob: -7.763672351837158
    10. ')-' → logprob: -8.138671875

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006981384940445423
    2. ' ' → logprob: -7.375698089599609
    3. ')' → logprob: -9.62569808959961
    4. '0' → logprob: -12.87569808959961
    5. '<|end|>' → logprob: -13.25069808959961
    6. '2' → logprob: -15.18819808959961
    7. ' )' → logprob: -15.37569808959961
    8. '   ' → logprob: -15.62569808959961
    9. '  ' → logprob: -15.75069808959961
    10. '<|end|>' → logprob: -16.31319808959961

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.500018119812012
    3. ')' → logprob: -12.125018119812012
    4. '0' → logprob: -13.750018119812012
    5. '```' → logprob: -15.437518119812012
    6. '<|end|>' → logprob: -15.875018119812012
    7. '2' → logprob: -16.000017166137695
    8. '   ' → logprob: -16.375017166137695
    9. ')]' → logprob: -16.687517166137695
    10. '  ' → logprob: -17.375017166137695

Token 80: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3915797770023346
    2. ')])' → logprob: -1.1415797472000122
    3. ')' → logprob: -5.516579627990723
    4. ' )' → logprob: -8.391579627990723
    5. '])]' → logprob: -8.891579627990723
    6. '+' → logprob: -9.266579627990723
    7. ']' → logprob: -9.391579627990723
    8. ')])
' → logprob: -10.141579627990723
    9. '])' → logprob: -10.141579627990723
    10. '   ' → logprob: -11.516579627990723

Token 81: 'second' (ID: 13901)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2522149085998535
    2. 'if' → logprob: -2.8772149085998535
    3. '#' → logprob: -3.3772149085998535
    4. ')' → logprob: -3.3772149085998535
    5. ' ' → logprob: -4.3772149085998535
    6. 'result' → logprob: -4.3772149085998535
    7. '
' → logprob: -4.7522149085998535
    8. 'even' → logprob: -4.7522149085998535
    9. '```' → logprob: -4.8772149085998535
    10. '+' → logprob: -5.0022149085998535

Token 82: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010684162843972445
    2. '_space' → logprob: -8.501068115234375
    3. ' _' → logprob: -8.626068115234375
    4. '_a' → logprob: -8.751068115234375
    5. '_half' → logprob: -9.376068115234375
    6. '_index' → logprob: -10.126068115234375
    7. '_s' → logprob: -10.251068115234375
    8. '_
' → logprob: -10.251068115234375
    9. '_sum' → logprob: -10.376068115234375
    10. 'ary' → logprob: -10.626068115234375

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5066200494766235
    2. '_' → logprob: -1.2566200494766235
    3. 's' → logprob: -3.256619930267334
    4. '=' → logprob: -3.256619930267334
    5. ' ' → logprob: -3.631619930267334
    6. '[' → logprob: -5.756619930267334
    7. '<|end|>' → logprob: -6.256619930267334
    8. ')' → logprob: -7.131619930267334
    9. '  ' → logprob: -7.881619930267334
    10. '_s' → logprob: -7.881619930267334

Token 84: ' total' (ID: 3609)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2377929836511612
    2. ' total' → logprob: -1.86279296875
    3. 'input' → logprob: -3.73779296875
    4. 'total' → logprob: -4.23779296875
    5. ' even' → logprob: -4.98779296875
    6. ' ' → logprob: -5.11279296875
    7. ' values' → logprob: -6.11279296875
    8. ' half' → logprob: -6.73779296875
    9. 'even' → logprob: -7.48779296875
    10. ' int' → logprob: -8.11279296875

Token 85: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0022386356722563505
    2. '_' → logprob: -6.252238750457764
    3. '_value' → logprob: -8.752238273620605
    4. '_s' → logprob: -9.252238273620605
    5. '_index' → logprob: -10.502238273620605
    6. '_split' → logprob: -11.502238273620605
    7. ' _' → logprob: -12.252238273620605
    8. '_values' → logprob: -12.627238273620605
    9. '_val' → logprob: -12.752238273620605
    10. '_count' → logprob: -13.002238273620605

Token 86: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014878424815833569
    2. '-' → logprob: -4.639878273010254
    3. ' ' → logprob: -5.764878273010254
    4. ' +' → logprob: -6.764878273010254
    5. '+' → logprob: -7.639878273010254
    6. '[' → logprob: -8.764878273010254
    7. ' //' → logprob: -9.514878273010254
    8. '<|end|>' → logprob: -9.889878273010254
    9. ' /' → logprob: -11.514878273010254
    10. ' ' → logprob: -11.889878273010254

Token 87: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.2823268175125122
    2. ' even' → logprob: -1.4073268175125122
    3. '2' → logprob: -7.657326698303223
    4. ' ' → logprob: -7.782326698303223
    5. ' input' → logprob: -9.657326698303223
    6. 'input' → logprob: -10.282326698303223
    7. '_even' → logprob: -10.657326698303223
    8. ' ' → logprob: -10.719826698303223
    9. '   ' → logprob: -10.844826698303223
    10. 'evenodd' → logprob: -11.657326698303223

Token 88: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0011602196609601378
    2. 'x' → logprob: -6.876160144805908
    3. 'index' → logprob: -9.876160621643066
    4. '_' → logprob: -9.876160621643066
    5. '_value' → logprob: -11.876160621643066
    6. 't' → logprob: -12.501160621643066
    7. 'ex' → logprob: -12.626160621643066
    8. 'd' → logprob: -13.376160621643066
    9. '_x' → logprob: -13.376160621643066
    10. 'g' → logprob: -13.751160621643066

Token 89: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3697807192802429
    2. '_index' → logprob: -1.4947807788848877
    3. '_' → logprob: -3.4947807788848877
    4. 's' → logprob: -3.7447807788848877
    5. '_s' → logprob: -3.8697807788848877
    6. ' _' → logprob: -5.744780540466309
    7. '```' → logprob: -6.869780540466309
    8. '_idx' → logprob: -7.119780540466309
    9. '_count' → logprob: -7.119780540466309
    10. '_value' → logprob: -7.244780540466309

Token 90: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.919763445854187
    2. '[' → logprob: -1.794763445854187
    3. ')' → logprob: -2.1697635650634766
    4. '<|end|>' → logprob: -2.2947635650634766
    5. ' ' → logprob: -2.6697635650634766
    6. '+' → logprob: -3.2947635650634766
    7. '#' → logprob: -4.044763565063477
    8. '-' → logprob: -4.169763565063477
    9. '```' → logprob: -4.419763565063477
    10. '0' → logprob: -4.544763565063477

Token 91: 'first' (ID: 7743)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5808984041213989
    2. ' ' → logprob: -1.705898404121399
    3. '<|end|>' → logprob: -2.9558982849121094
    4. '\n' → logprob: -3.3308982849121094
    5. '
' → logprob: -3.4558982849121094
    6. ')' → logprob: -3.9558982849121094
    7. 'n' → logprob: -3.9558982849121094
    8. '+' → logprob: -4.205898284912109
    9. '#' → logprob: -4.330898284912109
    10. '.' → logprob: -4.580898284912109

Token 92: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0235743448138237
    2. '_' → logprob: -3.7735743522644043
    3. '_val' → logprob: -8.773573875427246
    4. '_index' → logprob: -9.023573875427246
    5. '_values' → logprob: -11.398573875427246
    6. '_variable' → logprob: -12.023573875427246
    7. ' _' → logprob: -12.398573875427246
    8. '_second' → logprob: -12.523573875427246
    9. '_sum' → logprob: -12.648573875427246
    10. '_input' → logprob: -12.898573875427246

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018891390413045883
    2. '=' → logprob: -4.143891334533691
    3. '_' → logprob: -6.018891334533691
    4. ' ' → logprob: -8.643891334533691
    5. ',' → logprob: -9.268891334533691
    6. ')' → logprob: -10.268891334533691
    7. '[' → logprob: -10.393891334533691
    8. '<|end|>' → logprob: -10.643891334533691
    9. ' _' → logprob: -11.393891334533691
    10. ' +=' → logprob: -12.268891334533691

Token 94: ' input' (ID: 3422)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.3568366765975952
    2. ' second' → logprob: -1.2318366765975952
    3. 'total' → logprob: -5.981836795806885
    4. 'input' → logprob: -6.481836795806885
    5. 'even' → logprob: -6.606836795806885
    6. ' total' → logprob: -6.981836795806885
    7. ' input' → logprob: -7.231836795806885
    8. ' even' → logprob: -7.856836795806885
    9. '(second' → logprob: -7.981836795806885
    10. ' ' → logprob: -8.731836318969727

Token 95: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.023706018924713135
    2. '_count' → logprob: -3.7737059593200684
    3. '_' → logprob: -8.273706436157227
    4. '_counts' → logprob: -8.773706436157227
    5. '()' → logprob: -10.898706436157227
    6. '_value' → logprob: -11.773706436157227
    7. '(' → logprob: -11.898706436157227
    8. '_vals' → logprob: -12.523706436157227
    9. '_sum' → logprob: -12.898706436157227
    10. 's' → logprob: -13.523706436157227

Token 96: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.505351095460355e-05
    2. '[:]' → logprob: -11.000075340270996
    3. '[-' → logprob: -11.125075340270996
    4. '[
' → logprob: -12.000075340270996
    5. '_[' → logprob: -12.250075340270996
    6. '[_' → logprob: -12.375075340270996
    7. '<|end|>' → logprob: -12.375075340270996
    8. '[::-' → logprob: -12.875075340270996
    9. '[:' → logprob: -12.875075340270996
    10. ' [' → logprob: -13.000075340270996

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02653459832072258
    2. '2' → logprob: -3.6515345573425293
    3. '3' → logprob: -9.026535034179688
    4. ' ' → logprob: -9.401535034179688
    5. '4' → logprob: -11.651535034179688
    6. '5' → logprob: -12.589035034179688
    7. '(' → logprob: -12.714035034179688
    8. ')' → logprob: -13.151535034179688
    9. '6' → logprob: -13.401535034179688
    10. '0' → logprob: -13.839035034179688

Token 98: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4983493387699127
    2. ' -' → logprob: -1.3733493089675903
    3. ']' → logprob: -2.24834942817688
    4. '-' → logprob: -3.74834942817688
    5. ' )' → logprob: -4.998349189758301
    6. ' ]' → logprob: -6.248349189758301
    7. '+' → logprob: -7.498349189758301
    8. ' ' → logprob: -7.873349189758301
    9. ' +' → logprob: -8.2483491897583
    10. '])' → logprob: -10.2483491897583

Token 99: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.656744122505188
    2. '<|end|>' → logprob: -1.156744122505188
    3. ')' → logprob: -2.7817440032958984
    4. '+' → logprob: -3.4067440032958984
    5. '*' → logprob: -3.7817440032958984
    6. '\n' → logprob: -3.9067440032958984
    7. '#' → logprob: -4.406744003295898
    8. ']' → logprob: -5.781744003295898
    9. '%' → logprob: -6.031744003295898
    10. '-' → logprob: -6.156744003295898

Token 100: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03928254172205925
    2. '2' → logprob: -3.2892825603485107
    3. ' -' → logprob: -7.539282321929932
    4. ' second' → logprob: -8.41428279876709
    5. ' input' → logprob: -9.28928279876709
    6. ' (' → logprob: -9.28928279876709
    7. ' values' → logprob: -9.78928279876709
    8. '3' → logprob: -10.16428279876709
    9. 'second' → logprob: -10.28928279876709
    10. 'values' → logprob: -10.66428279876709

Token 101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.024601344019174576
    2. ' ' → logprob: -4.024601459503174
    3. '-' → logprob: -6.024601459503174
    4. '3' → logprob: -6.399601459503174
    5. ' -' → logprob: -7.149601459503174
    6. '1' → logprob: -7.899601459503174
    7. 'input' → logprob: -8.274600982666016
    8. 'second' → logprob: -8.274600982666016
    9. 'values' → logprob: -9.024600982666016
    10. 'first' → logprob: -9.149600982666016

Token 102: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.014300662092864513
    2. ' second' → logprob: -4.26430082321167
    3. 'total' → logprob: -9.889300346374512
    4. 'first' → logprob: -10.139300346374512
    5. 'even' → logprob: -10.389300346374512
    6. ' ' → logprob: -12.639300346374512
    7. ' total' → logprob: -13.139300346374512
    8. '   ' → logprob: -13.514300346374512
    9. '	second' → logprob: -13.514300346374512
    10. ' first' → logprob: -13.764300346374512

Token 104: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.6696149840718135e-05
    2. '_' → logprob: -10.125056266784668
    3. '_val' → logprob: -11.750056266784668
    4. '_values' → logprob: -12.500056266784668
    5. '```' → logprob: -13.000056266784668
    6. '_variable' → logprob: -14.625056266784668
    7. '_code' → logprob: -14.875056266784668
    8. '_version' → logprob: -15.375056266784668
    9. '_Value' → logprob: -15.375056266784668
    10. '_index' → logprob: -15.500056266784668

Token 105: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6589471101760864
    2. '<|end|>' → logprob: -1.2839471101760864
    3. '\n' → logprob: -2.283946990966797
    4. ')' → logprob: -3.033946990966797
    5. '#' → logprob: -3.783946990966797
    6. '```' → logprob: -4.033946990966797
    7. '
' → logprob: -5.408946990966797
    8. 'first' → logprob: -6.908946990966797
    9. '<|end|>' → logprob: -6.908946990966797
    10. ' ' → logprob: -7.283946990966797

Token 107: '_values' (ID: 20393)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5002554059028625
    2. 's' → logprob: -1.0002553462982178
    3. '=' → logprob: -3.7502553462982178
    4. '_' → logprob: -6.125255584716797
    5. '[]' → logprob: -9.875255584716797
    6. '_s' → logprob: -11.250255584716797
    7. '.' → logprob: -11.250255584716797
    8. '[:]' → logprob: -11.250255584716797
    9. ' ' → logprob: -11.500255584716797
    10. '=[]' → logprob: -11.625255584716797

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032584001310169697
    2. '=' → logprob: -5.878258228302002
    3. '_' → logprob: -8.87825870513916
    4. '[' → logprob: -8.87825870513916
    5. '.append' → logprob: -9.75325870513916
    6. ' ' → logprob: -10.75325870513916
    7. '.' → logprob: -11.00325870513916
    8. '[]' → logprob: -11.00325870513916
    9. '[:]' → logprob: -11.00325870513916
    10. '<|end|>' → logprob: -11.37825870513916

Token 109: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4286305606365204
    2. '[input' → logprob: -1.6786305904388428
    3. '[' → logprob: -1.9286305904388428
    4. ' []' → logprob: -4.678630352020264
    5. '[]' → logprob: -5.428630352020264
    6. '[first' → logprob: -6.053630352020264
    7. ' ' → logprob: -8.928630828857422
    8. '[int' → logprob: -9.428630828857422
    9. ' input' → logprob: -9.678630828857422
    10. '[result' → logprob: -10.053630828857422

Token 110: 'first' (ID: 7743)
  Prédit: 'first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.000583653396461159
    2. ' first' → logprob: -7.500583648681641
    3. 'input' → logprob: -11.37558364868164
    4. 'second' → logprob: -12.12558364868164
    5. '[first' → logprob: -12.75058364868164
    6. '(first' → logprob: -12.87558364868164
    7. ']' → logprob: -12.87558364868164
    8. '0' → logprob: -12.87558364868164
    9. '   ' → logprob: -14.37558364868164
    10. '	first' → logprob: -14.50058364868164

Token 111: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00010342398309148848
    2. '_' → logprob: -9.500102996826172
    3. '_val' → logprob: -11.625102996826172
    4. '_]' → logprob: -12.375102996826172
    5. ']' → logprob: -12.500102996826172
    6. ' _' → logprob: -13.000102996826172
    7. '_values' → logprob: -13.125102996826172
    8. ']_' → logprob: -13.500102996826172
    9. 'value' → logprob: -13.750102996826172
    10. ',' → logprob: -14.125102996826172

Token 112: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0303054116666317
    2. ',' → logprob: -3.5303053855895996
    3. ' ]' → logprob: -7.5303053855896
    4. ')' → logprob: -12.155305862426758
    5. ',
' → logprob: -12.405305862426758
    6. ']
' → logprob: -13.030305862426758
    7. ')]' → logprob: -13.280305862426758
    8. ' ,' → logprob: -13.655305862426758
    9. ']

' → logprob: -14.405305862426758
    10. '<|end|>' → logprob: -14.905305862426758

Token 113: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005243002902716398
    2. 'result' → logprob: -5.880242824554443
    3. 'current' → logprob: -6.380242824554443
    4. ' for' → logprob: -8.255243301391602
    5. 'i' → logprob: -8.630243301391602
    6. '```' → logprob: -8.755243301391602
    7. 'prev' → logprob: -10.005243301391602
    8. 'index' → logprob: -10.505243301391602
    9. 'previous' → logprob: -11.380243301391602
    10. ',' → logprob: -11.630243301391602

Token 114: ' current' (ID: 2208)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6370746493339539
    2. 'i' → logprob: -0.7620746493339539
    3. ' index' → logprob: -6.0120744705200195
    4. 'index' → logprob: -6.6370744705200195
    5. ' even' → logprob: -8.76207447052002
    6. ' idx' → logprob: -8.76207447052002
    7. 'even' → logprob: -9.01207447052002
    8. ' ' → logprob: -9.76207447052002
    9. 'idx' → logprob: -10.01207447052002
    10. ' value' → logprob: -10.13707447052002

Token 115: '_value' (ID: 6734)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.1363643854856491
    2. ' in' → logprob: -2.511364459991455
    3. '_value' → logprob: -3.136364459991455
    4. '_' → logprob: -7.011364459991455
    5. ' _' → logprob: -7.511364459991455
    6. '_i' → logprob: -7.761364459991455
    7. ' ' → logprob: -8.011363983154297
    8. '_idx' → logprob: -8.511363983154297
    9. ' i' → logprob: -8.761363983154297
    10. '_val' → logprob: -9.511363983154297

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011722330003976822
    2. 'in' → logprob: -4.511722564697266
    3. ' ' → logprob: -7.886722564697266
    4. '_in' → logprob: -9.261722564697266
    5. '_index' → logprob: -9.261722564697266
    6. 's' → logprob: -10.761722564697266
    7. ',' → logprob: -11.011722564697266
    8. '_' → logprob: -11.136722564697266
    9. '_idx' → logprob: -11.636722564697266
    10. 'index' → logprob: -11.886722564697266

Token 117: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7971190810203552
    2. ' input' → logprob: -0.7971190810203552
    3. ' range' → logprob: -2.797119140625
    4. 'range' → logprob: -3.297119140625
    5. ' values' → logprob: -8.297119140625
    6. 'values' → logprob: -8.547119140625
    7. 'result' → logprob: -9.047119140625
    8. ' ' → logprob: -9.672119140625
    9. ' result' → logprob: -10.422119140625
    10. '[input' → logprob: -10.797119140625

Token 118: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00023119196703191847
    2. 'values' → logprob: -9.00023078918457
    3. '_' → logprob: -10.00023078918457
    4. 'put' → logprob: -10.12523078918457
    5. 's' → logprob: -11.75023078918457
    6. 'ed' → logprob: -12.12523078918457
    7. 'al' → logprob: -13.25023078918457
    8. '_value' → logprob: -13.37523078918457
    9. ' _' → logprob: -13.87523078918457
    10. '_vals' → logprob: -13.87523078918457

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009370578452944756
    2. '[' → logprob: -5.384370803833008
    3. ':
' → logprob: -5.384370803833008
    4. '[:-' → logprob: -8.884370803833008
    5. ' :' → logprob: -12.009370803833008
    6. '   ' → logprob: -12.509370803833008
    7. '[current' → logprob: -14.384370803833008
    8. ':
' → logprob: -14.384370803833008
    9. ':

' → logprob: -14.759370803833008
    10. '[:' → logprob: -15.384370803833008

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20293007791042328
    2. ' result' → logprob: -1.7029300928115845
    3. 'result' → logprob: -6.952929973602295
    4. ' current' → logprob: -7.827929973602295
    5. '	result' → logprob: -9.952930450439453
    6. '    
' → logprob: -10.952930450439453
    7. '```' → logprob: -11.327930450439453
    8. ' new' → logprob: -11.452930450439453
    9. '
' → logprob: -11.577930450439453
    10. ' last' → logprob: -11.702930450439453

Token 121: ' previous' (ID: 5880)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.592846155166626
    2. '   ' → logprob: -1.467846155166626
    3. 'result' → logprob: -1.592846155166626
    4. ' next' → logprob: -5.092845916748047
    5. 'next' → logprob: -6.342845916748047
    6. ' current' → logprob: -6.592845916748047
    7. ' new' → logprob: -6.967845916748047
    8. ' previous' → logprob: -7.092845916748047
    9. 'current' → logprob: -7.342845916748047
    10. 'previous' (adapté à ' previous') → logprob: -7.592845916748047

Token 122: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0006851525395177305
    2. ' =' → logprob: -7.625685214996338
    3. '_' → logprob: -9.25068473815918
    4. '=' → logprob: -9.75068473815918
    5. '_sum' → logprob: -10.87568473815918
    6. '_val' → logprob: -11.12568473815918
    7. '_result' → logprob: -12.62568473815918
    8. 'value' → logprob: -12.87568473815918
    9. '_values' → logprob: -13.75068473815918
    10. '_=' → logprob: -14.25068473815918

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520410120487213
    2. '=' → logprob: -1.502040982246399
    3. '+' → logprob: -10.25204086303711
    4. ' +' → logprob: -10.37704086303711
    5. ' +=' → logprob: -11.75204086303711
    6. '.append' → logprob: -11.87704086303711
    7. ' ' → logprob: -11.87704086303711
    8. '   ' → logprob: -12.25204086303711
    9. '+=' → logprob: -12.37704086303711
    10. 's' → logprob: -12.75204086303711

Token 124: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11387653648853302
    2. ' result' → logprob: -2.2388765811920166
    3. 'current' → logprob: -7.6138763427734375
    4. '   ' → logprob: -8.363876342773438
    5. ' current' → logprob: -8.988876342773438
    6. 'first' → logprob: -9.238876342773438
    7. ' first' → logprob: -10.113876342773438
    8. '2' → logprob: -10.488876342773438
    9. ' ' → logprob: -10.738876342773438
    10. '1' → logprob: -12.488876342773438

Token 125: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -2.816093228830141e-06
    2. 'values' → logprob: -13.50000286102295
    3. '_' → logprob: -13.87500286102295
    4. ' _' → logprob: -15.87500286102295
    5. '_VALUES' → logprob: -15.87500286102295
    6. '_value' → logprob: -16.375001907348633
    7. 'Values' → logprob: -17.250001907348633
    8. ' values' → logprob: -17.625001907348633
    9. '_vals' → logprob: -18.000001907348633
    10. '_val' → logprob: -18.875001907348633

Token 126: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. '-' → logprob: -16.75
    4. '.append' → logprob: -18.5
    5. '[
' → logprob: -19.5
    6. ' [-' → logprob: -19.625
    7. '   ' → logprob: -20.875
    8. '[len' → logprob: -23.5
    9. '][-' → logprob: -23.5
    10. '+' → logprob: -23.625

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -18.1875
    4. '۱' → logprob: -18.875
    5. '１' → logprob: -19.25
    6. '১' → logprob: -19.875
    7. '2' → logprob: -19.875
    8. '```' → logprob: -20.0
    9. '१' → logprob: -20.125
    10. '  ' → logprob: -20.4375

Token 128: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.711205244064331
    2. ' +' → logprob: -1.586205244064331
    3. ' -' → logprob: -1.836205244064331
    4. '+' → logprob: -2.461205244064331
    5. ')' → logprob: -3.336205244064331
    6. ']' → logprob: -4.83620548248291
    7. '-' → logprob: -4.96120548248291
    8. ' ' → logprob: -5.71120548248291
    9. '    ' → logprob: -5.96120548248291
    10. '
' → logprob: -7.08620548248291

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010497664101421833
    2. 'result' → logprob: -5.010497570037842
    3. ' result' → logprob: -5.635497570037842
    4. ' new' → logprob: -10.135498046875
    5. ' next' → logprob: -10.135498046875
    6. '    
' → logprob: -10.260498046875
    7. '
' → logprob: -10.260498046875
    8. 'next' → logprob: -10.760498046875
    9. '```' → logprob: -11.510498046875
    10. 'new' → logprob: -11.760498046875

Token 130: ' next' (ID: 2613)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8453270792961121
    2. 'next' (adapté à ' next') → logprob: -0.8453270792961121
    3. 'result' → logprob: -2.470327138900757
    4. ' next' → logprob: -3.595327138900757
    5. 'new' → logprob: -4.220326900482178
    6. 'current' → logprob: -4.970326900482178
    7. ' new' → logprob: -5.345326900482178
    8. ' result' → logprob: -6.095326900482178
    9. ' current' → logprob: -7.720326900482178
    10. '    ' → logprob: -10.595327377319336

Token 131: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.2007883671903983e-05
    2. '_' → logprob: -10.875021934509277
    3. '_val' → logprob: -13.125021934509277
    4. 'value' → logprob: -14.125021934509277
    5. '_values' → logprob: -16.125022888183594
    6. ' _' → logprob: -16.250022888183594
    7. '_Value' → logprob: -16.625022888183594
    8. 'Value' → logprob: -18.000022888183594
    9. '_VALUE' → logprob: -18.750022888183594
    10. '   ' → logprob: -19.375022888183594

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687393069267273
    2. '=' → logprob: -1.1368739604949951
    3. '_' → logprob: -13.511874198913574
    4. ' ' → logprob: -14.011874198913574
    5. '.append' → logprob: -16.011873245239258
    6. ' ' → logprob: -16.136873245239258
    7. ' +=' → logprob: -16.261873245239258
    8. 's' → logprob: -16.636873245239258
    9. '   ' → logprob: -16.636873245239258
    10. '＝' → logprob: -16.761873245239258

Token 133: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.27633658051490784
    2. ' current' → logprob: -1.5263365507125854
    3. 'second' → logprob: -4.776336669921875
    4. 'first' → logprob: -5.151336669921875
    5. '   ' → logprob: -5.526336669921875
    6. ' second' → logprob: -6.276336669921875
    7. ' first' → logprob: -6.526336669921875
    8. 'previous' → logprob: -6.901336669921875
    9. '2' → logprob: -7.526336669921875
    10. ' ' → logprob: -7.651336669921875

Token 134: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.5213274309644476e-05
    2. '_' → logprob: -11.250015258789062
    3. 'Value' → logprob: -14.500015258789062
    4. 'value' → logprob: -14.750015258789062
    5. '_Value' → logprob: -15.000015258789062
    6. '-' → logprob: -15.250015258789062
    7. '_VALUE' → logprob: -15.750015258789062
    8. 'alue' → logprob: -16.250015258789062
    9. '_values' → logprob: -16.625015258789062
    10. '-value' → logprob: -17.125015258789062

Token 135: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0735924243927002
    2. '-' → logprob: -2.6985924243927
    3. ' ' → logprob: -6.573592185974121
    4. ' +' → logprob: -7.198592185974121
    5. '*' → logprob: -7.323592185974121
    6. '+' → logprob: -7.698592185974121
    7. '   ' → logprob: -8.323592185974121
    8. ' *' → logprob: -9.448592185974121
    9. ')' → logprob: -11.073592185974121
    10. '  ' → logprob: -11.073592185974121

Token 136: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02056805044412613
    2. ' ' → logprob: -3.8955681324005127
    3. '  ' → logprob: -11.520567893981934
    4. '   ' → logprob: -12.020567893981934
    5. ' -' → logprob: -12.520567893981934
    6. '<|end|>' → logprob: -13.145567893981934
    7. '3' → logprob: -14.395567893981934
    8. '1' → logprob: -14.520567893981934
    9. '*' → logprob: -14.583067893981934
    10. '
' → logprob: -14.958067893981934

Token 137: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015623578801751137
    2. ' ' → logprob: -6.501562595367432
    3. '   ' → logprob: -10.876562118530273
    4. '  ' → logprob: -11.126562118530273
    5. '<|end|>' → logprob: -11.376562118530273
    6. '1' → logprob: -12.751562118530273
    7. ' -' → logprob: -13.001562118530273
    8. '-' → logprob: -13.126562118530273
    9. '*' → logprob: -13.376562118530273
    10. '3' → logprob: -13.876562118530273

Token 138: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06551012396812439
    2. '-' → logprob: -2.9405100345611572
    3. '   ' → logprob: -4.565510272979736
    4. ' ' → logprob: -9.315509796142578
    5. '    ' → logprob: -9.690509796142578
    6. '    
' → logprob: -13.190509796142578
    7. '  ' → logprob: -13.315509796142578
    8. '_' → logprob: -13.565509796142578
    9. ' ' → logprob: -13.940509796142578
    10. ' -
' → logprob: -13.940509796142578

Token 139: ' previous' (ID: 5880)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' → logprob: -9.65101717156358e-05
    2. ' previous' → logprob: -9.250096321105957
    3. '(previous' → logprob: -16.000097274780273
    4. '   ' → logprob: -16.375097274780273
    5. 'prev' → logprob: -17.500097274780273
    6. '.previous' → logprob: -18.500097274780273
    7. 'pre' → logprob: -19.000097274780273
    8. '
' → logprob: -19.000097274780273
    9. '_previous' → logprob: -19.125097274780273
    10. ' ' → logprob: -19.625097274780273

Token 140: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.128163257315464e-07
    2. 'value' → logprob: -15.375
    3. '_' → logprob: -18.125
    4. '_VALUE' → logprob: -18.375
    5. 'Value' → logprob: -18.75
    6. '_Value' → logprob: -18.875
    7. 'alue' → logprob: -19.125
    8. '_values' → logprob: -19.25
    9. ' value' → logprob: -20.375
    10. '"value' → logprob: -20.75

Token 141: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013777334243059158
    2. 'result' → logprob: -6.751377582550049
    3. ' result' → logprob: -8.501378059387207
    4. '
' → logprob: -12.876378059387207
    5. '    
' → logprob: -13.751378059387207
    6. '```' → logprob: -15.626378059387207
    7. '  ' → logprob: -16.25137710571289
    8. '   ' → logprob: -16.25137710571289
    9. '[result' → logprob: -16.25137710571289
    10. '	result' → logprob: -16.25137710571289

Token 142: '   ' (ID: 271)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.38168463110923767
    2. 'result' → logprob: -1.63168466091156
    3. '   ' → logprob: -2.1316845417022705
    4. ' 
' → logprob: -6.25668478012085
    5. '    
' → logprob: -7.00668478012085
    6. '
' → logprob: -8.881684303283691
    7. '	result' → logprob: -10.631684303283691
    8. '[result' → logprob: -11.006684303283691
    9. '   
' → logprob: -11.256684303283691
    10. '_result' → logprob: -11.756684303283691

Token 143: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.007696894463151693
    2. '   ' → logprob: -5.257697105407715
    3. ' result' → logprob: -6.007697105407715
    4. '	result' → logprob: -15.507697105407715
    5. '  ' → logprob: -17.3826961517334
    6. ' ' → logprob: -17.6326961517334
    7. '    
' → logprob: -18.7576961517334
    8. '_result' → logprob: -18.7576961517334
    9. '[result' → logprob: -18.7576961517334
    10. '
' → logprob: -18.8826961517334

Token 144: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -4.320199877838604e-07
    2. 'values' → logprob: -15.5
    3. '_' → logprob: -16.5
    4. ' _' → logprob: -16.75
    5. '_value' → logprob: -16.75
    6. '_vals' → logprob: -17.625
    7. '_val' → logprob: -18.125
    8. '_VALUES' → logprob: -18.25
    9. '_results' → logprob: -19.0
    10. 's' → logprob: -19.625

Token 145: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0052495296113193035
    2. '.' → logprob: -5.255249500274658
    3. 'append' → logprob: -11.755249977111816
    4. '.app' → logprob: -12.130249977111816
    5. '.Append' → logprob: -13.505249977111816
    6. '_append' → logprob: -14.630249977111816
    7. '.ap' → logprob: -15.505249977111816
    8. '.extend' → logprob: -15.755249977111816
    9. ' append' → logprob: -15.755249977111816
    10. ' .' → logprob: -16.8802490234375

Token 146: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0004306692280806601
    2. '(' → logprob: -7.750430583953857
    3. 'next' → logprob: -17.375431060791016
    4. ' (' → logprob: -18.625431060791016
    5. ' next' → logprob: -18.625431060791016
    6. '(n' → logprob: -18.875431060791016
    7. '(
' → logprob: -19.125431060791016
    8. ',next' → logprob: -20.375431060791016
    9. '((' → logprob: -20.500431060791016
    10. '(max' → logprob: -20.875431060791016

Token 147: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -13.375003814697266
    3. '_val' → logprob: -13.625003814697266
    4. '_token' → logprob: -15.125003814697266
    5. ')_' → logprob: -15.250003814697266
    6. '_v' → logprob: -16.500003814697266
    7. ')' → logprob: -17.375003814697266
    8. '_Value' → logprob: -17.875003814697266
    9. 'value' → logprob: -18.375003814697266
    10. '_)' → logprob: -18.500003814697266

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001613459608051926
    2. ')
' → logprob: -8.750161170959473
    3. ' )' → logprob: -13.625161170959473
    4. ')return' → logprob: -14.250161170959473
    5. ']' → logprob: -14.875161170959473
    6. '
' → logprob: -15.500161170959473
    7. '[' → logprob: -15.875161170959473
    8. ')

' → logprob: -16.37516212463379
    9. ')`' → logprob: -17.00016212463379
    10. 'return' → logprob: -17.62516212463379

Token 149: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016100415959954262
    2. 'for' → logprob: -4.1411004066467285
    3. ' print' → logprob: -10.391100883483887
    4. 'result' → logprob: -10.891100883483887
    5. ' for' → logprob: -11.516100883483887
    6. 'output' → logprob: -13.391100883483887
    7. '
' → logprob: -13.641100883483887
    8. '#print' → logprob: -14.141100883483887
    9. '#' → logprob: -14.391100883483887
    10. 'if' → logprob: -14.766100883483887

Token 150: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -9.829823102336377e-05
    2. '_results' → logprob: -10.25009822845459
    3. '_' → logprob: -10.50009822845459
    4. '_vals' → logprob: -10.62509822845459
    5. '_val' → logprob: -12.62509822845459
    6. '_value' → logprob: -13.00009822845459
    7. '_s' → logprob: -13.87509822845459
    8. 's' → logprob: -13.87509822845459
    9. '_outputs' → logprob: -14.00009822845459
    10. '```' → logprob: -14.37509822845459

Token 151: '.pop' (ID: 15746)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06198606267571449
    2. '(' → logprob: -2.811985969543457
    3. '(-' → logprob: -11.311985969543457
    4. '0' → logprob: -12.811985969543457
    5. '()
' → logprob: -13.936985969543457
    6. '()(' → logprob: -14.311985969543457
    7. '()]' → logprob: -14.936985969543457
    8. '()`' → logprob: -14.936985969543457
    9. '(len' → logprob: -15.186985969543457
    10. ' ()' → logprob: -15.561985969543457

Token 153: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20145875215530396
    2. 'for' → logprob: -1.7014586925506592
    3. ' for' → logprob: -10.701458930969238
    4. 'result' → logprob: -11.576458930969238
    5. '
' → logprob: -12.701458930969238
    6. 'output' → logprob: -12.826458930969238
    7. ' print' → logprob: -13.076458930969238
    8. '```' → logprob: -13.076458930969238
    9. '#print' → logprob: -13.951458930969238
    10. '<|end|>' → logprob: -15.076458930969238

Token 154: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1276550590991974
    2. '(result' → logprob: -2.377655029296875
    3. '(*' → logprob: -4.127655029296875
    4. '('' → logprob: -4.627655029296875
    5. '(tuple' → logprob: -7.502655029296875
    6. '(sum' → logprob: -8.127655029296875
    7. '("("' → logprob: -8.252655029296875
    8. '("' → logprob: -10.127655029296875
    9. '(*)' → logprob: -11.877655029296875
    10. '(len' → logprob: -12.127655029296875

Token 155: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -6.2729995988775045e-06
    2. ' result' → logprob: -12.000006675720215
    3. '(result' → logprob: -17.2500057220459
    4. '[result' → logprob: -20.3750057220459
    5. '$result' → logprob: -21.7500057220459
    6. 'res' → logprob: -22.0000057220459
    7. 'results' → logprob: -22.1250057220459
    8. '	result' → logprob: -22.3750057220459
    9. '   ' → logprob: -22.8750057220459
    10. ')' → logprob: -22.8750057220459

Token 156: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -4.320199877838604e-07
    2. 'values' → logprob: -15.75
    3. '_results' → logprob: -15.875
    4. '_' → logprob: -17.5
    5. '_vals' → logprob: -18.0
    6. '_val' → logprob: -18.25
    7. '_VALUES' → logprob: -18.375
    8. '_value' → logprob: -18.75
    9. 's' → logprob: -19.0
    10. '_v' → logprob: -19.375

Token 157: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.500000953674316
    3. '))' → logprob: -16.25
    4. ')`' → logprob: -16.25
    5. ')
' → logprob: -16.875
    6. '()' → logprob: -17.75
    7. ')#' → logprob: -18.75
    8. '')' → logprob: -19.25
    9. ',)' → logprob: -19.25
    10. '())' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 155
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 47.10%
Précision adaptée (1ère position): 47.74%
Précision (top 10): 84.52%
================================================================================
