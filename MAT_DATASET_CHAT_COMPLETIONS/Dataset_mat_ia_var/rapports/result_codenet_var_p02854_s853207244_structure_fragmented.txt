================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def get_input_func():
    return sys.stdin.readline

def read_n(input_func):
    return int(input_func())

def read_a(input_func):
    return list(map(int, input_func().split()))

def sum_list(a):
    return sum(a)

def get_asum_half(asum):
    return asum / 2.0

def calc_fore_and_pre_sums(a, asumhalf):
    foresum = 0
    presum = 0
    for ai in a:
        foresum += ai
        if foresum >= asumhalf:
            break
        presum = foresum
    return foresum, presum

def calc_latsum(asum, s):
    return asum - s

def calc_diff(x, y):
    return abs(x - y)

def min_of_two(a, b):
    return min(a, b)

def main():
    input_func = get_input_func()
    n = read_n(input_func)
    a = read_a(input_func)
    asum = sum_list(a)
    asumhalf = get_asum_half(asum)
    foresum, presum = calc_fore_and_pre_sums(a, asumhalf)
    latsum = calc_latsum(asum, foresum)
    difa = calc_diff(foresum, latsum)
    latsum_presum = calc_latsum(asum, presum)
    difb = calc_diff(presum, latsum_presum)
    result = min_of_two(difa, difb)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021233972162008286
    2. ' main' → logprob: -5.646234035491943
    3. ' ' → logprob: -5.771234035491943
    4. ' space' → logprob: -6.021234035491943
    5. ' process' → logprob: -6.396234035491943
    6. ' sys' → logprob: -6.896234035491943
    7. '  ' → logprob: -7.021234035491943
    8. '_' → logprob: -7.271234035491943
    9. '<|end|>' → logprob: -7.396234035491943
    10. ' a' → logprob: -7.521234035491943

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25876739621162415
    2. '_user' → logprob: -2.6337673664093018
    3. '_data' → logprob: -3.0087673664093018
    4. '_line' → logprob: -3.7587673664093018
    5. ' _' → logprob: -4.008767604827881
    6. '_input' → logprob: -4.133767604827881
    7. '_name' → logprob: -4.383767604827881
    8. '_version' → logprob: -5.508767604827881
    9. 'attr' → logprob: -5.758767604827881
    10. '_file' → logprob: -6.008767604827881

Token 6: '_func' (ID: 22252)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007545342203229666
    2. '_' → logprob: -5.007545471191406
    3. '():' → logprob: -7.882545471191406
    4. '(_' → logprob: -9.132545471191406
    5. ' (' → logprob: -9.632545471191406
    6. '("("' → logprob: -10.257545471191406
    7. 's' → logprob: -10.757545471191406
    8. '_parent' → logprob: -10.757545471191406
    9. '(_:' → logprob: -11.007545471191406
    10. '(
' → logprob: -11.132545471191406

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026527859270572662
    2. '():' → logprob: -3.7765278816223145
    3. '_' → logprob: -6.0265278816223145
    4. '(:' → logprob: -8.526527404785156
    5. '(_' → logprob: -9.151527404785156
    6. ':' → logprob: -9.526527404785156
    7. '("("' → logprob: -9.776527404785156
    8. ' (' → logprob: -9.901527404785156
    9. '```' → logprob: -9.901527404785156
    10. '()' → logprob: -10.151527404785156

Token 8: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.4169162511825562
    2. '   ' → logprob: -1.4169162511825562
    3. '(' → logprob: -1.6669162511825562
    4. '    ' → logprob: -2.7919163703918457
    5. ' ' → logprob: -3.0419163703918457
    6. '():' → logprob: -3.4169163703918457
    7. '```' → logprob: -3.4169163703918457
    8. ':' → logprob: -3.9169163703918457
    9. '(
' → logprob: -3.9169163703918457
    10. '\n' → logprob: -3.9169163703918457

Token 9: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7657490968704224
    2. 'r' → logprob: -1.3907490968704224
    3. '   ' → logprob: -2.015748977661133
    4. ' return' → logprob: -2.265748977661133
    5. 'def' → logprob: -3.890748977661133
    6. '    ' → logprob: -4.765748977661133
    7. ' ' → logprob: -5.015748977661133
    8. '```' → logprob: -6.015748977661133
    9. 'input' → logprob: -6.015748977661133
    10. ' def' → logprob: -6.515748977661133

Token 10: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.056248683482408524
    2. ' sys' → logprob: -3.306248664855957
    3. 'input' → logprob: -4.056248664855957
    4. 'sys' → logprob: -8.056248664855957
    5. ' lambda' → logprob: -8.306248664855957
    6. ' ' → logprob: -8.806248664855957
    7. ' raw' → logprob: -12.431248664855957
    8. 'lambda' → logprob: -12.556248664855957
    9. ' getattr' → logprob: -13.806248664855957
    10. ' ' → logprob: -13.806248664855957

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004997736308723688
    2. '.stdin' → logprob: -5.629997730255127
    3. '.stdout' → logprob: -8.129998207092285
    4. '.readline' → logprob: -8.129998207092285
    5. ' .' → logprob: -8.379998207092285
    6. '.exit' → logprob: -8.504998207092285
    7. '.argv' → logprob: -8.504998207092285
    8. '.import' → logprob: -9.629998207092285
    9. '.get' → logprob: -11.379998207092285
    10. '.input' → logprob: -11.629998207092285

Token 12: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010380487656220794
    2. '.readline' → logprob: -7.001038074493408
    3. '.read' → logprob: -10.37603759765625
    4. '[' → logprob: -11.25103759765625
    5. '()' → logprob: -11.37603759765625
    6. 'def' → logprob: -11.50103759765625
    7. '().' → logprob: -11.50103759765625
    8. '```' → logprob: -11.62603759765625
    9. ' .' → logprob: -11.87603759765625
    10. '(' → logprob: -12.62603759765625

Token 13: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0601256862282753
    2. '(' → logprob: -2.9351255893707275
    3. '
' → logprob: -6.310125827789307
    4. '(
' → logprob: -6.560125827789307
    5. '<|end|>' → logprob: -6.810125827789307
    6. '()
' → logprob: -8.435125350952148
    7. '().' → logprob: -8.935125350952148
    8. ')' → logprob: -9.185125350952148
    9. '\n' → logprob: -9.685125350952148
    10. '```' → logprob: -9.810125350952148

Token 14: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05791753903031349
    2. '(' → logprob: -2.932917594909668
    3. '<|end|>' → logprob: -7.307917594909668
    4. '```' → logprob: -7.557917594909668
    5. 'def' → logprob: -7.932917594909668
    6. '(
' → logprob: -8.432917594909668
    7. ' ' → logprob: -8.807917594909668
    8. '()
' → logprob: -8.932917594909668
    9. 'newline' → logprob: -9.057917594909668
    10. '#' → logprob: -9.182917594909668

Token 15: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0883263573050499
    2. ' get' → logprob: -2.8383264541625977
    3. ' calculate' → logprob: -4.588326454162598
    4. ' process' → logprob: -5.338326454162598
    5. ' my' → logprob: -5.838326454162598
    6. ' print' → logprob: -6.588326454162598
    7. ' read' → logprob: -7.213326454162598
    8. ' parse' → logprob: -7.213326454162598
    9. ' compute' → logprob: -7.338326454162598
    10. ' _' → logprob: -7.463326454162598

Token 16: '_n' (ID: 2170)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.13411372900009155
    2. '()' → logprob: -2.1341137886047363
    3. 'line' → logprob: -5.384113788604736
    4. '_input' → logprob: -7.259113788604736
    5. '_' → logprob: -7.384113788604736
    6. 'Line' → logprob: -8.259113311767578
    7. '():' → logprob: -8.384113311767578
    8. '_LINE' → logprob: -8.884113311767578
    9. ' ()' → logprob: -9.134113311767578
    10. '(' → logprob: -9.259113311767578

Token 17: '(input' (ID: 10054)
  Prédit: 'ame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ame' → logprob: -0.5439763069152832
    2. 'umber' → logprob: -1.5439763069152832
    3. 'um' → logprob: -2.543976306915283
    4. '()' → logprob: -2.668976306915283
    5. '_' → logprob: -3.168976306915283
    6. 'ames' → logprob: -4.418976306915283
    7. '(' → logprob: -6.418976306915283
    8. 'a' → logprob: -7.668976306915283
    9. 'ext' → logprob: -7.793976306915283
    10. 'umbers' → logprob: -7.793976306915283

Token 18: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.13703171908855438
    2. ')' → logprob: -2.2620317935943604
    3. '_' → logprob: -4.137031555175781
    4. ')_' → logprob: -5.262031555175781
    5. '_line' → logprob: -6.262031555175781
    6. '_)' → logprob: -7.887031555175781
    7. '_function' → logprob: -8.887031555175781
    8. '):' → logprob: -9.762031555175781
    9. '(' → logprob: -10.137031555175781
    10. '_input' → logprob: -10.512031555175781

Token 19: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6341961622238159
    2. '):' → logprob: -0.7591961622238159
    3. '(' → logprob: -7.0091962814331055
    4. '_' → logprob: -8.759196281433105
    5. '()' → logprob: -9.009196281433105
    6. '():' → logprob: -9.009196281433105
    7. '())' → logprob: -9.634196281433105
    8. ' )' → logprob: -10.134196281433105
    9. ',' → logprob: -10.259196281433105
    10. '):
' → logprob: -10.759196281433105

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09314089268445969
    2. '(' → logprob: -2.9681408405303955
    3. '(n' → logprob: -4.093141078948975
    4. '():' → logprob: -4.593141078948975
    5. ' (' → logprob: -5.968141078948975
    6. ' line' → logprob: -6.593141078948975
    7. '    ' → logprob: -6.718141078948975
    8. ' return' → logprob: -7.343141078948975
    9. ' ():' → logprob: -7.343141078948975
    10. '  ' → logprob: -7.343141078948975

Token 21: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041684675961732864
    2. ' n' → logprob: -4.041684627532959
    3. ' line' → logprob: -4.541684627532959
    4. ' return' → logprob: -4.666684627532959
    5. 'n' → logprob: -6.041684627532959
    6. 'line' → logprob: -8.666685104370117
    7. 'return' (adapté à ' return') → logprob: -8.791685104370117
    8. '    ' → logprob: -9.291685104370117
    9. ' int' → logprob: -9.416685104370117
    10. ' ' → logprob: -9.541685104370117

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.005634147208184004
    2. 'int' → logprob: -5.255634307861328
    3. ' ' → logprob: -7.880634307861328
    4. '(int' → logprob: -11.630634307861328
    5. ' input' → logprob: -11.755634307861328
    6. ' n' → logprob: -12.755634307861328
    7. ' (' → logprob: -14.130634307861328
    8. ' ' → logprob: -14.380634307861328
    9. 'input' → logprob: -15.130634307861328
    10. '   ' → logprob: -15.630634307861328

Token 23: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5761242508888245
    2. '(input' → logprob: -0.8261242508888245
    3. '('' → logprob: -10.07612419128418
    4. '(
' → logprob: -10.32612419128418
    5. '(next' → logprob: -10.45112419128418
    6. '(read' → logprob: -11.07612419128418
    7. 'input' → logprob: -11.07612419128418
    8. ' (' → logprob: -11.20112419128418
    9. '(

' → logprob: -12.07612419128418
    10. '(get' → logprob: -12.82612419128418

Token 24: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00022678142704535276
    2. '_' → logprob: -9.500226974487305
    3. ')' → logprob: -9.750226974487305
    4. 'func' → logprob: -10.500226974487305
    5. '_FUNC' → logprob: -10.500226974487305
    6. '(' → logprob: -11.125226974487305
    7. '_funcs' → logprob: -11.875226974487305
    8. '(func' → logprob: -12.625226974487305
    9. '_fun' → logprob: -12.625226974487305
    10. 'Func' → logprob: -13.250226974487305

Token 25: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023316754028201103
    2. '()' → logprob: -3.7733168601989746
    3. ')' → logprob: -10.398316383361816
    4. '().' → logprob: -10.523316383361816
    5. '(' → logprob: -12.398316383361816
    6. ' ())' → logprob: -12.648316383361816
    7. '()[' → logprob: -13.148316383361816
    8. '()))' → logprob: -13.398316383361816
    9. '();)' → logprob: -13.898316383361816
    10. '(),' → logprob: -14.773316383361816

Token 26: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011977284448221326
    2. '\' → logprob: -8.001197814941406
    3. ')' → logprob: -8.126197814941406
    4. ' def' → logprob: -9.001197814941406
    5. 'n' → logprob: -9.126197814941406
    6. '

' → logprob: -9.501197814941406
    7. '\n' → logprob: -9.626197814941406
    8. '#' → logprob: -10.126197814941406
    9. '
' → logprob: -10.126197814941406
    10. '```' → logprob: -10.251197814941406

Token 27: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.02299865148961544
    2. ' main' → logprob: -4.272998809814453
    3. 'read' → logprob: -5.272998809814453
    4. ' write' → logprob: -6.647998809814453
    5. ' solve' → logprob: -7.022998809814453
    6. ' process' → logprob: -7.147998809814453
    7. ' def' → logprob: -8.772998809814453
    8. ' parse' → logprob: -9.147998809814453
    9. ' get' → logprob: -9.147998809814453
    10. 'main' → logprob: -10.147998809814453

Token 28: '_a' (ID: 10852)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.7545598149299622
    2. '_' → logprob: -1.1295597553253174
    3. '_list' → logprob: -1.8795597553253174
    4. '_n' → logprob: -4.2545599937438965
    5. '_array' → logprob: -5.1295599937438965
    6. '_lines' → logprob: -5.5045599937438965
    7. '_s' → logprob: -5.6295599937438965
    8. '(' → logprob: -5.7545599937438965
    9. '```' → logprob: -6.0045599937438965
    10. 'line' → logprob: -6.6295599937438965

Token 29: '(input' (ID: 10054)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.6079896092414856
    2. 'rr' → logprob: -0.8579896092414856
    3. '(input' → logprob: -3.607989549636841
    4. '_array' → logprob: -6.60798978805542
    5. '_arr' → logprob: -6.98298978805542
    6. '_list' → logprob: -7.10798978805542
    7. '_rr' → logprob: -7.98298978805542
    8. '_' → logprob: -8.357989311218262
    9. '_line' → logprob: -8.982989311218262
    10. '=input' → logprob: -9.607989311218262

Token 30: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00017195509281009436
    2. 'func' → logprob: -9.000171661376953
    3. '_function' → logprob: -10.875171661376953
    4. '_f' → logprob: -11.750171661376953
    5. '_FUNC' → logprob: -12.250171661376953
    6. '_funcs' → logprob: -12.250171661376953
    7. '_' → logprob: -12.500171661376953
    8. ')' → logprob: -13.000171661376953
    9. ')_' → logprob: -13.250171661376953
    10. '_fun' → logprob: -13.625171661376953

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48139384388923645
    2. ')' → logprob: -0.9813938140869141
    3. '()' → logprob: -5.106393814086914
    4. '())' → logprob: -7.606393814086914
    5. '):
' → logprob: -7.856393814086914
    6. '():' → logprob: -8.606393814086914
    7. '[]):' → logprob: -9.856393814086914
    8. '):

' → logprob: -10.481393814086914
    9. '(' → logprob: -11.731393814086914
    10. '   ' → logprob: -11.731393814086914

Token 32: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11502382159233093
    2. '   ' → logprob: -2.7400238513946533
    3. '()[' → logprob: -4.615023612976074
    4. '().' → logprob: -4.990023612976074
    5. '():' → logprob: -5.115023612976074
    6. ' list' → logprob: -5.240023612976074
    7. 'list' → logprob: -5.490023612976074
    8. ' ()' → logprob: -5.990023612976074
    9. '(' → logprob: -6.115023612976074
    10. 'return' → logprob: -6.240023612976074

Token 33: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7015954256057739
    2. 'list' → logprob: -0.7015954256057739
    3. ' return' → logprob: -5.576595306396484
    4. 'return' (adapté à ' return') → logprob: -5.826595306396484
    5. '   ' → logprob: -6.701595306396484
    6. ' map' → logprob: -8.451595306396484
    7. 'map' → logprob: -8.451595306396484
    8. '[]' → logprob: -12.576595306396484
    9. ' ' → logprob: -12.951595306396484
    10. '=list' → logprob: -12.951595306396484

Token 34: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.47416627407073975
    2. 'list' → logprob: -0.9741662740707397
    3. 'map' → logprob: -10.974165916442871
    4. ' map' → logprob: -10.974165916442871
    5. '[list' → logprob: -10.974165916442871
    6. '[' → logprob: -11.099165916442871
    7. '[int' → logprob: -12.224165916442871
    8. ' [' → logprob: -12.349165916442871
    9. 'int' → logprob: -12.599165916442871
    10. ' ' → logprob: -12.849165916442871

Token 35: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05025649443268776
    2. '(input' → logprob: -3.6752564907073975
    3. '(int' → logprob: -4.550256729125977
    4. '(map' → logprob: -4.800256729125977
    5. '(eval' → logprob: -5.800256729125977
    6. '(lambda' → logprob: -6.550256729125977
    7. '(range' → logprob: -9.425256729125977
    8. '(

' → logprob: -10.175256729125977
    9. '((' → logprob: -10.300256729125977
    10. '(token' → logprob: -10.675256729125977

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018339496455155313
    2. '(' → logprob: -9.25018310546875
    3. 'int' → logprob: -9.50018310546875
    4. ',int' → logprob: -12.50018310546875
    5. '<int' → logprob: -13.00018310546875
    6. ')' → logprob: -13.37518310546875
    7. ' int' → logprob: -13.50018310546875
    8. '(lambda' → logprob: -14.00018310546875
    9. '   ' → logprob: -14.12518310546875
    10. ' (' → logprob: -14.62518310546875

Token 37: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1895706057548523
    2. '(' → logprob: -1.814570665359497
    3. ',input' → logprob: -5.314570426940918
    4. ',' → logprob: -6.064570426940918
    5. ' (' → logprob: -6.689570426940918
    6. 'input' → logprob: -7.689570426940918
    7. ')' → logprob: -7.814570426940918
    8. '(
' → logprob: -9.189570426940918
    9. ' input' → logprob: -9.314570426940918
    10. '))' → logprob: -9.689570426940918

Token 38: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20146732032299042
    2. ' input' → logprob: -1.7014672756195068
    3. '(input' → logprob: -10.326467514038086
    4. ',input' → logprob: -11.576467514038086
    5. '	input' → logprob: -12.326467514038086
    6. '   ' → logprob: -12.576467514038086
    7. '=input' → logprob: -13.701467514038086
    8. ')' → logprob: -13.701467514038086
    9. '))' → logprob: -14.826467514038086
    10. ' ' → logprob: -14.951467514038086

Token 39: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -3.941161776310764e-05
    2. 'func' → logprob: -10.750039100646973
    3. '(' → logprob: -12.500039100646973
    4. '(_' → logprob: -12.750039100646973
    5. '_' → logprob: -12.750039100646973
    6. '```' → logprob: -13.125039100646973
    7. '(func' → logprob: -13.500039100646973
    8. '_FUNC' → logprob: -13.625039100646973
    9. 'Func' → logprob: -13.875039100646973
    10. '_function' → logprob: -14.000039100646973

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.45848218582978e-06
    2. '()' → logprob: -13.37500286102295
    3. ' ().' → logprob: -14.12500286102295
    4. '.strip' → logprob: -17.500001907348633
    5. '()))' → logprob: -17.750001907348633
    6. ')' → logprob: -17.875001907348633
    7. '(' → logprob: -17.875001907348633
    8. '())))' → logprob: -18.125001907348633
    9. '.' → logprob: -18.250001907348633
    10. 'split' → logprob: -19.000001907348633

Token 41: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10159049928188324
    2. 'split' → logprob: -2.351590394973755
    3. 'rstrip' → logprob: -6.601590633392334
    4. ' strip' → logprob: -10.726590156555176
    5. ' split' → logprob: -12.976590156555176
    6. '.strip' → logprob: -14.726590156555176
    7. '(split' → logprob: -17.476591110229492
    8. '(strip' → logprob: -17.601591110229492
    9. 'spl' → logprob: -17.726591110229492
    10. '-strip' → logprob: -18.226591110229492

Token 42: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02476498670876026
    2. '))' → logprob: -3.7747650146484375
    3. '()' → logprob: -6.6497650146484375
    4. '())' → logprob: -8.774765014648438
    5. '()))
' → logprob: -10.024765014648438
    6. '(' → logprob: -11.399765014648438
    7. '())))' → logprob: -12.649765014648438
    8. ')' → logprob: -13.024765014648438
    9. '()));' → logprob: -13.399765014648438
    10. '()))

' → logprob: -13.649765014648438

Token 43: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009022884769365191
    2. '```' → logprob: -8.00090217590332
    3. '\' → logprob: -8.75090217590332
    4. 'if' → logprob: -9.00090217590332
    5. '\n' → logprob: -9.62590217590332
    6. '
' → logprob: -9.62590217590332
    7. 'for' → logprob: -10.37590217590332
    8. 'import' → logprob: -10.62590217590332
    9. 'n' → logprob: -10.62590217590332
    10. '<|end|>' → logprob: -11.00090217590332

Token 44: ' sum' (ID: 4215)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.031195664778351784
    2. ' solve' → logprob: -4.156195640563965
    3. 'main' → logprob: -4.906195640563965
    4. ' def' → logprob: -6.031195640563965
    5. ' read' → logprob: -6.281195640563965
    6. 'solve' → logprob: -6.906195640563965
    7. ' write' → logprob: -7.281195640563965
    8. ' process' → logprob: -8.031195640563965
    9. 'def' → logprob: -8.031195640563965
    10. ' get' → logprob: -8.781195640563965

Token 45: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5126329064369202
    2. '(' → logprob: -1.0126328468322754
    3. '_(' → logprob: -3.7626328468322754
    4. '_a' → logprob: -4.512632846832275
    5. '(a' → logprob: -6.512632846832275
    6. '_sum' → logprob: -8.262633323669434
    7. '_numbers' → logprob: -8.387633323669434
    8. '_elements' → logprob: -8.762633323669434
    9. '_values' → logprob: -8.887633323669434
    10. '(_' → logprob: -9.262633323669434

Token 46: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0056545366533100605
    2. '(a' → logprob: -5.880654335021973
    3. '(lst' → logprob: -6.255654335021973
    4. '(list' → logprob: -8.130654335021973
    5. '(ls' → logprob: -9.005654335021973
    6. '_' → logprob: -9.005654335021973
    7. '_list' → logprob: -10.005654335021973
    8. '(List' → logprob: -10.130654335021973
    9. '(_' → logprob: -10.255654335021973
    10. '(sum' → logprob: -10.255654335021973

Token 47: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18075233697891235
    2. '):' → logprob: -1.8057522773742676
    3. ')):' → logprob: -8.055752754211426
    4. '))' → logprob: -8.305752754211426
    5. ')>' → logprob: -9.180752754211426
    6. ' )' → logprob: -9.430752754211426
    7. ' ):' → logprob: -10.555752754211426
    8. ')a' → logprob: -10.555752754211426
    9. '(a' → logprob: -10.805752754211426
    10. 'a' → logprob: -10.805752754211426

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07280503213405609
    2. ' return' → logprob: -3.3228049278259277
    3. 'sum' → logprob: -4.197804927825928
    4. 'return' → logprob: -4.572804927825928
    5. ' sum' → logprob: -5.572804927825928
    6. ' ' → logprob: -6.697804927825928
    7. '_' → logprob: -7.072804927825928
    8. '    ' → logprob: -7.572804927825928
    9. 'a' → logprob: -7.697804927825928
    10. '(sum' → logprob: -7.947804927825928

Token 49: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5830364227294922
    2. 'return' (adapté à ' return') → logprob: -0.8330364227294922
    3. '   ' → logprob: -5.083036422729492
    4. 'sum' → logprob: -7.333036422729492
    5. ' sum' → logprob: -8.458036422729492
    6. ' ' → logprob: -13.458036422729492
    7. '    ' → logprob: -13.458036422729492
    8. '	return' → logprob: -14.458036422729492
    9. '  ' → logprob: -14.708036422729492
    10. '```' → logprob: -14.708036422729492

Token 50: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.011050998233258724
    2. 'sum' → logprob: -4.511051177978516
    3. ' ' → logprob: -13.011051177978516
    4. '   ' → logprob: -15.011051177978516
    5. '(sum' → logprob: -15.511051177978516
    6. '	sum' → logprob: -15.636051177978516
    7. ' ' → logprob: -15.636051177978516
    8. '  ' → logprob: -17.011051177978516
    9. '=sum' → logprob: -17.761051177978516
    10. ' a' → logprob: -18.511051177978516

Token 51: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3133099675178528
    2. '(' → logprob: -1.313309907913208
    3. '(
' → logprob: -11.188309669494629
    4. '<|end|>' → logprob: -11.438309669494629
    5. ' (' → logprob: -12.188309669494629
    6. '(

' → logprob: -12.688309669494629
    7. 'a' → logprob: -12.688309669494629
    8. '(list' → logprob: -12.813309669494629
    9. '((' → logprob: -13.063309669494629
    10. ')' → logprob: -13.563309669494629

Token 52: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. '))' → logprob: -11.875008583068848
    3. ')a' → logprob: -14.000008583068848
    4. ')
' → logprob: -14.375008583068848
    5. ' )' → logprob: -15.375008583068848
    6. ')))' → logprob: -15.875008583068848
    7. '`)' → logprob: -17.125009536743164
    8. '[' → logprob: -17.125009536743164
    9. ')`' → logprob: -17.125009536743164
    10. 'a' → logprob: -17.250009536743164

Token 53: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3917277753353119
    2. '<|end|>' → logprob: -1.8917278051376343
    3. '#' → logprob: -3.0167276859283447
    4. '\n' → logprob: -3.6417276859283447
    5. 'print' → logprob: -3.7667276859283447
    6. '\' → logprob: -4.266727924346924
    7. '
' → logprob: -4.516727924346924
    8. 'n' → logprob: -4.766727924346924
    9. 'if' → logprob: -4.766727924346924
    10. '<|end|>' → logprob: -4.766727924346924

Token 54: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.008461032062768936
    2. ' calculate' → logprob: -5.258460998535156
    3. ' sum' → logprob: -7.008460998535156
    4. ' def' → logprob: -7.883460998535156
    5. ' total' → logprob: -8.008460998535156
    6. ' run' → logprob: -8.133460998535156
    7. ' compute' → logprob: -8.133460998535156
    8. ' get' → logprob: -8.633460998535156
    9. ' process' → logprob: -8.883460998535156
    10. ' add' → logprob: -9.008460998535156

Token 55: '_as' (ID: 25206)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.2085835933685303
    2. '_sum' → logprob: -1.4585835933685303
    3. '_total' → logprob: -1.5835835933685303
    4. '_max' → logprob: -1.7085835933685303
    5. '_output' → logprob: -4.083583831787109
    6. '_' → logprob: -4.333583831787109
    7. '_result' → logprob: -4.333583831787109
    8. '_prefix' → logprob: -5.208583831787109
    9. '_s' → logprob: -5.458583831787109
    10. '_answer' → logprob: -5.458583831787109

Token 56: 'um' (ID: 394)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.8096755743026733
    2. '(input' → logprob: -1.8096755743026733
    3. 's' → logprob: -2.059675693511963
    4. 'sum' → logprob: -2.684675693511963
    5. 'ync' → logprob: -3.684675693511963
    6. 'input' → logprob: -3.684675693511963
    7. 'k' → logprob: -3.934675693511963
    8. 'list' → logprob: -4.059675693511963
    9. '_sum' → logprob: -4.059675693511963
    10. 'um' → logprob: -4.309675693511963

Token 57: '_half' (ID: 105284)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.046854618936777115
    2. 'um' → logprob: -3.5468547344207764
    3. '_list' → logprob: -5.796854496002197
    4. '_' → logprob: -6.171854496002197
    5. '(' → logprob: -6.296854496002197
    6. '(input' → logprob: -6.296854496002197
    7. '(_' → logprob: -6.546854496002197
    8. '_sum' → logprob: -6.546854496002197
    9. '(n' → logprob: -7.046854496002197
    10. '_func' → logprob: -7.296854496002197

Token 58: '(as' (ID: 67370)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0036853551864624023
    2. '()' → logprob: -6.253685474395752
    3. '_' → logprob: -6.878685474395752
    4. '():
' → logprob: -8.253684997558594
    5. 'def' → logprob: -9.003684997558594
    6. '(a' → logprob: -9.128684997558594
    7. ' ():' → logprob: -9.128684997558594
    8. '(' → logprob: -10.378684997558594
    9. '```' → logprob: -11.128684997558594
    10. '():
' → logprob: -11.753684997558594

Token 59: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.023063885048031807
    2. 'sum' → logprob: -3.898063898086548
    3. '_sum' → logprob: -6.523063659667969
    4. ')' → logprob: -8.148063659667969
    5. 'a' → logprob: -8.898063659667969
    6. '):
' → logprob: -9.398063659667969
    7. 'u' → logprob: -9.398063659667969
    8. '_' → logprob: -9.773063659667969
    9. '):' → logprob: -9.898063659667969
    10. 'ub' → logprob: -10.023063659667969

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08780262619256973
    2. '_' → logprob: -3.0878026485443115
    3. ')' → logprob: -3.7128026485443115
    4. '):
' → logprob: -4.837802410125732
    5. ' ):' → logprob: -6.337802410125732
    6. ',' → logprob: -7.087802410125732
    7. '//' → logprob: -7.087802410125732
    8. '/' → logprob: -7.712802410125732
    9. ')_' → logprob: -8.21280288696289
    10. 's' → logprob: -8.33780288696289

Token 61: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5089932680130005
    2. '   ' → logprob: -1.2589932680130005
    3. '():' → logprob: -2.258993148803711
    4. ' :' → logprob: -5.758993148803711
    5. '():
' → logprob: -6.133993148803711
    6. ':
' → logprob: -6.383993148803711
    7. '=' → logprob: -7.133993148803711
    8. '):' → logprob: -7.133993148803711
    9. ' =' → logprob: -7.633993148803711
    10. ' ():' → logprob: -8.258993148803711

Token 62: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029825463891029358
    2. 'return' (adapté à ' return') → logprob: -3.779825448989868
    3. ' return' → logprob: -5.029825687408447
    4. '```' → logprob: -11.654825210571289
    5. '	return' → logprob: -13.279825210571289
    6. '   ' → logprob: -13.779825210571289
    7. '    ' → logprob: -13.904825210571289
    8. '       ' → logprob: -14.154825210571289
    9. '  ' → logprob: -14.279825210571289
    10. 'def' → logprob: -14.529825210571289

Token 63: ' asum' (ID: 87728)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.6548063158988953
    2. ' asum' → logprob: -0.7798063158988953
    3. ' as' → logprob: -4.779806137084961
    4. '(as' → logprob: -4.904806137084961
    5. ' (' → logprob: -5.279806137084961
    6. '(int' → logprob: -8.529806137084961
    7. '   ' → logprob: -9.029806137084961
    8. '(' → logprob: -9.029806137084961
    9. 'asim' → logprob: -9.279806137084961
    10. ' isum' → logprob: -9.654806137084961

Token 64: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.03846566751599312
    2. '//' → logprob: -3.288465738296509
    3. '#' → logprob: -8.16346549987793
    4. ' ' → logprob: -9.41346549987793
    5. ' #' → logprob: -10.41346549987793
    6. 'def' → logprob: -12.16346549987793
    7. '   ' → logprob: -12.28846549987793
    8. ' /' → logprob: -13.03846549987793
    9. '/' → logprob: -13.28846549987793
    10. ' ' → logprob: -13.28846549987793

Token 65: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007118358626030385
    2. ' ' → logprob: -7.250711917877197
    3. '```' → logprob: -14.125711441040039
    4. '   ' → logprob: -14.500711441040039
    5. '  ' → logprob: -16.56321144104004
    6. ' ' → logprob: -16.81321144104004
    7. '
' → logprob: -17.43821144104004
    8. '3' → logprob: -17.43821144104004
    9. '=' → logprob: -17.56321144104004
    10. '２' → logprob: -17.75071144104004

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.684157026233152e-05
    2. ' ' → logprob: -9.500077247619629
    3. '```' → logprob: -13.625077247619629
    4. '   ' → logprob: -15.250077247619629
    5. '２' → logprob: -17.000076293945312
    6. '[' → logprob: -17.375076293945312
    7. '۲' → logprob: -17.500076293945312
    8. '  ' → logprob: -17.562576293945312
    9. '`' → logprob: -17.875076293945312
    10. '(' → logprob: -17.875076293945312

Token 67: '.' (ID: 13)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44456934928894043
    2. '<|end|>' → logprob: -1.1945693492889404
    3. '

' → logprob: -3.6945693492889404
    4. '
' → logprob: -3.9445693492889404
    5. '<|end|>' → logprob: -5.4445695877075195
    6. '\' → logprob: -5.5695695877075195
    7. '```' → logprob: -6.0695695877075195
    8. '\n' → logprob: -7.6945695877075195
    9. ' def' → logprob: -8.31956958770752
    10. '*' → logprob: -9.06956958770752

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '5' → logprob: -16.625
    4. '<|end|>' → logprob: -18.125
    5. 'def' → logprob: -18.875
    6. '```' → logprob: -19.5
    7. '  ' → logprob: -19.5
    8. '00' → logprob: -20.0
    9. 'return' → logprob: -20.0
    10. '000' → logprob: -20.375

Token 69: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005778160993941128
    2. '<|end|>' → logprob: -8.375577926635742
    3. '
' → logprob: -9.250577926635742
    4. '```' → logprob: -9.500577926635742
    5. '<|end|>' → logprob: -9.875577926635742
    6. '

' → logprob: -10.500577926635742
    7. '#' → logprob: -10.500577926635742
    8. '\' → logprob: -10.750577926635742
    9. 'import' → logprob: -11.375577926635742
    10. ' def' → logprob: -11.875577926635742

Token 71: ' calc' (ID: 25691)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.776114821434021
    2. ' main' → logprob: -1.151114821434021
    3. 'is' → logprob: -2.1511149406433105
    4. ' is' → logprob: -3.7761149406433105
    5. ' find' → logprob: -4.1511149406433105
    6. 'find' → logprob: -4.2761149406433105
    7. 'check' → logprob: -4.7761149406433105
    8. 'half' → logprob: -4.9011149406433105
    9. 'split' → logprob: -4.9011149406433105
    10. 'binary' → logprob: -5.2761149406433105

Token 72: '_fore' (ID: 83380)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3225390613079071
    2. '_diff' → logprob: -1.9475390911102295
    3. '_difference' → logprob: -2.9475390911102295
    4. '_total' → logprob: -4.07253885269165
    5. '_half' → logprob: -4.32253885269165
    6. '_result' → logprob: -4.57253885269165
    7. '(a' → logprob: -5.32253885269165
    8. '_partial' → logprob: -5.69753885269165
    9. '_prefix' → logprob: -5.94753885269165
    10. '_sub' → logprob: -5.94753885269165

Token 73: '_and' (ID: 18645)
  Prédit: 'cast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cast' → logprob: -0.10272124409675598
    2. 'ach' → logprob: -2.6027212142944336
    3. 'ver' → logprob: -5.102721214294434
    4. 'st' → logprob: -5.727721214294434
    5. 'ground' → logprob: -6.602721214294434
    6. 'arm' → logprob: -6.727721214294434
    7. 'front' → logprob: -6.727721214294434
    8. 'seen' → logprob: -6.852721214294434
    9. 'casts' → logprob: -7.102721214294434
    10. 'most' → logprob: -7.227721214294434

Token 74: '_pre' (ID: 18599)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.9142560362815857
    2. 'hind' → logprob: -1.6642560958862305
    3. '_back' → logprob: -2.4142560958862305
    4. 'ach' → logprob: -2.5392560958862305
    5. 'cast' → logprob: -2.5392560958862305
    6. 're' → logprob: -3.2892560958862305
    7. 'aft' → logprob: -4.1642560958862305
    8. '_re' → logprob: -4.6642560958862305
    9. 'r' → logprob: -4.7892560958862305
    10. '_' → logprob: -5.0392560958862305

Token 75: '_s' (ID: 1278)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.00764579838141799
    2. 'sum' → logprob: -5.382645606994629
    3. '_sum' → logprob: -7.257645606994629
    4. 's' → logprob: -7.382645606994629
    5. '_fix' → logprob: -7.507645606994629
    6. 'f' → logprob: -8.007645606994629
    7. '```' → logprob: -8.382645606994629
    8. 'ix' → logprob: -9.007645606994629
    9. 'fixed' → logprob: -9.382645606994629
    10. 'x' → logprob: -9.382645606994629

Token 76: 'ums' (ID: 6162)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.2335619330406189
    2. 'ums' → logprob: -1.6085619926452637
    3. 'uf' → logprob: -5.733561992645264
    4. 'uffix' → logprob: -6.108561992645264
    5. 't' → logprob: -7.608561992645264
    6. '```' → logprob: -8.233561515808105
    7. '(' → logprob: -9.296061515808105
    8. '`' → logprob: -9.358561515808105
    9. '``' → logprob: -9.421061515808105
    10. '{' → logprob: -9.421061515808105

Token 77: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00317521789111197
    2. '(' → logprob: -6.128175258636475
    3. ' (' → logprob: -7.003175258636475
    4. '(as' → logprob: -10.378174781799316
    5. '(list' → logprob: -11.378174781799316
    6. '(lst' → logprob: -11.753174781799316
    7. '(arr' → logprob: -12.253174781799316
    8. '(s' → logprob: -12.503174781799316
    9. '_(' → logprob: -12.628174781799316
    10. '```' → logprob: -13.128174781799316

Token 78: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004469285253435373
    2. ',' → logprob: -5.879469394683838
    3. '):
' → logprob: -6.629469394683838
    4. ')' → logprob: -8.75446891784668
    5. '[]):' → logprob: -9.87946891784668
    6. '):
' → logprob: -10.00446891784668
    7. ' ):' → logprob: -11.12946891784668
    8. '(a' → logprob: -11.50446891784668
    9. ')):' → logprob: -11.62946891784668
    10. '[' → logprob: -12.00446891784668

Token 79: ' asum' (ID: 87728)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.39485791325569153
    2. 'n' → logprob: -1.3948578834533691
    3. ' asum' → logprob: -3.894857883453369
    4. ' pre' → logprob: -4.394857883453369
    5. ' as' → logprob: -5.019857883453369
    6. ')' → logprob: -5.144857883453369
    7. 'as' → logprob: -5.457357883453369
    8. 'pre' → logprob: -5.707357883453369
    9. ' prefix' → logprob: -5.957357883453369
    10. 'k' → logprob: -5.957357883453369

Token 80: 'half' (ID: 52836)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03879517689347267
    2. '):
' → logprob: -3.288795232772827
    3. 's' → logprob: -8.163795471191406
    4. '):
' → logprob: -8.163795471191406
    5. ')' → logprob: -9.788795471191406
    6. ' ):' → logprob: -10.163795471191406
    7. ',' → logprob: -10.163795471191406
    8. '   ' → logprob: -11.163795471191406
    9. '):

' → logprob: -11.663795471191406
    10. '_' → logprob: -11.663795471191406

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21407395601272583
    2. '):
' → logprob: -1.714073896408081
    3. '):
' → logprob: -4.96407413482666
    4. 't' → logprob: -5.96407413482666
    5. ')' → logprob: -6.46407413482666
    6. '):

' → logprob: -7.21407413482666
    7. ',' → logprob: -7.71407413482666
    8. 's' → logprob: -9.08907413482666
    9. '):

' → logprob: -10.46407413482666
    10. '   ' → logprob: -10.83907413482666

Token 82: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006774345878511667
    2. ':
' → logprob: -5.631774425506592
    3. '   ' → logprob: -6.256774425506592
    4. '):' → logprob: -7.631774425506592
    5. ',' → logprob: -7.881774425506592
    6. ' :' → logprob: -8.881773948669434
    7. '):
' → logprob: -9.131773948669434
    8. ':list' → logprob: -10.506773948669434
    9. ':def' → logprob: -10.631773948669434
    10. ':int' → logprob: -11.006773948669434

Token 83: ' fores' (ID: 103317)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026034587994217873
    2. ' n' → logprob: -4.276034355163574
    3. ' pre' → logprob: -4.901034355163574
    4. 'n' → logprob: -5.901034355163574
    5. ' fore' → logprob: -6.776034355163574
    6. ' prefix' → logprob: -8.776034355163574
    7. '    ' → logprob: -9.026034355163574
    8. 'pre' → logprob: -10.276034355163574
    9. '   ' → logprob: -10.526034355163574
    10. '
' → logprob: -10.901034355163574

Token 84: 'um' (ID: 394)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20244231820106506
    2. '=' → logprob: -2.2024424076080322
    3. 'sum' → logprob: -4.077442169189453
    4. 's' → logprob: -4.202442169189453
    5. '   ' → logprob: -4.202442169189453
    6. 't' → logprob: -5.077442169189453
    7. ',' → logprob: -5.202442169189453
    8. '=[]
' → logprob: -5.702442169189453
    9. '=[]' → logprob: -5.952442169189453
    10. '_sum' → logprob: -6.202442169189453

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35875365138053894
    2. 's' → logprob: -1.7337536811828613
    3. '=' → logprob: -2.1087536811828613
    4. ',' → logprob: -6.608753681182861
    5. ' ' → logprob: -6.983753681182861
    6. '   ' → logprob: -7.233753681182861
    7. '  ' → logprob: -8.483753204345703
    8. 'm' → logprob: -9.233753204345703
    9. ' s' → logprob: -10.358753204345703
    10. 'ms' → logprob: -10.483753204345703

Token 86: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43757978081703186
    2. '[' → logprob: -1.3125797510147095
    3. ' [' → logprob: -2.812579870223999
    4. ' ' → logprob: -4.31257963180542
    5. '[a' → logprob: -5.06257963180542
    6. '[]' → logprob: -5.93757963180542
    7. 'a' → logprob: -6.18757963180542
    8. ' a' → logprob: -7.93757963180542
    9. ' []' → logprob: -7.93757963180542
    10. '[]
' → logprob: -10.812580108642578

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48583120107650757
    2. '[' → logprob: -0.9858312010765076
    3. '[a' → logprob: -5.110831260681152
    4. 'a' → logprob: -5.735831260681152
    5. ' [' → logprob: -6.610831260681152
    6. '[]' → logprob: -7.360831260681152
    7. ' ' → logprob: -7.985831260681152
    8. '[]
' → logprob: -10.735831260681152
    9. '[len' → logprob: -10.985831260681152
    10. ' a' → logprob: -11.235831260681152

Token 88: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.032541677355766296
    2. '   ' → logprob: -4.157541751861572
    3. '<|end|>' → logprob: -4.782541751861572
    4. ',' → logprob: -5.657541751861572
    5. '    
' → logprob: -6.282541751861572
    6. '
' → logprob: -7.157541751861572
    7. '<|end|>' → logprob: -7.782541751861572
    8. 's' → logprob: -8.282541275024414
    9. '  
' → logprob: -9.157541275024414
    10. '	
' → logprob: -9.282541275024414

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0367879755795002
    2. '
' → logprob: -3.661787986755371
    3. ',' → logprob: -5.411787986755371
    4. '    
' → logprob: -6.286787986755371
    5. '<|end|>' → logprob: -6.911787986755371
    6. '	pre' → logprob: -7.786787986755371
    7. ' ' → logprob: -8.036787986755371
    8. '  ' → logprob: -8.161787986755371
    9. '   
' → logprob: -8.661787986755371
    10. 's' → logprob: -8.911787986755371

Token 90: ' presum' (ID: 60906)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.6358180046081543
    2. 'pre' → logprob: -1.0108180046081543
    3. ' pres' → logprob: -2.8858180046081543
    4. 'fo' → logprob: -4.135818004608154
    5. ' pre' → logprob: -4.260818004608154
    6. '   ' → logprob: -4.385818004608154
    7. 'fore' → logprob: -6.260818004608154
    8. 'for' → logprob: -6.635818004608154
    9. 'res' → logprob: -7.260818004608154
    10. 'pref' → logprob: -7.510818004608154

Token 91: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47471165657043457
    2. ' =' → logprob: -0.9747116565704346
    3. ' ' → logprob: -7.9747114181518555
    4. 's' → logprob: -8.724711418151855
    5. 'sum' → logprob: -9.974711418151855
    6. '   ' → logprob: -10.349711418151855
    7. '=[]' → logprob: -10.974711418151855
    8. '=sum' → logprob: -11.724711418151855
    9. '  ' → logprob: -11.849711418151855
    10. 'def' → logprob: -12.974711418151855

Token 92: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1004369780421257
    2. ' ' → logprob: -2.3504369258880615
    3. '[' → logprob: -8.85043716430664
    4. ' [' → logprob: -9.60043716430664
    5. '[]' → logprob: -11.60043716430664
    6. ' []' → logprob: -12.60043716430664
    7. '   ' → logprob: -12.72543716430664
    8. '  ' → logprob: -13.85043716430664
    9. '<|end|>' → logprob: -14.72543716430664
    10. 'a' → logprob: -14.97543716430664

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004092528019100428
    2. ' ' → logprob: -5.504092693328857
    3. '[' → logprob: -11.8790922164917
    4. 'a' → logprob: -12.2540922164917
    5. ' [' → logprob: -14.5040922164917
    6. '   ' → logprob: -14.8790922164917
    7. '[]' → logprob: -15.1290922164917
    8. '  ' → logprob: -15.5040922164917
    9. 's' → logprob: -15.9415922164917
    10. '00' → logprob: -16.441593170166016

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13582992553710938
    2. '   ' → logprob: -2.8858299255371094
    3. '<|end|>' → logprob: -2.8858299255371094
    4. '    
' → logprob: -5.260829925537109
    5. '<|end|>' → logprob: -6.260829925537109
    6. '	for' → logprob: -6.635829925537109
    7. '	
' → logprob: -6.760829925537109
    8. ' ' → logprob: -7.135829925537109
    9. '  
' → logprob: -7.385829925537109
    10. '' → logprob: -7.385829925537109

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5323323607444763
    2. '
' → logprob: -1.157332420349121
    3. '<|end|>' → logprob: -3.157332420349121
    4. ' ' → logprob: -4.157332420349121
    5. '    
' → logprob: -4.782332420349121
    6. ' 
' → logprob: -4.907332420349121
    7. '	for' → logprob: -5.782332420349121
    8. '	
' → logprob: -5.907332420349121
    9. '' → logprob: -6.032332420349121
    10. '	' → logprob: -6.157332420349121

Token 96: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5524840354919434
    2. '
' → logprob: -2.0524840354919434
    3. ' fore' → logprob: -2.5524840354919434
    4. ' result' → logprob: -3.1774840354919434
    5. '    
' → logprob: -3.5524840354919434
    6. ' pre' → logprob: -3.5524840354919434
    7. ' for' → logprob: -3.6774840354919434
    8. ' prefix' → logprob: -3.8024840354919434
    9. ' i' → logprob: -4.427484035491943
    10. ' f' → logprob: -5.052484035491943

Token 97: ' ai' (ID: 8440)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07686974108219147
    2. ' i' → logprob: -2.8268697261810303
    3. ' a' → logprob: -4.326869964599609
    4. '_' → logprob: -7.201869964599609
    5. 'i' → logprob: -7.826869964599609
    6. ' _' → logprob: -8.45186996459961
    7. 'a' → logprob: -10.07686996459961
    8. '  ' → logprob: -10.07686996459961
    9. ' x' → logprob: -10.07686996459961
    10. ' in' → logprob: -10.57686996459961

Token 98: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6688158512115479
    2. ' in' → logprob: -0.7938158512115479
    3. 'in' → logprob: -3.543815851211548
    4. ' ' → logprob: -5.918815612792969
    5. 's' → logprob: -6.043815612792969
    6. ',' → logprob: -6.918815612792969
    7. 'i' → logprob: -8.168815612792969
    8. ' ,' → logprob: -9.043815612792969
    9. ' n' → logprob: -9.293815612792969
    10. '  ' → logprob: -11.043815612792969

Token 99: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931530237197876
    2. ' a' → logprob: -0.6931530237197876
    3. '	a' → logprob: -13.318153381347656
    4. '(a' → logprob: -13.693153381347656
    5. ',a' → logprob: -14.568153381347656
    6. ')a' → logprob: -14.693153381347656
    7. '>a' → logprob: -14.693153381347656
    8. '[a' → logprob: -15.193153381347656
    9. ' ' → logprob: -15.318153381347656
    10. '_a' → logprob: -15.818153381347656

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.240481914370321e-05
    2. ':
' → logprob: -10.625052452087402
    3. ' :' → logprob: -10.625052452087402
    4. ':**' → logprob: -13.500052452087402
    5. '):' → logprob: -14.250052452087402
    6. ',' → logprob: -14.500052452087402
    7. '   ' → logprob: -15.000052452087402
    8. '.' → logprob: -15.375052452087402
    9. ':def' → logprob: -16.500051498413086
    10. ':list' → logprob: -16.625051498413086

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006891316268593073
    2. '        
' → logprob: -6.381891250610352
    3. '<|end|>' → logprob: -6.506891250610352
    4. '    ' → logprob: -6.631891250610352
    5. '   ' → logprob: -7.256891250610352
    6. ' ' → logprob: -7.631891250610352
    7. '<|end|>' → logprob: -8.506891250610352
    8. '    
' → logprob: -8.881891250610352
    9. ' 
' → logprob: -8.881891250610352
    10. '```' → logprob: -9.006891250610352

Token 102: ' fores' (ID: 103317)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49945276975631714
    2. ' if' → logprob: -1.249452829360962
    3. ' fores' → logprob: -2.999452829360962
    4. 'if' → logprob: -3.999452829360962
    5. 'fo' → logprob: -4.999452590942383
    6. '        
' → logprob: -4.999452590942383
    7. '   ' → logprob: -5.249452590942383
    8. '    ' → logprob: -5.249452590942383
    9. '```' → logprob: -5.624452590942383
    10. ' presum' → logprob: -6.124452590942383

Token 103: 'um' (ID: 394)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.016060292720794678
    2. 'um' → logprob: -4.1410603523254395
    3. ' sum' → logprob: -11.766059875488281
    4. 's' → logprob: -11.891059875488281
    5. '=sum' → logprob: -13.141059875488281
    6. '_sum' → logprob: -13.266059875488281
    7. '=' → logprob: -13.516059875488281
    8. '+=' → logprob: -13.516059875488281
    9. '+' → logprob: -13.766059875488281
    10. ' +=' → logprob: -14.141059875488281

Token 104: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1604815274477005
    2. '+=' → logprob: -1.910481572151184
    3. '+' → logprob: -9.035481452941895
    4. '=' → logprob: -9.285481452941895
    5. ' =' → logprob: -10.910481452941895
    6. ' +' → logprob: -11.785481452941895
    7. '    ' → logprob: -11.785481452941895
    8. '   ' → logprob: -12.285481452941895
    9. '>' → logprob: -13.160481452941895
    10. ']+=' → logprob: -13.785481452941895

Token 105: ' ai' (ID: 8440)
  Prédit: ' ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.08960790187120438
    2. 'ai' → logprob: -2.4646079540252686
    3. '1' → logprob: -7.8396077156066895
    4. ' ' → logprob: -8.714608192443848
    5. '   ' → logprob: -10.339608192443848
    6. '(ai' → logprob: -10.339608192443848
    7. '_ai' → logprob: -11.964608192443848
    8. 'int' → logprob: -12.464608192443848
    9. '0' → logprob: -12.464608192443848
    10. ' ' → logprob: -12.589608192443848

Token 106: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0571647584438324
    2. '
' → logprob: -2.9321646690368652
    3. '<|end|>' → logprob: -6.557164669036865
    4. '        
' → logprob: -7.932164669036865
    5. '   ' → logprob: -8.682165145874023
    6. '<|end|>' → logprob: -9.682165145874023
    7. '
' → logprob: -9.807165145874023
    8. ' if' → logprob: -10.432165145874023
    9. ' ' → logprob: -10.682165145874023
    10. ',' → logprob: -10.932165145874023

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10491479933261871
    2. '
' → logprob: -2.479914903640747
    3. '<|end|>' → logprob: -4.729914665222168
    4. '        
' → logprob: -5.604914665222168
    5. '   ' → logprob: -6.729914665222168
    6. ' if' → logprob: -6.979914665222168
    7. '<|end|>' → logprob: -8.104914665222168
    8. 'if' → logprob: -8.729914665222168
    9. ' ' → logprob: -8.729914665222168
    10. '    
' → logprob: -8.854914665222168

Token 108: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1654702425003052
    2. 'if' (adapté à ' if') → logprob: -1.1654702425003052
    3. 'pres' → logprob: -1.1654702425003052
    4. ' if' → logprob: -3.2904701232910156
    5. '   ' → logprob: -3.7904701232910156
    6. ' presum' → logprob: -5.915470123291016
    7. ' pres' → logprob: -6.415470123291016
    8. ' ' → logprob: -9.852970123291016
    9. 'pred' → logprob: -9.915470123291016
    10. '        
' → logprob: -10.040470123291016

Token 109: ' fores' (ID: 103317)
  Prédit: ' fores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fores' → logprob: -0.0034180781804025173
    2. 'fo' → logprob: -6.00341796875
    3. ' ' → logprob: -7.12841796875
    4. ' fo' → logprob: -9.62841796875
    5. '  ' → logprob: -10.87841796875
    6. '   ' → logprob: -11.00341796875
    7. '(' → logprob: -11.50341796875
    8. ' foes' → logprob: -12.50341796875
    9. ' ' → logprob: -12.62841796875
    10. 'f' → logprob: -12.62841796875

Token 110: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0015118853189051151
    2. 'sum' → logprob: -6.501512050628662
    3. 'umsum' → logprob: -12.001511573791504
    4. 'ums' → logprob: -13.376511573791504
    5. ' sum' → logprob: -15.001511573791504
    6. 'ум' → logprob: -15.126511573791504
    7. '   ' → logprob: -15.251511573791504
    8. '_sum' → logprob: -15.751511573791504
    9. 'un' → logprob: -16.12651252746582
    10. '(sum' → logprob: -16.37651252746582

Token 111: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.27691614627838135
    2. ' >=' → logprob: -2.026916027069092
    3. '>' → logprob: -2.901916027069092
    4. ' <=' → logprob: -3.151916027069092
    5. ' <' → logprob: -5.151916027069092
    6. '>=' → logprob: -5.901916027069092
    7. ' ==' → logprob: -6.526916027069092
    8. ' ' → logprob: -6.651916027069092
    9. '<=' → logprob: -7.026916027069092
    10. '<' → logprob: -8.77691650390625

Token 112: ' asum' (ID: 87728)
  Prédit: ' asum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' asum' → logprob: -0.3141835033893585
    2. 'as' → logprob: -1.3141834735870361
    3. 'ass' → logprob: -7.814183712005615
    4. ' as' → logprob: -8.189183235168457
    5. ' assum' → logprob: -9.314183235168457
    6. 'asim' → logprob: -10.189183235168457
    7. ' presum' → logprob: -10.564183235168457
    8. ' ' → logprob: -10.689183235168457
    9. '(as' → logprob: -11.439183235168457
    10. ' isum' → logprob: -11.689183235168457

Token 113: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -7.226628895296017e-06
    2. ' half' → logprob: -12.875007629394531
    3. 'hal' → logprob: -13.000007629394531
    4. '_half' → logprob: -13.375007629394531
    5. 'halb' → logprob: -14.875007629394531
    6. '/' → logprob: -15.750007629394531
    7. '-half' → logprob: -15.750007629394531
    8. '-' → logprob: -17.50000762939453
    9. 'hall' → logprob: -17.62500762939453
    10. ' ' → logprob: -17.75000762939453

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020337609574198723
    2. ':
' → logprob: -4.0203375816345215
    3. '       ' → logprob: -6.5203375816345215
    4. '           ' → logprob: -7.6453375816345215
    5. ':return' → logprob: -8.52033805847168
    6. ' and' → logprob: -11.89533805847168
    7. ' :' → logprob: -12.14533805847168
    8. ',' → logprob: -12.14533805847168
    9. ' or' → logprob: -12.27033805847168
    10. ':
' → logprob: -12.77033805847168

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00026085900026373565
    2. '       ' → logprob: -9.375261306762695
    3. 'return' → logprob: -10.000261306762695
    4. ' return' → logprob: -10.000261306762695
    5. ' break' → logprob: -10.125261306762695
    6. 'break' → logprob: -11.000261306762695
    7. '               ' → logprob: -12.250261306762695
    8. '            
' → logprob: -12.250261306762695
    9. ',' → logprob: -12.875261306762695
    10. ':' → logprob: -13.250261306762695

Token 116: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2631119191646576
    2. '       ' → logprob: -2.2631118297576904
    3. ' break' → logprob: -2.5131118297576904
    4. ' return' → logprob: -3.6381118297576904
    5. 'break' (adapté à ' break') → logprob: -4.2631120681762695
    6. 'return' → logprob: -5.2631120681762695
    7. '               ' → logprob: -8.13811206817627
    8. '   ' → logprob: -8.38811206817627
    9. ' presum' → logprob: -9.63811206817627
    10. '        ' → logprob: -10.51311206817627

Token 117: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2287275344133377
    2. '       ' → logprob: -1.6037275791168213
    3. '        
' → logprob: -6.728727340698242
    4. '<|end|>' → logprob: -7.103727340698242
    5. '   ' → logprob: -7.478727340698242
    6. ',' → logprob: -8.603727340698242
    7. '    
' → logprob: -8.853727340698242
    8. '
' → logprob: -9.853727340698242
    9. '  
' → logprob: -10.103727340698242
    10. '            
' → logprob: -10.353727340698242

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010973893105983734
    2. '
' → logprob: -4.885973930358887
    3. '   ' → logprob: -6.135973930358887
    4. '        
' → logprob: -7.135973930358887
    5. '    
' → logprob: -9.510973930358887
    6. '	' → logprob: -9.760973930358887
    7. '           ' → logprob: -9.885973930358887
    8. '    ' → logprob: -10.260973930358887
    9. 'else' → logprob: -10.635973930358887
    10. 'return' → logprob: -10.760973930358887

Token 119: ' presum' (ID: 60906)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36505717039108276
    2. '       ' → logprob: -1.2400572299957275
    3. 'pres' → logprob: -4.240056991577148
    4. 'else' → logprob: -6.615056991577148
    5. '
' → logprob: -8.115056991577148
    6. ' presum' → logprob: -8.740056991577148
    7. '    
' → logprob: -9.615056991577148
    8. ' else' → logprob: -10.240056991577148
    9. '        
' → logprob: -10.615056991577148
    10. ' pres' → logprob: -10.615056991577148

Token 120: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20184928178787231
    2. ' +=' → logprob: -1.7018492221832275
    3. '=' → logprob: -7.826849460601807
    4. '+' → logprob: -11.451848983764648
    5. ' =' → logprob: -11.451848983764648
    6. ']+=' → logprob: -12.326848983764648
    7. '    ' → logprob: -12.451848983764648
    8. '   ' → logprob: -13.076848983764648
    9. '+=(' → logprob: -13.576848983764648
    10. '        ' → logprob: -13.951848983764648

Token 121: ' fores' (ID: 103317)
  Prédit: 'fo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fo' → logprob: -0.015547533519566059
    2. ' fores' → logprob: -4.265547752380371
    3. 'fore' → logprob: -7.015547752380371
    4. ' fo' → logprob: -8.640547752380371
    5. ' ' → logprob: -9.015547752380371
    6. '   ' → logprob: -9.890547752380371
    7. ' ' → logprob: -10.390547752380371
    8. '+' → logprob: -11.140547752380371
    9. '  ' → logprob: -11.515547752380371
    10. 'fos' → logprob: -11.578047752380371

Token 122: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0024920646101236343
    2. 'sum' → logprob: -6.0024919509887695
    3. 'ум' → logprob: -12.12749195098877
    4. 'umsum' → logprob: -12.75249195098877
    5. 'cum' → logprob: -13.62749195098877
    6. 'un' → logprob: -13.75249195098877
    7. ' sum' → logprob: -13.75249195098877
    8. '   ' → logprob: -14.00249195098877
    9. 'm' → logprob: -14.12749195098877
    10. 'u' → logprob: -15.00249195098877

Token 123: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002940144157037139
    2. '<|end|>' → logprob: -6.3779401779174805
    3. 'return' → logprob: -7.0029401779174805
    4. '	return' → logprob: -8.50294017791748
    5. ' return' → logprob: -10.00294017791748
    6. '
' → logprob: -10.75294017791748
    7. ' ' → logprob: -11.50294017791748
    8. '[' → logprob: -11.62794017791748
    9. '<|end|>' → logprob: -11.87794017791748
    10. '    
' → logprob: -12.25294017791748

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053895652294158936
    2. '<|end|>' → logprob: -3.3038957118988037
    3. '
' → logprob: -4.928895473480225
    4. '    
' → logprob: -6.053895473480225
    5. ' ' → logprob: -6.553895473480225
    6. '	return' → logprob: -6.928895473480225
    7. ',' → logprob: -7.678895473480225
    8. '	' → logprob: -7.803895473480225
    9. '\n' → logprob: -7.928895473480225
    10. ' 
' → logprob: -7.928895473480225

Token 125: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' fores' (ID: 103317)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.39859065413475037
    2. ' presum' → logprob: -1.8985906839370728
    3. ' fores' → logprob: -2.273590564727783
    4. 'fo' → logprob: -3.148590564727783
    5. '(p' → logprob: -3.898590564727783
    6. ' pres' → logprob: -5.648590564727783
    7. ' (' → logprob: -6.148590564727783
    8. 'prem' → logprob: -6.523590564727783
    9. 'fore' → logprob: -6.648590564727783
    10. ' fo' → logprob: -7.398590564727783

Token 127: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.02130012959241867
    2. 'sum' → logprob: -4.021300315856934
    3. 'm' → logprob: -5.771300315856934
    4. 's' → logprob: -12.021300315856934
    5. '_sum' → logprob: -12.021300315856934
    6. 'umsum' → logprob: -12.271300315856934
    7. 'ms' → logprob: -12.771300315856934
    8. ' sum' → logprob: -12.896300315856934
    9. 'ums' → logprob: -13.271300315856934
    10. 'im' → logprob: -14.146300315856934

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005429040757007897
    2. '<|end|>' → logprob: -8.000542640686035
    3. ',p' → logprob: -8.750542640686035
    4. ',
' → logprob: -10.375542640686035
    5. '<|end|>' → logprob: -12.375542640686035
    6. ',None' → logprob: -13.625542640686035
    7. '_pres' → logprob: -13.625542640686035
    8. '[' → logprob: -13.750542640686035
    9. ' ,' → logprob: -13.750542640686035
    10. '.' → logprob: -14.125542640686035

Token 129: ' presum' (ID: 60906)
  Prédit: ' presum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' presum' → logprob: -0.429910272359848
    2. 'pres' → logprob: -1.0549103021621704
    3. ' pres' → logprob: -7.179910182952881
    4. ' presume' → logprob: -8.929910659790039
    5. ' ' → logprob: -9.554910659790039
    6. ' presumed' → logprob: -10.429910659790039
    7. 'prem' → logprob: -10.679910659790039
    8. '_pres' → logprob: -10.929910659790039
    9. ' ' → logprob: -11.117410659790039
    10. 'pred' → logprob: -11.242410659790039

Token 130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7314562201499939
    2. '<|end|>' → logprob: -1.2314562797546387
    3. '
' → logprob: -1.6064562797546387
    4. '#' → logprob: -4.106456279754639
    5. '<|end|>' → logprob: -5.356456279754639
    6. '\n' → logprob: -6.731456279754639
    7. '\' → logprob: -7.231456279754639
    8. '

' → logprob: -7.481456279754639
    9. '```' → logprob: -7.606456279754639
    10. ':' → logprob: -8.10645580291748

Token 132: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05520643666386604
    2. 'main' → logprob: -2.930206537246704
    3. ' solve' → logprob: -8.680206298828125
    4. 'solve' → logprob: -9.805206298828125
    5. ' find' → logprob: -10.680206298828125
    6. ' max' → logprob: -11.680206298828125
    7. ' calculate' → logprob: -11.680206298828125
    8. ' calc' → logprob: -12.180206298828125
    9. 'calculate' → logprob: -12.305206298828125
    10. 'max' → logprob: -12.305206298828125

Token 133: '_l' (ID: 1478)
  Prédit: '_fore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_fore' → logprob: -0.32859131693840027
    2. '_diff' → logprob: -3.2035913467407227
    3. '_as' → logprob: -3.2035913467407227
    4. '_min' → logprob: -3.9535913467407227
    5. '_max' → logprob: -4.203591346740723
    6. '_suffix' → logprob: -4.578591346740723
    7. '_bal' → logprob: -4.578591346740723
    8. '_s' → logprob: -4.703591346740723
    9. '_' → logprob: -4.953591346740723
    10. '_f' → logprob: -5.203591346740723

Token 134: 'ats' (ID: 1838)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.5316194891929626
    2. 'en' → logprob: -1.5316195487976074
    3. 'eft' → logprob: -2.1566195487976074
    4. 'ast' → logprob: -3.5316195487976074
    5. 'oop' → logprob: -3.5316195487976074
    6. 'ength' → logprob: -4.156619548797607
    7. 'ong' → logprob: -6.531619548797607
    8. 'ine' → logprob: -7.281619548797607
    9. 'e' → logprob: -7.531619548797607
    10. 'et' → logprob: -8.28161907196045

Token 135: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.13366036117076874
    2. 'uff' → logprob: -3.133660316467285
    3. 'uffix' → logprob: -3.633660316467285
    4. 'uf' → logprob: -4.383660316467285
    5. '_and' → logprob: -4.508660316467285
    6. '_sum' → logprob: -4.883660316467285
    7. '_' → logprob: -5.008660316467285
    8. 'ums' → logprob: -5.133660316467285
    9. '(_' → logprob: -6.633660316467285
    10. '_um' → logprob: -6.633660316467285

Token 136: '(as' (ID: 67370)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.043927017599344254
    2. '_and' → logprob: -4.293927192687988
    3. '(' → logprob: -4.918927192687988
    4. '(ai' → logprob: -5.293927192687988
    5. '_' → logprob: -5.793927192687988
    6. '_(' → logprob: -6.043927192687988
    7. '(pre' → logprob: -6.168927192687988
    8. '(l' → logprob: -6.668927192687988
    9. '(_' → logprob: -6.668927192687988
    10. '_for' → logprob: -7.418927192687988

Token 137: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0003184233792126179
    2. 'sum' → logprob: -9.62531852722168
    3. 'ums' → logprob: -10.37531852722168
    4. '(' → logprob: -10.37531852722168
    5. '   ' → logprob: -11.25031852722168
    6. 'uh' → logprob: -11.25031852722168
    7. 'u' → logprob: -11.25031852722168
    8. '_um' → logprob: -11.25031852722168
    9. '[' → logprob: -11.37531852722168
    10. '_' → logprob: -11.50031852722168

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1819634735584259
    2. '):' → logprob: -2.4319634437561035
    3. '):
' → logprob: -2.8069634437561035
    4. '-' → logprob: -5.4319634437561035
    5. ')' → logprob: -5.5569634437561035
    6. ' -' → logprob: -5.6819634437561035
    7. ' ,' → logprob: -6.4319634437561035
    8. ',a' → logprob: -6.8069634437561035
    9. '   ' → logprob: -6.9319634437561035
    10. ' ):' → logprob: -7.8069634437561035

Token 139: ' s' (ID: 265)
  Prédit: ' presum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' presum' → logprob: -1.0050822496414185
    2. ' fores' → logprob: -1.0050822496414185
    3. 'fo' → logprob: -2.130082130432129
    4. 'pres' → logprob: -2.130082130432129
    5. 'fore' → logprob: -4.255082130432129
    6. 'pre' → logprob: -5.942582130432129
    7. 'as' → logprob: -6.317582130432129
    8. 'prec' → logprob: -6.380082130432129
    9. 'prem' → logprob: -6.630082130432129
    10. ' pres' → logprob: -7.317582130432129

Token 140: '):
' (ID: 1883)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.2547121047973633
    2. 'ub' → logprob: -1.8797121047973633
    3. 'ize' → logprob: -4.379712104797363
    4. ')' → logprob: -4.629712104797363
    5. 'ums' → logprob: -4.629712104797363
    6. 'fore' → logprob: -5.254712104797363
    7. 'pres' → logprob: -5.504712104797363
    8. '=' → logprob: -5.754712104797363
    9. 'uf' → logprob: -5.754712104797363
    10. 'ubl' → logprob: -6.129712104797363

Token 141: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5420560836791992
    2. '   ' → logprob: -0.9170560836791992
    3. ':
' → logprob: -4.542056083679199
    4. '):' → logprob: -5.667056083679199
    5. ',' → logprob: -5.917056083679199
    6. '):
' → logprob: -6.917056083679199
    7. ' :' → logprob: -8.0420560836792
    8. ':return' → logprob: -8.5420560836792
    9. '  ' → logprob: -9.5420560836792
    10. 'as' → logprob: -9.6670560836792

Token 142: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1801220178604126
    2. '   ' → logprob: -2.305121898651123
    3. 'as' → logprob: -2.805121898651123
    4. ' return' → logprob: -5.430121898651123
    5. ' as' → logprob: -8.805122375488281
    6. '
' → logprob: -10.805122375488281
    7. '    
' → logprob: -10.930122375488281
    8. '(as' → logprob: -12.805122375488281
    9. '    ' → logprob: -13.430122375488281
    10. '	return' → logprob: -13.680122375488281

Token 143: ' asum' (ID: 87728)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -3.130576806142926e-05
    2. ' asum' → logprob: -10.625031471252441
    3. ' as' → logprob: -12.375031471252441
    4. 'asim' → logprob: -13.125031471252441
    5. 'int' → logprob: -15.250031471252441
    6. '(as' → logprob: -15.375031471252441
    7. 'ass' → logprob: -16.250030517578125
    8. 'asam' → logprob: -16.500030517578125
    9. 'asem' → logprob: -16.875030517578125
    10. 'a' → logprob: -17.250030517578125

Token 144: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04859543219208717
    2. '-' → logprob: -3.048595428466797
    3. '-s' → logprob: -12.423595428466797
    4. ' ' → logprob: -13.048595428466797
    5. ' ' → logprob: -13.423595428466797
    6. 's' → logprob: -15.923595428466797
    7. '_' → logprob: -16.798595428466797
    8. '+' → logprob: -17.673595428466797
    9. ' minus' → logprob: -17.673595428466797
    10. '-t' → logprob: -17.923595428466797

Token 145: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009115827269852161
    2. ' s' → logprob: -7.000911712646484
    3. '   ' → logprob: -19.125911712646484
    4. '	s' → logprob: -19.250911712646484
    5. '_s' → logprob: -19.750911712646484
    6. '`s' → logprob: -20.250911712646484
    7. '(s' → logprob: -21.250911712646484
    8. ' ' → logprob: -21.250911712646484
    9. ' ' → logprob: -22.375911712646484
    10. '  ' → logprob: -22.500911712646484

Token 146: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011811045929789543
    2. 'main' → logprob: -4.636811256408691
    3. ' solve' → logprob: -7.136811256408691
    4. ' get' → logprob: -8.386811256408691
    5. ' sum' → logprob: -8.511811256408691
    6. ' max' → logprob: -8.511811256408691
    7. ' def' → logprob: -8.511811256408691
    8. ' calc' → logprob: -9.511811256408691
    9. 'def' → logprob: -9.636811256408691
    10. 'solve' → logprob: -9.761811256408691

Token 149: '_diff' (ID: 41047)
  Prédit: '_fore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_fore' → logprob: -0.5154662132263184
    2. '_l' → logprob: -1.3904662132263184
    3. '_as' → logprob: -2.7654662132263184
    4. '_' → logprob: -3.2654662132263184
    5. '_sum' → logprob: -4.390466213226318
    6. '_lat' → logprob: -5.015466213226318
    7. '_f' → logprob: -5.140466213226318
    8. '_max' → logprob: -5.765466213226318
    9. 'fore' → logprob: -5.890466213226318
    10. '_last' → logprob: -6.265466213226318

Token 150: '(x' (ID: 4061)
  Prédit: '(as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(as' → logprob: -0.045443952083587646
    2. '(' → logprob: -3.1704440116882324
    3. '(a' → logprob: -6.295444011688232
    4. '(abs' → logprob: -8.545443534851074
    5. '(s' → logprob: -8.670443534851074
    6. '(def' → logprob: -10.295443534851074
    7. '(calc' → logprob: -10.295443534851074
    8. '(at' → logprob: -10.420443534851074
    9. '(for' → logprob: -10.420443534851074
    10. '(from' → logprob: -10.795443534851074

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020643763709813356
    2. ',y' → logprob: -6.877064228057861
    3. ' ,' → logprob: -7.377064228057861
    4. '_,' → logprob: -8.62706470489502
    5. '1' → logprob: -9.37706470489502
    6. ',x' → logprob: -10.50206470489502
    7. 'a' → logprob: -10.50206470489502
    8. 'y' → logprob: -10.62706470489502
    9. ',
' → logprob: -11.37706470489502
    10. 's' → logprob: -11.75206470489502

Token 152: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.038070179522037506
    2. ' y' → logprob: -3.2880702018737793
    3. 'x' → logprob: -11.788069725036621
    4. ' ' → logprob: -12.163069725036621
    5. '	y' → logprob: -12.163069725036621
    6. '   ' → logprob: -12.163069725036621
    7. '    ' → logprob: -14.038069725036621
    8. '  ' → logprob: -14.288069725036621
    9. '<|end|>' → logprob: -14.475569725036621
    10. 'def' → logprob: -14.850569725036621

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0550401397049427
    2. '):
' → logprob: -2.930040121078491
    3. ' ):' → logprob: -9.80504035949707
    4. '):
' → logprob: -9.93004035949707
    5. '   ' → logprob: -10.68004035949707
    6. ')' → logprob: -11.18004035949707
    7. ':' → logprob: -12.05504035949707
    8. ',' → logprob: -12.80504035949707
    9. ' ):
' → logprob: -13.18004035949707
    10. '=' → logprob: -13.55504035949707

Token 154: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16865000128746033
    2. '   ' → logprob: -1.9186500310897827
    3. ' return' → logprob: -5.168650150299072
    4. 'abs' → logprob: -5.918650150299072
    5. ' abs' → logprob: -12.168649673461914
    6. '	return' → logprob: -12.543649673461914
    7. '   ' → logprob: -16.168649673461914
    8. ':return' → logprob: -16.168649673461914
    9. '
' → logprob: -16.293649673461914
    10. '```' → logprob: -16.293649673461914

Token 155: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.023552339524030685
    2. 'return' (adapté à ' return') → logprob: -3.773552417755127
    3. ' abs' → logprob: -8.148551940917969
    4. ' return' → logprob: -11.398551940917969
    5. '   ' → logprob: -12.273551940917969
    6. 'x' → logprob: -13.648551940917969
    7. '(abs' → logprob: -15.148551940917969
    8. '	return' → logprob: -16.39855194091797
    9. '.abs' → logprob: -16.64855194091797
    10. '
' → logprob: -17.02355194091797

Token 156: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00317783304490149
    2. ' abs' → logprob: -5.753177642822266
    3. 'x' → logprob: -16.378177642822266
    4. '(abs' → logprob: -16.878177642822266
    5. '   ' → logprob: -20.003177642822266
    6. '.abs' → logprob: -20.378177642822266
    7. ' x' → logprob: -20.753177642822266
    8. ' ' → logprob: -21.378177642822266
    9. 'fabs' → logprob: -21.753177642822266
    10. '_abs' → logprob: -22.378177642822266

Token 157: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.003178782993927598
    2. '(' → logprob: -5.753178596496582
    3. '(
' → logprob: -14.128178596496582
    4. 'x' → logprob: -15.128178596496582
    5. '((' → logprob: -17.3781795501709
    6. '(y' → logprob: -19.0031795501709
    7. ' (' → logprob: -20.0031795501709
    8. '(

' → logprob: -20.1281795501709
    9. '(a' → logprob: -20.3781795501709
    10. '(s' → logprob: -21.3781795501709

Token 158: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740924537181854
    2. ' -' → logprob: -0.9740924835205078
    3. '-y' → logprob: -11.474092483520508
    4. ' ' → logprob: -12.349092483520508
    5. ')' → logprob: -16.099092483520508
    6. 'y' → logprob: -16.224092483520508
    7. ',' → logprob: -16.349092483520508
    8. ' y' → logprob: -16.349092483520508
    9. ' ' → logprob: -16.349092483520508
    10. '−' → logprob: -17.099092483520508

Token 159: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014163863845169544
    2. ' y' → logprob: -4.264163970947266
    3. '<|end|>' → logprob: -15.264163970947266
    4. ' ' → logprob: -16.889163970947266
    5. '	y' → logprob: -16.889163970947266
    6. ')y' → logprob: -17.764163970947266
    7. '<|end|>' → logprob: -18.014163970947266
    8. '(y' → logprob: -19.014163970947266
    9. '   ' → logprob: -19.764163970947266
    10. ''y' → logprob: -19.764163970947266

Token 160: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -16.625001907348633
    4. '<|end|>' → logprob: -16.625001907348633
    5. ')

' → logprob: -18.125001907348633
    6. ')return' → logprob: -18.250001907348633
    7. '),' → logprob: -18.375001907348633
    8. ')`' → logprob: -18.500001907348633
    9. '))' → logprob: -18.875001907348633
    10. '}' → logprob: -19.375001907348633

Token 161: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00016587569552939385
    2. '<|end|>' → logprob: -9.875165939331055
    3. 'import' → logprob: -10.125165939331055
    4. '#' → logprob: -10.375165939331055
    5. 'if' → logprob: -11.000165939331055
    6. '```' → logprob: -11.375165939331055
    7. 'print' → logprob: -12.500165939331055
    8. '
' → logprob: -12.875165939331055
    9. ' def' → logprob: -13.000165939331055
    10. '<|end|>' → logprob: -13.625165939331055

Token 162: ' min' (ID: 1349)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.42915621399879456
    2. ' main' → logprob: -1.0541561841964722
    3. 'def' → logprob: -8.179156303405762
    4. 'solve' → logprob: -9.429156303405762
    5. ' def' → logprob: -10.679156303405762
    6. ' solve' → logprob: -11.054156303405762
    7. ' find' → logprob: -11.429156303405762
    8. 'find' → logprob: -11.679156303405762
    9. 'min' → logprob: -11.804156303405762
    10. 'split' → logprob: -12.054156303405762

Token 163: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2236979901790619
    2. '_diff' → logprob: -2.2236979007720947
    3. '(' → logprob: -2.5986979007720947
    4. '(_' → logprob: -6.098698139190674
    5. ' _' → logprob: -6.348698139190674
    6. 'def' → logprob: -6.348698139190674
    7. '(a' → logprob: -6.598698139190674
    8. '_def' → logprob: -6.598698139190674
    9. '_sum' → logprob: -6.598698139190674
    10. '_(' → logprob: -7.098698139190674

Token 164: '_two' (ID: 54305)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.71678227186203
    2. '(' → logprob: -1.3417823314666748
    3. '_two' → logprob: -2.966782331466675
    4. 'diff' → logprob: -3.216782331466675
    5. 'two' → logprob: -3.216782331466675
    6. '<|end|>' → logprob: -3.341782331466675
    7. '_' → logprob: -4.466782093048096
    8. 'max' → logprob: -4.591782093048096
    9. 'list' → logprob: -4.966782093048096
    10. 'min' → logprob: -4.966782093048096

Token 165: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006053224205970764
    2. ' (' → logprob: -5.756053447723389
    3. '(a' → logprob: -6.506053447723389
    4. '(x' → logprob: -7.506053447723389
    5. '(_' → logprob: -7.756053447723389
    6. '_' → logprob: -8.63105297088623
    7. '(_)' → logprob: -10.13105297088623
    8. '_parent' → logprob: -10.50605297088623
    9. '_diff' → logprob: -10.50605297088623
    10. '_(' → logprob: -10.75605297088623

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007939362898468971
    2. ',b' → logprob: -5.132939338684082
    3. ' ,' → logprob: -6.507939338684082
    4. 's' → logprob: -8.882939338684082
    5. ',a' → logprob: -9.132939338684082
    6. '_,' → logprob: -9.257939338684082
    7. '(a' → logprob: -10.132939338684082
    8. '(' → logprob: -10.882939338684082
    9. ',_' → logprob: -10.882939338684082
    10. ',)' → logprob: -10.882939338684082

Token 167: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889242470264435
    2. ' b' → logprob: -2.578892469406128
    3. ' ' → logprob: -13.328892707824707
    4. '   ' → logprob: -14.703892707824707
    5. '<|end|>' → logprob: -15.078892707824707
    6. '  ' → logprob: -15.953892707824707
    7. ' ' → logprob: -16.45389175415039
    8. ',b' → logprob: -16.57889175415039
    9. '	b' → logprob: -16.82889175415039
    10. '    ' → logprob: -16.95389175415039

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035308210644870996
    2. '):
' → logprob: -5.878530979156494
    3. ')' → logprob: -7.878530979156494
    4. ' ):' → logprob: -8.003530502319336
    5. ',' → logprob: -12.503530502319336
    6. '   ' → logprob: -13.253530502319336
    7. '):
' → logprob: -13.503530502319336
    8. ' )' → logprob: -13.628530502319336
    9. ':' → logprob: -14.003530502319336
    10. ' ):
' → logprob: -14.128530502319336

Token 169: '   ' (ID: 271)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4743366837501526
    2. ' return' → logprob: -1.2243366241455078
    3. '   ' → logprob: -2.599336624145508
    4. 'min' → logprob: -5.099336624145508
    5. 'return' → logprob: -5.974336624145508
    6. ' ' → logprob: -8.349336624145508
    7. '    ' → logprob: -8.474336624145508
    8. ' max' → logprob: -9.224336624145508
    9. '	return' → logprob: -10.224336624145508
    10. ' a' → logprob: -10.224336624145508

Token 170: ' return' (ID: 622)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3419482409954071
    2. 'a' → logprob: -2.2169482707977295
    3. ' a' → logprob: -2.3419482707977295
    4. ' return' → logprob: -2.8419482707977295
    5. 'min' → logprob: -4.09194803237915
    6. 'return' (adapté à ' return') → logprob: -5.09194803237915
    7. '   ' → logprob: -5.71694803237915
    8. ' ' → logprob: -9.966948509216309
    9. '    ' → logprob: -11.466948509216309
    10. '	min' → logprob: -11.966948509216309

Token 171: ' min' (ID: 1349)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16056327521800995
    2. ' a' → logprob: -2.0355632305145264
    3. ' min' → logprob: -4.1605634689331055
    4. 'min' → logprob: -6.1605634689331055
    5. ' ' → logprob: -11.660563468933105
    6. '   ' → logprob: -12.285563468933105
    7. '	a' → logprob: -12.410563468933105
    8. '	min' → logprob: -14.035563468933105
    9. '  ' → logprob: -14.910563468933105
    10. ' ' → logprob: -15.535563468933105

Token 172: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06197473779320717
    2. '(' → logprob: -2.8119747638702393
    3. '(
' → logprob: -12.31197452545166
    4. ' (' → logprob: -14.06197452545166
    5. 'a' → logprob: -14.56197452545166
    6. '((' → logprob: -14.81197452545166
    7. '(min' → logprob: -14.93697452545166
    8. '(max' → logprob: -15.93697452545166
    9. '(

' → logprob: -15.93697452545166
    10. '(b' → logprob: -16.811975479125977

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027733417227864265
    2. ' ,' → logprob: -4.027733325958252
    3. ',b' → logprob: -4.652733325958252
    4. 'b' → logprob: -13.77773380279541
    5. ' b' → logprob: -14.65273380279541
    6. ' ' → logprob: -15.40273380279541
    7. ')' → logprob: -15.90273380279541
    8. ',a' → logprob: -16.527732849121094
    9. ',
' → logprob: -16.777732849121094
    10. '   ' → logprob: -17.027732849121094

Token 174: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020806640386581
    2. ' b' → logprob: -2.350208044052124
    3. ')b' → logprob: -14.225208282470703
    4. ' ' → logprob: -15.100208282470703
    5. '	b' → logprob: -15.225208282470703
    6. ')' → logprob: -16.100208282470703
    7. ' ' → logprob: -16.850208282470703
    8. '   ' → logprob: -17.725208282470703
    9. ' б' → logprob: -18.350208282470703
    10. '_b' → logprob: -18.850208282470703

Token 175: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -13.12500286102295
    3. '))' → logprob: -16.125001907348633
    4. ' )' → logprob: -16.375001907348633
    5. '}' → logprob: -16.500001907348633
    6. '),' → logprob: -17.500001907348633
    7. '<|end|>' → logprob: -17.500001907348633
    8. ')}' → logprob: -17.750001907348633
    9. ')return' → logprob: -18.250001907348633
    10. ',)' → logprob: -18.500001907348633

Token 176: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003694205661304295
    2. '<|end|>' → logprob: -8.62536907196045
    3. 'import' → logprob: -9.75036907196045
    4. '#' → logprob: -10.12536907196045
    5. '
' → logprob: -10.37536907196045
    6. 'n' → logprob: -11.25036907196045
    7. 'if' → logprob: -11.37536907196045
    8. '\' → logprob: -11.87536907196045
    9. 'print' → logprob: -12.37536907196045
    10. '\n' → logprob: -12.50036907196045

Token 177: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.35006362199783325
    2. ' main' → logprob: -1.2250635623931885
    3. 'min' → logprob: -7.350063800811768
    4. 'solve' → logprob: -7.850063800811768
    5. ' find' → logprob: -8.85006332397461
    6. 'find' → logprob: -9.10006332397461
    7. ' min' → logprob: -9.22506332397461
    8. ' solve' → logprob: -9.47506332397461
    9. 'calculate' → logprob: -10.97506332397461
    10. 'def' → logprob: -10.97506332397461

Token 178: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1279553291387856e-05
    2. ' ():' → logprob: -11.750011444091797
    3. '():
' → logprob: -13.375011444091797
    4. '(' → logprob: -13.750011444091797
    5. '()' → logprob: -14.875011444091797
    6. '_' → logprob: -15.875011444091797
    7. '(:' → logprob: -16.000011444091797
    8. '(":' → logprob: -16.375011444091797
    9. '():
' → logprob: -18.750011444091797
    10. '().' → logprob: -19.625011444091797

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006733550690114498
    2. 'input' → logprob: -7.500673294067383
    3. ' input' → logprob: -9.125673294067383
    4. 'n' → logprob: -13.000673294067383
    5. '(input' → logprob: -13.000673294067383
    6. '    
' → logprob: -13.500673294067383
    7. '   ' → logprob: -13.500673294067383
    8. '	input' → logprob: -13.875673294067383
    9. 'import' → logprob: -14.250673294067383
    10. ',input' → logprob: -14.375673294067383

Token 180: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.07237877696752548
    2. ' input' → logprob: -2.8223788738250732
    3. '   ' → logprob: -4.572378635406494
    4. 'n' → logprob: -12.322379112243652
    5. '_input' → logprob: -12.322379112243652
    6. '    
' → logprob: -12.572379112243652
    7. ' ' → logprob: -13.197379112243652
    8. 'import' → logprob: -13.197379112243652
    9. '	input' → logprob: -13.197379112243652
    10. '  ' → logprob: -14.072379112243652

Token 181: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.12697598338127136
    2. '_' → logprob: -2.1269760131835938
    3. '()' → logprob: -10.876976013183594
    4. 'func' → logprob: -11.626976013183594
    5. '_fun' → logprob: -12.751976013183594
    6. '_function' → logprob: -12.751976013183594
    7. ' _' → logprob: -12.751976013183594
    8. '_fn' → logprob: -12.876976013183594
    9. '_f' → logprob: -13.001976013183594
    10. '_=' → logprob: -13.501976013183594

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3066398799419403
    2. '=' → logprob: -1.8066399097442627
    3. '()' → logprob: -2.3066399097442627
    4. ' ()' → logprob: -8.556639671325684
    5. '(' → logprob: -9.931639671325684
    6. ')' → logprob: -11.681639671325684
    7. ' ' → logprob: -12.056639671325684
    8. ',' → logprob: -12.306639671325684
    9. '()='' → logprob: -12.306639671325684
    10. '   ' → logprob: -12.806639671325684

Token 183: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5759414434432983
    2. ' get' → logprob: -0.8259414434432983
    3. ' sys' → logprob: -13.95094108581543
    4. 'sys' → logprob: -14.70094108581543
    5. '	get' → logprob: -14.82594108581543
    6. '=get' → logprob: -15.82594108581543
    7. '(get' → logprob: -16.20094108581543
    8. '_get' → logprob: -16.57594108581543
    9. 'read' → logprob: -17.32594108581543
    10. ' getchar' → logprob: -17.45094108581543

Token 184: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.9146995327901095e-05
    2. '_' → logprob: -11.125019073486328
    3. ' _' → logprob: -13.375019073486328
    4. '_inputs' → logprob: -14.250019073486328
    5. '_output' → logprob: -14.375019073486328
    6. '_in' → logprob: -14.375019073486328
    7. '_answer' → logprob: -16.000019073486328
    8. '_import' → logprob: -16.125019073486328
    9. '_user' → logprob: -16.500019073486328
    10. '_a' → logprob: -16.500019073486328

Token 185: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00027420982951298356
    2. '_' → logprob: -8.250274658203125
    3. 'func' → logprob: -12.000274658203125
    4. '_function' → logprob: -12.750274658203125
    5. '_fun' → logprob: -13.125274658203125
    6. ' _' → logprob: -14.250274658203125
    7. '_FUNC' → logprob: -15.000274658203125
    8. '_f' → logprob: -15.250274658203125
    9. 'Func' → logprob: -15.500274658203125
    10. '()' → logprob: -16.375274658203125

Token 186: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.908022285439074e-05
    2. '()
' → logprob: -9.750059127807617
    3. '();' → logprob: -15.500059127807617
    4. '()

' → logprob: -15.500059127807617
    5. '(' → logprob: -16.750059127807617
    6. '()`' → logprob: -16.750059127807617
    7. '()\' → logprob: -16.875059127807617
    8. '()
' → logprob: -16.875059127807617
    9. '()"' → logprob: -17.875059127807617
    10. '(),' → logprob: -18.125059127807617

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008553942665457726
    2. '    
' → logprob: -5.383553981781006
    3. 'n' → logprob: -5.758553981781006
    4. '
' → logprob: -7.383553981781006
    5. '	n' → logprob: -9.883553504943848
    6. '```' → logprob: -10.758553504943848
    7. ' n' → logprob: -10.883553504943848
    8. '<|end|>' → logprob: -11.383553504943848
    9. '(n' → logprob: -11.758553504943848
    10. '    ' → logprob: -12.008553504943848

Token 188: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.026626532897353172
    2. '   ' → logprob: -3.6516265869140625
    3. ' n' → logprob: -8.776626586914062
    4. 'N' → logprob: -8.776626586914062
    5. '_n' → logprob: -12.276626586914062
    6. '	n' → logprob: -12.276626586914062
    7. '```' → logprob: -12.526626586914062
    8. '    
' → logprob: -13.901626586914062
    9. '#' → logprob: -14.151626586914062
    10. '  ' → logprob: -14.276626586914062

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005932236090302467
    2. '=' → logprob: -5.130932331085205
    3. ',' → logprob: -13.630931854248047
    4. ')' → logprob: -14.255931854248047
    5. ' ' → logprob: -14.755931854248047
    6. '=int' → logprob: -15.005931854248047
    7. ' ' → logprob: -15.130931854248047
    8. ' ,' → logprob: -15.755931854248047
    9. '_' → logprob: -16.130931854248047
    10. ' =
' → logprob: -16.130931854248047

Token 190: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0076309931464493275
    2. 'read' → logprob: -5.007630825042725
    3. ' int' → logprob: -7.007630825042725
    4. 'int' → logprob: -11.507631301879883
    5. '	read' → logprob: -16.507631301879883
    6. ' readline' → logprob: -17.257631301879883
    7. '(read' → logprob: -17.507631301879883
    8. '_read' → logprob: -17.882631301879883
    9. ' n' → logprob: -18.007631301879883
    10. ' ' → logprob: -18.132631301879883

Token 191: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0002636006975080818
    2. '_' → logprob: -8.250263214111328
    3. 'n' → logprob: -13.750263214111328
    4. '(' → logprob: -14.500263214111328
    5. '(n' → logprob: -14.875263214111328
    6. '```' → logprob: -15.750263214111328
    7. '_a' → logprob: -16.500263214111328
    8. ' _' → logprob: -16.750263214111328
    9. '_
' → logprob: -16.875263214111328
    10. '
' → logprob: -18.000263214111328

Token 192: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. ' (' → logprob: -18.000001907348633
    4. 'input' → logprob: -18.375001907348633
    5. '()' → logprob: -19.250001907348633
    6. ',input' → logprob: -19.250001907348633
    7. '(
' → logprob: -20.250001907348633
    8. '=input' → logprob: -20.250001907348633
    9. '((' → logprob: -21.125001907348633
    10. '(INPUT' → logprob: -21.250001907348633

Token 193: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -3.8889261304575484e-06
    2. 'func' → logprob: -13.125003814697266
    3. '_' → logprob: -13.500003814697266
    4. ')' → logprob: -15.875003814697266
    5. '```' → logprob: -16.375003814697266
    6. ')_' → logprob: -16.750003814697266
    7. '_function' → logprob: -17.500003814697266
    8. '_fun' → logprob: -17.500003814697266
    9. '(_' → logprob: -17.750003814697266
    10. '(' → logprob: -17.875003814697266

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.40998875699006e-05
    2. '())' → logprob: -9.62507438659668
    3. '()' → logprob: -12.12507438659668
    4. ')
' → logprob: -13.00007438659668
    5. ' )' → logprob: -15.37507438659668
    6. ')#' → logprob: -17.75007438659668
    7. ')`' → logprob: -18.12507438659668
    8. ')

' → logprob: -18.62507438659668
    9. '))' → logprob: -18.62507438659668
    10. ' ' → logprob: -19.00007438659668

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026204893365502357
    2. 'a' → logprob: -6.002620697021484
    3. '    
' → logprob: -9.627620697021484
    4. ' a' → logprob: -10.252620697021484
    5. '	a' → logprob: -11.252620697021484
    6. '<|end|>' → logprob: -11.252620697021484
    7. '```' → logprob: -12.252620697021484
    8. '    ' → logprob: -12.877620697021484
    9. '   ' → logprob: -13.127620697021484
    10. '       ' → logprob: -13.502620697021484

Token 196: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0006345203728415072
    2. '   ' → logprob: -7.750634670257568
    3. ' a' → logprob: -8.50063419342041
    4. '	a' → logprob: -15.25063419342041
    5. '    
' → logprob: -16.625635147094727
    6. '```' → logprob: -16.750635147094727
    7. '  ' → logprob: -17.000635147094727
    8. ' ' → logprob: -17.000635147094727
    9. '_a' → logprob: -17.125635147094727
    10. 'A' → logprob: -18.375635147094727

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751179739832878
    2. '=' → logprob: -3.5297510623931885
    3. '_' → logprob: -15.02975082397461
    4. '[' → logprob: -15.90475082397461
    5. ',' → logprob: -16.65475082397461
    6. ' ' → logprob: -16.77975082397461
    7. '=input' → logprob: -17.02975082397461
    8. '＝' → logprob: -17.52975082397461
    9. ' ' → logprob: -17.65475082397461
    10. ')' → logprob: -17.77975082397461

Token 198: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.31326186656951904
    2. 'read' → logprob: -1.313261866569519
    3. '(read' → logprob: -16.438261032104492
    4. '	read' → logprob: -16.813261032104492
    5. '   ' → logprob: -18.313261032104492
    6. '_read' → logprob: -18.563261032104492
    7. '.read' → logprob: -19.438261032104492
    8. ' reads' → logprob: -20.313261032104492
    9. '    ' → logprob: -20.438261032104492
    10. ' ' → logprob: -21.688261032104492

Token 199: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -6.754368223482743e-05
    2. '_' → logprob: -9.625067710876465
    3. '_n' → logprob: -14.250067710876465
    4. 'a' → logprob: -14.375067710876465
    5. ' _' → logprob: -15.875067710876465
    6. '```' → logprob: -18.12506675720215
    7. '_
' → logprob: -19.12506675720215
    8. ' a' → logprob: -19.50006675720215
    9. '(' → logprob: -19.50006675720215
    10. '_an' → logprob: -19.75006675720215

Token 200: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -11.750008583068848
    3. ' (' → logprob: -14.875008583068848
    4. 'input' → logprob: -15.375008583068848
    5. '=input' → logprob: -17.50000762939453
    6. ',input' → logprob: -17.62500762939453
    7. '[input' → logprob: -17.87500762939453
    8. '<input' → logprob: -18.75000762939453
    9. ' input' → logprob: -19.50000762939453
    10. '(
' → logprob: -20.00000762939453

Token 201: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00012535012501757592
    2. 'func' → logprob: -9.00012493133545
    3. '_' → logprob: -14.12512493133545
    4. '```' → logprob: -14.87512493133545
    5. '(func' → logprob: -15.37512493133545
    6. 'Func' → logprob: -15.50012493133545
    7. ')' → logprob: -15.62512493133545
    8. '_function' → logprob: -15.62512493133545
    9. '_FUNC' → logprob: -16.125125885009766
    10. '(' → logprob: -16.875125885009766

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12130122631788254
    2. '())' → logprob: -2.3713011741638184
    3. '()' → logprob: -3.8713011741638184
    4. '(' → logprob: -10.871301651000977
    5. ' )' → logprob: -11.371301651000977
    6. '(input' → logprob: -12.371301651000977
    7. '()
' → logprob: -13.371301651000977
    8. ' ())' → logprob: -13.371301651000977
    9. ')
' → logprob: -14.121301651000977
    10. '))' → logprob: -14.246301651000977

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04643774405121803
    2. 'as' → logprob: -3.1714377403259277
    3. '
' → logprob: -6.546437740325928
    4. ' as' → logprob: -6.671437740325928
    5. '    
' → logprob: -7.546437740325928
    6. 'a' → logprob: -10.046438217163086
    7. '```' → logprob: -10.421438217163086
    8. '  ' → logprob: -10.671438217163086
    9. ' ' → logprob: -11.171438217163086
    10. 'asam' → logprob: -11.296438217163086

Token 204: ' asum' (ID: 87728)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.021905973553657532
    2. '   ' → logprob: -3.8969058990478516
    3. ' as' → logprob: -6.646905899047852
    4. 'ass' → logprob: -11.146905899047852
    5. 'asam' → logprob: -11.271905899047852
    6. ' asum' → logprob: -11.896905899047852
    7. 'asim' → logprob: -12.021905899047852
    8. '    
' → logprob: -12.271905899047852
    9. '	as' → logprob: -12.646905899047852
    10. '  ' → logprob: -12.771905899047852

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688167929649353
    2. ' =' → logprob: -1.136881709098816
    3. '=sum' → logprob: -11.761881828308105
    4. '_' → logprob: -13.761881828308105
    5. '=a' → logprob: -14.011881828308105
    6. ')' → logprob: -15.386881828308105
    7. '=s' → logprob: -15.761881828308105
    8. '＝' → logprob: -16.01188087463379
    9. '_=' → logprob: -16.13688087463379
    10. '(' → logprob: -16.26188087463379

Token 206: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.47408103942871094
    2. 'sum' → logprob: -0.9740810394287109
    3. '(sum' → logprob: -12.599081039428711
    4. '	sum' → logprob: -14.724081039428711
    5. '=sum' → logprob: -15.974081039428711
    6. ' ' → logprob: -16.84908103942871
    7. '   ' → logprob: -17.34908103942871
    8. '  ' → logprob: -18.59908103942871
    9. '_sum' → logprob: -18.72408103942871
    10. '.sum' → logprob: -18.84908103942871

Token 207: '_list' (ID: 4162)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.052241403609514236
    2. '_list' → logprob: -3.052241325378418
    3. '(' → logprob: -5.677241325378418
    4. '_' → logprob: -8.802241325378418
    5. '_a' → logprob: -10.177241325378418
    6. '_(' → logprob: -11.177241325378418
    7. '(_' → logprob: -11.552241325378418
    8. 'a' → logprob: -12.177241325378418
    9. 'List' → logprob: -13.052241325378418
    10. ' (' → logprob: -13.802241325378418

Token 208: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -11.750007629394531
    3. ' (' → logprob: -17.12500762939453
    4. '(ai' → logprob: -18.62500762939453
    5. 'a' → logprob: -20.25000762939453
    6. '(as' → logprob: -20.50000762939453
    7. '(ab' → logprob: -20.50000762939453
    8. '(A' → logprob: -20.87500762939453
    9. '(an' → logprob: -20.87500762939453
    10. '```' → logprob: -21.25000762939453

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.349075556499884e-05
    2. '())' → logprob: -10.7500638961792
    3. '   ' → logprob: -11.0000638961792
    4. ')
' → logprob: -11.3750638961792
    5. ' )' → logprob: -11.7500638961792
    6. '()' → logprob: -12.5000638961792
    7. ')a' → logprob: -13.7500638961792
    8. '(a' → logprob: -15.1250638961792
    9. '))' → logprob: -15.6250638961792
    10. ')

' → logprob: -16.250062942504883

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07379850745201111
    2. 'as' → logprob: -2.698798418045044
    3. ' as' → logprob: -5.698798656463623
    4. '    
' → logprob: -9.073798179626465
    5. 'asam' → logprob: -9.323798179626465
    6. '
' → logprob: -9.448798179626465
    7. ' asum' → logprob: -9.823798179626465
    8. 'ass' → logprob: -10.448798179626465
    9. ' ' → logprob: -10.948798179626465
    10. '   ' → logprob: -11.073798179626465

Token 211: ' asum' (ID: 87728)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.015415230765938759
    2. '   ' → logprob: -4.390415191650391
    3. ' asum' → logprob: -6.265415191650391
    4. ' as' → logprob: -7.265415191650391
    5. 'ass' → logprob: -8.76541519165039
    6. 'asim' → logprob: -10.01541519165039
    7. 'asam' → logprob: -10.51541519165039
    8. ' ' → logprob: -10.76541519165039
    9. '  ' → logprob: -11.51541519165039
    10. '	as' → logprob: -11.64041519165039

Token 212: 'half' (ID: 52836)
  Prédit: '_half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -0.03807695209980011
    2. 'half' → logprob: -3.288076877593994
    3. '_' → logprob: -11.538077354431152
    4. ' half' → logprob: -11.663077354431152
    5. ' =' → logprob: -12.163077354431152
    6. '_HALF' → logprob: -12.163077354431152
    7. '=' → logprob: -13.288077354431152
    8. 'Half' → logprob: -13.538077354431152
    9. '_hal' → logprob: -13.538077354431152
    10. 'hal' → logprob: -14.163077354431152

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004622372332960367
    2. '=' → logprob: -5.379622459411621
    3. '_' → logprob: -13.504622459411621
    4. ' ' → logprob: -14.879622459411621
    5. ')' → logprob: -15.879622459411621
    6. ' ' → logprob: -16.004621505737305
    7. ',' → logprob: -16.379621505737305
    8. ' _' → logprob: -16.879621505737305
    9. ' =)' → logprob: -17.004621505737305
    10. ' =
' → logprob: -17.879621505737305

Token 214: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.42904961109161377
    2. 'get' → logprob: -1.0540496110916138
    3. 'as' → logprob: -8.804049491882324
    4. ' asum' → logprob: -8.804049491882324
    5. '(get' → logprob: -11.304049491882324
    6. 'ass' → logprob: -11.304049491882324
    7. ' as' → logprob: -11.429049491882324
    8. ' ' → logprob: -13.054049491882324
    9. ' gets' → logprob: -13.179049491882324
    10. '	get' → logprob: -13.429049491882324

Token 215: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -0.001331190811470151
    2. 'as' → logprob: -6.626331329345703
    3. '(as' → logprob: -13.376331329345703
    4. '_' → logprob: -13.376331329345703
    5. ' as' → logprob: -14.376331329345703
    6. ''as' → logprob: -14.376331329345703
    7. '_a' → logprob: -14.876331329345703
    8. '_ass' → logprob: -15.251331329345703
    9. 'a' → logprob: -16.751331329345703
    10. '_input' → logprob: -17.251331329345703

Token 216: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0001895935565698892
    2. 'sum' → logprob: -8.875189781188965
    3. 'u' → logprob: -10.250189781188965
    4. 'uh' → logprob: -11.500189781188965
    5. 'ub' → logprob: -14.125189781188965
    6. '(' → logprob: -14.750189781188965
    7. 'half' → logprob: -14.750189781188965
    8. '_sum' → logprob: -15.000189781188965
    9. 'up' → logprob: -15.125189781188965
    10. '_' → logprob: -15.375189781188965

Token 217: '_half' (ID: 105284)
  Prédit: '_half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -0.02324605919420719
    2. 'half' → logprob: -3.7732460498809814
    3. '(as' → logprob: -15.898245811462402
    4. 'hal' → logprob: -16.64824676513672
    5. 'Half' → logprob: -16.77324676513672
    6. '_' → logprob: -16.77324676513672
    7. '(a' → logprob: -16.89824676513672
    8. 'as' → logprob: -17.02324676513672
    9. '_hal' → logprob: -17.14824676513672
    10. '_HALF' → logprob: -17.89824676513672

Token 218: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -0.00016027313540689647
    2. '(' → logprob: -8.750160217285156
    3. ' (' → logprob: -13.375160217285156
    4. '(os' → logprob: -16.750160217285156
    5. '(at' → logprob: -16.750160217285156
    6. '(an' → logprob: -17.000160217285156
    7. '(ast' → logprob: -17.250160217285156
    8. '(s' → logprob: -17.500160217285156
    9. '(or' → logprob: -17.875160217285156
    10. '(sum' → logprob: -18.000160217285156

Token 219: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00019007037917617708
    2. 'sum' → logprob: -8.875189781188965
    3. 'u' → logprob: -10.125189781188965
    4. 'us' → logprob: -12.375189781188965
    5. 'ut' → logprob: -13.375189781188965
    6. 'un' → logprob: -13.625189781188965
    7. 'uh' → logprob: -13.750189781188965
    8. 's' → logprob: -15.000189781188965
    9. 'ume' → logprob: -15.375189781188965
    10. 'ul' → logprob: -15.500189781188965

Token 220: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.690834273584187e-05
    2. ')
' → logprob: -10.25003719329834
    3. '   ' → logprob: -14.00003719329834
    4. ' )' → logprob: -15.25003719329834
    5. ')

' → logprob: -15.75003719329834
    6. '()' → logprob: -15.87503719329834
    7. '))' → logprob: -17.125036239624023
    8. '())' → logprob: -17.375036239624023
    9. '),' → logprob: -18.375036239624023
    10. ')#' → logprob: -18.375036239624023

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008311486802995205
    2. 'fo' → logprob: -5.2583112716674805
    3. '    
' → logprob: -6.5083112716674805
    4. ' fores' → logprob: -7.0083112716674805
    5. '
' → logprob: -8.38331127166748
    6. '   ' → logprob: -9.13331127166748
    7. ',' → logprob: -9.50831127166748
    8. ' fo' → logprob: -9.50831127166748
    9. 'fore' → logprob: -9.63331127166748
    10. '```' → logprob: -10.75831127166748

Token 222: ' fores' (ID: 103317)
  Prédit: 'fo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fo' → logprob: -0.03418188914656639
    2. 'fore' → logprob: -3.534181833267212
    3. ' fores' → logprob: -5.534182071685791
    4. '   ' → logprob: -8.284181594848633
    5. ' fore' → logprob: -10.159181594848633
    6. 'f' → logprob: -10.159181594848633
    7. ' fo' → logprob: -10.409181594848633
    8. 'fos' → logprob: -10.784181594848633
    9. '    
' → logprob: -10.784181594848633
    10. '```' → logprob: -10.909181594848633

Token 223: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.01817663200199604
    2. 'sum' → logprob: -4.018176555633545
    3. '_sum' → logprob: -11.143177032470703
    4. 'ums' → logprob: -12.393177032470703
    5. ',' → logprob: -12.893177032470703
    6. 's' → logprob: -13.768177032470703
    7. '   ' → logprob: -13.893177032470703
    8. 'umsum' → logprob: -13.893177032470703
    9. ' sum' → logprob: -14.518177032470703
    10. 'ум' → logprob: -15.018177032470703

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004028175957500935
    2. ' ,' → logprob: -5.7540283203125
    3. ' =' → logprob: -7.5040283203125
    4. '=' → logprob: -8.1290283203125
    5. 's' → logprob: -13.6290283203125
    6. '_,' → logprob: -14.6290283203125
    7. ',s' → logprob: -14.7540283203125
    8. '，' → logprob: -15.3790283203125
    9. ',a' → logprob: -15.6290283203125
    10. ' +=' → logprob: -15.8790283203125

Token 225: ' presum' (ID: 60906)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.048716362565755844
    2. ' presum' → logprob: -3.0487163066864014
    3. 'p' → logprob: -10.04871654510498
    4. 'prem' → logprob: -10.67371654510498
    5. 'pre' → logprob: -10.92371654510498
    6. ' pres' → logprob: -11.54871654510498
    7. ' ' → logprob: -11.79871654510498
    8. 'pred' → logprob: -11.92371654510498
    9. 'prec' → logprob: -13.04871654510498
    10. '_pres' → logprob: -13.04871654510498

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692831456661224
    2. '=' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.876928329467773
    4. ',' → logprob: -17.001928329467773
    5. '＝' → logprob: -17.001928329467773
    6. ')' → logprob: -17.626928329467773
    7. ' =)' → logprob: -18.001928329467773
    8. '=get' → logprob: -18.251928329467773
    9. '   ' → logprob: -18.251928329467773
    10. '  ' → logprob: -18.751928329467773

Token 227: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.5759491920471191
    2. 'calc' → logprob: -0.8259491920471191
    3. '(calc' → logprob: -11.575948715209961
    4. '.calc' → logprob: -15.700948715209961
    5. 'cal' → logprob: -16.07594871520996
    6. '_calc' → logprob: -16.82594871520996
    7. 'c' → logprob: -17.57594871520996
    8. ' ' → logprob: -17.82594871520996
    9. '   ' → logprob: -17.95094871520996
    10. 'calculate' → logprob: -18.57594871520996

Token 228: '_fore' (ID: 83380)
  Prédit: '_fore'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fore' → logprob: -3.03521392197581e-05
    2. '_for' → logprob: -11.375030517578125
    3. 'fore' → logprob: -11.625030517578125
    4. '_' → logprob: -11.875030517578125
    5. '_f' → logprob: -13.375030517578125
    6. '_far' → logprob: -15.125030517578125
    7. '```' → logprob: -15.250030517578125
    8. '_front' → logprob: -16.000030517578125
    9. '_forward' → logprob: -16.250030517578125
    10. '_pre' → logprob: -16.500030517578125

Token 229: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -4.008129963040119e-06
    2. 'and' → logprob: -14.000003814697266
    3. '_s' → logprob: -14.000003814697266
    4. '_' → logprob: -14.250003814697266
    5. '_sum' → logprob: -14.375003814697266
    6. ' and' → logprob: -15.125003814697266
    7. '_for' → logprob: -15.500003814697266
    8. '_or' → logprob: -15.500003814697266
    9. '_AND' → logprob: -16.250003814697266
    10. 'ands' → logprob: -16.625003814697266

Token 230: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.28148767352104187
    2. 'pre' → logprob: -1.4064877033233643
    3. '_pres' → logprob: -8.406487464904785
    4. 'pres' → logprob: -10.031487464904785
    5. ' pre' → logprob: -10.781487464904785
    6. '(pre' → logprob: -11.531487464904785
    7. '_' → logprob: -11.656487464904785
    8. 's' → logprob: -12.656487464904785
    9. '	pre' → logprob: -12.781487464904785
    10. '_s' → logprob: -12.781487464904785

Token 231: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -7.576873758807778e-05
    2. '_sum' → logprob: -10.250075340270996
    3. 's' → logprob: -10.375075340270996
    4. 'sum' → logprob: -11.625075340270996
    5. '_nums' → logprob: -18.000076293945312
    6. '_' → logprob: -18.250076293945312
    7. 'summ' → logprob: -18.375076293945312
    8. 'a' → logprob: -18.375076293945312
    9. '-s' → logprob: -18.500076293945312
    10. 'S' → logprob: -18.750076293945312

Token 232: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.002582081826403737
    2. 'um' → logprob: -6.00258207321167
    3. 'umsum' → logprob: -10.252582550048828
    4. '(' → logprob: -11.627582550048828
    5. '```' → logprob: -12.002582550048828
    6. ' ums' → logprob: -12.127582550048828
    7. '_' → logprob: -12.502582550048828
    8. '[' → logprob: -12.502582550048828
    9. 'u' → logprob: -12.502582550048828
    10. '...' → logprob: -12.690082550048828

Token 233: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.60414821645827e-06
    2. ' (' → logprob: -12.625004768371582
    3. '(' → logprob: -13.625004768371582
    4. '(as' → logprob: -18.375003814697266
    5. '(ai' → logprob: -18.750003814697266
    6. '(
' → logprob: -20.375003814697266
    7. '```' → logprob: -20.375003814697266
    8. '(A' → logprob: -21.250003814697266
    9. ' ' → logprob: -21.250003814697266
    10. '(an' → logprob: -21.625003814697266

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.251091377227567e-05
    2. ' ,' → logprob: -10.250042915344238
    3. '(as' → logprob: -11.875042915344238
    4. '   ' → logprob: -16.750041961669922
    5. '(' → logprob: -17.750041961669922
    6. ')' → logprob: -17.875041961669922
    7. ',a' → logprob: -18.250041961669922
    8. ',
' → logprob: -18.375041961669922
    9. '```' → logprob: -18.375041961669922
    10. ',(' → logprob: -19.000041961669922

Token 235: ' asum' (ID: 87728)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0009960101451724768
    2. ' asum' → logprob: -7.000996112823486
    3. 'ass' → logprob: -9.750995635986328
    4. 'asim' → logprob: -10.750995635986328
    5. '   ' → logprob: -13.750995635986328
    6. 'asam' → logprob: -13.750995635986328
    7. ' as' → logprob: -14.000995635986328
    8. '
' → logprob: -14.375995635986328
    9. 'asem' → logprob: -15.125995635986328
    10. ' assum' → logprob: -15.125995635986328

Token 236: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -1.1472419600977446e-06
    2. '_half' → logprob: -14.125000953674316
    3. ' half' → logprob: -15.375000953674316
    4. 'hal' → logprob: -16.750001907348633
    5. 'Half' → logprob: -18.500001907348633
    6. ')' → logprob: -19.375001907348633
    7. '-half' → logprob: -19.500001907348633
    8. 'alf' → logprob: -19.500001907348633
    9. 'halb' → logprob: -19.625001907348633
    10. '_HALF' → logprob: -21.125001907348633

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.500003814697266
    4. ' )' → logprob: -17.750003814697266
    5. ')

' → logprob: -18.750003814697266
    6. ')`' → logprob: -19.000003814697266
    7. ')
' → logprob: -19.500003814697266
    8. '))' → logprob: -19.875003814697266
    9. '),' → logprob: -20.125003814697266
    10. ')#' → logprob: -20.625003814697266

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2875048816204071
    2. 'l' → logprob: -1.4125049114227295
    3. '
' → logprob: -5.66250467300415
    4. ' l' → logprob: -6.41250467300415
    5. '_l' → logprob: -7.91250467300415
    6. '```' → logprob: -8.037505149841309
    7. '<|end|>' → logprob: -8.662505149841309
    8. '    
' → logprob: -8.662505149841309
    9. '	l' → logprob: -10.037505149841309
    10. ',' → logprob: -10.662505149841309

Token 239: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0065559749491512775
    2. 'lat' → logprob: -6.256556034088135
    3. '   ' → logprob: -6.506556034088135
    4. 'diff' → logprob: -6.881556034088135
    5. ' l' → logprob: -7.631556034088135
    6. '```' → logprob: -8.131555557250977
    7. 'fore' → logprob: -8.381555557250977
    8. 'fo' → logprob: -8.756555557250977
    9. 'lates' → logprob: -8.881555557250977
    10. '    
' → logprob: -9.131555557250977

Token 240: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.0008577430271543562
    2. 'at' → logprob: -7.125857830047607
    3. 'a' → logprob: -11.00085735321045
    4. 'ast' → logprob: -11.00085735321045
    5. 'asts' → logprob: -12.25085735321045
    6. 'atso' → logprob: -12.62585735321045
    7. 'atsu' → logprob: -12.87585735321045
    8. 'l' → logprob: -13.62585735321045
    9. 'atsby' → logprob: -13.75085735321045
    10. '
' → logprob: -14.25085735321045

Token 241: 'um' (ID: 394)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4744022488594055
    2. 'um' → logprob: -0.9744022488594055
    3. 's' → logprob: -8.84940242767334
    4. 'umsum' → logprob: -9.47440242767334
    5. '_sum' → logprob: -9.59940242767334
    6. 'ums' → logprob: -12.22440242767334
    7. 'us' → logprob: -12.47440242767334
    8. 'psum' → logprob: -12.84940242767334
    9. '   ' → logprob: -12.84940242767334
    10. ' sum' → logprob: -13.09940242767334

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3900194764137268
    2. '=' → logprob: -1.140019416809082
    3. ',' → logprob: -5.765019416809082
    4. ' ,' → logprob: -12.390019416809082
    5. '_' → logprob: -13.640019416809082
    6. 's' → logprob: -14.265019416809082
    7. ')' → logprob: -14.390019416809082
    8. ' ' → logprob: -14.640019416809082
    9. '1' → logprob: -15.015019416809082
    10. '＝' → logprob: -15.140019416809082

Token 243: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.018150994554162025
    2. 'calc' → logprob: -4.018150806427002
    3. '(calc' → logprob: -13.89315128326416
    4. '.calc' → logprob: -15.89315128326416
    5. '_calc' → logprob: -16.768150329589844
    6. ' cal' → logprob: -17.518150329589844
    7. ' ' → logprob: -18.143150329589844
    8. ' calculate' → logprob: -18.643150329589844
    9. ' calcul' → logprob: -18.893150329589844
    10. ' ' → logprob: -19.143150329589844

Token 244: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.500000953674316
    3. '```' → logprob: -19.125
    4. '_calc' → logprob: -20.125
    5. '_lat' → logprob: -20.25
    6. ' _' → logprob: -20.375
    7. 'l' → logprob: -20.5
    8. '_
' → logprob: -21.0
    9. '_L' → logprob: -21.375
    10. '(_' → logprob: -21.375

Token 245: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.0034909043461084366
    2. 'at' → logprob: -5.753490924835205
    3. 'ast' → logprob: -8.628490447998047
    4. 'asts' → logprob: -10.628490447998047
    5. 'a' → logprob: -10.753490447998047
    6. 'ist' → logprob: -10.878490447998047
    7. 'as' → logprob: -11.003490447998047
    8. 'atso' → logprob: -11.378490447998047
    9. 'atsu' → logprob: -12.253490447998047
    10. 'sum' → logprob: -12.378490447998047

Token 246: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -3.023293538717553e-05
    2. 'sum' → logprob: -10.500030517578125
    3. '_sum' → logprob: -14.000030517578125
    4. 'ум' → logprob: -14.250030517578125
    5. '_um' → logprob: -15.000030517578125
    6. 'umsum' → logprob: -16.000030517578125
    7. 'umm' → logprob: -16.375030517578125
    8. 'u' → logprob: -16.500030517578125
    9. 'ub' → logprob: -16.500030517578125
    10. 'ume' → logprob: -16.750030517578125

Token 247: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. '(at' → logprob: -17.62501335144043
    4. ' (' → logprob: -17.75001335144043
    5. '(ac' → logprob: -18.50001335144043
    6. 'as' → logprob: -18.50001335144043
    7. '(ab' → logprob: -18.87501335144043
    8. '(an' → logprob: -19.12501335144043
    9. '	as' → logprob: -19.37501335144043
    10. '(ar' → logprob: -19.37501335144043

Token 248: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0023059581872075796
    2. 'sum' → logprob: -6.12730598449707
    3. 's' → logprob: -10.12730598449707
    4. 'us' → logprob: -10.37730598449707
    5. 'u' → logprob: -10.87730598449707
    6. 'ume' → logprob: -11.87730598449707
    7. 'ums' → logprob: -13.00230598449707
    8. '   ' → logprob: -13.50230598449707
    9. 'pres' → logprob: -13.50230598449707
    10. 'umsum' → logprob: -13.50230598449707

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007861602935008705
    2. ',p' → logprob: -7.250786304473877
    3. ' ,' → logprob: -9.875785827636719
    4. 'fo' → logprob: -11.125785827636719
    5. ',
' → logprob: -12.750785827636719
    6. ',l' → logprob: -13.250785827636719
    7. ',f' → logprob: -13.625785827636719
    8. ')' → logprob: -14.500785827636719
    9. ',s' → logprob: -14.875785827636719
    10. 'pres' → logprob: -15.125785827636719

Token 250: ' fores' (ID: 103317)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.08366644382476807
    2. ' presum' → logprob: -2.8336663246154785
    3. 'fo' → logprob: -4.2086663246154785
    4. ' fores' → logprob: -5.9586663246154785
    5. ' pres' → logprob: -6.7086663246154785
    6. 'prem' → logprob: -6.9586663246154785
    7. 'fore' → logprob: -7.8336663246154785
    8. ' presume' → logprob: -8.583666801452637
    9. '   ' → logprob: -9.021166801452637
    10. 'pre' → logprob: -9.083666801452637

Token 251: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -8.64970643306151e-05
    2. 'sum' → logprob: -9.375086784362793
    3. 'ум' → logprob: -14.750086784362793
    4. 's' → logprob: -15.000086784362793
    5. 'm' → logprob: -15.125086784362793
    6. 'u' → logprob: -15.500086784362793
    7. 'ume' → logprob: -16.125085830688477
    8. 'un' → logprob: -17.000085830688477
    9. 'umed' → logprob: -17.375085830688477
    10. 'im' → logprob: -17.500085830688477

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005019200034439564
    2. ')
' → logprob: -7.625502109527588
    3. '   ' → logprob: -11.25050163269043
    4. ' )' → logprob: -14.37550163269043
    5. ')
' → logprob: -16.00050163269043
    6. ')

' → logprob: -16.25050163269043
    7. '))' → logprob: -18.00050163269043
    8. '),' → logprob: -18.37550163269043
    9. ')`' → logprob: -18.37550163269043
    10. ')\
' → logprob: -18.87550163269043

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013993899337947369
    2. 'diff' → logprob: -4.638993740081787
    3. 'l' → logprob: -6.263993740081787
    4. '
' → logprob: -7.138993740081787
    5. '    
' → logprob: -7.763993740081787
    6. '```' → logprob: -8.388994216918945
    7. 'lat' → logprob: -8.638994216918945
    8. ' l' → logprob: -9.388994216918945
    9. 'prev' → logprob: -9.638994216918945
    10. ' diff' → logprob: -9.638994216918945

Token 254: ' dif' (ID: 1501)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pres' → logprob: -1.0490072965621948
    2. 'l' → logprob: -1.1740072965621948
    3. 'lat' → logprob: -2.0490074157714844
    4. 'lates' → logprob: -3.1740074157714844
    5. 'pre' → logprob: -3.2990074157714844
    6. 'p' → logprob: -3.5490074157714844
    7. 'diff' → logprob: -4.174007415771484
    8. 'res' → logprob: -4.299007415771484
    9. 'prev' → logprob: -4.424007415771484
    10. 'pr' → logprob: -4.424007415771484

Token 255: 'a' (ID: 64)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.011216288432478905
    2. '1' → logprob: -4.761216163635254
    3. 'fs' → logprob: -6.386216163635254
    4. 'ference' → logprob: -8.386216163635254
    5. ' =' → logprob: -9.011216163635254
    6. 'diff' → logprob: -9.261216163635254
    7. 'fer' → logprob: -9.636216163635254
    8. '_f' → logprob: -10.136216163635254
    9. '=' → logprob: -10.636216163635254
    10. 'fl' → logprob: -10.636216163635254

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5321704149246216
    2. 'diff' → logprob: -1.5321704149246216
    3. 'b' → logprob: -1.7821704149246216
    4. 'fs' → logprob: -1.9071704149246216
    5. 'ff' → logprob: -2.282170295715332
    6. 'f' → logprob: -2.657170295715332
    7. ' =' → logprob: -3.282170295715332
    8. '1' → logprob: -3.532170295715332
    9. '_diff' → logprob: -5.532170295715332
    10. 'd' → logprob: -6.782170295715332

Token 257: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.020598765462636948
    2. ' calc' → logprob: -3.8955986499786377
    3. '(calc' → logprob: -10.020598411560059
    4. '.calc' → logprob: -12.145598411560059
    5. '   ' → logprob: -13.020598411560059
    6. 'cal' → logprob: -13.645598411560059
    7. '  ' → logprob: -14.020598411560059
    8. 'abs' → logprob: -14.270598411560059
    9. 'diff' → logprob: -14.395598411560059
    10. '_calc' → logprob: -14.395598411560059

Token 258: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -4.723352049040841e-06
    2. 'diff' → logprob: -12.375004768371582
    3. '_' → logprob: -15.750004768371582
    4. '_DIFF' → logprob: -16.500003814697266
    5. '	diff' → logprob: -16.875003814697266
    6. '_d' → logprob: -16.875003814697266
    7. '_f' → logprob: -17.125003814697266
    8. 'f' → logprob: -17.125003814697266
    9. ' diff' → logprob: -17.750003814697266
    10. ' _' → logprob: -18.125003814697266

Token 259: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005580098368227482
    2. '(l' → logprob: -5.255579948425293
    3. '(for' → logprob: -8.380579948425293
    4. '(f' → logprob: -9.505579948425293
    5. '(d' → logprob: -11.130579948425293
    6. 'fo' → logprob: -11.255579948425293
    7. '(p' → logprob: -12.130579948425293
    8. '(lo' → logprob: -13.130579948425293
    9. '```' → logprob: -14.005579948425293
    10. '(as' → logprob: -14.255579948425293

Token 260: 'fo' (ID: 1070)
  Prédit: 'fo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fo' → logprob: -0.004572173114866018
    2. 'fore' → logprob: -6.12957239151001
    3. 'l' → logprob: -6.75457239151001
    4. ' fores' → logprob: -7.00457239151001
    5. '   ' → logprob: -9.254571914672852
    6. 'for' → logprob: -9.379571914672852
    7. 'f' → logprob: -10.004571914672852
    8. ' fo' → logprob: -10.504571914672852
    9. 'pres' → logprob: -11.379571914672852
    10. 'fos' → logprob: -11.879571914672852

Token 261: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.214019307051785e-05
    2. 're' → logprob: -10.750032424926758
    3. 'resume' → logprob: -11.750032424926758
    4. 'rs' → logprob: -13.250032424926758
    5. 'r' → logprob: -15.000032424926758
    6. 'sum' → logprob: -15.875032424926758
    7. 'resize' → logprob: -16.125032424926758
    8. 'result' → logprob: -16.250032424926758
    9. 'resent' → logprob: -16.875032424926758
    10. 'ress' → logprob: -17.000032424926758

Token 262: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -6.0033853515051305e-05
    2. 'sum' → logprob: -9.750060081481934
    3. 'ум' → logprob: -14.250060081481934
    4. 'umsum' → logprob: -14.500060081481934
    5. '_sum' → logprob: -16.125059127807617
    6. 'u' → logprob: -16.125059127807617
    7. ' um' → logprob: -16.250059127807617
    8. ' sum' → logprob: -16.375059127807617
    9. 'ums' → logprob: -17.375059127807617
    10. 'm' → logprob: -17.625059127807617

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020541429985314608
    2. ' ,' → logprob: -6.627054214477539
    3. ',l' → logprob: -7.252054214477539
    4. 'l' → logprob: -11.127054214477539
    5. ' l' → logprob: -13.127054214477539
    6. ',
' → logprob: -13.377054214477539
    7. '_,' → logprob: -15.377054214477539
    8. '   ' → logprob: -16.12705421447754
    9. '```' → logprob: -16.12705421447754
    10. ')' → logprob: -16.37705421447754

Token 264: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0004307884373702109
    2. ' l' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.375431060791016
    4. '	l' → logprob: -16.750431060791016
    5. ' ' → logprob: -17.250431060791016
    6. '
' → logprob: -17.750431060791016
    7. '    ' → logprob: -18.500431060791016
    8. '<|end|>' → logprob: -19.125431060791016
    9. ',l' → logprob: -19.750431060791016
    10. '_l' → logprob: -19.750431060791016

Token 265: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.0003939728485420346
    2. 'at' → logprob: -7.875393867492676
    3. 'l' → logprob: -12.125393867492676
    4. 'a' → logprob: -12.125393867492676
    5. 'as' → logprob: -14.375393867492676
    6. '_' → logprob: -15.125393867492676
    7. '1' → logprob: -15.500393867492676
    8. 'p' → logprob: -15.875393867492676
    9. 'atsu' → logprob: -16.000394821166992
    10. 'atso' → logprob: -16.000394821166992

Token 266: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -4.5491004129871726e-05
    2. 'up' → logprob: -10.500045776367188
    3. 'ump' → logprob: -11.625045776367188
    4. 'sum' → logprob: -12.500045776367188
    5. 'p' → logprob: -13.500045776367188
    6. 'umsum' → logprob: -14.000045776367188
    7. 'ap' → logprob: -14.625045776367188
    8. 'ym' → logprob: -14.750045776367188
    9. 'ум' → logprob: -15.000045776367188
    10. 'ums' → logprob: -15.125045776367188

Token 267: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01817382499575615
    2. ')
' → logprob: -4.018173694610596
    3. '   ' → logprob: -11.393174171447754
    4. ')

' → logprob: -11.768174171447754
    5. ')
' → logprob: -12.893174171447754
    6. ',' → logprob: -13.768174171447754
    7. ' )' → logprob: -15.018174171447754
    8. '<|end|>' → logprob: -15.143174171447754
    9. ')d' → logprob: -15.643174171447754
    10. '),' → logprob: -15.643174171447754

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007204149151220918
    2. 'l' → logprob: -7.875720500946045
    3. 'd' → logprob: -8.625720024108887
    4. 'diff' → logprob: -9.375720024108887
    5. 'dif' → logprob: -10.500720024108887
    6. ' l' → logprob: -11.250720024108887
    7. 'pres' → logprob: -11.625720024108887
    8. ' dif' → logprob: -12.125720024108887
    9. 's' → logprob: -12.750720024108887
    10. '	l' → logprob: -13.250720024108887

Token 269: ' l' (ID: 305)
  Prédit: 'lat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lat' → logprob: -0.48169174790382385
    2. 'l' (adapté à ' l') → logprob: -1.2316917181015015
    3. 'pres' → logprob: -3.981691837310791
    4. 'diff' → logprob: -4.231691837310791
    5. 'lates' → logprob: -4.231691837310791
    6. 'dif' → logprob: -4.481691837310791
    7. 'd' → logprob: -4.731691837310791
    8. 'late' → logprob: -4.856691837310791
    9. 'la' → logprob: -6.856691837310791
    10. 'laten' → logprob: -6.981691837310791

Token 270: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.23565787076950073
    2. 'at' → logprob: -1.6106579303741455
    3. 'a' → logprob: -5.860657691955566
    4. 'atl' → logprob: -5.985657691955566
    5. 'atso' → logprob: -7.485657691955566
    6. 'atsa' → logprob: -7.860657691955566
    7. 'as' → logprob: -7.860657691955566
    8. 'ast' → logprob: -8.110657691955566
    9. 'ate' → logprob: -8.235657691955566
    10. 'ata' → logprob: -8.235657691955566

Token 271: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.10078398138284683
    2. 'sum' → logprob: -2.3507840633392334
    3. 's' → logprob: -9.100784301757812
    4. 'u' → logprob: -9.225784301757812
    5. 'umsum' → logprob: -9.225784301757812
    6. 'diff' → logprob: -9.725784301757812
    7. 'uf' → logprob: -10.350784301757812
    8. 'dif' → logprob: -10.475784301757812
    9. 'up' → logprob: -10.975784301757812
    10. '_sum' → logprob: -11.100784301757812

Token 272: '_pres' (ID: 87503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.556488573551178
    2. ' =' → logprob: -1.0564885139465332
    3. '=' → logprob: -2.556488513946533
    4. ' ,' → logprob: -6.806488513946533
    5. ')' → logprob: -8.681488990783691
    6. '2' → logprob: -10.431488990783691
    7. ' ' → logprob: -10.431488990783691
    8. ' +' → logprob: -10.806488990783691
    9. '<|end|>' → logprob: -10.931488990783691
    10. ',
' → logprob: -11.306488990783691

Token 273: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.000977671123109758
    2. ',' → logprob: -7.625977516174316
    3. 'sum' → logprob: -8.000977516174316
    4. ' =' → logprob: -9.125977516174316
    5. '=' → logprob: -10.375977516174316
    6. '_sum' → logprob: -11.875977516174316
    7. 'u' → logprob: -12.875977516174316
    8. 's' → logprob: -13.625977516174316
    9. '_um' → logprob: -13.750977516174316
    10. '_' → logprob: -13.875977516174316

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012626074254512787
    2. '=' → logprob: -4.3876261711120605
    3. ' ' → logprob: -9.387625694274902
    4. '_' → logprob: -11.262625694274902
    5. ',' → logprob: -11.762625694274902
    6. ')' → logprob: -12.137625694274902
    7. '  ' → logprob: -13.137625694274902
    8. ' ,' → logprob: -13.262625694274902
    9. '   ' → logprob: -14.762625694274902
    10. ' ' → logprob: -14.762625694274902

Token 275: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.12693093717098236
    2. ' calc' → logprob: -2.1269309520721436
    3. '(calc' → logprob: -13.126931190490723
    4. '.calc' → logprob: -14.626931190490723
    5. '_calc' → logprob: -16.251930236816406
    6. 'cal' → logprob: -16.626930236816406
    7. 'Calc' → logprob: -16.751930236816406
    8. '   ' → logprob: -16.751930236816406
    9. ' ' → logprob: -18.376930236816406
    10. 'calculate' → logprob: -18.751930236816406

Token 276: '_l' (ID: 1478)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.16023042798042297
    2. '_l' → logprob: -1.9102303981781006
    3. 'diff' → logprob: -12.16023063659668
    4. 'Diff' → logprob: -14.78523063659668
    5. '_' → logprob: -15.28523063659668
    6. 'l' → logprob: -16.66023063659668
    7. '_div' → logprob: -16.78523063659668
    8. '	diff' → logprob: -16.91023063659668
    9. '_dist' → logprob: -17.28523063659668
    10. '(diff' → logprob: -17.41023063659668

Token 277: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.01677877828478813
    2. 'at' → logprob: -4.141778945922852
    3. 'sum' → logprob: -8.016778945922852
    4. 'diff' → logprob: -8.266778945922852
    5. '_diff' → logprob: -9.766778945922852
    6. 'ts' → logprob: -10.641778945922852
    7. 'abs' → logprob: -11.016778945922852
    8. '_sum' → logprob: -11.891778945922852
    9. 's' → logprob: -12.141778945922852
    10. '_at' → logprob: -12.141778945922852

Token 278: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.07942219078540802
    2. 'sum' → logprob: -2.5794222354888916
    3. '_sum' → logprob: -7.5794219970703125
    4. '_pres' → logprob: -12.079421997070312
    5. 'diff' → logprob: -12.829421997070312
    6. 'up' → logprob: -13.204421997070312
    7. 'pres' → logprob: -13.454421997070312
    8. '(sum' → logprob: -13.579421997070312
    9. 'umsum' → logprob: -13.704421997070312
    10. '_diff' → logprob: -13.829421997070312

Token 279: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -2.2246291337069124e-05
    2. '(' → logprob: -10.750021934509277
    3. '(at' → logprob: -15.125021934509277
    4. 'as' → logprob: -16.000022888183594
    5. '(os' → logprob: -16.625022888183594
    6. '(calc' → logprob: -16.750022888183594
    7. '(abs' → logprob: -16.875022888183594
    8. '(s' → logprob: -16.875022888183594
    9. '(a' → logprob: -17.000022888183594
    10. '(cal' → logprob: -17.625022888183594

Token 280: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0005212200339883566
    2. 'sum' → logprob: -7.750521183013916
    3. 'as' → logprob: -10.250521659851074
    4. '(as' → logprob: -11.500521659851074
    5. 'umin' → logprob: -11.875521659851074
    6. 'pres' → logprob: -12.500521659851074
    7. 'umsum' → logprob: -12.500521659851074
    8. '(sum' → logprob: -12.625521659851074
    9. '(' → logprob: -12.750521659851074
    10. 'up' → logprob: -13.000521659851074

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005762664368376136
    2. ',p' → logprob: -7.500576496124268
    3. ' ,' → logprob: -11.50057601928711
    4. '(p' → logprob: -11.62557601928711
    5. '(' → logprob: -13.00057601928711
    6. '`,' → logprob: -14.25057601928711
    7. ',
' → logprob: -14.50057601928711
    8. ',(' → logprob: -14.62557601928711
    9. ')' → logprob: -15.12557601928711
    10. '```' → logprob: -17.37557601928711

Token 282: ' presum' (ID: 60906)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.07918950915336609
    2. ' presum' → logprob: -2.5791895389556885
    3. ' pres' → logprob: -8.45418930053711
    4. 'prem' → logprob: -10.82918930053711
    5. ' presume' → logprob: -11.07918930053711
    6. '_pres' → logprob: -11.20418930053711
    7. 'p' → logprob: -11.57918930053711
    8. '(p' → logprob: -11.95418930053711
    9. 'prec' → logprob: -12.32918930053711
    10. '.pres' → logprob: -12.70418930053711

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04868513345718384
    2. ')
' → logprob: -3.048685073852539
    3. '   ' → logprob: -9.298685073852539
    4. ')
' → logprob: -12.548685073852539
    5. ')

' → logprob: -13.673685073852539
    6. ' )' → logprob: -14.548685073852539
    7. 'def' → logprob: -14.673685073852539
    8. ' )
' → logprob: -15.548685073852539
    9. ')d' → logprob: -15.798685073852539
    10. ')a' → logprob: -17.17368507385254

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14620046317577362
    2. 'diff' → logprob: -2.77120041847229
    3. 'd' → logprob: -3.27120041847229
    4. 'dif' → logprob: -3.39620041847229
    5. ' dif' → logprob: -7.271200656890869
    6. 'l' → logprob: -8.146200180053711
    7. ' diff' → logprob: -8.521200180053711
    8. '    
' → logprob: -8.896200180053711
    9. '	diff' → logprob: -9.146200180053711
    10. 'def' → logprob: -9.271200180053711

Token 285: ' dif' (ID: 1501)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' (adapté à ' dif') → logprob: -0.1631198674440384
    2. 'd' → logprob: -2.2881197929382324
    3. 'diff' → logprob: -3.0381197929382324
    4. ' dif' → logprob: -7.163119792938232
    5. 'def' → logprob: -9.66312026977539
    6. '   ' → logprob: -9.78812026977539
    7. 'da' → logprob: -10.53812026977539
    8. 'dial' → logprob: -10.53812026977539
    9. '	diff' → logprob: -10.78812026977539
    10. 'di' → logprob: -10.78812026977539

Token 286: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4379061460494995
    2. 'b' → logprob: -1.1879061460494995
    3. 'f' → logprob: -3.937906265258789
    4. 'p' → logprob: -4.312906265258789
    5. 'fa' → logprob: -5.187906265258789
    6. 'ap' → logprob: -5.562906265258789
    7. 'pres' → logprob: -5.562906265258789
    8. 'pre' → logprob: -6.812906265258789
    9. 'pr' → logprob: -7.812906265258789
    10. 'l' → logprob: -7.937906265258789

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008619539439678192
    2. '=' → logprob: -4.75861930847168
    3. '_' → logprob: -12.50861930847168
    4. ' ' → logprob: -13.88361930847168
    5. '<|end|>' → logprob: -15.88361930847168
    6. ' =)' → logprob: -16.38361930847168
    7. ' =
' → logprob: -17.38361930847168
    8. ' _' → logprob: -17.38361930847168
    9. ',' → logprob: -17.38361930847168
    10. ' ' → logprob: -17.63361930847168

Token 288: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.02978566847741604
    2. ' calc' → logprob: -3.529785633087158
    3. '(calc' → logprob: -10.279786109924316
    4. '.calc' → logprob: -14.279786109924316
    5. '   ' → logprob: -15.654786109924316
    6. '_calc' → logprob: -17.02978515625
    7. 'cal' → logprob: -17.52978515625
    8. ' ' → logprob: -17.52978515625
    9. '
' → logprob: -17.90478515625
    10. 'calculate' → logprob: -18.40478515625

Token 289: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -2.45848218582978e-06
    2. 'diff' → logprob: -13.00000286102295
    3. 'Diff' → logprob: -16.375001907348633
    4. '_DIFF' → logprob: -16.875001907348633
    5. '(_' → logprob: -18.625001907348633
    6. '_of' → logprob: -18.750001907348633
    7. 'f' → logprob: -18.750001907348633
    8. '	diff' → logprob: -18.875001907348633
    9. '(diff' → logprob: -19.000001907348633
    10. ' Diff' → logprob: -19.000001907348633

Token 290: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.023985162377357483
    2. '(' → logprob: -4.023985385894775
    3. '(l' → logprob: -5.148985385894775
    4. 'fo' → logprob: -12.523984909057617
    5. '(pre' → logprob: -13.148984909057617
    6. '(for' → logprob: -13.273984909057617
    7. '(pref' → logprob: -13.398984909057617
    8. '(pred' → logprob: -14.023984909057617
    9. 'pres' → logprob: -14.273984909057617
    10. '(f' → logprob: -14.898984909057617

Token 291: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005659282673150301
    2. '(res' → logprob: -6.130659103393555
    3. 'rem' → logprob: -6.505659103393555
    4. 'ros' → logprob: -7.505659103393555
    5. 'pres' → logprob: -8.130659103393555
    6. '(' → logprob: -8.255659103393555
    7. 're' → logprob: -8.755659103393555
    8. '(p' → logprob: -8.880659103393555
    9. '[' → logprob: -10.005659103393555
    10. '=' → logprob: -10.255659103393555

Token 292: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0005597044946625829
    2. 'sum' → logprob: -7.5005598068237305
    3. 'em' → logprob: -12.62555980682373
    4. 'us' → logprob: -13.25055980682373
    5. 's' → logprob: -14.87555980682373
    6. '_sum' → logprob: -15.50055980682373
    7. 'u' → logprob: -16.250558853149414
    8. 'ум' → logprob: -16.250558853149414
    9. ' um' → logprob: -16.500558853149414
    10. '   ' → logprob: -16.625558853149414

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003183041699230671
    2. ',l' → logprob: -8.12531852722168
    3. ' ,' → logprob: -10.75031852722168
    4. 'l' → logprob: -15.50031852722168
    5. ',
' → logprob: -15.62531852722168
    6. ')' → logprob: -16.25031852722168
    7. ',n' → logprob: -17.00031852722168
    8. '‌,' → logprob: -17.12531852722168
    9. '),' → logprob: -17.37531852722168
    10. ' l' → logprob: -17.50031852722168

Token 294: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0031796174589544535
    2. ' l' → logprob: -5.753179550170898
    3. '   ' → logprob: -13.503179550170898
    4. '	l' → logprob: -15.253179550170898
    5. ' ' → logprob: -16.3781795501709
    6. '_l' → logprob: -17.1281795501709
    7. '    ' → logprob: -17.2531795501709
    8. '  ' → logprob: -17.7531795501709
    9. ' ' → logprob: -19.2531795501709
    10. ')' → logprob: -19.3781795501709

Token 295: 'ats' (ID: 1838)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.017524393275380135
    2. 's' → logprob: -4.267524242401123
    3. '_s' → logprob: -6.642524242401123
    4. 'b' → logprob: -7.767524242401123
    5. 'a' → logprob: -7.892524242401123
    6. '_l' → logprob: -8.267524719238281
    7. '_at' → logprob: -8.392524719238281
    8. 'l' → logprob: -9.017524719238281
    9. 'as' → logprob: -9.017524719238281
    10. 'ats' → logprob: -9.017524719238281

Token 296: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.676292231422849e-05
    2. 'sum' → logprob: -11.750017166137695
    3. 'l' → logprob: -12.125017166137695
    4. 'ум' → logprob: -14.250017166137695
    5. 'up' → logprob: -14.375017166137695
    6. 'umm' → logprob: -15.000017166137695
    7. 'ump' → logprob: -15.250017166137695
    8. 'm' → logprob: -15.250017166137695
    9. '_sum' → logprob: -15.375017166137695
    10. '_l' → logprob: -16.000017166137695

Token 297: '_pres' (ID: 87503)
  Prédit: '_pres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pres' → logprob: -0.0005834150360897183
    2. ')' → logprob: -7.500583648681641
    3. '_)' → logprob: -10.50058364868164
    4. '_prec' → logprob: -14.00058364868164
    5. 'pres' → logprob: -14.12558364868164
    6. ')_' → logprob: -15.12558364868164
    7. '_' → logprob: -15.62558364868164
    8. '_pre' → logprob: -15.87558364868164
    9. '_present' → logprob: -15.87558364868164
    10. ')
' → logprob: -16.12558364868164

Token 298: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -7.107425062713446e-06
    2. 'sum' → logprob: -12.125006675720215
    3. 'ум' → logprob: -14.500006675720215
    4. '```' → logprob: -15.250006675720215
    5. ')' → logprob: -16.00000762939453
    6. '   ' → logprob: -16.25000762939453
    7. 'm' → logprob: -16.62500762939453
    8. 'umm' → logprob: -16.75000762939453
    9. ' um' → logprob: -17.12500762939453
    10. 'im' → logprob: -17.25000762939453

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07890201359987259
    2. ')
' → logprob: -2.578902006149292
    3. '   ' → logprob: -11.703902244567871
    4. ')
' → logprob: -12.703902244567871
    5. ')

' → logprob: -14.328902244567871
    6. ' )' → logprob: -16.578901290893555
    7. ')a' → logprob: -17.328901290893555
    8. ' )
' → logprob: -17.578901290893555
    9. ')return' → logprob: -18.078901290893555
    10. ')b' → logprob: -18.328901290893555

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025568767450749874
    2. 'print' → logprob: -6.252556800842285
    3. ' print' → logprob: -7.627556800842285
    4. '    
' → logprob: -10.002556800842285
    5. '```' → logprob: -11.002556800842285
    6. 'result' → logprob: -11.127556800842285
    7. '    ' → logprob: -11.627556800842285
    8. '
' → logprob: -11.752556800842285
    9. '	print' → logprob: -11.877556800842285
    10. ')' → logprob: -11.877556800842285

Token 301: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07479828596115112
    2. '   ' → logprob: -3.074798345565796
    3. ' print' → logprob: -3.949798345565796
    4. 'result' (adapté à ' result') → logprob: -5.324798107147217
    5. 'diff' → logprob: -7.324798107147217
    6. 'ans' → logprob: -8.074798583984375
    7. '```' → logprob: -8.449798583984375
    8. 'res' → logprob: -8.574798583984375
    9. ' result' → logprob: -8.699798583984375
    10. 'answer' → logprob: -9.449798583984375

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028278196696192026
    2. '=' → logprob: -5.8778276443481445
    3. ' ' → logprob: -11.252827644348145
    4. '_' → logprob: -11.627827644348145
    5. ' =
' → logprob: -15.377827644348145
    6. '<|end|>' → logprob: -15.627827644348145
    7. ' =)' → logprob: -15.752827644348145
    8. ' ' → logprob: -16.12782859802246
    9. ')' → logprob: -16.62782859802246
    10. '_space' → logprob: -16.75282859802246

Token 303: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.029751179739832878
    2. 'min' → logprob: -3.5297510623931885
    3. ' str' → logprob: -14.52975082397461
    4. 'str' → logprob: -16.15475082397461
    5. '(min' → logprob: -16.52975082397461
    6. '	min' → logprob: -16.65475082397461
    7. '   ' → logprob: -17.40475082397461
    8. ' ' → logprob: -18.15475082397461
    9. ' max' → logprob: -19.40475082397461
    10. '[min' → logprob: -19.40475082397461

Token 304: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -4.320199877838604e-07
    2. '(_' → logprob: -15.5
    3. '_' → logprob: -16.25
    4. '_or' → logprob: -17.375
    5. '\' → logprob: -17.5
    6. ' _' → logprob: -17.875
    7. '```' → logprob: -17.875
    8. '_(' → logprob: -19.125
    9. '_for' → logprob: -19.125
    10. 'of' → logprob: -19.375

Token 305: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.00033581978641450405
    2. 'two' → logprob: -8.000335693359375
    3. '(two' → logprob: -15.375335693359375
    4. 'Two' → logprob: -16.875335693359375
    5. 'wo' → logprob: -17.250335693359375
    6. ' two' → logprob: -17.250335693359375
    7. '_TWO' → logprob: -17.375335693359375
    8. '_tw' → logprob: -17.750335693359375
    9. '_t' → logprob: -19.875335693359375
    10. '.two' → logprob: -20.125335693359375

Token 306: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -11.750007629394531
    3. '(diff' → logprob: -16.75000762939453
    4. '(a' → logprob: -17.50000762939453
    5. ' (' → logprob: -17.75000762939453
    6. '((' → logprob: -18.75000762939453
    7. '```' → logprob: -19.25000762939453
    8. '(
' → logprob: -19.37500762939453
    9. ',d' → logprob: -20.00000762939453
    10. '(result' → logprob: -20.12500762939453

Token 307: 'ifa' (ID: 22798)
  Prédit: 'ifa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifa' → logprob: -2.2127087504486553e-05
    2. 'efa' → logprob: -10.875021934509277
    3. 'if' → logprob: -13.250021934509277
    4. 'fa' → logprob: -14.375021934509277
    5. 'ofa' → logprob: -14.750021934509277
    6. 'ufa' → logprob: -15.750021934509277
    7. ' if' → logprob: -17.250022888183594
    8. 'ife' → logprob: -17.500022888183594
    9. 'afa' → logprob: -17.750022888183594
    10. 'ifra' → logprob: -18.125022888183594

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011914180358871818
    2. ',d' → logprob: -6.87619161605835
    3. ' ,' → logprob: -8.751191139221191
    4. ',b' → logprob: -15.751191139221191
    5. ',
' → logprob: -15.876191139221191
    6. ' dif' → logprob: -18.126192092895508
    7. ' ' → logprob: -19.126192092895508
    8. '‌,' → logprob: -19.251192092895508
    9. 'd' → logprob: -19.876192092895508
    10. 'dif' → logprob: -20.001192092895508

Token 309: ' dif' (ID: 1501)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.005911019630730152
    2. ' dif' → logprob: -5.755910873413086
    3. 'd' → logprob: -6.005910873413086
    4. 'diff' → logprob: -8.255910873413086
    5. 'dib' → logprob: -12.130910873413086
    6. ' diff' → logprob: -15.880910873413086
    7. '   ' → logprob: -16.380910873413086
    8. ' d' → logprob: -16.880910873413086
    9. 'Dif' → logprob: -17.005910873413086
    10. '	d' → logprob: -17.005910873413086

Token 310: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. 'f' → logprob: -16.0
    3. 'fb' → logprob: -17.5
    4. 'a' → logprob: -18.125
    5. 'б' → logprob: -19.0
    6. 'diff' → logprob: -20.5
    7. '	b' → logprob: -20.875
    8. 'ab' → logprob: -21.0
    9. '   ' → logprob: -21.25
    10. '```' → logprob: -21.375

Token 311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22591033577919006
    2. ')
' → logprob: -1.6009103059768677
    3. '   ' → logprob: -7.725910186767578
    4. ')
' → logprob: -9.850910186767578
    5. ' )
' → logprob: -14.600910186767578
    6. '()' → logprob: -14.600910186767578
    7. '
' → logprob: -14.725910186767578
    8. ' )' → logprob: -14.850910186767578
    9. ')

' → logprob: -14.975910186767578
    10. ' ' → logprob: -15.225910186767578

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03756970539689064
    2. 'print' → logprob: -3.412569761276245
    3. '
' → logprob: -5.662569522857666
    4. '    
' → logprob: -8.412569999694824
    5. ' print' → logprob: -9.287569999694824
    6. '<|end|>' → logprob: -9.787569999694824
    7. '	print' → logprob: -10.662569999694824
    8. '```' → logprob: -10.787569999694824
    9. '\n' → logprob: -11.537569999694824
    10. ')' → logprob: -12.662569999694824

Token 313: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.049115490168333054
    2. '   ' → logprob: -3.0491154193878174
    3. ' print' → logprob: -7.5491156578063965
    4. '	print' → logprob: -14.174115180969238
    5. '```' → logprob: -14.799115180969238
    6. '
' → logprob: -15.674115180969238
    7. '    
' → logprob: -16.674116134643555
    8. '_print' → logprob: -17.174116134643555
    9. '.print' → logprob: -17.424116134643555
    10. '#print' → logprob: -17.924116134643555

Token 314: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.006716674659401178
    2. '(' → logprob: -5.006716728210449
    3. 'result' → logprob: -13.88171672821045
    4. ' (' → logprob: -15.75671672821045
    5. '(
' → logprob: -15.75671672821045
    6. '(results' → logprob: -17.131715774536133
    7. '(res' → logprob: -17.256715774536133
    8. '()' → logprob: -17.381715774536133
    9. '=result' → logprob: -17.756715774536133
    10. ',result' → logprob: -18.006715774536133

Token 315: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -15.875000953674316
    4. '()' → logprob: -18.375
    5. ')`' → logprob: -18.75
    6. '())' → logprob: -20.25
    7. '))' → logprob: -20.75
    8. '')' → logprob: -21.5
    9. '(' → logprob: -21.625
    10. ')#' → logprob: -21.75

Token 316: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0058927689678967
    2. '
' → logprob: -5.255892753601074
    3. '\n' → logprob: -7.505892753601074
    4. ' if' → logprob: -9.755892753601074
    5. '```' → logprob: -11.130892753601074
    6. '\' → logprob: -11.255892753601074
    7. 'main' → logprob: -11.255892753601074
    8. '  
' → logprob: -12.630892753601074
    9. '\
' → logprob: -13.130892753601074
    10. '<|end|>' → logprob: -13.505892753601074

Token 317: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018067292869091034
    2. '(' → logprob: -4.268067359924316
    3. '()
' → logprob: -5.643067359924316
    4. '(
' → logprob: -8.268067359924316
    5. '
' → logprob: -10.518067359924316
    6. '#' → logprob: -10.893067359924316
    7. '```' → logprob: -10.893067359924316
    8. '()

' → logprob: -12.018067359924316
    9. ' ()' → logprob: -12.018067359924316
    10. '()\' → logprob: -12.143067359924316


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 315
Tokens correctement prédits (1ère position, stricte): 150
Tokens correctement prédits (1ère position, avec adaptation): 158
Tokens correctement prédits (top 10): 269
Précision stricte (1ère position): 47.62%
Précision adaptée (1ère position): 50.16%
Précision (top 10): 85.40%
================================================================================
