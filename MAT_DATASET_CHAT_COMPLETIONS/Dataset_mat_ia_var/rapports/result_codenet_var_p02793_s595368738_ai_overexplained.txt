================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Importation du module 'fractions' qui fournit des opérations mathématiques pour les fractions.
from fractions import gcd  # La fonction gcd calcule le plus grand commun diviseur de deux nombres entiers.
# Remarque : dans les versions récentes de Python, il est préférable d'utiliser math.gcd, car fractions.gcd est obsolète.

# Définition d'une fonction pour calculer le plus petit commun multiple (LCM) de deux entiers x et y.
def lcm_base(x, y):
    # Multiplie x et y ensemble, puis divise par leur PGCD (Greatest Common Divisor) pour obtenir le PPCM (Least Common Multiple)
    # L'opération // effectue une division entière.
    return (x * y) // gcd(x, y)

# Définition d'une fonction pour calculer le PPCM de plusieurs entiers stockés dans un itérable appelé 'numbers'.
def lcm(numbers):
    t = 1  # Initialise la valeur du PPCM à 1 au début.
    for n in numbers:  # Itère à travers chaque élément 'n' de la liste 'numbers'.
        t = lcm_base(t, n)  # Met à jour la valeur de 't' avec le PPCM actuel et le prochain nombre de la liste.
    return t  # Renvoie le PPCM de tous les nombres.

# Lit l'entrée utilisateur et la convertit en entier. Représente le nombre d'éléments dans la liste A.
N = int(input())  # input() lit une ligne en tant que chaîne de caractères ; int() convertit cette chaîne en entier.

# Lit une deuxième ligne d'entrée, la divise en morceaux (split()) et convertit chaque morceau en entier.
A = [int(x) for x in input().split()]  # Utilise une compréhension de liste pour traiter chaque élément séparé par un espace.

# Définit une variable 'mod' avec la valeur 10^9 + 7, un nombre premier fréquemment utilisé pour prendre des modulo dans les problèmes de programmation.
mod = 10 ** 9 + 7  # Cela évite les débordements d'entiers lors de calculs avec de grands nombres.

ans = 0  # Initialise la variable de réponse à 0. Elle contiendra le résultat final.

# Calcule le PPCM de tous les éléments de la liste 'A' et le stocke dans 't'.
t = lcm(A)

# Met à jour la valeur de 't' en prenant son reste modulo 'mod'.
t %= mod  # Évite que 't' ne dépasse la valeur du module.

# Boucle pour traiter chaque élément de la liste A à l'aide de son indice.
for i in range(N):
    # Calcule la somme modulo 'mod' en ajoutant, pour chaque élément, t multiplié par l'inverse multiplicatif de A[i].
    # pow(A[i], mod-2, mod) est l'inverse multiplicatif de A[i] modulo mod (utilise le petit théorème de Fermat car mod est premier).
    # La multiplication est faite sous modulo mod pour garder la valeur sous une limite raisonnable et pour la correction mathématique.
    ans = (ans + t * pow(A[i], mod - 2, mod)) % mod  # Ajoute la contribution de l'élément courant au résultat.

# Affiche la valeur finale calculée dans 'ans'.
print(ans)  # print() affiche une sortie à l'utilisateur.
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Import' (ID: 19998)
  → Token d'amorce (pas de prédiction)

Token 2: 'ation' (ID: 387)
  → Token d'amorce (pas de prédiction)

Token 3: ' du' (ID: 1462)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0166155099868774
    2. ':' → logprob: -1.2666155099868774
    3. 'import' → logprob: -1.5166155099868774
    4. '_' → logprob: -2.266615390777588
    5. ' ' → logprob: -4.766615390777588
    6. ' import' → logprob: -4.891615390777588
    7. '#' → logprob: -5.516615390777588
    8. '[' → logprob: -5.766615390777588
    9. '`' → logprob: -6.016615390777588
    10. '.' → logprob: -6.391615390777588

Token 4: ' module' (ID: 8827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.926969051361084
    2. ' des' → logprob: -0.926969051361084
    3. ' os' → logprob: -2.801969051361084
    4. ' pandas' → logprob: -3.051969051361084
    5. ' d' → logprob: -4.176969051361084
    6. 's' → logprob: -4.176969051361084
    7. ' numpy' → logprob: -4.801969051361084
    8. '  ' → logprob: -4.926969051361084
    9. ' de' → logprob: -5.051969051361084
    10. 'import' → logprob: -5.051969051361084

Token 5: ' '' (ID: 461)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7819424867630005
    2. '```' → logprob: -1.4069424867630005
    3. ' import' → logprob: -2.031942367553711
    4. '`' → logprob: -2.656942367553711
    5. ':' → logprob: -3.031942367553711
    6. 's' → logprob: -4.781942367553711
    7. '.' → logprob: -5.031942367553711
    8. ' ' → logprob: -5.156942367553711
    9. ' :' → logprob: -5.281942367553711
    10. ' `' → logprob: -5.406942367553711

Token 6: 'fra' (ID: 39360)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.1352958083152771
    2. 'p' → logprob: -3.385295867919922
    3. 'requests' → logprob: -3.385295867919922
    4. 'math' → logprob: -3.760295867919922
    5. 'random' → logprob: -4.135295867919922
    6. 'numpy' → logprob: -5.510295867919922
    7. 'csv' → logprob: -6.135295867919922
    8. 're' → logprob: -6.260295867919922
    9. ' os' → logprob: -6.260295867919922
    10. 'json' → logprob: -6.260295867919922

Token 7: 'ctions' (ID: 2620)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6004611849784851
    2. 'ctions' → logprob: -1.1004612445831299
    3. 'nc' → logprob: -2.22546124458313
    4. 'nt' → logprob: -5.600461006164551
    5. 'ct' → logprob: -6.975461006164551
    6. 'is' → logprob: -7.100461006164551
    7. 'ction' → logprob: -7.100461006164551
    8. 'requests' → logprob: -7.225461006164551
    9. 'gments' → logprob: -7.350461006164551
    10. 'm' → logprob: -7.725461006164551

Token 8: ''' (ID: 6)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.31539803743362427
    2. ''' → logprob: -1.5653979778289795
    3. '```' → logprob: -3.9403979778289795
    4. ')' → logprob: -4.065398216247559
    5. 'import' → logprob: -4.690398216247559
    6. ''''' → logprob: -5.190398216247559
    7. ',' → logprob: -6.565398216247559
    8. '`' → logprob: -7.065398216247559
    9. 'e' → logprob: -7.065398216247559
    10. 'a' → logprob: -7.315398216247559

Token 9: ' qui' (ID: 2780)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1866295486688614
    2. 'from' → logprob: -2.1866295337677
    3. '.' → logprob: -3.5616295337677
    4. ' from' → logprob: -4.436629772186279
    5. ' import' → logprob: -4.686629772186279
    6. '```' → logprob: -5.061629772186279
    7. ',' → logprob: -7.061629772186279
    8. 'f' → logprob: -7.811629772186279
    9. '`' → logprob: -8.936629295349121
    10. ':' → logprob: -8.936629295349121

Token 10: ' fournit' (ID: 123615)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6697497963905334
    2. ' permet' → logprob: -1.6697497367858887
    3. ' import' → logprob: -1.9197497367858887
    4. ' ' → logprob: -3.0447497367858887
    5. ' .' → logprob: -3.9197497367858887
    6. ' est' → logprob: -3.9197497367858887
    7. ' fournit' → logprob: -5.044749736785889
    8. 'import' → logprob: -5.419749736785889
    9. ' allows' → logprob: -5.544749736785889
    10. ',' → logprob: -5.544749736785889

Token 11: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5763298869132996
    2. ' fractions' → logprob: -1.8263299465179443
    3. '_' → logprob: -2.5763299465179443
    4. '.' → logprob: -3.0763299465179443
    5. ' des' → logprob: -3.5763299465179443
    6. 'from' → logprob: -4.451329708099365
    7. 'import' → logprob: -4.451329708099365
    8. ' import' → logprob: -4.451329708099365
    9. ' from' → logprob: -4.576329708099365
    10. '_fraction' → logprob: -4.701329708099365

Token 12: ' opérations' (ID: 102793)
  Prédit: ' fonctions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -1.2483134269714355
    2. ' fractions' → logprob: -1.4983134269714355
    3. ' fonctionnalités' → logprob: -1.8733134269714355
    4. ' ' → logprob: -2.3733134269714355
    5. ' outils' → logprob: -2.3733134269714355
    6. ' rational' → logprob: -3.3733134269714355
    7. ' ' → logprob: -3.4983134269714355
    8. '_' → logprob: -3.9983134269714355
    9. ' méthodes' → logprob: -4.4983134269714355
    10. ' nombres' → logprob: -4.6233134269714355

Token 13: ' math' (ID: 13324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3755844533443451
    2. '_' → logprob: -1.7505844831466675
    3. 'import' → logprob: -2.750584363937378
    4. '```' → logprob: -3.625584363937378
    5. ' import' → logprob: -4.000584602355957
    6. 'from' → logprob: -5.000584602355957
    7. ' from' → logprob: -5.250584602355957
    8. ',' → logprob: -5.375584602355957
    9. ' .' → logprob: -5.625584602355957
    10. '_fraction' → logprob: -6.375584602355957

Token 14: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.004253861960023642
    2. 'ématique' → logprob: -5.87925386428833
    3. 'ém' → logprob: -7.00425386428833
    4. 'é' → logprob: -8.754253387451172
    5. '```' → logprob: -9.504253387451172
    6. 'èmes' → logprob: -9.629253387451172
    7. 'i' → logprob: -10.379253387451172
    8. 'éma' → logprob: -10.504253387451172
    9. 'es' → logprob: -10.504253387451172
    10. 'e' → logprob: -10.629253387451172

Token 15: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07948803901672363
    2. 'import' → logprob: -2.7044880390167236
    3. '```' → logprob: -5.0794878005981445
    4. ' import' → logprob: -6.4544878005981445
    5. ',' → logprob: -7.0794878005981445
    6. 'from' → logprob: -8.454487800598145
    7. '.import' → logprob: -8.829487800598145
    8. '`' → logprob: -9.204487800598145
    9. '_' → logprob: -9.704487800598145
    10. ' .' → logprob: -9.829487800598145

Token 16: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4971855580806732
    2. ' fractions' → logprob: -1.4971855878829956
    3. 'fra' → logprob: -2.497185468673706
    4. 'les' → logprob: -3.997185468673706
    5. ' la' → logprob: -4.497185707092285
    6. ' ' → logprob: -4.497185707092285
    7. ' travailler' → logprob: -4.872185707092285
    8. ' des' → logprob: -4.872185707092285
    9. ' working' → logprob: -5.622185707092285
    10. ' manip' → logprob: -5.747185707092285

Token 17: ' fractions' (ID: 110523)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.11997105926275253
    2. ' fractions' → logprob: -2.2449710369110107
    3. ' nombres' → logprob: -5.49497127532959
    4. 'n' → logprob: -6.61997127532959
    5. 'fraction' → logprob: -7.24497127532959
    6. 'r' → logprob: -8.24497127532959
    7. ' fra' → logprob: -8.61997127532959
    8. ' rational' → logprob: -9.74497127532959
    9. 'f' → logprob: -9.86997127532959
    10. ' ' → logprob: -9.99497127532959

Token 18: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5414908528327942
    2. '.' → logprob: -1.0414907932281494
    3. '```' → logprob: -3.2914907932281494
    4. 'from' → logprob: -4.1664910316467285
    5. ',' → logprob: -4.7914910316467285
    6. ' import' → logprob: -6.7914910316467285
    7. ' from' → logprob: -7.4164910316467285
    8. '\' → logprob: -7.5414910316467285
    9. ':' → logprob: -7.9164910316467285
    10. '`' → logprob: -7.9164910316467285

Token 19: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1395181119441986
    2. 'from' → logprob: -2.2645180225372314
    3. '```' → logprob: -4.1395182609558105
    4. '.' → logprob: -5.0145182609558105
    5. ' from' → logprob: -6.5145182609558105
    6. ',' → logprob: -6.8895182609558105
    7. ' import' → logprob: -7.7645182609558105
    8. '\' → logprob: -8.264517784118652
    9. '\n' → logprob: -9.139517784118652
    10. 'f' → logprob: -9.264517784118652

Token 20: ' fractions' (ID: 110523)
  Prédit: ' fractions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -6.813969957875088e-05
    2. 'fra' → logprob: -9.625067710876465
    3. ' ' → logprob: -13.375067710876465
    4. ' fraction' → logprob: -14.875067710876465
    5. ' math' → logprob: -16.87506866455078
    6. ' fractional' → logprob: -17.37506866455078
    7. 'fraction' → logprob: -17.75006866455078
    8. ' fra' → logprob: -17.87506866455078
    9. ' ' → logprob: -19.00006866455078
    10. ' functools' → logprob: -19.25006866455078

Token 21: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.005808394402265549
    2. 'import' → logprob: -5.630808353424072
    3. ' ' → logprob: -6.130808353424072
    4. '.' → logprob: -11.00580883026123
    5. '	import' → logprob: -12.25580883026123
    6. '.import' → logprob: -12.75580883026123
    7. ' im' → logprob: -13.38080883026123
    8. ' .' → logprob: -13.63080883026123
    9. ' ' → logprob: -13.63080883026123
    10. 'fra' → logprob: -15.25580883026123

Token 22: ' gcd' (ID: 106918)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.1269458532333374
    2. 'Fraction' → logprob: -2.126945972442627
    3. ' fractions' → logprob: -11.501945495605469
    4. ' fraction' → logprob: -12.876945495605469
    5. 'Fra' → logprob: -13.001945495605469
    6. ' Fra' → logprob: -14.001945495605469
    7. 'fraction' → logprob: -14.251945495605469
    8. '_fraction' → logprob: -15.126945495605469
    9. 'fra' → logprob: -15.751945495605469
    10. ' ' → logprob: -15.751945495605469

Token 23: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3238681554794312
    2. '<|end|>' → logprob: -1.4488681554794312
    3. ')' → logprob: -1.8238681554794312
    4. '.' → logprob: -2.6988682746887207
    5. ',' → logprob: -2.9488682746887207
    6. '#' → logprob: -3.0738682746887207
    7. 'as' → logprob: -3.0738682746887207
    8. ' ' → logprob: -3.9488682746887207
    9. ' as' → logprob: -4.073868274688721
    10. '(' → logprob: -4.698868274688721

Token 25: ' La' (ID: 3038)
  Prédit: 'deprecated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deprecated' → logprob: -0.5715987086296082
    2. ' deprecated' → logprob: -1.071598768234253
    3. ' Deprecated' → logprob: -3.321598768234253
    4. ' is' → logprob: -3.446598768234253
    5. 'Deprecated' → logprob: -4.946598529815674
    6. 'g' → logprob: -5.571598529815674
    7. '#' → logprob: -6.196598529815674
    8. 'import' → logprob: -6.321598529815674
    9. ' de' → logprob: -6.321598529815674
    10. ' gcd' → logprob: -7.571598529815674

Token 26: ' fonction' (ID: 17610)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.6333998441696167
    2. ' module' → logprob: -1.7583998441696167
    3. ' deprecated' → logprob: -1.8833998441696167
    4. ' import' → logprob: -2.0083999633789062
    5. ' gcd' → logprob: -2.3833999633789062
    6. 'import' → logprob: -2.6333999633789062
    7. 'g' → logprob: -3.0083999633789062
    8. 'fra' → logprob: -3.5083999633789062
    9. ' is' → logprob: -3.6333999633789062
    10. 'deprecated' → logprob: -4.133399963378906

Token 27: ' gcd' (ID: 106918)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5647011995315552
    2. 'g' → logprob: -1.5647011995315552
    3. '_g' → logprob: -3.0647010803222656
    4. 'import' → logprob: -3.4397010803222656
    5. 'deprecated' → logprob: -3.8147010803222656
    6. ' ' → logprob: -3.9397010803222656
    7. ')' → logprob: -4.189701080322266
    8. ' gcd' → logprob: -4.314701080322266
    9. ' deprecated' → logprob: -4.439701080322266
    10. ' was' → logprob: -4.439701080322266

Token 28: ' calc' (ID: 25691)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: 'ule' (ID: 1601)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.4282193183898926
    2. 'ulator' → logprob: -2.0532193183898926
    3. 'import' → logprob: -2.9282193183898926
    4. 'ulated' → logprob: -3.0532193183898926
    5. 'culate' → logprob: -3.4282193183898926
    6. 'ul' → logprob: -3.6782193183898926
    7. 'cul' → logprob: -4.303219318389893
    8. 'ulte' → logprob: -4.928219318389893
    9. '#' → logprob: -5.178219318389893
    10. 'ulates' → logprob: -5.178219318389893

Token 30: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6840484142303467
    2. ' the' → logprob: -1.4340484142303467
    3. '(' → logprob: -2.3090484142303467
    4. 'the' → logprob: -3.0590484142303467
    5. 'l' → logprob: -3.4340484142303467
    6. '_' → logprob: -4.059048652648926
    7. ' le' → logprob: -4.434048652648926
    8. ' l' → logprob: -4.684048652648926
    9. ' (' → logprob: -5.059048652648926
    10. '_l' → logprob: -5.184048652648926

Token 31: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.6877071857452393
    2. ' pg' → logprob: -1.1877071857452393
    3. 'plus' → logprob: -2.6877071857452393
    4. 'pg' → logprob: -3.3127071857452393
    5. ' ' → logprob: -3.6877071857452393
    6. 'PG' → logprob: -4.43770694732666
    7. ' PG' → logprob: -4.56270694732666
    8. ' ' → logprob: -4.81270694732666
    9. ' greatest' → logprob: -4.93770694732666
    10. '_pg' → logprob: -5.06270694732666

Token 32: ' grand' (ID: 6363)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36703431606292725
    2. '_common' → logprob: -1.3670343160629272
    3. '_gr' → logprob: -3.617034435272217
    4. ' _' → logprob: -5.117034435272217
    5. '_p' → logprob: -5.492034435272217
    6. 'grand' → logprob: -5.492034435272217
    7. '_comm' → logprob: -6.492034435272217
    8. 'common' → logprob: -6.492034435272217
    9. '_plus' → logprob: -6.992034435272217
    10. ' ' → logprob: -7.367034435272217

Token 33: ' commun' (ID: 2797)
  Prédit: '_common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.08276631683111191
    2. 'common' → logprob: -3.45776629447937
    3. '_' → logprob: -3.70776629447937
    4. ' common' → logprob: -3.95776629447937
    5. ' ' → logprob: -6.707766532897949
    6. '_comm' → logprob: -6.707766532897949
    7. ' _' → logprob: -6.957766532897949
    8. 'commun' → logprob: -7.832766532897949
    9. ' commun' → logprob: -9.45776653289795
    10. '_div' → logprob: -9.58276653289795

Token 34: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.6369979977607727
    2. 'div' → logprob: -0.7619979977607727
    3. '_div' → logprob: -6.011998176574707
    4. '	div' → logprob: -7.011998176574707
    5. ' ' → logprob: -7.761998176574707
    6. '<div' → logprob: -8.886998176574707
    7. ' divisor' → logprob: -8.886998176574707
    8. 'commun' → logprob: -9.261998176574707
    9. 'd' → logprob: -10.386998176574707
    10. '-div' → logprob: -10.511998176574707

Token 35: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.001600910210981965
    2. 'isor' → logprob: -6.751600742340088
    3. 'ise' → logprob: -8.126601219177246
    4. 'is' → logprob: -9.376601219177246
    5. 'iser' → logprob: -11.251601219177246
    6. 'isateur' → logprob: -11.251601219177246
    7. ' is' → logprob: -12.001601219177246
    8. 'isseur' → logprob: -12.001601219177246
    9. '```' → logprob: -13.126601219177246
    10. 'iso' → logprob: -13.251601219177246

Token 36: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' deux' (ID: 10301)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6403595805168152
    2. ')' → logprob: -1.01535964012146
    3. ' (' → logprob: -2.76535964012146
    4. ' deux' → logprob: -4.265359401702881
    5. ' two' → logprob: -4.515359401702881
    6. 'two' → logprob: -5.265359401702881
    7. '(a' → logprob: -5.515359401702881
    8. ' )' → logprob: -5.515359401702881
    9. ' ' → logprob: -5.890359401702881
    10. '<|end|>' → logprob: -6.265359401702881

Token 38: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.21051815152168274
    2. ' ent' → logprob: -3.0855181217193604
    3. 'n' → logprob: -3.4605181217193604
    4. ')' → logprob: -3.8355181217193604
    5. ' numbers' → logprob: -4.0855183601379395
    6. 'ent' → logprob: -4.0855183601379395
    7. ',' → logprob: -4.3355183601379395
    8. ' integers' → logprob: -4.4605183601379395
    9. ' nombre' → logprob: -4.5855183601379395
    10. 'numbers' → logprob: -5.3355183601379395

Token 39: ' ent' (ID: 1121)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.017066629603505135
    2. 'iers' → logprob: -5.017066478729248
    3. '```' → logprob: -6.392066478729248
    4. 'tries' → logprob: -7.017066478729248
    5. 'ity' → logprob: -7.017066478729248
    6. 'g' → logprob: -7.142066478729248
    7. ')' → logprob: -7.267066478729248
    8. 'd' → logprob: -8.017066955566406
    9. 's' → logprob: -8.017066955566406
    10. 'ités' → logprob: -8.142066955566406

Token 41: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '#' (ID: 2)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.0484280586242676
    2. ' as' → logprob: -1.7984280586242676
    3. ',' → logprob: -2.6734280586242676
    4. ' 

' → logprob: -2.6734280586242676
    5. ')' → logprob: -2.7984280586242676
    6. 'As' → logprob: -2.9234280586242676
    7. '.' → logprob: -3.0484280586242676
    8. '
' → logprob: -3.1734280586242676
    9. '<|end|>' → logprob: -3.4234280586242676
    10. '#' → logprob: -4.173428058624268

Token 43: ' Rem' (ID: 6890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3843565881252289
    2. '.' → logprob: -2.6343564987182617
    3. ' ' → logprob: -3.2593564987182617
    4. 'import' → logprob: -3.5093564987182617
    5. ',' → logprob: -3.7593564987182617
    6. '(' → logprob: -3.7593564987182617
    7. '<|end|>' → logprob: -3.8843564987182617
    8. '_' → logprob: -4.009356498718262
    9. ' 

' → logprob: -4.509356498718262
    10. '#' → logprob: -4.759356498718262

Token 44: 'arque' (ID: 167524)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.30153122544288635
    2. 'placement' → logprob: -2.1765313148498535
    3. 'ar' → logprob: -3.5515313148498535
    4. 'from' → logprob: -3.6765313148498535
    5. 'place' → logprob: -3.6765313148498535
    6. '#' → logprob: -4.0515313148498535
    7. 'arque' → logprob: -4.3015313148498535
    8. 'pl' → logprob: -4.9265313148498535
    9. 'plac' → logprob: -5.4265313148498535
    10. 'import' → logprob: -5.5515313148498535

Token 45: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11649013310670853
    2. ' :' → logprob: -2.241490125656128
    3. ',' → logprob: -6.366490364074707
    4. 's' → logprob: -6.866490364074707
    5. ' de' → logprob: -8.741490364074707
    6. ' ' → logprob: -8.866490364074707
    7. '_' → logprob: -9.116490364074707
    8. ' ' → logprob: -9.116490364074707
    9. ' ,' → logprob: -9.991490364074707
    10. 'import' → logprob: -10.241490364074707

Token 46: ' dans' (ID: 2671)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.05003665015101433
    2. ' from' → logprob: -4.425036430358887
    3. ' fractions' → logprob: -4.925036430358887
    4. ' la' → logprob: -5.050036430358887
    5. 'g' → logprob: -5.175036430358887
    6. ' cette' → logprob: -5.425036430358887
    7. ' deprecated' → logprob: -5.675036430358887
    8. ' this' → logprob: -6.300036430358887
    9. ' math' → logprob: -6.925036430358887
    10. 'from' → logprob: -7.425036430358887

Token 47: ' les' (ID: 1341)
  Prédit: ' Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Python' → logprob: -0.026618294417858124
    2. ' math' → logprob: -3.901618242263794
    3. ' python' → logprob: -6.276618480682373
    4. 'Python' → logprob: -6.276618480682373
    5. ' les' → logprob: -7.276618480682373
    6. ' fractions' → logprob: -7.401618480682373
    7. ' la' → logprob: -7.651618480682373
    8. 'python' → logprob: -9.151618003845215
    9. ' versions' → logprob: -9.401618003845215
    10. ' ' → logprob: -9.776618003845215

Token 48: ' versions' (ID: 17980)
  Prédit: ' versions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' versions' → logprob: -0.007927183993160725
    2. ' Python' → logprob: -5.757927417755127
    3. 'versions' → logprob: -6.507927417755127
    4. ' futures' → logprob: -6.757927417755127
    5. ' modules' → logprob: -7.257927417755127
    6. ' dernières' → logprob: -8.007926940917969
    7. ' version' → logprob: -8.132926940917969
    8. ' ' → logprob: -8.632926940917969
    9. ' nouvelles' → logprob: -9.132926940917969
    10. ' prochaines' → logprob: -9.132926940917969

Token 49: ' ré' (ID: 3146)
  Prédit: ' ré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ré' → logprob: -0.1815282106399536
    2. ' futures' → logprob: -2.931528091430664
    3. ' plus' → logprob: -3.431528091430664
    4. ' ' → logprob: -3.681528091430664
    5. ' ult' → logprob: -3.931528091430664
    6. ' Python' → logprob: -4.306528091430664
    7. ' les' → logprob: -5.681528091430664
    8. 'plus' → logprob: -5.931528091430664
    9. ' ' → logprob: -6.056528091430664
    10. ' modernes' → logprob: -6.431528091430664

Token 50: 'centes' (ID: 109284)
  Prédit: 'centes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'centes' → logprob: -0.0030190644320100546
    2. 'cent' → logprob: -6.628018856048584
    3. 'c' → logprob: -6.878018856048584
    4. 'cente' → logprob: -8.003019332885742
    5. 'cemment' → logprob: -8.503019332885742
    6. 'import' → logprob: -10.378019332885742
    7. '
' → logprob: -11.003019332885742
    8. 'centr' → logprob: -11.878019332885742
    9. 'g' → logprob: -12.128019332885742
    10. '```' → logprob: -12.128019332885742

Token 51: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.13006891310214996
    2. ',' → logprob: -2.8800690174102783
    3. ' ,' → logprob: -3.8800690174102783
    4. 'de' → logprob: -4.005068778991699
    5. 'import' → logprob: -5.255068778991699
    6. ' import' → logprob: -5.380068778991699
    7. ' from' → logprob: -5.380068778991699
    8. ' of' → logprob: -6.005068778991699
    9. ' math' → logprob: -6.130068778991699
    10. 'from' → logprob: -6.255068778991699

Token 52: ' Python' (ID: 26534)
  Prédit: ' Python'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Python' → logprob: -0.030878329649567604
    2. 'Python' → logprob: -3.6558783054351807
    3. 'python' → logprob: -5.65587854385376
    4. ' python' → logprob: -7.15587854385376
    5. ' math' → logprob: -8.280878067016602
    6. 'math' → logprob: -10.530878067016602
    7. ' la' → logprob: -12.405878067016602
    8. ' ' → logprob: -14.030878067016602
    9. '_python' → logprob: -14.030878067016602
    10. '```' → logprob: -14.405878067016602

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20752708613872528
    2. ' ,' → logprob: -1.7075270414352417
    3. '3' → logprob: -6.457527160644531
    4. 'from' → logprob: -7.082527160644531
    5. 'math' → logprob: -7.207527160644531
    6. 'import' → logprob: -7.332527160644531
    7. '.math' → logprob: -7.832527160644531
    8. ' math' → logprob: -8.082527160644531
    9. ' import' → logprob: -8.207527160644531
    10. ' ' → logprob: -8.207527160644531

Token 54: ' il' (ID: 1793)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.43658554553985596
    2. ' gcd' → logprob: -1.186585545539856
    3. ' fractions' → logprob: -4.561585426330566
    4. 'g' → logprob: -4.561585426330566
    5. 'math' → logprob: -4.811585426330566
    6. 'fra' → logprob: -5.186585426330566
    7. ' from' → logprob: -5.186585426330566
    8. ' the' → logprob: -6.311585426330566
    9. 'from' → logprob: -6.436585426330566
    10. ' this' → logprob: -6.561585426330566

Token 55: ' est' (ID: 893)
  Prédit: ' faut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.36312025785446167
    2. 'from' → logprob: -2.2381203174591064
    3. 'f' → logprob: -2.9881203174591064
    4. 'est' → logprob: -3.6131203174591064
    5. ' a' → logprob: -4.113120079040527
    6. ' is' → logprob: -4.113120079040527
    7. ''est' → logprob: -4.363120079040527
    8. 'a' → logprob: -4.488120079040527
    9. 'is' → logprob: -4.613120079040527
    10. ' est' → logprob: -4.738120079040527

Token 56: ' préférable' (ID: 194785)
  Prédit: ' recommandé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recommandé' → logprob: -1.2166359424591064
    2. ' préférable' → logprob: -1.2166359424591064
    3. ' conseillé' → logprob: -1.9666359424591064
    4. ' deprecated' → logprob: -2.3416359424591064
    5. 'deprecated' → logprob: -2.4666359424591064
    6. ' recommended' → logprob: -4.091635704040527
    7. 're' → logprob: -4.341635704040527
    8. ' décon' → logprob: -4.341635704040527
    9. 'recommended' → logprob: -4.716635704040527
    10. 'from' → logprob: -4.966635704040527

Token 57: ' d' (ID: 272)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13047462701797485
    2. ' de' → logprob: -2.50547456741333
    3. ' d' → logprob: -4.38047456741333
    4. 'de' → logprob: -4.63047456741333
    5. 'import' → logprob: -5.00547456741333
    6. ' from' → logprob: -5.38047456741333
    7. 'd' → logprob: -6.00547456741333
    8. ' to' → logprob: -6.13047456741333
    9. 'to' → logprob: -6.25547456741333
    10. ' ' → logprob: -9.755475044250488

Token 58: ''utiliser' (ID: 133355)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8188892602920532
    2. 'e' → logprob: -0.9438892602920532
    3. 'ep' → logprob: -2.5688891410827637
    4. ''utiliser' → logprob: -4.068889141082764
    5. ' from' → logprob: -4.193889141082764
    6. 'é' → logprob: -5.068889141082764
    7. 'math' → logprob: -5.068889141082764
    8. ''import' → logprob: -5.443889141082764
    9. ''e' → logprob: -5.568889141082764
    10. '`' → logprob: -5.943889141082764

Token 59: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.08615165948867798
    2. 'math' → logprob: -2.586151599884033
    3. 'from' → logprob: -5.461151599884033
    4. ' from' → logprob: -5.836151599884033
    5. 'import' → logprob: -10.836152076721191
    6. '```' → logprob: -10.836152076721191
    7. '(math' → logprob: -11.586152076721191
    8. '.math' → logprob: -11.961152076721191
    9. ' ' → logprob: -12.711152076721191
    10. 'm' → logprob: -12.961152076721191

Token 60: '.g' (ID: 1940)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3738953471183777
    2. '_' → logprob: -1.6238954067230225
    3. 'import' → logprob: -2.4988954067230225
    4. 's' → logprob: -5.248895168304443
    5. 'e' → logprob: -5.748895168304443
    6. 'er' → logprob: -5.998895168304443
    7. 'm' → logprob: -6.123895168304443
    8. ' import' → logprob: -6.123895168304443
    9. '<|end|>' → logprob: -6.123895168304443
    10. ' ' → logprob: -6.498895168304443

Token 61: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.002916499972343445
    2. 'reat' → logprob: -5.87791633605957
    3. 'math' → logprob: -10.37791633605957
    4. 'c' → logprob: -10.50291633605957
    5. 'CD' → logprob: -11.00291633605957
    6. 'cm' → logprob: -11.87791633605957
    7. 'cf' → logprob: -12.00291633605957
    8. 'cdn' → logprob: -12.50291633605957
    9. 'reater' → logprob: -12.50291633605957
    10. '```' → logprob: -12.62791633605957

Token 62: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08632991462945938
    2. '<|end|>' → logprob: -3.586329936981201
    3. '
' → logprob: -4.086329936981201
    4. '

' → logprob: -4.211329936981201
    5. ' ' → logprob: -4.711329936981201
    6. '' → logprob: -5.336329936981201
    7. ' 
' → logprob: -5.961329936981201
    8. '.' → logprob: -6.586329936981201
    9. ' 

' → logprob: -6.711329936981201
    10. '<|end|>' → logprob: -7.086329936981201

Token 63: ' car' (ID: 1669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' fractions' (ID: 110523)
  Prédit: ' fractions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.754723072052002
    2. ' gcd' → logprob: -1.004723072052002
    3. 'fra' → logprob: -2.879723072052002
    4. ' ' → logprob: -3.254723072052002
    5. ' fra' → logprob: -3.879723072052002
    6. ' la' → logprob: -4.129723072052002
    7. ' '' → logprob: -4.754723072052002
    8. ' ' → logprob: -5.129723072052002
    9. ' from' → logprob: -5.379723072052002
    10. ' le' → logprob: -6.254723072052002

Token 65: '.g' (ID: 1940)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32886847853660583
    2. ' is' → logprob: -2.0788683891296387
    3. 'import' → logprob: -2.8288683891296387
    4. '.g' → logprob: -3.9538683891296387
    5. '<|end|>' → logprob: -4.203868389129639
    6. 'g' → logprob: -4.328868389129639
    7. ')' → logprob: -4.953868389129639
    8. ' has' → logprob: -4.953868389129639
    9. ' import' → logprob: -4.953868389129639
    10. ' ' → logprob: -5.203868389129639

Token 66: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.01111278124153614
    2. 'c' → logprob: -4.511112689971924
    3. 'd' → logprob: -10.886113166809082
    4. '	cd' → logprob: -12.011113166809082
    5. 'cdn' → logprob: -12.386113166809082
    6. ' cd' → logprob: -12.511113166809082
    7. '_cd' → logprob: -12.636113166809082
    8. 'CD' → logprob: -12.698613166809082
    9. '.cd' → logprob: -12.886113166809082
    10. 'm' → logprob: -12.948613166809082

Token 67: ' est' (ID: 893)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4702857434749603
    2. ' ' → logprob: -1.8452857732772827
    3. ' est' → logprob: -2.220285654067993
    4. 'est' → logprob: -3.595285654067993
    5. ')' → logprob: -3.845285654067993
    6. ' is' → logprob: -4.220285892486572
    7. '()' → logprob: -4.720285892486572
    8. 'a' → logprob: -5.095285892486572
    9. ''' → logprob: -5.220285892486572
    10. ' n' → logprob: -5.220285892486572

Token 68: ' ob' (ID: 1067)
  Prédit: ' ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ob' → logprob: -0.22467723488807678
    2. ' deprecated' → logprob: -1.8496772050857544
    3. 'deprecated' → logprob: -3.849677324295044
    4. 'd' → logprob: -4.974677085876465
    5. 'dé' → logprob: -4.974677085876465
    6. 'ob' → logprob: -5.849677085876465
    7. ' dé' → logprob: -6.599677085876465
    8. ' ' → logprob: -6.849677085876465
    9. ' supprim' → logprob: -6.974677085876465
    10. ' d' → logprob: -7.349677085876465

Token 69: 'sol' (ID: 4399)
  Prédit: 'sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.08116138726472855
    2. 'solete' → logprob: -2.9561614990234375
    3. 'so' → logprob: -3.8311614990234375
    4. 's' → logprob: -5.9561614990234375
    5. 'se' → logprob: -7.0811614990234375
    6. 'sole' → logprob: -7.7061614990234375
    7. 'sel' → logprob: -8.581161499023438
    8. 'solute' → logprob: -9.956161499023438
    9. 'sup' → logprob: -10.831161499023438
    10. 'serv' → logprob: -10.956161499023438

Token 70: 'ète' (ID: 28789)
  Prédit: 'ète'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ète' → logprob: -0.00283210352063179
    2. 'è' → logprob: -6.252831935882568
    3. 'ètes' → logprob: -7.752831935882568
    4. 'èt' → logprob: -8.252832412719727
    5. '�' → logprob: -10.127832412719727
    6. '`' → logprob: -10.252832412719727
    7. 'é' → logprob: -10.877832412719727
    8. '%' → logprob: -11.002832412719727
    9. '\' → logprob: -11.127832412719727
    10. 'ètent' → logprob: -11.877832412719727

Token 71: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11862972378730774
    2. '<|end|>' → logprob: -3.6186296939849854
    3. '

' → logprob: -3.7436296939849854
    4. ' ' → logprob: -4.2436299324035645
    5. '.' → logprob: -4.3686299324035645
    6. '' → logprob: -4.6186299324035645
    7. '
' → logprob: -4.8686299324035645
    8. 'import' → logprob: -5.1186299324035645
    9. ' 
' → logprob: -5.8686299324035645
    10. ' 

' → logprob: -6.8686299324035645

Token 72: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026898588985204697
    2. '

' → logprob: -4.901898384094238
    3. 'import' → logprob: -5.526898384094238
    4. ' ' → logprob: -5.651898384094238
    5. '
' → logprob: -5.901898384094238
    6. '' → logprob: -6.276898384094238
    7. '<|end|>' → logprob: -6.401898384094238
    8. 'f' → logprob: -6.776898384094238
    9. '.' → logprob: -6.901898384094238
    10. 'm' → logprob: -7.526898384094238

Token 73: ' Dé' (ID: 27247)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3344663977622986
    2. 'from' → logprob: -1.4594664573669434
    3. ' ' → logprob: -3.3344664573669434
    4. '#' → logprob: -4.959466457366943
    5. ' from' → logprob: -5.959466457366943
    6. ' import' → logprob: -6.709466457366943
    7. 'def' → logprob: -7.084466457366943
    8. 'f' → logprob: -7.209466457366943
    9. ' math' → logprob: -7.209466457366943
    10. ',' → logprob: -7.459466457366943

Token 74: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.008116161450743675
    2. 'fin' → logprob: -5.008116245269775
    3. 'fi' → logprob: -7.258116245269775
    4. 'fen' → logprob: -7.883116245269775
    5. 'def' → logprob: -9.008115768432617
    6. '#' → logprob: -9.258115768432617
    7. 'fic' → logprob: -11.133115768432617
    8. 'fe' → logprob: -11.383115768432617
    9. 'fn' → logprob: -11.508115768432617
    10. 'fine' → logprob: -11.508115768432617

Token 75: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.09905014932155609
    2. 'i' → logprob: -2.5990500450134277
    3. 'inition' → logprob: -4.599050045013428
    4. 'ir' → logprob: -5.599050045013428
    5. 't' → logprob: -6.224050045013428
    6. 'tion' → logprob: -6.474050045013428
    7. 'ission' → logprob: -7.599050045013428
    8. 'ti' → logprob: -7.599050045013428
    9. 'e' → logprob: -7.974050045013428
    10. 'it' → logprob: -8.224050521850586

Token 76: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003911099396646023
    2. '_' → logprob: -6.253911018371582
    3. ' de' → logprob: -7.253911018371582
    4. 'def' → logprob: -7.878911018371582
    5. '(' → logprob: -8.628911018371582
    6. ' def' → logprob: -8.878911018371582
    7. ' (' → logprob: -9.003911018371582
    8. ' _' → logprob: -9.503911018371582
    9. ' ' → logprob: -10.128911018371582
    10. ',' → logprob: -10.253911018371582

Token 77: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9470100402832031
    2. ' ' → logprob: -0.9470100402832031
    3. ' a' → logprob: -2.447010040283203
    4. ' e' → logprob: -2.697010040283203
    5. ' la' → logprob: -3.697010040283203
    6. ' une' → logprob: -3.822010040283203
    7. ' ' → logprob: -4.697010040283203
    8. 'a' → logprob: -5.197010040283203
    9. ''une' → logprob: -6.072010040283203
    10. ' un' → logprob: -6.697010040283203

Token 78: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3216900825500488
    2. ' class' → logprob: -1.4466900825500488
    3. 'class' → logprob: -1.9466900825500488
    4. ' fraction' → logprob: -2.446690082550049
    5. ' def' → logprob: -2.821690082550049
    6. 'fonction' → logprob: -3.071690082550049
    7. ' classe' → logprob: -3.571690082550049
    8. ' fonction' → logprob: -3.696690082550049
    9. 'classe' → logprob: -3.696690082550049
    10. ' ' → logprob: -3.946690082550049

Token 79: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7377561926841736
    2. 'def' → logprob: -1.1127562522888184
    3. '_' → logprob: -1.9877562522888184
    4. ' def' → logprob: -3.6127562522888184
    5. ' de' → logprob: -4.362756252288818
    6. ' d' → logprob: -5.737756252288818
    7. 'd' → logprob: -5.987756252288818
    8. 'de' → logprob: -5.987756252288818
    9. ' _' → logprob: -7.112756252288818
    10. '_de' → logprob: -7.112756252288818

Token 80: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.056955765932798386
    2. 'calcul' → logprob: -3.0569558143615723
    3. 'simpl' → logprob: -6.306955814361572
    4. ' simpl' → logprob: -6.556955814361572
    5. ' calc' → logprob: -6.556955814361572
    6. ' calcular' → logprob: -7.306955814361572
    7. ' déterminer' → logprob: -7.556955814361572
    8. 'Calcul' → logprob: -7.806955814361572
    9. ' ' → logprob: -7.806955814361572
    10. 'cal' → logprob: -8.431955337524414

Token 81: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.18255844712257385
    2. '#' → logprob: -2.682558536529541
    3. 'c' → logprob: -3.682558536529541
    4. 'a' → logprob: -3.932558536529541
    5. 'e' → logprob: -4.057558536529541
    6. 'uler' → logprob: -4.932558536529541
    7. '```' → logprob: -5.057558536529541
    8. 'l' → logprob: -5.182558536529541
    9. 'u' → logprob: -6.182558536529541
    10. 'ul' → logprob: -6.307558536529541

Token 82: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10493981093168259
    2. ' ' → logprob: -2.4799396991729736
    3. '_le' → logprob: -5.979939937591553
    4. 'l' → logprob: -6.104939937591553
    5. ' la' → logprob: -6.229939937591553
    6. ' le' → logprob: -6.354939937591553
    7. '(' → logprob: -6.604939937591553
    8. ' _' → logprob: -6.729939937591553
    9. ' (' → logprob: -7.104939937591553
    10. ' l' → logprob: -7.229939937591553

Token 83: ' plus' (ID: 2932)
  Prédit: ' pg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pg' → logprob: -0.6797769665718079
    2. ' plus' → logprob: -1.554776906967163
    3. ' p' → logprob: -2.429776906967163
    4. ' PG' → logprob: -3.304776906967163
    5. 'pg' → logprob: -3.679776906967163
    6. ' PPC' → logprob: -3.679776906967163
    7. 'plus' → logprob: -3.804776906967163
    8. ' ' → logprob: -3.804776906967163
    9. 's' → logprob: -4.804777145385742
    10. 'pp' → logprob: -4.929777145385742

Token 84: ' petit' (ID: 20577)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5245432257652283
    2. ' ' → logprob: -0.8995432257652283
    3. ' _' → logprob: -6.774543285369873
    4. '_space' → logprob: -9.774542808532715
    5. '<|end|>' → logprob: -10.399542808532715
    6. 'space' → logprob: -10.524542808532715
    7. '```' → logprob: -10.649542808532715
    8. 's' → logprob: -10.649542808532715
    9. 'u' → logprob: -11.024542808532715
    10. ' ‌' → logprob: -11.024542808532715

Token 85: ' commun' (ID: 2797)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6565122604370117
    2. '_' → logprob: -0.7815122604370117
    3. ' _' → logprob: -4.781512260437012
    4. '_div' → logprob: -6.156512260437012
    5. 's' → logprob: -6.281512260437012
    6. '  ' → logprob: -6.281512260437012
    7. '_multiple' → logprob: -6.531512260437012
    8. ' espace' → logprob: -6.906512260437012
    9. '<|end|>' → logprob: -7.031512260437012
    10. ' divisible' → logprob: -7.531512260437012

Token 86: ' multiple' (ID: 7598)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06268575042486191
    2. ' ' → logprob: -2.81268572807312
    3. '_multiple' → logprob: -8.3126859664917
    4. 'u' → logprob: -9.6876859664917
    5. '_div' → logprob: -10.1876859664917
    6. 'm' → logprob: -10.1876859664917
    7. '_m' → logprob: -10.5626859664917
    8. '_c' → logprob: -10.5626859664917
    9. '_mult' → logprob: -10.6876859664917
    10. '_p' → logprob: -10.8126859664917

Token 87: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9405990839004517
    2. '_' → logprob: -1.4405990839004517
    3. ' (' → logprob: -1.8155990839004517
    4. 'def' → logprob: -1.9405990839004517
    5. 's' → logprob: -3.315598964691162
    6. '(s' → logprob: -5.440598964691162
    7. '_s' → logprob: -5.690598964691162
    8. ' de' → logprob: -6.065598964691162
    9. ',' → logprob: -6.190598964691162
    10. '(p' → logprob: -6.315598964691162

Token 88: 'LC' (ID: 10566)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8335330486297607
    2. 'de' → logprob: -1.8335330486297607
    3. 's' → logprob: -2.0835330486297607
    4. 'l' → logprob: -2.4585330486297607
    5. ' des' → logprob: -3.0835330486297607
    6. ' )' → logprob: -3.7085330486297607
    7. ' ' → logprob: -4.08353328704834
    8. 'd' → logprob: -4.08353328704834
    9. ' (' → logprob: -4.20853328704834
    10. '(' → logprob: -4.20853328704834

Token 89: 'M' (ID: 44)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00045474470243789256
    2. ' m' → logprob: -9.000454902648926
    3. 'iple' → logprob: -9.375454902648926
    4. ')' → logprob: -9.875454902648926
    5. '```' → logprob: -10.125454902648926
    6. '   ' → logprob: -11.250454902648926
    7. 'u' → logprob: -11.375454902648926
    8. '  ' → logprob: -11.500454902648926
    9. 'mu' → logprob: -11.500454902648926
    10. 'i' → logprob: -11.500454902648926

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005140307825058699
    2. '_' → logprob: -6.38014030456543
    3. ' )' → logprob: -6.88014030456543
    4. 'def' → logprob: -7.13014030456543
    5. ' de' → logprob: -7.38014030456543
    6. '(' → logprob: -8.00514030456543
    7. ',' → logprob: -8.50514030456543
    8. ' (' → logprob: -8.63014030456543
    9. ' ' → logprob: -9.63014030456543
    10. 's' → logprob: -10.50514030456543

Token 91: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14636853337287903
    2. ' de' → logprob: -2.1463685035705566
    3. 'd' → logprob: -4.896368503570557
    4. 'de' → logprob: -5.646368503570557
    5. ' def' → logprob: -5.896368503570557
    6. '(' → logprob: -6.271368503570557
    7. ':' → logprob: -6.771368503570557
    8. ')' → logprob: -7.146368503570557
    9. ' d' → logprob: -7.396368503570557
    10. '_' → logprob: -8.271368980407715

Token 92: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5243178606033325
    2. ' deux' → logprob: -0.8993178606033325
    3. ' two' → logprob: -7.899317741394043
    4. ' deu' → logprob: -8.024317741394043
    5. ' ' → logprob: -8.774317741394043
    6. ' de' → logprob: -9.149317741394043
    7. '2' → logprob: -9.649317741394043
    8. '(de' → logprob: -9.774317741394043
    9. '_de' → logprob: -10.274317741394043
    10. ' DE' → logprob: -11.649317741394043

Token 93: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.33858123421669006
    2. ' ' → logprob: -1.4635812044143677
    3. ' nombre' → logprob: -4.713581085205078
    4. 'n' → logprob: -4.713581085205078
    5. '  ' → logprob: -4.838581085205078
    6. 'nombre' → logprob: -5.088581085205078
    7. ' )' → logprob: -5.088581085205078
    8. ' "' → logprob: -6.088581085205078
    9. ' espaces' → logprob: -6.213581085205078
    10. '_' → logprob: -6.338581085205078

Token 94: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.7461053133010864
    2. 'i' → logprob: -1.6211053133010864
    3. 'e' → logprob: -2.121105194091797
    4. 'ier' → logprob: -2.496105194091797
    5. 'ié' → logprob: -2.746105194091797
    6. 'r' → logprob: -3.746105194091797
    7. 'a' → logprob: -5.121105194091797
    8. 's' → logprob: -5.246105194091797
    9. 'é' → logprob: -5.246105194091797
    10. 't' → logprob: -5.621105194091797

Token 95: ' x' (ID: 1215)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.34809741377830505
    2. 'def' → logprob: -1.4730974435806274
    3. ' de' → logprob: -3.223097324371338
    4. ' d' → logprob: -4.723097324371338
    5. 'de' → logprob: -4.973097324371338
    6. ' ' → logprob: -5.598097324371338
    7. ' def' → logprob: -6.723097324371338
    8. ')' → logprob: -7.098097324371338
    9. 's' → logprob: -7.348097324371338
    10. ',' → logprob: -7.723097324371338

Token 96: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9423945546150208
    2. '_' → logprob: -1.192394495010376
    3. 'def' → logprob: -1.317394495010376
    4. '=' → logprob: -4.567394733428955
    5. ':' → logprob: -4.817394733428955
    6. ')' → logprob: -5.567394733428955
    7. 'u' → logprob: -6.067394733428955
    8. 'x' → logprob: -6.317394733428955
    9. 'e' → logprob: -6.442394733428955
    10. 's' → logprob: -6.442394733428955

Token 97: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.14272093772888184
    2. 'y' → logprob: -2.017720937728882
    3. '	y' → logprob: -10.767721176147461
    4. ' ' → logprob: -11.142721176147461
    5. '  ' → logprob: -13.017721176147461
    6. '<|end|>' → logprob: -13.392721176147461
    7. ',y' → logprob: -13.767721176147461
    8. ',' → logprob: -13.892721176147461
    9. ' ' → logprob: -14.267721176147461
    10. ''y' → logprob: -14.267721176147461

Token 98: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01772104576230049
    2. 'd' → logprob: -4.892721176147461
    3. '
' → logprob: -4.892721176147461
    4. 'de' → logprob: -6.267721176147461
    5. ' de' → logprob: -8.142721176147461
    6. '
' → logprob: -9.642721176147461
    7. ' 
' → logprob: -9.767721176147461
    8. ' def' → logprob: -9.892721176147461
    9. ':def' → logprob: -9.892721176147461
    10. '\' → logprob: -10.017721176147461

Token 99: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012092930264770985
    2. '
' → logprob: -4.5120930671691895
    3. 'd' → logprob: -6.8870930671691895
    4. 'de' → logprob: -11.762092590332031
    5. '\' → logprob: -12.137092590332031
    6. '```' → logprob: -12.262092590332031
    7. '
' → logprob: -13.137092590332031
    8. ' def' → logprob: -13.637092590332031
    9. ' 
' → logprob: -13.887092590332031
    10. '

' → logprob: -13.887092590332031

Token 100: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.0017067246371880174
    2. 'l' → logprob: -6.876706600189209
    3. '_l' → logprob: -7.876706600189209
    4. ' ' → logprob: -8.501707077026367
    5. '	l' → logprob: -10.126707077026367
    6. '_' → logprob: -10.251707077026367
    7. ' lc' → logprob: -11.876707077026367
    8. ' _' → logprob: -13.001707077026367
    9. ' calculate' → logprob: -13.876707077026367
    10. ' ' → logprob: -13.876707077026367

Token 101: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.00897569116204977
    2. 'c' → logprob: -5.008975505828857
    3. '_c' → logprob: -7.008975505828857
    4. '_' → logprob: -7.383975505828857
    5. '_cm' → logprob: -8.258975982666016
    6. 'e' → logprob: -8.758975982666016
    7. '   ' → logprob: -9.633975982666016
    8. 'cms' → logprob: -10.258975982666016
    9. 'cd' → logprob: -10.383975982666016
    10. ' cm' → logprob: -10.758975982666016

Token 102: '_base' (ID: 17096)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038544703274965286
    2. '(x' → logprob: -3.2885446548461914
    3. '(a' → logprob: -8.038544654846191
    4. ' (' → logprob: -8.663544654846191
    5. '(
' → logprob: -12.288544654846191
    6. '(i' → logprob: -14.163544654846191
    7. '(n' → logprob: -14.538544654846191
    8. ' ' → logprob: -15.038544654846191
    9. '_' → logprob: -15.163544654846191
    10. '(

' → logprob: -15.288544654846191

Token 103: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01897772215306759
    2. '(x' → logprob: -4.018977642059326
    3. ' (' → logprob: -7.393977642059326
    4. '(a' → logprob: -8.518978118896484
    5. '(n' → logprob: -12.643978118896484
    6. '_' → logprob: -13.768978118896484
    7. ':' → logprob: -13.768978118896484
    8. ' ' → logprob: -13.893978118896484
    9. '(
' → logprob: -14.143978118896484
    10. '(s' → logprob: -14.268978118896484

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025919382460415363
    2. ' ,' → logprob: -8.375259399414062
    3. ',y' → logprob: -10.500259399414062
    4. ')' → logprob: -15.625259399414062
    5. ' ' → logprob: -15.875259399414062
    6. '

' → logprob: -15.875259399414062
    7. ',
' → logprob: -16.000259399414062
    8. ',

' → logprob: -16.000259399414062
    9. ',b' → logprob: -16.125259399414062
    10. ',x' → logprob: -16.500259399414062

Token 105: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.38688185811042786
    2. 'y' → logprob: -1.1368818283081055
    3. '	y' → logprob: -12.261881828308105
    4. ' ' → logprob: -12.636881828308105
    5. ')' → logprob: -13.511881828308105
    6. ' ' → logprob: -14.886881828308105
    7. ' )' → logprob: -15.011881828308105
    8. '<|end|>' → logprob: -15.636881828308105
    9. ')y' → logprob: -15.886881828308105
    10. ',' → logprob: -16.136882781982422

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002512166043743491
    2. ')' → logprob: -6.002511978149414
    3. ':' → logprob: -11.002511978149414
    4. ' ):' → logprob: -11.252511978149414
    5. '):
' → logprob: -12.002511978149414
    6. ')：' → logprob: -16.002511978149414
    7. '():' → logprob: -16.127511978149414
    8. '   ' → logprob: -16.377511978149414
    9. '):
' → logprob: -16.627511978149414
    10. ',' → logprob: -17.002511978149414

Token 107: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016515808179974556
    2. ' :' → logprob: -4.141515731811523
    3. '):' → logprob: -8.016515731811523
    4. ':return' → logprob: -10.266515731811523
    5. '():' → logprob: -10.391515731811523
    6. ':
' → logprob: -10.391515731811523
    7. '   ' → logprob: -11.391515731811523
    8. ' :
' → logprob: -11.516515731811523
    9. ',' → logprob: -11.641515731811523
    10. ':**' → logprob: -11.891515731811523

Token 108: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4754028618335724
    2. ' return' → logprob: -0.97540283203125
    3. '   ' → logprob: -7.72540283203125
    4. 'if' → logprob: -8.22540283203125
    5. 'g' → logprob: -8.85040283203125
    6. ' if' → logprob: -8.97540283203125
    7. '"""' → logprob: -9.35040283203125
    8. ' ' → logprob: -9.72540283203125
    9. ' """' → logprob: -9.85040283203125
    10. '	return' → logprob: -9.85040283203125

Token 109: ' Mult' (ID: 15431)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04882126674056053
    2. 'return' → logprob: -3.423821210861206
    3. ' l' → logprob: -5.298821449279785
    4. ' """' → logprob: -5.923821449279785
    5. ' gcd' → logprob: -6.298821449279785
    6. ' if' → logprob: -6.423821449279785
    7. '   ' → logprob: -6.923821449279785
    8. 'g' → logprob: -7.048821449279785
    9. '"""' → logprob: -7.173821449279785
    10. ' ' → logprob: -8.923821449279785

Token 110: 'ipl' (ID: 7840)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6290802955627441
    2. 'ipl' → logprob: -1.0040802955627441
    3. 'ip' → logprob: -2.754080295562744
    4. 'iplier' → logprob: -4.129080295562744
    5. ' x' → logprob: -5.129080295562744
    6. 'iple' → logprob: -5.629080295562744
    7. ' return' → logprob: -5.879080295562744
    8. ' ' → logprob: -6.129080295562744
    9. '  ' → logprob: -6.129080295562744
    10. '    ' → logprob: -6.504080295562744

Token 111: 'ie' (ID: 396)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.043776869773864746
    2. 'er' → logprob: -3.2937769889831543
    3. 'e' → logprob: -6.418776988983154
    4. 'iquer' → logprob: -6.918776988983154
    5. 'yer' → logprob: -7.168776988983154
    6. 'ie' → logprob: -7.293776988983154
    7. 'y' → logprob: -7.543776988983154
    8. '   ' → logprob: -8.043776512145996
    9. 'ié' → logprob: -9.168776512145996
    10. 'ic' → logprob: -9.668776512145996

Token 112: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.022622399032115936
    2. 'x' → logprob: -4.272622585296631
    3. '   ' → logprob: -5.647622585296631
    4. ' ' → logprob: -6.022622585296631
    5. '(x' → logprob: -7.147622585296631
    6. ' (' → logprob: -7.272622585296631
    7. '  ' → logprob: -8.272622108459473
    8. ' return' → logprob: -8.772622108459473
    9. '(' → logprob: -9.147622108459473
    10. '    ' → logprob: -9.772622108459473

Token 113: ' et' (ID: 859)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2896222770214081
    2. ' ' → logprob: -1.4146223068237305
    3. '*' → logprob: -5.5396223068237305
    4. '   ' → logprob: -6.1646223068237305
    5. '  ' → logprob: -7.4146223068237305
    6. ' )' → logprob: -7.4146223068237305
    7. ')' → logprob: -7.7896223068237305
    8. '    ' → logprob: -8.03962230682373
    9. ' et' → logprob: -9.03962230682373
    10. ' and' → logprob: -9.41462230682373

Token 114: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.029901249334216118
    2. 'y' → logprob: -3.5299012660980225
    3. ' ' → logprob: -8.904901504516602
    4. '	y' → logprob: -11.904901504516602
    5. '  ' → logprob: -12.529901504516602
    6. ''y' → logprob: -13.279901504516602
    7. '    ' → logprob: -13.779901504516602
    8. '   ' → logprob: -14.529901504516602
    9. '"' → logprob: -15.279901504516602
    10. ' ' → logprob: -15.529901504516602

Token 115: ' ensemble' (ID: 33081)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11696469783782959
    2. '   ' → logprob: -2.741964817047119
    3. ' /' → logprob: -3.741964817047119
    4. '    ' → logprob: -4.991964817047119
    5. ')' → logprob: -5.241964817047119
    6. '  ' → logprob: -5.741964817047119
    7. ' //' → logprob: -5.991964817047119
    8. ' )' → logprob: -5.991964817047119
    9. '/' → logprob: -7.866964817047119
    10. ',' → logprob: -7.991964817047119

Token 116: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04539530351758003
    2. '   ' → logprob: -3.4203953742980957
    3. ' /' → logprob: -5.295395374298096
    4. ' *' → logprob: -6.295395374298096
    5. '    ' → logprob: -6.545395374298096
    6. ')' → logprob: -7.045395374298096
    7. ',' → logprob: -7.295395374298096
    8. ' )' → logprob: -7.545395374298096
    9. '*' → logprob: -7.795395374298096
    10. '  ' → logprob: -7.920395374298096

Token 117: ' puis' (ID: 18766)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.9757699370384216
    2. ' ' → logprob: -1.4757699966430664
    3. ' puis' → logprob: -1.7257699966430664
    4. ' /' → logprob: -2.3507699966430664
    5. ' return' → logprob: -3.3507699966430664
    6. ' and' → logprob: -3.4757699966430664
    7. '   ' → logprob: -4.475769996643066
    8. ' '' → logprob: -4.600769996643066
    9. '/' → logprob: -5.100769996643066
    10. ' then' → logprob: -5.725769996643066

Token 118: ' div' (ID: 4223)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07729662209749222
    2. ' //' → logprob: -3.452296733856201
    3. ' divide' → logprob: -4.202296733856201
    4. ' /' → logprob: -4.827296733856201
    5. ' div' → logprob: -4.952296733856201
    6. 'div' → logprob: -5.577296733856201
    7. ' return' → logprob: -5.827296733856201
    8. ' divides' → logprob: -5.952296733856201
    9. 'divide' → logprob: -7.202296733856201
    10. ' )' → logprob: -7.702296733856201

Token 119: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0024763736873865128
    2. 'ide' → logprob: -6.127476215362549
    3. '```' → logprob: -9.377476692199707
    4. 'iser' → logprob: -9.752476692199707
    5. 'isé' → logprob: -10.502476692199707
    6. 'ize' → logprob: -10.627476692199707
    7. '   ' → logprob: -10.877476692199707
    8. '#' → logprob: -11.627476692199707
    9. 'i' → logprob: -11.627476692199707
    10. 'isez' → logprob: -11.877476692199707

Token 120: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6347045302391052
    2. ' by' → logprob: -1.13470458984375
    3. ' ' → logprob: -2.75970458984375
    4. ')' → logprob: -3.88470458984375
    5. 'par' → logprob: -4.38470458984375
    6. ' )' → logprob: -4.38470458984375
    7. ',' → logprob: -4.50970458984375
    8. '   ' → logprob: -4.75970458984375
    9. '<|end|>' → logprob: -5.63470458984375
    10. 'by' → logprob: -5.75970458984375

Token 121: ' leur' (ID: 9853)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.029810544103384018
    2. 'g' → logprob: -3.5298104286193848
    3. ' ' → logprob: -9.904810905456543
    4. '	g' → logprob: -13.154810905456543
    5. '   ' → logprob: -13.654810905456543
    6. ' ' → logprob: -13.779810905456543
    7. ' g' → logprob: -13.779810905456543
    8. ' abs' → logprob: -13.904810905456543
    9. ' the' → logprob: -14.404810905456543
    10. ' fractions' → logprob: -14.654810905456543

Token 122: ' PG' (ID: 44249)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.05103218927979469
    2. 'g' → logprob: -3.176032304763794
    3. ' ' → logprob: -5.551032066345215
    4. '_g' → logprob: -5.676032066345215
    5. ' _' → logprob: -8.801032066345215
    6. '	g' → logprob: -9.051032066345215
    7. '_' → logprob: -9.176032066345215
    8. ' g' → logprob: -9.301032066345215
    9. 's' → logprob: -9.801032066345215
    10. ' ' → logprob: -10.176032066345215

Token 123: 'CD' (ID: 8257)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.013369501568377018
    2. 'CD' → logprob: -4.638369560241699
    3. 'C' → logprob: -5.763369560241699
    4. 'c' → logprob: -8.0133695602417
    5. '_cd' → logprob: -9.3883695602417
    6. 'Cd' → logprob: -10.6383695602417
    7. ' ' → logprob: -12.1383695602417
    8. '_' → logprob: -12.1383695602417
    9. '```' → logprob: -12.5133695602417
    10. '_c' → logprob: -12.6383695602417

Token 124: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7376235723495483
    2. '(x' → logprob: -1.2376235723495483
    3. '(' → logprob: -2.237623691558838
    4. '   ' → logprob: -3.112623691558838
    5. ',' → logprob: -3.487623691558838
    6. 'def' → logprob: -3.612623691558838
    7. '(
' → logprob: -4.612623691558838
    8. ':' → logprob: -5.487623691558838
    9. ' (
' → logprob: -5.737623691558838
    10. ')' → logprob: -6.737623691558838

Token 125: 'Great' (ID: 19936)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6618229746818542
    2. ' gcd' → logprob: -0.7868229746818542
    3. ' )' → logprob: -4.16182279586792
    4. ')' → logprob: -4.53682279586792
    5. ' ' → logprob: -6.66182279586792
    6. ' ' → logprob: -7.78682279586792
    7. ' g' → logprob: -8.161823272705078
    8. '(g' → logprob: -8.911823272705078
    9. '_g' → logprob: -9.661823272705078
    10. 'f' → logprob: -9.661823272705078

Token 126: 'est' (ID: 376)
  Prédit: 'CD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.6690376996994019
    2. ' ' → logprob: -1.1690376996994019
    3. 'cd' → logprob: -2.0440378189086914
    4. ')' → logprob: -4.044037818908691
    5. '-' → logprob: -5.294037818908691
    6. '```' → logprob: -5.294037818908691
    7. '   ' → logprob: -6.044037818908691
    8. 's' → logprob: -6.169037818908691
    9. 'or' → logprob: -6.419037818908691
    10. 'C' → logprob: -6.669037818908691

Token 127: ' Common' (ID: 14782)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'common' → logprob: -1.0179903507232666
    2. '_common' → logprob: -1.5179903507232666
    3. ' common' → logprob: -1.6429903507232666
    4. ' ' → logprob: -1.8929903507232666
    5. '_' → logprob: -3.5179903507232666
    6. 'commun' → logprob: -4.0179901123046875
    7. ' _' → logprob: -5.3929901123046875
    8. ' commun' → logprob: -5.6429901123046875
    9. '	common' → logprob: -5.7679901123046875
    10. '   ' → logprob: -6.0179901123046875

Token 128: ' Div' (ID: 12302)
  Prédit: ' Div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Div' → logprob: -0.3904629647731781
    2. 'Div' → logprob: -1.1404629945755005
    3. 'div' → logprob: -5.765462875366211
    4. '_div' → logprob: -8.765462875366211
    5. ' div' → logprob: -8.890462875366211
    6. ' divisor' → logprob: -9.390462875366211
    7. ' Divider' → logprob: -10.640462875366211
    8. ' ' → logprob: -10.765462875366211
    9. '	div' → logprob: -11.640462875366211
    10. '<div' → logprob: -12.265462875366211

Token 129: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.4463205635547638
    2. 'is' → logprob: -1.4463205337524414
    3. 'iseur' → logprob: -2.1963205337524414
    4. 'iser' → logprob: -4.946320533752441
    5. 'ise' → logprob: -5.946320533752441
    6. 'i' → logprob: -7.196320533752441
    7. '```' → logprob: -7.571320533752441
    8. 'iso' → logprob: -8.071320533752441
    9. 'isible' → logprob: -8.071320533752441
    10. 'isé' → logprob: -8.696320533752441

Token 130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012997271493077278
    2. ' )' → logprob: -5.012997150421143
    3. ',' → logprob: -6.137997150421143
    4. '):' → logprob: -6.387997150421143
    5. '   ' → logprob: -6.637997150421143
    6. ' ' → logprob: -7.762997150421143
    7. ').' → logprob: -8.7629976272583
    8. '.' → logprob: -9.0129976272583
    9. '(' → logprob: -9.7629976272583
    10. ':' → logprob: -10.2629976272583

Token 131: ' pour' (ID: 1930)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8299161791801453
    2. 'def' → logprob: -1.95491623878479
    3. '(' → logprob: -2.07991623878479
    4. ',' → logprob: -2.07991623878479
    5. '(x' → logprob: -2.20491623878479
    6. '   ' → logprob: -3.45491623878479
    7. ':' → logprob: -4.579916000366211
    8. '.' → logprob: -5.454916000366211
    9. ')' → logprob: -5.579916000366211
    10. ' ' → logprob: -5.829916000366211

Token 132: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.14248886704444885
    2. ' calcul' → logprob: -3.017488956451416
    3. ' return' → logprob: -3.392488956451416
    4. ' garantir' → logprob: -3.767488956451416
    5. ' retourner' → logprob: -4.767488956451416
    6. ' assurer' → logprob: -5.267488956451416
    7. '   ' → logprob: -5.642488956451416
    8. ' ' → logprob: -5.642488956451416
    9. ' déterminer' → logprob: -6.892488956451416
    10. ' revenir' → logprob: -7.392488956451416

Token 133: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.3710108995437622
    2. ' leur' → logprob: -1.4960108995437622
    3. ' l' → logprob: -1.7460108995437622
    4. ' ' → logprob: -1.8710108995437622
    5. 'leur' → logprob: -2.4960107803344727
    6. ' la' → logprob: -2.8710107803344727
    7. ' their' → logprob: -4.121010780334473
    8. ' leurs' → logprob: -5.371010780334473
    9. ' ' → logprob: -5.496010780334473
    10. ' the' → logprob: -5.621010780334473

Token 134: ' PPC' (ID: 94738)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.39083239436149597
    2. ''' → logprob: -1.8908324241638184
    3. ' ' → logprob: -3.1408324241638184
    4. '"' → logprob: -3.5158324241638184
    5. 'plus' → logprob: -4.390832424163818
    6. ' )' → logprob: -4.515832424163818
    7. ' "' → logprob: -4.640832424163818
    8. 'l' → logprob: -4.765832424163818
    9. ' ' → logprob: -4.890832424163818
    10. 'r' → logprob: -5.015832424163818

Token 135: 'M' (ID: 44)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.010294626466929913
    2. 'M' → logprob: -5.510294437408447
    3. 'O' → logprob: -5.635294437408447
    4. 'm' → logprob: -7.260294437408447
    5. 'i' → logprob: -7.385294437408447
    6. ' ' → logprob: -8.385294914245605
    7. 'def' → logprob: -8.635294914245605
    8. '   ' → logprob: -9.010294914245605
    9. '-' → logprob: -9.135294914245605
    10. 'o' → logprob: -9.510294914245605

Token 136: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11866433173418045
    2. '.' → logprob: -3.243664264678955
    3. ',' → logprob: -3.493664264678955
    4. ' ' → logprob: -4.118664264678955
    5. ':' → logprob: -4.618664264678955
    6. ')' → logprob: -5.743664264678955
    7. '  ' → logprob: -5.743664264678955
    8. 'def' → logprob: -6.243664264678955
    9. ' (' → logprob: -6.243664264678955
    10. '    ' → logprob: -6.993664264678955

Token 137: 'Least' (ID: 110186)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0480190515518188
    2. ' gcd' → logprob: -2.0480189323425293
    3. ' )' → logprob: -2.1730189323425293
    4. ' ' → logprob: -2.1730189323425293
    5. ' leur' → logprob: -2.7980189323425293
    6. ' le' → logprob: -2.9230189323425293
    7. '   ' → logprob: -3.1730189323425293
    8. 'leur' → logprob: -3.5480189323425293
    9. 'le' → logprob: -3.7980189323425293
    10. ' x' → logprob: -4.673018932342529

Token 138: ' Common' (ID: 14782)
  Prédit: ' common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' common' → logprob: -0.33883893489837646
    2. ' Common' → logprob: -1.7138389348983765
    3. 'Common' → logprob: -3.588839054107666
    4. ' ' → logprob: -3.588839054107666
    5. 'common' → logprob: -4.463839054107666
    6. '	Common' → logprob: -4.713839054107666
    7. '   ' → logprob: -4.963839054107666
    8. ' ' → logprob: -5.213839054107666
    9. '  ' → logprob: -5.213839054107666
    10. '	common' → logprob: -5.588839054107666

Token 139: ' Multiple' (ID: 39109)
  Prédit: 'Multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Multiple' → logprob: -0.3769712448120117
    2. ' multiple' → logprob: -1.6269712448120117
    3. ' Multiple' → logprob: -2.3769712448120117
    4. 'multiple' → logprob: -4.001971244812012
    5. 'Div' → logprob: -5.751971244812012
    6. 'div' → logprob: -6.751971244812012
    7. ' ' → logprob: -7.251971244812012
    8. 'Multip' → logprob: -8.126971244812012
    9. ' múlt' → logprob: -8.626971244812012
    10. ' divisor' → logprob: -8.626971244812012

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007050906307995319
    2. ').' → logprob: -5.25705099105835
    3. '):' → logprob: -7.13205099105835
    4. ' )' → logprob: -8.382050514221191
    5. ')
' → logprob: -8.507050514221191
    6. '   ' → logprob: -8.507050514221191
    7. '.' → logprob: -8.632050514221191
    8. 'def' → logprob: -9.882050514221191
    9. '):
' → logprob: -10.132050514221191
    10. ',' → logprob: -10.382050514221191

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.252016544342041
    2. ':' → logprob: -2.127016544342041
    3. ' :' → logprob: -2.627016544342041
    4. ' ' → logprob: -4.127016544342041
    5. ',' → logprob: -4.877016544342041
    6. '.' → logprob: -6.377016544342041
    7. '  ' → logprob: -6.502016544342041
    8. ' :
' → logprob: -7.252016544342041
    9. ')' → logprob: -7.377016544342041
    10. '    ' → logprob: -7.502016544342041

Token 142: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.29099249839782715
    2. 'return' → logprob: -1.5409924983978271
    3. '   ' → logprob: -3.915992498397827
    4. ' gcd' → logprob: -5.290992736816406
    5. ' (' → logprob: -5.415992736816406
    6. 'g' → logprob: -6.040992736816406
    7. ' ' → logprob: -6.165992736816406
    8. ' x' → logprob: -6.790992736816406
    9. '    
' → logprob: -7.290992736816406
    10. '    ' → logprob: -7.665992736816406

Token 143: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2886025905609131
    2. '    
' → logprob: -2.663602590560913
    3. ' return' → logprob: -2.788602590560913
    4. 'return' → logprob: -2.913602590560913
    5. '    ' → logprob: -3.663602590560913
    6. ' 
' → logprob: -4.163602828979492
    7. '   
' → logprob: -5.163602828979492
    8. '
' → logprob: -5.538602828979492
    9. ' ' → logprob: -5.788602828979492
    10. '  
' → logprob: -5.788602828979492

Token 144: ''op' (ID: 70747)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.34721291065216064
    2. '   ' → logprob: -1.8472129106521606
    3. 'e' → logprob: -2.972212791442871
    4. 'c' → logprob: -2.972212791442871
    5. ' return' → logprob: -4.347212791442871
    6. 'return' → logprob: -4.847212791442871
    7. ' cm' → logprob: -5.597212791442871
    8. 'm' → logprob: -6.972212791442871
    9. 'CM' → logprob: -7.097212791442871
    10. 'eturn' → logprob: -7.222212791442871

Token 145: 'ération' (ID: 24977)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.013330464251339436
    2. 'c' → logprob: -5.388330459594727
    3. '   ' → logprob: -6.013330459594727
    4. 'e' → logprob: -6.138330459594727
    5. 'CM' → logprob: -6.138330459594727
    6. ' cm' → logprob: -8.263330459594727
    7. 'p' → logprob: -8.388330459594727
    8. 'a' → logprob: -9.013330459594727
    9. 'es' → logprob: -9.013330459594727
    10. 'm' → logprob: -9.138330459594727

Token 146: ' //' (ID: 602)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5498605966567993
    2. '   ' → logprob: -1.7998605966567993
    3. ' return' → logprob: -3.0498604774475098
    4. ' =' → logprob: -3.4248604774475098
    5. 'result' → logprob: -3.4248604774475098
    6. '  ' → logprob: -3.7998604774475098
    7. '    ' → logprob: -3.7998604774475098
    8. ' result' → logprob: -3.7998604774475098
    9. ' '' → logprob: -4.54986047744751
    10. ' x' → logprob: -4.67486047744751

Token 147: ' effect' (ID: 3159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01942162774503231
    2. ' ' → logprob: -4.269421577453613
    3. ' =' → logprob: -6.144421577453613
    4. ' x' → logprob: -6.519421577453613
    5. ' (' → logprob: -7.769421577453613
    6. '<|end|>' → logprob: -8.144421577453613
    7. ' is' → logprob: -9.269421577453613
    8. ' y' → logprob: -9.269421577453613
    9. '=int' → logprob: -9.394421577453613
    10. 's' → logprob: -9.519421577453613

Token 148: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00010044389637187123
    2. 'u' → logprob: -9.625100135803223
    3. 'uer' → logprob: -11.500100135803223
    4. 'uent' → logprob: -12.125100135803223
    5. 'uée' → logprob: -12.625100135803223
    6. 'uez' → logprob: -12.875100135803223
    7. 'ué' → logprob: -12.875100135803223
    8. ' ue' → logprob: -13.250100135803223
    9. 'uie' → logprob: -13.375100135803223
    10. 'uera' → logprob: -13.375100135803223

Token 149: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.042623091489076614
    2. 'une' → logprob: -3.5426230430603027
    3. ' la' → logprob: -4.417623043060303
    4. 'division' → logprob: -8.417623519897461
    5. 'la' → logprob: -8.542623519897461
    6. ' ' → logprob: -9.292623519897461
    7. ''une' → logprob: -9.667623519897461
    8. 'div' → logprob: -10.042623519897461
    9. ' division' → logprob: -10.167623519897461
    10. 'a' → logprob: -11.167623519897461

Token 150: ' division' (ID: 21629)
  Prédit: ' division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' division' → logprob: -0.3942738175392151
    2. 'division' → logprob: -1.1442737579345703
    3. 'div' → logprob: -5.01927375793457
    4. ' ' → logprob: -7.26927375793457
    5. '_div' → logprob: -10.51927375793457
    6. ' div' → logprob: -11.14427375793457
    7. ' división' → logprob: -11.89427375793457
    8. ' divis' → logprob: -12.14427375793457
    9. 'd' → logprob: -12.39427375793457
    10. ' divisão' → logprob: -12.51927375793457

Token 151: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.1645398586988449
    2. '<|end|>' → logprob: -3.0395398139953613
    3. ' ' → logprob: -3.4145398139953613
    4. 'inte' → logprob: -4.289539813995361
    5. 'int' → logprob: -4.789539813995361
    6. 'ent' → logprob: -4.914539813995361
    7. ' integer' → logprob: -4.914539813995361
    8. 'integer' → logprob: -5.539539813995361
    9. ' exacte' → logprob: -6.039539813995361
    10. ' de' → logprob: -6.039539813995361

Token 152: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07876177132129669
    2. '
' → logprob: -3.3287618160247803
    3. ' return' → logprob: -3.9537618160247803
    4. ' 
' → logprob: -4.953761577606201
    5. '    
' → logprob: -5.078761577606201
    6. 'return' → logprob: -5.453761577606201
    7. '  
' → logprob: -6.828761577606201
    8. '   
' → logprob: -7.328761577606201
    9. ' ' → logprob: -7.578761577606201
    10. '\n' → logprob: -8.07876205444336

Token 154: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.814909815788269
    2. 'return' (adapté à ' return') → logprob: -1.064909815788269
    3. '   ' → logprob: -1.564909815788269
    4. 'g' → logprob: -7.189909934997559
    5. '    
' → logprob: -7.189909934997559
    6. '
' → logprob: -7.314909934997559
    7. ' gcd' → logprob: -7.939909934997559
    8. '	return' → logprob: -8.689909934997559
    9. '    ' → logprob: -8.689909934997559
    10. ' 
' → logprob: -9.064909934997559

Token 155: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.439166396856308
    2. '(x' → logprob: -1.9391664266586304
    3. ' x' → logprob: -2.189166307449341
    4. 'x' → logprob: -2.314166307449341
    5. ' ' → logprob: -7.81416654586792
    6. '	x' → logprob: -9.189166069030762
    7. '   ' → logprob: -9.314166069030762
    8. '(' → logprob: -9.439166069030762
    9. '  ' → logprob: -10.189166069030762
    10. ' ' → logprob: -11.314166069030762

Token 156: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002036595979006961
    2. ' x' → logprob: -8.500204086303711
    3. '(x' → logprob: -16.62520408630371
    4. '   ' → logprob: -16.87520408630371
    5. '	x' → logprob: -17.50020408630371
    6. ' ' → logprob: -19.25020408630371
    7. '  ' → logprob: -20.75020408630371
    8. ')x' → logprob: -21.37520408630371
    9. '    ' → logprob: -21.62520408630371
    10. 'abs' → logprob: -21.75020408630371

Token 157: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0056263236328959465
    2. '*' → logprob: -5.255626201629639
    3. ' ' → logprob: -8.005626678466797
    4. '*y' → logprob: -9.755626678466797
    5. ' ' → logprob: -14.755626678466797
    6. ' **' → logprob: -16.130626678466797
    7. ' //' → logprob: -16.255626678466797
    8. '   ' → logprob: -16.505626678466797
    9. ' y' → logprob: -16.505626678466797
    10. '  ' → logprob: -16.630626678466797

Token 158: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759463906288147
    2. 'y' → logprob: -0.8259463906288147
    3. ' ' → logprob: -12.575946807861328
    4. '	y' → logprob: -13.700946807861328
    5. '(y' → logprob: -13.950946807861328
    6. ' (' → logprob: -14.700946807861328
    7. ' ' → logprob: -15.075946807861328
    8. '  ' → logprob: -15.575946807861328
    9. ''y' → logprob: -15.950946807861328
    10. '   ' → logprob: -16.388446807861328

Token 159: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005152992904186249
    2. ' )' → logprob: -5.380153179168701
    3. ')//' → logprob: -7.630153179168701
    4. ' //' → logprob: -10.255152702331543
    5. '//' → logprob: -11.380152702331543
    6. ' ' → logprob: -15.630152702331543
    7. '   ' → logprob: -16.88015365600586
    8. '）' → logprob: -17.25515365600586
    9. ' ' → logprob: -17.63015365600586
    10. '	' → logprob: -18.13015365600586

Token 160: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.002388495020568371
    2. '//' → logprob: -6.1273884773254395
    3. ' ' → logprob: -8.627388954162598
    4. '   ' → logprob: -11.752388954162598
    5. ' ' → logprob: -12.127388954162598
    6. ' //
' → logprob: -12.252388954162598
    7. '  ' → logprob: -13.877388954162598
    8. ')' → logprob: -14.127388954162598
    9. ' /' → logprob: -14.252388954162598
    10. ')//' → logprob: -14.627388954162598

Token 161: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0036446149460971355
    2. ' gcd' → logprob: -5.6286444664001465
    3. 'math' → logprob: -10.378644943237305
    4. '	g' → logprob: -12.503644943237305
    5. ' ' → logprob: -13.128644943237305
    6. ' g' → logprob: -13.253644943237305
    7. ' math' → logprob: -13.503644943237305
    8. '   ' → logprob: -13.753644943237305
    9. '(g' → logprob: -13.878644943237305
    10. '_g' → logprob: -14.128644943237305

Token 162: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931807994842529
    2. '(x' → logprob: -0.6931807994842529
    3. ' (' → logprob: -10.568181037902832
    4. '(
' → logprob: -11.818181037902832
    5. '((' → logprob: -15.693181037902832
    6. '(y' → logprob: -16.068180084228516
    7. '(

' → logprob: -16.193180084228516
    8. '(
' → logprob: -16.818180084228516
    9. '(X' → logprob: -17.193180084228516
    10. ' ' → logprob: -17.818180084228516

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006097062025219202
    2. ' ,' → logprob: -5.131096839904785
    3. ',y' → logprob: -8.756096839904785
    4. ')' → logprob: -12.131096839904785
    5. 'y' → logprob: -12.881096839904785
    6. ',
' → logprob: -13.756096839904785
    7. ' y' → logprob: -14.006096839904785
    8. ' ' → logprob: -14.631096839904785
    9. ' )' → logprob: -15.881096839904785
    10. '),' → logprob: -16.0060977935791

Token 164: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011048408225178719
    2. ' y' → logprob: -4.511048316955566
    3. '	y' → logprob: -15.011048316955566
    4. ' ' → logprob: -16.511049270629883
    5. ')y' → logprob: -16.511049270629883
    6. ')' → logprob: -17.136049270629883
    7. '   ' → logprob: -17.886049270629883
    8. '    ' → logprob: -18.886049270629883
    9. '  ' → logprob: -19.511049270629883
    10. '(y' → logprob: -19.886049270629883

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -13.25000286102295
    3. ')
' → logprob: -14.12500286102295
    4. ')return' → logprob: -18.750001907348633
    5. ')

' → logprob: -19.375001907348633
    6. ')#' → logprob: -19.375001907348633
    7. '))' → logprob: -19.875001907348633
    8. '()' → logprob: -20.000001907348633
    9. '<|end|>' → logprob: -20.125001907348633
    10. '())' → logprob: -20.375001907348633

Token 166: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23716041445732117
    2. '<|end|>' → logprob: -1.6121604442596436
    3. ' ' → logprob: -5.6121602058410645
    4. '

' → logprob: -6.3621602058410645
    5. '<|end|>' → logprob: -6.9871602058410645
    6. '' → logprob: -7.1121602058410645
    7. '.' → logprob: -7.2371602058410645
    8. '\' → logprob: -7.3621602058410645
    9. ' 
' → logprob: -7.6121602058410645
    10. ')' → logprob: -7.7371602058410645

Token 167: ' Dé' (ID: 27247)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016072244616225362
    2. '<|end|>' → logprob: -7.626607418060303
    3. ' 
' → logprob: -8.001606941223145
    4. '#' → logprob: -8.626606941223145
    5. '.' → logprob: -9.126606941223145
    6. 'import' → logprob: -9.501606941223145
    7. ',' → logprob: -9.626606941223145
    8. '
' → logprob: -9.876606941223145
    9. ':' → logprob: -9.876606941223145
    10. 'from' → logprob: -10.251606941223145

Token 168: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01217418722808361
    2. 'fi' → logprob: -4.512174129486084
    3. 'fin' → logprob: -6.887174129486084
    4. 'fine' → logprob: -9.762174606323242
    5. 'def' → logprob: -11.512174606323242
    6. 'fe' → logprob: -12.262174606323242
    7. 'fa' → logprob: -12.512174606323242
    8. 'fé' → logprob: -12.887174606323242
    9. '#' → logprob: -12.887174606323242
    10. 'fl' → logprob: -13.012174606323242

Token 169: 'ition' (ID: 868)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -1.1674507856369019
    2. 'inition' → logprob: -1.1674507856369019
    3. ' l' → logprob: -1.7924507856369019
    4. 'f' → logprob: -2.2924509048461914
    5. ' ' → logprob: -3.4174509048461914
    6. ' def' → logprob: -4.042450904846191
    7. 'def' → logprob: -4.042450904846191
    8. ' function' → logprob: -4.792450904846191
    9. '<|end|>' → logprob: -4.917450904846191
    10. ' a' → logprob: -5.042450904846191

Token 170: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026771502569317818
    2. ' def' → logprob: -4.026771545410156
    3. ' d' → logprob: -5.151771545410156
    4. ' (' → logprob: -7.276771545410156
    5. 'def' → logprob: -7.526771545410156
    6. ' of' → logprob: -8.151771545410156
    7. ' de' → logprob: -8.276771545410156
    8. '  ' → logprob: -8.526771545410156
    9. '_' → logprob: -8.651771545410156
    10. ' a' → logprob: -9.401771545410156

Token 171: ''une' (ID: 13337)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7570013403892517
    2. '_' → logprob: -0.8820013403892517
    3. 'a' → logprob: -2.8820013999938965
    4. ' a' → logprob: -3.6320013999938965
    5. 'u' → logprob: -4.5070013999938965
    6. 'e' → logprob: -5.1320013999938965
    7. ' un' → logprob: -5.5070013999938965
    8. '  ' → logprob: -6.1320013999938965
    9. ' une' → logprob: -6.5070013999938965
    10. ' ' → logprob: -6.6320013999938965

Token 172: ' fonction' (ID: 17610)
  Prédit: ' function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.9983553290367126
    2. 'def' → logprob: -1.1233553886413574
    3. ' def' → logprob: -1.6233553886413574
    4. 'fonction' → logprob: -2.7483553886413574
    5. ' fonction' → logprob: -4.123355388641357
    6. 'function' → logprob: -4.748355388641357
    7. 'n' → logprob: -5.748355388641357
    8. 'f' → logprob: -5.873355388641357
    9. ' ' → logprob: -6.248355388641357
    10. ':' → logprob: -6.498355388641357

Token 173: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0094499588012695
    2. 'def' → logprob: -1.0094499588012695
    3. ' def' → logprob: -1.7594499588012695
    4. ' for' → logprob: -3.2594499588012695
    5. ' (' → logprob: -4.1344499588012695
    6. '(x' → logprob: -4.2594499588012695
    7. '_' → logprob: -4.8844499588012695
    8. '_l' → logprob: -5.8844499588012695
    9. ' pour' → logprob: -6.0094499588012695
    10. ' l' → logprob: -6.2594499588012695

Token 174: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.5919881463050842
    2. ' l' → logprob: -0.8419881463050842
    3. 'l' → logprob: -5.5919880867004395
    4. 'calcul' → logprob: -5.5919880867004395
    5. ' calculate' → logprob: -6.0919880867004395
    6. ' calc' → logprob: -6.0919880867004395
    7. ' calcular' → logprob: -6.3419880867004395
    8. ' calcula' → logprob: -7.9669880867004395
    9. ' ' → logprob: -8.216988563537598
    10. 'cal' → logprob: -8.841988563537598

Token 175: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.005301704630255699
    2. 'uler' → logprob: -5.880301475524902
    3. 'def' → logprob: -6.505301475524902
    4. 'aler' → logprob: -8.755301475524902
    5. 'rer' → logprob: -9.005301475524902
    6. 'al' → logprob: -9.255301475524902
    7. 'user' → logprob: -9.380301475524902
    8. 'ler' → logprob: -9.880301475524902
    9. 'iner' → logprob: -10.005301475524902
    10. 'ayer' → logprob: -10.005301475524902

Token 176: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.602948009967804
    2. ' l' → logprob: -1.2279479503631592
    3. ' la' → logprob: -2.352947950363159
    4. 'l' → logprob: -3.727947950363159
    5. ' ' → logprob: -3.977947950363159
    6. ' the' → logprob: -4.352948188781738
    7. ' (' → logprob: -5.977948188781738
    8. 'le' → logprob: -6.602948188781738
    9. '(' → logprob: -6.852948188781738
    10. '(x' → logprob: -6.977948188781738

Token 177: ' PPC' (ID: 94738)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.9664345979690552
    2. 'pp' → logprob: -1.4664345979690552
    3. ' plus' → logprob: -1.7164345979690552
    4. ' PPC' → logprob: -2.7164344787597656
    5. 'plus' → logprob: -3.3414344787597656
    6. 'P' → logprob: -3.7164344787597656
    7. ' pg' → logprob: -3.9664344787597656
    8. '_pp' → logprob: -4.591434478759766
    9. ' pp' → logprob: -4.591434478759766
    10. ' l' → logprob: -5.028934478759766

Token 178: 'M' (ID: 44)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.22637754678726196
    2. 'M' → logprob: -1.6013774871826172
    3. 'cm' → logprob: -7.351377487182617
    4. 'sm' → logprob: -9.601377487182617
    5. ' M' → logprob: -9.976377487182617
    6. 'def' → logprob: -10.101377487182617
    7. '_m' → logprob: -10.351377487182617
    8. 'c' → logprob: -10.726377487182617
    9. 'CM' → logprob: -10.726377487182617
    10. 's' → logprob: -10.851377487182617

Token 179: ' de' (ID: 334)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5098820924758911
    2. '(' → logprob: -2.2598819732666016
    3. ' de' → logprob: -2.3848819732666016
    4. '<|end|>' → logprob: -2.5098819732666016
    5. ' des' → logprob: -2.6348819732666016
    6. ' of' → logprob: -4.134881973266602
    7. '_' → logprob: -5.259881973266602
    8. '_des' → logprob: -5.509881973266602
    9. ' d' → logprob: -5.884881973266602
    10. '_multiple' → logprob: -6.009881973266602

Token 180: ' plusieurs' (ID: 20875)
  Prédit: ' multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -1.3406342267990112
    2. ' plusieurs' → logprob: -2.340634346008301
    3. ' plus' → logprob: -2.465634346008301
    4. ' trois' → logprob: -2.465634346008301
    5. ' deux' → logprob: -2.965634346008301
    6. ' ' → logprob: -3.340634346008301
    7. ' liste' → logprob: -3.340634346008301
    8. ' n' → logprob: -3.465634346008301
    9. ' une' → logprob: -3.590634346008301
    10. 'l' → logprob: -3.840634346008301

Token 181: ' ent' (ID: 1121)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.1096612215042114
    2. '<|end|>' → logprob: -1.7346612215042114
    3. ' integers' → logprob: -1.9846612215042114
    4. ' nombres' → logprob: -1.9846612215042114
    5. ' ' → logprob: -2.984661102294922
    6. '(numbers' → logprob: -3.484661102294922
    7. 'numbers' → logprob: -3.734661102294922
    8. ' lists' → logprob: -3.734661102294922
    9. ' listes' → logprob: -3.734661102294922
    10. ' espaces' → logprob: -4.859661102294922

Token 182: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1804777830839157
    2. 'iers' → logprob: -2.0554778575897217
    3. 'éments' → logprob: -4.680477619171143
    4. 'é' → logprob: -5.180477619171143
    5. 'ités' → logprob: -5.680477619171143
    6. 'ements' → logprob: -6.055477619171143
    7. 'er' → logprob: -6.305477619171143
    8. 'érents' → logprob: -6.430477619171143
    9. 'etés' → logprob: -6.430477619171143
    10. 'ers' → logprob: -6.680477619171143

Token 183: ' stock' (ID: 6546)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2429768294095993
    2. '(x' → logprob: -2.4929769039154053
    3. '(*' → logprob: -2.8679769039154053
    4. ' (' → logprob: -3.4929769039154053
    5. '(' → logprob: -4.492976665496826
    6. ' def' → logprob: -4.867976665496826
    7. '(n' → logprob: -5.117976665496826
    8. '(numbers' → logprob: -5.117976665496826
    9. '(lst' → logprob: -5.742976665496826
    10. ' des' → logprob: -6.117976665496826

Token 184: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.026837775483727455
    2. 'é' → logprob: -4.2768378257751465
    3. ' dans' → logprob: -5.0268378257751465
    4. 'dans' → logprob: -5.6518378257751465
    5. 'ées' → logprob: -6.9018378257751465
    6. 'ée' → logprob: -7.4018378257751465
    7. 'es' → logprob: -8.026837348937988
    8. 'e' → logprob: -8.901837348937988
    9. 'ed' → logprob: -9.026837348937988
    10. 's' → logprob: -9.151837348937988

Token 185: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.5259429812431335
    2. ' dans' → logprob: -1.0259430408477783
    3. ' in' → logprob: -3.1509430408477783
    4. 'in' → logprob: -5.400942802429199
    5. 's' → logprob: -6.650942802429199
    6. ' ' → logprob: -7.525942802429199
    7. 'Dans' → logprob: -8.0259428024292
    8. 'import' → logprob: -8.2759428024292
    9. '[]' → logprob: -9.2759428024292
    10. ' en' → logprob: -9.2759428024292

Token 186: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.06478692591190338
    2. 'une' → logprob: -3.314786911010742
    3. ' un' → logprob: -4.064786911010742
    4. ' la' → logprob: -5.689786911010742
    5. ' a' → logprob: -6.064786911010742
    6. 'un' → logprob: -6.939786911010742
    7. ' liste' → logprob: -7.064786911010742
    8. 'a' → logprob: -7.564786911010742
    9. ' lst' → logprob: -8.314786911010742
    10. 'liste' → logprob: -8.564786911010742

Token 187: ' it' (ID: 480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4988996982574463
    2. ' liste' → logprob: -2.1238996982574463
    3. 'a' → logprob: -2.6238996982574463
    4. ' iterable' → logprob: -2.6238996982574463
    5. 'liste' → logprob: -3.1238996982574463
    6. 'list' → logprob: -3.6238996982574463
    7. ' list' → logprob: -3.7488996982574463
    8. 'lst' → logprob: -4.498899459838867
    9. ' tableau' → logprob: -5.248899459838867
    10. 'iter' → logprob: -5.748899459838867

Token 188: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.08663111925125122
    2. 'ér' → logprob: -3.0866310596466064
    3. 'érateur' → logprob: -3.3366310596466064
    4. 'ertools' → logprob: -7.2116312980651855
    5. '_' → logprob: -8.711630821228027
    6. 'e' → logprob: -8.836630821228027
    7. 'érant' → logprob: -9.461630821228027
    8. 'érer' → logprob: -9.711630821228027
    9. 'éra' → logprob: -9.836630821228027
    10. 'erm' → logprob: -9.836630821228027

Token 189: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -8.244413766078651e-05
    2. 'abl' → logprob: -9.750082015991211
    3. 'ab' → logprob: -11.125082015991211
    4. 'er' → logprob: -12.625082015991211
    5. 'a' → logprob: -13.625082015991211
    6. 'ateur' → logprob: -13.625082015991211
    7. 'ables' → logprob: -14.250082015991211
    8. '   ' → logprob: -15.000082015991211
    9. 'abler' → logprob: -15.125082015991211
    10. 'abla' → logprob: -15.125082015991211

Token 190: ' appelé' (ID: 101427)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17350180447101593
    2. ' (' → logprob: -2.29850172996521
    3. '(iter' → logprob: -3.92350172996521
    4. '(numbers' → logprob: -4.673501968383789
    5. ' def' → logprob: -4.923501968383789
    6. '(' → logprob: -5.173501968383789
    7. '(def' → logprob: -5.923501968383789
    8. '(n' → logprob: -5.923501968383789
    9. '(elements' → logprob: -6.173501968383789
    10. '(items' → logprob: -6.923501968383789

Token 191: ' '' (ID: 461)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5256342887878418
    2. ' numbers' → logprob: -1.0256342887878418
    3. 'nums' → logprob: -3.400634288787842
    4. ' nums' → logprob: -5.150634288787842
    5. 'values' → logprob: -6.025634288787842
    6. 'n' → logprob: -6.775634288787842
    7. 'num' → logprob: -6.900634288787842
    8. '"' → logprob: -7.025634288787842
    9. ' iterable' → logprob: -7.025634288787842
    10. 'iter' → logprob: -7.150634288787842

Token 192: 'numbers' (ID: 85055)
  Prédit: 'numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.07058738172054291
    2. 'nums' → logprob: -3.445587396621704
    3. 'values' → logprob: -4.195587158203125
    4. 'iter' → logprob: -5.445587158203125
    5. 'args' → logprob: -5.570587158203125
    6. ' numbers' → logprob: -5.695587158203125
    7. 'n' → logprob: -5.820587158203125
    8. 'lst' → logprob: -6.070587158203125
    9. 'arr' → logprob: -6.945587158203125
    10. 'num' → logprob: -7.320587158203125

Token 193: ''.
' (ID: 49980)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0013277530670166
    2. ')' → logprob: -1.1263277530670166
    3. ''):' → logprob: -1.7513277530670166
    4. ''):
' → logprob: -3.0013277530670166
    5. '')' → logprob: -3.1263277530670166
    6. '):
' → logprob: -4.0013275146484375
    7. ')'' → logprob: -4.5013275146484375
    8. ''' → logprob: -5.6263275146484375
    9. ')':' → logprob: -5.8763275146484375
    10. 'def' → logprob: -6.0013275146484375

Token 194: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1648295372724533
    2. '
' → logprob: -1.9148294925689697
    3. ' def' → logprob: -5.414829730987549
    4. ' 
' → logprob: -9.53982925415039
    5. 'import' → logprob: -10.03982925415039
    6. 'from' → logprob: -10.91482925415039
    7. '

' → logprob: -13.16482925415039
    8. '
' → logprob: -13.28982925415039
    9. '```' → logprob: -13.41482925415039
    10. '  
' → logprob: -13.66482925415039

Token 195: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.20228758454322815
    2. 'l' → logprob: -1.7022875547409058
    3. 'p' → logprob: -8.452287673950195
    4. 'pp' → logprob: -9.077287673950195
    5. 'lc' → logprob: -9.077287673950195
    6. ' p' → logprob: -9.452287673950195
    7. ' calculate' → logprob: -9.452287673950195
    8. ' compute' → logprob: -10.077287673950195
    9. 'calculate' → logprob: -10.577287673950195
    10. ' lc' → logprob: -10.577287673950195

Token 196: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -8.061054359131958e-06
    2. 'c' → logprob: -12.500007629394531
    3. 'cms' → logprob: -12.875007629394531
    4. 'cmd' → logprob: -14.500007629394531
    5. 'm' → logprob: -14.750007629394531
    6. 'cmb' → logprob: -15.500007629394531
    7. 'l' → logprob: -16.37500762939453
    8. 'CM' → logprob: -16.50000762939453
    9. '   ' → logprob: -16.62500762939453
    10. 'ist' → logprob: -17.00000762939453

Token 197: '(numbers' (ID: 98592)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.0035438821651041508
    2. '_' → logprob: -6.378543853759766
    3. '(numbers' → logprob: -6.753543853759766
    4. '_(' → logprob: -7.503543853759766
    5. '_numbers' → logprob: -10.753543853759766
    6. '(' → logprob: -11.003543853759766
    7. '_multiple' → logprob: -11.378543853759766
    8. '_basic' → logprob: -11.503543853759766
    9. '_bas' → logprob: -11.503543853759766
    10. '_list' → logprob: -11.628543853759766

Token 198: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0031123533844947815
    2. ' ):' → logprob: -6.378112316131592
    3. ')' → logprob: -7.003112316131592
    4. '):
' → logprob: -7.628112316131592
    5. '):
' → logprob: -12.25311279296875
    6. ' )' → logprob: -12.62811279296875
    7. ':' → logprob: -13.25311279296875
    8. ' ):
' → logprob: -13.87811279296875
    9. '   ' → logprob: -14.00311279296875
    10. ')：' → logprob: -14.75311279296875

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15004636347293854
    2. ':' → logprob: -2.1500463485717773
    3. ' ' → logprob: -4.900046348571777
    4. ' :' → logprob: -6.025046348571777
    5. 'n' → logprob: -6.150046348571777
    6. '    
' → logprob: -6.275046348571777
    7. '
' → logprob: -6.775046348571777
    8. ' n' → logprob: -7.025046348571777
    9. ':
' → logprob: -7.150046348571777
    10. '(n' → logprob: -7.150046348571777

Token 200: ' t' (ID: 260)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.939314067363739
    2. 'from' → logprob: -1.5643141269683838
    3. ' result' → logprob: -1.6893141269683838
    4. '   ' → logprob: -2.064314126968384
    5. ' from' → logprob: -3.064314126968384
    6. 'res' → logprob: -4.064313888549805
    7. 'l' → logprob: -4.189313888549805
    8. ' res' → logprob: -5.189313888549805
    9. ' l' → logprob: -6.564313888549805
    10. 'return' → logprob: -7.189313888549805

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.7637327909469604
    2. ' from' → logprob: -1.7637327909469604
    3. '=' → logprob: -2.01373291015625
    4. 'from' → logprob: -2.01373291015625
    5. '   ' → logprob: -2.26373291015625
    6. ':' → logprob: -2.38873291015625
    7. 'otal' → logprob: -3.26373291015625
    8. '_' → logprob: -3.38873291015625
    9. 'arget' → logprob: -3.76373291015625
    10. 'mp' → logprob: -3.76373291015625

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021877337712794542
    2. ' ' → logprob: -6.127187728881836
    3. 'numbers' → logprob: -14.002187728881836
    4. '   ' → logprob: -15.002187728881836
    5. 'None' → logprob: -15.127187728881836
    6. '  ' → logprob: -15.502187728881836
    7. '0' → logprob: -15.877187728881836
    8. ' None' → logprob: -16.002187728881836
    9. 'next' → logprob: -16.127187728881836
    10. 'list' → logprob: -16.189687728881836

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. 'numbers' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.625001907348633
    4. 'list' → logprob: -16.750001907348633
    5. 'None' → logprob: -17.000001907348633
    6. '0' → logprob: -17.125001907348633
    7. '   ' → logprob: -18.125001907348633
    8. 'next' → logprob: -18.875001907348633
    9. 'iter' → logprob: -19.250001907348633
    10. '```' → logprob: -19.625001907348633

Token 204: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0020818589255213737
    2. '
' → logprob: -6.627081871032715
    3. ' for' → logprob: -8.252081871032715
    4. 'for' → logprob: -8.252081871032715
    5. ' 
' → logprob: -9.002081871032715
    6. '    
' → logprob: -10.002081871032715
    7. '' → logprob: -11.002081871032715
    8. '  
' → logprob: -11.002081871032715
    9. ' ' → logprob: -11.627081871032715
    10. '   
' → logprob: -12.127081871032715

Token 205: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38810306787490845
    2. 'for' → logprob: -1.1381030082702637
    3. ' for' → logprob: -7.388103008270264
    4. '    
' → logprob: -8.138103485107422
    5. ' 
' → logprob: -8.513103485107422
    6. '   ' → logprob: -10.013103485107422
    7. '
' → logprob: -10.263103485107422
    8. '  
' → logprob: -11.638103485107422
    9. '   
' → logprob: -11.638103485107422
    10. 'from' → logprob: -11.888103485107422

Token 206: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5827482342720032
    2. ' for' → logprob: -0.8327482342720032
    3. ' ' → logprob: -5.0827484130859375
    4. 'from' → logprob: -8.457748413085938
    5. '    
' → logprob: -9.457748413085938
    6. '   ' → logprob: -9.832748413085938
    7. 'r' → logprob: -10.082748413085938
    8. ' from' → logprob: -10.082748413085938
    9. 'or' → logprob: -10.707748413085938
    10. '_' → logprob: -10.832748413085938

Token 207: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5504996180534363
    2. '1' → logprob: -0.9254996180534363
    3. 't' → logprob: -3.800499677658081
    4. '    ' → logprob: -6.425499439239502
    5. '0' → logprob: -7.050499439239502
    6. '  ' → logprob: -7.175499439239502
    7. '   ' → logprob: -7.675499439239502
    8. ' t' → logprob: -8.17549991607666
    9. ' for' → logprob: -9.30049991607666
    10. '_' → logprob: -9.80049991607666

Token 208: ' valeur' (ID: 41664)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38441088795661926
    2. 'result' → logprob: -1.2594108581542969
    3. 'for' → logprob: -4.759410858154297
    4. '1' → logprob: -4.884410858154297
    5. ' result' → logprob: -5.259410858154297
    6. 'import' → logprob: -5.634410858154297
    7. ' t' → logprob: -6.259410858154297
    8. ' ' → logprob: -6.634410858154297
    9. ' for' → logprob: -6.634410858154297
    10. 'total' → logprob: -7.384410858154297

Token 209: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5770015716552734
    2. '_' → logprob: -0.8270015716552734
    3. '=' → logprob: -8.702001571655273
    4. ' de' → logprob: -8.702001571655273
    5. ' _' → logprob: -8.952001571655273
    6. '  ' → logprob: -9.202001571655273
    7. ' =' → logprob: -9.577001571655273
    8. '<|end|>' → logprob: -10.202001571655273
    9. 't' → logprob: -10.702001571655273
    10. '_t' → logprob: -10.702001571655273

Token 210: ' PPC' (ID: 94738)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4051662683486938
    2. 'pp' → logprob: -1.4051662683486938
    3. 'result' → logprob: -1.5301662683486938
    4. 't' → logprob: -1.9051662683486938
    5. 'plus' → logprob: -2.4051661491394043
    6. 'p' → logprob: -4.405166149139404
    7. 'pg' → logprob: -4.530166149139404
    8. 'lc' → logprob: -4.780166149139404
    9. ' l' → logprob: -5.655166149139404
    10. ' result' → logprob: -5.905166149139404

Token 211: 'M' (ID: 44)
  Prédit: 'CM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CM' → logprob: -0.22721582651138306
    2. 'cm' → logprob: -1.7272157669067383
    3. 'C' → logprob: -4.852215766906738
    4. 'm' → logprob: -4.852215766906738
    5. 'M' → logprob: -5.727215766906738
    6. '   ' → logprob: -6.227215766906738
    7. ' CM' → logprob: -6.727215766906738
    8. 'c' → logprob: -7.477215766906738
    9. ' ' → logprob: -7.602215766906738
    10. '_cm' → logprob: -7.727215766906738

Token 212: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8487274646759033
    2. ' for' → logprob: -1.5987274646759033
    3. '    
' → logprob: -2.3487274646759033
    4. '   
' → logprob: -2.7237274646759033
    5. '  
' → logprob: -2.7237274646759033
    6. '
' → logprob: -3.2237274646759033
    7. ' 
' → logprob: -3.9737274646759033
    8. '<|end|>' → logprob: -4.223727226257324
    9. 'for' → logprob: -4.348727226257324
    10. '	
' → logprob: -4.348727226257324

Token 213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007669918239116669
    2. ' ' → logprob: -4.882669925689697
    3. 't' → logprob: -9.757669448852539
    4. ' t' → logprob: -12.882669448852539
    5. '   ' → logprob: -13.382669448852539
    6. ' ' → logprob: -14.132669448852539
    7. '  ' → logprob: -14.132669448852539
    8. 'l' → logprob: -16.32016944885254
    9. '```' → logprob: -16.50766944885254
    10. '`' → logprob: -16.94516944885254

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.255023956531659e-05
    2. 't' → logprob: -9.625072479248047
    3. ' ' → logprob: -12.000072479248047
    4. '```' → logprob: -16.875072479248047
    5. 'l' → logprob: -17.000072479248047
    6. ' t' → logprob: -17.125072479248047
    7. '  ' → logprob: -17.500072479248047
    8. '   ' → logprob: -17.625072479248047
    9. '`' → logprob: -17.750072479248047
    10. 'un' → logprob: -18.250072479248047

Token 215: ' au' (ID: 2791)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17425225675106049
    2. ' for' → logprob: -2.2992522716522217
    3. '    
' → logprob: -4.049252033233643
    4. '  
' → logprob: -4.674252033233643
    5. ' 
' → logprob: -4.799252033233643
    6. '   ' → logprob: -4.924252033233643
    7. '' → logprob: -5.174252033233643
    8. 'for' → logprob: -5.174252033233643
    9. '   
' → logprob: -5.674252033233643
    10. ' ' → logprob: -7.049252033233643

Token 216: ' début' (ID: 29589)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7555742263793945
    2. 'dé' → logprob: -1.1305742263793945
    3. ' départ' → logprob: -1.8805742263793945
    4. ' début' → logprob: -3.7555742263793945
    5. 'for' → logprob: -5.6305742263793945
    6. 'pr' → logprob: -5.7555742263793945
    7. 'p' → logprob: -5.7555742263793945
    8. 'depart' → logprob: -6.0055742263793945
    9. 'tour' → logprob: -6.8805742263793945
    10. '_d' → logprob: -6.8805742263793945

Token 217: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24769379198551178
    2. '    
' → logprob: -2.1226937770843506
    3. '   ' → logprob: -2.7476937770843506
    4. ' for' → logprob: -4.24769401550293
    5. 'for' → logprob: -4.87269401550293
    6. '   
' → logprob: -5.12269401550293
    7. '  
' → logprob: -5.62269401550293
    8. ' 
' → logprob: -6.24769401550293
    9. ' ' → logprob: -7.12269401550293
    10. '     
' → logprob: -7.99769401550293

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11647772789001465
    2. ' for' → logprob: -2.8664777278900146
    3. '
' → logprob: -3.3664777278900146
    4. '    
' → logprob: -4.366477966308594
    5. ' 
' → logprob: -6.116477966308594
    6. 'for' → logprob: -6.241477966308594
    7. '   
' → logprob: -7.491477966308594
    8. '  
' → logprob: -7.616477966308594
    9. ' ' → logprob: -8.366477966308594
    10. '  ' → logprob: -9.241477966308594

Token 219: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2892012596130371
    2. ' for' → logprob: -1.664201259613037
    3. '   ' → logprob: -2.789201259613037
    4. '	for' → logprob: -8.789201736450195
    5. '    
' → logprob: -9.539201736450195
    6. ' ' → logprob: -10.289201736450195
    7. '  ' → logprob: -11.039201736450195
    8. '
' → logprob: -11.039201736450195
    9. 'from' → logprob: -11.039201736450195
    10. ' 
' → logprob: -11.789201736450195

Token 220: ' n' (ID: 297)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5672382712364197
    2. 'number' → logprob: -1.8172383308410645
    3. 'num' → logprob: -2.4422383308410645
    4. ' n' → logprob: -2.5672383308410645
    5. ' num' → logprob: -2.8172383308410645
    6. 'n' → logprob: -3.0672383308410645
    7. ' ' → logprob: -7.9422383308410645
    8. '	n' → logprob: -11.817237854003906
    9. ' numb' → logprob: -12.067237854003906
    10. '	number' → logprob: -12.067237854003906

Token 221: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003433296224102378
    2. 'in' → logprob: -8.000343322753906
    3. ' ' → logprob: -12.125343322753906
    4. 's' → logprob: -13.750343322753906
    5. 'n' → logprob: -15.000343322753906
    6. '   ' → logprob: -15.250343322753906
    7. '  ' → logprob: -15.750343322753906
    8. '	in' → logprob: -16.250343322753906
    9. ' i' → logprob: -16.375343322753906
    10. 'er' → logprob: -16.750343322753906

Token 222: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.029752103611826897
    2. ' numbers' → logprob: -3.529752016067505
    3. 'umbers' → logprob: -13.779751777648926
    4. '(numbers' → logprob: -15.029751777648926
    5. ' ' → logprob: -15.279751777648926
    6. '   ' → logprob: -17.404752731323242
    7. '_numbers' → logprob: -17.529752731323242
    8. 'number' → logprob: -18.029752731323242
    9. '  ' → logprob: -18.654752731323242
    10. 'n' → logprob: -20.279752731323242

Token 223: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020768598187714815
    2. ':
' → logprob: -6.252076625823975
    3. ' :' → logprob: -9.502077102661133
    4. '   ' → logprob: -10.002077102661133
    5. ',' → logprob: -11.627077102661133
    6. '       ' → logprob: -11.752077102661133
    7. '):' → logprob: -12.627077102661133
    8. ' :
' → logprob: -12.752077102661133
    9. '=' → logprob: -13.377077102661133
    10. '):
' → logprob: -14.002077102661133

Token 224: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37028008699417114
    2. ' t' → logprob: -2.1202800273895264
    3. ' 
' → logprob: -2.1202800273895264
    4. 't' → logprob: -3.2452800273895264
    5. '
' → logprob: -4.1202802658081055
    6. ' ' → logprob: -5.1202802658081055
    7. '        
' → logprob: -5.6202802658081055
    8. '   ' → logprob: -6.8702802658081055
    9. '  
' → logprob: -6.9952802658081055
    10. '    
' → logprob: -7.1202802658081055

Token 225: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.513746976852417
    2. 't' → logprob: -1.013746976852417
    3. ' t' → logprob: -3.513746976852417
    4. '
' → logprob: -4.888747215270996
    5. '        
' → logprob: -8.013747215270996
    6. ' 
' → logprob: -8.138747215270996
    7. '   ' → logprob: -8.263747215270996
    8. 'n' → logprob: -8.638747215270996
    9. ' ' → logprob: -9.638747215270996
    10. '    
' → logprob: -9.888747215270996

Token 226: ' It' (ID: 1225)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5093929767608643
    2. ' t' → logprob: -1.2593929767608643
    3. '       ' → logprob: -2.8843929767608643
    4. '
' → logprob: -3.0093929767608643
    5. ' 
' → logprob: -5.384392738342285
    6. '   ' → logprob: -6.259392738342285
    7. ' ' → logprob: -6.384392738342285
    8. '        
' → logprob: -7.634392738342285
    9. '    
' → logprob: -8.134392738342285
    10. '<|end|>' → logprob: -8.509392738342285

Token 227: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.028980934992432594
    2. 'érer' → logprob: -3.7789809703826904
    3. 'ér' → logprob: -6.278980731964111
    4. '   ' → logprob: -6.403980731964111
    5. 'érez' → logprob: -7.028980731964111
    6. 'é' → logprob: -8.52898120880127
    7. '    ' → logprob: -8.52898120880127
    8. '       ' → logprob: -9.02898120880127
    9. 'ére' → logprob: -9.15398120880127
    10. 'ération' → logprob: -9.15398120880127

Token 228: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17769239842891693
    2. ' in' → logprob: -3.302692413330078
    3. '   ' → logprob: -3.302692413330078
    4. ' n' → logprob: -3.427692413330078
    5. '    ' → logprob: -4.302692413330078
    6. ':' → logprob: -4.302692413330078
    7. ' :' → logprob: -5.052692413330078
    8. ' over' → logprob: -5.177692413330078
    9. '  ' → logprob: -5.302692413330078
    10. ' dans' → logprob: -6.177692413330078

Token 229: ' travers' (ID: 26957)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2297425270080566
    2. ' numbers' → logprob: -1.4797425270080566
    3. 'numbers' → logprob: -1.9797425270080566
    4. 't' → logprob: -2.7297425270080566
    5. ' travers' → logprob: -2.7297425270080566
    6. ' ' → logprob: -2.9797425270080566
    7. 'l' → logprob: -3.4797425270080566
    8. ' la' → logprob: -3.6047425270080566
    9. 'range' → logprob: -3.8547425270080566
    10. ')' → logprob: -4.354742527008057

Token 230: ' chaque' (ID: 21194)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.04293786734342575
    2. 'numbers' → logprob: -3.542937755584717
    3. ' n' → logprob: -4.542937755584717
    4. 'n' → logprob: -6.167937755584717
    5. ' ' → logprob: -8.417938232421875
    6. '   ' → logprob: -9.792938232421875
    7. '(numbers' → logprob: -10.167938232421875
    8. '    ' → logprob: -11.417938232421875
    9. ' the' → logprob: -11.417938232421875
    10. '	n' → logprob: -12.042938232421875

Token 231: ' élément' (ID: 99627)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16829371452331543
    2. 'n' → logprob: -2.4182937145233154
    3. ' ' → logprob: -2.7932937145233154
    4. ' number' → logprob: -6.2932939529418945
    5. 'number' → logprob: -7.2932939529418945
    6. 'element' → logprob: -8.293293952941895
    7. ' ,' → logprob: -8.543293952941895
    8. ' nombre' → logprob: -8.543293952941895
    9. ' numéro' → logprob: -8.668293952941895
    10. ' ' → logprob: -8.793293952941895

Token 232: ' '' (ID: 461)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3532073497772217
    2. ' :' → logprob: -1.7282073497772217
    3. '   ' → logprob: -2.6032073497772217
    4. '       ' → logprob: -3.6032073497772217
    5. '    ' → logprob: -5.603207588195801
    6. ' t' → logprob: -5.728207588195801
    7. ' in' → logprob: -5.978207588195801
    8. 't' → logprob: -6.103207588195801
    9. ',' → logprob: -6.228207588195801
    10. ' ' → logprob: -6.353207588195801

Token 233: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6281909942626953
    2. 'numbers' → logprob: -1.6281909942626953
    3. ' numbers' → logprob: -2.0031909942626953
    4. ' n' → logprob: -2.0031909942626953
    5. '(numbers' → logprob: -8.503190994262695
    6. ' ' → logprob: -9.753190994262695
    7. '	n' → logprob: -10.628190994262695
    8. '   ' → logprob: -10.878190994262695
    9. 'number' → logprob: -11.253190994262695
    10. '_numbers' → logprob: -12.503190994262695

Token 234: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1076844111084938
    2. ''' → logprob: -3.232684373855591
    3. '   ' → logprob: -3.857684373855591
    4. ')' → logprob: -3.857684373855591
    5. ' dans' → logprob: -5.23268461227417
    6. ':' → logprob: -5.48268461227417
    7. ' '' → logprob: -6.23268461227417
    8. 'in' → logprob: -6.23268461227417
    9. ' :' → logprob: -6.48268461227417
    10. ' )' → logprob: -6.85768461227417

Token 235: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008066733367741108
    2. ' :' → logprob: -5.258066654205322
    3. '   ' → logprob: -6.758066654205322
    4. '       ' → logprob: -6.883066654205322
    5. ':
' → logprob: -8.25806713104248
    6. ' in' → logprob: -8.63306713104248
    7. ',' → logprob: -8.88306713104248
    8. '    ' → logprob: -10.88306713104248
    9. '  ' → logprob: -11.75806713104248
    10. '.' → logprob: -11.75806713104248

Token 236: ' la' (ID: 557)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.1269538253545761
    2. 'numbers' → logprob: -2.1269538402557373
    3. '(numbers' → logprob: -11.876954078674316
    4. ' the' → logprob: -11.876954078674316
    5. ' ' → logprob: -12.001954078674316
    6. 'n' → logprob: -12.626954078674316
    7. '_numbers' → logprob: -14.876954078674316
    8. 'umbers' → logprob: -14.876954078674316
    9. ' n' → logprob: -15.126954078674316
    10. '   ' → logprob: -15.251954078674316

Token 237: ' liste' (ID: 31719)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.6339521408081055
    2. ' numbers' → logprob: -0.7589521408081055
    3. '(numbers' → logprob: -7.6339521408081055
    4. ' list' → logprob: -8.133952140808105
    5. ' ' → logprob: -8.383952140808105
    6. ' iterable' → logprob: -8.508952140808105
    7. 'n' → logprob: -10.133952140808105
    8. 'list' → logprob: -10.508952140808105
    9. ' sequence' → logprob: -11.133952140808105
    10. 'umbers' → logprob: -11.508952140808105

Token 238: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.549477219581604
    2. ':' → logprob: -0.924477219581604
    3. ' :' → logprob: -4.2994771003723145
    4. ',' → logprob: -5.0494771003723145
    5. ' ,' → logprob: -5.9244771003723145
    6. '.' → logprob: -7.0494771003723145
    7. ' or' → logprob: -7.1744771003723145
    8. '    ' → logprob: -8.174477577209473
    9. '       ' → logprob: -8.174477577209473
    10. '  ' → logprob: -8.174477577209473

Token 239: 'numbers' (ID: 85055)
  Prédit: 'numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.19072504341602325
    2. ' numbers' → logprob: -1.8157250881195068
    3. 'n' → logprob: -4.565724849700928
    4. ' n' → logprob: -7.815724849700928
    5. '(numbers' → logprob: -10.315725326538086
    6. ' ' → logprob: -10.315725326538086
    7. '_numbers' → logprob: -11.190725326538086
    8. '   ' → logprob: -11.315725326538086
    9. ')' → logprob: -12.065725326538086
    10. 'umbers' → logprob: -12.440725326538086

Token 240: ''.
' (ID: 49980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09339316189289093
    2. '):' → logprob: -2.968393087387085
    3. '   ' → logprob: -4.093393325805664
    4. ' :' → logprob: -4.843393325805664
    5. ':
' → logprob: -5.468393325805664
    6. '       ' → logprob: -5.718393325805664
    7. '):
' → logprob: -6.093393325805664
    8. ')' → logprob: -6.218393325805664
    9. ',' → logprob: -7.718393325805664
    10. ' ):' → logprob: -7.843393325805664

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03184561803936958
    2. '        
' → logprob: -4.031845569610596
    3. ' ' → logprob: -5.531845569610596
    4. ' 
' → logprob: -5.906845569610596
    5. 't' → logprob: -6.281845569610596
    6. '   ' → logprob: -7.281845569610596
    7. '    ' → logprob: -7.281845569610596
    8. 'n' → logprob: -7.531845569610596
    9. '    
' → logprob: -7.656845569610596
    10. '       
' → logprob: -8.031846046447754

Token 242: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.2889091968536377
    2. ' t' → logprob: -1.7889091968536377
    3. '       ' → logprob: -2.5389091968536377
    4. ' 
' → logprob: -5.913908958435059
    5. '        
' → logprob: -6.788908958435059
    6. '
' → logprob: -7.288908958435059
    7. ' ' → logprob: -8.913908958435059
    8. '   ' → logprob: -10.038908958435059
    9. '_t' → logprob: -10.038908958435059
    10. 'n' → logprob: -11.663908958435059

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06993798911571503
    2. '=' → logprob: -2.6949379444122314
    3. ' *=' → logprob: -13.819937705993652
    4. ' ' → logprob: -14.694937705993652
    5. '*=' → logprob: -16.31993865966797
    6. '	' → logprob: -16.56993865966797
    7. '＝' → logprob: -16.94493865966797
    8. '=l' → logprob: -16.94493865966797
    9. '   ' → logprob: -17.69493865966797
    10. 'l' → logprob: -17.81993865966797

Token 244: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5759409070014954
    2. ' l' → logprob: -0.8259409070014954
    3. '	l' → logprob: -14.07594108581543
    4. ' ' → logprob: -14.57594108581543
    5. '   ' → logprob: -16.07594108581543
    6. '  ' → logprob: -17.20094108581543
    7. ' ' → logprob: -17.20094108581543
    8. '    ' → logprob: -18.07594108581543
    9. '_l' → logprob: -18.32594108581543
    10. 'lc' → logprob: -18.32594108581543

Token 245: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -4.9424725148128346e-05
    2. 'c' → logprob: -10.000049591064453
    3. 'm' → logprob: -13.125049591064453
    4. 'cms' → logprob: -14.125049591064453
    5. ' cm' → logprob: -14.625049591064453
    6. 'cmb' → logprob: -15.375049591064453
    7. 't' → logprob: -15.500049591064453
    8. '_cm' → logprob: -16.750049591064453
    9. '(cm' → logprob: -16.875049591064453
    10. 'cmp' → logprob: -17.125049591064453

Token 246: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -3.292907877039397e-06
    2. 'base' → logprob: -13.50000286102295
    3. '_bas' → logprob: -13.62500286102295
    4. '_' → logprob: -15.50000286102295
    5. '(base' → logprob: -15.87500286102295
    6. '(t' → logprob: -16.000003814697266
    7. 't' → logprob: -16.000003814697266
    8. '_basic' → logprob: -16.875003814697266
    9. '_BASE' → logprob: -17.125003814697266
    10. 'Base' → logprob: -17.250003814697266

Token 247: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0031793788075447083
    2. '(' → logprob: -5.753179550170898
    3. ' (' → logprob: -13.503179550170898
    4. 't' → logprob: -16.0031795501709
    5. ' ' → logprob: -16.5031795501709
    6. '(
' → logprob: -17.0031795501709
    7. '(n' → logprob: -17.6281795501709
    8. '(int' → logprob: -18.5031795501709
    9. '(x' → logprob: -18.7531795501709
    10. '	t' → logprob: -18.7531795501709

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030197695014066994
    2. ',n' → logprob: -8.1253023147583
    3. ' ,' → logprob: -12.5003023147583
    4. 'n' → logprob: -13.2503023147583
    5. '(n' → logprob: -14.8753023147583
    6. ',
' → logprob: -15.8753023147583
    7. '(' → logprob: -18.375301361083984
    8. ' n' → logprob: -18.625301361083984
    9. '   ' → logprob: -19.625301361083984
    10. ')' → logprob: -19.625301361083984

Token 249: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47407880425453186
    2. 'n' → logprob: -0.9740787744522095
    3. '	n' → logprob: -14.349079132080078
    4. ')n' → logprob: -14.724079132080078
    5. ' ' → logprob: -14.974079132080078
    6. ')' → logprob: -15.724079132080078
    7. '_n' → logprob: -15.724079132080078
    8. ' ' → logprob: -16.474079132080078
    9. ' )' → logprob: -17.724079132080078
    10. '(n' → logprob: -18.099079132080078

Token 250: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41866585687967e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.500008583068848
    4. '   ' → logprob: -18.37500762939453
    5. ')

' → logprob: -18.50000762939453
    6. ')return' → logprob: -19.12500762939453
    7. ')
' → logprob: -19.25000762939453
    8. '))' → logprob: -19.87500762939453
    9. ')`' → logprob: -19.87500762939453
    10. ')#' → logprob: -20.00000762939453

Token 251: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43056896328926086
    2. '
' → logprob: -1.0555689334869385
    3. '    
' → logprob: -7.055569171905518
    4. ' return' → logprob: -7.555569171905518
    5. 'return' → logprob: -8.30556869506836
    6. ' 
' → logprob: -9.18056869506836
    7. '
' → logprob: -9.80556869506836
    8. '  
' → logprob: -10.18056869506836
    9. '	return' → logprob: -11.05556869506836
    10. ' ' → logprob: -12.43056869506836

Token 252: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.507727861404419
    2. '   ' → logprob: -1.007727861404419
    3. ' return' → logprob: -4.13272762298584
    4. 'return' → logprob: -4.25772762298584
    5. ' 
' → logprob: -6.63272762298584
    6. '    
' → logprob: -6.88272762298584
    7. ' ' → logprob: -8.63272762298584
    8. '
' → logprob: -9.13272762298584
    9. '  
' → logprob: -9.13272762298584
    10. '	return' → logprob: -9.63272762298584

Token 253: ' Met' (ID: 7227)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.1295427083969116
    2. 'return' → logprob: -1.2545427083969116
    3. ' return' → logprob: -1.2545427083969116
    4. '   ' → logprob: -3.129542827606201
    5. 't' → logprob: -3.504542827606201
    6. ' ' → logprob: -4.004542827606201
    7. '       ' → logprob: -5.004542827606201
    8. '    ' → logprob: -6.004542827606201
    9. '<|end|>' → logprob: -6.004542827606201
    10. '  ' → logprob: -7.129542827606201

Token 254: ' à' (ID: 1221)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.851503312587738
    2. ' à' → logprob: -0.851503312587738
    3. 'tre' → logprob: -2.601503372192383
    4. ' t' → logprob: -3.976503372192383
    5. '   ' → logprob: -4.851503372192383
    6. '=' → logprob: -4.976503372192383
    7. 'à' → logprob: -5.226503372192383
    8. 'tle' → logprob: -5.601503372192383
    9. '_t' → logprob: -5.726503372192383
    10. ' ' → logprob: -5.851503372192383

Token 255: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0012411827920004725
    2. 'jou' → logprob: -7.251241207122803
    3. ' jour' → logprob: -8.126240730285645
    4. '```' → logprob: -8.876240730285645
    5. ' ' → logprob: -9.876240730285645
    6. 'jours' → logprob: -11.251240730285645
    7. 'Jour' → logprob: -12.001240730285645
    8. 't' → logprob: -12.251240730285645
    9. 'jourd' → logprob: -12.376240730285645
    10. 'j' → logprob: -13.001240730285645

Token 256: ' la' (ID: 557)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.02134961448609829
    2. 't' → logprob: -3.8963496685028076
    3. ' ' → logprob: -8.021349906921387
    4. '<|end|>' → logprob: -8.646349906921387
    5. '(t' → logprob: -9.146349906921387
    6. '	t' → logprob: -9.896349906921387
    7. ' la' → logprob: -9.896349906921387
    8. ' le' → logprob: -10.271349906921387
    9. ' ' → logprob: -10.896349906921387
    10. ' l' → logprob: -11.021349906921387

Token 257: ' valeur' (ID: 41664)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.038399241864681244
    2. ' t' → logprob: -3.4133992195129395
    3. 'l' → logprob: -5.9133992195129395
    4. 'val' → logprob: -7.1633992195129395
    5. 'value' → logprob: -7.5383992195129395
    6. ' value' → logprob: -8.163399696350098
    7. ' valeur' → logprob: -8.538399696350098
    8. 'p' → logprob: -10.038399696350098
    9. 'pp' → logprob: -10.163399696350098
    10. 'v' → logprob: -10.413399696350098

Token 258: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27484676241874695
    2. ' t' → logprob: -2.0248467922210693
    3. ' de' → logprob: -2.2748467922210693
    4. 't' → logprob: -5.52484655380249
    5. '_' → logprob: -7.14984655380249
    6. '<|end|>' → logprob: -8.649847030639648
    7. '	t' → logprob: -9.524847030639648
    8. ' du' → logprob: -9.899847030639648
    9. '(t' → logprob: -9.899847030639648
    10. ' of' → logprob: -9.899847030639648

Token 259: ' '' (ID: 461)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04300342872738838
    2. ' t' → logprob: -3.1680033206939697
    3. ' ' → logprob: -12.66800308227539
    4. '`t' → logprob: -14.54300308227539
    5. '	t' → logprob: -14.91800308227539
    6. 'l' → logprob: -16.16800308227539
    7. '```' → logprob: -17.04300308227539
    8. ' ' → logprob: -17.16800308227539
    9. ''t' → logprob: -17.29300308227539
    10. '`' → logprob: -18.04300308227539

Token 260: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.1689596148207784e-05
    2. ' t' → logprob: -9.875051498413086
    3. '	t' → logprob: -16.000051498413086
    4. ' ' → logprob: -18.000051498413086
    5. ''t' → logprob: -18.000051498413086
    6. 'l' → logprob: -18.500051498413086
    7. '   ' → logprob: -18.750051498413086
    8. '```' → logprob: -19.125051498413086
    9. '`t' → logprob: -19.250051498413086
    10. ')t' → logprob: -19.250051498413086

Token 261: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.522107720375061
    2. ' )' → logprob: -1.022107720375061
    3. ' ' → logprob: -3.2721076011657715
    4. '<|end|>' → logprob: -5.0221076011657715
    5. ' ,' → logprob: -7.1471076011657715
    6. ',' → logprob: -7.1471076011657715
    7. ' )
' → logprob: -8.52210807800293
    8. ' ),' → logprob: -9.02210807800293
    9. '   ' → logprob: -9.39710807800293
    10. '
' → logprob: -9.64710807800293

Token 262: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6125302314758301
    2. ' 
' → logprob: -1.48753023147583
    3. '
' → logprob: -1.73753023147583
    4. ' return' → logprob: -3.11253023147583
    5. '<|end|>' → logprob: -5.61253023147583
    6. 'return' → logprob: -5.98753023147583
    7. '  
' → logprob: -6.23753023147583
    8. '   ' → logprob: -7.36253023147583
    9. '    
' → logprob: -7.61253023147583
    10. '	return' → logprob: -7.86253023147583

Token 263: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.055059999227523804
    2. 'l' → logprob: -2.9300599098205566
    3. ' t' → logprob: -9.805060386657715
    4. 't' → logprob: -10.180060386657715
    5. 'n' → logprob: -10.680060386657715
    6. ' ' → logprob: -10.930060386657715
    7. '	l' → logprob: -11.555060386657715
    8. ' n' → logprob: -11.680060386657715
    9. ' the' → logprob: -12.555060386657715
    10. ' ' → logprob: -12.680060386657715

Token 264: ' PPC' (ID: 94738)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02735627442598343
    2. ' l' → logprob: -3.9023563861846924
    3. 'n' → logprob: -5.652356147766113
    4. ' next' → logprob: -6.777356147766113
    5. 'next' → logprob: -6.902356147766113
    6. 't' → logprob: -7.902356147766113
    7. ' prochain' → logprob: -8.527356147766113
    8. 'result' → logprob: -9.027356147766113
    9. ' result' → logprob: -9.652356147766113
    10. ' n' → logprob: -9.777356147766113

Token 265: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.006792813539505005
    2. 'CM' → logprob: -5.006793022155762
    3. ' M' → logprob: -10.381793022155762
    4. 'C' → logprob: -10.881793022155762
    5. '_CM' → logprob: -12.006793022155762
    6. 'm' → logprob: -12.381793022155762
    7. '_M' → logprob: -12.631793022155762
    8. 'cm' → logprob: -12.756793022155762
    9. '_cm' → logprob: -12.881793022155762
    10. '_base' → logprob: -13.256793022155762

Token 266: ' actuel' (ID: 113646)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.18379446864128113
    2. '(' → logprob: -1.8087944984436035
    3. ' (' → logprob: -5.5587944984436035
    4. ')' → logprob: -9.433794021606445
    5. ',' → logprob: -10.308794021606445
    6. ' ' → logprob: -10.308794021606445
    7. '(
' → logprob: -11.433794021606445
    8. '   ' → logprob: -12.183794021606445
    9. '_' → logprob: -12.433794021606445
    10. '_base' → logprob: -13.308794021606445

Token 267: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.029770279303193092
    2. 'n' → logprob: -3.5297703742980957
    3. ' ' → logprob: -12.654769897460938
    4. '	n' → logprob: -12.654769897460938
    5. ' l' → logprob: -12.779769897460938
    6. 'l' → logprob: -13.279769897460938
    7. ' ' → logprob: -13.404769897460938
    8. ' la' → logprob: -13.529769897460938
    9. ')n' → logprob: -13.654769897460938
    10. '_n' → logprob: -13.654769897460938

Token 269: ' prochain' (ID: 52413)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2815825045108795
    2. 'n' → logprob: -1.4065824747085571
    3. ' ' → logprob: -8.656582832336426
    4. ' ' → logprob: -9.406582832336426
    5. ' )' → logprob: -10.156582832336426
    6. '_n' → logprob: -10.906582832336426
    7. '	n' → logprob: -11.031582832336426
    8. ' '' → logprob: -11.281582832336426
    9. ')n' → logprob: -11.531582832336426
    10. ')' → logprob: -11.906582832336426

Token 270: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7666303515434265
    2. ' n' → logprob: -0.7666303515434265
    3. ' nombre' → logprob: -3.2666304111480713
    4. ' number' → logprob: -4.516630172729492
    5. 'nombre' → logprob: -4.516630172729492
    6. ' ' → logprob: -6.016630172729492
    7. '<|end|>' → logprob: -6.016630172729492
    8. '_nombre' → logprob: -6.641630172729492
    9. ')' → logprob: -7.016630172729492
    10. ' élément' → logprob: -7.516630172729492

Token 271: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19047695398330688
    2. '
' → logprob: -1.815476894378662
    3. '    
' → logprob: -5.565476894378662
    4. ' return' → logprob: -6.440476894378662
    5. 'return' → logprob: -6.565476894378662
    6. ')' → logprob: -6.940476894378662
    7. ' ' → logprob: -7.315476894378662
    8. '  
' → logprob: -7.315476894378662
    9. '.' → logprob: -7.815476894378662
    10. ' 
' → logprob: -8.06547737121582

Token 272: ' la' (ID: 557)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.19484679400920868
    2. 'numbers' → logprob: -1.944846749305725
    3. ' la' → logprob: -3.6948468685150146
    4. 'l' → logprob: -5.5698466300964355
    5. ' l' → logprob: -5.8198466300964355
    6. '(numbers' → logprob: -7.0698466300964355
    7. 'la' → logprob: -7.3198466300964355
    8. ' the' → logprob: -7.5698466300964355
    9. 'n' → logprob: -9.319847106933594
    10. ' ' → logprob: -9.444847106933594

Token 273: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.7727933526039124
    2. 'liste' → logprob: -0.8977933526039124
    3. 'list' → logprob: -2.6477932929992676
    4. ' list' → logprob: -3.0227932929992676
    5. ' sequence' → logprob: -5.772793292999268
    6. 'sequence' → logprob: -6.272793292999268
    7. 'iter' → logprob: -6.272793292999268
    8. 'numbers' → logprob: -6.772793292999268
    9. ' iterable' → logprob: -7.522793292999268
    10. 'lista' → logprob: -8.022793769836426

Token 274: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16601872444152832
    2. '
' → logprob: -1.9160187244415283
    3. ' return' → logprob: -5.791018486022949
    4. 'return' → logprob: -6.041018486022949
    5. '    
' → logprob: -8.66601848602295
    6. ' ' → logprob: -10.04101848602295
    7. '  
' → logprob: -10.16601848602295
    8. '
' → logprob: -10.66601848602295
    9. ' 
' → logprob: -11.04101848602295
    10. '<|end|>' → logprob: -11.41601848602295

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014034922234714031
    2. ' return' → logprob: -4.764034748077393
    3. 'return' → logprob: -5.389034748077393
    4. '
' → logprob: -7.764034748077393
    5. '    
' → logprob: -8.51403522491455
    6. '	return' → logprob: -8.88903522491455
    7. ' 
' → logprob: -10.26403522491455
    8. ' ' → logprob: -11.01403522491455
    9. '  
' → logprob: -12.26403522491455
    10. ':return' → logprob: -12.26403522491455

Token 276: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5863071084022522
    2. 'return' (adapté à ' return') → logprob: -0.8363071084022522
    3. ' return' → logprob: -4.586307048797607
    4. '	return' → logprob: -9.336307525634766
    5. '    
' → logprob: -11.211307525634766
    6. ':return' → logprob: -11.711307525634766
    7. ' ' → logprob: -12.086307525634766
    8. '
' → logprob: -12.711307525634766
    9. 'ret' → logprob: -13.336307525634766
    10. '       ' → logprob: -14.086307525634766

Token 277: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.061969030648469925
    2. ' t' → logprob: -2.811969041824341
    3. '(t' → logprob: -14.311968803405762
    4. '	t' → logprob: -14.936968803405762
    5. '`t' → logprob: -15.061968803405762
    6. ' ' → logprob: -16.311969757080078
    7. '_t' → logprob: -17.686969757080078
    8. '   ' → logprob: -18.811969757080078
    9. '<t' → logprob: -18.936969757080078
    10. ')t' → logprob: -19.436969757080078

Token 278: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: ' Ren' (ID: 17631)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01701330952346325
    2. ' return' → logprob: -4.642013072967529
    3. '#' → logprob: -5.267013072967529
    4. 'Retour' → logprob: -6.517013072967529
    5. 'ret' → logprob: -8.892013549804688
    6. 'result' → logprob: -9.267013549804688
    7. 'Return' → logprob: -9.267013549804688
    8. ':return' → logprob: -9.267013549804688
    9. 'Calcul' → logprob: -9.892013549804688
    10. '```' → logprob: -10.767013549804688

Token 281: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.0017270608805119991
    2. 'v' → logprob: -6.876727104187012
    3. 'voy' → logprob: -8.251727104187012
    4. 'vo' → logprob: -8.626727104187012
    5. 'voit' → logprob: -8.876727104187012
    6. 'voi' → logprob: -10.126727104187012
    7. 't' → logprob: -10.626727104187012
    8. 'e' → logprob: -11.126727104187012
    9. 'tour' → logprob: -11.126727104187012
    10. 'd' → logprob: -12.376727104187012

Token 282: ' le' (ID: 505)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.07917695492506027
    2. 't' → logprob: -2.579176902770996
    3. ' le' → logprob: -8.579176902770996
    4. ' la' → logprob: -9.579176902770996
    5. 'le' → logprob: -11.454176902770996
    6. ' ' → logprob: -11.454176902770996
    7. ' the' → logprob: -12.954176902770996
    8. ' ' → logprob: -13.204176902770996
    9. 'l' → logprob: -13.329176902770996
    10. ' l' → logprob: -13.704176902770996

Token 283: ' PPC' (ID: 94738)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0931872129440308
    2. 'pp' → logprob: -1.0931872129440308
    3. ' PPC' → logprob: -1.7181872129440308
    4. ' résultat' → logprob: -2.7181873321533203
    5. ' t' → logprob: -3.7181873321533203
    6. 'P' → logprob: -3.9681873321533203
    7. 'plus' → logprob: -4.34318733215332
    8. ' plus' → logprob: -4.84318733215332
    9. 'l' → logprob: -5.21818733215332
    10. 'result' → logprob: -5.46818733215332

Token 284: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.015836214646697044
    2. 'CM' → logprob: -4.265836238861084
    3. 'MS' → logprob: -7.265836238861084
    4. 'SM' → logprob: -7.265836238861084
    5. 'Ms' → logprob: -9.140835762023926
    6. '(M' → logprob: -9.890835762023926
    7. 'М' → logprob: -10.515835762023926
    8. '   ' → logprob: -11.140835762023926
    9. 'EM' → logprob: -11.890835762023926
    10. 'OM' → logprob: -12.265835762023926

Token 285: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' tous' (ID: 10688)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.11667313426733017
    2. ' numbers' → logprob: -2.616673231124878
    3. 'l' → logprob: -3.991673231124878
    4. 'all' → logprob: -4.241672992706299
    5. '(numbers' → logprob: -6.991672992706299
    6. ' l' → logprob: -7.116672992706299
    7. 'la' → logprob: -7.241672992706299
    8. ' all' → logprob: -7.741672992706299
    9. 'les' → logprob: -7.866672992706299
    10. 't' → logprob: -8.241673469543457

Token 287: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.14154385030269623
    2. 'les' → logprob: -2.5165438652038574
    3. '(numbers' → logprob: -3.0165438652038574
    4. ' numbers' → logprob: -6.891543865203857
    5. 'numbers' → logprob: -7.141543865203857
    6. ' the' → logprob: -8.2665433883667
    7. ' nombres' → logprob: -9.6415433883667
    8. '(' → logprob: -10.2665433883667
    9. 'l' → logprob: -11.0165433883667
    10. ' le' → logprob: -11.0165433883667

Token 288: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.09639839082956314
    2. 'n' → logprob: -2.84639835357666
    3. 'numbers' → logprob: -4.09639835357666
    4. 'nombre' → logprob: -4.22139835357666
    5. ' numbers' → logprob: -6.97139835357666
    6. 'élé' → logprob: -7.34639835357666
    7. 'ent' → logprob: -7.59639835357666
    8. 'num' → logprob: -8.59639835357666
    9. ' éléments' → logprob: -9.09639835357666
    10. ' nombre' → logprob: -9.47139835357666

Token 289: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.47767174243927
    2. 'from' → logprob: -1.10267174243927
    3. '#' → logprob: -3.2276716232299805
    4. ' from' → logprob: -5.7276716232299805
    5. '<|end|>' → logprob: -5.9776716232299805
    6. '.' → logprob: -6.9776716232299805
    7. ',' → logprob: -7.6026716232299805
    8. ' ' → logprob: -8.72767162322998
    9. '```' → logprob: -8.97767162322998
    10. ')' → logprob: -9.22767162322998

Token 291: ' Lit' (ID: 45595)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4023537337779999
    2. 'import' → logprob: -1.1523537635803223
    3. '#' → logprob: -4.277353763580322
    4. ' from' → logprob: -6.902353763580322
    5. 'math' → logprob: -8.402353286743164
    6. ' import' → logprob: -8.902353286743164
    7. ' math' → logprob: -10.402353286743164
    8. '```' → logprob: -10.527353286743164
    9. 'Import' → logprob: -10.902353286743164
    10. 'python' → logprob: -11.277353286743164

Token 292: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4635160565376282
    2. '()' → logprob: -1.7135159969329834
    3. ' =' → logprob: -2.7135159969329834
    4. ' (' → logprob: -3.3385159969329834
    5. '_' → logprob: -3.4635159969329834
    6. ' ' → logprob: -3.5885159969329834
    7. 'input' → logprob: -4.3385162353515625
    8. ' ()' → logprob: -5.4635162353515625
    9. ' input' → logprob: -5.7135162353515625
    10. 'e' → logprob: -6.2135162353515625

Token 293: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2599101662635803
    2. 'es' → logprob: -1.7599101066589355
    3. 'e' → logprob: -3.5099101066589355
    4. 'iste' → logprob: -3.8849101066589355
    5. 'igne' → logprob: -6.5099101066589355
    6. ''entrée' → logprob: -7.0099101066589355
    7. 'ignes' → logprob: -7.2599101066589355
    8. 'input' → logprob: -7.3849101066589355
    9. 'ist' → logprob: -7.5099101066589355
    10. 'import' → logprob: -8.009910583496094

Token 294: ' utilisateur' (ID: 115595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010357036255300045
    2. '(' → logprob: -4.760356903076172
    3. '_' → logprob: -7.510356903076172
    4. 's' → logprob: -7.760356903076172
    5. ' =' → logprob: -9.135356903076172
    6. '(
' → logprob: -9.260356903076172
    7. 'import' → logprob: -9.385356903076172
    8. 'user' → logprob: -9.760356903076172
    9. '()
' → logprob: -9.885356903076172
    10. '("")' → logprob: -9.885356903076172

Token 295: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26761966943740845
    2. '(' → logprob: -2.5176196098327637
    3. ' =' → logprob: -3.5176196098327637
    4. 's' → logprob: -3.5176196098327637
    5. 'n' → logprob: -3.7676196098327637
    6. 'input' → logprob: -3.7676196098327637
    7. 'user' → logprob: -4.392619609832764
    8. '=' → logprob: -4.517619609832764
    9. 'numbers' → logprob: -4.892619609832764
    10. '(
' → logprob: -5.767619609832764

Token 296: ' la' (ID: 557)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.9576420187950134
    2. ' split' → logprob: -1.5826420783996582
    3. 'convert' → logprob: -1.9576420783996582
    4. 'split' → logprob: -2.582642078399658
    5. 'spl' → logprob: -3.207642078399658
    6. ' transforme' → logprob: -3.457642078399658
    7. ' calc' → logprob: -4.082642078399658
    8. ' la' → logprob: -4.457642078399658
    9. ' stock' → logprob: -4.582642078399658
    10. ' numbers' → logprob: -4.957642078399658

Token 297: ' convert' (ID: 8452)
  Prédit: ' split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.9904002547264099
    2. '.split' → logprob: -1.1154003143310547
    3. 'split' → logprob: -1.2404003143310547
    4. ' convert' → logprob: -5.865400314331055
    5. 'convert' → logprob: -6.240400314331055
    6. '.strip' → logprob: -6.490400314331055
    7. ' transforme' → logprob: -7.240400314331055
    8. '_split' → logprob: -7.490400314331055
    9. '.replace' → logprob: -7.615400314331055
    10. ' =' → logprob: -7.615400314331055

Token 298: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.018541213124990463
    2. ' =' → logprob: -5.39354133605957
    3. '=' → logprob: -5.51854133605957
    4. 'i' → logprob: -5.76854133605957
    5. 'ie' → logprob: -5.89354133605957
    6. 'is' → logprob: -6.01854133605957
    7. 'ies' → logprob: -8.51854133605957
    8. 'ir' → logprob: -8.51854133605957
    9. 'e' → logprob: -8.64354133605957
    10. 'issez' → logprob: -8.89354133605957

Token 299: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5908281803131104
    2. '()' → logprob: -1.0908281803131104
    3. '(' → logprob: -2.4658281803131104
    4. 'en' → logprob: -4.715827941894531
    5. 'int' → logprob: -5.215827941894531
    6. '(int' → logprob: -5.715827941894531
    7. 'import' → logprob: -6.090827941894531
    8. ',' → logprob: -6.715827941894531
    9. ' into' → logprob: -7.715827941894531
    10. '().' → logprob: -7.840827941894531

Token 300: ' entier' (ID: 80473)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.0534522533416748
    2. 'list' → logprob: -1.5534522533416748
    3. ' list' → logprob: -1.6784522533416748
    4. ' liste' → logprob: -2.553452253341675
    5. ' un' → logprob: -3.053452253341675
    6. 'liste' → logprob: -3.178452253341675
    7. ' a' → logprob: -3.678452253341675
    8. 'int' → logprob: -3.803452253341675
    9. 'une' → logprob: -4.678452491760254
    10. 'ent' → logprob: -4.803452491760254

Token 301: '.' (ID: 13)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7395342588424683
    2. 'number' → logprob: -1.2395342588424683
    3. 'user' → logprob: -1.9895342588424683
    4. 'num' → logprob: -2.864534378051758
    5. 'x' → logprob: -3.989534378051758
    6. 'value' → logprob: -4.364534378051758
    7. 'input' → logprob: -5.739534378051758
    8. 'nombre' → logprob: -6.114534378051758
    9. '=' → logprob: -6.364534378051758
    10. 'numero' → logprob: -8.239534378051758

Token 302: ' Re' (ID: 907)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19642043113708496
    2. 'number' → logprob: -2.821420431137085
    3. 'num' → logprob: -2.946420431137085
    4. 'x' → logprob: -3.196420431137085
    5. 'user' → logprob: -3.821420431137085
    6. 'value' → logprob: -6.071420669555664
    7. 'input' → logprob: -7.696420669555664
    8. 'a' → logprob: -8.446420669555664
    9. 'val' → logprob: -8.821420669555664
    10. 'numbers' → logprob: -8.946420669555664

Token 303: 'prés' (ID: 61592)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4062371253967285
    2. 'quired' → logprob: -1.4062371253967285
    3. 'n' → logprob: -1.6562371253967285
    4. 'turn' → logprob: -1.9062371253967285
    5. 'ady' → logprob: -3.5312371253967285
    6. 'numbers' → logprob: -3.9062371253967285
    7. 'nombre' → logprob: -4.0312371253967285
    8. 'main' → logprob: -4.5312371253967285
    9. 'ad' → logprob: -4.6562371253967285
    10. 'ceived' → logprob: -4.7812371253967285

Token 304: 'ente' (ID: 1576)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5708463191986084
    2. 'ent' → logprob: -1.5708463191986084
    3. 'prés' → logprob: -3.5708463191986084
    4. 'ente' → logprob: -3.8208463191986084
    5. 'ép' → logprob: -4.0708465576171875
    6. 'ç' → logprob: -4.1958465576171875
    7. 'ents' → logprob: -4.1958465576171875
    8. 'sent' → logprob: -4.3208465576171875
    9. 'é' → logprob: -4.3208465576171875
    10. 'n' → logprob: -4.4458465576171875

Token 305: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4096773862838745
    2. ' un' → logprob: -2.034677505493164
    3. 'nombre' → logprob: -2.034677505493164
    4. ' n' → logprob: -2.784677505493164
    5. ' la' → logprob: -3.034677505493164
    6. ' le' → logprob: -3.034677505493164
    7. ' ' → logprob: -3.284677505493164
    8. 'un' → logprob: -3.409677505493164
    9. ' une' → logprob: -3.659677505493164
    10. 'a' → logprob: -3.659677505493164

Token 306: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5962606072425842
    2. 'n' → logprob: -0.9712606072425842
    3. 'ent' → logprob: -3.7212605476379395
    4. ' nombre' → logprob: -4.2212605476379395
    5. ' nombres' → logprob: -4.7212605476379395
    6. 'numbers' → logprob: -4.7212605476379395
    7. 'number' → logprob: -5.3462605476379395
    8. 'nb' → logprob: -6.0962605476379395
    9. 'num' → logprob: -6.7212605476379395
    10. ' n' → logprob: -7.2212605476379395

Token 307: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31962138414382935
    2. '=' → logprob: -2.8196213245391846
    3. '_' → logprob: -2.9446213245391846
    4. '_de' → logprob: -2.9446213245391846
    5. '_des' → logprob: -3.9446213245391846
    6. 's' → logprob: -4.069621562957764
    7. '_nombre' → logprob: -4.444621562957764
    8. '_n' → logprob: -4.694621562957764
    9. 'de' → logprob: -4.819621562957764
    10. '_ent' → logprob: -5.069621562957764

Token 308: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4927574396133423
    2. '_' → logprob: -2.3677573204040527
    3. '_ent' → logprob: -2.3677573204040527
    4. '_numbers' → logprob: -2.6177573204040527
    5. 's' → logprob: -4.242757320404053
    6. '_elements' → logprob: -4.492757320404053
    7. 'umbers' → logprob: -4.867757320404053
    8. 'éros' → logprob: -4.992757320404053
    9. 'ombres' → logprob: -5.117757320404053
    10. '_values' → logprob: -5.117757320404053

Token 309: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.49524760246276855
    2. 'ent' → logprob: -1.6202476024627686
    3. 'n' → logprob: -1.9952476024627686
    4. ' nombres' → logprob: -4.245247840881348
    5. ' ent' → logprob: -4.870247840881348
    6. 'num' → logprob: -5.245247840881348
    7. 'elements' → logprob: -5.745247840881348
    8. ' éléments' → logprob: -5.870247840881348
    9. 'val' → logprob: -5.995247840881348
    10. ' ' → logprob: -5.995247840881348

Token 310: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0003993296413682401
    2. 'ment' → logprob: -8.000399589538574
    3. 'm' → logprob: -10.250399589538574
    4. 'me' → logprob: -11.375399589538574
    5. 'v' → logprob: -12.625399589538574
    6. 'ves' → logprob: -12.625399589538574
    7. 'nts' → logprob: -13.250399589538574
    8. 've' → logprob: -13.375399589538574
    9. 'phants' → logprob: -14.125399589538574
    10. '```' → logprob: -14.125399589538574

Token 311: ' dans' (ID: 2671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.021754223853349686
    2. ' =' → logprob: -4.396754264831543
    3. '=' → logprob: -5.771754264831543
    4. 'num' → logprob: -5.896754264831543
    5. ' n' → logprob: -7.146754264831543
    6. 'de' → logprob: -7.146754264831543
    7. 'count' → logprob: -7.896754264831543
    8. ',' → logprob: -8.271754264831543
    9. 'nombre' → logprob: -8.896754264831543
    10. 'numbers' → logprob: -9.021754264831543

Token 312: ' la' (ID: 557)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.36376649141311646
    2. 'input' → logprob: -1.2387664318084717
    3. 'list' → logprob: -5.613766670227051
    4. 'liste' → logprob: -5.988766670227051
    5. 'la' → logprob: -6.113766670227051
    6. 'n' → logprob: -6.613766670227051
    7. 'range' → logprob: -7.113766670227051
    8. 'l' → logprob: -7.113766670227051
    9. 'lst' → logprob: -7.238766670227051
    10. ')' → logprob: -7.613766670227051

Token 313: ' liste' (ID: 31719)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4357234239578247
    2. 'liste' → logprob: -1.6857234239578247
    3. 'numbers' → logprob: -2.560723304748535
    4. 'range' → logprob: -3.685723304748535
    5. 'list' → logprob: -3.810723304748535
    6. 'n' → logprob: -4.435723304748535
    7. ' input' → logprob: -4.810723304748535
    8. 'sequence' → logprob: -5.060723304748535
    9. 'lst' → logprob: -5.810723304748535
    10. 'array' → logprob: -6.060723304748535

Token 314: ' A' (ID: 355)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006788789760321379
    2. 'num' → logprob: -5.256788730621338
    3. 'number' → logprob: -7.631788730621338
    4. 'nombre' → logprob: -7.756788730621338
    5. 'count' → logprob: -8.256789207458496
    6. 'numbers' → logprob: -8.756789207458496
    7. 'input' → logprob: -9.506789207458496
    8. 'nb' → logprob: -9.506789207458496
    9. 'nbr' → logprob: -11.631789207458496
    10. 'size' → logprob: -11.631789207458496

Token 315: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09954743087291718
    2. 'A' → logprob: -2.5995473861694336
    3. 'N' → logprob: -4.599547386169434
    4. 'a' → logprob: -4.974547386169434
    5. 'num' → logprob: -6.224547386169434
    6. 'input' → logprob: -7.599547386169434
    7. '=' → logprob: -8.349547386169434
    8. ' =' → logprob: -8.724547386169434
    9. 'number' → logprob: -8.849547386169434
    10. 'nombre' → logprob: -8.974547386169434

Token 316: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03112402744591236
    2. 'N' → logprob: -3.5311241149902344
    3. 'A' → logprob: -7.281124114990234
    4. 'a' → logprob: -8.031124114990234
    5. 'num' → logprob: -8.531124114990234
    6. ' n' → logprob: -9.656124114990234
    7. 'import' → logprob: -10.156124114990234
    8. 'input' → logprob: -10.531124114990234
    9. 'count' → logprob: -11.656124114990234
    10. 't' → logprob: -12.156124114990234

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761157870292664
    2. ' =' → logprob: -0.8261157870292664
    3. '=int' → logprob: -8.701115608215332
    4. ',' → logprob: -12.201115608215332
    5. '=input' → logprob: -12.326115608215332
    6. ' ' → logprob: -16.20111656188965
    7. ' ' → logprob: -16.20111656188965
    8. '=N' → logprob: -16.82611656188965
    9. ')' → logprob: -17.20111656188965
    10. '=

' → logprob: -17.32611656188965

Token 318: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01416350994259119
    2. ' int' → logprob: -4.264163494110107
    3. '[int' → logprob: -18.639163970947266
    4. '=int' → logprob: -18.889163970947266
    5. '	int' → logprob: -19.389163970947266
    6. '(int' → logprob: -19.514163970947266
    7. ' ' → logprob: -19.764163970947266
    8. '<int' → logprob: -20.139163970947266
    9. 'input' → logprob: -21.014163970947266
    10. '   ' → logprob: -21.389163970947266

Token 319: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005811501177959144
    2. '(' → logprob: -7.50058126449585
    3. 'input' → logprob: -10.500580787658691
    4. '(
' → logprob: -14.375580787658691
    5. '()' → logprob: -17.500581741333008
    6. ' input' → logprob: -17.875581741333008
    7. '=input' → logprob: -18.000581741333008
    8. ' (' → logprob: -18.250581741333008
    9. '(

' → logprob: -18.625581741333008
    10. '	input' → logprob: -19.875581741333008

Token 320: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005298623349517584
    2. '()' → logprob: -5.255298614501953
    3. '(' → logprob: -10.380298614501953
    4. '().' → logprob: -11.255298614501953
    5. ' ())' → logprob: -11.880298614501953
    6. '("' → logprob: -13.005298614501953
    7. '())
' → logprob: -13.005298614501953
    8. '()>' → logprob: -13.130298614501953
    9. '()))' → logprob: -13.130298614501953
    10. '();)' → logprob: -13.380298614501953

Token 321: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003478432074189186
    2. '#' → logprob: -5.878478527069092
    3. '<|end|>' → logprob: -7.378478527069092
    4. ' A' → logprob: -10.378478050231934
    5. '
' → logprob: -11.128478050231934
    6. '<|end|>' → logprob: -13.753478050231934
    7. 's' → logprob: -15.003478050231934
    8. '```' → logprob: -15.128478050231934
    9. '  
' → logprob: -15.503478050231934
    10. ' 
' → logprob: -15.503478050231934

Token 322: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011063856072723866
    2. '#' → logprob: -4.511064052581787
    3. '<|end|>' → logprob: -11.386063575744629
    4. ' A' → logprob: -13.011063575744629
    5. '
' → logprob: -13.636063575744629
    6. 'a' → logprob: -15.136063575744629
    7. '```' → logprob: -15.636063575744629
    8. ')' → logprob: -15.636063575744629
    9. 'from' → logprob: -16.136064529418945
    10. '<|end|>' → logprob: -16.636064529418945

Token 323: ' input' (ID: 3422)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0041191233322024345
    2. '#' → logprob: -5.504118919372559
    3. 'from' → logprob: -10.629118919372559
    4. '
' → logprob: -11.629118919372559
    5. 'import' → logprob: -12.879118919372559
    6. ' A' → logprob: -12.879118919372559
    7. 'a' → logprob: -13.879118919372559
    8. 'numbers' → logprob: -14.379118919372559
    9. '```' → logprob: -16.254119873046875
    10. '

' → logprob: -16.379119873046875

Token 324: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0030556656420230865
    2. '()
' → logprob: -6.753055572509766
    3. '<|end|>' → logprob: -7.003055572509766
    4. '(' → logprob: -7.503055572509766
    5. ')' → logprob: -9.128055572509766
    6. 'A' → logprob: -9.253055572509766
    7. '())' → logprob: -9.503055572509766
    8. '#' → logprob: -10.003055572509766
    9. '
' → logprob: -10.753055572509766
    10. '(
' → logprob: -11.128055572509766

Token 325: ' lit' (ID: 11980)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5861570239067078
    2. '<|end|>' → logprob: -1.0861570835113525
    3. '
' → logprob: -2.9611570835113525
    4. '#' → logprob: -3.4611570835113525
    5. ' A' → logprob: -4.836156845092773
    6. 'N' → logprob: -5.586156845092773
    7. ')' → logprob: -5.836156845092773
    8. 'a' → logprob: -6.086156845092773
    9. '()' → logprob: -6.211156845092773
    10. '<|end|>' → logprob: -6.586156845092773

Token 326: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.8312570318812504e-05
    2. '().' → logprob: -11.625018119812012
    3. '()
' → logprob: -12.000018119812012
    4. '())' → logprob: -13.875018119812012
    5. '(' → logprob: -14.000018119812012
    6. '()\' → logprob: -14.250018119812012
    7. '("")' → logprob: -15.500018119812012
    8. '()

' → logprob: -15.625018119812012
    9. ' ()' → logprob: -15.875018119812012
    10. ')' → logprob: -16.875019073486328

Token 327: ' ligne' (ID: 19583)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.7550760507583618
    2. ' chaîne' → logprob: -1.5050760507583618
    3. 'string' → logprob: -1.7550760507583618
    4. 'ligne' → logprob: -2.3800759315490723
    5. 'cha' → logprob: -3.3800759315490723
    6. ' ligne' → logprob: -6.130075931549072
    7. ' string' → logprob: -6.505075931549072
    8. 'entrée' → logprob: -6.630075931549072
    9. ' chaine' → logprob: -7.005075931549072
    10. 'chain' → logprob: -7.130075931549072

Token 328: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00484293419867754
    2. '()
' → logprob: -5.879842758178711
    3. '().' → logprob: -6.254842758178711
    4. '()

' → logprob: -10.629842758178711
    5. '()\' → logprob: -10.629842758178711
    6. '())' → logprob: -10.879842758178711
    7. '
' → logprob: -11.504842758178711
    8. '#' → logprob: -11.504842758178711
    9. '(' → logprob: -11.629842758178711
    10. '.' → logprob: -12.254842758178711

Token 329: ' tant' (ID: 16235)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -1.2873092889785767
    2. 'string' → logprob: -1.4123092889785767
    3. 'chaine' → logprob: -2.287309169769287
    4. 'ent' → logprob: -2.287309169769287
    5. 'texte' → logprob: -2.537309169769287
    6. 'str' → logprob: -2.912309169769287
    7. 't' → logprob: -3.162309169769287
    8. 'python' → logprob: -3.662309169769287
    9. ' entrée' → logprob: -4.412309169769287
    10. 'standard' → logprob: -4.662309169769287

Token 330: ' que' (ID: 661)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3415602147579193
    2. 'de' → logprob: -2.716560125350952
    3. ' d' → logprob: -2.841560125350952
    4. 'ent' → logprob: -3.091560125350952
    5. 'd' → logprob: -3.966560125350952
    6. 'string' → logprob: -4.716560363769531
    7. ' une' → logprob: -4.841560363769531
    8. ' entière' → logprob: -4.841560363769531
    9. '<|end|>' → logprob: -4.966560363769531
    10. 's' → logprob: -5.216560363769531

Token 331: ' chaîne' (ID: 89288)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.09849634021520615
    2. 'str' → logprob: -3.098496437072754
    3. 'chaine' → logprob: -3.098496437072754
    4. 'cha' → logprob: -6.098496437072754
    5. ' chaîne' → logprob: -6.848496437072754
    6. ' string' → logprob: -8.348496437072754
    7. ' chaine' → logprob: -11.348496437072754
    8. 'chain' → logprob: -12.223496437072754
    9. 'texte' → logprob: -12.473496437072754
    10. 's' → logprob: -14.223496437072754

Token 332: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0574251189827919
    2. '().' → logprob: -3.557425022125244
    3. ')' → logprob: -5.057425022125244
    4. '())' → logprob: -5.432425022125244
    5. '.' → logprob: -5.682425022125244
    6. 'import' → logprob: -5.932425022125244
    7. '(' → logprob: -6.057425022125244
    8. '()
' → logprob: -6.432425022125244
    9. '<|end|>' → logprob: -6.807425022125244
    10. '#' → logprob: -6.932425022125244

Token 333: ' caractères' (ID: 183106)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.6012885570526123
    2. 'car' → logprob: -0.9762885570526123
    3. 'entrée' → logprob: -2.9762885570526123
    4. 'string' → logprob: -4.476288795471191
    5. 'chaine' → logprob: -5.226288795471191
    6. 'str' → logprob: -5.601288795471191
    7. ' caractères' → logprob: -6.226288795471191
    8. 'text' → logprob: -7.601288795471191
    9. ' texte' → logprob: -8.226288795471191
    10. 'ent' → logprob: -8.226288795471191

Token 334: ' ;' (ID: 4605)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02372918836772442
    2. '()' → logprob: -4.39872932434082
    3. ',' → logprob: -6.14872932434082
    4. '#' → logprob: -6.39872932434082
    5. '
' → logprob: -6.52372932434082
    6. 'import' → logprob: -6.77372932434082
    7. 'N' → logprob: -6.89872932434082
    8. '(' → logprob: -7.52372932434082
    9. '.strip' → logprob: -7.64872932434082
    10. '.' → logprob: -8.02372932434082

Token 335: ' int' (ID: 677)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.028344040736556053
    2. 'from' → logprob: -4.52834415435791
    3. ' A' → logprob: -4.77834415435791
    4. '#' → logprob: -5.15334415435791
    5. 'numbers' → logprob: -6.77834415435791
    6. 'import' → logprob: -6.90334415435791
    7. ' from' → logprob: -8.15334415435791
    8. 'a' → logprob: -8.27834415435791
    9. ' numbers' → logprob: -9.15334415435791
    10. 'N' → logprob: -10.90334415435791

Token 336: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5177564024925232
    2. '(' → logprob: -1.017756462097168
    3. '(input' → logprob: -3.267756462097168
    4. '(convert' → logprob: -6.517756462097168
    5. 'convert' → logprob: -6.767756462097168
    6. ' converts' → logprob: -8.017756462097168
    7. '(...)' → logprob: -8.642756462097168
    8. '(
' → logprob: -8.642756462097168
    9. '<|end|>' → logprob: -8.767756462097168
    10. '(int' → logprob: -9.142756462097168

Token 337: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.4548184275627136
    2. '()' → logprob: -2.0798184871673584
    3. '(' → logprob: -2.3298184871673584
    4. ' converts' → logprob: -2.4548184871673584
    5. ' convert' → logprob: -3.9548184871673584
    6. ' transforme' → logprob: -4.579818248748779
    7. '(
' → logprob: -4.704818248748779
    8. '(convert' → logprob: -5.079818248748779
    9. ')' → logprob: -5.704818248748779
    10. 'con' → logprob: -5.829818248748779

Token 338: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0024901647120714188
    2. 'ie' → logprob: -6.752490043640137
    3. 'i' → logprob: -7.377490043640137
    4. 'ir' → logprob: -8.627490043640137
    5. 'input' → logprob: -9.127490043640137
    6. 'ent' → logprob: -9.377490043640137
    7. 'is' → logprob: -9.502490043640137
    8. 'issez' → logprob: -9.502490043640137
    9. 'isseur' → logprob: -10.877490043640137
    10. 'e' → logprob: -10.877490043640137

Token 339: ' cette' (ID: 7696)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5428139567375183
    2. '(N' → logprob: -2.042814016342163
    3. '()' → logprob: -2.167814016342163
    4. 'la' → logprob: -2.542814016342163
    5. '(input' → logprob: -4.042813777923584
    6. 'celle' → logprob: -4.167813777923584
    7. '(' → logprob: -4.542813777923584
    8. 'cela' → logprob: -4.667813777923584
    9. 'l' → logprob: -5.292813777923584
    10. 'input' → logprob: -5.417813777923584

Token 340: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.8402389287948608
    2. 'chaine' → logprob: -1.3402389287948608
    3. ' string' → logprob: -1.4652389287948608
    4. 'string' → logprob: -3.9652390480041504
    5. ' )' → logprob: -4.09023904800415
    6. ' chaine' → logprob: -4.46523904800415
    7. ' input' → logprob: -4.71523904800415
    8. 'entrée' → logprob: -5.21523904800415
    9. ' espace' → logprob: -5.71523904800415
    10. ')' → logprob: -6.21523904800415

Token 341: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13540981709957123
    2. '(' → logprob: -2.1354098320007324
    3. '(input' → logprob: -6.260409832000732
    4. ')' → logprob: -6.510409832000732
    5. '#' → logprob: -6.510409832000732
    6. '(
' → logprob: -7.010409832000732
    7. '())' → logprob: -7.260409832000732
    8. '.' → logprob: -8.010409355163574
    9. '().' → logprob: -8.135409355163574
    10. '(N' → logprob: -8.260409355163574

Token 342: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5238490700721741
    2. ' un' → logprob: -1.7738490104675293
    3. 'int' → logprob: -2.0238490104675293
    4. 'un' → logprob: -2.5238490104675293
    5. ' entier' → logprob: -3.8988490104675293
    6. 'nombre' → logprob: -6.523849010467529
    7. ' int' → logprob: -6.773849010467529
    8. ' ent' → logprob: -7.148849010467529
    9. 'integer' → logprob: -7.273849010467529
    10. 'entrée' → logprob: -7.773849010467529

Token 343: '.

' (ID: 364)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04528844356536865
    2. ')' → logprob: -3.795288562774658
    3. '
' → logprob: -4.545288562774658
    4. '#' → logprob: -4.795288562774658
    5. 'a' → logprob: -7.045288562774658
    6. '<|end|>' → logprob: -7.045288562774658
    7. ')
' → logprob: -7.795288562774658
    8. 'N' → logprob: -9.0452880859375
    9. ' A' → logprob: -9.5452880859375
    10. '.' → logprob: -9.6702880859375

Token 344: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.217951886355877e-05
    2. '#' → logprob: -9.750061988830566
    3. 'import' → logprob: -13.500061988830566
    4. ' A' → logprob: -13.875061988830566
    5. 'from' → logprob: -14.000061988830566
    6. 'a' → logprob: -15.375061988830566
    7. '
' → logprob: -16.875062942504883
    8. 'numbers' → logprob: -16.875062942504883
    9. 'data' → logprob: -17.250062942504883
    10. '```' → logprob: -17.375062942504883

Token 345: ' Lit' (ID: 45595)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.583550642360933e-05
    2. '#' → logprob: -11.250036239624023
    3. 'from' → logprob: -11.375036239624023
    4. 'import' → logprob: -12.125036239624023
    5. 'a' → logprob: -13.125036239624023
    6. 'numbers' → logprob: -13.500036239624023
    7. ' A' → logprob: -13.625036239624023
    8. 'data' → logprob: -14.375036239624023
    9. 'arr' → logprob: -14.875036239624023
    10. 'values' → logprob: -16.250036239624023

Token 346: ' une' (ID: 2463)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.48730409145355225
    2. '()' → logprob: -1.3623040914535522
    3. ' A' → logprob: -2.737304210662842
    4. ' la' → logprob: -2.862304210662842
    5. '(' → logprob: -5.862304210662842
    6. 'la' → logprob: -6.362304210662842
    7. ' une' → logprob: -6.862304210662842
    8. 's' → logprob: -7.737304210662842
    9. 'l' → logprob: -7.862304210662842
    10. 'a' → logprob: -8.362303733825684

Token 347: ' deuxième' (ID: 51664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2939377725124359
    2. '=' → logprob: -1.7939378023147583
    3. 's' → logprob: -2.6689376831054688
    4. 'A' → logprob: -5.293937683105469
    5. 'liste' → logprob: -5.418937683105469
    6. ' A' → logprob: -6.418937683105469
    7. '_list' → logprob: -6.543937683105469
    8. 'list' → logprob: -6.793937683105469
    9. '_' → logprob: -6.918937683105469
    10. 'l' → logprob: -7.043937683105469

Token 348: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.342282772064209
    2. ' ligne' → logprob: -1.717282772064209
    3. 'line' → logprob: -3.092282772064209
    4. 'A' → logprob: -3.717282772064209
    5. ' line' → logprob: -4.342282772064209
    6. '
' → logprob: -4.967282772064209
    7. 'input' → logprob: -5.092282772064209
    8. '()' → logprob: -5.342282772064209
    9. 'entrée' → logprob: -5.467282772064209
    10. 'l' → logprob: -6.717282772064209

Token 349: ' d' (ID: 272)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04256699979305267
    2. '()' → logprob: -3.667567014694214
    3. 'a' → logprob: -5.792566776275635
    4. 's' → logprob: -5.792566776275635
    5. ' A' → logprob: -5.917566776275635
    6. 'numbers' → logprob: -6.167566776275635
    7. '#' → logprob: -6.417566776275635
    8. ',' → logprob: -7.167566776275635
    9. '
' → logprob: -7.792566776275635
    10. ' =' → logprob: -7.917566776275635

Token 350: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.6544209122657776
    2. 'input' → logprob: -1.1544208526611328
    3. 'entrée' → logprob: -1.9044208526611328
    4. 'e' → logprob: -4.654420852661133
    5. ' input' → logprob: -6.029420852661133
    6. ''' → logprob: -6.654420852661133
    7. '=input' → logprob: -7.029420852661133
    8. ''ent' → logprob: -7.529420852661133
    9. '’entrée' → logprob: -7.904420852661133
    10. 'es' → logprob: -8.404420852661133

Token 351: ',' (ID: 11)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.15600794553756714
    2. 'numbers' → logprob: -2.781008005142212
    3. 's' → logprob: -3.406008005142212
    4. ',' → logprob: -4.031007766723633
    5. ' A' → logprob: -4.281007766723633
    6. '()' → logprob: -5.906007766723633
    7. 'arr' → logprob: -6.031007766723633
    8. 'a' → logprob: -6.156007766723633
    9. '
' → logprob: -6.281007766723633
    10. 'values' → logprob: -6.531007766723633

Token 352: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0283257961273193
    2. ' A' → logprob: -1.6533257961273193
    3. 'qui' → logprob: -2.2783257961273193
    4. ' qui' → logprob: -2.6533257961273193
    5. 'split' → logprob: -2.6533257961273193
    6. ' contenant' → logprob: -3.0283257961273193
    7. ' split' → logprob: -3.1533257961273193
    8. ' convert' → logprob: -3.4033257961273193
    9. ' la' → logprob: -3.9033257961273193
    10. 'cont' → logprob: -4.153326034545898

Token 353: ' div' (ID: 4223)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.027002433314919472
    2. 'strip' → logprob: -3.7770023345947266
    3. ' split' → logprob: -6.152002334594727
    4. 'map' → logprob: -7.527002334594727
    5. 'list' → logprob: -7.777002334594727
    6. 'rstrip' → logprob: -7.777002334594727
    7. ' list' → logprob: -9.277002334594727
    8. ' map' → logprob: -10.402002334594727
    9. 's' → logprob: -10.527002334594727
    10. 'plit' → logprob: -10.652002334594727

Token 354: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.015251950360834599
    2. 'ide' → logprob: -4.265252113342285
    3. 'iser' → logprob: -8.140252113342285
    4. '#' → logprob: -8.640252113342285
    5. 'erse' → logprob: -9.140252113342285
    6. 'ert' → logprob: -9.265252113342285
    7. 'ize' → logprob: -9.390252113342285
    8. 'isez' → logprob: -10.015252113342285
    9. 'erte' → logprob: -10.015252113342285
    10. '()' → logprob: -10.515252113342285

Token 355: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5633562207221985
    2. ' en' → logprob: -1.1883561611175537
    3. ' into' → logprob: -3.1883561611175537
    4. ' par' → logprob: -3.8133561611175537
    5. ' =' → logprob: -4.313356399536133
    6. '('' → logprob: -4.688356399536133
    7. ' ' → logprob: -5.188356399536133
    8. '(' → logprob: -5.563356399536133
    9. '().' → logprob: -5.563356399536133
    10. 's' → logprob: -5.563356399536133

Token 356: ' morceaux' (ID: 133321)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.0881275087594986
    2. ' des' → logprob: -2.838127613067627
    3. 'une' → logprob: -4.588127613067627
    4. 'tokens' → logprob: -5.963127613067627
    5. ' liste' → logprob: -5.963127613067627
    6. ' tokens' → logprob: -6.213127613067627
    7. 'liste' → logprob: -6.338127613067627
    8. 'des' → logprob: -7.213127613067627
    9. ' chaînes' → logprob: -7.338127613067627
    10. ' a' → logprob: -7.588127613067627

Token 357: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06377413123846054
    2. '().' → logprob: -4.313774108886719
    3. ' =' → logprob: -4.438774108886719
    4. 's' → logprob: -5.063774108886719
    5. 'A' → logprob: -5.188774108886719
    6. 'input' → logprob: -5.188774108886719
    7. ' par' → logprob: -5.438774108886719
    8. ',' → logprob: -5.563774108886719
    9. 'par' → logprob: -6.313774108886719
    10. '=' → logprob: -6.313774108886719

Token 358: 'split' (ID: 13627)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4740756154060364
    2. ' )' → logprob: -1.4740755558013916
    3. '()' → logprob: -2.9740755558013916
    4. 'A' → logprob: -3.8490755558013916
    5. 'input' → logprob: -4.599075794219971
    6. ' A' → logprob: -4.599075794219971
    7. 'string' → logprob: -4.724075794219971
    8. 'str' → logprob: -4.724075794219971
    9. 'strings' → logprob: -4.724075794219971
    10. 's' → logprob: -4.974075794219971

Token 359: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3309628665447235
    2. '()' → logprob: -1.330962896347046
    3. ')' → logprob: -4.080962657928467
    4. '()),' → logprob: -7.705962657928467
    5. ' )' → logprob: -9.080963134765625
    6. '(),' → logprob: -10.330963134765625
    7. '()
' → logprob: -10.705963134765625
    8. '),' → logprob: -11.330963134765625
    9. ' ())' → logprob: -11.705963134765625
    10. '(' → logprob: -12.705963134765625

Token 360: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04897269979119301
    2. '().' → logprob: -3.0489726066589355
    3. ')' → logprob: -8.673973083496094
    4. '.' → logprob: -9.423973083496094
    5. 'input' → logprob: -10.423973083496094
    6. '(' → logprob: -10.548973083496094
    7. '(),' → logprob: -11.048973083496094
    8. '())' → logprob: -11.298973083496094
    9. ' ()' → logprob: -11.798973083496094
    10. ',' → logprob: -12.173973083496094

Token 361: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.29363030195236206
    2. ' convert' → logprob: -2.418630361557007
    3. ' les' → logprob: -2.918630361557007
    4. 'map' → logprob: -3.043630361557007
    5. ' map' → logprob: -4.043630123138428
    6. 'les' → logprob: -4.168630123138428
    7. ' converts' → logprob: -4.418630123138428
    8. ' transforme' → logprob: -5.418630123138428
    9. 'con' → logprob: -5.543630123138428
    10. 'list' → logprob: -5.918630123138428

Token 362: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -5.908022285439074e-05
    2. 'is' → logprob: -10.125059127807617
    3. 'i' → logprob: -12.250059127807617
    4. '[it' → logprob: -12.625059127807617
    5. 'e' → logprob: -13.000059127807617
    6. 'ir' → logprob: -13.500059127807617
    7. 'each' → logprob: -13.875059127807617
    8. 'all' → logprob: -14.250059127807617
    9. 'ie' → logprob: -14.375059127807617
    10. ' it' → logprob: -14.375059127807617

Token 363: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2124158143997192
    2. 'list' → logprob: -1.2124158143997192
    3. 'la' → logprob: -1.8374158143997192
    4. 'A' → logprob: -2.5874156951904297
    5. ' les' → logprob: -3.2124156951904297
    6. ' list' → logprob: -3.3374156951904297
    7. '()' → logprob: -3.5874156951904297
    8. ' en' → logprob: -3.7124156951904297
    9. 'les' → logprob: -4.71241569519043
    10. ' A' → logprob: -4.71241569519043

Token 364: ' morceau' (ID: 160026)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.22120307385921478
    2. ' morceau' → logprob: -2.471203088760376
    3. ' élément' → logprob: -3.221203088760376
    4. 'part' → logprob: -3.721203088760376
    5. 'element' → logprob: -4.346202850341797
    6. 'int' → logprob: -4.721202850341797
    7. ' partie' → logprob: -5.471202850341797
    8. 'elem' → logprob: -5.596202850341797
    9. 'm' → logprob: -5.721202850341797
    10. 'token' → logprob: -5.971202850341797

Token 365: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4303697943687439
    2. 'en' → logprob: -1.0553698539733887
    3. '(en' → logprob: -7.180369853973389
    4. '()' → logprob: -8.05536937713623
    5. '(' → logprob: -8.05536937713623
    6. '_en' → logprob: -9.18036937713623
    7. ')' → logprob: -9.68036937713623
    8. ' into' → logprob: -10.30536937713623
    9. 'into' → logprob: -10.93036937713623
    10. ' ' → logprob: -11.68036937713623

Token 366: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.025527367368340492
    2. ' int' → logprob: -3.7755274772644043
    3. 'ent' → logprob: -6.525527477264404
    4. ' des' → logprob: -7.525527477264404
    5. ' entier' → logprob: -9.275527000427246
    6. ' un' → logprob: -9.650527000427246
    7. 'des' → logprob: -10.400527000427246
    8. 'inte' → logprob: -10.775527000427246
    9. 'un' → logprob: -11.400527000427246
    10. '(int' → logprob: -11.650527000427246

Token 367: '.
' (ID: 558)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.022789275273680687
    2. ' A' → logprob: -4.522789478302002
    3. ',' → logprob: -5.772789478302002
    4. 's' → logprob: -6.147789478302002
    5. '()' → logprob: -6.272789478302002
    6. 'a' → logprob: -6.397789478302002
    7. 'numbers' → logprob: -6.647789478302002
    8. '(' → logprob: -7.522789478302002
    9. '(A' → logprob: -8.272789001464844
    10. '(numbers' → logprob: -9.147789001464844

Token 368: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.612634362885728e-05
    2. ' A' → logprob: -9.500076293945312
    3. 'a' → logprob: -14.375076293945312
    4. 'numbers' → logprob: -14.500076293945312
    5. '#' → logprob: -17.125076293945312
    6. 'data' → logprob: -17.250076293945312
    7. 'arr' → logprob: -17.625076293945312
    8. '
' → logprob: -18.000076293945312
    9. 'list' → logprob: -18.000076293945312
    10. 'from' → logprob: -18.375076293945312

Token 369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313265860080719
    2. '=' → logprob: -1.3132658004760742
    3. 's' → logprob: -13.313265800476074
    4. '_' → logprob: -13.563265800476074
    5. '＝' → logprob: -15.563265800476074
    6. '_list' → logprob: -15.813265800476074
    7. ' ' → logprob: -16.06326675415039
    8. ')' → logprob: -16.31326675415039
    9. '=[]' → logprob: -16.31326675415039
    10. ' ' → logprob: -16.43826675415039

Token 370: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20141440629959106
    2. ' list' → logprob: -1.7014143466949463
    3. '[list' → logprob: -14.076414108276367
    4. 'map' → logprob: -15.451414108276367
    5. '[' → logprob: -16.701414108276367
    6. '	list' → logprob: -18.451414108276367
    7. 'List' → logprob: -19.076414108276367
    8. ' [' → logprob: -19.326414108276367
    9. '=list' → logprob: -19.326414108276367
    10. ' map' → logprob: -19.326414108276367

Token 371: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ' int' → logprob: -17.5
    3. '*' → logprob: -22.0
    4. '   ' → logprob: -22.0
    5. '```' → logprob: -22.125
    6. '	int' → logprob: -22.375
    7. '(int' → logprob: -22.5
    8. 'map' → logprob: -23.0
    9. '[int' → logprob: -23.625
    10. '<int' → logprob: -23.625

Token 372: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2021607905626297
    2. '(i' → logprob: -1.7021608352661133
    3. '(s' → logprob: -7.702160835266113
    4. '(' → logprob: -9.202160835266113
    5. '(input' → logprob: -9.202160835266113
    6. '(num' → logprob: -10.452160835266113
    7. '(token' → logprob: -10.577160835266113
    8. '(a' → logprob: -10.952160835266113
    9. '(value' → logprob: -12.452160835266113
    10. 'x' → logprob: -12.452160835266113

Token 373: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020187153131701052
    2. '()' → logprob: -9.000202178955078
    3. 'for' → logprob: -10.750202178955078
    4. '())' → logprob: -11.125202178955078
    5. ' )' → logprob: -11.125202178955078
    6. '(input' → logprob: -11.500202178955078
    7. '(x' → logprob: -12.000202178955078
    8. '(' → logprob: -12.125202178955078
    9. 'input' → logprob: -12.500202178955078
    10. ' for' → logprob: -13.750202178955078

Token 374: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2562938332557678
    2. ' for' → logprob: -1.631293773651123
    3. '()' → logprob: -3.506293773651123
    4. ')' → logprob: -8.631294250488281
    5. '(i' → logprob: -10.006294250488281
    6. '(input' → logprob: -10.006294250488281
    7. '(' → logprob: -10.381294250488281
    8. '(x' → logprob: -10.506294250488281
    9. ' ' → logprob: -10.631294250488281
    10. 'in' → logprob: -11.131294250488281

Token 375: ' x' (ID: 1215)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20150835812091827
    2. ' input' → logprob: -1.7015084028244019
    3. 'x' → logprob: -9.326508522033691
    4. ' x' → logprob: -12.076508522033691
    5. '(input' → logprob: -15.951508522033691
    6. '=input' → logprob: -15.951508522033691
    7. '_input' → logprob: -16.826507568359375
    8. '	input' → logprob: -17.201507568359375
    9. 'in' → logprob: -18.201507568359375
    10. ' ' → logprob: -18.326507568359375

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03582311049103737
    2. 'in' → logprob: -3.660823106765747
    3. 'input' → logprob: -4.785823345184326
    4. '(input' → logprob: -7.285823345184326
    5. ' input' → logprob: -7.910823345184326
    6. '=input' → logprob: -9.785822868347168
    7. ',input' → logprob: -12.410822868347168
    8. 'import' → logprob: -12.410822868347168
    9. 'x' → logprob: -12.910822868347168
    10. 's' → logprob: -12.910822868347168

Token 377: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008614808320999146
    2. ' input' → logprob: -4.758615016937256
    3. '(input' → logprob: -15.383614540100098
    4. ' ' → logprob: -17.758615493774414
    5. '<input' → logprob: -17.758615493774414
    6. '   ' → logprob: -18.133615493774414
    7. '=input' → logprob: -18.133615493774414
    8. '
' → logprob: -18.633615493774414
    9. '	input' → logprob: -19.258615493774414
    10. ',input' → logprob: -19.508615493774414

Token 378: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.500000953674316
    3. ' ().' → logprob: -16.375
    4. '()].' → logprob: -22.125
    5. '(' → logprob: -23.25
    6. '()
' → logprob: -23.5
    7. '().'' → logprob: -24.125
    8. '()?.' → logprob: -24.75
    9. '.split' → logprob: -25.5
    10. '()).' → logprob: -25.75

Token 379: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011703446507453918
    2. 'strip' → logprob: -6.7511701583862305
    3. 'rstrip' → logprob: -16.001171112060547
    4. ' split' → logprob: -17.501171112060547
    5. '(split' → logprob: -18.126171112060547
    6. 'spl' → logprob: -20.251171112060547
    7. '.split' → logprob: -20.876171112060547
    8. ' strip' → logprob: -22.126171112060547
    9. '_split' → logprob: -22.751171112060547
    10. 'read' → logprob: -23.876171112060547

Token 380: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0025520040653645992
    2. '()' → logprob: -6.002552032470703
    3. '())' → logprob: -9.502552032470703
    4. '(' → logprob: -13.752552032470703
    5. '()][' → logprob: -16.377552032470703
    6. '()],' → logprob: -16.377552032470703
    7. '()].' → logprob: -16.627552032470703
    8. '()]
' → logprob: -16.627552032470703
    9. '()}' → logprob: -16.877552032470703
    10. '('' → logprob: -17.252552032470703

Token 381: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13067243993282318
    2. '<|end|>' → logprob: -2.2556724548339844
    3. '#' → logprob: -5.005672454833984
    4. 'print' → logprob: -5.255672454833984
    5. 'if' → logprob: -6.755672454833984
    6. 'assert' → logprob: -7.005672454833984
    7. '  
' → logprob: -7.630672454833984
    8. '
' → logprob: -7.755672454833984
    9. 'g' → logprob: -7.880672454833984
    10. 'n' → logprob: -8.130672454833984

Token 382: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6381368041038513
    2. 'print' → logprob: -2.388136863708496
    3. 'max' → logprob: -2.763136863708496
    4. 'M' → logprob: -2.888136863708496
    5. 'k' → logprob: -3.388136863708496
    6. 'from' → logprob: -3.638136863708496
    7. 'm' → logprob: -3.638136863708496
    8. 'l' → logprob: -3.888136863708496
    9. 't' → logprob: -4.013136863708496
    10. 'K' → logprob: -4.263136863708496

Token 383: ' Util' (ID: 13564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7571656107902527
    2. '#' → logprob: -1.6321656703948975
    3. 'result' → logprob: -2.3821656703948975
    4. 'assert' → logprob: -3.3821656703948975
    5. 't' → logprob: -3.5071656703948975
    6. 'max' → logprob: -3.6321656703948975
    7. 'for' → logprob: -3.8821656703948975
    8. 'total' → logprob: -4.007165431976318
    9. 'sum' → logprob: -4.132165431976318
    10. 'count' → logprob: -4.507165431976318

Token 384: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.7148187160491943
    2. 'ise' → logprob: -1.3398187160491943
    3. 's' → logprob: -1.7148187160491943
    4. 'ser' → logprob: -3.2148187160491943
    5. '#' → logprob: -5.339818954467773
    6. 'isez' → logprob: -5.464818954467773
    7. 'iser' → logprob: -5.964818954467773
    8. 'ze' → logprob: -6.089818954467773
    9. 'ses' → logprob: -6.089818954467773
    10. 'er' → logprob: -6.589818954467773

Token 385: ' une' (ID: 2463)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.8478575348854065
    2. 'list' → logprob: -1.5978574752807617
    3. 'A' → logprob: -2.2228574752807617
    4. ' map' → logprob: -2.2228574752807617
    5. 'input' → logprob: -2.7228574752807617
    6. 'split' → logprob: -3.0978574752807617
    7. ' list' → logprob: -4.222857475280762
    8. ' input' → logprob: -5.222857475280762
    9. '<|end|>' → logprob: -5.222857475280762
    10. ' A' → logprob: -5.472857475280762

Token 386: ' compréhension' (ID: 142333)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8024439811706543
    2. 'map' → logprob: -0.8024439811706543
    3. ' list' → logprob: -3.1774439811706543
    4. 'for' → logprob: -3.5524439811706543
    5. ' map' → logprob: -4.552443981170654
    6. 'range' → logprob: -4.802443981170654
    7. ' for' → logprob: -5.927443981170654
    8. ']' → logprob: -6.427443981170654
    9. 'import' → logprob: -6.552443981170654
    10. ')' → logprob: -7.052443981170654

Token 387: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2378792762756348
    2. 'de' → logprob: -1.2378792762756348
    3. 'list' → logprob: -1.7378792762756348
    4. 'pour' → logprob: -2.7378792762756348
    5. 'liste' → logprob: -2.8628792762756348
    6. '[]' → logprob: -3.3628792762756348
    7. ' de' → logprob: -3.9878792762756348
    8. ' pour' → logprob: -5.237879276275635
    9. 'for' → logprob: -5.612879276275635

Token 388: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.48009881377220154
    2. 'list' → logprob: -0.9800988435745239
    3. ' liste' → logprob: -5.230098724365234
    4. 'la' → logprob: -8.105098724365234
    5. 'lista' → logprob: -9.105098724365234
    6. ' list' → logprob: -9.855098724365234
    7. 'x' → logprob: -9.980098724365234
    8. 'lst' → logprob: -10.480098724365234
    9. 'l' → logprob: -10.605098724365234
    10. 'A' → logprob: -10.855098724365234

Token 389: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5311371088027954
    2. '<|end|>' → logprob: -1.6561371088027954
    3. ']' → logprob: -1.7811371088027954
    4. '()]' → logprob: -3.156136989593506
    5. ')' → logprob: -5.906136989593506
    6. '<|end|>' → logprob: -6.031136989593506
    7. '(' → logprob: -6.406136989593506
    8. ']()' → logprob: -6.906136989593506
    9. '#' → logprob: -7.531136989593506
    10. ' ]' → logprob: -8.031137466430664

Token 390: ' traiter' (ID: 105852)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5251195430755615
    2. 'map' → logprob: -1.5251195430755615
    3. ' créer' → logprob: -1.7751195430755615
    4. 'cr' → logprob: -1.9001195430755615
    5. 'contin' → logprob: -3.1501195430755615
    6. ' lire' → logprob: -3.2751195430755615
    7. 'convert' → logprob: -3.9001195430755615
    8. ' A' → logprob: -4.150119781494141
    9. 'parse' → logprob: -4.150119781494141
    10. ' construire' → logprob: -4.275119781494141

Token 391: ' chaque' (ID: 21194)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.419131338596344
    2. 'x' → logprob: -1.7941312789916992
    3. 'la' → logprob: -3.544131278991699
    4. ' chaque' → logprob: -3.669131278991699
    5. ' A' → logprob: -3.794131278991699
    6. '<|end|>' → logprob: -3.919131278991699
    7. 'l' → logprob: -4.169131278991699
    8. 'input' → logprob: -4.294131278991699
    9. 'each' → logprob: -4.419131278991699
    10. ' la' → logprob: -4.544131278991699

Token 392: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.018647458404302597
    2. ' élément' → logprob: -4.89364767074585
    3. 'x' → logprob: -5.14364767074585
    4. 'token' → logprob: -6.64364767074585
    5. ' x' → logprob: -6.64364767074585
    6. 'element' → logprob: -7.14364767074585
    7. ' morceau' → logprob: -7.14364767074585
    8. ' token' → logprob: -7.89364767074585
    9. 'entrée' → logprob: -8.518647193908691
    10. ' element' → logprob: -8.643647193908691

Token 393: ' sépar' (ID: 97160)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10214053839445114
    2. '<|end|>' → logprob: -2.852140426635742
    3. ']' → logprob: -4.352140426635742
    4. '()]' → logprob: -4.852140426635742
    5. '.' → logprob: -5.227140426635742
    6. ')' → logprob: -5.352140426635742
    7. 'A' → logprob: -5.602140426635742
    8. '<|end|>' → logprob: -7.602140426635742
    9. ' de' → logprob: -7.727140426635742
    10. '().' → logprob: -7.727140426635742

Token 394: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.018061086535453796
    2. ' par' → logprob: -5.01806116104126
    3. 'par' → logprob: -5.01806116104126
    4. 'és' → logprob: -6.01806116104126
    5. 'er' → logprob: -7.01806116104126
    6. 'ée' → logprob: -7.39306116104126
    7. 'e' → logprob: -8.268060684204102
    8. 'ateur' → logprob: -8.893060684204102
    9. 'ément' → logprob: -9.268060684204102
    10. '�' → logprob: -10.143060684204102

Token 395: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.08252748847007751
    2. 'par' → logprob: -2.9575273990631104
    3. '<|end|>' → logprob: -4.3325276374816895
    4. '()' → logprob: -5.5825276374816895
    5. ' by' → logprob: -5.5825276374816895
    6. 'by' → logprob: -5.7075276374816895
    7. ')' → logprob: -6.8325276374816895
    8. 'es' → logprob: -7.4575276374816895
    9. '('' → logprob: -8.582527160644531
    10. ' ' → logprob: -8.707527160644531

Token 396: ' un' (ID: 537)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.2595516443252563
    2. 'es' → logprob: -1.3845516443252563
    3. ''espace' → logprob: -2.384551525115967
    4. 'un' → logprob: -2.509551525115967
    5. ' des' → logprob: -2.634551525115967
    6. ''' → logprob: -2.634551525115967
    7. 'esp' → logprob: -3.134551525115967
    8. ' espace' → logprob: -3.634551525115967
    9. ' un' → logprob: -3.634551525115967
    10. ''un' → logprob: -3.884551525115967

Token 397: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.14027567207813263
    2. ''espace' → logprob: -2.265275716781616
    3. ' espace' → logprob: -3.890275716781616
    4. 'esp' → logprob: -5.765275478363037
    5. '’espace' → logprob: -6.515275478363037
    6. ''esp' → logprob: -6.890275478363037
    7. 'space' → logprob: -7.265275478363037
    8. ''' → logprob: -8.640275955200195
    9. ' '' → logprob: -10.265275955200195
    10. ' espaces' → logprob: -10.265275955200195

Token 398: '.

' (ID: 364)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021310284733772278
    2. ')' → logprob: -4.646310329437256
    3. '<|end|>' → logprob: -5.271310329437256
    4. 'if' → logprob: -6.396310329437256
    5. '()]' → logprob: -6.771310329437256
    6. '#' → logprob: -6.771310329437256
    7. 'A' → logprob: -7.646310329437256
    8. '.' → logprob: -7.771310329437256
    9. '()' → logprob: -7.771310329437256
    10. 'print' → logprob: -7.896310329437256

Token 399: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3919931650161743
    2. 'result' → logprob: -2.0169930458068848
    3. 'print' → logprob: -2.1419930458068848
    4. '#' → logprob: -2.5169930458068848
    5. 'import' → logprob: -2.5169930458068848
    6. 'M' → logprob: -2.6419930458068848
    7. 'm' → logprob: -3.1419930458068848
    8. 'max' → logprob: -3.3919930458068848
    9. 'total' → logprob: -3.6419930458068848
    10. 'l' → logprob: -4.141993045806885

Token 400: ' Déf' (ID: 180635)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.115547776222229
    2. 'from' → logprob: -1.240547776222229
    3. 'print' → logprob: -1.740547776222229
    4. 'import' → logprob: -3.6155476570129395
    5. 'm' → logprob: -3.7405476570129395
    6. 'l' → logprob: -3.7405476570129395
    7. 'total' → logprob: -4.1155476570129395
    8. 'answer' → logprob: -4.2405476570129395
    9. 'max' → logprob: -4.3655476570129395
    10. 'def' → logprob: -4.3655476570129395

Token 401: 'init' (ID: 3287)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.34720414876937866
    2. 'inir' → logprob: -1.5972042083740234
    3. 'in' → logprob: -3.3472042083740234
    4. 'inie' → logprob: -4.097204208374023
    5. 'init' → logprob: -4.222204208374023
    6. 'inis' → logprob: -4.597204208374023
    7. 'ine' → logprob: -5.097204208374023
    8. 'inic' → logprob: -5.722204208374023
    9. '```' → logprob: -6.722204208374023
    10. 'ini' → logprob: -7.222204208374023

Token 402: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009104225784540176
    2. ' def' → logprob: -5.259104251861572
    3. 'a' → logprob: -6.384104251861572
    4. ' a' → logprob: -7.134104251861572
    5. ' une' → logprob: -7.384104251861572
    6. ' la' → logprob: -8.009103775024414
    7. 'une' → logprob: -9.259103775024414
    8. '_' → logprob: -9.759103775024414
    9. 'n' → logprob: -9.759103775024414
    10. 't' → logprob: -10.384103775024414

Token 403: ' variable' (ID: 11076)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08223129063844681
    2. 'fonction' → logprob: -3.957231283187866
    3. '#' → logprob: -4.207231521606445
    4. 'val' → logprob: -4.332231521606445
    5. 'variable' → logprob: -4.832231521606445
    6. 'function' → logprob: -5.457231521606445
    7. 'const' → logprob: -6.082231521606445
    8. 'div' → logprob: -6.207231521606445
    9. 'condition' → logprob: -6.207231521606445
    10. 'from' → logprob: -6.832231521606445

Token 404: ' '' (ID: 461)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.3109550476074219
    2. 'result' → logprob: -1.8109550476074219
    3. ' max' → logprob: -2.560955047607422
    4. 'max' → logprob: -2.560955047607422
    5. 'answer' → logprob: -2.685955047607422
    6. ' answer' → logprob: -3.435955047607422
    7. 'ans' → logprob: -3.685955047607422
    8. 'count' → logprob: -3.685955047607422
    9. ' ans' → logprob: -4.060955047607422
    10. 'k' → logprob: -4.060955047607422

Token 405: 'mod' (ID: 4847)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4638291895389557
    2. 'res' → logprob: -2.838829278945923
    3. 'max' → logprob: -3.088829278945923
    4. 'ans' → logprob: -3.088829278945923
    5. 'count' → logprob: -3.338829278945923
    6. 'answer' → logprob: -3.463829278945923
    7. 'min' → logprob: -3.963829278945923
    8. 'l' → logprob: -3.963829278945923
    9. 'div' → logprob: -4.088829040527344
    10. 'total' → logprob: -4.588829040527344

Token 406: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02512078545987606
    2. '=' → logprob: -4.025120735168457
    3. 'ule' → logprob: -5.400120735168457
    4. 'ulo' → logprob: -6.900120735168457
    5. 'ulus' → logprob: -7.275120735168457
    6. 'ULO' → logprob: -7.525120735168457
    7. 'e' → logprob: -9.900120735168457
    8. 'ulaire' → logprob: -10.650120735168457
    9. 'u' → logprob: -10.775120735168457
    10. '_val' → logprob: -11.150120735168457

Token 407: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026341866701841354
    2. '=' → logprob: -3.6513419151306152
    3. ' ' → logprob: -10.151341438293457
    4. ' =
' → logprob: -13.526341438293457
    5. 'mod' → logprob: -14.526341438293457
    6. ' ,' → logprob: -15.651341438293457
    7. 'space' → logprob: -16.151342391967773
    8. ' ' → logprob: -16.276342391967773
    9. ' ="' → logprob: -16.401342391967773
    10. ',' → logprob: -16.651342391967773

Token 408: ' la' (ID: 557)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014392548240721226
    2. ' ' → logprob: -4.264392375946045
    3. '100' → logprob: -8.389392852783203
    4. '1' → logprob: -14.014392852783203
    5. ' =' → logprob: -14.889392852783203
    6. ' (' → logprob: -16.014392852783203
    7. '=' → logprob: -16.139392852783203
    8. 'mod' → logprob: -16.514392852783203
    9. '998' → logprob: -16.639392852783203
    10. ' ' → logprob: -17.014392852783203

Token 409: ' valeur' (ID: 41664)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0069947815500199795
    2. '100' → logprob: -5.256994724273682
    3. ' ' → logprob: -6.381994724273682
    4. '=' → logprob: -10.25699520111084
    5. ' =' → logprob: -10.75699520111084
    6. 'mod' → logprob: -12.75699520111084
    7. '1' → logprob: -13.38199520111084
    8. ' value' → logprob: -13.63199520111084
    9. '998' → logprob: -13.75699520111084
    10. 'value' → logprob: -14.25699520111084

Token 410: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3887382745742798
    2. '=' → logprob: -1.1387382745742798
    3. '10' → logprob: -6.63873815536499
    4. '100' → logprob: -7.63873815536499
    5. ' ' → logprob: -9.888738632202148
    6. '998' → logprob: -11.263738632202148
    7. '1' → logprob: -12.013738632202148
    8. '999' → logprob: -12.513738632202148
    9. ',' → logprob: -15.513738632202148
    10. '%=' → logprob: -15.513738632202148

Token 411: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6948909759521484
    2. '100' → logprob: -0.6948909759521484
    3. '998' → logprob: -6.444890975952148
    4. '(' → logprob: -9.069890975952148
    5. '1' → logprob: -10.694890975952148
    6. '=' → logprob: -12.069890975952148
    7. ' ' → logprob: -12.319890975952148
    8. '999' → logprob: -12.694890975952148
    9. '123' → logprob: -14.069890975952148
    10. 'pow' → logprob: -15.194890975952148

Token 412: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0001439459010725841
    2. ' **' → logprob: -9.500144004821777
    3. '000' → logprob: -10.000144004821777
    4. '9' → logprob: -10.875144004821777
    5. '00' → logprob: -13.125144004821777
    6. '0' → logprob: -13.875144004821777
    7. '```' → logprob: -14.125144004821777
    8. '^' → logprob: -15.125144004821777
    9. ' ' → logprob: -15.125144004821777
    10. '7' → logprob: -16.25014305114746

Token 413: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.250000953674316
    3. '09' → logprob: -15.375000953674316
    4. '```' → logprob: -15.375000953674316
    5. '+' → logprob: -17.375
    6. '=' → logprob: -19.25
    7. '^' → logprob: -19.5
    8. '
' → logprob: -19.75
    9. '９' → logprob: -19.875
    10. '``' → logprob: -20.0

Token 414: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024882610887289047
    2. ' +' → logprob: -6.002488136291504
    3. '9' → logprob: -11.502488136291504
    4. ' ' → logprob: -14.377488136291504
    5. '7' → logprob: -14.502488136291504
    6. '+
' → logprob: -14.752488136291504
    7. '=' → logprob: -15.127488136291504
    8. ' ' → logprob: -15.377488136291504
    9. '**' → logprob: -16.00248908996582
    10. '\xe2\x81' → logprob: -16.12748908996582

Token 415: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.020705843344330788
    2. '9' → logprob: -3.8957059383392334
    3. ' ' → logprob: -8.770706176757812
    4. '+' → logprob: -12.145706176757812
    5. '```' → logprob: -12.645706176757812
    6. '=' → logprob: -16.395706176757812
    7. ' +' → logprob: -17.145706176757812
    8. ' ' → logprob: -17.333206176757812
    9. '   ' → logprob: -17.645706176757812
    10. '  ' → logprob: -17.895706176757812

Token 416: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.531315314830863e-06
    2. '+' → logprob: -13.250003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '9' → logprob: -15.125003814697266
    5. '```' → logprob: -17.750003814697266
    6. ' +' → logprob: -18.000003814697266
    7. '07' → logprob: -19.750003814697266
    8. '=' → logprob: -20.125003814697266
    9. '' → logprob: -20.562503814697266
    10. ' ' → logprob: -20.625003814697266

Token 417: ',' (ID: 11)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0009295677882619202
    2. '=' → logprob: -7.250929355621338
    3. ' =' → logprob: -8.500929832458496
    4. ' mod' → logprob: -11.625929832458496
    5. '_mod' → logprob: -12.250929832458496
    6. '
' → logprob: -13.125929832458496
    7. '=
' → logprob: -15.500929832458496
    8. 'Mod' → logprob: -16.37592887878418
    9. ' =
' → logprob: -16.62592887878418
    10. '(mod' → logprob: -16.62592887878418

Token 418: ' un' (ID: 537)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.006087342277169228
    2. ' mod' → logprob: -5.131087303161621
    3. ' 
' → logprob: -9.506087303161621
    4. ' =' → logprob: -10.631087303161621
    5. '_mod' → logprob: -10.881087303161621
    6. '=' → logprob: -11.006087303161621
    7. ' ' → logprob: -12.006087303161621
    8. '  
' → logprob: -12.381087303161621
    9. '
' → logprob: -12.506087303161621
    10. ' modulo' → logprob: -12.881087303161621

Token 419: ' nombre' (ID: 9733)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.4287314713001251
    2. 'mod' → logprob: -1.5537314414978027
    3. ' modulus' → logprob: -3.1787314414978027
    4. ' ' → logprob: -3.5537314414978027
    5. ' space' → logprob: -4.053731441497803
    6. ' modulo' → logprob: -4.303731441497803
    7. '<|end|>' → logprob: -4.303731441497803
    8. ' espace' → logprob: -4.678731441497803
    9. 'space' → logprob: -5.178731441497803
    10. ' =' → logprob: -6.303731441497803

Token 420: ' premier' (ID: 15506)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -1.0631245374679565
    2. ' =' → logprob: -1.3131245374679565
    3. 'mod' → logprob: -1.4381245374679565
    4. '=' → logprob: -1.9381245374679565
    5. '_mod' → logprob: -6.188124656677246
    6. ' modulo' → logprob: -6.438124656677246
    7. ' modulus' → logprob: -7.688124656677246
    8. ' ' → logprob: -10.313124656677246
    9. 'modifiable' → logprob: -10.563124656677246
    10. '_' → logprob: -10.688124656677246

Token 421: ' fré' (ID: 52465)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01397731900215149
    2. '=' → logprob: -5.138977527618408
    3. ' mod' → logprob: -5.388977527618408
    4. ' =' → logprob: -5.888977527618408
    5. '_mod' → logprob: -7.513977527618408
    6. '
' → logprob: -9.38897705078125
    7. '(mod' → logprob: -10.76397705078125
    8. 'MOD' → logprob: -12.13897705078125
    9. 'Mod' → logprob: -12.38897705078125
    10. ',' → logprob: -12.63897705078125

Token 422: 'quem' (ID: 43507)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.7736979722976685
    2. '=' → logprob: -1.6486979722976685
    3. ' =' → logprob: -1.6486979722976685
    4. ' modulo' → logprob: -3.023697853088379
    5. ' mod' → logprob: -3.773697853088379
    6. 'u' → logprob: -3.898697853088379
    7. ')' → logprob: -5.148697853088379
    8. '+' → logprob: -5.523697853088379
    9. 'é' → logprob: -5.773697853088379
    10. 'e' → logprob: -5.898697853088379

Token 423: 'ment' (ID: 508)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0207720585167408
    2. 'mod' → logprob: -4.6457719802856445
    3. 'ment' → logprob: -5.5207719802856445
    4. 't' → logprob: -6.3957719802856445
    5. 'ents' → logprob: -6.5207719802856445
    6. ' mod' → logprob: -7.1457719802856445
    7. 'od' → logprob: -7.2707719802856445
    8. '_mod' → logprob: -7.5207719802856445
    9. 'nt' → logprob: -7.6457719802856445
    10. 'ented' → logprob: -7.8957719802856445

Token 424: ' utilisé' (ID: 53138)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.06036452203989029
    2. ' mod' → logprob: -3.4353644847869873
    3. '=' → logprob: -4.185364723205566
    4. ' modulo' → logprob: -5.810364723205566
    5. ' utilisé' → logprob: -5.935364723205566
    6. ' =' → logprob: -5.935364723205566
    7. '```' → logprob: -7.185364723205566
    8. '_mod' → logprob: -7.310364723205566
    9. 'used' → logprob: -7.435364723205566
    10. ' used' → logprob: -7.810364723205566

Token 425: ' pour' (ID: 1930)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1339232474565506
    2. ' =' → logprob: -2.633923292160034
    3. ' mod' → logprob: -3.508923292160034
    4. '=' → logprob: -3.758923292160034
    5. '_mod' → logprob: -8.258923530578613
    6. '
' → logprob: -11.258923530578613
    7. ' modulo' → logprob: -11.383923530578613
    8. 'MOD' → logprob: -12.383923530578613
    9. '(mod' → logprob: -12.508923530578613
    10. 'Mod' → logprob: -12.633923530578613

Token 426: ' prendre' (ID: 24257)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.7002410292625427
    2. ' mod' → logprob: -1.3252410888671875
    3. ' ' → logprob: -1.9502410888671875
    4. ' modulo' → logprob: -3.2002410888671875
    5. '100' → logprob: -4.0752410888671875
    6. '998' → logprob: -4.3252410888671875
    7. ' modulus' → logprob: -4.4502410888671875
    8. '10' → logprob: -5.0752410888671875
    9. ' MOD' → logprob: -6.7002410888671875
    10. '123' → logprob: -6.8252410888671875

Token 427: ' des' (ID: 731)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6601594090461731
    2. 'mod' → logprob: -1.4101593494415283
    3. ' modulo' → logprob: -1.7851593494415283
    4. ' modulus' → logprob: -3.7851593494415283
    5. ' ' → logprob: -4.035159587860107
    6. '10' → logprob: -4.535159587860107
    7. '<|end|>' → logprob: -4.910159587860107
    8. '100' → logprob: -5.410159587860107
    9. ')' → logprob: -5.660159587860107
    10. ' )' → logprob: -7.285159587860107

Token 428: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.42476141452789307
    2. ' modulo' → logprob: -1.549761414527893
    3. ' mod' → logprob: -2.4247612953186035
    4. ' modulus' → logprob: -3.5497612953186035
    5. '100' → logprob: -4.7997612953186035
    6. '10' → logprob: -5.6747612953186035
    7. ' ' → logprob: -7.0497612953186035
    8. ' modular' → logprob: -7.5497612953186035
    9. '998' → logprob: -7.6747612953186035
    10. 'mods' → logprob: -7.7997612953186035

Token 429: ' dans' (ID: 2671)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5577669143676758
    2. '(' → logprob: -1.1827669143676758
    3. ' ' → logprob: -2.557766914367676
    4. '=' → logprob: -4.182766914367676
    5. ' =' → logprob: -4.682766914367676
    6. '1' → logprob: -5.682766914367676
    7. '<|end|>' → logprob: -5.682766914367676
    8. 'mod' → logprob: -5.807766914367676
    9. '(mod' → logprob: -6.432766914367676
    10. ' mod' → logprob: -7.182766914367676

Token 430: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3932725191116333
    2. ' code' → logprob: -2.8932723999023438
    3. ' l' → logprob: -3.2682723999023438
    4. ' competitive' → logprob: -3.2682723999023438
    5. ' programming' → logprob: -3.2682723999023438
    6. '100' → logprob: -3.7682723999023438
    7. ' la' → logprob: -4.018272399902344
    8. 'l' → logprob: -4.143272399902344
    9. ' des' → logprob: -4.268272399902344
    10. ' ' → logprob: -4.393272399902344

Token 431: ' problèmes' (ID: 49822)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.9505295753479004
    2. ' calculations' → logprob: -1.5755295753479004
    3. ' code' → logprob: -1.9505295753479004
    4. 'code' → logprob: -2.4505295753479004
    5. 'calcul' → logprob: -2.8255295753479004
    6. '10' → logprob: -3.7005295753479004
    7. ' modulo' → logprob: -3.7005295753479004
    8. ' mod' → logprob: -4.0755295753479
    9. ' computations' → logprob: -4.5755295753479
    10. ')' → logprob: -5.5755295753479

Token 432: ' de' (ID: 334)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.05239073559641838
    2. ' mod' → logprob: -3.0523908138275146
    3. '_mod' → logprob: -6.5523905754089355
    4. ' modulo' → logprob: -6.5523905754089355
    5. ' =' → logprob: -7.6773905754089355
    6. '=' → logprob: -8.927391052246094
    7. ' modulus' → logprob: -9.052391052246094
    8. 'MOD' → logprob: -9.177391052246094
    9. ' MOD' → logprob: -10.177391052246094
    10. '(mod' → logprob: -10.427391052246094

Token 433: ' programmation' (ID: 166376)
  Prédit: ' programmation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programmation' → logprob: -1.082658290863037
    2. ' code' → logprob: -1.457658290863037
    3. 'mod' → logprob: -2.582658290863037
    4. '```' → logprob: -2.707658290863037
    5. '100' → logprob: -2.957658290863037
    6. ' mod' → logprob: -3.082658290863037
    7. 'code' → logprob: -3.332658290863037
    8. ' modulo' → logprob: -3.582658290863037
    9. ' programming' → logprob: -3.707658290863037
    10. '998' → logprob: -4.332658290863037

Token 434: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.775511622428894
    2. ' =' → logprob: -1.150511622428894
    3. 'mod' → logprob: -1.775511622428894
    4. ' mod' → logprob: -3.2755117416381836
    5. ' ' → logprob: -5.025511741638184
    6. ')' → logprob: -5.775511741638184
    7. '_mod' → logprob: -6.400511741638184
    8. '(mod' → logprob: -6.900511741638184
    9. ' )' → logprob: -7.275511741638184
    10. '(' → logprob: -7.400511741638184

Token 435: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.292907877039397e-06
    2. '
' → logprob: -12.75000286102295
    3. ' mod' → logprob: -14.87500286102295
    4. 'MOD' → logprob: -18.750003814697266
    5. '_mod' → logprob: -18.875003814697266
    6. '	mod' → logprob: -19.625003814697266
    7. '```' → logprob: -20.500003814697266
    8. ' 
' → logprob: -21.125003814697266
    9. 'Mod' → logprob: -21.250003814697266
    10. '

' → logprob: -21.250003814697266

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192946195602417
    2. '=' → logprob: -1.501929521560669
    3. '=int' → logprob: -15.75192928314209
    4. ' =
' → logprob: -16.626930236816406
    5. '＝' → logprob: -16.876930236816406
    6. ' ' → logprob: -17.251930236816406
    7. ')' → logprob: -17.876930236816406
    8. ' ' → logprob: -18.251930236816406
    9. ',' → logprob: -18.501930236816406
    10. '=
' → logprob: -18.501930236816406

Token 437: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08995582163333893
    2. '100' → logprob: -2.8399558067321777
    3. ' ' → logprob: -3.5899558067321777
    4. '1' → logprob: -14.714956283569336
    5. '(' → logprob: -15.839956283569336
    6. 'int' → logprob: -17.464956283569336
    7. ' ' → logprob: -17.589956283569336
    8. '109' → logprob: -18.839956283569336
    9. '   ' → logprob: -19.214956283569336
    10. '  ' → logprob: -19.339956283569336

Token 438: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1602250337600708
    2. '100' → logprob: -1.9102250337600708
    3. ' ' → logprob: -14.160224914550781
    4. '(' → logprob: -16.16022491455078
    5. '1' → logprob: -17.66022491455078
    6. 'int' → logprob: -18.78522491455078
    7. '109' → logprob: -20.28522491455078
    8. '```' → logprob: -20.28522491455078
    9. '１０' → logprob: -20.66022491455078
    10. '１００' → logprob: -21.66022491455078

Token 439: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.43063637614250183
    2. '9' → logprob: -1.0556364059448242
    3. '+' → logprob: -7.305636405944824
    4. ' ' → logprob: -7.680636405944824
    5. '000' → logprob: -8.055636405944824
    6. ' **' → logprob: -8.055636405944824
    7. '09' → logprob: -9.430636405944824
    8. '*' → logprob: -10.305636405944824
    9. '^' → logprob: -11.180636405944824
    10. '=' → logprob: -11.555636405944824

Token 440: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '09' → logprob: -20.125
    4. '９' → logprob: -22.75
    5. '+' → logprob: -23.25
    6. '```' → logprob: -23.875
    7. '۹' → logprob: -24.875
    8. '   ' → logprob: -26.125
    9. '^' → logprob: -26.625
    10. '=' → logprob: -26.75

Token 441: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.875
    3. ' ' → logprob: -19.375
    4. '```' → logprob: -21.375
    5. '９' → logprob: -21.375
    6. '+' → logprob: -23.875
    7. '
' → logprob: -24.125
    8. '   ' → logprob: -24.875
    9. '۹' → logprob: -24.875
    10. '``' → logprob: -25.125

Token 442: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014164221473038197
    2. ' +' → logprob: -4.264164447784424
    3. '7' → logprob: -14.389163970947266
    4. '＋' → logprob: -16.764163970947266
    5. '+
' → logprob: -16.889163970947266
    6. ' plus' → logprob: -17.514163970947266
    7. ' ' → logprob: -17.639163970947266
    8. ' ' → logprob: -17.764163970947266
    9. 'plus' → logprob: -19.139163970947266
    10. ' +
' → logprob: -19.264163970947266

Token 443: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '07' → logprob: -20.75
    4. '۷' → logprob: -22.375
    5. '７' → logprob: -22.625
    6. '```' → logprob: -23.25
    7. '007' → logprob: -23.75
    8. '٧' → logprob: -23.875
    9. '' → logprob: -24.0
    10. '७' → logprob: -24.0

Token 444: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -20.75
    3. '۷' → logprob: -22.25
    4. '７' → logprob: -23.625
    5. '৭' → logprob: -23.75
    6. '٧' → logprob: -23.875
    7. '७' → logprob: -24.0
    8. '77' → logprob: -24.375
    9. ' ' → logprob: -25.375
    10. '007' → logprob: -25.625

Token 445: ' ' (ID: 220)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5031612515449524
    2. 'def' → logprob: -1.5031611919403076
    3. 'l' → logprob: -2.6281611919403076
    4. 'result' → logprob: -2.6281611919403076
    5. 'import' → logprob: -4.628161430358887
    6. '#' → logprob: -4.753161430358887
    7. 't' → logprob: -5.753161430358887
    8. 'res' → logprob: -6.378161430358887
    9. 'answer' → logprob: -7.128161430358887
    10. 'total' → logprob: -7.378161430358887

Token 446: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5881791114807129
    2. 'def' → logprob: -1.463179111480713
    3. 'l' → logprob: -2.088179111480713
    4. 'result' → logprob: -2.963179111480713
    5. '#' → logprob: -4.213179111480713
    6. 'import' → logprob: -4.338179111480713
    7. 't' → logprob: -6.088179111480713
    8. 'res' → logprob: -6.338179111480713
    9. 'answer' → logprob: -6.588179111480713
    10. 'for' → logprob: -6.713179111480713

Token 447: ' Cela' (ID: 44403)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6069958209991455
    2. 'l' → logprob: -1.3569958209991455
    3. 'result' → logprob: -2.4819958209991455
    4. 'import' → logprob: -3.4819958209991455
    5. 'total' → logprob: -3.7319958209991455
    6. 'def' → logprob: -4.231995582580566
    7. 'answer' → logprob: -4.481995582580566
    8. '#' → logprob: -4.731995582580566
    9. 'ans' → logprob: -4.856995582580566
    10. 'sum' → logprob: -5.731995582580566

Token 448: ' év' (ID: 23692)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.4748135507106781
    2. '#' → logprob: -1.5998135805130005
    3. 'sert' → logprob: -2.974813461303711
    4. ' est' → logprob: -3.349813461303711
    5. 'mod' → logprob: -3.724813461303711
    6. ' #' → logprob: -4.349813461303711
    7. ' mod' → logprob: -4.724813461303711
    8. ' sert' → logprob: -4.849813461303711
    9. 'serv' → logprob: -5.224813461303711
    10. 's' → logprob: -5.224813461303711

Token 449: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.01065148413181305
    2. 'ale' → logprob: -6.010651588439941
    3. 'ient' → logprob: -6.010651588439941
    4. 'al' → logprob: -7.135651588439941
    5. 'alue' → logprob: -7.635651588439941
    6. 'é' → logprob: -7.635651588439941
    7. 'iter' → logprob: -8.010651588439941
    8. 'ève' → logprob: -8.010651588439941
    9. 'ité' → logprob: -8.260651588439941
    10. 'ér' → logprob: -8.385651588439941

Token 450: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.41664090752601624
    2. 'les' → logprob: -1.1666408777236938
    3. 'des' → logprob: -4.166640758514404
    4. ' des' → logprob: -5.166640758514404
    5. 'l' → logprob: -6.166640758514404
    6. 'overflow' → logprob: -6.291640758514404
    7. ' overflow' → logprob: -6.416640758514404
    8. 'd' → logprob: -6.791640758514404
    9. ' l' → logprob: -8.291641235351562
    10. 'le' → logprob: -8.416641235351562

Token 451: ' déb' (ID: 37874)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.01635117270052433
    2. 'integer' → logprob: -5.516351222991943
    3. 'import' → logprob: -5.766351222991943
    4. ' overflow' → logprob: -5.766351222991943
    5. 'over' → logprob: -6.516351222991943
    6. 'dé' → logprob: -6.641351222991943
    7. 'pro' → logprob: -7.016351222991943
    8. 'ent' → logprob: -7.891351222991943
    9. 'rés' → logprob: -8.141350746154785
    10. 'val' → logprob: -8.391350746154785

Token 452: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.12621228396892548
    2. 'ords' → logprob: -2.2512123584747314
    3. 'bord' → logprob: -6.251212120056152
    4. 'or' → logprob: -6.751212120056152
    5. 'f' → logprob: -6.751212120056152
    6. 'orts' → logprob: -7.001212120056152
    7. 'ors' → logprob: -7.126212120056152
    8. 'uts' → logprob: -7.126212120056152
    9. 't' → logprob: -7.126212120056152
    10. '_mod' → logprob: -7.501212120056152

Token 453: 'ements' (ID: 4507)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.014053969644010067
    2. '```' → logprob: -5.514053821563721
    3. 'orde' → logprob: -5.764053821563721
    4. ' overflow' → logprob: -6.764053821563721
    5. 'or' → logprob: -7.014053821563721
    6. 'orf' → logprob: -7.264053821563721
    7. 'ort' → logprob: -7.514053821563721
    8. 'overflow' → logprob: -7.514053821563721
    9. 'orm' → logprob: -7.639053821563721
    10. '+' → logprob: -7.764053821563721

Token 454: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: ''ent' (ID: 53422)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8755015730857849
    2. 'int' → logprob: -1.5005016326904297
    3. 'ent' → logprob: -2.2505016326904297
    4. 'inte' → logprob: -2.8755016326904297
    5. 'integer' → logprob: -3.0005016326904297
    6. '19' → logprob: -4.25050163269043
    7. '整数' → logprob: -4.37550163269043
    8. '2' → logprob: -4.37550163269043
    9. '10' → logprob: -4.50050163269043
    10. '32' → logprob: -4.62550163269043

Token 456: 'iers' (ID: 11012)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.6067652106285095
    2. 'iers' → logprob: -0.9817652106285095
    3. 'er' → logprob: -3.7317652702331543
    4. 'ropy' → logprob: -4.356765270233154
    5. 'rop' → logprob: -4.856765270233154
    6. ' overflow' → logprob: -5.106765270233154
    7. 'ire' → logprob: -5.106765270233154
    8. 'ière' → logprob: -5.106765270233154
    9. 'ières' → logprob: -5.356765270233154
    10. 'irer' → logprob: -5.981765270233154

Token 457: ' lors' (ID: 15456)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7615562677383423
    2. '#' → logprob: -1.5115562677383423
    3. 'def' → logprob: -2.3865561485290527
    4. '
' → logprob: -3.0115561485290527
    5. '(' → logprob: -3.2615561485290527
    6. '.' → logprob: -3.2615561485290527
    7. 'for' → logprob: -3.3865561485290527
    8. '<|end|>' → logprob: -4.761556148529053
    9. 'from' → logprob: -5.011556148529053
    10. 'A' → logprob: -5.261556148529053

Token 458: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4173095226287842
    2. 'des' → logprob: -1.2923095226287842
    3. ' de' → logprob: -3.167309522628784
    4. 'de' → logprob: -3.792309522628784
    5. 'd' → logprob: -7.417309761047363
    6. ' du' → logprob: -7.667309761047363
    7. 'du' → logprob: -7.917309761047363
    8. ' d' → logprob: -8.042309761047363
    9. 'mod' → logprob: -10.292309761047363
    10. 'calcul' → logprob: -10.417309761047363

Token 459: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.18806220591068268
    2. 'l' → logprob: -1.9380621910095215
    3. 'la' → logprob: -4.3130621910095215
    4. 'les' → logprob: -5.0630621910095215
    5. 'multip' → logprob: -5.5630621910095215
    6. 'mod' → logprob: -7.1880621910095215
    7. 'des' → logprob: -7.1880621910095215
    8. 'op' → logprob: -7.8130621910095215
    9. 'cal' → logprob: -8.43806266784668
    10. '```' → logprob: -8.43806266784668

Token 460: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6979215741157532
    2. 'ages' → logprob: -1.9479215145111084
    3. 'ons' → logprob: -2.1979215145111084
    4. 'age' → logprob: -2.1979215145111084
    5. 'er' → logprob: -2.9479215145111084
    6. 'es' → logprob: -3.9479215145111084
    7. ' des' → logprob: -4.0729217529296875
    8. 'des' → logprob: -4.4479217529296875
    9. 'de' → logprob: -4.8229217529296875
    10. 'és' → logprob: -5.1979217529296875

Token 461: ' avec' (ID: 3937)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4980885684490204
    2. ')' → logprob: -1.3730885982513428
    3. '#' → logprob: -3.1230885982513428
    4. '<|end|>' → logprob: -3.8730885982513428
    5. 'A' → logprob: -3.9980885982513428
    6. ',' → logprob: -4.623088359832764
    7. '(' → logprob: -4.623088359832764
    8. '.' → logprob: -4.623088359832764
    9. '%A' → logprob: -5.623088359832764
    10. 'result' → logprob: -5.873088359832764

Token 462: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.16423997282981873
    2. ' de' → logprob: -2.5392398834228516
    3. 'les' → logprob: -3.6642398834228516
    4. 'des' → logprob: -3.6642398834228516
    5. 'mod' → logprob: -4.414239883422852
    6. 'gr' → logprob: -5.539239883422852
    7. ' des' → logprob: -6.039239883422852
    8. ' les' → logprob: -6.789239883422852
    9. 'grand' → logprob: -7.664239883422852
    10. 'd' → logprob: -8.039239883422852

Token 463: ' grands' (ID: 43085)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.47594642639160156
    2. 'grand' → logprob: -1.8509464263916016
    3. ' grands' → logprob: -2.6009464263916016
    4. 'nombre' → logprob: -3.2259464263916016
    5. ' grandes' → logprob: -3.3509464263916016
    6. 'import' → logprob: -3.8509464263916016
    7. 's' → logprob: -4.725946426391602
    8. 'plus' → logprob: -4.975946426391602
    9. 'eux' → logprob: -5.600946426391602
    10. '```' → logprob: -6.350946426391602

Token 464: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.08627841621637344
    2. 'mod' → logprob: -2.7112784385681152
    3. 'nombre' → logprob: -4.961278438568115
    4. 'n' → logprob: -5.086278438568115
    5. 'calcul' → logprob: -6.961278438568115
    6. 'ent' → logprob: -7.461278438568115
    7. 'numbers' → logprob: -7.711278438568115
    8. 'num' → logprob: -8.211277961730957
    9. '#' → logprob: -8.211277961730957
    10. 'rés' → logprob: -9.086277961730957

Token 465: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6833611726760864
    2. 'from' → logprob: -1.6833611726760864
    3. 'def' → logprob: -1.8083611726760864
    4. '<|end|>' → logprob: -2.683361053466797
    5. '#' → logprob: -3.558361053466797
    6. 'import' → logprob: -4.308361053466797
    7. 'for' → logprob: -4.808361053466797
    8. ')' → logprob: -5.308361053466797
    9. 'A' → logprob: -5.808361053466797
    10. 'result' → logprob: -5.933361053466797

Token 466: 'ans' (ID: 616)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.21323615312576294
    2. 'import' → logprob: -2.338236093521118
    3. 'l' → logprob: -2.963236093521118
    4. 'def' → logprob: -3.213236093521118
    5. '#' → logprob: -6.713236331939697
    6. 'result' → logprob: -6.838236331939697
    7. 't' → logprob: -6.838236331939697
    8. ' from' → logprob: -10.213235855102539
    9. 'answer' → logprob: -10.463235855102539
    10. 'product' → logprob: -10.713235855102539

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889209687709808
    2. '=' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.82889175415039
    4. ',' → logprob: -13.95389175415039
    5. ' ' → logprob: -15.82889175415039
    6. '_' → logprob: -16.32889175415039
    7. 'mod' → logprob: -16.57889175415039
    8. 's' → logprob: -16.95389175415039
    9. ')' → logprob: -17.20389175415039
    10. '＝' → logprob: -17.20389175415039

Token 468: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14609333872795105
    2. 'l' → logprob: -2.0210933685302734
    3. '0' → logprob: -5.771093368530273
    4. ' l' → logprob: -9.021093368530273
    5. ' ' → logprob: -9.146093368530273
    6. 'A' → logprob: -10.646093368530273
    7. 'pow' → logprob: -11.396093368530273
    8. 'lc' → logprob: -12.396093368530273
    9. '[l' → logprob: -12.521093368530273
    10. 'a' → logprob: -12.646093368530273

Token 469: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20291227102279663
    2. 'l' → logprob: -1.7029123306274414
    3. '0' → logprob: -6.577912330627441
    4. 'pow' → logprob: -9.827912330627441
    5. 'lc' → logprob: -11.577912330627441
    6. 'a' → logprob: -11.702912330627441
    7. 'A' → logprob: -11.827912330627441
    8. '(l' → logprob: -12.577912330627441
    9. '[l' → logprob: -12.577912330627441
    10. 'sum' → logprob: -12.827912330627441

Token 470: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4205765128135681
    2. '
' → logprob: -1.170576572418213
    3. ' for' → logprob: -3.545576572418213
    4. '<|end|>' → logprob: -5.545576572418213
    5. ' 
' → logprob: -9.795576095581055
    6. '

' → logprob: -10.045576095581055
    7. '\n' → logprob: -10.170576095581055
    8. '
' → logprob: -10.170576095581055
    9. '#' → logprob: -10.795576095581055
    10. '  
' → logprob: -10.795576095581055

Token 471: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14409367740154266
    2. '
' → logprob: -2.1440937519073486
    3. '<|end|>' → logprob: -4.7690935134887695
    4. ' for' → logprob: -5.1440935134887695
    5. 'l' → logprob: -7.0190935134887695
    6. '' → logprob: -8.76909351348877
    7. '.' → logprob: -8.76909351348877
    8. '%' → logprob: -8.89409351348877
    9. '#' → logprob: -8.89409351348877
    10. 't' → logprob: -9.01909351348877

Token 472: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012547536753118038
    2. 'from' → logprob: -7.126254558563232
    3. 'l' → logprob: -8.00125503540039
    4. 't' → logprob: -10.25125503540039
    5. 'ans' → logprob: -11.37625503540039
    6. 'total' → logprob: -11.62625503540039
    7. 'factor' → logprob: -12.00125503540039
    8. '#' → logprob: -12.00125503540039
    9. 'import' → logprob: -12.12625503540039
    10. ' for' → logprob: -12.25125503540039

Token 473: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: ' variable' (ID: 11076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2091815024614334
    2. ' for' → logprob: -2.084181547164917
    3. '=' → logprob: -3.459181547164917
    4. ' ' → logprob: -3.959181547164917
    5. '0' → logprob: -5.584181308746338
    6. 'mod' → logprob: -6.209181308746338
    7. '+' → logprob: -6.334181308746338
    8. ')' → logprob: -6.334181308746338
    9. ' ans' → logprob: -7.334181308746338
    10. ' =' → logprob: -7.709181308746338

Token 475: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39358317852020264
    2. ' =' → logprob: -1.5185831785202026
    3. 'for' → logprob: -2.643583297729492
    4. ' for' → logprob: -4.143583297729492
    5. '_' → logprob: -4.768583297729492
    6. ' ' → logprob: -5.518583297729492
    7. ' +=' → logprob: -6.268583297729492
    8. ' ans' → logprob: -6.643583297729492
    9. 'A' → logprob: -7.018583297729492
    10. 'ans' → logprob: -7.143583297729492

Token 476: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.792425274848938
    2. 'acc' → logprob: -0.917425274848938
    3. 's' → logprob: -2.5424251556396484
    4. 'int' → logprob: -4.417425155639648
    5. ' accumulation' → logprob: -4.542425155639648
    6. 'answer' → logprob: -5.167425155639648
    7. 'result' → logprob: -5.292425155639648
    8. ' la' → logprob: -5.292425155639648
    9. 'la' → logprob: -5.417425155639648
    10. 'i' → logprob: -5.667425155639648

Token 477: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36183443665504456
    2. '
' → logprob: -1.7368344068527222
    3. '<|end|>' → logprob: -2.2368345260620117
    4. ' for' → logprob: -4.361834526062012
    5. ' ' → logprob: -6.611834526062012
    6. 'ans' → logprob: -7.236834526062012
    7. '

' → logprob: -7.736834526062012
    8. 't' → logprob: -7.736834526062012
    9. ' 
' → logprob: -7.861834526062012
    10. ',' → logprob: -7.861834526062012

Token 478: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. 'ans' → logprob: -16.125051498413086
    4. '1' → logprob: -16.375051498413086
    5. 'int' → logprob: -17.250051498413086
    6. '```' → logprob: -18.875051498413086
    7. '=' → logprob: -19.875051498413086
    8. ' ans' → logprob: -19.875051498413086
    9. '(ans' → logprob: -19.875051498413086
    10. '۰' → logprob: -20.250051498413086

Token 479: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.264322317088954e-05
    2. 'ans' → logprob: -10.000052452087402
    3. '1' → logprob: -13.000052452087402
    4. 'int' → logprob: -13.500052452087402
    5. '(ans' → logprob: -13.500052452087402
    6. ' ' → logprob: -14.375052452087402
    7. 'mod' → logprob: -14.375052452087402
    8. '```' → logprob: -15.125052452087402
    9. '(' → logprob: -15.750052452087402
    10. '#' → logprob: -16.62505340576172

Token 480: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8033466935157776
    2. 'l' → logprob: -1.1783466339111328
    3. 'for' → logprob: -2.178346633911133
    4. '<|end|>' → logprob: -2.178346633911133
    5. 'L' → logprob: -5.303346633911133
    6. '.' → logprob: -5.928346633911133
    7. ' for' → logprob: -6.178346633911133
    8. '  
' → logprob: -6.303346633911133
    9. ',' → logprob: -6.428346633911133
    10. ' 
' → logprob: -7.428346633911133

Token 481: ' Elle' (ID: 21300)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11307369917631149
    2. 'L' → logprob: -2.6130735874176025
    3. 'from' → logprob: -3.4880735874176025
    4. 'import' → logprob: -6.613073825836182
    5. 'lc' → logprob: -8.113073348999023
    6. 'base' → logprob: -8.363073348999023
    7. 'for' → logprob: -8.363073348999023
    8. 'LC' → logprob: -8.613073348999023
    9. 'M' → logprob: -8.863073348999023
    10. 'answer' → logprob: -9.238073348999023

Token 482: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19865986704826355
    2. ' =' → logprob: -2.323659896850586
    3. '+=' → logprob: -2.823659896850586
    4. ' +=' → logprob: -4.573659896850586
    5. '<|end|>' → logprob: -5.198659896850586
    6. 'for' → logprob: -6.323659896850586
    7. ')' → logprob: -6.573659896850586
    8. '.' → logprob: -6.948659896850586
    9. ' ' → logprob: -7.698659896850586
    10. '#' → logprob: -7.698659896850586

Token 483: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4315186142921448
    2. 'in' → logprob: -1.3065185546875
    3. 'inue' → logprob: -2.5565185546875
    4. '+=' → logprob: -6.6815185546875
    5. 'inu' → logprob: -7.8065185546875
    6. 'i' → logprob: -8.5565185546875
    7. ' =' → logprob: -10.0565185546875
    8. 'e' → logprob: -10.1815185546875
    9. 'inut' → logprob: -10.3065185546875
    10. 'ient' → logprob: -10.4315185546875

Token 484: 'endra' (ID: 32364)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09051817655563354
    2. 'n' → logprob: -3.4655182361602783
    3. 'ent' → logprob: -3.5905182361602783
    4. 'nt' → logprob: -3.8405182361602783
    5. 'ue' → logprob: -6.215517997741699
    6. 'nent' → logprob: -6.340517997741699
    7. 'nera' → logprob: -7.465517997741699
    8. '#' → logprob: -7.590517997741699
    9. 'nit' → logprob: -8.4655179977417
    10. 'nd' → logprob: -9.0905179977417

Token 485: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1920909881591797
    2. '(' → logprob: -1.3170909881591797
    3. '(ans' → logprob: -2.0670909881591797
    4. '1' → logprob: -2.3170909881591797
    5. ' ans' → logprob: -3.4420909881591797
    6. '(len' → logprob: -3.6920909881591797
    7. ' ' → logprob: -3.8170909881591797
    8. ' (' → logprob: -3.9420909881591797
    9. 'ans' → logprob: -4.06709098815918
    10. '=' → logprob: -4.19209098815918

Token 486: ' résultat' (ID: 62556)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46040329337120056
    2. 'sum' → logprob: -1.210403323173523
    3. 'total' → logprob: -3.8354032039642334
    4. 's' → logprob: -3.8354032039642334
    5. 'mod' → logprob: -4.7104034423828125
    6. 'result' → logprob: -5.7104034423828125
    7. 'ans' → logprob: -5.9604034423828125
    8. 'max' → logprob: -5.9604034423828125
    9. '0' → logprob: -6.4604034423828125
    10. ' for' → logprob: -6.7104034423828125

Token 487: ' final' (ID: 1721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006520683411508799
    2. '
' → logprob: -5.631520748138428
    3. ' for' → logprob: -6.131520748138428
    4. 'l' → logprob: -7.631520748138428
    5. 'div' → logprob: -10.00652027130127
    6. 'A' → logprob: -10.25652027130127
    7. '=' → logprob: -10.38152027130127
    8. 'ans' → logprob: -11.00652027130127
    9. 'a' → logprob: -11.13152027130127
    10. '.' → logprob: -11.13152027130127

Token 488: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19641689956188202
    2. 'l' → logprob: -1.8214168548583984
    3. 'total' → logprob: -4.821416854858398
    4. 'div' → logprob: -6.196416854858398
    5. ' for' → logprob: -6.696416854858398
    6. 'max' → logprob: -7.321416854858398
    7. '<|end|>' → logprob: -7.446416854858398
    8. '
' → logprob: -7.571416854858398
    9. 'm' → logprob: -7.821416854858398
    10. 't' → logprob: -7.821416854858398

Token 489: '#' (ID: 2)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4368007481098175
    2. 'for' → logprob: -1.3118007183074951
    3. 'from' → logprob: -2.936800718307495
    4. 'total' → logprob: -4.436800956726074
    5. 'L' → logprob: -5.061800956726074
    6. 'm' → logprob: -5.811800956726074
    7. 'import' → logprob: -6.311800956726074
    8. 'ans' → logprob: -6.436800956726074
    9. 'lc' → logprob: -6.686800956726074
    10. 'div' → logprob: -7.061800956726074

Token 490: ' Cal' (ID: 4453)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.39891523122787476
    2. 'for' → logprob: -1.2739152908325195
    3. 'from' → logprob: -3.5239152908325195
    4. 'base' → logprob: -5.3989152908325195
    5. 'total' → logprob: -5.5239152908325195
    6. 'import' → logprob: -6.0239152908325195
    7. 'lc' → logprob: -6.2739152908325195
    8. 'L' → logprob: -6.3989152908325195
    9. 'm' → logprob: -6.6489152908325195
    10. 'div' → logprob: -6.7739152908325195

Token 491: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9886610507965088
    2. 'l' → logprob: -1.2386610507965088
    3. 'cul' → logprob: -1.4886610507965088
    4. 'culated' → logprob: -2.488661050796509
    5. 'cule' → logprob: -4.36366081237793
    6. 'cl' → logprob: -5.36366081237793
    7. '#' → logprob: -5.48866081237793
    8. 'culate' → logprob: -5.48866081237793
    9. 'cu' → logprob: -7.11366081237793
    10. 'for' → logprob: -7.11366081237793

Token 492: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03852061554789543
    2. ' l' → logprob: -5.038520812988281
    3. 'the' → logprob: -5.163520812988281
    4. 'le' → logprob: -5.288520812988281
    5. 'lc' → logprob: -5.413520812988281
    6. 'll' → logprob: -5.663520812988281
    7. 'L' → logprob: -5.788520812988281
    8. 'la' → logprob: -6.288520812988281
    9. ' la' → logprob: -6.288520812988281
    10. 'all' → logprob: -6.538520812988281

Token 493: ' PPC' (ID: 94738)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08180979639291763
    2. 'pp' → logprob: -3.0818097591400146
    3. 'p' → logprob: -4.706809997558594
    4. 'val' → logprob: -5.331809997558594
    5. 'multiple' → logprob: -5.456809997558594
    6. 'm' → logprob: -5.831809997558594
    7. 'L' → logprob: -5.831809997558594
    8. 'x' → logprob: -6.581809997558594
    9. 'lc' → logprob: -6.581809997558594
    10. 'value' → logprob: -6.956809997558594

Token 494: 'M' (ID: 44)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0017115899827331305
    2. 'M' → logprob: -6.501711368560791
    3. '=' → logprob: -9.37671184539795
    4. ' =' → logprob: -9.87671184539795
    5. 'cm' → logprob: -10.75171184539795
    6. 'mm' → logprob: -11.00171184539795
    7. 'м' → logprob: -11.37671184539795
    8. 'mc' → logprob: -12.00171184539795
    9. '   ' → logprob: -12.62671184539795
    10. 'ms' → logprob: -13.12671184539795

Token 495: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8856191039085388
    2. '=' → logprob: -1.5106191635131836
    3. 'l' → logprob: -2.2606191635131836
    4. '_value' → logprob: -3.1356191635131836
    5. 'L' → logprob: -3.2606191635131836
    6. 'A' → logprob: -3.2606191635131836
    7. 'val' → logprob: -3.5106191635131836
    8. '_val' → logprob: -3.5106191635131836
    9. 'all' → logprob: -3.6356191635131836
    10. 'of' → logprob: -3.8856191635131836

Token 496: ' tous' (ID: 10688)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -8.399378566537052e-05
    2. ' A' → logprob: -9.625083923339844
    3. '(A' → logprob: -11.000083923339844
    4. '[A' → logprob: -14.125083923339844
    5. 'a' → logprob: -15.500083923339844
    6. 'l' → logprob: -16.750083923339844
    7. '
' → logprob: -17.125083923339844
    8. '	A' → logprob: -17.125083923339844
    9. '(' → logprob: -18.125083923339844
    10. ')' → logprob: -18.500083923339844

Token 497: ' les' (ID: 1341)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.4746949374675751
    2. 'A' → logprob: -0.9746949672698975
    3. ' A' → logprob: -7.474694728851318
    4. '(' → logprob: -10.599695205688477
    5. '[A' → logprob: -11.099695205688477
    6. ')' → logprob: -13.099695205688477
    7. ' (' → logprob: -13.724695205688477
    8. 'l' → logprob: -13.724695205688477
    9. '#' → logprob: -13.849695205688477
    10. ']' → logprob: -14.099695205688477

Token 498: ' éléments' (ID: 57375)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.723973582556937e-05
    2. ' A' → logprob: -11.000017166137695
    3. 'numbers' → logprob: -14.625017166137695
    4. 'elements' → logprob: -17.375017166137695
    5. '[A' → logprob: -17.375017166137695
    6. ')' → logprob: -17.750017166137695
    7. '(A' → logprob: -17.750017166137695
    8. ']' → logprob: -17.875017166137695
    9. 'a' → logprob: -18.000017166137695
    10. ' numbers' → logprob: -19.125017166137695

Token 499: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.007311046123504639
    2. ' =' → logprob: -5.50731086730957
    3. 'of' → logprob: -6.88231086730957
    4. '=' → logprob: -7.00731086730957
    5. 'l' → logprob: -8.00731086730957
    6. 'for' → logprob: -8.75731086730957
    7. 'ans' → logprob: -8.88231086730957
    8. 'val' → logprob: -9.13231086730957
    9. '(A' → logprob: -9.13231086730957
    10. 'all' → logprob: -9.25731086730957

Token 500: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -8.2994620242971e-06
    2. ' A' → logprob: -11.875008583068848
    3. '(A' → logprob: -13.625008583068848
    4. 'a' → logprob: -17.25000762939453
    5. '[A' → logprob: -17.25000762939453
    6. '	A' → logprob: -18.50000762939453
    7. '
' → logprob: -19.50000762939453
    8. 'Ａ' → logprob: -19.75000762939453
    9. 'А' → logprob: -20.12500762939453
    10. '```' → logprob: -20.37500762939453

Token 501: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002036595979006961
    2. ' A' → logprob: -8.500204086303711
    3. 'list' → logprob: -16.75020408630371
    4. '[A' → logprob: -17.12520408630371
    5. 'a' → logprob: -17.25020408630371
    6. '
' → logprob: -18.25020408630371
    7. '(A' → logprob: -18.25020408630371
    8. '`' → logprob: -18.75020408630371
    9. '[' → logprob: -19.00020408630371
    10. ' ' → logprob: -19.25020408630371

Token 502: ' '' (ID: 461)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015316474018618464
    2. 'ans' → logprob: -6.876531600952148
    3. 'l' → logprob: -8.251531600952148
    4. ' =' → logprob: -9.126531600952148
    5. '(A' → logprob: -10.251531600952148
    6. 'all' → logprob: -11.001531600952148
    7. ' A' → logprob: -11.001531600952148
    8. 'a' → logprob: -11.126531600952148
    9. '_A' → logprob: -11.751531600952148
    10. 'result' → logprob: -12.126531600952148

Token 503: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00015860427811276168
    2. ' A' → logprob: -8.750158309936523
    3. '(A' → logprob: -16.375158309936523
    4. 'a' → logprob: -18.000158309936523
    5. '[A' → logprob: -18.000158309936523
    6. '	A' → logprob: -18.500158309936523
    7. '
' → logprob: -19.375158309936523
    8. ' ' → logprob: -19.625158309936523
    9. '```' → logprob: -19.625158309936523
    10. '`' → logprob: -19.750158309936523

Token 504: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18420056998729706
    2. 'l' → logprob: -1.8092005252838135
    3. 'L' → logprob: -6.809200763702393
    4. ')
' → logprob: -6.934200763702393
    5. ',' → logprob: -7.184200763702393
    6. 'a' → logprob: -7.559200763702393
    7. ').' → logprob: -8.934200286865234
    8. 'lc' → logprob: -9.059200286865234
    9. 'for' → logprob: -9.309200286865234
    10. 'A' → logprob: -9.434200286865234

Token 505: ' et' (ID: 859)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03888542577624321
    2. 'L' → logprob: -4.413885593414307
    3. 'ans' → logprob: -5.038885593414307
    4. 'p' → logprob: -5.163885593414307
    5. 'pp' → logprob: -5.163885593414307
    6. 'all' → logprob: -6.288885593414307
    7. 'val' → logprob: -7.038885593414307
    8. 'a' → logprob: -7.538885593414307
    9. 'm' → logprob: -7.538885593414307
    10. 'lc' → logprob: -7.538885593414307

Token 506: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007531032431870699
    2. 'for' → logprob: -6.25753116607666
    3. 'base' → logprob: -7.00753116607666
    4. 'L' → logprob: -7.13253116607666
    5. 'lc' → logprob: -7.25753116607666
    6. 'p' → logprob: -7.38253116607666
    7. 't' → logprob: -7.50753116607666
    8. 'div' → logprob: -8.00753116607666
    9. 'm' → logprob: -8.25753116607666
    10. ' l' → logprob: -8.38253116607666

Token 507: ' stock' (ID: 6546)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0905994102358818
    2. ' l' → logprob: -2.840599298477173
    3. 'p' → logprob: -4.715599536895752
    4. 'lc' → logprob: -5.590599536895752
    5. 'mod' → logprob: -5.840599536895752
    6. 'try' → logprob: -6.465599536895752
    7. 'for' → logprob: -6.590599536895752
    8. 'ans' → logprob: -6.590599536895752
    9. 'pp' → logprob: -6.715599536895752
    10. 'div' → logprob: -7.090599536895752

Token 508: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39204534888267517
    2. ' =' → logprob: -1.5170453786849976
    3. 'e' → logprob: -2.642045259475708
    4. 'l' → logprob: -4.392045497894287
    5. 'a' → logprob: -4.892045497894287
    6. 'é' → logprob: -5.642045497894287
    7. '=
' → logprob: -6.142045497894287
    8. 'er' → logprob: -6.767045497894287
    9. 'p' → logprob: -7.142045497894287
    10. '=l' → logprob: -7.267045497894287

Token 509: ' dans' (ID: 2671)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.270699679851532
    2. ' =' → logprob: -2.2706997394561768
    3. 'dans' → logprob: -3.0206997394561768
    4. 'ans' → logprob: -4.145699501037598
    5. '=' → logprob: -4.145699501037598
    6. 'in' → logprob: -4.770699501037598
    7. ' dans' → logprob: -4.770699501037598
    8. 'all' → logprob: -4.895699501037598
    9. 'lt' → logprob: -5.270699501037598
    10. 'L' → logprob: -5.270699501037598

Token 510: ' '' (ID: 461)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018436945974826813
    2. 'L' → logprob: -4.768436908721924
    3. 'lc' → logprob: -4.893436908721924
    4. 't' → logprob: -8.143437385559082
    5. 'val' → logprob: -8.393437385559082
    6. 'll' → logprob: -8.768437385559082
    7. 'tmp' → logprob: -8.768437385559082
    8. 'ans' → logprob: -8.768437385559082
    9. 'LC' → logprob: -9.143437385559082
    10. 'p' → logprob: -9.143437385559082

Token 511: 't' (ID: 83)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.020646994933485985
    2. 'L' → logprob: -5.520647048950195
    3. 't' → logprob: -5.770647048950195
    4. 'lc' → logprob: -6.020647048950195
    5. 'val' → logprob: -6.520647048950195
    6. 'base' → logprob: -6.520647048950195
    7. 'm' → logprob: -6.645647048950195
    8. 'ans' → logprob: -6.645647048950195
    9. 'p' → logprob: -7.020647048950195
    10. 'x' → logprob: -7.020647048950195

Token 512: ''.
' (ID: 49980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2778690457344055
    2. '=' → logprob: -2.1528689861297607
    3. ')' → logprob: -2.6528689861297607
    4. 't' → logprob: -2.9028689861297607
    5. '
' → logprob: -7.40286922454834
    6. '_t' → logprob: -8.90286922454834
    7. ' ' → logprob: -9.40286922454834
    8. ')
' → logprob: -9.52786922454834
    9. '=t' → logprob: -9.65286922454834
    10. ' =
' → logprob: -10.77786922454834

Token 513: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.6240566083070007e-06
    2. 'from' → logprob: -13.625001907348633
    3. 'import' → logprob: -14.750001907348633
    4. ' t' → logprob: -17.625001907348633
    5. '```' → logprob: -18.750001907348633
    6. '`t' → logprob: -19.250001907348633
    7. '#' → logprob: -19.375001907348633
    8. '
' → logprob: -19.500001907348633
    9. 'try' → logprob: -20.500001907348633
    10. '  
' → logprob: -21.000001907348633

Token 514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889056205749512
    2. ' =' → logprob: -2.578890562057495
    3. '=t' → logprob: -14.703890800476074
    4. 't' → logprob: -15.078890800476074
    5. '＝' → logprob: -16.953889846801758
    6. '=l' → logprob: -17.328889846801758
    7. '=
' → logprob: -18.828889846801758
    8. '=int' → logprob: -18.828889846801758
    9. '=

' → logprob: -18.828889846801758
    10. ' ' → logprob: -19.078889846801758

Token 515: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00018006093159783632
    2. ' l' → logprob: -8.6251802444458
    3. 'lc' → logprob: -15.8751802444458
    4. '	l' → logprob: -16.625179290771484
    5. '1' → logprob: -16.750179290771484
    6. '   ' → logprob: -17.625179290771484
    7. '(l' → logprob: -18.250179290771484
    8. 'lm' → logprob: -19.000179290771484
    9. 'a' → logprob: -19.187679290771484
    10. 't' → logprob: -19.250179290771484

Token 516: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -2.3676733690081164e-05
    2. 'c' → logprob: -11.00002384185791
    3. 'm' → logprob: -13.25002384185791
    4. '(A' → logprob: -13.50002384185791
    5. 'cms' → logprob: -13.75002384185791
    6. ' cm' → logprob: -15.00002384185791
    7. '   ' → logprob: -15.25002384185791
    8. 'mc' → logprob: -15.37502384185791
    9. '(cm' → logprob: -15.37502384185791
    10. 'A' → logprob: -15.50002384185791

Token 517: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. ' (' → logprob: -16.750001907348633
    4. '(Base' → logprob: -17.125001907348633
    5. 'A' → logprob: -18.250001907348633
    6. '(
' → logprob: -18.250001907348633
    7. '((' → logprob: -18.625001907348633
    8. '(a' → logprob: -18.750001907348633
    9. '(base' → logprob: -18.750001907348633
    10. '([' → logprob: -19.375001907348633

Token 518: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ')
' → logprob: -11.87501335144043
    3. ' )' → logprob: -12.62501335144043
    4. ')

' → logprob: -13.50001335144043
    5. '))' → logprob: -14.62501335144043
    6. ')`' → logprob: -15.25001335144043
    7. ')#' → logprob: -16.12501335144043
    8. ')
' → logprob: -16.37501335144043
    9. '()' → logprob: -16.37501335144043
    10. '[' → logprob: -16.62501335144043

Token 519: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010199354437645525
    2. 'print' → logprob: -10.125102043151855
    3. 'ans' → logprob: -10.875102043151855
    4. '#' → logprob: -11.125102043151855
    5. 'if' → logprob: -11.625102043151855
    6. ' for' → logprob: -11.750102043151855
    7. 't' → logprob: -11.875102043151855
    8. 'total' → logprob: -14.125102043151855
    9. 'mod' → logprob: -14.375102043151855
    10. 'sum' → logprob: -14.625102043151855

Token 520: ' Met' (ID: 7227)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.700132997939363e-05
    2. '#' → logprob: -11.250017166137695
    3. 'def' → logprob: -13.875017166137695
    4. 'ans' → logprob: -13.875017166137695
    5. ' for' → logprob: -14.375017166137695
    6. 't' → logprob: -14.750017166137695
    7. 'import' → logprob: -14.750017166137695
    8. 'from' → logprob: -15.625017166137695
    9. 'if' → logprob: -16.375017166137695
    10. 'while' → logprob: -16.500017166137695

Token 521: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021091463044285774
    2. '#' → logprob: -4.396091461181641
    3. ' for' → logprob: -5.146091461181641
    4. 't' → logprob: -6.271091461181641
    5. 'au' → logprob: -8.02109146118164
    6. 'tle' → logprob: -8.77109146118164
    7. 'if' → logprob: -10.39609146118164
    8. 'à' → logprob: -10.52109146118164
    9. '```' → logprob: -10.77109146118164
    10. 'ans' → logprob: -10.77109146118164

Token 522: ' jour' (ID: 8379)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.31110766530036926
    2. 'place' → logprob: -1.5611076354980469
    3. 'jour' → logprob: -3.561107635498047
    4. 'ans' → logprob: -4.311107635498047
    5. '0' → logprob: -4.561107635498047
    6. 'mod' → logprob: -7.311107635498047
    7. 'cache' → logprob: -7.561107635498047
    8. '```' → logprob: -7.686107635498047
    9. 'range' → logprob: -7.686107635498047
    10. '#' → logprob: -8.561107635498047

Token 523: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007517892401665449
    2. 'ans' → logprob: -5.6325178146362305
    3. '(ans' → logprob: -6.1325178146362305
    4. ' for' → logprob: -6.6325178146362305
    5. 't' → logprob: -8.25751781463623
    6. '(' → logprob: -9.88251781463623
    7. ' ans' → logprob: -10.13251781463623
    8. 'range' → logprob: -10.13251781463623
    9. '(
' → logprob: -11.38251781463623
    10. '(t' → logprob: -11.88251781463623

Token 524: ' valeur' (ID: 41664)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00036382899270392954
    2. ' for' → logprob: -8.625364303588867
    3. 'ans' → logprob: -8.625364303588867
    4. 't' → logprob: -12.500364303588867
    5. 'answer' → logprob: -15.125364303588867
    6. 'pour' → logprob: -15.625364303588867
    7. 's' → logprob: -16.000364303588867
    8. 'total' → logprob: -16.875364303588867
    9. 'result' → logprob: -16.875364303588867
    10. '
' → logprob: -16.875364303588867

Token 525: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5204015970230103
    2. 'for' → logprob: -1.6454015970230103
    3. '(ans' → logprob: -1.8954015970230103
    4. 't' → logprob: -3.2704014778137207
    5. '(' → logprob: -5.270401477813721
    6. ' for' → logprob: -5.645401477813721
    7. '=' → logprob: -6.145401477813721
    8. 'range' → logprob: -6.270401477813721
    9. '(t' → logprob: -6.270401477813721
    10. ' ans' → logprob: -6.395401477813721

Token 526: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001818489981815219
    2. 't' → logprob: -9.500182151794434
    3. 'A' → logprob: -9.750182151794434
    4. ' ans' → logprob: -10.875182151794434
    5. 'mod' → logprob: -11.750182151794434
    6. '(ans' → logprob: -11.750182151794434
    7. 'a' → logprob: -12.000182151794434
    8. 'for' → logprob: -12.250182151794434
    9. '	ans' → logprob: -13.875182151794434
    10. '```' → logprob: -14.375182151794434

Token 527: 't' (ID: 83)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009281758219003677
    2. 't' → logprob: -4.759281635284424
    3. 'A' → logprob: -7.634281635284424
    4. 'a' → logprob: -9.384282112121582
    5. 'for' → logprob: -10.259282112121582
    6. '(ans' → logprob: -10.384282112121582
    7. ' ans' → logprob: -11.384282112121582
    8. 'answer' → logprob: -13.384282112121582
    9. '	ans' → logprob: -13.509282112121582
    10. '```' → logprob: -13.634282112121582

Token 528: ''' (ID: 6)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.5078954696655273
    2. ' %=' → logprob: -1.0078954696655273
    3. '=' → logprob: -3.6328954696655273
    4. ' =' → logprob: -5.632895469665527
    5. '%' → logprob: -5.757895469665527
    6. ' %' → logprob: -9.757895469665527
    7. '//=' → logprob: -11.882895469665527
    8. '=t' → logprob: -13.257895469665527
    9. 'mod' → logprob: -13.632895469665527
    10. ' ' → logprob: -13.632895469665527

Token 529: ' en' (ID: 469)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.589275062084198
    2. '%=' → logprob: -0.839275062084198
    3. '=' → logprob: -4.839274883270264
    4. ' =' → logprob: -5.464274883270264
    5. '%' → logprob: -6.964274883270264
    6. ' %' → logprob: -9.089275360107422
    7. '//=' → logprob: -11.339275360107422
    8. '*=' → logprob: -11.839275360107422
    9. '+=' → logprob: -12.339275360107422
    10. '=t' → logprob: -12.339275360107422

Token 530: ' prenant' (ID: 140375)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11083894222974777
    2. ' t' → logprob: -2.4858388900756836
    3. '%' → logprob: -3.8608388900756836
    4. ' %' → logprob: -8.485838890075684
    5. 'pow' → logprob: -8.735838890075684
    6. 'mod' → logprob: -8.735838890075684
    7. '%=' → logprob: -10.735838890075684
    8. ' mod' → logprob: -10.860838890075684
    9. ' %=' → logprob: -11.360838890075684
    10. 'ans' → logprob: -11.860838890075684

Token 531: ' son' (ID: 2391)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.22778895497322083
    2. ' t' → logprob: -1.6027889251708984
    3. ' modulo' → logprob: -6.852788925170898
    4. '%' → logprob: -7.602788925170898
    5. ' le' → logprob: -7.977788925170898
    6. 'mod' → logprob: -8.102788925170898
    7. 'le' → logprob: -9.352788925170898
    8. ' mod' → logprob: -9.727788925170898
    9. ' ' → logprob: -12.227788925170898
    10. ' ' → logprob: -12.602788925170898

Token 532: ' reste' (ID: 26769)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6637893319129944
    2. 'mod' → logprob: -0.9137893319129944
    3. ' modulo' → logprob: -3.0387892723083496
    4. ' mod' → logprob: -3.7887892723083496
    5. ' %' → logprob: -4.78878927230835
    6. ' modulus' → logprob: -5.91378927230835
    7. ' t' → logprob: -6.28878927230835
    8. 't' → logprob: -7.41378927230835
    9. ' %=' → logprob: -10.038789749145508
    10. '_mod' → logprob: -11.163789749145508

Token 533: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2676260471343994
    2. ' t' → logprob: -2.1426260471343994
    3. ' %' → logprob: -3.2676260471343994
    4. 'mod' → logprob: -3.3926260471343994
    5. 't' → logprob: -4.14262580871582
    6. ' modulo' → logprob: -4.39262580871582
    7. ' %=' → logprob: -5.01762580871582
    8. ' mod' → logprob: -5.01762580871582
    9. ' =' → logprob: -6.26762580871582
    10. '%=' → logprob: -7.01762580871582

Token 534: ' '' (ID: 461)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.19243866205215454
    2. ' mod' → logprob: -2.4424386024475098
    3. '(mod' → logprob: -2.4424386024475098
    4. ' (' → logprob: -6.81743860244751
    5. '(' → logprob: -10.692439079284668
    6. ' modulo' → logprob: -11.067439079284668
    7. 't' → logprob: -11.567439079284668
    8. '(
' → logprob: -11.942439079284668
    9. '	mod' → logprob: -12.942439079284668
    10. '_mod' → logprob: -13.067439079284668

Token 535: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.003178544342517853
    2. ' mod' → logprob: -5.753178596496582
    3. '(mod' → logprob: -14.003178596496582
    4. '	mod' → logprob: -18.628177642822266
    5. '_mod' → logprob: -20.128177642822266
    6. ' мод' → logprob: -20.753177642822266
    7. ' ' → logprob: -21.003177642822266
    8. '.mod' → logprob: -21.378177642822266
    9. ' ' → logprob: -21.503177642822266
    10. '10' → logprob: -21.628177642822266

Token 536: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03719361871480942
    2. '%' → logprob: -3.412193536758423
    3. ')%' → logprob: -6.537193775177002
    4. 't' → logprob: -6.787193775177002
    5. ' %' → logprob: -7.912193775177002
    6. ' )' → logprob: -8.037193298339844
    7. ',' → logprob: -9.412193298339844
    8. ')t' → logprob: -9.537193298339844
    9. ').' → logprob: -10.412193298339844
    10. '(t' → logprob: -10.912193298339844

Token 537: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00010425841173855588
    2. '=' → logprob: -9.250103950500488
    3. ' =' → logprob: -12.500103950500488
    4. '%=' → logprob: -12.625103950500488
    5. ' t' → logprob: -14.250103950500488
    6. '`t' → logprob: -15.875103950500488
    7. ' %=' → logprob: -16.000104904174805
    8. '%' → logprob: -16.125104904174805
    9. '=t' → logprob: -16.625104904174805
    10. '	t' → logprob: -20.125104904174805

Token 538: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.6929553151130676
    2. ' %=' → logprob: -1.1929552555084229
    3. '=' → logprob: -1.6929552555084229
    4. '%' → logprob: -5.067955493927002
    5. ' =' → logprob: -5.067955493927002
    6. ' ' → logprob: -11.567955017089844
    7. ' %' → logprob: -12.942955017089844
    8. '=%' → logprob: -14.442955017089844
    9. 'mod' → logprob: -14.442955017089844
    10. 't' → logprob: -15.067955017089844

Token 539: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.1472419600977446e-06
    2. ' mod' → logprob: -13.750000953674316
    3. '(mod' → logprob: -19.875001907348633
    4. '	mod' → logprob: -22.500001907348633
    5. '10' → logprob: -22.750001907348633
    6. 'moder' → logprob: -24.750001907348633
    7. 'mo' → logprob: -25.125001907348633
    8. ' мод' → logprob: -26.000001907348633
    9. '_mod' → logprob: -26.125001907348633
    10. 'MOD' → logprob: -26.125001907348633

Token 540: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.423219696851447e-05
    2. ' for' → logprob: -9.500083923339844
    3. '#' → logprob: -11.750083923339844
    4. '
' → logprob: -13.875083923339844
    5. '+' → logprob: -15.750083923339844
    6. '<|end|>' → logprob: -16.250083923339844
    7. 'print' → logprob: -16.500083923339844
    8. 'ans' → logprob: -17.250083923339844
    9. '0' → logprob: -17.500083923339844
    10. ')' → logprob: -17.625083923339844

Token 541: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008188001229427755
    2. 'print' → logprob: -7.125818729400635
    3. '#' → logprob: -12.250819206237793
    4. ' for' → logprob: -12.250819206237793
    5. 'ans' → logprob: -12.750819206237793
    6. '<|end|>' → logprob: -14.875819206237793
    7. 'if' → logprob: -15.500819206237793
    8. 'pow' → logprob: -15.750819206237793
    9. 'i' → logprob: -15.875819206237793
    10. 'n' → logprob: -16.000818252563477

Token 542: ' É' (ID: 10055)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10033541917800903
    2. 'print' → logprob: -2.3503353595733643
    3. 'ans' → logprob: -9.850335121154785
    4. '#' → logprob: -10.600335121154785
    5. 'if' → logprob: -11.475335121154785
    6. ' for' → logprob: -11.475335121154785
    7. '<|end|>' → logprob: -11.600335121154785
    8. 'while' → logprob: -12.225335121154785
    9. 'factor' → logprob: -13.225335121154785
    10. '#print' → logprob: -13.475335121154785

Token 543: 'vite' (ID: 140910)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.6721979975700378
    2. '#' → logprob: -1.4221980571746826
    3. 'ans' → logprob: -3.0471980571746826
    4. 'st' → logprob: -3.1721980571746826
    5. 'x' → logprob: -3.5471980571746826
    6. 'ss' → logprob: -4.0471978187561035
    7. 't' → logprob: -4.4221978187561035
    8. 'gal' → logprob: -4.4221978187561035
    9. 'n' → logprob: -4.7971978187561035
    10. 'value' → logprob: -4.9221978187561035

Token 544: ' que' (ID: 661)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6815288662910461
    2. 'les' → logprob: -0.9315288662910461
    3. 'd' → logprob: -2.8065288066864014
    4. 'des' → logprob: -4.4315290451049805
    5. 'l' → logprob: -5.5565290451049805
    6. 't' → logprob: -5.6815290451049805
    7. 'overflow' → logprob: -5.6815290451049805
    8. 'une' → logprob: -5.8065290451049805
    9. 'tout' → logprob: -6.0565290451049805
    10. 's' → logprob: -6.3065290451049805

Token 545: ' '' (ID: 461)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1274510771036148
    2. ' une' → logprob: -2.877451181411743
    3. ' les' → logprob: -4.127450942993164
    4. 'Overflow' → logprob: -4.377450942993164
    5. ' t' → logprob: -4.627450942993164
    6. ' que' → logprob: -4.752450942993164
    7. 'une' → logprob: -4.752450942993164
    8. 'les' → logprob: -6.502450942993164
    9. ' des' → logprob: -6.752450942993164
    10. 'overflow' → logprob: -7.502450942993164

Token 546: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.054500666621607e-06
    2. ' t' → logprob: -13.25000286102295
    3. 'Overflow' → logprob: -13.87500286102295
    4. 'ans' → logprob: -15.25000286102295
    5. 'l' → logprob: -16.875003814697266
    6. ')' → logprob: -17.500003814697266
    7. 'le' → logprob: -18.125003814697266
    8. 'overflow' → logprob: -18.250003814697266
    9. '`t' → logprob: -18.250003814697266
    10. 'Answer' → logprob: -18.500003814697266

Token 547: ''' (ID: 6)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' soit' → logprob: -1.3242950439453125
    2. ' ne' → logprob: -1.5742950439453125
    3. 'so' → logprob: -1.8242950439453125
    4. 'ne' → logprob: -2.0742950439453125
    5. ' dépasse' → logprob: -2.0742950439453125
    6. 'dev' → logprob: -3.0742950439453125
    7. 'continue' → logprob: -4.8242950439453125
    8. '```' → logprob: -4.9492950439453125
    9. 't' → logprob: -5.0742950439453125
    10. ' continue' → logprob: -5.4492950439453125

Token 548: ' ne' (ID: 453)
  Prédit: 'dev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dev' → logprob: -0.5420801639556885
    2. 'd' → logprob: -1.2920801639556885
    3. ' dépasse' → logprob: -3.0420801639556885
    4. 'so' → logprob: -3.2920801639556885
    5. 'ne' → logprob: -3.6670801639556885
    6. 'dé' → logprob: -5.167079925537109
    7. 'de' → logprob: -5.292079925537109
    8. 'exc' → logprob: -5.417079925537109
    9. ' dev' → logprob: -5.792079925537109
    10. '*' → logprob: -5.917079925537109

Token 549: ' dépasse' (ID: 165701)
  Prédit: 'dev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dev' → logprob: -0.03910418599843979
    2. 'd' → logprob: -3.4141042232513428
    3. 'pr' → logprob: -6.414103984832764
    4. 'dé' → logprob: -6.789103984832764
    5. ' dépasse' → logprob: -6.789103984832764
    6. 'de' → logprob: -7.289103984832764
    7. ' dev' → logprob: -7.914103984832764
    8. 'gross' → logprob: -8.914104461669922
    9. 'expl' → logprob: -9.039104461669922
    10. 'so' → logprob: -10.539104461669922

Token 550: ' la' (ID: 557)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.020182235166430473
    2. 'le' → logprob: -5.270182132720947
    3. 'la' → logprob: -5.270182132720947
    4. ' mod' → logprob: -5.270182132720947
    5. ' la' → logprob: -5.520182132720947
    6. ' le' → logprob: -8.020182609558105
    7. ' les' → logprob: -9.020182609558105
    8. 'les' → logprob: -9.645182609558105
    9. '(mod' → logprob: -10.895182609558105
    10. 't' → logprob: -12.395182609558105

Token 551: ' valeur' (ID: 41664)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01771307922899723
    2. 'lim' → logprob: -4.1427130699157715
    3. 'limit' → logprob: -7.1427130699157715
    4. ' mod' → logprob: -8.26771354675293
    5. 'val' → logprob: -8.51771354675293
    6. '10' → logprob: -9.14271354675293
    7. 'int' → logprob: -9.89271354675293
    8. 'pl' → logprob: -10.14271354675293
    9. 'limits' → logprob: -10.14271354675293
    10. 'range' → logprob: -10.39271354675293

Token 552: ' du' (ID: 1462)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.05174095556139946
    2. 'de' → logprob: -3.676740884780884
    3. 'du' → logprob: -4.426741123199463
    4. ' du' → logprob: -5.176741123199463
    5. ' mod' → logprob: -5.301741123199463
    6. ' de' → logprob: -6.051741123199463
    7. 'possible' → logprob: -10.176740646362305
    8. '(mod' → logprob: -10.426740646362305
    9. '.' → logprob: -10.676740646362305
    10. 'modifiable' → logprob: -11.301740646362305

Token 553: ' module' (ID: 8827)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.128163257315464e-07
    2. ' mod' → logprob: -16.25
    3. 'module' → logprob: -16.25
    4. 'modifiable' → logprob: -17.0
    5. '
' → logprob: -18.75
    6. 'moder' → logprob: -18.875
    7. 'int' → logprob: -19.5
    8. '```' → logprob: -19.75
    9. 'mo' → logprob: -19.875
    10. 'mode' → logprob: -19.875

Token 554: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00494258152320981
    2. '
' → logprob: -6.004942417144775
    3. '<|end|>' → logprob: -6.254942417144775
    4. ' for' → logprob: -7.754942417144775
    5. 'print' → logprob: -10.129942893981934
    6. '#' → logprob: -10.254942893981934
    7. ')' → logprob: -11.379942893981934
    8. '.' → logprob: -12.379942893981934
    9. '```' → logprob: -12.379942893981934
    10. '+' → logprob: -12.379942893981934

Token 555: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.961759259458631e-06
    2. 'ans' → logprob: -12.875004768371582
    3. ' for' → logprob: -13.375004768371582
    4. 'print' → logprob: -14.875004768371582
    5. '#' → logprob: -15.250004768371582
    6. 'i' → logprob: -17.1250057220459
    7. 'import' → logprob: -17.6250057220459
    8. 'pow' → logprob: -17.6250057220459
    9. '```' → logprob: -17.7500057220459
    10. 't' → logprob: -18.0000057220459

Token 556: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6047699318733066e-05
    2. 'ans' → logprob: -11.500016212463379
    3. '#' → logprob: -12.750016212463379
    4. ' for' → logprob: -14.000016212463379
    5. 'print' → logprob: -14.750016212463379
    6. 'import' → logprob: -14.875016212463379
    7. 'answer' → logprob: -15.125016212463379
    8. 't' → logprob: -15.375016212463379
    9. 'def' → logprob: -15.750016212463379
    10. 'from' → logprob: -15.875016212463379

Token 557: 'cle' (ID: 3170)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03711321949958801
    2. 'c' → logprob: -4.037113189697266
    3. 'for' → logprob: -4.287113189697266
    4. 'cle' → logprob: -5.912113189697266
    5. ' for' → logprob: -7.537113189697266
    6. 'e' → logprob: -7.787113189697266
    7. 'f' → logprob: -7.912113189697266
    8. 'l' → logprob: -8.162113189697266
    9. 'cles' → logprob: -8.412113189697266
    10. 'i' → logprob: -8.537113189697266

Token 558: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04858771339058876
    2. ' for' → logprob: -3.0485877990722656
    3. ':' → logprob: -15.798587799072266
    4. 'i' → logprob: -16.923587799072266
    5. '   ' → logprob: -17.423587799072266
    6. '
' → logprob: -17.548587799072266
    7. ' ' → logprob: -17.798587799072266
    8. '	for' → logprob: -18.298587799072266
    9. 'pour' → logprob: -18.298587799072266
    10. ' i' → logprob: -18.798587799072266

Token 559: ' traiter' (ID: 105852)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0048441230319440365
    2. 'x' → logprob: -6.0048441886901855
    3. 'i' → logprob: -6.8798441886901855
    4. 'n' → logprob: -7.3798441886901855
    5. ' a' → logprob: -8.254843711853027
    6. 'num' → logprob: -8.379843711853027
    7. 'ai' → logprob: -9.254843711853027
    8. 'A' → logprob: -9.254843711853027
    9. 'Ai' → logprob: -11.629843711853027
    10. 'number' → logprob: -11.754843711853027

Token 560: ' chaque' (ID: 21194)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.044520292431116104
    2. 'A' → logprob: -3.544520378112793
    3. ' a' → logprob: -5.169520378112793
    4. 'n' → logprob: -5.669520378112793
    5. 'i' → logprob: -6.294520378112793
    6. 'x' → logprob: -6.669520378112793
    7. 'num' → logprob: -7.419520378112793
    8. 'range' → logprob: -7.669520378112793
    9. ' A' → logprob: -7.919520378112793
    10. 'for' → logprob: -7.919520378112793

Token 561: ' élément' (ID: 99627)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026987699791789055
    2. ' a' → logprob: -3.6519877910614014
    3. 'x' → logprob: -8.02698802947998
    4. 'num' → logprob: -9.02698802947998
    5. 'value' → logprob: -9.90198802947998
    6. 'v' → logprob: -10.40198802947998
    7. 'i' → logprob: -10.40198802947998
    8. 'n' → logprob: -10.65198802947998
    9. 'number' → logprob: -10.65198802947998
    10. ' x' → logprob: -11.15198802947998

Token 562: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4493621587753296
    2. 'in' → logprob: -1.0743621587753296
    3. 'A' → logprob: -4.449362277984619
    4. ' for' → logprob: -5.949362277984619
    5. 'for' → logprob: -5.949362277984619
    6. ' A' → logprob: -6.199362277984619
    7. ':' → logprob: -7.824362277984619
    8. 'a' → logprob: -7.824362277984619
    9. ' of' → logprob: -8.074361801147461
    10. 'i' → logprob: -9.324361801147461

Token 563: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0019341122824698687
    2. ' A' → logprob: -6.251934051513672
    3. 'range' → logprob: -12.626934051513672
    4. ' range' → logprob: -13.251934051513672
    5. ' ' → logprob: -15.501934051513672
    6. 'a' → logprob: -16.501934051513672
    7. '[' → logprob: -17.126934051513672
    8. '	A' → logprob: -17.501934051513672
    9. '  ' → logprob: -18.064434051513672
    10. ' ' → logprob: -18.126934051513672

Token 564: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.2987729102605954e-05
    2. 'range' → logprob: -10.500042915344238
    3. ' A' → logprob: -11.375042915344238
    4. ' range' → logprob: -12.625042915344238
    5. '[' → logprob: -15.625042915344238
    6. 'a' → logprob: -16.125043869018555
    7. ')' → logprob: -16.625043869018555
    8. '...' → logprob: -17.000043869018555
    9. '```' → logprob: -17.125043869018555
    10. ' ' → logprob: -18.250043869018555

Token 565: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.056440677493810654
    2. ' A' → logprob: -2.931440591812134
    3. ' in' → logprob: -6.931440830230713
    4. ':' → logprob: -8.056440353393555
    5. 'in' → logprob: -9.056440353393555
    6. ' for' → logprob: -9.931440353393555
    7. 'for' → logprob: -10.056440353393555
    8. 'a' → logprob: -10.806440353393555
    9. 'range' → logprob: -12.056440353393555
    10. ' range' → logprob: -12.181440353393555

Token 566: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2767474055290222
    2. ' for' → logprob: -1.901747465133667
    3. ':' → logprob: -2.651747465133667
    4. '
' → logprob: -4.151747226715088
    5. ':
' → logprob: -5.651747226715088
    6. '<|end|>' → logprob: -6.651747226715088
    7. '```' → logprob: -7.776747226715088
    8. '  
' → logprob: -8.026747703552246
    9. ' 
' → logprob: -8.026747703552246
    10. ',' → logprob: -10.026747703552246

Token 567: ' l' (ID: 305)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.35639965534210205
    2. 'range' → logprob: -1.231399655342102
    3. ' range' → logprob: -6.3563995361328125
    4. 'for' → logprob: -6.6063995361328125
    5. 'part' → logprob: -6.9813995361328125
    6. ' A' → logprob: -6.9813995361328125
    7. 'calcul' → logprob: -7.4813995361328125
    8. 'n' → logprob: -7.8563995361328125
    9. 'ans' → logprob: -8.356399536132812
    10. '<|end|>' → logprob: -8.481399536132812

Token 568: ''aide' (ID: 75684)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2902081608772278
    2. 'range' → logprob: -1.415208101272583
    3. ' range' → logprob: -5.415208339691162
    4. 'ange' → logprob: -5.665208339691162
    5. 'a' → logprob: -7.915208339691162
    6. 'n' → logprob: -8.290207862854004
    7. 'for' → logprob: -8.790207862854004
    8. 'enumer' → logprob: -10.040207862854004
    9. ')' → logprob: -10.165207862854004
    10. ' A' → logprob: -10.165207862854004

Token 569: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2961973249912262
    2. ' for' → logprob: -2.4211974143981934
    3. 'A' → logprob: -2.9211974143981934
    4. ' de' → logprob: -3.2961974143981934
    5. ' of' → logprob: -4.171197414398193
    6. ' range' → logprob: -4.421197414398193
    7. ' des' → logprob: -4.546197414398193
    8. ' A' → logprob: -4.671197414398193
    9. 'range' → logprob: -4.671197414398193
    10. ':' → logprob: -5.046197414398193

Token 570: ' son' (ID: 2391)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018171953037381172
    2. 'range' → logprob: -4.268171787261963
    3. ' A' → logprob: -6.643171787261963
    4. ' range' → logprob: -6.893171787261963
    5. 'for' → logprob: -6.893171787261963
    6. 'a' → logprob: -7.893171787261963
    7. '[' → logprob: -9.268172264099121
    8. '[
' → logprob: -10.268172264099121
    9. ' for' → logprob: -10.768172264099121
    10. 'enumer' → logprob: -10.893172264099121

Token 571: ' indice' (ID: 90848)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7200730443000793
    2. 'A' → logprob: -1.5950729846954346
    3. ':' → logprob: -1.8450729846954346
    4. 'range' → logprob: -2.5950729846954346
    5. 'enumer' → logprob: -3.4700729846954346
    6. ' range' → logprob: -3.7200729846954346
    7. ' for' → logprob: -4.970073223114014
    8. 'n' → logprob: -5.845073223114014
    9. ' A' → logprob: -6.345073223114014
    10. 't' → logprob: -6.720073223114014

Token 572: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09528166055679321
    2. ' for' → logprob: -2.5952816009521484
    3. ':' → logprob: -4.345281600952148
    4. '
' → logprob: -5.970281600952148
    5. ':
' → logprob: -7.845281600952148
    6. 'in' → logprob: -8.720281600952148
    7. ',' → logprob: -9.720281600952148
    8. ' in' → logprob: -10.595281600952148
    9. '```' → logprob: -10.845281600952148
    10. 'n' → logprob: -11.095281600952148

Token 573: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002811199810821563
    2. ' for' → logprob: -8.25028133392334
    3. '
' → logprob: -10.87528133392334
    4. '```' → logprob: -14.12528133392334
    5. 'i' → logprob: -16.250280380249023
    6. 'f' → logprob: -17.000280380249023
    7. ' 
' → logprob: -17.000280380249023
    8. 'fo' → logprob: -18.375280380249023
    9. '	for' → logprob: -19.250280380249023
    10. '  
' → logprob: -19.250280380249023

Token 574: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07058815658092499
    2. ' i' → logprob: -2.8205881118774414
    3. 'a' → logprob: -4.820588111877441
    4. ' a' → logprob: -8.320588111877441
    5. 'x' → logprob: -8.445588111877441
    6. 'ai' → logprob: -11.445588111877441
    7. '_i' → logprob: -11.570588111877441
    8. ' x' → logprob: -11.695588111877441
    9. ' ' → logprob: -12.320588111877441
    10. 'v' → logprob: -12.320588111877441

Token 575: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1608200967311859
    2. 'in' → logprob: -1.9108201265335083
    3. ' ' → logprob: -7.535820007324219
    4. ',' → logprob: -10.410820007324219
    5. ' ' → logprob: -11.785820007324219
    6. '  ' → logprob: -12.160820007324219
    7. ' i' → logprob: -12.535820007324219
    8. ' ,' → logprob: -12.910820007324219
    9. '	in' → logprob: -12.910820007324219
    10. '_' → logprob: -13.035820007324219

Token 576: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014168919064104557
    2. ' range' → logprob: -4.264168739318848
    3. 'A' → logprob: -12.264168739318848
    4. ' A' → logprob: -14.764168739318848
    5. ' ' → logprob: -16.014169692993164
    6. '	range' → logprob: -17.014169692993164
    7. 'rang' → logprob: -17.764169692993164
    8. '  ' → logprob: -18.139169692993164
    9. '   ' → logprob: -18.514169692993164
    10. 'r' → logprob: -18.764169692993164

Token 577: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00038872790173627436
    2. '(' → logprob: -8.250389099121094
    3. '(len' → logprob: -9.000389099121094
    4. '(
' → logprob: -13.000389099121094
    5. '(n' → logprob: -13.625389099121094
    6. 'N' → logprob: -14.375389099121094
    7. 'len' → logprob: -16.750389099121094
    8. ' (' → logprob: -18.500389099121094
    9. '()' → logprob: -18.750389099121094
    10. '(A' → logprob: -19.125389099121094

Token 578: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.098748053773306e-05
    2. '):
' → logprob: -10.62506103515625
    3. ')' → logprob: -10.75006103515625
    4. ' ):' → logprob: -11.37506103515625
    5. ':' → logprob: -12.75006103515625
    6. '+' → logprob: -15.37506103515625
    7. '):
' → logprob: -15.62506103515625
    8. ']:' → logprob: -16.00006103515625
    9. '}:' → logprob: -16.37506103515625
    10. '   ' → logprob: -16.62506103515625

Token 579: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6375040411949158
    2. '   ' → logprob: -0.7625040411949158
    3. '	ans' → logprob: -5.7625041007995605
    4. ' ans' → logprob: -6.3875041007995605
    5. '   ' → logprob: -10.512503623962402
    6. '(ans' → logprob: -10.762503623962402
    7. '    
' → logprob: -12.637503623962402
    8. '_ans' → logprob: -12.637503623962402
    9. '  ' → logprob: -12.887503623962402
    10. ' ' → logprob: -13.262503623962402

Token 580: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0026121633127331734
    2. 'if' → logprob: -6.252612113952637
    3. 'diff' → logprob: -8.627612113952637
    4. '   ' → logprob: -8.752612113952637
    5. ' ans' → logprob: -9.502612113952637
    6. 't' → logprob: -9.627612113952637
    7. 'inv' → logprob: -9.877612113952637
    8. 'temp' → logprob: -10.127612113952637
    9. 'a' → logprob: -10.877612113952637
    10. 'val' → logprob: -11.127612113952637

Token 581: ' Cal' (ID: 4453)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0011630769586190581
    2. 'diff' → logprob: -7.001163005828857
    3. 'temp' → logprob: -9.626163482666016
    4. 'tmp' → logprob: -10.251163482666016
    5. 'val' → logprob: -10.251163482666016
    6. 'inv' → logprob: -10.376163482666016
    7. 'if' → logprob: -11.001163482666016
    8. 'x' → logprob: -11.251163482666016
    9. 'add' → logprob: -11.626163482666016
    10. 'a' → logprob: -11.751163482666016

Token 582: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4968498647212982
    2. '=' → logprob: -1.6218498945236206
    3. 'cul' → logprob: -2.496849775314331
    4. 'culate' → logprob: -3.246849775314331
    5. 'cule' → logprob: -3.621849775314331
    6. 'cu' → logprob: -4.12185001373291
    7. 'ans' → logprob: -4.62185001373291
    8. '_ans' → logprob: -4.62185001373291
    9. 't' → logprob: -6.37185001373291
    10. 'culated' → logprob: -6.74685001373291

Token 583: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.48056840896606445
    2. '(ans' → logprob: -1.1055684089660645
    3. ' ans' → logprob: -3.3555684089660645
    4. '   ' → logprob: -5.1055684089660645
    5. 't' → logprob: -5.7305684089660645
    6. ' (' → logprob: -5.8555684089660645
    7. '(t' → logprob: -6.1055684089660645
    8. '	ans' → logprob: -7.7305684089660645
    9. ' t' → logprob: -8.230567932128906
    10. 'temp' → logprob: -8.730567932128906

Token 584: ' somme' (ID: 64484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009345895610749722
    2. 'inv' → logprob: -5.634346008300781
    3. 't' → logprob: -6.134346008300781
    4. 'temp' → logprob: -6.759346008300781
    5. '(ans' → logprob: -7.134346008300781
    6. 'diff' → logprob: -8.134346008300781
    7. 'inverse' → logprob: -8.134346008300781
    8. 'val' → logprob: -8.259346008300781
    9. 'term' → logprob: -8.509346008300781
    10. 'tmp' → logprob: -8.634346008300781

Token 585: ' modulo' (ID: 112372)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.18801912665367126
    2. ' +=' → logprob: -1.8130191564559937
    3. '+=(' → logprob: -5.313019275665283
    4. 'ans' → logprob: -6.438019275665283
    5. ' ans' → logprob: -7.063019275665283
    6. '(ans' → logprob: -7.813019275665283
    7. '=' → logprob: -8.438018798828125
    8. ' =' → logprob: -9.188018798828125
    9. '   ' → logprob: -9.313018798828125
    10. ']+=' → logprob: -11.563018798828125

Token 586: ' '' (ID: 461)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.551983654499054
    2. '(ans' → logprob: -1.1769835948944092
    3. 'ans' → logprob: -2.801983594894409
    4. '(' → logprob: -3.801983594894409
    5. ' +=' → logprob: -4.551983833312988
    6. ' ans' → logprob: -4.801983833312988
    7. '+=' → logprob: -5.051983833312988
    8. '   ' → logprob: -5.926983833312988
    9. '(t' → logprob: -6.176983833312988
    10. ' =' → logprob: -6.301983833312988

Token 587: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.107425062713446e-06
    2. 't' → logprob: -12.875006675720215
    3. ' mod' → logprob: -13.125006675720215
    4. '(mod' → logprob: -13.625006675720215
    5. 'ans' → logprob: -13.750006675720215
    6. 'A' → logprob: -16.25000762939453
    7. ' ' → logprob: -18.12500762939453
    8. '(' → logprob: -18.37500762939453
    9. '   ' → logprob: -19.00000762939453
    10. ' (' → logprob: -19.62500762939453

Token 588: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7580864429473877
    2. ' +=' → logprob: -1.6330864429473877
    3. 'ans' → logprob: -2.1330864429473877
    4. '+=' → logprob: -2.3830864429473877
    5. '(ans' → logprob: -3.0080864429473877
    6. ' ans' → logprob: -3.2580864429473877
    7. ' (' → logprob: -4.383086204528809
    8. ')' → logprob: -4.508086204528809
    9. '(' → logprob: -5.258086204528809
    10. ',' → logprob: -6.508086204528809

Token 589: ' en' (ID: 469)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2369842678308487
    2. ' +=' → logprob: -2.1119842529296875
    3. 'ans' → logprob: -3.1119842529296875
    4. '(ans' → logprob: -3.9869842529296875
    5. '=' → logprob: -4.7369842529296875
    6. '   ' → logprob: -4.7369842529296875
    7. ' ans' → logprob: -5.6119842529296875
    8. ' =' → logprob: -6.3619842529296875
    9. '(' → logprob: -6.4869842529296875
    10. '+=(' → logprob: -7.3619842529296875

Token 590: ' ajout' (ID: 64605)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5778676271438599
    2. '(ans' → logprob: -0.8278676271438599
    3. '(' → logprob: -6.95286750793457
    4. ' ans' → logprob: -7.07786750793457
    5. ' (' → logprob: -10.20286750793457
    6. 't' → logprob: -10.70286750793457
    7. '	ans' → logprob: -10.70286750793457
    8. '(t' → logprob: -10.82786750793457
    9. 'answer' → logprob: -12.32786750793457
    10. '   ' → logprob: -12.45286750793457

Token 591: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.17604929208755493
    2. '=' → logprob: -2.42604923248291
    3. '+=' → logprob: -3.30104923248291
    4. ' +=' → logprob: -3.80104923248291
    5. '   ' → logprob: -4.42604923248291
    6. ' =' → logprob: -7.17604923248291
    7. 'ans' → logprob: -8.42604923248291
    8. 'ing' → logprob: -8.42604923248291
    9. '(' → logprob: -9.17604923248291
    10. '+' → logprob: -9.42604923248291

Token 592: ',' (ID: 11)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.10922299325466156
    2. 't' → logprob: -2.609222888946533
    3. '(ans' → logprob: -4.484222888946533
    4. ' (' → logprob: -4.609222888946533
    5. 'pow' → logprob: -5.484222888946533
    6. 'ans' → logprob: -5.734222888946533
    7. ' t' → logprob: -7.734222888946533
    8. '(pow' → logprob: -8.109223365783691
    9. '(mod' → logprob: -8.984223365783691
    10. 'mod' → logprob: -8.984223365783691

Token 593: ' pour' (ID: 1930)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.8427159190177917
    2. '(ans' → logprob: -1.4677159786224365
    3. 'ans' → logprob: -1.5927159786224365
    4. 't' → logprob: -2.7177159786224365
    5. ' (' → logprob: -2.8427159786224365
    6. ' ans' → logprob: -4.717715740203857
    7. 'mod' → logprob: -7.092715740203857
    8. 'pow' → logprob: -7.092715740203857
    9. ' t' → logprob: -7.967715740203857
    10. '(' → logprob: -8.717716217041016

Token 594: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28594136238098145
    2. 't' → logprob: -2.2859413623809814
    3. 'range' → logprob: -2.7859413623809814
    4. ' i' → logprob: -3.1609413623809814
    5. '(i' → logprob: -4.410941123962402
    6. '   ' → logprob: -4.910941123962402
    7. ' range' → logprob: -4.910941123962402
    8. 'A' → logprob: -5.660941123962402
    9. 'ans' → logprob: -5.785941123962402
    10. ' t' → logprob: -6.410941123962402

Token 595: ' élément' (ID: 99627)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6902340650558472
    2. 't' → logprob: -1.0652340650558472
    3. ' i' → logprob: -2.9402341842651367
    4. 'A' → logprob: -3.1902341842651367
    5. ' t' → logprob: -3.1902341842651367
    6. ' A' → logprob: -4.440234184265137
    7. ' (' → logprob: -6.190234184265137
    8. '(i' → logprob: -6.690234184265137
    9. '(' → logprob: -7.315234184265137
    10. '(t' → logprob: -7.565234184265137

Token 596: ',' (ID: 11)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.189071536064148
    2. ',' → logprob: -1.314071536064148
    3. 't' → logprob: -1.689071536064148
    4. ' (' → logprob: -2.0640716552734375
    5. ' ,' → logprob: -2.9390716552734375
    6. ' A' → logprob: -3.5640716552734375
    7. '(' → logprob: -4.1890716552734375
    8. 'A' → logprob: -4.9390716552734375
    9. '(t' → logprob: -5.5640716552734375
    10. ')' → logprob: -6.5640716552734375

Token 597: ' t' (ID: 260)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.5841924548149109
    2. 't' → logprob: -0.8341924548149109
    3. ' (' → logprob: -5.709192276000977
    4. 'pow' → logprob: -6.459192276000977
    5. 'mod' → logprob: -6.709192276000977
    6. ' t' → logprob: -7.209192276000977
    7. '(mod' → logprob: -7.584192276000977
    8. '   ' → logprob: -7.959192276000977
    9. '(' → logprob: -8.584192276000977
    10. '(pow' → logprob: -9.084192276000977

Token 598: ' multip' (ID: 17524)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7253671884536743
    2. '*' → logprob: -1.3503671884536743
    3. ' //' → logprob: -1.8503671884536743
    4. '//' → logprob: -2.7253670692443848
    5. '%' → logprob: -3.8503670692443848
    6. ' %' → logprob: -5.975367069244385
    7. '//=' → logprob: -6.725367069244385
    8. ' ' → logprob: -6.850367069244385
    9. 'div' → logprob: -6.975367069244385
    10. '+' → logprob: -6.975367069244385

Token 599: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.1348295360803604
    2. 'li' → logprob: -2.259829521179199
    3. '=' → logprob: -4.634829521179199
    4. 'lication' → logprob: -5.134829521179199
    5. 'lications' → logprob: -7.134829521179199
    6. 'lique' → logprob: -7.259829521179199
    7. '%=' → logprob: -7.384829521179199
    8. '*=' → logprob: -7.509829521179199
    9. 'ipl' → logprob: -7.759829521179199
    10. 'lied' → logprob: -7.759829521179199

Token 600: ' par' (ID: 686)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -1.4365946054458618
    2. '%A' → logprob: -1.4365946054458618
    3. ' A' → logprob: -1.9365946054458618
    4. 'A' → logprob: -2.0615944862365723
    5. 'by' → logprob: -2.0615944862365723
    6. '(A' → logprob: -2.4365944862365723
    7. '*A' → logprob: -4.061594486236572
    8. '%' → logprob: -5.061594486236572
    9. '*' → logprob: -5.811594486236572
    10. ')' → logprob: -6.436594486236572

Token 601: ' l' (ID: 305)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -5.478889215737581e-05
    2. ' pow' → logprob: -10.375054359436035
    3. 'A' → logprob: -11.000054359436035
    4. '(pow' → logprob: -12.000054359436035
    5. '
' → logprob: -15.750054359436035
    6. '   ' → logprob: -16.00005531311035
    7. '```' → logprob: -16.62505531311035
    8. 'inverse' → logprob: -17.12505531311035
    9. 'invert' → logprob: -17.50005531311035
    10. 'p' → logprob: -17.50005531311035

Token 602: ''in' (ID: 17942)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.001639354508370161
    2. ' pow' → logprob: -7.126639366149902
    3. '(pow' → logprob: -7.501639366149902
    4. 'A' → logprob: -8.501639366149902
    5. 't' → logprob: -10.876639366149902
    6. 'a' → logprob: -11.376639366149902
    7. 'p' → logprob: -11.376639366149902
    8. '   ' → logprob: -12.251639366149902
    9. '
' → logprob: -12.376639366149902
    10. '1' → logprob: -12.501639366149902

Token 603: 'verse' (ID: 7093)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0957261249423027
    2. 'verse' → logprob: -3.0957260131835938
    3. '(A' → logprob: -3.3457260131835938
    4. 'pow' → logprob: -5.095726013183594
    5. 't' → logprob: -5.595726013183594
    6. ' A' → logprob: -8.470726013183594
    7. 'put' → logprob: -8.595726013183594
    8. 'div' → logprob: -8.845726013183594
    9. 'vers' → logprob: -9.220726013183594
    10. 'a' → logprob: -9.345726013183594

Token 604: ' multiplic' (ID: 67929)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.13125847280025482
    2. 'A' → logprob: -2.881258487701416
    3. '(pow' → logprob: -3.506258487701416
    4. 'mod' → logprob: -4.381258487701416
    5. '(A' → logprob: -4.631258487701416
    6. ' pow' → logprob: -5.506258487701416
    7. 'a' → logprob: -6.006258487701416
    8. 'inv' → logprob: -6.506258487701416
    9. ' A' → logprob: -6.756258487701416
    10. '(' → logprob: -6.881258487701416

Token 605: 'atif' (ID: 23984)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08728887885808945
    2. 'atif' → logprob: -2.5872888565063477
    3. 'ative' → logprob: -4.962288856506348
    4. 'é' → logprob: -7.587288856506348
    5. 've' → logprob: -8.712288856506348
    6. 't' → logprob: -9.587288856506348
    7. 'c' → logprob: -10.087288856506348
    8. 'a' → logprob: -10.087288856506348
    9. 'def' → logprob: -10.212288856506348
    10. 'p' → logprob: -10.337288856506348

Token 606: ' de' (ID: 334)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.0618079900741577
    2. ' de' → logprob: -1.8118079900741577
    3. ' pow' → logprob: -2.0618081092834473
    4. '(pow' → logprob: -2.0618081092834473
    5. '(' → logprob: -3.0618081092834473
    6. ' t' → logprob: -3.5618081092834473
    7. 'a' → logprob: -3.6868081092834473
    8. 'de' → logprob: -3.8118081092834473
    9. ' (' → logprob: -4.186808109283447
    10. 't' → logprob: -4.186808109283447

Token 607: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.265633419388905e-05
    2. '(A' → logprob: -10.375062942504883
    3. ' A' → logprob: -10.500062942504883
    4. 'pow' → logprob: -13.000062942504883
    5. '   ' → logprob: -14.375062942504883
    6. 'a' → logprob: -15.625062942504883
    7. '(' → logprob: -15.750062942504883
    8. '	A' → logprob: -15.875062942504883
    9. ' (' → logprob: -16.125062942504883
    10. '(pow' → logprob: -16.125062942504883

Token 608: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003965012729167938
    2. '[A' → logprob: -5.753964900970459
    3. 'A' → logprob: -8.003965377807617
    4. '(A' → logprob: -8.503965377807617
    5. 'pow' → logprob: -9.003965377807617
    6. '(i' → logprob: -9.128965377807617
    7. '[' → logprob: -12.128965377807617
    8. 'i' → logprob: -12.878965377807617
    9. 'a' → logprob: -13.128965377807617
    10. 'import' → logprob: -13.503965377807617

Token 609: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9178295731544495
    2. '[i' → logprob: -1.5428295135498047
    3. '],' → logprob: -1.7928295135498047
    4. '])' → logprob: -1.9178295135498047
    5. ')' → logprob: -3.4178295135498047
    6. ',' → logprob: -3.9178295135498047
    7. '   ' → logprob: -5.417829513549805
    8. '),' → logprob: -6.042829513549805
    9. ' ,' → logprob: -6.167829513549805
    10. ' ]' → logprob: -6.292829513549805

Token 610: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6756624579429626
    2. ' ans' → logprob: -1.5506625175476074
    3. ' =' → logprob: -1.6756625175476074
    4. '=' → logprob: -3.0506625175476074
    5. 'ans' → logprob: -3.9256625175476074
    6. ' t' → logprob: -4.800662517547607
    7. ' +=' → logprob: -5.425662517547607
    8. ',' → logprob: -5.675662517547607
    9. 't' → logprob: -6.050662517547607
    10. '(ans' → logprob: -6.550662517547607

Token 611: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0036680102348327637
    2. ' ans' → logprob: -5.753667831420898
    3. '   ' → logprob: -7.878667831420898
    4. 't' → logprob: -9.753667831420898
    5. '(ans' → logprob: -10.753667831420898
    6. '	ans' → logprob: -11.378667831420898
    7. 'inv' → logprob: -12.003667831420898
    8. '```' → logprob: -12.753667831420898
    9. 'inverse' → logprob: -12.878667831420898
    10. ' ' → logprob: -13.253667831420898

Token 612: ' pow' (ID: 9779)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006466906052082777
    2. 'inv' → logprob: -6.131466865539551
    3. 'from' → logprob: -6.256466865539551
    4. ' ans' → logprob: -6.506466865539551
    5. 'import' → logprob: -8.50646686553955
    6. '   ' → logprob: -8.63146686553955
    7. 't' → logprob: -8.63146686553955
    8. '#' → logprob: -9.63146686553955
    9. '(ans' → logprob: -9.75646686553955
    10. 'inverse' → logprob: -10.00646686553955

Token 613: '(A' (ID: 10706)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.026323985308408737
    2. '(' → logprob: -3.6513240337371826
    3. '(
' → logprob: -11.026324272155762
    4. 't' → logprob: -12.151324272155762
    5. '(pow' → logprob: -14.901324272155762
    6. '(

' → logprob: -15.151324272155762
    7. 'mod' → logprob: -15.276324272155762
    8. ' (' → logprob: -15.401324272155762
    9. 'pow' → logprob: -15.651324272155762
    10. '	t' → logprob: -15.651324272155762

Token 614: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07697945833206177
    2. '(i' → logprob: -3.826979398727417
    3. '(A' → logprob: -4.076979637145996
    4. '(' → logprob: -4.326979637145996
    5. '[' → logprob: -4.576979637145996
    6. '[A' → logprob: -4.576979637145996
    7. ')' → logprob: -7.576979637145996
    8. 'A' → logprob: -7.951979637145996
    9. ',' → logprob: -8.701979637145996
    10. '([' → logprob: -8.826979637145996

Token 615: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004660334438085556
    2. '[i' → logprob: -5.754660129547119
    3. ' ,' → logprob: -6.629660129547119
    4. '(i' → logprob: -10.379660606384277
    5. '[' → logprob: -10.629660606384277
    6. '],' → logprob: -10.754660606384277
    7. '),' → logprob: -11.004660606384277
    8. ')' → logprob: -11.254660606384277
    9. ']' → logprob: -11.379660606384277
    10. '   ' → logprob: -11.629660606384277

Token 616: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.19742538034915924
    2. ' mod' → logprob: -1.947425365447998
    3. '-' → logprob: -3.322425365447998
    4. ' -' → logprob: -7.822425365447998
    5. '-mod' → logprob: -10.447425842285156
    6. '.mod' → logprob: -12.072425842285156
    7. '(mod' → logprob: -12.072425842285156
    8. ' ' → logprob: -12.197425842285156
    9. '	mod' → logprob: -12.322425842285156
    10. 'MOD' → logprob: -14.697425842285156

Token 617: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009771435521543026
    2. ' -' → logprob: -4.634771347045898
    3. ',' → logprob: -11.134771347045898
    4. '```' → logprob: -14.384771347045898
    5. ' ' → logprob: -16.2597713470459
    6. '   ' → logprob: -16.8847713470459
    7. ' ,' → logprob: -17.3847713470459
    8. ')' → logprob: -17.5097713470459
    9. '−' → logprob: -17.5097713470459
    10. 'a' → logprob: -18.2597713470459

Token 618: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.123899558791891e-05
    2. '-' → logprob: -9.62507152557373
    3. '```' → logprob: -12.62507152557373
    4. '

' → logprob: -14.75007152557373
    5. ' -' → logprob: -14.75007152557373
    6. ' ' → logprob: -15.00007152557373
    7. '
' → logprob: -15.18757152557373
    8. '
' → logprob: -16.812570571899414
    9. '...' → logprob: -16.875070571899414
    10. '   ' → logprob: -17.437570571899414

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01846514642238617
    2. ')' → logprob: -4.018465042114258
    3. ' ,' → logprob: -8.143465042114258
    4. ' )' → logprob: -11.643465042114258
    5. ' ' → logprob: -12.018465042114258
    6. '   ' → logprob: -12.393465042114258
    7. '),' → logprob: -13.268465042114258
    8. '```' → logprob: -14.143465042114258
    9. ')`' → logprob: -14.768465042114258
    10. ',t' → logprob: -14.893465042114258

Token 620: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00317783304490149
    2. ' mod' → logprob: -5.753177642822266
    3. '	mod' → logprob: -15.878177642822266
    4. ')' → logprob: -17.503177642822266
    5. '   ' → logprob: -18.378177642822266
    6. '(mod' → logprob: -19.378177642822266
    7. ' ' → logprob: -20.003177642822266
    8. '_mod' → logprob: -20.503177642822266
    9. '.mod' → logprob: -21.128177642822266
    10. 'MOD' → logprob: -21.253177642822266

Token 621: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5690089639974758e-05
    2. ' )' → logprob: -11.875015258789062
    3. '))' → logprob: -12.500015258789062
    4. ')
' → logprob: -13.250015258789062
    5. '   ' → logprob: -13.625015258789062
    6. ')`' → logprob: -14.000015258789062
    7. ')
' → logprob: -15.250015258789062
    8. ')))' → logprob: -15.500015258789062
    9. '),' → logprob: -15.875015258789062
    10. ' ' → logprob: -16.125015258789062

Token 622: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004427051462698728
    2. ' )' → logprob: -9.500442504882812
    3. '   ' → logprob: -9.625442504882812
    4. ',' → logprob: -9.625442504882812
    5. '))' → logprob: -10.000442504882812
    6. ')))' → logprob: -10.375442504882812
    7. '),' → logprob: -10.500442504882812
    8. '):' → logprob: -11.125442504882812
    9. '<|end|>' → logprob: -11.125442504882812
    10. ')*' → logprob: -11.750442504882812

Token 623: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2559957802295685
    2. ' pow' → logprob: -2.630995750427246
    3. 'pow' → logprob: -2.755995750427246
    4. ' l' → logprob: -3.505995750427246
    5. '<|end|>' → logprob: -3.755995750427246
    6. 'la' → logprob: -4.630995750427246
    7. ' une' → logprob: -5.005995750427246
    8. ' the' → logprob: -5.005995750427246
    9. 'l' → logprob: -5.255995750427246
    10. 'the' → logprob: -5.630995750427246

Token 624: ''in' (ID: 17942)
  Prédit: ''ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.6002565622329712
    2. ')' → logprob: -1.9752565622329712
    3. 'a' → logprob: -2.4752564430236816
    4. 'pow' → logprob: -3.4752564430236816
    5. '')' → logprob: -3.6002564430236816
    6. ''appel' → logprob: -3.6002564430236816
    7. ''op' → logprob: -4.100256443023682
    8. ' pow' → logprob: -4.100256443023682
    9. ' inverse' → logprob: -4.725256443023682
    10. ''appro' → logprob: -4.850256443023682

Token 625: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.008149150758981705
    2. 'v' → logprob: -4.883149147033691
    3. 'pow' → logprob: -8.508149147033691
    4. 't' → logprob: -9.008149147033691
    5. 'vers' → logprob: -9.883149147033691
    6. 'built' → logprob: -9.883149147033691
    7. '```' → logprob: -11.258149147033691
    8. 'tr' → logprob: -11.383149147033691
    9. 'versed' → logprob: -11.383149147033691
    10. 'voke' → logprob: -11.383149147033691

Token 626: ' multiplic' (ID: 67929)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3999190926551819
    2. 'multip' → logprob: -1.524919033050537
    3. ')' → logprob: -2.899919033050537
    4. '_mod' → logprob: -3.649919033050537
    5. ' multiplic' → logprob: -4.149919033050537
    6. ' modulo' → logprob: -5.274919033050537
    7. ' mod' → logprob: -6.399919033050537
    8. '<|end|>' → logprob: -6.524919033050537
    9. '_' → logprob: -6.899919033050537
    10. '_m' → logprob: -7.274919033050537

Token 627: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.00022594700567424297
    2. 'ative' → logprob: -8.500226020812988
    3. '```' → logprob: -11.250226020812988
    4. 'itif' → logprob: -13.500226020812988
    5. '   ' → logprob: -14.125226020812988
    6. '}' → logprob: -14.250226020812988
    7. 't' → logprob: -14.375226020812988
    8. 'cat' → logprob: -14.625226020812988
    9. 'ativ' → logprob: -14.875226020812988
    10. '[' → logprob: -15.000226020812988

Token 628: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018401013687253
    2. 'mod' → logprob: -4.893401145935059
    3. '(' → logprob: -5.768401145935059
    4. ',' → logprob: -6.643401145935059
    5. ' modulo' → logprob: -6.643401145935059
    6. 'de' → logprob: -6.893401145935059
    7. ' )' → logprob: -7.018401145935059
    8. '   ' → logprob: -7.143401145935059
    9. ' de' → logprob: -7.268401145935059
    10. '_mod' → logprob: -8.643401145935059

Token 629: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005235648714005947
    2. ' A' → logprob: -5.25523567199707
    3. '(A' → logprob: -13.50523567199707
    4. ' ' → logprob: -15.75523567199707
    5. '(' → logprob: -15.88023567199707
    6. '<|end|>' → logprob: -15.88023567199707
    7. ')' → logprob: -16.75523567199707
    8. '	A' → logprob: -16.88023567199707
    9. '   ' → logprob: -17.25523567199707
    10. '```' → logprob: -17.63023567199707

Token 630: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.458980300929397e-05
    2. '[' → logprob: -9.62508487701416
    3. ')' → logprob: -11.50008487701416
    4. 'A' → logprob: -13.12508487701416
    5. '(i' → logprob: -13.50008487701416
    6. '```' → logprob: -13.87508487701416
    7. '[A' → logprob: -14.00008487701416
    8. 'i' → logprob: -14.25008487701416
    9. '   ' → logprob: -14.37508487701416
    10. ']' → logprob: -15.37508487701416

Token 631: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3878597915172577
    2. ',' → logprob: -1.13785982131958
    3. '   ' → logprob: -7.38785982131958
    4. ' ,' → logprob: -8.887859344482422
    5. ' )' → logprob: -10.262859344482422
    6. '))' → logprob: -10.512859344482422
    7. ' ' → logprob: -10.762859344482422
    8. '),' → logprob: -10.887859344482422
    9. ')}' → logprob: -11.012859344482422
    10. ' modulo' → logprob: -11.012859344482422

Token 632: ' modulo' (ID: 112372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49844610691070557
    2. '   ' → logprob: -1.3734461069107056
    3. ',' → logprob: -1.9984461069107056
    4. ' modulo' → logprob: -7.373445987701416
    5. '%' → logprob: -7.498445987701416
    6. ').' → logprob: -7.748445987701416
    7. '),' → logprob: -7.998445987701416
    8. ' )' → logprob: -8.123446464538574
    9. ' ,' → logprob: -8.248446464538574
    10. ')%' → logprob: -8.873446464538574

Token 633: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011132830753922462
    2. ' mod' → logprob: -4.511132717132568
    3. '(mod' → logprob: -9.386133193969727
    4. '	mod' → logprob: -14.386133193969727
    5. ' ' → logprob: -16.011133193969727
    6. '_mod' → logprob: -16.136133193969727
    7. '```' → logprob: -16.261133193969727
    8. ')' → logprob: -16.886133193969727
    9. ',' → logprob: -17.011133193969727
    10. ''' → logprob: -17.136133193969727

Token 634: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4828716814517975
    2. '):' → logprob: -1.482871651649475
    3. '   ' → logprob: -2.3578717708587646
    4. ')' → logprob: -2.8578717708587646
    5. ',' → logprob: -6.2328715324401855
    6. ' :' → logprob: -6.9828715324401855
    7. '.' → logprob: -8.482872009277344
    8. ']:' → logprob: -8.857872009277344
    9. ':
' → logprob: -8.982872009277344
    10. '):
' → logprob: -9.232872009277344

Token 635: 'util' (ID: 2056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015899618156254292
    2. '):' → logprob: -7.001589775085449
    3. ').' → logprob: -7.876589775085449
    4. ' )' → logprob: -8.50158977508545
    5. '))' → logprob: -10.25158977508545
    6. '),' → logprob: -10.62658977508545
    7. '   ' → logprob: -11.37658977508545
    8. ',' → logprob: -11.87658977508545
    9. ')
' → logprob: -12.12658977508545
    10. '.' → logprob: -13.37658977508545

Token 636: 'ise' (ID: 1096)
  Prédit: 'isant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isant' → logprob: -0.013344455510377884
    2. 'isé' → logprob: -4.7633442878723145
    3. 'is' → logprob: -6.1383442878723145
    4. ')' → logprob: -7.2633442878723145
    5. 'ise' → logprob: -7.2633442878723145
    6. 'isation' → logprob: -8.013344764709473
    7. '=' → logprob: -8.138344764709473
    8. 'isée' → logprob: -8.638344764709473
    9. 'iser' → logprob: -9.638344764709473
    10. 'isateur' → logprob: -9.888344764709473

Token 637: ' le' (ID: 505)
  Prédit: ' modular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modular' → logprob: -1.1774258613586426
    2. ')' → logprob: -1.3024258613586426
    3. 'pow' → logprob: -1.6774258613586426
    4. ' pow' → logprob: -2.0524258613586426
    5. 'mod' → logprob: -2.9274258613586426
    6. ' mod' → logprob: -3.6774258613586426
    7. ' a' → logprob: -4.802425861358643
    8. ' the' → logprob: -5.052425861358643
    9. '3' → logprob: -5.927425861358643
    10. ' Euler' → logprob: -6.552425861358643

Token 638: ' petit' (ID: 20577)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.04550214856863022
    2. 'mod' → logprob: -3.670502185821533
    3. ')' → logprob: -4.295502185821533
    4. ' pow' → logprob: -5.920502185821533
    5. ' modular' → logprob: -7.045502185821533
    6. '3' → logprob: -7.545502185821533
    7. 'Euler' → logprob: -7.920502185821533
    8. ' )' → logprob: -9.295501708984375
    9. '),' → logprob: -9.545501708984375
    10. ',' → logprob: -10.045501708984375

Token 639: ' thé' (ID: 34740)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9015512466430664
    2. '```' → logprob: -1.1515512466430664
    3. ' ' → logprob: -1.7765512466430664
    4. ' prince' → logprob: -3.5265512466430664
    5. '_' → logprob: -3.6515512466430664
    6. ' )' → logprob: -4.276551246643066
    7. '_p' → logprob: -5.401551246643066
    8. 'pow' → logprob: -5.526551246643066
    9. ' ' → logprob: -5.776551246643066
    10. 'pr' → logprob: -6.526551246643066

Token 640: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.009800715371966362
    2. 'ore' → logprob: -5.259800910949707
    3. 'orem' → logprob: -6.009800910949707
    4. '```' → logprob: -6.884800910949707
    5. 'me' → logprob: -8.009800910949707
    6. 'ор' → logprob: -8.884800910949707
    7. 'orique' → logprob: -9.009800910949707
    8. 'orme' → logprob: -9.134800910949707
    9. '#' → logprob: -9.759800910949707
    10. 'er' → logprob: -10.634800910949707

Token 641: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.3745799660682678
    2. 'me' → logprob: -1.249579906463623
    3. 'or' → logprob: -4.374579906463623
    4. 'reme' → logprob: -4.999579906463623
    5. 'ême' → logprob: -6.874579906463623
    6. 'ore' → logprob: -7.124579906463623
    7. 'orem' → logprob: -7.124579906463623
    8. 'rem' → logprob: -7.249579906463623
    9. 'eme' → logprob: -7.249579906463623
    10. '```' → logprob: -7.374579906463623

Token 642: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2818075120449066
    2. ' de' → logprob: -1.781807541847229
    3. ')' → logprob: -2.6568074226379395
    4. 'fer' → logprob: -6.9068074226379395
    5. 'e' → logprob: -7.0318074226379395
    6. 'd' → logprob: -7.2818074226379395
    7. 'di' → logprob: -7.5318074226379395
    8. '_de' → logprob: -7.6568074226379395
    9. 'eu' → logprob: -8.281807899475098
    10. '```' → logprob: -8.406807899475098

Token 643: ' Ferm' (ID: 156422)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.20616118609905243
    2. ' Ferm' → logprob: -1.9561611413955688
    3. 'Euler' → logprob: -4.081161022186279
    4. 'ferm' → logprob: -5.081161022186279
    5. 'fer' → logprob: -5.331161022186279
    6. 'f' → logprob: -5.956161022186279
    7. '1' → logprob: -5.956161022186279
    8. ')' → logprob: -6.456161022186279
    9. '```' → logprob: -6.456161022186279
    10. ' ferm' → logprob: -6.956161022186279

Token 644: 'at' (ID: 266)
  Prédit: 'nel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nel' → logprob: -0.4533218741416931
    2. 'el' → logprob: -1.078321933746338
    3. 'mel' → logprob: -4.078321933746338
    4. 'm' → logprob: -6.203321933746338
    5. 'rem' → logprob: -6.953321933746338
    6. 'elm' → logprob: -7.203321933746338
    7. 'ma' → logprob: -7.453321933746338
    8. '```' → logprob: -7.578321933746338
    9. 'elman' → logprob: -7.953321933746338
    10. 'nem' → logprob: -8.20332145690918

Token 645: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018276228802278638
    2. '):' → logprob: -7.126827716827393
    3. ' )' → logprob: -7.126827716827393
    4. '   ' → logprob: -9.251827239990234
    5. ').' → logprob: -10.001827239990234
    6. '),' → logprob: -10.501827239990234
    7. ',' → logprob: -10.626827239990234
    8. '))' → logprob: -12.251827239990234
    9. ' ' → logprob: -12.501827239990234
    10. ' ' → logprob: -13.251827239990234

Token 646: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.012455376796424389
    2. ' mod' → logprob: -4.512455463409424
    3. 'A' → logprob: -6.637455463409424
    4. ' A' → logprob: -10.137454986572266
    5. '10' → logprob: -10.762454986572266
    6. 'pow' → logprob: -10.762454986572266
    7. ' ' → logprob: -12.262454986572266
    8. '	mod' → logprob: -13.637454986572266
    9. '(mod' → logprob: -13.637454986572266
    10. '0' → logprob: -14.012454986572266

Token 647: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.547549843788147
    2. ')' → logprob: -1.172549843788147
    3. ' is' → logprob: -2.4225497245788574
    4. 'is' → logprob: -4.172549724578857
    5. 'est' → logprob: -5.922549724578857
    6. ' )' → logprob: -6.547549724578857
    7. ' ' → logprob: -7.172549724578857
    8. '<|end|>' → logprob: -7.547549724578857
    9. ''est' → logprob: -7.547549724578857
    10. '%' → logprob: -7.922549724578857

Token 648: ' premier' (ID: 15506)
  Prédit: ' prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.23918800055980682
    2. 'prime' → logprob: -1.7391879558563232
    3. ' a' → logprob: -4.114188194274902
    4. ' ' → logprob: -5.489188194274902
    5. '_prime' → logprob: -5.489188194274902
    6. 'prima' → logprob: -5.739188194274902
    7. 'a' → logprob: -5.864188194274902
    8. ' premier' → logprob: -6.114188194274902
    9. 'prem' → logprob: -6.989188194274902
    10. ' ' → logprob: -7.864188194274902

Token 649: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5244245529174805
    2. '):' → logprob: -0.8994245529174805
    3. '   ' → logprob: -7.3994245529174805
    4. ').' → logprob: -8.27442455291748
    5. ' )' → logprob: -8.77442455291748
    6. ' ):' → logprob: -8.89942455291748
    7. ',' → logprob: -10.02442455291748
    8. '):
' → logprob: -10.14942455291748
    9. '),' → logprob: -10.77442455291748
    10. ':' → logprob: -11.64942455291748

Token 650: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4059178829193115
    2. 'ans' → logprob: -1.1559178829193115
    3. ' ans' → logprob: -4.030918121337891
    4. '	ans' → logprob: -7.155918121337891
    5. '(ans' → logprob: -8.65591812133789
    6. '```' → logprob: -10.03091812133789
    7. '<|end|>' → logprob: -10.40591812133789
    8. '    
' → logprob: -10.90591812133789
    9. ' ' → logprob: -10.90591812133789
    10. '  ' → logprob: -11.78091812133789

Token 651: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00021176543668843806
    2. ' ans' → logprob: -8.500211715698242
    3. '   ' → logprob: -11.750211715698242
    4. '	ans' → logprob: -15.250211715698242
    5. '(ans' → logprob: -15.875211715698242
    6. '```' → logprob: -18.000211715698242
    7. '
' → logprob: -18.875211715698242
    8. 'answer' → logprob: -19.375211715698242
    9. '    
' → logprob: -19.750211715698242
    10. ' ' → logprob: -19.875211715698242

Token 652: ' La' (ID: 3038)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005666146171279252
    2. ' ans' → logprob: -7.500566482543945
    3. '   ' → logprob: -11.250566482543945
    4. '	ans' → logprob: -14.625566482543945
    5. '(ans' → logprob: -16.000566482543945
    6. 'answer' → logprob: -17.000566482543945
    7. '
' → logprob: -17.125566482543945
    8. '```' → logprob: -18.000566482543945
    9. ' ' → logprob: -18.125566482543945
    10. 'anst' → logprob: -18.875566482543945

Token 653: ' multiplication' (ID: 86340)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011153810657560825
    2. ' ans' → logprob: -4.511153697967529
    3. 't' → logprob: -10.886154174804688
    4. '	ans' → logprob: -11.011154174804688
    5. '
' → logprob: -11.136154174804688
    6. 'code' → logprob: -11.386154174804688
    7. '(ans' → logprob: -11.886154174804688
    8. ' ' → logprob: -12.386154174804688
    9. 's' → logprob: -12.511154174804688
    10. '#' → logprob: -12.761154174804688

Token 654: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7318435907363892
    2. ')' → logprob: -1.9818435907363892
    3. ' +=' → logprob: -2.7318434715270996
    4. ' =' → logprob: -3.3568434715270996
    5. ' )' → logprob: -3.6068434715270996
    6. ',' → logprob: -3.6068434715270996
    7. '=' → logprob: -3.6068434715270996
    8. ' t' → logprob: -3.6068434715270996
    9. ' *=' → logprob: -3.6068434715270996
    10. 't' → logprob: -3.8568434715270996

Token 655: ' faite' (ID: 78359)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.18899405002594
    2. ' t' → logprob: -1.68899405002594
    3. ' (' → logprob: -2.0639939308166504
    4. ')' → logprob: -2.4389939308166504
    5. '   ' → logprob: -2.4389939308166504
    6. 't' → logprob: -3.0639939308166504
    7. ' ' → logprob: -3.3139939308166504
    8. ' )' → logprob: -3.9389939308166504
    9. ' effectu' → logprob: -3.9389939308166504
    10. '    ' → logprob: -4.31399393081665

Token 656: ' sous' (ID: 14487)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9228860139846802
    2. '(t' → logprob: -1.0478860139846802
    3. '   ' → logprob: -2.1728858947753906
    4. ' (' → logprob: -2.7978858947753906
    5. ' t' → logprob: -3.7978858947753906
    6. 't' → logprob: -4.047885894775391
    7. '(
' → logprob: -4.422885894775391
    8. ')' → logprob: -4.797885894775391
    9. ',' → logprob: -4.922885894775391
    10. '(ans' → logprob: -5.922885894775391

Token 657: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.05742928385734558
    2. '(mod' → logprob: -3.432429313659668
    3. '(' → logprob: -4.182429313659668
    4. 't' → logprob: -5.807429313659668
    5. ' modulo' → logprob: -6.182429313659668
    6. ' mod' → logprob: -6.432429313659668
    7. ' (' → logprob: -7.307429313659668
    8. '(t' → logprob: -8.307429313659668
    9. ' t' → logprob: -8.557429313659668
    10. ')' → logprob: -8.682429313659668

Token 658: ' mod' (ID: 1812)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06836409121751785
    2. '(' → logprob: -3.568364143371582
    3. ')' → logprob: -4.318364143371582
    4. ',' → logprob: -4.568364143371582
    5. ' )' → logprob: -5.443364143371582
    6. ' t' → logprob: -5.568364143371582
    7. 't' → logprob: -6.443364143371582
    8. '=' → logprob: -7.318364143371582
    9. ' (
' → logprob: -7.318364143371582
    10. ' ,' → logprob: -7.568364143371582

Token 659: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5011959075927734
    2. ':' → logprob: -1.0011959075927734
    3. '):' → logprob: -5.126195907592773
    4. ',' → logprob: -5.251195907592773
    5. ':
' → logprob: -5.376195907592773
    6. 'ans' → logprob: -5.626195907592773
    7. ' ans' → logprob: -5.626195907592773
    8. '(ans' → logprob: -6.501195907592773
    9. ')' → logprob: -7.251195907592773
    10. '):
' → logprob: -8.501195907592773

Token 660: ' garder' (ID: 63069)
  Prédit: ' éviter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.36443665623664856
    2. 'év' → logprob: -1.4894366264343262
    3. ' garantir' → logprob: -3.364436626434326
    4. ' assurer' → logprob: -3.739436626434326
    5. 't' → logprob: -4.864436626434326
    6. 'maint' → logprob: -5.864436626434326
    7. 'é' → logprob: -5.864436626434326
    8. 'ev' → logprob: -6.114436626434326
    9. ' s' → logprob: -6.989436626434326
    10. '   ' → logprob: -7.614436626434326

Token 661: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1502009630203247
    2. ' t' → logprob: -1.9002009630203247
    3. '(ans' → logprob: -1.9002009630203247
    4. 'ans' → logprob: -2.025200843811035
    5. '(t' → logprob: -2.650200843811035
    6. ' (' → logprob: -3.150200843811035
    7. ' la' → logprob: -3.275200843811035
    8. 'le' → logprob: -3.525200843811035
    9. ' ans' → logprob: -3.900200843811035
    10. 'l' → logprob: -4.275200843811035

Token 662: ' valeur' (ID: 41664)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.094954252243042
    2. ' result' → logprob: -1.344954252243042
    3. 'ans' → logprob: -1.719954252243042
    4. 't' → logprob: -2.469954252243042
    5. ' ans' → logprob: -3.094954252243042
    6. 'result' → logprob: -3.219954252243042
    7. '```' → logprob: -3.844954252243042
    8. 'mod' → logprob: -4.844954490661621
    9. ')' → logprob: -5.344954490661621
    10. ' )' → logprob: -5.469954490661621

Token 663: ' sous' (ID: 14487)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.4892331659793854
    2. '=' → logprob: -1.739233136177063
    3. 'ans' → logprob: -1.864233136177063
    4. ' ans' → logprob: -4.364233016967773
    5. ' (' → logprob: -4.364233016967773
    6. '(' → logprob: -4.489233016967773
    7. ' =' → logprob: -4.989233016967773
    8. 't' → logprob: -5.989233016967773
    9. '(t' → logprob: -6.239233016967773
    10. ')' → logprob: -6.364233016967773

Token 664: ' une' (ID: 2463)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001735870959237218
    2. '```' → logprob: -7.001735687255859
    3. '100' → logprob: -8.25173568725586
    4. ' modulo' → logprob: -8.75173568725586
    5. ' mod' → logprob: -9.00173568725586
    6. 'la' → logprob: -9.37673568725586
    7. 'control' → logprob: -9.37673568725586
    8. '_mod' → logprob: -10.87673568725586
    9. 'controle' → logprob: -10.87673568725586
    10. '   ' → logprob: -11.37673568725586

Token 665: ' limite' (ID: 48939)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.006264712195843458
    2. '```' → logprob: -6.006264686584473
    3. ' mod' → logprob: -6.506264686584473
    4. 'ans' → logprob: -6.631264686584473
    5. ' modulo' → logprob: -8.006264686584473
    6. '100' → logprob: -8.256264686584473
    7. ')' → logprob: -9.381264686584473
    8. '%' → logprob: -9.631264686584473
    9. 'multip' → logprob: -10.256264686584473
    10. '...' → logprob: -10.506264686584473

Token 666: ' raisonn' (ID: 144705)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39991363883018494
    2. '   ' → logprob: -2.3999135494232178
    3. ').' → logprob: -2.6499135494232178
    4. '(ans' → logprob: -3.1499135494232178
    5. 'ans' → logprob: -3.5249135494232178
    6. ',' → logprob: -3.5249135494232178
    7. '.' → logprob: -3.6499135494232178
    8. 't' → logprob: -4.149913787841797
    9. '=' → logprob: -5.024913787841797
    10. '),' → logprob: -5.649913787841797

Token 667: 'able' (ID: 562)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07893771678209305
    2. 'e' → logprob: -2.7039377689361572
    3. ' )' → logprob: -6.078937530517578
    4. 'es' → logprob: -6.703937530517578
    5. '_' → logprob: -6.953937530517578
    6. '),' → logprob: -7.953937530517578
    7. ' ' → logprob: -8.328937530517578
    8. '=' → logprob: -8.328937530517578
    9. 'iante' → logprob: -8.328937530517578
    10. '```' → logprob: -8.328937530517578

Token 668: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03506729006767273
    2. ':' → logprob: -4.035067081451416
    3. ',' → logprob: -4.410067081451416
    4. ' ans' → logprob: -6.660067081451416
    5. '):' → logprob: -6.785067081451416
    6. ')' → logprob: -7.285067081451416
    7. 'ans' → logprob: -7.660067081451416
    8. '(ans' → logprob: -8.410067558288574
    9. '.' → logprob: -8.660067558288574
    10. '	ans' → logprob: -9.410067558288574

Token 669: ' pour' (ID: 1930)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.5319132804870605
    2. ' éviter' → logprob: -2.4069132804870605
    3. ' safe' → logprob: -2.9069132804870605
    4. ')' → logprob: -3.0319132804870605
    5. 'safe' → logprob: -3.7819132804870605
    6. 'contin' → logprob: -3.9069132804870605
    7. '=' → logprob: -4.0319132804870605
    8. 'ans' → logprob: -4.1569132804870605
    9. 'acc' → logprob: -4.1569132804870605
    10. 's' → logprob: -4.1569132804870605

Token 670: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.938208818435669
    2. ' éviter' → logprob: -1.063208818435669
    3. 'ans' → logprob: -2.563208818435669
    4. ' t' → logprob: -2.813208818435669
    5. ' ans' → logprob: -3.438208818435669
    6. ' assurer' → logprob: -3.563208818435669
    7. ' garantir' → logprob: -3.938208818435669
    8. ')' → logprob: -5.06320858001709
    9. 'maint' → logprob: -5.56320858001709
    10. 'n' → logprob: -5.68820858001709

Token 671: ' correction' (ID: 43745)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3960112929344177
    2. 'mod' → logprob: -2.1460113525390625
    3. '
' → logprob: -3.0210113525390625
    4. 't' → logprob: -3.3960113525390625
    5. '=' → logprob: -3.7710113525390625
    6. 'continue' → logprob: -4.1460113525390625
    7. 'for' → logprob: -4.7710113525390625
    8. 'ans' → logprob: -4.7710113525390625
    9. '``' → logprob: -4.7710113525390625
    10. ')' → logprob: -4.7710113525390625

Token 672: ' math' (ID: 13324)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6442673802375793
    2. ')' → logprob: -1.7692673206329346
    3. ' =' → logprob: -2.5192673206329346
    4. ' de' → logprob: -2.6442673206329346
    5. '.' → logprob: -3.0192673206329346
    6. ' des' → logprob: -3.5192673206329346
    7. ',' → logprob: -4.519267559051514
    8. ').' → logprob: -4.644267559051514
    9. '(ans' → logprob: -4.644267559051514
    10. 'ans' → logprob: -5.519267559051514

Token 673: 'ématique' (ID: 127136)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0733755826950073
    2. 'ématique' → logprob: -1.5733755826950073
    3. 'ère' → logprob: -1.8233755826950073
    4. 'ière' → logprob: -2.573375701904297
    5. 'ération' → logprob: -3.198375701904297
    6. 'e' → logprob: -3.823375701904297
    7. 'ématiques' → logprob: -4.323375701904297
    8. 'è' → logprob: -4.448375701904297
    9. 'ète' → logprob: -4.573375701904297
    10. '```' → logprob: -4.698375701904297

Token 674: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15310801565647125
    2. ',' → logprob: -2.7781081199645996
    3. ':' → logprob: -3.1531081199645996
    4. '):' → logprob: -4.5281081199646
    5. 'ans' → logprob: -4.6531081199646
    6. ')' → logprob: -5.1531081199646
    7. ' ans' → logprob: -5.6531081199646
    8. '(ans' → logprob: -5.7781081199646
    9. '.' → logprob: -6.4031081199646
    10. ':
' → logprob: -7.7781081199646

Token 675: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4838337302207947
    2. 'ans' → logprob: -1.4838337898254395
    3. ' ans' → logprob: -1.8588337898254395
    4. '	ans' → logprob: -7.1088337898254395
    5. '```' → logprob: -9.733833312988281
    6. '(ans' → logprob: -9.983833312988281
    7. '    
' → logprob: -11.108833312988281
    8. '   ' → logprob: -12.358833312988281
    9. '``' → logprob: -12.608833312988281
    10. ' ' → logprob: -12.608833312988281

Token 676: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -2.165027217415627e-05
    2. '   ' → logprob: -11.000021934509277
    3. ' ans' → logprob: -12.250021934509277
    4. '	ans' → logprob: -16.00002098083496
    5. '(ans' → logprob: -18.00002098083496
    6. '```' → logprob: -18.62502098083496
    7. '
' → logprob: -18.75002098083496
    8. 'answer' → logprob: -18.87502098083496
    9. 'anst' → logprob: -19.12502098083496
    10. '    
' → logprob: -19.62502098083496

Token 677: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3151929974555969
    2. '+=' → logprob: -1.3151929378509521
    3. '=' → logprob: -6.815193176269531
    4. ' =' → logprob: -7.190193176269531
    5. '+=(' → logprob: -9.690193176269531
    6. '+' → logprob: -11.815193176269531
    7. ']+=' → logprob: -12.940193176269531
    8. ' ' → logprob: -13.190193176269531
    9. '```' → logprob: -13.690193176269531
    10. '   ' → logprob: -13.940193176269531

Token 678: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0012794032227247953
    2. ' (' → logprob: -6.751279354095459
    3. '(' → logprob: -9.126279830932617
    4. '   ' → logprob: -15.501279830932617
    5. '(answer' → logprob: -17.001279830932617
    6. '(ast' → logprob: -17.001279830932617
    7. '(ax' → logprob: -17.376279830932617
    8. ' ' → logprob: -17.501279830932617
    9. '(arr' → logprob: -17.751279830932617
    10. '(ai' → logprob: -18.251279830932617

Token 679: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005555360112339258
    2. '(ans' → logprob: -7.500555515289307
    3. ' ans' → logprob: -13.000555992126465
    4. '	ans' → logprob: -15.500555992126465
    5. '   ' → logprob: -16.37555503845215
    6. '_ans' → logprob: -17.87555503845215
    7. 'answer' → logprob: -18.00055503845215
    8. 'ANS' → logprob: -18.75055503845215
    9. 'Ans' → logprob: -18.87555503845215
    10. '(' → logprob: -20.62555503845215

Token 680: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04858759790658951
    2. '+' → logprob: -3.0485875606536865
    3. ' plus' → logprob: -16.173587799072266
    4. ' ' → logprob: -17.048587799072266
    5. ' ' → logprob: -17.173587799072266
    6. ' +
' → logprob: -17.673587799072266
    7. '＋' → logprob: -17.798587799072266
    8. ' +
' → logprob: -18.048587799072266
    9. ')' → logprob: -19.423587799072266
    10. '+t' → logprob: -20.048587799072266

Token 681: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006852596532553434
    2. '(t' → logprob: -5.131852626800537
    3. ' t' → logprob: -7.006852626800537
    4. '   ' → logprob: -11.381852149963379
    5. ' (' → logprob: -12.256852149963379
    6. '(' → logprob: -14.506852149963379
    7. '	t' → logprob: -14.756852149963379
    8. ' ' → logprob: -15.506852149963379
    9. ')t' → logprob: -15.506852149963379
    10. '`t' → logprob: -15.881852149963379

Token 682: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07889176905155182
    2. '*' → logprob: -2.5788917541503906
    3. ' ' → logprob: -14.45389175415039
    4. ')' → logprob: -14.45389175415039
    5. ' ' → logprob: -14.57889175415039
    6. '   ' → logprob: -14.70389175415039
    7. '**' → logprob: -17.20389175415039
    8. '  ' → logprob: -17.57889175415039
    9. ' *
' → logprob: -17.70389175415039
    10. '    ' → logprob: -17.82889175415039

Token 683: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -3.547789674485102e-05
    2. ' pow' → logprob: -10.250035285949707
    3. '(pow' → logprob: -19.625036239624023
    4. '   ' → logprob: -20.000036239624023
    5. '_pow' → logprob: -22.000036239624023
    6. 'power' → logprob: -22.500036239624023
    7. '.pow' → logprob: -22.750036239624023
    8. 'Pow' → logprob: -23.000036239624023
    9. 'pw' → logprob: -24.500036239624023
    10. 'po' → logprob: -25.500036239624023

Token 684: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0012128526577726007
    2. '(' → logprob: -6.751213073730469
    3. '(
' → logprob: -10.501213073730469
    4. 'A' → logprob: -11.126213073730469
    5. '(

' → logprob: -15.501213073730469
    6. ' (' → logprob: -15.876213073730469
    7. ')' → logprob: -16.50121307373047
    8. '(
' → logprob: -16.75121307373047
    9. '(a' → logprob: -17.37621307373047
    10. '```' → logprob: -17.87621307373047

Token 685: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008645178750157356
    2. '[' → logprob: -4.758645057678223
    3. '[
' → logprob: -11.258645057678223
    4. '[A' → logprob: -11.633645057678223
    5. ' [' → logprob: -12.133645057678223
    6. '[I' → logprob: -14.008645057678223
    7. ' ' → logprob: -14.633645057678223
    8. ')' → logprob: -14.883645057678223
    9. 'i' → logprob: -15.008645057678223
    10. '[a' → logprob: -15.133645057678223

Token 686: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32424092292785645
    2. '],' → logprob: -1.3242409229278564
    3. '[i' → logprob: -4.699240684509277
    4. ']' → logprob: -6.949240684509277
    5. ' ,' → logprob: -7.699240684509277
    6. '),' → logprob: -9.074240684509277
    7. '[' → logprob: -9.074240684509277
    8. ' ' → logprob: -10.074240684509277
    9. ',i' → logprob: -10.449240684509277
    10. '],[' → logprob: -10.574240684509277

Token 687: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.2961512513575144e-05
    2. ' mod' → logprob: -10.750022888183594
    3. '(mod' → logprob: -13.500022888183594
    4. '	mod' → logprob: -17.000022888183594
    5. '-mod' → logprob: -17.500022888183594
    6. '-' → logprob: -17.750022888183594
    7. '.mod' → logprob: -19.375022888183594
    8. 'modal' → logprob: -20.500022888183594
    9. '   ' → logprob: -20.875022888183594
    10. 'MOD' → logprob: -20.875022888183594

Token 688: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004879915213678032
    2. ' -' → logprob: -7.625487804412842
    3. '−' → logprob: -18.12548828125
    4. ')' → logprob: -18.12548828125
    5. '```' → logprob: -18.37548828125
    6. '()-' → logprob: -18.75048828125
    7. ')-' → logprob: -19.00048828125
    8. '–' → logprob: -19.25048828125
    9. ' ' → logprob: -19.50048828125
    10. '   ' → logprob: -20.00048828125

Token 689: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -17.125001907348633
    4. '

' → logprob: -17.312501907348633
    5. '۲' → logprob: -17.687501907348633
    6. '
' → logprob: -18.000001907348633
    7. '-' → logprob: -18.187501907348633
    8. '
' → logprob: -18.375001907348633
    9. '২' → logprob: -18.562501907348633
    10. '   ' → logprob: -18.625001907348633

Token 690: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.375001907348633
    3. '```' → logprob: -15.125001907348633
    4. '
' → logprob: -15.312501907348633
    5. '

' → logprob: -16.000001907348633
    6. '
' → logprob: -16.375001907348633
    7. '۲' → logprob: -16.625001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '২' → logprob: -17.812501907348633
    10. '-' → logprob: -17.812501907348633

Token 691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5690089639974758e-05
    2. ' ,' → logprob: -11.125015258789062
    3. ',
' → logprob: -14.125015258789062
    4. 'mod' → logprob: -15.750015258789062
    5. ')' → logprob: -16.750015258789062
    6. '```' → logprob: -18.000015258789062
    7. '   ' → logprob: -19.125015258789062
    8. ' mod' → logprob: -19.250015258789062
    9. ',module' → logprob: -19.250015258789062
    10. '),' → logprob: -19.375015258789062

Token 692: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001584850688232109
    2. ' mod' → logprob: -8.750158309936523
    3. '	mod' → logprob: -20.500158309936523
    4. '(mod' → logprob: -21.250158309936523
    5. ')' → logprob: -23.875158309936523
    6. '_mod' → logprob: -24.375158309936523
    7. '.mod' → logprob: -25.000158309936523
    8. ' ' → logprob: -25.125158309936523
    9. ' мод' → logprob: -25.375158309936523
    10. '   ' → logprob: -25.500158309936523

Token 693: '))' (ID: 915)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ' ,' → logprob: -12.375007629394531
    3. ',
' → logprob: -13.375007629394531
    4. ')' → logprob: -13.625007629394531
    5. 'mod' → logprob: -15.250007629394531
    6. '))' → logprob: -15.875007629394531
    7. '   ' → logprob: -16.62500762939453
    8. '```' → logprob: -17.00000762939453
    9. '),' → logprob: -17.75000762939453
    10. '(mod' → logprob: -18.12500762939453

Token 694: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4848281145095825
    2. '%' → logprob: -1.1098281145095825
    3. ' %' → logprob: -2.984827995300293
    4. ')%' → logprob: -5.734827995300293
    5. '   ' → logprob: -7.609827995300293
    6. ' %=' → logprob: -9.484827995300293
    7. ' )' → logprob: -9.734827995300293
    8. 'mod' → logprob: -9.984827995300293
    9. ',' → logprob: -10.734827995300293
    10. '%)' → logprob: -10.984827995300293

Token 695: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.088346359931165e-07
    2. ' mod' → logprob: -14.000000953674316
    3. '(mod' → logprob: -20.75
    4. '	mod' → logprob: -23.625
    5. 'MOD' → logprob: -25.375
    6. 'modal' → logprob: -25.625
    7. 'moder' → logprob: -25.625
    8. ' мод' → logprob: -26.125
    9. 'mo' → logprob: -26.75
    10. 'mods' → logprob: -27.0

Token 696: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016091499477624893
    2. '
' → logprob: -4.641091346740723
    3. '<|end|>' → logprob: -5.141091346740723
    4. '```' → logprob: -8.266091346740723
    5. ' print' → logprob: -9.016091346740723
    6. '#' → logprob: -10.516091346740723
    7. '  
' → logprob: -11.266091346740723
    8. ')' → logprob: -11.641091346740723
    9. ' 
' → logprob: -11.766091346740723
    10. '#print' → logprob: -12.016091346740723

Token 697: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003919414710253477
    2. '<|end|>' → logprob: -5.75391960144043
    3. '
' → logprob: -7.50391960144043
    4. ')' → logprob: -9.75391960144043
    5. '```' → logprob: -10.00391960144043
    6. ' print' → logprob: -10.37891960144043
    7. '#' → logprob: -10.87891960144043
    8. 'return' → logprob: -11.25391960144043
    9. '#print' → logprob: -11.87891960144043
    10. '  
' → logprob: -12.37891960144043

Token 698: ' Aj' (ID: 28294)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0032305908389389515
    2. 'pass' → logprob: -5.878230571746826
    3. '<|end|>' → logprob: -8.253231048583984
    4. ')' → logprob: -9.878231048583984
    5. 'continue' → logprob: -9.878231048583984
    6. 'ans' → logprob: -11.003231048583984
    7. ' print' → logprob: -11.378231048583984
    8. '```' → logprob: -11.503231048583984
    9. ' pass' → logprob: -11.878231048583984
    10. '#' → logprob: -12.003231048583984

Token 699: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0033725807443261147
    2. 'out' → logprob: -6.128372669219971
    3. 'outez' → logprob: -6.878372669219971
    4. 'outer' → logprob: -9.253372192382812
    5. 'outes' → logprob: -10.128372192382812
    6. 'o' → logprob: -11.753372192382812
    7. 'ou' → logprob: -12.128372192382812
    8. '#' → logprob: -13.628372192382812
    9. '   ' → logprob: -14.003372192382812
    10. '```' → logprob: -14.378372192382812

Token 700: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7027313113212585
    2. '(ans' → logprob: -0.9527313113212585
    3. '<|end|>' → logprob: -2.2027313709259033
    4. '(' → logprob: -6.077731132507324
    5. '0' → logprob: -6.077731132507324
    6. '1' → logprob: -6.452731132507324
    7. ')' → logprob: -6.827731132507324
    8. ' ans' → logprob: -7.827731132507324
    9. '```' → logprob: -8.827731132507324
    10. ' ' → logprob: -9.202731132507324

Token 701: ' contribution' (ID: 26735)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08646932989358902
    2. '(ans' → logprob: -3.4614694118499756
    3. ' ans' → logprob: -3.8364694118499756
    4. ')' → logprob: -4.8364691734313965
    5. 'result' → logprob: -4.9614691734313965
    6. 't' → logprob: -4.9614691734313965
    7. 'token' → logprob: -6.9614691734313965
    8. ' t' → logprob: -6.9614691734313965
    9. ' (' → logprob: -7.0864691734313965
    10. ' ' → logprob: -7.5864691734313965

Token 702: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 703: ' l' (ID: 305)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.41658663749694824
    2. 'i' → logprob: -1.4165866374969482
    3. '1' → logprob: -2.7915866374969482
    4. '<|end|>' → logprob: -4.291586875915527
    5. 't' → logprob: -4.916586875915527
    6. ' A' → logprob: -5.791586875915527
    7. 'l' → logprob: -6.041586875915527
    8. 'each' → logprob: -6.291586875915527
    9. ' i' → logprob: -6.416586875915527
    10. 'the' → logprob: -6.666586875915527

Token 704: ''' (ID: 6)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2108386754989624
    2. '[i' → logprob: -2.710838794708252
    3. ''' → logprob: -2.960838794708252
    4. ''A' → logprob: -3.335838794708252
    5. 'élé' → logprob: -4.335838794708252
    6. 'i' → logprob: -5.210838794708252
    7. 'element' → logprob: -5.585838794708252
    8. 'a' → logprob: -5.835838794708252
    9. '[A' → logprob: -6.335838794708252
    10. 'e' → logprob: -6.460838794708252

Token 705: 'élé' (ID: 15228)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14395761489868164
    2. 'A' → logprob: -2.0189576148986816
    3. '[i' → logprob: -7.018957614898682
    4. '```' → logprob: -9.018957138061523
    5. ' i' → logprob: -9.643957138061523
    6. ' A' → logprob: -10.143957138061523
    7. 'a' → logprob: -10.643957138061523
    8. '`' → logprob: -10.768957138061523
    9. 'élé' → logprob: -11.393957138061523
    10. 'ans' → logprob: -11.393957138061523

Token 706: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0011134239612147212
    2. 'ent' → logprob: -7.251113414764404
    3. 't' → logprob: -9.376113891601562
    4. 'nt' → logprob: -9.626113891601562
    5. 'ement' → logprob: -9.751113891601562
    6. 'm' → logprob: -10.126113891601562
    7. 'ments' → logprob: -10.501113891601562
    8. 'me' → logprob: -10.626113891601562
    9. 'ément' → logprob: -10.626113891601562
    10. '```' → logprob: -11.626113891601562

Token 707: ' courant' (ID: 74694)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 708: ' au' (ID: 2791)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 709: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.320199877838604e-07
    2. 'answer' → logprob: -15.25
    3. ' ans' → logprob: -16.5
    4. '(ans' → logprob: -18.75
    5. 'a' → logprob: -19.25
    6. '	ans' → logprob: -19.625
    7. '_ans' → logprob: -22.375
    8. '```' → logprob: -22.375
    9. 'anst' → logprob: -22.5
    10. '
' → logprob: -22.875

Token 710: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 711: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -14.875
    3. '```' → logprob: -18.5
    4. 'pr' → logprob: -19.125
    5. '#print' → logprob: -19.625
    6. '
' → logprob: -19.75
    7. '(print' → logprob: -20.625
    8. 'prin' → logprob: -20.625
    9. '<|end|>' → logprob: -21.0
    10. '-print' → logprob: -21.625

Token 712: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.25
    3. 'prin' → logprob: -24.5
    4. 'pr' → logprob: -24.625
    5. '```' → logprob: -25.375
    6. '#print' → logprob: -27.25
    7. 'prit' → logprob: -28.125
    8. 'Print' → logprob: -28.375
    9. '(print' → logprob: -28.375
    10. '	print' → logprob: -28.625

Token 713: 'iche' (ID: 7509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003258757758885622
    2. 'ich' → logprob: -6.12825870513916
    3. 'icher' → logprob: -7.87825870513916
    4. 'iche' → logprob: -8.37825870513916
    5. 'ichage' → logprob: -8.87825870513916
    6. '```' → logprob: -9.25325870513916
    7. '#' → logprob: -9.50325870513916
    8. 'irm' → logprob: -10.12825870513916
    9. 'f' → logprob: -10.87825870513916
    10. '``' → logprob: -10.87825870513916

Token 714: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.3544423381972592e-05
    2. 'ans' → logprob: -11.25001335144043
    3. '(' → logprob: -14.75001335144043
    4. '(answer' → logprob: -17.25001335144043
    5. '(print' → logprob: -19.75001335144043
    6. 'print' → logprob: -19.87501335144043
    7. '	ans' → logprob: -20.00001335144043
    8. '(
' → logprob: -20.37501335144043
    9. ' ans' → logprob: -21.00001335144043
    10. '(an' → logprob: -21.00001335144043

Token 715: ' valeur' (ID: 41664)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.386928528547287
    2. 'ans' → logprob: -1.1369285583496094
    3. 'answer' → logprob: -10.76192855834961
    4. 'final' → logprob: -11.01192855834961
    5. '(' → logprob: -11.13692855834961
    6. 'result' → logprob: -12.88692855834961
    7. '(answer' → logprob: -13.51192855834961
    8. 'print' → logprob: -14.38692855834961
    9. '	ans' → logprob: -15.63692855834961
    10. ' ans' → logprob: -16.13692855834961

Token 716: ' finale' (ID: 37759)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00020652047533076257
    2. 'ans' → logprob: -9.25020694732666
    3. '(' → logprob: -9.75020694732666
    4. 'print' → logprob: -9.87520694732666
    5. '(print' → logprob: -14.25020694732666
    6. '(answer' → logprob: -16.875205993652344
    7. '()' → logprob: -18.125205993652344
    8. '(
' → logprob: -18.750205993652344
    9. ' ans' → logprob: -19.250205993652344
    10. '	ans' → logprob: -19.375205993652344

Token 717: ' calcul' (ID: 7559)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5113628506660461
    2. 'print' → logprob: -1.0113627910614014
    3. '(print' → logprob: -3.5113627910614014
    4. '(' → logprob: -5.0113630294799805
    5. 'ans' → logprob: -9.76136302947998
    6. '(pr' → logprob: -10.88636302947998
    7. ' print' → logprob: -13.13636302947998
    8. '(answer' → logprob: -13.38636302947998
    9. '()' → logprob: -15.01136302947998
    10. '```' → logprob: -15.63636302947998

Token 718: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0022693241480737925
    2. 'print' → logprob: -7.252269268035889
    3. 'ue' → logprob: -7.502269268035889
    4. 'e' → logprob: -7.752269268035889
    5. 'é' → logprob: -9.002269744873047
    6. 'ee' → logprob: -9.002269744873047
    7. 'urée' → logprob: -9.002269744873047
    8. 'er' → logprob: -9.377269744873047
    9. '(ans' → logprob: -10.252269744873047
    10. 'rée' → logprob: -10.877269744873047

Token 719: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.053007885813713074
    2. '(ans' → logprob: -3.0530078411102295
    3. '(print' → logprob: -5.553008079528809
    4. '(' → logprob: -7.553008079528809
    5. 'ans' → logprob: -11.678008079528809
    6. '(pr' → logprob: -14.428008079528809
    7. '```' → logprob: -14.428008079528809
    8. ' print' → logprob: -14.678008079528809
    9. '(answer' → logprob: -15.053008079528809
    10. '(
' → logprob: -16.803007125854492

Token 720: ' '' (ID: 461)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.22659236192703247
    2. 'ans' → logprob: -1.6015923023223877
    3. 'print' → logprob: -7.851592540740967
    4. 'la' → logprob: -7.976592540740967
    5. 'l' → logprob: -8.601592063903809
    6. '(' → logprob: -9.101592063903809
    7. 'mod' → logprob: -10.226592063903809
    8. '()' → logprob: -10.601592063903809
    9. '```' → logprob: -10.601592063903809
    10. 'le' → logprob: -11.351592063903809

Token 721: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005533903022296727
    2. '(ans' → logprob: -7.500553607940674
    3. 'print' → logprob: -15.625553131103516
    4. ' ans' → logprob: -16.125553131103516
    5. 'answer' → logprob: -16.250553131103516
    6. '	ans' → logprob: -18.625553131103516
    7. 'a' → logprob: -19.000553131103516
    8. '(' → logprob: -19.125553131103516
    9. '   ' → logprob: -20.625553131103516
    10. '```' → logprob: -20.750553131103516

Token 722: ''.
' (ID: 49980)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01509390864521265
    2. ')' → logprob: -5.140093803405762
    3. '(ans' → logprob: -5.390093803405762
    4. ')
' → logprob: -6.140093803405762
    5. '(print' → logprob: -7.015093803405762
    6. '()' → logprob: -7.640093803405762
    7. '(' → logprob: -7.640093803405762
    8. '()
' → logprob: -7.890093803405762
    9. ' print' → logprob: -8.890093803405762
    10. '.print' → logprob: -11.390093803405762

Token 723: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -20.75
    3. ' print' → logprob: -21.5
    4. '``' → logprob: -27.875
    5. 'prints' → logprob: -28.5
    6. '#print' → logprob: -28.875
    7. '	print' → logprob: -29.0
    8. 'printf' → logprob: -29.0
    9. 'Print' → logprob: -29.125
    10. '-print' → logprob: -29.875

Token 724: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0003373694489710033
    2. '(' → logprob: -8.000337600708008
    3. ' (' → logprob: -13.625337600708008
    4. 'ans' → logprob: -15.500337600708008
    5. '(answer' → logprob: -16.125337600708008
    6. '(
' → logprob: -16.500337600708008
    7. '()' → logprob: -16.750337600708008
    8. '((' → logprob: -16.875337600708008
    9. '(args' → logprob: -17.500337600708008
    10. '(abs' → logprob: -17.625337600708008

Token 725: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. '()' → logprob: -12.500007629394531
    3. '())' → logprob: -12.625007629394531
    4. ' )' → logprob: -14.250007629394531
    5. '))' → logprob: -15.500007629394531
    6. ')`' → logprob: -16.37500762939453
    7. '(' → logprob: -17.12500762939453
    8. ')
' → logprob: -17.87500762939453
    9. ')#' → logprob: -17.87500762939453
    10. ')}' → logprob: -18.37500762939453

Token 726: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06909406185150146
    2. '<|end|>' → logprob: -2.819094181060791
    3. '#' → logprob: -5.569094181060791
    4. '```' → logprob: -6.319094181060791
    5. '[' → logprob: -8.194093704223633
    6. ']' → logprob: -8.319093704223633
    7. '/' → logprob: -8.694093704223633
    8. '}' → logprob: -8.819093704223633
    9. '<|end|>' → logprob: -8.944093704223633
    10. '(' → logprob: -9.194093704223633

Token 727: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 728: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 729: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025789898354560137
    2. '(' → logprob: -6.002579212188721
    3. '("")' → logprob: -9.502578735351562
    4. '()
' → logprob: -12.002578735351562
    5. '<|end|>' → logprob: -12.252578735351562
    6. '())' → logprob: -12.377578735351562
    7. '();' → logprob: -12.877578735351562
    8. '```' → logprob: -13.127578735351562
    9. '('' → logprob: -13.502578735351562
    10. '()%' → logprob: -13.502578735351562

Token 730: ' affiche' (ID: 127479)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 731: ' une' (ID: 2463)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.9623810658231378e-05
    2. 'ans' → logprob: -11.000020027160645
    3. '(' → logprob: -13.125020027160645
    4. '(answer' → logprob: -14.250020027160645
    5. '()' → logprob: -16.375019073486328
    6. '	ans' → logprob: -17.000019073486328
    7. '((' → logprob: -17.500019073486328
    8. '(abs' → logprob: -17.875019073486328
    9. ')' → logprob: -18.125019073486328
    10. '(
' → logprob: -18.250019073486328

Token 732: ' sortie' (ID: 52761)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0035624504089355
    2. 'value' → logprob: -1.6285624504089355
    3. 'result' → logprob: -1.7535624504089355
    4. '(' → logprob: -2.0035624504089355
    5. '(result' → logprob: -3.5035624504089355
    6. '()' → logprob: -3.6285624504089355
    7. 'val' → logprob: -3.7535624504089355
    8. 'nombre' → logprob: -4.8785624504089355
    9. 'number' → logprob: -5.0035624504089355
    10. '(value' → logprob: -5.6285624504089355

Token 733: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010748496279120445
    2. '(' → logprob: -6.87607479095459
    3. '("")' → logprob: -10.37607479095459
    4. '())' → logprob: -13.12607479095459
    5. '();' → logprob: -13.12607479095459
    6. '()
' → logprob: -13.25107479095459
    7. '()\' → logprob: -13.25107479095459
    8. ')' → logprob: -14.37607479095459
    9. '()%' → logprob: -14.50107479095459
    10. '<|end|>' → logprob: -14.75107479095459

Token 734: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.005184185691177845
    2. 'l' → logprob: -5.630184173583984
    3. ' la' → logprob: -8.005184173583984
    4. 'the' → logprob: -8.505184173583984
    5. 'le' → logprob: -8.880184173583984
    6. 'python' → logprob: -9.130184173583984
    7. 'stdout' → logprob: -9.130184173583984
    8. 'None' → logprob: -9.255184173583984
    9. '```' → logprob: -9.880184173583984
    10. ')' → logprob: -9.880184173583984

Token 735: ''utilisateur' (ID: 140803)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8684853315353394
    2. 'fin' → logprob: -2.118485450744629
    3. 'la' → logprob: -2.618485450744629
    4. 'l' → logprob: -3.493485450744629
    5. 'ucune' → logprob: -3.493485450744629
    6. 'ra' → logprob: -3.618485450744629
    7. 'n' → logprob: -3.743485450744629
    8. 'ucun' → logprob: -3.868485450744629
    9. 'à' → logprob: -3.868485450744629
    10. 'u' → logprob: -4.368485450744629

Token 736: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 734
Tokens correctement prédits (1ère position, stricte): 176
Tokens correctement prédits (1ère position, avec adaptation): 179
Tokens correctement prédits (top 10): 386
Précision stricte (1ère position): 23.98%
Précision adaptée (1ère position): 24.39%
Précision (top 10): 52.59%
================================================================================
