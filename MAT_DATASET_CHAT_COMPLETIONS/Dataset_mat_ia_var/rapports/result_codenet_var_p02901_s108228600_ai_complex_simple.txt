================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import product, chain
N, M = map(int, input().split())
keys = list(chain.from_iterable([(lambda a, c: [(reduce(lambda x, y: x | (1 << (y-1)), c, 0), a)])(int(a), list(map(int, c.split()))) for a, _, c in [input().partition(' ') for _ in range(M)]]))
INF = float('inf')
dp = [INF]*pow(2, N)
dp[0] = 0
for s, i in product(range(1<<N), range(M)):
    mask, cost = keys[i]
    dp[s | mask] = min((lambda x, y: x if x < y else y)(dp[s | mask], dp[s] + cost), dp[s | mask])
print(next(filter(lambda x: x != INF, dp[-1:]), -1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.12751971185207367
    2. 'import' → logprob: -2.1275196075439453
    3. '.' → logprob: -8.002519607543945
    4. '.import' → logprob: -8.752519607543945
    5. '	import' → logprob: -10.252519607543945
    6. ' ' → logprob: -10.502519607543945
    7. ' .' → logprob: -11.377519607543945
    8. '_import' → logprob: -11.627519607543945
    9. '.im' → logprob: -12.502519607543945
    10. ' itertools' → logprob: -13.252519607543945

Token 8: ' product' (ID: 1888)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.0847846269607544
    2. 'count' → logprob: -1.0847846269607544
    3. 'acc' → logprob: -2.334784507751465
    4. 'cycle' → logprob: -2.709784507751465
    5. ' group' → logprob: -2.834784507751465
    6. 'chain' → logprob: -2.959784507751465
    7. 'com' → logprob: -4.209784507751465
    8. ' cycle' → logprob: -4.834784507751465
    9. 'product' → logprob: -5.084784507751465
    10. ' chain' → logprob: -5.334784507751465

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007452926132827997
    2. '(
' → logprob: -5.132452964782715
    3. 'def' → logprob: -7.257452964782715
    4. '```' → logprob: -8.382452964782715
    5. '\' → logprob: -9.132452964782715
    6. ',' → logprob: -9.257452964782715
    7. '\(' → logprob: -9.507452964782715
    8. '`' → logprob: -9.882452964782715
    9. '(

' → logprob: -10.007452964782715
    10. '\n' → logprob: -10.132452964782715

Token 10: ' chain' (ID: 13464)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5815120339393616
    2. 'per' → logprob: -2.331511974334717
    3. ' permutations' → logprob: -2.456511974334717
    4. 'count' → logprob: -2.706511974334717
    5. 'st' → logprob: -3.081511974334717
    6. 'cycle' → logprob: -3.206511974334717
    7. 'acc' → logprob: -3.581511974334717
    8. 'chain' → logprob: -3.831511974334717
    9. ' combinations' → logprob: -4.081511974334717
    10. ' cycle' → logprob: -4.831511974334717

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14636482298374176
    2. '(
' → logprob: -2.52136492729187
    3. ',' → logprob: -4.021364688873291
    4. '\n' → logprob: -4.521364688873291
    5. 'def' → logprob: -4.521364688873291
    6. '\' → logprob: -4.896364688873291
    7. 'import' → logprob: -6.646364688873291
    8. '```' → logprob: -6.646364688873291
    9. '\(' → logprob: -7.021364688873291
    10. ' (' → logprob: -7.271364688873291

Token 12: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7216916680335999
    2. '\' → logprob: -2.096691608428955
    3. '(' → logprob: -2.221691608428955
    4. ',' → logprob: -2.721691608428955
    5. '```' → logprob: -2.721691608428955
    6. '\n' → logprob: -2.846691608428955
    7. '(
' → logprob: -3.596691608428955
    8. '.' → logprob: -4.596691608428955
    9. '`' → logprob: -4.846691608428955
    10. 'import' → logprob: -4.971691608428955

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0623533725738525
    2. '_' → logprob: -1.3123533725738525
    3. '=' → logprob: -1.4373533725738525
    4. ' =' → logprob: -2.1873533725738525
    5. ' ' → logprob: -4.937353134155273
    6. 'umber' → logprob: -4.937353134155273
    7. '.' → logprob: -5.437353134155273
    8. 'u' → logprob: -5.687353134155273
    9. ')' → logprob: -5.812353134155273
    10. '  ' → logprob: -6.187353134155273

Token 14: ' M' (ID: 391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.7146380543708801
    2. ' K' → logprob: -0.9646380543708801
    3. 'M' → logprob: -2.7146379947662354
    4. ' M' → logprob: -3.3396379947662354
    5. ' ' → logprob: -5.0896382331848145
    6. 'k' → logprob: -5.2146382331848145
    7. '=' → logprob: -5.5896382331848145
    8. ' =' → logprob: -5.8396382331848145
    9. ' k' → logprob: -6.7146382331848145
    10. ''' → logprob: -6.8396382331848145

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02349272184073925
    2. '=' → logprob: -3.7734928131103516
    3. ',' → logprob: -8.398492813110352
    4. ' ,' → logprob: -11.648492813110352
    5. ' ' → logprob: -11.898492813110352
    6. '<|end|>' → logprob: -13.148492813110352
    7. ' =
' → logprob: -13.523492813110352
    8. ')' → logprob: -13.648492813110352
    9. ' =",' → logprob: -15.148492813110352
    10. ' =)' → logprob: -15.273492813110352

Token 16: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6721782088279724
    2. ' ' → logprob: -1.1721782684326172
    3. 'map' → logprob: -1.7971782684326172
    4. '10' → logprob: -4.922178268432617
    5. '5' → logprob: -5.547178268432617
    6. '0' → logprob: -7.047178268432617
    7. ' int' → logprob: -7.922178268432617
    8. 'int' → logprob: -8.047178268432617
    9. 'range' → logprob: -8.047178268432617
    10. 'input' → logprob: -9.047178268432617

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.39664897322654724
    2. '(' → logprob: -1.1466490030288696
    3. '(str' → logprob: -5.52164888381958
    4. '(lambda' → logprob: -5.64664888381958
    5. 'int' → logprob: -6.77164888381958
    6. '<|end|>' → logprob: -7.64664888381958
    7. '[int' → logprob: -9.271649360656738
    8. '(input' → logprob: -9.271649360656738
    9. '()' → logprob: -9.521649360656738
    10. '<int' → logprob: -9.771649360656738

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02550354041159153
    2. ',input' → logprob: -4.025503635406494
    3. '(input' → logprob: -5.650503635406494
    4. '(' → logprob: -6.150503635406494
    5. 'input' → logprob: -6.775503635406494
    6. '`,' → logprob: -8.775503158569336
    7. '(),' → logprob: -9.025503158569336
    8. ')' → logprob: -9.150503158569336
    9. ' ,' → logprob: -10.400503158569336
    10. '',' → logprob: -10.525503158569336

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16026921570301056
    2. ' input' → logprob: -1.9102692604064941
    3. '(input' → logprob: -10.910268783569336
    4. ')' → logprob: -11.160268783569336
    5. ',input' → logprob: -12.035268783569336
    6. ' ' → logprob: -12.535268783569336
    7. 'open' → logprob: -14.035268783569336
    8. 'str' → logprob: -14.285268783569336
    9. '=input' → logprob: -14.785268783569336
    10. ' )' → logprob: -14.785268783569336

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3853481709957123
    2. '())' → logprob: -1.2603482007980347
    3. '()' → logprob: -3.385348081588745
    4. ')' → logprob: -6.385348320007324
    5. '(' → logprob: -8.510348320007324
    6. '());' → logprob: -8.885348320007324
    7. '(),' → logprob: -9.010348320007324
    8. '()>' → logprob: -10.385348320007324
    9. '();)' → logprob: -10.510348320007324
    10. '()`' → logprob: -10.635348320007324

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009209888521581888
    2. 'strip' → logprob: -7.00092077255249
    3. 'rstrip' → logprob: -12.000921249389648
    4. ')' → logprob: -13.500921249389648
    5. 'read' → logprob: -13.750921249389648
    6. ' split' → logprob: -14.250921249389648
    7. '(split' → logprob: -15.625921249389648
    8. 'spl' → logprob: -16.87592124938965
    9. '```' → logprob: -17.37592124938965
    10. 'startswith' → logprob: -17.62592124938965

Token 22: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4533156752586365
    2. '))' → logprob: -1.0783157348632812
    3. '())' → logprob: -3.8283157348632812
    4. '()))' → logprob: -6.453315734863281
    5. '()' → logprob: -7.078315734863281
    6. '),' → logprob: -9.453315734863281
    7. '(' → logprob: -10.953315734863281
    8. ''))' → logprob: -11.078315734863281
    9. '')' → logprob: -12.078315734863281
    10. '('' → logprob: -12.078315734863281

Token 23: 'keys' (ID: 20817)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.516088604927063
    2. 'a' → logprob: -1.766088604927063
    3. 'for' → logprob: -2.1410884857177734
    4. 'matrix' → logprob: -2.3910884857177734
    5. 'data' → logprob: -2.8910884857177734
    6. 'A' → logprob: -3.1410884857177734
    7. 'arr' → logprob: -3.3910884857177734
    8. ' 
' → logprob: -3.6410884857177734
    9. 'numbers' → logprob: -3.7660884857177734
    10. '\n' → logprob: -4.016088485717773

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07142482697963715
    2. '=' → logprob: -2.696424722671509
    3. '_' → logprob: -7.446424961090088
    4. '[' → logprob: -7.821424961090088
    5. ',' → logprob: -9.07142448425293
    6. ' ' → logprob: -9.32142448425293
    7. '.' → logprob: -9.44642448425293
    8. 's' → logprob: -9.57142448425293
    9. '=[]' → logprob: -10.82142448425293
    10. ')' → logprob: -11.07142448425293

Token 25: ' list' (ID: 1562)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -1.2036089897155762
    2. 'list' → logprob: -1.5786089897155762
    3. '[list' → logprob: -1.8286089897155762
    4. '[' → logprob: -1.8286089897155762
    5. ' [' → logprob: -2.703608989715576
    6. ' list' → logprob: -2.953608989715576
    7. '[str' → logprob: -4.453608989715576
    8. 'input' → logprob: -4.578608989715576
    9. '[int' → logprob: -4.828608989715576
    10. 'chain' → logprob: -5.578608989715576

Token 26: '(chain' (ID: 124348)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.7722023129463196
    2. '(chain' → logprob: -1.2722022533416748
    3. '(' → logprob: -1.5222022533416748
    4. '(map' → logprob: -3.397202253341675
    5. '(input' → logprob: -6.022202491760254
    6. '(range' → logprob: -6.397202491760254
    7. '(int' → logprob: -7.272202491760254
    8. '()' → logprob: -7.522202491760254
    9. '(keys' → logprob: -9.022202491760254
    10. '(filter' → logprob: -9.522202491760254

Token 27: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.009790086187422276
    2. '(*' → logprob: -5.009789943695068
    3. '(' → logprob: -6.009789943695068
    4. '(product' → logprob: -8.134790420532227
    5. '(*(' → logprob: -8.634790420532227
    6. 'from' → logprob: -9.009790420532227
    7. '(.' → logprob: -12.509790420532227
    8. ' from' → logprob: -12.759790420532227
    9. '(
' → logprob: -13.009790420532227
    10. ')' → logprob: -13.009790420532227

Token 28: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.008811804465949535
    2. 'iter' → logprob: -4.758811950683594
    3. '(iter' → logprob: -9.883811950683594
    4. 'import' → logprob: -10.008811950683594
    5. '_iterator' → logprob: -10.133811950683594
    6. 'it' → logprob: -11.758811950683594
    7. ' iterable' → logprob: -11.758811950683594
    8. ' iter' → logprob: -11.883811950683594
    9. '	iter' → logprob: -12.008811950683594
    10. 's' → logprob: -12.008811950683594

Token 29: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0017390783177688718
    2. 'tools' → logprob: -6.626739025115967
    3. 'ables' → logprob: -8.751739501953125
    4. 'ate' → logprob: -9.501739501953125
    5. 'ble' → logprob: -10.251739501953125
    6. '(' → logprob: -10.751739501953125
    7. 'bles' → logprob: -11.001739501953125
    8. 'tool' → logprob: -11.251739501953125
    9. '```' → logprob: -11.376739501953125
    10. 'ator' → logprob: -11.501739501953125

Token 30: '([(' (ID: 156282)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.006152038928121328
    2. '(' → logprob: -6.006152153015137
    3. '((' → logprob: -6.256152153015137
    4. '([' → logprob: -6.506152153015137
    5. '(map' → logprob: -9.131152153015137
    6. 'product' → logprob: -10.006152153015137
    7. '(it' → logprob: -11.006152153015137
    8. '(products' → logprob: -11.381152153015137
    9. '(list' → logprob: -11.506152153015137
    10. ' (' → logprob: -11.631152153015137

Token 31: 'lambda' (ID: 35280)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.5552078485488892
    2. 'range' → logprob: -1.3052078485488892
    3. 'map' → logprob: -2.5552077293395996
    4. 'list' → logprob: -3.3052077293395996
    5. 'input' → logprob: -4.3052077293396
    6. '[(' → logprob: -4.6802077293396
    7. '[' → logprob: -5.3052077293396
    8. '(range' → logprob: -6.4302077293396
    9. 'chain' → logprob: -6.6802077293396
    10. '[i' → logprob: -6.9302077293396

Token 32: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0907684564590454
    2. ' x' → logprob: -1.5907684564590454
    3. 'lambda' → logprob: -2.215768337249756
    4. ' lambda' → logprob: -2.340768337249756
    5. 's' → logprob: -3.465768337249756
    6. ' keys' → logprob: -3.840768337249756
    7. 'list' → logprob: -3.840768337249756
    8. ' list' → logprob: -3.965768337249756
    9. ' range' → logprob: -4.215768337249756
    10. 'range' → logprob: -4.215768337249756

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08804411441087723
    2. ',b' → logprob: -3.0880441665649414
    3. ':' → logprob: -4.338044166564941
    4. ' ,' → logprob: -5.213044166564941
    5. ',n' → logprob: -6.088044166564941
    6. 'a' → logprob: -6.338044166564941
    7. 'x' → logprob: -6.463044166564941
    8. ',i' → logprob: -6.588044166564941
    9. ' x' → logprob: -6.838044166564941
    10. ',a' → logprob: -6.838044166564941

Token 34: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22699059545993805
    2. ' b' → logprob: -1.6019905805587769
    3. ' lambda' → logprob: -7.976990699768066
    4. 'lambda' → logprob: -8.101990699768066
    5. 'a' → logprob: -8.851990699768066
    6. 'N' → logprob: -9.101990699768066
    7. 'n' → logprob: -9.851990699768066
    8. 'c' → logprob: -9.914490699768066
    9. ' ' → logprob: -10.101990699768066
    10. 's' → logprob: -10.414490699768066

Token 35: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4101960062980652
    2. ',' → logprob: -1.28519606590271
    3. ' :' → logprob: -4.285195827484131
    4. '=lambda' → logprob: -4.785195827484131
    5. ',n' → logprob: -5.285195827484131
    6. '=' → logprob: -5.285195827484131
    7. ',a' → logprob: -5.535195827484131
    8. 'a' → logprob: -5.535195827484131
    9. ',k' → logprob: -5.910195827484131
    10. ',i' → logprob: -6.160195827484131

Token 36: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.9254728555679321
    2. 'lambda' → logprob: -2.0504727363586426
    3. '(lambda' → logprob: -2.1754727363586426
    4. '[' → logprob: -2.4254727363586426
    5. ' lambda' → logprob: -2.5504727363586426
    6. '[a' → logprob: -2.5504727363586426
    7. ' product' → logprob: -3.1754727363586426
    8. 'product' → logprob: -3.3004727363586426
    9. '(a' → logprob: -3.3004727363586426
    10. ' [' → logprob: -3.4254727363586426

Token 37: 'reduce' (ID: 49119)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16278310120105743
    2. 'i' → logprob: -2.912783145904541
    3. 'x' → logprob: -3.287783145904541
    4. 'b' → logprob: -4.537783145904541
    5. 'c' → logprob: -4.537783145904541
    6. 'k' → logprob: -4.787783145904541
    7. 'lambda' → logprob: -5.037783145904541
    8. '(i' → logprob: -5.787783145904541
    9. '(a' → logprob: -5.912783145904541
    10. 'j' → logprob: -6.037783145904541

Token 38: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0025319026317447424
    2. '(operator' → logprob: -6.752532005310059
    3. '(' → logprob: -7.377532005310059
    4. '(int' → logprob: -7.627532005310059
    5. '((' → logprob: -9.627532005310059
    6. ' (' → logprob: -10.002532005310059
    7. ')' → logprob: -10.752532005310059
    8. 'lambda' → logprob: -10.877532005310059
    9. '```' → logprob: -10.877532005310059
    10. ' lambda' → logprob: -11.002532005310059

Token 39: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7884839773178101
    2. 'lambda' → logprob: -0.9134839773178101
    3. ' x' → logprob: -2.9134840965270996
    4. 'x' → logprob: -3.0384840965270996
    5. 'a' → logprob: -4.0384840965271
    6. ' a' → logprob: -4.7884840965271
    7. '(lambda' → logprob: -4.9134840965271
    8. 'l' → logprob: -5.5384840965271
    9. '=lambda' → logprob: -6.2884840965271
    10. '   ' → logprob: -7.0384840965271

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17702947556972504
    2. 'lambda' → logprob: -2.4270293712615967
    3. '(lambda' → logprob: -3.3020293712615967
    4. ' lambda' → logprob: -3.6770293712615967
    5. ' ,' → logprob: -5.302029609680176
    6. '=lambda' → logprob: -6.427029609680176
    7. '   ' → logprob: -6.552029609680176
    8. 'x' → logprob: -7.177029609680176
    9. 'a' → logprob: -7.427029609680176
    10. 'ambda' → logprob: -7.927029609680176

Token 41: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5372757315635681
    2. 'lambda' → logprob: -1.787275791168213
    3. ' lambda' → logprob: -2.037275791168213
    4. 'x' → logprob: -3.287275791168213
    5. ' y' → logprob: -3.287275791168213
    6. '(lambda' → logprob: -3.537275791168213
    7. 'a' → logprob: -4.787275791168213
    8. ' x' → logprob: -6.537275791168213
    9. 'z' → logprob: -7.412275791168213
    10. ' (' → logprob: -7.662275791168213

Token 42: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07578250020742416
    2. 'lambda' → logprob: -3.450782537460327
    3. ' ,' → logprob: -4.075782299041748
    4. ':' → logprob: -4.950782299041748
    5. ' lambda' → logprob: -5.075782299041748
    6. '=lambda' → logprob: -6.575782299041748
    7. ' ' → logprob: -6.700782299041748
    8. ' x' → logprob: -6.825782299041748
    9. '   ' → logprob: -6.950782299041748
    10. '(lambda' → logprob: -6.950782299041748

Token 43: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.26139533519744873
    2. ' x' → logprob: -1.5113953351974487
    3. 'a' → logprob: -5.261395454406738
    4. '(x' → logprob: -6.511395454406738
    5. ' a' → logprob: -7.386395454406738
    6. ' (' → logprob: -7.511395454406738
    7. 'lambda' → logprob: -7.886395454406738
    8. '(' → logprob: -8.136395454406738
    9. ' lambda' → logprob: -8.636395454406738
    10. '(lambda' → logprob: -9.011395454406738

Token 44: ' |' (ID: 1022)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10769788920879364
    2. ' *' → logprob: -2.8576979637145996
    3. '+' → logprob: -3.6076979637145996
    4. '*y' → logprob: -4.7326979637146
    5. '|' → logprob: -5.9826979637146
    6. '*c' → logprob: -6.3576979637146
    7. ' +' → logprob: -7.1076979637146
    8. '*a' → logprob: -7.2326979637146
    9. '^' → logprob: -7.6076979637146
    10. '<<' → logprob: -7.6076979637146

Token 45: ' (' (ID: 350)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5412322282791138
    2. ' y' → logprob: -0.9162322282791138
    3. '(' → logprob: -4.791232109069824
    4. ' (' → logprob: -5.041232109069824
    5. '(y' → logprob: -5.916232109069824
    6. ' ' → logprob: -8.541232109069824
    7. '  ' → logprob: -9.666232109069824
    8. '(c' → logprob: -10.291232109069824
    9. 'c' → logprob: -10.541232109069824
    10. '    ' → logprob: -11.166232109069824

Token 46: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.13817372918128967
    2. '1' → logprob: -2.638173818588257
    3. '(' → logprob: -3.263173818588257
    4. ' y' → logprob: -4.513173580169678
    5. '(y' → logprob: -5.513173580169678
    6. 'c' → logprob: -6.263173580169678
    7. ' (' → logprob: -7.388173580169678
    8. ' ' → logprob: -7.513173580169678
    9. '(c' → logprob: -7.888173580169678
    10. 'a' → logprob: -8.388174057006836

Token 47: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.5764756202697754
    2. '<<' → logprob: -0.8264756202697754
    3. '<<(' → logprob: -8.201475143432617
    4. '<<<' → logprob: -9.326475143432617
    5. '<' → logprob: -9.701475143432617
    6. '1' → logprob: -9.951475143432617
    7. ' <' → logprob: -11.701475143432617
    8. '0' → logprob: -11.951475143432617
    9. ' ' → logprob: -12.076475143432617
    10. 'a' → logprob: -12.263975143432617

Token 48: ' (' (ID: 350)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.21784095466136932
    2. 'a' → logprob: -1.9678409099578857
    3. 'c' → logprob: -3.0928409099578857
    4. '(' → logprob: -5.842841148376465
    5. 'x' → logprob: -6.217841148376465
    6. '(y' → logprob: -6.467841148376465
    7. ' y' → logprob: -6.842841148376465
    8. '(c' → logprob: -6.842841148376465
    9. '(a' → logprob: -6.967841148376465
    10. 'b' → logprob: -7.967841148376465

Token 49: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.21104708313941956
    2. 'a' → logprob: -2.2110471725463867
    3. 'c' → logprob: -2.7110471725463867
    4. '(' → logprob: -5.586047172546387
    5. '(y' → logprob: -6.086047172546387
    6. '(c' → logprob: -6.336047172546387
    7. '(a' → logprob: -6.461047172546387
    8. 'x' → logprob: -6.586047172546387
    9. ' y' → logprob: -6.961047172546387
    10. 'b' → logprob: -7.211047172546387

Token 50: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2200419157743454
    2. ' -' → logprob: -2.3450419902801514
    3. '+a' → logprob: -3.5950419902801514
    4. 'a' → logprob: -4.220041751861572
    5. '+c' → logprob: -4.345041751861572
    6. '+' → logprob: -4.470041751861572
    7. ' +' → logprob: -4.595041751861572
    8. '-a' → logprob: -4.595041751861572
    9. '-c' → logprob: -6.095041751861572
    10. '*a' → logprob: -6.345041751861572

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02609185129404068
    2. 'a' → logprob: -4.151092052459717
    3. 'c' → logprob: -4.776092052459717
    4. ' ' → logprob: -7.276092052459717
    5. 'k' → logprob: -9.026091575622559
    6. 'b' → logprob: -9.276091575622559
    7. '2' → logprob: -9.463591575622559
    8. ' a' → logprob: -9.463591575622559
    9. ' c' → logprob: -9.526091575622559
    10. 'i' → logprob: -9.526091575622559

Token 52: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.07848804444074631
    2. ')),' → logprob: -2.7034881114959717
    3. ' ),' → logprob: -5.828487873077393
    4. ')' → logprob: -6.078487873077393
    5. ' if' → logprob: -6.703487873077393
    6. ' ' → logprob: -7.453487873077393
    7. 'if' → logprob: -7.578487873077393
    8. ',' → logprob: -8.32848834991455
    9. '))),' → logprob: -8.70348834991455
    10. '))' → logprob: -9.07848834991455

Token 53: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0517706871032715
    2. 'c' → logprob: -1.9267706871032715
    3. ' a' → logprob: -1.9267706871032715
    4. ' range' → logprob: -1.9267706871032715
    5. ' c' → logprob: -2.1767706871032715
    6. 'range' → logprob: -3.1767706871032715
    7. 'b' → logprob: -3.9267706871032715
    8. ' b' → logprob: -4.3017706871032715
    9. 'r' → logprob: -5.8017706871032715
    10. 'i' → logprob: -6.3017706871032715

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012698464095592499
    2. '),' → logprob: -5.262698650360107
    3. ',a' → logprob: -6.762698650360107
    4. '[' → logprob: -6.887698650360107
    5. 'a' → logprob: -6.887698650360107
    6. ' ,' → logprob: -6.887698650360107
    7. '[a' → logprob: -7.637698650360107
    8. ' if' → logprob: -7.762698650360107
    9. '+' → logprob: -7.762698650360107
    10. '[i' → logprob: -8.13769817352295

Token 55: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8288576006889343
    2. 'a' → logprob: -0.8288576006889343
    3. '1' → logprob: -2.328857660293579
    4. ' ' → logprob: -4.453857421875
    5. '(' → logprob: -4.578857421875
    6. ' a' → logprob: -6.078857421875
    7. '(a' → logprob: -6.953857421875
    8. '   ' → logprob: -7.203857421875
    9. '{' → logprob: -7.578857421875
    10. ' (' → logprob: -7.766357421875

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3959132432937622
    2. 'a' → logprob: -1.5209132432937622
    3. '1' → logprob: -2.8959131240844727
    4. '(' → logprob: -3.0209131240844727
    5. ' ' → logprob: -6.895913124084473
    6. '{' → logprob: -7.520913124084473
    7. '(a' → logprob: -7.520913124084473
    8. 'x' → logprob: -7.895913124084473
    9. 'set' → logprob: -8.395913124084473
    10. '   ' → logprob: -8.520913124084473

Token 57: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6906344294548035
    2. ' if' → logprob: -1.0656344890594482
    3. ')' → logprob: -2.8156344890594482
    4. '&' → logprob: -3.8156344890594482
    5. ' &' → logprob: -3.9406344890594482
    6. 'if' → logprob: -3.9406344890594482
    7. '+' → logprob: -4.815634250640869
    8. ' +' → logprob: -5.565634250640869
    9. ' ),' → logprob: -5.565634250640869
    10. '|' → logprob: -5.690634250640869

Token 58: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8413550853729248
    2. ' a' → logprob: -0.8413550853729248
    3. ' range' → logprob: -3.341355085372925
    4. ' [' → logprob: -3.966355085372925
    5. 'range' → logprob: -4.216355323791504
    6. ' b' → logprob: -4.591355323791504
    7. '[a' → logprob: -4.841355323791504
    8. ' keys' → logprob: -4.966355323791504
    9. ')' → logprob: -5.091355323791504
    10. 'b' → logprob: -5.091355323791504

Token 59: ')])' (ID: 99066)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46454480290412903
    2. ')])' → logprob: -1.2145447731018066
    3. ')]' → logprob: -3.0895447731018066
    4. '))' → logprob: -3.9645447731018066
    5. '[i' → logprob: -5.964544773101807
    6. '),' → logprob: -5.964544773101807
    7. ')],' → logprob: -6.964544773101807
    8. ')))' → logprob: -7.339544773101807
    9. ' )' → logprob: -7.464544773101807
    10. '[' → logprob: -8.214545249938965

Token 60: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8080138564109802
    2. '(keys' → logprob: -1.058013916015625
    3. '(a' → logprob: -2.933013916015625
    4. '(c' → logprob: -3.433013916015625
    5. '(x' → logprob: -3.933013916015625
    6. '(i' → logprob: -3.933013916015625
    7. '(n' → logprob: -4.308013916015625
    8. '(N' → logprob: -4.558013916015625
    9. '(k' → logprob: -5.058013916015625
    10. '(*' → logprob: -5.058013916015625

Token 61: 'int' (ID: 491)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9111239314079285
    2. 'list' → logprob: -1.6611239910125732
    3. 'i' → logprob: -2.4111239910125732
    4. 'map' → logprob: -3.1611239910125732
    5. 'range' → logprob: -3.2861239910125732
    6. 'x' → logprob: -3.4111239910125732
    7. 'keys' → logprob: -3.4111239910125732
    8. '[' → logprob: -3.9111239910125732
    9. '[a' → logprob: -4.161123752593994
    10. '[i' → logprob: -4.286123752593994

Token 62: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2718435525894165
    2. '(i' → logprob: -2.146843433380127
    3. '(a' → logprob: -2.646843433380127
    4. '(token' → logprob: -4.771843433380127
    5. '(keys' → logprob: -4.771843433380127
    6. '(input' → logprob: -5.146843433380127
    7. '(k' → logprob: -5.146843433380127
    8. '(n' → logprob: -5.521843433380127
    9. '(s' → logprob: -5.521843433380127
    10. '(' → logprob: -5.521843433380127

Token 63: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.006941506639122963
    2. '.strip' → logprob: -6.381941318511963
    3. '[:-' → logprob: -6.506941318511963
    4. ')' → logprob: -6.881941318511963
    5. '[' → logprob: -7.381941318511963
    6. '.split' → logprob: -7.756941318511963
    7. '.rstrip' → logprob: -7.881941318511963
    8. '[i' → logprob: -8.131941795349121
    9. 'a' → logprob: -8.256941795349121
    10. ',' → logprob: -8.881941795349121

Token 64: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.752250611782074
    2. 'b' → logprob: -1.8772506713867188
    3. 'map' → logprob: -1.8772506713867188
    4. 'input' → logprob: -2.6272506713867188
    5. ' list' → logprob: -3.1272506713867188
    6. ' map' → logprob: -4.377250671386719
    7. 'm' → logprob: -4.502250671386719
    8. 'v' → logprob: -4.627250671386719
    9. 'line' → logprob: -4.752250671386719
    10. '[' → logprob: -4.752250671386719

Token 65: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.019106727093458176
    2. '(' → logprob: -4.144106864929199
    3. '(product' → logprob: -6.769106864929199
    4. '(c' → logprob: -7.019106864929199
    5. '(int' → logprob: -8.2691068649292
    6. '(m' → logprob: -8.5191068649292
    7. '(filter' → logprob: -8.6441068649292
    8. '(chain' → logprob: -8.6441068649292
    9. '(b' → logprob: -10.2691068649292
    10. '(
' → logprob: -10.3941068649292

Token 66: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003460712905507535
    2. '(' → logprob: -8.625346183776855
    3. '(lambda' → logprob: -9.125346183776855
    4. 'int' → logprob: -10.250346183776855
    5. ',int' → logprob: -12.000346183776855
    6. ')' → logprob: -12.500346183776855
    7. '(str' → logprob: -13.250346183776855
    8. '   ' → logprob: -13.375346183776855
    9. '<int' → logprob: -13.625346183776855
    10. ' (' → logprob: -13.750346183776855

Token 67: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3496094048023224
    2. ',' → logprob: -1.849609375
    3. ',input' → logprob: -2.974609375
    4. '<|end|>' → logprob: -3.224609375
    5. '(' → logprob: -3.349609375
    6. ')' → logprob: -5.224609375
    7. 'input' → logprob: -6.099609375
    8. '(x' → logprob: -7.099609375
    9. '...' → logprob: -7.474609375
    10. '(line' → logprob: -7.724609375

Token 68: ' c' (ID: 274)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7133997082710266
    2. 's' → logprob: -1.8383996486663818
    3. 'b' → logprob: -1.9633996486663818
    4. 'input' → logprob: -2.963399648666382
    5. 'filter' → logprob: -2.963399648666382
    6. 'f' → logprob: -3.338399648666382
    7. 'line' → logprob: -4.213399887084961
    8. 'c' → logprob: -4.338399887084961
    9. 'i' → logprob: -4.963399887084961
    10. 'k' → logprob: -5.213399887084961

Token 69: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.055760834366083145
    2. '().' → logprob: -4.180760860443115
    3. '.' → logprob: -4.555760860443115
    4. 'input' → logprob: -4.930760860443115
    5. '.strip' → logprob: -4.930760860443115
    6. ')))' → logprob: -5.305760860443115
    7. '))' → logprob: -5.555760860443115
    8. 'split' → logprob: -6.055760860443115
    9. '(input' → logprob: -7.680760860443115
    10. '[' → logprob: -7.805760860443115

Token 70: '())))' (ID: 168342)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6298449635505676
    2. '())))' → logprob: -1.3798449039459229
    3. '(','' → logprob: -2.004844903945923
    4. '()' → logprob: -2.629844903945923
    5. '())' → logprob: -5.879845142364502
    6. '(',' → logprob: -6.004845142364502
    7. '('' → logprob: -6.754845142364502
    8. '()));' → logprob: -7.504845142364502
    9. '())))
' → logprob: -8.004844665527344
    10. ')))' → logprob: -8.254844665527344

Token 71: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19516892731189728
    2. ' for' → logprob: -2.195168972015381
    3. '(input' → logprob: -3.070168972015381
    4. '()' → logprob: -4.320168972015381
    5. 'input' → logprob: -5.820168972015381
    6. '(' → logprob: -6.570168972015381
    7. ')' → logprob: -6.820168972015381
    8. ',' → logprob: -9.320168495178223
    9. ' input' → logprob: -9.320168495178223
    10. '('' → logprob: -9.570168495178223

Token 72: ' a' (ID: 261)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16667665541172028
    2. ' input' → logprob: -1.916676640510559
    3. 'range' → logprob: -5.6666765213012695
    4. ' range' → logprob: -6.2916765213012695
    5. 'product' → logprob: -8.04167652130127
    6. '_' → logprob: -8.29167652130127
    7. '(input' → logprob: -8.54167652130127
    8. '[input' → logprob: -9.16667652130127
    9. ' product' → logprob: -9.41667652130127
    10. '[' → logprob: -10.79167652130127

Token 73: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.544783890247345
    2. ',' → logprob: -0.919783890247345
    3. 'in' → logprob: -4.794784069061279
    4. ',input' → logprob: -4.794784069061279
    5. ',c' → logprob: -6.419784069061279
    6. ' ,' → logprob: -6.919784069061279
    7. 'input' → logprob: -7.169784069061279
    8. ' input' → logprob: -8.294783592224121
    9. ',line' → logprob: -8.794783592224121
    10. ',a' → logprob: -9.044783592224121

Token 74: ' _,' (ID: 18042)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8097723722457886
    2. 'input' → logprob: -1.0597723722457886
    3. '[input' → logprob: -2.059772491455078
    4. ' [' → logprob: -3.684772491455078
    5. 'b' → logprob: -4.434772491455078
    6. '(input' → logprob: -4.809772491455078
    7. '[M' → logprob: -4.809772491455078
    8. '[' → logprob: -5.184772491455078
    9. ' keys' → logprob: -5.559772491455078
    10. ' product' → logprob: -5.684772491455078

Token 75: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6700184941291809
    2. 'c' → logprob: -1.6700184345245361
    3. '*' → logprob: -3.045018434524536
    4. ' b' → logprob: -3.170018434524536
    5. ' input' → logprob: -3.170018434524536
    6. 'input' → logprob: -3.295018434524536
    7. 'b' → logprob: -3.420018434524536
    8. '*c' → logprob: -3.545018434524536
    9. ' *' → logprob: -4.045018672943115
    10. 'line' → logprob: -4.795018672943115

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01841353438794613
    2. 'in' → logprob: -4.018413543701172
    3. ')' → logprob: -9.393413543701172
    4. 's' → logprob: -9.393413543701172
    5. ',' → logprob: -10.518413543701172
    6. ' ' → logprob: -11.393413543701172
    7. 'enumer' → logprob: -11.955913543701172
    8. ']' → logprob: -12.393413543701172
    9. ')]' → logprob: -12.705913543701172
    10. 'a' → logprob: -12.830913543701172

Token 77: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25509771704673767
    2. 'product' → logprob: -1.88009774684906
    3. ' [' → logprob: -3.3800976276397705
    4. '[input' → logprob: -4.00509786605835
    5. ' product' → logprob: -4.38009786605835
    6. '(product' → logprob: -6.50509786605835
    7. '[(' → logprob: -6.63009786605835
    8. '[key' → logprob: -7.38009786605835
    9. '[list' → logprob: -7.50509786605835
    10. 'input' → logprob: -8.005097389221191

Token 78: 'input' (ID: 2586)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.012499055825173855
    2. 'input' → logprob: -5.01249885559082
    3. '(input' → logprob: -6.13749885559082
    4. ' [' → logprob: -6.63749885559082
    5. '[' → logprob: -6.63749885559082
    6. ' input' → logprob: -8.13749885559082
    7. '[line' → logprob: -8.63749885559082
    8. 'map' → logprob: -8.63749885559082
    9. '[list' → logprob: -9.26249885559082
    10. '(map' → logprob: -10.13749885559082

Token 79: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.5954712075181305e-05
    2. '()' → logprob: -10.250036239624023
    3. '()
' → logprob: -16.000036239624023
    4. '.split' → logprob: -16.375036239624023
    5. 'split' → logprob: -16.625036239624023
    6. '()].' → logprob: -17.000036239624023
    7. '('').' → logprob: -17.375036239624023
    8. ' ().' → logprob: -17.375036239624023
    9. '("").' → logprob: -18.000036239624023
    10. '()[' → logprob: -18.250036239624023

Token 80: 'partition' (ID: 67655)
  Prédit: 'partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.25761473178863525
    2. 'split' → logprob: -2.0076146125793457
    3. 'strip' → logprob: -2.7576146125793457
    4. 'rstrip' → logprob: -4.007614612579346
    5. 'rs' → logprob: -4.882614612579346
    6. ' partition' → logprob: -5.882614612579346
    7. 'r' → logprob: -7.507614612579346
    8. ' split' → logprob: -9.007615089416504
    9. ' r' → logprob: -9.632615089416504
    10. '.partition' → logprob: -11.007615089416504

Token 81: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00556018203496933
    2. '("' → logprob: -5.880560398101807
    3. '(':' → logprob: -6.005560398101807
    4. '(":' → logprob: -9.130559921264648
    5. ''' → logprob: -10.130559921264648
    6. ' ('' → logprob: -10.505559921264648
    7. '(' → logprob: -10.630559921264648
    8. '('\' → logprob: -10.755559921264648
    9. '(',' → logprob: -11.005559921264648
    10. '```' → logprob: -11.505559921264648

Token 82: ' ')' (ID: 35910)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6569496989250183
    2. ':' → logprob: -2.156949758529663
    3. ' '' → logprob: -2.281949758529663
    4. ' ')' → logprob: -2.531949758529663
    5. ' )' → logprob: -2.781949758529663
    6. '')' → logprob: -2.906949758529663
    7. ' ' → logprob: -4.156949520111084
    8. '')]' → logprob: -4.531949520111084
    9. ')' → logprob: -4.656949520111084
    10. ' :' → logprob: -4.906949520111084

Token 83: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6713958382606506
    2. '()]' → logprob: -0.7963958382606506
    3. ')])' → logprob: -4.796395778656006
    4. '('\' → logprob: -5.421395778656006
    5. '])' → logprob: -5.546395778656006
    6. ']' → logprob: -5.546395778656006
    7. '())' → logprob: -5.671395778656006
    8. '().' → logprob: -5.796395778656006
    9. 'for' → logprob: -6.171395778656006
    10. '.split' → logprob: -6.296395778656006

Token 84: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2006201595067978
    2. ' range' → logprob: -2.200620174407959
    3. '_' → logprob: -2.825620174407959
    4. '[' → logprob: -4.575620174407959
    5. '_range' → logprob: -6.825620174407959
    6. ' _' → logprob: -9.5756196975708
    7. '_[' → logprob: -9.5756196975708
    8. '(range' → logprob: -9.5756196975708
    9. ' [' → logprob: -10.2006196975708
    10. 'input' → logprob: -10.7006196975708

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04318131133913994
    2. 'in' → logprob: -3.6681814193725586
    3. ' range' → logprob: -4.668181419372559
    4. 'range' → logprob: -4.918181419372559
    5. '_' → logprob: -10.793181419372559
    6. ' ' → logprob: -12.043181419372559
    7. ' _' → logprob: -12.543181419372559
    8. '<|end|>' → logprob: -12.918181419372559
    9. '(range' → logprob: -13.543181419372559
    10. ' xrange' → logprob: -13.668181419372559

Token 86: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889088988304138
    2. ' range' → logprob: -2.578890800476074
    3. ' ' → logprob: -14.828890800476074
    4. '	range' → logprob: -15.453890800476074
    5. 'r' → logprob: -15.828890800476074
    6. '(range' → logprob: -15.953890800476074
    7. 'rang' → logprob: -16.95389175415039
    8. '  ' → logprob: -16.95389175415039
    9. '_' → logprob: -17.45389175415039
    10. '_range' → logprob: -17.82889175415039

Token 87: '(M' (ID: 6103)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4315456449985504
    2. '(M' → logprob: -1.056545615196228
    3. '(' → logprob: -6.806545734405518
    4. 'N' → logprob: -6.931545734405518
    5. 'M' → logprob: -7.306545734405518
    6. ' (' → logprob: -10.43154525756836
    7. '(
' → logprob: -11.18154525756836
    8. ' N' → logprob: -11.80654525756836
    9. '(n' → logprob: -11.93154525756836
    10. ' ' → logprob: -12.05654525756836

Token 88: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.24537350237369537
    2. ')])' → logprob: -2.120373487472534
    3. '])' → logprob: -2.995373487472534
    4. ']))' → logprob: -3.245373487472534
    5. '])]' → logprob: -5.495373725891113
    6. ')' → logprob: -6.370373725891113
    7. '])))' → logprob: -6.495373725891113
    8. ']' → logprob: -6.995373725891113
    9. '))' → logprob: -9.245373725891113
    10. ']])' → logprob: -9.620373725891113

Token 89: ']]' (ID: 8928)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.05397019907832146
    2. ']' → logprob: -3.6789700984954834
    3. '])' → logprob: -4.0539703369140625
    4. ')]' → logprob: -5.5539703369140625
    5. ']))
' → logprob: -5.9289703369140625
    6. ')])' → logprob: -6.8039703369140625
    7. ']))

' → logprob: -7.3039703369140625
    8. '])]' → logprob: -7.3039703369140625
    9. ']]' → logprob: -8.178970336914062
    10. ']])' → logprob: -8.428970336914062

Token 90: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05886758863925934
    2. ')' → logprob: -3.1838676929473877
    3. ')))' → logprob: -4.183867454528809
    4. '))
' → logprob: -7.933867454528809
    5. ']))' → logprob: -10.183867454528809
    6. '))))' → logprob: -10.808867454528809
    7. ' ))' → logprob: -11.183867454528809
    8. ')
' → logprob: -11.433867454528809
    9. ')])' → logprob: -11.558867454528809
    10. ')))
' → logprob: -11.808867454528809

Token 91: 'INF' (ID: 64358)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036062777042388916
    2. '
' → logprob: -4.411062717437744
    3. '#' → logprob: -4.661062717437744
    4. '[' → logprob: -4.911062717437744
    5. '<|end|>' → logprob: -6.536062717437744
    6. '(' → logprob: -7.786062717437744
    7. ' ' → logprob: -7.786062717437744
    8. ')
' → logprob: -7.786062717437744
    9. '*' → logprob: -7.911062717437744
    10. ' 
' → logprob: -8.036063194274902

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994221359491348
    2. '=' → logprob: -2.6949422359466553
    3. ',' → logprob: -12.819942474365234
    4. '=int' → logprob: -14.319942474365234
    5. ' ' → logprob: -14.819942474365234
    6. ' ' → logprob: -14.944942474365234
    7. ')' → logprob: -15.069942474365234
    8. ' =
' → logprob: -15.069942474365234
    9. '<|end|>' → logprob: -15.444942474365234
    10. '＝' → logprob: -15.569942474365234

Token 93: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.11540935188531876
    2. 'float' → logprob: -2.3654093742370605
    3. ' ' → logprob: -4.9904093742370605
    4. '1' → logprob: -5.4904093742370605
    5. ' float' → logprob: -5.6154093742370605
    6. 'int' → logprob: -8.240408897399902
    7. '100' → logprob: -9.365408897399902
    8. '2' → logprob: -10.240408897399902
    9. '999' → logprob: -10.615408897399902
    10. '9' → logprob: -11.365408897399902

Token 94: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.30687442421913147
    2. ''' → logprob: -2.0568745136260986
    3. '('' → logprob: -2.0568745136260986
    4. ''a' → logprob: -6.1818742752075195
    5. ''ap' → logprob: -7.6818742752075195
    6. ''ex' → logprob: -7.9318742752075195
    7. '32' → logprob: -8.30687427520752
    8. ''type' → logprob: -8.30687427520752
    9. ''an' → logprob: -8.30687427520752
    10. ''any' → logprob: -8.30687427520752

Token 95: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.13466379046440125
    2. ''in' → logprob: -2.1346638202667236
    3. ''' → logprob: -4.8846635818481445
    4. '"' → logprob: -10.384663581848145
    5. 'in' → logprob: -10.759663581848145
    6. ''i' → logprob: -11.009663581848145
    7. ''ex' → logprob: -11.884663581848145
    8. 'INF' → logprob: -12.009663581848145
    9. ''end' → logprob: -12.259663581848145
    10. ' inf' → logprob: -12.384663581848145

Token 96: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007435183506458998
    2. ')
' → logprob: -7.375743389129639
    3. ' )' → logprob: -10.000743865966797
    4. '')' → logprob: -10.375743865966797
    5. ')
' → logprob: -10.750743865966797
    6. ')

' → logprob: -12.125743865966797
    7. '))' → logprob: -12.250743865966797
    8. '`)' → logprob: -13.250743865966797
    9. ')`' → logprob: -13.625743865966797
    10. ');' → logprob: -13.750743865966797

Token 97: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04221118986606598
    2. 'dist' → logprob: -3.2922112941741943
    3. 'DP' → logprob: -5.917211055755615
    4. 'cost' → logprob: -8.542211532592773
    5. ' dp' → logprob: -8.667211532592773
    6. 'd' → logprob: -8.917211532592773
    7. 'answer' → logprob: -9.042211532592773
    8. 'D' → logprob: -9.292211532592773
    9. 'distance' → logprob: -9.292211532592773
    10. 'result' → logprob: -9.417211532592773

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038836345076560974
    2. '=' → logprob: -3.2888362407684326
    3. '[' → logprob: -7.663836479187012
    4. '=[' → logprob: -8.413836479187012
    5. ')' → logprob: -10.538836479187012
    6. ']' → logprob: -10.788836479187012
    7. ' =[' → logprob: -10.913836479187012
    8. '=[]' → logprob: -11.413836479187012
    9. '```' → logprob: -12.163836479187012
    10. ' ' → logprob: -12.413836479187012

Token 99: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008389271679334342
    2. ' [' → logprob: -7.250838756561279
    3. '{' → logprob: -9.500839233398438
    4. '[-' → logprob: -11.250839233398438
    5. '[N' → logprob: -11.250839233398438
    6. '[int' → logprob: -11.750839233398438
    7. '[in' → logprob: -12.500839233398438
    8. '[(' → logprob: -12.750839233398438
    9. '[n' → logprob: -12.875839233398438
    10. '[len' → logprob: -13.125839233398438

Token 100: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.005693657789379358
    2. '0' → logprob: -6.005693435668945
    3. '[' → logprob: -6.005693435668945
    4. '-' → logprob: -8.255693435668945
    5. '-INF' → logprob: -8.255693435668945
    6. ' INF' → logprob: -9.505693435668945
    7. 'False' → logprob: -10.130693435668945
    8. '-inf' → logprob: -10.255693435668945
    9. 'inf' → logprob: -10.380693435668945
    10. '_INF' → logprob: -11.630693435668945

Token 101: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006899489555507898
    2. ']*(' → logprob: -5.131899356842041
    3. ']*' → logprob: -7.006899356842041
    4. ']+' → logprob: -10.8818998336792
    5. ' ]' → logprob: -11.1318998336792
    6. '])' → logprob: -11.2568998336792
    7. ')]' → logprob: -11.3818998336792
    8. ')' → logprob: -13.6318998336792
    9. ']<<' → logprob: -13.6318998336792
    10. ' for' → logprob: -13.7568998336792

Token 102: 'pow' (ID: 30304)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -9.519893501419574e-05
    2. '(N' → logprob: -9.62509536743164
    3. '((' → logprob: -10.62509536743164
    4. '(M' → logprob: -13.12509536743164
    5. 'N' → logprob: -13.62509536743164
    6. ' (' → logprob: -14.25009536743164
    7. '1' → logprob: -15.50009536743164
    8. '(IN' → logprob: -16.12509536743164
    9. '(len' → logprob: -16.37509536743164
    10. '   ' → logprob: -16.37509536743164

Token 103: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00047094907495193183
    2. '2' → logprob: -8.375471115112305
    3. '(N' → logprob: -8.625471115112305
    4. '(M' → logprob: -10.750471115112305
    5. 'er' → logprob: -12.375471115112305
    6. '(K' → logprob: -12.625471115112305
    7. '```' → logprob: -12.625471115112305
    8. '(
' → logprob: -12.875471115112305
    9. ' (' → logprob: -13.125471115112305
    10. 'e' → logprob: -13.437971115112305

Token 104: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012684474932029843
    2. 'N' → logprob: -6.75126838684082
    3. '(' → logprob: -9.62626838684082
    4. '10' → logprob: -11.87626838684082
    5. ' ' → logprob: -12.00126838684082
    6. '   ' → logprob: -12.12626838684082
    7. '3' → logprob: -12.62626838684082
    8. '```' → logprob: -13.25126838684082
    9. '(N' → logprob: -13.25126838684082
    10. '1' → logprob: -13.75126838684082

Token 105: ',' (ID: 11)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06196846812963486
    2. ',' → logprob: -3.3119685649871826
    3. 'M' → logprob: -4.3119683265686035
    4. ',N' → logprob: -4.8119683265686035
    5. ' N' → logprob: -6.9369683265686035
    6. ',M' → logprob: -7.1869683265686035
    7. '(N' → logprob: -8.811968803405762
    8. ' ,' → logprob: -9.686968803405762
    9. '(M' → logprob: -10.561968803405762
    10. '(' → logprob: -10.936968803405762

Token 106: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.7432603272027336e-06
    2. ' N' → logprob: -13.500001907348633
    3. '	N' → logprob: -16.000001907348633
    4. 'M' → logprob: -16.625001907348633
    5. ' ' → logprob: -18.125001907348633
    6. 'n' → logprob: -18.125001907348633
    7. '(N' → logprob: -18.250001907348633
    8. 'int' → logprob: -18.375001907348633
    9. '20' → logprob: -18.625001907348633
    10. '(' → logprob: -18.750001907348633

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001417261315509677
    2. ')
' → logprob: -6.75141716003418
    3. ')]' → logprob: -8.62641716003418
    4. ')])' → logprob: -10.62641716003418
    5. '])' → logprob: -11.12641716003418
    6. ' )' → logprob: -11.12641716003418
    7. '))' → logprob: -12.75141716003418
    8. ']' → logprob: -13.00141716003418
    9. ')
' → logprob: -13.00141716003418
    10. ')

' → logprob: -13.37641716003418

Token 108: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.8921695047756657e-05
    2. ' dp' → logprob: -10.875028610229492
    3. '```' → logprob: -12.625028610229492
    4. '	dp' → logprob: -13.375028610229492
    5. '_dp' → logprob: -13.375028610229492
    6. '(dp' → logprob: -13.625028610229492
    7. '0' → logprob: -14.375028610229492
    8. '
' → logprob: -14.500028610229492
    9. '[' → logprob: -14.625028610229492
    10. '<|end|>' → logprob: -14.875028610229492

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3438327843905427e-05
    2. '0' → logprob: -11.37502384185791
    3. '[
' → logprob: -12.12502384185791
    4. '\[' → logprob: -13.00002384185791
    5. '```' → logprob: -13.62502384185791
    6. ' [' → logprob: -14.50002384185791
    7. '
' → logprob: -14.75002384185791
    8. ' ' → logprob: -15.00002384185791
    9. '(' → logprob: -15.50002384185791
    10. '<|end|>' → logprob: -15.50002384185791

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.62500286102295
    3. '(' → logprob: -14.25000286102295
    4. ']' → logprob: -15.75000286102295
    5. '000' → logprob: -16.187501907348633
    6. '1' → logprob: -16.437501907348633
    7. '00' → logprob: -16.812501907348633
    8. '   ' → logprob: -17.000001907348633
    9. '
' → logprob: -17.062501907348633
    10. '```' → logprob: -17.062501907348633

Token 111: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022046364028938115
    2. ')' → logprob: -9.25022029876709
    3. ')]' → logprob: -9.50022029876709
    4. ']=' → logprob: -10.50022029876709
    5. ' ]' → logprob: -11.12522029876709
    6. '])' → logprob: -12.00022029876709
    7. '`]' → logprob: -14.62522029876709
    8. ']
' → logprob: -15.12522029876709
    9. '=' → logprob: -15.37522029876709
    10. '()]' → logprob: -16.875221252441406

Token 112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407975792884827
    2. ' =' → logprob: -0.9740797281265259
    3. '0' → logprob: -14.099080085754395
    4. ' ' → logprob: -14.599080085754395
    5. ' ' → logprob: -14.974080085754395
    6. '=
' → logprob: -15.349080085754395
    7. '<|end|>' → logprob: -15.474080085754395
    8. '=True' → logprob: -16.099079132080078
    9. ',' → logprob: -16.349079132080078
    10. ' =
' → logprob: -16.599079132080078

Token 113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -20.625
    4. '```' → logprob: -20.875
    5. '00' → logprob: -21.375
    6. '۰' → logprob: -21.75
    7. '  ' → logprob: -22.125
    8. ' ' → logprob: -22.5
    9. '`' → logprob: -22.625
    10. '000' → logprob: -22.75

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '00' → logprob: -19.625001907348633
    4. '1' → logprob: -19.875001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '```' → logprob: -20.375001907348633
    7. 'int' → logprob: -20.500001907348633
    8. '  ' → logprob: -20.625001907348633
    9. '000' → logprob: -20.875001907348633
    10. '۰' → logprob: -20.937501907348633

Token 115: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4965560734272003
    2. '<|end|>' → logprob: -1.121556043624878
    3. 'for' → logprob: -3.371556043624878
    4. ' for' → logprob: -3.621556043624878
    5. '\n' → logprob: -6.246556282043457
    6. ' 
' → logprob: -7.121556282043457
    7. '<|end|>' → logprob: -7.496556282043457
    8. ')' → logprob: -8.121556282043457
    9. '```' → logprob: -8.246556282043457
    10. ' ' → logprob: -8.746556282043457

Token 116: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004903609515167773
    2. ' for' → logprob: -7.625490188598633
    3. 'from' → logprob: -13.625490188598633
    4. '```' → logprob: -14.500490188598633
    5. '
' → logprob: -15.750490188598633
    6. 'range' → logprob: -16.375490188598633
    7. '<|end|>' → logprob: -16.375490188598633
    8. '	for' → logprob: -16.500490188598633
    9. ')' → logprob: -17.250490188598633
    10. '0' → logprob: -17.375490188598633

Token 117: ' s' (ID: 265)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.0283151865005493
    2. 'i' → logprob: -1.7783151865005493
    3. 'a' → logprob: -2.1533150672912598
    4. 'k' → logprob: -2.1533150672912598
    5. 'key' → logprob: -2.2783150672912598
    6. '_,' → logprob: -3.4033150672912598
    7. ' cost' → logprob: -3.5283150672912598
    8. 'mask' → logprob: -3.6533150672912598
    9. ' key' → logprob: -4.52831506729126
    10. 'c' → logprob: -5.27831506729126

Token 118: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09346383810043335
    2. ',' → logprob: -2.593463897705078
    3. 'in' → logprob: -4.468463897705078
    4. ' ,' → logprob: -6.343463897705078
    5. ' ' → logprob: -6.843463897705078
    6. '_' → logprob: -10.593463897705078
    7. 's' → logprob: -11.093463897705078
    8. '_,' → logprob: -11.218463897705078
    9. ',in' → logprob: -11.593463897705078
    10. '0' → logprob: -11.718463897705078

Token 119: ' i' (ID: 575)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4447598457336426
    2. 'c' → logprob: -1.8197598457336426
    3. 'k' → logprob: -2.3197598457336426
    4. 'd' → logprob: -3.8197598457336426
    5. 'v' → logprob: -4.569759845733643
    6. ' cost' → logprob: -4.694759845733643
    7. 'a' → logprob: -4.819759845733643
    8. 'b' → logprob: -4.944759845733643
    9. 'p' → logprob: -5.069759845733643
    10. 't' → logprob: -5.194759845733643

Token 120: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4876719117164612
    2. ' in' → logprob: -1.4876718521118164
    3. 'n' → logprob: -1.8626718521118164
    4. 'in' → logprob: -5.737671852111816
    5. 's' → logprob: -7.862671852111816
    6. 'x' → logprob: -7.987671852111816
    7. ',n' → logprob: -8.362671852111816
    8. 'nd' → logprob: -8.487671852111816
    9. ' ,' → logprob: -8.987671852111816
    10. 'nt' → logprob: -8.987671852111816

Token 121: ' product' (ID: 1888)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.08954860270023346
    2. 'enumer' → logprob: -2.5895485877990723
    3. ' keys' → logprob: -4.964548587799072
    4. ' enumerate' → logprob: -5.714548587799072
    5. 'range' → logprob: -8.58954906463623
    6. '(keys' → logprob: -9.58954906463623
    7. 'zip' → logprob: -10.71454906463623
    8. '[(' → logprob: -11.08954906463623
    9. 'product' → logprob: -12.33954906463623
    10. 'items' → logprob: -12.33954906463623

Token 122: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0001238004770129919
    2. '(dp' → logprob: -9.875123977661133
    3. '(' → logprob: -10.000123977661133
    4. 'range' → logprob: -10.625123977661133
    5. '(pow' → logprob: -14.125123977661133
    6. '((' → logprob: -14.250123977661133
    7. 'dp' → logprob: -15.375123977661133
    8. ' (' → logprob: -15.500123977661133
    9. ' range' → logprob: -15.750123977661133
    10. '(
' → logprob: -16.000123977661133

Token 123: '(' (ID: 7)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.035528622567653656
    2. '(' → logprob: -3.5355286598205566
    3. '(dp' → logprob: -5.285528659820557
    4. 'pow' → logprob: -7.785528659820557
    5. '(len' → logprob: -8.660528182983398
    6. '((' → logprob: -9.785528182983398
    7. '(power' → logprob: -10.785528182983398
    8. 'dp' → logprob: -11.910528182983398
    9. ' pow' → logprob: -12.035528182983398
    10. ')' → logprob: -12.410528182983398

Token 124: '1' (ID: 16)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.025537241250276566
    2. 'dp' → logprob: -3.9005372524261475
    3. '(pow' → logprob: -6.150537014007568
    4. 'N' → logprob: -6.900537014007568
    5. '1' → logprob: -7.650537014007568
    6. '2' → logprob: -7.900537014007568
    7. '(' → logprob: -8.650537490844727
    8. ' pow' → logprob: -8.650537490844727
    9. '0' → logprob: -8.775537490844727
    10. '(dp' → logprob: -8.900537490844727

Token 125: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.2024877816438675
    2. ' <<' → logprob: -1.827487826347351
    3. ',' → logprob: -3.8274877071380615
    4. '<<(' → logprob: -7.577487945556641
    5. ' ,' → logprob: -9.70248794555664
    6. '   ' → logprob: -10.07748794555664
    7. '0' → logprob: -10.95248794555664
    8. '(' → logprob: -10.95248794555664
    9. ' ' → logprob: -11.07748794555664
    10. '>>' → logprob: -12.32748794555664

Token 126: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00011331788846291602
    2. 'M' → logprob: -9.625113487243652
    3. ' N' → logprob: -10.125113487243652
    4. '(N' → logprob: -13.000113487243652
    5. '   ' → logprob: -13.500113487243652
    6. 'n' → logprob: -14.750113487243652
    7. '```' → logprob: -14.750113487243652
    8. ' ' → logprob: -14.875113487243652
    9. '	N' → logprob: -14.875113487243652
    10. ',' → logprob: -15.000113487243652

Token 127: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04318176582455635
    2. ',' → logprob: -3.1681816577911377
    3. ' ),' → logprob: -9.293181419372559
    4. ' ,' → logprob: -10.168181419372559
    5. ',),' → logprob: -10.543181419372559
    6. '),(' → logprob: -11.293181419372559
    7. ')' → logprob: -13.293181419372559
    8. ',n' → logprob: -13.418181419372559
    9. ',M' → logprob: -13.793181419372559
    10. '},' → logprob: -13.918181419372559

Token 128: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.150264173746109
    2. ' range' → logprob: -2.650264263153076
    3. 'keys' → logprob: -2.775264263153076
    4. ' keys' → logprob: -5.150264263153076
    5. '[' → logprob: -8.025263786315918
    6. 'repeat' → logprob: -8.900263786315918
    7. '[M' → logprob: -9.775263786315918
    8. 'M' → logprob: -10.275263786315918
    9. ' [' → logprob: -10.275263786315918
    10. 'dp' → logprob: -10.275263786315918

Token 129: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -2.9040898880339228e-05
    2. '(len' → logprob: -11.125028610229492
    3. '(' → logprob: -11.750028610229492
    4. 'M' → logprob: -12.375028610229492
    5. '(N' → logprob: -13.500028610229492
    6. '   ' → logprob: -14.875028610229492
    7. '(m' → logprob: -15.875028610229492
    8. 'len' → logprob: -16.625028610229492
    9. '	M' → logprob: -17.000028610229492
    10. '(pow' → logprob: -17.750028610229492

Token 130: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.6001640558242798
    2. ')):' → logprob: -0.8501640558242798
    3. '):
' → logprob: -4.97516393661499
    4. '+' → logprob: -5.10016393661499
    5. '):' → logprob: -5.10016393661499
    6. '))' → logprob: -5.85016393661499
    7. ')):
' → logprob: -6.97516393661499
    8. ')' → logprob: -7.35016393661499
    9. '),' → logprob: -9.100164413452148
    10. '   ' → logprob: -10.225164413452148

Token 131: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019600028172135353
    2. ':
' → logprob: -4.519599914550781
    3. '<|end|>' → logprob: -5.644599914550781
    4. ',' → logprob: -6.019599914550781
    5. ' :' → logprob: -7.394599914550781
    6. '   ' → logprob: -7.894599914550781
    7. '<|end|>' → logprob: -7.894599914550781
    8. '):' → logprob: -8.144599914550781
    9. ' if' → logprob: -8.519599914550781
    10. '[' → logprob: -8.894599914550781

Token 132: ' mask' (ID: 10910)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9695785641670227
    2. '   ' → logprob: -1.469578504562378
    3. 'ns' → logprob: -1.844578504562378
    4. 'next' → logprob: -2.344578504562378
    5. 'new' → logprob: -3.344578504562378
    6. ' if' → logprob: -3.719578504562378
    7. 't' → logprob: -3.844578504562378
    8. 'dp' → logprob: -4.469578742980957
    9. 's' → logprob: -4.594578742980957
    10. ' next' → logprob: -4.719578742980957

Token 133: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6783674359321594
    2. ' =' → logprob: -0.8033674359321594
    3. ']' → logprob: -3.5533673763275146
    4. '|' → logprob: -4.303367614746094
    5. 's' → logprob: -7.553367614746094
    6. ']=' → logprob: -7.928367614746094
    7. ' |' → logprob: -7.928367614746094
    8. ' ' → logprob: -8.428367614746094
    9. 'new' → logprob: -8.553367614746094
    10. ',' → logprob: -8.678367614746094

Token 134: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.08763674646615982
    2. 'keys' → logprob: -3.212636709213257
    3. ' cost' → logprob: -3.712636709213257
    4. 'price' → logprob: -4.837636947631836
    5. 'a' → logprob: -5.587636947631836
    6. ' keys' → logprob: -5.837636947631836
    7. 'dp' → logprob: -6.337636947631836
    8. 'key' → logprob: -6.712636947631836
    9. 'i' → logprob: -7.837636947631836
    10. 'value' → logprob: -8.212636947631836

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788901224732399
    2. ' =' → logprob: -2.578890085220337
    3. '   ' → logprob: -16.703889846801758
    4. ' ' → logprob: -16.703889846801758
    5. ',' → logprob: -16.828889846801758
    6. ')=' → logprob: -18.203889846801758
    7. '=
' → logprob: -18.328889846801758
    8. '    ' → logprob: -18.328889846801758
    9. '  ' → logprob: -18.453889846801758
    10. '=s' → logprob: -18.453889846801758

Token 136: ' keys' (ID: 12994)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.08895734697580338
    2. ' keys' → logprob: -2.4639573097229004
    3. '   ' → logprob: -11.588957786560059
    4. '	keys' → logprob: -12.713957786560059
    5. '(keys' → logprob: -12.963957786560059
    6. ' ' → logprob: -13.588957786560059
    7. '.keys' → logprob: -13.713957786560059
    8. 's' → logprob: -16.088956832885742
    9. '_keys' → logprob: -16.213956832885742
    10. '  ' → logprob: -16.338956832885742

Token 137: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004375830467324704
    2. '[s' → logprob: -8.62543773651123
    3. '[' → logprob: -8.87543773651123
    4. 'i' → logprob: -10.37543773651123
    5. 's' → logprob: -10.37543773651123
    6. '   ' → logprob: -11.12543773651123
    7. '
' → logprob: -11.37543773651123
    8. ' i' → logprob: -11.50043773651123
    9. ' [' → logprob: -12.12543773651123
    10. ',i' → logprob: -12.75043773651123

Token 138: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.12429976463317871
    2. ']' → logprob: -2.4992997646331787
    3. ')
' → logprob: -3.4992997646331787
    4. ')' → logprob: -5.499300003051758
    5. ']
' → logprob: -8.374300003051758
    6. '   ' → logprob: -9.249300003051758
    7. '
' → logprob: -10.374300003051758
    8. ']

' → logprob: -11.249300003051758
    9. '[' → logprob: -11.249300003051758
    10. ')
' → logprob: -11.874300003051758

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6770799160003662
    2. ':' → logprob: -1.6770799160003662
    3. '<|end|>' → logprob: -2.177079916000366
    4. '
' → logprob: -2.677079916000366
    5. ':
' → logprob: -2.927079916000366
    6. ' if' → logprob: -4.302080154418945
    7. ',' → logprob: -4.302080154418945
    8. ' 
' → logprob: -4.552080154418945
    9. '    
' → logprob: -4.677080154418945
    10. '  
' → logprob: -5.427080154418945

Token 140: ' dp' (ID: 21546)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5224077701568604
    2. ' if' → logprob: -1.8974077701568604
    3. 'new' → logprob: -2.5224077701568604
    4. 'if' → logprob: -2.5224077701568604
    5. ' next' → logprob: -3.6474077701568604
    6. 'dp' (adapté à ' dp') → logprob: -4.397407531738281
    7. ' dp' → logprob: -4.522407531738281
    8. 'next' → logprob: -4.522407531738281
    9. ' ns' → logprob: -4.647407531738281
    10. 'ns' → logprob: -4.897407531738281

Token 141: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.170810267329216
    2. '[min' → logprob: -1.9208102226257324
    3. '[' → logprob: -4.795810222625732
    4. 'min' → logprob: -6.920810222625732
    5. '[
' → logprob: -7.545810222625732
    6. '[max' → logprob: -8.29581069946289
    7. '[next' → logprob: -8.79581069946289
    8. '[new' → logprob: -9.42081069946289
    9. 's' → logprob: -9.67081069946289
    10. '[(' → logprob: -10.42081069946289

Token 142: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.3339962363243103
    2. '|' → logprob: -1.333996295928955
    3. ']' → logprob: -3.958996295928955
    4. ' |=' → logprob: -7.833996295928955
    5. '   ' → logprob: -8.708995819091797
    6. 's' → logprob: -8.958995819091797
    7. '|min' → logprob: -8.958995819091797
    8. '[' → logprob: -9.583995819091797
    9. '(s' → logprob: -9.708995819091797
    10. ' ]' → logprob: -9.708995819091797

Token 143: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0003825293097179383
    2. ' mask' → logprob: -7.875382423400879
    3. '(mask' → logprob: -13.500382423400879
    4. '	mask' → logprob: -14.125382423400879
    5. '_mask' → logprob: -15.625382423400879
    6. 'm' → logprob: -16.000383377075195
    7. ' ' → logprob: -18.250383377075195
    8. 'emask' → logprob: -19.125383377075195
    9. '-mask' → logprob: -19.250383377075195
    10. '   ' → logprob: -19.375383377075195

Token 144: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015085970517247915
    2. ']=' → logprob: -8.875150680541992
    3. '=' → logprob: -12.000150680541992
    4. ' =' → logprob: -12.875150680541992
    5. ' ]' → logprob: -13.875150680541992
    6. 'min' → logprob: -15.000150680541992
    7. ')' → logprob: -15.250150680541992
    8. '],' → logprob: -15.500150680541992
    9. '=min' → logprob: -16.250150680541992
    10. '[' → logprob: -16.500150680541992

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16028118133544922
    2. ' =' → logprob: -1.9102811813354492
    3. '=min' → logprob: -9.78528118133545
    4. 'min' → logprob: -14.41028118133545
    5. '   ' → logprob: -16.660282135009766
    6. '=
' → logprob: -16.910282135009766
    7. ']=' → logprob: -17.285282135009766
    8. '```' → logprob: -17.410282135009766
    9. '.=' → logprob: -17.660282135009766
    10. '＝' → logprob: -17.785282135009766

Token 146: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0009118211455643177
    2. ' min' → logprob: -7.000911712646484
    3. '	min' → logprob: -15.125911712646484
    4. '   ' → logprob: -16.250911712646484
    5. ' ' → logprob: -20.625911712646484
    6. ' ' → logprob: -21.000911712646484
    7. '(min' → logprob: -21.000911712646484
    8. '  ' → logprob: -21.125911712646484
    9. '
' → logprob: -21.250911712646484
    10. 'mini' → logprob: -21.375911712646484

Token 147: '((' (ID: 2054)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0007278018747456372
    2. '(' → logprob: -7.250727653503418
    3. 'dp' → logprob: -11.125727653503418
    4. ' (' → logprob: -13.125727653503418
    5. '(
' → logprob: -14.375727653503418
    6. ' dp' → logprob: -15.500727653503418
    7. '	dp' → logprob: -16.625728607177734
    8. '(d' → logprob: -17.000728607177734
    9. '(df' → logprob: -17.625728607177734
    10. '   ' → logprob: -18.250728607177734

Token 148: 'lambda' (ID: 35280)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011588018387556076
    2. ' dp' → logprob: -4.511588096618652
    3. '   ' → logprob: -7.886588096618652
    4. ')' → logprob: -9.886588096618652
    5. '	dp' → logprob: -10.386588096618652
    6. '(dp' → logprob: -10.886588096618652
    7. '       ' → logprob: -11.136588096618652
    8. '  ' → logprob: -11.761588096618652
    9. '    ' → logprob: -11.886588096618652
    10. ' ' → logprob: -12.011588096618652

Token 149: ' x' (ID: 1215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13245369493961334
    2. ' dp' → logprob: -2.257453680038452
    3. 'x' → logprob: -4.507453918457031
    4. ' x' → logprob: -5.382453918457031
    5. 'a' → logprob: -6.757453918457031
    6. 'lambda' → logprob: -7.757453918457031
    7. 'cost' → logprob: -7.882453918457031
    8. 'old' → logprob: -8.257453918457031
    9. ' a' → logprob: -8.257453918457031
    10. 'd' → logprob: -8.382453918457031

Token 150: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5468081831932068
    2. ':' → logprob: -1.5468082427978516
    3. ',' → logprob: -2.1718082427978516
    4. ' x' → logprob: -2.6718082427978516
    5. 'dp' → logprob: -4.046808242797852
    6. ' :' → logprob: -5.796808242797852
    7. ',x' → logprob: -6.671808242797852
    8. ' dp' → logprob: -6.796808242797852
    9. ':x' → logprob: -7.296808242797852
    10. '(x' → logprob: -8.296808242797852

Token 151: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.013056815601885319
    2. ' y' → logprob: -4.388056755065918
    3. 'dp' → logprob: -8.263056755065918
    4. 'x' → logprob: -9.263056755065918
    5. 'lambda' → logprob: -9.888056755065918
    6. '   ' → logprob: -10.013056755065918
    7. 's' → logprob: -10.263056755065918
    8. '    ' → logprob: -11.513056755065918
    9. 'a' → logprob: -11.638056755065918
    10. '  ' → logprob: -12.138056755065918

Token 152: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.544564962387085
    2. ',' → logprob: -1.419564962387085
    3. 'x' → logprob: -1.794564962387085
    4. ' :' → logprob: -5.919565200805664
    5. ':x' → logprob: -6.169565200805664
    6. ' x' → logprob: -6.419565200805664
    7. ',x' → logprob: -6.419565200805664
    8. '=' → logprob: -6.544565200805664
    9. '(x' → logprob: -7.044565200805664
    10. '=x' → logprob: -7.419565200805664

Token 153: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004131830297410488
    2. ' x' → logprob: -5.50413179397583
    3. 'dp' → logprob: -10.754132270812988
    4. '   ' → logprob: -11.504132270812988
    5. 'y' → logprob: -11.754132270812988
    6. '(x' → logprob: -12.254132270812988
    7. '  ' → logprob: -13.504132270812988
    8. '[x' → logprob: -13.629132270812988
    9. ' ' → logprob: -13.754132270812988
    10. '    ' → logprob: -13.879132270812988

Token 154: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012837937101721764
    2. ',y' → logprob: -4.512837886810303
    3. ' ,' → logprob: -6.887837886810303
    4. '(x' → logprob: -8.012838363647461
    5. ',x' → logprob: -8.762838363647461
    6. 'y' → logprob: -9.387838363647461
    7. 'x' → logprob: -9.887838363647461
    8. ' if' → logprob: -9.887838363647461
    9. '(y' → logprob: -10.637838363647461
    10. ' y' → logprob: -11.137838363647461

Token 155: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016763068735599518
    2. ' x' → logprob: -4.516763210296631
    3. 'y' → logprob: -5.266763210296631
    4. ' y' → logprob: -7.766763210296631
    5. '(x' → logprob: -9.891762733459473
    6. 'dp' → logprob: -10.891762733459473
    7. '   ' → logprob: -11.766762733459473
    8. '0' → logprob: -11.891762733459473
    9. ' ' → logprob: -12.016762733459473
    10. 'not' → logprob: -12.141762733459473

Token 156: ' <' (ID: 464)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7532998919487
    2. '<' → logprob: -1.6282999515533447
    3. ' <' → logprob: -2.1282999515533447
    4. '>' → logprob: -2.6282999515533447
    5. 'is' → logprob: -3.0032999515533447
    6. ' >' → logprob: -3.5032999515533447
    7. ' y' → logprob: -3.6282999515533447
    8. 'y' → logprob: -4.003299713134766
    9. ',' → logprob: -5.378299713134766
    10. ',y' → logprob: -6.253299713134766

Token 157: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026309702545404434
    2. ' y' → logprob: -3.6513097286224365
    3. 'x' → logprob: -12.901309967041016
    4. '   ' → logprob: -13.526309967041016
    5. ' ' → logprob: -13.651309967041016
    6. '    ' → logprob: -14.026309967041016
    7. '  ' → logprob: -14.401309967041016
    8. '           ' → logprob: -14.526309967041016
    9. '(y' → logprob: -14.526309967041016
    10. '	y' → logprob: -15.026309967041016

Token 158: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04422836750745773
    2. ',' → logprob: -3.4192283153533936
    3. 'else' → logprob: -5.044228553771973
    4. ' y' → logprob: -6.294228553771973
    5. 'y' → logprob: -7.544228553771973
    6. ' ' → logprob: -7.919228553771973
    7. ' ,' → logprob: -8.169228553771973
    8. ',y' → logprob: -8.169228553771973
    9. '    ' → logprob: -8.294228553771973
    10. '   ' → logprob: -8.919228553771973

Token 159: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10022791475057602
    2. ' y' → logprob: -2.3502278327941895
    3. '    ' → logprob: -11.975228309631348
    4. '   ' → logprob: -12.600228309631348
    5. ' ' → logprob: -12.850228309631348
    6. 'x' → logprob: -13.225228309631348
    7. '           ' → logprob: -13.850228309631348
    8. '  ' → logprob: -13.975228309631348
    9. '            ' → logprob: -14.725228309631348
    10. '       ' → logprob: -14.850228309631348

Token 160: ')(' (ID: 4898)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6481597423553467
    2. ')(' → logprob: -0.7731597423553467
    3. '(dp' → logprob: -4.273159980773926
    4. '),' → logprob: -7.898159980773926
    5. ')' → logprob: -8.023159980773926
    6. 'dp' → logprob: -8.523159980773926
    7. ' ,' → logprob: -8.648159980773926
    8. '))(' → logprob: -9.148159980773926
    9. ' )(' → logprob: -9.398159980773926
    10. '   ' → logprob: -9.648159980773926

Token 161: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0015365236904472113
    2. ' dp' → logprob: -6.5015363693237305
    3. '   ' → logprob: -11.37653636932373
    4. '           ' → logprob: -11.50153636932373
    5. '       ' → logprob: -11.87653636932373
    6. '               ' → logprob: -13.37653636932373
    7. '	dp' → logprob: -13.75153636932373
    8. ' ' → logprob: -14.50153636932373
    9. '(dp' → logprob: -14.62653636932373
    10. '                   ' → logprob: -14.75153636932373

Token 162: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00019305046589579433
    2. 's' → logprob: -8.875192642211914
    3. '[' → logprob: -10.500192642211914
    4. ' [' → logprob: -11.875192642211914
    5. '   ' → logprob: -12.375192642211914
    6. ' s' → logprob: -13.125192642211914
    7. '           ' → logprob: -13.625192642211914
    8. '

' → logprob: -13.625192642211914
    9. ')' → logprob: -13.625192642211914
    10. ' ' → logprob: -13.875192642211914

Token 163: ' |' (ID: 1022)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.1539746522903442
    2. '],' → logprob: -1.4039746522903442
    3. '[' → logprob: -1.5289746522903442
    4. ',' → logprob: -2.1539745330810547
    5. '+' → logprob: -3.6539745330810547
    6. '   ' → logprob: -3.9039745330810547
    7. '|' → logprob: -4.028974533081055
    8. 's' → logprob: -4.403974533081055
    9. '[i' → logprob: -4.903974533081055
    10. 'mask' → logprob: -5.403974533081055

Token 164: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.001588654238730669
    2. ' mask' → logprob: -7.001588821411133
    3. 's' → logprob: -8.001588821411133
    4. '(mask' → logprob: -8.626588821411133
    5. '   ' → logprob: -9.501588821411133
    6. 'm' → logprob: -10.626588821411133
    7. '	mask' → logprob: -11.251588821411133
    8. ' ' → logprob: -11.376588821411133
    9. '(s' → logprob: -12.126588821411133
    10. ' s' → logprob: -12.564088821411133

Token 165: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.004745298996567726
    2. ',' → logprob: -5.3797454833984375
    3. ']' → logprob: -10.129745483398438
    4. ' ],' → logprob: -10.379745483398438
    5. '   ' → logprob: -10.879745483398438
    6. '),' → logprob: -11.004745483398438
    7. ' ,' → logprob: -12.379745483398438
    8. 's' → logprob: -12.754745483398438
    9. '],
' → logprob: -12.879745483398438
    10. '       ' → logprob: -13.129745483398438

Token 166: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01019563339650631
    2. ' dp' → logprob: -4.635195732116699
    3. '   ' → logprob: -8.5101957321167
    4. '           ' → logprob: -10.0101957321167
    5. '               ' → logprob: -10.7601957321167
    6. '       ' → logprob: -10.8851957321167
    7. '    ' → logprob: -10.8851957321167
    8. '  ' → logprob: -11.1351957321167
    9. '(dp' → logprob: -11.1351957321167
    10. ' ' → logprob: -11.2601957321167

Token 167: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.004105708096176386
    2. 's' → logprob: -5.504105567932129
    3. '[' → logprob: -11.129105567932129
    4. ' s' → logprob: -11.629105567932129
    5. '(s' → logprob: -13.004105567932129
    6. '	s' → logprob: -15.129105567932129
    7. '   ' → logprob: -15.504105567932129
    8. '{s' → logprob: -15.629105567932129
    9. '`s' → logprob: -16.129106521606445
    10. ' ' → logprob: -16.254106521606445

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12273140251636505
    2. ']+' → logprob: -2.2477314472198486
    3. 's' → logprob: -5.8727312088012695
    4. '[s' → logprob: -5.9977312088012695
    5. '|' → logprob: -6.2477312088012695
    6. '[' → logprob: -6.3727312088012695
    7. '])' → logprob: -7.4977312088012695
    8. '][' → logprob: -9.12273120880127
    9. '[i' → logprob: -9.99773120880127
    10. ' |' → logprob: -10.49773120880127

Token 169: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28414833545684814
    2. ' +' → logprob: -1.4091483354568481
    3. ']+' → logprob: -6.534148216247559
    4. ']' → logprob: -7.409148216247559
    5. ')+' → logprob: -7.659148216247559
    6. ')' → logprob: -8.659148216247559
    7. '[s' → logprob: -9.034148216247559
    8. '[' → logprob: -10.034148216247559
    9. '+s' → logprob: -10.659148216247559
    10. ' ' → logprob: -10.909148216247559

Token 170: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.054890185594558716
    2. ' cost' → logprob: -2.9298901557922363
    3. '(cost' → logprob: -12.554890632629395
    4. ' ' → logprob: -13.679890632629395
    5. '   ' → logprob: -13.929890632629395
    6. 'key' → logprob: -14.179890632629395
    7. 'keys' → logprob: -14.429890632629395
    8. '  ' → logprob: -15.554890632629395
    9. 'c' → logprob: -16.054889678955078
    10. '    ' → logprob: -16.304889678955078

Token 171: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12753544747829437
    2. '))' → logprob: -2.127535343170166
    3. ')
' → logprob: -7.627535343170166
    4. '))
' → logprob: -9.377535820007324
    5. ')))' → logprob: -10.627535820007324
    6. ' )' → logprob: -12.252535820007324
    7. ')

' → logprob: -13.127535820007324
    8. '   ' → logprob: -13.252535820007324
    9. ' ))' → logprob: -14.377535820007324
    10. '))

' → logprob: -14.752535820007324

Token 172: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11372877657413483
    2. ')' → logprob: -2.7387287616729736
    3. ' dp' → logprob: -3.2387287616729736
    4. ')
' → logprob: -7.113729000091553
    5. ' )' → logprob: -7.363729000091553
    6. '0' → logprob: -7.738729000091553
    7. '))' → logprob: -7.738729000091553
    8. 'key' → logprob: -8.238728523254395
    9. 'True' → logprob: -8.863728523254395
    10. ' key' → logprob: -9.113728523254395

Token 173: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0031736718956381083
    2. ')' → logprob: -6.253173828125
    3. 's' → logprob: -7.503173828125
    4. '[' → logprob: -7.503173828125
    5. '])' → logprob: -10.003173828125
    6. ']' → logprob: -10.003173828125
    7. '(s' → logprob: -12.128173828125
    8. ')s' → logprob: -12.378173828125
    9. '   ' → logprob: -12.753173828125
    10. '))' → logprob: -12.753173828125

Token 174: ' |' (ID: 1022)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.03470868244767189
    2. '])' → logprob: -3.6597087383270264
    3. ']' → logprob: -4.909708499908447
    4. '|' → logprob: -7.659708499908447
    5. ' |' → logprob: -8.534708976745605
    6. 's' → logprob: -8.784708976745605
    7. '[' → logprob: -9.409708976745605
    8. ' ])' → logprob: -10.534708976745605
    9. '   ' → logprob: -10.784708976745605
    10. ' ' → logprob: -11.284708976745605

Token 175: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.014036566019058228
    2. 's' → logprob: -4.514036655426025
    3. ' mask' → logprob: -6.014036655426025
    4. '0' → logprob: -8.264036178588867
    5. '(mask' → logprob: -9.264036178588867
    6. ' ' → logprob: -9.764036178588867
    7. '[s' → logprob: -10.014036178588867
    8. '(s' → logprob: -10.764036178588867
    9. ' s' → logprob: -11.014036178588867
    10. '[' → logprob: -11.389036178588867

Token 176: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.252122163772583
    2. '))' → logprob: -1.502122163772583
    3. '])' → logprob: -9.377121925354004
    4. ')))' → logprob: -10.002121925354004
    5. ' )' → logprob: -10.377121925354004
    6. ')
' → logprob: -11.877121925354004
    7. '})' → logprob: -12.127121925354004
    8. ' ))' → logprob: -12.627121925354004
    9. '[' → logprob: -12.752121925354004
    10. '))
' → logprob: -12.752121925354004

Token 177: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '(next' (ID: 28757)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.004073059186339378
    2. '(' → logprob: -6.879073143005371
    3. '(sum' → logprob: -6.879073143005371
    4. '()' → logprob: -7.254073143005371
    5. 'dp' → logprob: -7.379073143005371
    6. '((' → logprob: -7.754073143005371
    7. '(min' → logprob: -9.754073143005371
    8. ' (' → logprob: -10.379073143005371
    9. '(len' → logprob: -10.504073143005371
    10. '(pow' → logprob: -10.754073143005371

Token 179: '(filter' (ID: 36366)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.43937304615974426
    2. '((' → logprob: -2.064373016357422
    3. '(iter' → logprob: -2.314373016357422
    4. '(x' → logprob: -2.564373016357422
    5. '(k' → logprob: -3.939373016357422
    6. '(s' → logprob: -3.939373016357422
    7. '(filter' → logprob: -5.064373016357422
    8. '(token' → logprob: -6.439373016357422
    9. '(' → logprob: -6.939373016357422
    10. '(n' → logprob: -6.939373016357422

Token 180: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0036288120318204165
    2. 'lambda' → logprob: -6.378628730773926
    3. '(None' → logprob: -6.753628730773926
    4. '(bool' → logprob: -7.628628730773926
    5. 'bool' → logprob: -8.503628730773926
    6. 'None' → logprob: -10.128628730773926
    7. '(' → logprob: -11.003628730773926
    8. ')' → logprob: -12.878628730773926
    9. '(len' → logprob: -12.878628730773926
    10. '```' → logprob: -13.128628730773926

Token 181: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.22067579627037048
    2. 'None' → logprob: -1.7206758260726929
    3. 'x' → logprob: -4.095675945281982
    4. '(lambda' → logprob: -6.720675945281982
    5. ' lambda' → logprob: -7.220675945281982
    6. ' None' → logprob: -8.345675468444824
    7. ' x' → logprob: -9.220675468444824
    8. 'bool' → logprob: -9.595675468444824
    9. '(None' → logprob: -10.220675468444824
    10. 'dp' → logprob: -10.345675468444824

Token 182: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05852295085787773
    2. ' x' → logprob: -3.933522939682007
    3. 'x' → logprob: -4.058523178100586
    4. 'lambda' → logprob: -4.183523178100586
    5. ' :' → logprob: -6.308523178100586
    6. 'None' → logprob: -6.558523178100586
    7. '=lambda' → logprob: -7.308523178100586
    8. ' lambda' → logprob: -7.558523178100586
    9. ':x' → logprob: -8.808523178100586
    10. '0' → logprob: -9.683523178100586

Token 183: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003895084373652935
    2. 'lambda' → logprob: -5.753895282745361
    3. ' x' → logprob: -7.253895282745361
    4. 'is' → logprob: -13.128894805908203
    5. ' lambda' → logprob: -13.128894805908203
    6. '   ' → logprob: -13.628894805908203
    7. 'inf' → logprob: -14.128894805908203
    8. '(lambda' → logprob: -14.503894805908203
    9. 'math' → logprob: -14.628894805908203
    10. '(x' → logprob: -14.628894805908203

Token 184: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.156809464097023
    2. '!=' → logprob: -2.6568095684051514
    3. ' !=' → logprob: -3.6568095684051514
    4. ' >' → logprob: -4.031809329986572
    5. ' is' → logprob: -4.406809329986572
    6. '<' → logprob: -4.781809329986572
    7. 'is' → logprob: -5.531809329986572
    8. ':' → logprob: -6.156809329986572
    9. ' <' → logprob: -6.406809329986572
    10. '==' → logprob: -6.781809329986572

Token 185: ' INF' (ID: 69196)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6693480610847473
    2. 'inf' → logprob: -1.0443480014801025
    3. 'INF' → logprob: -2.0443480014801025
    4. ' float' → logprob: -5.294348239898682
    5. ' inf' → logprob: -7.169348239898682
    6. ' INF' → logprob: -7.544348239898682
    7. '0' → logprob: -9.669347763061523
    8. 'math' → logprob: -10.044347763061523
    9. 'Inf' → logprob: -10.919347763061523
    10. ' ' → logprob: -11.169347763061523

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.310693111619912e-05
    2. ' ,' → logprob: -11.125042915344238
    3. 'dp' → logprob: -11.125042915344238
    4. '(dp' → logprob: -11.500042915344238
    5. '),' → logprob: -14.500042915344238
    6. ',p' → logprob: -14.750042915344238
    7. ',
' → logprob: -14.750042915344238
    8. ',d' → logprob: -15.250042915344238
    9. ' dp' → logprob: -15.500042915344238
    10. '   ' → logprob: -15.500042915344238

Token 187: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005777104292064905
    2. 're' → logprob: -5.880776882171631
    3. ' dp' → logprob: -5.880776882171631
    4. ' reversed' → logprob: -9.005777359008789
    5. '(dp' → logprob: -10.505777359008789
    6. '(re' → logprob: -11.630777359008789
    7. '   ' → logprob: -12.130777359008789
    8. '[' → logprob: -12.630777359008789
    9. ' ' → logprob: -13.630777359008789
    10. '[::-' → logprob: -13.755777359008789

Token 188: '[-' (ID: 17503)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.137687087059021
    2. '[' → logprob: -2.8876872062683105
    3. '[-' → logprob: -2.8876872062683105
    4. ')))' → logprob: -4.7626872062683105
    5. ',' → logprob: -5.2626872062683105
    6. '[::-' → logprob: -7.0126872062683105
    7. '),' → logprob: -7.5126872062683105
    8. ')' → logprob: -7.7626872062683105
    9. '[len' → logprob: -8.262686729431152
    10. '[:' → logprob: -8.637686729431152

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010384062770754099
    2. ':' → logprob: -7.001038551330566
    3. '::-' → logprob: -9.751038551330566
    4. ' ' → logprob: -10.626038551330566
    5. '-' → logprob: -11.376038551330566
    6. ':-' → logprob: -11.876038551330566
    7. '])' → logprob: -12.001038551330566
    8. ':]' → logprob: -12.376038551330566
    9. ' :' → logprob: -13.376038551330566
    10. '2' → logprob: -13.501038551330566

Token 190: ':' (ID: 25)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.48069992661476135
    2. ':' → logprob: -2.3557000160217285
    3. ']+' → logprob: -2.9807000160217285
    4. '],' → logprob: -3.1057000160217285
    5. ')))' → logprob: -3.1057000160217285
    6. ']' → logprob: -3.3557000160217285
    7. '),' → logprob: -3.4807000160217285
    8. '])))' → logprob: -3.7307000160217285
    9. '))' → logprob: -4.3557000160217285
    10. ':]' → logprob: -4.6057000160217285

Token 191: ']),' (ID: 19560)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.02107802964746952
    2. '),' → logprob: -4.146078109741211
    3. '))' → logprob: -5.521078109741211
    4. ',' → logprob: -8.271078109741211
    5. '[' → logprob: -8.271078109741211
    6. ')' → logprob: -8.771078109741211
    7. ' ' → logprob: -9.146078109741211
    8. '))))' → logprob: -9.396078109741211
    9. ')))
' → logprob: -9.771078109741211
    10. ')[' → logprob: -10.771078109741211

Token 192: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2660123407840729
    2. 'dp' → logprob: -2.14101243019104
    3. '-' → logprob: -2.39101243019104
    4. 'None' → logprob: -4.141012191772461
    5. 'INF' → logprob: -5.516012191772461
    6. ' ' → logprob: -6.766012191772461
    7. '-inf' → logprob: -7.141012191772461
    8. 'float' → logprob: -7.766012191772461
    9. ' -' → logprob: -8.016012191772461
    10. ' dp' → logprob: -8.141012191772461

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '2' → logprob: -16.000001907348633
    4. '
' → logprob: -16.750001907348633
    5. '-' → logprob: -17.187501907348633
    6. '１' → logprob: -17.312501907348633
    7. '   ' → logprob: -17.500001907348633
    8. 'INF' → logprob: -17.625001907348633
    9. 'print' → logprob: -17.812501907348633
    10. '```' → logprob: -18.062501907348633

Token 194: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009824086911976337
    2. ')' → logprob: -4.634824275970459
    3. ')))' → logprob: -9.7598237991333
    4. '))
' → logprob: -11.8848237991333
    5. ')
' → logprob: -13.8848237991333
    6. '),' → logprob: -14.7598237991333
    7. '()))' → logprob: -14.7598237991333
    8. '0' → logprob: -14.8848237991333
    9. ' ))' → logprob: -14.8848237991333
    10. ').' → logprob: -16.134824752807617


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 192
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 155
Précision stricte (1ère position): 38.54%
Précision adaptée (1ère position): 38.54%
Précision (top 10): 80.73%
================================================================================
