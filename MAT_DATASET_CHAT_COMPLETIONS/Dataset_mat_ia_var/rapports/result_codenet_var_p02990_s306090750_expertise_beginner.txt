================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k = input().split()
n = int(n)
k = int(k)
a = n - k + 1
for i in range(1, k + 1):
    if i > n - k + 1:
        print(0)
    else:
        print(a % 1000000007)
        a = a * (k - i) * (n - k + 1 - i)
        a = a // (i * (i + 1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025784850120544434
    2. ' =' → logprob: -3.775784969329834
    3. ',' → logprob: -6.025784969329834
    4. ' ' → logprob: -10.775784492492676
    5. '=
' → logprob: -10.775784492492676
    6. ')' → logprob: -11.150784492492676
    7. ''' → logprob: -11.525784492492676
    8. '=

' → logprob: -11.900784492492676
    9. '```' → logprob: -11.900784492492676
    10. ';' → logprob: -12.025784492492676

Token 4: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2964531481266022
    2. ' ' → logprob: -1.7964531183242798
    3. 'map' → logprob: -2.6714532375335693
    4. ' input' → logprob: -4.67145299911499
    5. '0' → logprob: -4.92145299911499
    6. 'input' → logprob: -5.79645299911499
    7. ' n' → logprob: -7.29645299911499
    8. ' int' → logprob: -7.54645299911499
    9. '10' → logprob: -8.421453475952148
    10. 'int' → logprob: -9.296453475952148

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01880740001797676
    2. '.' → logprob: -4.268807411193848
    3. '()' → logprob: -6.518807411193848
    4. '[' → logprob: -6.768807411193848
    5. ''' → logprob: -7.643807411193848
    6. '('.')' → logprob: -8.018807411193848
    7. ',' → logprob: -8.268807411193848
    8. '('' → logprob: -8.643807411193848
    9. '(
' → logprob: -8.643807411193848
    10. '(.)' → logprob: -8.768807411193848

Token 6: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005656610010191798
    2. 'strip' → logprob: -7.500565528869629
    3. ' split' → logprob: -11.750565528869629
    4. 'rstrip' → logprob: -12.625565528869629
    5. 'spl' → logprob: -14.625565528869629
    6. '```' → logprob: -14.625565528869629
    7. 'replace' → logprob: -15.125565528869629
    8. 'rs' → logprob: -16.500566482543945
    9. '(split' → logprob: -17.000566482543945
    10. '.split' → logprob: -17.125566482543945

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005078398622572422
    2. '()' → logprob: -5.880078315734863
    3. '(
' → logprob: -6.755078315734863
    4. '('' → logprob: -7.755078315734863
    5. '(

' → logprob: -8.255078315734863
    6. '`' → logprob: -8.755078315734863
    7. '```' → logprob: -9.755078315734863
    8. '("("' → logprob: -10.130078315734863
    9. '"' → logprob: -10.255078315734863
    10. ''' → logprob: -10.505078315734863

Token 8: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14854863286018372
    2. '=' → logprob: -2.7735486030578613
    3. ' =' → logprob: -3.5235486030578613
    4. '\n' → logprob: -4.148548603057861
    5. '=n' → logprob: -5.398548603057861
    6. '(n' → logprob: -5.523548603057861
    7. '```' → logprob: -5.523548603057861
    8. ' n' → logprob: -5.523548603057861
    9. '[n' → logprob: -6.148548603057861
    10. ')' → logprob: -6.398548603057861

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3508400022983551
    2. '.' → logprob: -2.4758400917053223
    3. '=' → logprob: -3.1008400917053223
    4. '+' → logprob: -3.2258400917053223
    5. '*' → logprob: -3.7258400917053223
    6. '<|end|>' → logprob: -3.9758400917053223
    7. '```' → logprob: -4.225840091705322
    8. ')' → logprob: -4.225840091705322
    9. ',' → logprob: -4.350840091705322
    10. '**' → logprob: -4.975840091705322

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5765520334243774
    2. ' int' → logprob: -0.8265520334243774
    3. ' n' → logprob: -8.201552391052246
    4. ' input' → logprob: -8.951552391052246
    5. 'input' → logprob: -9.326552391052246
    6. 'n' → logprob: -9.951552391052246
    7. ' ' → logprob: -9.951552391052246
    8. '0' → logprob: -11.701552391052246
    9. '[int' → logprob: -12.701552391052246
    10. '```' → logprob: -12.826552391052246

Token 11: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931928992271423
    2. '(n' → logprob: -0.6931928992271423
    3. '('' → logprob: -11.068192481994629
    4. '(input' → logprob: -12.068192481994629
    5. '(k' → logprob: -12.193192481994629
    6. '("("' → logprob: -12.193192481994629
    7. '()' → logprob: -13.193192481994629
    8. '(
' → logprob: -13.318192481994629
    9. '("' → logprob: -13.693192481994629
    10. 'n' → logprob: -13.818192481994629

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6776029699249193e-05
    2. ' )' → logprob: -11.75002670288086
    3. ')
' → logprob: -12.25002670288086
    4. '')' → logprob: -12.37502670288086
    5. ')n' → logprob: -12.75002670288086
    6. '+' → logprob: -13.37502670288086
    7. '*' → logprob: -13.87502670288086
    8. '),' → logprob: -13.87502670288086
    9. '))' → logprob: -14.75002670288086
    10. '`)' → logprob: -14.87502670288086

Token 13: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016051379963755608
    2. ' k' → logprob: -4.141051292419434
    3. '```' → logprob: -11.516051292419434
    4. ' 
' → logprob: -12.266051292419434
    5. '`' → logprob: -13.766051292419434
    6. ',k' → logprob: -14.766051292419434
    7. ' ' → logprob: -15.641051292419434
    8. '_k' → logprob: -15.891051292419434
    9. '	k' → logprob: -16.01605224609375
    10. '``' → logprob: -16.01605224609375

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21221061050891876
    2. '<|end|>' → logprob: -2.4622106552124023
    3. '=' → logprob: -2.7122106552124023
    4. ')' → logprob: -4.212210655212402
    5. ' ' → logprob: -4.337210655212402
    6. '+' → logprob: -6.462210655212402
    7. '.' → logprob: -6.587210655212402
    8. ' +=' → logprob: -6.587210655212402
    9. '<|end|>' → logprob: -6.712210655212402
    10. '>' → logprob: -7.087210655212402

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002476604888215661
    2. ' int' → logprob: -6.002476692199707
    3. '0' → logprob: -14.627476692199707
    4. '=int' → logprob: -16.25247573852539
    5. '(int' → logprob: -16.50247573852539
    6. ' ' → logprob: -16.50247573852539
    7. '<int' → logprob: -16.62747573852539
    8. '[int' → logprob: -16.87747573852539
    9. '1' → logprob: -17.25247573852539
    10. '	int' → logprob: -17.37747573852539

Token 16: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.056662607938051224
    2. '(k' → logprob: -2.9316625595092773
    3. '(n' → logprob: -6.431662559509277
    4. '('' → logprob: -10.181662559509277
    5. '(
' → logprob: -10.306662559509277
    6. 'k' → logprob: -10.681662559509277
    7. '("("' → logprob: -11.056662559509277
    8. ''' → logprob: -11.181662559509277
    9. ')' → logprob: -11.556662559509277
    10. '`' → logprob: -12.056662559509277

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. '')' → logprob: -13.125004768371582
    3. ' )' → logprob: -14.000004768371582
    4. ')
' → logprob: -14.500004768371582
    5. '`)' → logprob: -15.000004768371582
    6. '))' → logprob: -15.750004768371582
    7. '```' → logprob: -16.125003814697266
    8. '+' → logprob: -16.750003814697266
    9. '#' → logprob: -16.875003814697266
    10. '**' → logprob: -17.125003814697266

Token 18: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8795749545097351
    2. 'if' → logprob: -1.6295750141143799
    3. 'a' → logprob: -1.7545750141143799
    4. 'i' → logprob: -3.12957501411438
    5. 's' → logprob: -3.37957501411438
    6. 'result' → logprob: -3.87957501411438
    7. 'n' → logprob: -3.87957501411438
    8. 'd' → logprob: -4.004574775695801
    9. 'x' → logprob: -4.004574775695801
    10. 'm' → logprob: -4.629574775695801

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02387307584285736
    2. '.' → logprob: -4.2738728523254395
    3. ' =' → logprob: -5.8988728523254395
    4. '=' → logprob: -6.1488728523254395
    5. '[:]' → logprob: -6.7738728523254395
    6. '_' → logprob: -7.6488728523254395
    7. 's' → logprob: -7.8988728523254395
    8. ',' → logprob: -8.023873329162598
    9. '[int' → logprob: -8.023873329162598
    10. '[i' → logprob: -8.148873329162598

Token 20: ' n' (ID: 297)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1841581165790558
    2. 'list' → logprob: -2.8091580867767334
    3. ' []' → logprob: -2.9341580867767334
    4. '[' → logprob: -3.5591580867767334
    5. '[int' → logprob: -4.5591583251953125
    6. ' list' → logprob: -5.0591583251953125
    7. ' [' → logprob: -5.1841583251953125
    8. '[input' → logprob: -6.5591583251953125
    9. '[list' → logprob: -6.5591583251953125
    10. 'input' → logprob: -7.5591583251953125

Token 21: ' -' (ID: 533)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1160307303071022
    2. '+' → logprob: -2.991030693054199
    3. ' %' → logprob: -3.116030693054199
    4. '-' → logprob: -4.741030693054199
    5. ' ' → logprob: -6.366030693054199
    6. '>' → logprob: -6.491030693054199
    7. '_' → logprob: -6.991030693054199
    8. '*' → logprob: -8.1160306930542
    9. ' //' → logprob: -8.2410306930542
    10. ' +' → logprob: -8.2410306930542

Token 22: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004536100197583437
    2. ' k' → logprob: -5.879536151885986
    3. '1' → logprob: -6.379536151885986
    4. ' ' → logprob: -10.879535675048828
    5. '0' → logprob: -12.379535675048828
    6. '2' → logprob: -12.754535675048828
    7. '10' → logprob: -13.629535675048828
    8. '(k' → logprob: -14.004535675048828
    9. ' (' → logprob: -14.129535675048828
    10. '	k' → logprob: -14.379535675048828

Token 23: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4951684772968292
    2. '%' → logprob: -1.6201684474945068
    3. '>' → logprob: -1.9951684474945068
    4. '<|end|>' → logprob: -3.995168447494507
    5. '-' → logprob: -4.370168685913086
    6. '*' → logprob: -4.745168685913086
    7. ' ' → logprob: -5.245168685913086
    8. ')' → logprob: -5.245168685913086
    9. '#' → logprob: -7.120168685913086
    10. '
' → logprob: -7.245168685913086

Token 24: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002482315758243203
    2. ' ' → logprob: -6.0024824142456055
    3. '2' → logprob: -12.502482414245605
    4. '0' → logprob: -13.252482414245605
    5. ' k' → logprob: -15.752482414245605
    6. 'int' → logprob: -15.752482414245605
    7. '  ' → logprob: -15.877482414245605
    8. '3' → logprob: -15.877482414245605
    9. 'a' → logprob: -16.00248146057129
    10. 'k' → logprob: -16.12748146057129

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.191489642835222e-05
    2. ' ' → logprob: -10.625041961669922
    3. '2' → logprob: -11.250041961669922
    4. '0' → logprob: -13.000041961669922
    5. '3' → logprob: -14.375041961669922
    6. 'a' → logprob: -15.000041961669922
    7. '4' → logprob: -15.500041961669922
    8. 'k' → logprob: -15.625041961669922
    9. '+' → logprob: -16.437541961669922
    10. '-' → logprob: -16.437541961669922

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2584512233734131
    2. '
' → logprob: -2.008451223373413
    3. ')' → logprob: -4.133451461791992
    4. '<|end|>' → logprob: -4.258451461791992
    5. ' ' → logprob: -4.383451461791992
    6. 'if' → logprob: -4.383451461791992
    7. '*' → logprob: -4.633451461791992
    8. '#' → logprob: -5.008451461791992
    9. 'for' → logprob: -5.758451461791992
    10. 'b' → logprob: -5.883451461791992

Token 28: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20872734487056732
    2. ' i' → logprob: -1.7087273597717285
    3. '  ' → logprob: -5.3337273597717285
    4. ' _' → logprob: -6.8337273597717285
    5. 'i' → logprob: -7.3337273597717285
    6. '_' → logprob: -7.4587273597717285
    7. ' ‌' → logprob: -9.83372688293457
    8. ' )' → logprob: -10.70872688293457
    9. ' a' → logprob: -10.95872688293457
    10. ' ▁' → logprob: -11.58372688293457

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0799466073513031
    2. 'in' → logprob: -2.579946517944336
    3. ' ' → logprob: -7.079946517944336
    4. '  ' → logprob: -9.579946517944336
    5. 'range' → logprob: -10.579946517944336
    6. '	in' → logprob: -11.329946517944336
    7. ')' → logprob: -11.454946517944336
    8. '```' → logprob: -11.829946517944336
    9. '<|end|>' → logprob: -11.954946517944336
    10. ',' → logprob: -11.954946517944336

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22545087337493896
    2. 'range' → logprob: -1.600450873374939
    3. ' ' → logprob: -11.60045051574707
    4. ' a' → logprob: -11.60045051574707
    5. '	range' → logprob: -11.85045051574707
    6. 'a' → logprob: -12.10045051574707
    7. '(range' → logprob: -13.22545051574707
    8. ' ' → logprob: -13.85045051574707
    9. '  ' → logprob: -13.97545051574707
    10. 'n' → logprob: -14.22545051574707

Token 31: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10034707188606262
    2. '(a' → logprob: -2.3503470420837402
    3. ' (' → logprob: -9.475347518920898
    4. '(n' → logprob: -10.475347518920898
    5. '(k' → logprob: -10.725347518920898
    6. '(
' → logprob: -12.350347518920898
    7. '(i' → logprob: -12.850347518920898
    8. '(range' → logprob: -13.725347518920898
    9. '(s' → logprob: -13.850347518920898
    10. '(len' → logprob: -13.975347518920898

Token 32: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00016420685278717428
    2. '1' → logprob: -9.500164031982422
    3. ' a' → logprob: -10.375164031982422
    4. 'n' → logprob: -10.500164031982422
    5. 'k' → logprob: -10.750164031982422
    6. '0' → logprob: -12.000164031982422
    7. '10' → logprob: -14.000164031982422
    8. ')a' → logprob: -14.375164031982422
    9. ')' → logprob: -14.750164031982422
    10. '100' → logprob: -15.500164031982422

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16115346550941467
    2. ' ,' → logprob: -1.9111534357070923
    3. ',n' → logprob: -8.286153793334961
    4. ' )' → logprob: -8.286153793334961
    5. ' ' → logprob: -8.911153793334961
    6. ')' → logprob: -9.411153793334961
    7. ',a' → logprob: -9.536153793334961
    8. ':' → logprob: -10.036153793334961
    9. ' ):' → logprob: -10.286153793334961
    10. ' a' → logprob: -11.161153793334961

Token 34: ' k' (ID: 372)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4026854336261749
    2. ' a' → logprob: -1.1526854038238525
    3. ' n' → logprob: -5.152685642242432
    4. ' k' → logprob: -5.277685642242432
    5. 'k' → logprob: -5.652685642242432
    6. 'n' → logprob: -6.652685642242432
    7. ' ' → logprob: -13.152685165405273
    8. '	a' → logprob: -14.777685165405273
    9. '10' → logprob: -15.777685165405273
    10. ' ' → logprob: -16.277685165405273

Token 35: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2523672580718994
    2. ' +' → logprob: -1.5023672580718994
    3. '):' → logprob: -7.75236701965332
    4. ' ):' → logprob: -12.75236701965332
    5. ')' → logprob: -14.12736701965332
    6. ' ' → logprob: -14.25236701965332
    7. '+n' → logprob: -14.25236701965332
    8. '+:' → logprob: -14.37736701965332
    9. '):
' → logprob: -14.62736701965332
    10. ':' → logprob: -14.87736701965332

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014164687134325504
    2. ' ' → logprob: -4.264164924621582
    3. '2' → logprob: -13.764164924621582
    4. '   ' → logprob: -17.139163970947266
    5. '  ' → logprob: -17.264163970947266
    6. ')' → logprob: -17.389163970947266
    7. '+' → logprob: -18.389163970947266
    8. ' ' → logprob: -18.826663970947266
    9. '```' → logprob: -18.826663970947266
    10. '۱' → logprob: -19.076663970947266

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -10.500028610229492
    3. '2' → logprob: -13.750028610229492
    4. '   ' → logprob: -17.250028610229492
    5. '```' → logprob: -17.625028610229492
    6. ')' → logprob: -18.250028610229492
    7. '  ' → logprob: -18.875028610229492
    8. '۱' → logprob: -19.062528610229492
    9. '１' → logprob: -19.312528610229492
    10. '+' → logprob: -19.625028610229492

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01334951538592577
    2. ':' → logprob: -4.388349533081055
    3. ')' → logprob: -7.138349533081055
    4. '):
' → logprob: -10.763349533081055
    5. ' ):' → logprob: -11.638349533081055
    6. ',' → logprob: -12.513349533081055
    7. ':)' → logprob: -12.763349533081055
    8. '():' → logprob: -13.138349533081055
    9. '+' → logprob: -13.388349533081055
    10. ':**' → logprob: -13.763349533081055

Token 39: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1861501932144165
    2. ' 
' → logprob: -2.311150074005127
    3. '   ' → logprob: -3.436150074005127
    4. ' print' → logprob: -4.811150074005127
    5. '<|end|>' → logprob: -4.811150074005127
    6. 'print' → logprob: -4.936150074005127
    7. '\n' → logprob: -5.061150074005127
    8. '\' → logprob: -6.436150074005127
    9. '    
' → logprob: -6.686150074005127
    10. 'n' → logprob: -7.311150074005127

Token 40: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23581694066524506
    2. ' ' → logprob: -1.8608169555664062
    3. 'a' → logprob: -3.7358169555664062
    4. ' print' → logprob: -4.485816955566406
    5. '<|end|>' → logprob: -4.985816955566406
    6. ' a' → logprob: -5.235816955566406
    7. 'n' → logprob: -6.235816955566406
    8. 'i' → logprob: -6.735816955566406
    9. '    ' → logprob: -6.860816955566406
    10. '   ' → logprob: -7.485816955566406

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4134375751018524
    2. ' a' → logprob: -1.1634376049041748
    3. 'a' → logprob: -4.288437366485596
    4. 'i' → logprob: -4.538437366485596
    5. ' n' → logprob: -7.038437366485596
    6. ' ' → logprob: -7.538437366485596
    7. ' k' → logprob: -8.413437843322754
    8. 'n' → logprob: -9.788437843322754
    9. ' ' → logprob: -9.788437843322754
    10. '(' → logprob: -11.163437843322754

Token 42: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.41176778078079224
    2. ' ==' → logprob: -1.2867677211761475
    3. ' %' → logprob: -3.1617677211761475
    4. ' ' → logprob: -5.161767959594727
    5. '%' → logprob: -5.411767959594727
    6. ' <' → logprob: -6.036767959594727
    7. '<=' → logprob: -6.161767959594727
    8. '==' → logprob: -6.286767959594727
    9. ' >=' → logprob: -7.036767959594727
    10. ' >' → logprob: -7.411767959594727

Token 43: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46992525458335876
    2. ' a' → logprob: -1.0949252843856812
    3. '1' → logprob: -3.8449251651763916
    4. ' ' → logprob: -4.219925403594971
    5. 'n' → logprob: -6.219925403594971
    6. ' n' → logprob: -6.969925403594971
    7. '=' → logprob: -7.219925403594971
    8. '0' → logprob: -7.844925403594971
    9. '=a' → logprob: -9.594924926757812
    10. '	a' → logprob: -10.469924926757812

Token 44: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01647312380373478
    2. ' :' → logprob: -4.516473293304443
    3. ' and' → logprob: -6.141473293304443
    4. ' or' → logprob: -7.641473293304443
    5. ' ' → logprob: -7.766473293304443
    6. '):' → logprob: -7.766473293304443
    7. ')' → logprob: -8.266472816467285
    8. '   ' → logprob: -8.266472816467285
    9. 'and' → logprob: -8.391472816467285
    10. '-' → logprob: -8.391472816467285

Token 45: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.030197851359844208
    2. 'a' → logprob: -3.530197858810425
    3. ' k' → logprob: -8.405198097229004
    4. 'i' → logprob: -8.655198097229004
    5. '1' → logprob: -11.155198097229004
    6. ' a' → logprob: -11.155198097229004
    7. '(k' → logprob: -12.280198097229004
    8. 'n' → logprob: -12.405198097229004
    9. ' ' → logprob: -12.905198097229004
    10. '	k' → logprob: -13.280198097229004

Token 46: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6367378830909729
    2. ' +' → logprob: -0.7617378830909729
    3. ':' → logprob: -6.136737823486328
    4. ' ' → logprob: -7.511737823486328
    5. '+:' → logprob: -7.511737823486328
    6. ' :' → logprob: -7.761737823486328
    7. '1' → logprob: -9.136737823486328
    8. ' and' → logprob: -10.011737823486328
    9. '+a' → logprob: -10.136737823486328
    10. 'a' → logprob: -10.136737823486328

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005860293284058571
    2. 'i' → logprob: -5.380860328674316
    3. ' ' → logprob: -7.255860328674316
    4. ' i' → logprob: -8.130860328674316
    5. 'a' → logprob: -8.505860328674316
    6. '2' → logprob: -11.130860328674316
    7. ' a' → logprob: -11.630860328674316
    8. 'k' → logprob: -13.005860328674316
    9. '   ' → logprob: -13.068360328674316
    10. '0' → logprob: -13.318360328674316

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018619854003190994
    2. 'i' → logprob: -4.018620014190674
    3. 'a' → logprob: -7.893620014190674
    4. '2' → logprob: -9.893619537353516
    5. '0' → logprob: -11.143619537353516
    6. ' i' → logprob: -11.393619537353516
    7. ' ' → logprob: -11.768619537353516
    8. 'k' → logprob: -12.643619537353516
    9. '```' → logprob: -13.081119537353516
    10. '   ' → logprob: -13.331119537353516

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017064384883269668
    2. ' :' → logprob: -9.250170707702637
    3. ':
' → logprob: -9.875170707702637
    4. ' and' → logprob: -11.625170707702637
    5. '   ' → logprob: -12.125170707702637
    6. '):' → logprob: -12.625170707702637
    7. ':**' → logprob: -13.875170707702637
    8. 'and' → logprob: -14.250170707702637
    9. ',' → logprob: -14.750170707702637
    10. ':return' → logprob: -14.875170707702637

Token 50: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3806264102458954
    2. '       ' → logprob: -1.2556264400482178
    3. '   ' → logprob: -4.005626201629639
    4. ':
' → logprob: -4.880626201629639
    5. '    ' → logprob: -6.130626201629639
    6. ' :' → logprob: -6.380626201629639
    7. ' :
' → logprob: -8.005626678466797
    8. '	' → logprob: -8.505626678466797
    9. '\n' → logprob: -8.505626678466797
    10. '     ' → logprob: -8.755626678466797

Token 51: ' print' (ID: 2123)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.9400511384010315
    2. '   ' → logprob: -1.8150510787963867
    3. '       ' → logprob: -1.8150510787963867
    4. 'break' → logprob: -2.0650510787963867
    5. '    ' → logprob: -2.3150510787963867
    6. '\n' → logprob: -4.440051078796387
    7. ':' → logprob: -4.440051078796387
    8. 'print' (adapté à ' print') → logprob: -4.940051078796387
    9. ' ' → logprob: -5.315051078796387
    10. ' print' → logprob: -5.815051078796387

Token 52: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9788849353790283
    2. '(' → logprob: -1.2288849353790283
    3. '(a' → logprob: -1.7288849353790283
    4. '("' → logprob: -2.8538849353790283
    5. '(n' → logprob: -3.4788849353790283
    6. '('' → logprob: -3.7288849353790283
    7. '("*' → logprob: -4.353884696960449
    8. '()' → logprob: -4.728884696960449
    9. '(k' → logprob: -5.478884696960449
    10. '((' → logprob: -5.478884696960449

Token 53: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4654542207717896
    2. 'i' → logprob: -1.4654542207717896
    3. 'n' → logprob: -1.5904542207717896
    4. '0' → logprob: -2.2154541015625
    5. '")' → logprob: -2.3404541015625
    6. '"' → logprob: -2.7154541015625
    7. 'k' → logprob: -4.3404541015625
    8. ')' → logprob: -4.4654541015625
    9. '"*' → logprob: -4.5904541015625
    10. '1' → logprob: -5.4654541015625

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005426656571216881
    2. ')
' → logprob: -8.250542640686035
    3. '   ' → logprob: -8.625542640686035
    4. ' )' → logprob: -9.375542640686035
    5. '')' → logprob: -12.875542640686035
    6. '))' → logprob: -13.000542640686035
    7. ')i' → logprob: -13.500542640686035
    8. 'else' → logprob: -13.750542640686035
    9. '`)' → logprob: -13.875542640686035
    10. ' ' → logprob: -14.000542640686035

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22221548855304718
    2. 'else' → logprob: -3.222215414047241
    3. '<|end|>' → logprob: -3.222215414047241
    4. ' ' → logprob: -3.472215414047241
    5. ':' → logprob: -3.597215414047241
    6. ' else' → logprob: -3.847215414047241
    7. '\n' → logprob: -4.34721565246582
    8. ')' → logprob: -4.47221565246582
    9. '  ' → logprob: -5.84721565246582
    10. '       ' → logprob: -5.97221565246582

Token 56: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7164775729179382
    2. 'else' (adapté à ' else') → logprob: -0.9664775729179382
    3. ' else' → logprob: -2.216477632522583
    4. ' ' → logprob: -4.716477394104004
    5. '       ' → logprob: -5.591477394104004
    6. '<|end|>' → logprob: -5.716477394104004
    7. '	else' → logprob: -6.216477394104004
    8. '  ' → logprob: -6.591477394104004
    9. 'elif' → logprob: -7.091477394104004
    10. ')' → logprob: -7.466477394104004

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002325936919078231
    2. '       ' → logprob: -6.252326011657715
    3. ':
' → logprob: -8.002326011657715
    4. '   ' → logprob: -10.127326011657715
    5. ' :' → logprob: -12.127326011657715
    6. 'print' → logprob: -12.252326011657715
    7. '):' → logprob: -12.752326011657715
    8. ',' → logprob: -12.877326011657715
    9. ' print' → logprob: -13.377326011657715
    10. '    ' → logprob: -13.502326011657715

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5722229480743408
    2. 'print' → logprob: -1.0722229480743408
    3. ' print' → logprob: -2.447222948074341
    4. '   ' → logprob: -5.072222709655762
    5. '```' → logprob: -8.697222709655762
    6. '	print' → logprob: -9.322222709655762
    7. '    ' → logprob: -9.822222709655762
    8. ' ' → logprob: -9.947222709655762
    9. ' for' → logprob: -10.197222709655762
    10. '<|end|>' → logprob: -10.322222709655762

Token 59: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00016563729150220752
    2. '       ' → logprob: -9.000165939331055
    3. ' print' → logprob: -10.500165939331055
    4. '   ' → logprob: -11.750165939331055
    5. 'for' → logprob: -12.875165939331055
    6. '```' → logprob: -14.375165939331055
    7. 'pr' → logprob: -14.500165939331055
    8. '           ' → logprob: -14.500165939331055
    9. 'a' → logprob: -15.125165939331055
    10. 'n' → logprob: -15.250165939331055

Token 60: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1228242889046669
    2. '(' → logprob: -2.747824192047119
    3. 'a' → logprob: -3.122824192047119
    4. '(i' → logprob: -5.497824192047119
    5. '(n' → logprob: -6.497824192047119
    6. '1' → logprob: -6.872824192047119
    7. '((' → logprob: -7.997824192047119
    8. ' a' → logprob: -8.497824668884277
    9. ' (' → logprob: -9.247824668884277
    10. '(k' → logprob: -9.997824668884277

Token 61: ' %' (ID: 1851)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5853068828582764
    2. '-' → logprob: -1.0853068828582764
    3. ')' → logprob: -2.3353068828582764
    4. '-i' → logprob: -5.2103071212768555
    5. '-k' → logprob: -7.3353071212768555
    6. '-a' → logprob: -7.4603071212768555
    7. '-)' → logprob: -7.9603071212768555
    8. '   ' → logprob: -8.335307121276855
    9. '-n' → logprob: -8.460307121276855
    10. ' )' → logprob: -8.585307121276855

Token 62: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3128926455974579
    2. '100' → logprob: -2.0628926753997803
    3. '(' → logprob: -2.9378926753997803
    4. '2' → logprob: -3.6878926753997803
    5. '10' → logprob: -3.9378926753997803
    6. '998' → logprob: -4.562892436981201
    7. '123' → logprob: -4.812892436981201
    8. '(i' → logprob: -5.062892436981201
    9. ' (' → logprob: -5.312892436981201
    10. ' i' → logprob: -5.562892436981201

Token 63: '100' (ID: 1353)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2290569543838501
    2. '100' → logprob: -1.85405695438385
    3. '998' → logprob: -4.2290568351745605
    4. '10' → logprob: -4.3540568351745605
    5. '2' → logprob: -5.3540568351745605
    6. '123' → logprob: -5.4790568351745605
    7. '(i' → logprob: -5.6040568351745605
    8. '(' → logprob: -5.9790568351745605
    9. '3' → logprob: -7.4790568351745605
    10. '101' → logprob: -7.8540568351745605

Token 64: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.6305840015411377
    2. ')' → logprob: -0.8805840015411377
    3. '0' → logprob: -3.7555840015411377
    4. '+' → logprob: -4.005583763122559
    5. '00' → logprob: -5.755583763122559
    6. ' )' → logprob: -6.130583763122559
    7. ' +' → logprob: -6.880583763122559
    8. ')+' → logprob: -7.130583763122559
    9. '`)' → logprob: -7.130583763122559
    10. '001' → logprob: -7.505583763122559

Token 65: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3434162437915802
    2. '007' → logprob: -1.7184162139892578
    3. '7' → logprob: -2.218416213989258
    4. '07' → logprob: -6.468416213989258
    5. '3' → logprob: -7.218416213989258
    6. '003' → logprob: -8.968416213989258
    7. '19' → logprob: -10.343416213989258
    8. ' ' → logprob: -10.593416213989258
    9. '009' → logprob: -11.093416213989258
    10. '0' → logprob: -11.218416213989258

Token 66: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.1008713702030946e-06
    2. '07' → logprob: -13.750001907348633
    3. '007' → logprob: -14.500001907348633
    4. '9' → logprob: -14.750001907348633
    5. ')' → logprob: -18.000001907348633
    6. ' ' → logprob: -18.250001907348633
    7. '+' → logprob: -20.000001907348633
    8. '' → logprob: -20.875001907348633
    9. '```' → logprob: -20.875001907348633
    10. '0' → logprob: -21.000001907348633

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014590468490496278
    2. ' )' → logprob: -6.626459121704102
    3. '))' → logprob: -9.876459121704102
    4. '*' → logprob: -10.876459121704102
    5. '`)' → logprob: -11.251459121704102
    6. '%' → logprob: -11.876459121704102
    7. ')))' → logprob: -12.001459121704102
    8. '**' → logprob: -12.126459121704102
    9. ')`' → logprob: -12.126459121704102
    10. ' ' → logprob: -12.251459121704102

Token 68: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3258295953273773
    2. '<|end|>' → logprob: -1.8258296251296997
    3. 'a' → logprob: -2.95082950592041
    4. ' ' → logprob: -3.95082950592041
    5. ')' → logprob: -4.20082950592041
    6. '%' → logprob: -4.70082950592041
    7. '```' → logprob: -5.32582950592041
    8. '       ' → logprob: -5.45082950592041
    9. '    ' → logprob: -5.45082950592041
    10. '  ' → logprob: -6.07582950592041

Token 69: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.08198246359825134
    2. '       ' → logprob: -3.081982374191284
    3. '   ' → logprob: -3.706982374191284
    4. '    ' → logprob: -5.956982612609863
    5. ' a' → logprob: -6.581982612609863
    6. '        ' → logprob: -6.831982612609863
    7. ' ' → logprob: -6.831982612609863
    8. '           ' → logprob: -8.331982612609863
    9. '(a' → logprob: -8.456982612609863
    10. '     ' → logprob: -8.581982612609863

Token 70: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03313702344894409
    2. '-' → logprob: -3.783137083053589
    3. ' -=' → logprob: -4.90813684463501
    4. '+=' → logprob: -6.28313684463501
    5. '=' → logprob: -7.53313684463501
    6. ' -' → logprob: -11.658137321472168
    7. '```' → logprob: -11.658137321472168
    8. ' +=' → logprob: -12.158137321472168
    9. '--' → logprob: -12.283137321472168
    10. ' ' → logprob: -12.533137321472168

Token 71: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47247716784477234
    2. '(a' → logprob: -1.3474771976470947
    3. ' a' → logprob: -2.4724771976470947
    4. ' (' → logprob: -3.7224771976470947
    5. '(' → logprob: -4.847476959228516
    6. ' ' → logprob: -9.472476959228516
    7. '(n' → logprob: -9.597476959228516
    8. '((' → logprob: -10.347476959228516
    9. '	a' → logprob: -10.847476959228516
    10. '(int' → logprob: -11.097476959228516

Token 72: ' *' (ID: 425)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2854729890823364
    2. '*' → logprob: -1.4104729890823364
    3. '+' → logprob: -6.160472869873047
    4. ' -' → logprob: -7.285472869873047
    5. '*(' → logprob: -8.035472869873047
    6. '*-' → logprob: -8.035472869873047
    7. ' *' → logprob: -8.285472869873047
    8. '*i' → logprob: -9.160472869873047
    9. '*k' → logprob: -9.160472869873047
    10. '//' → logprob: -9.785472869873047

Token 73: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5435945391654968
    2. 'a' → logprob: -1.5435945987701416
    3. '(n' → logprob: -2.2935945987701416
    4. '(i' → logprob: -2.6685945987701416
    5. '2' → logprob: -4.1685943603515625
    6. '(a' → logprob: -5.2935943603515625
    7. 'k' → logprob: -5.5435943603515625
    8. '(k' → logprob: -5.7935943603515625
    9. ' (' → logprob: -6.2935943603515625
    10. '10' → logprob: -6.4185943603515625

Token 74: 'k' (ID: 74)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03429432213306427
    2. ' (' → logprob: -4.659294128417969
    3. '(a' → logprob: -4.784294128417969
    4. 'a' → logprob: -5.159294128417969
    5. '(i' → logprob: -5.159294128417969
    6. '(' → logprob: -6.409294128417969
    7. 'i' → logprob: -7.034294128417969
    8. 'n' → logprob: -7.034294128417969
    9. '(k' → logprob: -7.784294128417969
    10. ' ' → logprob: -8.784294128417969

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49828097224235535
    2. ' -' → logprob: -0.9982810020446777
    3. '-i' → logprob: -3.8732810020446777
    4. '+' → logprob: -5.998281002044678
    5. ' ' → logprob: -7.998281002044678
    6. '-k' → logprob: -9.24828052520752
    7. '   ' → logprob: -9.74828052520752
    8. ' +' → logprob: -9.99828052520752
    9. '  ' → logprob: -10.62328052520752
    10. '-a' → logprob: -10.99828052520752

Token 76: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18022635579109192
    2. 'i' → logprob: -1.8052263259887695
    3. ' (' → logprob: -8.93022632598877
    4. '	i' → logprob: -9.43022632598877
    5. '+' → logprob: -9.55522632598877
    6. ' ' → logprob: -10.18022632598877
    7. '+i' → logprob: -10.18022632598877
    8. '   ' → logprob: -10.18022632598877
    9. '(i' → logprob: -10.68022632598877
    10. ' +' → logprob: -11.30522632598877

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005552235990762711
    2. '+' → logprob: -6.005552291870117
    3. ' )' → logprob: -6.255552291870117
    4. ')//' → logprob: -7.005552291870117
    5. ')
' → logprob: -9.630552291870117
    6. '-' → logprob: -10.130552291870117
    7. ' +' → logprob: -10.380552291870117
    8. '+)' → logprob: -10.630552291870117
    9. ')`' → logprob: -11.130552291870117
    10. ')%' → logprob: -11.255552291870117

Token 78: ' *' (ID: 425)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.08557075262069702
    2. '//' → logprob: -2.585570812225342
    3. '%' → logprob: -5.585570812225342
    4. ' %' → logprob: -6.585570812225342
    5. ' ' → logprob: -7.960570812225342
    6. ' ' → logprob: -8.585570335388184
    7. '   ' → logprob: -8.710570335388184
    8. '       ' → logprob: -8.960570335388184
    9. '    ' → logprob: -9.335570335388184
    10. '<|end|>' → logprob: -9.585570335388184

Token 79: ' (' (ID: 350)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.34992995858192444
    2. ' pow' → logprob: -1.224929928779602
    3. '(pow' → logprob: -7.0999298095703125
    4. '   ' → logprob: -8.349929809570312
    5. ' ' → logprob: -9.224929809570312
    6. '1' → logprob: -9.599929809570312
    7. '  ' → logprob: -10.099929809570312
    8. 'n' → logprob: -10.349929809570312
    9. '-' → logprob: -10.724929809570312
    10. 'p' → logprob: -10.974929809570312

Token 80: 'n' (ID: 77)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.17470231652259827
    2. ' pow' → logprob: -2.0497024059295654
    3. 'n' → logprob: -4.549702167510986
    4. '(pow' → logprob: -5.049702167510986
    5. '(n' → logprob: -5.674702167510986
    6. ' n' → logprob: -6.049702167510986
    7. 'a' → logprob: -6.299702167510986
    8. '(' → logprob: -6.424702167510986
    9. ' (' → logprob: -6.549702167510986
    10. 'i' → logprob: -6.674702167510986

Token 81: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6921353340148926
    2. '-' → logprob: -0.8171353340148926
    3. '+' → logprob: -3.1921353340148926
    4. '-k' → logprob: -4.942135334014893
    5. '-i' → logprob: -5.317135334014893
    6. ' +' → logprob: -6.192135334014893
    7. ')' → logprob: -6.942135334014893
    8. ' ' → logprob: -7.942135334014893
    9. '+i' → logprob: -8.067134857177734
    10. '-n' → logprob: -8.192134857177734

Token 82: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05368191376328468
    2. ' i' → logprob: -4.05368185043335
    3. 'k' → logprob: -4.42868185043335
    4. '-i' → logprob: -4.42868185043335
    5. '+i' → logprob: -5.42868185043335
    6. 'a' → logprob: -5.92868185043335
    7. '	i' → logprob: -7.17868185043335
    8. '-' → logprob: -7.42868185043335
    9. ' -' → logprob: -8.303682327270508
    10. ')' → logprob: -8.303682327270508

Token 83: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07227054983377457
    2. ' +' → logprob: -3.197270631790161
    3. '+i' → logprob: -4.572270393371582
    4. '-' → logprob: -4.572270393371582
    5. ' ' → logprob: -5.322270393371582
    6. ')' → logprob: -6.447270393371582
    7. ' -' → logprob: -6.697270393371582
    8. '   ' → logprob: -9.072270393371582
    9. '+)' → logprob: -9.322270393371582
    10. '-i' → logprob: -9.322270393371582

Token 84: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014505699276924133
    2. ' i' → logprob: -4.889505863189697
    3. '1' → logprob: -5.014505863189697
    4. '+i' → logprob: -9.264505386352539
    5. ')' → logprob: -10.514505386352539
    6. '_i' → logprob: -10.639505386352539
    7. '-i' → logprob: -11.014505386352539
    8. '	i' → logprob: -11.014505386352539
    9. ' ' → logprob: -11.264505386352539
    10. '   ' → logprob: -11.514505386352539

Token 85: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010866360971704125
    2. ' i' → logprob: -7.376086711883545
    3. '1' → logprob: -7.751086711883545
    4. '+i' → logprob: -11.001086235046387
    5. '_i' → logprob: -12.626086235046387
    6. ')' → logprob: -12.626086235046387
    7. '-i' → logprob: -13.126086235046387
    8. '	i' → logprob: -13.751086235046387
    9. ' ' → logprob: -14.376086235046387
    10. '+' → logprob: -14.626086235046387

Token 86: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02584885247051716
    2. ' )' → logprob: -4.275848865509033
    3. ')//' → logprob: -5.400848865509033
    4. '")' → logprob: -6.525848865509033
    5. '')' → logprob: -6.775848865509033
    6. ' ' → logprob: -7.275848865509033
    7. '    ' → logprob: -7.525848865509033
    8. ')
' → logprob: -7.525848865509033
    9. '-' → logprob: -7.525848865509033
    10. '`)' → logprob: -7.525848865509033

Token 87: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0064670247957110405
    2. ' i' → logprob: -5.256466865539551
    3. ')' → logprob: -6.881466865539551
    4. ')i' → logprob: -8.88146686553955
    5. '	i' → logprob: -9.88146686553955
    6. '   ' → logprob: -12.25646686553955
    7. ' ' → logprob: -12.50646686553955
    8. '  ' → logprob: -12.88146686553955
    9. '1' → logprob: -13.63146686553955
    10. '_i' → logprob: -14.50646686553955

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007726464420557022
    2. ')//' → logprob: -5.132726669311523
    3. ' )' → logprob: -6.632726669311523
    4. ')/' → logprob: -8.632726669311523
    5. ' ' → logprob: -9.507726669311523
    6. ')
' → logprob: -9.632726669311523
    7. '   ' → logprob: -10.507726669311523
    8. ')/(' → logprob: -11.007726669311523
    9. '')' → logprob: -11.132726669311523
    10. '")' → logprob: -11.132726669311523

Token 89: '       ' (ID: 309)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.57625412940979
    2. '//' → logprob: -1.45125412940979
    3. ' ' → logprob: -2.57625412940979
    4. '<|end|>' → logprob: -2.70125412940979
    5. ')' → logprob: -3.57625412940979
    6. '  ' → logprob: -4.951253890991211
    7. '   ' → logprob: -5.201253890991211
    8. '	' → logprob: -6.326253890991211
    9. '#' → logprob: -6.326253890991211
    10. '    ' → logprob: -6.451253890991211

Token 90: ' a' (ID: 261)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.1990315467119217
    2. ' //' → logprob: -2.8240315914154053
    3. '       ' → logprob: -2.8240315914154053
    4. '*' → logprob: -4.324031352996826
    5. '//
' → logprob: -4.699031352996826
    6. '<|end|>' → logprob: -5.074031352996826
    7. ')' → logprob: -5.199031352996826
    8. '/' → logprob: -5.324031352996826
    9. '```' → logprob: -5.449031352996826
    10. 'a' (adapté à ' a') → logprob: -6.324031352996826

Token 91: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10885249823331833
    2. '//=' → logprob: -2.3588523864746094
    3. '//' → logprob: -5.108852386474609
    4. 'a' → logprob: -6.858852386474609
    5. ' //' → logprob: -7.358852386474609
    6. ' =' → logprob: -7.858852386474609
    7. '%=' → logprob: -8.60885238647461
    8. 'div' → logprob: -9.35885238647461
    9. '*=' → logprob: -9.60885238647461
    10. ' ' → logprob: -10.73385238647461

Token 92: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2519707679748535
    2. 'a' → logprob: -1.5019707679748535
    3. 'int' → logprob: -10.876970291137695
    4. ' (' → logprob: -11.626970291137695
    5. '(a' → logprob: -12.001970291137695
    6. ' int' → logprob: -12.376970291137695
    7. ' ' → logprob: -13.501970291137695
    8. '	a' → logprob: -13.876970291137695
    9. '(' → logprob: -14.876970291137695
    10. 'div' → logprob: -15.251970291137695

Token 93: ' //' (ID: 602)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.32025444507598877
    2. ' //' → logprob: -1.5702544450759888
    3. '//' → logprob: -3.320254325866699
    4. ' %' → logprob: -4.195254325866699
    5. '<|end|>' → logprob: -4.945254325866699
    6. '`' → logprob: -6.445254325866699
    7. '"' → logprob: -6.570254325866699
    8. ' ' → logprob: -6.945254325866699
    9. '```' → logprob: -6.945254325866699
    10. ' ' → logprob: -7.445254325866699

Token 94: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04477245733141899
    2. 'i' → logprob: -3.1697723865509033
    3. ' (' → logprob: -6.919772624969482
    4. ' i' → logprob: -7.919772624969482
    5. '(' → logprob: -8.044772148132324
    6. '((' → logprob: -10.169772148132324
    7. '   ' → logprob: -10.419772148132324
    8. ' ' → logprob: -11.544772148132324
    9. '	i' → logprob: -12.169772148132324
    10. '{i' → logprob: -12.419772148132324

Token 95: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2619374692440033
    2. '(i' → logprob: -1.5119374990463257
    3. ' i' → logprob: -4.886937618255615
    4. ' (' → logprob: -6.761937618255615
    5. '(' → logprob: -6.886937618255615
    6. '   ' → logprob: -9.011937141418457
    7. '	i' → logprob: -10.886937141418457
    8. '{i' → logprob: -11.011937141418457
    9. '((' → logprob: -11.136937141418457
    10. ' ' → logprob: -11.136937141418457

Token 96: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04534643888473511
    2. ' +' → logprob: -3.54534649848938
    3. ')' → logprob: -4.170346260070801
    4. '+)' → logprob: -11.4203462600708
    5. ' )' → logprob: -11.7953462600708
    6. '1' → logprob: -12.0453462600708
    7. '   ' → logprob: -13.7953462600708
    8. ')
' → logprob: -14.2953462600708
    9. '```' → logprob: -14.9203462600708
    10. '*' → logprob: -15.0453462600708

Token 97: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05863030627369881
    2. 'i' → logprob: -3.4336302280426025
    3. ' (' → logprob: -4.308630466461182
    4. '(' → logprob: -5.183630466461182
    5. '1' → logprob: -6.183630466461182
    6. '(k' → logprob: -6.433630466461182
    7. '(n' → logprob: -7.183630466461182
    8. ' i' → logprob: -7.433630466461182
    9. '   ' → logprob: -8.808629989624023
    10. 'k' → logprob: -9.183629989624023

Token 98: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12074059993028641
    2. '(i' → logprob: -2.2457406520843506
    3. '(' → logprob: -6.1207404136657715
    4. 'k' → logprob: -6.4957404136657715
    5. ' i' → logprob: -6.4957404136657715
    6. '(k' → logprob: -7.3707404136657715
    7. '   ' → logprob: -7.4957404136657715
    8. '(n' → logprob: -7.7457404136657715
    9. ' (' → logprob: -7.9957404136657715
    10. 'n' → logprob: -8.37074089050293

Token 99: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031941127963364124
    2. ' +' → logprob: -5.753194332122803
    3. '1' → logprob: -11.628193855285645
    4. '+i' → logprob: -12.503193855285645
    5. '+
' → logprob: -13.503193855285645
    6. '2' → logprob: -14.253193855285645
    7. '+)' → logprob: -14.878193855285645
    8. '   ' → logprob: -15.253193855285645
    9. ' ' → logprob: -15.503193855285645
    10. 'plus' → logprob: -15.753193855285645

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9040898880339228e-05
    2. ' ' → logprob: -10.625028610229492
    3. '2' → logprob: -13.000028610229492
    4. '   ' → logprob: -13.500028610229492
    5. ')' → logprob: -14.250028610229492
    6. '  ' → logprob: -16.687528610229492
    7. '0' → logprob: -16.937528610229492
    8. '１' → logprob: -17.562528610229492
    9. ' )' → logprob: -17.562528610229492
    10. '))' → logprob: -17.562528610229492

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.62500286102295
    4. '2' → logprob: -15.50000286102295
    5. ')' → logprob: -16.625003814697266
    6. '１' → logprob: -18.562503814697266
    7. '0' → logprob: -18.687503814697266
    8. '  ' → logprob: -18.687503814697266
    9. '+' → logprob: -18.750003814697266
    10. '```' → logprob: -18.937503814697266

Token 102: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. '))' → logprob: -11.875014305114746
    3. ')
' → logprob: -12.000014305114746
    4. ' )' → logprob: -14.250014305114746
    5. ')`' → logprob: -15.375014305114746
    6. ')

' → logprob: -16.12501335144043
    7. ')))' → logprob: -17.00001335144043
    8. '')' → logprob: -17.62501335144043
    9. ')}' → logprob: -17.62501335144043
    10. '`)' → logprob: -18.00001335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 100
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 25.00%
Précision adaptée (1ère position): 27.00%
Précision (top 10): 80.00%
================================================================================
