================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

lambda_i = sys.stdin.readline

stuff = [set() for _ in range(3)]

(lambda s: [stuff[2].update({y + x for y in stuff[1]}) or stuff[1].update({y + x for y in stuff[0]}) or stuff[0].add(x) for x in s])(lambda_i().strip())

(lambda: print(len(stuff[2])))()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'lambda' (ID: 35280)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: '_i' (ID: 10853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008981237770058215
    2. '  ' → logprob: -7.875898361206055
    3. ' (' → logprob: -8.000898361206055
    4. '_' → logprob: -9.625898361206055
    5. ' space' → logprob: -10.500898361206055
    6. '<|end|>' → logprob: -11.000898361206055
    7. ' a' → logprob: -11.500898361206055
    8. '(' → logprob: -11.625898361206055
    9. 'space' → logprob: -11.750898361206055
    10. ' )' → logprob: -12.125898361206055

Token 5: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.904518187046051
    2. 'n' → logprob: -1.2795181274414062
    3. '=' → logprob: -2.6545181274414062
    4. 's' → logprob: -3.0295181274414062
    5. '_' → logprob: -3.1545181274414062
    6. ')' → logprob: -3.2795181274414062
    7. '[' → logprob: -3.6545181274414062
    8. ':' → logprob: -3.9045181274414062
    9. 'x' → logprob: -4.154518127441406
    10. 'd' → logprob: -4.529518127441406

Token 6: ' sys' (ID: 12228)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.16049432754516602
    2. 'lambda' → logprob: -2.160494327545166
    3. ' ' → logprob: -3.785494327545166
    4. '0' → logprob: -5.410494327545166
    5. '1' → logprob: -5.660494327545166
    6. ' sys' → logprob: -7.410494327545166
    7. 'int' → logprob: -8.285493850708008
    8. ' int' → logprob: -8.410493850708008
    9. '10' → logprob: -8.535493850708008
    10. '5' → logprob: -8.910493850708008

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.6100132496794686e-05
    2. ' .' → logprob: -11.250056266784668
    3. '.`' → logprob: -12.000056266784668
    4. '.readline' → logprob: -12.000056266784668
    5. '[' → logprob: -12.250056266784668
    6. '.argv' → logprob: -12.250056266784668
    7. '.import' → logprob: -12.625056266784668
    8. '.stdin' → logprob: -13.500056266784668
    9. '.[' → logprob: -13.625056266784668
    10. '."""' → logprob: -13.750056266784668

Token 8: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.24653644859790802
    2. '.read' → logprob: -1.9965364933013916
    3. '.' → logprob: -2.4965364933013916
    4. '.Read' → logprob: -9.246536254882812
    5. '.readlines' → logprob: -9.371536254882812
    6. '[' → logprob: -9.996536254882812
    7. 'read' → logprob: -10.246536254882812
    8. '```' → logprob: -11.121536254882812
    9. '_read' → logprob: -11.371536254882812
    10. ' .' → logprob: -11.621536254882812

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028383955359458923
    2. '()' → logprob: -6.877838611602783
    3. '(
' → logprob: -7.377838611602783
    4. ''' → logprob: -8.127838134765625
    5. '"' → logprob: -8.377838134765625
    6. '(

' → logprob: -8.502838134765625
    7. ''s' → logprob: -9.502838134765625
    8. '.' → logprob: -9.752838134765625
    9. 's' → logprob: -10.002838134765625
    10. '('' → logprob: -10.002838134765625

Token 10: 'stuff' (ID: 91669)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05951801687479019
    2. '().' → logprob: -3.4345180988311768
    3. '(' → logprob: -3.6845180988311768
    4. '(
' → logprob: -8.559517860412598
    5. '()
' → logprob: -8.809517860412598
    6. ' ()' → logprob: -10.309517860412598
    7. '()

' → logprob: -11.434517860412598
    8. '.' → logprob: -11.559517860412598
    9. '()(' → logprob: -11.934517860412598
    10. '(

' → logprob: -11.934517860412598

Token 11: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05629059299826622
    2. '(' → logprob: -3.556290626525879
    3. '().' → logprob: -3.681290626525879
    4. '.' → logprob: -8.431290626525879
    5. '(
' → logprob: -8.431290626525879
    6. '.strip' → logprob: -8.931290626525879
    7. '()
' → logprob: -9.431290626525879
    8. '()[' → logprob: -9.681290626525879
    9. ')' → logprob: -9.931290626525879
    10. '```' → logprob: -10.056290626525879

Token 12: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8369995951652527
    2. ' lambda' → logprob: -1.3369996547698975
    3. '[]' → logprob: -1.8369996547698975
    4. 'lambda' → logprob: -2.0869996547698975
    5. 'list' → logprob: -5.461999416351318
    6. '[' → logprob: -5.586999416351318
    7. ' [' → logprob: -5.836999416351318
    8. '(lambda' → logprob: -5.961999416351318
    9. ' list' → logprob: -6.211999416351318
    10. '{}' → logprob: -6.711999416351318

Token 13: 'set' (ID: 977)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6718212366104126
    2. 'int' → logprob: -1.6718212366104126
    3. 'lambda' → logprob: -1.6718212366104126
    4. '()]' → logprob: -3.171821117401123
    5. '0' → logprob: -4.171821117401123
    6. '(' → logprob: -4.796821117401123
    7. '1' → logprob: -4.796821117401123
    8. '(lambda' → logprob: -5.171821117401123
    9. '(int' → logprob: -5.171821117401123
    10. ']int' → logprob: -5.296821117401123

Token 14: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.03727734833955765
    2. '()' → logprob: -3.4122774600982666
    3. '(' → logprob: -6.0372772216796875
    4. '(),' → logprob: -6.7872772216796875
    5. '()],' → logprob: -10.037277221679688
    6. ']()' → logprob: -11.537277221679688
    7. '()}' → logprob: -12.162277221679688
    8. '().' → logprob: -12.162277221679688
    9. '())' → logprob: -12.287277221679688
    10. '();' → logprob: -12.287277221679688

Token 15: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0416964553296566
    2. '()' → logprob: -4.041696548461914
    3. ']' → logprob: -5.166696548461914
    4. ')' → logprob: -5.166696548461914
    5. ')]' → logprob: -5.541696548461914
    6. '())' → logprob: -5.666696548461914
    7. '(),' → logprob: -5.916696548461914
    8. ',' → logprob: -7.041696548461914
    9. '(' → logprob: -8.291696548461914
    10. '(range' → logprob: -9.041696548461914

Token 16: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3358538746833801
    2. ' range' → logprob: -1.8358538150787354
    3. '_' → logprob: -2.2108538150787354
    4. ' ' → logprob: -4.4608540534973145
    5. ' i' → logprob: -5.4608540534973145
    6. 'range' → logprob: -8.210853576660156
    7. '(range' → logprob: -10.585853576660156
    8. ' in' → logprob: -10.960853576660156
    9. '_range' → logprob: -11.085853576660156
    10. ' x' → logprob: -11.210853576660156

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11312000453472137
    2. 'in' → logprob: -2.2381200790405273
    3. ' ' → logprob: -8.488120079040527
    4. 'i' → logprob: -10.488120079040527
    5. 'range' → logprob: -10.613120079040527
    6. '(' → logprob: -11.238120079040527
    7. ' i' → logprob: -11.488120079040527
    8. '  ' → logprob: -12.488120079040527
    9. 'import' → logprob: -13.488120079040527
    10. ')' → logprob: -13.488120079040527

Token 18: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.313269704580307
    2. ' range' → logprob: -1.3132697343826294
    3. '[' → logprob: -12.81326961517334
    4. ' ' → logprob: -13.31326961517334
    5. '(range' → logprob: -13.93826961517334
    6. '	range' → logprob: -14.06326961517334
    7. ' xrange' → logprob: -14.31326961517334
    8. '  ' → logprob: -15.06326961517334
    9. 'rang' → logprob: -15.06326961517334
    10. '(' → logprob: -16.188270568847656

Token 19: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.547789674485102e-05
    2. '(n' → logprob: -11.375035285949707
    3. '(int' → logprob: -11.875035285949707
    4. '(len' → logprob: -11.875035285949707
    5. ' (' → logprob: -12.625035285949707
    6. '5' → logprob: -13.750035285949707
    7. '10' → logprob: -13.875035285949707
    8. '6' → logprob: -14.125035285949707
    9. '7' → logprob: -14.125035285949707
    10. '3' → logprob: -14.750035285949707

Token 20: '3' (ID: 18)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4280608594417572
    2. '5' → logprob: -2.30306077003479
    3. '100' → logprob: -2.67806077003479
    4. '3' → logprob: -2.92806077003479
    5. '20' → logprob: -4.053061008453369
    6. '4' → logprob: -4.178061008453369
    7. '6' → logprob: -4.428061008453369
    8. '9' → logprob: -4.553061008453369
    9. '8' → logprob: -4.803061008453369
    10. '7' → logprob: -4.803061008453369

Token 21: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.652451464906335e-05
    2. ')' → logprob: -11.250016212463379
    3. ']' → logprob: -13.625016212463379
    4. ')])' → logprob: -14.125016212463379
    5. ' )' → logprob: -14.375016212463379
    6. ')]
' → logprob: -15.625016212463379
    7. '])]' → logprob: -16.000017166137695
    8. '')]' → logprob: -16.125017166137695
    9. '))' → logprob: -16.375017166137695
    10. '])' → logprob: -16.750017166137695

Token 22: '(lambda' (ID: 43341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3151216506958008
    2. 'lambda' → logprob: -1.8151216506958008
    3. '(lambda' → logprob: -4.190121650695801
    4. 'stuff' → logprob: -4.440121650695801
    5. '()' → logprob: -4.690121650695801
    6. '.' → logprob: -4.940121650695801
    7. '\n' → logprob: -4.940121650695801
    8. ' for' → logprob: -5.065121650695801
    9. ')' → logprob: -5.440121650695801
    10. '```' → logprob: -5.440121650695801

Token 23: ' s' (ID: 265)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0028309114277362823
    2. '_' → logprob: -6.252830982208252
    3. ' _' → logprob: -7.627830982208252
    4. ')' → logprob: -8.377830505371094
    5. ')_' → logprob: -9.502830505371094
    6. '_s' → logprob: -10.752830505371094
    7. '_lambda' → logprob: -10.752830505371094
    8. 'i' → logprob: -11.377830505371094
    9. '_)' → logprob: -11.877830505371094
    10. '_j' → logprob: -12.002830505371094

Token 24: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10926809906959534
    2. ',' → logprob: -2.6092681884765625
    3. ' :' → logprob: -3.9842681884765625
    4. 's' → logprob: -5.1092681884765625
    5. ' s' → logprob: -6.2342681884765625
    6. 'ambda' → logprob: -7.2342681884765625
    7. ' ,' → logprob: -7.3592681884765625
    8. 'lambda' → logprob: -7.4842681884765625
    9. ':s' → logprob: -7.7342681884765625
    10. ',s' → logprob: -8.734268188476562

Token 25: ' [' (ID: 723)
  Prédit: ' stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stuff' → logprob: -1.3298078775405884
    2. ' s' → logprob: -1.7048078775405884
    3. 'stuff' → logprob: -1.9548078775405884
    4. 's' → logprob: -2.204807758331299
    5. '{' → logprob: -2.954807758331299
    6. ' {' → logprob: -3.579807758331299
    7. ' len' → logprob: -3.829807758331299
    8. ' [' → logprob: -3.954807758331299
    9. 'len' → logprob: -3.954807758331299
    10. '[s' → logprob: -4.079807758331299

Token 26: 'stuff' (ID: 91669)
  Prédit: 'stuff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -0.060801517218351364
    2. 's' → logprob: -4.1858015060424805
    3. ' stuff' → logprob: -4.3108015060424805
    4. 'x' → logprob: -4.3108015060424805
    5. 'set' → logprob: -5.3108015060424805
    6. 'st' → logprob: -5.6858015060424805
    7. 'thing' → logprob: -6.4358015060424805
    8. ' x' → logprob: -7.5608015060424805
    9. 'l' → logprob: -7.5608015060424805
    10. '(st' → logprob: -7.8108015060424805

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07797455042600632
    2. '[i' → logprob: -2.827974557876587
    3. '[_' → logprob: -5.202974319458008
    4. '[s' → logprob: -5.577974319458008
    5. '[x' → logprob: -6.077974319458008
    6. '[len' → logprob: -7.077974319458008
    7. '[token' → logprob: -7.577974319458008
    8. '[int' → logprob: -7.952974319458008
    9. '[c' → logprob: -8.202974319458008
    10. '[idx' → logprob: -8.452974319458008

Token 28: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5887064933776855
    2. 'ord' → logprob: -1.5887064933776855
    3. 'len' → logprob: -1.8387064933776855
    4. '0' → logprob: -1.8387064933776855
    5. 'int' → logprob: -1.8387064933776855
    6. 's' → logprob: -2.9637064933776855
    7. '(ord' → logprob: -4.7137064933776855
    8. '(len' → logprob: -4.8387064933776855
    9. '[int' → logprob: -4.9637064933776855
    10. '(i' → logprob: -5.4637064933776855

Token 29: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.06571587920188904
    2. '.add' → logprob: -3.190715789794922
    3. '.' → logprob: -3.940715789794922
    4. '.update' → logprob: -6.065715789794922
    5. ').' → logprob: -8.940715789794922
    6. '.union' → logprob: -9.065715789794922
    7. ']' → logprob: -9.190715789794922
    8. '.append' → logprob: -9.315715789794922
    9. ' .' → logprob: -9.815715789794922
    10. ' ].' → logprob: -10.190715789794922

Token 30: 'update' (ID: 4076)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.10070455819368362
    2. 'update' → logprob: -2.3507046699523926
    3. 'append' → logprob: -8.600704193115234
    4. 'clear' → logprob: -8.725704193115234
    5. 'union' → logprob: -9.475704193115234
    6. 'intersection' → logprob: -10.975704193115234
    7. ' add' → logprob: -12.100704193115234
    8. 'extend' → logprob: -12.475704193115234
    9. 'insert' → logprob: -12.475704193115234
    10. 'len' → logprob: -12.600704193115234

Token 31: '({' (ID: 3972)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0893888995051384
    2. '({' → logprob: -3.214388847351074
    3. '(' → logprob: -3.839388847351074
    4. '(set' → logprob: -4.214388847351074
    5. '(st' → logprob: -5.839388847351074
    6. '((' → logprob: -6.089388847351074
    7. '(i' → logprob: -6.964388847351074
    8. '(x' → logprob: -7.339388847351074
    9. '(eval' → logprob: -7.464388847351074
    10. '(list' → logprob: -7.714388847351074

Token 32: 'y' (ID: 88)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5883055329322815
    2. 'c' → logprob: -2.2133054733276367
    3. 'int' → logprob: -2.3383054733276367
    4. 'i' → logprob: -2.7133054733276367
    5. 'x' → logprob: -2.8383054733276367
    6. '*' → logprob: -4.338305473327637
    7. '(' → logprob: -4.713305473327637
    8. ' s' → logprob: -4.838305473327637
    9. '(i' → logprob: -4.838305473327637
    10. '(s' → logprob: -4.963305473327637

Token 33: ' +' (ID: 659)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3538426458835602
    2. 'for' → logprob: -1.2288426160812378
    3. ' ' → logprob: -6.478842735290527
    4. ',' → logprob: -7.353842735290527
    5. '})' → logprob: -7.478842735290527
    6. 'x' → logprob: -8.103842735290527
    7. 's' → logprob: -8.228842735290527
    8. ' in' → logprob: -8.353842735290527
    9. '}' → logprob: -8.478842735290527
    10. ')' → logprob: -8.478842735290527

Token 34: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7307161092758179
    2. 's' → logprob: -1.6057161092758179
    3. ' x' → logprob: -1.9807161092758179
    4. ' s' → logprob: -2.9807162284851074
    5. '1' → logprob: -3.2307162284851074
    6. ''' → logprob: -4.105716228485107
    7. ' ' → logprob: -4.105716228485107
    8. ''x' → logprob: -4.355716228485107
    9. '"x' → logprob: -4.605716228485107
    10. '"' → logprob: -4.730716228485107

Token 35: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08116358518600464
    2. 'for' → logprob: -2.5811636447906494
    3. '})' → logprob: -6.58116340637207
    4. ' ' → logprob: -7.58116340637207
    5. '}' → logprob: -8.70616340637207
    6. ')' → logprob: -10.08116340637207
    7. ' })' → logprob: -10.70616340637207
    8. '[' → logprob: -10.83116340637207
    9. '   ' → logprob: -11.20616340637207
    10. '  ' → logprob: -11.20616340637207

Token 36: ' y' (ID: 342)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6978123784065247
    2. ' y' → logprob: -1.3228123188018799
    3. 'x' → logprob: -1.8228123188018799
    4. ' s' → logprob: -3.44781231880188
    5. ' ' → logprob: -3.82281231880188
    6. 'y' → logprob: -4.197812557220459
    7. 's' → logprob: -5.697812557220459
    8. ' in' → logprob: -6.697812557220459
    9. '  ' → logprob: -7.947812557220459
    10. ' z' → logprob: -8.9478120803833

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005184304900467396
    2. 'in' → logprob: -5.630184173583984
    3. '<|end|>' → logprob: -6.755184173583984
    4. ' for' → logprob: -9.005184173583984
    5. '<|end|>' → logprob: -9.005184173583984
    6. ' ' → logprob: -9.880184173583984
    7. ' x' → logprob: -10.130184173583984
    8. ',' → logprob: -11.005184173583984
    9. ' s' → logprob: -11.130184173583984
    10. 'x' → logprob: -11.255184173583984

Token 38: ' stuff' (ID: 9350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.15176019072532654
    2. 's' → logprob: -2.7767601013183594
    3. ' stuff' → logprob: -3.0267601013183594
    4. 'stuff' → logprob: -3.6517601013183594
    5. ' range' → logprob: -6.026760101318359
    6. ' x' → logprob: -8.15176010131836
    7. 'x' → logprob: -8.58926010131836
    8. 'range' → logprob: -8.77676010131836
    9. '[' → logprob: -8.90176010131836
    10. ' lambda' → logprob: -9.02676010131836

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001589618914294988
    2. '[i' → logprob: -9.87515926361084
    3. 's' → logprob: -10.87515926361084
    4. '1' → logprob: -10.87515926361084
    5. '[-' → logprob: -10.87515926361084
    6. '[s' → logprob: -11.43765926361084
    7. '```' → logprob: -12.00015926361084
    8. '[
' → logprob: -12.00015926361084
    9. '0' → logprob: -13.12515926361084
    10. '[(' → logprob: -13.37515926361084

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20358450710773468
    2. '0' → logprob: -1.7035845518112183
    3. 's' → logprob: -6.578584671020508
    4. '2' → logprob: -7.703584671020508
    5. ' ' → logprob: -9.203584671020508
    6. 'i' → logprob: -9.203584671020508
    7. '(' → logprob: -10.891084671020508
    8. '[' → logprob: -11.016084671020508
    9. '   ' → logprob: -11.266084671020508
    10. ' s' → logprob: -11.391084671020508

Token 41: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.060607559978961945
    2. 'for' → logprob: -3.435607671737671
    3. ' ' → logprob: -4.935607433319092
    4. '])' → logprob: -5.060607433319092
    5. ']' → logprob: -5.185607433319092
    6. ' if' → logprob: -6.185607433319092
    7. '})' → logprob: -6.435607433319092
    8. '}' → logprob: -7.310607433319092
    9. '   ' → logprob: -7.685607433319092
    10. ',' → logprob: -7.810607433319092

Token 42: '})' (ID: 9263)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05223065987229347
    2. 'for' → logprob: -3.0522305965423584
    3. ' if' → logprob: -6.1772308349609375
    4. ' ' → logprob: -7.4272308349609375
    5. '})' → logprob: -7.8022308349609375
    6. '	for' → logprob: -8.552230834960938
    7. '+' → logprob: -9.802230834960938
    8. ' })' → logprob: -9.927230834960938
    9. 'if' → logprob: -10.052230834960938
    10. ')' → logprob: -10.427230834960938

Token 43: ' or' (ID: 503)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0162410736083984
    2. ' ' → logprob: -1.8912410736083984
    3. ' s' → logprob: -2.3912410736083984
    4. 's' → logprob: -2.5162410736083984
    5. ' +' → logprob: -2.5162410736083984
    6. '+' → logprob: -2.7662410736083984
    7. ' )' → logprob: -2.8912410736083984
    8. ' for' → logprob: -3.5162410736083984
    9. ')' → logprob: -3.6412410736083984
    10. '(s' → logprob: -4.766241073608398

Token 44: ' stuff' (ID: 9350)
  Prédit: ' stuff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stuff' → logprob: -0.28717827796936035
    2. 'stuff' → logprob: -1.6621782779693604
    3. ' s' → logprob: -3.7871782779693604
    4. ' x' → logprob: -4.162178039550781
    5. ' not' → logprob: -5.537178039550781
    6. 's' → logprob: -5.787178039550781
    7. ' (' → logprob: -6.099678039550781
    8. 'x' → logprob: -6.849678039550781
    9. ' y' → logprob: -6.912178039550781
    10. ' ' → logprob: -7.037178039550781

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.0339031834737398e-05
    2. '```' → logprob: -12.125020027160645
    3. 's' → logprob: -13.187520027160645
    4. ' [' → logprob: -13.687520027160645
    5. '[
' → logprob: -13.812520027160645
    6. '2' → logprob: -13.937520027160645
    7. '   ' → logprob: -13.937520027160645
    8. '...' → logprob: -14.500020027160645
    9. ')' → logprob: -14.562520027160645
    10. '1' → logprob: -14.750020027160645

Token 46: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01180338580161333
    2. '2' → logprob: -4.886803150177002
    3. '1' → logprob: -5.636803150177002
    4. 's' → logprob: -7.761803150177002
    5. ' ' → logprob: -9.38680362701416
    6. '[' → logprob: -10.01180362701416
    7. '(' → logprob: -10.63680362701416
    8. '   ' → logprob: -11.82430362701416
    9. ' s' → logprob: -12.07430362701416
    10. 'x' → logprob: -12.19930362701416

Token 47: '].' (ID: 1651)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.6422703266143799
    2. '.' → logprob: -0.7672703266143799
    3. '.add' → logprob: -4.892270088195801
    4. ' .' → logprob: -7.267270088195801
    5. ').' → logprob: -7.892270088195801
    6. '].' → logprob: -8.0172700881958
    7. '}.' → logprob: -8.5172700881958
    8. '.union' → logprob: -8.7672700881958
    9. '.setdefault' → logprob: -8.8922700881958
    10. '.inter' → logprob: -10.1422700881958

Token 48: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.013395973481237888
    2. 'clear' → logprob: -4.5133957862854
    3. 'add' → logprob: -6.6383957862854
    4. '.update' → logprob: -7.5133957862854
    5. ' update' → logprob: -8.013396263122559
    6. ' clear' → logprob: -10.638396263122559
    7. 'union' → logprob: -11.388396263122559
    8. '.clear' → logprob: -11.388396263122559
    9. 'intersection' → logprob: -11.513396263122559
    10. '	update' → logprob: -11.575896263122559

Token 49: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.00027897433028556406
    2. '(s' → logprob: -9.500279426574707
    3. '(({' → logprob: -9.500279426574707
    4. '(' → logprob: -9.750279426574707
    5. '{s' → logprob: -11.375279426574707
    6. '((' → logprob: -11.500279426574707
    7. '{' → logprob: -11.625279426574707
    8. '(x' → logprob: -11.625279426574707
    9. ' ({' → logprob: -11.875279426574707
    10. '({'' → logprob: -12.250279426574707

Token 50: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09635628014802933
    2. 's' → logprob: -2.9713563919067383
    3. ' x' → logprob: -3.7213563919067383
    4. 'c' → logprob: -4.721356391906738
    5. ' s' → logprob: -5.846356391906738
    6. 'y' → logprob: -6.471356391906738
    7. '(x' → logprob: -7.846356391906738
    8. 'z' → logprob: -7.846356391906738
    9. ' c' → logprob: -7.846356391906738
    10. '{x' → logprob: -8.096356391906738

Token 51: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14648427069187164
    2. '+' → logprob: -2.021484375
    3. ' for' → logprob: -6.771484375
    4. '(s' → logprob: -7.396484375
    5. '+x' → logprob: -7.646484375
    6. ' ' → logprob: -7.771484375
    7. '(' → logprob: -8.396484375
    8. 'for' → logprob: -8.771484375
    9. '+s' → logprob: -8.896484375
    10. '(x' → logprob: -9.146484375

Token 52: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3640751540660858
    2. 's' → logprob: -1.7390751838684082
    3. ' x' → logprob: -2.364075183868408
    4. ' s' → logprob: -3.364075183868408
    5. ' ' → logprob: -8.11407470703125
    6. ' y' → logprob: -9.11407470703125
    7. ''x' → logprob: -9.61407470703125
    8. 'y' → logprob: -9.73907470703125
    9. ''s' → logprob: -9.86407470703125
    10. '(s' → logprob: -9.98907470703125

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.033725231885910034
    2. 'for' → logprob: -3.4087252616882324
    3. ' ' → logprob: -9.658724784851074
    4. '	for' → logprob: -11.533724784851074
    5. ' or' → logprob: -13.908724784851074
    6. '  ' → logprob: -14.283724784851074
    7. '{' → logprob: -14.408724784851074
    8. '   ' → logprob: -14.533724784851074
    9. ')' → logprob: -14.533724784851074
    10. '    ' → logprob: -14.783724784851074

Token 54: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.024810578674077988
    2. 'y' → logprob: -3.899810552597046
    3. ' s' → logprob: -5.774810791015625
    4. ' x' → logprob: -7.274810791015625
    5. 's' → logprob: -8.274810791015625
    6. 'x' → logprob: -9.274810791015625
    7. ' ' → logprob: -9.524810791015625
    8. '  ' → logprob: -11.524810791015625
    9. ' ' → logprob: -11.774810791015625
    10. ' z' → logprob: -13.212310791015625

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3135434091091156
    2. 'in' → logprob: -1.313543438911438
    3. 's' → logprob: -9.751043319702148
    4. ' ' → logprob: -9.938543319702148
    5. '[' → logprob: -10.563543319702148
    6. 'import' → logprob: -10.751043319702148
    7. 'stuff' → logprob: -11.126043319702148
    8. ' ' → logprob: -11.876043319702148
    9. 'n' → logprob: -11.938543319702148
    10. 'lambda' → logprob: -11.938543319702148

Token 56: ' stuff' (ID: 9350)
  Prédit: 'stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -0.03376856446266174
    2. ' stuff' → logprob: -3.408768653869629
    3. ' range' → logprob: -10.408768653869629
    4. 's' → logprob: -10.533768653869629
    5. 'range' → logprob: -10.908768653869629
    6. 'lambda' → logprob: -11.783768653869629
    7. '[' → logprob: -11.783768653869629
    8. ' s' → logprob: -11.908768653869629
    9. ' lambda' → logprob: -11.908768653869629
    10. ' ' → logprob: -13.033768653869629

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016088859410956502
    2. '0' → logprob: -6.501608848571777
    3. '2' → logprob: -10.251608848571777
    4. '```' → logprob: -11.501608848571777
    5. '1' → logprob: -11.751608848571777
    6. '[
' → logprob: -12.001608848571777
    7. ' ' → logprob: -12.064108848571777
    8. ' [' → logprob: -12.314108848571777
    9. '{' → logprob: -12.314108848571777
    10. '(' → logprob: -12.626608848571777

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010998181067407131
    2. '2' → logprob: -4.635998249053955
    3. '1' → logprob: -6.760998249053955
    4. '[' → logprob: -9.635997772216797
    5. ' ' → logprob: -11.510997772216797
    6. '(' → logprob: -12.510997772216797
    7. '```' → logprob: -13.885997772216797
    8. '])' → logprob: -14.510997772216797
    9. '-' → logprob: -14.823497772216797
    10. '   ' → logprob: -14.885997772216797

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.609308123588562
    2. '})' → logprob: -1.359308123588562
    3. '])' → logprob: -1.734308123588562
    4. '}' → logprob: -4.359308242797852
    5. ')' → logprob: -4.734308242797852
    6. '   ' → logprob: -8.234308242797852
    7. ' })' → logprob: -8.359308242797852
    8. ']])' → logprob: -8.484308242797852
    9. ']}' → logprob: -8.984308242797852
    10. ' ' → logprob: -9.359308242797852

Token 60: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.03936345875263214
    2. ' })' → logprob: -3.664363384246826
    3. ')' → logprob: -4.664363384246826
    4. ' for' → logprob: -6.164363384246826
    5. ' )' → logprob: -8.289363861083984
    6. ' ' → logprob: -8.539363861083984
    7. 'for' → logprob: -8.664363861083984
    8. '}' → logprob: -8.789363861083984
    9. ')}' → logprob: -9.039363861083984
    10. '}))' → logprob: -9.039363861083984

Token 61: ' or' (ID: 503)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.013111287727952003
    2. 'for' → logprob: -5.388111114501953
    3. ' or' → logprob: -5.888111114501953
    4. ')' → logprob: -6.513111114501953
    5. ' ' → logprob: -6.638111114501953
    6. ' )' → logprob: -7.138111114501953
    7. ' x' → logprob: -7.388111114501953
    8. '(x' → logprob: -8.263111114501953
    9. ' +' → logprob: -8.388111114501953
    10. '    ' → logprob: -9.138111114501953

Token 62: ' stuff' (ID: 9350)
  Prédit: ' stuff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stuff' → logprob: -0.6938168406486511
    2. 'stuff' → logprob: -1.318816900253296
    3. '{' → logprob: -2.193816900253296
    4. ' {' → logprob: -2.818816900253296
    5. '{s' → logprob: -4.068816661834717
    6. ' s' → logprob: -4.693816661834717
    7. '{x' → logprob: -4.943816661834717
    8. '[' → logprob: -5.193816661834717
    9. ' set' → logprob: -5.568816661834717
    10. 's' → logprob: -5.693816661834717

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.723352049040841e-06
    2. '```' → logprob: -13.875004768371582
    3. '[
' → logprob: -14.125004768371582
    4. ')[' → logprob: -14.750004768371582
    5. ')' → logprob: -14.875004768371582
    6. ' [' → logprob: -15.375004768371582
    7. '][' → logprob: -15.500004768371582
    8. '   ' → logprob: -15.625004768371582
    9. '	' → logprob: -15.750004768371582
    10. '2' → logprob: -15.750004768371582

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005846070707775652
    2. '2' → logprob: -7.625584602355957
    3. '[' → logprob: -9.875584602355957
    4. '1' → logprob: -10.125584602355957
    5. '(' → logprob: -13.000584602355957
    6. ' ' → logprob: -13.500584602355957
    7. '```' → logprob: -14.750584602355957
    8. '   ' → logprob: -15.188084602355957
    9. '-' → logprob: -16.250585556030273
    10. ']' → logprob: -16.375585556030273

Token 65: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6505124568939209
    2. '].' → logprob: -0.9005124568939209
    3. ').' → logprob: -3.400512456893921
    4. '.update' → logprob: -3.650512456893921
    5. '}.' → logprob: -4.6505126953125
    6. '>.' → logprob: -6.2755126953125
    7. '<|end|>' → logprob: -8.2755126953125
    8. ' .' → logprob: -8.5255126953125
    9. '.add' → logprob: -8.6505126953125
    10. '.setdefault' → logprob: -9.2755126953125

Token 66: 'add' (ID: 964)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.007854326628148556
    2. 'add' → logprob: -4.882854461669922
    3. ' update' → logprob: -9.132854461669922
    4. 'clear' → logprob: -9.257854461669922
    5. '.update' → logprob: -10.382854461669922
    6. 'upd' → logprob: -12.757854461669922
    7. 'append' → logprob: -12.882854461669922
    8. 'union' → logprob: -13.757854461669922
    9. '	update' → logprob: -14.132854461669922
    10. '{' → logprob: -14.132854461669922

Token 67: '(x' (ID: 4061)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.01327469851821661
    2. '(x' → logprob: -4.638274669647217
    3. '(' → logprob: -5.763274669647217
    4. 's' → logprob: -8.263275146484375
    5. ' (' → logprob: -10.388275146484375
    6. '(
' → logprob: -11.013275146484375
    7. ')' → logprob: -11.388275146484375
    8. '('' → logprob: -11.388275146484375
    9. '((' → logprob: -11.388275146484375
    10. '(y' → logprob: -11.513275146484375

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.060789406299591064
    2. ' )' → logprob: -2.9357893466949463
    3. ')])' → logprob: -5.435789585113525
    4. '   ' → logprob: -7.935789585113525
    5. ' ' → logprob: -8.310789108276367
    6. ' for' → logprob: -8.310789108276367
    7. '))' → logprob: -8.935789108276367
    8. ')
' → logprob: -9.310789108276367
    9. ')]' → logprob: -9.310789108276367
    10. '])' → logprob: -9.810789108276367

Token 69: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8190843462944031
    2. ' for' → logprob: -1.0690844058990479
    3. ' )' → logprob: -1.9440844058990479
    4. ')])' → logprob: -3.319084405899048
    5. ')]' → logprob: -4.694084167480469
    6. '(x' → logprob: -4.819084167480469
    7. 'for' → logprob: -5.569084167480469
    8. '])' → logprob: -5.819084167480469
    9. ' ])' → logprob: -6.319084167480469
    10. '   ' → logprob: -6.694084167480469

Token 70: ' x' (ID: 1215)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7077988982200623
    2. 's' → logprob: -1.582798957824707
    3. 'x' → logprob: -1.832798957824707
    4. ' x' → logprob: -1.957798957824707
    5. 'c' → logprob: -8.082798957824707
    6. ' c' → logprob: -8.457798957824707
    7. ' ' → logprob: -10.270298957824707
    8. 'char' → logprob: -10.520298957824707
    9. ' in' → logprob: -10.645298957824707
    10. ' range' → logprob: -11.145298957824707

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22012245655059814
    2. ' s' → logprob: -1.9701224565505981
    3. 's' → logprob: -2.9701223373413086
    4. 'in' → logprob: -5.720122337341309
    5. '(s' → logprob: -5.720122337341309
    6. ' (' → logprob: -9.220122337341309
    7. '(' → logprob: -9.220122337341309
    8. ' ' → logprob: -10.720122337341309
    9. ')' → logprob: -11.095122337341309
    10. ' )' → logprob: -11.595122337341309

Token 72: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11583506315946579
    2. ' s' → logprob: -2.240834951400757
    3. 'range' → logprob: -7.115835189819336
    4. 'lambda' → logprob: -7.240835189819336
    5. 'list' → logprob: -7.990835189819336
    6. ' range' → logprob: -8.365835189819336
    7. ' lambda' → logprob: -8.615835189819336
    8. 'sys' → logprob: -8.865835189819336
    9. ' list' → logprob: -9.115835189819336
    10. '(s' → logprob: -9.115835189819336

Token 73: '])(' (ID: 164063)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1358414739370346
    2. ')])' → logprob: -2.1358413696289062
    3. ')]' → logprob: -5.260841369628906
    4. '])]' → logprob: -6.385841369628906
    5. ')' → logprob: -6.635841369628906
    6. ']))' → logprob: -8.635841369628906
    7. ']' → logprob: -8.885841369628906
    8. ']])' → logprob: -9.010841369628906
    9. ' ])' → logprob: -9.385841369628906
    10. '])(' → logprob: -9.635841369628906

Token 74: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.003270879853516817
    2. ' lambda' → logprob: -6.378271102905273
    3. '(lambda' → logprob: -6.878271102905273
    4. ')' → logprob: -7.753271102905273
    5. 'sys' → logprob: -10.878271102905273
    6. 'input' → logprob: -11.628271102905273
    7. 'list' → logprob: -11.753271102905273
    8. '"' → logprob: -12.128271102905273
    9. 'λ' → logprob: -12.128271102905273
    10. 'l' → logprob: -12.440771102905273

Token 75: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00014931005716789514
    2. '_' → logprob: -9.125149726867676
    3. ')' → logprob: -11.500149726867676
    4. 'i' → logprob: -11.625149726867676
    5. 'sys' → logprob: -12.125149726867676
    6. '_)' → logprob: -12.250149726867676
    7. 's' → logprob: -12.875149726867676
    8. 'ambda' → logprob: -13.625149726867676
    9. '(lambda' → logprob: -14.000149726867676
    10. '(' → logprob: -14.375149726867676

Token 76: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6411619782447815
    2. '())' → logprob: -0.8911619782447815
    3. '()' → logprob: -2.7661619186401367
    4. '()[' → logprob: -9.391161918640137
    5. '()))' → logprob: -10.141161918640137
    6. '();)' → logprob: -10.766161918640137
    7. '(' → logprob: -11.016161918640137
    8. '()]' → logprob: -11.141161918640137
    9. ' ())' → logprob: -11.391161918640137
    10. '()<' → logprob: -11.641161918640137

Token 77: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.008648845367133617
    2. 'rstrip' → logprob: -4.758648872375488
    3. 'split' → logprob: -10.508648872375488
    4. ' strip' → logprob: -12.008648872375488
    5. 'read' → logprob: -14.883648872375488
    6. '.strip' → logprob: -15.883648872375488
    7. '```' → logprob: -16.008647918701172
    8. 'str' → logprob: -16.633647918701172
    9. 'replace' → logprob: -16.883647918701172
    10. '_strip' → logprob: -17.508647918701172

Token 78: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06298050284385681
    2. '()' → logprob: -2.8129804134368896
    3. ')' → logprob: -7.187980651855469
    4. '()))' → logprob: -9.437980651855469
    5. '()]' → logprob: -10.062980651855469
    6. '();)' → logprob: -10.187980651855469
    7. ' ())' → logprob: -10.687980651855469
    8. '())
' → logprob: -10.812980651855469
    9. '(' → logprob: -11.312980651855469
    10. '());' → logprob: -12.062980651855469

Token 79: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6233453750610352
    2. ')' → logprob: -1.1233453750610352
    3. '<|end|>' → logprob: -2.248345375061035
    4. '[' → logprob: -3.748345375061035
    5. ' ' → logprob: -5.498345375061035
    6. ']' → logprob: -7.373345375061035
    7. '[:]' → logprob: -7.373345375061035
    8. '\' → logprob: -7.873345375061035
    9. ' )' → logprob: -7.998345375061035
    10. '()' → logprob: -8.123345375061035

Token 80: ':' (ID: 25)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.051971741020679474
    2. 's' → logprob: -3.051971673965454
    3. '_i' → logprob: -6.426971912384033
    4. 'i' → logprob: -7.426971912384033
    5. ' i' → logprob: -7.551971912384033
    6. ' x' → logprob: -8.301971435546875
    7. ' lambda' → logprob: -9.551971435546875
    8. ' ' → logprob: -9.801971435546875
    9. '_s' → logprob: -9.801971435546875
    10. ' a' → logprob: -10.551971435546875

Token 81: ' print' (ID: 2123)
  Prédit: ' stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stuff' → logprob: -0.5035707354545593
    2. 'stuff' → logprob: -1.128570795059204
    3. '[' → logprob: -4.128570556640625
    4. ' all' → logprob: -4.628570556640625
    5. ' [' → logprob: -4.878570556640625
    6. 'len' → logprob: -5.003570556640625
    7. 'all' → logprob: -5.253570556640625
    8. ' len' → logprob: -5.503570556640625
    9. ' any' → logprob: -5.878570556640625
    10. '[len' → logprob: -6.128570556640625

Token 82: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.9629043340682983
    2. '(sum' → logprob: -1.3379043340682983
    3. '('' → logprob: -2.087904453277588
    4. '(max' → logprob: -2.462904453277588
    5. '(st' → logprob: -2.587904453277588
    6. '(' → logprob: -3.212904453277588
    7. '(*' → logprob: -4.587904453277588
    8. '(sorted' → logprob: -4.587904453277588
    9. '("' → logprob: -5.837904453277588
    10. '('\' → logprob: -6.587904453277588

Token 83: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0032692146487534046
    2. '(' → logprob: -5.753269195556641
    3. ' (' → logprob: -10.12826919555664
    4. '(s' → logprob: -10.25326919555664
    5. '(set' → logprob: -12.12826919555664
    6. '(max' → logprob: -12.37826919555664
    7. '((' → logprob: -13.25326919555664
    8. '(stor' → logprob: -14.62826919555664
    9. ')' → logprob: -14.75326919555664
    10. '({' → logprob: -14.87826919555664

Token 84: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -0.0003600144700612873
    2. 'uf' → logprob: -8.125360488891602
    3. '(' → logprob: -10.125360488891602
    4. ')' → logprob: -12.000360488891602
    5. 'aff' → logprob: -12.000360488891602
    6. 'ff' → logprob: -12.125360488891602
    7. '[' → logprob: -12.750360488891602
    8. '```' → logprob: -14.625360488891602
    9. 'u' → logprob: -14.875360488891602
    10. '(f' → logprob: -15.250360488891602

Token 85: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.32392441527918e-05
    2. '[-' → logprob: -10.625053405761719
    3. ')))' → logprob: -11.250053405761719
    4. ')' → logprob: -11.250053405761719
    5. '))' → logprob: -13.375053405761719
    6. '```' → logprob: -15.000053405761719
    7. ' ' → logprob: -15.250053405761719
    8. '(' → logprob: -15.500053405761719
    9. '[
' → logprob: -15.625053405761719
    10. ' [' → logprob: -15.625053405761719

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012362991692498326
    2. '0' → logprob: -6.876236438751221
    3. '-' → logprob: -8.626235961914062
    4. '[' → logprob: -11.626235961914062
    5. '1' → logprob: -11.751235961914062
    6. ' ' → logprob: -12.501235961914062
    7. '{' → logprob: -14.251235961914062
    8. '```' → logprob: -14.501235961914062
    9. '(' → logprob: -14.688735961914062
    10. ']' → logprob: -14.813735961914062

Token 87: '])))' (ID: 196150)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.2649315297603607
    2. '))))' → logprob: -1.889931559562683
    3. '))' → logprob: -2.8899314403533936
    4. '])))' → logprob: -4.389931678771973
    5. ')' → logprob: -4.889931678771973
    6. '}' → logprob: -6.264931678771973
    7. '}))' → logprob: -6.514931678771973
    8. ']))' → logprob: -6.514931678771973
    9. ')]' → logprob: -8.639931678771973
    10. '())))' → logprob: -8.889931678771973

Token 88: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00021676832693628967
    2. '(' → logprob: -9.250216484069824
    3. '()
' → logprob: -10.375216484069824
    4. '())' → logprob: -11.000216484069824
    5. '().' → logprob: -11.000216484069824
    6. '<|end|>' → logprob: -11.375216484069824
    7. '()<' → logprob: -11.750216484069824
    8. ')' → logprob: -12.250216484069824
    9. '()]' → logprob: -12.625216484069824
    10. '()

' → logprob: -12.625216484069824


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 68
Précision stricte (1ère position): 45.35%
Précision adaptée (1ère position): 45.35%
Précision (top 10): 79.07%
================================================================================
