================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
A = input().split()
for i in range(n):
    A[i] = int(A[i])

ans = 0

for i in range(n):
    a = A[i]
    while a % 2 == 0:
        a = a // 2
        ans = ans + 1

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'A' (ID: 32)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007994360290467739
    2. ' =' → logprob: -5.757994174957275
    3. '[:]' → logprob: -6.382994174957275
    4. '=' → logprob: -6.757994174957275
    5. '[i' → logprob: -7.632994174957275
    6. '.' → logprob: -7.632994174957275
    7. '+' → logprob: -8.382994651794434
    8. '\[' → logprob: -8.757994651794434
    9. '.append' → logprob: -9.007994651794434
    10. '[]' → logprob: -9.132994651794434

Token 7: ' input' (ID: 3422)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8360171318054199
    2. ' []' → logprob: -1.08601713180542
    3. ' [' → logprob: -2.33601713180542
    4. '[' → logprob: -2.96101713180542
    5. 'list' → logprob: -3.21101713180542
    6. ' list' → logprob: -4.21101713180542
    7. '[input' → logprob: -4.33601713180542
    8. '[int' → logprob: -4.96101713180542
    9. '[list' → logprob: -5.83601713180542
    10. '[n' → logprob: -6.33601713180542

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013765414478257298
    2. ''' → logprob: -7.376376628875732
    3. '('' → logprob: -8.251376152038574
    4. '"' → logprob: -8.751376152038574
    5. '(
' → logprob: -9.376376152038574
    6. '`' → logprob: -9.751376152038574
    7. '()' → logprob: -10.001376152038574
    8. '("("' → logprob: -10.251376152038574
    9. '```' → logprob: -10.376376152038574
    10. ')' → logprob: -10.501376152038574

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004104877356439829
    2. 'strip' → logprob: -5.504105091094971
    3. 'rstrip' → logprob: -11.254104614257812
    4. ' split' → logprob: -12.254104614257812
    5. 'replace' → logprob: -12.254104614257812
    6. 'spl' → logprob: -13.254104614257812
    7. 's' → logprob: -13.629104614257812
    8. 'sp' → logprob: -14.754104614257812
    9. 'rs' → logprob: -14.879104614257812
    10. '(split' → logprob: -16.254104614257812

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032384034246206284
    2. '()' → logprob: -4.032383918762207
    3. '('' → logprob: -4.532383918762207
    4. '("("' → logprob: -5.907383918762207
    5. '(`' → logprob: -9.407383918762207
    6. '(

' → logprob: -9.407383918762207
    7. '`' → logprob: -9.532383918762207
    8. '(
' → logprob: -9.657383918762207
    9. '"' → logprob: -9.657383918762207
    10. ''' → logprob: -9.782383918762207

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7466931343078613
    2. 'A' → logprob: -1.1216931343078613
    3. 'a' → logprob: -2.3716931343078613
    4. 's' → logprob: -3.7466931343078613
    5. 'c' → logprob: -3.8716931343078613
    6. 'B' → logprob: -4.246693134307861
    7. 'result' → logprob: -4.371693134307861
    8. 'count' → logprob: -4.746693134307861
    9. 'C' → logprob: -5.496693134307861
    10. 'S' → logprob: -5.746693134307861

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3240281641483307
    2. ' i' → logprob: -1.3240281343460083
    3. '  ' → logprob: -4.824028015136719
    4. 'i' → logprob: -6.449028015136719
    5. '_' → logprob: -7.824028015136719
    6. ' ‌' → logprob: -7.949028015136719
    7. ' ' → logprob: -8.949028015136719
    8. ' _' → logprob: -10.074028015136719
    9. ' n' → logprob: -10.324028015136719
    10. ' ​' → logprob: -10.699028015136719

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22335860133171082
    2. 'in' → logprob: -1.8483586311340332
    3. ' ' → logprob: -3.473358631134033
    4. '  ' → logprob: -4.973358631134033
    5. '_' → logprob: -6.348358631134033
    6. 'n' → logprob: -7.348358631134033
    7. ')' → logprob: -7.723358631134033
    8. '[' → logprob: -8.098358154296875
    9. '   ' → logprob: -8.348358154296875
    10. ' n' → logprob: -8.473358154296875

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07894520461559296
    2. ' range' → logprob: -2.5789451599121094
    3. 'A' → logprob: -10.57894515991211
    4. ' A' → logprob: -10.82894515991211
    5. 'n' → logprob: -12.82894515991211
    6. ' ' → logprob: -12.95394515991211
    7. '(range' → logprob: -13.32894515991211
    8. '	range' → logprob: -13.32894515991211
    9. ')' → logprob: -14.07894515991211
    10. ' n' → logprob: -15.07894515991211

Token 15: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018418218940496445
    2. '(n' → logprob: -4.393418312072754
    3. ' (' → logprob: -5.143418312072754
    4. '(len' → logprob: -10.893418312072754
    5. ' ' → logprob: -11.018418312072754
    6. '(space' → logprob: -11.768418312072754
    7. '(
' → logprob: -12.518418312072754
    8. '(i' → logprob: -14.018418312072754
    9. '(range' → logprob: -14.268418312072754
    10. '((' → logprob: -14.518418312072754

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31338971853256226
    2. ')' → logprob: -1.313389778137207
    3. '-' → logprob: -10.313389778137207
    4. ' ):' → logprob: -11.063389778137207
    5. '):
' → logprob: -11.063389778137207
    6. '[' → logprob: -11.313389778137207
    7. ' )' → logprob: -11.438389778137207
    8. ':' → logprob: -11.938389778137207
    9. '+' → logprob: -12.063389778137207
    10. '){' → logprob: -12.063389778137207

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1028091236948967
    2. ' ' → logprob: -2.852809190750122
    3. '    ' → logprob: -3.727809190750122
    4. '    
' → logprob: -5.602808952331543
    5. ' A' → logprob: -5.602808952331543
    6. ' if' → logprob: -5.977808952331543
    7. 'A' → logprob: -6.852808952331543
    8. '```' → logprob: -7.102808952331543
    9. '  ' → logprob: -7.227808952331543
    10. '<|end|>' → logprob: -7.352808952331543

Token 18: ' A' (ID: 355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1555649042129517
    2. 'print' → logprob: -1.5305649042129517
    3. ' if' → logprob: -1.7805649042129517
    4. '   ' → logprob: -1.9055649042129517
    5. 'A' (adapté à ' A') → logprob: -2.530564785003662
    6. ' A' → logprob: -3.530564785003662
    7. '    ' → logprob: -4.155564785003662
    8. ' print' → logprob: -4.280564785003662
    9. 'i' → logprob: -5.405564785003662
    10. ' ' → logprob: -5.780564785003662

Token 19: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28209102153778076
    2. '[i' → logprob: -1.4070910215377808
    3. '[A' → logprob: -7.65709114074707
    4. '\[' → logprob: -8.53209114074707
    5. '[int' → logprob: -9.40709114074707
    6. '[I' → logprob: -10.40709114074707
    7. '```' → logprob: -10.53209114074707
    8. '[...]' → logprob: -10.65709114074707
    9. '[n' → logprob: -11.15709114074707
    10. '[a' → logprob: -11.40709114074707

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047843869775533676
    2. ')' → logprob: -3.1728439331054688
    3. ' ]' → logprob: -6.297843933105469
    4. '])' → logprob: -6.922843933105469
    5. ']=' → logprob: -7.172843933105469
    6. ')]' → logprob: -7.672843933105469
    7. '[' → logprob: -8.422843933105469
    8. '=' → logprob: -9.047843933105469
    9. ' )' → logprob: -9.422843933105469
    10. ']==' → logprob: -9.547843933105469

Token 21: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019312551012262702
    2. ' int' → logprob: -6.251931190490723
    3. 'float' → logprob: -13.501931190490723
    4. '(int' → logprob: -15.126931190490723
    5. '[int' → logprob: -15.126931190490723
    6. '   ' → logprob: -15.251931190490723
    7. 'A' → logprob: -16.37693214416504
    8. '=int' → logprob: -16.37693214416504
    9. '<int' → logprob: -16.75193214416504
    10. ' ' → logprob: -16.75193214416504

Token 23: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16027358174324036
    2. '(A' → logprob: -1.910273551940918
    3. '('' → logprob: -10.535273551940918
    4. '(
' → logprob: -12.660273551940918
    5. '(`' → logprob: -12.785273551940918
    6. 'A' → logprob: -12.785273551940918
    7. '(

' → logprob: -13.035273551940918
    8. ')' → logprob: -13.160273551940918
    9. ' (' → logprob: -13.160273551940918
    10. '```' → logprob: -13.535273551940918

Token 24: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013822594191879034
    2. '[' → logprob: -6.751382350921631
    3. ')' → logprob: -8.626381874084473
    4. '[I' → logprob: -11.126381874084473
    5. '[A' → logprob: -11.126381874084473
    6. ' [' → logprob: -14.126381874084473
    7. ')[' → logprob: -14.376381874084473
    8. ']' → logprob: -14.751381874084473
    9. ')i' → logprob: -14.751381874084473
    10. '[
' → logprob: -15.001381874084473

Token 25: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021538054570555687
    2. '))' → logprob: -3.896538019180298
    3. '])' → logprob: -7.021538257598877
    4. ')])' → logprob: -9.771537780761719
    5. ')))' → logprob: -11.646537780761719
    6. ']' → logprob: -11.896537780761719
    7. ')]' → logprob: -12.021537780761719
    8. ')
' → logprob: -12.271537780761719
    9. ''])' → logprob: -12.896537780761719
    10. '   ' → logprob: -12.896537780761719

Token 26: 'ans' (ID: 616)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.156432867050171
    2. 'for' → logprob: -1.406432867050171
    3. 'sum' → logprob: -1.781432867050171
    4. 'if' → logprob: -2.781432867050171
    5. 'max' → logprob: -3.156432867050171
    6. '#' → logprob: -3.281432867050171
    7. 'A' → logprob: -3.406432867050171
    8. 'i' → logprob: -3.781432867050171
    9. 'm' → logprob: -4.40643310546875
    10. 'print' → logprob: -5.03143310546875

Token 27: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05856701731681824
    2. '=' → logprob: -3.4335670471191406
    3. ' =' → logprob: -4.933567047119141
    4. '+' → logprob: -5.558567047119141
    5. '_' → logprob: -5.558567047119141
    6. '.append' → logprob: -6.058567047119141
    7. '.' → logprob: -6.308567047119141
    8. '(' → logprob: -6.558567047119141
    9. 's' → logprob: -6.808567047119141
    10. '[i' → logprob: -7.183567047119141

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04841906204819679
    2. ' ' → logprob: -3.5484189987182617
    3. 'max' → logprob: -4.923418998718262
    4. ' max' → logprob: -5.548418998718262
    5. '[]' → logprob: -6.423418998718262
    6. '[' → logprob: -6.923418998718262
    7. ' []' → logprob: -6.923418998718262
    8. 'sum' → logprob: -7.048418998718262
    9. ' [' → logprob: -7.548418998718262
    10. ' A' → logprob: -7.548418998718262

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14070576429367065
    2. 'max' → logprob: -2.1407058238983154
    3. 'sum' → logprob: -5.140705585479736
    4. '[]' → logprob: -6.640705585479736
    5. '[' → logprob: -6.640705585479736
    6. 'float' → logprob: -6.890705585479736
    7. 'A' → logprob: -6.890705585479736
    8. 'min' → logprob: -7.015705585479736
    9. '[max' → logprob: -7.140705585479736
    10. '-' → logprob: -7.390705585479736

Token 30: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5471916198730469
    2. 'for' → logprob: -1.1721916198730469
    3. ' for' → logprob: -2.547191619873047
    4. ' 
' → logprob: -3.922191619873047
    5. '<|end|>' → logprob: -4.797191619873047
    6. ' ' → logprob: -6.047191619873047
    7. '\n' → logprob: -6.672191619873047
    8. '
' → logprob: -7.422191619873047
    9. '' → logprob: -7.797191619873047
    10. '  
' → logprob: -8.672191619873047

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004845346265938133
    2. ' for' → logprob: -7.750484466552734
    3. 'i' → logprob: -10.875484466552734
    4. 'max' → logprob: -11.000484466552734
    5. '   ' → logprob: -12.375484466552734
    6. 'if' → logprob: -12.875484466552734
    7. 'A' → logprob: -13.125484466552734
    8. 'ans' → logprob: -13.875484466552734
    9. 'while' → logprob: -14.000484466552734
    10. ')' → logprob: -14.125484466552734

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.39157503843307495
    2. ' ' → logprob: -1.1415750980377197
    3. '_' → logprob: -6.266574859619141
    4. 'i' → logprob: -6.766574859619141
    5. ' _' → logprob: -7.391574859619141
    6. ' ' → logprob: -7.766574859619141
    7. '  ' → logprob: -7.891574859619141
    8. ' ‌' → logprob: -9.76657485961914
    9. ' range' → logprob: -10.01657485961914
    10. ' in' → logprob: -10.26657485961914

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.049288444221019745
    2. 'in' → logprob: -3.299288511276245
    3. ' ' → logprob: -5.049288272857666
    4. '<|end|>' → logprob: -5.674288272857666
    5. '  ' → logprob: -7.174288272857666
    6. ')' → logprob: -8.674288749694824
    7. '+' → logprob: -8.799288749694824
    8. '[' → logprob: -10.549288749694824
    9. ' <' → logprob: -10.674288749694824
    10. '<|end|>' → logprob: -10.799288749694824

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02975870668888092
    2. 'range' → logprob: -3.5297586917877197
    3. ' ' → logprob: -12.27975845336914
    4. ' A' → logprob: -13.90475845336914
    5. '	range' → logprob: -13.90475845336914
    6. '(range' → logprob: -14.65475845336914
    7. '  ' → logprob: -15.02975845336914
    8. ' n' → logprob: -15.27975845336914
    9. 'n' → logprob: -15.77975845336914
    10. ' xrange' → logprob: -16.02975845336914

Token 35: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5766448378562927
    2. '(' → logprob: -0.8266448378562927
    3. ' (' → logprob: -7.3266448974609375
    4. ' ' → logprob: -10.576644897460938
    5. '(len' → logprob: -11.576644897460938
    6. ' n' → logprob: -11.701644897460938
    7. '(s' → logprob: -13.951644897460938
    8. '(
' → logprob: -14.076644897460938
    9. 'n' → logprob: -14.701644897460938
    10. '(space' → logprob: -14.701644897460938

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005243360530585051
    2. ')' → logprob: -5.505243301391602
    3. '-' → logprob: -7.130243301391602
    4. ' ):' → logprob: -8.380243301391602
    5. '):
' → logprob: -9.505243301391602
    6. ':' → logprob: -10.630243301391602
    7. '+' → logprob: -11.005243301391602
    8. ' -' → logprob: -11.880243301391602
    9. '   ' → logprob: -12.380243301391602
    10. ' ' → logprob: -12.505243301391602

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0258626751601696
    2. ' ' → logprob: -4.025862693786621
    3. ' for' → logprob: -5.650862693786621
    4. '    ' → logprob: -6.150862693786621
    5. '<|end|>' → logprob: -7.150862693786621
    6. '    
' → logprob: -7.775862693786621
    7. 'for' → logprob: -8.525862693786621
    8. '  ' → logprob: -9.025862693786621
    9. '       ' → logprob: -9.275862693786621
    10. '```' → logprob: -9.400862693786621

Token 38: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40287142992019653
    2. 'for' → logprob: -1.7778713703155518
    3. '   ' → logprob: -2.6528713703155518
    4. ' if' → logprob: -2.9028713703155518
    5. ' ans' → logprob: -3.7778713703155518
    6. 'if' → logprob: -4.902871608734131
    7. ' A' → logprob: -5.777871608734131
    8. 'ans' → logprob: -6.402871608734131
    9. ' ' → logprob: -7.152871608734131
    10. 'A' → logprob: -8.027871131896973

Token 39: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04516824334859848
    2. '[' → logprob: -3.170168161392212
    3. 'ns' → logprob: -7.045168399810791
    4. '[A' → logprob: -7.295168399810791
    5. '[a' → logprob: -8.670167922973633
    6. '[n' → logprob: -9.045167922973633
    7. 's' → logprob: -9.045167922973633
    8. '[]' → logprob: -10.045167922973633
    9. '[I' → logprob: -10.545167922973633
    10. '\[' → logprob: -10.545167922973633

Token 40: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6333818435668945
    2. ' A' → logprob: -0.7583818435668945
    3. ' ' → logprob: -8.758381843566895
    4. 'i' → logprob: -9.133381843566895
    5. '0' → logprob: -9.133381843566895
    6. 'ans' → logprob: -9.383381843566895
    7. ' i' → logprob: -9.383381843566895
    8. '   ' → logprob: -9.508381843566895
    9. 'a' → logprob: -9.633381843566895
    10. ' ans' → logprob: -9.883381843566895

Token 41: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012296605564188212
    2. '[' → logprob: -9.125123023986816
    3. '[j' → logprob: -13.125123023986816
    4. '[I' → logprob: -13.375123023986816
    5. ' [' → logprob: -13.500123023986816
    6. '[a' → logprob: -13.625123023986816
    7. '```' → logprob: -13.625123023986816
    8. '\[' → logprob: -13.625123023986816
    9. '[:]' → logprob: -14.000123023986816
    10. '[n' → logprob: -14.125123023986816

Token 42: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008544125594198704
    2. ')' → logprob: -5.758543968200684
    3. '])' → logprob: -5.883543968200684
    4. ']+' → logprob: -7.008543968200684
    5. '+' → logprob: -7.258543968200684
    6. '-' → logprob: -7.633543968200684
    7. '[' → logprob: -9.508543968200684
    8. ']
' → logprob: -9.633543968200684
    9. '[i' → logprob: -10.008543968200684
    10. ' ]' → logprob: -10.133543968200684

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0982297658920288
    2. ' for' → logprob: -1.4732297658920288
    3. '<|end|>' → logprob: -2.0982298851013184
    4. 'for' → logprob: -2.2232298851013184
    5. ' ' → logprob: -2.3482298851013184
    6. '
' → logprob: -3.3482298851013184
    7. ' if' → logprob: -3.7232298851013184
    8. 'if' → logprob: -4.473229885101318
    9. ' 
' → logprob: -4.973229885101318
    10. '+' → logprob: -5.473229885101318

Token 44: ' while' (ID: 2049)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4957837760448456
    2. 'for' → logprob: -1.120783805847168
    3. ' if' → logprob: -3.370783805847168
    4. 'if' → logprob: -3.745783805847168
    5. ' ' → logprob: -5.620783805847168
    6. '   ' → logprob: -6.120783805847168
    7. ' while' → logprob: -8.745783805847168
    8. '    ' → logprob: -9.120783805847168
    9. 'while' (adapté à ' while') → logprob: -9.120783805847168
    10. ' ans' → logprob: -9.245783805847168

Token 45: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.28128984570503235
    2. 'a' → logprob: -1.40628981590271
    3. ' ' → logprob: -9.156290054321289
    4. '(a' → logprob: -11.781290054321289
    5. '	a' → logprob: -11.906290054321289
    6. '  ' → logprob: -13.031290054321289
    7. '_a' → logprob: -13.031290054321289
    8. '   ' → logprob: -13.156290054321289
    9. ' (' → logprob: -13.281290054321289
    10. '>a' → logprob: -13.281290054321289

Token 46: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4778216779232025
    2. '%' → logprob: -1.227821707725525
    3. ' >' → logprob: -2.7278215885162354
    4. '>' → logprob: -3.8528215885162354
    5. ' ' → logprob: -8.602821350097656
    6. ' >=' → logprob: -10.227821350097656
    7. ' !=' → logprob: -10.602821350097656
    8. ' &' → logprob: -10.602821350097656
    9. ' ' → logprob: -10.727821350097656
    10. '>=' → logprob: -11.102821350097656

Token 47: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002300131833180785
    2. ' ' → logprob: -6.502300262451172
    3. '3' → logprob: -7.752300262451172
    4. '5' → logprob: -8.502300262451172
    5. '6' → logprob: -9.377300262451172
    6. '10' → logprob: -10.252300262451172
    7. '26' → logprob: -11.002300262451172
    8. '7' → logprob: -11.502300262451172
    9. '4' → logprob: -12.377300262451172
    10. '   ' → logprob: -12.752300262451172

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005558936391025782
    2. '3' → logprob: -7.875555992126465
    3. '26' → logprob: -9.125555992126465
    4. '5' → logprob: -10.375555992126465
    5. ' ' → logprob: -11.875555992126465
    6. '6' → logprob: -12.000555992126465
    7. '10' → logprob: -12.250555992126465
    8. '   ' → logprob: -12.750555992126465
    9. '7' → logprob: -12.875555992126465
    10. '4' → logprob: -12.875555992126465

Token 49: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3163720965385437
    2. ' ==' → logprob: -1.3163721561431885
    3. '=' → logprob: -6.066371917724609
    4. '0' → logprob: -7.316371917724609
    5. ' ' → logprob: -9.56637191772461
    6. ')==' → logprob: -11.31637191772461
    7. ' =' → logprob: -11.31637191772461
    8. ')' → logprob: -11.94137191772461
    9. '===' → logprob: -12.19137191772461
    10. '```' → logprob: -12.44137191772461

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02054188773036003
    2. ' ' → logprob: -3.8955419063568115
    3. '  ' → logprob: -17.52054214477539
    4. '   ' → logprob: -18.39554214477539
    5. '۰' → logprob: -18.64554214477539
    6. ' ' → logprob: -18.64554214477539
    7. '```' → logprob: -19.02054214477539
    8. '==' → logprob: -19.27054214477539
    9. '2' → logprob: -19.27054214477539
    10. '00' → logprob: -19.52054214477539

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '۰' → logprob: -18.625051498413086
    4. '   ' → logprob: -19.500051498413086
    5. '  ' → logprob: -19.500051498413086
    6. '```' → logprob: -19.625051498413086
    7. '０' → logprob: -19.875051498413086
    8. '٠' → logprob: -20.000051498413086
    9. '०' → logprob: -20.375051498413086
    10. '00' → logprob: -20.750051498413086

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001887591351987794
    2. ':
' → logprob: -8.750188827514648
    3. '):' → logprob: -10.750188827514648
    4. ' :' → logprob: -12.875188827514648
    5. ' and' → logprob: -13.125188827514648
    6. '   ' → logprob: -13.500188827514648
    7. 'and' → logprob: -14.875188827514648
    8. '):
' → logprob: -15.000188827514648
    9. ':**' → logprob: -15.000188827514648
    10. 'a' → logprob: -15.250188827514648

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2821355164051056
    2. ' a' → logprob: -2.157135486602783
    3. '   ' → logprob: -2.907135486602783
    4. '    ' → logprob: -3.032135486602783
    5. 'a' → logprob: -4.032135486602783
    6. ' ' → logprob: -5.157135486602783
    7. ' 
' → logprob: -6.907135486602783
    8. '        
' → logprob: -7.157135486602783
    9. '        ' → logprob: -7.907135486602783
    10. '```' → logprob: -7.907135486602783

Token 54: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.2467624396085739
    2. ' a' → logprob: -2.12176251411438
    3. 'ans' → logprob: -2.62176251411438
    4. ' ans' → logprob: -3.74676251411438
    5. '       ' → logprob: -6.496762275695801
    6. '   ' → logprob: -7.371762275695801
    7. '           ' → logprob: -8.3717622756958
    8. '        ' → logprob: -9.7467622756958
    9. '	ans' → logprob: -9.8717622756958
    10. '    ' → logprob: -10.2467622756958

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8022647500038147
    2. '=' → logprob: -1.30226469039917
    3. ' //' → logprob: -1.67726469039917
    4. '//=' → logprob: -2.55226469039917
    5. ' /=' → logprob: -4.67726469039917
    6. ' >>=' → logprob: -5.42726469039917
    7. ' ' → logprob: -7.42726469039917
    8. '/=' → logprob: -7.92726469039917
    9. '//' → logprob: -8.802265167236328
    10. ' ' → logprob: -9.927265167236328

Token 56: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47407761216163635
    2. ' a' → logprob: -0.974077582359314
    3. '	a' → logprob: -15.474077224731445
    4. ' ' → logprob: -15.849077224731445
    5. ' ' → logprob: -17.099077224731445
    6. 'int' → logprob: -17.224077224731445
    7. '   ' → logprob: -17.349077224731445
    8. '>a' → logprob: -18.099077224731445
    9. '_a' → logprob: -18.224077224731445
    10. '    ' → logprob: -18.224077224731445

Token 57: ' //' (ID: 602)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6276776790618896
    2. ' //' → logprob: -1.1276776790618896
    3. '//' → logprob: -3.0026776790618896
    4. ' ' → logprob: -3.3776776790618896
    5. ' a' → logprob: -4.252677917480469
    6. '"' → logprob: -4.502677917480469
    7. '`' → logprob: -4.752677917480469
    8. '/' → logprob: -5.127677917480469
    9. '2' → logprob: -5.252677917480469
    10. ' ' → logprob: -5.377677917480469

Token 58: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.125019073486328
    4. '```' → logprob: -18.250019073486328
    5. '２' → logprob: -19.375019073486328
    6. '۲' → logprob: -20.000019073486328
    7. '<|end|>' → logprob: -20.250019073486328
    8. '  ' → logprob: -20.250019073486328
    9. '    ' → logprob: -20.750019073486328
    10. '>' → logprob: -21.125019073486328

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -18.625
    4. '   ' → logprob: -19.125
    5. '２' → logprob: -20.0
    6. '۲' → logprob: -20.375
    7. '<|end|>' → logprob: -20.75
    8. '  ' → logprob: -21.0
    9. '২' → logprob: -21.375
    10. '२' → logprob: -21.5

Token 60: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2982345521450043
    2. '   ' → logprob: -1.6732345819473267
    3. 'ans' → logprob: -3.298234462738037
    4. ' ans' → logprob: -4.173234462738037
    5. '
' → logprob: -5.423234462738037
    6. '1' → logprob: -5.798234462738037
    7. '```' → logprob: -5.798234462738037
    8. '           ' → logprob: -6.673234462738037
    9. '4' → logprob: -7.048234462738037
    10. '        
' → logprob: -7.298234462738037

Token 61: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7456099987030029
    2. ' ans' → logprob: -1.370609998703003
    3. '       ' → logprob: -1.495609998703003
    4. '   ' → logprob: -3.120609998703003
    5. '    ' → logprob: -6.995610237121582
    6. '```' → logprob: -7.370610237121582
    7. '        ' → logprob: -7.495610237121582
    8. '	ans' → logprob: -7.620610237121582
    9. ' ' → logprob: -8.620610237121582
    10. '           ' → logprob: -8.870610237121582

Token 62: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -3.054500666621607e-06
    2. ' ans' → logprob: -12.75000286102295
    3. '	ans' → logprob: -17.250003814697266
    4. '   ' → logprob: -18.625003814697266
    5. '(ans' → logprob: -19.625003814697266
    6. '_ans' → logprob: -20.125003814697266
    7. 'a' → logprob: -20.375003814697266
    8. 'answer' → logprob: -20.500003814697266
    9. '```' → logprob: -20.875003814697266
    10. '
' → logprob: -21.250003814697266

Token 63: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03133072704076767
    2. ' +=' → logprob: -3.5313308238983154
    3. '+' → logprob: -6.531330585479736
    4. '=' → logprob: -9.156331062316895
    5. ']+=' → logprob: -12.031331062316895
    6. '+='' → logprob: -12.406331062316895
    7. '++' → logprob: -12.531331062316895
    8. '+="' → logprob: -14.281331062316895
    9. '+=(' → logprob: -14.656331062316895
    10. '+++' → logprob: -14.781331062316895

Token 64: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.47410306334495544
    2. ' ans' → logprob: -0.9741030931472778
    3. '(ans' → logprob: -11.099102973937988
    4. '	ans' → logprob: -11.474102973937988
    5. '_ans' → logprob: -14.849102973937988
    6. 'answer' → logprob: -16.099103927612305
    7. ' ' → logprob: -16.974103927612305
    8. '1' → logprob: -18.724103927612305
    9. 'answers' → logprob: -19.224103927612305
    10. '0' → logprob: -19.224103927612305

Token 65: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005536287208087742
    2. ' +' → logprob: -7.500553607940674
    3. '+=' → logprob: -15.375554084777832
    4. '1' → logprob: -15.875554084777832
    5. '＋' → logprob: -16.375553131103516
    6. '<|end|>' → logprob: -16.375553131103516
    7. ' plus' → logprob: -17.000553131103516
    8. '+
' → logprob: -17.125553131103516
    9. '+i' → logprob: -17.500553131103516
    10. '++' → logprob: -17.625553131103516

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -18.37504005432129
    4. '<|end|>' → logprob: -20.00004005432129
    5. '１' → logprob: -20.12504005432129
    6. '```' → logprob: -20.50004005432129
    7. '  ' → logprob: -20.62504005432129
    8. '+' → logprob: -20.93754005432129
    9. '१' → logprob: -21.31254005432129
    10. ' ' → logprob: -21.56254005432129

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '１' → logprob: -20.125001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '१' → logprob: -22.000001907348633
    6. '+' → logprob: -22.250001907348633
    7. '  ' → logprob: -22.500001907348633
    8. '১' → logprob: -22.500001907348633
    9. '```' → logprob: -22.500001907348633
    10. '۱' → logprob: -22.625001907348633

Token 68: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.081584716506768e-05
    2. ' print' → logprob: -11.625020980834961
    3. '```' → logprob: -11.875020980834961
    4. '\n' → logprob: -12.625020980834961
    5. '
' → logprob: -14.250020980834961
    6. '<|end|>' → logprob: -15.000020980834961
    7. '\' → logprob: -15.875020980834961
    8. '(print' → logprob: -16.12502098083496
    9. '#print' → logprob: -16.37502098083496
    10. '#' → logprob: -16.50002098083496

Token 69: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -14.875
    3. '```' → logprob: -17.875
    4. ')' → logprob: -20.75
    5. 'for' → logprob: -20.875
    6. '.print' → logprob: -21.25
    7. '
' → logprob: -21.25
    8. 'pr' → logprob: -21.5
    9. '#print' → logprob: -21.5
    10. '-print' → logprob: -21.625

Token 70: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10037229210138321
    2. '(ans' → logprob: -2.350372314453125
    3. '()' → logprob: -8.850372314453125
    4. '('' → logprob: -11.475372314453125
    5. '(print' → logprob: -12.975372314453125
    6. '(`' → logprob: -13.100372314453125
    7. '("("' → logprob: -13.475372314453125
    8. 'ans' → logprob: -13.600372314453125
    9. '(answer' → logprob: -13.725372314453125
    10. '((' → logprob: -14.600372314453125

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -15.75
    3. ' )' → logprob: -17.5
    4. ')`' → logprob: -18.125
    5. '')' → logprob: -18.625
    6. ')
' → logprob: -19.125
    7. ')}' → logprob: -19.375
    8. '）' → logprob: -19.875
    9. '()' → logprob: -19.875
    10. '`)' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 36.23%
Précision adaptée (1ère position): 39.13%
Précision (top 10): 79.71%
================================================================================
