================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = map(int, input().split())
if a > b:
    a = a - 1
print(a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21134252846240997
    2. '+' → logprob: -1.7113425731658936
    3. ',' → logprob: -5.3363423347473145
    4. ' =' → logprob: -5.5863423347473145
    5. ' ' → logprob: -8.086342811584473
    6. ' +' → logprob: -8.586342811584473
    7. '*' → logprob: -8.711342811584473
    8. '+=' → logprob: -8.961342811584473
    9. '.' → logprob: -9.086342811584473
    10. ')' → logprob: -9.586342811584473

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.651124894618988
    2. '0' → logprob: -1.1511249542236328
    3. '1' → logprob: -1.9011249542236328
    4. '10' → logprob: -4.776124954223633
    5. '5' → logprob: -6.026124954223633
    6. '42' → logprob: -7.776124954223633
    7. '3' → logprob: -8.151124954223633
    8. '2' → logprob: -8.526124954223633
    9. ' b' → logprob: -8.526124954223633
    10. '[' → logprob: -8.776124954223633

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19934040307998657
    2. '(lambda' → logprob: -2.324340343475342
    3. '```' → logprob: -2.699340343475342
    4. '<|end|>' → logprob: -4.699340343475342
    5. ')' → logprob: -7.074340343475342
    6. '(int' → logprob: -7.324340343475342
    7. '[' → logprob: -7.574340343475342
    8. '`' → logprob: -7.824340343475342
    9. '[int' → logprob: -8.1993408203125
    10. '<|end|>' → logprob: -8.3243408203125

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5409305095672607
    2. '(input' → logprob: -1.0409305095672607
    3. '(' → logprob: -2.9159305095672607
    4. 'input' → logprob: -5.66593074798584
    5. '```' → logprob: -6.41593074798584
    6. '(user' → logprob: -6.91593074798584
    7. '`)' → logprob: -7.66593074798584
    8. ',' → logprob: -7.79093074798584
    9. '(data' → logprob: -7.91593074798584
    10. '))' → logprob: -8.29093074798584

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03606749698519707
    2. ' input' → logprob: -3.536067485809326
    3. '(input' → logprob: -5.161067485809326
    4. ')' → logprob: -7.536067485809326
    5. ',input' → logprob: -12.036067962646484
    6. '=input' → logprob: -12.536067962646484
    7. '```' → logprob: -12.661067962646484
    8. ' )' → logprob: -12.661067962646484
    9. 'user' → logprob: -12.786067962646484
    10. '<input' → logprob: -13.036067962646484

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9006648659706116
    2. '(' → logprob: -1.6506648063659668
    3. ')' → logprob: -1.6506648063659668
    4. '()' → logprob: -1.7756648063659668
    5. '('' → logprob: -4.025664806365967
    6. '(()' → logprob: -5.525664806365967
    7. '(""))' → logprob: -5.900664806365967
    8. '`()' → logprob: -5.900664806365967
    9. '```' → logprob: -6.525664806365967
    10. '()))' → logprob: -6.900664806365967

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00021224225929472595
    2. 'strip' → logprob: -8.500212669372559
    3. 'rstrip' → logprob: -12.125212669372559
    4. ' split' → logprob: -13.000212669372559
    5. 'read' → logprob: -14.875212669372559
    6. ')' → logprob: -15.000212669372559
    7. '(split' → logprob: -15.250212669372559
    8. 'spl' → logprob: -15.875212669372559
    9. 'startswith' → logprob: -17.375211715698242
    10. '_split' → logprob: -18.375211715698242

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13553567230701447
    2. '())' → logprob: -2.385535717010498
    3. '))' → logprob: -3.385535717010498
    4. '()' → logprob: -7.760535717010498
    5. '()))' → logprob: -8.26053524017334
    6. '`)' → logprob: -9.76053524017334
    7. '(' → logprob: -10.38553524017334
    8. ')`' → logprob: -10.51053524017334
    9. ')))' → logprob: -11.76053524017334
    10. ' )' → logprob: -11.76053524017334

Token 11: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01239827461540699
    2. '*' → logprob: -5.1373982429504395
    3. '#' → logprob: -5.5123982429504395
    4. '+
' → logprob: -7.2623982429504395
    5. ',' → logprob: -8.137398719787598
    6. '[' → logprob: -8.262398719787598
    7. '=' → logprob: -8.762398719787598
    8. 'a' → logprob: -9.012398719787598
    9. '-' → logprob: -9.137398719787598
    10. '**' → logprob: -9.637398719787598

Token 12: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03758130967617035
    2. 'a' → logprob: -3.537581205368042
    3. ' ' → logprob: -4.912581443786621
    4. ' b' → logprob: -7.912581443786621
    5. ' ' → logprob: -10.287581443786621
    6. ' not' → logprob: -10.787581443786621
    7. 'b' → logprob: -11.412581443786621
    8. ' (' → logprob: -12.162581443786621
    9. '  ' → logprob: -13.412581443786621
    10. '(a' → logprob: -13.912581443786621

Token 13: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07491619139909744
    2. '>' → logprob: -3.324916124343872
    3. ' <' → logprob: -4.199916362762451
    4. ' ' → logprob: -4.949916362762451
    5. ' ==' → logprob: -4.949916362762451
    6. ' >=' → logprob: -5.824916362762451
    7. ' <=' → logprob: -7.074916362762451
    8. '<' → logprob: -7.074916362762451
    9. '==' → logprob: -7.324916362762451
    10. ' !=' → logprob: -7.824916362762451

Token 14: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.20170265436172485
    2. 'b' → logprob: -1.70170259475708
    3. ' ' → logprob: -8.201703071594238
    4. '0' → logprob: -11.201703071594238
    5. '=' → logprob: -14.201703071594238
    6. '=b' → logprob: -15.076703071594238
    7. '>b' → logprob: -15.701703071594238
    8. 'space' → logprob: -16.076702117919922
    9. ' ' → logprob: -17.201702117919922
    10. '	b' → logprob: -17.326702117919922

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.082895273109898e-05
    2. ' :' → logprob: -10.875030517578125
    3. ':**' → logprob: -12.750030517578125
    4. '':' → logprob: -13.125030517578125
    5. '):' → logprob: -13.250030517578125
    6. ':
' → logprob: -13.250030517578125
    7. '>:' → logprob: -13.500030517578125
    8. '':'' → logprob: -14.250030517578125
    9. '":' → logprob: -15.000030517578125
    10. ':return' → logprob: -15.250030517578125

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0370813608169556
    2. '\n' → logprob: -1.0370813608169556
    3. 'print' → logprob: -2.662081241607666
    4. ' a' → logprob: -2.912081241607666
    5. ' 
' → logprob: -3.412081241607666
    6. '    
' → logprob: -3.912081241607666
    7. '"' → logprob: -4.037081241607666
    8. '    ' → logprob: -4.287081241607666
    9. ''' → logprob: -4.412081241607666
    10. '\' → logprob: -4.412081241607666

Token 17: ' a' (ID: 261)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4085730016231537
    2. 'print' → logprob: -1.158573031425476
    3. '   ' → logprob: -3.9085729122161865
    4. '```' → logprob: -7.658573150634766
    5. '    ' → logprob: -8.283573150634766
    6. ' a' → logprob: -8.533573150634766
    7. '\n' → logprob: -9.158573150634766
    8. '`' → logprob: -9.658573150634766
    9. ' `' → logprob: -9.908573150634766
    10. ' \' → logprob: -9.908573150634766

Token 18: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7078490257263184
    2. ' +=' → logprob: -1.5828490257263184
    3. '>' → logprob: -2.4578490257263184
    4. ' >' → logprob: -2.8328490257263184
    5. '=' → logprob: -2.9578490257263184
    6. '<' → logprob: -4.082849025726318
    7. ' ' → logprob: -4.207849025726318
    8. '+=' → logprob: -4.207849025726318
    9. ' =' → logprob: -4.707849025726318
    10. ' <' → logprob: -4.832849025726318

Token 19: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10021950304508209
    2. ' b' → logprob: -2.350219488143921
    3. '0' → logprob: -12.1002197265625
    4. ' ' → logprob: -12.9752197265625
    5. '	b' → logprob: -13.2252197265625
    6. '   ' → logprob: -13.9752197265625
    7. 'a' → logprob: -13.9752197265625
    8. '1' → logprob: -14.3502197265625
    9. ' a' → logprob: -15.4752197265625
    10. '    ' → logprob: -15.4752197265625

Token 20: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7311511039733887
    2. ' -' → logprob: -0.8561511039733887
    3. '+' → logprob: -3.1061511039733887
    4. ' +' → logprob: -3.2311511039733887
    5. '<|end|>' → logprob: -5.356151103973389
    6. ' ' → logprob: -6.231151103973389
    7. 'else' → logprob: -7.231151103973389
    8. ',' → logprob: -7.981151103973389
    9. ' *' → logprob: -7.981151103973389
    10. ' else' → logprob: -8.106151580810547

Token 21: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05538126453757286
    2. '1' → logprob: -3.5553812980651855
    3. ' b' → logprob: -3.6803812980651855
    4. ' ' → logprob: -9.305380821228027
    5. '	b' → logprob: -14.930380821228027
    6. '   ' → logprob: -15.180380821228027
    7. '>b' → logprob: -16.055381774902344
    8. '  ' → logprob: -16.930381774902344
    9. '2' → logprob: -16.930381774902344
    10. ' б' → logprob: -18.055381774902344

Token 22: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.021091463044285774
    2. '1' → logprob: -3.8960914611816406
    3. ' b' → logprob: -7.521091461181641
    4. ' ' → logprob: -11.77109146118164
    5. '	b' → logprob: -16.14609146118164
    6. '   ' → logprob: -17.27109146118164
    7. '2' → logprob: -17.27109146118164
    8. '  ' → logprob: -17.77109146118164
    9. '>b' → logprob: -17.89609146118164
    10. '10' → logprob: -18.89609146118164

Token 23: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.13757136464118958
    2. ' else' → logprob: -2.387571334838867
    3. '
' → logprob: -4.012571334838867
    4. '\n' → logprob: -5.262571334838867
    5. 'elif' → logprob: -5.512571334838867
    6. '<|end|>' → logprob: -5.637571334838867
    7. ' 
' → logprob: -6.887571334838867
    8. '    
' → logprob: -7.012571334838867
    9. '```' → logprob: -7.012571334838867
    10. ':' → logprob: -7.012571334838867

Token 24: 'print' (ID: 1598)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03580585867166519
    2. ' else' → logprob: -3.5358059406280518
    3. 'elif' → logprob: -5.785805702209473
    4. '<|end|>' → logprob: -6.785805702209473
    5. '
' → logprob: -7.410805702209473
    6. '    
' → logprob: -7.910805702209473
    7. '```' → logprob: -8.160805702209473
    8. ' 
' → logprob: -9.160805702209473
    9. '  
' → logprob: -9.660805702209473
    10. ' elif' → logprob: -9.660805702209473

Token 25: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16079938411712646
    2. '(a' → logprob: -1.9107993841171265
    3. '()' → logprob: -8.160799026489258
    4. '('' → logprob: -8.535799026489258
    5. '(b' → logprob: -10.035799026489258
    6. '("' → logprob: -10.910799026489258
    7. '("("' → logprob: -11.160799026489258
    8. '((' → logprob: -11.785799026489258
    9. '(max' → logprob: -13.160799026489258
    10. '(f' → logprob: -13.285799026489258

Token 26: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.75
    3. ' )' → logprob: -15.875
    4. '')' → logprob: -17.0
    5. '`)' → logprob: -17.375
    6. ')`' → logprob: -18.0
    7. ')
' → logprob: -18.625
    8. ')a' → logprob: -18.875
    9. '）' → logprob: -19.0
    10. ')b' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 24
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 19
Précision stricte (1ère position): 25.00%
Précision adaptée (1ère position): 25.00%
Précision (top 10): 79.17%
================================================================================
