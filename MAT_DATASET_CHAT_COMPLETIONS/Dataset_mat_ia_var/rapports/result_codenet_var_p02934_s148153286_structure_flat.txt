================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = [int(x) for x in input().split()]
c = 0
i = 0
while i < n:
    c += 1 / a[i]
    i += 1
print(1 / c)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9191706776618958
    2. 'i' → logprob: -1.169170618057251
    3. 'for' → logprob: -1.669170618057251
    4. 's' → logprob: -3.169170618057251
    5. '*' → logprob: -4.66917085647583
    6. ')' → logprob: -4.91917085647583
    7. 'x' → logprob: -5.04417085647583
    8. '#' → logprob: -5.16917085647583
    9. '`' → logprob: -5.16917085647583
    10. 'a' → logprob: -5.54417085647583

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030097683891654015
    2. ' =' → logprob: -4.405097484588623
    3. '=' → logprob: -5.405097484588623
    4. '[i' → logprob: -5.905097484588623
    5. 'r' → logprob: -6.030097484588623
    6. '.' → logprob: -6.655097484588623
    7. 'a' → logprob: -6.780097484588623
    8. '[a' → logprob: -7.030097484588623
    9. 'rray' → logprob: -7.280097484588623
    10. '[:]' → logprob: -7.530097484588623

Token 7: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6180571913719177
    2. ' []' → logprob: -1.1180572509765625
    3. 'list' → logprob: -2.7430572509765625
    4. ' [' → logprob: -3.4930572509765625
    5. ' list' → logprob: -4.1180572509765625
    6. '[' → logprob: -4.6180572509765625
    7. '[input' → logprob: -5.6180572509765625
    8. '[int' → logprob: -6.1180572509765625
    9. '[n' → logprob: -6.3680572509765625
    10. 'input' → logprob: -6.3680572509765625

Token 8: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0821039229631424
    2. '0' → logprob: -2.582103967666626
    3. ']' → logprob: -6.332103729248047
    4. ']int' → logprob: -6.832103729248047
    5. 'i' → logprob: -8.332103729248047
    6. ' int' → logprob: -9.832103729248047
    7. '(int' → logprob: -11.082103729248047
    8. ')' → logprob: -11.457103729248047
    9. '[int' → logprob: -11.457103729248047
    10. ' ' → logprob: -11.832103729248047

Token 9: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.056316398084163666
    2. '(input' → logprob: -2.931316375732422
    3. '(x' → logprob: -6.681316375732422
    4. '(i' → logprob: -9.931316375732422
    5. '(a' → logprob: -10.181316375732422
    6. '()' → logprob: -10.431316375732422
    7. '(
' → logprob: -11.306316375732422
    8. ')' → logprob: -11.431316375732422
    9. '(

' → logprob: -11.556316375732422
    10. '()]' → logprob: -11.806316375732422

Token 10: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016684409230947495
    2. '(input' → logprob: -4.391684532165527
    3. ')]' → logprob: -5.766684532165527
    4. 'input' → logprob: -7.391684532165527
    5. '(' → logprob: -8.766684532165527
    6. '(x' → logprob: -9.391684532165527
    7. ')])' → logprob: -10.141684532165527
    8. ' )' → logprob: -10.266684532165527
    9. '=input' → logprob: -10.641684532165527
    10. 'for' → logprob: -11.016684532165527

Token 11: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6651754379272461
    2. ' for' → logprob: -1.040175437927246
    3. ')' → logprob: -2.040175437927246
    4. ')]' → logprob: -6.915175437927246
    5. '(' → logprob: -8.040175437927246
    6. ']' → logprob: -8.165175437927246
    7. '(input' → logprob: -8.165175437927246
    8. ' )' → logprob: -8.540175437927246
    9. 'input' → logprob: -9.040175437927246
    10. '(x' → logprob: -9.790175437927246

Token 12: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08663899451494217
    2. 'input' → logprob: -2.836638927459717
    3. '<|end|>' → logprob: -4.211638927459717
    4. '(input' → logprob: -5.211638927459717
    5. ' ' → logprob: -6.336638927459717
    6. '=input' → logprob: -7.461638927459717
    7. '<|end|>' → logprob: -7.461638927459717
    8. ' range' → logprob: -7.461638927459717
    9. ' x' → logprob: -8.211639404296875
    10. 'range' → logprob: -9.586639404296875

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018215617164969444
    2. 'in' → logprob: -4.018215656280518
    3. '(' → logprob: -11.51821517944336
    4. '_' → logprob: -12.01821517944336
    5. 'import' → logprob: -12.01821517944336
    6. ' ' → logprob: -12.01821517944336
    7. '<|end|>' → logprob: -12.14321517944336
    8. ')' → logprob: -12.39321517944336
    9. 'a' → logprob: -12.51821517944336
    10. '(x' → logprob: -12.64321517944336

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132685720920563
    2. ' input' → logprob: -1.3132685422897339
    3. 'range' → logprob: -12.563268661499023
    4. '(input' → logprob: -12.938268661499023
    5. ' range' → logprob: -13.938268661499023
    6. '=input' → logprob: -17.563268661499023
    7. '<input' → logprob: -18.563268661499023
    8. ',input' → logprob: -18.938268661499023
    9. '	input' → logprob: -19.188268661499023
    10. '[input' → logprob: -19.438268661499023

Token 15: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.1091398373246193
    2. '()' → logprob: -2.484139919281006
    3. '())' → logprob: -3.984139919281006
    4. '().' → logprob: -6.859139919281006
    5. '()].' → logprob: -9.359139442443848
    6. ')]' → logprob: -9.484139442443848
    7. ']()' → logprob: -9.609139442443848
    8. '()][' → logprob: -10.359139442443848
    9. '(' → logprob: -10.609139442443848
    10. ']' → logprob: -10.734139442443848

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.596781946020201e-05
    2. 'strip' → logprob: -10.250045776367188
    3. 'rstrip' → logprob: -11.500045776367188
    4. ' split' → logprob: -15.125045776367188
    5. 'spl' → logprob: -16.750045776367188
    6. '(split' → logprob: -16.750045776367188
    7. 's' → logprob: -20.250045776367188
    8. 'sp' → logprob: -20.875045776367188
    9. ')' → logprob: -21.250045776367188
    10. '.split' → logprob: -21.625045776367188

Token 17: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.07102351635694504
    2. '())' → logprob: -3.071023464202881
    3. '()' → logprob: -4.446023464202881
    4. '(' → logprob: -4.821023464202881
    5. ')]' → logprob: -6.446023464202881
    6. '('' → logprob: -7.821023464202881
    7. ']' → logprob: -8.196023941040039
    8. '')]' → logprob: -9.821023941040039
    9. ')' → logprob: -9.946023941040039
    10. '`]' → logprob: -11.821023941040039

Token 18: 'c' (ID: 66)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6912578344345093
    2. 'a' → logprob: -1.0662578344345093
    3. 'c' → logprob: -2.566257953643799
    4. 'm' → logprob: -3.566257953643799
    5. 'b' → logprob: -4.816257953643799
    6. 'for' → logprob: -4.816257953643799
    7. 'd' → logprob: -5.566257953643799
    8. 'r' → logprob: -5.816257953643799
    9. 'sum' → logprob: -5.816257953643799
    10. 'p' → logprob: -5.941257953643799

Token 19: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.24174745380878448
    2. 'o' → logprob: -2.2417473793029785
    3. ' =' → logprob: -3.2417473793029785
    4. 'ounter' → logprob: -3.3667473793029785
    5. '=' → logprob: -4.1167473793029785
    6. '.' → logprob: -4.9917473793029785
    7. '[' → logprob: -5.8667473793029785
    8. 'ont' → logprob: -6.1167473793029785
    9. 'nt' → logprob: -6.6167473793029785
    10. '[:]' → logprob: -6.6167473793029785

Token 20: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6548871994018555
    2. '0' → logprob: -1.7798871994018555
    3. '[' → logprob: -2.1548871994018555
    4. ' {}' → logprob: -2.4048871994018555
    5. ' [' → logprob: -2.9048871994018555
    6. ' ' → logprob: -3.4048871994018555
    7. '{' → logprob: -4.9048871994018555
    8. 'a' → logprob: -4.9048871994018555
    9. ' []' → logprob: -7.2798871994018555
    10. '[a' → logprob: -7.2798871994018555

Token 21: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5955718755722046
    2. '{}' → logprob: -0.8455718755722046
    3. '0' → logprob: -4.470571994781494
    4. '{' → logprob: -5.220571994781494
    5. 'a' → logprob: -6.595571994781494
    6. '[a' → logprob: -7.470571994781494
    7. '[]' → logprob: -7.595571994781494
    8. '[len' → logprob: -10.220571517944336
    9. '{}
' → logprob: -10.345571517944336
    10. '[max' → logprob: -10.845571517944336

Token 22: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00029041420202702284
    2. 'f' → logprob: -8.625290870666504
    3. ' for' → logprob: -10.125290870666504
    4. '```' → logprob: -10.125290870666504
    5. 'i' → logprob: -11.125290870666504
    6. '\n' → logprob: -12.000290870666504
    7. 'b' → logprob: -13.125290870666504
    8. '\' → logprob: -13.625290870666504
    9. '`' → logprob: -13.875290870666504
    10. 'n' → logprob: -14.000290870666504

Token 23: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.448370838072151e-05
    2. '```' → logprob: -9.750094413757324
    3. 'f' → logprob: -10.625094413757324
    4. ' for' → logprob: -12.125094413757324
    5. 'i' → logprob: -12.375094413757324
    6. '\n' → logprob: -15.000094413757324
    7. '
' → logprob: -15.250094413757324
    8. '`' → logprob: -15.250094413757324
    9. 'd' → logprob: -15.500094413757324
    10. 'n' → logprob: -15.625094413757324

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1103367805480957
    2. '+' → logprob: -1.6103367805480957
    3. ' ' → logprob: -1.6103367805480957
    4. ' =' → logprob: -1.8603367805480957
    5. ' +=' → logprob: -2.4853367805480957
    6. '+=' → logprob: -4.360336780548096
    7. 'f' → logprob: -5.110336780548096
    8. ' <' → logprob: -5.610336780548096
    9. 'n' → logprob: -5.860336780548096
    10. '<' → logprob: -6.360336780548096

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3486666679382324
    2. ' ' → logprob: -1.2236666679382324
    3. '1' → logprob: -8.47366714477539
    4. ' n' → logprob: -12.22366714477539
    5. '2' → logprob: -12.84866714477539
    6. 'n' → logprob: -12.97366714477539
    7. ' c' → logprob: -13.59866714477539
    8. 'c' → logprob: -14.09866714477539
    9. 'a' → logprob: -15.47366714477539
    10. ' -' → logprob: -15.53616714477539

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018504624022170901
    2. ' ' → logprob: -6.876850605010986
    3. '1' → logprob: -7.126850605010986
    4. 'n' → logprob: -11.876850128173828
    5. '2' → logprob: -12.626850128173828
    6. 'i' → logprob: -14.251850128173828
    7. 'c' → logprob: -14.251850128173828
    8. '-' → logprob: -14.501850128173828
    9. 'a' → logprob: -14.751850128173828
    10. ' n' → logprob: -15.126850128173828

Token 27: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4720178544521332
    2. ' while' → logprob: -1.7220178842544556
    3. ':' → logprob: -2.597017765045166
    4. '<|end|>' → logprob: -2.722017765045166
    5. '
' → logprob: -4.097017765045166
    6. ' ' → logprob: -4.597017765045166
    7. '\n' → logprob: -4.722017765045166
    8. '```' → logprob: -5.347017765045166
    9. '\' → logprob: -5.597017765045166
    10. ',' → logprob: -5.847017765045166

Token 28: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5788853168487549
    2. ' while' → logprob: -1.5788853168487549
    3. '<|end|>' → logprob: -2.078885316848755
    4. ' ' → logprob: -3.328885316848755
    5. '
' → logprob: -3.578885316848755
    6. ':' → logprob: -3.578885316848755
    7. ',' → logprob: -5.453885078430176
    8. ' 
' → logprob: -6.078885078430176
    9. '```' → logprob: -6.078885078430176
    10. ')' → logprob: -6.578885078430176

Token 29: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004659384489059448
    2. 'i' → logprob: -5.379659175872803
    3. ' c' → logprob: -10.879659652709961
    4. ' ' → logprob: -11.379659652709961
    5. 'c' → logprob: -12.879659652709961
    6. ' ' → logprob: -12.879659652709961
    7. '(i' → logprob: -13.629659652709961
    8. ' n' → logprob: -14.129659652709961
    9. '	i' → logprob: -14.254659652709961
    10. ' (' → logprob: -15.004659652709961

Token 30: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.007321697659790516
    2. '<' → logprob: -5.007321834564209
    3. ' <=' → logprob: -7.882321834564209
    4. ' ' → logprob: -8.63232135772705
    5. ' <
' → logprob: -10.63232135772705
    6. '<=' → logprob: -12.38232135772705
    7. '<len' → logprob: -12.38232135772705
    8. '<n' → logprob: -12.63232135772705
    9. ' !=' → logprob: -12.88232135772705
    10. ' \<' → logprob: -13.13232135772705

Token 31: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.14271515607833862
    2. 'n' → logprob: -2.0177152156829834
    3. ' len' → logprob: -11.142715454101562
    4. ' ' → logprob: -11.142715454101562
    5. 'len' → logprob: -11.517715454101562
    6. 'a' → logprob: -14.892715454101562
    7. '	n' → logprob: -15.892715454101562
    8. '(n' → logprob: -16.142715454101562
    9. 'c' → logprob: -16.142715454101562
    10. 'i' → logprob: -16.517715454101562

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0050496906042099
    2. ' :' → logprob: -5.505049705505371
    3. ' and' → logprob: -7.505049705505371
    4. ':
' → logprob: -8.005049705505371
    5. ' ' → logprob: -10.255049705505371
    6. ' :
' → logprob: -10.880049705505371
    7. ':**' → logprob: -11.380049705505371
    8. 'and' → logprob: -11.880049705505371
    9. '   ' → logprob: -12.505049705505371
    10. '+:' → logprob: -12.630049705505371

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48339226841926575
    2. ' ' → logprob: -1.2333922386169434
    3. '    ' → logprob: -3.1083922386169434
    4. ' if' → logprob: -3.9833922386169434
    5. 'if' → logprob: -4.608392238616943
    6. '  ' → logprob: -4.858392238616943
    7. ' i' → logprob: -5.733392238616943
    8. 'i' → logprob: -6.983392238616943
    9. 'a' → logprob: -7.233392238616943
    10. ' ,' → logprob: -7.733392238616943

Token 34: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.572884202003479
    2. '   ' → logprob: -1.197884202003479
    3. ' if' → logprob: -2.5728840827941895
    4. 'a' → logprob: -3.6978840827941895
    5. 'c' (adapté à ' c') → logprob: -4.0728840827941895
    6. 'i' → logprob: -5.4478840827941895
    7. ' ' → logprob: -5.8228840827941895
    8. ' c' → logprob: -6.0728840827941895
    9. 'j' → logprob: -6.3228840827941895
    10. ' a' → logprob: -6.4478840827941895

Token 35: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03269200772047043
    2. '+=' → logprob: -3.5326919555664062
    3. '+' → logprob: -6.282691955566406
    4. ' ==' → logprob: -7.907691955566406
    5. ' ' → logprob: -8.407691955566406
    6. ' =' → logprob: -8.407691955566406
    7. ' +' → logprob: -8.907691955566406
    8. '=' → logprob: -10.032691955566406
    9. '==' → logprob: -10.657691955566406
    10. ' <=' → logprob: -11.907691955566406

Token 36: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.017126044258475304
    2. ' a' → logprob: -4.142126083374023
    3. '1' → logprob: -6.892126083374023
    4. ' ' → logprob: -9.767126083374023
    5. '(a' → logprob: -12.017126083374023
    6. 'i' → logprob: -12.267126083374023
    7. '	a' → logprob: -13.642126083374023
    8. '   ' → logprob: -13.767126083374023
    9. 'c' → logprob: -14.142126083374023
    10. '2' → logprob: -14.267126083374023

Token 37: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001419399632140994
    2. '1' → logprob: -6.626419544219971
    3. '(a' → logprob: -10.251419067382812
    4. 'i' → logprob: -10.751419067382812
    5. ' a' → logprob: -11.126419067382812
    6. 'abs' → logprob: -12.001419067382812
    7. 'max' → logprob: -12.251419067382812
    8. 'c' → logprob: -12.751419067382812
    9. '(' → logprob: -13.001419067382812
    10. 'int' → logprob: -13.751419067382812

Token 38: ' /' (ID: 820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6271929144859314
    2. ' if' → logprob: -1.6271929740905762
    3. 'if' → logprob: -1.6271929740905762
    4. 'i' → logprob: -3.002192974090576
    5. ' ' → logprob: -4.877192974090576
    6. '
' → logprob: -6.002192974090576
    7. ' i' → logprob: -6.127192974090576
    8. '[i' → logprob: -6.252192974090576
    9. '    
' → logprob: -6.377192974090576
    10. '<|end|>' → logprob: -6.752192974090576

Token 39: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006876522093079984
    2. ' a' → logprob: -7.375687599182129
    3. '(a' → logprob: -10.750687599182129
    4. '2' → logprob: -11.000687599182129
    5. '(' → logprob: -11.375687599182129
    6. ' ' → logprob: -12.375687599182129
    7. '   ' → logprob: -13.000687599182129
    8. ' (' → logprob: -13.500687599182129
    9. 'c' → logprob: -13.750687599182129
    10. '10' → logprob: -14.875687599182129

Token 40: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001817297888919711
    2. '[' → logprob: -8.625182151794434
    3. 'i' → logprob: -13.500182151794434
    4. '[a' → logprob: -15.250182151794434
    5. '[c' → logprob: -15.500182151794434
    6. ' [' → logprob: -16.250181198120117
    7. '[j' → logprob: -17.125181198120117
    8. '[x' → logprob: -17.500181198120117
    9. '[s' → logprob: -17.500181198120117
    10. ' ' → logprob: -17.875181198120117

Token 41: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008201113669201732
    2. '[i' → logprob: -8.00082015991211
    3. ')' → logprob: -8.50082015991211
    4. ']
' → logprob: -9.37582015991211
    5. ' ]' → logprob: -9.50082015991211
    6. ')]' → logprob: -9.50082015991211
    7. '])' → logprob: -10.87582015991211
    8. '[' → logprob: -11.37582015991211
    9. ']
' → logprob: -12.50082015991211
    10. ']*' → logprob: -13.12582015991211

Token 42: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7176364660263062
    2. '   ' → logprob: -0.9676364660263062
    3. ' i' → logprob: -2.3426365852355957
    4. '+' → logprob: -3.7176365852355957
    5. '[i' → logprob: -5.967636585235596
    6. '*i' → logprob: -6.092636585235596
    7. '  ' → logprob: -6.342636585235596
    8. '    
' → logprob: -6.967636585235596
    9. '	i' → logprob: -7.092636585235596
    10. ' ' → logprob: -7.217636585235596

Token 43: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.02951509691774845
    2. '   ' → logprob: -4.279515266418457
    3. ' i' → logprob: -4.529515266418457
    4. 'if' → logprob: -5.654515266418457
    5. ' if' → logprob: -7.154515266418457
    6. ' ' → logprob: -9.779515266418457
    7. '  ' → logprob: -10.404515266418457
    8. '    
' → logprob: -10.404515266418457
    9. ' 
' → logprob: -11.154515266418457
    10. '    ' → logprob: -11.654515266418457

Token 44: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17654110491275787
    2. '+' → logprob: -2.0515410900115967
    3. ' +=' → logprob: -3.4265410900115967
    4. '++' → logprob: -7.426541328430176
    5. '<|end|>' → logprob: -9.426541328430176
    6. '+++' → logprob: -9.926541328430176
    7. '+='' → logprob: -10.676541328430176
    8. ' +' → logprob: -11.176541328430176
    9. '+="' → logprob: -11.301541328430176
    10. '=' → logprob: -11.551541328430176

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '```' → logprob: -17.500295639038086
    4. '   ' → logprob: -18.750295639038086
    5. ' ' → logprob: -19.750295639038086
    6. '2' → logprob: -19.875295639038086
    7. '+' → logprob: -20.000295639038086
    8. '１' → logprob: -20.187795639038086
    9. '0' → logprob: -20.250295639038086
    10. '۱' → logprob: -20.562795639038086

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '2' → logprob: -15.000012397766113
    4. '```' → logprob: -17.125011444091797
    5. 'a' → logprob: -17.625011444091797
    6. '3' → logprob: -18.250011444091797
    7. '   ' → logprob: -18.500011444091797
    8. '4' → logprob: -18.812511444091797
    9. '<|end|>' → logprob: -19.062511444091797
    10. '+' → logprob: -19.312511444091797

Token 47: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.48380863666534424
    2. '
' → logprob: -1.6088086366653442
    3. 'h' → logprob: -2.7338085174560547
    4. ')' → logprob: -3.1088085174560547
    5. 'n' → logprob: -4.233808517456055
    6. '/' → logprob: -4.858808517456055
    7. 'b' → logprob: -4.858808517456055
    8. '\n' → logprob: -4.858808517456055
    9. '#' → logprob: -4.983808517456055
    10. 'p' → logprob: -5.108808517456055

Token 48: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6153809428215027
    2. 'h' → logprob: -0.8653809428215027
    3. 'result' → logprob: -4.240380764007568
    4. 'p' → logprob: -4.615380764007568
    5. 'm' → logprob: -5.990380764007568
    6. ')' → logprob: -6.365380764007568
    7. 'b' → logprob: -6.365380764007568
    8. 'r' → logprob: -6.615380764007568
    9. '
' → logprob: -6.740380764007568
    10. '#' → logprob: -7.115380764007568

Token 49: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007811574032530189
    2. '(round' → logprob: -7.750781059265137
    3. '()' → logprob: -8.875781059265137
    4. '(sum' → logprob: -9.625781059265137
    5. '((' → logprob: -10.250781059265137
    6. '(c' → logprob: -10.250781059265137
    7. '('' → logprob: -10.500781059265137
    8. '(
' → logprob: -11.125781059265137
    9. '("("' → logprob: -11.625781059265137
    10. '(

' → logprob: -11.875781059265137

Token 50: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47591784596443176
    2. '1' → logprob: -0.9759178161621094
    3. 'n' → logprob: -7.475917816162109
    4. 'round' → logprob: -7.975917816162109
    5. ')' → logprob: -8.10091781616211
    6. '(' → logprob: -8.85091781616211
    7. 'len' → logprob: -9.47591781616211
    8. '3' → logprob: -9.72591781616211
    9. ' c' → logprob: -10.22591781616211
    10. ' ' → logprob: -10.35091781616211

Token 51: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.011247524991631508
    2. ' /' → logprob: -4.511247634887695
    3. '/c' → logprob: -8.636247634887695
    4. ')' → logprob: -11.261247634887695
    5. '/)' → logprob: -12.136247634887695
    6. '/(' → logprob: -12.886247634887695
    7. '/')' → logprob: -14.886247634887695
    8. '/

' → logprob: -15.136247634887695
    9. '/
' → logprob: -15.636247634887695
    10. ' ' → logprob: -16.261247634887695

Token 52: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1472419600977446e-06
    2. ' c' → logprob: -13.750000953674316
    3. ')c' → logprob: -17.625001907348633
    4. '   ' → logprob: -19.125001907348633
    5. 'с' → logprob: -19.750001907348633
    6. '	c' → logprob: -20.625001907348633
    7. ')' → logprob: -21.000001907348633
    8. '%c' → logprob: -22.000001907348633
    9. '```' → logprob: -22.500001907348633
    10. ' ' → logprob: -22.625001907348633

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '))' → logprob: -14.125000953674316
    3. ' )' → logprob: -16.250001907348633
    4. ')`' → logprob: -17.250001907348633
    5. ')
' → logprob: -17.375001907348633
    6. '`)' → logprob: -19.875001907348633
    7. ')))' → logprob: -20.000001907348633
    8. '')' → logprob: -20.375001907348633
    9. '）' → logprob: -20.375001907348633
    10. '),' → logprob: -21.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 51
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 31.37%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 90.20%
================================================================================
