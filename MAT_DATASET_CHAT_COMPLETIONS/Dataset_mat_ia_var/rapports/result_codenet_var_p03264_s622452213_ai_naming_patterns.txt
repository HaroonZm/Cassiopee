================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_value = int(input())
half_value = user_input_value // 2
is_odd_value = user_input_value % 2

if is_odd_value:
    result_value = half_value * (half_value + 1)
else:
    result_value = half_value ** 2

print(result_value)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31462135910987854
    2. '[' → logprob: -2.1896214485168457
    3. '.' → logprob: -2.8146214485168457
    4. '=' → logprob: -2.9396214485168457
    5. ')' → logprob: -4.064621448516846
    6. '```' → logprob: -4.689621448516846
    7. ' ' → logprob: -5.064621448516846
    8. ']' → logprob: -5.689621448516846
    9. ' =' → logprob: -5.689621448516846
    10. '+' → logprob: -6.689621448516846

Token 4: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.1419508457183838
    2. ' "' → logprob: -1.6419508457183838
    3. ' ' → logprob: -1.7669508457183838
    4. 'input' → logprob: -1.8919508457183838
    5. '"' → logprob: -2.266950845718384
    6. ' '' → logprob: -3.766950845718384
    7. ' ""' → logprob: -4.516950607299805
    8. ''' → logprob: -4.891950607299805
    9. '""' → logprob: -5.016950607299805
    10. ' ''' → logprob: -5.141950607299805

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009724093601107597
    2. '(user' → logprob: -5.384724140167236
    3. 'user' → logprob: -6.134724140167236
    4. '```' → logprob: -6.884724140167236
    5. ''' → logprob: -8.009723663330078
    6. '[' → logprob: -8.134723663330078
    7. '`' → logprob: -8.134723663330078
    8. '_' → logprob: -8.634723663330078
    9. '("("' → logprob: -8.759723663330078
    10. '_user' → logprob: -9.134723663330078

Token 6: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016182884573936462
    2. ')' → logprob: -7.376618385314941
    3. '()' → logprob: -7.626618385314941
    4. '('' → logprob: -8.626618385314941
    5. '("("' → logprob: -9.126618385314941
    6. '())' → logprob: -9.876618385314941
    7. '(
' → logprob: -10.126618385314941
    8. '(user' → logprob: -10.751618385314941
    9. '))' → logprob: -11.376618385314941
    10. '(""))' → logprob: -11.376618385314941

Token 7: 'half' (ID: 52836)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20858588814735413
    2. '*' → logprob: -1.8335858583450317
    3. ')' → logprob: -4.583585739135742
    4. 'if' → logprob: -5.083585739135742
    5. '%' → logprob: -5.833585739135742
    6. ' ' → logprob: -6.458585739135742
    7. '#' → logprob: -6.958585739135742
    8. '\' → logprob: -6.958585739135742
    9. ' if' → logprob: -7.333585739135742
    10. ' +' → logprob: -7.333585739135742

Token 8: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011323315091431141
    2. '(' → logprob: -4.63632345199585
    3. '_value' → logprob: -8.136322975158691
    4. '_half' → logprob: -8.136322975158691
    5. '_user' → logprob: -8.636322975158691
    6. '_length' → logprob: -8.886322975158691
    7. '(_)' → logprob: -9.136322975158691
    8. '_size' → logprob: -9.136322975158691
    9. 's' → logprob: -10.011322975158691
    10. '('_' → logprob: -10.136322975158691

Token 9: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015146038495004177
    2. '(' → logprob: -5.765146255493164
    3. '=' → logprob: -6.015146255493164
    4. ' =' → logprob: -6.265146255493164
    5. '*' → logprob: -6.515146255493164
    6. ')' → logprob: -6.765146255493164
    7. '()' → logprob: -6.890146255493164
    8. '//' → logprob: -7.140146255493164
    9. '```' → logprob: -7.390146255493164
    10. ' //' → logprob: -7.890146255493164

Token 10: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.0067167943343520164
    2. 'user' → logprob: -5.006716728210449
    3. ' ' → logprob: -13.75671672821045
    4. '(user' → logprob: -15.38171672821045
    5. ' len' → logprob: -17.256717681884766
    6. ' int' → logprob: -17.756717681884766
    7. ' half' → logprob: -17.881717681884766
    8. '"user' → logprob: -18.381717681884766
    9. 'int' → logprob: -18.506717681884766
    10. ' value' → logprob: -18.756717681884766

Token 11: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.10413332283496857
    2. '_value' → logprob: -2.354133367538452
    3. '_' → logprob: -5.604133129119873
    4. '```' → logprob: -9.854133605957031
    5. '_output' → logprob: -10.104133605957031
    6. '_val' → logprob: -10.104133605957031
    7. ' _' → logprob: -10.229133605957031
    8. '__' → logprob: -11.729133605957031
    9. ')_' → logprob: -11.729133605957031
    10. '_inputs' → logprob: -12.229133605957031

Token 12: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0026886097621172667
    2. '_' → logprob: -6.002688407897949
    3. '_val' → logprob: -8.50268840789795
    4. '_values' → logprob: -12.25268840789795
    5. '_v' → logprob: -14.25268840789795
    6. ' _' → logprob: -14.62768840789795
    7. '__' → logprob: -14.87768840789795
    8. '_Value' → logprob: -14.87768840789795
    9. '```' → logprob: -15.00268840789795
    10. '_VALUE' → logprob: -15.25268840789795

Token 13: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.32595041394233704
    2. '//' → logprob: -1.3259503841400146
    3. '_' → logprob: -5.825950622558594
    4. '```' → logprob: -5.825950622558594
    5. '`' → logprob: -6.075950622558594
    6. '/' → logprob: -6.075950622558594
    7. ' ' → logprob: -7.450950622558594
    8. ' /' → logprob: -7.575950622558594
    9. ')' → logprob: -7.950950622558594
    10. '"' → logprob: -8.700950622558594

Token 14: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012570773833431304
    2. ' ' → logprob: -9.000125885009766
    3. '```' → logprob: -13.125125885009766
    4. '   ' → logprob: -16.500125885009766
    5. '۲' → logprob: -16.625125885009766
    6. '  ' → logprob: -17.687625885009766
    7. '２' → logprob: -17.875125885009766
    8. '٢' → logprob: -18.062625885009766
    9. '3' → logprob: -18.250125885009766
    10. '२' → logprob: -18.500125885009766

Token 15: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.625004768371582
    3. '```' → logprob: -13.250004768371582
    4. '۲' → logprob: -17.5000057220459
    5. '   ' → logprob: -17.6250057220459
    6. '２' → logprob: -18.5000057220459
    7. '٢' → logprob: -18.7500057220459
    8. '`' → logprob: -19.1250057220459
    9. '२' → logprob: -19.3125057220459
    10. '  ' → logprob: -19.5625057220459

Token 16: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5096291899681091
    2. 'if' → logprob: -2.009629249572754
    3. '*' → logprob: -2.634629249572754
    4. '+
' → logprob: -2.634629249572754
    5. 'print' → logprob: -2.759629249572754
    6. '
' → logprob: -3.634629249572754
    7. '#' → logprob: -5.134629249572754
    8. ' if' → logprob: -5.134629249572754
    9. 'result' → logprob: -5.759629249572754
    10. ' 
' → logprob: -5.759629249572754

Token 17: 'is' (ID: 276)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4023946523666382
    2. 'if' → logprob: -1.4023946523666382
    3. 'for' → logprob: -3.2773947715759277
    4. 'result' → logprob: -3.6523947715759277
    5. '+' → logprob: -5.152394771575928
    6. '#' → logprob: -5.527394771575928
    7. '*' → logprob: -5.527394771575928
    8. '
' → logprob: -6.652394771575928
    9. ' if' → logprob: -7.027394771575928
    10. 'n' → logprob: -7.277394771575928

Token 18: '_' (ID: 62)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6672322154045105
    2. '_' → logprob: -1.9172322750091553
    3. ' _' → logprob: -2.2922322750091553
    4. ' half' → logprob: -2.5422322750091553
    5. ' even' → logprob: -3.0422322750091553
    6. '_half' → logprob: -3.1672322750091553
    7. '_even' → logprob: -3.4172322750091553
    8. '_valid' → logprob: -4.417232036590576
    9. 'half' → logprob: -4.917232036590576
    10. 'even' → logprob: -5.792232036590576

Token 19: 'odd' (ID: 18303)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.4129929542541504
    2. 'half' → logprob: -1.1629929542541504
    3. 'prime' → logprob: -3.9129929542541504
    4. 'odd' → logprob: -5.78799295425415
    5. 'pal' → logprob: -7.03799295425415
    6. '_even' → logprob: -7.66299295425415
    7. 'valid' → logprob: -8.037992477416992
    8. 'positive' → logprob: -8.162992477416992
    9. 'greater' → logprob: -8.412992477416992
    10. 'perfect' → logprob: -8.662992477416992

Token 20: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18301253020763397
    2. '_' → logprob: -2.1830124855041504
    3. '=' → logprob: -2.9330124855041504
    4. '_space' → logprob: -7.43301248550415
    5. ' ' → logprob: -9.183012962341309
    6. '_value' → logprob: -9.308012962341309
    7. ' _' → logprob: -9.808012962341309
    8. ')' → logprob: -9.933012962341309
    9. '_=' → logprob: -9.933012962341309
    10. 's' → logprob: -9.933012962341309

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004710295703262091
    2. '=' → logprob: -5.3797101974487305
    3. '_' → logprob: -9.62971019744873
    4. ' ==' → logprob: -11.37971019744873
    5. ' ' → logprob: -11.50471019744873
    6. ' _' → logprob: -13.75471019744873
    7. '  ' → logprob: -14.87971019744873
    8. ')' → logprob: -15.37971019744873
    9. ' =)' → logprob: -15.75471019744873
    10. ' ' → logprob: -15.87971019744873

Token 22: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.03809841349720955
    2. 'user' → logprob: -3.2880983352661133
    3. ' ' → logprob: -10.038098335266113
    4. '(user' → logprob: -11.663098335266113
    5. ' (' → logprob: -13.788098335266113
    6. '  ' → logprob: -14.288098335266113
    7. '	user' → logprob: -14.538098335266113
    8. ' ' → logprob: -14.538098335266113
    9. ' bool' → logprob: -14.788098335266113
    10. '"user' → logprob: -14.913098335266113

Token 23: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.07950422167778015
    2. '_value' → logprob: -2.5795042514801025
    3. '_' → logprob: -7.579504013061523
    4. '_output' → logprob: -10.204504013061523
    5. '__' → logprob: -11.204504013061523
    6. '_val' → logprob: -11.329504013061523
    7. '```' → logprob: -11.579504013061523
    8. '_s' → logprob: -11.829504013061523
    9. '_user' → logprob: -12.704504013061523
    10. ' _' → logprob: -12.704504013061523

Token 24: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.988221684878226e-06
    2. '_val' → logprob: -12.375006675720215
    3. '_' → logprob: -13.000006675720215
    4. 'value' → logprob: -16.37500762939453
    5. '_VALUE' → logprob: -16.50000762939453
    6. '_Value' → logprob: -16.62500762939453
    7. '_values' → logprob: -17.00000762939453
    8. '_is' → logprob: -17.50000762939453
    9. 'Value' → logprob: -17.75000762939453
    10. '```' → logprob: -18.00000762939453

Token 25: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2016095072031021
    2. '%' → logprob: -1.701609492301941
    3. '```' → logprob: -9.45160961151123
    4. ' ' → logprob: -10.07660961151123
    5. '`' → logprob: -10.57660961151123
    6. ' ' → logprob: -11.07660961151123
    7. ' `%' → logprob: -11.82660961151123
    8. '4' → logprob: -12.57660961151123
    9. '1' → logprob: -12.82660961151123
    10. '2' → logprob: -12.82660961151123

Token 26: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04858759790658951
    2. ' ' → logprob: -3.0485875606536865
    3. '```' → logprob: -15.298587799072266
    4. ' ' → logprob: -17.548587799072266
    5. '۲' → logprob: -17.923587799072266
    6. '1' → logprob: -18.548587799072266
    7. '٢' → logprob: -19.173587799072266
    8. '２' → logprob: -19.423587799072266
    9. '  ' → logprob: -19.611087799072266
    10. '3' → logprob: -19.673587799072266

Token 27: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -15.875000953674316
    4. '   ' → logprob: -19.000001907348633
    5. '۲' → logprob: -19.000001907348633
    6. '٢' → logprob: -20.000001907348633
    7. '1' → logprob: -20.625001907348633
    8. '２' → logprob: -20.750001907348633
    9. '२' → logprob: -20.875001907348633
    10. '`' → logprob: -20.875001907348633

Token 28: '

' (ID: 279)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10573772341012955
    2. ' ==' → logprob: -2.4807376861572266
    3. ' ' → logprob: -4.480737686157227
    4. '!=' → logprob: -6.105737686157227
    5. '>' → logprob: -7.230737686157227
    6. ' ' → logprob: -7.480737686157227
    7. ' >' → logprob: -7.605737686157227
    8. '==' → logprob: -7.855737686157227
    9. '1' → logprob: -8.230737686157227
    10. ' =' → logprob: -8.980737686157227

Token 29: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.049952175468206406
    2. '
' → logprob: -4.049952030181885
    3. ' if' → logprob: -4.424952030181885
    4. '```' → logprob: -4.674952030181885
    5. '\n' → logprob: -5.674952030181885
    6. 'i' → logprob: -5.799952030181885
    7. '\' → logprob: -7.549952030181885
    8. ':' → logprob: -7.799952030181885
    9. 'print' → logprob: -7.924952030181885
    10. '`' → logprob: -8.174952507019043

Token 30: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.67050701379776
    2. ' user' → logprob: -1.1705069541931152
    3. ' half' → logprob: -2.1705069541931152
    4. ' ' → logprob: -2.7955069541931152
    5. ' ' → logprob: -6.045506954193115
    6. 'user' → logprob: -7.920506954193115
    7. 'half' → logprob: -8.545507431030273
    8. 'is' → logprob: -9.295507431030273
    9. ' not' → logprob: -10.045507431030273
    10. '  ' → logprob: -10.795507431030273

Token 31: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.842555426876061e-06
    2. '_od' → logprob: -12.625004768371582
    3. '_o' → logprob: -13.625004768371582
    4. '_value' → logprob: -17.2500057220459
    5. '_even' → logprob: -17.3750057220459
    6. '_oc' → logprob: -18.1250057220459
    7. '_s' → logprob: -18.5000057220459
    8. '_a' → logprob: -18.5000057220459
    9. ' _' → logprob: -18.5000057220459
    10. '_ob' → logprob: -18.7500057220459

Token 32: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -6.704273118884885e-07
    2. 'od' → logprob: -14.500000953674316
    3. ' odd' → logprob: -16.75
    4. '_' → logprob: -16.875
    5. 'oddi' → logprob: -18.0
    6. 'ood' → logprob: -18.125
    7. 'Odd' → logprob: -18.125
    8. 'old' → logprob: -18.75
    9. '```' → logprob: -19.375
    10. 'o' → logprob: -19.625

Token 33: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0001825642102630809
    2. '_val' → logprob: -9.250182151794434
    3. '_' → logprob: -9.375182151794434
    4. ' _' → logprob: -15.000182151794434
    5. '__' → logprob: -15.250182151794434
    6. '_values' → logprob: -15.375182151794434
    7. '_Value' → logprob: -15.500182151794434
    8. '_v' → logprob: -15.625182151794434
    9. ')_' → logprob: -16.37518310546875
    10. '\' → logprob: -16.62518310546875

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3631652891635895
    2. ' !=' → logprob: -1.613165259361267
    3. ' ==' → logprob: -2.6131653785705566
    4. ' :' → logprob: -3.6131653785705566
    5. ' >' → logprob: -5.863165378570557
    6. '>' → logprob: -6.988165378570557
    7. '==' → logprob: -7.488165378570557
    8. '!=' → logprob: -7.488165378570557
    9. ' ' → logprob: -9.863164901733398
    10. '>:' → logprob: -10.863164901733398

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9758462905883789
    2. ' print' → logprob: -1.100846290588379
    3. ':' → logprob: -1.475846290588379
    4. '    ' → logprob: -3.100846290588379
    5. 'print' → logprob: -5.225846290588379
    6. ' :' → logprob: -5.475846290588379
    7. ' ' → logprob: -5.850846290588379
    8. ':
' → logprob: -6.975846290588379
    9. ' :
' → logprob: -7.225846290588379
    10. ' 
' → logprob: -8.100846290588379

Token 36: ' result' (ID: 1534)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0019938242621719837
    2. 'print' → logprob: -6.376993656158447
    3. '    ' → logprob: -8.376994132995605
    4. '   ' → logprob: -10.251994132995605
    5. ' ' → logprob: -12.001994132995605
    6. ' pass' → logprob: -12.501994132995605
    7. ' 
' → logprob: -12.751994132995605
    8. '```' → logprob: -13.251994132995605
    9. ' ```' → logprob: -13.251994132995605
    10. ' for' → logprob: -13.626994132995605

Token 37: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014799612574279308
    2. '=' → logprob: -4.88979959487915
    3. ' +=' → logprob: -5.51479959487915
    4. '_' → logprob: -5.88979959487915
    5. ' ' → logprob: -8.139800071716309
    6. 's' → logprob: -10.889800071716309
    7. '+=' → logprob: -11.139800071716309
    8. ' |=' → logprob: -12.014800071716309
    9. ' *=' → logprob: -12.264800071716309
    10. ':' → logprob: -12.264800071716309

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00917556881904602
    2. ' +=' → logprob: -5.134175777435303
    3. '=' → logprob: -5.759175777435303
    4. ' ' → logprob: -9.759175300598145
    5. '+=' → logprob: -11.384175300598145
    6. ' *=' → logprob: -11.884175300598145
    7. '_' → logprob: -12.134175300598145
    8. ' -=' → logprob: -13.134175300598145
    9. ' ==' → logprob: -14.009175300598145
    10. ' |=' → logprob: -14.009175300598145

Token 39: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.3704070746898651
    2. ' half' → logprob: -1.6204071044921875
    3. 'user' → logprob: -2.7454071044921875
    4. ' user' → logprob: -3.8704071044921875
    5. '(' → logprob: -4.9954071044921875
    6. ' (' → logprob: -5.1204071044921875
    7. '"' → logprob: -5.1204071044921875
    8. '(user' → logprob: -5.4954071044921875
    9. '"user' → logprob: -6.6204071044921875
    10. ' ' → logprob: -7.4954071044921875

Token 40: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1637164789135568e-05
    2. '_val' → logprob: -11.625011444091797
    3. '_' → logprob: -13.000011444091797
    4. ' _' → logprob: -16.125011444091797
    5. '_values' → logprob: -16.625011444091797
    6. '_v' → logprob: -17.125011444091797
    7. 's' → logprob: -17.375011444091797
    8. 'value' → logprob: -17.500011444091797
    9. '_user' → logprob: -17.500011444091797
    10. '_va' → logprob: -17.500011444091797

Token 41: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1045883446931839
    2. '+' → logprob: -2.479588270187378
    3. ' *' → logprob: -4.479588508605957
    4. '*' → logprob: -5.479588508605957
    5. '1' → logprob: -12.354588508605957
    6. '2' → logprob: -12.854588508605957
    7. ' plus' → logprob: -12.979588508605957
    8. ' +
' → logprob: -13.354588508605957
    9. ' ' → logprob: -13.729588508605957
    10. '_' → logprob: -13.729588508605957

Token 42: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10215140134096146
    2. 'half' → logprob: -2.477151393890381
    3. 'user' → logprob: -4.727151393890381
    4. ' ' → logprob: -6.352151393890381
    5. ' half' → logprob: -7.352151393890381
    6. '*' → logprob: -7.352151393890381
    7. '10' → logprob: -7.977151393890381
    8. '3' → logprob: -8.102151870727539
    9. '(' → logprob: -8.852151870727539
    10. '1' → logprob: -9.102151870727539

Token 43: 'half' (ID: 52836)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.40221545100212097
    2. 'half' → logprob: -1.6522154808044434
    3. '(' → logprob: -2.1522154808044434
    4. 'user' → logprob: -4.027215480804443
    5. ')' → logprob: -6.152215480804443
    6. '1' → logprob: -7.527215480804443
    7. 'hal' → logprob: -7.777215480804443
    8. '3' → logprob: -7.902215480804443
    9. 'result' → logprob: -8.027215003967285
    10. ' half' → logprob: -8.402215003967285

Token 44: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.666993507067673e-05
    2. '+' → logprob: -11.000036239624023
    3. 'value' → logprob: -11.125036239624023
    4. '_val' → logprob: -13.000036239624023
    5. '-value' → logprob: -13.875036239624023
    6. '_' → logprob: -14.625036239624023
    7. '_user' → logprob: -14.750036239624023
    8. '-' → logprob: -15.250036239624023
    9. '```' → logprob: -16.000036239624023
    10. '_VALUE' → logprob: -16.250036239624023

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004346448928117752
    2. ' +' → logprob: -5.5043463706970215
    3. '2' → logprob: -9.00434684753418
    4. '```' → logprob: -10.50434684753418
    5. '+)' → logprob: -10.75434684753418
    6. ')' → logprob: -10.75434684753418
    7. ')+' → logprob: -11.25434684753418
    8. 'plus' → logprob: -11.37934684753418
    9. '4' → logprob: -11.50434684753418
    10. '1' → logprob: -11.87934684753418

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0343475304543972
    2. '2' → logprob: -3.4093475341796875
    3. ' ' → logprob: -7.2843475341796875
    4. ')' → logprob: -11.534347534179688
    5. '   ' → logprob: -13.034347534179688
    6. '```' → logprob: -13.409347534179688
    7. '  ' → logprob: -14.534347534179688
    8. '    ' → logprob: -15.534347534179688
    9. '<|end|>' → logprob: -15.784347534179688
    10. '`' → logprob: -16.034347534179688

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.031157969729975e-05
    2. '2' → logprob: -9.500090599060059
    3. ' ' → logprob: -11.125090599060059
    4. ')' → logprob: -14.625090599060059
    5. '```' → logprob: -17.000089645385742
    6. '   ' → logprob: -17.500089645385742
    7. '  ' → logprob: -17.625089645385742
    8. '0' → logprob: -17.875089645385742
    9. '<|end|>' → logprob: -18.250089645385742
    10. '`' → logprob: -19.125089645385742

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.300083648762666e-05
    2. ' )' → logprob: -10.250053405761719
    3. ')
' → logprob: -11.375053405761719
    4. '))' → logprob: -13.375053405761719
    5. '*' → logprob: -13.875053405761719
    6. '}' → logprob: -14.125053405761719
    7. ')*' → logprob: -14.750053405761719
    8. ')#' → logprob: -14.750053405761719
    9. ')**' → logprob: -14.875053405761719
    10. ')`' → logprob: -15.250053405761719

Token 49: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.003041174029931426
    2. ' else' → logprob: -6.5030412673950195
    3. 'print' → logprob: -6.6280412673950195
    4. '*' → logprob: -9.75304126739502
    5. '<|end|>' → logprob: -10.25304126739502
    6. '+' → logprob: -10.37804126739502
    7. '```' → logprob: -10.75304126739502
    8. 'elif' → logprob: -11.37804126739502
    9. '_else' → logprob: -11.62804126739502
    10. '}else' → logprob: -11.62804126739502

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004237242974340916
    2. ':
' → logprob: -5.504237174987793
    3. '   ' → logprob: -8.754237174987793
    4. ' :' → logprob: -14.754237174987793
    5. ':
' → logprob: -15.879237174987793
    6. ':return' → logprob: -16.25423812866211
    7. '    ' → logprob: -16.37923812866211
    8. ':

' → logprob: -16.75423812866211
    9. '_' → logprob: -16.75423812866211
    10. ' :
' → logprob: -16.87923812866211

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37294894456863403
    2. ' result' → logprob: -1.2479488849639893
    3. 'result' → logprob: -3.7479488849639893
    4. ' half' → logprob: -8.12294864654541
    5. '    ' → logprob: -9.49794864654541
    6. ' user' → logprob: -9.99794864654541
    7. ' (' → logprob: -10.12294864654541
    8. '(result' → logprob: -10.49794864654541
    9. 'half' → logprob: -10.62294864654541
    10. '```' → logprob: -10.99794864654541

Token 52: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.0556039959192276
    2. 'result' (adapté à ' result') → logprob: -2.9306039810180664
    3. ' print' → logprob: -8.305603981018066
    4. '   ' → logprob: -8.555603981018066
    5. ' half' → logprob: -8.805603981018066
    6. '    ' → logprob: -9.805603981018066
    7. ' ' → logprob: -10.555603981018066
    8. 'print' → logprob: -11.055603981018066
    9. '(result' → logprob: -11.930603981018066
    10. 'half' → logprob: -11.930603981018066

Token 53: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.500108141452074e-05
    2. '_val' → logprob: -10.625035285949707
    3. '_' → logprob: -11.625035285949707
    4. ' _' → logprob: -14.625035285949707
    5. '_output' → logprob: -15.000035285949707
    6. '_result' → logprob: -15.375035285949707
    7. '_code' → logprob: -15.625035285949707
    8. '```' → logprob: -15.875035285949707
    9. '_values' → logprob: -16.50003433227539
    10. '_s' → logprob: -16.75003433227539

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004084693267941475
    2. '=' → logprob: -5.504084587097168
    3. ' ' → logprob: -12.504084587097168
    4. ' *=' → logprob: -13.754084587097168
    5. '_' → logprob: -14.254084587097168
    6. ' *' → logprob: -15.004084587097168
    7. ' +=' → logprob: -15.254084587097168
    8. ' =)' → logprob: -16.754085540771484
    9. '*' → logprob: -17.004085540771484
    10. ' ' → logprob: -17.629085540771484

Token 55: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.11320474743843079
    2. 'half' → logprob: -2.2382047176361084
    3. ' (' → logprob: -9.113204956054688
    4. ' ' → logprob: -9.363204956054688
    5. '(' → logprob: -9.613204956054688
    6. 'hal' → logprob: -10.613204956054688
    7. '   ' → logprob: -10.925704956054688
    8. ' hal' → logprob: -11.425704956054688
    9. ' int' → logprob: -11.488204956054688
    10. 'int' → logprob: -11.738204956054688

Token 56: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.013994814362377e-05
    2. '_val' → logprob: -10.00005054473877
    3. '_' → logprob: -12.75005054473877
    4. '_code' → logprob: -15.12505054473877
    5. 'value' → logprob: -15.25005054473877
    6. '_v' → logprob: -15.75005054473877
    7. ' _' → logprob: -16.000049591064453
    8. '"_' → logprob: -16.000049591064453
    9. '_values' → logprob: -16.125049591064453
    10. '\' → logprob: -16.125049591064453

Token 57: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.38993093371391296
    2. '*' → logprob: -1.2649309635162354
    3. ' *' → logprob: -3.2649309635162354
    4. ' **' → logprob: -6.139930725097656
    5. ' ' → logprob: -9.014930725097656
    6. '```' → logprob: -9.639930725097656
    7. '2' → logprob: -10.514930725097656
    8. '***' → logprob: -11.514930725097656
    9. '_squared' → logprob: -11.764930725097656
    10. '^' → logprob: -11.889930725097656

Token 58: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.3451433409936726e-05
    2. ' ' → logprob: -10.500033378601074
    3. '```' → logprob: -13.250033378601074
    4. '**' → logprob: -13.750033378601074
    5. '3' → logprob: -14.187533378601074
    6. '²' → logprob: -14.437533378601074
    7. '۲' → logprob: -15.125033378601074
    8. '   ' → logprob: -15.250033378601074
    9. '٢' → logprob: -16.25003433227539
    10. '+' → logprob: -16.31253433227539

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.500005722045898
    3. '```' → logprob: -14.500005722045898
    4. '3' → logprob: -14.625005722045898
    5. '   ' → logprob: -15.250005722045898
    6. '²' → logprob: -15.562505722045898
    7. '**' → logprob: -15.625005722045898
    8. '۲' → logprob: -16.2500057220459
    9. '22' → logprob: -16.4375057220459
    10. '1' → logprob: -17.3750057220459

Token 60: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18609508872032166
    2. '\n' → logprob: -2.6860949993133545
    3. '<|end|>' → logprob: -3.0610949993133545
    4. '
' → logprob: -3.5610949993133545
    5. '#' → logprob: -4.186095237731934
    6. '\' → logprob: -5.686095237731934
    7. '```' → logprob: -6.186095237731934
    8. '+' → logprob: -6.186095237731934
    9. '*' → logprob: -6.436095237731934
    10. ' print' → logprob: -7.561095237731934

Token 61: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.2576454335358e-05
    2. '#' → logprob: -10.125092506408691
    3. '```' → logprob: -10.500092506408691
    4. '<|end|>' → logprob: -12.125092506408691
    5. ' print' → logprob: -12.375092506408691
    6. 'result' → logprob: -12.625092506408691
    7. '\n' → logprob: -13.000092506408691
    8. '#print' → logprob: -13.125092506408691
    9. '\' → logprob: -13.250092506408691
    10. 'pr' → logprob: -13.625092506408691

Token 62: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005243833642452955
    2. '(result' → logprob: -5.25524377822876
    3. '('' → logprob: -12.880244255065918
    4. '("("' → logprob: -13.005244255065918
    5. '(user' → logprob: -13.130244255065918
    6. ' (' → logprob: -13.630244255065918
    7. '(print' → logprob: -15.005244255065918
    8. '(
' → logprob: -15.505244255065918
    9. '((' → logprob: -15.630244255065918
    10. '(

' → logprob: -15.630244255065918

Token 63: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.000568402698263526
    2. '_val' → logprob: -7.875568389892578
    3. ')_' → logprob: -8.875568389892578
    4. '_' → logprob: -10.750568389892578
    5. '_v' → logprob: -11.625568389892578
    6. '_result' → logprob: -11.750568389892578
    7. ')' → logprob: -12.250568389892578
    8. '_)' → logprob: -13.125568389892578
    9. '_va' → logprob: -13.875568389892578
    10. '_t' → logprob: -14.000568389892578

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.375
    3. ' )' → logprob: -15.625
    4. ')`' → logprob: -18.125
    5. ')
' → logprob: -18.5
    6. '`)' → logprob: -19.375
    7. ')#' → logprob: -19.875
    8. '')' → logprob: -20.375
    9. '）' → logprob: -20.75
    10. '()' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 51.61%
Précision adaptée (1ère position): 51.61%
Précision (top 10): 82.26%
================================================================================
