================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def foo():
    return map(int, sys.stdin.readline().split())

n, m = foo()
s = (input())[::-1] + '1' * m

if m >= n:
    print(n); sys.exit()

result = []; idx = 0; ptr = 0

class Holder:
    pass

holder = Holder()
holder.q = []
holder.push = holder.q.insert
holder.pop = holder.q.pop

def step(i, j):
    for k in range(i + m, j, -1):
        if s[k] == '0': return k
    return -1

while idx < n:
    flag = False
    k = step(idx, ptr)
    if k != -1:
        flag = True
    ptr = idx + m
    holder.push(0, k - idx)
    idx = k
    if not flag:
        print(-1)
        quit()

for x in holder.q:
    result.append(str(x))
print(' '.join(result))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' foo' (ID: 30551)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021233972162008286
    2. ' main' → logprob: -5.646234035491943
    3. ' ' → logprob: -5.771234035491943
    4. ' space' → logprob: -6.021234035491943
    5. ' process' → logprob: -6.396234035491943
    6. ' sys' → logprob: -6.896234035491943
    7. '  ' → logprob: -7.021234035491943
    8. '_' → logprob: -7.271234035491943
    9. '<|end|>' → logprob: -7.396234035491943
    10. ' a' → logprob: -7.521234035491943

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020520923135336488
    2. ' (' → logprob: -9.750205039978027
    3. '_' → logprob: -9.875205039978027
    4. ':' → logprob: -10.375205039978027
    5. '(:' → logprob: -11.250205039978027
    6. '(
' → logprob: -11.625205039978027
    7. '('' → logprob: -12.000205039978027
    8. '():' → logprob: -12.375205039978027
    9. '(a' → logprob: -12.500205039978027
    10. ')' → logprob: -12.750205039978027

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1253451406955719
    2. '\n' → logprob: -2.625345230102539
    3. '\' → logprob: -3.375345230102539
    4. '    
' → logprob: -5.500345230102539
    5. '    ' → logprob: -5.625345230102539
    6. '(' → logprob: -7.250345230102539
    7. '```' → logprob: -7.500345230102539
    8. ' pass' → logprob: -7.875345230102539
    9. '\x' → logprob: -8.500345230102539
    10. ' ' → logprob: -8.625345230102539

Token 7: ' return' (ID: 622)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9020651578903198
    2. '\n' → logprob: -1.5270651578903198
    3. ' ' → logprob: -2.2770652770996094
    4. '   ' → logprob: -2.7770652770996094
    5. 'return' (adapté à ' return') → logprob: -3.0270652770996094
    6. 'pass' → logprob: -3.0270652770996094
    7. '\' → logprob: -3.1520652770996094
    8. ' pass' → logprob: -3.4020652770996094
    9. 'print' → logprob: -5.027065277099609
    10. ' return' → logprob: -5.027065277099609

Token 8: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14719723165035248
    2. '"' → logprob: -2.6471972465515137
    3. ''' → logprob: -3.1471972465515137
    4. ' None' → logprob: -4.397197246551514
    5. '  ' → logprob: -5.772197246551514
    6. 'None' → logprob: -6.147197246551514
    7. ' True' → logprob: -6.772197246551514
    8. '_' → logprob: -7.147197246551514
    9. '    ' → logprob: -7.147197246551514
    10. '1' → logprob: -7.772197246551514

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028749538585543633
    2. '.' → logprob: -3.778749465942383
    3. ' (' → logprob: -5.653749465942383
    4. '<|end|>' → logprob: -7.278749465942383
    5. '(lambda' → logprob: -8.028749465942383
    6. '```' → logprob: -8.903749465942383
    7. '(
' → logprob: -9.153749465942383
    8. '[' → logprob: -9.278749465942383
    9. ')' → logprob: -9.278749465942383
    10. ''' → logprob: -9.653749465942383

Token 10: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5446637868881226
    2. '(' → logprob: -1.2946637868881226
    3. ',' → logprob: -2.044663906097412
    4. '(sys' → logprob: -5.419663906097412
    5. '<|end|>' → logprob: -5.419663906097412
    6. ' (' → logprob: -7.044663906097412
    7. '(open' → logprob: -7.294663906097412
    8. 's' → logprob: -7.419663906097412
    9. '(user' → logprob: -7.794663906097412
    10. '(s' → logprob: -8.044663429260254

Token 11: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07920647412538528
    2. 'sys' → logprob: -2.8292064666748047
    3. ')' → logprob: -5.204206466674805
    4. '(sys' → logprob: -5.329206466674805
    5. ' input' → logprob: -6.079206466674805
    6. ' )' → logprob: -6.079206466674805
    7. 'input' → logprob: -7.454206466674805
    8. ' ['' → logprob: -7.829206466674805
    9. ' ' → logprob: -7.954206466674805
    10. '['' → logprob: -8.954206466674805

Token 12: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08475153148174286
    2. '.argv' → logprob: -2.584751605987549
    3. '.stdin' → logprob: -5.334751605987549
    4. '.stdout' → logprob: -7.584751605987549
    5. ' .' → logprob: -8.45975112915039
    6. '.readline' → logprob: -9.58475112915039
    7. '.stderr' → logprob: -10.20975112915039
    8. '.)' → logprob: -10.20975112915039
    9. '.import' → logprob: -11.33475112915039
    10. '.sys' → logprob: -11.45975112915039

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0631912499666214
    2. '.read' → logprob: -3.5631911754608154
    3. '.' → logprob: -4.0631914138793945
    4. ')' → logprob: -4.3131914138793945
    5. '.)' → logprob: -6.5631914138793945
    6. '.readlines' → logprob: -7.3131914138793945
    7. ').' → logprob: -10.063191413879395
    8. '))' → logprob: -10.063191413879395
    9. '.write' → logprob: -10.313191413879395
    10. '().' → logprob: -10.813191413879395

Token 14: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0032833523582667112
    2. '()' → logprob: -6.253283500671387
    3. '()))' → logprob: -7.378283500671387
    4. '().' → logprob: -7.753283500671387
    5. ' ())' → logprob: -8.628283500671387
    6. ')' → logprob: -9.628283500671387
    7. '(' → logprob: -10.503283500671387
    8. '());' → logprob: -12.003283500671387
    9. '();)' → logprob: -12.128283500671387
    10. '())
' → logprob: -12.878283500671387

Token 15: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.054986655712127686
    2. 'split' → logprob: -3.0549867153167725
    3. 'rstrip' → logprob: -5.054986476898193
    4. ' strip' → logprob: -13.929986953735352
    5. ' split' → logprob: -15.304986953735352
    6. ')' → logprob: -15.679986953735352
    7. '```' → logprob: -16.92998695373535
    8. 'str' → logprob: -17.80498695373535
    9. ' ' → logprob: -19.05498695373535
    10. 'rst' → logprob: -19.30498695373535

Token 16: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.161957249045372
    2. '()))' → logprob: -1.9119572639465332
    3. '()' → logprob: -6.911957263946533
    4. '))' → logprob: -7.911957263946533
    5. ')' → logprob: -8.161956787109375
    6. '(' → logprob: -10.536956787109375
    7. '())
' → logprob: -11.161956787109375
    8. '()))
' → logprob: -11.161956787109375
    9. ' ())' → logprob: -11.286956787109375
    10. '())))' → logprob: -12.411956787109375

Token 17: 'n' (ID: 77)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7783304452896118
    2. '[' → logprob: -1.6533304452896118
    3. 'x' → logprob: -2.4033303260803223
    4. '\' → logprob: -3.4033303260803223
    5. '(' → logprob: -3.5283303260803223
    6. '\n' → logprob: -3.5283303260803223
    7. '```' → logprob: -3.7783303260803223
    8. 'def' → logprob: -3.9033303260803223
    9. 'a' → logprob: -3.9033303260803223
    10. 'for' → logprob: -4.028330326080322

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0520610436797142
    2. '=' → logprob: -3.302061080932617
    3. ' ' → logprob: -4.927061080932617
    4. ',' → logprob: -5.802061080932617
    5. ')' → logprob: -6.802061080932617
    6. '.' → logprob: -7.302061080932617
    7. '  ' → logprob: -7.677061080932617
    8. ' ,' → logprob: -7.802061080932617
    9. '<|end|>' → logprob: -7.802061080932617
    10. '[' → logprob: -8.677061080932617

Token 19: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6365025043487549
    2. 'm' → logprob: -0.7615025043487549
    3. ' k' → logprob: -6.511502265930176
    4. ' ' → logprob: -6.761502265930176
    5. 'k' → logprob: -7.261502265930176
    6. ' =' → logprob: -8.636502265930176
    7. ' n' → logprob: -8.886502265930176
    8. '=' → logprob: -9.511502265930176
    9. 'n' → logprob: -10.011502265930176
    10. '*' → logprob: -11.136502265930176

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022281209006905556
    2. '=' → logprob: -3.8972811698913574
    3. ',' → logprob: -6.522281169891357
    4. '<|end|>' → logprob: -9.272281646728516
    5. ' ,' → logprob: -9.397281646728516
    6. '[' → logprob: -10.397281646728516
    7. ' ' → logprob: -10.397281646728516
    8. ')' → logprob: -11.022281646728516
    9. ' =
' → logprob: -12.647281646728516
    10. ' =)' → logprob: -13.397281646728516

Token 21: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.6818795800209045
    2. ' foo' → logprob: -1.0568795204162598
    3. ' map' → logprob: -2.3068795204162598
    4. 'map' → logprob: -3.0568795204162598
    5. ' ' → logprob: -8.806879997253418
    6. '(foo' → logprob: -12.056879997253418
    7. '  ' → logprob: -12.431879997253418
    8. 'foobar' → logprob: -12.619379997253418
    9. '```' → logprob: -12.806879997253418
    10. ' tuple' → logprob: -13.056879997253418

Token 22: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019472026033326983
    2. '(' → logprob: -6.251947402954102
    3. '())' → logprob: -12.501947402954102
    4. '()]' → logprob: -13.126947402954102
    5. '()[' → logprob: -13.251947402954102
    6. ' ()' → logprob: -13.251947402954102
    7. '()`' → logprob: -13.626947402954102
    8. '()

' → logprob: -13.876947402954102
    9. '();' → logprob: -14.126947402954102
    10. '().' → logprob: -14.126947402954102

Token 23: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7331017255783081
    2. ',' → logprob: -1.733101725578308
    3. 'n' → logprob: -2.2331018447875977
    4. '[' → logprob: -2.7331018447875977
    5. ')' → logprob: -3.2331018447875977
    6. ' for' → logprob: -3.8581018447875977
    7. '#' → logprob: -4.233101844787598
    8. '+' → logprob: -4.358101844787598
    9. 'x' → logprob: -4.358101844787598
    10. '<|end|>' → logprob: -4.608101844787598

Token 24: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.47713977098464966
    2. ' =' → logprob: -1.3521397113800049
    3. '=' → logprob: -2.727139711380005
    4. '[' → logprob: -3.477139711380005
    5. '[:]' → logprob: -4.602139949798584
    6. 'paces' → logprob: -6.102139949798584
    7. ' .' → logprob: -6.727139949798584
    8. ' ' → logprob: -6.727139949798584
    9. 'p' → logprob: -7.227139949798584
    10. 'quares' → logprob: -7.477139949798584

Token 25: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8862062692642212
    2. 'set' → logprob: -1.8862062692642212
    3. 'list' → logprob: -1.8862062692642212
    4. 'sys' → logprob: -2.1362061500549316
    5. '[]' → logprob: -2.7612061500549316
    6. '[' → logprob: -2.8862061500549316
    7. '[input' → logprob: -4.761206150054932
    8. '['' → logprob: -5.011206150054932
    9. '{' → logprob: -5.511206150054932
    10. 'map' → logprob: -5.511206150054932

Token 26: 'input' (ID: 2586)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7709943056106567
    2. 'input' → logprob: -1.7709943056106567
    3. ''n' → logprob: -3.145994186401367
    4. 'm' → logprob: -3.145994186401367
    5. '0' → logprob: -3.520994186401367
    6. '[n' → logprob: -3.770994186401367
    7. 'map' → logprob: -3.895994186401367
    8. 'list' → logprob: -4.020994186401367
    9. 'range' → logprob: -4.020994186401367
    10. '1' → logprob: -4.145994186401367

Token 27: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07904753088951111
    2. '()' → logprob: -2.704047441482544
    3. ')' → logprob: -4.829047679901123
    4. '().' → logprob: -6.954047679901123
    5. ' ())' → logprob: -9.704047203063965
    6. '()).' → logprob: -11.579047203063965
    7. '();)' → logprob: -11.579047203063965
    8. '())
' → logprob: -11.954047203063965
    9. ' )' → logprob: -11.954047203063965
    10. '(' → logprob: -12.204047203063965

Token 28: '[::-' (ID: 159890)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29718145728111267
    2. '<|end|>' → logprob: -1.922181487083435
    3. '.strip' → logprob: -3.4221813678741455
    4. '[' → logprob: -3.5471813678741455
    5. '.split' → logprob: -3.6721813678741455
    6. '[::-' → logprob: -5.797181606292725
    7. '[:]' → logprob: -5.922181606292725
    8. '+' → logprob: -6.047181606292725
    9. '
' → logprob: -6.172181606292725
    10. ' ' → logprob: -6.172181606292725

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009430453181266785
    2. '-' → logprob: -5.509430408477783
    3. 'ex' → logprob: -6.634430408477783
    4. ']' → logprob: -7.009430408477783
    5. 'd' → logprob: -7.009430408477783
    6. '])' → logprob: -7.009430408477783
    7. 'ed' → logprob: -7.759430408477783
    8. 'dex' → logprob: -8.759430885314941
    9. ')' → logprob: -9.384430885314941
    10. 's' → logprob: -9.509430885314941

Token 30: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.494741632603109e-05
    2. ']' → logprob: -10.12508487701416
    3. '))' → logprob: -11.62508487701416
    4. '])' → logprob: -12.00008487701416
    5. '[' → logprob: -12.37508487701416
    6. ' )' → logprob: -12.37508487701416
    7. ')
' → logprob: -12.50008487701416
    8. '()' → logprob: -12.62508487701416
    9. '`)' → logprob: -12.87508487701416
    10. ')]' → logprob: -13.00008487701416

Token 31: ' +' (ID: 659)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2751266658306122
    2. '<|end|>' → logprob: -2.6501266956329346
    3. '[' → logprob: -2.9001266956329346
    4. '\n' → logprob: -3.1501266956329346
    5. ')' → logprob: -3.5251266956329346
    6. '#' → logprob: -4.0251264572143555
    7. ']' → logprob: -5.5251264572143555
    8. '\' → logprob: -5.6501264572143555
    9. '
' → logprob: -5.9001264572143555
    10. ' ' → logprob: -6.2751264572143555

Token 32: ' '' (ID: 461)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5207175612449646
    2. ' input' → logprob: -2.1457176208496094
    3. '"' → logprob: -2.3957176208496094
    4. ''' → logprob: -2.6457176208496094
    5. ''s' → logprob: -3.5207176208496094
    6. '(input' → logprob: -3.7707176208496094
    7. 'str' → logprob: -4.520717620849609
    8. ' '' → logprob: -4.645717620849609
    9. ' (' → logprob: -4.895717620849609
    10. '(' → logprob: -5.020717620849609

Token 33: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8329600095748901
    2. 'input' → logprob: -1.5829600095748901
    3. ''*' → logprob: -2.8329601287841797
    4. ''#' → logprob: -2.9579601287841797
    5. '0' → logprob: -3.4579601287841797
    6. '#' → logprob: -3.4579601287841797
    7. '*' → logprob: -3.8329601287841797
    8. '"' → logprob: -3.9579601287841797
    9. 'a' → logprob: -4.08296012878418
    10. ')' → logprob: -4.45796012878418

Token 34: ''' (ID: 6)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10704807192087173
    2. ''' → logprob: -2.4820480346679688
    3. ''*' → logprob: -4.857048034667969
    4. '000' → logprob: -5.732048034667969
    5. '1' → logprob: -6.107048034667969
    6. '')' → logprob: -6.982048034667969
    7. '*' → logprob: -7.107048034667969
    8. '00' → logprob: -7.357048034667969
    9. '111' → logprob: -7.857048034667969
    10. '01' → logprob: -7.982048034667969

Token 35: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4555737376213074
    2. '<|end|>' → logprob: -1.3305737972259521
    3. '*' → logprob: -3.080573797225952
    4. '+' → logprob: -4.080573558807373
    5. ')' → logprob: -4.330573558807373
    6. '[n' → logprob: -5.330573558807373
    7. '.' → logprob: -5.580573558807373
    8. '0' → logprob: -6.080573558807373
    9. '\n' → logprob: -6.080573558807373
    10. '#' → logprob: -6.205573558807373

Token 36: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07179812341928482
    2. '(m' → logprob: -3.446798086166382
    3. '(n' → logprob: -4.446798324584961
    4. '100' → logprob: -5.196798324584961
    5. 'n' → logprob: -5.321798324584961
    6. '(' → logprob: -6.071798324584961
    7. '20' → logprob: -6.071798324584961
    8. '10' → logprob: -6.196798324584961
    9. '50' → logprob: -6.446798324584961
    10. '40' → logprob: -6.696798324584961

Token 37: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' m' (ID: 284)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7499192357063293
    2. ' s' → logprob: -0.8749192357063293
    3. ' len' → logprob: -2.7499191761016846
    4. 's' → logprob: -4.124919414520264
    5. 'n' → logprob: -4.124919414520264
    6. ' m' → logprob: -5.249919414520264
    7. ' ' → logprob: -5.749919414520264
    8. ' not' → logprob: -5.874919414520264
    9. 'len' → logprob: -6.374919414520264
    10. ' (' → logprob: -7.374919414520264

Token 40: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9242075681686401
    2. ' <' → logprob: -1.2992075681686401
    3. '>' → logprob: -1.9242075681686401
    4. '<' → logprob: -2.6742076873779297
    5. ' <=' → logprob: -3.1742076873779297
    6. ' ==' → logprob: -3.6742076873779297
    7. '==' → logprob: -3.7992076873779297
    8. '<=' → logprob: -4.42420768737793
    9. ' >=' → logprob: -5.29920768737793
    10. ' ' → logprob: -5.54920768737793

Token 41: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029926015064120293
    2. ' n' → logprob: -4.27992582321167
    3. '1' → logprob: -4.77992582321167
    4. '2' → logprob: -6.15492582321167
    5. 'len' → logprob: -6.40492582321167
    6. '3' → logprob: -6.77992582321167
    7. '10' → logprob: -6.90492582321167
    8. '5' → logprob: -7.90492582321167
    9. ' ' → logprob: -8.279926300048828
    10. '4' → logprob: -9.029926300048828

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023643479216843843
    2. ' and' → logprob: -6.502364158630371
    3. ':
' → logprob: -8.127364158630371
    4. ' :' → logprob: -8.377364158630371
    5. 'and' → logprob: -8.502364158630371
    6. ' or' → logprob: -9.752364158630371
    7. '+' → logprob: -10.627364158630371
    8. '-' → logprob: -11.002364158630371
    9. '   ' → logprob: -11.002364158630371
    10. 'or' → logprob: -12.752364158630371

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010911292396485806
    2. ' print' → logprob: -5.135911464691162
    3. 'print' → logprob: -6.010911464691162
    4. '    
' → logprob: -7.135911464691162
    5. ':' → logprob: -7.760911464691162
    6. '
' → logprob: -8.010910987854004
    7. '       ' → logprob: -8.010910987854004
    8. '\n' → logprob: -8.260910987854004
    9. '   ' → logprob: -10.323410987854004
    10. '0' → logprob: -10.573410987854004

Token 44: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6569545865058899
    2. 'print' (adapté à ' print') → logprob: -0.7819545865058899
    3. '   ' → logprob: -3.781954526901245
    4. ' ' → logprob: -8.656954765319824
    5. '    ' → logprob: -8.781954765319824
    6. '0' → logprob: -9.406954765319824
    7. ' s' → logprob: -9.406954765319824
    8. ' sys' → logprob: -9.531954765319824
    9. ' for' → logprob: -9.656954765319824
    10. '
' → logprob: -9.656954765319824

Token 45: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.394607275724411
    2. '('' → logprob: -1.6446073055267334
    3. '(s' → logprob: -3.0196073055267334
    4. '("' → logprob: -3.3946073055267334
    5. '(n' → logprob: -3.6446073055267334
    6. ' (' → logprob: -5.394607067108154
    7. '(m' → logprob: -5.519607067108154
    8. 's' → logprob: -5.644607067108154
    9. '(len' → logprob: -5.644607067108154
    10. '(-' → logprob: -5.769607067108154

Token 46: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010024507530033588
    2. ')
' → logprob: -4.635024547576904
    3. ')
' → logprob: -9.260024070739746
    4. '*' → logprob: -9.885024070739746
    5. ' )' → logprob: -10.135024070739746
    6. '-' → logprob: -10.510024070739746
    7. '   ' → logprob: -11.135024070739746
    8. ')

' → logprob: -11.885024070739746
    9. '+' → logprob: -12.135024070739746
    10. '))' → logprob: -12.135024070739746

Token 47: ' sys' (ID: 12228)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.38090336322784424
    2. ' else' → logprob: -2.2559032440185547
    3. 'elif' → logprob: -2.3809032440185547
    4. 'exit' → logprob: -2.8809032440185547
    5. '
' → logprob: -4.005903244018555
    6. ' exit' → logprob: -4.130903244018555
    7. '\n' → logprob: -5.130903244018555
    8. ' ' → logprob: -5.380903244018555
    9. '```' → logprob: -5.630903244018555
    10. '<|end|>' → logprob: -5.630903244018555

Token 48: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.0004659425176214427
    2. '.stdout' → logprob: -7.7504658699035645
    3. 'exit' → logprob: -11.375466346740723
    4. '.stdin' → logprob: -11.375466346740723
    5. '.' → logprob: -12.125466346740723
    6. '.stderr' → logprob: -12.375466346740723
    7. '.argv' → logprob: -13.625466346740723
    8. '.ex' → logprob: -14.375466346740723
    9. '.setdefault' → logprob: -15.000466346740723
    10. '.EXIT' → logprob: -16.000465393066406

Token 49: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006758709903806448
    2. '(' → logprob: -5.006758689880371
    3. '()`' → logprob: -10.756758689880371
    4. '()
' → logprob: -12.006758689880371
    5. '())' → logprob: -12.631758689880371
    6. '();' → logprob: -12.756758689880371
    7. '`()' → logprob: -13.131758689880371
    8. '0' → logprob: -13.381758689880371
    9. '().' → logprob: -13.506758689880371
    10. '()

' → logprob: -13.881758689880371

Token 50: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052814532071352005
    2. 'if' → logprob: -4.677814483642578
    3. 's' → logprob: -4.802814483642578
    4. '
' → logprob: -4.802814483642578
    5. 'i' → logprob: -5.302814483642578
    6. 'elif' → logprob: -5.427814483642578
    7. 'dp' → logprob: -6.052814483642578
    8. ' for' → logprob: -6.677814483642578
    9. 'd' → logprob: -6.802814483642578
    10. 'else' → logprob: -6.927814483642578

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04612908139824867
    2. '=' → logprob: -3.171128988265991
    3. '_' → logprob: -6.04612922668457
    4. 's' → logprob: -7.29612922668457
    5. ')' → logprob: -10.17112922668457
    6. ' ' → logprob: -10.67112922668457
    7. ',' → logprob: -12.17112922668457
    8. '  ' → logprob: -13.17112922668457
    9. '_=' → logprob: -13.42112922668457
    10. '[]' → logprob: -13.92112922668457

Token 52: ' [];' (ID: 103967)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35770660638809204
    2. ' ' → logprob: -2.2327065467834473
    3. ' [' → logprob: -2.2327065467834473
    4. '[' → logprob: -3.3577065467834473
    5. '[]' → logprob: -4.357706546783447
    6. ' n' → logprob: -4.732706546783447
    7. '[n' → logprob: -4.732706546783447
    8. ' []' → logprob: -5.357706546783447
    9. 'n' → logprob: -5.357706546783447
    10. '[m' → logprob: -5.857706546783447

Token 53: ' idx' (ID: 14016)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36019352078437805
    2. 'for' → logprob: -1.8601934909820557
    3. ' i' → logprob: -2.7351934909820557
    4. 'i' → logprob: -4.110193729400635
    5. ' ' → logprob: -4.360193729400635
    6. ' s' → logprob: -4.610193729400635
    7. '_' → logprob: -4.860193729400635
    8. ' current' → logprob: -5.610193729400635
    9. 's' → logprob: -5.735193729400635
    10. ' last' → logprob: -5.860193729400635

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142386853694916
    2. '=' → logprob: -1.7014238834381104
    3. ' ' → logprob: -11.701423645019531
    4. ',' → logprob: -13.701423645019531
    5. 's' → logprob: -15.201423645019531
    6. ' =)' → logprob: -15.576423645019531
    7. ' ,' → logprob: -16.20142364501953
    8. '  ' → logprob: -16.32642364501953
    9. '=}' → logprob: -16.57642364501953
    10. '=int' → logprob: -16.70142364501953

Token 55: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025411732494831085
    2. ' ' → logprob: -3.77541184425354
    3. 'n' → logprob: -6.775411605834961
    4. ' n' → logprob: -7.900411605834961
    5. 'm' → logprob: -8.150411605834961
    6. '1' → logprob: -8.525411605834961
    7. ' m' → logprob: -9.400411605834961
    8. '-' → logprob: -10.775411605834961
    9. 'len' → logprob: -10.900411605834961
    10. 's' → logprob: -11.150411605834961

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007719963323324919
    2. 'm' → logprob: -5.882719993591309
    3. 'n' → logprob: -6.132719993591309
    4. '1' → logprob: -7.132719993591309
    5. ' ' → logprob: -7.132719993591309
    6. '-' → logprob: -7.382719993591309
    7. 'len' → logprob: -7.882719993591309
    8. 's' → logprob: -10.132719993591309
    9. ' n' → logprob: -10.632719993591309
    10. ' m' → logprob: -10.757719993591309

Token 57: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5617443919181824
    2. '<|end|>' → logprob: -0.9367443919181824
    3. '<|end|>' → logprob: -4.186744213104248
    4. ' 
' → logprob: -4.311744213104248
    5. ' ' → logprob: -5.311744213104248
    6. '  
' → logprob: -6.936744213104248
    7. ';' → logprob: -7.686744213104248
    8. ',' → logprob: -7.811744213104248
    9. '\n' → logprob: -8.061744689941406
    10. '0' → logprob: -8.061744689941406

Token 58: ' ptr' (ID: 23266)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36209234595298767
    2. '<|end|>' → logprob: -1.61209237575531
    3. ' 
' → logprob: -2.6120922565460205
    4. ' while' → logprob: -4.2370924949646
    5. '<|end|>' → logprob: -5.1120924949646
    6. '
' → logprob: -6.1120924949646
    7. ' for' → logprob: -7.1120924949646
    8. ' 

' → logprob: -7.1120924949646
    9. 'n' → logprob: -7.2370924949646
    10. 'while' → logprob: -7.3620924949646

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860236495733261
    2. '=' → logprob: -3.048602342605591
    3. ' ' → logprob: -12.048602104187012
    4. 's' → logprob: -12.798602104187012
    5. ',' → logprob: -13.298602104187012
    6. ' +=' → logprob: -13.923602104187012
    7. '  ' → logprob: -13.923602104187012
    8. 'x' → logprob: -14.798602104187012
    9. '_' → logprob: -14.923602104187012
    10. '1' → logprob: -15.423602104187012

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14013858139514923
    2. ' ' → logprob: -2.265138626098633
    3. ' n' → logprob: -5.015138626098633
    4. '1' → logprob: -5.015138626098633
    5. 'n' → logprob: -5.140138626098633
    6. 'm' → logprob: -5.390138626098633
    7. ' m' → logprob: -6.015138626098633
    8. 'len' → logprob: -8.140138626098633
    9. ' len' → logprob: -9.077638626098633
    10. ' -' → logprob: -9.202638626098633

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07623757421970367
    2. 'n' → logprob: -3.451237678527832
    3. 'm' → logprob: -3.576237678527832
    4. '1' → logprob: -4.701237678527832
    5. 'len' → logprob: -6.076237678527832
    6. '-' → logprob: -7.201237678527832
    7. ' ' → logprob: -7.701237678527832
    8. 'idx' → logprob: -7.701237678527832
    9. 's' → logprob: -8.451237678527832
    10. ' n' → logprob: -8.951237678527832

Token 62: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' Holder' (ID: 76417)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.28058451414108276
    2. ' Trie' → logprob: -2.5305845737457275
    3. ' Solver' → logprob: -3.1555845737457275
    4. ' Node' → logprob: -4.155584335327148
    5. 'Solution' → logprob: -4.405584335327148
    6. ' ' → logprob: -4.405584335327148
    7. '_' → logprob: -4.780584335327148
    8. ' Segment' → logprob: -4.780584335327148
    9. ' Foo' → logprob: -5.280584335327148
    10. ' My' → logprob: -5.405584335327148

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.138441237155348e-05
    2. ':
' → logprob: -9.375091552734375
    3. '():' → logprob: -12.625091552734375
    4. '(object' → logprob: -13.500091552734375
    5. ' :' → logprob: -13.875091552734375
    6. '(' → logprob: -15.000091552734375
    7. ':

' → logprob: -15.500091552734375
    8. ':**' → logprob: -16.375091552734375
    9. ':def' → logprob: -16.375091552734375
    10. '   ' → logprob: -17.625091552734375

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04493908956646919
    2. ':' → logprob: -3.5449390411376953
    3. '    ' → logprob: -5.544939041137695
    4. '<|end|>' → logprob: -5.669939041137695
    5. '    
' → logprob: -5.794939041137695
    6. ' def' → logprob: -6.294939041137695
    7. 'def' → logprob: -6.669939041137695
    8. '  ' → logprob: -7.794939041137695
    9. '<|end|>' → logprob: -8.419939041137695
    10. ' ' → logprob: -8.794939041137695

Token 67: ' pass' (ID: 1853)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3086839020252228
    2. 'def' → logprob: -1.4336838722229004
    3. '   ' → logprob: -4.3086838722229
    4. ' pass' → logprob: -4.5586838722229
    5. 'pass' (adapté à ' pass') → logprob: -5.8086838722229
    6. ' __' → logprob: -9.308684349060059
    7. ' None' → logprob: -10.933684349060059
    8. '__' → logprob: -11.058684349060059
    9. '	def' → logprob: -11.058684349060059
    10. '    ' → logprob: -11.058684349060059

Token 68: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3793652355670929
    2. '<|end|>' → logprob: -1.5043652057647705
    3. '

' → logprob: -2.5043652057647705
    4. ':' → logprob: -5.50436544418335
    5. '<|end|>' → logprob: -5.87936544418335
    6. ' ' → logprob: -6.62936544418335
    7. '' → logprob: -7.00436544418335
    8. '
' → logprob: -7.50436544418335
    9. '\n' → logprob: -8.004364967346191
    10. '


' → logprob: -8.254364967346191

Token 69: 'holder' (ID: 7166)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7000560164451599
    2. '<|end|>' → logprob: -0.9500560164451599
    3. 'holder' → logprob: -2.5750560760498047
    4. 'h' → logprob: -4.450056076049805
    5. '<|end|>' → logprob: -4.825056076049805
    6. 'class' → logprob: -6.075056076049805
    7. ' holder' → logprob: -6.200056076049805
    8. '_' → logprob: -6.450056076049805
    9. 'ptr' → logprob: -6.575056076049805
    10. 'current' → logprob: -6.700056076049805

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6104451417922974
    2. '.' → logprob: -1.3604451417922974
    3. '=' → logprob: -1.6104451417922974
    4. '.=' → logprob: -7.860445022583008
    5. ' .' → logprob: -9.860445022583008
    6. ' ' → logprob: -9.985445022583008
    7. 's' → logprob: -10.610445022583008
    8. '_' → logprob: -11.735445022583008
    9. 'es' → logprob: -12.110445022583008
    10. '  ' → logprob: -12.735445022583008

Token 71: ' Holder' (ID: 76417)
  Prédit: 'Holder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Holder' → logprob: -0.0789133608341217
    2. ' Holder' → logprob: -2.578913450241089
    3. ' ' → logprob: -12.078913688659668
    4. '  ' → logprob: -12.078913688659668
    5. '   ' → logprob: -12.578913688659668
    6. '[' → logprob: -12.828913688659668
    7. '[]' → logprob: -13.453913688659668
    8. '_holder' → logprob: -13.578913688659668
    9. '	' → logprob: -14.578913688659668
    10. 'holder' → logprob: -14.703913688659668

Token 72: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027270089834928513
    2. '<|end|>' → logprob: -3.7772700786590576
    3. '()
' → logprob: -6.027270317077637
    4. '<|end|>' → logprob: -7.152270317077637
    5. '()

' → logprob: -7.902270317077637
    6. '
' → logprob: -8.277270317077637
    7. '()\' → logprob: -9.402270317077637
    8. '();' → logprob: -10.027270317077637
    9. '()<' → logprob: -10.527270317077637
    10. '()</' → logprob: -11.902270317077637

Token 73: 'holder' (ID: 7166)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '.q' (ID: 20954)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0056825182400643826
    2. ' .' → logprob: -5.380682468414307
    3. '.idx' → logprob: -8.130682945251465
    4. '<|end|>' → logprob: -8.630682945251465
    5. '.py' → logprob: -9.255682945251465
    6. '.s' → logprob: -9.630682945251465
    7. ' =' → logprob: -10.255682945251465
    8. '.n' → logprob: -10.380682945251465
    9. '.value' → logprob: -10.380682945251465
    10. '.data' → logprob: -10.505682945251465

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08332134783267975
    2. '=' → logprob: -2.5833213329315186
    3. 'ue' → logprob: -5.708321571350098
    4. '=[]' → logprob: -7.208321571350098
    5. 'u' → logprob: -8.458321571350098
    6. '1' → logprob: -10.833321571350098
    7. 'uer' → logprob: -10.833321571350098
    8. '  ' → logprob: -11.208321571350098
    9. ' ' → logprob: -11.333321571350098
    10. '   ' → logprob: -11.958321571350098

Token 76: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005385895259678364
    2. '[' → logprob: -5.380385875701904
    3. '0' → logprob: -7.755385875701904
    4. 'deque' → logprob: -9.255386352539062
    5. '[]}' → logprob: -9.630386352539062
    6. '[]
' → logprob: -10.130386352539062
    7. 'list' → logprob: -10.255386352539062
    8. '[(' → logprob: -10.880386352539062
    9. '[int' → logprob: -11.255386352539062
    10. ' []' → logprob: -11.630386352539062

Token 77: 'holder' (ID: 7166)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '.push' (ID: 4885)
  Prédit: '.q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.q' → logprob: -0.0524311289191246
    2. '.' → logprob: -3.052431106567383
    3. '<|end|>' → logprob: -5.802431106567383
    4. '<|end|>' → logprob: -7.427431106567383
    5. 'q' → logprob: -9.927431106567383
    6. '.qml' → logprob: -10.177431106567383
    7. ' .' → logprob: -11.302431106567383
    8. '.setdefault' → logprob: -11.427431106567383
    9. ' ' → logprob: -11.552431106567383
    10. '[q' → logprob: -11.552431106567383

Token 79: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008089791052043438
    2. '((' → logprob: -5.258090019226074
    3. '(lambda' → logprob: -6.883090019226074
    4. '('' → logprob: -8.008090019226074
    5. '("("' → logprob: -8.508090019226074
    6. ' =' → logprob: -8.758090019226074
    7. '(ptr' → logprob: -9.008090019226074
    8. '<|end|>' → logprob: -9.008090019226074
    9. '()' → logprob: -9.383090019226074
    10. '(()' → logprob: -9.508090019226074

Token 80: ' holder' (ID: 17632)
  Prédit: 'holder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'holder' → logprob: -0.11641205102205276
    2. 'lambda' → logprob: -2.2414121627807617
    3. ' lambda' → logprob: -6.116412162780762
    4. ' holder' → logprob: -7.241412162780762
    5. '(lambda' → logprob: -8.366412162780762
    6. '(holder' → logprob: -8.991412162780762
    7. 'hold' → logprob: -9.616412162780762
    8. 'holders' → logprob: -10.116412162780762
    9. '	holder' → logprob: -10.366412162780762
    10. '  ' → logprob: -10.866412162780762

Token 81: '.q' (ID: 20954)
  Prédit: '.q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.q' → logprob: -0.031217500567436218
    2. '.push' → logprob: -3.781217575073242
    3. '.append' → logprob: -5.781217575073242
    4. '.' → logprob: -6.031217575073242
    5. 'q' → logprob: -6.656217575073242
    6. '.extend' → logprob: -8.656217575073242
    7. 'push' → logprob: -8.906217575073242
    8. '<|end|>' → logprob: -9.156217575073242
    9. '```' → logprob: -9.406217575073242
    10. ' .' → logprob: -9.781217575073242

Token 82: '.insert' (ID: 13222)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.013054221868515015
    2. '.' → logprob: -4.388054370880127
    3. 'append' → logprob: -7.763054370880127
    4. '.extend' → logprob: -9.513053894042969
    5. '.push' → logprob: -11.513053894042969
    6. '.pop' → logprob: -11.638053894042969
    7. '.clear' → logprob: -11.763053894042969
    8. '_append' → logprob: -12.013053894042969
    9. ' .' → logprob: -12.388053894042969
    10. ' append' → logprob: -13.388053894042969

Token 83: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24185875058174133
    2. '<|end|>' → logprob: -2.116858720779419
    3. '0' → logprob: -2.366858720779419
    4. '<|end|>' → logprob: -7.866858959197998
    5. ' ' → logprob: -9.11685848236084
    6. '
' → logprob: -9.86685848236084
    7. '(ptr' → logprob: -10.49185848236084
    8. ' (' → logprob: -10.74185848236084
    9. '(-' → logprob: -10.74185848236084
    10. '  ' → logprob: -12.24185848236084

Token 84: 'holder' (ID: 7166)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3171171247959137
    2. '0' → logprob: -1.3171170949935913
    3. '<|end|>' → logprob: -6.317117214202881
    4. ' ' → logprob: -7.192117214202881
    5. '(-' → logprob: -7.567117214202881
    6. '(len' → logprob: -7.817117214202881
    7. 'def' → logprob: -8.942116737365723
    8. 'len' → logprob: -10.567116737365723
    9. '(ptr' → logprob: -10.567116737365723
    10. '<|end|>' → logprob: -10.692116737365723

Token 85: '.pop' (ID: 15746)
  Prédit: '.push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.push' → logprob: -0.6931915283203125
    2. '.pop' → logprob: -1.4431915283203125
    3. '.' → logprob: -1.9431915283203125
    4. '.append' → logprob: -3.0681915283203125
    5. '<|end|>' → logprob: -3.0681915283203125
    6. '<|end|>' → logprob: -4.9431915283203125
    7. '.remove' → logprob: -5.1931915283203125
    8. '.clear' → logprob: -5.5681915283203125
    9. '.insert' → logprob: -6.1931915283203125
    10. '.q' → logprob: -6.6931915283203125

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869757354259491
    2. ' =' → logprob: -1.2619757652282715
    3. '(' → logprob: -3.3869757652282715
    4. '<|end|>' → logprob: -5.8869757652282715
    5. ' ' → logprob: -7.6369757652282715
    6. '  ' → logprob: -8.511975288391113
    7. '()' → logprob: -8.886975288391113
    8. '(-' → logprob: -9.261975288391113
    9. '=lambda' → logprob: -9.761975288391113
    10. '<|end|>' → logprob: -9.886975288391113

Token 87: ' holder' (ID: 17632)
  Prédit: 'holder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'holder' → logprob: -0.05000206455588341
    2. ' holder' → logprob: -3.050002098083496
    3. '0' → logprob: -7.300002098083496
    4. '(holder' → logprob: -8.050002098083496
    5. '	holder' → logprob: -8.550002098083496
    6. 'lambda' → logprob: -10.050002098083496
    7. 'pop' → logprob: -10.050002098083496
    8. ' ' → logprob: -10.425002098083496
    9. '-holder' → logprob: -10.550002098083496
    10. '_holder' → logprob: -10.800002098083496

Token 88: '.q' (ID: 20954)
  Prédit: '.q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.q' → logprob: -0.0028883253689855337
    2. '.' → logprob: -6.002888202667236
    3. '.pop' → logprob: -8.377888679504395
    4. '.readline' → logprob: -10.627888679504395
    5. '.qml' → logprob: -11.002888679504395
    6. '..' → logprob: -11.502888679504395
    7. '.user' → logprob: -11.752888679504395
    8. ' .' → logprob: -11.877888679504395
    9. '.Q' → logprob: -11.877888679504395
    10. '().' → logprob: -11.877888679504395

Token 89: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0002882721892092377
    2. '.remove' → logprob: -8.250288009643555
    3. '.append' → logprob: -11.750288009643555
    4. '.' → logprob: -11.750288009643555
    5. '.clear' → logprob: -11.875288009643555
    6. '.reverse' → logprob: -13.625288009643555
    7. '[' → logprob: -14.125288009643555
    8. '.delete' → logprob: -14.250288009643555
    9. 'pop' → logprob: -14.750288009643555
    10. '.dequeue' → logprob: -15.750288009643555

Token 90: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06413286179304123
    2. '()' → logprob: -2.8141329288482666
    3. '0' → logprob: -6.5641326904296875
    4. '(-' → logprob: -7.6891326904296875
    5. '<|end|>' → logprob: -8.439132690429688
    6. '()
' → logprob: -10.564132690429688
    7. '<|end|>' → logprob: -11.439132690429688
    8. '();' → logprob: -12.189132690429688
    9. '```' → logprob: -12.439132690429688
    10. '()

' → logprob: -12.939132690429688

Token 91: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3222057819366455
    2. '()' → logprob: -1.3222057819366455
    3. '0' → logprob: -4.947205543518066
    4. '()
' → logprob: -7.447205543518066
    5. '(-' → logprob: -8.197205543518066
    6. '<|end|>' → logprob: -8.572205543518066
    7. '(idx' → logprob: -8.572205543518066
    8. ' ' → logprob: -8.697205543518066
    9. '();' → logprob: -10.072205543518066
    10. '(ptr' → logprob: -10.197205543518066

Token 92: ' step' (ID: 5983)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.35986143350601196
    2. ' push' → logprob: -2.109861373901367
    3. ' process' → logprob: -2.484861373901367
    4. ' next' → logprob: -4.109861373901367
    5. ' add' → logprob: -4.484861373901367
    6. ' dfs' → logprob: -4.484861373901367
    7. ' bfs' → logprob: -4.609861373901367
    8. ' solve' → logprob: -4.609861373901367
    9. ' foo' → logprob: -5.359861373901367
    10. ' calculate' → logprob: -5.484861373901367

Token 93: '(i' (ID: 3649)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0012892824597656727
    2. '(' → logprob: -7.501289367675781
    3. ' ():' → logprob: -7.501289367675781
    4. '():
' → logprob: -9.751289367675781
    5. '(i' → logprob: -10.126289367675781
    6. '(idx' → logprob: -11.001289367675781
    7. '(x' → logprob: -11.251289367675781
    8. '()' → logprob: -11.251289367675781
    9. '(a' → logprob: -11.876289367675781
    10. '(index' → logprob: -12.501289367675781

Token 94: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02433192729949951
    2. ',' → logprob: -3.774332046508789
    3. '):
' → logprob: -7.399332046508789
    4. ')' → logprob: -8.149332046508789
    5. ' ):' → logprob: -9.149332046508789
    6. ':' → logprob: -10.649332046508789
    7. '   ' → logprob: -10.649332046508789
    8. ' ,' → logprob: -11.524332046508789
    9. '=' → logprob: -12.274332046508789
    10. '):
' → logprob: -12.399332046508789

Token 95: ' j' (ID: 441)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.4331514835357666
    2. 'x' → logprob: -1.9331514835357666
    3. ' x' → logprob: -2.4331514835357666
    4. 'val' → logprob: -2.6831514835357666
    5. 'j' → logprob: -2.9331514835357666
    6. ' j' → logprob: -3.1831514835357666
    7. ' value' → logprob: -3.4331514835357666
    8. 'v' → logprob: -3.6831514835357666
    9. 'k' → logprob: -3.9331514835357666
    10. ')' → logprob: -4.0581512451171875

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006545356009155512
    2. '):
' → logprob: -8.000654220581055
    3. ',' → logprob: -8.375654220581055
    4. ')' → logprob: -9.750654220581055
    5. ':' → logprob: -10.625654220581055
    6. ' ):' → logprob: -13.250654220581055
    7. '):
' → logprob: -13.375654220581055
    8. '=' → logprob: -13.875654220581055
    9. '   ' → logprob: -14.875654220581055
    10. '):

' → logprob: -15.250654220581055

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11352308839559555
    2. ' if' → logprob: -2.738523006439209
    3. 'if' → logprob: -3.363523006439209
    4. '    ' → logprob: -6.738523006439209
    5. 'result' → logprob: -6.863523006439209
    6. 'return' → logprob: -6.863523006439209
    7. 'holder' → logprob: -7.238523006439209
    8. '	if' → logprob: -7.738523006439209
    9. '<|end|>' → logprob: -7.988523006439209
    10. '    
' → logprob: -7.988523006439209

Token 98: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5797608494758606
    2. ' while' → logprob: -1.8297607898712158
    3. 'if' → logprob: -1.9547607898712158
    4. ' res' → logprob: -3.329760789871216
    5. '   ' → logprob: -3.704760789871216
    6. 'while' → logprob: -3.829760789871216
    7. ' for' → logprob: -3.954760789871216
    8. '    ' → logprob: -5.079761028289795
    9. 'for' (adapté à ' for') → logprob: -5.579761028289795
    10. 'res' → logprob: -5.704761028289795

Token 99: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.23820388317108154
    2. ' x' → logprob: -2.113204002380371
    3. ' range' → logprob: -3.238204002380371
    4. 'k' → logprob: -3.738204002380371
    5. 'x' → logprob: -5.363204002380371
    6. ' _' → logprob: -5.488204002380371
    7. ' ' → logprob: -5.863204002380371
    8. ' val' → logprob: -5.863204002380371
    9. '_' → logprob: -5.863204002380371
    10. ' idx' → logprob: -6.238204002380371

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008976995013654232
    2. 'in' → logprob: -4.758976936340332
    3. ' ' → logprob: -8.758976936340332
    4. '  ' → logprob: -9.508976936340332
    5. 'range' → logprob: -9.508976936340332
    6. '   ' → logprob: -10.258976936340332
    7. 'n' → logprob: -12.258976936340332
    8. ' range' → logprob: -12.508976936340332
    9. ',' → logprob: -12.633976936340332
    10. ')' → logprob: -13.008976936340332

Token 101: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02654004842042923
    2. 'range' → logprob: -3.6515400409698486
    3. ' ' → logprob: -9.77653980255127
    4. ' holder' → logprob: -9.77653980255127
    5. '  ' → logprob: -10.52653980255127
    6. '   ' → logprob: -10.52653980255127
    7. ' xrange' → logprob: -10.77653980255127
    8. 'holder' → logprob: -11.15153980255127
    9. '	range' → logprob: -11.77653980255127
    10. ' s' → logprob: -12.02653980255127

Token 102: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08178628981113434
    2. '(j' → logprob: -2.5817863941192627
    3. '(' → logprob: -5.956786155700684
    4. ' (' → logprob: -9.706786155700684
    5. '(n' → logprob: -9.956786155700684
    6. '   ' → logprob: -10.081786155700684
    7. '(m' → logprob: -10.331786155700684
    8. '(len' → logprob: -10.456786155700684
    9. 'j' → logprob: -10.581786155700684
    10. '(s' → logprob: -11.331786155700684

Token 103: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05729454755783081
    2. '+' → logprob: -3.3072946071624756
    3. ' +' → logprob: -4.4322943687438965
    4. ' ,' → logprob: -5.0572943687438965
    5. ',j' → logprob: -7.6822943687438965
    6. '   ' → logprob: -8.557294845581055
    7. '+j' → logprob: -9.182294845581055
    8. ',n' → logprob: -11.432294845581055
    9. ' ' → logprob: -11.682294845581055
    10. ')' → logprob: -11.932294845581055

Token 104: ' m' (ID: 284)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002889871597290039
    2. ' ' → logprob: -6.002889633178711
    3. '   ' → logprob: -8.752889633178711
    4. 'j' → logprob: -8.752889633178711
    5. '2' → logprob: -9.752889633178711
    6. 'm' → logprob: -11.377889633178711
    7. ' j' → logprob: -11.877889633178711
    8. '  ' → logprob: -12.502889633178711
    9. '3' → logprob: -13.127889633178711
    10. 's' → logprob: -13.127889633178711

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.247735396027565
    2. '):' → logprob: -2.1227355003356934
    3. '+' → logprob: -2.8727355003356934
    4. ' +' → logprob: -3.6227355003356934
    5. ' ,' → logprob: -4.872735500335693
    6. ' -' → logprob: -6.247735500335693
    7. ',j' → logprob: -6.372735500335693
    8. '):
' → logprob: -6.372735500335693
    9. '-' → logprob: -6.622735500335693
    10. '   ' → logprob: -7.247735500335693

Token 106: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.020357346162199974
    2. ' j' → logprob: -4.395357131958008
    3. 'n' → logprob: -5.895357131958008
    4. 'min' → logprob: -6.020357131958008
    5. '   ' → logprob: -6.770357131958008
    6. ' min' → logprob: -7.770357131958008
    7. 'len' → logprob: -8.145357131958008
    8. '  ' → logprob: -8.395357131958008
    9. ' n' → logprob: -9.020357131958008
    10. ' ' → logprob: -9.145357131958008

Token 107: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3718719482421875
    2. ' +' → logprob: -1.7468719482421875
    3. ',' → logprob: -2.7468719482421875
    4. '):' → logprob: -2.9968719482421875
    5. '+m' → logprob: -4.2468719482421875
    6. '-m' → logprob: -6.1218719482421875
    7. ' -' → logprob: -6.1218719482421875
    8. '):
' → logprob: -6.4968719482421875
    9. '   ' → logprob: -6.9968719482421875
    10. '-' → logprob: -8.371871948242188

Token 108: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3608466684818268
    2. '-m' → logprob: -2.110846757888794
    3. ' m' → logprob: -2.610846757888794
    4. '-' → logprob: -2.735846757888794
    5. 'm' → logprob: -3.235846757888794
    6. '1' → logprob: -5.985846519470215
    7. ' ' → logprob: -6.860846519470215
    8. '+m' → logprob: -8.485846519470215
    9. '   ' → logprob: -9.360846519470215
    10. ')' → logprob: -10.485846519470215

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021295747137628496
    2. '-' → logprob: -9.375212669372559
    3. 'm' → logprob: -9.375212669372559
    4. ' -' → logprob: -10.500212669372559
    5. ' ' → logprob: -11.125212669372559
    6. '   ' → logprob: -14.750212669372559
    7. ')' → logprob: -15.125212669372559
    8. ' m' → logprob: -15.500212669372559
    9. '  ' → logprob: -16.250213623046875
    10. '-m' → logprob: -16.875213623046875

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.27881717681884766
    2. ',-' → logprob: -1.9038171768188477
    3. ',' → logprob: -2.7788171768188477
    4. ' -' → logprob: -4.403817176818848
    5. '-' → logprob: -4.778817176818848
    6. '   ' → logprob: -5.528817176818848
    7. ')' → logprob: -6.153817176818848
    8. '):
' → logprob: -6.278817176818848
    9. '1' → logprob: -6.403817176818848
    10. '):-' → logprob: -7.028817176818848

Token 111: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9655068516731262
    2. '<|end|>' → logprob: -1.4655067920684814
    3. '       ' → logprob: -1.7155067920684814
    4. ' ' → logprob: -2.3405067920684814
    5. '    ' → logprob: -2.8405067920684814
    6. ':' → logprob: -3.9655067920684814
    7. ' if' → logprob: -4.5905070304870605
    8. '  ' → logprob: -5.3405070304870605
    9. ' -' → logprob: -6.0905070304870605
    10. '	' → logprob: -6.2155070304870605

Token 112: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6347407698631287
    2. ' ' → logprob: -1.0097408294677734
    3. '    ' → logprob: -3.6347408294677734
    4. '        ' → logprob: -3.6347408294677734
    5. ' holder' → logprob: -4.509740829467773
    6. 'if' (adapté à ' if') → logprob: -4.884740829467773
    7. ' s' → logprob: -5.134740829467773
    8. '   ' → logprob: -5.384740829467773
    9. 'holder' → logprob: -5.634740829467773
    10. '       ' → logprob: -5.759740829467773

Token 113: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16880254447460175
    2. 's' → logprob: -2.168802499771118
    3. ' k' → logprob: -3.668802499771118
    4. 'k' → logprob: -4.543802738189697
    5. ' holder' → logprob: -5.918802738189697
    6. 'holder' → logprob: -7.418802738189697
    7. ' not' → logprob: -7.793802738189697
    8. ' ' → logprob: -8.543802261352539
    9. 'int' → logprob: -9.043802261352539
    10. ' ptr' → logprob: -9.168802261352539

Token 114: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00016361083544325083
    2. 'k' → logprob: -9.000164031982422
    3. '[' → logprob: -10.250164031982422
    4. ' [' → logprob: -12.875164031982422
    5. '[j' → logprob: -14.625164031982422
    6. ' k' → logprob: -14.750164031982422
    7. '[i' → logprob: -15.125164031982422
    8. '(k' → logprob: -15.375164031982422
    9. '   ' → logprob: -15.500164031982422
    10. '{k' → logprob: -15.500164031982422

Token 115: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01583985425531864
    2. ']==' → logprob: -4.64084005355835
    3. ']=='' → logprob: -5.14084005355835
    4. '==' → logprob: -9.390839576721191
    5. '=='' → logprob: -10.265839576721191
    6. ' ==' → logprob: -10.265839576721191
    7. ' ]' → logprob: -11.390839576721191
    8. ']!=' → logprob: -11.890839576721191
    9. 'k' → logprob: -12.015839576721191
    10. ']!='' → logprob: -12.390839576721191

Token 116: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6877480149269104
    2. '==' → logprob: -0.9377480149269104
    3. '=='' → logprob: -2.3127479553222656
    4. ']' → logprob: -5.937747955322266
    5. ''' → logprob: -6.437747955322266
    6. ']==' → logprob: -7.187747955322266
    7. ']=='' → logprob: -7.312747955322266
    8. '=' → logprob: -8.437747955322266
    9. ' =='' → logprob: -8.437747955322266
    10. ')' → logprob: -9.187747955322266

Token 117: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001058890949934721
    2. ' '' → logprob: -7.126059055328369
    3. '"' → logprob: -8.376058578491211
    4. '0' → logprob: -12.001058578491211
    5. ' ' → logprob: -12.001058578491211
    6. '   ' → logprob: -12.501058578491211
    7. '1' → logprob: -13.126058578491211
    8. '`' → logprob: -14.126058578491211
    9. ''a' → logprob: -14.126058578491211
    10. ')' → logprob: -14.751058578491211

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24436044692993164
    2. '1' → logprob: -1.6193604469299316
    3. ''' → logprob: -3.9943604469299316
    4. ' ' → logprob: -8.744359970092773
    5. '"' → logprob: -9.369359970092773
    6. ' '' → logprob: -9.619359970092773
    7. '')' → logprob: -11.119359970092773
    8. '.' → logprob: -11.994359970092773
    9. ')' → logprob: -12.556859970092773
    10. ''s' → logprob: -12.806859970092773

Token 119: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.008554995991289616
    2. ''):' → logprob: -5.383554935455322
    3. ''' → logprob: -6.508554935455322
    4. '):' → logprob: -6.633554935455322
    5. ':' → logprob: -7.258554935455322
    6. '')' → logprob: -8.63355541229248
    7. '':
' → logprob: -9.00855541229248
    8. ''):
' → logprob: -9.88355541229248
    9. ')' → logprob: -11.00855541229248
    10. ' ':' → logprob: -11.75855541229248

Token 120: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23933729529380798
    2. '<|end|>' → logprob: -2.864337205886841
    3. '       ' → logprob: -3.364337205886841
    4. '
' → logprob: -3.489337205886841
    5. ' ' → logprob: -3.864337205886841
    6. ' 
' → logprob: -4.61433744430542
    7. '        ' → logprob: -5.11433744430542
    8. ')' → logprob: -5.23933744430542
    9. '            
' → logprob: -5.36433744430542
    10. '	       ' → logprob: -5.48933744430542

Token 121: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.315887987613678
    2. ' k' → logprob: -1.3158879280090332
    3. ' ' → logprob: -7.190887928009033
    4. '<|end|>' → logprob: -7.315887928009033
    5. '	k' → logprob: -8.565888404846191
    6. ' ' → logprob: -8.565888404846191
    7. 'None' → logprob: -8.690888404846191
    8. ')' → logprob: -8.940888404846191
    9. ' 
' → logprob: -9.065888404846191
    10. '(k' → logprob: -9.315888404846191

Token 122: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7479466795921326
    2. '<|end|>' → logprob: -0.7479466795921326
    3. ')' → logprob: -4.122946739196777
    4. '-' → logprob: -4.872946739196777
    5. '
' → logprob: -5.122946739196777
    6. ':' → logprob: -5.497946739196777
    7. '   ' → logprob: -5.497946739196777
    8. '+' → logprob: -5.872946739196777
    9. ' 
' → logprob: -6.122946739196777
    10. '<|end|>' → logprob: -6.497946739196777

Token 123: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31101086735725403
    2. '<|end|>' → logprob: -2.3110108375549316
    3. ')' → logprob: -3.1860108375549316
    4. '-' → logprob: -3.3110108375549316
    5. '+' → logprob: -3.4360108375549316
    6. '   ' → logprob: -4.311010837554932
    7. 'None' → logprob: -4.936010837554932
    8. ':' → logprob: -5.061010837554932
    9. '0' → logprob: -5.186010837554932
    10. '  ' → logprob: -5.186010837554932

Token 125: ' -' (ID: 533)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.854432225227356
    2. '-' → logprob: -1.104432225227356
    3. 'i' → logprob: -2.2294321060180664
    4. 'None' → logprob: -2.4794321060180664
    5. ' -' → logprob: -4.104432106018066
    6. '0' → logprob: -4.354432106018066
    7. ' j' → logprob: -4.854432106018066
    8. ' None' → logprob: -5.104432106018066
    9. ' i' → logprob: -5.479432106018066
    10. '-i' → logprob: -6.604432106018066

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.877503907773644e-05
    2. ' ' → logprob: -9.375099182128906
    3. '2' → logprob: -11.500099182128906
    4. '-' → logprob: -14.125099182128906
    5. '0' → logprob: -14.750099182128906
    6. '100' → logprob: -14.875099182128906
    7. '```' → logprob: -15.312599182128906
    8. '10' → logprob: -15.437599182128906
    9. '<|end|>' → logprob: -15.500099182128906
    10. '9' → logprob: -16.250099182128906

Token 127: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11140613257884979
    2. '<|end|>' → logprob: -2.361406087875366
    3. ')' → logprob: -5.361406326293945
    4. ' 
' → logprob: -6.236406326293945
    5. ':' → logprob: -7.111406326293945
    6. '
' → logprob: -7.236406326293945
    7. '<|end|>' → logprob: -7.861406326293945
    8. '[' → logprob: -8.111406326293945
    9. '  ' → logprob: -8.111406326293945
    10. ' for' → logprob: -8.236406326293945

Token 128: 'while' (ID: 7032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004245081450790167
    2. ' )' → logprob: -7.004245281219482
    3. '  ' → logprob: -7.254245281219482
    4. ')' → logprob: -7.254245281219482
    5. '<|end|>' → logprob: -8.004244804382324
    6. '[' → logprob: -8.254244804382324
    7. '   ' → logprob: -8.504244804382324
    8. ' 
' → logprob: -8.629244804382324
    9. 'n' → logprob: -8.629244804382324
    10. ' ]' → logprob: -9.129244804382324

Token 129: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.2544120252132416
    2. ' ptr' → logprob: -1.504412055015564
    3. 'ptr' → logprob: -7.1294121742248535
    4. ' n' → logprob: -7.3794121742248535
    5. 'idx' → logprob: -7.7544121742248535
    6. ' True' → logprob: -8.004411697387695
    7. ' len' → logprob: -9.629411697387695
    8. 'True' → logprob: -10.254411697387695
    9. ' ' → logprob: -10.254411697387695
    10. ' result' → logprob: -10.754411697387695

Token 130: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.011973733082413673
    2. '<' → logprob: -4.761973857879639
    3. ' <=' → logprob: -6.761973857879639
    4. '<m' → logprob: -6.761973857879639
    5. '<n' → logprob: -7.136973857879639
    6. '<len' → logprob: -9.01197338104248
    7. '<=' → logprob: -9.63697338104248
    8. ' !=' → logprob: -10.76197338104248
    9. ' ' → logprob: -11.38697338104248
    10. '+' → logprob: -11.88697338104248

Token 131: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14538031816482544
    2. ' n' → logprob: -2.0203802585601807
    3. 'len' → logprob: -6.52038049697876
    4. 'm' → logprob: -7.52038049697876
    5. ' len' → logprob: -7.64538049697876
    6. ' m' → logprob: -9.270380020141602
    7. ' ' → logprob: -9.395380020141602
    8. '  ' → logprob: -12.707880020141602
    9. '_n' → logprob: -12.895380020141602
    10. '	n' → logprob: -12.957880020141602

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0730649083852768
    2. ':
' → logprob: -2.6980648040771484
    3. ' and' → logprob: -5.823064804077148
    4. 'and' → logprob: -9.573064804077148
    5. ' :' → logprob: -10.198064804077148
    6. '   ' → logprob: -10.823064804077148
    7. '+' → logprob: -11.073064804077148
    8. ' :
' → logprob: -11.448064804077148
    9. ':

' → logprob: -12.323064804077148
    10. '):
' → logprob: -13.323064804077148

Token 133: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' flag' (ID: 9641)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.719321608543396
    2. 'if' → logprob: -1.844321608543396
    3. 'ptr' → logprob: -2.3443217277526855
    4. ' next' → logprob: -2.7193217277526855
    5. ' ptr' → logprob: -2.7193217277526855
    6. 'next' → logprob: -3.7193217277526855
    7. 'j' → logprob: -3.8443217277526855
    8. ' step' → logprob: -4.0943217277526855
    9. ' nxt' → logprob: -4.4693217277526855
    10. 'idx' → logprob: -4.4693217277526855

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128605380654335
    2. '=' → logprob: -2.2378604412078857
    3. '=False' → logprob: -10.987860679626465
    4. ':' → logprob: -11.237860679626465
    5. '=True' → logprob: -12.612860679626465
    6. ',' → logprob: -13.362860679626465
    7. ' ' → logprob: -13.362860679626465
    8. '0' → logprob: -14.987860679626465
    9. '1' → logprob: -15.487860679626465
    10. '   ' → logprob: -15.612860679626465

Token 136: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6403942108154297
    2. ' False' → logprob: -0.7653942108154297
    3. ' True' → logprob: -5.64039421081543
    4. 'True' → logprob: -6.14039421081543
    5. ' step' → logprob: -7.01539421081543
    6. '-' → logprob: -7.64039421081543
    7. '0' → logprob: -8.51539421081543
    8. 'step' → logprob: -8.64039421081543
    9. ' -' → logprob: -9.14039421081543
    10. ' ' → logprob: -9.26539421081543

Token 137: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' k' (ID: 372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2564254701137543
    2. ' for' → logprob: -1.5064254999160767
    3. 'while' → logprob: -6.381425380706787
    4. 'if' → logprob: -6.881425380706787
    5. 'j' → logprob: -7.256425380706787
    6. ' while' → logprob: -7.881425380706787
    7. 'next' → logprob: -9.006425857543945
    8. ' if' → logprob: -9.131425857543945
    9. 'ptr' → logprob: -9.381425857543945
    10. '<|end|>' → logprob: -9.631425857543945

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054974477738142014
    2. '=' → logprob: -2.9299745559692383
    3. ' in' → logprob: -10.179974555969238
    4. ',' → logprob: -11.429974555969238
    5. 'x' → logprob: -11.804974555969238
    6. ' ' → logprob: -12.179974555969238
    7. 'ex' → logprob: -12.304974555969238
    8. '   ' → logprob: -12.929974555969238
    9. 'range' → logprob: -13.054974555969238
    10. ')' → logprob: -13.179974555969238

Token 141: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.03960010036826134
    2. ' step' → logprob: -3.664600133895874
    3. 'idx' → logprob: -5.164599895477295
    4. 'm' → logprob: -6.414599895477295
    5. 'n' → logprob: -6.539599895477295
    6. '-' → logprob: -6.664599895477295
    7. 's' → logprob: -7.039599895477295
    8. 'holder' → logprob: -7.164599895477295
    9. 'ptr' → logprob: -8.039600372314453
    10. 'len' → logprob: -8.289600372314453

Token 142: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0034520532935857773
    2. '(ptr' → logprob: -6.253451824188232
    3. '(' → logprob: -6.503451824188232
    4. ' (' → logprob: -11.87845230102539
    5. '(index' → logprob: -11.87845230102539
    6. '(
' → logprob: -12.50345230102539
    7. '(n' → logprob: -13.87845230102539
    8. '(prev' → logprob: -14.00345230102539
    9. '(k' → logprob: -14.25345230102539
    10. '(i' → logprob: -14.50345230102539

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5217993855476379
    2. '+' → logprob: -1.5217993259429932
    3. ' +' → logprob: -1.8967993259429932
    4. ' ,' → logprob: -3.771799325942993
    5. '+m' → logprob: -4.396799564361572
    6. '   ' → logprob: -7.521799564361572
    7. ',m' → logprob: -7.646799564361572
    8. '+,' → logprob: -7.646799564361572
    9. '+n' → logprob: -8.146799087524414
    10. '+k' → logprob: -8.271799087524414

Token 144: ' ptr' (ID: 23266)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.130316972732544
    2. '-' → logprob: -1.255316972732544
    3. 'min' → logprob: -2.130316972732544
    4. 'n' → logprob: -2.755316972732544
    5. ' idx' → logprob: -2.755316972732544
    6. ' min' → logprob: -3.005316972732544
    7. '0' → logprob: -3.505316972732544
    8. 'max' → logprob: -3.755316972732544
    9. ' n' → logprob: -4.130316734313965
    10. ' -' → logprob: -4.130316734313965

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01967858336865902
    2. '-' → logprob: -4.769678592681885
    3. ' -' → logprob: -5.019678592681885
    4. ')
' → logprob: -6.019678592681885
    5. '+' → logprob: -6.769678592681885
    6. ' )' → logprob: -7.769678592681885
    7. ' +' → logprob: -8.019678115844727
    8. '   ' → logprob: -11.144678115844727
    9. ')

' → logprob: -11.644678115844727
    10. '-)' → logprob: -11.894678115844727

Token 146: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2256283015012741
    2. 'k' → logprob: -1.6006282567977905
    3. ' ' → logprob: -9.475627899169922
    4. '   ' → logprob: -10.475627899169922
    5. ' not' → logprob: -10.913127899169922
    6. ' ' → logprob: -11.225627899169922
    7. ' s' → logprob: -11.413127899169922
    8. '  ' → logprob: -11.850627899169922
    9. '	k' → logprob: -11.850627899169922
    10. 's' → logprob: -11.913127899169922

Token 149: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13385871052742004
    2. '==' → logprob: -2.1338586807250977
    3. '==-' → logprob: -5.258858680725098
    4. ' !=' → logprob: -7.383858680725098
    5. '>' → logprob: -8.133858680725098
    6. '!=' → logprob: -8.508858680725098
    7. '<' → logprob: -9.133858680725098
    8. ' ' → logprob: -9.258858680725098
    9. ' >' → logprob: -9.633858680725098
    10. ')' → logprob: -9.758858680725098

Token 150: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018153687939047813
    2. ' -' → logprob: -4.018153667449951
    3. ' ' → logprob: -12.89315414428711
    4. '   ' → logprob: -14.39315414428711
    5. '  ' → logprob: -15.26815414428711
    6. '0' → logprob: -15.64315414428711
    7. '-p' → logprob: -16.26815414428711
    8. '1' → logprob: -17.39315414428711
    9. '-k' → logprob: -17.39315414428711
    10. '-i' → logprob: -17.76815414428711

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '<|end|>' → logprob: -15.500001907348633
    4. '-' → logprob: -15.750001907348633
    5. '2' → logprob: -17.000001907348633
    6. 'k' → logprob: -17.500001907348633
    7. '<|end|>' → logprob: -17.687501907348633
    8. '0' → logprob: -17.750001907348633
    9. '```' → logprob: -17.875001907348633
    10. ',' → logprob: -18.062501907348633

Token 152: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.44197630882263184
    2. ':' → logprob: -1.0669763088226318
    3. ' and' → logprob: -4.566976547241211
    4. '       ' → logprob: -6.191976547241211
    5. '):
' → logprob: -8.066976547241211
    6. '   ' → logprob: -8.191976547241211
    7. ':

' → logprob: -9.941976547241211
    8. 'and' → logprob: -10.066976547241211
    9. ',' → logprob: -11.316976547241211
    10. '<|end|>' → logprob: -11.316976547241211

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013447964563965797
    2. ' ptr' → logprob: -5.1384477615356445
    3. '
' → logprob: -5.7634477615356445
    4. '   ' → logprob: -7.0134477615356445
    5. ' idx' → logprob: -7.1384477615356445
    6. ' result' → logprob: -7.2634477615356445
    7. 'ptr' → logprob: -7.5134477615356445
    8. 'result' → logprob: -7.7634477615356445
    9. 'idx' → logprob: -8.513447761535645
    10. ' holder' → logprob: -9.388447761535645

Token 154: ' flag' (ID: 9641)
  Prédit: 'ptr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ptr' → logprob: -1.2952345609664917
    2. 'idx' → logprob: -1.5452345609664917
    3. 'result' → logprob: -1.9202345609664917
    4. 'holder' → logprob: -1.9202345609664917
    5. ' ptr' → logprob: -2.4202346801757812
    6. ' idx' → logprob: -3.0452346801757812
    7. ' holder' → logprob: -3.4202346801757812
    8. ' result' → logprob: -3.5452346801757812
    9. '   ' → logprob: -4.920234680175781
    10. ' if' → logprob: -5.670234680175781

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029794003814458847
    2. '=' → logprob: -3.5297939777374268
    3. '=True' → logprob: -10.154793739318848
    4. ' ' → logprob: -13.779793739318848
    5. ',' → logprob: -14.279793739318848
    6. '=False' → logprob: -14.404793739318848
    7. '       ' → logprob: -14.654793739318848
    8. '   ' → logprob: -14.904793739318848
    9. ')' → logprob: -14.904793739318848
    10. 'True' → logprob: -15.029793739318848

Token 156: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029752686619758606
    2. ' True' → logprob: -3.529752731323242
    3. 'k' → logprob: -14.154752731323242
    4. 'False' → logprob: -14.154752731323242
    5. '(True' → logprob: -14.779752731323242
    6. '   ' → logprob: -15.904752731323242
    7. '=True' → logprob: -16.654752731323242
    8. ' k' → logprob: -17.654752731323242
    9. '1' → logprob: -17.779752731323242
    10. ' ' → logprob: -18.404752731323242

Token 157: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09842319786548615
    2. '
' → logprob: -2.4734232425689697
    3. '   ' → logprob: -5.723423004150391
    4. ' ptr' → logprob: -5.848423004150391
    5. '<|end|>' → logprob: -6.598423004150391
    6. 'ptr' → logprob: -7.973423004150391
    7. '        
' → logprob: -8.34842300415039
    8. ';' → logprob: -8.34842300415039
    9. ',' → logprob: -8.47342300415039
    10. '
' → logprob: -8.72342300415039

Token 158: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6220756769180298
    2. ' ptr' → logprob: -1.3720756769180298
    3. '
' → logprob: -2.4970755577087402
    4. ' idx' → logprob: -3.2470755577087402
    5. 'ptr' → logprob: -3.6220755577087402
    6. '   ' → logprob: -3.7470755577087402
    7. 'idx' → logprob: -4.49707555770874
    8. '        
' → logprob: -5.74707555770874
    9. '           ' → logprob: -5.74707555770874
    10. '<|end|>' → logprob: -5.74707555770874

Token 159: ' ptr' (ID: 23266)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1876815557479858
    2. '       ' → logprob: -1.4376815557479858
    3. ' if' → logprob: -1.5626815557479858
    4. '    ' → logprob: -2.5626816749572754
    5. ' else' → logprob: -3.3126816749572754
    6. '
' → logprob: -3.4376816749572754
    7. 'if' → logprob: -3.4376816749572754
    8. ' ptr' → logprob: -4.187681674957275
    9. 'else' → logprob: -4.437681674957275
    10. '<|end|>' → logprob: -5.062681674957275

Token 160: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9645203351974487
    2. ' +=' → logprob: -1.0895203351974487
    3. '=' → logprob: -1.3395203351974487
    4. ' =' → logprob: -3.9645204544067383
    5. '+' → logprob: -6.714520454406738
    6. ' -=' → logprob: -8.839520454406738
    7. '-=' → logprob: -9.589520454406738
    8. ' +' → logprob: -10.214520454406738
    9. ' ' → logprob: -11.089520454406738
    10. ')' → logprob: -11.464520454406738

Token 161: ' idx' (ID: 14016)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7621464133262634
    2. 'k' → logprob: -1.1371464729309082
    3. ' idx' → logprob: -2.012146472930908
    4. 'idx' → logprob: -3.262146472930908
    5. ' n' → logprob: -4.512146472930908
    6. ' max' → logprob: -4.637146472930908
    7. ' ptr' → logprob: -5.262146472930908
    8. 'ptr' → logprob: -5.387146472930908
    9. 'n' → logprob: -5.887146472930908
    10. 'max' → logprob: -6.012146472930908

Token 162: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09359421581029892
    2. ' +' → logprob: -2.4685943126678467
    3. ' if' → logprob: -6.218594074249268
    4. 'if' → logprob: -6.968594074249268
    5. '+m' → logprob: -7.468594074249268
    6. '<|end|>' → logprob: -7.468594074249268
    7. '+
' → logprob: -8.593594551086426
    8. '+k' → logprob: -9.468594551086426
    9. '   ' → logprob: -9.718594551086426
    10. '<|end|>' → logprob: -10.093594551086426

Token 163: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007677250076085329
    2. ' m' → logprob: -5.50767707824707
    3. '1' → logprob: -5.63267707824707
    4. ' ' → logprob: -11.63267707824707
    5. 's' → logprob: -12.88267707824707
    6. '   ' → logprob: -14.63267707824707
    7. 'k' → logprob: -15.94517707824707
    8. '2' → logprob: -16.00767707824707
    9. '  ' → logprob: -16.07017707824707
    10. '	m' → logprob: -16.13267707824707

Token 164: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8048863410949707
    2. ' if' → logprob: -1.5548863410949707
    3. '<|end|>' → logprob: -1.5548863410949707
    4. 'if' → logprob: -2.5548863410949707
    5. '   ' → logprob: -3.0548863410949707
    6. '+' → logprob: -6.429886341094971
    7. '    
' → logprob: -6.554886341094971
    8. '<|end|>' → logprob: -7.179886341094971
    9. '```' → logprob: -7.929886341094971
    10. ' ' → logprob: -8.679885864257812

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03555417060852051
    2. '<|end|>' → logprob: -3.5355541706085205
    3. '
' → logprob: -5.660553932189941
    4. ' if' → logprob: -6.535553932189941
    5. 'if' → logprob: -7.785553932189941
    6. '    
' → logprob: -9.035553932189941
    7. '<|end|>' → logprob: -9.660553932189941
    8. '```' → logprob: -9.785553932189941
    9. ')' → logprob: -10.035553932189941
    10. ',' → logprob: -10.785553932189941

Token 166: ' holder' (ID: 17632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02502511255443096
    2. 'if' → logprob: -4.025024890899658
    3. ' if' → logprob: -5.400024890899658
    4. '
' → logprob: -6.525024890899658
    5. 'idx' → logprob: -8.275025367736816
    6. '<|end|>' → logprob: -8.275025367736816
    7. '    
' → logprob: -8.775025367736816
    8. '```' → logprob: -9.525025367736816
    9. 'while' → logprob: -10.900025367736816
    10. '	if' → logprob: -11.025025367736816

Token 167: '.push' (ID: 4885)
  Prédit: '.push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.push' → logprob: -0.16181743144989014
    2. '.pop' → logprob: -1.9118174314498901
    3. '.' → logprob: -6.53681755065918
    4. '.q' → logprob: -9.16181755065918
    5. '.append' → logprob: -11.66181755065918
    6. 'push' → logprob: -11.91181755065918
    7. '.p' → logprob: -12.03681755065918
    8. '.put' → logprob: -13.03681755065918
    9. '.insert' → logprob: -13.16181755065918
    10. ' .' → logprob: -13.53681755065918

Token 168: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09007946401834488
    2. '(ptr' → logprob: -2.5900795459747314
    3. '(k' → logprob: -4.590079307556152
    4. '(idx' → logprob: -7.090079307556152
    5. 'ptr' → logprob: -10.590079307556152
    6. '0' → logprob: -10.965079307556152
    7. '(-' → logprob: -11.340079307556152
    8. '(index' → logprob: -11.340079307556152
    9. '(None' → logprob: -11.590079307556152
    10. '(len' → logprob: -11.590079307556152

Token 169: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.48868945240974426
    2. 'ptr' → logprob: -1.4886894226074219
    3. 'idx' → logprob: -2.238689422607422
    4. '(ptr' → logprob: -4.238689422607422
    5. '(idx' → logprob: -4.863689422607422
    6. ' k' → logprob: -4.988689422607422
    7. '0' → logprob: -5.113689422607422
    8. ' ptr' → logprob: -5.238689422607422
    9. '(k' → logprob: -5.363689422607422
    10. ' idx' → logprob: -5.988689422607422

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011134239612147212
    2. ',k' → logprob: -7.876113414764404
    3. ')' → logprob: -8.001113891601562
    4. ' ,' → logprob: -8.501113891601562
    5. '0' → logprob: -9.876113891601562
    6. ',index' → logprob: -10.626113891601562
    7. '1' → logprob: -11.001113891601562
    8. '7' → logprob: -11.126113891601562
    9. 'ptr' → logprob: -11.251113891601562
    10. ',p' → logprob: -11.626113891601562

Token 171: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07734064757823944
    2. ' k' → logprob: -2.827340602874756
    3. 'ptr' → logprob: -4.952340602874756
    4. 'str' → logprob: -5.202340602874756
    5. ' ptr' → logprob: -6.952340602874756
    6. ' str' → logprob: -7.327340602874756
    7. 's' → logprob: -8.077341079711914
    8. 'idx' → logprob: -8.077341079711914
    9. ''' → logprob: -9.077341079711914
    10. ' s' → logprob: -9.077341079711914

Token 172: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004499765345826745
    2. ')
' → logprob: -7.750450134277344
    3. ' )' → logprob: -11.000450134277344
    4. ')

' → logprob: -14.000450134277344
    5. ')
' → logprob: -14.500450134277344
    6. ');' → logprob: -14.750450134277344
    7. '))' → logprob: -15.125450134277344
    8. ')`' → logprob: -15.500450134277344
    9. '   ' → logprob: -16.000450134277344
    10. ' )
' → logprob: -16.750450134277344

Token 173: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.11113372445106506
    2. '1' → logprob: -2.6111338138580322
    3. ' idx' → logprob: -3.4861338138580322
    4. 'ptr' → logprob: -7.736133575439453
    5. ')' → logprob: -8.111133575439453
    6. ' ' → logprob: -8.361133575439453
    7. '0' → logprob: -10.361133575439453
    8. '	idx' → logprob: -10.986133575439453
    9. '[idx' → logprob: -11.111133575439453
    10. ' ptr' → logprob: -11.236133575439453

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001138431136496365
    2. ')
' → logprob: -6.876138210296631
    3. ' )' → logprob: -9.251138687133789
    4. ');' → logprob: -12.501138687133789
    5. '   ' → logprob: -13.251138687133789
    6. ')
' → logprob: -13.751138687133789
    7. ')

' → logprob: -14.001138687133789
    8. '))' → logprob: -14.126138687133789
    9. ' )
' → logprob: -14.501138687133789
    10. ')`' → logprob: -14.876138687133789

Token 175: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3032933175563812
    2. '<|end|>' → logprob: -1.6782933473587036
    3. ')' → logprob: -3.303293228149414
    4. '
' → logprob: -4.178293228149414
    5. ' idx' → logprob: -4.678293228149414
    6. '[idx' → logprob: -4.803293228149414
    7. '<|end|>' → logprob: -7.553293228149414
    8. '	idx' → logprob: -7.553293228149414
    9. '```' → logprob: -7.678293228149414
    10. ' if' → logprob: -8.053293228149414

Token 176: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.12553779780864716
    2. 'if' → logprob: -2.250537872314453
    3. ' if' → logprob: -4.625537872314453
    4. ' idx' → logprob: -6.250537872314453
    5. '[idx' → logprob: -8.250537872314453
    6. '   ' → logprob: -8.500537872314453
    7. '	idx' → logprob: -9.250537872314453
    8. '
' → logprob: -9.375537872314453
    9. '    
' → logprob: -9.875537872314453
    10. '_idx' → logprob: -10.625537872314453

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1445043534040451
    2. '+=' → logprob: -2.6445043087005615
    3. ' +=' → logprob: -3.1445043087005615
    4. ' =' → logprob: -3.8945043087005615
    5. '+' → logprob: -9.76950454711914
    6. '++' → logprob: -13.01950454711914
    7. ' ' → logprob: -13.39450454711914
    8. ')' → logprob: -13.51950454711914
    9. '<|end|>' → logprob: -13.64450454711914
    10. ' +' → logprob: -14.01950454711914

Token 178: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0037292989436537027
    2. ' k' → logprob: -5.878729343414307
    3. 'ptr' → logprob: -7.128729343414307
    4. 'idx' → logprob: -9.253728866577148
    5. ' ptr' → logprob: -11.003728866577148
    6. ' idx' → logprob: -12.253728866577148
    7. '   ' → logprob: -13.878728866577148
    8. ' ' → logprob: -14.128728866577148
    9. '  ' → logprob: -14.128728866577148
    10. '	k' → logprob: -14.378728866577148

Token 179: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.023640483617782593
    2. 'not' → logprob: -4.1486406326293945
    3. ' flag' → logprob: -5.7736406326293945
    4. ' idx' → logprob: -5.8986406326293945
    5. 'flag' → logprob: -7.2736406326293945
    6. ' ptr' → logprob: -7.7736406326293945
    7. 'idx' → logprob: -7.7736406326293945
    8. 'ptr' → logprob: -9.523640632629395
    9. ' holder' → logprob: -9.773640632629395
    10. ' ' → logprob: -11.148640632629395

Token 183: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.22545857727527618
    2. 'flag' → logprob: -1.6004586219787598
    3. '	flag' → logprob: -10.975458145141602
    4. '(flag' → logprob: -10.975458145141602
    5. ' ' → logprob: -12.100458145141602
    6. '  ' → logprob: -13.475458145141602
    7. ' ' → logprob: -13.475458145141602
    8. 's' → logprob: -13.725458145141602
    9. 'Flag' → logprob: -14.475458145141602
    10. '_flag' → logprob: -15.225458145141602

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04958456754684448
    2. ':
' → logprob: -3.0495846271514893
    3. ' :' → logprob: -7.04958438873291
    4. ' :
' → logprob: -9.17458438873291
    5. ':return' → logprob: -11.79958438873291
    6. ':

' → logprob: -12.42458438873291
    7. ':
' → logprob: -12.67458438873291
    8. ' or' → logprob: -12.67458438873291
    9. ' and' → logprob: -12.79958438873291
    10. '   ' → logprob: -12.92458438873291

Token 185: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01165434904396534
    2. ' break' → logprob: -5.136654376983643
    3. '       ' → logprob: -6.261654376983643
    4. 'break' → logprob: -6.386654376983643
    5. ' print' → logprob: -6.886654376983643
    6. 'print' → logprob: -7.136654376983643
    7. '    ' → logprob: -8.761653900146484
    8. ' ' → logprob: -10.386653900146484
    9. '	break' → logprob: -10.511653900146484
    10. '   ' → logprob: -10.886653900146484

Token 186: ' print' (ID: 2123)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.8318275809288025
    2. 'break' → logprob: -0.9568275809288025
    3. '   ' → logprob: -2.4568276405334473
    4. 'print' (adapté à ' print') → logprob: -2.7068276405334473
    5. ' print' → logprob: -3.5818276405334473
    6. '    ' → logprob: -8.956827163696289
    7. '       ' → logprob: -9.456827163696289
    8. '	break' → logprob: -9.956827163696289
    9. ' ' → logprob: -10.081827163696289
    10. '  ' → logprob: -10.831827163696289

Token 187: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.007048771250993013
    2. '-' → logprob: -5.007048606872559
    3. '("-' → logprob: -8.757048606872559
    4. '(' → logprob: -8.757048606872559
    5. '('-' → logprob: -11.382048606872559
    6. ' -' → logprob: -14.132048606872559
    7. '(
' → logprob: -14.257048606872559
    8. '"-' → logprob: -14.257048606872559
    9. '("' → logprob: -14.632048606872559
    10. '()-' → logprob: -14.757048606872559

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '１' → logprob: -16.500003814697266
    4. '
' → logprob: -17.062503814697266
    5. '   ' → logprob: -17.312503814697266
    6. '```' → logprob: -17.437503814697266
    7. '۱' → logprob: -17.812503814697266
    8. '2' → logprob: -18.000003814697266
    9. '11' → logprob: -18.312503814697266
    10. '  ' → logprob: -18.375003814697266

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10236362367868423
    2. ')
' → logprob: -2.3523635864257812
    3. '       ' → logprob: -6.227363586425781
    4. '   ' → logprob: -9.602363586425781
    5. ' )' → logprob: -9.977363586425781
    6. ')return' → logprob: -10.602363586425781
    7. ')
' → logprob: -10.852363586425781
    8. ');' → logprob: -12.227363586425781
    9. ' )
' → logprob: -12.352363586425781
    10. '           ' → logprob: -12.977363586425781

Token 190: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: ' quit' (ID: 27737)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.963693380355835
    2. ' sys' → logprob: -1.088693380355835
    3. 'sys' → logprob: -1.338693380355835
    4. ' break' → logprob: -4.713693618774414
    5. 'break' → logprob: -5.088693618774414
    6. '   ' → logprob: -6.213693618774414
    7. '	sys' → logprob: -6.838693618774414
    8. 'exit' → logprob: -7.088693618774414
    9. ' ' → logprob: -8.213693618774414
    10. ' exit' → logprob: -8.838693618774414

Token 192: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00041696816333569586
    2. '()
' → logprob: -7.8754167556762695
    3. '())' → logprob: -10.87541675567627
    4. '()<' → logprob: -12.50041675567627
    5. '(' → logprob: -12.62541675567627
    6. '()

' → logprob: -13.00041675567627
    7. '()>' → logprob: -13.37541675567627
    8. '();' → logprob: -13.62541675567627
    9. '<|end|>' → logprob: -14.12541675567627
    10. '()%' → logprob: -14.25041675567627

Token 193: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25622260570526123
    2. ' x' → logprob: -2.131222724914551
    3. 'i' → logprob: -3.256222724914551
    4. ' _' → logprob: -4.256222724914551
    5. 'x' → logprob: -4.381222724914551
    6. ' step' → logprob: -4.381222724914551
    7. ' move' → logprob: -5.006222724914551
    8. '_' → logprob: -5.006222724914551
    9. ' d' → logprob: -5.506222724914551
    10. 'd' → logprob: -6.131222724914551

Token 195: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026401663199067116
    2. 'in' → logprob: -3.6514017581939697
    3. ' ' → logprob: -9.27640151977539
    4. '_' → logprob: -12.90140151977539
    5. '_in' → logprob: -13.52640151977539
    6. '  ' → logprob: -13.90140151977539
    7. '   ' → logprob: -14.02640151977539
    8. ',' → logprob: -14.90140151977539
    9. ' ' → logprob: -14.90140151977539
    10. '	in' → logprob: -15.02640151977539

Token 196: ' holder' (ID: 17632)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3159581124782562
    2. 'holder' → logprob: -1.3159581422805786
    3. ' result' → logprob: -6.565958023071289
    4. ' holder' → logprob: -6.690958023071289
    5. 'range' → logprob: -10.315958023071289
    6. '(holder' → logprob: -12.440958023071289
    7. ' ' → logprob: -13.315958023071289
    8. '  ' → logprob: -13.815958023071289
    9. '(result' → logprob: -13.940958023071289
    10. 're' → logprob: -13.940958023071289

Token 197: '.q' (ID: 20954)
  Prédit: '.q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.q' → logprob: -0.0013810674427077174
    2. '.' → logprob: -6.876380920410156
    3. '.pop' → logprob: -8.626380920410156
    4. '.push' → logprob: -9.376380920410156
    5. ' .' → logprob: -10.626380920410156
    6. 'q' → logprob: -11.126380920410156
    7. '`.' → logprob: -11.751380920410156
    8. 'print' → logprob: -12.001380920410156
    9. 'push' → logprob: -12.251380920410156
    10. ''.' → logprob: -12.501380920410156

Token 198: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7730876803398132
    2. ':' → logprob: -1.273087739944458
    3. 'print' → logprob: -1.523087739944458
    4. ' ,' → logprob: -3.648087739944458
    5. '   ' → logprob: -5.023087501525879
    6. ' print' → logprob: -5.523087501525879
    7. '.print' → logprob: -6.773087501525879
    8. ',end' → logprob: -7.523087501525879
    9. ':
' → logprob: -7.648087501525879
    10. ')' → logprob: -8.523087501525879

Token 199: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004115681163966656
    2. ' print' → logprob: -5.504115581512451
    3. '   ' → logprob: -10.25411605834961
    4. '	print' → logprob: -13.75411605834961
    5. '    ' → logprob: -15.12911605834961
    6. 'end' → logprob: -15.12911605834961
    7. '.print' → logprob: -16.12911605834961
    8. '(print' → logprob: -16.87911605834961
    9. '<|end|>' → logprob: -17.12911605834961
    10. ' ' → logprob: -17.25411605834961

Token 200: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001170460251159966
    2. ' print' → logprob: -6.751170635223389
    3. '   ' → logprob: -16.126171112060547
    4. 'end' → logprob: -17.126171112060547
    5. '(print' → logprob: -17.251171112060547
    6. '.print' → logprob: -17.376171112060547
    7. 'pr' → logprob: -17.501171112060547
    8. '	print' → logprob: -17.626171112060547
    9. '#print' → logprob: -18.751171112060547
    10. 'printf' → logprob: -19.251171112060547

Token 201: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01767958514392376
    2. 'print' → logprob: -4.392679691314697
    3. '.' → logprob: -6.017679691314697
    4. '.print' → logprob: -6.392679691314697
    5. '+=' → logprob: -7.767679691314697
    6. ' +=' → logprob: -8.517679214477539
    7. '.write' → logprob: -8.642679214477539
    8. ' print' → logprob: -9.142679214477539
    9. ' .' → logprob: -9.517679214477539
    10. 'append' → logprob: -10.142679214477539

Token 202: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.02414470538496971
    2. '(x' → logprob: -3.7741446495056152
    3. '(' → logprob: -7.524144649505615
    4. 'str' → logprob: -8.649145126342773
    5. '('' → logprob: -8.774145126342773
    6. 'x' → logprob: -11.524145126342773
    7. '(chr' → logprob: -11.524145126342773
    8. '(f' → logprob: -11.899145126342773
    9. '("' → logprob: -13.899145126342773
    10. ' str' → logprob: -14.649145126342773

Token 203: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.0339031834737398e-05
    2. '(' → logprob: -10.875020027160645
    3. 'x' → logprob: -13.750020027160645
    4. ' (' → logprob: -16.37502098083496
    5. '((' → logprob: -16.50002098083496
    6. ')' → logprob: -16.50002098083496
    7. '(int' → logprob: -16.87502098083496
    8. ')(' → logprob: -18.00002098083496
    9. '(abs' → logprob: -18.37502098083496
    10. ')x' → logprob: -19.25002098083496

Token 204: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16058997809886932
    2. ')' → logprob: -1.9105899333953857
    3. ' ))' → logprob: -8.910590171813965
    4. '+' → logprob: -9.035590171813965
    5. ' )' → logprob: -9.910590171813965
    6. '))
' → logprob: -10.410590171813965
    7. ')))' → logprob: -10.535590171813965
    8. '))

' → logprob: -13.535590171813965
    9. ' +' → logprob: -13.910590171813965
    10. '));' → logprob: -14.535590171813965

Token 205: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003749129129573703
    2. '
' → logprob: -5.628748893737793
    3. ' print' → logprob: -9.128748893737793
    4. ' 
' → logprob: -10.753748893737793
    5. '  
' → logprob: -12.003748893737793
    6. '    
' → logprob: -12.503748893737793
    7. '```' → logprob: -13.003748893737793
    8. '
' → logprob: -13.128748893737793
    9. ')
' → logprob: -13.503748893737793
    10. 'result' → logprob: -13.753748893737793

Token 206: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.005438300780951977
    2. '("' → logprob: -5.255438327789307
    3. '(' → logprob: -8.505437850952148
    4. ''' → logprob: -13.630437850952148
    5. '("("' → logprob: -15.005437850952148
    6. ' ('' → logprob: -16.00543785095215
    7. '('\' → logprob: -16.13043785095215
    8. '"' → logprob: -16.13043785095215
    9. '(*' → logprob: -16.25543785095215
    10. '()' → logprob: -16.50543785095215

Token 207: ' '.' (ID: 12662)
  Prédit: ' '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '.' → logprob: -0.006146823056042194
    2. ' ')' → logprob: -5.1311469078063965
    3. ''.' → logprob: -9.006146430969238
    4. ' '' → logprob: -9.506146430969238
    5. ' ').' → logprob: -12.006146430969238
    6. ''' → logprob: -12.506146430969238
    7. ' ''.' → logprob: -12.631146430969238
    8. '.join' → logprob: -12.881146430969238
    9. ' ' → logprob: -13.756146430969238
    10. '')' → logprob: -13.756146430969238

Token 208: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.3663626305060461e-05
    2. ' join' → logprob: -11.87501335144043
    3. 'j' → logprob: -13.25001335144043
    4. 'jo' → logprob: -13.62501335144043
    5. '.' → logprob: -14.12501335144043
    6. ''' → logprob: -14.25001335144043
    7. 'print' → logprob: -14.37501335144043
    8. ')' → logprob: -14.62501335144043
    9. ''.' → logprob: -14.87501335144043
    10. '.join' → logprob: -15.12501335144043

Token 209: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.1888679839321412e-05
    2. 'result' → logprob: -10.750021934509277
    3. '(' → logprob: -15.000021934509277
    4. ',result' → logprob: -17.75002098083496
    5. '=result' → logprob: -18.00002098083496
    6. ')' → logprob: -18.25002098083496
    7. '(results' → logprob: -19.50002098083496
    8. ' result' → logprob: -19.50002098083496
    9. '[result' → logprob: -19.75002098083496
    10. ' (' → logprob: -21.00002098083496

Token 210: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02324955351650715
    2. ')' → logprob: -3.773249626159668
    3. '))
' → logprob: -12.773249626159668
    4. ')))' → logprob: -14.023249626159668
    5. '()))' → logprob: -15.398249626159668
    6. ' ))' → logprob: -15.898249626159668
    7. '())' → logprob: -17.52324867248535
    8. ')
' → logprob: -17.52324867248535
    9. '()' → logprob: -17.64824867248535
    10. '));' → logprob: -17.77324867248535


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 208
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 148
Précision stricte (1ère position): 32.69%
Précision adaptée (1ère position): 33.17%
Précision (top 10): 71.15%
================================================================================
