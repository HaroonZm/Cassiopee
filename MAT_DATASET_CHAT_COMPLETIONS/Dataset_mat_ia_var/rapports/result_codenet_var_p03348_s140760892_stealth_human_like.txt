================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
from functools import reduce
from itertools import zip_longest
from operator import mul

def dfs(links):
    # bon, parcourir le graphe pour trouver un chemin...
    q = deque([(v, 0) for v in links[0]])
    v = 0
    while q:
        v, a = q.popleft()  # v : sommet courant, a : parent
        for u in links[v]:
            if u != a:
                q.append((u, v))
    anc = [-1 for _ in range(len(links))]
    q = deque([(u, v) for u in links[v]])
    u = (0, 0)  # pas certain que ça serve mais 
    while q:
        u, a = q.popleft()
        anc[u] = a
        for w in links[u]:
            if w != a:
                q.append((w, u))
    # remonter le chemin à partir de u jusqu’à la racine
    path = [u]
    a = u
    while a != v:
        a = anc[a]
        path.append(a)
    return path

def calc(links, v, a, l):
    # compter les feuilles à chaque profondeur
    ans = [1] * l
    q = deque()
    # Noter les voisins sauf le parent
    for u in links[v]:
        if u != a:
            q.append((u, v, 1))
    ans[0] = len(q)
    while q:
        u, a, c = q.popleft()
        deg = len(links[u]) - 1  # sauf le parent
        if c < len(ans):
            ans[c] = max(ans[c], deg)
        else:
            # il se peut qu’on dépasse la longueur, rare mais bon
            ans.append(deg)
        for w in links[u]:
            if w != a:
                q.append((w, u, c + 1))
    return ans

def solve(n, links):
    if n == 2:
        return (1, 2)  # Cas trivial mais obligatoire
    path = dfs(links)
    c = len(path)
    l = (c + 1) // 2
    # print("chemin trouvé :", path)
    # Si la longueur est paire
    if c % 2 == 0:
        u, v = path[c // 2 - 1], path[c // 2]
        ans1 = calc(links, u, v, l)
        ans2 = calc(links, v, u, l)
        # print("deux centres :", ans1, ans2)
        leaves = 1
        # Pour chaque profondeur, prendre le max des deux centres
        for a1, a2 in zip(ans1, ans2):
            leaves *= max(a1, a2)
        return (len(ans1), leaves * 2)
    else:
        v = path[c // 2]
        ans0 = calc(links, v, None, l)
        leaves = 1
        for x in ans0:
            leaves *= x
        # print("unique centre", ans0, leaves)
        for u in links[v]:
            ans1 = calc(links, u, v, l)
            ans2 = calc(links, v, u, l)
            tmp = 1
            for a1, a2 in zip_longest(ans1, ans2):
                m = max(a1 if a1 is not None else 1, a2 if a2 is not None else 1)
                tmp *= m
            # print('test voisin', u, tmp)
            leaves = min(leaves, tmp * 2)
        return (len(ans0), leaves)

n = int(input())  # nb sommets
links = [set() for _ in range(n)]
for _ in range(n-1):
    a, b = map(int, input().split())
    a -= 1
    b -= 1
    links[a].add(b)
    links[b].add(a)
# Perso j'aurais mis la sortie dans une variable, mais bon...
print(*solve(n, links))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014316747896373272
    2. '.' → logprob: -5.014316558837891
    3. '\(' → logprob: -5.764316558837891
    4. '```' → logprob: -6.889316558837891
    5. '\' → logprob: -7.014316558837891
    6. '\n' → logprob: -7.264316558837891
    7. '[' → logprob: -8.01431655883789
    8. '(
' → logprob: -8.26431655883789
    9. 'import' → logprob: -8.38931655883789
    10. 'newline' → logprob: -8.38931655883789

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.536668598651886
    2. 'd' → logprob: -1.5366685390472412
    3. 'a' → logprob: -2.661668539047241
    4. '\n' → logprob: -3.536668539047241
    5. '\' → logprob: -3.786668539047241
    6. '[' → logprob: -4.53666877746582
    7. 'newline' → logprob: -4.78666877746582
    8. '
' → logprob: -4.78666877746582
    9. ',' → logprob: -5.16166877746582
    10. '.' → logprob: -5.41166877746582

Token 6: ' functools' (ID: 142636)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.2331860363483429
    2. ' collections' → logprob: -2.2331860065460205
    3. ' itertools' → logprob: -2.7331860065460205
    4. ' sys' → logprob: -4.4831862449646
    5. ' heap' → logprob: -4.7331862449646
    6. ' typing' → logprob: -5.1081862449646
    7. ' math' → logprob: -5.9831862449646
    8. ' ' → logprob: -5.9831862449646
    9. ' os' → logprob: -6.7331862449646
    10. ' copy' → logprob: -7.2331862449646

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16117030382156372
    2. 'import' → logprob: -1.911170244216919
    3. '_import' → logprob: -7.411170482635498
    4. '.' → logprob: -8.41117000579834
    5. '_' → logprob: -10.53617000579834
    6. ' ' → logprob: -10.78617000579834
    7. '	import' → logprob: -10.78617000579834
    8. ' .' → logprob: -10.91117000579834
    9. ' _' → logprob: -11.53617000579834
    10. '.import' → logprob: -11.91117000579834

Token 8: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.36401909589767456
    2. 'wrap' → logprob: -1.7390191555023193
    3. 'reduce' → logprob: -2.8640191555023193
    4. ' wraps' → logprob: -3.2390191555023193
    5. ' l' → logprob: -4.23901891708374
    6. 'partial' → logprob: -4.23901891708374
    7. 'cache' → logprob: -6.23901891708374
    8. 'cached' → logprob: -6.61401891708374
    9. 'cmp' → logprob: -7.23901891708374
    10. ' reduce' → logprob: -9.489019393920898

Token 9: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0556894540786743
    2. '(' → logprob: -1.3056894540786743
    3. '\n' → logprob: -1.3056894540786743
    4. 'def' → logprob: -3.3056893348693848
    5. '
' → logprob: -3.8056893348693848
    6. 'import' → logprob: -3.8056893348693848
    7. '(
' → logprob: -4.555689334869385
    8. '```' → logprob: -5.180689334869385
    9. ',' → logprob: -5.805689334869385
    10. '' → logprob: -6.805689334869385

Token 10: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25427788496017456
    2. ',' → logprob: -2.2542779445648193
    3. '\' → logprob: -2.6292779445648193
    4. '(
' → logprob: -4.50427770614624
    5. '\n' → logprob: -4.75427770614624
    6. '```' → logprob: -5.25427770614624
    7. '`' → logprob: -5.37927770614624
    8. 'import' → logprob: -5.50427770614624
    9. 'def' → logprob: -5.87927770614624
    10. '\(' → logprob: -6.37927770614624

Token 11: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.17818789184093475
    2. ' itertools' → logprob: -2.553187847137451
    3. ' math' → logprob: -2.678187847137451
    4. 'operator' → logprob: -4.178187847137451
    5. 'math' → logprob: -7.053187847137451
    6. ' ' → logprob: -8.05318832397461
    7. ' os' → logprob: -9.17818832397461
    8. ' typing' → logprob: -10.67818832397461
    9. ' collections' → logprob: -11.30318832397461
    10. ' heap' → logprob: -12.05318832397461

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3837525248527527
    2. 'import' → logprob: -1.3837525844573975
    3. '.' → logprob: -2.7587525844573975
    4. ' .' → logprob: -5.758752346038818
    5. '.import' → logprob: -6.633752346038818
    6. '	import' → logprob: -9.633752822875977
    7. ' ' → logprob: -10.258752822875977
    8. '.im' → logprob: -10.883752822875977
    9. '_import' → logprob: -10.883752822875977
    10. '.experimental' → logprob: -11.508752822875977

Token 13: ' zip' (ID: 16216)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.9894616007804871
    2. 'count' → logprob: -1.3644616603851318
    3. 'chain' → logprob: -1.8644616603851318
    4. 'com' → logprob: -2.489461660385132
    5. 'cycle' → logprob: -2.739461660385132
    6. ' chain' → logprob: -3.864461660385132
    7. 'group' → logprob: -3.864461660385132
    8. ' accumulate' → logprob: -4.739461421966553
    9. 'product' → logprob: -5.114461421966553
    10. ' cycle' → logprob: -5.489461421966553

Token 14: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -0.0003048378275707364
    2. 'long' → logprob: -8.75030517578125
    3. 'Longest' → logprob: -9.37530517578125
    4. 'import' → logprob: -10.12530517578125
    5. ' longest' → logprob: -11.25030517578125
    6. 'from' → logprob: -13.12530517578125
    7. '```' → logprob: -13.37530517578125
    8. '_exact' → logprob: -14.12530517578125
    9. '   ' → logprob: -14.50030517578125
    10. 'f' → logprob: -14.62530517578125

Token 15: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.7432603272027336e-06
    2. 'uest' → logprob: -13.500001907348633
    3. 'e' → logprob: -16.000001907348633
    4. 'es' → logprob: -16.250001907348633
    5. 'ist' → logprob: -17.250001907348633
    6. 'estand' → logprob: -17.625001907348633
    7. 'esture' → logprob: -17.875001907348633
    8. 'gest' → logprob: -18.000001907348633
    9. 'ест' → logprob: -18.125001907348633
    10. 'ext' → logprob: -18.125001907348633

Token 16: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2766841650009155
    2. '(' → logprob: -1.4016841650009155
    3. '
' → logprob: -2.276684284210205
    4. '\' → logprob: -2.401684284210205
    5. 'def' → logprob: -2.526684284210205
    6. 'import' → logprob: -2.776684284210205
    7. '(
' → logprob: -2.776684284210205
    8. ',' → logprob: -3.401684284210205
    9. '```' → logprob: -4.401684284210205
    10. '

' → logprob: -5.026684284210205

Token 17: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28485384583473206
    2. 'def' → logprob: -2.034853935241699
    3. '(
' → logprob: -2.784853935241699
    4. '\' → logprob: -3.784853935241699
    5. '```' → logprob: -5.159853935241699
    6. ',' → logprob: -5.284853935241699
    7. 'd' → logprob: -5.284853935241699
    8. '\n' → logprob: -5.409853935241699
    9. '
' → logprob: -5.534853935241699
    10. 'import' → logprob: -6.534853935241699

Token 18: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.15469762682914734
    2. 'operator' → logprob: -2.1546976566314697
    3. ' math' → logprob: -4.154697418212891
    4. 'math' → logprob: -5.529697418212891
    5. ' ' → logprob: -6.779697418212891
    6. ' collections' → logprob: -6.779697418212891
    7. ' typing' → logprob: -6.904697418212891
    8. ' functools' → logprob: -6.904697418212891
    9. 'collections' → logprob: -6.904697418212891
    10. ' heap' → logprob: -7.279697418212891

Token 19: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13323496282100677
    2. 'import' → logprob: -2.383234977722168
    3. '.' → logprob: -3.508234977722168
    4. ' .' → logprob: -6.258234977722168
    5. ' as' → logprob: -8.383234977722168
    6. ' ' → logprob: -9.008234977722168
    7. '<|end|>' → logprob: -9.008234977722168
    8. ',' → logprob: -10.383234977722168
    9. ' ,' → logprob: -11.133234977722168
    10. '  ' → logprob: -11.133234977722168

Token 20: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.5825903415679932
    2. ' mul' → logprob: -1.5825903415679932
    3. 'add' → logprob: -2.332590341567993
    4. 'mul' → logprob: -3.207590341567993
    5. ' item' → logprob: -3.207590341567993
    6. ' ' → logprob: -4.082590103149414
    7. 'item' → logprob: -4.332590103149414
    8. 'getitem' → logprob: -5.082590103149414
    9. ' icon' → logprob: -5.707590103149414
    10. ' import' → logprob: -5.707590103149414

Token 21: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9939114451408386
    2. '\' → logprob: -1.4939115047454834
    3. '\n' → logprob: -2.1189115047454834
    4. '
' → logprob: -2.3689115047454834
    5. ',' → logprob: -3.3689115047454834
    6. '

' → logprob: -3.4939115047454834
    7. '(' → logprob: -3.7439115047454834
    8. 'd' → logprob: -3.9939115047454834
    9. '#' → logprob: -4.118911266326904
    10. '(
' → logprob: -4.493911266326904

Token 22: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04395700618624687
    2. '*' → logprob: -4.793957233428955
    3. 'def' → logprob: -4.793957233428955
    4. 'a' → logprob: -4.918957233428955
    5. '#' → logprob: -5.043957233428955
    6. '`' → logprob: -6.543957233428955
    7. ',' → logprob: -6.793957233428955
    8. '\' → logprob: -6.918957233428955
    9. '-' → logprob: -7.043957233428955
    10. '_' → logprob: -7.293957233428955

Token 23: ' dfs' (ID: 51252)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.8842078447341919
    2. ' product' → logprob: -1.509207844734192
    3. ' reduce' → logprob: -2.2592077255249023
    4. ' ' → logprob: -2.6342077255249023
    5. ' compose' → logprob: -2.8842077255249023
    6. ' multiply' → logprob: -3.8842077255249023
    7. ' map' → logprob: -3.8842077255249023
    8. ' fibonacci' → logprob: -4.759207725524902
    9. ' flatten' → logprob: -4.884207725524902
    10. ' vector' → logprob: -4.884207725524902

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01091282069683075
    2. '_' → logprob: -5.135912895202637
    3. '(node' → logprob: -5.885912895202637
    4. ' (' → logprob: -7.510912895202637
    5. '_tree' → logprob: -8.135912895202637
    6. '_recursive' → logprob: -8.385912895202637
    7. '_depth' → logprob: -8.885912895202637
    8. '(tree' → logprob: -8.885912895202637
    9. '(root' → logprob: -9.135912895202637
    10. '(_' → logprob: -9.260912895202637

Token 25: 'links' (ID: 26581)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.7668838500976562
    2. ' node' → logprob: -1.0168838500976562
    3. 'graph' → logprob: -2.6418838500976562
    4. 'node' → logprob: -3.1418838500976562
    5. ' root' → logprob: -3.2668838500976562
    6. 'root' → logprob: -4.641883850097656
    7. ' tree' → logprob: -5.766883850097656
    8. ' stack' → logprob: -6.391883850097656
    9. ' )' → logprob: -6.516883850097656
    10. ' self' → logprob: -6.891883850097656

Token 26: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015167053788900375
    2. '):' → logprob: -4.265167236328125
    3. '[' → logprob: -7.140167236328125
    4. ')' → logprob: -9.515167236328125
    5. '[node' → logprob: -10.390167236328125
    6. '   ' → logprob: -10.640167236328125
    7. ',node' → logprob: -11.515167236328125
    8. ' ,' → logprob: -11.515167236328125
    9. ' ):' → logprob: -11.765167236328125
    10. '=' → logprob: -11.890167236328125

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20673905313014984
    2. '(' → logprob: -1.831739068031311
    3. ':' → logprob: -3.9567389488220215
    4. '    
' → logprob: -6.5817389488220215
    5. '    ' → logprob: -7.0817389488220215
    6. ' (' → logprob: -7.2067389488220215
    7. ' ' → logprob: -7.2067389488220215
    8. '(n' → logprob: -7.4567389488220215
    9. '[' → logprob: -7.9567389488220215
    10. '```' → logprob: -8.45673942565918

Token 28: ' #' (ID: 1069)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -1.0337997674942017
    2. ' stack' → logprob: -1.1587997674942017
    3. '   ' → logprob: -1.4087997674942017
    4. ' queue' → logprob: -3.533799648284912
    5. ' q' → logprob: -5.158799648284912
    6. ' d' → logprob: -5.158799648284912
    7. ' return' → logprob: -5.283799648284912
    8. ' graph' → logprob: -5.533799648284912
    9. 'visited' → logprob: -5.533799648284912
    10. '    
' → logprob: -5.658799648284912

Token 29: ' bon' (ID: 4846)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.724865198135376
    2. ' stack' → logprob: -0.849865198135376
    3. '   ' → logprob: -3.349865198135376
    4. ' queue' → logprob: -4.599864959716797
    5. 'stack' → logprob: -4.724864959716797
    6. ' if' → logprob: -4.724864959716797
    7. 'visited' → logprob: -5.099864959716797
    8. ' def' → logprob: -5.474864959716797
    9. ' seen' → logprob: -5.724864959716797
    10. ' n' → logprob: -6.349864959716797

Token 30: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10707559436559677
    2. 'k' → logprob: -3.1070756912231445
    3. 'us' → logprob: -3.4820756912231445
    4. 'e' → logprob: -5.1070756912231445
    5. 'def' → logprob: -5.2320756912231445
    6. 'ds' → logprob: -5.2320756912231445
    7. 'es' → logprob: -6.3570756912231445
    8. 'de' → logprob: -6.6070756912231445
    9. '   ' → logprob: -7.3570756912231445
    10. 'dl' → logprob: -7.6070756912231445

Token 31: ' parcour' (ID: 130642)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.34561651945114136
    2. ' visited' → logprob: -2.095616579055786
    3. ' if' → logprob: -2.970616579055786
    4. ' queue' → logprob: -3.845616579055786
    5. ' n' → logprob: -3.970616579055786
    6. 'stack' → logprob: -4.095616340637207
    7. ' seen' → logprob: -4.845616340637207
    8. ' graph' → logprob: -4.970616340637207
    9. '   ' → logprob: -5.345616340637207
    10. 'visited' → logprob: -5.345616340637207

Token 32: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.017423661425709724
    2. 'u' → logprob: -4.267423629760742
    3. 'r' → logprob: -6.767423629760742
    4. 't' → logprob: -6.892423629760742
    5. 's' → logprob: -7.767423629760742
    6. '```' → logprob: -8.892423629760742
    7. 'def' → logprob: -9.517423629760742
    8. '=' → logprob: -9.642423629760742
    9. '   ' → logprob: -9.642423629760742
    10. 'er' → logprob: -10.017423629760742

Token 33: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.325708270072937
    2. '(' → logprob: -1.825708270072937
    3. ' links' → logprob: -2.7007083892822266
    4. ' (' → logprob: -4.075708389282227
    5. '_' → logprob: -4.325708389282227
    6. ' la' → logprob: -5.825708389282227
    7. 's' → logprob: -6.325708389282227
    8. ' les' → logprob: -6.325708389282227
    9. '   ' → logprob: -6.575708389282227
    10. ' `' → logprob: -7.075708389282227

Token 34: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.5800255537033081
    2. ' graph' → logprob: -1.580025553703308
    3. 'graph' → logprob: -2.0800256729125977
    4. 'gr' → logprob: -2.3300256729125977
    5. 's' → logprob: -6.580025672912598
    6. '   ' → logprob: -6.705025672912598
    7. ' lien' → logprob: -7.205025672912598
    8. '```' → logprob: -7.330025672912598
    9. ' stack' → logprob: -7.517525672912598
    10. ' ' → logprob: -7.517525672912598

Token 35: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04161355271935463
    2. 'he' → logprob: -3.2916135787963867
    3. 'ph' → logprob: -5.666613578796387
    4. 'һ' → logprob: -11.166613578796387
    5. 'phe' → logprob: -11.291613578796387
    6. 'hé' → logprob: -11.416613578796387
    7. '<h' → logprob: -11.541613578796387
    8. 'hs' → logprob: -11.666613578796387
    9. 'aphe' → logprob: -12.041613578796387
    10. 'hep' → logprob: -12.416613578796387

Token 36: ' pour' (ID: 1930)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.8458458185195923
    2. ' ' → logprob: -1.4708458185195923
    3. ',' → logprob: -2.5958456993103027
    4. ' via' → logprob: -2.8458456993103027
    5. ' with' → logprob: -3.9708456993103027
    6. ' in' → logprob: -3.9708456993103027
    7. ' ,' → logprob: -4.095845699310303
    8. ' for' → logprob: -4.095845699310303
    9. '<|end|>' → logprob: -4.345845699310303
    10. ' au' → logprob: -4.345845699310303

Token 37: ' trouver' (ID: 23195)
  Prédit: ' trouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.6872256398200989
    2. ' chaque' → logprob: -1.312225580215454
    3. ' visiter' → logprob: -2.437225580215454
    4. ' s' → logprob: -3.687225580215454
    5. ' ' → logprob: -4.062225818634033
    6. ' node' → logprob: -4.562225818634033
    7. ' obtenir' → logprob: -4.687225818634033
    8. ' retrouver' → logprob: -4.937225818634033
    9. ' explorer' → logprob: -4.937225818634033
    10. ' visit' → logprob: -5.562225818634033

Token 38: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.127179503440857
    2. ' les' → logprob: -1.877179503440857
    3. ' des' → logprob: -1.877179503440857
    4. ' toutes' → logprob: -2.1271796226501465
    5. '<|end|>' → logprob: -2.7521796226501465
    6. ' la' → logprob: -3.0021796226501465
    7. ' une' → logprob: -3.5021796226501465
    8. ' all' → logprob: -3.7521796226501465
    9. ' le' → logprob: -3.8771796226501465
    10. ' tous' → logprob: -4.3771796226501465

Token 39: ' chemin' (ID: 45035)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.9164053797721863
    2. 'e' → logprob: -1.041405439376831
    3. ' chemin' → logprob: -1.666405439376831
    4. ' cycle' → logprob: -3.541405439376831
    5. 'a' → logprob: -5.416405200958252
    6. ' noe' → logprob: -5.541405200958252
    7. 'che' → logprob: -5.916405200958252
    8. ' point' → logprob: -6.041405200958252
    9. ' e' → logprob: -6.041405200958252
    10. ' path' → logprob: -6.541405200958252

Token 40: '...
' (ID: 4908)
  Prédit: ' complet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' complet' → logprob: -0.7629209160804749
    2. '<|end|>' → logprob: -2.01292085647583
    3. ' jusqu' → logprob: -2.51292085647583
    4. ',' → logprob: -2.76292085647583
    5. ' vers' → logprob: -3.01292085647583
    6. ' valid' → logprob: -3.38792085647583
    7. ' ,' → logprob: -3.51292085647583
    8. ' entre' → logprob: -3.63792085647583
    9. ' possible' → logprob: -3.88792085647583
    10. ' ' → logprob: -4.01292085647583

Token 41: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8907631039619446
    2. ':' → logprob: -1.1407630443572998
    3. '   ' → logprob: -2.2657630443573
    4. ' :' → logprob: -2.3907630443573
    5. '(' → logprob: -3.5157630443573
    6. 'def' → logprob: -4.515763282775879
    7. '    ' → logprob: -4.640763282775879
    8. '  ' → logprob: -5.140763282775879
    9. ' for' → logprob: -6.015763282775879
    10. '<|end|>' → logprob: -6.015763282775879

Token 42: ' q' (ID: 2335)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3586578667163849
    2. '   ' → logprob: -2.3586578369140625
    3. ':' → logprob: -2.8586578369140625
    4. ' :' → logprob: -3.3586578369140625
    5. '    ' → logprob: -4.3586578369140625
    6. 'def' → logprob: -4.3586578369140625
    7. ' 
' → logprob: -4.7336578369140625
    8. 'n' → logprob: -4.8586578369140625
    9. '  ' → logprob: -5.1086578369140625
    10. ' for' → logprob: -5.1086578369140625

Token 43: ' =' (ID: 314)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.11433269828557968
    2. ' =' → logprob: -2.239332675933838
    3. '=' → logprob: -6.864332675933838
    4. 'u' → logprob: -8.239333152770996
    5. 'uer' → logprob: -9.364333152770996
    6. ' ue' → logprob: -9.989333152770996
    7. 'e' → logprob: -10.614333152770996
    8. ',' → logprob: -11.739333152770996
    9. 'uel' → logprob: -12.114333152770996
    10. 'ues' → logprob: -12.239333152770996

Token 44: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.5759679675102234
    2. 'deque' → logprob: -0.8259679675102234
    3. 'Deque' → logprob: -12.450967788696289
    4. '[' → logprob: -12.450967788696289
    5. '[]' → logprob: -12.575967788696289
    6. '   ' → logprob: -12.700967788696289
    7. '[(' → logprob: -12.825967788696289
    8. 'de' → logprob: -12.825967788696289
    9. ' ' → logprob: -13.200967788696289
    10. ' [' → logprob: -13.325967788696289

Token 45: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.43719273805618286
    2. '()' → logprob: -2.062192678451538
    3. '([' → logprob: -2.187192678451538
    4. '(' → logprob: -2.187192678451538
    5. '((' → logprob: -6.562192916870117
    6. '[(' → logprob: -7.937192916870117
    7. '([]' → logprob: -8.687192916870117
    8. '(['' → logprob: -8.812192916870117
    9. '([[' → logprob: -9.437192916870117
    10. '([
' → logprob: -9.687192916870117

Token 46: 'v' (ID: 85)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04199518263339996
    2. 'links' → logprob: -4.666995048522949
    3. 'None' → logprob: -5.291995048522949
    4. '[],' → logprob: -5.291995048522949
    5. ''',' → logprob: -5.291995048522949
    6. ''' → logprob: -5.416995048522949
    7. '(' → logprob: -6.041995048522949
    8. 'next' → logprob: -6.291995048522949
    9. 'list' → logprob: -6.541995048522949
    10. ')' → logprob: -6.791995048522949

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016731605865061283
    2. ' ,' → logprob: -7.126673221588135
    3. '[' → logprob: -8.126672744750977
    4. ')' → logprob: -8.626672744750977
    5. ',)' → logprob: -8.626672744750977
    6. 'ert' → logprob: -10.751672744750977
    7. 'for' → logprob: -11.001672744750977
    8. ' ' → logprob: -11.126672744750977
    9. 's' → logprob: -11.251672744750977
    10. ',v' → logprob: -11.251672744750977

Token 48: ' ' (ID: 220)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.1929170787334442
    2. ' [' → logprob: -2.3179171085357666
    3. '[' → logprob: -2.6929171085357666
    4. '[]' → logprob: -6.0679168701171875
    5. '[f' → logprob: -6.6929168701171875
    6. '[q' → logprob: -6.8179168701171875
    7. ' [])' → logprob: -6.8179168701171875
    8. '[])' → logprob: -7.3179168701171875
    9. '0' → logprob: -7.6929168701171875
    10. ')' → logprob: -8.192916870117188

Token 49: '0' (ID: 15)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.038852863013744354
    2. '[' → logprob: -3.4138529300689697
    3. ' [' → logprob: -6.788852691650391
    4. '[]' → logprob: -7.538852691650391
    5. '[f' → logprob: -7.538852691650391
    6. '[])' → logprob: -7.663852691650391
    7. '0' → logprob: -7.663852691650391
    8. '{' → logprob: -7.788852691650391
    9. '(v' → logprob: -7.788852691650391
    10. 'fro' → logprob: -8.41385269165039

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007087349891662598
    2. ')])' → logprob: -5.507087230682373
    3. ',' → logprob: -6.257087230682373
    4. ' )' → logprob: -6.882087230682373
    5. ')]' → logprob: -11.257087707519531
    6. '),' → logprob: -11.757087707519531
    7. ' ,' → logprob: -11.757087707519531
    8. ')])
' → logprob: -12.132087707519531
    9. ')],' → logprob: -12.257087707519531
    10. ',)' → logprob: -12.507087707519531

Token 51: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14666227996349335
    2. ')])' → logprob: -2.0216622352600098
    3. ',' → logprob: -6.14666223526001
    4. ' )' → logprob: -6.64666223526001
    5. ')]' → logprob: -8.521662712097168
    6. ')])
' → logprob: -9.021662712097168
    7. ')],' → logprob: -9.646662712097168
    8. ')])

' → logprob: -9.896662712097168
    9. ' for' → logprob: -10.896662712097168
    10. '])' → logprob: -11.271662712097168

Token 52: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5794493556022644
    2. 'v' → logprob: -0.8294493556022644
    3. ' range' → logprob: -6.57944917678833
    4. 'range' → logprob: -7.20444917678833
    5. ' links' → logprob: -7.45444917678833
    6. 'links' → logprob: -7.95444917678833
    7. '(v' → logprob: -9.204449653625488
    8. '	v' → logprob: -9.829449653625488
    9. '(' → logprob: -10.079449653625488
    10. 'vertices' → logprob: -10.454449653625488

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004899397026747465
    2. 'in' → logprob: -5.379899501800537
    3. ',' → logprob: -8.879899024963379
    4. ' ,' → logprob: -10.004899024963379
    5. ' ' → logprob: -10.879899024963379
    6. '<|end|>' → logprob: -11.129899024963379
    7. ')' → logprob: -11.567399024963379
    8. 's' → logprob: -11.879899024963379
    9. 'range' → logprob: -12.192399024963379
    10. ' )' → logprob: -12.317399024963379

Token 54: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.6974006295204163
    2. ' range' → logprob: -1.5724005699157715
    3. ' links' → logprob: -1.5724005699157715
    4. 'range' → logprob: -2.4474005699157715
    5. '(' → logprob: -9.07240104675293
    6. 'link' → logprob: -9.32240104675293
    7. ' ' → logprob: -10.32240104675293
    8. ' xrange' → logprob: -10.32240104675293
    9. ' graph' → logprob: -10.69740104675293
    10. '(range' → logprob: -10.75990104675293

Token 55: '[' (ID: 58)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.030250005424022675
    2. '.keys' → logprob: -4.030250072479248
    3. '])]' → logprob: -5.280250072479248
    4. ')])' → logprob: -5.905250072479248
    5. ' if' → logprob: -6.030250072479248
    6. '[' → logprob: -7.405250072479248
    7. ')' → logprob: -7.530250072479248
    8. 'if' → logprob: -8.28024959564209
    9. ' ])' → logprob: -9.15524959564209
    10. 'keys' → logprob: -9.53024959564209

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3570041358470917
    2. '])' → logprob: -1.982004165649414
    3. ']])' → logprob: -2.732004165649414
    4. ']' → logprob: -3.357004165649414
    5. ')])' → logprob: -4.232004165649414
    6. ')' → logprob: -4.232004165649414
    7. 'v' → logprob: -4.607004165649414
    8. '])]' → logprob: -4.732004165649414
    9. ' ' → logprob: -5.732004165649414
    10. '1' → logprob: -6.107004165649414

Token 57: ']])
' (ID: 62818)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.04541205242276192
    2. '])' → logprob: -3.420412063598633
    3. ']' → logprob: -4.670412063598633
    4. '])]' → logprob: -6.295412063598633
    5. ')])' → logprob: -8.170412063598633
    6. ']]' → logprob: -9.545412063598633
    7. ']))' → logprob: -10.420412063598633
    8. '],' → logprob: -11.045412063598633
    9. '][' → logprob: -11.545412063598633
    10. ' ])' → logprob: -11.670412063598633

Token 58: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13997890055179596
    2. '   ' → logprob: -2.6399788856506348
    3. '
' → logprob: -3.1399788856506348
    4. ':' → logprob: -5.514978885650635
    5. '<|end|>' → logprob: -6.014978885650635
    6. ')
' → logprob: -6.389978885650635
    7. ',' → logprob: -6.514978885650635
    8. ' ' → logprob: -6.764978885650635
    9. '  
' → logprob: -7.139978885650635
    10. '    
' → logprob: -7.389978885650635

Token 59: ' v' (ID: 323)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04535588249564171
    2. ')' → logprob: -3.670355796813965
    3. '\n' → logprob: -5.295355796813965
    4. ':' → logprob: -5.670355796813965
    5. '   ' → logprob: -5.920355796813965
    6. '<|end|>' → logprob: -6.670355796813965
    7. '  
' → logprob: -7.045355796813965
    8. ')
' → logprob: -7.045355796813965
    9. ' 
' → logprob: -7.045355796813965
    10. ' while' → logprob: -7.420355796813965

Token 60: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19142599403858185
    2. 'is' → logprob: -2.1914260387420654
    3. 'isted' → logprob: -3.1914260387420654
    4. 's' → logprob: -4.816425800323486
    5. 'isible' → logprob: -5.566425800323486
    6. 'isit' → logprob: -5.691425800323486
    7. '=' → logprob: -6.191425800323486
    8. ' =' → logprob: -6.316425800323486
    9. 'ist' → logprob: -7.566425800323486
    10. 'alid' → logprob: -8.566426277160645

Token 61: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5564879179000854
    2. '0' → logprob: -0.9314879179000854
    3. ' None' → logprob: -3.806488037109375
    4. ' q' → logprob: -5.431488037109375
    5. ' links' → logprob: -5.931488037109375
    6. 'None' → logprob: -6.306488037109375
    7. ' v' → logprob: -7.681488037109375
    8. 'q' → logprob: -8.306488037109375
    9. 'links' → logprob: -8.681488037109375
    10. ' []' → logprob: -8.993988037109375

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.524527370929718
    2. 'q' → logprob: -1.1495273113250732
    3. ' q' → logprob: -3.5245273113250732
    4. '[]' → logprob: -3.8995273113250732
    5. ' ' → logprob: -4.149527549743652
    6. 'None' → logprob: -4.649527549743652
    7. '[' → logprob: -6.149527549743652
    8. ' None' → logprob: -6.399527549743652
    9. 'len' → logprob: -6.399527549743652
    10. ' []' → logprob: -6.399527549743652

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015071716159582138
    2. '<|end|>' → logprob: -4.265071868896484
    3. '<|end|>' → logprob: -7.890071868896484
    4. ':' → logprob: -8.640071868896484
    5. ',' → logprob: -9.515071868896484
    6. ',
' → logprob: -9.890071868896484
    7. ')' → logprob: -10.015071868896484
    8. '

' → logprob: -10.765071868896484
    9. '  
' → logprob: -10.765071868896484
    10. '\n' → logprob: -11.015071868896484

Token 64: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0175824873149395
    2. '<|end|>' → logprob: -4.267582416534424
    3. '<|end|>' → logprob: -7.142582416534424
    4. ',' → logprob: -7.642582416534424
    5. '   ' → logprob: -7.892582416534424
    6. ':' → logprob: -7.892582416534424
    7. ' while' → logprob: -8.017582893371582
    8. ')' → logprob: -8.642582893371582
    9. ',
' → logprob: -8.642582893371582
    10. '  
' → logprob: -8.892582893371582

Token 65: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03643481805920601
    2. '<|end|>' → logprob: -3.9114348888397217
    3. ':' → logprob: -5.161434650421143
    4. ' while' → logprob: -5.661434650421143
    5. ')' → logprob: -6.661434650421143
    6. '   ' → logprob: -6.786434650421143
    7. ' ' → logprob: -7.161434650421143
    8. ',' → logprob: -7.286434650421143
    9. '<|end|>' → logprob: -7.411434650421143
    10. 'while' (adapté à ' while') → logprob: -7.661434650421143

Token 66: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.2829226851463318
    2. 'q' → logprob: -1.4079227447509766
    3. ' True' → logprob: -6.907922744750977
    4. ' len' → logprob: -7.782922744750977
    5. 'True' → logprob: -8.157922744750977
    6. 'len' → logprob: -10.657922744750977
    7. '    ' → logprob: -11.407922744750977
    8. ' ' → logprob: -11.782922744750977
    9. '   ' → logprob: -12.032922744750977
    10. ' v' → logprob: -12.282922744750977

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012154294381616637
    2. '):' → logprob: -9.375121116638184
    3. '>:' → logprob: -11.500121116638184
    4. '():' → logprob: -12.250121116638184
    5. 'and' → logprob: -12.875121116638184
    6. ':**' → logprob: -13.000121116638184
    7. ':
' → logprob: -13.250121116638184
    8. '[' → logprob: -13.500121116638184
    9. ':not' → logprob: -13.500121116638184
    10. ':=' → logprob: -13.500121116638184

Token 68: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14490333199501038
    2. ':' → logprob: -2.7699034214019775
    3. '       ' → logprob: -3.8949034214019775
    4. '):' → logprob: -4.019903182983398
    5. '   ' → logprob: -4.519903182983398
    6. ')' → logprob: -5.144903182983398
    7. '[' → logprob: -5.519903182983398
    8. ',v' → logprob: -5.519903182983398
    9. ' ,' → logprob: -5.644903182983398
    10. 'v' → logprob: -6.769903182983398

Token 69: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.5041608214378357
    2. ' v' → logprob: -1.5041608810424805
    3. ',' → logprob: -1.8791608810424805
    4. ',v' → logprob: -4.5041608810424805
    5. ' current' → logprob: -6.6291608810424805
    6. '       ' → logprob: -6.7541608810424805
    7. ' ,' → logprob: -6.8791608810424805
    8. 'current' → logprob: -7.1291608810424805
    9. '           ' → logprob: -7.1291608810424805
    10. '```' → logprob: -7.3791608810424805

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.182190554682165e-05
    2. ',v' → logprob: -10.000061988830566
    3. ' ,' → logprob: -11.750061988830566
    4. ',n' → logprob: -12.875061988830566
    5. '2' → logprob: -13.375061988830566
    6. ',q' → logprob: -14.625061988830566
    7. '_,' → logprob: -14.625061988830566
    8. ',next' → logprob: -14.875061988830566
    9. ',val' → logprob: -15.125061988830566
    10. ',node' → logprob: -15.250061988830566

Token 71: ' a' (ID: 261)
  Prédit: ' depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' depth' → logprob: -1.4079228639602661
    2. ' d' → logprob: -1.5329228639602661
    3. 'depth' → logprob: -2.0329227447509766
    4. ' cost' → logprob: -2.4079227447509766
    5. 'd' → logprob: -2.4079227447509766
    6. ' dist' → logprob: -2.7829227447509766
    7. 'dist' → logprob: -3.5329227447509766
    8. ' c' → logprob: -3.5329227447509766
    9. 'cost' → logprob: -3.7829227447509766
    10. ' w' → logprob: -4.282922744750977

Token 72: ' =' (ID: 314)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.2677777409553528
    2. ',' → logprob: -2.392777681350708
    3. 'ct' → logprob: -2.892777681350708
    4. 'c' → logprob: -4.142777919769287
    5. 'dd' → logprob: -4.142777919769287
    6. 'r' → logprob: -4.642777919769287
    7. 'dj' → logprob: -4.767777919769287
    8. 'v' → logprob: -5.517777919769287
    9. 'rg' → logprob: -5.517777919769287
    10. 'pp' → logprob: -5.517777919769287

Token 73: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.10023157298564911
    2. 'q' → logprob: -2.350231647491455
    3. '<|end|>' → logprob: -12.100231170654297
    4. '    ' → logprob: -12.225231170654297
    5. '*q' → logprob: -12.975231170654297
    6. '	q' → logprob: -13.350231170654297
    7. ',' → logprob: -13.475231170654297
    8. ' ' → logprob: -13.600231170654297
    9. '        ' → logprob: -13.975231170654297
    10. ')' → logprob: -14.225231170654297

Token 74: '.p' (ID: 1201)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.5619992613792419
    2. '.p' → logprob: -0.9369992613792419
    3. '.' → logprob: -3.3119993209838867
    4. ' .' → logprob: -7.561999320983887
    5. 'pop' → logprob: -8.061999320983887
    6. 'p' → logprob: -8.311999320983887
    7. '   ' → logprob: -9.061999320983887
    8. ' =' → logprob: -9.311999320983887
    9. ')' → logprob: -9.311999320983887
    10. '=' → logprob: -9.561999320983887

Token 75: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.014180204831063747
    2. 'ople' → logprob: -4.7641801834106445
    3. 'op' → logprob: -5.2641801834106445
    4. 'opl' → logprob: -7.8891801834106445
    5. 'opf' → logprob: -14.139180183410645
    6. 'oplevel' → logprob: -14.764180183410645
    7. 'o' → logprob: -15.264180183410645
    8. 'opc' → logprob: -16.63918113708496
    9. 'opped' → logprob: -16.88918113708496
    10. 'opup' → logprob: -17.01418113708496

Token 76: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14992888271808624
    2. '       ' → logprob: -2.3999288082122803
    3. '
' → logprob: -3.8999288082122803
    4. '<|end|>' → logprob: -4.024929046630859
    5. '        ' → logprob: -5.774929046630859
    6. '<|end|>' → logprob: -6.399929046630859
    7. ')
' → logprob: -6.774929046630859
    8. ':' → logprob: -6.774929046630859
    9. ' )' → logprob: -7.024929046630859
    10. '+' → logprob: -7.774929046630859

Token 77: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02734432928264141
    2. '
' → logprob: -4.277344226837158
    3. '<|end|>' → logprob: -4.777344226837158
    4. 'if' → logprob: -5.902344226837158
    5. ' if' → logprob: -6.652344226837158
    6. '        
' → logprob: -8.277344703674316
    7. '<|end|>' → logprob: -9.652344703674316
    8. ',' → logprob: -9.902344703674316
    9. '        ' → logprob: -9.902344703674316
    10. ' for' → logprob: -10.402344703674316

Token 78: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16447918117046356
    2. '       ' → logprob: -2.0394792556762695
    3. 'if' → logprob: -4.7894792556762695
    4. '<|end|>' → logprob: -5.2894792556762695
    5. '
' → logprob: -5.4144792556762695
    6. ' if' → logprob: -6.5394792556762695
    7. ')' → logprob: -7.1644792556762695
    8. '        
' → logprob: -7.9144792556762695
    9. ')
' → logprob: -8.03947925567627
    10. '<|end|>' → logprob: -8.41447925567627

Token 79: ' v' (ID: 323)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13099509477615356
    2. '<|end|>' → logprob: -3.005995035171509
    3. ' in' → logprob: -3.880995035171509
    4. ' not' → logprob: -4.380995273590088
    5. ' ==' → logprob: -4.505995273590088
    6. ')' → logprob: -5.005995273590088
    7. '==' → logprob: -5.505995273590088
    8. ' ,' → logprob: -5.630995273590088
    9. '<|end|>' → logprob: -5.630995273590088
    10. ' is' → logprob: -5.755995273590088

Token 81: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.7146932482719421
    2. ' noe' → logprob: -1.214693307876587
    3. ' le' → logprob: -2.339693307876587
    4. ' current' → logprob: -3.714693307876587
    5. 'le' → logprob: -4.089693069458008
    6. 'som' → logprob: -4.339693069458008
    7. ' vertex' → logprob: -4.714693069458008
    8. 'current' → logprob: -5.089693069458008
    9. 'vo' → logprob: -5.339693069458008
    10. ' node' → logprob: -5.339693069458008

Token 82: ' courant' (ID: 74694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31829315423965454
    2. '       ' → logprob: -1.4432930946350098
    3. ')' → logprob: -4.44329309463501
    4. '<|end|>' → logprob: -4.69329309463501
    5. ' if' → logprob: -5.69329309463501
    6. '        ' → logprob: -6.06829309463501
    7. ';' → logprob: -6.19329309463501
    8. ' ,' → logprob: -6.44329309463501
    9. '<|end|>' → logprob: -6.69329309463501
    10. 'if' → logprob: -6.69329309463501

Token 83: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3407801687717438
    2. 'a' → logprob: -1.9657801389694214
    3. ' d' → logprob: -3.090780258178711
    4. ' ' → logprob: -3.590780258178711
    5. ' b' → logprob: -3.590780258178711
    6. ' depth' → logprob: -4.840780258178711
    7. '    ' → logprob: -4.840780258178711
    8. 'd' → logprob: -5.090780258178711
    9. 'b' → logprob: -5.840780258178711
    10. ' distance' → logprob: -5.965780258178711

Token 85: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' parent' (ID: 5980)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.8234110474586487
    2. 'distance' → logprob: -2.573410987854004
    3. 'a' → logprob: -3.073410987854004
    4. ' distance' → logprob: -3.198410987854004
    5. 'l' → logprob: -3.698410987854004
    6. ' la' → logprob: -3.823410987854004
    7. 'pro' → logprob: -3.823410987854004
    8. 'le' → logprob: -3.948410987854004
    9. 'la' → logprob: -3.948410987854004
    10. 's' → logprob: -3.948410987854004

Token 87: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17767861485481262
    2. '<|end|>' → logprob: -2.5526785850524902
    3. ')' → logprob: -2.6776785850524902
    4. '        ' → logprob: -5.17767858505249
    5. '
' → logprob: -5.92767858505249
    6. ' if' → logprob: -6.05267858505249
    7. ',' → logprob: -6.42767858505249
    8. 'if' → logprob: -6.80267858505249
    9. '        
' → logprob: -7.05267858505249
    10. '<|end|>' → logprob: -7.17767858505249

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03527284413576126
    2. ' if' → logprob: -3.7852728366851807
    3. 'if' → logprob: -5.41027307510376
    4. '
' → logprob: -6.41027307510376
    5. ' for' → logprob: -6.66027307510376
    6. '<|end|>' → logprob: -6.66027307510376
    7. ')' → logprob: -6.91027307510376
    8. ',' → logprob: -7.16027307510376
    9. '        
' → logprob: -7.91027307510376
    10. 's' → logprob: -8.160272598266602

Token 89: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49639445543289185
    2. '       ' → logprob: -1.121394395828247
    3. ' if' → logprob: -2.996394395828247
    4. 'for' (adapté à ' for') → logprob: -4.371394634246826
    5. ' for' → logprob: -6.371394634246826
    6. '<|end|>' → logprob: -7.871394634246826
    7. '        
' → logprob: -8.871394157409668
    8. 'v' → logprob: -9.121394157409668
    9. '<|end|>' → logprob: -9.246394157409668
    10. '   ' → logprob: -9.496394157409668

Token 90: ' u' (ID: 337)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.15924349427223206
    2. ' u' → logprob: -2.284243583679199
    3. ' nv' → logprob: -4.159243583679199
    4. 'w' → logprob: -4.534243583679199
    5. ' voisin' → logprob: -5.659243583679199
    6. ' n' → logprob: -5.909243583679199
    7. 'u' → logprob: -5.909243583679199
    8. ' v' → logprob: -6.409243583679199
    9. '```' → logprob: -6.659243583679199
    10. ' nxt' → logprob: -6.659243583679199

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01824698969721794
    2. 'in' → logprob: -4.018247127532959
    3. ',' → logprob: -9.8932466506958
    4. ' ' → logprob: -10.7682466506958
    5. 's' → logprob: -12.1432466506958
    6. 'n' → logprob: -12.1432466506958
    7. ')' → logprob: -13.2682466506958
    8. '   ' → logprob: -13.5182466506958
    9. ' ,' → logprob: -13.6432466506958
    10. '  ' → logprob: -13.8307466506958

Token 92: ' links' (ID: 9362)
  Prédit: ' links'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' links' → logprob: -0.08938390016555786
    2. 'links' → logprob: -2.464383840560913
    3. ' range' → logprob: -8.964384078979492
    4. ' link' → logprob: -9.839384078979492
    5. ' ' → logprob: -9.964384078979492
    6. '[' → logprob: -10.089384078979492
    7. 'link' → logprob: -10.214384078979492
    8. ' [' → logprob: -10.776884078979492
    9. ' liens' → logprob: -11.214384078979492
    10. 'range' → logprob: -11.339384078979492

Token 93: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.656383680412546e-05
    2. '[' → logprob: -10.875046730041504
    3. 'v' → logprob: -11.125046730041504
    4. '[u' → logprob: -12.250046730041504
    5. ' [' → logprob: -12.625046730041504
    6. '   ' → logprob: -13.375046730041504
    7. '.get' → logprob: -14.125046730041504
    8. '(v' → logprob: -15.500046730041504
    9. '[s' → logprob: -15.625046730041504
    10. '[q' → logprob: -15.625046730041504

Token 94: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.003778577782213688
    2. ']' → logprob: -6.003778457641602
    3. ']:
' → logprob: -6.753778457641602
    4. '[' → logprob: -10.503778457641602
    5. ' ]' → logprob: -10.503778457641602
    6. ':' → logprob: -10.628778457641602
    7. '):' → logprob: -11.253778457641602
    8. ']:
' → logprob: -11.253778457641602
    9. '][' → logprob: -11.628778457641602
    10. '           ' → logprob: -12.503778457641602

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16194011270999908
    2. ' if' → logprob: -2.536940097808838
    3. '<|end|>' → logprob: -2.911940097808838
    4. 'if' → logprob: -4.286940097808838
    5. '<|end|>' → logprob: -6.411940097808838
    6. '...' → logprob: -9.286940574645996
    7. ' ' → logprob: -9.411940574645996
    8. '   ' → logprob: -9.661940574645996
    9. '            ' → logprob: -10.036940574645996
    10. '	       ' → logprob: -10.161940574645996

Token 96: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.027108019217848778
    2. 'if' (adapté à ' if') → logprob: -3.6521079540252686
    3. '           ' → logprob: -8.027108192443848
    4. '<|end|>' → logprob: -8.527108192443848
    5. '               ' → logprob: -8.777108192443848
    6. '            ' → logprob: -10.027108192443848
    7. '        ' → logprob: -10.777108192443848
    8. '...' → logprob: -10.902108192443848
    9. '<|end|>' → logprob: -11.277108192443848
    10. ' ' → logprob: -12.027108192443848

Token 97: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.10035688430070877
    2. 'u' → logprob: -2.3503568172454834
    3. ' not' → logprob: -9.975357055664062
    4. '            ' → logprob: -10.225357055664062
    5. ' a' → logprob: -10.725357055664062
    6. '           ' → logprob: -11.350357055664062
    7. 'a' → logprob: -11.600357055664062
    8. 'not' → logprob: -11.600357055664062
    9. ' ' → logprob: -13.350357055664062
    10. ' ' → logprob: -13.412857055664062

Token 98: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.31854313611984253
    2. ' !=' → logprob: -1.3185431957244873
    3. '==' → logprob: -5.818542957305908
    4. ' not' → logprob: -6.693542957305908
    5. ' ==' → logprob: -6.943542957305908
    6. 'not' → logprob: -10.318543434143066
    7. '=' → logprob: -11.193543434143066
    8. ' is' → logprob: -11.818543434143066
    9. ' ' → logprob: -12.443543434143066
    10. '()!=' → logprob: -12.443543434143066

Token 99: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02054656110703945
    2. ' a' → logprob: -3.8955466747283936
    3. ' ' → logprob: -12.645546913146973
    4. '	a' → logprob: -13.895546913146973
    5. ' ' → logprob: -15.895546913146973
    6. '   ' → logprob: -16.270545959472656
    7. '0' → logprob: -16.520545959472656
    8. '_a' → logprob: -16.645545959472656
    9. '    ' → logprob: -17.395545959472656
    10. ''a' → logprob: -17.395545959472656

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1824694573879242
    2. ':
' → logprob: -2.182469367980957
    3. ' and' → logprob: -2.932469367980957
    4. ' :' → logprob: -7.932469367980957
    5. 'and' → logprob: -8.807469367980957
    6. ' :
' → logprob: -9.182469367980957
    7. '           ' → logprob: -9.557469367980957
    8. ':
' → logprob: -10.807469367980957
    9. '):
' → logprob: -11.057469367980957
    10. '               ' → logprob: -11.307469367980957

Token 101: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08899694681167603
    2. ':' → logprob: -2.8389968872070312
    3. ' and' → logprob: -4.338996887207031
    4. '           ' → logprob: -4.838996887207031
    5. '<|end|>' → logprob: -6.213996887207031
    6. ':
' → logprob: -6.713996887207031
    7. ' :' → logprob: -6.838996887207031
    8. ',' → logprob: -8.338996887207031
    9. ')' → logprob: -8.338996887207031
    10. '):' → logprob: -8.963996887207031

Token 102: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.25131362676620483
    2. ' q' → logprob: -1.7513136863708496
    3. ' if' → logprob: -4.12631368637085
    4. 'if' → logprob: -4.25131368637085
    5. '               ' → logprob: -4.25131368637085
    6. '                   ' → logprob: -6.00131368637085
    7. 'return' → logprob: -7.12631368637085
    8. ' return' → logprob: -7.87631368637085
    9. '                ' → logprob: -8.876313209533691
    10. '                       ' → logprob: -9.376313209533691

Token 103: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005402852548286319
    2. '.' → logprob: -7.625540256500244
    3. '.extend' → logprob: -10.625540733337402
    4. ' .' → logprob: -11.500540733337402
    5. ').' → logprob: -12.125540733337402
    6. '.enqueue' → logprob: -13.250540733337402
    7. 'append' → logprob: -13.375540733337402
    8. '.push' → logprob: -13.375540733337402
    9. '.p' → logprob: -13.375540733337402
    10. '].' → logprob: -13.500540733337402

Token 104: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0024893339723348618
    2. '(u' → logprob: -6.0024895668029785
    3. '(' → logprob: -11.25248908996582
    4. ' ((' → logprob: -14.87748908996582
    5. ' (' → logprob: -16.12748908996582
    6. '(((' → logprob: -16.87748908996582
    7. '([' → logprob: -17.25248908996582
    8. '(
' → logprob: -17.50248908996582
    9. '(('' → logprob: -17.75248908996582
    10. '```' → logprob: -17.87748908996582

Token 105: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0019815717823803425
    2. '(u' → logprob: -6.751981735229492
    3. ' u' → logprob: -7.126981735229492
    4. ' (' → logprob: -12.126981735229492
    5. '[u' → logprob: -13.876981735229492
    6. '	u' → logprob: -14.751981735229492
    7. ')' → logprob: -15.001981735229492
    8. '   ' → logprob: -15.251981735229492
    9. ',u' → logprob: -15.501981735229492
    10. 'v' → logprob: -16.126981735229492

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012130453251302242
    2. ',v' → logprob: -9.125121116638184
    3. ' ,' → logprob: -11.625121116638184
    4. 'v' → logprob: -12.625121116638184
    5. ' v' → logprob: -19.7501220703125
    6. ',u' → logprob: -20.6251220703125
    7. '```' → logprob: -21.1251220703125
    8. ',
' → logprob: -21.1251220703125
    9. '   ' → logprob: -21.2501220703125
    10. '，' → logprob: -22.0001220703125

Token 107: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.020560692995786667
    2. ' v' → logprob: -3.8955607414245605
    3. ')' → logprob: -12.145560264587402
    4. ')v' → logprob: -12.270560264587402
    5. '	v' → logprob: -12.895560264587402
    6. '   ' → logprob: -13.520560264587402
    7. '    ' → logprob: -14.395560264587402
    8. 'u' → logprob: -14.645560264587402
    9. '<|end|>' → logprob: -14.645560264587402
    10. ',v' → logprob: -14.895560264587402

Token 108: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005979505367577076
    2. '))
' → logprob: -7.500597953796387
    3. ')' → logprob: -10.500597953796387
    4. '               ' → logprob: -12.250597953796387
    5. ' ))' → logprob: -12.375597953796387
    6. ')))' → logprob: -12.875597953796387
    7. '           ' → logprob: -13.500597953796387
    8. '))

' → logprob: -13.875597953796387
    9. '));' → logprob: -14.125597953796387
    10. '       ' → logprob: -14.125597953796387

Token 109: '   ' (ID: 271)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15407221019268036
    2. '<|end|>' → logprob: -2.1540722846984863
    3. '
' → logprob: -4.904072284698486
    4. ')' → logprob: -5.279072284698486
    5. '       ' → logprob: -5.529072284698486
    6. '   ' → logprob: -5.779072284698486
    7. 'return' → logprob: -6.404072284698486
    8. '<|end|>' → logprob: -6.529072284698486
    9. ' return' → logprob: -6.779072284698486
    10. ',' → logprob: -7.404072284698486

Token 110: ' anc' (ID: 11568)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' =' (ID: 314)
  Prédit: 'estors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'estors' → logprob: -0.0179730411618948
    2. 'estor' → logprob: -4.892972946166992
    3. 'est' → logprob: -5.392972946166992
    4. 'estr' → logprob: -6.017972946166992
    5. 'estro' → logprob: -7.142972946166992
    6. ' =' → logprob: -7.892972946166992
    7. 'es' → logprob: -8.017972946166992
    8. 'esters' → logprob: -8.017972946166992
    9. '[' → logprob: -8.392972946166992
    10. 'estros' → logprob: -8.392972946166992

Token 112: ' [-' (ID: 20191)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.7229877710342407
    2. '{' → logprob: -1.5979877710342407
    3. ' [' → logprob: -1.8479877710342407
    4. ' {' → logprob: -2.472987651824951
    5. '[' → logprob: -3.222987651824951
    6. '[u' → logprob: -4.847987651824951
    7. '[a' → logprob: -4.972987651824951
    8. '{}' → logprob: -5.347987651824951
    9. '[-' → logprob: -5.972987651824951
    10. '[]' → logprob: -6.597987651824951

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.514650183613412e-05
    2. '2' → logprob: -10.000055313110352
    3. ' ' → logprob: -12.125055313110352
    4. '10' → logprob: -13.625055313110352
    5. '-' → logprob: -14.250055313110352
    6. '11' → logprob: -15.187555313110352
    7. '(' → logprob: -15.187555313110352
    8. 'len' → logprob: -15.250055313110352
    9. '100' → logprob: -15.375055313110352
    10. '   ' → logprob: -15.437555313110352

Token 114: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3964832127094269
    2. ' for' → logprob: -1.2714831829071045
    3. 'for' → logprob: -3.6464831829071045
    4. ']*' → logprob: -4.021483421325684
    5. ']*(' → logprob: -6.021483421325684
    6. ' ]' → logprob: -8.396483421325684
    7. ',' → logprob: -8.896483421325684
    8. ')' → logprob: -9.896483421325684
    9. ']+' → logprob: -11.146483421325684
    10. '	for' → logprob: -12.021483421325684

Token 115: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3050140142440796
    2. '(' → logprob: -2.430014133453369
    3. ' _' → logprob: -2.430014133453369
    4. 'range' → logprob: -3.430014133453369
    5. '_links' → logprob: -3.430014133453369
    6. '(range' → logprob: -5.055014133453369
    7. '(_' → logprob: -5.305014133453369
    8. ' range' → logprob: -5.805014133453369
    9. '(_)' → logprob: -5.930014133453369
    10. 'links' → logprob: -6.430014133453369

Token 116: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8270955085754395
    2. 'in' → logprob: -1.3270955085754395
    3. ' in' → logprob: -1.7020955085754395
    4. ' range' → logprob: -2.4520955085754395
    5. 'links' → logprob: -3.7020955085754395
    6. '(' → logprob: -5.9520955085754395
    7. ' links' → logprob: -6.8270955085754395
    8. '(range' → logprob: -8.077095031738281
    9. '()' → logprob: -10.202095031738281
    10. ' ' → logprob: -10.452095031738281

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38610565662384033
    2. ' range' → logprob: -1.6361056566238403
    3. 'links' → logprob: -2.136105537414551
    4. ' links' → logprob: -5.011105537414551
    5. 'v' → logprob: -8.01110553741455
    6. 'link' → logprob: -9.26110553741455
    7. 'q' → logprob: -9.88610553741455
    8. ' v' → logprob: -10.13610553741455
    9. ' q' → logprob: -10.26110553741455
    10. '(range' → logprob: -10.63610553741455

Token 118: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -8.7689099018462e-05
    2. '(' → logprob: -9.75008773803711
    3. 'len' → logprob: -10.62508773803711
    4. ' len' → logprob: -13.00008773803711
    5. '(n' → logprob: -13.75008773803711
    6. ' (' → logprob: -14.37508773803711
    7. '(v' → logprob: -15.25008773803711
    8. '((' → logprob: -15.37508773803711
    9. '[len' → logprob: -16.25008773803711
    10. ',len' → logprob: -16.75008773803711

Token 119: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9027791495318525e-05
    2. '(q' → logprob: -11.500019073486328
    3. 'links' → logprob: -12.125019073486328
    4. '(link' → logprob: -13.375019073486328
    5. '(v' → logprob: -14.125019073486328
    6. ' (' → logprob: -14.875019073486328
    7. '(lines' → logprob: -16.625019073486328
    8. '((' → logprob: -16.875019073486328
    9. '(labels' → logprob: -16.875019073486328
    10. '(l' → logprob: -17.000019073486328

Token 120: 'links' (ID: 26581)
  Prédit: 'links'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.20166875422000885
    2. '(' → logprob: -1.7016687393188477
    3. ' links' → logprob: -8.451668739318848
    4. 'link' → logprob: -11.326668739318848
    5. '(link' → logprob: -11.326668739318848
    6. '(q' → logprob: -12.576668739318848
    7. '(v' → logprob: -13.326668739318848
    8. '.links' → logprob: -13.451668739318848
    9. '_links' → logprob: -13.701668739318848
    10. 'Links' → logprob: -13.826668739318848

Token 121: '))]
' (ID: 53695)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.08922549337148666
    2. ')])' → logprob: -3.0892255306243896
    3. '))' → logprob: -3.3392255306243896
    4. '])]' → logprob: -5.7142252922058105
    5. ')' → logprob: -7.3392252922058105
    6. '())' → logprob: -8.339225769042969
    7. ' )' → logprob: -9.464225769042969
    8. '])' → logprob: -10.089225769042969
    9. '()' → logprob: -11.214225769042969
    10. '(' → logprob: -11.714225769042969

Token 122: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4760734438896179
    2. 'anc' → logprob: -1.6010735034942627
    3. '<|end|>' → logprob: -2.4760735034942627
    4. ' for' → logprob: -3.2260735034942627
    5. 'for' → logprob: -3.6010735034942627
    6. ')' → logprob: -4.976073265075684
    7. ' anc' → logprob: -5.476073265075684
    8. 'def' → logprob: -5.726073265075684
    9. 'v' → logprob: -5.976073265075684
    10. 'while' → logprob: -6.851073265075684

Token 124: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00579239334911108
    2. '.' → logprob: -5.380792617797852
    3. '=' → logprob: -7.380792617797852
    4. '.extend' → logprob: -8.505792617797852
    5. ' =' → logprob: -8.630792617797852
    6. '.clear' → logprob: -9.630792617797852
    7. '.=' → logprob: -10.130792617797852
    8. 'append' → logprob: -10.880792617797852
    9. '.p' → logprob: -11.505792617797852
    10. '.app' → logprob: -12.130792617797852

Token 125: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.00034833617974072695
    2. ' deque' → logprob: -8.125348091125488
    3. '[(' → logprob: -10.625348091125488
    4. '[' → logprob: -10.750348091125488
    5. '   ' → logprob: -13.250348091125488
    6. 'de' → logprob: -13.250348091125488
    7. ' ' → logprob: -14.125348091125488
    8. '[]' → logprob: -14.750348091125488
    9. '  ' → logprob: -15.250348091125488
    10. '(de' → logprob: -15.375348091125488

Token 126: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.0008295211009681225
    2. '([' → logprob: -7.250829696655273
    3. '((' → logprob: -10.125829696655273
    4. '[(' → logprob: -10.500829696655273
    5. '(' → logprob: -10.625829696655273
    6. '()' → logprob: -11.125829696655273
    7. '(((' → logprob: -12.625829696655273
    8. '([...' → logprob: -12.875829696655273
    9. '([]' → logprob: -13.125829696655273
    10. '([{' → logprob: -13.125829696655273

Token 127: 'u' (ID: 84)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007222877349704504
    2. 'v' → logprob: -5.507222652435303
    3. 'links' → logprob: -6.257222652435303
    4. '(' → logprob: -7.007222652435303
    5. ')' → logprob: -9.507223129272461
    6. ' ' → logprob: -10.132223129272461
    7. 'u' → logprob: -10.257223129272461
    8. 'len' → logprob: -10.257223129272461
    9. ' links' → logprob: -10.257223129272461
    10. ',' → logprob: -10.632223129272461

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012770227622240782
    2. ',v' → logprob: -7.501276969909668
    3. ' ,' → logprob: -7.876276969909668
    4. ',u' → logprob: -9.376276969909668
    5. 'v' → logprob: -9.501276969909668
    6. '[' → logprob: -9.876276969909668
    7. ')' → logprob: -10.751276969909668
    8. '0' → logprob: -10.876276969909668
    9. 'u' → logprob: -11.126276969909668
    10. 'import' → logprob: -11.251276969909668

Token 129: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12018990516662598
    2. '0' → logprob: -2.370189905166626
    3. ' v' → logprob: -4.620189666748047
    4. 'u' → logprob: -4.870189666748047
    5. ' ' → logprob: -6.620189666748047
    6. ' u' → logprob: -7.870189666748047
    7. ')' → logprob: -8.620189666748047
    8. '1' → logprob: -9.807689666748047
    9. '-' → logprob: -9.870189666748047
    10. ')v' → logprob: -9.870189666748047

Token 130: ')' (ID: 8)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.22687697410583496
    2. ')' → logprob: -1.601876974105835
    3. ')])
' → logprob: -7.351877212524414
    4. ' )' → logprob: -7.976877212524414
    5. ',' → logprob: -8.476877212524414
    6. ')])

' → logprob: -8.726877212524414
    7. ')]' → logprob: -10.351877212524414
    8. ')],' → logprob: -10.476877212524414
    9. ',)' → logprob: -11.851877212524414
    10. ')))' → logprob: -11.976877212524414

Token 131: ' for' (ID: 395)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.008206379599869251
    2. ')' → logprob: -5.508206367492676
    3. ')]' → logprob: -6.008206367492676
    4. ',' → logprob: -7.133206367492676
    5. '])' → logprob: -8.008206367492676
    6. ' )' → logprob: -8.383206367492676
    7. ')])
' → logprob: -8.633206367492676
    8. ')])

' → logprob: -10.133206367492676
    9. ')],' → logprob: -11.008206367492676
    10. '   ' → logprob: -11.258206367492676

Token 132: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.8492974042892456
    2. 'u' → logprob: -1.0992974042892456
    3. ' v' → logprob: -1.9742974042892456
    4. 'v' → logprob: -2.349297523498535
    5. ' links' → logprob: -6.974297523498535
    6. '(u' → logprob: -7.599297523498535
    7. ' (' → logprob: -7.599297523498535
    8. '_,' → logprob: -7.974297523498535
    9. '_' → logprob: -8.099297523498535
    10. '(' → logprob: -8.224297523498535

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2605589032173157
    2. ',' → logprob: -1.510558843612671
    3. 'in' → logprob: -5.26055908203125
    4. ' ,' → logprob: -6.76055908203125
    5. ',v' → logprob: -7.26055908203125
    6. ',u' → logprob: -7.38555908203125
    7. ')' → logprob: -8.69805908203125
    8. ' ' → logprob: -9.01055908203125
    9. ' u' → logprob: -9.38555908203125
    10. '<|end|>' → logprob: -9.57305908203125

Token 134: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.015775900334119797
    2. ' links' → logprob: -4.515775680541992
    3. 'range' → logprob: -5.765775680541992
    4. ' range' → logprob: -7.265775680541992
    5. 'enumer' → logprob: -7.515775680541992
    6. '(' → logprob: -9.390775680541992
    7. 'link' → logprob: -9.515775680541992
    8. '[' → logprob: -10.015775680541992
    9. 'len' → logprob: -10.265775680541992
    10. ' enumerate' → logprob: -10.515775680541992

Token 135: '[v' (ID: 36561)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048972245305776596
    2. '[v' → logprob: -3.0489721298217773
    3. '0' → logprob: -8.673972129821777
    4. 'v' → logprob: -9.798972129821777
    5. '[u' → logprob: -10.048972129821777
    6. '   ' → logprob: -10.923972129821777
    7. '[q' → logprob: -10.923972129821777
    8. ')' → logprob: -10.923972129821777
    9. '])' → logprob: -12.173972129821777
    10. '[s' → logprob: -12.236472129821777

Token 136: ']])
' (ID: 62818)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.1151454821228981
    2. '[v' → logprob: -2.865145444869995
    3. ']' → logprob: -3.615145444869995
    4. '])' → logprob: -4.865145683288574
    5. ')])' → logprob: -4.990145683288574
    6. '[' → logprob: -5.115145683288574
    7. '])]' → logprob: -5.990145683288574
    8. ']])
' → logprob: -7.615145683288574
    9. 'v' → logprob: -7.865145683288574
    10. ']))' → logprob: -7.865145683288574

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5829975008964539
    2. '<|end|>' → logprob: -1.3329975605010986
    3. ')' → logprob: -2.3329975605010986
    4. '
' → logprob: -3.2079975605010986
    5. ' while' → logprob: -3.9579975605010986
    6. 'while' → logprob: -4.7079973220825195
    7. ')
' → logprob: -5.3329973220825195
    8. '<|end|>' → logprob: -6.2079973220825195
    9. '    
' → logprob: -6.7079973220825195
    10. ',' → logprob: -7.3329973220825195

Token 138: ' u' (ID: 337)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3023659288883209
    2. 'while' → logprob: -1.5523658990859985
    3. ' while' → logprob: -3.302366018295288
    4. ')' → logprob: -5.427365779876709
    5. 'v' → logprob: -6.052365779876709
    6. '<|end|>' → logprob: -6.677365779876709
    7. 'anc' → logprob: -7.052365779876709
    8. 'visited' → logprob: -7.927365779876709
    9. '       ' → logprob: -8.052366256713867
    10. '  ' → logprob: -8.427366256713867

Token 139: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04891254007816315
    2. '=' → logprob: -3.798912525177002
    3. ' =' → logprob: -3.923912525177002
    4. ' ,' → logprob: -5.673912525177002
    5. ',v' → logprob: -7.923912525177002
    6. ',u' → logprob: -7.923912525177002
    7. ')' → logprob: -8.29891300201416
    8. ' in' → logprob: -8.54891300201416
    9. '<|end|>' → logprob: -8.54891300201416
    10. '.append' → logprob: -8.92391300201416

Token 140: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2823012173175812
    2. 'v' → logprob: -2.157301187515259
    3. ' ' → logprob: -2.282301187515259
    4. ' v' → logprob: -4.407301425933838
    5. 'links' → logprob: -5.532301425933838
    6. 'q' → logprob: -5.657301425933838
    7. 'u' → logprob: -6.032301425933838
    8. ' links' → logprob: -6.407301425933838
    9. '-' → logprob: -7.282301425933838
    10. ' q' → logprob: -7.282301425933838

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36999014019966125
    2. 'u' → logprob: -2.369990110397339
    3. ')' → logprob: -2.869990110397339
    4. 'q' → logprob: -3.119990110397339
    5. 'v' → logprob: -3.494990110397339
    6. 'None' → logprob: -4.119990348815918
    7. ' ' → logprob: -4.244990348815918
    8. 'len' → logprob: -4.244990348815918
    9. 'links' → logprob: -4.994990348815918
    10. ' u' → logprob: -5.244990348815918

Token 142: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05855240672826767
    2. ',' → logprob: -3.4335525035858154
    3. ',)' → logprob: -4.183552265167236
    4. ')
' → logprob: -5.683552265167236
    5. ']' → logprob: -6.683552265167236
    6. ' )' → logprob: -6.933552265167236
    7. '+' → logprob: -7.058552265167236
    8. '<|end|>' → logprob: -7.433552265167236
    9. ' +' → logprob: -7.558552265167236
    10. '])' → logprob: -7.683552265167236

Token 143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10225838422775269
    2. ' ' → logprob: -2.8522584438323975
    3. ')' → logprob: -3.7272584438323975
    4. 'v' → logprob: -5.102258205413818
    5. '-' → logprob: -5.602258205413818
    6. 'len' → logprob: -5.977258205413818
    7. '))' → logprob: -7.602258205413818
    8. ' v' → logprob: -7.727258205413818
    9. ' -' → logprob: -7.852258205413818
    10. '1' → logprob: -7.977258205413818

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3316727578639984
    2. 'v' → logprob: -1.5816727876663208
    3. '-' → logprob: -3.3316726684570312
    4. ')' → logprob: -3.8316726684570312
    5. 'len' → logprob: -4.831672668457031
    6. ' ' → logprob: -5.581672668457031
    7. 'u' → logprob: -6.081672668457031
    8. '1' → logprob: -6.331672668457031
    9. 'None' → logprob: -7.331672668457031
    10. ' v' → logprob: -7.831672668457031

Token 145: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.637786231702194e-05
    2. ')
' → logprob: -10.000086784362793
    3. ')])' → logprob: -11.750086784362793
    4. '[' → logprob: -12.000086784362793
    5. ' )' → logprob: -12.250086784362793
    6. ')]' → logprob: -12.250086784362793
    7. ')[' → logprob: -12.500086784362793
    8. ']' → logprob: -12.875086784362793
    9. '))' → logprob: -13.000086784362793
    10. '),' → logprob: -13.375086784362793

Token 146: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' pas' (ID: 2173)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24480551481246948
    2. '<|end|>' → logprob: -2.2448055744171143
    3. ' )' → logprob: -3.6198055744171143
    4. '#' → logprob: -3.9948055744171143
    5. '0' → logprob: -4.369805335998535
    6. ' ' → logprob: -4.619805335998535
    7. 'u' → logprob: -5.119805335998535
    8. ' u' → logprob: -5.244805335998535
    9. '<|end|>' → logprob: -5.744805335998535
    10. ')
' → logprob: -5.744805335998535

Token 149: ' certain' (ID: 4454)
  Prédit: ' encore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' encore' → logprob: -1.2486133575439453
    2. ' de' → logprob: -1.9986133575439453
    3. ' complet' → logprob: -1.9986133575439453
    4. ')' → logprob: -2.3736133575439453
    5. ' valid' → logprob: -2.9986133575439453
    6. ' complete' → logprob: -3.1236133575439453
    7. ',' → logprob: -3.7486133575439453
    8. ' complète' → logprob: -3.9986133575439453
    9. 'de' → logprob: -4.123613357543945
    10. 'def' → logprob: -4.123613357543945

Token 150: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' ça' (ID: 13590)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.5305313467979431
    2. 'u' → logprob: -1.155531406402588
    3. 'cela' → logprob: -3.780531406402588
    4. ' u' → logprob: -4.155531406402588
    5. 'c' → logprob: -4.280531406402588
    6. ' ce' → logprob: -4.405531406402588
    7. 'ce' → logprob: -4.655531406402588
    8. 'tu' → logprob: -5.280531406402588
    9. ' cela' → logprob: -5.655531406402588
    10. 'this' → logprob: -6.405531406402588

Token 152: ' serve' (ID: 10505)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.7871495485305786
    2. ')' → logprob: -1.7871495485305786
    3. ' fonctionne' → logprob: -1.9121495485305786
    4. 'so' → logprob: -2.662149429321289
    5. ' fasse' → logprob: -3.537149429321289
    6. ' so' → logprob: -3.787149429321289
    7. ' continue' → logprob: -4.037149429321289
    8. ' marche' → logprob: -4.162149429321289
    9. ' suff' → logprob: -5.037149429321289
    10. ' conv' → logprob: -5.162149429321289

Token 153: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' 
' (ID: 793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14244866371154785
    2. ' )' → logprob: -3.267448663711548
    3. ' c' → logprob: -4.267448425292969
    4. ' u' → logprob: -4.392448425292969
    5. ' on' → logprob: -4.517448425292969
    6. 'u' → logprob: -4.517448425292969
    7. ' return' → logprob: -5.142448425292969
    8. '...' → logprob: -5.142448425292969
    9. ' je' → logprob: -5.392448425292969
    10. ' ça' → logprob: -5.642448425292969

Token 155: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03465951979160309
    2. ' q' → logprob: -3.4096596240997314
    3. 'len' → logprob: -7.284659385681152
    4. ' len' → logprob: -8.534659385681152
    5. ' not' → logprob: -10.159659385681152
    6. 'not' → logprob: -10.284659385681152
    7. 'True' → logprob: -10.784659385681152
    8. ' True' → logprob: -11.034659385681152
    9. 'u' → logprob: -12.159659385681152
    10. 'False' → logprob: -12.534659385681152

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014171971939504147
    2. ':
' → logprob: -4.264172077178955
    3. ' and' → logprob: -12.764171600341797
    4. ':
' → logprob: -13.639171600341797
    5. '):' → logprob: -14.014171600341797
    6. ':p' → logprob: -14.264171600341797
    7. '):
' → logprob: -14.514171600341797
    8. ':

' → logprob: -14.639171600341797
    9. 'and' → logprob: -14.889171600341797
    10. '   ' → logprob: -14.889171600341797

Token 159: '       ' (ID: 309)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.26788169145584106
    2. '       ' → logprob: -2.1428816318511963
    3. 'u' → logprob: -2.5178816318511963
    4. ' v' → logprob: -4.017881870269775
    5. ' (' → logprob: -5.142881870269775
    6. '(u' → logprob: -5.392881870269775
    7. '   ' → logprob: -5.767881870269775
    8. 'v' → logprob: -6.517881870269775
    9. '	u' → logprob: -6.892881870269775
    10. ',' → logprob: -7.017881870269775

Token 160: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.11868994683027267
    2. 'v' → logprob: -2.868690013885498
    3. ' u' → logprob: -3.118690013885498
    4. 'x' → logprob: -5.243690013885498
    5. ' v' → logprob: -6.118690013885498
    6. 'w' → logprob: -6.743690013885498
    7. '       ' → logprob: -6.868690013885498
    8. '(u' → logprob: -8.49368953704834
    9. 'node' → logprob: -8.86868953704834
    10. '   ' → logprob: -9.36868953704834

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005641150055453181
    2. ',v' → logprob: -7.625564098358154
    3. '=' → logprob: -10.250564575195312
    4. ' ,' → logprob: -11.125564575195312
    5. 'v' → logprob: -11.500564575195312
    6. ',u' → logprob: -11.875564575195312
    7. ',q' → logprob: -13.125564575195312
    8. ' v' → logprob: -14.125564575195312
    9. ',n' → logprob: -14.375564575195312
    10. 'u' → logprob: -14.375564575195312

Token 162: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6176461577415466
    2. ' a' → logprob: -1.6176462173461914
    3. 'v' → logprob: -1.8676462173461914
    4. ' v' → logprob: -2.4926462173461914
    5. 'p' → logprob: -4.492646217346191
    6. ' p' → logprob: -4.617646217346191
    7. ' u' → logprob: -6.992646217346191
    8. 'u' → logprob: -6.992646217346191
    9. ' ' → logprob: -7.367646217346191
    10. 'w' → logprob: -7.992646217346191

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931751370429993
    2. ' =' → logprob: -0.6931751370429993
    3. '       ' → logprob: -11.568175315856934
    4. '=q' → logprob: -11.818175315856934
    5. '   ' → logprob: -12.818175315856934
    6. ')' → logprob: -12.943175315856934
    7. '        ' → logprob: -13.443175315856934
    8. ' ' → logprob: -13.568175315856934
    9. ' q' → logprob: -13.943175315856934
    10. '    ' → logprob: -13.943175315856934

Token 164: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.42872145771980286
    2. ' q' → logprob: -1.0537214279174805
    3. ' ' → logprob: -12.05372142791748
    4. 'deque' → logprob: -12.30372142791748
    5. '   ' → logprob: -13.80372142791748
    6. '	q' → logprob: -13.80372142791748
    7. '
' → logprob: -14.17872142791748
    8. '[q' → logprob: -14.30372142791748
    9. 'None' → logprob: -14.42872142791748
    10. '  ' → logprob: -14.49122142791748

Token 165: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0317072831094265
    2. '=' → logprob: -4.156707286834717
    3. '.append' → logprob: -4.906707286834717
    4. ' =' → logprob: -6.031707286834717
    5. ' p' → logprob: -6.156707286834717
    6. 'p' → logprob: -6.156707286834717
    7. '.pop' → logprob: -7.531707286834717
    8. ')' → logprob: -8.156706809997559
    9. '=p' → logprob: -8.656706809997559
    10. '.' → logprob: -9.031706809997559

Token 166: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0001801801408873871
    2. 'op' → logprob: -8.8751802444458
    3. 'left' → logprob: -10.7501802444458
    4. 'ople' → logprob: -11.3751802444458
    5. 'opl' → logprob: -13.1251802444458
    6. 'append' → logprob: -13.6251802444458
    7. 'p' → logprob: -13.7501802444458
    8. '```' → logprob: -14.2501802444458
    9. 'opt' → logprob: -14.7501802444458
    10. 'oplevel' → logprob: -14.8751802444458

Token 167: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.717296517104842e-05
    2. '(' → logprob: -10.375057220458984
    3. '()
' → logprob: -11.500057220458984
    4. ')' → logprob: -11.500057220458984
    5. ' ()' → logprob: -12.625057220458984
    6. '       ' → logprob: -14.125057220458984
    7. '   ' → logprob: -15.250057220458984
    8. '();' → logprob: -15.375057220458984
    9. '<|end|>' → logprob: -15.625057220458984
    10. '())' → logprob: -15.875057220458984

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016811365261673927
    2. 'anc' → logprob: -4.641811370849609
    3. 'if' → logprob: -5.391811370849609
    4. '   ' → logprob: -6.766811370849609
    5. ' if' → logprob: -7.141811370849609
    6. '<|end|>' → logprob: -8.76681137084961
    7. '           ' → logprob: -9.51681137084961
    8. 'for' → logprob: -9.89181137084961
    9. ' for' → logprob: -10.14181137084961
    10. ' anc' → logprob: -10.26681137084961

Token 169: ' anc' (ID: 11568)
  Prédit: 'anc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anc' (adapté à ' anc') → logprob: -0.10751184821128845
    2. 'if' → logprob: -3.1075117588043213
    3. '       ' → logprob: -3.7325117588043213
    4. ' anc' → logprob: -3.8575117588043213
    5. ' if' → logprob: -4.9825119972229
    6. '   ' → logprob: -5.4825119972229
    7. '           ' → logprob: -7.8575119972229
    8. 'for' → logprob: -8.357511520385742
    9. 'ances' → logprob: -9.232511520385742
    10. ' for' → logprob: -9.545011520385742

Token 170: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00016361083544325083
    2. '[v' → logprob: -9.375164031982422
    3. '[' → logprob: -9.500164031982422
    4. 'u' → logprob: -13.250164031982422
    5. '[user' → logprob: -14.625164031982422
    6. '\[' → logprob: -14.625164031982422
    7. ' [' → logprob: -15.125164031982422
    8. '```' → logprob: -15.500164031982422
    9. 'v' → logprob: -16.250164031982422
    10. '[a' → logprob: -16.250164031982422

Token 171: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003804949577897787
    2. ']=' → logprob: -5.628805160522461
    3. '=' → logprob: -8.753805160522461
    4. ' ]' → logprob: -10.128805160522461
    5. ')' → logprob: -12.378805160522461
    6. '[' → logprob: -13.878805160522461
    7. ' =' → logprob: -13.878805160522461
    8. ']
' → logprob: -15.503805160522461
    9. ']==' → logprob: -15.753805160522461
    10. ')=' → logprob: -16.12880516052246

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197015196084976
    2. ' =' → logprob: -2.8119702339172363
    3. ')' → logprob: -14.061969757080078
    4. '[' → logprob: -14.561969757080078
    5. ',' → logprob: -15.186969757080078
    6. ' ' → logprob: -15.311969757080078
    7. ']' → logprob: -15.436969757080078
    8. '=

' → logprob: -16.061969757080078
    9. '<|end|>' → logprob: -16.811969757080078
    10. ')=' → logprob: -16.936969757080078

Token 173: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0010328111238777637
    2. ' a' → logprob: -6.876032829284668
    3. '   ' → logprob: -17.00103187561035
    4. ' ' → logprob: -18.25103187561035
    5. '	a' → logprob: -18.37603187561035
    6. '_a' → logprob: -19.50103187561035
    7. '#a' → logprob: -20.12603187561035
    8. 'v' → logprob: -20.25103187561035
    9. 'а' → logprob: -20.62603187561035
    10. ''a' → logprob: -20.75103187561035

Token 174: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011485722847282887
    2. '       ' → logprob: -4.636485576629639
    3. ' for' → logprob: -6.386485576629639
    4. '   ' → logprob: -10.386486053466797
    5. 'if' → logprob: -12.136486053466797
    6. '           ' → logprob: -12.761486053466797
    7. '	for' → logprob: -12.886486053466797
    8. ' ' → logprob: -14.511486053466797
    9. '               ' → logprob: -14.761486053466797
    10. '```' → logprob: -14.886486053466797

Token 177: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6948923468589783
    2. ' w' → logprob: -0.6948923468589783
    3. 'v' → logprob: -7.194892406463623
    4. ' v' → logprob: -7.569892406463623
    5. 'x' → logprob: -8.944891929626465
    6. '```' → logprob: -9.819891929626465
    7. 'u' → logprob: -10.194891929626465
    8. ' x' → logprob: -10.319891929626465
    9. ' nxt' → logprob: -10.444891929626465
    10. ' ' → logprob: -10.444891929626465

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011049000546336174
    2. 'in' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.511049270629883
    4. '	in' → logprob: -15.886049270629883
    5. 'not' → logprob: -16.261049270629883
    6. 'In' → logprob: -16.761049270629883
    7. 'd' → logprob: -16.761049270629883
    8. 's' → logprob: -16.948549270629883
    9. '[' → logprob: -17.198549270629883
    10. ' ' → logprob: -17.323549270629883

Token 179: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.31328487396240234
    2. ' links' → logprob: -1.3132848739624023
    3. 'link' → logprob: -11.688284873962402
    4. '.links' → logprob: -12.563284873962402
    5. '[' → logprob: -12.938284873962402
    6. '_links' → logprob: -13.688284873962402
    7. '(' → logprob: -13.688284873962402
    8. ' ' → logprob: -13.813284873962402
    9. ' enlaces' → logprob: -14.188284873962402
    10. ' link' → logprob: -14.250784873962402

Token 180: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9027791495318525e-05
    2. '[v' → logprob: -12.000019073486328
    3. '[w' → logprob: -12.250019073486328
    4. 'u' → logprob: -12.500019073486328
    5. '[' → logprob: -12.625019073486328
    6. '(u' → logprob: -14.500019073486328
    7. ' [' → logprob: -15.750019073486328
    8. '[
' → logprob: -16.500019073486328
    9. '```' → logprob: -16.875019073486328
    10. ' u' → logprob: -17.375019073486328

Token 181: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.430302232503891
    2. ']:' → logprob: -1.0553022623062134
    3. ']' → logprob: -6.930302143096924
    4. '           ' → logprob: -8.430302619934082
    5. ']:
' → logprob: -8.555302619934082
    6. ':' → logprob: -8.805302619934082
    7. ':
' → logprob: -10.430302619934082
    8. ']:

' → logprob: -11.805302619934082
    9. '       ' → logprob: -12.055302619934082
    10. '):
' → logprob: -12.430302619934082

Token 182: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00886746495962143
    2. ' if' → logprob: -5.008867263793945
    3. 'if' → logprob: -6.258867263793945
    4. '<|end|>' → logprob: -8.883867263793945
    5. '               ' → logprob: -10.883867263793945
    6. ':
' → logprob: -10.883867263793945
    7. '<|end|>' → logprob: -11.008867263793945
    8. '   ' → logprob: -11.383867263793945
    9. ',' → logprob: -11.758867263793945
    10. ':' → logprob: -12.008867263793945

Token 183: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08412322402000427
    2. 'if' (adapté à ' if') → logprob: -2.709123134613037
    3. '           ' → logprob: -4.584123134613037
    4. '               ' → logprob: -5.584123134613037
    5. '<|end|>' → logprob: -9.459123611450195
    6. '            ' → logprob: -12.084123611450195
    7. '	if' → logprob: -12.209123611450195
    8. ' ' → logprob: -12.334123611450195
    9. '<|end|>' → logprob: -12.709123611450195
    10. '   ' → logprob: -12.959123611450195

Token 184: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10020752996206284
    2. ' w' → logprob: -2.350207567214966
    3. ' ' → logprob: -15.475207328796387
    4. '   ' → logprob: -16.225208282470703
    5. '(w' → logprob: -16.225208282470703
    6. '	w' → logprob: -16.475208282470703
    7. ' ' → logprob: -16.850208282470703
    8. '```' → logprob: -16.975208282470703
    9. '           ' → logprob: -17.100208282470703
    10. 'W' → logprob: -17.100208282470703

Token 185: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.12693031132221222
    2. '!=' → logprob: -2.1269302368164062
    3. ' ' → logprob: -14.376930236816406
    4. '()!=' → logprob: -14.876930236816406
    5. ')!=' → logprob: -15.126930236816406
    6. '!=(' → logprob: -15.126930236816406
    7. ' not' → logprob: -15.626930236816406
    8. ']!=' → logprob: -16.251930236816406
    9. 'w' → logprob: -16.376930236816406
    10. ' ' → logprob: -16.626930236816406

Token 186: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.16641254723072052
    2. 'a' → logprob: -2.041412591934204
    3. ' u' → logprob: -3.791412591934204
    4. ' a' → logprob: -7.041412353515625
    5. ' ' → logprob: -11.416412353515625
    6. '   ' → logprob: -12.666412353515625
    7. '	u' → logprob: -12.791412353515625
    8. '	a' → logprob: -14.416412353515625
    9. ' ' → logprob: -14.916412353515625
    10. 'w' → logprob: -15.666412353515625

Token 187: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3854748010635376
    2. ':' → logprob: -1.2604748010635376
    3. '               ' → logprob: -3.385474681854248
    4. ' and' → logprob: -6.760474681854248
    5. '):
' → logprob: -6.885474681854248
    6. ',' → logprob: -9.385475158691406
    7. '):' → logprob: -9.510475158691406
    8. ':

' → logprob: -10.135475158691406
    9. ':
' → logprob: -10.635475158691406
    10. '           ' → logprob: -11.010475158691406

Token 188: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.060733992606401443
    2. ' q' → logprob: -3.0607340335845947
    3. 'q' → logprob: -4.435733795166016
    4. ',q' → logprob: -9.935733795166016
    5. ',' → logprob: -10.310733795166016
    6. '           ' → logprob: -10.685733795166016
    7. '                   ' → logprob: -10.935733795166016
    8. '	q' → logprob: -10.935733795166016
    9. '              ' → logprob: -11.185733795166016
    10. '   ' → logprob: -11.935733795166016

Token 189: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.11620521545410156
    2. ' q' → logprob: -2.2412052154541016
    3. '                   ' → logprob: -5.741205215454102
    4. '               ' → logprob: -8.991205215454102
    5. '                       ' → logprob: -11.491205215454102
    6. '   ' → logprob: -11.616205215454102
    7. '	q' → logprob: -11.991205215454102
    8. '                ' → logprob: -12.241205215454102
    9. '                    ' → logprob: -12.991205215454102
    10. '           ' → logprob: -12.991205215454102

Token 190: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005246210377663374
    2. '.' → logprob: -5.255246162414551
    3. 'append' → logprob: -11.75524616241455
    4. ' .' → logprob: -12.63024616241455
    5. '.enqueue' → logprob: -14.38024616241455
    6. '.extend' → logprob: -15.00524616241455
    7. '.app' → logprob: -16.005247116088867
    8. '.Append' → logprob: -16.755247116088867
    9. ' append' → logprob: -16.755247116088867
    10. '           ' → logprob: -17.630247116088867

Token 191: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0008521550917066634
    2. '(w' → logprob: -7.125852108001709
    3. '(' → logprob: -10.000852584838867
    4. ' ((' → logprob: -13.750852584838867
    5. ' (' → logprob: -13.875852584838867
    6. '(
' → logprob: -15.625852584838867
    7. '(u' → logprob: -16.000852584838867
    8. '[(' → logprob: -17.500852584838867
    9. '([' → logprob: -18.625852584838867
    10. '<|end|>' → logprob: -18.750852584838867

Token 192: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.25197985768318176
    2. '(w' → logprob: -1.5019798278808594
    3. '(u' → logprob: -10.62697982788086
    4. ' w' → logprob: -11.75197982788086
    5. '(' → logprob: -12.12697982788086
    6. '[w' → logprob: -12.25197982788086
    7. 'u' → logprob: -12.75197982788086
    8. ' (' → logprob: -13.12697982788086
    9. '	w' → logprob: -13.62697982788086
    10. ')' → logprob: -13.87697982788086

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043913270928896964
    2. ',u' → logprob: -8.250438690185547
    3. ' ,' → logprob: -9.375438690185547
    4. 'u' → logprob: -9.500438690185547
    5. '[u' → logprob: -11.750438690185547
    6. ')' → logprob: -12.500438690185547
    7. ' u' → logprob: -12.625438690185547
    8. '),' → logprob: -13.875438690185547
    9. '(u' → logprob: -14.000438690185547
    10. ',
' → logprob: -14.125438690185547

Token 194: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.018150296062231064
    2. ' u' → logprob: -4.018150329589844
    3. '	u' → logprob: -15.893150329589844
    4. '   ' → logprob: -16.393150329589844
    5. '[u' → logprob: -16.518150329589844
    6. ')' → logprob: -17.018150329589844
    7. ' ' → logprob: -17.643150329589844
    8. '<u' → logprob: -18.018150329589844
    9. ',u' → logprob: -18.393150329589844
    10. ' ' → logprob: -18.393150329589844

Token 195: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006672830786556005
    2. ')' → logprob: -7.750667095184326
    3. '))
' → logprob: -8.375667572021484
    4. ')))' → logprob: -12.375667572021484
    5. '               ' → logprob: -14.000667572021484
    6. '))

' → logprob: -15.250667572021484
    7. ' ))' → logprob: -15.500667572021484
    8. '()))' → logprob: -15.875667572021484
    9. ')
' → logprob: -15.875667572021484
    10. '<|end|>' → logprob: -16.750667572021484

Token 196: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' rem' (ID: 1662)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9217050671577454
    2. '   ' → logprob: -1.1717050075531006
    3. 'return' → logprob: -1.2967050075531006
    4. '<|end|>' → logprob: -4.79670524597168
    5. ' ' → logprob: -5.54670524597168
    6. ')' → logprob: -6.79670524597168
    7. '
' → logprob: -6.79670524597168
    8. 'v' → logprob: -7.42170524597168
    9. '  ' → logprob: -7.79670524597168
    10. 'def' → logprob: -7.92170524597168

Token 199: 'onter' (ID: 61808)
  Prédit: 'onter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onter' → logprob: -0.014482072554528713
    2. 'ont' → logprob: -5.139482021331787
    3. 'pl' → logprob: -5.264482021331787
    4. 'onte' → logprob: -6.514482021331787
    5. 'placer' → logprob: -6.889482021331787
    6. 'p' → logprob: -7.514482021331787
    7. 'on' → logprob: -9.139482498168945
    8. 'u' → logprob: -10.764482498168945
    9. 'plier' → logprob: -10.764482498168945
    10. '#' → logprob: -10.889482498168945

Token 200: ' le' (ID: 505)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6409315466880798
    2. ' u' → logprob: -1.1409316062927246
    3. '<|end|>' → logprob: -3.2659316062927246
    4. '[u' → logprob: -3.5159316062927246
    5. ' for' → logprob: -3.7659316062927246
    6. '(u' → logprob: -4.765931606292725
    7. '...' → logprob: -4.765931606292725
    8. ')' → logprob: -5.015931606292725
    9. 'for' → logprob: -5.140931606292725
    10. ',' → logprob: -5.140931606292725

Token 201: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.17531774938106537
    2. ' chemin' → logprob: -2.0503177642822266
    3. 'path' → logprob: -4.550317764282227
    4. 'plus' → logprob: -5.675317764282227
    5. 'parent' → logprob: -5.675317764282227
    6. '```' → logprob: -5.925317764282227
    7. '_che' → logprob: -6.050317764282227
    8. ' ' → logprob: -6.425317764282227
    9. ' plus' → logprob: -6.925317764282227
    10. ' path' → logprob: -7.175317764282227

Token 202: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.01503050234168768
    2. 'part' → logprob: -4.890030384063721
    3. 'u' → logprob: -6.140030384063721
    4. 'dep' → logprob: -6.265030384063721
    5. 'p' → logprob: -6.765030384063721
    6. 'l' → logprob: -7.015030384063721
    7. ' partire' → logprob: -8.015030860900879
    8. 'v' → logprob: -8.890030860900879
    9. 'from' → logprob: -9.265030860900879
    10. ' l' → logprob: -9.515030860900879

Token 204: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.6774390339851379
    2. ' de' → logprob: -0.9274390339851379
    3. 'du' → logprob: -3.802438974380493
    4. '   ' → logprob: -3.802438974380493
    5. 'u' → logprob: -4.177439212799072
    6. 'de' → logprob: -4.552439212799072
    7. '[u' → logprob: -4.677439212799072
    8. ' u' → logprob: -5.427439212799072
    9. '(u' → logprob: -6.052439212799072
    10. 'v' → logprob: -6.177439212799072

Token 205: ' u' (ID: 337)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'links' → logprob: -1.1758687496185303
    2. 'len' → logprob: -1.3008687496185303
    3. 'anc' → logprob: -1.5508687496185303
    4. 'u' → logprob: -2.8008687496185303
    5. 'v' → logprob: -3.4258687496185303
    6. '1' → logprob: -3.4258687496185303
    7. ' links' → logprob: -3.6758687496185303
    8. '0' → logprob: -3.9258687496185303
    9. ' anc' → logprob: -4.675868988037109
    10. ' len' → logprob: -5.050868988037109

Token 206: ' jusqu' (ID: 21961)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9307941794395447
    2. '   ' → logprob: -1.1807942390441895
    3. '<|end|>' → logprob: -2.3057942390441895
    4. 'while' → logprob: -2.5557942390441895
    5. 'u' → logprob: -3.3057942390441895
    6. ',' → logprob: -3.6807942390441895
    7. ' u' → logprob: -4.5557942390441895
    8. '
' → logprob: -4.6807942390441895
    9. ' ' → logprob: -4.8057942390441895
    10. '[u' → logprob: -5.1807942390441895

Token 207: '’à' (ID: 32891)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.5416454672813416
    2. ''au' → logprob: -1.9166455268859863
    3. 'u' → logprob: -2.0416455268859863
    4. 'au' → logprob: -2.7916455268859863
    5. 'à' → logprob: -3.2916455268859863
    6. 'a' → logprob: -3.7916455268859863
    7. '’à' → logprob: -4.916645526885986
    8. ''u' → logprob: -5.916645526885986
    9. ' à' → logprob: -5.916645526885986
    10. ''' → logprob: -6.041645526885986

Token 208: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027980582788586617
    2. 'v' → logprob: -3.7779805660247803
    3. ' ' → logprob: -5.652980804443359
    4. ' v' → logprob: -7.652980804443359
    5. 'anc' → logprob: -7.777980804443359
    6. 'u' → logprob: -8.52798080444336
    7. 'a' → logprob: -10.02798080444336
    8. ' anc' → logprob: -10.65298080444336
    9. 'links' → logprob: -12.27798080444336
    10. ' u' → logprob: -12.27798080444336

Token 209: ' rac' (ID: 12334)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.22750858962535858
    2. ' rac' → logprob: -2.102508544921875
    3. '0' → logprob: -2.852508544921875
    4. 'v' → logprob: -4.477508544921875
    5. 'root' → logprob: -5.352508544921875
    6. 'source' → logprob: -6.352508544921875
    7. ' ' → logprob: -6.852508544921875
    8. 'r' → logprob: -6.977508544921875
    9. ' source' → logprob: -7.102508544921875
    10. ' v' → logprob: -7.102508544921875

Token 210: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.08613887429237366
    2. 'e' → logprob: -2.711138963699341
    3. 'ne' → logprob: -5.336138725280762
    4. 'îne' → logprob: -6.461138725280762
    5. '   ' → logprob: -6.961138725280762
    6. '?' → logprob: -7.211138725280762
    7. '```' → logprob: -7.336138725280762
    8. '#' → logprob: -7.461138725280762
    9. '^' → logprob: -7.586138725280762
    10. 'ïne' → logprob: -7.961138725280762

Token 211: '
' (ID: 198)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.23311768472194672
    2. '   ' → logprob: -2.4831175804138184
    3. ' path' → logprob: -2.8581175804138184
    4. 'while' → logprob: -3.4831175804138184
    5. 'p' → logprob: -4.233117580413818
    6. ' while' → logprob: -5.108117580413818
    7. 'u' → logprob: -5.608117580413818
    8. ' p' → logprob: -5.733117580413818
    9. 'v' → logprob: -6.233117580413818
    10. 'current' → logprob: -6.483117580413818

Token 212: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9918062090873718
    2. '   ' → logprob: -1.3668062686920166
    3. 'while' → logprob: -1.7418062686920166
    4. 'u' → logprob: -2.8668062686920166
    5. ',' → logprob: -3.3668062686920166
    6. ' ' → logprob: -3.8668062686920166
    7. 'v' → logprob: -4.1168060302734375
    8. '
' → logprob: -4.6168060302734375
    9. ' u' → logprob: -4.8668060302734375
    10. ' =' → logprob: -4.9918060302734375

Token 213: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.101935476064682
    2. ' path' → logprob: -2.976935386657715
    3. '   ' → logprob: -4.351935386657715
    4. 'p' → logprob: -4.601935386657715
    5. 'che' → logprob: -4.601935386657715
    6. ' chemin' → logprob: -5.226935386657715
    7. 'while' → logprob: -5.601935386657715
    8. ' p' → logprob: -7.101935386657715
    9. ' while' → logprob: -7.726935386657715
    10. 'cur' → logprob: -7.976935386657715

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5771506428718567
    2. '=' → logprob: -0.9521506428718567
    3. '_' → logprob: -2.952150583267212
    4. ',' → logprob: -8.827150344848633
    5. '[' → logprob: -10.077150344848633
    6. '_=' → logprob: -10.202150344848633
    7. '=[]' → logprob: -10.327150344848633
    8. ')' → logprob: -10.327150344848633
    9. ' ' → logprob: -10.702150344848633
    10. ']' → logprob: -11.452150344848633

Token 215: ' [' (ID: 723)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.363348126411438
    2. '[]' → logprob: -1.363348126411438
    3. ' [' → logprob: -3.7383480072021484
    4. '[' → logprob: -4.238348007202148
    5. ' []' → logprob: -4.738348007202148
    6. '[]
' → logprob: -6.363348007202148
    7. '[v' → logprob: -10.238348007202148
    8. ' []
' → logprob: -10.488348007202148
    9. 'deque' → logprob: -10.863348007202148
    10. '[user' → logprob: -10.988348007202148

Token 216: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0008223761687986553
    2. ' u' → logprob: -7.2508225440979
    3. 'v' → logprob: -9.625822067260742
    4. '0' → logprob: -10.750822067260742
    5. ']' → logprob: -11.500822067260742
    6. '   ' → logprob: -12.250822067260742
    7. '(u' → logprob: -12.625822067260742
    8. '
' → logprob: -13.250822067260742
    9. 'anc' → logprob: -14.125822067260742
    10. '[u' → logprob: -14.500822067260742

Token 217: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14382311701774597
    2. ']
' → logprob: -2.0188231468200684
    3. ' ]' → logprob: -7.143823146820068
    4. ')' → logprob: -8.89382266998291
    5. ' ]
' → logprob: -9.39382266998291
    6. ']

' → logprob: -10.14382266998291
    7. ')
' → logprob: -10.51882266998291
    8. ')]' → logprob: -10.76882266998291
    9. ']
' → logprob: -11.01882266998291
    10. '])' → logprob: -11.76882266998291

Token 218: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7796084880828857
    2. '
' → logprob: -0.9046084880828857
    3. ' while' → logprob: -2.2796084880828857
    4. '   ' → logprob: -4.529608726501465
    5. ' =' → logprob: -5.029608726501465
    6. '[u' → logprob: -5.029608726501465
    7. '[-' → logprob: -5.404608726501465
    8. 'u' → logprob: -6.029608726501465
    9. '=' → logprob: -7.279608726501465
    10. ' u' → logprob: -7.529608726501465

Token 219: ' a' (ID: 261)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.22918879985809326
    2. 'while' → logprob: -1.7291887998580933
    3. '
' → logprob: -3.854188919067383
    4. ' =' → logprob: -5.729188919067383
    5. '   ' → logprob: -6.354188919067383
    6. '=' → logprob: -7.979188919067383
    7. 'u' → logprob: -8.104188919067383
    8. ' 
' → logprob: -8.604188919067383
    9. ' u' → logprob: -8.729188919067383
    10. '[' → logprob: -10.354188919067383

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192973017692566
    2. '=' → logprob: -1.501929759979248
    3. 'n' → logprob: -15.75192928314209
    4. ' ' → logprob: -16.251930236816406
    5. ',' → logprob: -16.501930236816406
    6. '=u' → logprob: -16.751930236816406
    7. '=end' → logprob: -17.001930236816406
    8. ' =
' → logprob: -17.001930236816406
    9. 'nd' → logprob: -17.501930236816406
    10. 'u' → logprob: -17.501930236816406

Token 221: ' u' (ID: 337)
  Prédit: 'anc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anc' → logprob: -0.029847217723727226
    2. ' anc' → logprob: -3.5298471450805664
    3. 'u' → logprob: -9.529847145080566
    4. ' u' → logprob: -11.529847145080566
    5. 'path' → logprob: -12.029847145080566
    6. 'ans' → logprob: -12.654847145080566
    7. 'ances' → logprob: -13.404847145080566
    8. ' path' → logprob: -13.904847145080566
    9. ' ' → logprob: -14.654847145080566
    10. 'uc' → logprob: -14.904847145080566

Token 222: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7816523313522339
    2. 'anc' → logprob: -1.2816523313522339
    3. '
' → logprob: -1.4066523313522339
    4. '[-' → logprob: -4.031652450561523
    5. '=' → logprob: -7.031652450561523
    6. ' anc' → logprob: -7.906652450561523
    7. ' =' → logprob: -8.281652450561523
    8. ' 
' → logprob: -8.781652450561523
    9. '   ' → logprob: -9.031652450561523
    10. 'while' → logprob: -10.281652450561523

Token 223: '   ' (ID: 271)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.11678547412157059
    2. '[' → logprob: -2.3667855262756348
    3. '
' → logprob: -4.991785526275635
    4. '[u' → logprob: -5.616785526275635
    5. 'while' → logprob: -6.116785526275635
    6. '[a' → logprob: -6.616785526275635
    7. ' =' → logprob: -6.741785526275635
    8. 'a' → logprob: -8.116785049438477
    9. '[len' → logprob: -8.116785049438477
    10. '=' → logprob: -8.491785049438477

Token 224: ' while' (ID: 2049)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.276645541191101
    2. '=' → logprob: -1.401645541191101
    3. '[-' → logprob: -1.401645541191101
    4. '[' → logprob: -2.0266456604003906
    5. 'while' (adapté à ' while') → logprob: -3.2766456604003906
    6. '
' → logprob: -3.4016456604003906
    7. 'anc' → logprob: -4.776645660400391
    8. '[u' → logprob: -4.776645660400391
    9. ' while' → logprob: -5.276645660400391
    10. 'a' → logprob: -7.151645660400391

Token 225: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23470042645931244
    2. 'anc' → logprob: -1.7347004413604736
    3. ' a' → logprob: -3.7347004413604736
    4. ' anc' → logprob: -4.7347002029418945
    5. 'ans' → logprob: -11.109700202941895
    6. '(a' → logprob: -11.484700202941895
    7. 'True' → logprob: -12.109700202941895
    8. 'ances' → logprob: -12.109700202941895
    9. ' ' → logprob: -12.234700202941895
    10. 'ancestor' → logprob: -12.297200202941895

Token 226: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.14788144826889038
    2. ' !=' → logprob: -2.022881507873535
    3. '!=-' → logprob: -5.272881507873535
    4. 'is' → logprob: -10.897881507873535
    5. ' is' → logprob: -11.022881507873535
    6. 'in' → logprob: -11.397881507873535
    7. ' in' → logprob: -12.772881507873535
    8. '>=' → logprob: -12.897881507873535
    9. '!=(' → logprob: -13.272881507873535
    10. '[' → logprob: -13.397881507873535

Token 227: ' v' (ID: 323)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007875972427427769
    2. ' -' → logprob: -5.507875919342041
    3. '0' → logprob: -5.632875919342041
    4. ' ' → logprob: -8.8828763961792
    5. '-v' → logprob: -10.1328763961792
    6. 'v' → logprob: -10.7578763961792
    7. 'anc' → logprob: -12.0078763961792
    8. '   ' → logprob: -12.5078763961792
    9. ' v' → logprob: -13.7578763961792
    10. '  ' → logprob: -14.7578763961792

Token 228: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5290822386741638
    2. ':' → logprob: -1.0290822982788086
    3. ' and' → logprob: -3.0290822982788086
    4. 'and' → logprob: -6.154082298278809
    5. ' :
' → logprob: -6.404082298278809
    6. ' :' → logprob: -7.279082298278809
    7. '   ' → logprob: -8.404082298278809
    8. '=' → logprob: -8.529082298278809
    9. ' ' → logprob: -9.654082298278809
    10. 'a' → logprob: -10.279082298278809

Token 229: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05828085541725159
    2. '=' → logprob: -2.9332809448242188
    3. ' a' → logprob: -6.933280944824219
    4. ' links' → logprob: -7.058280944824219
    5. ' anc' → logprob: -7.058280944824219
    6. 'anc' → logprob: -8.433280944824219
    7. ' path' → logprob: -9.183280944824219
    8. ' =
' → logprob: -10.058280944824219
    9. ' ' → logprob: -10.058280944824219
    10. '   ' → logprob: -10.308280944824219

Token 230: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.698844313621521
    2. ' a' → logprob: -0.698844313621521
    3. '   ' → logprob: -5.1988444328308105
    4. '
' → logprob: -10.448843955993652
    5. '       ' → logprob: -10.573843955993652
    6. 'anc' → logprob: -10.573843955993652
    7. ' path' → logprob: -10.573843955993652
    8. 'path' → logprob: -10.573843955993652
    9. '    ' → logprob: -12.073843955993652
    10. ' ' → logprob: -12.198843955993652

Token 231: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192955136299133
    2. ' =' → logprob: -1.501929521560669
    3. ',' → logprob: -15.00192928314209
    4. ' ' → logprob: -16.876930236816406
    5. '=a' → logprob: -17.501930236816406
    6. ' ' → logprob: -17.751930236816406
    7. '＝' → logprob: -18.126930236816406
    8. '=int' → logprob: -18.251930236816406
    9. '=

' → logprob: -18.501930236816406
    10. 's' → logprob: -18.751930236816406

Token 232: ' anc' (ID: 11568)
  Prédit: 'anc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anc' → logprob: -0.12693557143211365
    2. ' anc' → logprob: -2.1269354820251465
    3. 'ans' → logprob: -12.251935958862305
    4. '   ' → logprob: -14.126935958862305
    5. 'ances' → logprob: -15.001935958862305
    6. ' ' → logprob: -15.376935958862305
    7. ' ank' → logprob: -15.751935958862305
    8. '    ' → logprob: -15.751935958862305
    9. 'Anc' → logprob: -15.751935958862305
    10. 'ank' → logprob: -15.876935958862305

Token 233: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.011054305359721184
    2. 'a' → logprob: -4.511054515838623
    3. '[' → logprob: -12.636054039001465
    4. ' a' → logprob: -13.511054039001465
    5. '(a' → logprob: -13.511054039001465
    6. '[u' → logprob: -16.01105499267578
    7. '	a' → logprob: -16.38605499267578
    8. '#a' → logprob: -16.51105499267578
    9. '[
' → logprob: -17.13605499267578
    10. ' [' → logprob: -17.13605499267578

Token 234: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.043103668838739395
    2. ']
' → logprob: -3.1681036949157715
    3. ')' → logprob: -9.793103218078613
    4. ' ]' → logprob: -11.043103218078613
    5. ']

' → logprob: -11.793103218078613
    6. '       ' → logprob: -12.293103218078613
    7. '[' → logprob: -12.418103218078613
    8. ')]' → logprob: -12.418103218078613
    9. ')
' → logprob: -12.543103218078613
    10. ']
' → logprob: -12.668103218078613

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021924512460827827
    2. '   ' → logprob: -4.8969244956970215
    3. '<|end|>' → logprob: -4.8969244956970215
    4. ')' → logprob: -5.8969244956970215
    5. 'path' → logprob: -6.8969244956970215
    6. ',' → logprob: -7.0219244956970215
    7. ',path' → logprob: -8.27192497253418
    8. '[' → logprob: -8.52192497253418
    9. '[path' → logprob: -8.52192497253418
    10. ' ' → logprob: -8.77192497253418

Token 236: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.6931527256965637
    2. 'path' (adapté à ' path') → logprob: -0.6931527256965637
    3. '[path' → logprob: -13.94315242767334
    4. ' ' → logprob: -14.31815242767334
    5. '.path' → logprob: -14.31815242767334
    6. '_path' → logprob: -14.44315242767334
    7. '   ' → logprob: -14.56815242767334
    8. ' 
' → logprob: -14.56815242767334
    9. '	path' → logprob: -14.56815242767334
    10. '(path' → logprob: -14.81815242767334

Token 237: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007142199319787323
    2. '.' → logprob: -7.250714302062988
    3. ' .' → logprob: -12.500714302062988
    4. '.app' → logprob: -14.875714302062988
    5. '.extend' → logprob: -15.750714302062988
    6. 'append' → logprob: -17.625713348388672
    7. '.ap' → logprob: -18.250713348388672
    8. '.Append' → logprob: -18.625713348388672
    9. '.push' → logprob: -19.375713348388672
    10. '.add' → logprob: -19.500713348388672

Token 238: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0007101670489646494
    2. '(' → logprob: -7.2507100105285645
    3. ' (' → logprob: -15.750710487365723
    4. '(
' → logprob: -16.750709533691406
    5. '((' → logprob: -17.625709533691406
    6. 'a' → logprob: -18.000709533691406
    7. '(an' → logprob: -18.000709533691406
    8. '(A' → logprob: -19.500709533691406
    9. '('' → logprob: -20.125709533691406
    10. '(

' → logprob: -20.375709533691406

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.310693111619912e-05
    2. ')
' → logprob: -10.250042915344238
    3. ' )' → logprob: -12.000042915344238
    4. '<|end|>' → logprob: -15.125042915344238
    5. '   ' → logprob: -15.375042915344238
    6. ')]' → logprob: -15.500042915344238
    7. '[' → logprob: -15.500042915344238
    8. '))' → logprob: -16.125043869018555
    9. ')return' → logprob: -16.125043869018555
    10. '       ' → logprob: -16.125043869018555

Token 240: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.47412458062171936
    2. ' path' → logprob: -0.974124550819397
    3. 'list' → logprob: -10.724124908447266
    4. ' list' → logprob: -11.474124908447266
    5. '[path' → logprob: -11.724124908447266
    6. '(path' → logprob: -13.349124908447266
    7. ' ' → logprob: -13.349124908447266
    8. '	path' → logprob: -14.099124908447266
    9. ',path' → logprob: -14.599124908447266
    10. ' ' → logprob: -14.849124908447266

Token 243: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27234920859336853
    2. '<|end|>' → logprob: -2.2723491191864014
    3. '[' → logprob: -2.5223491191864014
    4. ':' → logprob: -3.5223491191864014
    5. '
' → logprob: -4.8973493576049805
    6. '(' → logprob: -5.2723493576049805
    7. ' ' → logprob: -5.6473493576049805
    8. ',' → logprob: -5.6473493576049805
    9. ']' → logprob: -6.2723493576049805
    10. '#' → logprob: -7.3973493576049805

Token 244: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5029588937759399
    2. '[' → logprob: -1.37795889377594
    3. ':' → logprob: -2.7529587745666504
    4. ' ' → logprob: -3.3779587745666504
    5. '(' → logprob: -3.8779587745666504
    6. ',' → logprob: -5.00295877456665
    7. '_' → logprob: -5.25295877456665
    8. '<|end|>' → logprob: -5.62795877456665
    9. '#' → logprob: -5.75295877456665
    10. ']' → logprob: -7.00295877456665

Token 245: ' calc' (ID: 25691)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -2.1055517196655273
    2. ' mul' → logprob: -2.1055517196655273
    3. ' add' → logprob: -2.6055517196655273
    4. ' l' → logprob: -2.9805517196655273
    5. ' combine' → logprob: -2.9805517196655273
    6. ' multiply' → logprob: -3.2305517196655273
    7. ' compose' → logprob: -3.3555517196655273
    8. ' is' → logprob: -3.4805517196655273
    9. ' reduce' → logprob: -3.7305517196655273
    10. ' solve' → logprob: -3.8555517196655273

Token 246: '(' (ID: 7)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -1.2631149291992188
    2. '_product' → logprob: -1.3881149291992188
    3. '(' → logprob: -2.8881149291992188
    4. '_sum' → logprob: -3.0131149291992188
    5. '_depth' → logprob: -3.5131149291992188
    6. '_paths' → logprob: -3.5131149291992188
    7. '_weight' → logprob: -3.7631149291992188
    8. '_mul' → logprob: -3.8881149291992188
    9. '_cost' → logprob: -4.013114929199219
    10. '_distance' → logprob: -4.263114929199219

Token 247: 'links' (ID: 26581)
  Prédit: 'links'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.2807863652706146
    2. 'path' → logprob: -3.1557862758636475
    3. ' links' → logprob: -3.4057862758636475
    4. 'paths' → logprob: -3.9057862758636475
    5. 'depth' → logprob: -3.9057862758636475
    6. 'lst' → logprob: -4.530786514282227
    7. 'graph' → logprob: -4.655786514282227
    8. ',' → logprob: -4.905786514282227
    9. ')' → logprob: -5.030786514282227
    10. 'n' → logprob: -5.030786514282227

Token 248: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043330512940883636
    2. ',' → logprob: -3.418330430984497
    3. '):
' → logprob: -4.668330669403076
    4. ')' → logprob: -9.168330192565918
    5. '   ' → logprob: -9.918330192565918
    6. '):
' → logprob: -10.418330192565918
    7. '[' → logprob: -10.668330192565918
    8. ' ):' → logprob: -11.168330192565918
    9. ':' → logprob: -11.293330192565918
    10. '(' → logprob: -13.168330192565918

Token 249: ' v' (ID: 323)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -2.82718563079834
    2. 'path' → logprob: -2.88968563079834
    3. 'n' → logprob: -3.20218563079834
    4. ' n' → logprob: -3.26468563079834
    5. 'x' → logprob: -3.32718563079834
    6. ' edges' → logprob: -3.32718563079834
    7. 'k' → logprob: -3.38968563079834
    8. 'a' → logprob: -3.57718563079834
    9. 'values' → logprob: -3.57718563079834
    10. 'root' → logprob: -3.63968563079834

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19728240370750427
    2. '):' → logprob: -1.8222824335098267
    3. '):
' → logprob: -4.072282314300537
    4. ')' → logprob: -9.072282791137695
    5. ' ,' → logprob: -9.697282791137695
    6. '):
' → logprob: -9.822282791137695
    7. '   ' → logprob: -10.197282791137695
    8. '=' → logprob: -10.947282791137695
    9. ' ):' → logprob: -10.947282791137695
    10. ',
' → logprob: -11.697282791137695

Token 251: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7980577349662781
    2. ' a' → logprob: -1.1730577945709229
    3. ' p' → logprob: -2.548057794570923
    4. 'p' → logprob: -2.798057794570923
    5. ' None' → logprob: -4.423057556152344
    6. ' parent' → logprob: -4.423057556152344
    7. ' anc' → logprob: -4.548057556152344
    8. 'parent' → logprob: -5.298057556152344
    9. ' path' → logprob: -5.610557556152344
    10. 'anc' → logprob: -5.673057556152344

Token 252: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9812363982200623
    2. ',' → logprob: -1.106236457824707
    3. '):' → logprob: -1.231236457824707
    4. ')' → logprob: -6.981236457824707
    5. '=' → logprob: -7.106236457824707
    6. '):
' → logprob: -7.731236457824707
    7. '   ' → logprob: -9.481236457824707
    8. '=None' → logprob: -9.731236457824707
    9. '):

' → logprob: -10.106236457824707
    10. ' ,' → logprob: -10.856236457824707

Token 253: ' l' (ID: 305)
  Prédit: ' depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' depth' → logprob: -2.070099353790283
    2. 'depth' → logprob: -2.195099353790283
    3. ' p' → logprob: -2.820099353790283
    4. ' visited' → logprob: -2.945099353790283
    5. ' res' → logprob: -3.070099353790283
    6. ' path' → logprob: -3.070099353790283
    7. 'path' → logprob: -3.445099353790283
    8. 'p' → logprob: -3.445099353790283
    9. ' k' → logprob: -3.445099353790283
    10. ' d' → logprob: -3.820099353790283

Token 254: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19691681861877441
    2. '):
' → logprob: -1.9469168186187744
    3. 'ength' → logprob: -3.8219168186187744
    4. ',' → logprob: -5.196916580200195
    5. '):
' → logprob: -6.071916580200195
    6. 'en' → logprob: -6.196916580200195
    7. 'ist' → logprob: -6.321916580200195
    8. '):

' → logprob: -7.071916580200195
    9. '=' → logprob: -7.946916580200195
    10. ')' → logprob: -8.196916580200195

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055399421602487564
    2. ':' → logprob: -3.0553994178771973
    3. '[' → logprob: -5.930399417877197
    4. '<|end|>' → logprob: -6.305399417877197
    5. '    ' → logprob: -7.430399417877197
    6. '       ' → logprob: -8.305399894714355
    7. ' :' → logprob: -8.680399894714355
    8. ',' → logprob: -8.930399894714355
    9. ':
' → logprob: -9.180399894714355
    10. '    
' → logprob: -9.305399894714355

Token 256: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3044377565383911
    2. ' res' → logprob: -1.6794377565383911
    3. ' if' → logprob: -3.6794376373291016
    4. ' s' → logprob: -3.6794376373291016
    5. 'res' → logprob: -4.179437637329102
    6. ' ans' → logprob: -6.554437637329102
    7. ' for' → logprob: -6.554437637329102
    8. 's' → logprob: -6.554437637329102
    9. 'if' → logprob: -6.929437637329102
    10. ' total' → logprob: -7.679437637329102

Token 257: ' compter' (ID: 81694)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.7288758158683777
    2. 'res' → logprob: -1.6038758754730225
    3. '   ' → logprob: -2.8538758754730225
    4. ' s' → logprob: -2.9788758754730225
    5. 's' → logprob: -3.1038758754730225
    6. 'r' → logprob: -3.3538758754730225
    7. 'for' → logprob: -4.103875637054443
    8. ' r' → logprob: -4.228875637054443
    9. 'if' → logprob: -4.728875637054443
    10. 'ans' → logprob: -4.728875637054443

Token 258: ' les' (ID: 1341)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8588889241218567
    2. '=' → logprob: -1.483888864517212
    3. ' +=' → logprob: -1.858888864517212
    4. '   ' → logprob: -2.233888864517212
    5. '=len' → logprob: -3.733888864517212
    6. '(' → logprob: -4.233889102935791
    7. ':' → logprob: -4.858889102935791
    8. ',' → logprob: -4.858889102935791
    9. '(len' → logprob: -4.983889102935791
    10. '+=' → logprob: -5.358889102935791

Token 259: ' feuilles' (ID: 109727)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6916525363922119
    2. 'for' → logprob: -1.816652536392212
    3. 'len' → logprob: -3.566652536392212
    4. ' v' → logprob: -3.941652536392212
    5. ' enfants' → logprob: -3.941652536392212
    6. ' ' → logprob: -4.191652297973633
    7. ' len' → logprob: -4.316652297973633
    8. 'v' → logprob: -4.316652297973633
    9. ' s' → logprob: -4.566652297973633
    10. '   ' → logprob: -4.566652297973633

Token 260: ' à' (ID: 1221)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0247091054916382
    2. '   ' → logprob: -1.2747091054916382
    3. '<|end|>' → logprob: -1.8997091054916382
    4. ':' → logprob: -2.0247092247009277
    5. ',' → logprob: -3.5247092247009277
    6. '
' → logprob: -5.024709224700928
    7. ' =' → logprob: -5.274709224700928
    8. ' :' → logprob: -5.399709224700928
    9. ':
' → logprob: -5.524709224700928
    10. '<|end|>' → logprob: -5.774709224700928

Token 261: ' chaque' (ID: 21194)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1052857637405396
    2. '1' → logprob: -1.9802857637405396
    3. 'l' → logprob: -2.10528564453125
    4. 'part' → logprob: -2.23028564453125
    5. ' None' → logprob: -2.98028564453125
    6. ' v' → logprob: -2.98028564453125
    7. 'None' → logprob: -3.10528564453125
    8. '0' → logprob: -3.23028564453125
    9. ' ' → logprob: -3.23028564453125
    10. 'if' → logprob: -5.10528564453125

Token 262: ' profondeur' (ID: 128210)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.852876901626587
    2. 'niveau' → logprob: -2.352876901626587
    3. ' v' → logprob: -2.477876901626587
    4. ' node' → logprob: -2.727876901626587
    5. '   ' → logprob: -3.102876901626587
    6. 'if' → logprob: -3.102876901626587
    7. 'for' → logprob: -3.227876901626587
    8. 'node' → logprob: -3.227876901626587
    9. 'def' → logprob: -3.727876901626587
    10. ' if' → logprob: -3.852876901626587

Token 263: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022120900452136993
    2. ',' → logprob: -4.272120952606201
    3. ':' → logprob: -5.897120952606201
    4. '<|end|>' → logprob: -6.647120952606201
    5. ' if' → logprob: -7.147120952606201
    6. '
' → logprob: -7.647120952606201
    7. 'def' → logprob: -7.897120952606201
    8. ' ' → logprob: -8.522120475769043
    9. '    
' → logprob: -8.647120475769043
    10. '  ' → logprob: -8.647120475769043

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029761565383523703
    2. ',' → logprob: -6.502975940704346
    3. ':' → logprob: -7.252975940704346
    4. '
' → logprob: -9.002976417541504
    5. '  ' → logprob: -9.252976417541504
    6. '<|end|>' → logprob: -9.502976417541504
    7. ' if' → logprob: -9.627976417541504
    8. '    
' → logprob: -10.127976417541504
    9. ' ' → logprob: -10.252976417541504
    10. ' for' → logprob: -10.377976417541504

Token 265: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2431684732437134
    2. ' if' → logprob: -1.3681684732437134
    3. 'count' → logprob: -2.243168354034424
    4. ' count' → logprob: -2.243168354034424
    5. ' res' → logprob: -2.243168354034424
    6. 'if' → logprob: -3.368168354034424
    7. ' c' → logprob: -4.243168354034424
    8. 'res' → logprob: -4.243168354034424
    9. 'c' → logprob: -4.368168354034424
    10. 'n' → logprob: -4.868168354034424

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23789973556995392
    2. '=' → logprob: -1.8628997802734375
    3. ',' → logprob: -3.4878997802734375
    4. '[' → logprob: -3.7378997802734375
    5. ' ' → logprob: -7.1128997802734375
    6. '   ' → logprob: -7.8628997802734375
    7. '[v' → logprob: -8.112899780273438
    8. ' ,' → logprob: -8.237899780273438
    9. '=[' → logprob: -9.487899780273438
    10. ' =[' → logprob: -9.862899780273438

Token 267: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37870848178863525
    2. '[]' → logprob: -1.7537084817886353
    3. ' [' → logprob: -2.3787083625793457
    4. '{}' → logprob: -3.2537083625793457
    5. ' []' → logprob: -5.378708362579346
    6. '0' → logprob: -5.878708362579346
    7. '{' → logprob: -6.628708362579346
    8. ' {}' → logprob: -6.878708362579346
    9. '[]
' → logprob: -7.753708362579346
    10. ' ' → logprob: -9.003708839416504

Token 268: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006320207612589002
    2. ' ' → logprob: -7.625631809234619
    3. ']' → logprob: -10.000632286071777
    4. '1' → logprob: -10.250632286071777
    5. 'len' → logprob: -10.625632286071777
    6. '[' → logprob: -11.375632286071777
    7. '   ' → logprob: -11.750632286071777
    8. '[]' → logprob: -13.063132286071777
    9. 'v' → logprob: -13.188132286071777
    10. '(' → logprob: -13.313132286071777

Token 269: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004628888331353664
    2. ' if' → logprob: -6.629628658294678
    3. ' for' → logprob: -6.754628658294678
    4. ' ]' → logprob: -7.004628658294678
    5. ']+' → logprob: -7.504628658294678
    6. ']
' → logprob: -8.379629135131836
    7. 'if' → logprob: -8.504629135131836
    8. 'for' → logprob: -9.254629135131836
    9. ']*' → logprob: -10.504629135131836
    10. ',' → logprob: -10.879629135131836

Token 270: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39483442902565
    2. ' for' → logprob: -1.8948343992233276
    3. 'for' → logprob: -2.519834518432617
    4. '   ' → logprob: -3.019834518432617
    5. ' +' → logprob: -4.394834518432617
    6. ' ' → logprob: -5.019834518432617
    7. ' if' → logprob: -5.144834518432617
    8. '+' → logprob: -5.394834518432617
    9. ',' → logprob: -6.269834518432617
    10. '*' → logprob: -6.269834518432617

Token 271: ' l' (ID: 305)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.1076483726501465
    2. '(l' → logprob: -1.2326483726501465
    3. 'l' → logprob: -1.3576483726501465
    4. 'len' → logprob: -2.2326483726501465
    5. '(' → logprob: -4.6076483726501465
    6. ' (' → logprob: -6.4826483726501465
    7. '(max' → logprob: -6.9826483726501465
    8. ' len' → logprob: -8.357648849487305
    9. ' l' → logprob: -8.357648849487305
    10. '(n' → logprob: -8.607648849487305

Token 272: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3205290138721466
    2. '   ' → logprob: -1.3205289840698242
    3. '<|end|>' → logprob: -5.945528984069824
    4. '    
' → logprob: -6.445528984069824
    5. '  
' → logprob: -6.445528984069824
    6. '   
' → logprob: -8.070528984069824
    7. ' 
' → logprob: -8.320528984069824
    8. ' for' → logprob: -8.445528984069824
    9. '
' → logprob: -9.195528984069824
    10. ' ' → logprob: -9.320528984069824

Token 273: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31055623292922974
    2. '   ' → logprob: -1.435556173324585
    3. '<|end|>' → logprob: -3.810556173324585
    4. '    
' → logprob: -6.060556411743164
    5. '  
' → logprob: -6.560556411743164
    6. ' 
' → logprob: -7.060556411743164
    7. ' for' → logprob: -7.435556411743164
    8. '   
' → logprob: -8.310556411743164
    9. '<|end|>' → logprob: -8.310556411743164
    10. '  ' → logprob: -8.685556411743164

Token 274: ' q' (ID: 2335)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7049681544303894
    2. '   ' → logprob: -1.3299682140350342
    3. ' 
' → logprob: -2.329968214035034
    4. ' for' → logprob: -2.829968214035034
    5. '<|end|>' → logprob: -3.579968214035034
    6. '    
' → logprob: -4.079967975616455
    7. ' ' → logprob: -4.079967975616455
    8. '  
' → logprob: -4.704967975616455
    9. 'for' → logprob: -5.454967975616455
    10. ')' → logprob: -6.079967975616455

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048590321093797684
    2. '=' → logprob: -3.0485904216766357
    3. '.append' → logprob: -14.423590660095215
    4. '.' → logprob: -14.423590660095215
    5. ' ' → logprob: -15.173590660095215
    6. ' =
' → logprob: -15.173590660095215
    7. '   ' → logprob: -15.298590660095215
    8. '[' → logprob: -15.548590660095215
    9. '	' → logprob: -15.548590660095215
    10. '  ' → logprob: -16.0485897064209

Token 276: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.011431042104959488
    2. ' deque' → logprob: -4.5114312171936035
    3. '[(' → logprob: -7.8864312171936035
    4. ' [(' → logprob: -12.761430740356445
    5. 'de' → logprob: -13.136430740356445
    6. '   ' → logprob: -13.386430740356445
    7. 'Deque' → logprob: -15.011430740356445
    8. '[((' → logprob: -15.761430740356445
    9. 'collections' → logprob: -16.011430740356445
    10. '([(' → logprob: -16.261430740356445

Token 277: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([(' → logprob: -5.526570384972729e-05
    2. '([' → logprob: -10.000055313110352
    3. '((' → logprob: -12.625055313110352
    4. '(((' → logprob: -12.750055313110352
    5. '[(' → logprob: -13.250055313110352
    6. '(' → logprob: -14.125055313110352
    7. '()' → logprob: -14.875055313110352
    8. '   ' → logprob: -15.500055313110352
    9. '([
' → logprob: -15.625055313110352
    10. '([]' → logprob: -16.12505531311035

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022955309599637985
    2. '[(' → logprob: -5.397955417633057
    3. '[q' → logprob: -5.647955417633057
    4. '(q' → logprob: -5.772955417633057
    5. ' (' → logprob: -6.522955417633057
    6. ' q' → logprob: -6.772955417633057
    7. '([(' → logprob: -6.772955417633057
    8. '[' → logprob: -6.897955417633057
    9. '<|end|>' → logprob: -6.897955417633057
    10. ' [(' → logprob: -7.147955417633057

Token 279: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30033957958221436
    2. 'q' → logprob: -1.5503395795822144
    3. ' q' → logprob: -3.175339698791504
    4. '	q' → logprob: -5.425339698791504
    5. ' for' → logprob: -7.425339698791504
    6. 'for' → logprob: -8.800339698791504
    7. '       ' → logprob: -9.675339698791504
    8. ' ' → logprob: -9.800339698791504
    9. '[q' → logprob: -10.175339698791504
    10. '  ' → logprob: -10.550339698791504

Token 280: ' Not' (ID: 4037)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0332481861114502
    2. '   ' → logprob: -1.0332481861114502
    3. ' q' → logprob: -1.4082481861114502
    4. ' for' → logprob: -3.40824818611145
    5. 'for' → logprob: -4.658247947692871
    6. '	q' → logprob: -8.033247947692871
    7. 'def' → logprob: -8.783247947692871
    8. ' ' → logprob: -8.908247947692871
    9. '    ' → logprob: -9.720747947692871
    10. '...' → logprob: -9.783247947692871

Token 281: 'er' (ID: 259)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.15858200192451477
    2. ' links' → logprob: -2.9085819721221924
    3. 'e' → logprob: -3.5335819721221924
    4. 'q' → logprob: -3.6585819721221924
    5. ' v' → logprob: -4.6585822105407715
    6. 'v' → logprob: -5.0335822105407715
    7. ' a' → logprob: -5.4085822105407715
    8. ' None' → logprob: -5.5335822105407715
    9. ' e' → logprob: -6.1585822105407715
    10. 'a' → logprob: -7.0335822105407715

Token 282: ' les' (ID: 1341)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.8374060988426208
    2. ' for' → logprob: -1.9624061584472656
    3. ' (' → logprob: -2.0874061584472656
    4. '[(' → logprob: -2.4624061584472656
    5. '((' → logprob: -3.0874061584472656
    6. 'q' → logprob: -3.3374061584472656
    7. '   ' → logprob: -3.3374061584472656
    8. ' [(' → logprob: -3.5874061584472656
    9. '(' → logprob: -4.337406158447266
    10. '(q' → logprob: -4.462406158447266

Token 283: ' voisins' (ID: 166720)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -2.1607344150543213
    2. ' enfants' → logprob: -2.2857344150543213
    3. 'visited' → logprob: -2.4107344150543213
    4. ' for' → logprob: -2.7857344150543213
    5. ' q' → logprob: -2.7857344150543213
    6. 'for' → logprob: -3.0357344150543213
    7. '[(' → logprob: -3.0357344150543213
    8. ' leaves' → logprob: -3.1607344150543213
    9. '(v' → logprob: -3.2857344150543213
    10. ' (' → logprob: -3.5357344150543213

Token 284: ' sauf' (ID: 87919)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4151178002357483
    2. ' for' → logprob: -1.9151177406311035
    3. 'for' → logprob: -2.1651177406311035
    4. '   ' → logprob: -2.9151177406311035
    5. '=' → logprob: -4.4151177406311035
    6. '[v' → logprob: -5.6651177406311035
    7. 'def' → logprob: -6.2901177406311035
    8. '[' → logprob: -7.0401177406311035
    9. 'v' → logprob: -7.2901177406311035
    10. '(v' → logprob: -7.6651177406311035

Token 285: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31766051054000854
    2. ' a' → logprob: -1.3176605701446533
    3. 'l' → logprob: -6.817660331726074
    4. ' l' → logprob: -6.942660331726074
    5. ' parent' → logprob: -7.692660331726074
    6. 'v' → logprob: -7.942660331726074
    7. '(a' → logprob: -7.942660331726074
    8. 'parent' → logprob: -8.192660331726074
    9. ' ' → logprob: -8.317660331726074
    10. ' le' → logprob: -9.192660331726074

Token 286: ' parent' (ID: 5980)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05172092467546463
    2. ' a' → logprob: -4.051721096038818
    3. ' parent' → logprob: -4.051721096038818
    4. 'parent' → logprob: -4.176721096038818
    5. ' ' → logprob: -8.80172061920166
    6. ' lien' → logprob: -10.92672061920166
    7. 'v' → logprob: -11.30172061920166
    8. ' None' → logprob: -11.42672061920166
    9. 'ancestor' → logprob: -11.55172061920166
    10. 'None' → logprob: -11.55172061920166

Token 287: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6955092549324036
    2. ' for' → logprob: -0.9455092549324036
    3. ' =' → logprob: -2.820509195327759
    4. 'for' → logprob: -4.320509433746338
    5. ',' → logprob: -4.695509433746338
    6. '
' → logprob: -5.195509433746338
    7. '[v' → logprob: -5.320509433746338
    8. '       ' → logprob: -5.945509433746338
    9. ' in' → logprob: -6.070509433746338
    10. ' of' → logprob: -6.195509433746338

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6347299814224243
    2. ' for' → logprob: -0.8847299814224243
    3. 'for' → logprob: -2.8847298622131348
    4. '	for' → logprob: -7.759729862213135
    5. '       ' → logprob: -8.509730339050293
    6. '
' → logprob: -9.134730339050293
    7. ' q' → logprob: -9.134730339050293
    8. ',' → logprob: -9.509730339050293
    9. ' ' → logprob: -10.009730339050293
    10. ')' → logprob: -10.259730339050293

Token 289: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5288047790527344
    2. 'for' (adapté à ' for') → logprob: -0.9038047790527344
    3. '   ' → logprob: -5.278804779052734
    4. 'q' → logprob: -8.278804779052734
    5. ' q' → logprob: -8.403804779052734
    6. '	for' → logprob: -10.153804779052734
    7. '[' → logprob: -11.403804779052734
    8. ' links' → logprob: -11.528804779052734
    9. ' ' → logprob: -12.028804779052734
    10. '
' → logprob: -12.278804779052734

Token 290: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3468673825263977
    2. 'w' → logprob: -1.846867322921753
    3. ' u' → logprob: -2.221867322921753
    4. ' w' → logprob: -3.721867322921753
    5. 'x' → logprob: -6.221867561340332
    6. 'to' → logprob: -8.596867561340332
    7. 'nv' → logprob: -8.971867561340332
    8. 'n' → logprob: -9.221867561340332
    9. 'c' → logprob: -9.471867561340332
    10. ' x' → logprob: -10.096867561340332

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029817141592502594
    2. 'in' → logprob: -3.5298171043395996
    3. ',' → logprob: -10.779817581176758
    4. ' ' → logprob: -11.279817581176758
    5. ' ,' → logprob: -11.779817581176758
    6. '	in' → logprob: -11.904817581176758
    7. '   ' → logprob: -12.279817581176758
    8. '    ' → logprob: -12.529817581176758
    9. '  ' → logprob: -12.779817581176758
    10. 'import' → logprob: -13.967317581176758

Token 292: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.38691604137420654
    2. ' links' → logprob: -1.1369160413742065
    3. '.links' → logprob: -11.386916160583496
    4. ' ' → logprob: -12.011916160583496
    5. 'link' → logprob: -12.386916160583496
    6. '_links' → logprob: -12.511916160583496
    7. '[' → logprob: -12.761916160583496
    8. ' liens' → logprob: -12.886916160583496
    9. '   ' → logprob: -12.886916160583496
    10. ' enlaces' → logprob: -13.511916160583496

Token 293: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.1093578804284334e-05
    2. 'v' → logprob: -10.000051498413086
    3. '[' → logprob: -12.750051498413086
    4. '   ' → logprob: -14.000051498413086
    5. '[u' → logprob: -14.750051498413086
    6. '(v' → logprob: -14.875051498413086
    7. ' [' → logprob: -15.000051498413086
    8. '[
' → logprob: -16.125051498413086
    9. '```' → logprob: -16.125051498413086
    10. '
' → logprob: -16.250051498413086

Token 294: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.08973603695631027
    2. ']:' → logprob: -2.464735984802246
    3. ']' → logprob: -7.589735984802246
    4. ']:
' → logprob: -8.964735984802246
    5. ' ]' → logprob: -9.339735984802246
    6. '   ' → logprob: -10.464735984802246
    7. ']:

' → logprob: -11.464735984802246
    8. ':' → logprob: -11.714735984802246
    9. '[' → logprob: -12.339735984802246
    10. ':
' → logprob: -12.464735984802246

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021327754948288202
    2. ' if' → logprob: -7.127132892608643
    3. '<|end|>' → logprob: -7.877132892608643
    4. '   ' → logprob: -8.252132415771484
    5. ':' → logprob: -8.752132415771484
    6. ':
' → logprob: -8.877132415771484
    7. ',' → logprob: -9.502132415771484
    8. '	' → logprob: -9.627132415771484
    9. '	   ' → logprob: -9.752132415771484
    10. 'if' → logprob: -10.502132415771484

Token 296: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1610405296087265
    2. 'if' (adapté à ' if') → logprob: -1.9110405445098877
    3. '       ' → logprob: -7.536040306091309
    4. '           ' → logprob: -8.286040306091309
    5. '   ' → logprob: -10.786040306091309
    6. '	if' → logprob: -12.036040306091309
    7. ' ' → logprob: -12.911040306091309
    8. '    ' → logprob: -14.786040306091309
    9. '        ' → logprob: -15.536040306091309
    10. ';if' → logprob: -16.286041259765625

Token 297: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5759446620941162
    2. 'u' → logprob: -0.8259446620941162
    3. '           ' → logprob: -12.700944900512695
    4. '        ' → logprob: -14.450944900512695
    5. '	u' → logprob: -14.450944900512695
    6. '            ' → logprob: -15.200944900512695
    7. '       ' → logprob: -15.450944900512695
    8. '    ' → logprob: -15.950944900512695
    9. '               ' → logprob: -16.200944900512695
    10. '   ' → logprob: -16.575944900512695

Token 298: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5759480595588684
    2. ' !=' → logprob: -0.8259480595588684
    3. ')!=' → logprob: -13.325947761535645
    4. '()!=' → logprob: -13.700947761535645
    5. ' u' → logprob: -13.825947761535645
    6. ']!=' → logprob: -13.950947761535645
    7. '!==' → logprob: -14.200947761535645
    8. 'u' → logprob: -14.575947761535645
    9. ' not' → logprob: -14.950947761535645
    10. '!='' → logprob: -15.325947761535645

Token 299: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10020667314529419
    2. ' a' → logprob: -2.3502066135406494
    3. ' ' → logprob: -16.85020637512207
    4. '   ' → logprob: -16.97520637512207
    5. '	a' → logprob: -16.97520637512207
    6. ' ' → logprob: -18.22520637512207
    7. ''a' → logprob: -18.97520637512207
    8. '_a' → logprob: -19.10020637512207
    9. ')a' → logprob: -19.47520637512207
    10. '    ' → logprob: -19.60020637512207

Token 300: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08082113415002823
    2. ':' → logprob: -2.5808210372924805
    3. '           ' → logprob: -6.5808210372924805
    4. '):
' → logprob: -8.20582103729248
    5. ' and' → logprob: -8.58082103729248
    6. ',' → logprob: -10.95582103729248
    7. ' :
' → logprob: -11.08082103729248
    8. ':

' → logprob: -11.33082103729248
    9. ':
' → logprob: -11.33082103729248
    10. '       ' → logprob: -12.33082103729248

Token 301: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12183305621147156
    2. ' q' → logprob: -2.371833086013794
    3. 'q' → logprob: -3.871833086013794
    4. ',' → logprob: -9.121832847595215
    5. '               ' → logprob: -9.121832847595215
    6. ':' → logprob: -9.371832847595215
    7. '          ' → logprob: -9.871832847595215
    8. ' ' → logprob: -10.246832847595215
    9. '       ' → logprob: -10.371832847595215
    10. ',q' → logprob: -10.496832847595215

Token 302: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.016900913789868355
    2. ' q' → logprob: -4.266901016235352
    3. '           ' → logprob: -6.516901016235352
    4. 'calc' → logprob: -7.016901016235352
    5. '   ' → logprob: -9.016901016235352
    6. ' calc' → logprob: -9.266901016235352
    7. '               ' → logprob: -9.766901016235352
    8. 'ans' → logprob: -10.516901016235352
    9. '       ' → logprob: -10.641901016235352
    10. '
' → logprob: -11.766901016235352

Token 303: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003328972263261676
    2. '.' → logprob: -5.753328800201416
    3. ' .' → logprob: -9.253329277038574
    4. '           ' → logprob: -10.753329277038574
    5. 'append' → logprob: -11.378329277038574
    6. '.enqueue' → logprob: -11.628329277038574
    7. '=' → logprob: -12.753329277038574
    8. ',' → logprob: -13.253329277038574
    9. ').' → logprob: -13.378329277038574
    10. '.extend' → logprob: -13.628329277038574

Token 304: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.02978682890534401
    2. '(u' → logprob: -3.5297868251800537
    3. '(' → logprob: -10.279787063598633
    4. ' (' → logprob: -13.904787063598633
    5. ' ((' → logprob: -14.279787063598633
    6. '(v' → logprob: -14.904787063598633
    7. '   ' → logprob: -16.779787063598633
    8. 'u' → logprob: -17.404787063598633
    9. ' ' → logprob: -17.904787063598633
    10. '([' → logprob: -18.029787063598633

Token 305: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0002557369298301637
    2. ' u' → logprob: -8.375255584716797
    3. '(u' → logprob: -10.875255584716797
    4. '[u' → logprob: -12.625255584716797
    5. ',u' → logprob: -14.250255584716797
    6. '   ' → logprob: -14.250255584716797
    7. '	u' → logprob: -15.000255584716797
    8. '0' → logprob: -15.125255584716797
    9. ',' → logprob: -15.375255584716797
    10. ')' → logprob: -15.500255584716797

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001942322589457035
    2. ',v' → logprob: -6.376942157745361
    3. ' ,' → logprob: -8.75194263458252
    4. 'v' → logprob: -9.50194263458252
    5. '   ' → logprob: -12.50194263458252
    6. ' v' → logprob: -13.62694263458252
    7. ',
' → logprob: -14.50194263458252
    8. '           ' → logprob: -15.31444263458252
    9. ' ' → logprob: -15.56444263458252
    10. '       ' → logprob: -15.68944263458252

Token 307: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00976494513452053
    2. ' v' → logprob: -4.634765148162842
    3. ')v' → logprob: -12.884764671325684
    4. '	v' → logprob: -13.509764671325684
    5. '   ' → logprob: -13.509764671325684
    6. ',v' → logprob: -13.634764671325684
    7. '           ' → logprob: -14.134764671325684
    8. '               ' → logprob: -14.509764671325684
    9. ' ' → logprob: -15.634764671325684
    10. '       ' → logprob: -15.634764671325684

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1813281625509262
    2. '))' → logprob: -1.8063281774520874
    3. '))
' → logprob: -6.931328296661377
    4. ' ,' → logprob: -8.556327819824219
    5. ')' → logprob: -8.931327819824219
    6. '   ' → logprob: -9.306327819824219
    7. '           ' → logprob: -9.806327819824219
    8. '       ' → logprob: -10.431327819824219
    9. ' ))' → logprob: -10.806327819824219
    10. ',
' → logprob: -11.306327819824219

Token 309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005446485709398985
    2. ' ' → logprob: -5.505446434020996
    3. '0' → logprob: -7.380446434020996
    4. '2' → logprob: -7.755446434020996
    5. 'l' → logprob: -8.630446434020996
    6. '   ' → logprob: -9.630446434020996
    7. ' l' → logprob: -10.880446434020996
    8. '  ' → logprob: -11.005446434020996
    9. ')' → logprob: -11.630446434020996
    10. '    ' → logprob: -12.317946434020996

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00596529571339488
    2. '0' → logprob: -6.005965232849121
    3. 'l' → logprob: -6.255965232849121
    4. ' ' → logprob: -6.880965232849121
    5. '2' → logprob: -8.130965232849121
    6. '   ' → logprob: -10.193465232849121
    7. ' l' → logprob: -10.255965232849121
    8. 'ans' → logprob: -10.255965232849121
    9. ')' → logprob: -10.818465232849121
    10. '  ' → logprob: -11.193465232849121

Token 311: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05180559679865837
    2. ')' → logprob: -3.3018054962158203
    3. '))
' → logprob: -4.30180549621582
    4. ')))' → logprob: -9.92680549621582
    5. ')
' → logprob: -11.05180549621582
    6. '))
' → logprob: -11.55180549621582
    7. ' ))' → logprob: -11.55180549621582
    8. '           ' → logprob: -11.67680549621582
    9. ',' → logprob: -11.80180549621582
    10. '))

' → logprob: -11.80180549621582

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11900093406438828
    2. '<|end|>' → logprob: -2.3690009117126465
    3. '       ' → logprob: -4.9940009117126465
    4. '
' → logprob: -5.4940009117126465
    5. '<|end|>' → logprob: -5.8690009117126465
    6. '           ' → logprob: -6.2440009117126465
    7. '```' → logprob: -7.2440009117126465
    8. ')' → logprob: -7.3690009117126465
    9. ',' → logprob: -7.9940009117126465
    10. ' while' → logprob: -8.619001388549805

Token 313: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10887590795755386
    2. ' while' → logprob: -2.8588759899139404
    3. 'while' → logprob: -3.1088759899139404
    4. '	while' → logprob: -7.483875751495361
    5. '       ' → logprob: -8.60887622833252
    6. ')' → logprob: -9.23387622833252
    7. ' ' → logprob: -9.35887622833252
    8. '  ' → logprob: -9.73387622833252
    9. '
' → logprob: -9.85887622833252
    10. '    
' → logprob: -9.98387622833252

Token 314: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13972441852092743
    2. ' =' → logprob: -2.3897244930267334
    3. '=' → logprob: -4.014724254608154
    4. '[:]' → logprob: -4.764724254608154
    5. '[v' → logprob: -5.889724254608154
    6. '.append' → logprob: -6.264724254608154
    7. '=[' → logprob: -6.389724254608154
    8. '[u' → logprob: -6.639724254608154
    9. '[q' → logprob: -6.889724254608154
    10. '[a' → logprob: -7.389724254608154

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00496393209323287
    2. '1' → logprob: -5.5049638748168945
    3. ' ' → logprob: -7.7549638748168945
    4. ')' → logprob: -8.379963874816895
    5. ']' → logprob: -9.629963874816895
    6. 'u' → logprob: -10.129963874816895
    7. '-' → logprob: -10.379963874816895
    8. 'q' → logprob: -11.129963874816895
    9. '])' → logprob: -11.629963874816895
    10. '   ' → logprob: -11.817463874816895

Token 316: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006887765601277351
    2. ']+=' → logprob: -5.131887912750244
    3. ' ]' → logprob: -7.006887912750244
    4. ']=' → logprob: -10.131887435913086
    5. ']+' → logprob: -12.631887435913086
    6. ')' → logprob: -12.631887435913086
    7. ')]' → logprob: -12.756887435913086
    8. '])' → logprob: -13.756887435913086
    9. '+=' → logprob: -14.756887435913086
    10. ' +=' → logprob: -15.006887435913086

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5208126306533813
    2. ' +=' → logprob: -1.8958126306533813
    3. ' =' → logprob: -1.8958126306533813
    4. '+=' → logprob: -2.395812511444092
    5. '*=' → logprob: -5.270812511444092
    6. ' *=' → logprob: -5.520812511444092
    7. ' -=' → logprob: -5.645812511444092
    8. '-=' → logprob: -7.145812511444092
    9. ',' → logprob: -7.895812511444092
    10. '*' → logprob: -8.89581298828125

Token 318: ' len' (ID: 4631)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19302429258823395
    2. 'len' → logprob: -1.9430242776870728
    3. '1' → logprob: -3.8180243968963623
    4. 'sum' → logprob: -5.068024158477783
    5. '-' → logprob: -6.193024158477783
    6. ' ' → logprob: -6.818024158477783
    7. ' len' → logprob: -8.193024635314941
    8. 'links' → logprob: -9.068024635314941
    9. 'v' → logprob: -9.693024635314941
    10. 'ans' → logprob: -9.818024635314941

Token 319: '(q' (ID: 21479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05940467491745949
    2. '(q' → logprob: -2.9344046115875244
    3. '([' → logprob: -5.4344048500061035
    4. '(link' → logprob: -9.559404373168945
    5. '(list' → logprob: -10.309404373168945
    6. 'q' → logprob: -11.309404373168945
    7. '(queue' → logprob: -11.309404373168945
    8. '((' → logprob: -12.684404373168945
    9. '(set' → logprob: -13.309404373168945
    10. 'links' → logprob: -13.434404373168945

Token 320: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001202850602567196
    2. ')
' → logprob: -6.7512030601501465
    3. ' )' → logprob: -10.751202583312988
    4. '   ' → logprob: -12.001202583312988
    5. '))' → logprob: -14.001202583312988
    6. ')

' → logprob: -14.376202583312988
    7. ')
' → logprob: -14.376202583312988
    8. '[' → logprob: -14.501202583312988
    9. ');' → logprob: -15.376202583312988
    10. '())' → logprob: -15.501202583312988

Token 321: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7562064528465271
    2. '   ' → logprob: -0.8812064528465271
    3. '<|end|>' → logprob: -2.381206512451172
    4. '    
' → logprob: -4.631206512451172
    5. '<|end|>' → logprob: -5.756206512451172
    6. '  
' → logprob: -5.756206512451172
    7. ' 
' → logprob: -6.381206512451172
    8. '\n' → logprob: -6.756206512451172
    9. '```' → logprob: -7.006206512451172
    10. ':' → logprob: -7.256206512451172

Token 322: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041308652609586716
    2. ')' → logprob: -4.041308879852295
    3. '```' → logprob: -5.291308879852295
    4. '
' → logprob: -5.916308879852295
    5. ' 
' → logprob: -5.916308879852295
    6. ' while' → logprob: -6.041308879852295
    7. '<|end|>' → logprob: -6.291308879852295
    8. ':' → logprob: -6.291308879852295
    9. '    
' → logprob: -6.666308879852295
    10. '\n' → logprob: -6.916308879852295

Token 323: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.31331461668014526
    2. ' q' → logprob: -1.31331467628479
    3. '   ' → logprob: -11.063314437866211
    4. ' ' → logprob: -11.563314437866211
    5. 'len' → logprob: -11.563314437866211
    6. '	q' → logprob: -12.188314437866211
    7. ' len' → logprob: -12.438314437866211
    8. ' ' → logprob: -12.563314437866211
    9. '  ' → logprob: -13.563314437866211
    10. '(q' → logprob: -13.688314437866211

Token 324: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47416168451309204
    2. ':
' → logprob: -0.974161684513092
    3. ':
' → logprob: -9.599162101745605
    4. '   ' → logprob: -12.474162101745605
    5. ':

' → logprob: -12.849162101745605
    6. ' and' → logprob: -12.974162101745605
    7. ':p' → logprob: -13.099162101745605
    8. 'and' → logprob: -13.349162101745605
    9. '):
' → logprob: -13.849162101745605
    10. '[' → logprob: -14.349162101745605

Token 325: '       ' (ID: 309)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5759042501449585
    2. ' u' → logprob: -1.2009042501449585
    3. '       ' → logprob: -2.200904369354248
    4. 'v' → logprob: -4.200904369354248
    5. ' v' → logprob: -5.200904369354248
    6. '(u' → logprob: -5.450904369354248
    7. '(v' → logprob: -7.450904369354248
    8. ' (' → logprob: -7.825904369354248
    9. '   ' → logprob: -8.57590389251709
    10. '	u' → logprob: -9.70090389251709

Token 326: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.04543711617588997
    2. 'v' → logprob: -3.1704370975494385
    3. ' u' → logprob: -6.545437335968018
    4. 'x' → logprob: -7.795437335968018
    5. '(u' → logprob: -7.920437335968018
    6. ' v' → logprob: -9.79543685913086
    7. '(v' → logprob: -9.79543685913086
    8. '       ' → logprob: -9.79543685913086
    9. 'w' → logprob: -10.17043685913086
    10. '           ' → logprob: -11.92043685913086

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011880126112373546
    2. ' ,' → logprob: -9.25011920928955
    3. ',a' → logprob: -10.87511920928955
    4. ',u' → logprob: -13.62511920928955
    5. ',v' → logprob: -13.75011920928955
    6. 'a' → logprob: -14.00011920928955
    7. ' a' → logprob: -16.000118255615234
    8. '   ' → logprob: -16.125118255615234
    9. ',q' → logprob: -16.125118255615234
    10. '       ' → logprob: -16.625118255615234

Token 328: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07905910164117813
    2. ' v' → logprob: -2.57905912399292
    3. 'a' → logprob: -8.954058647155762
    4. 'u' → logprob: -10.704058647155762
    5. ' a' → logprob: -11.704058647155762
    6. ' u' → logprob: -12.079058647155762
    7. '	v' → logprob: -13.954058647155762
    8. ' ' → logprob: -14.079058647155762
    9. '   ' → logprob: -14.454058647155762
    10. ',' → logprob: -14.954058647155762

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.538490950129926e-05
    2. ' ,' → logprob: -9.875055313110352
    3. '=' → logprob: -12.875055313110352
    4. '   ' → logprob: -15.375055313110352
    5. ',k' → logprob: -15.625055313110352
    6. ',q' → logprob: -15.875055313110352
    7. '       ' → logprob: -16.25005531311035
    8. ',n' → logprob: -16.25005531311035
    9. ',l' → logprob: -16.25005531311035
    10. '_,' → logprob: -16.50005531311035

Token 330: ' c' (ID: 274)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05295734107494354
    2. 'p' → logprob: -4.052957534790039
    3. ' d' → logprob: -4.552957534790039
    4. 'depth' → logprob: -4.802957534790039
    5. 'h' → logprob: -5.177957534790039
    6. 'l' → logprob: -5.802957534790039
    7. 'k' → logprob: -6.427957534790039
    8. 'lvl' → logprob: -7.052957534790039
    9. 'dep' → logprob: -7.302957534790039
    10. 'level' → logprob: -7.552957534790039

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22583803534507751
    2. ' =' → logprob: -1.6008380651474
    3. ')' → logprob: -7.8508381843566895
    4. '   ' → logprob: -11.100837707519531
    5. ' ' → logprob: -11.850837707519531
    6. ',' → logprob: -12.350837707519531
    7. '+' → logprob: -12.725837707519531
    8. 'c' → logprob: -12.850837707519531
    9. ')=' → logprob: -13.850837707519531
    10. '  ' → logprob: -14.350837707519531

Token 332: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06995466351509094
    2. ' q' → logprob: -2.6949546337127686
    3. '       ' → logprob: -11.444954872131348
    4. '   ' → logprob: -12.819954872131348
    5. '	q' → logprob: -13.194954872131348
    6. '           ' → logprob: -14.444954872131348
    7. '        ' → logprob: -14.944954872131348
    8. '*q' → logprob: -15.069954872131348
    9. '    ' → logprob: -15.194954872131348
    10. '$q' → logprob: -15.569954872131348

Token 333: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2017841339111328
    2. ' =' → logprob: -1.7017841339111328
    3. '.p' → logprob: -8.326784133911133
    4. '=p' → logprob: -10.076784133911133
    5. ',p' → logprob: -10.701784133911133
    6. '.append' → logprob: -11.201784133911133
    7. '   ' → logprob: -11.576784133911133
    8. ',' → logprob: -11.576784133911133
    9. '           ' → logprob: -11.951784133911133
    10. '       ' → logprob: -12.201784133911133

Token 334: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -2.5941604690160602e-05
    2. 'op' → logprob: -10.625025749206543
    3. 'opl' → logprob: -14.125025749206543
    4. 'ople' → logprob: -14.125025749206543
    5. 'append' → logprob: -15.625025749206543
    6. 'opup' → logprob: -18.12502670288086
    7. 'oplevel' → logprob: -18.25002670288086
    8. 'opped' → logprob: -19.00002670288086
    9. 'opf' → logprob: -19.25002670288086
    10. '```' → logprob: -19.62502670288086

Token 335: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009163050912320614
    2. ')' → logprob: -5.134162902832031
    3. '()
' → logprob: -6.259162902832031
    4. '       ' → logprob: -7.509162902832031
    5. '   ' → logprob: -8.009162902832031
    6. ',' → logprob: -8.134162902832031
    7. '
' → logprob: -9.259162902832031
    8. '           ' → logprob: -11.509162902832031
    9. ')
' → logprob: -11.884162902832031
    10. '())' → logprob: -12.634162902832031

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13970285654067993
    2. 'for' → logprob: -2.514702796936035
    3. 'if' → logprob: -3.764702796936035
    4. '   ' → logprob: -4.139702796936035
    5. ' for' → logprob: -4.764702796936035
    6. '           ' → logprob: -7.014702796936035
    7. ' if' → logprob: -7.514702796936035
    8. '
' → logprob: -8.639702796936035
    9. 'ans' → logprob: -9.014702796936035
    10. '        
' → logprob: -10.139702796936035

Token 337: ' deg' (ID: 5597)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17089548707008362
    2. 'if' → logprob: -2.170895576477051
    3. 'ans' → logprob: -3.170895576477051
    4. 'count' → logprob: -8.29589557647705
    5. ' for' → logprob: -8.54589557647705
    6. '       ' → logprob: -8.92089557647705
    7. 'child' → logprob: -9.04589557647705
    8. 'cnt' → logprob: -9.54589557647705
    9. 'children' → logprob: -9.67089557647705
    10. '   ' → logprob: -9.67089557647705

Token 338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22368110716342926
    2. '[u' → logprob: -2.2236812114715576
    3. '=' → logprob: -2.5986812114715576
    4. '(u' → logprob: -4.2236809730529785
    5. '=u' → logprob: -6.8486809730529785
    6. 'u' → logprob: -6.9736809730529785
    7. '   ' → logprob: -8.098681449890137
    8. ',' → logprob: -8.723681449890137
    9. '           ' → logprob: -8.848681449890137
    10. ' u' → logprob: -9.223681449890137

Token 339: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.057827651500701904
    2. ' len' → logprob: -3.0578277111053467
    3. '0' → logprob: -4.807827472686768
    4. 'sum' → logprob: -7.307827472686768
    5. ' sum' → logprob: -8.932827949523926
    6. ' ' → logprob: -9.557827949523926
    7. '(len' → logprob: -10.057827949523926
    8. '[len' → logprob: -10.307827949523926
    9. '[' → logprob: -10.807827949523926
    10. '1' → logprob: -11.182827949523926

Token 340: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9743012671824545e-05
    2. '([' → logprob: -10.875020027160645
    3. '((' → logprob: -15.000020027160645
    4. '(list' → logprob: -15.750020027160645
    5. '(link' → logprob: -15.875020027160645
    6. '[' → logprob: -16.750019073486328
    7. 'links' → logprob: -17.250019073486328
    8. ' (' → logprob: -17.625019073486328
    9. '(
' → logprob: -17.625019073486328
    10. '(q' → logprob: -17.875019073486328

Token 341: 'links' (ID: 26581)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002222516923211515
    2. '([' → logprob: -8.875222206115723
    3. 'links' → logprob: -9.500222206115723
    4. '[' → logprob: -12.500222206115723
    5. '(link' → logprob: -13.000222206115723
    6. '(list' → logprob: -14.875222206115723
    7. '((' → logprob: -15.000222206115723
    8. '(
' → logprob: -15.875222206115723
    9. ' links' → logprob: -15.875222206115723
    10. ' (' → logprob: -16.12522315979004

Token 342: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -8.537868779967539e-06
    2. 'u' → logprob: -11.875008583068848
    3. '(u' → logprob: -14.000008583068848
    4. ' [' → logprob: -15.625008583068848
    5. ')' → logprob: -15.750008583068848
    6. '[v' → logprob: -16.12500762939453
    7. '[' → logprob: -16.12500762939453
    8. ' u' → logprob: -16.75000762939453
    9. '   ' → logprob: -17.25000762939453
    10. '[
' → logprob: -18.00000762939453

Token 343: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00021390743495430797
    2. '[u' → logprob: -9.500213623046875
    3. '])
' → logprob: -9.875213623046875
    4. '])-' → logprob: -10.000213623046875
    5. ')' → logprob: -10.625213623046875
    6. ' ])' → logprob: -11.250213623046875
    7. ']' → logprob: -13.250213623046875
    8. ''])' → logprob: -14.750213623046875
    9. ' )' → logprob: -14.750213623046875
    10. '[' → logprob: -14.875213623046875

Token 344: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38038796186447144
    2. ' -' → logprob: -1.3803880214691162
    3. '       ' → logprob: -3.005388021469116
    4. 'if' → logprob: -4.505387783050537
    5. ' if' → logprob: -5.630387783050537
    6. '   ' → logprob: -8.505388259887695
    7. '
' → logprob: -9.005388259887695
    8. '()' → logprob: -9.505388259887695
    9. '           ' → logprob: -9.505388259887695
    10. '()-' → logprob: -9.755388259887695

Token 345: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2044883519411087
    2. '(' → logprob: -1.7044883966445923
    3. ' (' → logprob: -6.579488277435303
    4. '(int' → logprob: -6.704488277435303
    5. ' ' → logprob: -8.329488754272461
    6. '(ans' → logprob: -9.454488754272461
    7. '(u' → logprob: -9.704488754272461
    8. '(a' → logprob: -10.454488754272461
    9. '(c' → logprob: -10.954488754272461
    10. 'int' → logprob: -11.954488754272461

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2546863257884979
    2. '(' → logprob: -1.5046863555908203
    3. '(int' → logprob: -6.25468635559082
    4. ' (' → logprob: -7.87968635559082
    5. ' ' → logprob: -8.50468635559082
    6. '(c' → logprob: -8.75468635559082
    7. 'int' → logprob: -10.25468635559082
    8. '{' → logprob: -11.00468635559082
    9. '(a' → logprob: -11.50468635559082
    10. '(u' → logprob: -12.00468635559082

Token 347: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06670151650905609
    2. '       ' → logprob: -2.8167014122009277
    3. 'if' → logprob: -5.691701412200928
    4. ' if' → logprob: -6.816701412200928
    5. '<|end|>' → logprob: -9.191701889038086
    6. '
' → logprob: -10.191701889038086
    7. '   ' → logprob: -10.691701889038086
    8. 'for' → logprob: -10.816701889038086
    9. ' ' → logprob: -10.816701889038086
    10. '           ' → logprob: -10.941701889038086

Token 349: ' sauf' (ID: 87919)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7011100053787231
    2. 'for' → logprob: -1.0761100053787231
    3. 'if' → logprob: -2.4511098861694336
    4. ' if' → logprob: -2.5761098861694336
    5. '           ' → logprob: -7.826109886169434
    6. '       ' → logprob: -8.576109886169434
    7. '1' → logprob: -9.701109886169434
    8. ' ' → logprob: -10.201109886169434
    9. '   ' → logprob: -10.826109886169434
    10. '#' → logprob: -11.451109886169434

Token 350: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07534833997488022
    2. ' ' → logprob: -2.950348377227783
    3. 'a' → logprob: -4.825348377227783
    4. ' a' → logprob: -4.950348377227783
    5. ' (' → logprob: -5.825348377227783
    6. '(' → logprob: -6.825348377227783
    7. '(a' → logprob: -7.575348377227783
    8. ' for' → logprob: -8.450347900390625
    9. 'for' → logprob: -9.825347900390625
    10. ' c' → logprob: -9.825347900390625

Token 351: ' parent' (ID: 5980)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0022433928679674864
    2. ' a' → logprob: -6.252243518829346
    3. 'parent' → logprob: -8.752243041992188
    4. ' ' → logprob: -9.377243041992188
    5. ' parent' → logprob: -10.127243041992188
    6. '1' → logprob: -10.752243041992188
    7. 'c' → logprob: -12.127243041992188
    8. '   ' → logprob: -12.752243041992188
    9. '
' → logprob: -15.127243041992188
    10. '  ' → logprob: -15.127243041992188

Token 352: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004453147295862436
    2. ' for' → logprob: -6.504453182220459
    3. '
' → logprob: -6.629453182220459
    4. 'for' → logprob: -7.504453182220459
    5. '   ' → logprob: -8.0044527053833
    6. '<|end|>' → logprob: -8.0044527053833
    7. 'if' → logprob: -8.8794527053833
    8. ',' → logprob: -9.1294527053833
    9. '           ' → logprob: -9.6294527053833
    10. ' if' → logprob: -10.0044527053833

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9413977861404419
    2. ' for' → logprob: -1.066397786140442
    3. 'for' → logprob: -2.3163976669311523
    4. '<|end|>' → logprob: -2.3163976669311523
    5. '   ' → logprob: -3.8163976669311523
    6. '
' → logprob: -4.066397666931152
    7. '           ' → logprob: -4.691397666931152
    8. ' if' → logprob: -5.191397666931152
    9. '               ' → logprob: -5.441397666931152
    10. 'if' → logprob: -5.566397666931152

Token 354: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5075991153717041
    2. 'if' (adapté à ' if') → logprob: -1.007599115371704
    3. ' for' → logprob: -3.882599115371704
    4. '   ' → logprob: -5.257598876953125
    5. ' if' → logprob: -5.507598876953125
    6. 'ans' → logprob: -5.882598876953125
    7. '       ' → logprob: -8.507598876953125
    8. ' ans' → logprob: -9.882598876953125
    9. '           ' → logprob: -10.882598876953125
    10. '```' → logprob: -11.757598876953125

Token 355: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20578843355178833
    2. 'c' → logprob: -1.9557883739471436
    3. ' deg' → logprob: -3.3307883739471436
    4. ' u' → logprob: -5.705788612365723
    5. 'deg' → logprob: -5.705788612365723
    6. 'u' → logprob: -7.080788612365723
    7. ' not' → logprob: -8.268288612365723
    8. ' len' → logprob: -8.518288612365723
    9. ' ans' → logprob: -8.705788612365723
    10. ' ' → logprob: -8.830788612365723

Token 356: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.17177219688892365
    2. '<' → logprob: -1.9217722415924072
    3. '+' → logprob: -4.921772003173828
    4. ' +' → logprob: -6.171772003173828
    5. ' >=' → logprob: -7.046772003173828
    6. '<len' → logprob: -7.921772003173828
    7. ' ==' → logprob: -8.546772003173828
    8. '>=' → logprob: -8.796772003173828
    9. ' >' → logprob: -9.796772003173828
    10. '==' → logprob: -9.796772003173828

Token 357: ' len' (ID: 4631)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16046713292598724
    2. ' l' → logprob: -1.9104671478271484
    3. 'len' → logprob: -8.410467147827148
    4. ' len' → logprob: -11.035467147827148
    5. ' ' → logprob: -13.285467147827148
    6. ' ' → logprob: -14.035467147827148
    7. '	l' → logprob: -15.285467147827148
    8. '1' → logprob: -15.535467147827148
    9. 'length' → logprob: -15.847967147827148
    10. '=l' → logprob: -15.972967147827148

Token 358: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00027349460287950933
    2. 'ans' → logprob: -8.875273704528809
    3. '(l' → logprob: -9.000273704528809
    4. '(' → logprob: -12.250273704528809
    5. ' ans' → logprob: -12.625273704528809
    6. ' (' → logprob: -13.375273704528809
    7. '(an' → logprob: -15.250273704528809
    8. '	ans' → logprob: -16.000272750854492
    9. 'l' → logprob: -16.750272750854492
    10. '(ls' → logprob: -17.125272750854492

Token 359: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2573142945766449
    2. '):
' → logprob: -1.5073143243789673
    3. ')' → logprob: -5.257314205169678
    4. ' ):' → logprob: -9.382314682006836
    5. '):
' → logprob: -10.382314682006836
    6. ':' → logprob: -10.632314682006836
    7. ' ):
' → logprob: -11.132314682006836
    8. '):

' → logprob: -12.757314682006836
    9. ' )' → logprob: -14.007314682006836
    10. '   ' → logprob: -14.007314682006836

Token 360: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23947137594223022
    2. '           ' → logprob: -1.739471435546875
    3. ' for' → logprob: -3.614471435546875
    4. '   ' → logprob: -5.739471435546875
    5. ' if' → logprob: -6.614471435546875
    6. 'ans' → logprob: -6.864471435546875
    7. ' ans' → logprob: -6.989471435546875
    8. ' and' → logprob: -7.239471435546875
    9. ',' → logprob: -7.364471435546875
    10. 'for' → logprob: -7.489471435546875

Token 361: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.2999911308288574
    2. ' ans' → logprob: -1.4249911308288574
    3. '           ' → logprob: -4.049991130828857
    4. 'if' → logprob: -8.049991607666016
    5. '	ans' → logprob: -8.299991607666016
    6. '   ' → logprob: -8.424991607666016
    7. ' if' → logprob: -8.424991607666016
    8. '       ' → logprob: -9.299991607666016
    9. '               ' → logprob: -9.924991607666016
    10. '(ans' → logprob: -10.549991607666016

Token 362: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.700132997939363e-05
    2. '[' → logprob: -11.125017166137695
    3. ' [' → logprob: -13.125017166137695
    4. '[count' → logprob: -16.750017166137695
    5. '[C' → logprob: -17.250017166137695
    6. '[u' → logprob: -17.500017166137695
    7. '[q' → logprob: -17.500017166137695
    8. '][' → logprob: -17.875017166137695
    9. '
' → logprob: -18.000017166137695
    10. '[cnt' → logprob: -18.250017166137695

Token 363: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.034146521240472794
    2. ']+=' → logprob: -3.409146547317505
    3. ' ]' → logprob: -7.784146308898926
    4. '+=' → logprob: -10.534146308898926
    5. ']=' → logprob: -11.034146308898926
    6. '[' → logprob: -11.034146308898926
    7. ']+' → logprob: -11.534146308898926
    8. ' +=' → logprob: -12.159146308898926
    9. ')' → logprob: -13.284146308898926
    10. '   ' → logprob: -13.409146308898926

Token 364: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5758324861526489
    2. '=' → logprob: -1.700832486152649
    3. ' +=' → logprob: -1.825832486152649
    4. '*=' → logprob: -2.9508323669433594
    5. ' *=' → logprob: -3.7008323669433594
    6. ' =' → logprob: -4.075832366943359
    7. '-=' → logprob: -9.57583236694336
    8. ']+=' → logprob: -10.20083236694336
    9. ' -=' → logprob: -11.07583236694336
    10. ' ' → logprob: -11.32583236694336

Token 365: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8747894167900085
    2. 'deg' → logprob: -0.8747894167900085
    3. 'ans' → logprob: -1.8747894763946533
    4. ' max' → logprob: -5.499789237976074
    5. 'min' → logprob: -5.874789237976074
    6. 'mul' → logprob: -5.999789237976074
    7. ' deg' → logprob: -6.249789237976074
    8. ' ans' → logprob: -7.499789237976074
    9. 'len' → logprob: -8.249789237976074
    10. '(ans' → logprob: -8.499789237976074

Token 366: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.320199877838604e-07
    2. 'ans' → logprob: -15.375
    3. '(' → logprob: -16.0
    4. '(an' → logprob: -19.25
    5. '	ans' → logprob: -20.0
    6. '(len' → logprob: -20.25
    7. '(answer' → logprob: -21.0
    8. '(a' → logprob: -21.125
    9. '(err' → logprob: -21.25
    10. '(de' → logprob: -21.5

Token 367: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0001664717128733173
    2. '[u' → logprob: -9.375166893005371
    3. '[' → logprob: -10.250166893005371
    4. ' [' → logprob: -10.625166893005371
    5. 'c' → logprob: -12.250166893005371
    6. ',' → logprob: -12.250166893005371
    7. '[q' → logprob: -12.500166893005371
    8. ' c' → logprob: -13.375166893005371
    9. ',c' → logprob: -13.625166893005371
    10. ')' → logprob: -13.625166893005371

Token 368: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0395219512283802
    2. ',' → logprob: -3.2895219326019287
    3. ' ],' → logprob: -6.914522171020508
    4. ']' → logprob: -8.289522171020508
    5. ' ,' → logprob: -9.164522171020508
    6. '),' → logprob: -9.164522171020508
    7. '   ' → logprob: -11.914522171020508
    8. '},' → logprob: -12.414522171020508
    9. '],
' → logprob: -12.539522171020508
    10. '       ' → logprob: -13.539522171020508

Token 369: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.012554984539747238
    2. ' deg' → logprob: -4.387555122375488
    3. '           ' → logprob: -10.512555122375488
    4. '          ' → logprob: -12.012555122375488
    5. '       ' → logprob: -12.887555122375488
    6. '               ' → logprob: -13.012555122375488
    7. 'len' → logprob: -13.887555122375488
    8. '              ' → logprob: -14.137555122375488
    9. '   ' → logprob: -14.262555122375488
    10. ' ' → logprob: -14.387555122375488

Token 370: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07934632152318954
    2. ')' → logprob: -2.5793464183807373
    3. '       ' → logprob: -7.954346179962158
    4. ')
' → logprob: -9.579346656799316
    5. ' )
' → logprob: -10.579346656799316
    6. '           ' → logprob: -11.954346656799316
    7. ' )' → logprob: -13.454346656799316
    8. '   ' → logprob: -13.829346656799316
    9. '               ' → logprob: -13.829346656799316
    10. ')

' → logprob: -14.579346656799316

Token 371: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3875196874141693
    2. '       ' → logprob: -1.1375197172164917
    3. 'for' → logprob: -7.887519836425781
    4. ' for' → logprob: -8.887519836425781
    5. '               ' → logprob: -9.262519836425781
    6. '   ' → logprob: -11.012519836425781
    7. '            
' → logprob: -11.637519836425781
    8. '        
' → logprob: -12.387519836425781
    9. 'else' → logprob: -12.762519836425781
    10. 'if' → logprob: -13.012519836425781

Token 372: ' else' (ID: 1203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03309724107384682
    2. '       ' → logprob: -3.533097267150879
    3. ' for' → logprob: -5.908097267150879
    4. '           ' → logprob: -8.158097267150879
    5. '   ' → logprob: -8.283097267150879
    6. 'if' → logprob: -9.533097267150879
    7. ' ' → logprob: -12.783097267150879
    8. '               ' → logprob: -12.908097267150879
    9. '        
' → logprob: -13.408097267150879
    10. '```' → logprob: -13.658097267150879

Token 373: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19121648371219635
    2. ':
' → logprob: -2.441216468811035
    3. ':' → logprob: -2.816216468811035
    4. ' ans' → logprob: -3.816216468811035
    5. '               ' → logprob: -6.566216468811035
    6. ' :
' → logprob: -7.316216468811035
    7. '
' → logprob: -7.691216468811035
    8. 'ans' → logprob: -7.691216468811035
    9. ' ' → logprob: -8.316216468811035
    10. '[' → logprob: -8.441216468811035

Token 374: '           ' (ID: 352)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2758474349975586
    2. '           ' → logprob: -1.6508474349975586
    3. 'ans' → logprob: -3.0258474349975586
    4. '	ans' → logprob: -8.150847434997559
    5. '(ans' → logprob: -8.775847434997559
    6. '               ' → logprob: -8.900847434997559
    7. '       ' → logprob: -10.650847434997559
    8. ' ' → logprob: -11.025847434997559
    9. '   ' → logprob: -11.150847434997559
    10. '
' → logprob: -11.650847434997559

Token 375: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.38761457800865173
    2. ' ans' → logprob: -1.1376146078109741
    3. '           ' → logprob: -7.387614727020264
    4. '	ans' → logprob: -9.512614250183105
    5. 'break' → logprob: -11.012614250183105
    6. '(ans' → logprob: -11.262614250183105
    7. '       ' → logprob: -11.887614250183105
    8. ' break' → logprob: -12.637614250183105
    9. '_ans' → logprob: -13.137614250183105
    10. '   ' → logprob: -13.262614250183105

Token 376: ' il' (ID: 1793)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.47476714849472046
    2. ' ans' → logprob: -0.9747671484947205
    3. '           ' → logprob: -7.724767208099365
    4. ' break' → logprob: -9.599766731262207
    5. 'break' → logprob: -9.724766731262207
    6. '   ' → logprob: -10.099766731262207
    7. '       ' → logprob: -10.224766731262207
    8. '	ans' → logprob: -10.849766731262207
    9. '(ans' → logprob: -12.224766731262207
    10. 'return' → logprob: -12.724766731262207

Token 377: ' se' (ID: 458)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27392396330833435
    2. ' ans' → logprob: -2.148923873901367
    3. ' break' → logprob: -2.773923873901367
    4. '.append' → logprob: -4.273923873901367
    5. ' =' → logprob: -4.398923873901367
    6. '   ' → logprob: -4.648923873901367
    7. '       ' → logprob: -5.273923873901367
    8. 'ans' → logprob: -5.648923873901367
    9. '=' → logprob: -5.898923873901367
    10. 's' → logprob: -6.148923873901367

Token 378: ' peut' (ID: 9216)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.085620880126953
    2. ' faut' → logprob: -2.210620880126953
    3. 't' → logprob: -2.335620880126953
    4. 'f' → logprob: -2.335620880126953
    5. 's' → logprob: -2.585620880126953
    6. ' ' → logprob: -3.085620880126953
    7. '   ' → logprob: -3.210620880126953
    8. ' f' → logprob: -3.335620880126953
    9. ' peut' → logprob: -3.460620880126953
    10. ' trouve' → logprob: -3.710620880126953

Token 379: ' qu' (ID: 474)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36213353276252747
    2. ' que' → logprob: -1.237133502960205
    3. ' ans' → logprob: -4.987133502960205
    4. ' qu' → logprob: -5.737133502960205
    5. ' that' → logprob: -6.612133502960205
    6. 'ans' → logprob: -7.737133502960205
    7. '       ' → logprob: -7.862133502960205
    8. '          ' → logprob: -8.487133979797363
    9. 'que' → logprob: -8.612133979797363
    10. '               ' → logprob: -8.737133979797363

Token 380: '’on' (ID: 25036)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.22364269196987152
    2. 'ans' → logprob: -1.9736427068710327
    3. '           ' → logprob: -2.848642587661743
    4. ' on' → logprob: -7.348642826080322
    5. ' que' → logprob: -7.348642826080322
    6. '               ' → logprob: -7.848642826080322
    7. '(ans' → logprob: -7.973642826080322
    8. '       ' → logprob: -8.473642349243164
    9. '	ans' → logprob: -8.473642349243164
    10. '   ' → logprob: -8.723642349243164

Token 381: ' dépasse' (ID: 165701)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0018349916208535433
    2. 'ans' → logprob: -6.751834869384766
    3. ' ' → logprob: -8.001834869384766
    4. ' append' → logprob: -8.626834869384766
    5. ' len' → logprob: -10.251834869384766
    6. '	ans' → logprob: -11.001834869384766
    7. ' continue' → logprob: -11.376834869384766
    8. '(ans' → logprob: -11.376834869384766
    9. ' answer' → logprob: -11.626834869384766
    10. ' ' → logprob: -11.876834869384766

Token 382: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.03024318441748619
    2. 'ans' → logprob: -3.530243158340454
    3. '           ' → logprob: -8.655242919921875
    4. '(ans' → logprob: -8.780242919921875
    5. '       ' → logprob: -9.655242919921875
    6. '	ans' → logprob: -10.530242919921875
    7. '   ' → logprob: -10.780242919921875
    8. ' len' → logprob: -11.905242919921875
    9. ',' → logprob: -12.030242919921875
    10. '[' → logprob: -12.280242919921875

Token 383: ' longueur' (ID: 104613)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.15726244449615479
    2. 'ans' → logprob: -2.2822623252868652
    3. ' len' → logprob: -3.6572623252868652
    4. ' ans' → logprob: -4.282262325286865
    5. 'length' → logprob: -6.407262325286865
    6. ' length' → logprob: -7.407262325286865
    7. 'l' → logprob: -7.532262325286865
    8. ' longueur' → logprob: -8.782262802124023
    9. 'max' → logprob: -9.282262802124023
    10. 'current' → logprob: -9.282262802124023

Token 384: ',' (ID: 11)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.33187270164489746
    2. 'ans' → logprob: -1.7068727016448975
    3. ' ans' → logprob: -2.3318727016448975
    4. '           ' → logprob: -5.831872940063477
    5. '(' → logprob: -8.706872940063477
    6. '	ans' → logprob: -8.956872940063477
    7. '+' → logprob: -9.206872940063477
    8. ',' → logprob: -9.331872940063477
    9. '       ' → logprob: -9.331872940063477
    10. '=' → logprob: -9.831872940063477

Token 385: ' rare' (ID: 12829)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.06626192480325699
    2. '           ' → logprob: -2.8162620067596436
    3. 'ans' → logprob: -5.6912617683410645
    4. '               ' → logprob: -8.316262245178223
    5. ' break' → logprob: -8.941262245178223
    6. ' ' → logprob: -9.066262245178223
    7. ' l' → logprob: -9.566262245178223
    8. '(ans' → logprob: -9.816262245178223
    9. '	ans' → logprob: -9.941262245178223
    10. '            
' → logprob: -9.941262245178223

Token 386: ' mais' (ID: 2899)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1567782759666443
    2. '               ' → logprob: -2.656778335571289
    3. ',' → logprob: -4.156778335571289
    4. ' (' → logprob: -4.781778335571289
    5. '            ' → logprob: -5.031778335571289
    6. '            
' → logprob: -5.156778335571289
    7. ' 
' → logprob: -5.281778335571289
    8. '       ' → logprob: -5.531778335571289
    9. '(' → logprob: -5.531778335571289
    10. ')' → logprob: -6.156778335571289

Token 387: ' bon' (ID: 4846)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.43443548679351807
    2. '           ' → logprob: -1.059435486793518
    3. 'ans' → logprob: -5.5594353675842285
    4. '               ' → logprob: -7.3094353675842285
    5. ' return' → logprob: -8.684435844421387
    6. ' ' → logprob: -8.684435844421387
    7. ' continue' → logprob: -9.059435844421387
    8. '       ' → logprob: -9.184435844421387
    9. ' pass' → logprob: -9.309435844421387
    10. ' break' → logprob: -9.434435844421387

Token 388: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6377421617507935
    2. ' ans' → logprob: -0.7627421617507935
    3. 'ans' → logprob: -5.762742042541504
    4. '               ' → logprob: -7.262742042541504
    5. '            
' → logprob: -8.012742042541504
    6. '(ans' → logprob: -8.637742042541504
    7. ' return' → logprob: -9.137742042541504
    8. '
' → logprob: -9.262742042541504
    9. ' 
' → logprob: -9.262742042541504
    10. ' ' → logprob: -9.262742042541504

Token 389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28885617852211
    2. ' ans' → logprob: -1.4138561487197876
    3. 'ans' → logprob: -5.663856029510498
    4. '               ' → logprob: -6.163856029510498
    5. '            
' → logprob: -7.163856029510498
    6. ' 
' → logprob: -7.663856029510498
    7. '
' → logprob: -8.538856506347656
    8. ' ' → logprob: -9.038856506347656
    9. '       ' → logprob: -9.038856506347656
    10. '(ans' → logprob: -9.413856506347656

Token 390: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1814298778772354
    2. 'ans' (adapté à ' ans') → logprob: -1.8064298629760742
    3. '           ' → logprob: -6.431429862976074
    4. '	ans' → logprob: -10.181429862976074
    5. '(ans' → logprob: -11.181429862976074
    6. '   ' → logprob: -11.806429862976074
    7. '       ' → logprob: -12.056429862976074
    8. '_ans' → logprob: -13.681429862976074
    9. ' break' → logprob: -13.806429862976074
    10. ' ' → logprob: -14.056429862976074

Token 391: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0028524247463792562
    2. '.extend' → logprob: -6.252852439880371
    3. '.' → logprob: -7.002852439880371
    4. '+=' → logprob: -12.002852439880371
    5. ' +=' → logprob: -12.627852439880371
    6. ' .' → logprob: -13.127852439880371
    7. '.app' → logprob: -13.252852439880371
    8. '=' → logprob: -14.627852439880371
    9. 'append' → logprob: -16.252851486206055
    10. '.ap' → logprob: -16.252851486206055

Token 392: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.001181181170977652
    2. '(' → logprob: -7.001181125640869
    3. 'deg' → logprob: -8.251181602478027
    4. '(max' → logprob: -11.751181602478027
    5. ' deg' → logprob: -15.001181602478027
    6. '((' → logprob: -15.876181602478027
    7. '(len' → logprob: -16.00118064880371
    8. '(d' → logprob: -16.37618064880371
    9. 'de' → logprob: -17.00118064880371
    10. '(
' → logprob: -17.12618064880371

Token 393: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0025964651722460985
    2. 'f' → logprob: -6.002596378326416
    3. 'gf' → logprob: -10.252596855163574
    4. ' g' → logprob: -11.127596855163574
    5. 'eg' → logprob: -11.127596855163574
    6. 'gree' → logprob: -11.377596855163574
    7. 'q' → logprob: -12.377596855163574
    8. ' ' → logprob: -12.377596855163574
    9. 'fault' → logprob: -12.377596855163574
    10. '1' → logprob: -12.502596855163574

Token 394: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10027740150690079
    2. ')
' → logprob: -2.3502774238586426
    3. ' )' → logprob: -10.350276947021484
    4. ')
' → logprob: -11.100276947021484
    5. ' )
' → logprob: -11.475276947021484
    6. '       ' → logprob: -11.850276947021484
    7. '           ' → logprob: -12.475276947021484
    8. '               ' → logprob: -14.100276947021484
    9. ')

' → logprob: -14.975276947021484
    10. '   ' → logprob: -14.975276947021484

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4230668842792511
    2. '           ' → logprob: -1.6730668544769287
    3. '   ' → logprob: -2.9230668544769287
    4. ' for' → logprob: -3.1730668544769287
    5. '
' → logprob: -4.048067092895508
    6. '            
' → logprob: -4.298067092895508
    7. '        
' → logprob: -4.798067092895508
    8. 'for' → logprob: -5.048067092895508
    9. ' 
' → logprob: -5.173067092895508
    10. '    
' → logprob: -5.548067092895508

Token 396: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6031140089035034
    2. '       ' → logprob: -0.8531140089035034
    3. ' for' → logprob: -3.978114128112793
    4. '           ' → logprob: -5.478114128112793
    5. 'if' → logprob: -5.728114128112793
    6. 'q' → logprob: -8.478114128112793
    7. '   ' → logprob: -8.728114128112793
    8. '               ' → logprob: -9.103114128112793
    9. ' if' → logprob: -9.478114128112793
    10. ' q' → logprob: -10.478114128112793

Token 397: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5231634378433228
    2. ' w' → logprob: -0.8981634378433228
    3. 'ww' → logprob: -11.648163795471191
    4. 'x' → logprob: -11.773163795471191
    5. 'v' → logprob: -12.523163795471191
    6. '(w' → logprob: -12.648163795471191
    7. ' v' → logprob: -12.898163795471191
    8. ' ' → logprob: -13.023163795471191
    9. ' u' → logprob: -13.023163795471191
    10. '   ' → logprob: -13.148163795471191

Token 398: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04302293807268143
    2. 'in' → logprob: -3.168022871017456
    3. ',' → logprob: -11.168023109436035
    4. '	in' → logprob: -12.168023109436035
    5. ' ' → logprob: -13.793023109436035
    6. 'w' → logprob: -13.918023109436035
    7. '```' → logprob: -13.918023109436035
    8. ' ,' → logprob: -15.168023109436035
    9. 'In' → logprob: -15.668023109436035
    10. '[' → logprob: -15.918023109436035

Token 399: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.08894917368888855
    2. ' links' → logprob: -2.463949203491211
    3. 'link' → logprob: -12.588949203491211
    4. '.links' → logprob: -12.963949203491211
    5. ' ' → logprob: -14.088949203491211
    6. '(' → logprob: -14.338949203491211
    7. 'inks' → logprob: -15.088949203491211
    8. '   ' → logprob: -15.151449203491211
    9. ' enlaces' → logprob: -15.401449203491211
    10. '_links' → logprob: -15.401449203491211

Token 400: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0001613459608051926
    2. ',' → logprob: -9.250161170959473
    3. '[w' → logprob: -10.000161170959473
    4. ',u' → logprob: -11.125161170959473
    5. '[' → logprob: -13.750161170959473
    6. 'u' → logprob: -14.125161170959473
    7. '       ' → logprob: -14.125161170959473
    8. '   ' → logprob: -14.250161170959473
    9. '(u' → logprob: -14.500161170959473
    10. ' u' → logprob: -15.000161170959473

Token 401: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01606956124305725
    2. ':
' → logprob: -5.266069412231445
    3. ']:
' → logprob: -6.016069412231445
    4. ' ,' → logprob: -6.141069412231445
    5. '           ' → logprob: -6.141069412231445
    6. '):
' → logprob: -6.891069412231445
    7. ' if' → logprob: -7.016069412231445
    8. ',w' → logprob: -7.766069412231445
    9. 'if' → logprob: -7.891069412231445
    10. '       ' → logprob: -7.891069412231445

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007632300723344088
    2. ' if' → logprob: -5.132632255554199
    3. '<|end|>' → logprob: -7.507632255554199
    4. 'if' → logprob: -7.882632255554199
    5. '		' → logprob: -8.0076322555542
    6. '	       ' → logprob: -8.7576322555542
    7. '               ' → logprob: -9.1326322555542
    8. '          ' → logprob: -10.2576322555542
    9. '		   ' → logprob: -10.6326322555542
    10. '	           ' → logprob: -11.0076322555542

Token 403: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19596877694129944
    2. 'if' (adapté à ' if') → logprob: -1.945968747138977
    3. ' w' → logprob: -3.6959688663482666
    4. 'w' → logprob: -5.3209686279296875
    5. '               ' → logprob: -5.5709686279296875
    6. '<|end|>' → logprob: -6.6959686279296875
    7. '           ' → logprob: -8.195968627929688
    8. '            ' → logprob: -10.070968627929688
    9. ' ' → logprob: -11.570968627929688
    10. '<|end|>' → logprob: -12.195968627929688

Token 404: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.28115513920783997
    2. ' w' → logprob: -1.4061551094055176
    3. '(w' → logprob: -13.406155586242676
    4. '(' → logprob: -14.656155586242676
    5. '<|end|>' → logprob: -14.656155586242676
    6. ' ' → logprob: -14.781155586242676
    7. ' (' → logprob: -14.781155586242676
    8. ' ' → logprob: -15.031155586242676
    9. '	w' → logprob: -15.531155586242676
    10. 'W' → logprob: -15.531155586242676

Token 405: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.12693524360656738
    2. '!=' → logprob: -2.1269352436065674
    3. 'w' → logprob: -12.751935005187988
    4. ')!=' → logprob: -13.876935005187988
    5. ' w' → logprob: -14.001935005187988
    6. ',' → logprob: -14.501935005187988
    7. ']!=' → logprob: -14.626935005187988
    8. '!='' → logprob: -15.126935005187988
    9. '()!=' → logprob: -15.251935005187988
    10. '!=(' → logprob: -15.626935005187988

Token 406: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009501419961452484
    2. ' a' → logprob: -5.2595014572143555
    3. 'u' → logprob: -5.5095014572143555
    4. ' u' → logprob: -8.509501457214355
    5. '   ' → logprob: -12.259501457214355
    6. ' ' → logprob: -12.884501457214355
    7. '	a' → logprob: -14.259501457214355
    8. '    ' → logprob: -15.384501457214355
    9. '  ' → logprob: -15.634501457214355
    10. '           ' → logprob: -16.38450050354004

Token 407: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6249864101409912
    2. '               ' → logprob: -0.8749864101409912
    3. ':' → logprob: -3.124986410140991
    4. ',' → logprob: -6.12498664855957
    5. '):
' → logprob: -7.49998664855957
    6. '           ' → logprob: -7.74998664855957
    7. ' and' → logprob: -8.12498664855957
    8. '              ' → logprob: -8.87498664855957
    9. ':

' → logprob: -10.12498664855957
    10. ':
' → logprob: -10.12498664855957

Token 408: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07016284018754959
    2. 'q' → logprob: -2.945162773132324
    3. ' q' → logprob: -4.195162773132324
    4. '	q' → logprob: -10.320162773132324
    5. ',q' → logprob: -10.820162773132324
    6. '           ' → logprob: -11.445162773132324
    7. '              ' → logprob: -11.820162773132324
    8. '                   ' → logprob: -12.195162773132324
    9. 'ql' → logprob: -12.445162773132324
    10. '			' → logprob: -12.820162773132324

Token 409: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00029160623671486974
    2. ' q' → logprob: -8.25029182434082
    3. '                   ' → logprob: -10.50029182434082
    4. '               ' → logprob: -13.00029182434082
    5. '	q' → logprob: -15.00029182434082
    6. '                       ' → logprob: -16.25029182434082
    7. '   ' → logprob: -17.12529182434082
    8. '                ' → logprob: -17.25029182434082
    9. '                  ' → logprob: -17.75029182434082
    10. '                    ' → logprob: -17.87529182434082

Token 410: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.913265239447355e-05
    2. '.' → logprob: -9.250099182128906
    3. 'append' → logprob: -12.875099182128906
    4. '           ' → logprob: -15.000099182128906
    5. '               ' → logprob: -17.000099182128906
    6. '.enqueue' → logprob: -17.000099182128906
    7. ' .' → logprob: -17.125099182128906
    8. '.app' → logprob: -17.750099182128906
    9. 'app' → logprob: -18.000099182128906
    10. ').' → logprob: -18.250099182128906

Token 411: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.09248262643814087
    2. '(w' → logprob: -2.467482566833496
    3. '(' → logprob: -5.717482566833496
    4. ' (' → logprob: -8.592482566833496
    5. '(
' → logprob: -9.842482566833496
    6. '(u' → logprob: -12.092482566833496
    7. ' ((' → logprob: -12.717482566833496
    8. '(W' → logprob: -14.717482566833496
    9. '(
' → logprob: -14.717482566833496
    10. '   ' → logprob: -15.717482566833496

Token 412: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.06197608634829521
    2. '(w' → logprob: -2.811976194381714
    3. ' w' → logprob: -12.061976432800293
    4. ' (' → logprob: -13.936976432800293
    5. '	w' → logprob: -14.186976432800293
    6. '(' → logprob: -15.311976432800293
    7. '[w' → logprob: -15.311976432800293
    8. '<w' → logprob: -15.811976432800293
    9. '(
' → logprob: -16.436975479125977
    10. '   ' → logprob: -16.436975479125977

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017066054278984666
    2. ',w' → logprob: -6.501706600189209
    3. 'w' → logprob: -9.001707077026367
    4. ' ,' → logprob: -10.001707077026367
    5. ',u' → logprob: -10.501707077026367
    6. ' w' → logprob: -12.751707077026367
    7. ')' → logprob: -13.376707077026367
    8. '               ' → logprob: -14.126707077026367
    9. '),' → logprob: -14.501707077026367
    10. '                   ' → logprob: -15.001707077026367

Token 414: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.000850605487357825
    2. ' u' → logprob: -7.125850677490234
    3. 'w' → logprob: -10.000850677490234
    4. '               ' → logprob: -15.875850677490234
    5. '   ' → logprob: -16.000850677490234
    6. ' w' → logprob: -16.000850677490234
    7. '(u' → logprob: -16.000850677490234
    8. '	u' → logprob: -16.125850677490234
    9. '[u' → logprob: -16.125850677490234
    10. '                   ' → logprob: -17.000850677490234

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009677992202341557
    2. ',c' → logprob: -7.125967979431152
    3. ' ,' → logprob: -8.750967979431152
    4. 'c' → logprob: -12.375967979431152
    5. '),' → logprob: -15.000967979431152
    6. ' c' → logprob: -15.625967979431152
    7. ')' → logprob: -16.625967025756836
    8. '               ' → logprob: -17.000967025756836
    9. '```' → logprob: -17.125967025756836
    10. ',
' → logprob: -17.375967025756836

Token 416: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00861456897109747
    2. ' c' → logprob: -4.758614540100098
    3. '               ' → logprob: -17.133615493774414
    4. ')c' → logprob: -17.258615493774414
    5. '	c' → logprob: -18.133615493774414
    6. '                   ' → logprob: -19.258615493774414
    7. '   ' → logprob: -20.008615493774414
    8. '           ' → logprob: -20.258615493774414
    9. '(c' → logprob: -20.383615493774414
    10. ' ' → logprob: -20.633615493774414

Token 417: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011048289015889168
    2. ' +' → logprob: -4.511048316955566
    3. '+
' → logprob: -15.636048316955566
    4. '+c' → logprob: -16.51104736328125
    5. ' ' → logprob: -17.01104736328125
    6. ' ' → logprob: -17.13604736328125
    7. '1' → logprob: -17.13604736328125
    8. '   ' → logprob: -17.26104736328125
    9. '＋' → logprob: -17.38604736328125
    10. ')' → logprob: -17.38604736328125

Token 418: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.125015258789062
    4. ')' → logprob: -17.000015258789062
    5. '```' → logprob: -17.062515258789062
    6. '  ' → logprob: -17.812515258789062
    7. '           ' → logprob: -18.437515258789062
    8. '       ' → logprob: -18.562515258789062
    9. '۱' → logprob: -18.875015258789062
    10. '１' → logprob: -18.875015258789062

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.500001907348633
    4. ')' → logprob: -17.125001907348633
    5. '```' → logprob: -17.625001907348633
    6. '  ' → logprob: -18.625001907348633
    7. '۱' → logprob: -19.750001907348633
    8. '2' → logprob: -20.125001907348633
    9. '１' → logprob: -20.187501907348633
    10. '[' → logprob: -20.187501907348633

Token 420: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002162752440199256
    2. ')' → logprob: -6.252162933349609
    3. '))
' → logprob: -8.37716293334961
    4. ')))' → logprob: -12.87716293334961
    5. ' ))' → logprob: -14.25216293334961
    6. ')
' → logprob: -14.50216293334961
    7. '))
' → logprob: -15.87716293334961
    8. '))

' → logprob: -16.50216293334961
    9. '))))' → logprob: -17.87716293334961
    10. ' )' → logprob: -18.00216293334961

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21689270436763763
    2. '<|end|>' → logprob: -1.7168927192687988
    3. ')' → logprob: -4.591892719268799
    4. ' return' → logprob: -6.341892719268799
    5. '       ' → logprob: -6.841892719268799
    6. '	return' → logprob: -7.341892719268799
    7. 'return' → logprob: -7.466892719268799
    8. '               ' → logprob: -8.09189224243164
    9. '    ' → logprob: -8.21689224243164
    10. ' ' → logprob: -9.09189224243164

Token 422: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0040801819413900375
    2. ' ans' → logprob: -5.504080295562744
    3. '(ans' → logprob: -14.004079818725586
    4. '[' → logprob: -14.254079818725586
    5. '	ans' → logprob: -15.879079818725586
    6. '   ' → logprob: -17.879079818725586
    7. 'answer' → logprob: -18.629079818725586
    8. ' [' → logprob: -19.254079818725586
    9. ' ' → logprob: -19.379079818725586
    10. 'Ans' → logprob: -19.629079818725586

Token 424: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7542023658752441
    2. 'def' → logprob: -1.1292023658752441
    3. '<|end|>' → logprob: -2.754202365875244
    4. '#' → logprob: -3.129202365875244
    5. '(' → logprob: -3.629202365875244
    6. 'v' → logprob: -3.879202365875244
    7. ':' → logprob: -3.879202365875244
    8. '[' → logprob: -4.129202365875244
    9. ',' → logprob: -5.879202365875244
    10. '.' → logprob: -6.379202365875244

Token 426: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4215116798877716
    2. ' solve' → logprob: -2.046511650085449
    3. ' max' → logprob: -2.671511650085449
    4. ' find' → logprob: -3.921511650085449
    5. ' calc' → logprob: -3.921511650085449
    6. ' diameter' → logprob: -4.796511650085449
    7. 'main' → logprob: -4.796511650085449
    8. ' path' → logprob: -5.046511650085449
    9. ' solution' → logprob: -5.046511650085449
    10. ' count' → logprob: -5.296511650085449

Token 427: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.53050296427682e-05
    2. '(n' → logprob: -10.50008487701416
    3. '(link' → logprob: -11.75008487701416
    4. '_(' → logprob: -12.12508487701416
    5. '(s' → logprob: -12.37508487701416
    6. '(_' → logprob: -12.50008487701416
    7. '(l' → logprob: -12.62508487701416
    8. '((' → logprob: -12.75008487701416
    9. '():' → logprob: -12.75008487701416
    10. '(lines' → logprob: -12.75008487701416

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.52788148727268e-05
    2. ' ,' → logprob: -9.750064849853516
    3. '):' → logprob: -12.875064849853516
    4. ',n' → logprob: -13.500064849853516
    5. ',
' → logprob: -14.375064849853516
    6. ',v' → logprob: -14.750064849853516
    7. '_,' → logprob: -15.625064849853516
    8. ':' → logprob: -15.625064849853516
    9. ',input' → logprob: -15.625064849853516
    10. '   ' → logprob: -15.875064849853516

Token 429: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.055800408124923706
    2. 'edges' → logprob: -3.180800437927246
    3. ' links' → logprob: -4.805800437927246
    4. ' edges' → logprob: -5.805800437927246
    5. 'roots' → logprob: -8.430800437927246
    6. 'l' → logprob: -9.055800437927246
    7. 'root' → logprob: -9.305800437927246
    8. 'k' → logprob: -9.493300437927246
    9. 'lines' → logprob: -9.743300437927246
    10. 'ls' → logprob: -9.868300437927246

Token 430: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015435494715347886
    2. '):' → logprob: -6.5015435218811035
    3. '):
' → logprob: -10.251543998718262
    4. ',n' → logprob: -13.751543998718262
    5. ' ,' → logprob: -13.751543998718262
    6. ',v' → logprob: -13.876543998718262
    7. ',
' → logprob: -14.001543998718262
    8. '   ' → logprob: -14.501543998718262
    9. ':' → logprob: -14.876543998718262
    10. ')' → logprob: -15.001543998718262

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010341187007725239
    2. '
' → logprob: -7.501034259796143
    3. '    
' → logprob: -8.501033782958984
    4. ' res' → logprob: -10.126033782958984
    5. '```' → logprob: -10.126033782958984
    6. ' l' → logprob: -10.376033782958984
    7. ':' → logprob: -10.501033782958984
    8. ':
' → logprob: -10.626033782958984
    9. ' 
' → logprob: -11.001033782958984
    10. ',' → logprob: -11.376033782958984

Token 432: ' if' (ID: 538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7538443207740784
    2. '   ' → logprob: -2.1288442611694336
    3. 'ans' → logprob: -2.8788442611694336
    4. 'if' (adapté à ' if') → logprob: -3.1288442611694336
    5. 'root' → logprob: -3.3788442611694336
    6. 'path' → logprob: -3.5038442611694336
    7. '#' → logprob: -3.6288442611694336
    8. 'res' → logprob: -3.7538442611694336
    9. 'anc' → logprob: -3.8788442611694336
    10. 'depth' → logprob: -4.003844261169434

Token 433: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07905106246471405
    2. 'n' → logprob: -2.5790510177612305
    3. ' len' → logprob: -9.70405101776123
    4. ' not' → logprob: -10.20405101776123
    5. 'len' → logprob: -11.39155101776123
    6. ' ' → logprob: -11.51655101776123
    7. ' ' → logprob: -12.01655101776123
    8. ' __' → logprob: -12.32905101776123
    9. ' links' → logprob: -12.39155101776123
    10. '(n' → logprob: -12.82905101776123

Token 434: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4465620815753937
    2. ' ==' → logprob: -1.1965620517730713
    3. '<=' → logprob: -3.3215620517730713
    4. ' <=' → logprob: -3.9465620517730713
    5. '<' → logprob: -6.32156229019165
    6. ' <' → logprob: -7.57156229019165
    7. '=' → logprob: -8.696561813354492
    8. ')' → logprob: -11.071561813354492
    9. '>' → logprob: -11.696561813354492
    10. '1' → logprob: -12.321561813354492

Token 435: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002257071901112795
    2. '0' → logprob: -6.377256870269775
    3. ' ' → logprob: -7.502256870269775
    4. '2' → logprob: -13.127257347106934
    5. '=' → logprob: -14.627257347106934
    6. '   ' → logprob: -16.127256393432617
    7. ')' → logprob: -17.502256393432617
    8. '```' → logprob: -17.502256393432617
    9. '(' → logprob: -17.564756393432617
    10. '
' → logprob: -17.689756393432617

Token 436: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028135518077760935
    2. '0' → logprob: -5.877813339233398
    3. '2' → logprob: -11.877813339233398
    4. ' ' → logprob: -13.627813339233398
    5. '=' → logprob: -14.877813339233398
    6. '   ' → logprob: -17.0028133392334
    7. '```' → logprob: -17.0028133392334
    8. '3' → logprob: -17.3778133392334
    9. '
' → logprob: -17.5028133392334
    10. '(' → logprob: -17.5653133392334

Token 437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16106487810611725
    2. ':
' → logprob: -1.911064863204956
    3. ':return' → logprob: -8.036065101623535
    4. ' and' → logprob: -8.161065101623535
    5. ' :' → logprob: -9.036065101623535
    6. ' :
' → logprob: -10.036065101623535
    7. '   ' → logprob: -10.161065101623535
    8. ':
' → logprob: -11.536065101623535
    9. ' ==' → logprob: -11.786065101623535
    10. '==' → logprob: -12.411065101623535

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5885557532310486
    2. 'return' → logprob: -1.5885558128356934
    3. '   ' → logprob: -1.7135558128356934
    4. ' return' → logprob: -2.8385558128356934
    5. ':' → logprob: -7.588555812835693
    6. ':return' → logprob: -7.588555812835693
    7. ':
' → logprob: -8.213555335998535
    8. '	return' → logprob: -8.213555335998535
    9. '
' → logprob: -8.713555335998535
    10. ',' → logprob: -10.463555335998535

Token 439: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010474776849150658
    2. ' return' → logprob: -5.010474681854248
    3. 'print' → logprob: -5.885474681854248
    4. '   ' → logprob: -7.135474681854248
    5. '
' → logprob: -9.010475158691406
    6. ' print' → logprob: -11.010475158691406
    7. '1' → logprob: -12.260475158691406
    8. '       ' → logprob: -12.260475158691406
    9. '[' → logprob: -12.385475158691406
    10. '0' → logprob: -12.760475158691406

Token 440: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.510519802570343
    2. '[' → logprob: -1.2605197429656982
    3. '2' → logprob: -3.2605197429656982
    4. ' ' → logprob: -3.2605197429656982
    5. ' [' → logprob: -4.135519981384277
    6. '"' → logprob: -4.760519981384277
    7. ''' → logprob: -5.260519981384277
    8. '0' → logprob: -5.635519981384277
    9. 'max' → logprob: -6.385519981384277
    10. '[n' → logprob: -6.885519981384277

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11423540860414505
    2. '2' → logprob: -2.9892354011535645
    3. '[' → logprob: -3.4892354011535645
    4. '(' → logprob: -4.8642354011535645
    5. '"' → logprob: -4.9892354011535645
    6. '0' → logprob: -5.3642354011535645
    7. ''' → logprob: -5.9892354011535645
    8. ' ' → logprob: -6.9892354011535645
    9. 'n' → logprob: -7.1142354011535645
    10. '3' → logprob: -7.2392354011535645

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13580536842346191
    2. ',)' → logprob: -2.135805368423462
    3. ' ,' → logprob: -5.010805130004883
    4. ')' → logprob: -6.635805130004883
    5. ' )' → logprob: -8.135805130004883
    6. '[' → logprob: -8.510805130004883
    7. ',)
' → logprob: -9.635805130004883
    8. '*' → logprob: -9.635805130004883
    9. ' ' → logprob: -9.760805130004883
    10. '1' → logprob: -10.260805130004883

Token 443: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01065066084265709
    2. ' ' → logprob: -4.885650634765625
    3. ')' → logprob: -6.635650634765625
    4. '2' → logprob: -6.760650634765625
    5. '0' → logprob: -8.260650634765625
    6. '[' → logprob: -8.760650634765625
    7. '(' → logprob: -10.385650634765625
    8. '[n' → logprob: -10.885650634765625
    9. 'n' → logprob: -11.010650634765625
    10. ' [' → logprob: -11.135650634765625

Token 444: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005785751156508923
    2. '2' → logprob: -5.505785942077637
    3. '0' → logprob: -7.380785942077637
    4. 'n' → logprob: -8.380785942077637
    5. '[' → logprob: -8.380785942077637
    6. '(n' → logprob: -8.630785942077637
    7. ')' → logprob: -9.130785942077637
    8. '(' → logprob: -9.380785942077637
    9. '[n' → logprob: -9.505785942077637
    10. ' ' → logprob: -9.630785942077637

Token 445: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003552463313098997
    2. ' )' → logprob: -8.37535572052002
    3. ')
' → logprob: -9.12535572052002
    4. ',' → logprob: -11.37535572052002
    5. '),' → logprob: -13.75035572052002
    6. ',)' → logprob: -14.00035572052002
    7. '))' → logprob: -14.37535572052002
    8. '   ' → logprob: -14.62535572052002
    9. '[' → logprob: -15.25035572052002
    10. ' ' → logprob: -15.62535572052002

Token 446: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04720002040266991
    2. '   ' → logprob: -3.4221999645233154
    3. '    
' → logprob: -5.2972002029418945
    4. '  
' → logprob: -5.7972002029418945
    5. ' 
' → logprob: -6.0472002029418945
    6. ',' → logprob: -7.6722002029418945
    7. ')' → logprob: -7.7972002029418945
    8. 'n' → logprob: -7.7972002029418945
    9. '   
' → logprob: -7.7972002029418945
    10. '\n' → logprob: -8.047200202941895

Token 447: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.224398672580719
    2. '   ' → logprob: -1.7243986129760742
    3. '    
' → logprob: -4.349398612976074
    4. ',' → logprob: -5.349398612976074
    5. '
' → logprob: -7.224398612976074
    6. '  
' → logprob: -7.349398612976074
    7. ')' → logprob: -7.474398612976074
    8. ')
' → logprob: -7.599398612976074
    9. 'n' → logprob: -8.224398612976074
    10. 'v' → logprob: -8.474398612976074

Token 448: ' Cas' (ID: 8066)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7095067501068115
    2. '0' → logprob: -2.2095067501068115
    3. ' ' → logprob: -2.3345067501068115
    4. '(' → logprob: -2.4595067501068115
    5. ' (' → logprob: -3.2095067501068115
    6. 'return' → logprob: -3.3345067501068115
    7. '[' → logprob: -3.3345067501068115
    8. '
' → logprob: -3.4595067501068115
    9. ' return' → logprob: -3.4595067501068115
    10. '2' → logprob: -5.209506988525391

Token 449: ' trivial' (ID: 86130)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5615345239639282
    2. ':' → logprob: -1.9365345239639282
    3. '   ' → logprob: -1.9365345239639282
    4. 'def' → logprob: -1.9365345239639282
    5. ' trivial' → logprob: -2.8115344047546387
    6. ')' → logprob: -2.9365344047546387
    7. '(' → logprob: -3.4365344047546387
    8. '1' → logprob: -4.186534404754639
    9. '0' → logprob: -4.436534404754639
    10. '    ' → logprob: -4.561534404754639

Token 450: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5758941769599915
    2. '
' → logprob: -1.4508941173553467
    3. '    
' → logprob: -2.0758941173553467
    4. ',' → logprob: -4.200894355773926
    5. ' 
' → logprob: -4.325894355773926
    6. '  
' → logprob: -4.325894355773926
    7. ')' → logprob: -4.575894355773926
    8. 'n' → logprob: -4.575894355773926
    9. '   
' → logprob: -5.325894355773926
    10. '\n' → logprob: -6.325894355773926

Token 451: ' obligatoire' (ID: 109362)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.7105406522750854
    2. ' return' → logprob: -2.460540771484375
    3. ' bon' → logprob: -2.585540771484375
    4. ' pas' → logprob: -2.710540771484375
    5. ':' → logprob: -2.835540771484375
    6. ' important' → logprob: -2.960540771484375
    7. ' valid' → logprob: -3.085540771484375
    8. 'important' → logprob: -3.085540771484375
    9. ' vrai' → logprob: -3.460540771484375
    10. ' voilà' → logprob: -3.460540771484375

Token 452: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24090762436389923
    2. '
' → logprob: -1.8659076690673828
    3. '    
' → logprob: -2.990907669067383
    4. ',' → logprob: -5.615907669067383
    5. '  
' → logprob: -6.240907669067383
    6. ' 
' → logprob: -7.240907669067383
    7. '   
' → logprob: -7.615907669067383
    8. '<|end|>' → logprob: -7.740907669067383
    9. 'n' → logprob: -7.990907669067383
    10. '.' → logprob: -8.115907669067383

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10068924725055695
    2. '
' → logprob: -2.725689172744751
    3. '    
' → logprob: -3.600689172744751
    4. '   
' → logprob: -7.10068941116333
    5. '  
' → logprob: -7.60068941116333
    6. 'n' → logprob: -7.72568941116333
    7. ' 
' → logprob: -8.475688934326172
    8. '```' → logprob: -8.725688934326172
    9. 'v' → logprob: -8.975688934326172
    10. 's' → logprob: -8.975688934326172

Token 454: ' path' (ID: 3104)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13443464040756226
    2. '
' → logprob: -3.634434700012207
    3. 'depth' → logprob: -3.884434700012207
    4. ' depths' → logprob: -4.634434700012207
    5. '#' → logprob: -5.134434700012207
    6. 'l' → logprob: -5.384434700012207
    7. 'root' → logprob: -5.509434700012207
    8. 'roots' → logprob: -5.509434700012207
    9. ' roots' → logprob: -5.634434700012207
    10. '    
' → logprob: -5.759434700012207

Token 455: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003179855877533555
    2. '=' → logprob: -5.753180027008057
    3. ',' → logprob: -13.503179550170898
    4. ' ' → logprob: -15.128179550170898
    5. '.' → logprob: -16.1281795501709
    6. ' =[' → logprob: -16.1281795501709
    7. ' ' → logprob: -16.7531795501709
    8. '_' → logprob: -16.8781795501709
    9. ' ,' → logprob: -17.0031795501709
    10. ' =
' → logprob: -17.1281795501709

Token 456: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.011055364273488522
    2. ' dfs' → logprob: -4.5110554695129395
    3. '   ' → logprob: -12.386054992675781
    4. 'df' → logprob: -13.011054992675781
    5. ' ' → logprob: -15.011054992675781
    6. 'DFS' → logprob: -15.511054992675781
    7. '  ' → logprob: -15.886054992675781
    8. '(d' → logprob: -16.01105499267578
    9. 'dfa' → logprob: -16.51105499267578
    10. 'd' → logprob: -16.88605499267578

Token 457: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. ' (' → logprob: -15.250000953674316
    3. '((' → logprob: -16.375
    4. '(
' → logprob: -16.625
    5. '```' → logprob: -17.125
    6. ')(' → logprob: -18.375
    7. ')' → logprob: -18.5
    8. '
' → logprob: -19.0
    9. '(paths' → logprob: -19.0
    10. '(link' → logprob: -19.625

Token 458: 'links' (ID: 26581)
  Prédit: 'links'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -1.3902033970225602e-05
    2. '(' → logprob: -12.125014305114746
    3. ')' → logprob: -12.500014305114746
    4. '[' → logprob: -13.500014305114746
    5. ' links' → logprob: -13.625014305114746
    6. '.links' → logprob: -14.375014305114746
    7. '
' → logprob: -14.500014305114746
    8. '   ' → logprob: -15.250014305114746
    9. ')
' → logprob: -16.00001335144043
    10. 'inks' → logprob: -16.12501335144043

Token 459: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007381931878626347
    2. ')
' → logprob: -5.007381916046143
    3. '(' → logprob: -7.507381916046143
    4. ')
' → logprob: -10.1323823928833
    5. '))' → logprob: -11.2573823928833
    6. ')

' → logprob: -11.6323823928833
    7. ',' → logprob: -11.7573823928833
    8. '   ' → logprob: -11.8823823928833
    9. '[' → logprob: -11.8823823928833
    10. '(path' → logprob: -11.8823823928833

Token 460: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7145770192146301
    2. '   ' → logprob: -1.3395769596099854
    3. '[' → logprob: -2.4645769596099854
    4. ':' → logprob: -2.9645769596099854
    5. ' for' → logprob: -3.8395769596099854
    6. ',' → logprob: -3.8395769596099854
    7. 'for' → logprob: -4.2145771980285645
    8. '```' → logprob: -4.3395771980285645
    9. '[::-' → logprob: -4.8395771980285645
    10. '    
' → logprob: -4.8395771980285645

Token 461: ' c' (ID: 274)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0453726053237915
    2. 'ans' → logprob: -1.5453726053237915
    3. 'res' → logprob: -2.170372486114502
    4. 'left' → logprob: -2.545372486114502
    5. 'a' → logprob: -3.170372486114502
    6. 'max' → logprob: -3.670372486114502
    7. 'for' → logprob: -3.795372486114502
    8. 'd' → logprob: -4.295372486114502
    9. 'm' → logprob: -4.295372486114502
    10. 'depth' → logprob: -4.420372486114502

Token 462: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8610327243804932
    2. 'ur' → logprob: -1.6110327243804932
    3. 'alc' → logprob: -2.111032724380493
    4. '=' → logprob: -2.611032724380493
    5. 'nt' → logprob: -3.736032724380493
    6. 'and' → logprob: -3.736032724380493
    7. 'ount' → logprob: -3.861032724380493
    8. 'urr' → logprob: -4.111032485961914
    9. 'max' → logprob: -4.236032485961914
    10. '_len' → logprob: -4.861032485961914

Token 463: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6127915382385254
    2. 'calc' → logprob: -0.8627915382385254
    3. '[' → logprob: -3.9877915382385254
    4. '[len' → logprob: -5.237791538238525
    5. '0' → logprob: -5.362791538238525
    6. '[]' → logprob: -5.987791538238525
    7. ' calc' → logprob: -6.612791538238525
    8. '(len' → logprob: -6.862791538238525
    9. ' len' → logprob: -6.987791538238525
    10. '(calc' → logprob: -7.612791538238525

Token 464: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -1.8193366486229934e-05
    2. 'path' → logprob: -11.125018119812012
    3. '(c' → logprob: -12.875018119812012
    4. '(' → logprob: -15.125018119812012
    5. '(calc' → logprob: -15.125018119812012
    6. ' path' → logprob: -16.125019073486328
    7. '(s' → logprob: -16.625019073486328
    8. ' (' → logprob: -17.500019073486328
    9. ',path' → logprob: -18.000019073486328
    10. '(p' → logprob: -18.000019073486328

Token 465: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004944138927385211
    2. ')-' → logprob: -7.750494480133057
    3. ')
' → logprob: -10.375494003295898
    4. ' )' → logprob: -10.875494003295898
    5. '-' → logprob: -11.750494003295898
    6. ' -' → logprob: -13.250494003295898
    7. '-)' → logprob: -13.500494003295898
    8. '   ' → logprob: -14.625494003295898
    9. '()' → logprob: -14.750494003295898
    10. '))' → logprob: -15.125494003295898

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6755684018135071
    2. '
' → logprob: -0.8005684018135071
    3. ' ans' → logprob: -4.550568580627441
    4. ',' → logprob: -4.675568580627441
    5. 'ans' → logprob: -4.925568580627441
    6. '    
' → logprob: -5.175568580627441
    7. ')' → logprob: -7.050568580627441
    8. '(ans' → logprob: -7.300568580627441
    9. ')
' → logprob: -7.425568580627441
    10. '[' → logprob: -7.425568580627441

Token 467: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0199964046478271
    2. 'a' → logprob: -2.144996404647827
    3. 'l' (adapté à ' l') → logprob: -2.144996404647827
    4. '   ' → logprob: -2.519996404647827
    5. 'left' → logprob: -2.894996404647827
    6. 'res' → logprob: -3.394996404647827
    7. 'dp' → logprob: -3.519996404647827
    8. ' ans' → logprob: -3.644996404647827
    9. 'd' → logprob: -4.019996643066406
    10. 'vals' → logprob: -4.394996643066406

Token 468: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16030994057655334
    2. '=' → logprob: -1.910309910774231
    3. ',' → logprob: -10.285309791564941
    4. 'en' → logprob: -11.410309791564941
    5. 'ist' → logprob: -11.410309791564941
    6. ' ' → logprob: -12.160309791564941
    7. '=[]' → logprob: -12.285309791564941
    8. 'c' → logprob: -12.660309791564941
    9. '_' → logprob: -12.785309791564941
    10. '   ' → logprob: -12.910309791564941

Token 469: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.30896252393722534
    2. 'len' → logprob: -2.93396258354187
    3. '(c' → logprob: -2.93396258354187
    4. '[c' → logprob: -3.05896258354187
    5. 'calc' → logprob: -3.68396258354187
    6. '[' → logprob: -3.93396258354187
    7. 'max' → logprob: -4.058962345123291
    8. '(' → logprob: -4.933962345123291
    9. ' c' → logprob: -4.933962345123291
    10. '(len' → logprob: -5.183962345123291

Token 470: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00772658409550786
    2. '(c' → logprob: -5.007726669311523
    3. 'len' → logprob: -7.382726669311523
    4. '   ' → logprob: -8.257726669311523
    5. ' c' → logprob: -9.757726669311523
    6. '(len' → logprob: -10.382726669311523
    7. 'path' → logprob: -12.007726669311523
    8. '1' → logprob: -12.132726669311523
    9. '(' → logprob: -12.257726669311523
    10. ' ' → logprob: -12.382726669311523

Token 471: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.45351019501686096
    2. ' +' → logprob: -1.8285101652145386
    3. '-' → logprob: -1.9535101652145386
    4. ' -' → logprob: -2.953510284423828
    5. ' //' → logprob: -5.078510284423828
    6. ')' → logprob: -6.328510284423828
    7. '//' → logprob: -6.703510284423828
    8. ' ' → logprob: -7.703510284423828
    9. '   ' → logprob: -8.703510284423828
    10. ' )' → logprob: -9.453510284423828

Token 472: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.755678961984813e-05
    2. '2' → logprob: -9.625077247619629
    3. '3' → logprob: -11.875077247619629
    4. ' ' → logprob: -12.750077247619629
    5. '
' → logprob: -14.375077247619629
    6. '+' → logprob: -14.625077247619629
    7. '4' → logprob: -15.750077247619629
    8. '   ' → logprob: -16.000078201293945
    9. '-' → logprob: -16.250078201293945
    10. '(' → logprob: -16.750078201293945

Token 473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.975612187583465e-05
    2. '2' → logprob: -10.500029563903809
    3. '3' → logprob: -13.500029563903809
    4. ' ' → logprob: -15.000029563903809
    5. '
' → logprob: -15.625029563903809
    6. '+' → logprob: -16.250030517578125
    7. '   ' → logprob: -17.250030517578125
    8. '4' → logprob: -17.500030517578125
    9. '-' → logprob: -17.750030517578125
    10. '

' → logprob: -17.875030517578125

Token 474: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008305939263664186
    2. ')//' → logprob: -7.12583065032959
    3. ' )' → logprob: -10.62583065032959
    4. '//' → logprob: -13.62583065032959
    5. ')
' → logprob: -14.75083065032959
    6. ')>>' → logprob: -16.250829696655273
    7. '   ' → logprob: -16.625829696655273
    8. ' //' → logprob: -17.375829696655273
    9. '）' → logprob: -17.750829696655273
    10. '")' → logprob: -18.625829696655273

Token 475: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3142082989215851
    2. ' //' → logprob: -1.3142082691192627
    3. ')' → logprob: -8.064208030700684
    4. '   ' → logprob: -8.064208030700684
    5. '>>' → logprob: -8.814208030700684
    6. '```' → logprob: -9.814208030700684
    7. '#' → logprob: -10.064208030700684
    8. '
' → logprob: -10.439208030700684
    9. ' ' → logprob: -11.189208030700684
    10. ' ' → logprob: -11.689208030700684

Token 476: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.250017166137695
    4. '
' → logprob: -16.375017166137695
    5. '```' → logprob: -17.375017166137695
    6. '

' → logprob: -17.500017166137695
    7. '1' → logprob: -18.250017166137695
    8. '  ' → logprob: -18.375017166137695
    9. '２' → logprob: -18.750017166137695
    10. '=' → logprob: -19.562517166137695

Token 477: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '1' → logprob: -16.375001907348633
    4. '
' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '```' → logprob: -17.500001907348633
    7. '

' → logprob: -17.750001907348633
    8. '２' → logprob: -18.562501907348633
    9. '3' → logprob: -19.125001907348633
    10. '  ' → logprob: -19.437501907348633

Token 478: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0667809247970581
    2. '
' → logprob: -2.8167810440063477
    3. '    
' → logprob: -6.691781044006348
    4. ')' → logprob: -6.816781044006348
    5. ',' → logprob: -7.191781044006348
    6. '  
' → logprob: -8.566781044006348
    7. ')
' → logprob: -8.816781044006348
    8. '#' → logprob: -8.816781044006348
    9. 'v' → logprob: -8.941781044006348
    10. '  ' → logprob: -9.191781044006348

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04748789221048355
    2. 'a' → logprob: -4.422487735748291
    3. 'ans' → logprob: -4.922487735748291
    4. 'left' → logprob: -4.922487735748291
    5. '
' → logprob: -5.047487735748291
    6. '    
' → logprob: -5.547487735748291
    7. ')' → logprob: -6.422487735748291
    8. ' ans' → logprob: -6.547487735748291
    9. 'res' → logprob: -7.047487735748291
    10. ',' → logprob: -7.172487735748291

Token 480: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9213284254074097
    2. 'ans' → logprob: -1.0463284254074097
    3. 'a' → logprob: -2.921328544616699
    4. 'l' → logprob: -3.171328544616699
    5. 'res' → logprob: -3.671328544616699
    6. 'd' → logprob: -3.796328544616699
    7. 'L' → logprob: -4.671328544616699
    8. 'v' → logprob: -4.796328544616699
    9. 'x' → logprob: -4.796328544616699
    10. '   ' → logprob: -4.796328544616699

Token 481: ' print' (ID: 2123)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.119641661643982
    2. 'a' → logprob: -2.1196417808532715
    3. 'left' → logprob: -2.1196417808532715
    4. 'l' → logprob: -2.7446417808532715
    5. 'd' → logprob: -2.9946417808532715
    6. 'res' → logprob: -3.2446417808532715
    7. 'm' → logprob: -3.8696417808532715
    8. 'x' → logprob: -3.9946417808532715
    9. 'g' → logprob: -4.1196417808532715
    10. 'v' → logprob: -4.3696417808532715

Token 482: '("' (ID: 568)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.5432493090629578
    2. '(' → logprob: -1.4182493686676025
    3. '(len' → logprob: -2.9182493686676025
    4. '(f' → logprob: -3.0432493686676025
    5. '("' → logprob: -3.4182493686676025
    6. '()' → logprob: -3.4182493686676025
    7. '(c' → logprob: -5.293249130249023
    8. '(*' → logprob: -6.793249130249023
    9. '(
' → logprob: -6.918249130249023
    10. '('' → logprob: -7.043249130249023

Token 483: 'che' (ID: 926)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.9554907083511353
    2. '(path' → logprob: -0.9554907083511353
    3. '("' → logprob: -2.5804905891418457
    4. '(' → logprob: -3.8304905891418457
    5. '(f' → logprob: -4.205490589141846
    6. '(c' → logprob: -4.205490589141846
    7. '")' → logprob: -4.705490589141846
    8. '(len' → logprob: -4.705490589141846
    9. '('' → logprob: -4.830490589141846
    10. '(calc' → logprob: -4.955490589141846

Token 484: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.941850526549388e-06
    2. 'm' → logprob: -12.125007629394531
    3. 'mins' → logprob: -14.125007629394531
    4. '#' → logprob: -14.375007629394531
    5. 'main' → logprob: -15.375007629394531
    6. 'ck' → logprob: -15.375007629394531
    7. '```' → logprob: -16.50000762939453
    8. ' min' → logprob: -16.50000762939453
    9. '   ' → logprob: -16.62500762939453
    10. '(min' → logprob: -16.75000762939453

Token 485: ' trouvé' (ID: 60081)
  Prédit: ':",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':",' → logprob: -0.8336116671562195
    2. ' :",' → logprob: -1.8336117267608643
    3. '",' → logprob: -1.9586117267608643
    4. ':' → logprob: -2.0836117267608643
    5. ' :' → logprob: -3.0836117267608643
    6. '")' → logprob: -4.208611488342285
    7. ' =",' → logprob: -4.208611488342285
    8. '=",' → logprob: -4.458611488342285
    9. ' =' → logprob: -4.583611488342285
    10. ' complet' → logprob: -4.708611488342285

Token 486: ' :",' (ID: 177987)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2393689155578613
    2. ':",' → logprob: -1.3643689155578613
    3. '")' → logprob: -1.4893689155578613
    4. ' :",' → logprob: -2.4893689155578613
    5. '",' → logprob: -2.6143689155578613
    6. ' :' → logprob: -3.2393689155578613
    7. ',' → logprob: -4.114368915557861
    8. ')' → logprob: -4.614368915557861
    9. ')")' → logprob: -6.364368915557861
    10. ')",' → logprob: -6.739368915557861

Token 487: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.2016039490699768
    2. ' path' → logprob: -1.701603889465332
    3. ''' → logprob: -9.576603889465332
    4. '"path' → logprob: -9.701603889465332
    5. '[path' → logprob: -10.701603889465332
    6. '"' → logprob: -11.201603889465332
    7. ' ' → logprob: -11.951603889465332
    8. ',path' → logprob: -12.201603889465332
    9. '[' → logprob: -12.576603889465332
    10. ')' → logprob: -12.951603889465332

Token 488: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14359286427497864
    2. ')
' → logprob: -2.0185928344726562
    3. '   ' → logprob: -7.518592834472656
    4. '[' → logprob: -9.143592834472656
    5. '")' → logprob: -9.268592834472656
    6. ' )' → logprob: -10.393592834472656
    7. ')
' → logprob: -10.518592834472656
    8. ',' → logprob: -10.518592834472656
    9. ' )
' → logprob: -11.143592834472656
    10. '')' → logprob: -11.518592834472656

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48067912459373474
    2. 'a' → logprob: -2.1056790351867676
    3. 'left' → logprob: -2.1056790351867676
    4. 'v' → logprob: -3.4806790351867676
    5. 'res' → logprob: -4.105679035186768
    6. 'ans' → logprob: -4.105679035186768
    7. 'l' → logprob: -4.230679035186768
    8. '    
' → logprob: -4.730679035186768
    9. '
' → logprob: -4.855679035186768
    10. 'mid' → logprob: -5.355679035186768

Token 490: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2503893375396729
    2. 'a' → logprob: -1.5003893375396729
    3. 'left' → logprob: -1.7503893375396729
    4. '   ' → logprob: -2.875389337539673
    5. 'res' → logprob: -3.125389337539673
    6. 'l' → logprob: -3.125389337539673
    7. 'g' → logprob: -3.375389337539673
    8. 'x' → logprob: -3.750389337539673
    9. 'r' → logprob: -4.250389099121094
    10. 'v' → logprob: -4.375389099121094

Token 491: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1595261096954346
    2. 'a' → logprob: -1.5345261096954346
    3. 'left' → logprob: -2.6595261096954346
    4. 'l' → logprob: -2.9095261096954346
    5. 'res' → logprob: -3.1595261096954346
    6. 'd' → logprob: -3.1595261096954346
    7. 'x' → logprob: -3.4095261096954346
    8. 'g' → logprob: -3.5345261096954346
    9. 'v' → logprob: -3.5345261096954346
    10. 'r' → logprob: -3.6595261096954346

Token 492: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9480429291725159
    2. ' len' → logprob: -1.073042869567871
    3. 'len' → logprob: -2.448042869567871
    4. 'l' → logprob: -2.698042869567871
    5. ' c' → logprob: -2.698042869567871
    6. 'c' → logprob: -3.698042869567871
    7. ' path' → logprob: -4.448042869567871
    8. ' n' → logprob: -5.698042869567871
    9. ' le' → logprob: -6.448042869567871
    10. 'path' → logprob: -6.573042869567871

Token 493: ' longueur' (ID: 104613)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0992403030395508
    2. ' c' → logprob: -1.4742403030395508
    3. ' len' → logprob: -1.5992403030395508
    4. 'c' → logprob: -1.8492403030395508
    5. 'l' → logprob: -3.224240303039551
    6. ' l' → logprob: -3.599240303039551
    7. ' path' → logprob: -5.224240303039551
    8. ' n' → logprob: -6.349240303039551
    9. 'n' → logprob: -7.349240303039551
    10. ' not' → logprob: -7.599240303039551

Token 494: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1839674711227417
    2. ' ==' → logprob: -1.3089674711227417
    3. ' du' → logprob: -1.6839674711227417
    4. 'du' → logprob: -1.8089674711227417
    5. ' <' → logprob: -4.683967590332031
    6. 'de' → logprob: -4.683967590332031
    7. '>' → logprob: -4.808967590332031
    8. '=' → logprob: -5.058967590332031
    9. ' >' → logprob: -5.308967590332031
    10. 'path' → logprob: -5.308967590332031

Token 495: ' paire' (ID: 148856)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.6679078340530396
    2. 'imp' → logprob: -2.04290771484375
    3. '1' → logprob: -2.16790771484375
    4. 'c' → logprob: -2.41790771484375
    5. ' imp' → logprob: -2.66790771484375
    6. '2' → logprob: -3.66790771484375
    7. 'l' → logprob: -4.04290771484375
    8. 'pair' → logprob: -4.41790771484375
    9. ' ' → logprob: -4.91790771484375
    10. 'exact' → logprob: -5.41790771484375

Token 496: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9055259227752686
    2. '   ' → logprob: -1.0305259227752686
    3. ' ==' → logprob: -1.5305259227752686
    4. '==' → logprob: -4.155526161193848
    5. ' and' → logprob: -6.280526161193848
    6. ':
' → logprob: -6.780526161193848
    7. ' if' → logprob: -6.780526161193848
    8. ',' → logprob: -7.030526161193848
    9. ' :' → logprob: -7.530526161193848
    10. 'if' → logprob: -8.030526161193848

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6771925687789917
    2. ':' → logprob: -0.8021925687789917
    3. ':
' → logprob: -3.5521926879882812
    4. ',' → logprob: -5.677192687988281
    5. ' :' → logprob: -5.677192687988281
    6. ' if' → logprob: -5.802192687988281
    7. ' and' → logprob: -5.927192687988281
    8. ' :
' → logprob: -6.677192687988281
    9. 'if' → logprob: -7.552192687988281
    10. ' or' → logprob: -9.802192687988281

Token 498: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6108456254005432
    2. 'if' (adapté à ' if') → logprob: -0.9858456254005432
    3. '   ' → logprob: -2.4858455657958984
    4. 'mid' → logprob: -8.485845565795898
    5. ' mid' → logprob: -8.610845565795898
    6. ' for' → logprob: -9.235845565795898
    7. '    
' → logprob: -9.985845565795898
    8. 'for' → logprob: -10.110845565795898
    9. '
' → logprob: -10.360845565795898
    10. 'm' → logprob: -11.110845565795898

Token 499: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.11299842596054077
    2. 'c' → logprob: -2.2379984855651855
    3. '(c' → logprob: -10.112998008728027
    4. ' l' → logprob: -10.237998008728027
    5. ' (' → logprob: -10.487998008728027
    6. ' ' → logprob: -10.612998008728027
    7. 'l' → logprob: -11.362998008728027
    8. ' len' → logprob: -11.612998008728027
    9. 'len' → logprob: -11.862998008728027
    10. '   ' → logprob: -11.862998008728027

Token 500: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07002957910299301
    2. '%' → logprob: -2.6950294971466064
    3. ' ' → logprob: -9.570029258728027
    4. ' ==' → logprob: -11.320029258728027
    5. '==' → logprob: -12.195029258728027
    6. '   ' → logprob: -12.445029258728027
    7. ' %
' → logprob: -14.570029258728027
    8. '>' → logprob: -14.695029258728027
    9. ' ' → logprob: -14.820029258728027
    10. ' <=' → logprob: -15.070029258728027

Token 501: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026306571438908577
    2. ' ' → logprob: -3.651306629180908
    3. '==' → logprob: -12.65130615234375
    4. '0' → logprob: -13.65130615234375
    5. ' ==' → logprob: -14.40130615234375
    6. '   ' → logprob: -14.40130615234375
    7. '1' → logprob: -15.40130615234375
    8. '  ' → logprob: -15.90130615234375
    9. '```' → logprob: -15.90130615234375
    10. '=' → logprob: -16.15130615234375

Token 502: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005538671393878758
    2. ' ' → logprob: -7.500554084777832
    3. '==' → logprob: -14.375554084777832
    4. '0' → logprob: -16.125553131103516
    5. '=' → logprob: -16.500553131103516
    6. '   ' → logprob: -16.625553131103516
    7. '```' → logprob: -16.625553131103516
    8. '1' → logprob: -16.750553131103516
    9. ' ==' → logprob: -17.750553131103516
    10. '  ' → logprob: -17.750553131103516

Token 503: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31338945031166077
    2. ' ==' → logprob: -1.3133894205093384
    3. '0' → logprob: -9.688389778137207
    4. '=' → logprob: -10.938389778137207
    5. ' !=' → logprob: -11.313389778137207
    6. '!=' → logprob: -11.563389778137207
    7. ':' → logprob: -11.688389778137207
    8. '==
' → logprob: -12.063389778137207
    9. ')==' → logprob: -12.688389778137207
    10. '()==' → logprob: -12.813389778137207

Token 504: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007056576665490866
    2. ' ' → logprob: -5.007056713104248
    3. '1' → logprob: -8.13205623626709
    4. '2' → logprob: -10.00705623626709
    5. '==' → logprob: -14.50705623626709
    6. '```' → logprob: -14.63205623626709
    7. '=' → logprob: -14.75705623626709
    8. '   ' → logprob: -15.00705623626709
    9. '
' → logprob: -15.81955623626709
    10. ':' → logprob: -16.319557189941406

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00042626605136319995
    2. '2' → logprob: -8.500426292419434
    3. ' ' → logprob: -8.500426292419434
    4. '1' → logprob: -10.875426292419434
    5. '   ' → logprob: -16.125425338745117
    6. '```' → logprob: -16.500425338745117
    7. '=' → logprob: -16.625425338745117
    8. '==' → logprob: -16.750425338745117
    9. '00' → logprob: -17.750425338745117
    10. '
' → logprob: -18.250425338745117

Token 506: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08913172781467438
    2. ':
' → logprob: -2.4641318321228027
    3. ' :' → logprob: -9.589131355285645
    4. '   ' → logprob: -9.714131355285645
    5. ' :
' → logprob: -9.964131355285645
    6. '       ' → logprob: -12.214131355285645
    7. ':
' → logprob: -12.464131355285645
    8. '):
' → logprob: -13.464131355285645
    9. ':return' → logprob: -13.464131355285645
    10. ',' → logprob: -13.589131355285645

Token 507: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06449023634195328
    2. '       ' → logprob: -2.81449031829834
    3. 'v' → logprob: -7.43949031829834
    4. 'mid' → logprob: -7.81449031829834
    5. ' mid' → logprob: -7.93949031829834
    6. 'm' → logprob: -8.06449031829834
    7. '    ' → logprob: -8.93949031829834
    8. 'left' → logprob: -8.93949031829834
    9. 'a' → logprob: -9.31449031829834
    10. '#' → logprob: -10.06449031829834

Token 508: ' u' (ID: 337)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21125787496566772
    2. 'a' → logprob: -3.4612579345703125
    3. 'm' → logprob: -4.3362579345703125
    4. 'left' → logprob: -4.4612579345703125
    5. 'v' → logprob: -4.5862579345703125
    6. 'l' → logprob: -4.7112579345703125
    7. ' res' → logprob: -4.7112579345703125
    8. 'x' → logprob: -4.7112579345703125
    9. ' p' → logprob: -4.8362579345703125
    10. 'ans' → logprob: -4.8362579345703125

Token 509: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2786257565021515
    2. ',' → logprob: -1.528625726699829
    3. '=' → logprob: -3.653625726699829
    4. ',u' → logprob: -8.77862548828125
    5. ' ,' → logprob: -9.15362548828125
    6. '=u' → logprob: -9.65362548828125
    7. 'u' → logprob: -10.40362548828125
    8. '   ' → logprob: -11.02862548828125
    9. ',v' → logprob: -11.15362548828125
    10. '1' → logprob: -11.27862548828125

Token 510: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6631961464881897
    2. ' v' → logprob: -1.538196086883545
    3. 'path' → logprob: -2.038196086883545
    4. ' path' → logprob: -2.288196086883545
    5. 'u' → logprob: -4.038196086883545
    6. ' u' → logprob: -4.913196086883545
    7. 'w' → logprob: -5.288196086883545
    8. ' w' → logprob: -6.288196086883545
    9. ' ' → logprob: -6.413196086883545
    10. '   ' → logprob: -6.538196086883545

Token 511: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5775240659713745
    2. '=' → logprob: -0.8275240659713745
    3. ',' → logprob: -6.452524185180664
    4. '=u' → logprob: -12.452524185180664
    5. 'u' → logprob: -13.452524185180664
    6. ',u' → logprob: -14.827524185180664
    7. '=v' → logprob: -15.202524185180664
    8. ' ,' → logprob: -15.577524185180664
    9. '=

' → logprob: -16.202524185180664
    10. ' u' → logprob: -16.577524185180664

Token 512: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.11344029754400253
    2. 'path' → logprob: -2.2384402751922607
    3. '(path' → logprob: -7.86344051361084
    4. ' (' → logprob: -8.61344051361084
    5. ' ' → logprob: -10.36344051361084
    6. '   ' → logprob: -11.73844051361084
    7. '(' → logprob: -12.48844051361084
    8. '	path' → logprob: -13.48844051361084
    9. ' ' → logprob: -13.48844051361084
    10. '"path' → logprob: -14.61344051361084

Token 513: '[c' (ID: 22840)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.4853805899620056
    2. '[c' → logprob: -0.9853805899620056
    3. '[(' → logprob: -5.23538064956665
    4. '[-' → logprob: -5.48538064956665
    5. '[' → logprob: -7.48538064956665
    6. '[len' → logprob: -7.98538064956665
    7. ' =' → logprob: -8.360380172729492
    8. '=' → logprob: -8.610380172729492
    9. '[:' → logprob: -8.985380172729492
    10. '   ' → logprob: -9.485380172729492

Token 514: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.001538311829790473
    2. ' //' → logprob: -6.501538276672363
    3. '2' → logprob: -10.501538276672363
    4. '   ' → logprob: -13.001538276672363
    5. ' ' → logprob: -13.001538276672363
    6. '#' → logprob: -13.376538276672363
    7. '/' → logprob: -14.251538276672363
    8. '```' → logprob: -14.501538276672363
    9. '``' → logprob: -14.876538276672363
    10. '1' → logprob: -15.376538276672363

Token 515: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000491672137286514
    2. ' ' → logprob: -7.625491619110107
    3. '//' → logprob: -13.000492095947266
    4. '   ' → logprob: -14.625492095947266
    5. '/' → logprob: -14.875492095947266
    6. '  ' → logprob: -16.000492095947266
    7. '1' → logprob: -16.250492095947266
    8. '```' → logprob: -16.500492095947266
    9. 'c' → logprob: -16.625492095947266
    10. '
' → logprob: -16.875492095947266

Token 516: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.919942486798391e-05
    2. ' ' → logprob: -9.750059127807617
    3. '1' → logprob: -14.875059127807617
    4. '   ' → logprob: -15.625059127807617
    5. '
' → logprob: -15.750059127807617
    6. '```' → logprob: -16.625059127807617
    7. '  ' → logprob: -17.375059127807617
    8. '3' → logprob: -17.500059127807617
    9. '``' → logprob: -17.875059127807617
    10. '//' → logprob: -17.875059127807617

Token 517: ' -' (ID: 533)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.19379791617393494
    2. '-' → logprob: -1.9437979459762573
    3. ' -' → logprob: -3.4437978267669678
    4. ']' → logprob: -7.443798065185547
    5. ' ],' → logprob: -8.068798065185547
    6. ' ' → logprob: -9.443798065185547
    7. '   ' → logprob: -9.818798065185547
    8. ':],' → logprob: -11.818798065185547
    9. ':' → logprob: -12.318798065185547
    10. ',' → logprob: -12.318798065185547

Token 518: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035691517405211926
    2. '2' → logprob: -8.000356674194336
    3. ' ' → logprob: -10.875356674194336
    4. ']' → logprob: -13.500356674194336
    5. '   ' → logprob: -14.250356674194336
    6. '  ' → logprob: -15.875356674194336
    7. '```' → logprob: -16.000356674194336
    8. '0' → logprob: -16.500356674194336
    9. ':' → logprob: -16.500356674194336
    10. '    ' → logprob: -17.562856674194336

Token 519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.435139898210764e-05
    2. ' ' → logprob: -9.625083923339844
    3. '2' → logprob: -11.125083923339844
    4. '   ' → logprob: -14.000083923339844
    5. ']' → logprob: -14.562583923339844
    6. '  ' → logprob: -14.750083923339844
    7. '0' → logprob: -15.000083923339844
    8. '
' → logprob: -15.250083923339844
    9. '```' → logprob: -15.375083923339844
    10. ':' → logprob: -15.875083923339844

Token 520: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.2531487047672272
    2. ',' → logprob: -1.5031486749649048
    3. ']' → logprob: -7.003148555755615
    4. ' ,' → logprob: -8.253149032592773
    5. ' ],' → logprob: -10.503149032592773
    6. '),' → logprob: -11.378149032592773
    7. ',v' → logprob: -12.128149032592773
    8. ',u' → logprob: -13.003149032592773
    9. '   ' → logprob: -14.128149032592773
    10. ']
' → logprob: -14.628149032592773

Token 521: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.018158959224820137
    2. 'path' → logprob: -4.018158912658691
    3. ' ' → logprob: -12.268158912658691
    4. ' ' → logprob: -12.768158912658691
    5. '	path' → logprob: -14.643158912658691
    6. ' space' → logprob: -15.643158912658691
    7. '"path' → logprob: -16.018159866333008
    8. '(path' → logprob: -16.143159866333008
    9. 'space' → logprob: -16.143159866333008
    10. ',path' → logprob: -16.268159866333008

Token 522: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.008738073520362377
    2. '[' → logprob: -5.258738040924072
    3. '[path' → logprob: -5.883738040924072
    4. ' [' → logprob: -7.758738040924072
    5. 'path' → logprob: -9.00873851776123
    6. '[
' → logprob: -9.50873851776123
    7. 'c' → logprob: -10.13373851776123
    8. ' path' → logprob: -10.88373851776123
    9. '[(' → logprob: -11.38373851776123
    10. '   ' → logprob: -12.13373851776123

Token 523: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0024868345353752375
    2. ' //' → logprob: -6.002486705780029
    3. '/' → logprob: -12.752487182617188
    4. 'c' → logprob: -12.877487182617188
    5. ' ' → logprob: -13.252487182617188
    6. '   ' → logprob: -13.752487182617188
    7. '```' → logprob: -13.752487182617188
    8. '#' → logprob: -14.002487182617188
    9. '://' → logprob: -15.502487182617188
    10. '
' → logprob: -15.752487182617188

Token 524: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017064863350242376
    2. ' ' → logprob: -6.376706600189209
    3. '//' → logprob: -13.37670612335205
    4. '/' → logprob: -13.75170612335205
    5. '1' → logprob: -14.00170612335205
    6. '   ' → logprob: -14.75170612335205
    7. '```' → logprob: -16.251707077026367
    8. '  ' → logprob: -16.376707077026367
    9. 'c' → logprob: -16.751707077026367
    10. ' /' → logprob: -16.876707077026367

Token 525: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011653638648567721
    2. ' ' → logprob: -9.375116348266602
    3. '1' → logprob: -10.375116348266602
    4. '```' → logprob: -16.2501163482666
    5. '   ' → logprob: -16.6251163482666
    6. '
' → logprob: -16.6251163482666
    7. '0' → logprob: -17.0001163482666
    8. 'c' → logprob: -17.3751163482666
    9. '  ' → logprob: -17.6251163482666
    10. ']' → logprob: -18.1876163482666

Token 526: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01045555155724287
    2. ' ]' → logprob: -4.63545560836792
    3. ']
' → logprob: -7.38545560836792
    4. '],' → logprob: -10.260455131530762
    5. ' ]
' → logprob: -11.135455131530762
    6. '   ' → logprob: -11.885455131530762
    7. ' ],' → logprob: -12.635455131530762
    8. '<|end|>' → logprob: -12.635455131530762
    9. ')]' → logprob: -12.760455131530762
    10. ']

' → logprob: -12.760455131530762

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16695299744606018
    2. '   ' → logprob: -1.9169529676437378
    3. 'else' → logprob: -5.416953086853027
    4. '
' → logprob: -6.666953086853027
    5. ' else' → logprob: -7.541953086853027
    6. ',' → logprob: -9.166953086853027
    7. '        
' → logprob: -9.791953086853027
    8. 'elif' → logprob: -10.166953086853027
    9. 'a' → logprob: -10.416953086853027
    10. '#' → logprob: -10.541953086853027

Token 528: ' ans' (ID: 3345)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8072674870491028
    2. '   ' → logprob: -0.9322674870491028
    3. 'ans' (adapté à ' ans') → logprob: -2.807267427444458
    4. 'l' → logprob: -3.432267427444458
    5. 'left' → logprob: -3.932267427444458
    6. 'A' → logprob: -4.057267665863037
    7. 'res' → logprob: -5.182267665863037
    8. 'la' → logprob: -5.182267665863037
    9. 'x' → logprob: -5.557267665863037
    10. 'L' → logprob: -5.682267665863037

Token 529: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22046056389808655
    2. '1' → logprob: -2.3454606533050537
    3. '=' → logprob: -2.8454606533050537
    4. '_u' → logprob: -3.5954606533050537
    5. 'u' → logprob: -4.220460414886475
    6. '_left' → logprob: -8.345460891723633
    7. 'a' → logprob: -8.470460891723633
    8. 's' → logprob: -8.720460891723633
    9. '_uv' → logprob: -8.720460891723633
    10. '_l' → logprob: -8.720460891723633

Token 530: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14545461535453796
    2. '=' → logprob: -2.0204546451568604
    3. ',' → logprob: -5.895454406738281
    4. ' ,' → logprob: -11.270454406738281
    5. ' ' → logprob: -12.770454406738281
    6. ')' → logprob: -13.270454406738281
    7. '   ' → logprob: -13.770454406738281
    8. ' =
' → logprob: -14.020454406738281
    9. '  ' → logprob: -14.145454406738281
    10. 's' → logprob: -14.645454406738281

Token 531: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.0015605698572471738
    2. ' calc' → logprob: -6.501560688018799
    3. '   ' → logprob: -10.00156021118164
    4. '(calc' → logprob: -12.37656021118164
    5. 'max' → logprob: -12.62656021118164
    6. '[' → logprob: -13.62656021118164
    7. 'tuple' → logprob: -14.00156021118164
    8. 'calculate' → logprob: -14.00156021118164
    9. 'list' → logprob: -14.25156021118164
    10. 'cal' → logprob: -14.50156021118164

Token 532: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -15.5
    3. '   ' → logprob: -16.75
    4. '((' → logprob: -18.125
    5. '(
' → logprob: -18.125
    6. ' ' → logprob: -19.5
    7. '```' → logprob: -19.5
    8. '(lines' → logprob: -19.75
    9. '`' → logprob: -20.25
    10. 's' → logprob: -20.625

Token 533: 'links' (ID: 26581)
  Prédit: 'links'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.576779842376709
    2. '(' → logprob: -0.826779842376709
    3. ')' → logprob: -7.951779842376709
    4. ' links' → logprob: -8.326780319213867
    5. '   ' → logprob: -8.826780319213867
    6. '.links' → logprob: -10.326780319213867
    7. '
' → logprob: -10.951780319213867
    8. '       ' → logprob: -11.576780319213867
    9. ')(' → logprob: -11.826780319213867
    10. '(
' → logprob: -12.326780319213867

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.474964439868927
    2. '(u' → logprob: -0.974964439868927
    3. ',u' → logprob: -7.724964618682861
    4. '(' → logprob: -7.974964618682861
    5. '(v' → logprob: -9.474964141845703
    6. '       ' → logprob: -11.474964141845703
    7. ' ,' → logprob: -11.849964141845703
    8. ' (' → logprob: -13.349964141845703
    9. '```' → logprob: -13.724964141845703
    10. ')' → logprob: -14.224964141845703

Token 535: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005998474545776844
    2. ' u' → logprob: -5.130998611450195
    3. '   ' → logprob: -10.755998611450195
    4. 'v' → logprob: -10.755998611450195
    5. '       ' → logprob: -11.005998611450195
    6. '    ' → logprob: -12.630998611450195
    7. ')' → logprob: -13.255998611450195
    8. '
' → logprob: -13.755998611450195
    9. '	u' → logprob: -13.755998611450195
    10. '(u' → logprob: -14.130998611450195

Token 536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014247603248804808
    2. ' ,' → logprob: -6.626424789428711
    3. ',v' → logprob: -9.501424789428711
    4. ',u' → logprob: -10.876424789428711
    5. '   ' → logprob: -12.876424789428711
    6. ',
' → logprob: -13.501424789428711
    7. 'v' → logprob: -14.876424789428711
    8. 'u' → logprob: -15.751424789428711
    9. ')' → logprob: -16.00142478942871
    10. '  ' → logprob: -16.25142478942871

Token 537: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.465036105713807e-06
    2. ' v' → logprob: -11.875007629394531
    3. ' ' → logprob: -15.375007629394531
    4. '	v' → logprob: -16.00000762939453
    5. '   ' → logprob: -16.37500762939453
    6. '-' → logprob: -17.37500762939453
    7. '  ' → logprob: -18.00000762939453
    8. '
' → logprob: -18.25000762939453
    9. 'u' → logprob: -18.50000762939453
    10. '-v' → logprob: -18.50000762939453

Token 538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001017567701637745
    2. ' ,' → logprob: -7.6260175704956055
    3. ',l' → logprob: -7.6260175704956055
    4. '   ' → logprob: -11.126017570495605
    5. ',c' → logprob: -12.501017570495605
    6. ',
' → logprob: -12.626017570495605
    7. ',u' → logprob: -12.626017570495605
    8. ')' → logprob: -12.876017570495605
    9. '       ' → logprob: -13.126017570495605
    10. 'l' → logprob: -13.501017570495605

Token 539: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0001777960715116933
    2. ' l' → logprob: -9.125177383422852
    3. '   ' → logprob: -10.000177383422852
    4. ' ' → logprob: -12.000177383422852
    5. '     ' → logprob: -12.625177383422852
    6. '    ' → logprob: -12.625177383422852
    7. '  ' → logprob: -12.750177383422852
    8. '       ' → logprob: -13.250177383422852
    9. '           ' → logprob: -13.625177383422852
    10. '      ' → logprob: -14.250177383422852

Token 540: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03828924149274826
    2. ')' → logprob: -3.2882893085479736
    3. ')
' → logprob: -8.538289070129395
    4. '   ' → logprob: -10.163289070129395
    5. ' )
' → logprob: -11.913289070129395
    6. '       ' → logprob: -12.163289070129395
    7. ')

' → logprob: -14.538289070129395
    8. ')[' → logprob: -15.413289070129395
    9. ' )' → logprob: -15.538289070129395
    10. ' ' → logprob: -15.663289070129395

Token 541: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05939490348100662
    2. '       ' → logprob: -2.9343948364257812
    3. ')
' → logprob: -6.559394836425781
    4. '   ' → logprob: -6.684394836425781
    5. ')' → logprob: -7.434394836425781
    6. '        
' → logprob: -7.934394836425781
    7. ',
' → logprob: -8.809394836425781
    8. '<|end|>' → logprob: -8.809394836425781
    9. '
' → logprob: -8.934394836425781
    10. '    
' → logprob: -9.434394836425781

Token 542: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0005898483213968575
    2. ' ans' → logprob: -8.250590324401855
    3. '       ' → logprob: -8.375590324401855
    4. '   ' → logprob: -9.375590324401855
    5. '	ans' → logprob: -11.625590324401855
    6. 'answer' → logprob: -13.750590324401855
    7. ' ' → logprob: -13.875590324401855
    8. '(ans' → logprob: -14.625590324401855
    9. '           ' → logprob: -15.250590324401855
    10. '  ' → logprob: -15.625590324401855

Token 543: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1994775377388578e-05
    2. '1' → logprob: -12.375012397766113
    3. ' =' → logprob: -12.875012397766113
    4. '=' → logprob: -13.000012397766113
    5. ' ' → logprob: -13.125012397766113
    6. '0' → logprob: -14.875012397766113
    7. '   ' → logprob: -15.625012397766113
    8. '```' → logprob: -16.125011444091797
    9. '
' → logprob: -16.562511444091797
    10. '[' → logprob: -16.875011444091797

Token 544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. ',' → logprob: -16.578889846801758
    4. ' ' → logprob: -16.703889846801758
    5. ')' → logprob: -17.453889846801758
    6. '   ' → logprob: -18.078889846801758
    7. ' =
' → logprob: -18.453889846801758
    8. '＝' → logprob: -18.828889846801758
    9. '[' → logprob: -18.953889846801758
    10. '  ' → logprob: -18.953889846801758

Token 545: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.04867139086127281
    2. ' calc' → logprob: -3.0486714839935303
    3. '(calc' → logprob: -9.54867172241211
    4. '   ' → logprob: -11.54867172241211
    5. '.calc' → logprob: -13.79867172241211
    6. '       ' → logprob: -14.67367172241211
    7. ' ' → logprob: -14.67367172241211
    8. 'cal' → logprob: -15.42367172241211
    9. '  ' → logprob: -15.42367172241211
    10. '    ' → logprob: -16.04867172241211

Token 546: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '(
' → logprob: -16.0
    3. ' (' → logprob: -18.125
    4. '```' → logprob: -18.75
    5. '<|end|>' → logprob: -20.25
    6. '((' → logprob: -20.5
    7. '(
' → logprob: -21.875
    8. '(`' → logprob: -21.875
    9. '(l' → logprob: -22.5
    10. '[' → logprob: -22.5

Token 547: 'links' (ID: 26581)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031796174589544535
    2. 'links' → logprob: -5.753179550170898
    3. '(
' → logprob: -13.378179550170898
    4. ' links' → logprob: -16.3781795501709
    5. '```' → logprob: -16.3781795501709
    6. '.links' → logprob: -16.8781795501709
    7. '   ' → logprob: -17.0031795501709
    8. ')' → logprob: -17.8781795501709
    9. 'inks' → logprob: -17.8781795501709
    10. ' (' → logprob: -18.0031795501709

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3484826982021332
    2. '(' → logprob: -1.2234827280044556
    3. ' ,' → logprob: -11.598483085632324
    4. ' (' → logprob: -11.723483085632324
    5. ',
' → logprob: -11.723483085632324
    6. '       ' → logprob: -12.723483085632324
    7. '(
' → logprob: -13.098483085632324
    8. '```' → logprob: -13.098483085632324
    9. ')' → logprob: -13.848483085632324
    10. '   ' → logprob: -13.973483085632324

Token 549: ' v' (ID: 323)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.009719845838844776
    2. 'v' → logprob: -5.0097198486328125
    3. 'u' → logprob: -6.1347198486328125
    4. ' links' → logprob: -7.1347198486328125
    5. ' v' → logprob: -11.259719848632812
    6. '   ' → logprob: -11.884719848632812
    7. ' u' → logprob: -12.009719848632812
    8. ' ' → logprob: -12.759719848632812
    9. 'link' → logprob: -13.009719848632812
    10. 'w' → logprob: -13.759719848632812

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001310719089815393
    2. ',u' → logprob: -9.500130653381348
    3. ' ,' → logprob: -10.000130653381348
    4. 'u' → logprob: -11.750130653381348
    5. '   ' → logprob: -14.125130653381348
    6. '[u' → logprob: -14.250130653381348
    7. ',
' → logprob: -14.500130653381348
    8. ' u' → logprob: -14.750130653381348
    9. '[' → logprob: -16.250131607055664
    10. ' ' → logprob: -16.687631607055664

Token 551: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.688212614681106e-05
    2. ' u' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.500017166137695
    4. ' ' → logprob: -17.375017166137695
    5. '
' → logprob: -19.000017166137695
    6. '	u' → logprob: -19.125017166137695
    7. 'у' → logprob: -19.500017166137695
    8. '    ' → logprob: -19.500017166137695
    9. '
' → logprob: -19.750017166137695
    10. '```' → logprob: -20.000017166137695

Token 552: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000454506283858791
    2. ',l' → logprob: -8.125454902648926
    3. ' ,' → logprob: -8.750454902648926
    4. ')' → logprob: -17.25045394897461
    5. ',
' → logprob: -17.62545394897461
    6. ' l' → logprob: -18.12545394897461
    7. 'l' → logprob: -18.50045394897461
    8. '‌,' → logprob: -18.62545394897461
    9. '   ' → logprob: -18.87545394897461
    10. '```' → logprob: -19.00045394897461

Token 553: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00043281487887725234
    2. ' l' → logprob: -7.750432968139648
    3. '   ' → logprob: -14.250432968139648
    4. '       ' → logprob: -14.375432968139648
    5. '     ' → logprob: -15.500432968139648
    6. '	l' → logprob: -15.625432968139648
    7. ' ' → logprob: -15.875432968139648
    8. '           ' → logprob: -16.25043296813965
    9. '    ' → logprob: -16.25043296813965
    10. 'u' → logprob: -16.50043296813965

Token 554: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01253590453416109
    2. ')
' → logprob: -4.38753604888916
    3. '   ' → logprob: -11.13753604888916
    4. '       ' → logprob: -11.63753604888916
    5. ')
' → logprob: -13.63753604888916
    6. ' )' → logprob: -13.63753604888916
    7. ' )
' → logprob: -16.762535095214844
    8. '
' → logprob: -16.762535095214844
    9. ')#' → logprob: -16.762535095214844
    10. '[' → logprob: -16.887535095214844

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012913014739751816
    2. '   ' → logprob: -4.387913227081299
    3. '        
' → logprob: -9.01291275024414
    4. ' return' → logprob: -9.38791275024414
    5. '
' → logprob: -9.51291275024414
    6. ')' → logprob: -10.51291275024414
    7. 'return' → logprob: -10.76291275024414
    8. '           ' → logprob: -11.51291275024414
    9. '-' → logprob: -11.76291275024414
    10. ' for' → logprob: -11.88791275024414

Token 556: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3819108009338379
    2. 'res' → logprob: -1.631910800933838
    3. 'return' → logprob: -2.506910800933838
    4. 'result' → logprob: -4.381910800933838
    5. 'prod' → logprob: -4.756910800933838
    6. '       ' → logprob: -6.131910800933838
    7. 'vals' → logprob: -6.256910800933838
    8. 'r' → logprob: -6.506910800933838
    9. 'for' → logprob: -6.631910800933838
    10. '   ' → logprob: -6.631910800933838

Token 557: ' print' (ID: 2123)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.764888346195221
    2. 'res' → logprob: -1.3898882865905762
    3. 'return' → logprob: -1.6398882865905762
    4. 'result' → logprob: -3.889888286590576
    5. 'prod' → logprob: -3.889888286590576
    6. 'm' → logprob: -4.639888286590576
    7. 'r' → logprob: -5.014888286590576
    8. ' ans' → logprob: -5.514888286590576
    9. 'ret' → logprob: -5.639888286590576
    10. ' return' → logprob: -5.639888286590576

Token 558: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5300082564353943
    2. '("' → logprob: -1.655008316040039
    3. '(*' → logprob: -2.655008316040039
    4. '(
' → logprob: -3.155008316040039
    5. '(tuple' → logprob: -3.530008316040039
    6. '(max' → logprob: -3.655008316040039
    7. '(re' → logprob: -4.155008316040039
    8. '(ans' → logprob: -4.530008316040039
    9. '(sum' → logprob: -5.030008316040039
    10. '()' → logprob: -5.530008316040039

Token 559: 'de' (ID: 613)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4908296465873718
    2. '",' → logprob: -1.4908297061920166
    3. 'max' → logprob: -3.3658297061920166
    4. '"' → logprob: -3.4908297061920166
    5. ' ans' → logprob: -3.7408297061920166
    6. '")' → logprob: -4.4908294677734375
    7. '[' → logprob: -4.4908294677734375
    8. '(ans' → logprob: -5.1158294677734375
    9. ' max' → logprob: -5.3658294677734375
    10. ' ",' → logprob: -5.3658294677734375

Token 560: 'ux' (ID: 1778)
  Prédit: 'bug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bug' → logprob: -0.3595482409000397
    2. 'f' → logprob: -1.7345482110977173
    3. 'ans' → logprob: -3.984548330307007
    4. 'ux' → logprob: -4.234548091888428
    5. 'b' → logprob: -4.359548091888428
    6. 'pth' → logprob: -4.359548091888428
    7. 'len' → logprob: -4.734548091888428
    8. 'p' → logprob: -5.234548091888428
    9. 'return' → logprob: -5.359548091888428
    10. 'max' → logprob: -5.484548091888428

Token 561: ' centres' (ID: 43504)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3028242290019989
    2. '_ans' → logprob: -2.4278242588043213
    3. ' ans' → logprob: -2.6778242588043213
    4. ')' → logprob: -3.9278242588043213
    5. '_' → logprob: -4.427824020385742
    6. ' listes' → logprob: -4.427824020385742
    7. '   ' → logprob: -4.677824020385742
    8. 's' → logprob: -4.802824020385742
    9. ' lists' → logprob: -5.177824020385742
    10. 'answers' → logprob: -5.677824020385742

Token 562: ' :",' (ID: 177987)
  Prédit: ':",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':",' → logprob: -0.8786692023277283
    2. ' :",' → logprob: -1.753669261932373
    3. ':' → logprob: -2.003669261932373
    4. '")' → logprob: -2.503669261932373
    5. ' :' → logprob: -3.128669261932373
    6. '",' → logprob: -3.503669261932373
    7. ')' → logprob: -4.128669261932373
    8. ' possibles' → logprob: -4.253669261932373
    9. ')")' → logprob: -4.253669261932373
    10. ',' → logprob: -4.503669261932373

Token 563: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.32270845770835876
    2. ' ans' → logprob: -1.5727084875106812
    3. '[' → logprob: -3.3227083683013916
    4. ' [' → logprob: -4.572708606719971
    5. '(ans' → logprob: -4.697708606719971
    6. ' max' → logprob: -6.072708606719971
    7. 'max' → logprob: -6.322708606719971
    8. '   ' → logprob: -6.572708606719971
    9. '[min' → logprob: -6.697708606719971
    10. '[max' → logprob: -6.822708606719971

Token 564: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022624261677265167
    2. '=' → logprob: -4.522624492645264
    3. ' =' → logprob: -4.897624492645264
    4. ')' → logprob: -6.272624492645264
    5. '=[' → logprob: -7.147624492645264
    6. ')
' → logprob: -8.397624015808105
    7. '   ' → logprob: -8.772624015808105
    8. '=(' → logprob: -8.772624015808105
    9. '[' → logprob: -8.772624015808105
    10. '_' → logprob: -9.397624015808105

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021428609266877174
    2. ' ,' → logprob: -4.39642858505249
    3. ')' → logprob: -4.89642858505249
    4. ')
' → logprob: -7.14642858505249
    5. ' +' → logprob: -8.396429061889648
    6. '),' → logprob: -9.396429061889648
    7. ',
' → logprob: -9.396429061889648
    8. '   ' → logprob: -9.646429061889648
    9. '       ' → logprob: -10.396429061889648
    10. '+' → logprob: -10.521429061889648

Token 566: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20201557874679565
    2. ' ans' → logprob: -2.3270156383514404
    3. '"' → logprob: -2.5770156383514404
    4. '",' → logprob: -5.827015399932861
    5. '   ' → logprob: -6.077015399932861
    6. ' "' → logprob: -6.452015399932861
    7. ' ' → logprob: -7.952015399932861
    8. ',' → logprob: -7.952015399932861
    9. '     ' → logprob: -8.20201587677002
    10. '       ' → logprob: -8.32701587677002

Token 567: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3959921896457672
    2. '1' → logprob: -1.1459921598434448
    3. '",' → logprob: -5.270992279052734
    4. '"' → logprob: -7.020992279052734
    5. '")' → logprob: -7.145992279052734
    6. 'ans' → logprob: -7.270992279052734
    7. ')' → logprob: -8.020992279052734
    8. '',' → logprob: -8.145992279052734
    9. ',' → logprob: -8.645992279052734
    10. '[' → logprob: -8.895992279052734

Token 568: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7991772890090942
    2. '       ' → logprob: -1.1741772890090942
    3. ')' → logprob: -1.4241772890090942
    4. ')
' → logprob: -8.674177169799805
    5. ',' → logprob: -9.049177169799805
    6. '")' → logprob: -10.424177169799805
    7. '
' → logprob: -10.549177169799805
    8. '#' → logprob: -10.549177169799805
    9. '   ' → logprob: -10.674177169799805
    10. '")
' → logprob: -10.799177169799805

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21857452392578125
    2. '
' → logprob: -2.7185745239257812
    3. '   ' → logprob: -3.0935745239257812
    4. 'return' → logprob: -3.7185745239257812
    5. ' return' → logprob: -3.7185745239257812
    6. ' if' → logprob: -4.843574523925781
    7. 'result' → logprob: -4.843574523925781
    8. ')' → logprob: -5.843574523925781
    9. 'if' → logprob: -6.093574523925781
    10. 'ans' → logprob: -6.343574523925781

Token 570: ' leaves' (ID: 15657)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8141147494316101
    2. 'ans' → logprob: -1.0641148090362549
    3. 'res' → logprob: -2.314114809036255
    4. 'prod' → logprob: -2.939114809036255
    5. '   ' → logprob: -4.439114570617676
    6. 'm' → logprob: -5.064114570617676
    7. 'result' → logprob: -5.189114570617676
    8. '       ' → logprob: -5.189114570617676
    9. 'ret' → logprob: -5.439114570617676
    10. 'p' → logprob: -5.564114570617676

Token 571: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026477128267288208
    2. '=' → logprob: -3.776477098464966
    3. '1' → logprob: -6.526477336883545
    4. '   ' → logprob: -7.776477336883545
    5. '_count' → logprob: -8.026476860046387
    6. ',' → logprob: -8.276476860046387
    7. '_counts' → logprob: -8.526476860046387
    8. 's' → logprob: -8.651476860046387
    9. '=[' → logprob: -8.776476860046387
    10. 'count' → logprob: -10.276476860046387

Token 572: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9165839552879333
    2. '[max' → logprob: -0.9165839552879333
    3. ' [' → logprob: -2.916584014892578
    4. '[min' → logprob: -3.041584014892578
    5. 'tuple' → logprob: -3.291584014892578
    6. 'max' → logprob: -4.041584014892578
    7. ' tuple' → logprob: -4.166584014892578
    8. '[list' → logprob: -4.916584014892578
    9. 'list' → logprob: -5.291584014892578
    10. '[u' → logprob: -5.291584014892578

Token 573: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5364741683006287
    2. '[max' → logprob: -1.5364742279052734
    3. 'max' → logprob: -2.9114742279052734
    4. 'tuple' → logprob: -3.1614742279052734
    5. 'sum' → logprob: -3.7864742279052734
    6. 'list' → logprob: -3.9114742279052734
    7. '[u' → logprob: -4.161474227905273
    8. 'reduce' → logprob: -4.286474227905273
    9. '[min' → logprob: -4.286474227905273
    10. '[list' → logprob: -4.911474227905273

Token 574: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11251300573348999
    2. ' +' → logprob: -2.4875130653381348
    3. '+' → logprob: -4.362513065338135
    4. ',' → logprob: -5.112513065338135
    5. ' =' → logprob: -7.237513065338135
    6. '
' → logprob: -7.487513065338135
    7. ' 
' → logprob: -7.737513065338135
    8. 'le' → logprob: -7.737513065338135
    9. '+
' → logprob: -7.862513065338135
    10. '   ' → logprob: -7.987513065338135

Token 575: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0480785146355629
    2. '<|end|>' → logprob: -4.298078536987305
    3. ',' → logprob: -4.548078536987305
    4. ' 
' → logprob: -5.298078536987305
    5. ' +' → logprob: -5.923078536987305
    6. '    
' → logprob: -5.923078536987305
    7. '  
' → logprob: -6.048078536987305
    8. ' ,' → logprob: -6.423078536987305
    9. ' *' → logprob: -6.423078536987305
    10. '*' → logprob: -7.048078536987305

Token 576: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000600572966504842
    2. ' for' → logprob: -7.500600337982178
    3. 'le' → logprob: -10.875600814819336
    4. 'ans' → logprob: -11.000600814819336
    5. 'res' → logprob: -12.250600814819336
    6. 'from' → logprob: -13.375600814819336
    7. 'result' → logprob: -13.625600814819336
    8. '   ' → logprob: -13.875600814819336
    9. 'max' → logprob: -14.500600814819336
    10. 'while' → logprob: -14.875600814819336

Token 577: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007298283162526786
    2. '       ' → logprob: -7.625730037689209
    3. 'le' → logprob: -8.75072956085205
    4. '   ' → logprob: -10.37572956085205
    5. ' for' → logprob: -10.50072956085205
    6. 'ans' → logprob: -11.12572956085205
    7. 'from' → logprob: -12.87572956085205
    8. 'res' → logprob: -13.25072956085205
    9. '           ' → logprob: -14.12572956085205
    10. 'result' → logprob: -14.62572956085205

Token 578: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.035918112844228745
    2. ' i' → logprob: -3.9109179973602295
    3. 'd' → logprob: -4.910918235778809
    4. 'x' → logprob: -6.160918235778809
    5. 'depth' → logprob: -6.410918235778809
    6. 'k' → logprob: -6.910918235778809
    7. '_' → logprob: -7.785918235778809
    8. '_i' → logprob: -8.035918235778809
    9. 'for' → logprob: -8.160918235778809
    10. 'c' → logprob: -8.285918235778809

Token 579: ' profondeur' (ID: 128210)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3873070776462555
    2. ' i' → logprob: -1.137307047843933
    3. 'k' → logprob: -9.012307167053223
    4. 'd' → logprob: -9.387307167053223
    5. 'x' → logprob: -9.887307167053223
    6. ' d' → logprob: -10.012307167053223
    7. ' k' → logprob: -10.762307167053223
    8. 'depth' → logprob: -10.887307167053223
    9. ' in' → logprob: -11.262307167053223
    10. 'j' → logprob: -11.762307167053223

Token 580: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31417739391326904
    2. ' for' → logprob: -1.814177393913269
    3. ' i' → logprob: -2.8141775131225586
    4. 'for' → logprob: -3.4391775131225586
    5. '       ' → logprob: -4.939177513122559
    6. 'in' → logprob: -5.439177513122559
    7. 'i' → logprob: -6.814177513122559
    8. '   ' → logprob: -6.814177513122559
    9. ',' → logprob: -7.814177513122559
    10. ' _' → logprob: -9.064177513122559

Token 581: ' prendre' (ID: 24257)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5767847895622253
    2. ' for' → logprob: -0.8267847895622253
    3. '       ' → logprob: -7.201784610748291
    4. 'le' → logprob: -9.82678508758545
    5. ' leaves' → logprob: -10.20178508758545
    6. '   ' → logprob: -12.82678508758545
    7. '	for' → logprob: -13.20178508758545
    8. '           ' → logprob: -13.70178508758545
    9. ' ' → logprob: -14.20178508758545
    10. ' ' → logprob: -14.45178508758545

Token 582: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5227777361869812
    2. ' max' → logprob: -1.022777795791626
    3. ' leaves' → logprob: -3.397777795791626
    4. 'le' → logprob: -4.397777557373047
    5. 'ans' → logprob: -7.022777557373047
    6. ' ans' → logprob: -7.772777557373047
    7. '   ' → logprob: -8.897777557373047
    8. ' the' → logprob: -9.647777557373047
    9. 'mul' → logprob: -10.397777557373047
    10. ' ' → logprob: -10.522777557373047

Token 583: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003301174147054553
    2. ' max' → logprob: -5.87830114364624
    3. 'le' → logprob: -8.503301620483398
    4. 'mul' → logprob: -8.628301620483398
    5. 'ans' → logprob: -9.753301620483398
    6. ' leaves' → logprob: -10.753301620483398
    7. 'maximum' → logprob: -11.253301620483398
    8. 'min' → logprob: -11.503301620483398
    9. ' ' → logprob: -13.503301620483398
    10. '   ' → logprob: -13.628301620483398

Token 584: ' des' (ID: 731)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.1069912910461426
    2. ' between' → logprob: -1.2319912910461426
    3. '(ans' → logprob: -2.1069912910461426
    4. ' for' → logprob: -2.4819912910461426
    5. ' entre' → logprob: -2.7319912910461426
    6. ',' → logprob: -4.106991291046143
    7. ' (' → logprob: -4.106991291046143
    8. 'ans' → logprob: -4.356991291046143
    9. ' of' → logprob: -4.731991291046143
    10. ' leaves' → logprob: -4.981991291046143

Token 585: ' deux' (ID: 10301)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.23143205046653748
    2. '(ans' → logprob: -1.6064320802688599
    3. 'a' → logprob: -5.98143196105957
    4. '[' → logprob: -6.98143196105957
    5. '(a' → logprob: -7.35643196105957
    6. ' ans' → logprob: -7.48143196105957
    7. 'max' → logprob: -7.85643196105957
    8. 'x' → logprob: -8.60643196105957
    9. '[a' → logprob: -8.60643196105957
    10. '(x' → logprob: -9.10643196105957

Token 586: ' centres' (ID: 43504)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32225501537323
    2. ' ans' → logprob: -2.6972551345825195
    3. 'for' → logprob: -2.6972551345825195
    4. ',' → logprob: -2.9472551345825195
    5. ' leaves' → logprob: -3.0722551345825195
    6. ':' → logprob: -4.4472551345825195
    7. ' ,' → logprob: -5.8222551345825195
    8. ':
' → logprob: -5.9472551345825195
    9. '(ans' → logprob: -5.9472551345825195
    10. 'tokens' → logprob: -6.1972551345825195

Token 587: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.669519305229187
    2. ' for' → logprob: -1.169519305229187
    3. ' leaves' → logprob: -2.6695194244384766
    4. '<|end|>' → logprob: -3.4195194244384766
    5. '   ' → logprob: -3.6695194244384766
    6. 'for' → logprob: -3.6695194244384766
    7. ',' → logprob: -4.169519424438477
    8. '[' → logprob: -6.544519424438477
    9. ' ' → logprob: -6.669519424438477
    10. '<|end|>' → logprob: -7.044519424438477

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30012041330337524
    2. ',' → logprob: -2.5501203536987305
    3. '   ' → logprob: -3.1751203536987305
    4. ' for' → logprob: -3.1751203536987305
    5. ' leaves' → logprob: -3.3001203536987305
    6. '<|end|>' → logprob: -4.0501203536987305
    7. ' ' → logprob: -4.4251203536987305
    8. '        
' → logprob: -5.4251203536987305
    9. ' ,' → logprob: -5.5501203536987305
    10. '           ' → logprob: -5.8001203536987305

Token 589: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26566004753112793
    2. 'for' (adapté à ' for') → logprob: -1.515660047531128
    3. '       ' → logprob: -5.015660285949707
    4. ' leaves' → logprob: -5.265660285949707
    5. ' ' → logprob: -7.515660285949707
    6. '   ' → logprob: -7.890660285949707
    7. '[' → logprob: -8.390660285949707
    8. '<|end|>' → logprob: -8.515660285949707
    9. 'le' → logprob: -8.765660285949707
    10. ' 
' → logprob: -9.515660285949707

Token 590: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08331147581338882
    2. ' i' → logprob: -2.5833115577697754
    3. 'x' → logprob: -6.083311557769775
    4. 'd' → logprob: -6.458311557769775
    5. ' d' → logprob: -8.583311080932617
    6. 'k' → logprob: -9.208311080932617
    7. ' x' → logprob: -9.333311080932617
    8. 'depth' → logprob: -9.708311080932617
    9. '   ' → logprob: -10.708311080932617
    10. 'a' → logprob: -10.958311080932617

Token 591: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6190606951713562
    2. ',' → logprob: -1.494060754776001
    3. ' ,' → logprob: -1.494060754776001
    4. 'in' → logprob: -4.744060516357422
    5. ' ' → logprob: -5.994060516357422
    6. ' i' → logprob: -7.369060516357422
    7. '  ' → logprob: -7.869060516357422
    8. ' ans' → logprob: -9.369060516357422
    9. ' and' → logprob: -10.244060516357422
    10. '1' → logprob: -10.369060516357422

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014899849193170667
    2. ' ,' → logprob: -6.626490116119385
    3. ',a' → logprob: -9.126489639282227
    4. ' in' → logprob: -10.126489639282227
    5. '_,' → logprob: -12.501489639282227
    6. ',i' → logprob: -13.001489639282227
    7. ',v' → logprob: -13.751489639282227
    8. 'a' → logprob: -13.876489639282227
    9. ',n' → logprob: -14.251489639282227
    10. ',b' → logprob: -14.251489639282227

Token 593: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011047814972698689
    2. ' a' → logprob: -4.511047840118408
    3. '	a' → logprob: -16.76104736328125
    4. ' ' → logprob: -18.01104736328125
    5. '   ' → logprob: -18.26104736328125
    6. ',a' → logprob: -18.76104736328125
    7. '  ' → logprob: -19.13604736328125
    8. '#a' → logprob: -19.13604736328125
    9. '    ' → logprob: -19.26104736328125
    10. '(a' → logprob: -19.51104736328125

Token 594: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006173605564981699
    2. ',' → logprob: -5.381173610687256
    3. '2' → logprob: -6.506173610687256
    4. ' ,' → logprob: -10.131173133850098
    5. ',a' → logprob: -11.631173133850098
    6. 'a' → logprob: -12.381173133850098
    7. ' ' → logprob: -13.131173133850098
    8. ',_' → logprob: -14.256173133850098
    9. 's' → logprob: -14.631173133850098
    10. ',
' → logprob: -15.131173133850098

Token 595: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03387989103794098
    2. 'in' → logprob: -3.4088799953460693
    3. ',' → logprob: -8.908880233764648
    4. ' ' → logprob: -10.408880233764648
    5. 'a' → logprob: -10.533880233764648
    6. 's' → logprob: -11.908880233764648
    7. '_in' → logprob: -12.658880233764648
    8. 'import' → logprob: -12.783880233764648
    9. '    ' → logprob: -12.783880233764648
    10. '=' → logprob: -13.033880233764648

Token 596: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.07889463007450104
    2. ' zip' → logprob: -2.57889461517334
    3. '(zip' → logprob: -12.45389461517334
    4. ' ' → logprob: -15.07889461517334
    5. '.zip' → logprob: -15.07889461517334
    6. '   ' → logprob: -16.203895568847656
    7. 'z' → logprob: -16.328895568847656
    8. 'map' → logprob: -16.453895568847656
    9. '_zip' → logprob: -16.453895568847656
    10. '  ' → logprob: -17.703895568847656

Token 597: '(ans' (ID: 70054)
  Prédit: '_long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -0.08922930061817169
    2. '(ans' → logprob: -2.4642293453216553
    3. '(' → logprob: -8.714229583740234
    4. 'long' → logprob: -10.089229583740234
    5. '_(' → logprob: -10.464229583740234
    6. '_' → logprob: -10.839229583740234
    7. ' (' → logprob: -11.339229583740234
    8. 'Long' → logprob: -11.964229583740234
    9. '(answer' → logprob: -12.714229583740234
    10. '(_' → logprob: -12.964229583740234

Token 598: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010465048253536224
    2. '(ans' → logprob: -7.251046657562256
    3. ',' → logprob: -8.751046180725098
    4. '(' → logprob: -9.501046180725098
    5. ')' → logprob: -10.126046180725098
    6. 'ans' → logprob: -11.251046180725098
    7. 's' → logprob: -11.751046180725098
    8. '(a' → logprob: -12.251046180725098
    9. '[' → logprob: -12.376046180725098
    10. '),' → logprob: -12.376046180725098

Token 599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03873589262366295
    2. ',a' → logprob: -3.288735866546631
    3. ' ,' → logprob: -7.288735866546631
    4. 'a' → logprob: -12.163736343383789
    5. '(),' → logprob: -13.663736343383789
    6. ',v' → logprob: -14.163736343383789
    7. ',",' → logprob: -14.413736343383789
    8. ',b' → logprob: -14.788736343383789
    9. '_,' → logprob: -14.913736343383789
    10. '(a' → logprob: -14.913736343383789

Token 600: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3870379626750946
    2. ' ans' → logprob: -1.137037992477417
    3. 'a' → logprob: -9.012038230895996
    4. ' a' → logprob: -11.262038230895996
    5. '   ' → logprob: -11.387038230895996
    6. '	ans' → logprob: -12.137038230895996
    7. '           ' → logprob: -12.262038230895996
    8. '(ans' → logprob: -12.387038230895996
    9. '       ' → logprob: -13.012038230895996
    10. ' ' → logprob: -13.137038230895996

Token 601: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ')' → logprob: -14.875001907348633
    3. '₂' → logprob: -15.000001907348633
    4. '۲' → logprob: -15.125001907348633
    5. '２' → logprob: -16.125001907348633
    6. '(' → logprob: -16.750001907348633
    7. '```' → logprob: -16.937501907348633
    8. '_' → logprob: -17.250001907348633
    9. '22' → logprob: -17.437501907348633
    10. ' ' → logprob: -17.625001907348633

Token 602: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.523443877696991
    2. '):
' → logprob: -0.898443877696991
    3. '):
' → logprob: -8.648444175720215
    4. ':' → logprob: -9.273444175720215
    5. ',' → logprob: -11.148444175720215
    6. ' ):' → logprob: -11.898444175720215
    7. '       ' → logprob: -11.898444175720215
    8. '   ' → logprob: -12.273444175720215
    9. ' ):
' → logprob: -12.523444175720215
    10. ':
' → logprob: -12.773444175720215

Token 603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019989218562841415
    2. '            ' → logprob: -4.894989013671875
    3. ' ' → logprob: -6.019989013671875
    4. ',' → logprob: -6.144989013671875
    5. ':' → logprob: -6.644989013671875
    6. '            
' → logprob: -6.769989013671875
    7. '               ' → logprob: -6.894989013671875
    8. '<|end|>' → logprob: -6.894989013671875
    9. ':
' → logprob: -7.269989013671875
    10. '[' → logprob: -7.394989013671875

Token 604: ' leaves' (ID: 15657)
  Prédit: ' leaves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaves' → logprob: -0.006305104121565819
    2. 'le' → logprob: -5.38130521774292
    3. '           ' → logprob: -6.50630521774292
    4. ' if' → logprob: -9.631304740905762
    5. '               ' → logprob: -9.756304740905762
    6. '            ' → logprob: -10.506304740905762
    7. ' le' → logprob: -11.256304740905762
    8. ' ' → logprob: -11.506304740905762
    9. '   ' → logprob: -12.131304740905762
    10. '       ' → logprob: -12.381304740905762

Token 605: ' *=' (ID: 25253)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5766367316246033
    2. '=' → logprob: -0.8266367316246033
    3. '=max' → logprob: -7.576636791229248
    4. ',' → logprob: -10.07663631439209
    5. ' *=' → logprob: -10.20163631439209
    6. '*=' → logprob: -10.45163631439209
    7. ' +=' → logprob: -11.07663631439209
    8. '   ' → logprob: -11.45163631439209
    9. '+=' → logprob: -11.57663631439209
    10. '    ' → logprob: -11.70163631439209

Token 606: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5895412564277649
    2. 'a' → logprob: -0.9645412564277649
    3. ' max' → logprob: -2.96454119682312
    4. '(max' → logprob: -4.964541435241699
    5. ' a' → logprob: -5.464541435241699
    6. '(a' → logprob: -6.714541435241699
    7. ' (' → logprob: -8.4645414352417
    8. '(' → logprob: -11.0895414352417
    9. '   ' → logprob: -11.7145414352417
    10. ' ' → logprob: -12.4645414352417

Token 607: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.319370302458992e-06
    2. '(' → logprob: -12.250005722045898
    3. 'a' → logprob: -14.500005722045898
    4. '((' → logprob: -17.3750057220459
    5. '(
' → logprob: -18.1250057220459
    6. ' (' → logprob: -19.1250057220459
    7. '([' → logprob: -19.7500057220459
    8. '[a' → logprob: -21.1250057220459
    9. '   ' → logprob: -21.6250057220459
    10. ' a' → logprob: -22.2500057220459

Token 608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.692145012086257e-05
    2. '(a' → logprob: -10.125046730041504
    3. '(' → logprob: -12.500046730041504
    4. 'a' → logprob: -14.000046730041504
    5. ' ' → logprob: -14.875046730041504
    6. ' (' → logprob: -15.125046730041504
    7. ')' → logprob: -15.250046730041504
    8. '[a' → logprob: -15.312546730041504
    9. ',' → logprob: -15.437546730041504
    10. ' a' → logprob: -15.562546730041504

Token 609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032784834038466215
    2. ',a' → logprob: -6.2532782554626465
    3. ' ,' → logprob: -6.6282782554626465
    4. 'a' → logprob: -10.628278732299805
    5. ',max' → logprob: -13.378278732299805
    6. ',
' → logprob: -14.753278732299805
    7. ' a' → logprob: -15.378278732299805
    8. ',m' → logprob: -16.503278732299805
    9. ',

' → logprob: -16.753278732299805
    10. '   ' → logprob: -18.003278732299805

Token 610: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.048587486147880554
    2. ' a' → logprob: -3.0485875606536865
    3. ' ' → logprob: -17.048587799072266
    4. '   ' → logprob: -17.173587799072266
    5. '(a' → logprob: -18.048587799072266
    6. '	a' → logprob: -18.048587799072266
    7. ' max' → logprob: -18.298587799072266
    8. '    ' → logprob: -19.423587799072266
    9. '  ' → logprob: -19.673587799072266
    10. 'max' → logprob: -20.048587799072266

Token 611: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '
' → logprob: -17.000001907348633
    4. '   ' → logprob: -17.000001907348633
    5. '₂' → logprob: -17.562501907348633
    6. '۲' → logprob: -17.750001907348633
    7. '```' → logprob: -17.875001907348633
    8. ',' → logprob: -17.937501907348633
    9. '1' → logprob: -18.125001907348633
    10. ' a' → logprob: -18.125001907348633

Token 612: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001613459608051926
    2. ' )' → logprob: -9.000161170959473
    3. '<|end|>' → logprob: -10.750161170959473
    4. ')
' → logprob: -11.875161170959473
    5. ')*' → logprob: -12.125161170959473
    6. ',' → logprob: -13.875161170959473
    7. ')}' → logprob: -15.000161170959473
    8. ')+' → logprob: -15.000161170959473
    9. '*)' → logprob: -15.250161170959473
    10. '),' → logprob: -15.250161170959473

Token 613: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8367853164672852
    2. '   ' → logprob: -0.9617853164672852
    3. ' return' → logprob: -2.211785316467285
    4. 'return' (adapté à ' return') → logprob: -2.836785316467285
    5. '<|end|>' → logprob: -5.586785316467285
    6. ')' → logprob: -5.836785316467285
    7. '
' → logprob: -6.211785316467285
    8. ' 
' → logprob: -6.336785316467285
    9. '        
' → logprob: -6.711785316467285
    10. ' ' → logprob: -6.961785316467285

Token 615: ' (' (ID: 350)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.65281081199646
    2. '(le' → logprob: -1.15281081199646
    3. '(l' → logprob: -2.52781081199646
    4. 'l' → logprob: -3.27781081199646
    5. ' leaves' → logprob: -3.90281081199646
    6. '(u' → logprob: -4.652811050415039
    7. '(' → logprob: -4.777811050415039
    8. ' (' → logprob: -5.027811050415039
    9. ' l' → logprob: -7.652811050415039
    10. '(v' → logprob: -8.402811050415039

Token 616: 'len' (ID: 3303)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.18042422831058502
    2. 'l' → logprob: -1.8054242134094238
    3. ' leaves' → logprob: -8.055424690246582
    4. 'len' → logprob: -9.305424690246582
    5. '1' → logprob: -9.430424690246582
    6. 'leaf' → logprob: -9.805424690246582
    7. 'c' → logprob: -10.430424690246582
    8. '(le' → logprob: -10.930424690246582
    9. '   ' → logprob: -11.180424690246582
    10. '2' → logprob: -11.180424690246582

Token 617: '(ans' (ID: 70054)
  Prédit: '(le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(le' → logprob: -0.38963815569877625
    2. '(path' → logprob: -1.1396381855010986
    3. '(' → logprob: -6.2646379470825195
    4. '(set' → logprob: -7.5146379470825195
    5. 'le' → logprob: -8.63963794708252
    6. '(ans' → logprob: -10.26463794708252
    7. 'path' → logprob: -10.26463794708252
    8. '(paths' → logprob: -11.63963794708252
    9. '(link' → logprob: -11.88963794708252
    10. ')' → logprob: -12.26463794708252

Token 618: '1' (ID: 16)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5418969392776489
    2. '(le' → logprob: -0.9168969392776489
    3. 'le' → logprob: -5.041896820068359
    4. 'ans' → logprob: -5.041896820068359
    5. '(' → logprob: -5.916896820068359
    6. ')' → logprob: -6.291896820068359
    7. 's' → logprob: -7.416896820068359
    8. ',' → logprob: -8.91689682006836
    9. '1' → logprob: -9.66689682006836
    10. '(s' → logprob: -9.79189682006836

Token 619: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07647259533405304
    2. '),' → logprob: -2.701472520828247
    3. ' ,' → logprob: -5.201472759246826
    4. ')' → logprob: -7.826472759246826
    5. '[' → logprob: -8.951472282409668
    6. ' ),' → logprob: -8.951472282409668
    7. '-' → logprob: -9.076472282409668
    8. ' -' → logprob: -9.451472282409668
    9. '   ' → logprob: -9.951472282409668
    10. ',),' → logprob: -10.451472282409668

Token 620: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.4741167724132538
    2. ' leaves' → logprob: -0.9741168022155762
    3. '   ' → logprob: -11.474116325378418
    4. ' le' → logprob: -11.974116325378418
    5. ' ' → logprob: -12.099116325378418
    6. 'leaf' → logprob: -12.349116325378418
    7. ' ' → logprob: -12.599116325378418
    8. 'Leaves' → logprob: -13.474116325378418
    9. '(le' → logprob: -13.599116325378418
    10. 'les' → logprob: -13.849116325378418

Token 621: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006639453349635005
    2. ',' → logprob: -8.250663757324219
    3. '<|end|>' → logprob: -8.375663757324219
    4. ')
' → logprob: -8.875663757324219
    5. '   ' → logprob: -10.750663757324219
    6. ')return' → logprob: -12.750663757324219
    7. ' )' → logprob: -13.000663757324219
    8. '       ' → logprob: -13.250663757324219
    9. '<|end|>' → logprob: -14.000663757324219
    10. '),' → logprob: -14.250663757324219

Token 622: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020477421581745148
    2. ' ' → logprob: -4.270477294921875
    3. 'le' → logprob: -5.895477294921875
    4. '4' → logprob: -7.145477294921875
    5. '1' → logprob: -7.145477294921875
    6. '(' → logprob: -7.270477294921875
    7. ' leaves' → logprob: -7.770477294921875
    8. '3' → logprob: -8.395477294921875
    9. ' (' → logprob: -9.145477294921875
    10. '(le' → logprob: -9.645477294921875

Token 623: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019693158101290464
    2. 'le' → logprob: -7.251969337463379
    3. '1' → logprob: -8.001969337463379
    4. '4' → logprob: -8.376969337463379
    5. '(' → logprob: -8.876969337463379
    6. ' ' → logprob: -9.251969337463379
    7. 'len' → logprob: -9.376969337463379
    8. '(le' → logprob: -9.376969337463379
    9. '3' → logprob: -9.626969337463379
    10. '(n' → logprob: -10.126969337463379

Token 624: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.47626737493556e-05
    2. '   ' → logprob: -11.25003433227539
    3. ')
' → logprob: -11.25003433227539
    4. ' )' → logprob: -11.87503433227539
    5. ')return' → logprob: -14.37503433227539
    6. '       ' → logprob: -14.62503433227539
    7. '<|end|>' → logprob: -14.87503433227539
    8. '),' → logprob: -16.87503433227539
    9. '))' → logprob: -17.12503433227539
    10. ')}' → logprob: -17.62503433227539

Token 625: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2897056043148041
    2. '   ' → logprob: -1.9147056341171265
    3. ' else' → logprob: -3.164705514907837
    4. '<|end|>' → logprob: -3.789705514907837
    5. ')' → logprob: -4.414705753326416
    6. '
' → logprob: -4.539705753326416
    7. '    
' → logprob: -4.914705753326416
    8. 'elif' → logprob: -5.539705753326416
    9. '```' → logprob: -6.664705753326416
    10. '	else' → logprob: -7.164705753326416

Token 626: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.027392927557229996
    2. 'return' → logprob: -4.027392864227295
    3. ' else' → logprob: -4.902392864227295
    4. '   ' → logprob: -7.277392864227295
    5. '
' → logprob: -7.902392864227295
    6. ' return' → logprob: -8.402393341064453
    7. 'elif' → logprob: -8.777393341064453
    8. '#' → logprob: -9.027393341064453
    9. ')' → logprob: -9.902393341064453
    10. ')
' → logprob: -10.152393341064453

Token 627: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8406809568405151
    2. ':' → logprob: -0.9656809568405151
    3. '       ' → logprob: -1.7156809568405151
    4. '   ' → logprob: -5.215681076049805
    5. ' :
' → logprob: -6.590681076049805
    6. '    ' → logprob: -7.840681076049805
    7. ' :' → logprob: -7.840681076049805
    8. '        ' → logprob: -8.840681076049805
    9. '     ' → logprob: -10.215681076049805
    10. 'u' → logprob: -10.340681076049805

Token 628: '       ' (ID: 309)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5153483748435974
    2. '   ' → logprob: -1.5153484344482422
    3. 'u' → logprob: -1.7653484344482422
    4. ' v' → logprob: -5.515348434448242
    5. '       ' → logprob: -5.640348434448242
    6. 'v' → logprob: -5.640348434448242
    7. '```' → logprob: -7.640348434448242
    8. ' c' → logprob: -10.140348434448242
    9. '	u' → logprob: -10.390348434448242
    10. 'c' → logprob: -10.515348434448242

Token 629: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.22689814865589142
    2. 'ans' → logprob: -1.726898193359375
    3. 'return' → logprob: -4.476898193359375
    4. 'a' → logprob: -5.976898193359375
    5. '   ' → logprob: -6.101898193359375
    6. ' u' → logprob: -6.226898193359375
    7. 'c' → logprob: -6.351898193359375
    8. 'l' → logprob: -6.726898193359375
    9. 'center' → logprob: -6.851898193359375
    10. ' ans' → logprob: -7.101898193359375

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4809790253639221
    2. '=' → logprob: -0.9809790253639221
    3. ',' → logprob: -4.980978965759277
    4. '   ' → logprob: -13.230978965759277
    5. 'v' → logprob: -13.355978965759277
    6. ' ' → logprob: -13.355978965759277
    7. '=v' → logprob: -13.355978965759277
    8. ' ,' → logprob: -13.980978965759277
    9. ',v' → logprob: -14.105978965759277
    10. '       ' → logprob: -14.980978965759277

Token 631: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.04300422966480255
    2. 'path' → logprob: -3.168004274368286
    3. '(path' → logprob: -13.168004035949707
    4. '   ' → logprob: -13.418004035949707
    5. ' ' → logprob: -14.543004035949707
    6. '	path' → logprob: -14.793004035949707
    7. '[path' → logprob: -15.668004035949707
    8. 'v' → logprob: -15.918004035949707
    9. '"path' → logprob: -16.480504989624023
    10. '    ' → logprob: -16.855504989624023

Token 632: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.003788323374465108
    2. '[(' → logprob: -5.628788471221924
    3. '[len' → logprob: -8.753787994384766
    4. '[' → logprob: -11.378787994384766
    5. '[l' → logprob: -11.878787994384766
    6. '[path' → logprob: -12.128787994384766
    7. ' [' → logprob: -12.628787994384766
    8. 'c' → logprob: -14.003787994384766
    9. '[
' → logprob: -14.253787994384766
    10. ' =' → logprob: -14.753787994384766

Token 633: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.16022889316082
    2. ' //' → logprob: -1.9102288484573364
    3. ' ' → logprob: -12.910228729248047
    4. '[' → logprob: -14.035228729248047
    5. '#' → logprob: -14.910228729248047
    6. '   ' → logprob: -14.910228729248047
    7. '[c' → logprob: -15.410228729248047
    8. '```' → logprob: -15.535228729248047
    9. '...' → logprob: -16.410228729248047
    10. ' ' → logprob: -16.660228729248047

Token 634: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005929393693804741
    2. ' ' → logprob: -5.130929470062256
    3. '1' → logprob: -14.130928993225098
    4. '   ' → logprob: -16.380929946899414
    5. '```' → logprob: -17.005929946899414
    6. '  ' → logprob: -18.255929946899414
    7. '``' → logprob: -19.130929946899414
    8. '/' → logprob: -19.380929946899414
    9. '
' → logprob: -19.630929946899414
    10. '0' → logprob: -19.755929946899414

Token 635: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003391574718989432
    2. ' ' → logprob: -8.00033950805664
    3. '1' → logprob: -12.62533950805664
    4. '   ' → logprob: -15.87533950805664
    5. '```' → logprob: -16.37533950805664
    6. '  ' → logprob: -16.75033950805664
    7. '
' → logprob: -17.12533950805664
    8. '3' → logprob: -18.50033950805664
    9. '``' → logprob: -18.62533950805664
    10. '

' → logprob: -18.87533950805664

Token 636: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6339011788368225
    2. ']' → logprob: -0.7589011788368225
    3. ']
' → logprob: -7.883901119232178
    4. '       ' → logprob: -8.258901596069336
    5. ')' → logprob: -8.633901596069336
    6. ')
' → logprob: -9.133901596069336
    7. ' ]' → logprob: -9.383901596069336
    8. '   ' → logprob: -9.508901596069336
    9. ' ]
' → logprob: -9.883901596069336
    10. 'def' → logprob: -10.133901596069336

Token 637: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2953604459762573
    2. '   ' → logprob: -1.9203604459762573
    3. '       ' → logprob: -2.295360565185547
    4. ' ans' → logprob: -5.295360565185547
    5. '
' → logprob: -6.545360565185547
    6. 'return' → logprob: -6.545360565185547
    7. '	ans' → logprob: -8.670360565185547
    8. '```' → logprob: -9.420360565185547
    9. '(ans' → logprob: -9.670360565185547
    10. 'answer' → logprob: -10.045360565185547

Token 638: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00026217024424113333
    2. '   ' → logprob: -8.625262260437012
    3. ' ans' → logprob: -10.750262260437012
    4. 'a' → logprob: -11.250262260437012
    5. 'res' → logprob: -11.375262260437012
    6. 'le' → logprob: -11.375262260437012
    7. '       ' → logprob: -11.625262260437012
    8. 'answer' → logprob: -12.250262260437012
    9. 'return' → logprob: -12.625262260437012
    10. 'answers' → logprob: -13.375262260437012

Token 639: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326544284820557
    2. ' =' → logprob: -1.3132654428482056
    3. '   ' → logprob: -13.063265800476074
    4. '1' → logprob: -14.438265800476074
    5. '(' → logprob: -14.813265800476074
    6. ')' → logprob: -15.813265800476074
    7. 's' → logprob: -15.813265800476074
    8. ' ' → logprob: -16.063264846801758
    9. '```' → logprob: -16.563264846801758
    10. '＝' → logprob: -17.188264846801758

Token 640: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132619559764862
    2. ' =' → logprob: -1.3132619857788086
    3. '   ' → logprob: -16.688261032104492
    4. ')' → logprob: -17.188261032104492
    5. ',' → logprob: -17.188261032104492
    6. ' ' → logprob: -17.563261032104492
    7. '  ' → logprob: -18.438261032104492
    8. 's' → logprob: -18.563261032104492
    9. '＝' → logprob: -18.563261032104492
    10. '[' → logprob: -18.688261032104492

Token 641: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.20142211019992828
    2. ' calc' → logprob: -1.701422095298767
    3. '   ' → logprob: -12.076421737670898
    4. '(calc' → logprob: -12.951421737670898
    5. ' ' → logprob: -15.076421737670898
    6. '.calc' → logprob: -15.701421737670898
    7. 'cal' → logprob: -15.951421737670898
    8. 'calculate' → logprob: -16.3264217376709
    9. '  ' → logprob: -17.0764217376709
    10. '    ' → logprob: -17.5764217376709

Token 642: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(
' → logprob: -18.875
    3. '```' → logprob: -19.625
    4. '(calc' → logprob: -20.125
    5. ' (' → logprob: -20.625
    6. '((' → logprob: -20.875
    7. 's' → logprob: -21.125
    8. '(lines' → logprob: -21.5
    9. ',' → logprob: -21.625
    10. '`' → logprob: -21.75

Token 643: 'links' (ID: 26581)
  Prédit: 'links'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.3132823705673218
    2. '(' → logprob: -1.3132823705673218
    3. ' links' → logprob: -11.438282012939453
    4. '.links' → logprob: -12.938282012939453
    5. '```' → logprob: -13.313282012939453
    6. '(
' → logprob: -13.563282012939453
    7. 'link' → logprob: -13.813282012939453
    8. ')' → logprob: -14.063282012939453
    9. '[' → logprob: -14.563282012939453
    10. 'l' → logprob: -15.313282012939453

Token 644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020547257736325264
    2. '(' → logprob: -3.8955471515655518
    3. ' ,' → logprob: -13.020546913146973
    4. ',
' → logprob: -13.645546913146973
    5. '```' → logprob: -14.145546913146973
    6. ')' → logprob: -14.645546913146973
    7. ' (' → logprob: -15.645546913146973
    8. '(v' → logprob: -15.770546913146973
    9. '   ' → logprob: -16.02054786682129
    10. ',(' → logprob: -16.39554786682129

Token 645: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007055507507175207
    2. ' v' → logprob: -5.007055282592773
    3. 'links' → logprob: -8.257055282592773
    4. ' links' → logprob: -9.507055282592773
    5. '   ' → logprob: -13.132055282592773
    6. '	v' → logprob: -13.632055282592773
    7. '       ' → logprob: -13.757055282592773
    8. '(v' → logprob: -14.382055282592773
    9. '[v' → logprob: -15.257055282592773
    10. '```' → logprob: -15.382055282592773

Token 646: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019984507525805384
    2. ' ,' → logprob: -9.125200271606445
    3. ',v' → logprob: -9.500200271606445
    4. 'v' → logprob: -11.500200271606445
    5. ',None' → logprob: -13.250200271606445
    6. 'None' → logprob: -13.375200271606445
    7. ',
' → logprob: -13.625200271606445
    8. '   ' → logprob: -14.250200271606445
    9. 'import' → logprob: -15.500200271606445
    10. '```' → logprob: -16.000200271606445

Token 647: ' None' (ID: 4662)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5242510437965393
    2. '-' → logprob: -0.8992510437965393
    3. '-v' → logprob: -7.6492509841918945
    4. ' -' → logprob: -8.024250984191895
    5. 'None' → logprob: -8.149250984191895
    6. ' v' → logprob: -11.524250984191895
    7. '0' → logprob: -11.649250984191895
    8. 'a' → logprob: -12.024250984191895
    9. '   ' → logprob: -12.524250984191895
    10. ' None' → logprob: -14.024250984191895

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015955790877342224
    2. ' ,' → logprob: -8.75015926361084
    3. '```' → logprob: -15.25015926361084
    4. '   ' → logprob: -15.62515926361084
    5. ',l' → logprob: -15.75015926361084
    6. '‌,' → logprob: -16.250160217285156
    7. ')' → logprob: -16.875160217285156
    8. ',len' → logprob: -17.125160217285156
    9. '_,' → logprob: -17.375160217285156
    10. ' ' → logprob: -17.500160217285156

Token 649: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0019511326681822538
    2. ' l' → logprob: -6.376951217651367
    3. 'c' → logprob: -9.376951217651367
    4. '   ' → logprob: -9.626951217651367
    5. '(l' → logprob: -10.626951217651367
    6. '       ' → logprob: -11.001951217651367
    7. 'len' → logprob: -11.251951217651367
    8. '           ' → logprob: -11.876951217651367
    9. ' (' → logprob: -11.876951217651367
    10. '     ' → logprob: -12.251951217651367

Token 650: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.387101411819458
    2. ')' → logprob: -1.137101411819458
    3. '   ' → logprob: -8.637101173400879
    4. ')
' → logprob: -9.887101173400879
    5. '       ' → logprob: -13.637101173400879
    6. ' )
' → logprob: -15.012101173400879
    7. ')`
' → logprob: -15.512101173400879
    8. ')

' → logprob: -16.012102127075195
    9. ' )' → logprob: -16.512102127075195
    10. ' ' → logprob: -16.762102127075195

Token 651: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6518070697784424
    2. '
' → logprob: -1.0268070697784424
    3. '   ' → logprob: -2.4018070697784424
    4. ' leaves' → logprob: -4.151806831359863
    5. ')
' → logprob: -5.151806831359863
    6. ')' → logprob: -5.776806831359863
    7. '        
' → logprob: -6.026806831359863
    8. '    
' → logprob: -7.276806831359863
    9. '```' → logprob: -7.651806831359863
    10. 'le' → logprob: -7.651806831359863

Token 652: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.002483626827597618
    2. ' leaves' → logprob: -6.12748384475708
    3. '   ' → logprob: -8.752483367919922
    4. '       ' → logprob: -9.127483367919922
    5. 'return' → logprob: -11.377483367919922
    6. 'leaf' → logprob: -11.877483367919922
    7. '
' → logprob: -12.627483367919922
    8. '        
' → logprob: -13.377483367919922
    9. 'fe' → logprob: -13.752483367919922
    10. 'l' → logprob: -14.002483367919922

Token 653: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3628227114677429
    2. '=' → logprob: -1.3628227710723877
    3. ' *=' → logprob: -3.3628227710723877
    4. '*=' → logprob: -4.862822532653809
    5. '*' → logprob: -5.987822532653809
    6. ',' → logprob: -6.112822532653809
    7. ' *' → logprob: -7.237822532653809
    8. '[' → logprob: -7.862822532653809
    9. '   ' → logprob: -9.987822532653809
    10. ' ' → logprob: -10.487822532653809

Token 654: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04476402327418327
    2. 'ans' → logprob: -3.1697640419006348
    3. ' ' → logprob: -7.044764041900635
    4. 'reduce' → logprob: -7.294764041900635
    5. ' ans' → logprob: -8.919763565063477
    6. '(ans' → logprob: -10.794763565063477
    7. '   ' → logprob: -10.919763565063477
    8. '0' → logprob: -11.044763565063477
    9. ' reduce' → logprob: -11.669763565063477
    10. 'max' → logprob: -13.169763565063477

Token 655: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03604437783360481
    2. 'ans' → logprob: -4.036044597625732
    3. 'reduce' → logprob: -4.036044597625732
    4. '0' → logprob: -10.286044120788574
    5. 'max' → logprob: -11.661044120788574
    6. 'prod' → logprob: -11.786044120788574
    7. '(ans' → logprob: -12.161044120788574
    8. 'int' → logprob: -13.036044120788574
    9. 'calc' → logprob: -13.411044120788574
    10. ' reduce' → logprob: -13.661044120788574

Token 656: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4306590259075165
    2. ' for' → logprob: -1.0556590557098389
    3. '<|end|>' → logprob: -6.55565881729126
    4. '
' → logprob: -8.430659294128418
    5. '```' → logprob: -9.430659294128418
    6. '   ' → logprob: -9.680659294128418
    7. '	for' → logprob: -9.805659294128418
    8. '*' → logprob: -10.555659294128418
    9. ' 
' → logprob: -11.180659294128418
    10. '[' → logprob: -11.180659294128418

Token 657: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12026918679475784
    2. 'for' → logprob: -2.245269298553467
    3. '   ' → logprob: -5.995269298553467
    4. ' ' → logprob: -6.495269298553467
    5. '<|end|>' → logprob: -6.495269298553467
    6. '       ' → logprob: -7.120269298553467
    7. '	for' → logprob: -7.370269298553467
    8. ' 
' → logprob: -8.870268821716309
    9. '[' → logprob: -9.370268821716309
    10. '    ' → logprob: -9.745268821716309

Token 658: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00866113230586052
    2. ' for' → logprob: -4.758661270141602
    3. '	for' → logprob: -10.633661270141602
    4. '       ' → logprob: -10.883661270141602
    5. '   ' → logprob: -12.633661270141602
    6. '```' → logprob: -14.758661270141602
    7. '
' → logprob: -16.0086612701416
    8. '	' → logprob: -17.5086612701416
    9. ' 
' → logprob: -18.6336612701416
    10. ' ' → logprob: -19.1336612701416

Token 659: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05825071036815643
    2. 'x' → logprob: -3.058250665664673
    3. 'd' → logprob: -5.558250904083252
    4. 'c' → logprob: -6.933250904083252
    5. ' a' → logprob: -7.058250904083252
    6. 'v' → logprob: -7.058250904083252
    7. 'ans' → logprob: -7.058250904083252
    8. 'deg' → logprob: -7.433250904083252
    9. 'val' → logprob: -7.558250904083252
    10. 'i' → logprob: -8.308250427246094

Token 660: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995721906423569
    2. 'in' → logprob: -2.6949572563171387
    3. 'x' → logprob: -11.56995677947998
    4. ' ' → logprob: -12.69495677947998
    5. '   ' → logprob: -13.31995677947998
    6. 'n' → logprob: -13.81995677947998
    7. '_in' → logprob: -14.19495677947998
    8. 's' → logprob: -14.31995677947998
    9. '	in' → logprob: -14.31995677947998
    10. ',' → logprob: -14.56995677947998

Token 661: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007137430948205292
    2. ' ans' → logprob: -7.25071382522583
    3. '(ans' → logprob: -12.625713348388672
    4. '	ans' → logprob: -14.750713348388672
    5. 'calc' → logprob: -17.500713348388672
    6. '_ans' → logprob: -17.750713348388672
    7. 'ANS' → logprob: -19.250713348388672
    8. '   ' → logprob: -19.375713348388672
    9. 're' → logprob: -19.875713348388672
    10. 'Ans' → logprob: -20.000713348388672

Token 662: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005623269826173782
    2. ' in' → logprob: -8.12556266784668
    3. 's' → logprob: -9.75056266784668
    4. ')' → logprob: -10.00056266784668
    5. 'in' → logprob: -10.00056266784668
    6. '       ' → logprob: -10.50056266784668
    7. '   ' → logprob: -10.75056266784668
    8. '[' → logprob: -11.37556266784668
    9. '_' → logprob: -11.50056266784668
    10. ',' → logprob: -12.37556266784668

Token 663: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10346877574920654
    2. ' in' → logprob: -3.228468894958496
    3. '       ' → logprob: -4.228468894958496
    4. ',' → logprob: -4.353468894958496
    5. '   ' → logprob: -5.103468894958496
    6. ' :' → logprob: -5.103468894958496
    7. '*' → logprob: -5.228468894958496
    8. ' *' → logprob: -5.603468894958496
    9. ':
' → logprob: -6.228468894958496
    10. ' *=' → logprob: -6.478468894958496

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11452588438987732
    2. ' leaves' → logprob: -2.23952579498291
    3. 'le' → logprob: -6.48952579498291
    4. '(le' → logprob: -10.36452579498291
    5. '```' → logprob: -10.61452579498291
    6. ',' → logprob: -10.73952579498291
    7. '<|end|>' → logprob: -10.73952579498291
    8. '	       ' → logprob: -10.98952579498291
    9. '_le' → logprob: -11.23952579498291
    10. ' le' → logprob: -11.23952579498291

Token 665: ' leaves' (ID: 15657)
  Prédit: ' leaves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaves' → logprob: -0.0012659442145377398
    2. '           ' → logprob: -7.251266002655029
    3. 'le' → logprob: -7.501266002655029
    4. '       ' → logprob: -13.626265525817871
    5. '            ' → logprob: -13.751265525817871
    6. '               ' → logprob: -14.751265525817871
    7. '_le' → logprob: -15.626265525817871
    8. ' le' → logprob: -15.751265525817871
    9. ' ' → logprob: -15.876265525817871
    10. '```' → logprob: -16.126266479492188

Token 666: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.16034343838691711
    2. ' *=' → logprob: -1.9103434085845947
    3. '*' → logprob: -9.160343170166016
    4. '   ' → logprob: -12.160343170166016
    5. '```' → logprob: -12.785343170166016
    6. '=' → logprob: -13.160343170166016
    7. '	' → logprob: -13.910343170166016
    8. '       ' → logprob: -14.035343170166016
    9. ' ' → logprob: -14.160343170166016
    10. '  ' → logprob: -14.910343170166016

Token 667: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.7697225252486533e-06
    2. ' x' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.375003814697266
    4. '(x' → logprob: -22.250003814697266
    5. '  ' → logprob: -23.125003814697266
    6. '	x' → logprob: -23.125003814697266
    7. ' ' → logprob: -23.500003814697266
    8. '       ' → logprob: -24.375003814697266
    9. '    ' → logprob: -24.375003814697266
    10. 'max' → logprob: -24.875003814697266

Token 668: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0710090771317482
    2. '   ' → logprob: -2.6960091590881348
    3. '
' → logprob: -7.446009159088135
    4. 'return' → logprob: -8.446008682250977
    5. ' return' → logprob: -8.446008682250977
    6. ',' → logprob: -11.071008682250977
    7. '<|end|>' → logprob: -11.446008682250977
    8. ',
' → logprob: -12.571008682250977
    9. '    
' → logprob: -12.696008682250977
    10. '	return' → logprob: -12.696008682250977

Token 669: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.064752958714962
    2. '       ' → logprob: -2.8147530555725098
    3. '<|end|>' → logprob: -7.06475305557251
    4. ' return' → logprob: -7.31475305557251
    5. '
' → logprob: -7.68975305557251
    6. '	return' → logprob: -8.814752578735352
    7. ' 
' → logprob: -8.814752578735352
    8. ',' → logprob: -9.439752578735352
    9. 'return' → logprob: -9.564752578735352
    10. ')' → logprob: -9.689752578735352

Token 670: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.057866014540195465
    2. ' return' → logprob: -3.307866096496582
    3. '       ' → logprob: -4.057866096496582
    4. '   ' → logprob: -6.057866096496582
    5. '	return' → logprob: -13.057866096496582
    6. '
' → logprob: -13.807866096496582
    7. ' ' → logprob: -14.807866096496582
    8. ':return' → logprob: -15.932866096496582
    9. '  ' → logprob: -16.307865142822266
    10. ')return' → logprob: -16.557865142822266

Token 671: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0018365412252023816
    2. '       ' → logprob: -6.751836776733398
    3. ' return' → logprob: -7.376836776733398
    4. '   ' → logprob: -10.126836776733398
    5. 'le' → logprob: -15.501836776733398
    6. '	return' → logprob: -16.0018367767334
    7. ' ' → logprob: -16.5018367767334
    8. '
' → logprob: -17.0018367767334
    9. '#' → logprob: -17.7518367767334
    10. '  ' → logprob: -17.7518367767334

Token 672: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007430327124893665
    2. '(' → logprob: -5.007430553436279
    3. '(len' → logprob: -7.382430553436279
    4. '("("' → logprob: -10.632430076599121
    5. '(
' → logprob: -10.757430076599121
    6. '(f' → logprob: -11.132430076599121
    7. '()' → logprob: -11.257430076599121
    8. '('' → logprob: -12.132430076599121
    9. '("",' → logprob: -12.382430076599121
    10. '(le' → logprob: -12.757430076599121

Token 673: 'unique' (ID: 22365)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3601466119289398
    2. '(len' → logprob: -1.2351466417312622
    3. 'return' → logprob: -4.985146522521973
    4. 'v' → logprob: -5.610146522521973
    5. '(v' → logprob: -7.360146522521973
    6. '"' → logprob: -9.235146522521973
    7. ' len' → logprob: -9.235146522521973
    8. 'le' → logprob: -9.610146522521973
    9. '(' → logprob: -9.860146522521973
    10. '[len' → logprob: -10.235146522521973

Token 674: ' centre' (ID: 13268)
  Prédit: ' center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' center' → logprob: -0.769900381565094
    2. ' centre' → logprob: -1.0199003219604492
    3. 'centre' → logprob: -2.394900321960449
    4. 'center' → logprob: -2.644900321960449
    5. ')' → logprob: -5.644900321960449
    6. '_center' → logprob: -5.894900321960449
    7. '_' → logprob: -5.894900321960449
    8. '(center' → logprob: -6.644900321960449
    9. '(' → logprob: -7.644900321960449
    10. ',' → logprob: -8.26990032196045

Token 675: '",' (ID: 672)
  Prédit: ' :",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :",' → logprob: -0.5015852451324463
    2. ')",' → logprob: -2.0015852451324463
    3. ')' → logprob: -2.1265852451324463
    4. ':",' → logprob: -2.7515852451324463
    5. '):' → logprob: -3.5015852451324463
    6. '",' → logprob: -4.626585006713867
    7. ')")
' → logprob: -4.876585006713867
    8. ' :' → logprob: -5.251585006713867
    9. ':' → logprob: -5.251585006713867
    10. ',' → logprob: -5.251585006713867

Token 676: ' ans' (ID: 3345)
  Prédit: ' leaves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaves' → logprob: -0.27855557203292847
    2. '"' → logprob: -2.4035556316375732
    3. 'le' → logprob: -2.7785556316375732
    4. ' v' → logprob: -3.2785556316375732
    5. 'v' → logprob: -3.6535556316375732
    6. 'ans' → logprob: -5.153555393218994
    7. ' ans' → logprob: -5.153555393218994
    8. ' "' → logprob: -5.903555393218994
    9. '")' → logprob: -6.528555393218994
    10. 'len' → logprob: -6.528555393218994

Token 677: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ')' → logprob: -13.50000286102295
    3. '_' → logprob: -14.00000286102295
    4. '[' → logprob: -15.12500286102295
    5. '```' → logprob: -15.75000286102295
    6. 'x' → logprob: -16.000003814697266
    7. ' ' → logprob: -16.250003814697266
    8. ']' → logprob: -17.000003814697266
    9. 'v' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.375003814697266

Token 678: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9160102712921798e-05
    2. ')
' → logprob: -10.625029563903809
    3. ' )' → logprob: -13.625029563903809
    4. ')return' → logprob: -13.875029563903809
    5. '   ' → logprob: -14.250029563903809
    6. '")' → logprob: -14.875029563903809
    7. '')' → logprob: -15.000029563903809
    8. '))' → logprob: -15.125029563903809
    9. '`)' → logprob: -15.500029563903809
    10. ')**' → logprob: -16.125028610229492

Token 679: ' leaves' (ID: 15657)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9115498065948486
    2. '")' → logprob: -1.1615498065948486
    3. ' leaves' → logprob: -1.5365498065948486
    4. '       ' → logprob: -3.5365498065948486
    5. 'le' → logprob: -4.1615495681762695
    6. ' "' → logprob: -5.2865495681762695
    7. 'len' → logprob: -5.2865495681762695
    8. ')' → logprob: -5.6615495681762695
    9. ' len' → logprob: -6.4115495681762695
    10. '",' → logprob: -6.6615495681762695

Token 680: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020927801728248596
    2. ')
' → logprob: -4.520927906036377
    3. '       ' → logprob: -4.645927906036377
    4. '   ' → logprob: -8.895927429199219
    5. ')return' → logprob: -9.520927429199219
    6. ' )' → logprob: -12.020927429199219
    7. '`)' → logprob: -13.020927429199219
    8. ',' → logprob: -13.145927429199219
    9. ')**' → logprob: -13.395927429199219
    10. '')' → logprob: -13.520927429199219

Token 681: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2964811325073242
    2. '   ' → logprob: -1.7964811325073242
    3. ' return' → logprob: -2.671481132507324
    4. '	return' → logprob: -3.921481132507324
    5. '       ' → logprob: -6.546481132507324
    6. ':return' → logprob: -9.171481132507324
    7. ')return' → logprob: -9.421481132507324
    8. '```' → logprob: -9.671481132507324
    9. '{return' → logprob: -10.921481132507324
    10. '<|end|>' → logprob: -12.171481132507324

Token 682: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0017544300062581897
    2. '   ' → logprob: -7.251754283905029
    3. '       ' → logprob: -7.251754283905029
    4. ' return' → logprob: -8.001754760742188
    5. '	return' → logprob: -15.501754760742188
    6. ' ' → logprob: -18.001754760742188
    7. '
' → logprob: -18.001754760742188
    8. '  ' → logprob: -18.001754760742188
    9. 'eturn' → logprob: -19.126754760742188
    10. '{return' → logprob: -20.501754760742188

Token 683: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.18292050063610077
    2. 'w' → logprob: -2.432920455932617
    3. ' u' → logprob: -2.932920455932617
    4. 'i' → logprob: -4.807920455932617
    5. '_' → logprob: -5.432920455932617
    6. ' w' → logprob: -5.682920455932617
    7. '(u' → logprob: -5.682920455932617
    8. ' i' → logprob: -6.807920455932617
    9. 'v' → logprob: -6.807920455932617
    10. 'x' → logprob: -7.182920455932617

Token 684: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20437495410442352
    2. 'in' → logprob: -1.70437490940094
    3. ',' → logprob: -5.82937479019165
    4. '   ' → logprob: -12.454375267028809
    5. ' ' → logprob: -12.704375267028809
    6. '  ' → logprob: -13.204375267028809
    7. '	in' → logprob: -13.579375267028809
    8. '_in' → logprob: -13.704375267028809
    9. 'n' → logprob: -14.079375267028809
    10. 'u' → logprob: -14.079375267028809

Token 685: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.0026580586563795805
    2. ' links' → logprob: -6.002657890319824
    3. 'range' → logprob: -9.252657890319824
    4. 'link' → logprob: -10.627657890319824
    5. ' range' → logprob: -10.752657890319824
    6. 'path' → logprob: -10.877657890319824
    7. '[' → logprob: -11.752657890319824
    8. '   ' → logprob: -13.127657890319824
    9. 'paths' → logprob: -13.127657890319824
    10. '(' → logprob: -13.127657890319824

Token 686: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0003594184236135334
    2. 'v' → logprob: -8.250359535217285
    3. '(v' → logprob: -9.750359535217285
    4. '[u' → logprob: -10.875359535217285
    5. ' in' → logprob: -11.875359535217285
    6. '[' → logprob: -11.875359535217285
    7. ' v' → logprob: -13.125359535217285
    8. ':' → logprob: -13.375359535217285
    9. ',v' → logprob: -13.750359535217285
    10. 'in' → logprob: -13.875359535217285

Token 687: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2926006615161896
    2. ':
' → logprob: -1.4176006317138672
    3. ']:
' → logprob: -5.792600631713867
    4. '):
' → logprob: -5.917600631713867
    5. '           ' → logprob: -5.917600631713867
    6. ']:' → logprob: -6.292600631713867
    7. '):' → logprob: -7.667600631713867
    8. '       ' → logprob: -8.042600631713867
    9. '[' → logprob: -9.292600631713867
    10. '   ' → logprob: -9.417600631713867

Token 688: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00291221565566957
    2. '       ' → logprob: -7.2529120445251465
    3. ' leaves' → logprob: -7.5029120445251465
    4. 'if' → logprob: -8.377912521362305
    5. ' if' → logprob: -8.502912521362305
    6. '   ' → logprob: -8.502912521362305
    7. ':
' → logprob: -8.627912521362305
    8. ':' → logprob: -9.127912521362305
    9. ',' → logprob: -9.127912521362305
    10. '               ' → logprob: -9.627912521362305

Token 689: ' ans' (ID: 3345)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8770880699157715
    2. '           ' → logprob: -1.2520880699157715
    3. 'if' → logprob: -1.8770880699157715
    4. ' leaves' → logprob: -3.2520880699157715
    5. 'ans' (adapté à ' ans') → logprob: -3.3770880699157715
    6. ' if' → logprob: -3.8770880699157715
    7. '   ' → logprob: -3.8770880699157715
    8. '       ' → logprob: -4.3770880699157715
    9. 'for' → logprob: -5.0020880699157715
    10. 'l' → logprob: -5.2520880699157715

Token 690: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5932013392448425
    2. '=' → logprob: -1.0932013988494873
    3. '0' → logprob: -2.2182013988494873
    4. 'u' → logprob: -7.093201160430908
    5. '=u' → logprob: -7.218201160430908
    6. '   ' → logprob: -7.593201160430908
    7. '1' → logprob: -7.593201160430908
    8. '_' → logprob: -7.718201160430908
    9. '_=' → logprob: -9.218201637268066
    10. 's' → logprob: -9.593201637268066

Token 691: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329265236854553
    2. '=' → logprob: -1.3132926225662231
    3. '           ' → logprob: -11.688292503356934
    4. '       ' → logprob: -11.813292503356934
    5. ',' → logprob: -12.313292503356934
    6. '        ' → logprob: -12.563292503356934
    7. '   ' → logprob: -12.688292503356934
    8. ')' → logprob: -13.813292503356934
    9. '    ' → logprob: -13.938292503356934
    10. ' in' → logprob: -14.563292503356934

Token 692: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.061999063938856125
    2. ' calc' → logprob: -2.8119990825653076
    3. '(calc' → logprob: -10.436999320983887
    4. '       ' → logprob: -14.311999320983887
    5. '.calc' → logprob: -14.811999320983887
    6. '   ' → logprob: -14.811999320983887
    7. 'calculate' → logprob: -15.061999320983887
    8. 'cal' → logprob: -15.811999320983887
    9. '           ' → logprob: -16.06199836730957
    10. '(' → logprob: -16.68699836730957

Token 693: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. '(
' → logprob: -14.250000953674316
    3. ',' → logprob: -15.000000953674316
    4. '```' → logprob: -16.500001907348633
    5. ' (' → logprob: -18.375001907348633
    6. '           ' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.125001907348633
    8. '       ' → logprob: -19.375001907348633
    9. '`' → logprob: -19.500001907348633
    10. '(link' → logprob: -19.625001907348633

Token 694: 'links' (ID: 26581)
  Prédit: 'links'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.5760070085525513
    2. '(' → logprob: -0.8260070085525513
    3. ' links' → logprob: -9.951006889343262
    4. '   ' → logprob: -12.326006889343262
    5. '.links' → logprob: -12.326006889343262
    6. ')' → logprob: -12.576006889343262
    7. '```' → logprob: -13.326006889343262
    8. '           ' → logprob: -13.576006889343262
    9. '(
' → logprob: -13.701006889343262
    10. '       ' → logprob: -14.201006889343262

Token 695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009555971249938011
    2. '(' → logprob: -4.759555816650391
    3. '(u' → logprob: -7.634555816650391
    4. '           ' → logprob: -7.884555816650391
    5. ',u' → logprob: -9.88455581665039
    6. '               ' → logprob: -11.00955581665039
    7. ' ,' → logprob: -12.50955581665039
    8. '                   ' → logprob: -13.50955581665039
    9. '(v' → logprob: -13.63455581665039
    10. '            ' → logprob: -14.00955581665039

Token 696: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.055426158010959625
    2. ' u' → logprob: -2.9304261207580566
    3. 'v' → logprob: -7.930426120758057
    4. ' links' → logprob: -10.180426597595215
    5. '           ' → logprob: -10.305426597595215
    6. ' v' → logprob: -10.555426597595215
    7. '[u' → logprob: -10.555426597595215
    8. 'links' → logprob: -11.055426597595215
    9. ',' → logprob: -11.180426597595215
    10. '(u' → logprob: -11.680426597595215

Token 697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011171720921993256
    2. ',v' → logprob: -4.511171817779541
    3. '           ' → logprob: -9.761171340942383
    4. ' ,' → logprob: -10.511171340942383
    5. ',u' → logprob: -11.011171340942383
    6. 'v' → logprob: -11.136171340942383
    7. '(v' → logprob: -13.136171340942383
    8. '[v' → logprob: -13.511171340942383
    9. '               ' → logprob: -13.636171340942383
    10. 'u' → logprob: -14.511171340942383

Token 698: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.5776860184123507e-06
    2. ' v' → logprob: -13.00000286102295
    3. 'u' → logprob: -15.75000286102295
    4. '           ' → logprob: -17.250001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '	v' → logprob: -18.250001907348633
    7. ',v' → logprob: -18.375001907348633
    8. ')v' → logprob: -18.500001907348633
    9. 'vq' → logprob: -20.125001907348633
    10. '       ' → logprob: -20.125001907348633

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004411591507960111
    2. ',l' → logprob: -8.125441551208496
    3. ' ,' → logprob: -9.000441551208496
    4. '           ' → logprob: -11.625441551208496
    5. ',v' → logprob: -12.500441551208496
    6. ',u' → logprob: -12.750441551208496
    7. ',len' → logprob: -13.125441551208496
    8. '```' → logprob: -14.000441551208496
    9. ')' → logprob: -14.125441551208496
    10. ' l' → logprob: -15.250441551208496

Token 700: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0065275500528514385
    2. 'len' → logprob: -5.381527423858643
    3. ' l' → logprob: -6.381527423858643
    4. '           ' → logprob: -9.7565279006958
    5. ' len' → logprob: -10.0065279006958
    6. '(l' → logprob: -10.3815279006958
    7. '(len' → logprob: -10.7565279006958
    8. ')' → logprob: -10.8815279006958
    9. ' (' → logprob: -11.2565279006958
    10. '          ' → logprob: -12.2565279006958

Token 701: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.343210905790329
    2. ')
' → logprob: -1.5932109355926514
    3. '           ' → logprob: -2.4682109355926514
    4. ',' → logprob: -6.593210697174072
    5. '       ' → logprob: -7.093210697174072
    6. '               ' → logprob: -8.71821117401123
    7. ')
' → logprob: -9.84321117401123
    8. '   ' → logprob: -10.46821117401123
    9. '          ' → logprob: -11.34321117401123
    10. '```' → logprob: -11.71821117401123

Token 702: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023107564076781273
    2. '```' → logprob: -4.273107528686523
    3. '               ' → logprob: -5.398107528686523
    4. '<|end|>' → logprob: -6.148107528686523
    5. ' leaves' → logprob: -7.273107528686523
    6. '[' → logprob: -7.898107528686523
    7. ' for' → logprob: -8.148107528686523
    8. '       ' → logprob: -8.398107528686523
    9. ',' → logprob: -8.898107528686523
    10. 'le' → logprob: -9.273107528686523

Token 703: ' ans' (ID: 3345)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6530081629753113
    2. ' leaves' → logprob: -1.528008222579956
    3. '           ' → logprob: -1.653008222579956
    4. 'for' → logprob: -3.028008222579956
    5. ' for' → logprob: -3.903008222579956
    6. '       ' → logprob: -6.653007984161377
    7. ' le' → logprob: -7.778007984161377
    8. 'if' → logprob: -8.528008460998535
    9. '   ' → logprob: -8.653008460998535
    10. '```' → logprob: -8.653008460998535

Token 704: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0032398700714111
    2. ' *=' → logprob: -1.5032398700714111
    3. '*=' → logprob: -1.8782398700714111
    4. ' =' → logprob: -2.628239870071411
    5. '       ' → logprob: -2.628239870071411
    6. '1' → logprob: -3.128239870071411
    7. '0' → logprob: -4.128239631652832
    8. '           ' → logprob: -4.253239631652832
    9. '[' → logprob: -4.253239631652832
    10. '        ' → logprob: -5.378239631652832

Token 705: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026688287034630775
    2. '=' → logprob: -3.65168833732605
    3. '           ' → logprob: -8.151688575744629
    4. '        ' → logprob: -10.776688575744629
    5. ')' → logprob: -11.151688575744629
    6. '       ' → logprob: -11.401688575744629
    7. '            ' → logprob: -11.526688575744629
    8. '[' → logprob: -12.026688575744629
    9. ' ' → logprob: -12.151688575744629
    10. ' for' → logprob: -12.401688575744629

Token 706: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.1017109826207161
    2. ' calc' → logprob: -2.3517110347747803
    3. '(calc' → logprob: -7.101710796356201
    4. 'ans' → logprob: -8.22671127319336
    5. '[' → logprob: -8.85171127319336
    6. '(' → logprob: -9.10171127319336
    7. ' [' → logprob: -10.97671127319336
    8. ' ans' → logprob: -11.10171127319336
    9. 'calculate' → logprob: -11.22671127319336
    10. 'solve' → logprob: -11.60171127319336

Token 707: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '(
' → logprob: -16.25
    3. '```' → logprob: -17.5
    4. '(lines' → logprob: -17.875
    5. '(edges' → logprob: -19.0
    6. '(code' → logprob: -19.25
    7. 'links' → logprob: -19.875
    8. '(link' → logprob: -20.0
    9. 'from' → logprob: -20.125
    10. ' (' → logprob: -20.25

Token 708: 'links' (ID: 26581)
  Prédit: 'links'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.20144860446453094
    2. '(' → logprob: -1.7014485597610474
    3. ' links' → logprob: -11.076448440551758
    4. '(
' → logprob: -11.451448440551758
    5. '   ' → logprob: -13.201448440551758
    6. 'code' → logprob: -13.201448440551758
    7. ')' → logprob: -14.326448440551758
    8. '```' → logprob: -14.326448440551758
    9. '.links' → logprob: -14.326448440551758
    10. '       ' → logprob: -14.576448440551758

Token 709: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.35837464465294e-05
    2. ',' → logprob: -10.125043869018555
    3. ')' → logprob: -14.375043869018555
    4. '           ' → logprob: -14.625043869018555
    5. '```' → logprob: -14.625043869018555
    6. 'links' → logprob: -15.125043869018555
    7. '       ' → logprob: -15.375043869018555
    8. '(
' → logprob: -15.625043869018555
    9. '(lines' → logprob: -15.625043869018555
    10. '   ' → logprob: -15.750043869018555

Token 710: ' v' (ID: 323)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'links' → logprob: -7.338466093642637e-05
    2. 'u' → logprob: -9.625073432922363
    3. ' links' → logprob: -12.000073432922363
    4. 'v' → logprob: -14.250073432922363
    5. '(u' → logprob: -15.250073432922363
    6. '
' → logprob: -16.750072479248047
    7. '   ' → logprob: -16.750072479248047
    8. '           ' → logprob: -17.375072479248047
    9. '.links' → logprob: -17.375072479248047
    10. '(' → logprob: -17.625072479248047

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001565926824696362
    2. ',u' → logprob: -6.501565933227539
    3. '[u' → logprob: -10.126565933227539
    4. ' ,' → logprob: -11.376565933227539
    5. '(u' → logprob: -11.751565933227539
    6. 'u' → logprob: -13.626565933227539
    7. ',
' → logprob: -14.126565933227539
    8. ',v' → logprob: -14.126565933227539
    9. '           ' → logprob: -14.751565933227539
    10. '[' → logprob: -14.751565933227539

Token 712: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -9.150362166110426e-05
    2. ' u' → logprob: -9.375091552734375
    3. 'None' → logprob: -12.875091552734375
    4. '   ' → logprob: -13.750091552734375
    5. '[u' → logprob: -14.000091552734375
    6. ' ' → logprob: -14.750091552734375
    7. 'v' → logprob: -14.875091552734375
    8. 'links' → logprob: -15.125091552734375
    9. '	u' → logprob: -15.250091552734375
    10. ',' → logprob: -15.375091552734375

Token 713: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020711649267468601
    2. ',l' → logprob: -9.12520694732666
    3. '           ' → logprob: -9.50020694732666
    4. '[l' → logprob: -11.75020694732666
    5. ')' → logprob: -12.87520694732666
    6. '```' → logprob: -13.00020694732666
    7. ')
' → logprob: -13.12520694732666
    8. '[' → logprob: -13.12520694732666
    9. ' ,' → logprob: -13.25020694732666
    10. ',
' → logprob: -13.62520694732666

Token 714: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10024764388799667
    2. ' l' → logprob: -2.350247621536255
    3. '   ' → logprob: -12.600247383117676
    4. '0' → logprob: -12.600247383117676
    5. '           ' → logprob: -12.600247383117676
    6. '1' → logprob: -12.600247383117676
    7. '       ' → logprob: -12.850247383117676
    8. '2' → logprob: -12.975247383117676
    9. ')' → logprob: -12.975247383117676
    10. '    ' → logprob: -13.100247383117676

Token 715: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3229278028011322
    2. ')' → logprob: -1.5729278326034546
    3. ')
' → logprob: -2.697927713394165
    4. '[' → logprob: -7.697927951812744
    5. ',' → logprob: -8.447927474975586
    6. '               ' → logprob: -9.197927474975586
    7. '       ' → logprob: -9.447927474975586
    8. '<|end|>' → logprob: -9.572927474975586
    9. '```' → logprob: -10.322927474975586
    10. '          ' → logprob: -10.572927474975586

Token 716: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033686580136418343
    2. ' for' → logprob: -6.753368854522705
    3. '```' → logprob: -7.628368854522705
    4. '       ' → logprob: -7.753368854522705
    5. ' leaves' → logprob: -8.003368377685547
    6. ',' → logprob: -8.878368377685547
    7. '               ' → logprob: -8.878368377685547
    8. 'for' → logprob: -9.128368377685547
    9. ' if' → logprob: -9.128368377685547
    10. '<|end|>' → logprob: -9.128368377685547

Token 717: ' tmp' (ID: 8919)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04611314460635185
    2. 'le' → logprob: -4.171113014221191
    3. 'for' → logprob: -4.671113014221191
    4. ' for' → logprob: -4.796113014221191
    5. ' leaves' → logprob: -4.921113014221191
    6. 'if' → logprob: -6.421113014221191
    7. ' if' → logprob: -6.546113014221191
    8. '       ' → logprob: -6.546113014221191
    9. '   ' → logprob: -8.921113014221191
    10. ' le' → logprob: -11.046113014221191

Token 718: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5287754535675049
    2. '=' → logprob: -0.9037754535675049
    3. 'le' → logprob: -5.528775215148926
    4. '_le' → logprob: -8.278775215148926
    5. ' *=' → logprob: -8.278775215148926
    6. '           ' → logprob: -8.278775215148926
    7. '       ' → logprob: -8.653775215148926
    8. ',' → logprob: -9.278775215148926
    9. '[' → logprob: -9.653775215148926
    10. ' leaves' → logprob: -9.653775215148926

Token 719: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9450633525848389
    2. ' max' → logprob: -1.1950633525848389
    3. 'max' → logprob: -1.4450633525848389
    4. ' ' → logprob: -3.070063352584839
    5. '0' → logprob: -4.445063591003418
    6. ' leaves' → logprob: -5.320063591003418
    7. 'reduce' → logprob: -5.570063591003418
    8. 'le' → logprob: -6.320063591003418
    9. ' reduce' → logprob: -7.070063591003418
    10. '(max' → logprob: -7.070063591003418

Token 720: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2734778821468353
    2. '1' → logprob: -2.273477792739868
    3. 'le' → logprob: -3.023477792739868
    4. 'reduce' → logprob: -3.023477792739868
    5. '0' → logprob: -3.398477792739868
    6. 'sum' → logprob: -6.398478031158447
    7. ' max' → logprob: -7.148478031158447
    8. 'min' → logprob: -7.648478031158447
    9. '[' → logprob: -7.898478031158447
    10. 'tmp' → logprob: -8.023477554321289

Token 721: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012201155535876751
    2. 'for' → logprob: -5.012201309204102
    3. ' for' → logprob: -5.512201309204102
    4. '<|end|>' → logprob: -7.387201309204102
    5. '		' → logprob: -8.262201309204102
    6. '<|end|>' → logprob: -8.762201309204102
    7. '	       ' → logprob: -9.012201309204102
    8. ',' → logprob: -9.387201309204102
    9. '=' → logprob: -9.762201309204102
    10. '          ' → logprob: -11.137201309204102

Token 722: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28471994400024414
    2. '           ' → logprob: -1.7847199440002441
    3. ' for' → logprob: -2.534719944000244
    4. '	for' → logprob: -8.534719467163086
    5. '		' → logprob: -9.284719467163086
    6. '               ' → logprob: -9.534719467163086
    7. '       ' → logprob: -10.034719467163086
    8. '          ' → logprob: -10.034719467163086
    9. '<|end|>' → logprob: -10.159719467163086
    10. '            ' → logprob: -10.284719467163086

Token 723: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6215617656707764
    2. '           ' → logprob: -1.1215617656707764
    3. ' for' → logprob: -1.9965617656707764
    4. '		' → logprob: -6.8715620040893555
    5. '	for' → logprob: -8.496562004089355
    6. '	       ' → logprob: -9.871562004089355
    7. '       ' → logprob: -12.246562004089355
    8. '   ' → logprob: -12.496562004089355
    9. '```' → logprob: -12.746562004089355
    10. '	   ' → logprob: -12.746562004089355

Token 724: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.025047436356544495
    2. 'x' → logprob: -4.025047302246094
    3. ' a' → logprob: -5.025047302246094
    4. ' x' → logprob: -8.525047302246094
    5. '(a' → logprob: -10.025047302246094
    6. 't' → logprob: -10.775047302246094
    7. '(x' → logprob: -11.025047302246094
    8. 'i' → logprob: -11.900047302246094
    9. 'k' → logprob: -13.150047302246094
    10. 'b' → logprob: -13.400047302246094

Token 725: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010144683765247464
    2. ',' → logprob: -7.251014232635498
    3. ' in' → logprob: -8.876014709472656
    4. 'a' → logprob: -9.376014709472656
    5. 's' → logprob: -10.251014709472656
    6. 'in' → logprob: -11.126014709472656
    7. 'x' → logprob: -11.751014709472656
    8. 'u' → logprob: -12.376014709472656
    9. '_,' → logprob: -12.626014709472656
    10. '_' → logprob: -12.751014709472656

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028656162321567535
    2. ',a' → logprob: -5.877865791320801
    3. ' ,' → logprob: -10.2528657913208
    4. 'a' → logprob: -11.2528657913208
    5. ' in' → logprob: -12.2528657913208
    6. ',user' → logprob: -13.3778657913208
    7. ',
' → logprob: -13.5028657913208
    8. ',x' → logprob: -13.8778657913208
    9. ',v' → logprob: -14.5028657913208
    10. ',t' → logprob: -14.7528657913208

Token 727: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029856937006115913
    2. ' a' → logprob: -3.5298569202423096
    3. ',a' → logprob: -9.40485668182373
    4. ',' → logprob: -10.65485668182373
    5. '	a' → logprob: -15.40485668182373
    6. '(a' → logprob: -15.52985668182373
    7. '_a' → logprob: -16.904857635498047
    8. '#a' → logprob: -17.154857635498047
    9. ' in' → logprob: -17.404857635498047
    10. ' ' → logprob: -17.779857635498047

Token 728: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.183501293184236e-05
    2. ',' → logprob: -9.62507152557373
    3. '1' → logprob: -12.25007152557373
    4. '₂' → logprob: -15.00007152557373
    5. 'a' → logprob: -15.62507152557373
    6. '_' → logprob: -16.000072479248047
    7. '_,' → logprob: -16.500072479248047
    8. ' ' → logprob: -16.625072479248047
    9. '```' → logprob: -16.625072479248047
    10. ',a' → logprob: -16.875072479248047

Token 729: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1130623072385788
    2. 'in' → logprob: -2.2380623817443848
    3. ',' → logprob: -8.363061904907227
    4. 'a' → logprob: -13.113061904907227
    5. 'import' → logprob: -13.988061904907227
    6. '```' → logprob: -14.363061904907227
    7. ',in' → logprob: -14.488061904907227
    8. '	in' → logprob: -14.613061904907227
    9. 'n' → logprob: -14.863061904907227
    10. ',a' → logprob: -14.863061904907227

Token 730: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.1869187355041504
    2. ' zip' → logprob: -2.5619187355041504
    3. 'in' → logprob: -2.6869187355041504
    4. ' in' → logprob: -3.6869187355041504
    5. 'x' → logprob: -9.311918258666992
    6. '(zip' → logprob: -9.686918258666992
    7. '
' → logprob: -11.561918258666992
    8. 'max' → logprob: -11.686918258666992
    9. '.zip' → logprob: -11.936918258666992
    10. 'a' → logprob: -12.561918258666992

Token 731: '_long' (ID: 42288)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00030269217677414417
    2. '(a' → logprob: -8.1253023147583
    3. '(' → logprob: -13.0003023147583
    4. 'ans' → logprob: -13.3753023147583
    5. '(answer' → logprob: -13.7503023147583
    6. '(an' → logprob: -14.0003023147583
    7. '(
' → logprob: -15.6253023147583
    8. ' (' → logprob: -15.8753023147583
    9. '_ans' → logprob: -15.8753023147583
    10. '((' → logprob: -16.125303268432617

Token 732: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -4.4060561776859686e-05
    2. 'gest' → logprob: -11.375043869018555
    3. 'ent' → logprob: -11.500043869018555
    4. 'rest' → logprob: -11.625043869018555
    5. 'nest' → logprob: -12.375043869018555
    6. 'test' → logprob: -12.375043869018555
    7. 'st' → logprob: -13.750043869018555
    8. '_long' → logprob: -14.125043869018555
    9. 'erst' → logprob: -14.375043869018555
    10. 'argest' → logprob: -15.000043869018555

Token 733: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.008639151230454445
    2. '(a' → logprob: -4.758639335632324
    3. '(answer' → logprob: -11.383639335632324
    4. '((' → logprob: -11.633639335632324
    5. ' (' → logprob: -13.258639335632324
    6. ',' → logprob: -14.633639335632324
    7. '(ax' → logprob: -14.758639335632324
    8. 'ans' → logprob: -14.883639335632324
    9. '(ai' → logprob: -15.008639335632324
    10. '(' → logprob: -15.133639335632324

Token 734: '1' (ID: 16)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.005972523242235184
    2. '1' → logprob: -5.505972385406494
    3. ',' → logprob: -6.755972385406494
    4. '(' → logprob: -8.005972862243652
    5. 'ans' → logprob: -8.130972862243652
    6. '(a' → logprob: -10.005972862243652
    7. '[' → logprob: -11.255972862243652
    8. '(calc' → logprob: -11.505972862243652
    9. '(arr' → logprob: -12.255972862243652
    10. '(
' → logprob: -12.630972862243652

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002798087371047586
    2. ',a' → logprob: -8.375279426574707
    3. ' ,' → logprob: -10.250279426574707
    4. '(a' → logprob: -12.125279426574707
    5. 'a' → logprob: -12.625279426574707
    6. '           ' → logprob: -13.250279426574707
    7. ',(' → logprob: -14.125279426574707
    8. ',x' → logprob: -14.625279426574707
    9. ',v' → logprob: -15.375279426574707
    10. ',
' → logprob: -15.500279426574707

Token 736: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0012185708619654179
    2. ' ans' → logprob: -6.751218795776367
    3. '(ans' → logprob: -10.126218795776367
    4. '           ' → logprob: -11.751218795776367
    5. '	ans' → logprob: -15.501218795776367
    6. '               ' → logprob: -16.001218795776367
    7. '   ' → logprob: -16.876218795776367
    8. '          ' → logprob: -17.001218795776367
    9. 'a' → logprob: -17.126218795776367
    10. '       ' → logprob: -17.251218795776367

Token 737: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0722436010837555
    2. 'ans' → logprob: -2.6972436904907227
    3. ',' → logprob: -6.322243690490723
    4. ' ans' → logprob: -8.322243690490723
    5. '(ans' → logprob: -8.322243690490723
    6. '[' → logprob: -11.947243690490723
    7. '   ' → logprob: -11.947243690490723
    8. '	ans' → logprob: -13.322243690490723
    9. '_ans' → logprob: -13.447243690490723
    10. ')' → logprob: -14.197243690490723

Token 738: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017927512526512146
    2. '):
' → logprob: -6.501792907714844
    3. '):' → logprob: -8.876792907714844
    4. ',
' → logprob: -10.251792907714844
    5. '           ' → logprob: -10.501792907714844
    6. ' ,' → logprob: -10.626792907714844
    7. '               ' → logprob: -11.251792907714844
    8. '```' → logprob: -11.376792907714844
    9. ':
' → logprob: -12.001792907714844
    10. ':' → logprob: -12.251792907714844

Token 739: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05288543924689293
    2. ':' → logprob: -4.42788553237915
    3. ' if' → logprob: -4.67788553237915
    4. '<|end|>' → logprob: -5.55288553237915
    5. '[' → logprob: -5.92788553237915
    6. 'if' → logprob: -6.42788553237915
    7. '():
' → logprob: -6.42788553237915
    8. '           ' → logprob: -6.42788553237915
    9. ',' → logprob: -6.55288553237915
    10. ' with' → logprob: -6.67788553237915

Token 740: ' m' (ID: 284)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9704295992851257
    2. 'tmp' → logprob: -1.3454296588897705
    3. ' tmp' → logprob: -1.5954296588897705
    4. 'if' → logprob: -3.2204296588897705
    5. '                   ' → logprob: -3.3454296588897705
    6. '               ' → logprob: -3.4704296588897705
    7. '(tmp' → logprob: -4.095429420471191
    8. ' (' → logprob: -4.470429420471191
    9. 'a' → logprob: -5.345429420471191
    10. 'None' → logprob: -5.595429420471191

Token 741: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5069016814231873
    2. '=' → logprob: -1.631901741027832
    3. 'ax' → logprob: -2.381901741027832
    4. '=max' → logprob: -2.631901741027832
    5. 'a' → logprob: -3.381901741027832
    6. '=a' → logprob: -6.381901741027832
    7. 'x' → logprob: -7.631901741027832
    8. '=m' → logprob: -7.631901741027832
    9. 'max' → logprob: -7.756901741027832
    10. '1' → logprob: -8.631901741027832

Token 742: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00803006999194622
    2. ' max' → logprob: -5.258029937744141
    3. '(max' → logprob: -6.008029937744141
    4. 'a' → logprob: -8.50802993774414
    5. '1' → logprob: -9.25802993774414
    6. '(a' → logprob: -11.00802993774414
    7. '(' → logprob: -11.50802993774414
    8. '0' → logprob: -12.38302993774414
    9. ' (' → logprob: -12.75802993774414
    10. '   ' → logprob: -13.88302993774414

Token 743: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0012496389681473374
    2. 'a' → logprob: -7.00124979019165
    3. '((' → logprob: -8.376249313354492
    4. '(' → logprob: -9.251249313354492
    5. '(
' → logprob: -12.126249313354492
    6. '(max' → logprob: -12.501249313354492
    7. '(m' → logprob: -13.626249313354492
    8. 'm' → logprob: -14.376249313354492
    9. 'max' → logprob: -15.126249313354492
    10. '0' → logprob: -16.251249313354492

Token 744: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6472573280334473
    2. '(a' → logprob: -0.7722573280334473
    3. '1' → logprob: -4.772257328033447
    4. '(' → logprob: -5.272257328033447
    5. 'max' → logprob: -8.272256851196289
    6. '(max' → logprob: -8.272256851196289
    7. '((' → logprob: -8.397256851196289
    8. '(
' → logprob: -10.022256851196289
    9. 'm' → logprob: -10.397256851196289
    10. '(None' → logprob: -10.772256851196289

Token 745: ' if' (ID: 538)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.22565826773643494
    2. ',' → logprob: -1.7256582975387573
    3. ' if' → logprob: -3.9756581783294678
    4. 'if' → logprob: -6.225658416748047
    5. ',a' → logprob: -6.350658416748047
    6. ' ,' → logprob: -7.350658416748047
    7. 'a' → logprob: -7.725658416748047
    8. 'or' → logprob: -8.100658416748047
    9. ',m' → logprob: -10.100658416748047
    10. '   ' → logprob: -11.850658416748047

Token 746: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0013269031187519431
    2. ' a' → logprob: -6.626327037811279
    3. '   ' → logprob: -14.376326560974121
    4. '(a' → logprob: -15.376326560974121
    5. '  ' → logprob: -16.876327514648438
    6. ' ' → logprob: -17.126327514648438
    7. '	a' → logprob: -17.501327514648438
    8. '           ' → logprob: -17.626327514648438
    9. '1' → logprob: -17.751327514648438
    10. '    ' → logprob: -18.626327514648438

Token 747: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001432620221748948
    2. ' is' → logprob: -7.126432418823242
    3. 'is' → logprob: -7.751432418823242
    4. 'a' → logprob: -9.501432418823242
    5. 's' → logprob: -9.626432418823242
    6. 'else' → logprob: -11.001432418823242
    7. 'r' → logprob: -11.251432418823242
    8. '2' → logprob: -11.751432418823242
    9. '!=' → logprob: -11.876432418823242
    10. 'None' → logprob: -13.251432418823242

Token 748: ' is' (ID: 382)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3412806987762451
    2. 'is' → logprob: -1.8412806987762451
    3. ' is' → logprob: -2.091280698776245
    4. ' else' → logprob: -4.966280937194824
    5. 'and' → logprob: -11.216280937194824
    6. '!=' → logprob: -11.966280937194824
    7. 'a' → logprob: -12.591280937194824
    8. ' ' → logprob: -13.466280937194824
    9. '   ' → logprob: -13.841280937194824
    10. 'if' → logprob: -14.341280937194824

Token 749: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01380050927400589
    2. ' not' → logprob: -4.388800621032715
    3. 'a' → logprob: -7.138800621032715
    4. '   ' → logprob: -8.638800621032715
    5. '           ' → logprob: -9.013800621032715
    6. '       ' → logprob: -9.638800621032715
    7. '               ' → logprob: -11.138800621032715
    8. 'None' → logprob: -11.138800621032715
    9. '```' → logprob: -11.263800621032715
    10. 'else' → logprob: -11.388800621032715

Token 750: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.088346359931165e-07
    2. ' None' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.625
    4. 'none' → logprob: -19.0
    5. '(None' → logprob: -20.625
    6. 'not' → logprob: -21.375
    7. '_None' → logprob: -21.5
    8. ' ' → logprob: -21.875
    9. '...' → logprob: -22.0
    10. '0' → logprob: -22.25

Token 751: ' else' (ID: 1203)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11763671040534973
    2. ',a' → logprob: -2.2426366806030273
    3. ' ,' → logprob: -5.742636680603027
    4. 'a' → logprob: -7.117636680603027
    5. ' else' → logprob: -7.742636680603027
    6. 'else' → logprob: -8.117636680603027
    7. ' a' → logprob: -10.742636680603027
    8. ',
' → logprob: -11.742636680603027
    9. ',m' → logprob: -11.867636680603027
    10. '           ' → logprob: -12.242636680603027

Token 752: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10282837599515915
    2. '0' → logprob: -2.47782826423645
    3. '1' → logprob: -4.352828502655029
    4. ' a' → logprob: -7.227828502655029
    5. ' ' → logprob: -8.727828025817871
    6. '   ' → logprob: -10.977828025817871
    7. '(a' → logprob: -12.602828025817871
    8. '           ' → logprob: -13.102828025817871
    9. '  ' → logprob: -13.727828025817871
    10. '2' → logprob: -13.977828025817871

Token 753: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03069240227341652
    2. '0' → logprob: -3.5306923389434814
    3. '1' → logprob: -7.0306925773620605
    4. ' a' → logprob: -10.155692100524902
    5. ' ' → logprob: -12.280692100524902
    6. '   ' → logprob: -12.405692100524902
    7. '(a' → logprob: -12.405692100524902
    8. '2' → logprob: -14.155692100524902
    9. '           ' → logprob: -14.280692100524902
    10. 'x' → logprob: -14.530692100524902

Token 754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01258335541933775
    2. ',a' → logprob: -4.512583255767822
    3. ' ,' → logprob: -6.512583255767822
    4. ',m' → logprob: -10.88758373260498
    5. ',
' → logprob: -11.01258373260498
    6. ',b' → logprob: -12.13758373260498
    7. 'a' → logprob: -13.13758373260498
    8. ',u' → logprob: -13.51258373260498
    9. '           ' → logprob: -13.76258373260498
    10. '               ' → logprob: -14.01258373260498

Token 755: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000205566844670102
    2. ' a' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.500205993652344
    4. '  ' → logprob: -14.375205993652344
    5. '    ' → logprob: -15.875205993652344
    6. '      ' → logprob: -18.250205993652344
    7. '     ' → logprob: -18.500205993652344
    8. ' ' → logprob: -18.500205993652344
    9. '(a' → logprob: -19.125205993652344
    10. '       ' → logprob: -19.375205993652344

Token 756: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. 'a' → logprob: -12.75000286102295
    3. '(a' → logprob: -17.000003814697266
    4. 'b' → logprob: -17.750003814697266
    5. 's' → logprob: -18.250003814697266
    6. '```' → logprob: -19.625003814697266
    7. '(' → logprob: -20.000003814697266
    8. '1' → logprob: -20.125003814697266
    9. '
' → logprob: -20.500003814697266
    10. ' a' → logprob: -21.125003814697266

Token 757: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0028205662965774536
    2. 'if' → logprob: -5.8778204917907715
    3. ' or' → logprob: -11.12782096862793
    4. ')' → logprob: -14.75282096862793
    5. ',' → logprob: -14.87782096862793
    6. 'If' → logprob: -15.87782096862793
    7. '	if' → logprob: -17.00282096862793
    8. '1' → logprob: -18.00282096862793
    9. '),' → logprob: -18.25282096862793
    10. 'or' → logprob: -18.50282096862793

Token 758: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019323242595419288
    2. ' a' → logprob: -6.251932144165039
    3. '   ' → logprob: -12.876932144165039
    4. '(a' → logprob: -14.626932144165039
    5. '           ' → logprob: -15.751932144165039
    6. '    ' → logprob: -15.876932144165039
    7. '  ' → logprob: -16.25193214416504
    8. ' ' → logprob: -16.50193214416504
    9. '	a' → logprob: -16.87693214416504
    10. '       ' → logprob: -17.50193214416504

Token 759: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017970333283301443
    2. 'a' → logprob: -8.625179290771484
    3. ' a' → logprob: -16.750179290771484
    4. ' ' → logprob: -17.250179290771484
    5. '
' → logprob: -17.375179290771484
    6. '۲' → logprob: -18.750179290771484
    7. 'None' → logprob: -18.875179290771484
    8. '```' → logprob: -19.125179290771484
    9. 'not' → logprob: -19.375179290771484
    10. '   ' → logprob: -19.625179290771484

Token 760: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.07890267670154572
    2. ' is' → logprob: -2.5789027214050293
    3. 'else' → logprob: -11.953902244567871
    4. 'if' → logprob: -11.953902244567871
    5. '```' → logprob: -16.828903198242188
    6. ' ' → logprob: -17.328903198242188
    7. ' if' → logprob: -17.703903198242188
    8. ' else' → logprob: -17.703903198242188
    9. '[' → logprob: -19.203903198242188
    10. '1' → logprob: -19.328903198242188

Token 761: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03809507563710213
    2. ' not' → logprob: -3.288094997406006
    3. 'None' → logprob: -10.038095474243164
    4. '1' → logprob: -12.663095474243164
    5. '2' → logprob: -12.663095474243164
    6. '0' → logprob: -13.788095474243164
    7. 'Not' → logprob: -14.788095474243164
    8. '           ' → logprob: -14.913095474243164
    9. ' ' → logprob: -15.038095474243164
    10. '   ' → logprob: -15.288095474243164

Token 762: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16041909158229828
    2. 'not' → logprob: -1.9104191064834595
    3. ' not' → logprob: -9.035419464111328
    4. ' None' → logprob: -10.160419464111328
    5. 'none' → logprob: -10.410419464111328
    6. '   ' → logprob: -12.785419464111328
    7. 'Not' → logprob: -13.160419464111328
    8. '2' → logprob: -14.535419464111328
    9. '1' → logprob: -14.660419464111328
    10. '0' → logprob: -15.035419464111328

Token 763: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4740871787071228
    2. 'else' → logprob: -0.9740871787071228
    3. ' is' → logprob: -11.59908676147461
    4. ' ' → logprob: -15.84908676147461
    5. '	else' → logprob: -15.84908676147461
    6. '```' → logprob: -15.84908676147461
    7. '!=' → logprob: -15.97408676147461
    8. '1' → logprob: -16.22408676147461
    9. ' if' → logprob: -16.47408676147461
    10. 'if' → logprob: -16.84908676147461

Token 764: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030066570616327226
    2. ' ' → logprob: -8.125300407409668
    3. '0' → logprob: -13.500300407409668
    4. '   ' → logprob: -13.500300407409668
    5. 'a' → logprob: -14.125300407409668
    6. '2' → logprob: -14.625300407409668
    7. '  ' → logprob: -15.125300407409668
    8. '
' → logprob: -16.625301361083984
    9. '           ' → logprob: -16.625301361083984
    10. '    ' → logprob: -17.500301361083984

Token 765: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7159857786027715e-05
    2. ' ' → logprob: -10.000046730041504
    3. '0' → logprob: -13.625046730041504
    4. '   ' → logprob: -15.500046730041504
    5. '2' → logprob: -16.00004768371582
    6. 'a' → logprob: -16.75004768371582
    7. '  ' → logprob: -16.93754768371582
    8. '           ' → logprob: -18.25004768371582
    9. '```' → logprob: -18.37504768371582
    10. '(' → logprob: -18.87504768371582

Token 766: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029950879514217377
    2. ')
' → logprob: -3.5299508571624756
    3. '               ' → logprob: -9.279951095581055
    4. '           ' → logprob: -9.904951095581055
    5. ')
' → logprob: -10.779951095581055
    6. ' )' → logprob: -11.029951095581055
    7. '):
' → logprob: -12.029951095581055
    8. ' )
' → logprob: -12.404951095581055
    9. ',' → logprob: -13.529951095581055
    10. ')

' → logprob: -13.779951095581055

Token 767: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2969388961791992
    2. ' tmp' → logprob: -1.5469388961791992
    3. 'tmp' → logprob: -1.7969388961791992
    4. ' 
' → logprob: -2.046938896179199
    5. '               ' → logprob: -2.171938896179199
    6. ' leaves' → logprob: -3.296938896179199
    7. '(tmp' → logprob: -3.546938896179199
    8. '[tmp' → logprob: -5.046938896179199
    9. '<|end|>' → logprob: -5.421938896179199
    10. '            ' → logprob: -5.671938896179199

Token 768: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.3721734881401062
    2. ' tmp' → logprob: -1.372173547744751
    3. '               ' → logprob: -2.872173547744751
    4. '	tmp' → logprob: -8.872173309326172
    5. '                   ' → logprob: -8.997173309326172
    6. '           ' → logprob: -9.247173309326172
    7. '                               ' → logprob: -9.872173309326172
    8. '			' → logprob: -10.122173309326172
    9. '(tmp' → logprob: -10.122173309326172
    10. '/tmp' → logprob: -10.497173309326172

Token 769: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.00865865871310234
    2. ' *=' → logprob: -4.7586588859558105
    3. '*' → logprob: -10.883658409118652
    4. '=' → logprob: -10.883658409118652
    5. '	' → logprob: -12.633658409118652
    6. '   ' → logprob: -13.008658409118652
    7. '  ' → logprob: -15.008658409118652
    8. ' ' → logprob: -15.258658409118652
    9. '```' → logprob: -15.258658409118652
    10. ' ' → logprob: -15.758658409118652

Token 770: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015023599844425917
    2. ' m' → logprob: -6.501502513885498
    3. '	m' → logprob: -19.251502990722656
    4. '(m' → logprob: -20.751502990722656
    5. ' ' → logprob: -21.251502990722656
    6. 'max' → logprob: -22.001502990722656
    7. 'int' → logprob: -22.251502990722656
    8. '   ' → logprob: -22.251502990722656
    9. ' ' → logprob: -22.876502990722656
    10. '  ' → logprob: -23.501502990722656

Token 771: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006121229380369186
    2. '<|end|>' → logprob: -6.0061211585998535
    3. '       ' → logprob: -6.3811211585998535
    4. '               ' → logprob: -6.8811211585998535
    5. '
' → logprob: -8.631121635437012
    6. ')' → logprob: -8.881121635437012
    7. '          ' → logprob: -9.256121635437012
    8. '            
' → logprob: -9.381121635437012
    9. '   ' → logprob: -9.756121635437012
    10. ',' → logprob: -9.756121635437012

Token 772: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002064852975308895
    2. '       ' → logprob: -7.1270647048950195
    3. '               ' → logprob: -7.6270647048950195
    4. '
' → logprob: -8.00206470489502
    5. 'return' → logprob: -9.62706470489502
    6. '   ' → logprob: -9.75206470489502
    7. '<|end|>' → logprob: -9.75206470489502
    8. '```' → logprob: -9.87706470489502
    9. ' 
' → logprob: -10.12706470489502
    10. '            
' → logprob: -10.37706470489502

Token 773: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3972093164920807
    2. '           ' → logprob: -1.1472092866897583
    3. '       ' → logprob: -5.147209167480469
    4. ' if' → logprob: -5.772209167480469
    5. 'le' → logprob: -7.397209167480469
    6. '   ' → logprob: -7.897209167480469
    7. 'return' → logprob: -8.022209167480469
    8. '```' → logprob: -10.897209167480469
    9. '               ' → logprob: -11.397209167480469
    10. '
' → logprob: -12.647209167480469

Token 774: ' print' (ID: 2123)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6634634733200073
    2. 'if' → logprob: -0.7884634733200073
    3. '           ' → logprob: -3.538463592529297
    4. ' if' → logprob: -7.788463592529297
    5. ' leaves' → logprob: -7.913463592529297
    6. '       ' → logprob: -8.413463592529297
    7. 'leaf' → logprob: -9.163463592529297
    8. 'return' → logprob: -9.413463592529297
    9. '   ' → logprob: -10.038463592529297
    10. '               ' → logprob: -10.163463592529297

Token 775: '('' (ID: 706)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.7392568588256836
    2. '("' → logprob: -0.9892568588256836
    3. '(f' → logprob: -2.4892568588256836
    4. '(' → logprob: -2.7392568588256836
    5. '('' → logprob: -6.489256858825684
    6. '           ' → logprob: -7.864256858825684
    7. '("("' → logprob: -8.614256858825684
    8. '("#' → logprob: -8.614256858825684
    9. '(
' → logprob: -8.739256858825684
    10. ' (' → logprob: -9.114256858825684

Token 776: 'test' (ID: 3190)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1494179964065552
    2. 'tmp' → logprob: -1.3994179964065552
    3. '('' → logprob: -2.2744178771972656
    4. '("' → logprob: -2.2744178771972656
    5. '(tmp' → logprob: -2.3994178771972656
    6. ''' → logprob: -2.5244178771972656
    7. ''t' → logprob: -3.6494178771972656
    8. 'u' → logprob: -4.649417877197266
    9. '(u' → logprob: -5.024417877197266
    10. ''u' → logprob: -5.524417877197266

Token 777: ' voisin' (ID: 145411)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6530048847198486
    2. '(tmp' → logprob: -1.6530048847198486
    3. '(',' → logprob: -2.6530048847198486
    4. ':',' → logprob: -2.9030048847198486
    5. ',' → logprob: -3.0280048847198486
    6. ')',' → logprob: -3.4030048847198486
    7. ' tmp' → logprob: -3.6530048847198486
    8. 'tmp' → logprob: -4.2780046463012695
    9. '')' → logprob: -4.9030046463012695
    10. ')' → logprob: -5.2780046463012695

Token 778: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.5335314869880676
    2. ':',' → logprob: -1.7835314273834229
    3. ',' → logprob: -2.158531427383423
    4. 's' → logprob: -3.408531427383423
    5. '(u' → logprob: -3.408531427383423
    6. '(',' → logprob: -3.908531427383423
    7. ':' → logprob: -4.408531665802002
    8. ')',' → logprob: -5.158531665802002
    9. ' ',' → logprob: -5.533531665802002
    10. '(s' → logprob: -5.533531665802002

Token 779: ' u' (ID: 337)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.21497122943401337
    2. ' tmp' → logprob: -1.9649711847305298
    3. 'u' → logprob: -3.0899713039398193
    4. ' u' → logprob: -5.21497106552124
    5. 'v' → logprob: -6.46497106552124
    6. '(tmp' → logprob: -8.214971542358398
    7. ' v' → logprob: -8.589971542358398
    8. '           ' → logprob: -10.089971542358398
    9. '   ' → logprob: -10.339971542358398
    10. ''' → logprob: -10.464971542358398

Token 780: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042662365012802184
    2. '',' → logprob: -8.375426292419434
    3. '           ' → logprob: -9.250426292419434
    4. ')' → logprob: -10.125426292419434
    5. ' ,' → logprob: -10.500426292419434
    6. ','' → logprob: -11.750426292419434
    7. '   ' → logprob: -12.375426292419434
    8. ',",' → logprob: -13.000426292419434
    9. '          ' → logprob: -13.375426292419434
    10. '       ' → logprob: -13.375426292419434

Token 781: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.2847191393375397
    2. ' tmp' → logprob: -1.4097191095352173
    3. ''' → logprob: -5.784718990325928
    4. '',' → logprob: -8.909719467163086
    5. ' '' → logprob: -9.659719467163086
    6. '(tmp' → logprob: -9.784719467163086
    7. '')' → logprob: -10.159719467163086
    8. '/tmp' → logprob: -10.159719467163086
    9. ',tmp' → logprob: -10.909719467163086
    10. ')' → logprob: -11.034719467163086

Token 782: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28756213188171387
    2. ')' → logprob: -1.5375621318817139
    3. ',' → logprob: -3.787562131881714
    4. ')
' → logprob: -4.787562370300293
    5. '       ' → logprob: -6.537562370300293
    6. '')' → logprob: -7.037562370300293
    7. '#' → logprob: -7.162562370300293
    8. '),' → logprob: -8.537562370300293
    9. '<|end|>' → logprob: -8.662562370300293
    10. '   ' → logprob: -9.162562370300293

Token 783: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007204771041870117
    2. 'if' → logprob: -5.132205009460449
    3. '       ' → logprob: -7.007205009460449
    4. ' if' → logprob: -8.13220500946045
    5. '```' → logprob: -9.88220500946045
    6. '   ' → logprob: -11.25720500946045
    7. '               ' → logprob: -11.75720500946045
    8. '<|end|>' → logprob: -13.63220500946045
    9. '	       ' → logprob: -14.38220500946045
    10. '
' → logprob: -14.88220500946045

Token 784: ' leaves' (ID: 15657)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2873649299144745
    2. '           ' → logprob: -1.4123649597167969
    3. 'le' → logprob: -5.662364959716797
    4. ' if' → logprob: -6.412364959716797
    5. '       ' → logprob: -6.912364959716797
    6. '   ' → logprob: -10.037364959716797
    7. '```' → logprob: -10.912364959716797
    8. '
' → logprob: -12.037364959716797
    9. ' leaves' → logprob: -12.287364959716797
    10. 'return' → logprob: -12.412364959716797

Token 785: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5810220837593079
    2. ' =' → logprob: -1.206022024154663
    3. '*=' → logprob: -2.831022024154663
    4. ' *=' → logprob: -3.456022024154663
    5. '+=' → logprob: -3.706022024154663
    6. ' +=' → logprob: -3.831022024154663
    7. ' -=' → logprob: -7.206022262573242
    8. '<=' → logprob: -7.456022262573242
    9. '%=' → logprob: -7.456022262573242
    10. '>' → logprob: -7.581022262573242

Token 786: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.693689227104187
    2. 'max' → logprob: -1.193689227104187
    3. ' max' → logprob: -2.3186893463134766
    4. ' min' → logprob: -2.3186893463134766
    5. 'le' → logprob: -8.568689346313477
    6. ' leaves' → logprob: -8.693689346313477
    7. 'tmp' → logprob: -13.193689346313477
    8. '	min' → logprob: -14.068689346313477
    9. ' tmp' → logprob: -14.193689346313477
    10. '(min' → logprob: -14.693689346313477

Token 787: '(le' (ID: 135521)
  Prédit: '(le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(le' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.500006675720215
    3. 'le' → logprob: -12.750006675720215
    4. ' leaves' → logprob: -17.6250057220459
    5. '(lo' → logprob: -19.0000057220459
    6. '(left' → logprob: -20.1250057220459
    7. '(
' → logprob: -20.6250057220459
    8. 'leaf' → logprob: -20.7500057220459
    9. '/le' → logprob: -20.8750057220459
    10. ' (' → logprob: -20.8750057220459

Token 788: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.0004733294772449881
    2. '(' → logprob: -8.250473022460938
    3. 'av' → logprob: -9.375473022460938
    4. 'af' → logprob: -9.375473022460938
    5. '[' → logprob: -11.000473022460938
    6. 'a' → logprob: -11.250473022460938
    7. '(le' → logprob: -12.750473022460938
    8. '(av' → logprob: -13.375473022460938
    9. '(a' → logprob: -13.500473022460938
    10. '{' → logprob: -13.750473022460938

Token 789: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003718011314049363
    2. ',tmp' → logprob: -5.62871789932251
    3. ' ,' → logprob: -9.128718376159668
    4. ',temp' → logprob: -12.628718376159668
    5. '(tmp' → logprob: -12.628718376159668
    6. ',
' → logprob: -13.878718376159668
    7. '           ' → logprob: -14.503718376159668
    8. '(' → logprob: -14.628718376159668
    9. '   ' → logprob: -15.628718376159668
    10. 'le' → logprob: -15.753718376159668

Token 790: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.251930832862854
    2. ' tmp' → logprob: -1.501930832862854
    3. '(tmp' → logprob: -14.376931190490723
    4. '           ' → logprob: -14.501931190490723
    5. '/tmp' → logprob: -15.376931190490723
    6. '	tmp' → logprob: -15.751931190490723
    7. ',tmp' → logprob: -17.126930236816406
    8. '               ' → logprob: -17.251930236816406
    9. '$tmp' → logprob: -17.626930236816406
    10. '   ' → logprob: -17.751930236816406

Token 791: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002257902640849352
    2. '       ' → logprob: -6.377257823944092
    3. ')
' → logprob: -7.627257823944092
    4. ' )' → logprob: -10.00225830078125
    5. '           ' → logprob: -11.12725830078125
    6. '   ' → logprob: -12.62725830078125
    7. '<|end|>' → logprob: -13.00225830078125
    8. ')return' → logprob: -14.25225830078125
    9. ')\
' → logprob: -15.25225830078125
    10. ')#' → logprob: -15.62725830078125

Token 792: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001787159708328545
    2. ' ' → logprob: -6.626787185668945
    3. 'len' → logprob: -9.126787185668945
    4. '   ' → logprob: -9.376787185668945
    5. '1' → logprob: -9.876787185668945
    6. '  ' → logprob: -10.251787185668945
    7. '    ' → logprob: -10.501787185668945
    8. '     ' → logprob: -10.501787185668945
    9. '      ' → logprob: -11.001787185668945
    10. '(' → logprob: -11.001787185668945

Token 793: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00390967633575201
    2. '1' → logprob: -6.128909587860107
    3. ' ' → logprob: -7.003909587860107
    4. 'len' → logprob: -7.628909587860107
    5. 'links' → logprob: -8.503910064697266
    6. '(' → logprob: -9.878910064697266
    7. '(len' → logprob: -11.503910064697266
    8. '   ' → logprob: -11.628910064697266
    9. '3' → logprob: -11.753910064697266
    10. '  ' → logprob: -12.253910064697266

Token 794: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16402429342269897
    2. ')' → logprob: -2.1640243530273438
    3. '       ' → logprob: -3.4140243530273438
    4. '   ' → logprob: -5.664024353027344
    5. ')return' → logprob: -11.164024353027344
    6. '
' → logprob: -11.914024353027344
    7. ')
' → logprob: -11.914024353027344
    8. ')

' → logprob: -12.664024353027344
    9. ' )
' → logprob: -13.164024353027344
    10. 'return' → logprob: -13.164024353027344

Token 795: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04968450590968132
    2. 'return' → logprob: -3.049684524536133
    3. ' return' → logprob: -7.174684524536133
    4. '```' → logprob: -8.174684524536133
    5. '	return' → logprob: -10.799684524536133
    6. '       ' → logprob: -10.924684524536133
    7. '
' → logprob: -11.799684524536133
    8. '``' → logprob: -14.049684524536133
    9. ')' → logprob: -14.674684524536133
    10. ':return' → logprob: -14.674684524536133

Token 796: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3144351840019226
    2. 'return' (adapté à ' return') → logprob: -1.3144352436065674
    3. ' return' → logprob: -6.814435005187988
    4. '```' → logprob: -10.064435005187988
    5. '	return' → logprob: -10.689435005187988
    6. '
' → logprob: -11.939435005187988
    7. '       ' → logprob: -12.939435005187988
    8. ':return' → logprob: -15.689435005187988
    9. '    
' → logprob: -15.814435005187988
    10. '<|end|>' → logprob: -16.439435958862305

Token 797: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.476010262966156
    2. '(len' → logprob: -1.3510103225708008
    3. '(c' → logprob: -2.226010322570801
    4. ' (' → logprob: -4.601010322570801
    5. 'len' → logprob: -7.226010322570801
    6. 'l' → logprob: -7.851010322570801
    7. '((' → logprob: -7.976010322570801
    8. '(' → logprob: -8.6010103225708
    9. '   ' → logprob: -10.2260103225708
    10. ' l' → logprob: -10.7260103225708

Token 798: 'len' (ID: 3303)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20358410477638245
    2. 'len' → logprob: -1.70358407497406
    3. 'c' → logprob: -6.70358419418335
    4. '(len' → logprob: -8.078583717346191
    5. '(l' → logprob: -8.828583717346191
    6. ' l' → logprob: -8.953583717346191
    7. '1' → logprob: -9.203583717346191
    8. '(' → logprob: -9.453583717346191
    9. ' len' → logprob: -9.578583717346191
    10. '(c' → logprob: -10.078583717346191

Token 799: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0006199848721735179
    2. 'ans' → logprob: -7.875619888305664
    3. '(path' → logprob: -8.625619888305664
    4. '(' → logprob: -10.750619888305664
    5. ')' → logprob: -11.000619888305664
    6. '	ans' → logprob: -12.875619888305664
    7. 'path' → logprob: -13.125619888305664
    8. ' ans' → logprob: -13.375619888305664
    9. '(arr' → logprob: -14.000619888305664
    10. '(answer' → logprob: -14.125619888305664

Token 800: '0' (ID: 15)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5451228618621826
    2. '0' → logprob: -0.9201228618621826
    3. 'ans' → logprob: -4.045123100280762
    4. '(' → logprob: -6.295123100280762
    5. '1' → logprob: -6.420123100280762
    6. ')' → logprob: -8.420123100280762
    7. '(path' → logprob: -9.170123100280762
    8. 'path' → logprob: -9.420123100280762
    9. '_ans' → logprob: -10.607623100280762
    10. ' ans' → logprob: -10.795123100280762

Token 801: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021546686068177223
    2. '),' → logprob: -3.8965466022491455
    3. '(),' → logprob: -7.396546840667725
    4. ' ,' → logprob: -8.396546363830566
    5. ',),' → logprob: -9.396546363830566
    6. ')' → logprob: -10.396546363830566
    7. '   ' → logprob: -10.771546363830566
    8. '-' → logprob: -11.646546363830566
    9. ' ),' → logprob: -12.896546363830566
    10. ',)' → logprob: -13.021546363830566

Token 802: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6931591629981995
    2. ' leaves' → logprob: -0.6931591629981995
    3. 'leaf' → logprob: -11.693159103393555
    4. ' le' → logprob: -13.943159103393555
    5. 'Leaves' → logprob: -13.943159103393555
    6. ' ' → logprob: -14.818159103393555
    7. 'leave' → logprob: -15.318159103393555
    8. '_le' → logprob: -15.318159103393555
    9. '```' → logprob: -15.943159103393555
    10. 'l' → logprob: -16.068159103393555

Token 803: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004020713677164167
    2. '*' → logprob: -8.250402450561523
    3. ' *' → logprob: -9.625402450561523
    4. ' )' → logprob: -9.875402450561523
    5. ')
' → logprob: -11.000402450561523
    6. '   ' → logprob: -12.750402450561523
    7. '*)' → logprob: -13.125402450561523
    8. ')return' → logprob: -15.000402450561523
    9. '}' → logprob: -15.125402450561523
    10. '<|end|>' → logprob: -15.750402450561523

Token 804: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6566013097763062
    2. '<|end|>' → logprob: -0.7816013097763062
    3. '#' → logprob: -4.031601428985596
    4. '<|end|>' → logprob: -5.781601428985596
    5. '```' → logprob: -6.656601428985596
    6. '
' → logprob: -8.031600952148438
    7. '}' → logprob: -8.531600952148438
    8. '...' → logprob: -8.531600952148438
    9. ']' → logprob: -8.656600952148438
    10. ',' → logprob: -9.531600952148438

Token 805: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008382306434214115
    2. '<|end|>' → logprob: -5.508382320404053
    3. ',n' → logprob: -6.383382320404053
    4. ' =' → logprob: -6.508382320404053
    5. ' ,' → logprob: -8.008381843566895
    6. '=' → logprob: -8.133381843566895
    7. '<|end|>' → logprob: -8.133381843566895
    8. '(n' → logprob: -9.633381843566895
    9. 'n' → logprob: -10.633381843566895
    10. ' n' → logprob: -11.008381843566895

Token 806: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002194159897044301
    2. '7' → logprob: -7.127193927764893
    3. ' int' → logprob: -7.377193927764893
    4. '5' → logprob: -8.00219440460205
    5. '6' → logprob: -8.62719440460205
    6. '10' → logprob: -9.75219440460205
    7. '4' → logprob: -9.75219440460205
    8. '3' → logprob: -10.00219440460205
    9. '0' → logprob: -10.87719440460205
    10. '8' → logprob: -10.87719440460205

Token 807: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008558427914977074
    2. '()' → logprob: -5.00855827331543
    3. 'input' → logprob: -6.50855827331543
    4. '(' → logprob: -8.00855827331543
    5. '=input' → logprob: -11.38355827331543
    6. '(
' → logprob: -12.63355827331543
    7. '('' → logprob: -14.13355827331543
    8. '()
' → logprob: -14.38355827331543
    9. '(...)' → logprob: -14.75855827331543
    10. '("' → logprob: -15.38355827331543

Token 808: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00028374246903695166
    2. '())
' → logprob: -8.750284194946289
    3. '()' → logprob: -9.000284194946289
    4. ')' → logprob: -14.375284194946289
    5. '())

' → logprob: -14.625284194946289
    6. '().' → logprob: -15.125284194946289
    7. ' ())' → logprob: -15.250284194946289
    8. '()
' → logprob: -16.00028419494629
    9. '();)' → logprob: -16.25028419494629
    10. '(' → logprob: -16.62528419494629

Token 809: ' ' (ID: 220)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.00018089536752086133
    2. '
' → logprob: -10.000181198120117
    3. '.links' → logprob: -10.125181198120117
    4. '<|end|>' → logprob: -10.125181198120117
    5. ' links' → logprob: -10.750181198120117
    6. '```' → logprob: -11.000181198120117
    7. '_links' → logprob: -11.750181198120117
    8. '-links' → logprob: -12.375181198120117
    9. 'Links' → logprob: -14.125181198120117
    10. '#' → logprob: -14.375181198120117

Token 810: ' #' (ID: 1069)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'links' → logprob: -5.6696149840718135e-05
    2. '
' → logprob: -10.250056266784668
    3. '.links' → logprob: -11.750056266784668
    4. ' links' → logprob: -12.625056266784668
    5. '<|end|>' → logprob: -12.875056266784668
    6. 'lines' → logprob: -13.125056266784668
    7. '```' → logprob: -13.500056266784668
    8. '-links' → logprob: -13.500056266784668
    9. '_links' → logprob: -13.875056266784668
    10. 'edges' → logprob: -14.000056266784668

Token 811: ' nb' (ID: 28791)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'links' → logprob: -2.9040898880339228e-05
    2. 'lines' → logprob: -10.875028610229492
    3. 'for' → logprob: -12.000028610229492
    4. 'n' → logprob: -13.625028610229492
    5. 'edges' → logprob: -13.750028610229492
    6. '.links' → logprob: -14.625028610229492
    7. ' links' → logprob: -14.750028610229492
    8. 'import' → logprob: -15.625028610229492
    9. 'nodes' → logprob: -15.875028610229492
    10. 'labels' → logprob: -16.000028610229492

Token 812: ' somm' (ID: 44830)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.36471912264823914
    2. '_links' → logprob: -1.6147191524505615
    3. 'n' → logprob: -2.6147191524505615
    4. '
' → logprob: -4.239718914031982
    5. '=' → logprob: -5.114718914031982
    6. ' links' → logprob: -5.989718914031982
    7. '<|end|>' → logprob: -5.989718914031982
    8. 'for' → logprob: -6.364718914031982
    9. '.links' → logprob: -6.489718914031982
    10. 'edges' → logprob: -7.614718914031982

Token 813: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.018261270597577095
    2. 'et' → logprob: -4.018261432647705
    3. 'es' → logprob: -9.393260955810547
    4. 'ètes' → logprob: -11.893260955810547
    5. 'ètres' → logprob: -12.518260955810547
    6. 'ers' → logprob: -12.518260955810547
    7. 'etes' → logprob: -12.643260955810547
    8. 'ettes' → logprob: -13.268260955810547
    9. 't' → logprob: -13.518260955810547
    10. 'ет' → logprob: -14.018260955810547

Token 814: '
' (ID: 198)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -5.478889215737581e-05
    2. '<|end|>' → logprob: -10.750054359436035
    3. ' links' → logprob: -11.000054359436035
    4. '.links' → logprob: -11.625054359436035
    5. '
' → logprob: -12.875054359436035
    6. '-links' → logprob: -13.250054359436035
    7. '_links' → logprob: -13.875054359436035
    8. '```' → logprob: -13.875054359436035
    9. 'lines' → logprob: -14.250054359436035
    10. 'n' → logprob: -15.750054359436035

Token 815: 'links' (ID: 26581)
  Prédit: 'links'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -1.6405310816480778e-05
    2. 'lines' → logprob: -12.250016212463379
    3. '.links' → logprob: -12.500016212463379
    4. '```' → logprob: -13.125016212463379
    5. ' links' → logprob: -13.375016212463379
    6. '
' → logprob: -13.375016212463379
    7. '_links' → logprob: -14.500016212463379
    8. 'edges' → logprob: -14.750016212463379
    9. '<|end|>' → logprob: -14.875016212463379
    10. 'link' → logprob: -15.000016212463379

Token 816: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759612321853638
    2. ' =' → logprob: -0.8259612321853638
    3. '=[' → logprob: -11.450961112976074
    4. '=[]' → logprob: -11.700961112976074
    5. '=[]
' → logprob: -14.200961112976074
    6. '[' → logprob: -14.700961112976074
    7. ' ' → logprob: -15.075961112976074
    8. ' =[' → logprob: -15.200961112976074
    9. '=[[' → logprob: -15.575961112976074
    10. '[]' → logprob: -15.825961112976074

Token 817: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005595852271653712
    2. ' [[]' → logprob: -7.5005598068237305
    3. '{' → logprob: -12.00055980682373
    4. '[[' → logprob: -15.62555980682373
    5. '[n' → logprob: -16.000558853149414
    6. '[]
' → logprob: -16.875558853149414
    7. 'default' → logprob: -17.250558853149414
    8. '   ' → logprob: -17.625558853149414
    9. '[List' → logprob: -17.875558853149414
    10. '[int' → logprob: -18.000558853149414

Token 818: 'set' (ID: 977)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00020628207130357623
    2. '[]
' → logprob: -8.500205993652344
    3. 'set' → logprob: -13.750205993652344
    4. '[]

' → logprob: -14.000205993652344
    5. '[' → logprob: -15.000205993652344
    6. ' []' → logprob: -15.125205993652344
    7. 'list' → logprob: -15.125205993652344
    8. '[]}' → logprob: -18.250205993652344
    9. '[]"' → logprob: -18.750205993652344
    10. '[]=' → logprob: -19.375205993652344

Token 819: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011045700375689194
    2. '()
' → logprob: -9.250110626220703
    3. '()]' → logprob: -11.250110626220703
    4. ' ()' → logprob: -14.750110626220703
    5. '()

' → logprob: -15.250110626220703
    6. '[]' → logprob: -15.250110626220703
    7. '([]' → logprob: -16.000110626220703
    8. '()]
' → logprob: -16.625110626220703
    9. '（）' → logprob: -16.750110626220703
    10. '()=>' → logprob: -16.750110626220703

Token 820: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028458870947360992
    2. 'for' → logprob: -5.877845764160156
    3. ' for' → logprob: -10.877845764160156
    4. '()]' → logprob: -11.502845764160156
    5. '(' → logprob: -12.627845764160156
    6. '(n' → logprob: -12.877845764160156
    7. '()
' → logprob: -13.377845764160156
    8. ')' → logprob: -13.877845764160156
    9. ' ()' → logprob: -14.002845764160156
    10. ']' → logprob: -14.252845764160156

Token 821: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.246537173457909e-06
    2. ' _' → logprob: -12.625003814697266
    3. '_range' → logprob: -14.500003814697266
    4. ' range' → logprob: -15.375003814697266
    5. 'range' → logprob: -15.625003814697266
    6. '_
' → logprob: -17.625003814697266
    7. '_

' → logprob: -18.750003814697266
    8. '_i' → logprob: -19.125003814697266
    9. 'in' → logprob: -19.625003814697266
    10. '_in' → logprob: -19.750003814697266

Token 822: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.134826198220253
    2. ' range' → logprob: -2.384826183319092
    3. '_' → logprob: -3.384826183319092
    4. '_range' → logprob: -9.38482666015625
    5. 'in' → logprob: -10.25982666015625
    6. ' in' → logprob: -11.13482666015625
    7. ' _' → logprob: -12.50982666015625
    8. '(range' → logprob: -13.00982666015625
    9. 'ange' → logprob: -13.63482666015625
    10. 'n' → logprob: -13.75982666015625

Token 823: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '	range' → logprob: -20.875017166137695
    4. '(range' → logprob: -21.250017166137695
    5. '_range' → logprob: -22.000017166137695
    6. '_' → logprob: -22.375017166137695
    7. '   ' → logprob: -23.625017166137695
    8. '```' → logprob: -23.750017166137695
    9. 'n' → logprob: -23.875017166137695
    10. '
' → logprob: -24.250017166137695

Token 824: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0592806339263916
    2. 'range' → logprob: -1.0592806339263916
    3. '(range' → logprob: -1.3092806339263916
    4. ' range' → logprob: -3.3092806339263916
    5. 'n' → logprob: -10.934280395507812
    6. '	range' → logprob: -12.184280395507812
    7. 'Range' → logprob: -12.559280395507812
    8. '_range' → logprob: -12.684280395507812
    9. '(' → logprob: -13.059280395507812
    10. '
' → logprob: -14.809280395507812

Token 825: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.038204092532396317
    2. ')]
' → logprob: -3.2882041931152344
    3. ')]
' → logprob: -8.913204193115234
    4. ')' → logprob: -11.163204193115234
    5. ')]

' → logprob: -11.288204193115234
    6. ' )' → logprob: -14.038204193115234
    7. ']' → logprob: -14.788204193115234
    8. ')])' → logprob: -16.788204193115234
    9. ')
' → logprob: -17.413204193115234
    10. ')].' → logprob: -17.913204193115234

Token 826: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.860340752406046e-05
    2. ' for' → logprob: -9.7500581741333
    3. '<|end|>' → logprob: -15.5000581741333
    4. 'n' → logprob: -16.875059127807617
    5. '	for' → logprob: -18.000059127807617
    6. '```' → logprob: -19.250059127807617
    7. 'For' → logprob: -19.500059127807617
    8. '_for' → logprob: -20.750059127807617
    9. '<|end|>' → logprob: -20.750059127807617
    10. 'import' → logprob: -20.875059127807617

Token 827: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.816093228830141e-06
    2. '_i' → logprob: -13.12500286102295
    3. ' _' → logprob: -15.00000286102295
    4. '_=' → logprob: -15.25000286102295
    5. '_range' → logprob: -16.500001907348633
    6. '_
' → logprob: -16.750001907348633
    7. 'i' → logprob: -18.000001907348633
    8. '_in' → logprob: -18.125001907348633
    9. ' i' → logprob: -18.375001907348633
    10. '_
' → logprob: -20.000001907348633

Token 828: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6216617226600647
    2. ' in' → logprob: -1.12166166305542
    3. 'in' → logprob: -2.37166166305542
    4. ' _' → logprob: -3.24666166305542
    5. 'i' → logprob: -5.87166166305542
    6. '_i' → logprob: -6.99666166305542
    7. ' i' → logprob: -7.49666166305542
    8. ' ' → logprob: -8.371662139892578
    9. 'range' → logprob: -8.371662139892578
    10. ' range' → logprob: -9.246662139892578

Token 829: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '	range' → logprob: -18.625059127807617
    4. '(range' → logprob: -19.000059127807617
    5. 'r' → logprob: -19.625059127807617
    6. '_range' → logprob: -20.875059127807617
    7. 'rang' → logprob: -21.125059127807617
    8. ' ' → logprob: -21.625059127807617
    9. 'in' → logprob: -21.625059127807617
    10. 'ran' → logprob: -22.250059127807617

Token 830: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.735893965815194e-05
    2. 'n' → logprob: -11.000017166137695
    3. '(' → logprob: -14.500017166137695
    4. ' (' → logprob: -18.125017166137695
    5. ' n' → logprob: -18.250017166137695
    6. '(
' → logprob: -18.375017166137695
    7. 'range' → logprob: -18.375017166137695
    8. '(int' → logprob: -18.375017166137695
    9. '	n' → logprob: -19.500017166137695
    10. '(range' → logprob: -20.000017166137695

Token 831: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04324318468570709
    2. ' -' → logprob: -3.168243169784546
    3. '(n' → logprob: -8.668243408203125
    4. '):
' → logprob: -9.918243408203125
    5. 'n' → logprob: -11.668243408203125
    6. '):' → logprob: -12.043243408203125
    7. ' n' → logprob: -13.168243408203125
    8. '()-' → logprob: -13.168243408203125
    9. ' ' → logprob: -14.043243408203125
    10. '  ' → logprob: -14.043243408203125

Token 832: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '=' → logprob: -16.125019073486328
    4. ')' → logprob: -16.125019073486328
    5. 'int' → logprob: -16.875019073486328
    6. 't' → logprob: -17.625019073486328
    7. '<|end|>' → logprob: -18.000019073486328
    8. '
' → logprob: -18.125019073486328
    9. '0' → logprob: -18.125019073486328
    10. 'n' → logprob: -18.625019073486328

Token 833: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08266787976026535
    2. '():
' → logprob: -3.332667827606201
    3. ':
' → logprob: -4.332667827606201
    4. ':' → logprob: -4.457667827606201
    5. '):' → logprob: -4.582667827606201
    6. '<|end|>' → logprob: -6.457667827606201
    7. ',' → logprob: -6.707667827606201
    8. '   ' → logprob: -6.832667827606201
    9. '```' → logprob: -7.082667827606201
    10. ',v' → logprob: -7.457667827606201

Token 834: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12181121110916138
    2. ' u' → logprob: -2.2468111515045166
    3. 'a' → logprob: -4.746811389923096
    4. ' a' → logprob: -8.996810913085938
    5. '   ' → logprob: -9.496810913085938
    6. '	u' → logprob: -10.746810913085938
    7. ',u' → logprob: -11.121810913085938
    8. 'v' → logprob: -11.371810913085938
    9. '(u' → logprob: -12.371810913085938
    10. '    
' → logprob: -12.371810913085938

Token 835: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01827683486044407
    2. 'a' (adapté à ' a') → logprob: -4.018276691436768
    3. 'x' → logprob: -9.643277168273926
    4. ' u' → logprob: -9.768277168273926
    5. 'v' → logprob: -12.393277168273926
    6. 'f' → logprob: -15.143277168273926
    7. ' a' → logprob: -15.268277168273926
    8. 'i' → logprob: -16.39327621459961
    9. '```' → logprob: -16.76827621459961
    10. 'b' → logprob: -17.01827621459961

Token 836: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.046480074524879456
    2. ',b' → logprob: -3.171480178833008
    3. ' ,' → logprob: -5.671480178833008
    4. 'b' → logprob: -10.671480178833008
    5. ',v' → logprob: -12.546480178833008
    6. ',s' → logprob: -13.671480178833008
    7. '_,' → logprob: -14.296480178833008
    8. ' =' → logprob: -14.421480178833008
    9. ' b' → logprob: -14.671480178833008
    10. ',input' → logprob: -14.921480178833008

Token 837: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. '*b' → logprob: -20.376502990722656
    4. '	b' → logprob: -20.876502990722656
    5. ',b' → logprob: -21.126502990722656
    6. ' ' → logprob: -22.501502990722656
    7. '=b' → logprob: -22.501502990722656
    8. '   ' → logprob: -22.751502990722656
    9. '_b' → logprob: -23.126502990722656
    10. '=' → logprob: -23.126502990722656

Token 838: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020871460437775
    2. ' =' → logprob: -2.3502087593078613
    3. '=input' → logprob: -13.350208282470703
    4. 'a' → logprob: -15.600208282470703
    5. '=int' → logprob: -15.975208282470703
    6. '=a' → logprob: -16.850208282470703
    7. '=line' → logprob: -17.850208282470703
    8. '=list' → logprob: -17.975208282470703
    9. '＝' → logprob: -18.100208282470703
    10. ',' → logprob: -18.225208282470703

Token 839: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0019287518225610256
    2. ' map' → logprob: -6.251928806304932
    3. '[' → logprob: -16.251928329467773
    4. '	map' → logprob: -16.501928329467773
    5. '(map' → logprob: -17.376928329467773
    6. 'list' → logprob: -17.501928329467773
    7. '.map' → logprob: -19.251928329467773
    8. ' [' → logprob: -19.626928329467773
    9. '
' → logprob: -20.001928329467773
    10. '_map' → logprob: -20.376928329467773

Token 840: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010556964843999594
    2. 'int' → logprob: -9.250105857849121
    3. '(' → logprob: -12.375105857849121
    4. '(input' → logprob: -13.250105857849121
    5. '=int' → logprob: -13.875105857849121
    6. '<int' → logprob: -14.125105857849121
    7. '[int' → logprob: -14.125105857849121
    8. '(lambda' → logprob: -14.875105857849121
    9. '(map' → logprob: -15.875105857849121
    10. '(
' → logprob: -15.875105857849121

Token 841: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.08010957390069962
    2. ',' → logprob: -2.9551095962524414
    3. 'input' → logprob: -4.205109596252441
    4. '(input' → logprob: -4.705109596252441
    5. ' ,' → logprob: -8.455109596252441
    6. '   ' → logprob: -8.830109596252441
    7. '=input' → logprob: -8.830109596252441
    8. '(' → logprob: -8.955109596252441
    9. ' input' → logprob: -9.455109596252441
    10. '```' → logprob: -9.830109596252441

Token 842: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.306760805164231e-05
    2. ' input' → logprob: -11.25001335144043
    3. '(input' → logprob: -20.62501335144043
    4. '_input' → logprob: -20.87501335144043
    5. 'Input' → logprob: -21.00001335144043
    6. '=input' → logprob: -21.37501335144043
    7. '<input' → logprob: -21.50001335144043
    8. ',input' → logprob: -22.37501335144043
    9. 'range' → logprob: -22.50001335144043
    10. '	input' → logprob: -23.00001335144043

Token 843: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3544423381972592e-05
    2. 'split' → logprob: -12.75001335144043
    3. '()' → logprob: -12.87501335144043
    4. '.split' → logprob: -13.00001335144043
    5. '   ' → logprob: -13.50001335144043
    6. 'input' → logprob: -13.87501335144043
    7. '.strip' → logprob: -14.12501335144043
    8. '()[' → logprob: -14.25001335144043
    9. '.readline' → logprob: -14.87501335144043
    10. '()
' → logprob: -15.00001335144043

Token 844: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.541112427134067e-05
    2. 'strip' → logprob: -9.500075340270996
    3. ' split' → logprob: -15.500075340270996
    4. 'rstrip' → logprob: -15.875075340270996
    5. 'read' → logprob: -16.750076293945312
    6. '(split' → logprob: -17.000076293945312
    7. 'map' → logprob: -17.250076293945312
    8. 'str' → logprob: -17.375076293945312
    9. 'plit' → logprob: -17.625076293945312
    10. '```' → logprob: -19.625076293945312

Token 845: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.046605926007032394
    2. ')' → logprob: -3.4216058254241943
    3. '())
' → logprob: -4.421606063842773
    4. '()' → logprob: -7.296606063842773
    5. ')
' → logprob: -9.046606063842773
    6. '(' → logprob: -10.171606063842773
    7. '())
' → logprob: -11.296606063842773
    8. '()
' → logprob: -12.046606063842773
    9. '());' → logprob: -12.921606063842773
    10. ' ())' → logprob: -13.296606063842773

Token 846: '   ' (ID: 271)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.03336130827665329
    2. 'a' → logprob: -4.033361434936523
    3. '   ' → logprob: -4.908361434936523
    4. ' links' → logprob: -6.033361434936523
    5. '.links' → logprob: -6.283361434936523
    6. '```' → logprob: -6.533361434936523
    7. '
' → logprob: -7.283361434936523
    8. '    
' → logprob: -7.908361434936523
    9. '[' → logprob: -8.283361434936523
    10. '<|end|>' → logprob: -8.283361434936523

Token 847: ' a' (ID: 261)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.387131005525589
    2. 'a' (adapté à ' a') → logprob: -1.1371309757232666
    3. ' links' → logprob: -8.387130737304688
    4. ' a' → logprob: -10.512130737304688
    5. '-links' → logprob: -13.262130737304688
    6. '.links' → logprob: -14.012130737304688
    7. '```' → logprob: -14.137130737304688
    8. '   ' → logprob: -14.262130737304688
    9. '
' → logprob: -15.137130737304688
    10. '_links' → logprob: -15.387130737304688

Token 848: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.35298651456832886
    2. '-' → logprob: -1.8529865741729736
    3. '-=' → logprob: -1.9779865741729736
    4. 'a' → logprob: -6.9779863357543945
    5. ' -' → logprob: -6.9779863357543945
    6. '.' → logprob: -8.977986335754395
    7. '<|end|>' → logprob: -10.102986335754395
    8. ' ' → logprob: -10.227986335754395
    9. '   ' → logprob: -10.352986335754395
    10. ',' → logprob: -10.477986335754395

Token 849: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -20.125009536743164
    4. '```' → logprob: -20.375009536743164
    5. '<|end|>' → logprob: -21.250009536743164
    6. '۱' → logprob: -22.000009536743164
    7. '１' → logprob: -22.562509536743164
    8. '2' → logprob: -22.937509536743164
    9. '১' → logprob: -23.000009536743164
    10. '१' → logprob: -23.187509536743164

Token 850: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -20.750001907348633
    4. '```' → logprob: -21.375001907348633
    5. '۱' → logprob: -21.500001907348633
    6. '１' → logprob: -21.500001907348633
    7. '১' → logprob: -22.125001907348633
    8. '१' → logprob: -22.375001907348633
    9. '2' → logprob: -22.437501907348633
    10. '<|end|>' → logprob: -22.625001907348633

Token 851: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3229517638683319
    2. 'b' → logprob: -1.3229517936706543
    3. ' b' → logprob: -4.947951793670654
    4. ' links' → logprob: -6.822951793670654
    5. '
' → logprob: -6.947951793670654
    6. 'links' → logprob: -8.197951316833496
    7. ',' → logprob: -9.322951316833496
    8. '[' → logprob: -10.572951316833496
    9. '```' → logprob: -10.572951316833496
    10. ',b' → logprob: -11.322951316833496

Token 852: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.17479461431503296
    2. ' links' → logprob: -2.6747946739196777
    3. ' b' → logprob: -3.1747946739196777
    4. 'links' → logprob: -3.2997946739196777
    5. '   ' → logprob: -4.424794673919678
    6. '
' → logprob: -7.674794673919678
    7. '```' → logprob: -9.17479419708252
    8. ',' → logprob: -9.79979419708252
    9. '.links' → logprob: -9.79979419708252
    10. ' 
' → logprob: -9.92479419708252

Token 853: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -3.054500666621607e-06
    2. ' b' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.625003814697266
    4. '	b' → logprob: -22.250003814697266
    5. '```' → logprob: -24.250003814697266
    6. 'links' → logprob: -25.000003814697266
    7. '_b' → logprob: -26.250003814697266
    8. ' ' → logprob: -26.375003814697266
    9. '#' → logprob: -27.125003814697266
    10. '.b' → logprob: -27.250003814697266

Token 854: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.04872850328683853
    2. '-=' → logprob: -3.0487284660339355
    3. '-' → logprob: -8.923728942871094
    4. '   ' → logprob: -13.048728942871094
    5. ' ' → logprob: -13.048728942871094
    6. ' -' → logprob: -13.548728942871094
    7. '=' → logprob: -13.673728942871094
    8. ' ' → logprob: -14.298728942871094
    9. '	' → logprob: -16.173728942871094
    10. '    ' → logprob: -16.423728942871094

Token 855: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -19.625085830688477
    4. '<|end|>' → logprob: -20.000085830688477
    5. '```' → logprob: -20.500085830688477
    6. '۱' → logprob: -21.437585830688477
    7. '0' → logprob: -21.500085830688477
    8. '１' → logprob: -21.562585830688477
    9. '  ' → logprob: -21.812585830688477
    10. '2' → logprob: -22.187585830688477

Token 856: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -19.375
    4. '```' → logprob: -21.875
    5. '۱' → logprob: -22.0625
    6. '１' → logprob: -22.375
    7. '   ' → logprob: -22.4375
    8. '১' → logprob: -22.5625
    9. '0' → logprob: -22.625
    10. '१' → logprob: -22.6875

Token 857: '
' (ID: 198)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.13002556562423706
    2. '   ' → logprob: -2.255025625228882
    3. ' links' → logprob: -4.130025386810303
    4. '```' → logprob: -7.380025386810303
    5. '
' → logprob: -8.630025863647461
    6. '``' → logprob: -9.255025863647461
    7. '.links' → logprob: -9.880025863647461
    8. ' ' → logprob: -11.630025863647461
    9. '_links' → logprob: -12.380025863647461
    10. '-links' → logprob: -12.630025863647461

Token 858: '   ' (ID: 271)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.0035040881484746933
    2. ' links' → logprob: -5.753504276275635
    3. '   ' → logprob: -8.378503799438477
    4. '```' → logprob: -9.378503799438477
    5. '``' → logprob: -12.003503799438477
    6. '
' → logprob: -12.503503799438477
    7. '.links' → logprob: -13.253503799438477
    8. '-links' → logprob: -15.753503799438477
    9. '_links' → logprob: -16.003503799438477
    10. ' ' → logprob: -17.003503799438477

Token 859: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' (adapté à ' links') → logprob: -1.9361264946837764e-07
    2. ' links' → logprob: -15.625
    3. '.links' → logprob: -18.25
    4. '```' → logprob: -19.5
    5. '
' → logprob: -20.375
    6. '   ' → logprob: -20.5
    7. 'lines' → logprob: -21.375
    8. '``' → logprob: -21.625
    9. '-links' → logprob: -21.75
    10. 'contacts' → logprob: -22.25

Token 860: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.512236498361744e-07
    2. 'a' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.875
    4. '[b' → logprob: -18.0
    5. '[' → logprob: -18.75
    6. '
' → logprob: -19.125
    7. '```' → logprob: -19.625
    8. ' [' → logprob: -20.75
    9. '[u' → logprob: -21.375
    10. '\[' → logprob: -21.5

Token 861: '].' (ID: 1651)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.04912718012928963
    2. '].' → logprob: -3.0491271018981934
    3. '[a' → logprob: -7.924127101898193
    4. '.' → logprob: -9.299127578735352
    5. '[b' → logprob: -9.424127578735352
    6. ').' → logprob: -13.549127578735352
    7. 'add' → logprob: -13.674127578735352
    8. ' .' → logprob: -13.924127578735352
    9. '.append' → logprob: -14.174127578735352
    10. ']' → logprob: -15.049127578735352

Token 862: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. '.add' → logprob: -15.75
    3. ' add' → logprob: -19.75
    4. '	add' → logprob: -19.75
    5. 'append' → logprob: -19.75
    6. ')add' → logprob: -22.125
    7. '
' → logprob: -23.0
    8. '_add' → logprob: -23.25
    9. 'adde' → logprob: -23.75
    10. 'addi' → logprob: -24.0

Token 863: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.006716079078614712
    2. 'b' → logprob: -5.006716251373291
    3. '	b' → logprob: -14.506715774536133
    4. ' b' → logprob: -15.631715774536133
    5. 'B' → logprob: -16.881715774536133
    6. ')b' → logprob: -17.381715774536133
    7. '(' → logprob: -19.131715774536133
    8. '=b' → logprob: -19.256715774536133
    9. '(
' → logprob: -19.631715774536133
    10. '[b' → logprob: -20.131715774536133

Token 864: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.21327102184295654
    2. ')' → logprob: -1.9632710218429565
    3. '   ' → logprob: -2.963271141052246
    4. ')
' → logprob: -12.338271141052246
    5. ' )
' → logprob: -12.713271141052246
    6. '<|end|>' → logprob: -12.838271141052246
    7. ')b' → logprob: -13.588271141052246
    8. '),' → logprob: -14.213271141052246
    9. ',' → logprob: -14.713271141052246
    10. 'b' → logprob: -14.963271141052246

Token 865: '   ' (ID: 271)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.10096687823534012
    2. '   ' → logprob: -2.3509669303894043
    3. ' links' → logprob: -7.475966930389404
    4. '```' → logprob: -8.850966453552246
    5. '.links' → logprob: -11.225966453552246
    6. '``' → logprob: -11.225966453552246
    7. ' ' → logprob: -11.850966453552246
    8. '  ' → logprob: -12.100966453552246
    9. '       ' → logprob: -12.975966453552246
    10. '-links' → logprob: -13.725966453552246

Token 866: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' (adapté à ' links') → logprob: -0.0013844015775248408
    2. ' links' → logprob: -6.626384258270264
    3. '   ' → logprob: -9.751384735107422
    4. '.links' → logprob: -15.626384735107422
    5. 'link' → logprob: -16.751384735107422
    6. '       ' → logprob: -16.876384735107422
    7. '```' → logprob: -17.126384735107422
    8. '-links' → logprob: -17.626384735107422
    9. '  ' → logprob: -17.751384735107422
    10. ' ' → logprob: -17.876384735107422

Token 867: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.9361264946837764e-07
    2. 'b' → logprob: -16.75
    3. '[' → logprob: -18.875
    4. '[a' → logprob: -20.0
    5. '```' → logprob: -21.125
    6. ' [' → logprob: -21.625
    7. '	b' → logprob: -21.75
    8. '[
' → logprob: -22.75
    9. 's' → logprob: -22.75
    10. ' b' → logprob: -22.875

Token 868: '].' (ID: 1651)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.042218390852212906
    2. '.add' → logprob: -3.5422184467315674
    3. '.' → logprob: -4.417218208312988
    4. ' .' → logprob: -9.042218208312988
    5. '.a' → logprob: -9.542218208312988
    6. '   ' → logprob: -9.792218208312988
    7. '[b' → logprob: -9.917218208312988
    8. '[' → logprob: -11.792218208312988
    9. 'a' → logprob: -12.292218208312988
    10. '].' → logprob: -12.292218208312988

Token 869: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.5048530030981055e-06
    2. 'a' → logprob: -13.500001907348633
    3. ' add' → logprob: -18.000001907348633
    4. '.add' → logprob: -20.500001907348633
    5. 'append' → logprob: -21.375001907348633
    6. '	add' → logprob: -21.625001907348633
    7. '_add' → logprob: -23.625001907348633
    8. ')add' → logprob: -23.875001907348633
    9. '(add' → logprob: -24.000001907348633
    10. 'adde' → logprob: -24.000001907348633

Token 870: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00020354038861114532
    2. 'a' → logprob: -8.500203132629395
    3. ' a' → logprob: -17.75020408630371
    4. '(
' → logprob: -18.25020408630371
    5. '[a' → logprob: -18.75020408630371
    6. ' (' → logprob: -19.25020408630371
    7. '(' → logprob: -19.75020408630371
    8. '	a' → logprob: -20.25020408630371
    9. '```' → logprob: -20.37520408630371
    10. '   ' → logprob: -21.00020408630371

Token 871: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -16.125
    4. '))' → logprob: -18.75
    5. ')a' → logprob: -19.375
    6. ')}' → logprob: -19.5
    7. ')
' → logprob: -19.875
    8. '}' → logprob: -20.0
    9. '),' → logprob: -20.375
    10. ')

' → logprob: -20.375

Token 872: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019320493564009666
    2. 'length' → logprob: -4.644320487976074
    3. 'result' → logprob: -5.894320487976074
    4. 'l' → logprob: -6.019320487976074
    5. '```' → logprob: -6.394320487976074
    6. 'res' → logprob: -6.894320487976074
    7. 'k' → logprob: -7.769320487976074
    8. 'depth' → logprob: -7.769320487976074
    9. 'h' → logprob: -8.144320487976074
    10. 'r' → logprob: -9.019320487976074

Token 873: ' Pers' (ID: 23032)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0831722766160965
    2. 'res' → logprob: -3.45817232131958
    3. 'length' → logprob: -3.70817232131958
    4. 'result' → logprob: -5.08317232131958
    5. 'ans' → logprob: -5.20817232131958
    6. 'd' → logprob: -5.95817232131958
    7. 'depth' → logprob: -5.95817232131958
    8. 'r' → logprob: -6.20817232131958
    9. 'l' → logprob: -6.20817232131958
    10. 'k' → logprob: -6.83317232131958

Token 874: 'o' (ID: 78)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.5050996541976929
    2. 'ist' → logprob: -2.3800997734069824
    3. 'u' → logprob: -3.1300997734069824
    4. 'print' → logprob: -3.3800997734069824
    5. 'ent' → logprob: -3.6300997734069824
    6. 'pectives' → logprob: -3.8800997734069824
    7. 'ists' → logprob: -4.005099773406982
    8. 'on' → logprob: -4.130099773406982
    9. '#' → logprob: -4.380099773406982
    10. 'result' → logprob: -4.380099773406982

Token 875: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.182918518781662
    2. 'length' → logprob: -2.3079185485839844
    3. 'len' → logprob: -3.5579185485839844
    4. 'r' → logprob: -4.432918548583984
    5. 'result' → logprob: -5.557918548583984
    6. 'size' → logprob: -5.682918548583984
    7. ' print' → logprob: -5.807918548583984
    8. 'v' → logprob: -5.807918548583984
    9. 'nt' → logprob: -5.932918548583984
    10. ' length' → logprob: -5.932918548583984

Token 876: ''aurais' (ID: 149917)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.024537833407521248
    2. 'print' → logprob: -3.7745378017425537
    3. 'for' → logprob: -7.149538040161133
    4. '
' → logprob: -9.274538040161133
    5. 'uts' → logprob: -9.274538040161133
    6. 'ut' → logprob: -9.899538040161133
    7. 'ython' → logprob: -10.274538040161133
    8. '(r' → logprob: -10.399538040161133
    9. '#' → logprob: -10.649538040161133
    10. 'result' → logprob: -10.899538040161133

Token 877: ' mis' (ID: 4694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.644463479053229e-05
    2. 'fait' → logprob: -12.000046730041504
    3. 'result' → logprob: -12.500046730041504
    4. 'pr' → logprob: -12.500046730041504
    5. 'pref' → logprob: -12.750046730041504
    6. '#' → logprob: -12.875046730041504
    7. 'ans' → logprob: -12.875046730041504
    8. 'prit' → logprob: -13.000046730041504
    9. ' print' → logprob: -13.125046730041504
    10. 'im' → logprob: -13.250046730041504

Token 878: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.913265239447355e-05
    2. ' print' → logprob: -10.250099182128906
    3. 'length' → logprob: -10.375099182128906
    4. 'result' → logprob: -11.375099182128906
    5. '```' → logprob: -11.375099182128906
    6. 'for' → logprob: -12.625099182128906
    7. 'depth' → logprob: -12.875099182128906
    8. 'len' → logprob: -14.000099182128906
    9. '
' → logprob: -14.125099182128906
    10. 'l' → logprob: -15.000099182128906

Token 879: ' sortie' (ID: 52761)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1712077260017395
    2. 'length' → logprob: -2.6712076663970947
    3. 'l' → logprob: -3.1712076663970947
    4. 'd' → logprob: -4.921207904815674
    5. 'long' → logprob: -4.921207904815674
    6. 'result' → logprob: -5.171207904815674
    7. 'len' → logprob: -5.421207904815674
    8. 'depth' → logprob: -5.546207904815674
    9. 'r' → logprob: -5.671207904815674
    10. 'c' → logprob: -6.046207904815674

Token 880: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8361762762069702
    2. 'length' → logprob: -1.5861762762069702
    3. ' =' → logprob: -1.7111762762069702
    4. '=' → logprob: -2.4611763954162598
    5. 'len' → logprob: -4.08617639541626
    6. 'ans' → logprob: -4.33617639541626
    7. 'v' → logprob: -4.33617639541626
    8. ',' → logprob: -4.46117639541626
    9. 'result' → logprob: -4.71117639541626
    10. 'size' → logprob: -5.33617639541626

Token 881: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005189755465835333
    2. 'def' → logprob: -5.380189895629883
    3. 'solve' → logprob: -7.880189895629883
    4. 'le' → logprob: -10.380189895629883
    5. '```' → logprob: -10.380189895629883
    6. 'stdout' → logprob: -10.755189895629883
    7. 'la' → logprob: -11.130189895629883
    8. 'une' → logprob: -11.255189895629883
    9. 'a' → logprob: -11.255189895629883
    10. '__' → logprob: -11.380189895629883

Token 882: ' variable' (ID: 11076)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03948104754090309
    2. 'for' → logprob: -3.4144811630249023
    3. 'def' → logprob: -5.289481163024902
    4. '
' → logprob: -8.539481163024902
    5. '#' → logprob: -9.039481163024902
    6. 'tuple' → logprob: -9.414481163024902
    7. '```' → logprob: -9.414481163024902
    8. 'single' → logprob: -9.664481163024902
    9. ' for' → logprob: -10.289481163024902
    10. 'fonction' → logprob: -10.664481163024902

Token 883: ',' (ID: 11)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6119707226753235
    2. 'length' → logprob: -2.1119706630706787
    3. 'd' → logprob: -2.4869706630706787
    4. 'print' → logprob: -2.7369706630706787
    5. 'r' → logprob: -2.9869706630706787
    6. 'depth' → logprob: -3.1119706630706787
    7. 'ans' → logprob: -3.2369706630706787
    8. 'result' → logprob: -3.9869706630706787
    9. 'l' → logprob: -4.611970901489258
    10. 'h' → logprob: -4.736970901489258

Token 884: ' mais' (ID: 2899)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11481989175081253
    2. 'res' → logprob: -3.3648200035095215
    3. 'length' → logprob: -4.2398200035095215
    4. 'r' → logprob: -4.3648200035095215
    5. 'ans' → logprob: -4.7398200035095215
    6. 'd' → logprob: -4.8648200035095215
    7. 'l' → logprob: -4.8648200035095215
    8. 'p' → logprob: -5.3648200035095215
    9. 'depth' → logprob: -5.3648200035095215
    10. 'result' → logprob: -5.6148200035095215

Token 885: ' bon' (ID: 4846)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012464688159525394
    2. 'length' → logprob: -5.51246452331543
    3. 'd' → logprob: -6.13746452331543
    4. 'res' → logprob: -6.51246452331543
    5. 'ans' → logprob: -6.63746452331543
    6. 'l' → logprob: -6.88746452331543
    7. 'r' → logprob: -7.13746452331543
    8. 'depth' → logprob: -7.88746452331543
    9. 'k' → logprob: -8.13746452331543
    10. 'c' → logprob: -8.38746452331543

Token 886: '...
' (ID: 4908)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09743980318307877
    2. 'res' → logprob: -3.472439765930176
    3. 'r' → logprob: -3.972439765930176
    4. 'ans' → logprob: -4.222439765930176
    5. 'd' → logprob: -4.847439765930176
    6. 'l' → logprob: -5.097439765930176
    7. 'k' → logprob: -5.597439765930176
    8. 'length' → logprob: -5.722439765930176
    9. 'x' → logprob: -6.597439765930176
    10. 'result' → logprob: -6.597439765930176

Token 887: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14229802787303925
    2. 'd' → logprob: -3.1422979831695557
    3. 'l' → logprob: -3.3922979831695557
    4. 'length' → logprob: -4.017298221588135
    5. 'depth' → logprob: -4.267298221588135
    6. 'k' → logprob: -4.642298221588135
    7. 'r' → logprob: -5.267298221588135
    8. 'res' → logprob: -6.392298221588135
    9. 't' → logprob: -6.517298221588135
    10. 'm' → logprob: -7.142298221588135

Token 888: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0006125979125499725
    2. '(s' → logprob: -7.625612735748291
    3. '(' → logprob: -9.500612258911133
    4. '*' → logprob: -10.000612258911133
    5. '()' → logprob: -13.125612258911133
    6. '(*(' → logprob: -13.625612258911133
    7. '(*)' → logprob: -14.625612258911133
    8. 'solve' → logprob: -15.750612258911133
    9. '((*' → logprob: -16.250612258911133
    10. '*s' → logprob: -16.375612258911133

Token 889: 'solve' (ID: 117273)
  Prédit: 'solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -1.6240566083070007e-06
    2. ' solve' → logprob: -13.375001907348633
    3. 'resolve' → logprob: -19.125001907348633
    4. ')' → logprob: -19.875001907348633
    5. '
' → logprob: -20.500001907348633
    6. '.solve' → logprob: -20.500001907348633
    7. 'save' → logprob: -20.625001907348633
    8. 'sorted' → logprob: -21.000001907348633
    9. 'list' → logprob: -21.625001907348633
    10. 'sort' → logprob: -21.750001907348633

Token 890: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0052422950975596905
    2. '(' → logprob: -5.255242347717285
    3. ' (' → logprob: -11.755242347717285
    4. '(nodes' → logprob: -15.005242347717285
    5. '(len' → logprob: -16.38024139404297
    6. 'n' → logprob: -16.50524139404297
    7. '(lines' → logprob: -17.25524139404297
    8. '(numbers' → logprob: -17.50524139404297
    9. ')' → logprob: -17.75524139404297
    10. '```' → logprob: -18.25524139404297

Token 891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.875004768371582
    3. ' ,' → logprob: -13.625004768371582
    4. ',n' → logprob: -15.250004768371582
    5. '(n' → logprob: -15.375004768371582
    6. ',
' → logprob: -17.125003814697266
    7. ' (' → logprob: -17.875003814697266
    8. ',(' → logprob: -18.125003814697266
    9. '```' → logprob: -19.000003814697266
    10. ')' → logprob: -19.125003814697266

Token 892: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.0001238004770129919
    2. ' links' → logprob: -9.000123977661133
    3. '.links' → logprob: -15.375123977661133
    4. '   ' → logprob: -17.375123977661133
    5. '_links' → logprob: -18.375123977661133
    6. 'lines' → logprob: -18.500123977661133
    7. 'Links' → logprob: -18.750123977661133
    8. 'link' → logprob: -18.750123977661133
    9. '-links' → logprob: -18.750123977661133
    10. ' ' → logprob: -18.875123977661133

Token 893: '))' (ID: 915)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07807566225528717
    2. ')' → logprob: -3.078075647354126
    3. '))' → logprob: -3.578075647354126
    4. '()))' → logprob: -6.828075885772705
    5. '()' → logprob: -10.078075408935547
    6. '(' → logprob: -13.578075408935547
    7. ' ())' → logprob: -13.828075408935547
    8. ')))' → logprob: -14.703075408935547
    9. '())
' → logprob: -15.453075408935547
    10. '])' → logprob: -15.953075408935547


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 891
Tokens correctement prédits (1ère position, stricte): 319
Tokens correctement prédits (1ère position, avec adaptation): 342
Tokens correctement prédits (top 10): 699
Précision stricte (1ère position): 35.80%
Précision adaptée (1ère position): 38.38%
Précision (top 10): 78.45%
================================================================================
