================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:16:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Importe le module sys, utilisé pour interagir avec l'entrée et la sortie standard

# Assigner la fonction readline (pour lire une ligne de l'entrée standard) à la variable readline
readline = sys.stdin.readline

# Lire une ligne, la découper selon les espaces et convertir chaque morceau en entier
# Cela donne deux entiers : N (taille du tableau), K (nombre d'opérations à effectuer)
N, K = map(int, readline().split())

# Lire la ligne suivante, découper selon les espaces et convertir chaque morceau en entier
# On ajoute un 0 en début de liste pour que la liste soit 1-indicée, c'est-à-dire que l'index 1 de la liste corresponde au premier élément logique, facilitant l'accès dans un contexte où les indices commencent à 1
A = [0] + list(map(int, readline().split()))

# On initialise la variable now à 1
# Cette variable représente la 'position actuelle' dans la chaîne de sauts (à partir de l'index 1)
now = 1

# Boucle principale : on continue tant que K n'est pas nul
while K:
    # Si le bit de poids faible de K est à 1 (opération AND entre K et 1)
    # Cela signifie que pour ce bit de K, il faut faire un saut depuis la position now
    if K & 1:
        # Mettre à jour now en sautant vers la position indiquée par A[now]
        now = A[now]

    # Créer un nouveau tableau nex de taille N+1, initialisé avec des zéros
    # Ce tableau servira à calculer les 'doubles sauts' : nex[i] sera le résultat de deux sauts consécutifs
    nex = [0] * (N + 1)
    
    # Boucler sur toutes les positions possibles (de 0 à N inclus)
    for i in range(N + 1):
        # Pour chaque i, on définit nex[i] comme étant la position atteinte après deux sauts depuis i
        # Cela revient à appliquer la fonction A deux fois : d'abord A[i], puis A[A[i]]
        nex[i] = A[A[i]]
    
    # Mettre à jour le tableau A pour qu'il devienne la table des doubles sauts
    # Cela correspond à la montée binaire, utile pour traiter rapidement les grands K
    A = nex

    # Décaler K d'un bit vers la droite (division entière par 2)
    # Cela permet de traiter le bit suivant lors de la prochaine itération
    K >>= 1

# À la fin de toutes les opérations, afficher la position actuelle
print(now)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19882763922214508
    2. '\n' → logprob: -1.9488276243209839
    3. '\' → logprob: -4.448827743530273
    4. '<|end|>' → logprob: -4.573827743530273
    5. 'import' → logprob: -5.323827743530273
    6. 'newline' → logprob: -5.448827743530273
    7. '```' → logprob: -6.448827743530273
    8. '<|end|>' → logprob: -6.823827743530273
    9. '\r' → logprob: -6.948827743530273
    10. '' → logprob: -7.198827743530273

Token 4: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03274727240204811
    2. '<|end|>' → logprob: -4.532747268676758
    3. '.' → logprob: -4.657747268676758
    4. '  ' → logprob: -5.282747268676758
    5. ' .' → logprob: -6.032747268676758
    6. '<|end|>' → logprob: -7.032747268676758
    7. '[' → logprob: -7.657747268676758
    8. '\' → logprob: -7.907747268676758
    9. ' ,' → logprob: -8.032747268676758
    10. 'space' → logprob: -8.282747268676758

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.004095735494047403
    2. 'p' → logprob: -5.504095554351807
    3. 'por' → logprob: -12.129096031188965
    4. ' port' → logprob: -12.629096031188965
    5. ' ' → logprob: -12.754096031188965
    6. 'ports' → logprob: -13.504096031188965
    7. 'ported' → logprob: -13.504096031188965
    8. 'порт' → logprob: -14.754096031188965
    9. 'import' → logprob: -14.879096031188965
    10. 'porter' → logprob: -14.879096031188965

Token 6: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0803699940443039
    2. 'rt' → logprob: -2.7053699493408203
    3. ' ' → logprob: -5.08036994934082
    4. ' r' → logprob: -5.58036994934082
    5. ' rt' → logprob: -9.33036994934082
    6. 'ort' → logprob: -9.83036994934082
    7. 'port' → logprob: -10.08036994934082
    8. 'nt' → logprob: -10.33036994934082
    9. 'n' → logprob: -10.58036994934082
    10. '  ' → logprob: -10.58036994934082

Token 7: ' module' (ID: 8827)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9225286245346069
    2. ' ' → logprob: -1.297528624534607
    3. 's' → logprob: -1.422528624534607
    4. ' module' → logprob: -3.9225287437438965
    5. 'space' → logprob: -4.0475287437438965
    6. ' r' → logprob: -4.2975287437438965
    7. 'module' → logprob: -4.5475287437438965
    8. ' space' → logprob: -5.1725287437438965
    9. ' ' → logprob: -5.5475287437438965
    10. '```' → logprob: -5.9225287437438965

Token 8: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05800911411643028
    2. ',' → logprob: -3.933009147644043
    3. ' ' → logprob: -3.933009147644043
    4. '' → logprob: -4.933009147644043
    5. '\' → logprob: -5.683009147644043
    6. 'import' → logprob: -5.808009147644043
    7. '\n' → logprob: -6.683009147644043
    8. '  ' → logprob: -7.808009147644043
    9. '
' → logprob: -8.433009147644043
    10. '<|end|>' → logprob: -8.558009147644043

Token 9: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10700436681509018
    2. '\n' → logprob: -3.107004404067993
    3. 'import' → logprob: -3.857004404067993
    4. '
' → logprob: -4.482004165649414
    5. '\' → logprob: -5.107004165649414
    6. ' ' → logprob: -5.607004165649414
    7. 'newline' → logprob: -5.607004165649414
    8. '' → logprob: -6.107004165649414
    9. '<|end|>' → logprob: -6.357004165649414
    10. '.import' → logprob: -6.482004165649414

Token 10: ' utilisé' (ID: 53138)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9898456931114197
    2. ' ' → logprob: -1.4898457527160645
    3. 'import' → logprob: -1.9898457527160645
    4. ',' → logprob: -1.9898457527160645
    5. '\n' → logprob: -3.3648457527160645
    6. '\' → logprob: -3.9898457527160645
    7. ' ,' → logprob: -4.3648457527160645
    8. '
' → logprob: -4.7398457527160645
    9. ' .' → logprob: -4.9898457527160645
    10. '```' → logprob: -4.9898457527160645

Token 11: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7579150795936584
    2. ' pour' → logprob: -1.0079150199890137
    3. '.' → logprob: -2.1329150199890137
    4. 'pour' → logprob: -3.8829150199890137
    5. ' for' → logprob: -5.007915019989014
    6. ' ' → logprob: -5.882915019989014
    7. ',' → logprob: -6.132915019989014
    8. '```' → logprob: -6.132915019989014
    9. 'space' → logprob: -6.257915019989014
    10. ' en' → logprob: -6.382915019989014

Token 12: ' inter' (ID: 993)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8259807825088501
    2. ' gérer' → logprob: -1.70098078250885
    3. 'l' → logprob: -2.3259806632995605
    4. 'la' → logprob: -2.3259806632995605
    5. 'inter' → logprob: -3.2009806632995605
    6. 'ger' → logprob: -3.3259806632995605
    7. 'sys' → logprob: -4.0759806632995605
    8. ' la' → logprob: -4.5759806632995605
    9. 's' → logprob: -4.8259806632995605
    10. ' g' → logprob: -5.0759806632995605

Token 13: 'agir' (ID: 105832)
  Prédit: 'agir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agir' → logprob: -0.09653294086456299
    2. 'preter' → logprob: -2.7215328216552734
    3. 'pr' → logprob: -4.221532821655273
    4. 'rom' → logprob: -5.096532821655273
    5. 'dire' → logprob: -6.971532821655273
    6. 'cepter' → logprob: -6.971532821655273
    7. 'rup' → logprob: -7.596532821655273
    8. 'face' → logprob: -7.721532821655273
    9. 'rupt' → logprob: -7.971532821655273
    10. 'roger' → logprob: -8.096532821655273

Token 14: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.580930769443512
    2. ' with' → logprob: -2.205930709838867
    3. 'with' → logprob: -2.580930709838867
    4. '.' → logprob: -2.830930709838867
    5. ' avec' → logprob: -2.830930709838867
    6. ' .' → logprob: -3.205930709838867
    7. '  ' → logprob: -3.455930709838867
    8. '_' → logprob: -3.830930709838867
    9. 'import' → logprob: -4.580930709838867
    10. ' ,' → logprob: -5.080930709838867

Token 15: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6602991819381714
    2. ' le' → logprob: -1.2852991819381714
    3. ' l' → logprob: -2.910299301147461
    4. ' ' → logprob: -3.160299301147461
    5. 'l' → logprob: -3.285299301147461
    6. ' les' → logprob: -4.660299301147461
    7. 'les' → logprob: -5.035299301147461
    8. 'the' → logprob: -5.160299301147461
    9. ' ' → logprob: -5.160299301147461
    10. 'sys' → logprob: -5.535299301147461

Token 16: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06256268918514252
    2. 'e' → logprob: -3.1875627040863037
    3. 'a' → logprob: -4.687562465667725
    4. ''environnement' → logprob: -6.187562465667725
    5. ''a' → logprob: -6.562562465667725
    6. ''espace' → logprob: -6.562562465667725
    7. 'es' → logprob: -6.687562465667725
    8. ''application' → logprob: -7.187562465667725
    9. ''\' → logprob: -7.187562465667725
    10. ''.' → logprob: -7.812562465667725

Token 17: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1401280164718628
    2. '.' → logprob: -2.1401281356811523
    3. 'e' → logprob: -5.640128135681152
    4. '\' → logprob: -6.015128135681152
    5. '(' → logprob: -6.140128135681152
    6. 'import' → logprob: -7.015128135681152
    7. ')' → logprob: -7.140128135681152
    8. 'a' → logprob: -7.515128135681152
    9. '```' → logprob: -8.140128135681152
    10. ',
' → logprob: -8.390128135681152

Token 18: ' la' (ID: 557)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.26370295882225037
    2. ' sortie' → logprob: -2.138702869415283
    3. ' sort' → logprob: -3.013702869415283
    4. ' la' → logprob: -3.513702869415283
    5. 'la' → logprob: -4.263702869415283
    6. ' ' → logprob: -4.513702869415283
    7. ' output' → logprob: -6.013702869415283
    8. 'output' → logprob: -6.263702869415283
    9. ' sorties' → logprob: -6.763702869415283
    10. ' ' → logprob: -6.888702869415283

Token 19: ' sortie' (ID: 52761)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.16829875111579895
    2. ' ' → logprob: -2.2932987213134766
    3. 's' → logprob: -3.5432987213134766
    4. ' sortie' → logprob: -4.918298721313477
    5. ',' → logprob: -5.793298721313477
    6. '.' → logprob: -5.793298721313477
    7. 'o' → logprob: -6.168298721313477
    8. ''' → logprob: -6.293298721313477
    9. '_' → logprob: -6.543298721313477
    10. ' sort' → logprob: -6.668298721313477

Token 20: ' standard' (ID: 7024)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.294301986694336
    2. '
' → logprob: -1.294301986694336
    3. '\n' → logprob: -1.669301986694336
    4. '' → logprob: -2.294301986694336
    5. ',' → logprob: -3.044301986694336
    6. ' ' → logprob: -3.294301986694336
    7. '

' → logprob: -3.669301986694336
    8. 'import' → logprob: -3.919301986694336
    9. '\' → logprob: -4.044301986694336
    10. '#' → logprob: -5.294301986694336

Token 21: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.828225314617157
    2. '\n' → logprob: -1.3282253742218018
    3. '' → logprob: -2.2032253742218018
    4. '.' → logprob: -2.3282253742218018
    5. '\' → logprob: -3.7032253742218018
    6. '

' → logprob: -3.8282253742218018
    7. ',' → logprob: -4.203225135803223
    8. 'import' → logprob: -4.453225135803223
    9. ' ' → logprob: -4.953225135803223
    10. 'newline' → logprob: -5.953225135803223

Token 22: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6513205170631409
    2. '\n' → logprob: -1.526320457458496
    3. '' → logprob: -2.151320457458496
    4. '

' → logprob: -3.276320457458496
    5. '#' → logprob: -3.651320457458496
    6. '.' → logprob: -3.901320457458496
    7. '\' → logprob: -4.026320457458496
    8. ' ' → logprob: -4.276320457458496
    9. ',' → logprob: -5.026320457458496
    10. 'import' → logprob: -5.276320457458496

Token 23: ' Ass' (ID: 4744)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.328122079372406
    2. 'def' → logprob: -2.078122138977051
    3. ' #' → logprob: -2.453122138977051
    4. ' ' → logprob: -3.203122138977051
    5. ' def' → logprob: -4.953122138977051
    6. 'd' → logprob: -5.453122138977051
    7. '\' → logprob: -5.953122138977051
    8. 'import' → logprob: -5.953122138977051
    9. '!' → logprob: -6.703122138977051
    10. ' 

' → logprob: -7.578122138977051

Token 24: 'igner' (ID: 32459)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.028433846309781075
    2. 'ign' → logprob: -4.278433799743652
    3. 'emb' → logprob: -5.153433799743652
    4. 'ignment' → logprob: -6.528433799743652
    5. '#' → logprob: -6.903433799743652
    6. 'er' → logprob: -6.903433799743652
    7. 'et' → logprob: -7.153433799743652
    8. 'em' → logprob: -7.403433799743652
    9. ' ert' → logprob: -7.403433799743652
    10. 'erts' → logprob: -8.153433799743652

Token 25: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22435322403907776
    2. '_' → logprob: -1.7243531942367554
    3. '=' → logprob: -4.849353313446045
    4. ' =' → logprob: -4.974353313446045
    5. 'a' → logprob: -6.474353313446045
    6. 's' → logprob: -6.724353313446045
    7. ' a' → logprob: -6.849353313446045
    8. 'une' → logprob: -7.474353313446045
    9. '  ' → logprob: -7.599353313446045
    10. 'input' → logprob: -8.224352836608887

Token 26: ' fonction' (ID: 17610)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5936790108680725
    2. 'variable' → logprob: -1.3436789512634277
    3. 'f' → logprob: -2.7186789512634277
    4. 'value' → logprob: -4.343678951263428
    5. 'input' → logprob: -4.468678951263428
    6. 's' → logprob: -4.593678951263428
    7. 'v' → logprob: -4.718678951263428
    8. 'entrée' → logprob: -4.718678951263428
    9. 'sys' → logprob: -4.843678951263428
    10. ' ' → logprob: -4.968678951263428

Token 27: ' readline' (ID: 179561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07026451826095581
    2. 'print' → logprob: -3.3202645778656006
    3. 'sys' → logprob: -4.0702643394470215
    4. '=' → logprob: -5.4452643394470215
    5. '=input' → logprob: -5.8202643394470215
    6. ' input' → logprob: -5.9452643394470215
    7. 'open' → logprob: -6.6952643394470215
    8. '=sys' → logprob: -7.3202643394470215
    9. ' =' → logprob: -7.4452643394470215
    10. 'ex' → logprob: -7.5702643394470215

Token 28: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28841570019721985
    2. ' =' → logprob: -1.4134156703948975
    3. '=sys' → logprob: -5.163415908813477
    4. 'sys' → logprob: -6.663415908813477
    5. '(sys' → logprob: -9.788415908813477
    6. ' ' → logprob: -10.038415908813477
    7. '(' → logprob: -10.163415908813477
    8. 's' → logprob: -10.288415908813477
    9. '_' → logprob: -11.413415908813477
    10. 'import' → logprob: -11.413415908813477

Token 29: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15562622249126434
    2. 'sys' → logprob: -2.0306262969970703
    3. ' )' → logprob: -4.53062629699707
    4. '()' → logprob: -7.40562629699707
    5. '(sys' → logprob: -7.90562629699707
    6. ' ' → logprob: -8.15562629699707
    7. ' sys' → logprob: -8.40562629699707
    8. '=sys' → logprob: -9.03062629699707
    9. 'import' → logprob: -9.90562629699707
    10. ' à' → logprob: -10.28062629699707

Token 30: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.47939184308052063
    2. 'l' → logprob: -1.2293918132781982
    3. ' la' → logprob: -3.9793918132781982
    4. ' l' → logprob: -4.104392051696777
    5. 'r' → logprob: -4.479392051696777
    6. ' récupérer' → logprob: -4.979392051696777
    7. 'la' → logprob: -5.104392051696777
    8. 'sys' → logprob: -5.229392051696777
    9. ' sys' → logprob: -5.854392051696777
    10. ')' → logprob: -5.979392051696777

Token 31: ' une' (ID: 2463)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19167689979076385
    2. '()' → logprob: -2.0666768550872803
    3. 'l' → logprob: -3.8166768550872803
    4. ' la' → logprob: -4.691677093505859
    5. 'sys' → logprob: -5.441677093505859
    6. 's' → logprob: -6.191677093505859
    7. ' )' → logprob: -6.441677093505859
    8. ' l' → logprob: -6.691677093505859
    9. 'la' → logprob: -6.691677093505859
    10. ' une' → logprob: -6.941677093505859

Token 32: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.15549969673156738
    2. ' ligne' → logprob: -2.4054996967315674
    3. 'l' → logprob: -4.280499458312988
    4. 'e' → logprob: -4.280499458312988
    5. ')' → logprob: -5.405499458312988
    6. 'line' → logprob: -5.530499458312988
    7. '
' → logprob: -5.905499458312988
    8. 'f' → logprob: -6.405499458312988
    9. 'input' → logprob: -6.655499458312988
    10. 'texte' → logprob: -6.905499458312988

Token 33: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3891240358352661
    2. ' de' → logprob: -1.8891240358352661
    3. ' )' → logprob: -2.2641239166259766
    4. '()' → logprob: -3.5141239166259766
    5. ' ' → logprob: -4.764123916625977
    6. 'de' → logprob: -4.889123916625977
    7. 's' → logprob: -5.014123916625977
    8. '(' → logprob: -5.639123916625977
    9. ' d' → logprob: -6.389123916625977
    10. ' du' → logprob: -6.514123916625977

Token 34: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.42164579033851624
    2. 'sys' → logprob: -1.7966457605361938
    3. ' l' → logprob: -2.5466458797454834
    4. ' sys' → logprob: -3.7966458797454834
    5. 'texte' → logprob: -4.046645641326904
    6. 'code' → logprob: -4.421645641326904
    7. ' code' → logprob: -4.421645641326904
    8. 'stdin' → logprob: -4.421645641326904
    9. 'la' → logprob: -4.546645641326904
    10. 'entrée' → logprob: -5.796645641326904

Token 35: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.25534340739250183
    2. 'a' → logprob: -2.255343437194824
    3. ''utilisateur' → logprob: -3.005343437194824
    4. ''' → logprob: -3.130343437194824
    5. 'entrée' → logprob: -4.380343437194824
    6. 'input' → logprob: -4.755343437194824
    7. 'stdin' → logprob: -6.505343437194824
    8. 'e' → logprob: -6.630343437194824
    9. '')' → logprob: -6.880343437194824
    10. ''ent' → logprob: -8.005343437194824

Token 36: ' standard' (ID: 7024)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2240760177373886
    2. '(' → logprob: -2.59907603263855
    3. ' )' → logprob: -3.59907603263855
    4. '()' → logprob: -3.72407603263855
    5. 'standard' → logprob: -3.84907603263855
    6. 'sys' → logprob: -3.97407603263855
    7. ' standard' → logprob: -4.349075794219971
    8. '(sys' → logprob: -5.349075794219971
    9. '_' → logprob: -5.974075794219971
    10. 'de' → logprob: -6.349075794219971

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00453396188095212
    2. ' )' → logprob: -5.504533767700195
    3. '(' → logprob: -9.254533767700195
    4. '()' → logprob: -9.379533767700195
    5. 'import' → logprob: -9.754533767700195
    6. 'sys' → logprob: -10.129533767700195
    7. ',' → logprob: -10.504533767700195
    8. ' ' → logprob: -10.879533767700195
    9. ' à' → logprob: -11.004533767700195
    10. '`)' → logprob: -11.379533767700195

Token 38: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7214730978012085
    2. ' =' → logprob: -1.0964730978012085
    3. '=sys' → logprob: -2.221473217010498
    4. 'sys' → logprob: -2.721473217010498
    5. ' à' → logprob: -6.346473217010498
    6. 'import' → logprob: -6.596473217010498
    7. ' sys' → logprob: -6.971473217010498
    8. ' ' → logprob: -7.846473217010498
    9. 'à' → logprob: -7.971473217010498
    10. '(sys' → logprob: -9.09647274017334

Token 39: ' la' (ID: 557)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2521613538265228
    2. 'input' → logprob: -1.5021613836288452
    3. ' sys' → logprob: -9.377161026000977
    4. ' input' → logprob: -9.627161026000977
    5. 'read' → logprob: -9.877161026000977
    6. 'data' → logprob: -12.127161026000977
    7. 'stdin' → logprob: -12.127161026000977
    8. 'line' → logprob: -12.502161026000977
    9. '`' → logprob: -12.752161026000977
    10. 'la' → logprob: -12.877161026000977

Token 40: ' variable' (ID: 11076)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18507997691631317
    2. 'sys' → logprob: -1.8100799322128296
    3. 'stdin' → logprob: -6.560080051422119
    4. 'f' → logprob: -6.810080051422119
    5. ' input' → logprob: -7.185080051422119
    6. ' sys' → logprob: -7.185080051422119
    7. 'variable' → logprob: -7.810080051422119
    8. 'data' → logprob: -8.435079574584961
    9. '`' → logprob: -9.185079574584961
    10. 'read' → logprob: -9.560079574584961

Token 41: ' readline' (ID: 179561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12327385693788528
    2. 'read' → logprob: -2.2482738494873047
    3. ' readline' → logprob: -5.248273849487305
    4. ' input' → logprob: -6.123273849487305
    5. 'sys' → logprob: -6.373273849487305
    6. 'stdin' → logprob: -7.123273849487305
    7. '```' → logprob: -9.623273849487305
    8. 'f' → logprob: -9.873273849487305
    9. ' read' → logprob: -9.873273849487305
    10. '`' → logprob: -9.998273849487305

Token 42: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36013737320899963
    2. '=' → logprob: -1.2351373434066772
    3. ' readline' → logprob: -5.360137462615967
    4. 'read' → logprob: -5.735137462615967
    5. ' ' → logprob: -6.485137462615967
    6. '=sys' → logprob: -6.860137462615967
    7. '.readline' → logprob: -7.610137462615967
    8. ' =
' → logprob: -9.110136985778809
    9. ',' → logprob: -9.485136985778809
    10. '_read' → logprob: -9.610136985778809

Token 43: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.017285997048020363
    2. ' =' → logprob: -4.5172858238220215
    3. '=' → logprob: -5.1422858238220215
    4. ' readline' → logprob: -8.51728630065918
    5. '```' → logprob: -10.14228630065918
    6. '_read' → logprob: -10.39228630065918
    7. '.readline' → logprob: -10.76728630065918
    8. '=
' → logprob: -10.89228630065918
    9. ' read' → logprob: -11.01728630065918
    10. 'import' → logprob: -11.51728630065918

Token 44: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03133638575673103
    2. 'l' → logprob: -3.7813363075256348
    3. 'li' → logprob: -5.531336307525635
    4. 'ine' → logprob: -6.281336307525635
    5. '_line' → logprob: -6.656336307525635
    6. 'le' → logprob: -7.656336307525635
    7. 'lin' → logprob: -7.906336307525635
    8. '```' → logprob: -11.156336784362793
    9. '_' → logprob: -11.281336784362793
    10. '   ' → logprob: -11.531336784362793

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3493223488330841
    2. '=' → logprob: -1.2243223190307617
    3. '()' → logprob: -7.599322319030762
    4. '.' → logprob: -9.224322319030762
    5. ')' → logprob: -9.599322319030762
    6. '(' → logprob: -9.724322319030762
    7. ' ' → logprob: -9.974322319030762
    8. '=sys' → logprob: -10.099322319030762
    9. '.readline' → logprob: -11.849322319030762
    10. ',' → logprob: -11.849322319030762

Token 46: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.38697338104248047
    2. ' sys' → logprob: -1.1369733810424805
    3. 'input' → logprob: -9.63697338104248
    4. ' input' → logprob: -11.26197338104248
    5. '	sys' → logprob: -11.26197338104248
    6. '(sys' → logprob: -12.01197338104248
    7. '=sys' → logprob: -12.38697338104248
    8. ' ' → logprob: -15.01197338104248
    9. 'read' → logprob: -15.38697338104248
    10. 'stdin' → logprob: -16.386974334716797

Token 47: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4901576638221741
    2. '.' → logprob: -1.2401576042175293
    3. '.readline' → logprob: -2.4901576042175293
    4. ' .' → logprob: -4.490157604217529
    5. '.stdout' → logprob: -5.990157604217529
    6. '.input' → logprob: -6.990157604217529
    7. '.read' → logprob: -8.115158081054688
    8. '.argv' → logprob: -8.490158081054688
    9. '.std' → logprob: -10.615158081054688
    10. '.stderr' → logprob: -11.240158081054688

Token 48: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0236318651586771
    2. '.' → logprob: -3.7736318111419678
    3. '.read' → logprob: -7.898632049560547
    4. ' .' → logprob: -11.523632049560547
    5. '.buffer' → logprob: -12.898632049560547
    6. '.readlines' → logprob: -13.148632049560547
    7. '.write' → logprob: -16.023632049560547
    8. '.\' → logprob: -16.148632049560547
    9. '.
' → logprob: -16.648632049560547
    10. '.Read' → logprob: -16.898632049560547

Token 49: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1345614641904831
    2. '(' → logprob: -3.259561538696289
    3. '

' → logprob: -3.384561538696289
    4. '(
' → logprob: -4.384561538696289
    5. '\n' → logprob: -4.509561538696289
    6. '()' → logprob: -4.509561538696289
    7. '' → logprob: -4.884561538696289
    8. '


' → logprob: -6.259561538696289
    9. '(

' → logprob: -6.259561538696289
    10. '\' → logprob: -6.634561538696289

Token 50: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7566922903060913
    2. '#' → logprob: -1.1316922903060913
    3. 'def' → logprob: -3.256692409515381
    4. '

' → logprob: -3.506692409515381
    5. 'for' → logprob: -3.506692409515381
    6. '\n' → logprob: -3.881692409515381
    7. '\' → logprob: -4.381692409515381
    8. 'n' → logprob: -4.506692409515381
    9. 'x' → logprob: -4.506692409515381
    10. '' → logprob: -4.506692409515381

Token 51: ' Lire' (ID: 57624)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8350620269775391
    2. 'for' → logprob: -1.710062026977539
    3. 'print' → logprob: -1.960062026977539
    4. 'while' → logprob: -2.210062026977539
    5. '#' → logprob: -3.210062026977539
    6. 'n' → logprob: -3.335062026977539
    7. 'num' → logprob: -3.960062026977539
    8. 'input' → logprob: -4.835062026977539
    9. ' for' → logprob: -5.085062026977539
    10. 'data' → logprob: -5.210062026977539

Token 52: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09083065390586853
    2. '()' → logprob: -2.4658305644989014
    3. ' (' → logprob: -7.3408308029174805
    4. '('' → logprob: -7.9658308029174805
    5. ' ()' → logprob: -8.09083080291748
    6. ' ' → logprob: -8.21583080291748
    7. '(
' → logprob: -9.46583080291748
    8. ',' → logprob: -9.96583080291748
    9. '("' → logprob: -10.59083080291748
    10. '("")' → logprob: -10.71583080291748

Token 53: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.8335790634155273
    2. 'n' → logprob: -1.5835790634155273
    3. 'ligne' → logprob: -1.9585790634155273
    4. ' ' → logprob: -2.7085790634155273
    5. 'l' → logprob: -2.9585790634155273
    6. 'nombre' → logprob: -3.4585790634155273
    7. 'e' → logprob: -4.083579063415527
    8. ' nombre' → logprob: -4.333579063415527
    9. 's' → logprob: -5.333579063415527
    10. 'line' → logprob: -5.458579063415527

Token 54: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01872257888317108
    2. '(' → logprob: -4.0187225341796875
    3. '()
' → logprob: -7.8937225341796875
    4. '()

' → logprob: -9.393722534179688
    5. '(
' → logprob: -9.893722534179688
    6. ')' → logprob: -10.768722534179688
    7. ' ()' → logprob: -11.768722534179688
    8. '();' → logprob: -12.518722534179688
    9. ',' → logprob: -12.643722534179688
    10. '.' → logprob: -12.643722534179688

Token 55: ' la' (ID: 557)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.32714805006980896
    2. 'n' → logprob: -2.827147960662842
    3. ' strip' → logprob: -3.577147960662842
    4. 'rstrip' → logprob: -3.577147960662842
    5. 'line' → logprob: -3.952147960662842
    6. 'input' → logprob: -4.077147960662842
    7. 'split' → logprob: -4.202147960662842
    8. '()' → logprob: -4.327147960662842
    9. 'int' → logprob: -4.327147960662842
    10. 'user' → logprob: -4.452147960662842

Token 56: ' décou' (ID: 68302)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.042316898703575134
    2. 'rstrip' → logprob: -3.7923169136047363
    3. '.strip' → logprob: -5.042316913604736
    4. ' strip' → logprob: -5.542316913604736
    5. ' =' → logprob: -5.667316913604736
    6. 'split' → logprob: -6.542316913604736
    7. '_strip' → logprob: -6.917316913604736
    8. 'str' → logprob: -7.292316913604736
    9. '=' → logprob: -7.792316913604736
    10. 's' → logprob: -8.042316436767578

Token 57: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.17509984970092773
    2. 'pe' → logprob: -1.9250998497009277
    3. 'p' → logprob: -5.050099849700928
    4. 'page' → logprob: -5.175099849700928
    5. 'pant' → logprob: -7.050099849700928
    6. 'pé' → logprob: -7.175099849700928
    7. 'pez' → logprob: -9.425100326538086
    8. 'pa' → logprob: -9.675100326538086
    9. 'pent' → logprob: -9.675100326538086
    10. '#' → logprob: -9.800100326538086

Token 58: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2575889229774475
    2. '(' → logprob: -1.5075888633728027
    3. '().' → logprob: -6.132588863372803
    4. ' (' → logprob: -7.632588863372803
    5. ' ' → logprob: -7.757588863372803
    6. ',' → logprob: -7.882588863372803
    7. ' en' → logprob: -7.882588863372803
    8. ' ()' → logprob: -7.882588863372803
    9. '.' → logprob: -8.257589340209961
    10. ')' → logprob: -8.507589340209961

Token 59: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2853419780731201
    2. ' l' → logprob: -2.03534197807312
    3. ' ' → logprob: -3.78534197807312
    4. 'le' → logprob: -3.91034197807312
    5. '()' → logprob: -4.160342216491699
    6. ' '' → logprob: -4.285342216491699
    7. ' le' → logprob: -4.785342216491699
    8. '"' → logprob: -5.035342216491699
    9. ' les' → logprob: -5.035342216491699
    10. 'l' → logprob: -5.785342216491699

Token 60: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.16154402494430542
    2. 'esp' → logprob: -1.9115440845489502
    3. ''esp' → logprob: -7.786543846130371
    4. 'es' → logprob: -8.286543846130371
    5. ' espace' → logprob: -8.411543846130371
    6. ' esp' → logprob: -8.661543846130371
    7. 'spaces' → logprob: -9.786543846130371
    8. ' ' → logprob: -10.411543846130371
    9. ''espace' → logprob: -10.536543846130371
    10. ' espacios' → logprob: -10.661543846130371

Token 61: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7154595851898193
    2. '()' → logprob: -0.9654595851898193
    3. 'split' → logprob: -3.4654595851898193
    4. 'tokens' → logprob: -3.5904595851898193
    5. 's' → logprob: -4.215459823608398
    6. '().' → logprob: -4.340459823608398
    7. '.split' → logprob: -4.715459823608398
    8. ')' → logprob: -4.965459823608398
    9. ',' → logprob: -5.465459823608398
    10. '.' → logprob: -5.465459823608398

Token 62: ' convertir' (ID: 79223)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.2814253270626068
    2. ' convertir' → logprob: -1.7814253568649292
    3. 'stock' → logprob: -3.6564252376556396
    4. 'assign' → logprob: -4.281425476074219
    5. 'convert' → logprob: -4.906425476074219
    6. ' les' → logprob: -5.031425476074219
    7. 'map' → logprob: -5.531425476074219
    8. ' affect' → logprob: -5.656425476074219
    9. ' assign' → logprob: -5.781425476074219
    10. ' convert' → logprob: -6.156425476074219

Token 63: ' chaque' (ID: 21194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13573147356510162
    2. '(int' → logprob: -2.3857314586639404
    3. ' les' → logprob: -4.8857316970825195
    4. ' ' → logprob: -5.2607316970825195
    5. ' (' → logprob: -5.2607316970825195
    6. 'int' → logprob: -5.5107316970825195
    7. ' en' → logprob: -5.7607316970825195
    8. 'la' → logprob: -6.3857316970825195
    9. ' la' → logprob: -6.7607316970825195
    10. '(
' → logprob: -7.0107316970825195

Token 64: ' morceau' (ID: 160026)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.04162830486893654
    2. ' élément' → logprob: -3.541628360748291
    3. ' mot' → logprob: -5.541628360748291
    4. ' morceau' → logprob: -6.291628360748291
    5. ' partie' → logprob: -6.416628360748291
    6. 'mot' → logprob: -6.791628360748291
    7. ' token' → logprob: -7.166628360748291
    8. ' part' → logprob: -7.666628360748291
    9. 'part' → logprob: -7.791628360748291
    10. 'element' → logprob: -7.791628360748291

Token 65: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.007816474884748459
    2. 'en' → logprob: -4.882816314697266
    3. ' into' → logprob: -9.382816314697266
    4. 'int' → logprob: -10.257816314697266
    5. ' map' → logprob: -10.757816314697266
    6. ' ' → logprob: -11.007816314697266
    7. ' in' → logprob: -11.007816314697266
    8. ' à' → logprob: -11.882816314697266
    9. ' int' → logprob: -12.132816314697266
    10. ' list' → logprob: -13.007816314697266

Token 66: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47942695021629333
    2. 'int' → logprob: -0.9794269800186157
    3. ' un' → logprob: -5.979426860809326
    4. ' entier' → logprob: -6.604426860809326
    5. 'ent' → logprob: -7.104426860809326
    6. ' des' → logprob: -8.604427337646484
    7. ' integer' → logprob: -8.854427337646484
    8. ' ent' → logprob: -9.229427337646484
    9. ' ' → logprob: -9.479427337646484
    10. 'un' → logprob: -10.479427337646484

Token 67: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2787846326828003
    2. 'numbers' → logprob: -3.27878475189209
    3. 'nums' → logprob: -3.52878475189209
    4. 'tokens' → logprob: -3.52878475189209
    5. 'n' → logprob: -3.90378475189209
    6. ' numbers' → logprob: -3.90378475189209
    7. '[' → logprob: -4.40378475189209
    8. ' ' → logprob: -4.52878475189209
    9. 'data' → logprob: -5.02878475189209
    10. ' nums' → logprob: -5.02878475189209

Token 68: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.3184576630592346
    2. 'nums' → logprob: -2.31845760345459
    3. 'a' → logprob: -2.69345760345459
    4. 'n' → logprob: -3.19345760345459
    5. ' numbers' → logprob: -3.69345760345459
    6. 'data' → logprob: -4.56845760345459
    7. 's' → logprob: -5.44345760345459
    8. 'arr' → logprob: -5.56845760345459
    9. 'x' → logprob: -6.06845760345459
    10. 'values' → logprob: -6.19345760345459

Token 69: ' Cela' (ID: 44403)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.8392806649208069
    2. ' numbers' → logprob: -1.089280605316162
    3. 'nums' → logprob: -2.964280605316162
    4. 'a' → logprob: -3.339280605316162
    5. ' a' → logprob: -3.714280605316162
    6. ' A' → logprob: -3.839280605316162
    7. ' data' → logprob: -3.839280605316162
    8. 'arr' → logprob: -4.214280605316162
    9. ' nums' → logprob: -4.214280605316162
    10. 'data' → logprob: -4.339280605316162

Token 70: ' donne' (ID: 30004)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.5633183121681213
    2. ' continue' → logprob: -1.9383182525634766
    3. 's' → logprob: -2.3133182525634766
    4. ' est' → logprob: -3.6883182525634766
    5. ' semble' → logprob: -3.6883182525634766
    6. ' sera' → logprob: -4.063318252563477
    7. ' permettra' → logprob: -4.063318252563477
    8. ' s' → logprob: -4.438318252563477
    9. ' va' → logprob: -4.938318252563477
    10. ' ' → logprob: -5.063318252563477

Token 71: ' deux' (ID: 10301)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.0231645405292511
    2. ' la' → logprob: -4.398164749145508
    3. ' a' → logprob: -5.148164749145508
    4. ' un' → logprob: -6.023164749145508
    5. 'une' → logprob: -6.773164749145508
    6. 'a' → logprob: -7.898164749145508
    7. ' ' → logprob: -8.523164749145508
    8. ' des' → logprob: -8.648164749145508
    9. '[' → logprob: -9.273164749145508
    10. 'la' → logprob: -9.398164749145508

Token 72: ' ent' (ID: 1121)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.007843444123864174
    2. 't' → logprob: -6.007843494415283
    3. 'ers' → logprob: -6.132843494415283
    4. 'ières' → logprob: -6.757843494415283
    5. 'ties' → logprob: -7.632843494415283
    6. 'ités' → logprob: -8.007843017578125
    7. 'er' → logprob: -8.632843017578125
    8. 'ies' → logprob: -8.757843017578125
    9. 'es' → logprob: -8.757843017578125
    10. 's' → logprob: -9.007843017578125

Token 74: ' :' (ID: 712)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.619154691696167
    2. '(' → logprob: -1.869154691696167
    3. 's' → logprob: -1.994154691696167
    4. ' ' → logprob: -2.994154691696167
    5. ',' → logprob: -3.869154691696167
    6. ' a' → logprob: -3.869154691696167
    7. '[' → logprob: -4.244154930114746
    8. '()' → logprob: -4.244154930114746
    9. ' (' → logprob: -4.494154930114746
    10. ' =' → logprob: -4.869154930114746

Token 75: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08267291635274887
    2. 'n' → logprob: -2.7076728343963623
    3. ' a' → logprob: -4.957673072814941
    4. 'a' → logprob: -5.957673072814941
    5. ' N' → logprob: -6.332673072814941
    6. 'N' → logprob: -7.957673072814941
    7. ' num' → logprob: -9.207673072814941
    8. ' t' → logprob: -9.457673072814941
    9. ' nb' → logprob: -9.457673072814941
    10. ' x' → logprob: -9.582673072814941

Token 76: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01895865425467491
    2. ' ,' → logprob: -4.393958568572998
    3. ' ' → logprob: -5.518958568572998
    4. ' =' → logprob: -7.268958568572998
    5. '=' → logprob: -7.643958568572998
    6. '[' → logprob: -7.893958568572998
    7. '<|end|>' → logprob: -8.018959045410156
    8. ',N' → logprob: -9.018959045410156
    9. ')' → logprob: -9.143959045410156
    10. ' and' → logprob: -9.893959045410156

Token 77: 'tail' (ID: 20472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7073094248771667
    2. ')' → logprob: -0.9573094248771667
    3. ' ,' → logprob: -2.7073094844818115
    4. ' )' → logprob: -3.3323094844818115
    5. ',)' → logprob: -3.9573094844818115
    6. ' ' → logprob: -7.582309246063232
    7. '),' → logprob: -7.832309246063232
    8. 'et' → logprob: -8.70730972290039
    9. ' ),' → logprob: -8.95730972290039
    10. ' et' → logprob: -9.83230972290039

Token 78: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0001831565605243668
    2. 'l' → logprob: -9.50018310546875
    3. '#' → logprob: -10.75018310546875
    4. 'e' → logprob: -10.87518310546875
    5. 'lle' → logprob: -11.12518310546875
    6. '```' → logprob: -11.62518310546875
    7. 'les' → logprob: -11.75018310546875
    8. '_le' → logprob: -12.25018310546875
    9. 'ле' → logprob: -12.93768310546875
    10. '   ' → logprob: -13.18768310546875

Token 79: ' du' (ID: 1462)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.45947927236557007
    2. ')' → logprob: -1.0844793319702148
    3. ' ' → logprob: -4.709479331970215
    4. ' de' → logprob: -4.709479331970215
    5. ',' → logprob: -5.459479331970215
    6. ' du' → logprob: -5.709479331970215
    7. ' ,' → logprob: -6.334479331970215
    8. 's' → logprob: -6.959479331970215
    9. 'de' → logprob: -7.584479331970215
    10. 'du' → logprob: -7.584479331970215

Token 80: ' tableau' (ID: 67053)
  Prédit: ' tableau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.03955048322677612
    2. 'table' → logprob: -4.414550304412842
    3. ' table' → logprob: -4.539550304412842
    4. ' plateau' → logprob: -5.164550304412842
    5. ')' → logprob: -5.289550304412842
    6. ' array' → logprob: -7.164550304412842
    7. ' )' → logprob: -7.414550304412842
    8. ' ' → logprob: -7.664550304412842
    9. ' t' → logprob: -7.664550304412842
    10. 'plate' → logprob: -7.789550304412842

Token 81: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20034438371658325
    2. ' )' → logprob: -2.0753443241119385
    3. ',' → logprob: -2.9503443241119385
    4. ' ,' → logprob: -5.950344562530518
    5. ' ' → logprob: -7.700344562530518
    6. 's' → logprob: -8.45034408569336
    7. '),' → logprob: -8.45034408569336
    8. ',)' → logprob: -9.07534408569336
    9. ' ),' → logprob: -9.82534408569336
    10. 'et' → logprob: -11.45034408569336

Token 82: ' K' (ID: 658)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5873753428459167
    2. ' K' → logprob: -1.5873754024505615
    3. ' ' → logprob: -1.9623754024505615
    4. ' T' → logprob: -3.3373754024505615
    5. 'M' → logprob: -3.5873754024505615
    6. 'K' → logprob: -4.337375164031982
    7. ' t' → logprob: -5.587375164031982
    8. ' a' → logprob: -5.712375164031982
    9. 'a' → logprob: -5.837375164031982
    10. ' and' → logprob: -5.837375164031982

Token 83: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20619747042655945
    2. '=' → logprob: -1.8311975002288818
    3. ',' → logprob: -4.706197261810303
    4. ' ' → logprob: -4.706197261810303
    5. '[' → logprob: -5.206197261810303
    6. ' ,' → logprob: -7.206197261810303
    7. 's' → logprob: -7.956197261810303
    8. 'n' → logprob: -8.331197738647461
    9. ')' → logprob: -8.581197738647461
    10. '<|end|>' → logprob: -8.706197738647461

Token 84: 'nombre' (ID: 28576)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.2790335714817047
    2. ' la' → logprob: -2.154033660888672
    3. ')' → logprob: -3.029033660888672
    4. ' l' → logprob: -3.279033660888672
    5. 'la' → logprob: -4.404033660888672
    6. 'max' → logprob: -5.029033660888672
    7. 'le' → logprob: -5.279033660888672
    8. 'l' → logprob: -5.529033660888672
    9. ' nombre' → logprob: -5.904033660888672
    10. ' le' → logprob: -6.154033660888672

Token 85: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.16410231590271
    2. ' de' → logprob: -1.16410231590271
    3. ' ' → logprob: -1.78910231590271
    4. 'de' → logprob: -2.53910231590271
    5. ')' → logprob: -2.91410231590271
    6. ' )' → logprob: -3.66410231590271
    7. '_' → logprob: -4.539102554321289
    8. '_de' → logprob: -4.789102554321289
    9. 'd' → logprob: -5.039102554321289
    10. 's' → logprob: -5.289102554321289

Token 86: ''op' (ID: 70747)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1519887447357178
    2. ''esp' → logprob: -1.9019887447357178
    3. ''é' → logprob: -2.0269887447357178
    4. ' espaces' → logprob: -2.2769887447357178
    5. ''espace' → logprob: -2.7769887447357178
    6. '_' → logprob: -3.1519887447357178
    7. ' éléments' → logprob: -3.2769887447357178
    8. '')' → logprob: -3.9019887447357178
    9. 'e' → logprob: -4.026988983154297
    10. 'élé' → logprob: -4.401988983154297

Token 87: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.11063180863857269
    2. 'er' → logprob: -2.7356317043304443
    3. 'é' → logprob: -3.7356317043304443
    4. 'e' → logprob: -4.985631942749023
    5. 'ér' → logprob: -5.485631942749023
    6. 't' → logprob: -6.860631942749023
    7. 'ération' → logprob: -7.110631942749023
    8. '```' → logprob: -7.110631942749023
    9. 's' → logprob: -7.735631942749023
    10. 'és' → logprob: -8.485631942749023

Token 88: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12767501175403595
    2. ' )' → logprob: -2.1276750564575195
    3. ' ' → logprob: -7.8776750564575195
    4. ' à' → logprob: -9.12767505645752
    5. 's' → logprob: -9.25267505645752
    6. 'a' → logprob: -10.75267505645752
    7. '')' → logprob: -11.12767505645752
    8. ' possible' → logprob: -11.12767505645752
    9. ',' → logprob: -11.25267505645752
    10. ' effectu' → logprob: -11.25267505645752

Token 89: ' effectuer' (ID: 98625)
  Prédit: ' effectuer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.6399855017662048
    2. ' réaliser' → logprob: -0.7649855017662048
    3. ' realizar' → logprob: -5.63998556137085
    4. 'ré' → logprob: -7.01498556137085
    5. 'r' → logprob: -7.63998556137085
    6. ' accompl' → logprob: -7.63998556137085
    7. 'perform' → logprob: -8.264985084533691
    8. ')' → logprob: -8.514985084533691
    9. ' ' → logprob: -9.014985084533691
    10. ' faire' → logprob: -9.139985084533691

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014334988372866064
    2. ' )' → logprob: -9.125143051147461
    3. ')
' → logprob: -10.750143051147461
    4. '#' → logprob: -13.125143051147461
    5. ',' → logprob: -13.250143051147461
    6. 'n' → logprob: -13.625143051147461
    7. 'a' → logprob: -14.000143051147461
    8. ')

' → logprob: -14.000143051147461
    9. '')' → logprob: -14.000143051147461
    10. ')n' → logprob: -14.000143051147461

Token 91: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05802677571773529
    2. 'n' → logprob: -3.4330267906188965
    3. ' N' → logprob: -4.5580267906188965
    4. ' 
' → logprob: -5.4330267906188965
    5. 'a' → logprob: -6.0580267906188965
    6. 'data' → logprob: -6.3080267906188965
    7. '[' → logprob: -6.9330267906188965
    8. '[N' → logprob: -6.9330267906188965
    9. '\n' → logprob: -7.4330267906188965
    10. 'x' → logprob: -7.9330267906188965

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019293125660624355
    2. ' ,' → logprob: -9.250192642211914
    3. ',K' → logprob: -9.250192642211914
    4. ',k' → logprob: -14.750192642211914
    5. ',N' → logprob: -16.000192642211914
    6. ',
' → logprob: -16.375192642211914
    7. ',

' → logprob: -17.500192642211914
    8. ',int' → logprob: -17.625192642211914
    9. '，' → logprob: -18.375192642211914
    10. 'K' → logprob: -18.500192642211914

Token 93: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.2291284203529358
    2. ' ' → logprob: -1.604128360748291
    3. 'K' → logprob: -5.729128360748291
    4. ' ' → logprob: -7.854128360748291
    5. '  ' → logprob: -10.47912883758545
    6. '<|end|>' → logprob: -11.10412883758545
    7. 'space' → logprob: -11.72912883758545
    8. ' ‌' → logprob: -11.97912883758545
    9. ' ' → logprob: -12.72912883758545
    10. ')' → logprob: -13.47912883758545

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004082793369889259
    2. '=' → logprob: -5.504082679748535
    3. ',' → logprob: -12.879082679748535
    4. ' ' → logprob: -14.004082679748535
    5. ' =
' → logprob: -14.504082679748535
    6. ' ' → logprob: -16.00408363342285
    7. '<|end|>' → logprob: -16.12908363342285
    8. ')' → logprob: -16.25408363342285
    9. ' =
' → logprob: -17.00408363342285
    10. '.' → logprob: -17.44158363342285

Token 95: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.001160696498118341
    2. ' read' → logprob: -7.376160621643066
    3. 'map' → logprob: -8.376160621643066
    4. ' readline' → logprob: -8.376160621643066
    5. ' list' → logprob: -9.626160621643066
    6. 'read' → logprob: -12.501160621643066
    7. ' ' → logprob: -13.126160621643066
    8. '	map' → logprob: -14.376160621643066
    9. ' ' → logprob: -15.376160621643066
    10. ' m' → logprob: -15.501160621643066

Token 96: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.25228217244148254
    2. '(' → logprob: -1.5022821426391602
    3. '(list' → logprob: -8.62728214263916
    4. '(str' → logprob: -9.37728214263916
    5. '(lambda' → logprob: -9.62728214263916
    6. ' (' → logprob: -11.50228214263916
    7. '(
' → logprob: -12.00228214263916
    8. '<int' → logprob: -13.50228214263916
    9. '(input' → logprob: -14.25228214263916
    10. '(tuple' → logprob: -14.25228214263916

Token 97: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.004615964833647013
    2. '(' → logprob: -6.379615783691406
    3. '(sys' → logprob: -6.504615783691406
    4. ')' → logprob: -7.254615783691406
    5. 'read' → logprob: -7.629615783691406
    6. ' (' → logprob: -8.754615783691406
    7. ',' → logprob: -11.004615783691406
    8. ' readline' → logprob: -11.379615783691406
    9. '(input' → logprob: -11.504615783691406
    10. ')(' → logprob: -12.004615783691406

Token 98: ' readline' (ID: 179561)
  Prédit: ' readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.02656918577849865
    2. 'read' → logprob: -3.651569128036499
    3. '.readline' → logprob: -8.276569366455078
    4. '(read' → logprob: -11.401569366455078
    5. 'input' → logprob: -13.901569366455078
    6. ' read' → logprob: -14.276569366455078
    7. '/read' → logprob: -15.026569366455078
    8. '_read' → logprob: -15.151569366455078
    9. ')' → logprob: -15.276569366455078
    10. '-read' → logprob: -15.401569366455078

Token 99: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011961952783167362
    2. '()' → logprob: -4.636961936950684
    3. '())' → logprob: -6.136961936950684
    4. ')' → logprob: -10.511961936950684
    5. '(' → logprob: -11.511961936950684
    6. ' ().' → logprob: -13.511961936950684
    7. '()
' → logprob: -13.886961936950684
    8. ' ()' → logprob: -14.386961936950684
    9. ' ())' → logprob: -14.886961936950684
    10. '()[' → logprob: -15.386961936950684

Token 100: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16047869622707367
    2. 'strip' → logprob: -1.9104787111282349
    3. 'rstrip' → logprob: -8.410478591918945
    4. ')' → logprob: -11.160478591918945
    5. ' split' → logprob: -11.910478591918945
    6. 'read' → logprob: -12.285478591918945
    7. ' strip' → logprob: -12.785478591918945
    8. '().' → logprob: -13.285478591918945
    9. '(split' → logprob: -14.285478591918945
    10. '()' → logprob: -14.410478591918945

Token 101: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010212734341621399
    2. '()' → logprob: -5.0102128982543945
    3. ')' → logprob: -5.7602128982543945
    4. '()))' → logprob: -8.260212898254395
    5. '(' → logprob: -10.010212898254395
    6. '))' → logprob: -10.635212898254395
    7. '())
' → logprob: -12.135212898254395
    8. ' ())' → logprob: -12.635212898254395
    9. '('' → logprob: -13.135212898254395
    10. '(),' → logprob: -15.010212898254395

Token 102: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6625552177429199
    2. ' ' → logprob: -1.78755521774292
    3. ' 
' → logprob: -2.28755521774292
    4. '\n' → logprob: -2.41255521774292
    5. '<|end|>' → logprob: -3.66255521774292
    6. '[' → logprob: -3.78755521774292
    7. '\' → logprob: -3.78755521774292
    8. 'a' → logprob: -4.03755521774292
    9. '#' → logprob: -4.78755521774292
    10. 'n' → logprob: -5.03755521774292

Token 103: ' Lire' (ID: 57624)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.8021780848503113
    2. 'A' → logprob: -0.9271780848503113
    3. ' A' → logprob: -2.802178144454956
    4. ' arr' → logprob: -3.427178144454956
    5. '#' → logprob: -3.677178144454956
    6. 'data' → logprob: -4.927177906036377
    7. ' data' → logprob: -4.927177906036377
    8. 'array' → logprob: -5.052177906036377
    9. 'a' → logprob: -5.302177906036377
    10. ' array' → logprob: -5.552177906036377

Token 104: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007630057632923126
    2. '(' → logprob: -5.132629871368408
    3. ' la' → logprob: -8.007630348205566
    4. '(N' → logprob: -8.132630348205566
    5. '[' → logprob: -8.507630348205566
    6. '[]' → logprob: -8.882630348205566
    7. 'the' → logprob: -9.382630348205566
    8. '()[' → logprob: -9.382630348205566
    9. ' ' → logprob: -9.507630348205566
    10. 'list' → logprob: -9.882630348205566

Token 105: ' ligne' (ID: 19583)
  Prédit: ' tableau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.7720432877540588
    2. '()' → logprob: -1.772043228149414
    3. 'liste' → logprob: -2.272043228149414
    4. 's' → logprob: -3.022043228149414
    5. '_' → logprob: -3.397043228149414
    6. ' array' → logprob: -3.647043228149414
    7. 'ligne' → logprob: -3.647043228149414
    8. ' ' → logprob: -3.772043228149414
    9. 'array' → logprob: -3.897043228149414
    10. ' N' → logprob: -4.397043228149414

Token 106: ' suivante' (ID: 107439)
  Prédit: ' suivante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.4631791412830353
    2. 's' → logprob: -2.588179111480713
    3. 'tokens' → logprob: -2.838179111480713
    4. 'data' → logprob: -3.088179111480713
    5. 'numbers' → logprob: -3.213179111480713
    6. 'arr' → logprob: -3.838179111480713
    7. 'des' → logprob: -4.213179111480713
    8. ' =' → logprob: -4.338179111480713
    9. 'values' → logprob: -4.713179111480713
    10. '#' → logprob: -4.838179111480713

Token 107: ',' (ID: 11)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.31002530455589294
    2. 'data' → logprob: -1.8100253343582153
    3. 'array' → logprob: -3.060025215148926
    4. 'A' → logprob: -3.435025215148926
    5. 'a' → logprob: -4.935025215148926
    6. 'numbers' → logprob: -5.435025215148926
    7. ' array' → logprob: -5.560025215148926
    8. ' arr' → logprob: -5.810025215148926
    9. 'lst' → logprob: -6.435025215148926
    10. ' data' → logprob: -7.185025215148926

Token 108: ' décou' (ID: 68302)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.2369271516799927
    2. ' arr' → logprob: -1.3619271516799927
    3. ' lst' → logprob: -1.6119271516799927
    4. 'lst' → logprob: -2.361927032470703
    5. ' array' → logprob: -3.111927032470703
    6. 'numbers' → logprob: -3.986927032470703
    7. 'nums' → logprob: -4.236927032470703
    8. 'list' → logprob: -4.361927032470703
    9. ' numbers' → logprob: -4.611927032470703
    10. ' list' → logprob: -4.861927032470703

Token 109: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.019930444657802582
    2. 'p' → logprob: -4.144930362701416
    3. 'pe' → logprob: -6.144930362701416
    4. 'page' → logprob: -6.894930362701416
    5. ' per' → logprob: -8.769930839538574
    6. 'pant' → logprob: -9.144930839538574
    7. 'pé' → logprob: -9.644930839538574
    8. '   ' → logprob: -9.769930839538574
    9. '	' → logprob: -10.394930839538574
    10. '	p' → logprob: -10.644930839538574

Token 110: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2086775153875351
    2. ' la' → logprob: -3.4586775302886963
    3. '<|end|>' → logprob: -3.7086775302886963
    4. 's' → logprob: -3.8336775302886963
    5. 'read' → logprob: -3.9586775302886963
    6. ',' → logprob: -4.083677291870117
    7. ' ' → logprob: -4.083677291870117
    8. '(' → logprob: -4.333677291870117
    9. 'la' → logprob: -4.583677291870117
    10. '(read' → logprob: -5.083677291870117

Token 111: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9661945104598999
    2. ' les' → logprob: -0.9661945104598999
    3. 'spaces' → logprob: -2.5911946296691895
    4. 'les' → logprob: -2.7161946296691895
    5. ' spaces' → logprob: -3.3411946296691895
    6. '('' → logprob: -3.9661946296691895
    7. ' espaces' → logprob: -4.3411946296691895
    8. '(read' → logprob: -5.4661946296691895
    9. ' readline' → logprob: -5.4661946296691895
    10. 'read' → logprob: -5.7161946296691895

Token 112: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.1768764704465866
    2. 'esp' → logprob: -1.926876425743103
    3. 'spaces' → logprob: -4.176876544952393
    4. ' spaces' → logprob: -7.801876544952393
    5. ''esp' → logprob: -8.551876068115234
    6. 'es' → logprob: -8.676876068115234
    7. ' espace' → logprob: -9.301876068115234
    8. 's' → logprob: -9.801876068115234
    9. 'paces' → logprob: -9.801876068115234
    10. 'space' → logprob: -9.926876068115234

Token 113: ' et' (ID: 859)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.16585774719715118
    2. ',' → logprob: -2.9158577919006348
    3. ' arr' → logprob: -3.9158577919006348
    4. 'a' → logprob: -4.040857791900635
    5. 'array' → logprob: -4.165857791900635
    6. 'numbers' → logprob: -4.415857791900635
    7. 't' → logprob: -5.040857791900635
    8. 'A' → logprob: -5.415857791900635
    9. ' array' → logprob: -5.540857791900635
    10. 'values' → logprob: -5.540857791900635

Token 114: ' convertir' (ID: 79223)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.7835143804550171
    2. 'map' → logprob: -1.283514380455017
    3. ' list' → logprob: -2.1585144996643066
    4. 'list' → logprob: -2.4085144996643066
    5. 'arr' → logprob: -4.158514499664307
    6. ' convert' → logprob: -4.408514499664307
    7. 'convert' → logprob: -4.408514499664307
    8. ' convertir' → logprob: -4.408514499664307
    9. 'lst' → logprob: -5.908514499664307
    10. ' arr' → logprob: -6.908514499664307

Token 115: ' chaque' (ID: 21194)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5882588028907776
    2. ' la' → logprob: -1.7132587432861328
    3. 'lst' → logprob: -3.088258743286133
    4. 't' → logprob: -3.338258743286133
    5. 'arr' → logprob: -3.588258743286133
    6. 'les' → logprob: -3.713258743286133
    7. 'le' → logprob: -3.838258743286133
    8. 'list' → logprob: -4.088258743286133
    9. 'l' → logprob: -4.213258743286133
    10. ' les' → logprob: -4.213258743286133

Token 116: ' morceau' (ID: 160026)
  Prédit: ' morceau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' morceau' → logprob: -0.3260582685470581
    2. 'élé' → logprob: -1.576058268547058
    3. ' élément' → logprob: -3.0760583877563477
    4. 'm' → logprob: -4.576058387756348
    5. 'val' → logprob: -5.951058387756348
    6. ' element' → logprob: -6.076058387756348
    7. ' token' → logprob: -6.576058387756348
    8. ' morceaux' → logprob: -6.576058387756348
    9. ' valeur' → logprob: -6.701058387756348
    10. ' en' → logprob: -6.951058387756348

Token 117: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.38772159814834595
    2. ' en' → logprob: -1.1377215385437012
    3. 'in' → logprob: -8.26272201538086
    4. '(en' → logprob: -8.38772201538086
    5. '_en' → logprob: -9.26272201538086
    6. '<|end|>' → logprob: -10.01272201538086
    7. '=' → logprob: -10.13772201538086
    8. ' in' → logprob: -10.38772201538086
    9. ' into' → logprob: -10.51272201538086
    10. '(' → logprob: -10.63772201538086

Token 118: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012049926444888115
    2. ' int' → logprob: -6.751204967498779
    3. 'ent' → logprob: -10.751205444335938
    4. '(int' → logprob: -12.251205444335938
    5. 'ints' → logprob: -13.126205444335938
    6. '=int' → logprob: -13.251205444335938
    7. '[int' → logprob: -13.376205444335938
    8. 'list' → logprob: -13.626205444335938
    9. '<int' → logprob: -14.626205444335938
    10. ' entier' → logprob: -14.626205444335938

Token 119: '
' (ID: 198)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4114494323730469
    2. 'A' → logprob: -1.2864494323730469
    3. ' A' → logprob: -3.911449432373047
    4. 'a' → logprob: -4.286449432373047
    5. 'array' → logprob: -4.411449432373047
    6. ' arr' → logprob: -5.411449432373047
    7. ' array' → logprob: -5.411449432373047
    8. 'numbers' → logprob: -6.161449432373047
    9. 't' → logprob: -6.411449432373047
    10. 'lst' → logprob: -7.161449432373047

Token 120: '#' (ID: 2)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.22956761717796326
    2. 'A' → logprob: -1.8545676469802856
    3. 'array' → logprob: -3.979567527770996
    4. ' A' → logprob: -4.729567527770996
    5. ' arr' → logprob: -5.104567527770996
    6. ' array' → logprob: -5.354567527770996
    7. 'a' → logprob: -5.604567527770996
    8. 'numbers' → logprob: -5.729567527770996
    9. 'data' → logprob: -6.854567527770996
    10. 'lst' → logprob: -7.229567527770996

Token 121: ' On' (ID: 2160)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6350659132003784
    2. 'A' → logprob: -0.8850659132003784
    3. 'array' → logprob: -3.510066032409668
    4. 'a' → logprob: -4.510066032409668
    5. 'numbers' → logprob: -5.260066032409668
    6. ' A' → logprob: -5.385066032409668
    7. 'data' → logprob: -6.385066032409668
    8. 'lst' → logprob: -6.885066032409668
    9. ' arr' → logprob: -7.010066032409668
    10. ' array' → logprob: -7.510066032409668

Token 122: ' ajoute' (ID: 91611)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26572221517562866
    2. ' =' → logprob: -1.5157222747802734
    3. 's' → logprob: -5.140722274780273
    4. 'arr' → logprob: -6.015722274780273
    5. '_values' → logprob: -6.640722274780273
    6. '_' → logprob: -7.515722274780273
    7. 't' → logprob: -7.890722274780273
    8. 'A' → logprob: -8.390722274780273
    9. 'a' → logprob: -8.390722274780273
    10. 'array' → logprob: -8.390722274780273

Token 123: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.18351399898529053
    2. '[]' → logprob: -3.18351411819458
    3. 's' → logprob: -4.05851411819458
    4. 'list' → logprob: -4.05851411819458
    5. '[' → logprob: -4.18351411819458
    6. ' une' → logprob: -4.43351411819458
    7. ' list' → logprob: -4.80851411819458
    8. '_' → logprob: -4.93351411819458
    9. ' le' → logprob: -4.93351411819458
    10. ' l' → logprob: -5.30851411819458

Token 124: ' ' (ID: 220)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3709096610546112
    2. '_' → logprob: -1.9959096908569336
    3. 'es' → logprob: -2.3709096908569336
    4. '=' → logprob: -3.8709096908569336
    5. '[' → logprob: -4.245909690856934
    6. 's' → logprob: -4.495909690856934
    7. '[]' → logprob: -4.745909690856934
    8. ' espace' → logprob: -5.370909690856934
    9. '[:]' → logprob: -5.870909690856934
    10. ' tableau' → logprob: -5.995909690856934

Token 125: '0' (ID: 15)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.7200942635536194
    2. '[' → logprob: -1.4700942039489746
    3. 'list' → logprob: -2.2200942039489746
    4. 's' → logprob: -3.2200942039489746
    5. '[]' → logprob: -3.3450942039489746
    6. '_' → logprob: -3.8450942039489746
    7. 'space' → logprob: -4.345094203948975
    8. '=' → logprob: -4.595094203948975
    9. ' ' → logprob: -5.220094203948975
    10. ']' → logprob: -5.345094203948975

Token 126: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.138105109333992
    2. '[' → logprob: -3.3881051540374756
    3. ' ,' → logprob: -3.5131051540374756
    4. ')' → logprob: -3.6381051540374756
    5. ' ' → logprob: -4.0131049156188965
    6. '<|end|>' → logprob: -5.1381049156188965
    7. 's' → logprob: -5.2631049156188965
    8. ' )' → logprob: -6.1381049156188965
    9. ' à' → logprob: -7.2631049156188965
    10. 'tolist' → logprob: -7.7006049156188965

Token 127: ' début' (ID: 29589)
  Prédit: ' début'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' début' → logprob: -0.35146501660346985
    2. ' tête' → logprob: -1.7264649868011475
    3. 'dé' → logprob: -2.7264649868011475
    4. 't' → logprob: -4.476465225219727
    5. 'de' → logprob: -4.726465225219727
    6. 'front' → logprob: -5.226465225219727
    7. 'head' → logprob: -5.476465225219727
    8. ' debut' → logprob: -5.726465225219727
    9. 'position' → logprob: -5.851465225219727
    10. '```' → logprob: -5.976465225219727

Token 128: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8439566493034363
    2. ' ,' → logprob: -2.218956708908081
    3. ' array' → logprob: -2.718956708908081
    4. '_' → logprob: -2.968956708908081
    5. ' ' → logprob: -3.093956708908081
    6. ' de' → logprob: -3.093956708908081
    7. '[' → logprob: -3.468956708908081
    8. ' list' → logprob: -3.968956708908081
    9. 'array' → logprob: -3.968956708908081
    10. 's' → logprob: -4.218956470489502

Token 129: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41524529457092285
    2. 'liste' → logprob: -1.6652452945709229
    3. 'A' → logprob: -3.415245294570923
    4. 'la' → logprob: -3.540245294570923
    5. 'lst' → logprob: -3.665245294570923
    6. 'l' → logprob: -4.040245056152344
    7. 'table' → logprob: -4.415245056152344
    8. 'tab' → logprob: -4.790245056152344
    9. 'list' → logprob: -5.040245056152344
    10. 'arr' → logprob: -5.415245056152344

Token 130: ' pour' (ID: 1930)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9750300645828247
    2. '[' → logprob: -1.3500300645828247
    3. 'a' → logprob: -1.7250300645828247
    4. 'A' → logprob: -3.350029945373535
    5. ' [' → logprob: -3.600029945373535
    6. 'lst' → logprob: -3.725029945373535
    7. ' arr' → logprob: -3.850029945373535
    8. ' A' → logprob: -4.475029945373535
    9. ' a' → logprob: -4.600029945373535
    10. 'array' → logprob: -4.600029945373535

Token 131: ' que' (ID: 661)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.15898241102695465
    2. ' align' → logprob: -2.908982515335083
    3. 'align' → logprob: -4.283982276916504
    4. ' rendre' → logprob: -4.283982276916504
    5. ' avoir' → logprob: -4.783982276916504
    6. '_' → logprob: -5.408982276916504
    7. 'n' → logprob: -5.408982276916504
    8. ' ' → logprob: -5.408982276916504
    9. ' pouvoir' → logprob: -5.408982276916504
    10. 'f' → logprob: -5.908982276916504

Token 132: ' la' (ID: 557)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.3888157606124878
    2. 'A' → logprob: -1.6388157606124878
    3. ' arr' → logprob: -1.8888157606124878
    4. ' A' → logprob: -2.2638158798217773
    5. 'a' → logprob: -2.8888158798217773
    6. ' les' → logprob: -3.3888158798217773
    7. ' a' → logprob: -4.013815879821777
    8. 'lst' → logprob: -4.013815879821777
    9. 'l' → logprob: -4.138815879821777
    10. ' tab' → logprob: -4.138815879821777

Token 133: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.1119807958602905
    2. 'indices' → logprob: -1.7369807958602905
    3. ' liste' → logprob: -1.8619807958602905
    4. ' indices' → logprob: -2.48698091506958
    5. 'index' → logprob: -2.73698091506958
    6. ' tableau' → logprob: -3.48698091506958
    7. 'table' → logprob: -3.73698091506958
    8. 'array' → logprob: -3.98698091506958
    9. ' indexing' → logprob: -3.98698091506958
    10. 'a' → logprob: -4.23698091506958

Token 134: ' soit' (ID: 17293)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -1.0934536457061768
    2. ' A' → logprob: -1.9684536457061768
    3. ' des' → logprob: -1.9684536457061768
    4. ' soit' → logprob: -2.0934536457061768
    5. 'A' → logprob: -2.7184536457061768
    6. 'arr' → logprob: -2.8434536457061768
    7. 'a' → logprob: -3.8434536457061768
    8. 's' → logprob: -3.8434536457061768
    9. 'so' → logprob: -4.093453407287598
    10. ' s' → logprob: -4.593453407287598

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41221436858177185
    2. ' ' → logprob: -1.2872143983840942
    3. ' index' → logprob: -3.7872142791748047
    4. ' d' → logprob: -4.287214279174805
    5. 'index' → logprob: -4.287214279174805
    6. ' basée' → logprob: -5.662214279174805
    7. ' de' → logprob: -5.912214279174805
    8. '[' → logprob: -6.537214279174805
    9. 'd' → logprob: -7.287214279174805
    10. '0' → logprob: -7.412214279174805

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024520155042409897
    2. ' ' → logprob: -4.024519920349121
    3. 'index' → logprob: -5.524519920349121
    4. '0' → logprob: -6.899519920349121
    5. ' index' → logprob: -8.399519920349121
    6. 'compatible' → logprob: -8.524519920349121
    7. ' one' → logprob: -8.899519920349121
    8. '[' → logprob: -9.024519920349121
    9. 'indexed' → logprob: -9.024519920349121
    10. '```' → logprob: -9.149519920349121

Token 137: '-ind' (ID: 26698)
  Prédit: '-based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.06383754312992096
    2. 'based' → logprob: -2.9388375282287598
    3. '-index' → logprob: -5.18883752822876
    4. '-' → logprob: -5.81383752822876
    5. ' -' → logprob: -9.063838005065918
    6. '-base' → logprob: -9.563838005065918
    7. '-Based' → logprob: -9.563838005065918
    8. ' based' → logprob: -10.188838005065918
    9. 'indexed' → logprob: -10.938838005065918
    10. '-bas' → logprob: -11.813838005065918

Token 138: 'ic' (ID: 291)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00010270876373397186
    2. 'dex' → logprob: -10.625102996826172
    3. 'é' → logprob: -10.875102996826172
    4. '```' → logprob: -11.375102996826172
    5. 'x' → logprob: -12.000102996826172
    6. 'indexed' → logprob: -12.125102996826172
    7. 'ent' → logprob: -12.375102996826172
    8. 'exp' → logprob: -12.625102996826172
    9. 'ed' → logprob: -12.750102996826172
    10. 'exe' → logprob: -13.000102996826172

Token 139: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.012153699062764645
    2. 'é' → logprob: -5.262153625488281
    3. 'ed' → logprob: -5.387153625488281
    4. 'e' → logprob: -6.137153625488281
    5. 'ee' → logprob: -9.137153625488281
    6. 'ex' → logprob: -10.762153625488281
    7. 'es' → logprob: -11.387153625488281
    8. 'ées' → logprob: -12.012153625488281
    9. 'eed' → logprob: -12.637153625488281
    10. '#' → logprob: -13.262153625488281

Token 140: ',' (ID: 11)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18463414907455444
    2. 'arr' → logprob: -2.059634208679199
    3. 'a' → logprob: -3.684634208679199
    4. ' A' → logprob: -5.309634208679199
    5. 'array' → logprob: -5.309634208679199
    6. 'lst' → logprob: -6.309634208679199
    7. 'numbers' → logprob: -6.559634208679199
    8. 'data' → logprob: -6.684634208679199
    9. 'values' → logprob: -8.3096342086792
    10. 'nums' → logprob: -8.5596342086792

Token 141: ' c' (ID: 274)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -1.1878888607025146
    2. ' array' → logprob: -1.4378888607025146
    3. ' A' → logprob: -1.9378888607025146
    4. 'arr' → logprob: -2.4378888607025146
    5. ' lst' → logprob: -2.4378888607025146
    6. 'A' → logprob: -3.1878888607025146
    7. ' a' → logprob: -3.8128888607025146
    8. 'array' → logprob: -4.062889099121094
    9. 'a' → logprob: -4.437889099121094
    10. 'lst' → logprob: -4.562889099121094

Token 142: ''est' (ID: 6616)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.7694261074066162
    2. 'on' → logprob: -2.019426107406616
    3. 'e' → logprob: -2.269426107406616
    4. 'es' → logprob: -2.394426107406616
    5. ''est' → logprob: -3.519426107406616
    6. 'ol' → logprob: -4.019426345825195
    7. '#' → logprob: -4.144426345825195
    8. 'est' → logprob: -4.144426345825195
    9. 'omme' → logprob: -4.144426345825195
    10. 'al' → logprob: -4.269426345825195

Token 143: '-à' (ID: 56297)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1755658388137817
    2. ' ' → logprob: -1.1755658388137817
    3. ',' → logprob: -1.4255658388137817
    4. '_' → logprob: -3.300565719604492
    5. ' [' → logprob: -3.675565719604492
    6. ' afin' → logprob: -3.925565719604492
    7. ')' → logprob: -5.050565719604492
    8. ' a' → logprob: -5.675565719604492
    9. ' ,' → logprob: -5.675565719604492
    10. ' pour' → logprob: -5.675565719604492

Token 144: '-dire' (ID: 76064)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.85038161277771
    2. '0' → logprob: -0.97538161277771
    3. '[]' → logprob: -2.72538161277771
    4. '-' → logprob: -3.97538161277771
    5. '1' → logprob: -3.97538161277771
    6. 'list' → logprob: -4.350381851196289
    7. 'indexed' → logprob: -5.350381851196289
    8. 'None' → logprob: -5.475381851196289
    9. '`' → logprob: -5.600381851196289
    10. 'la' → logprob: -5.600381851196289

Token 145: ' que' (ID: 661)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5021329522132874
    2. '[' → logprob: -1.0021328926086426
    3. ' que' → logprob: -4.502132892608643
    4. ' arr' → logprob: -5.002132892608643
    5. ' lst' → logprob: -5.752132892608643
    6. 'arr' → logprob: -6.377132892608643
    7. ' nums' → logprob: -7.127132892608643
    8. ' array' → logprob: -7.627132892608643
    9. '0' → logprob: -8.0021333694458
    10. ' data' → logprob: -8.1271333694458

Token 146: ' l' (ID: 305)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.9391101598739624
    2. 'A' → logprob: -1.6891101598739624
    3. 'a' → logprob: -1.8141101598739624
    4. ' a' → logprob: -2.064110279083252
    5. 'arr' → logprob: -3.439110279083252
    6. ' arr' → logprob: -3.689110279083252
    7. ' data' → logprob: -3.939110279083252
    8. 'data' → logprob: -4.564110279083252
    9. ' lst' → logprob: -4.689110279083252
    10. 'lst' → logprob: -4.689110279083252

Token 147: ''' (ID: 6)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.399186372756958
    2. ' tableau' → logprob: -2.649186372756958
    3. 'a' → logprob: -2.774186372756958
    4. ' A' → logprob: -2.774186372756958
    5. ' array' → logprob: -3.399186372756958
    6. ' data' → logprob: -3.524186372756958
    7. ' lst' → logprob: -3.649186372756958
    8. 's' → logprob: -5.024186134338379
    9. '[' → logprob: -5.149186134338379
    10. ' s' → logprob: -5.149186134338379

Token 148: 'index' (ID: 2257)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.6149041652679443
    2. ' array' → logprob: -1.8649041652679443
    3. 'A' → logprob: -1.9899041652679443
    4. ' a' → logprob: -2.2399041652679443
    5. ' lst' → logprob: -2.3649041652679443
    6. 'arr' → logprob: -2.7399041652679443
    7. 'a' → logprob: -2.7399041652679443
    8. ' arr' → logprob: -2.8649041652679443
    9. ' data' → logprob: -3.3649041652679443
    10. 'lst' → logprob: -3.7399041652679443

Token 149: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1916841268539429
    2. '0' → logprob: -1.3166841268539429
    3. '_' → logprob: -1.8166841268539429
    4. '[' → logprob: -2.4416842460632324
    5. 'ing' → logprob: -2.5666842460632324
    6. ' =' → logprob: -3.5666842460632324
    7. 's' → logprob: -3.8166842460632324
    8. 'ed' → logprob: -4.066684246063232
    9. ' _' → logprob: -4.441684246063232
    10. ' [' → logprob: -5.066684246063232

Token 150: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3919822573661804
    2. ' ' → logprob: -2.141982316970825
    3. ' =' → logprob: -2.766982316970825
    4. '[' → logprob: -3.141982316970825
    5. '_' → logprob: -3.266982316970825
    6. 's' → logprob: -4.016982078552246
    7. 'ing' → logprob: -4.891982078552246
    8. ' arr' → logprob: -5.016982078552246
    9. '=' → logprob: -5.141982078552246
    10. 'arr' → logprob: -5.516982078552246

Token 151: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15363486111164093
    2. ' ,' → logprob: -2.403634786605835
    3. '[' → logprob: -4.278635025024414
    4. ' is' → logprob: -4.903635025024414
    5. ' ' → logprob: -5.028635025024414
    6. ')' → logprob: -5.778635025024414
    7. ' [' → logprob: -6.153635025024414
    8. ':' → logprob: -6.278635025024414
    9. ' a' → logprob: -6.278635025024414
    10. ' =' → logprob: -6.403635025024414

Token 152: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.49058088660240173
    2. 'la' → logprob: -2.1155807971954346
    3. 'l' → logprob: -2.7405807971954346
    4. ' l' → logprob: -2.9905807971954346
    5. 'a' → logprob: -3.1155807971954346
    6. 'lst' → logprob: -3.6155807971954346
    7. 'A' → logprob: -4.365581035614014
    8. ' lst' → logprob: -4.490581035614014
    9. ' A' → logprob: -4.740581035614014
    10. 'arr' → logprob: -4.740581035614014

Token 153: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.149618148803711
    2. ' liste' → logprob: -1.649618148803711
    3. ' tableau' → logprob: -1.649618148803711
    4. 'arr' → logprob: -2.899618148803711
    5. 'a' → logprob: -3.149618148803711
    6. 'array' → logprob: -3.274618148803711
    7. ' array' → logprob: -3.524618148803711
    8. 'table' → logprob: -3.774618148803711
    9. 'lst' → logprob: -3.774618148803711
    10. 'A' → logprob: -3.899618148803711

Token 154: ' corresponde' (ID: 81973)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -1.0103346109390259
    2. ' a' → logprob: -1.7603346109390259
    3. ' A' → logprob: -2.6353344917297363
    4. 'a' → logprob: -2.8853344917297363
    5. ' est' → logprob: -3.0103344917297363
    6. ' s' → logprob: -3.0103344917297363
    7. ',' → logprob: -3.2603344917297363
    8. ' nums' → logprob: -3.7603344917297363
    9. ' tableau' → logprob: -3.8853344917297363
    10. ' array' → logprob: -4.010334491729736

Token 155: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.17918533086776733
    2. ' au' → logprob: -2.804185390472412
    3. ' a' → logprob: -3.179185390472412
    4. ' ' → logprob: -3.804185390472412
    5. ',' → logprob: -4.179185390472412
    6. ' to' → logprob: -4.304185390472412
    7. ' aux' → logprob: -5.179185390472412
    8. '0' → logprob: -6.804185390472412
    9. '[' → logprob: -7.304185390472412
    10. ')' → logprob: -7.429185390472412

Token 156: ' premier' (ID: 15506)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.9989882707595825
    2. '0' → logprob: -1.2489882707595825
    3. 'élé' → logprob: -1.7489882707595825
    4. 'prem' → logprob: -2.623988151550293
    5. 'dé' → logprob: -3.123988151550293
    6. ' nombre' → logprob: -4.248988151550293
    7. ' premier' → logprob: -4.498988151550293
    8. 'element' → logprob: -5.373988151550293
    9. 'val' → logprob: -5.623988151550293
    10. ' tableau' → logprob: -5.748988151550293

Token 157: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.790935754776001
    2. ' élément' → logprob: -1.290935754776001
    3. 'element' → logprob: -1.415935754776001
    4. ' element' → logprob: -3.915935754776001
    5. ' ' → logprob: -6.040935516357422
    6. '<|end|>' → logprob: -6.665935516357422
    7. '0' → logprob: -7.290935516357422
    8. 'elements' → logprob: -7.540935516357422
    9. ' éléments' → logprob: -7.665935516357422
    10. 'token' → logprob: -8.165935516357422

Token 158: ' logique' (ID: 115350)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.015917420387268
    2. 'arr' → logprob: -1.140917420387268
    3. 'a' → logprob: -1.515917420387268
    4. 'lst' → logprob: -3.5159173011779785
    5. ' A' → logprob: -4.0159173011779785
    6. ' a' → logprob: -4.8909173011779785
    7. 'array' → logprob: -4.8909173011779785
    8. ' arr' → logprob: -5.1409173011779785
    9. ',' → logprob: -5.3909173011779785
    10. 'data' → logprob: -5.5159173011779785

Token 159: ',' (ID: 11)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4578644037246704
    2. 'a' → logprob: -2.457864284515381
    3. 'A' → logprob: -2.582864284515381
    4. ' arr' → logprob: -2.582864284515381
    5. ' A' → logprob: -3.832864284515381
    6. ',' → logprob: -3.957864284515381
    7. ' a' → logprob: -4.207864284515381
    8. 'lst' → logprob: -4.332864284515381
    9. 'array' → logprob: -4.707864284515381
    10. 'nums' → logprob: -5.082864284515381

Token 160: ' facilit' (ID: 29597)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.123359203338623
    2. 'a' → logprob: -1.623359203338623
    3. 'arr' → logprob: -1.748359203338623
    4. ' A' → logprob: -2.373359203338623
    5. 'array' → logprob: -2.873359203338623
    6. 'lst' → logprob: -3.248359203338623
    7. ' array' → logprob: -3.373359203338623
    8. ' a' → logprob: -3.873359203338623
    9. ' lst' → logprob: -4.373359203338623
    10. '[' → logprob: -4.623359203338623

Token 161: 'ant' (ID: 493)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.23579780757427216
    2. ' la' → logprob: -2.235797882080078
    3. 'e' → logprob: -2.985797882080078
    4. ' l' → logprob: -4.110797882080078
    5. ' le' → logprob: -4.860797882080078
    6. ' une' → logprob: -4.860797882080078
    7. 'ant' → logprob: -4.985797882080078
    8. ' e' → logprob: -5.860797882080078
    9. ' les' → logprob: -6.110797882080078
    10. ' a' → logprob: -6.360797882080078

Token 162: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4985358715057373
    2. ' la' → logprob: -1.1235358715057373
    3. ' le' → logprob: -3.2485358715057373
    4. 'l' → logprob: -4.248536109924316
    5. ' les' → logprob: -4.748536109924316
    6. 'la' → logprob: -5.748536109924316
    7. ' ' → logprob: -7.498536109924316
    8. 'le' → logprob: -7.748536109924316
    9. ' len' → logprob: -8.248536109924316
    10. 's' → logprob: -8.623536109924316

Token 163: ''accès' (ID: 116356)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0102916955947876
    2. ''' → logprob: -1.7602916955947876
    3. 'e' → logprob: -2.135291576385498
    4. 'es' → logprob: -2.260291576385498
    5. ''accès' → logprob: -2.885291576385498
    6. '_' → logprob: -3.010291576385498
    7. ' a' → logprob: -3.010291576385498
    8. ''espace' → logprob: -4.760291576385498
    9. '')' → logprob: -5.010291576385498
    10. '’accès' → logprob: -5.135291576385498

Token 164: ' dans' (ID: 2671)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.24930287897586823
    2. 'arr' → logprob: -2.124302864074707
    3. 'a' → logprob: -2.749302864074707
    4. 'lst' → logprob: -4.624302864074707
    5. ' A' → logprob: -4.749302864074707
    6. ',' → logprob: -5.124302864074707
    7. 'array' → logprob: -5.499302864074707
    8. 'L' → logprob: -6.624302864074707
    9. 'data' → logprob: -6.749302864074707
    10. 'values' → logprob: -6.999302864074707

Token 165: ' un' (ID: 537)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8497219085693359
    2. ' la' → logprob: -1.099721908569336
    3. 'la' → logprob: -3.099721908569336
    4. ' lst' → logprob: -3.349721908569336
    5. 'lst' → logprob: -3.474721908569336
    6. 'A' → logprob: -3.974721908569336
    7. ' le' → logprob: -4.099721908569336
    8. 'arr' → logprob: -4.099721908569336
    9. ' a' → logprob: -4.349721908569336
    10. 'l' → logprob: -4.724721908569336

Token 166: ' contexte' (ID: 82673)
  Prédit: ' tableau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.057100120931863785
    2. 'table' → logprob: -4.182100296020508
    3. ' table' → logprob: -5.057100296020508
    4. '[' → logprob: -5.307100296020508
    5. ' code' → logprob: -5.307100296020508
    6. ' array' → logprob: -5.682100296020508
    7. 'array' → logprob: -5.682100296020508
    8. ' tableaux' → logprob: -5.807100296020508
    9. 'tab' → logprob: -6.557100296020508
    10. 's' → logprob: -6.682100296020508

Token 167: ' où' (ID: 15113)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -1.2688745260238647
    2. ' aux' → logprob: -2.2688746452331543
    3. ' de' → logprob: -2.3938746452331543
    4. ' d' → logprob: -2.6438746452331543
    5. 'arr' → logprob: -3.0188746452331543
    6. ' à' → logprob: -3.1438746452331543
    7. ' tableau' → logprob: -3.1438746452331543
    8. ' data' → logprob: -3.1438746452331543
    9. ' des' → logprob: -3.5188746452331543
    10. 'de' → logprob: -3.6438746452331543

Token 168: ' les' (ID: 1341)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7162846326828003
    2. ' l' → logprob: -1.7162846326828003
    3. ' les' → logprob: -1.9662846326828003
    4. ' la' → logprob: -2.84128475189209
    5. 'l' → logprob: -3.09128475189209
    6. 'on' → logprob: -3.96628475189209
    7. 'la' → logprob: -4.59128475189209
    8. ' le' → logprob: -4.84128475189209
    9. ' indices' → logprob: -4.84128475189209
    10. 'les' → logprob: -4.96628475189209

Token 169: ' indices' (ID: 30378)
  Prédit: ' indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.0883815735578537
    2. 'indices' → logprob: -3.71338152885437
    3. ' éléments' → logprob: -3.71338152885437
    4. ' tableaux' → logprob: -4.088381767272949
    5. ' opérations' → logprob: -5.213381767272949
    6. 'index' → logprob: -6.213381767272949
    7. ' données' → logprob: -6.213381767272949
    8. ' index' → logprob: -6.338381767272949
    9. 'élé' → logprob: -6.713381767272949
    10. ' valeurs' → logprob: -6.838381767272949

Token 170: ' commencent' (ID: 184941)
  Prédit: ' commencent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' commencent' → logprob: -0.36098092794418335
    2. ' des' → logprob: -2.110980987548828
    3. ' sont' → logprob: -2.235980987548828
    4. 's' → logprob: -3.860980987548828
    5. ' comm' → logprob: -4.485980987548828
    6. ' starts' → logprob: -4.610980987548828
    7. ' de' → logprob: -5.110980987548828
    8. 'de' → logprob: -5.360980987548828
    9. 'des' → logprob: -5.985980987548828
    10. ' are' → logprob: -6.360980987548828

Token 171: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1517775058746338
    2. ' par' → logprob: -2.276777505874634
    3. 'à' → logprob: -4.401777267456055
    4. ',' → logprob: -4.776777267456055
    5. ' at' → logprob: -5.401777267456055
    6. 'par' → logprob: -5.776777267456055
    7. ')' → logprob: -6.526777267456055
    8. ' au' → logprob: -6.526777267456055
    9. ' from' → logprob: -6.651777267456055
    10. 'from' → logprob: -6.651777267456055

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '0' → logprob: -17.50000762939453
    4. 'index' → logprob: -18.12500762939453
    5. 'l' → logprob: -18.62500762939453
    6. '
' → logprob: -19.37500762939453
    7. '```' → logprob: -19.50000762939453
    8. 'indice' → logprob: -19.62500762939453
    9. 'un' → logprob: -20.37500762939453
    10. ' ' → logprob: -20.43750762939453

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. 'un' → logprob: -11.75001049041748
    3. '0' → logprob: -13.50001049041748
    4. ' ' → logprob: -14.50001049041748
    5. '```' → logprob: -16.000009536743164
    6. 'index' → logprob: -16.750009536743164
    7. '１' → logprob: -17.250009536743164
    8. '#' → logprob: -17.562509536743164
    9. 'indice' → logprob: -17.562509536743164
    10. 'l' → logprob: -18.062509536743164

Token 174: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1893264800310135
    2. ')' → logprob: -2.064326524734497
    3. 'a' → logprob: -4.439326286315918
    4. 'arr' → logprob: -4.564326286315918
    5. ',
' → logprob: -4.939326286315918
    6. 'data' → logprob: -5.814326286315918
    7. 'lst' → logprob: -6.314326286315918
    8. '[' → logprob: -6.439326286315918
    9. 's' → logprob: -6.564326286315918
    10. 'A' → logprob: -6.814326286315918

Token 175: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.15950797498226166
    2. 'arr' → logprob: -2.784507989883423
    3. ' A' → logprob: -3.034507989883423
    4. 'a' → logprob: -3.659507989883423
    5. 'array' → logprob: -5.784507751464844
    6. 'data' → logprob: -6.159507751464844
    7. 'lst' → logprob: -6.409507751464844
    8. 'numbers' → logprob: -6.659507751464844
    9. ' a' → logprob: -7.034507751464844
    10. ' arr' → logprob: -7.409507751464844

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811734676361084
    2. '=' → logprob: -1.4061734676361084
    3. '=[' → logprob: -12.031173706054688
    4. ' =[' → logprob: -12.281173706054688
    5. '[' → logprob: -12.656173706054688
    6. ' ' → logprob: -13.031173706054688
    7. '_' → logprob: -13.406173706054688
    8. ',' → logprob: -13.656173706054688
    9. ')' → logprob: -13.781173706054688
    10. 's' → logprob: -14.156173706054688

Token 177: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005563704180531204
    2. ' [' → logprob: -7.500556468963623
    3. '([' → logprob: -12.625555992126465
    4. '0' → logprob: -17.87555694580078
    5. 'list' → logprob: -17.87555694580078
    6. ' ' → logprob: -19.25055694580078
    7. '[list' → logprob: -19.50055694580078
    8. ' ' → logprob: -20.12555694580078
    9. ' list' → logprob: -21.12555694580078
    10. '[len' → logprob: -21.25055694580078

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.2500057220459
    4. 'int' → logprob: -19.1250057220459
    5. '
' → logprob: -20.0000057220459
    6. '  ' → logprob: -20.0000057220459
    7. '۰' → logprob: -20.5000057220459
    8. ' ' → logprob: -21.1250057220459
    9. ')' → logprob: -21.7500057220459
    10. '０' → logprob: -21.7500057220459

Token 179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008064138819463551
    2. ']+' → logprob: -7.1258063316345215
    3. ' ]' → logprob: -13.62580680847168
    4. ',' → logprob: -14.50080680847168
    5. '+' → logprob: -16.00080680847168
    6. ']+=' → logprob: -16.12580680847168
    7. '+]' → logprob: -16.50080680847168
    8. ']
' → logprob: -16.87580680847168
    9. ']

' → logprob: -17.37580680847168
    10. 'import' → logprob: -18.87580680847168

Token 180: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013276183744892478
    2. ' +' → logprob: -6.6263275146484375
    3. '+[' → logprob: -13.751327514648438
    4. '+
' → logprob: -14.876327514648438
    5. ']+' → logprob: -16.126327514648438
    6. '+(' → logprob: -17.126327514648438
    7. '+

' → logprob: -17.376327514648438
    8. '＋' → logprob: -17.501327514648438
    9. ']' → logprob: -17.626327514648438
    10. '+=' → logprob: -17.876327514648438

Token 181: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0009114635176956654
    2. ' list' → logprob: -7.000911235809326
    3. 'map' → logprob: -21.125911712646484
    4. '[list' → logprob: -21.750911712646484
    5. 'List' → logprob: -22.000911712646484
    6. '[' → logprob: -22.125911712646484
    7. '	list' → logprob: -22.750911712646484
    8. '(list' → logprob: -23.000911712646484
    9. '```' → logprob: -23.375911712646484
    10. '=list' → logprob: -23.625911712646484

Token 182: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.420598219847307e-05
    2. '(' → logprob: -9.7500638961792
    3. '(int' → logprob: -12.3750638961792
    4. 'map' → logprob: -13.3750638961792
    5. ' map' → logprob: -16.625064849853516
    6. '.map' → logprob: -17.250064849853516
    7. ',map' → logprob: -17.625064849853516
    8. '(
' → logprob: -17.875064849853516
    9. '<int' → logprob: -18.000064849853516
    10. '	map' → logprob: -18.000064849853516

Token 183: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006597769097425044
    2. '(' → logprob: -7.500659942626953
    3. 'int' → logprob: -9.625659942626953
    4. '<int' → logprob: -10.375659942626953
    5. '[int' → logprob: -12.375659942626953
    6. '(
' → logprob: -13.125659942626953
    7. ',int' → logprob: -13.875659942626953
    8. ']int' → logprob: -13.875659942626953
    9. ' (' → logprob: -14.500659942626953
    10. ' int' → logprob: -14.625659942626953

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012755078263580799
    2. '(read' → logprob: -4.387754917144775
    3. ' ,' → logprob: -8.887755393981934
    4. 'read' → logprob: -9.387755393981934
    5. '(' → logprob: -10.887755393981934
    6. ' read' → logprob: -13.387755393981934
    7. ' (' → logprob: -13.512755393981934
    8. '(),' → logprob: -14.137755393981934
    9. ',(' → logprob: -15.012755393981934
    10. ')' → logprob: -15.887755393981934

Token 185: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.00016706773021724075
    2. ' readline' → logprob: -8.875166893005371
    3. '(read' → logprob: -11.000166893005371
    4. ' read' → logprob: -11.500166893005371
    5. '.readline' → logprob: -16.375167846679688
    6. '	read' → logprob: -16.500167846679688
    7. ')' → logprob: -16.750167846679688
    8. 'readonly' → logprob: -17.000167846679688
    9. ' ' → logprob: -17.875167846679688
    10. '_read' → logprob: -18.250167846679688

Token 186: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.988221684878226e-06
    2. '()' → logprob: -11.875006675720215
    3. ' ().' → logprob: -17.75000762939453
    4. '.' → logprob: -19.50000762939453
    5. '(' → logprob: -19.50000762939453
    6. '()))' → logprob: -19.87500762939453
    7. '()[' → logprob: -20.00000762939453
    8. '()).' → logprob: -21.00000762939453
    9. '()
' → logprob: -21.12500762939453
    10. ')' → logprob: -21.12500762939453

Token 187: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.610702363715973e-06
    2. 'strip' → logprob: -11.750009536743164
    3. ' split' → logprob: -13.375009536743164
    4. 'rstrip' → logprob: -16.750009536743164
    5. '(split' → logprob: -17.125009536743164
    6. 'spl' → logprob: -18.000009536743164
    7. '().' → logprob: -19.000009536743164
    8. '.split' → logprob: -19.250009536743164
    9. ')' → logprob: -19.625009536743164
    10. 'read' → logprob: -19.750009536743164

Token 188: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008777177892625332
    2. '()' → logprob: -5.258777141571045
    3. '))' → logprob: -5.758777141571045
    4. '())' → logprob: -8.008777618408203
    5. '(' → logprob: -10.258777618408203
    6. '()));' → logprob: -11.758777618408203
    7. '()))
' → logprob: -13.258777618408203
    8. ')' → logprob: -13.758777618408203
    9. '())))' → logprob: -13.758777618408203
    10. '())).' → logprob: -13.758777618408203

Token 189: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0710309743881226
    2. 'dp' → logprob: -1.6960309743881226
    3. 'diff' → logprob: -1.9460309743881226
    4. '
' → logprob: -2.696031093597412
    5. 'result' → logprob: -2.946031093597412
    6. 'prefix' → logprob: -3.071031093597412
    7. 'operations' → logprob: -3.696031093597412
    8. 'for' → logprob: -3.946031093597412
    9. 'd' → logprob: -4.071031093597412
    10. 'res' → logprob: -4.321031093597412

Token 190: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0195434093475342
    2. '#' → logprob: -1.8945434093475342
    3. 'diff' → logprob: -1.8945434093475342
    4. 'for' → logprob: -2.019543409347534
    5. 'result' → logprob: -2.519543409347534
    6. 'prefix' → logprob: -3.644543409347534
    7. 'res' → logprob: -4.519543647766113
    8. 'operations' → logprob: -4.644543647766113
    9. 'from' → logprob: -4.769543647766113
    10. 'def' → logprob: -4.894543647766113

Token 191: ' initialise' (ID: 145250)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0735737085342407
    2. ' =' → logprob: -1.1985737085342407
    3. ' for' → logprob: -1.6985737085342407
    4. '_' → logprob: -3.323573589324951
    5. 'def' → logprob: -3.323573589324951
    6. ' def' → logprob: -4.073573589324951
    7. '=' → logprob: -4.323573589324951
    8. 'range' → logprob: -4.573573589324951
    9. '#' → logprob: -4.698573589324951
    10. 'ranges' → logprob: -4.948573589324951

Token 192: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1596297323703766
    2. 'diff' → logprob: -3.2846298217773438
    3. ' dp' → logprob: -3.5346298217773438
    4. 'res' → logprob: -4.534629821777344
    5. 'ans' → logprob: -4.659629821777344
    6. 'max' → logprob: -5.034629821777344
    7. 'une' → logprob: -5.159629821777344
    8. ' une' → logprob: -5.284629821777344
    9. 'freq' → logprob: -5.284629821777344
    10. 'count' → logprob: -5.409629821777344

Token 193: ' variable' (ID: 11076)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20653855800628662
    2. 'liste' → logprob: -2.706538677215576
    3. 'variable' → logprob: -3.456538677215576
    4. 'diff' → logprob: -4.081538677215576
    5. 'fen' → logprob: -4.206538677215576
    6. '#' → logprob: -4.206538677215576
    7. 's' → logprob: -4.581538677215576
    8. ' variable' → logprob: -4.956538677215576
    9. 'distance' → logprob: -5.706538677215576
    10. 'result' → logprob: -5.956538677215576

Token 194: ' now' (ID: 1954)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.916736364364624
    2. 'count' → logprob: -2.041736364364624
    3. ' result' → logprob: -2.541736364364624
    4. 'answer' → logprob: -2.666736364364624
    5. 'total' → logprob: -2.916736364364624
    6. 'res' → logprob: -3.166736364364624
    7. 'max' → logprob: -3.166736364364624
    8. 'sum' → logprob: -3.416736364364624
    9. 'ans' → logprob: -3.541736364364624
    10. 'operations' → logprob: -3.791736364364624

Token 195: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12707646191120148
    2. '=' → logprob: -2.1270763874053955
    3. 's' → logprob: -10.127076148986816
    4. ',' → logprob: -10.252076148986816
    5. '_' → logprob: -11.752076148986816
    6. 'max' → logprob: -12.002076148986816
    7. '_max' → logprob: -12.252076148986816
    8. '_count' → logprob: -12.627076148986816
    9. '=[]' → logprob: -12.627076148986816
    10. '_time' → logprob: -12.752076148986816

Token 196: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02876737341284752
    2. 'K' → logprob: -3.7787673473358154
    3. ' ' → logprob: -6.0287675857543945
    4. '1' → logprob: -6.5287675857543945
    5. ' K' → logprob: -7.1537675857543945
    6. 'A' → logprob: -8.028767585754395
    7. 'N' → logprob: -8.278767585754395
    8. 'float' → logprob: -9.653767585754395
    9. '-' → logprob: -10.028767585754395
    10. 'max' → logprob: -10.028767585754395

Token 197: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0379449687898159
    2. 'K' → logprob: -3.662945032119751
    3. '1' → logprob: -4.662944793701172
    4. 'A' → logprob: -7.287944793701172
    5. 'N' → logprob: -7.662944793701172
    6. ' ' → logprob: -8.162944793701172
    7. '-' → logprob: -8.287944793701172
    8. 'float' → logprob: -9.037944793701172
    9. 'max' → logprob: -9.537944793701172
    10. ' K' → logprob: -9.787944793701172

Token 198: '
' (ID: 198)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.7342289686203003
    2. 'now' → logprob: -0.7342289686203003
    3. '
' → logprob: -3.48422908782959
    4. '\n' → logprob: -5.85922908782959
    5. ' ' → logprob: -6.60922908782959
    6. '[now' → logprob: -6.98422908782959
    7. '	now' → logprob: -7.23422908782959
    8. '<|end|>' → logprob: -7.23422908782959
    9. 'n' → logprob: -7.35922908782959
    10. ',' → logprob: -7.48422908782959

Token 199: '#' (ID: 2)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0012427325127646327
    2. ' now' → logprob: -6.751242637634277
    3. '
' → logprob: -9.876242637634277
    4. 'n' → logprob: -11.876242637634277
    5. '	now' → logprob: -12.501242637634277
    6. '\n' → logprob: -12.876242637634277
    7. '[now' → logprob: -13.126242637634277
    8. '_now' → logprob: -13.626242637634277
    9. 'nown' → logprob: -14.126242637634277
    10. '```' → logprob: -14.251242637634277

Token 200: ' Cette' (ID: 27383)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0028654970228672028
    2. ' now' → logprob: -5.877865314483643
    3. '
' → logprob: -10.0028657913208
    4. 'current' → logprob: -12.2528657913208
    5. '```' → logprob: -12.8778657913208
    6. '	now' → logprob: -13.8778657913208
    7. 'n' → logprob: -14.0028657913208
    8. '[now' → logprob: -14.0028657913208
    9. 'max' → logprob: -14.1278657913208
    10. ' maintenant' → logprob: -14.2528657913208

Token 201: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.8144758939743042
    2. '#' → logprob: -1.9394758939743042
    3. ' variable' → logprob: -2.3144760131835938
    4. 'now' → logprob: -2.5644760131835938
    5. ' now' → logprob: -3.4394760131835938
    6. 's' → logprob: -3.9394760131835938
    7. '=' → logprob: -4.189476013183594
    8. ' is' → logprob: -4.189476013183594
    9. 'current' → logprob: -4.189476013183594
    10. 'while' → logprob: -4.314476013183594

Token 202: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.106120228767395
    2. '=' → logprob: -1.231120228767395
    3. ' now' → logprob: -2.2311201095581055
    4. '#' → logprob: -2.8561201095581055
    5. ' représente' → logprob: -2.8561201095581055
    6. 'now' → logprob: -3.9811201095581055
    7. 'maint' → logprob: -3.9811201095581055
    8. ',' → logprob: -4.1061201095581055
    9. ' est' → logprob: -4.1061201095581055
    10. ' #' → logprob: -4.4811201095581055

Token 203: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7335208058357239
    2. 'l' → logprob: -1.608520746231079
    3. ' la' → logprob: -1.608520746231079
    4. ' le' → logprob: -3.358520746231079
    5. 'le' → logprob: -3.608520746231079
    6. 'la' → logprob: -3.983520746231079
    7. ' the' → logprob: -4.858520984649658
    8. 'the' → logprob: -4.983520984649658
    9. '<|end|>' → logprob: -5.108520984649658
    10. 'current' → logprob: -5.233520984649658

Token 204: ' '' (ID: 461)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.034438636153936386
    2. ' position' → logprob: -4.034438610076904
    3. 'pos' → logprob: -4.909438610076904
    4. 'current' → logprob: -5.784438610076904
    5. 'fen' → logprob: -6.909438610076904
    6. '#' → logprob: -7.784438610076904
    7. 'val' → logprob: -7.784438610076904
    8. 'indice' → logprob: -8.034439086914062
    9. 'p' → logprob: -8.159439086914062
    10. 's' → logprob: -8.409439086914062

Token 205: 'position' (ID: 4504)
  Prédit: 'position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.028936926275491714
    2. ' position' → logprob: -4.528936862945557
    3. 'pos' → logprob: -4.778936862945557
    4. 'fen' → logprob: -5.278936862945557
    5. 'current' → logprob: -6.528936862945557
    6. ' fenêtre' → logprob: -7.903936862945557
    7. 'posit' → logprob: -8.403937339782715
    8. 's' → logprob: -8.528937339782715
    9. 'val' → logprob: -8.778937339782715
    10. 'page' → logprob: -8.778937339782715

Token 206: ' actuelle' (ID: 104951)
  Prédit: ' actuelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' actuelle' → logprob: -0.5971935987472534
    2. 'cour' → logprob: -1.5971935987472534
    3. 'current' → logprob: -2.097193717956543
    4. ' current' → logprob: -3.347193717956543
    5. ' cour' → logprob: -3.347193717956543
    6. 'act' → logprob: -4.347193717956543
    7. ' courant' → logprob: -4.472193717956543
    8. ' de' → logprob: -5.222193717956543
    9. ' du' → logprob: -5.347193717956543
    10. '_act' → logprob: -5.722193717956543

Token 207: ''' (ID: 6)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.9347050786018372
    2. ' now' → logprob: -2.0597050189971924
    3. ''' → logprob: -2.3097050189971924
    4. ',' → logprob: -2.8097050189971924
    5. '`' → logprob: -2.9347050189971924
    6. ' '' → logprob: -3.4347050189971924
    7. ')' → logprob: -3.5597050189971924
    8. 'now' → logprob: -3.5597050189971924
    9. 'current' → logprob: -3.6847050189971924
    10. ' dans' → logprob: -3.6847050189971924

Token 208: ' dans' (ID: 2671)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.2756304442882538
    2. ' now' → logprob: -1.5256304740905762
    3. 'position' → logprob: -4.650630474090576
    4. 'current' → logprob: -5.150630474090576
    5. '
' → logprob: -6.275630474090576
    6. ',' → logprob: -6.525630474090576
    7. 'pos' → logprob: -6.775630474090576
    8. ' =' → logprob: -7.025630474090576
    9. '=' → logprob: -7.650630474090576
    10. ' ' → logprob: -7.900630474090576

Token 209: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.25562360882759094
    2. 'la' → logprob: -2.2556235790252686
    3. 'le' → logprob: -3.0056235790252686
    4. ' A' → logprob: -3.6306235790252686
    5. ' la' → logprob: -3.7556235790252686
    6. ' le' → logprob: -4.630623817443848
    7. 'l' → logprob: -4.755623817443848
    8. 'range' → logprob: -6.255623817443848
    9. 'the' → logprob: -8.505623817443848
    10. ' l' → logprob: -8.630623817443848

Token 210: ' chaîne' (ID: 89288)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.36100253462791443
    2. 'A' → logprob: -1.8610025644302368
    3. 'liste' → logprob: -2.6110024452209473
    4. ' tableau' → logprob: -3.4860024452209473
    5. 'array' → logprob: -4.486002445220947
    6. 'code' → logprob: -4.486002445220947
    7. 'jeu' → logprob: -5.236002445220947
    8. 'list' → logprob: -5.486002445220947
    9. '#' → logprob: -6.611002445220947
    10. ' liste' → logprob: -6.736002445220947

Token 211: ' de' (ID: 334)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.2806643843650818
    2. ' now' → logprob: -1.5306644439697266
    3. 'current' → logprob: -4.530664443969727
    4. ',' → logprob: -5.780664443969727
    5. 'position' → logprob: -5.905664443969727
    6. '[now' → logprob: -5.905664443969727
    7. '
' → logprob: -6.155664443969727
    8. ' maintenant' → logprob: -6.405664443969727
    9. '<|end|>' → logprob: -6.780664443969727
    10. ' ' → logprob: -6.905664443969727

Token 212: ' sa' (ID: 880)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18889617919921875
    2. 'car' → logprob: -2.5638961791992188
    3. 'positions' → logprob: -3.8138961791992188
    4. 's' → logprob: -4.188896179199219
    5. 'indices' → logprob: -4.438896179199219
    6. 'dé' → logprob: -5.188896179199219
    7. 't' → logprob: -5.688896179199219
    8. 'command' → logprob: -5.688896179199219
    9. 'd' → logprob: -5.813896179199219
    10. ' caractères' → logprob: -5.938896179199219

Token 213: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.6326437592506409
    2. 'ts' → logprob: -1.007643699645996
    3. 'nts' → logprob: -3.757643699645996
    4. 'ns' → logprob: -4.007643699645996
    5. 'r' → logprob: -4.382643699645996
    6. 't' → logprob: -4.757643699645996
    7. 'prés' → logprob: -5.382643699645996
    8. 'ils' → logprob: -5.382643699645996
    9. 'rch' → logprob: -5.507643699645996
    10. 'voir' → logprob: -5.632643699645996

Token 214: ' (' (ID: 350)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.001141526736319065
    2. ' now' → logprob: -7.501141548156738
    3. '
' → logprob: -8.001141548156738
    4. 'current' → logprob: -9.501141548156738
    5. ',' → logprob: -9.876141548156738
    6. 'position' → logprob: -10.751141548156738
    7. '=' → logprob: -10.876141548156738
    8. '#' → logprob: -11.126141548156738
    9. '
' → logprob: -11.751141548156738
    10. ' =' → logprob: -11.876141548156738

Token 215: 'à' (ID: 708)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09047049283981323
    2. ' )' → logprob: -2.465470552444458
    3. 'current' → logprob: -8.215470314025879
    4. ')
' → logprob: -8.590470314025879
    5. ' ' → logprob: -8.715470314025879
    6. ',' → logprob: -9.090470314025879
    7. 'position' → logprob: -9.090470314025879
    8. ').' → logprob: -9.215470314025879
    9. '.' → logprob: -9.465470314025879
    10. '#' → logprob: -9.590470314025879

Token 216: ' partir' (ID: 12100)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.689283847808838
    2. 'part' → logprob: -2.189283847808838
    3. ' laquelle' → logprob: -2.189283847808838
    4. '1' → logprob: -2.439283847808838
    5. 'A' → logprob: -2.564283847808838
    6. 'which' → logprob: -2.689283847808838
    7. 'pas' → logprob: -3.064283847808838
    8. 'la' → logprob: -3.564283847808838
    9. 'int' → logprob: -3.689283847808838
    10. 'quoi' → logprob: -3.814283847808838

Token 217: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.16303692758083344
    2. '=' → logprob: -2.413036823272705
    3. ' de' → logprob: -3.038036823272705
    4. '1' → logprob: -4.663036823272705
    5. '#' → logprob: -6.163036823272705
    6. 'du' → logprob: -7.663036823272705
    7. 'd' → logprob: -7.788036823272705
    8. '0' → logprob: -8.663037300109863
    9. ' =' → logprob: -9.538037300109863
    10. ')' → logprob: -9.663037300109863

Token 218: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011812811717391014
    2. ' ' → logprob: -5.261812686920166
    3. 'which' → logprob: -6.261812686920166
    4. ' laquelle' → logprob: -6.636812686920166
    5. 'now' → logprob: -6.886812686920166
    6. 'A' → logprob: -7.136812686920166
    7. '0' → logprob: -7.761812686920166
    8. ')' → logprob: -7.886812686920166
    9. ' which' → logprob: -8.636813163757324
    10. 'la' → logprob: -9.011813163757324

Token 219: ''' (ID: 6)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1275627315044403
    2. '=' → logprob: -3.2525627613067627
    3. '[' → logprob: -3.6275627613067627
    4. ')' → logprob: -3.7525627613067627
    5. 'A' → logprob: -4.127562522888184
    6. 'quel' → logprob: -5.627562522888184
    7. '+' → logprob: -6.377562522888184
    8. '0' → logprob: -6.627562522888184
    9. '#' → logprob: -7.127562522888184
    10. ' =' → logprob: -7.502562522888184

Token 220: 'index' (ID: 2257)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025400927290320396
    2. 'A' → logprob: -4.9004011154174805
    3. '#' → logprob: -5.1504011154174805
    4. 'which' → logprob: -5.6504011154174805
    5. ')' → logprob: -6.1504011154174805
    6. 'position' → logprob: -6.6504011154174805
    7. '2' → logprob: -7.1504011154174805
    8. 'index' → logprob: -7.4004011154174805
    9. ' which' → logprob: -8.02540111541748
    10. ' ' → logprob: -8.27540111541748

Token 221: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16905848681926727
    2. ')' → logprob: -2.6690585613250732
    3. ' ' → logprob: -3.2940585613250732
    4. '0' → logprob: -3.9190585613250732
    5. ' =' → logprob: -4.294058322906494
    6. '=' → logprob: -5.294058322906494
    7. ' )' → logprob: -5.294058322906494
    8. 'A' → logprob: -6.294058322906494
    9. ',' → logprob: -7.044058322906494
    10. '[' → logprob: -8.044058799743652

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013066678075119853
    2. 'A' → logprob: -7.251306533813477
    3. '0' → logprob: -8.876306533813477
    4. '[' → logprob: -9.626306533813477
    5. 'N' → logprob: -9.751306533813477
    6. 'now' → logprob: -9.751306533813477
    7. 's' → logprob: -10.251306533813477
    8. ' ' → logprob: -10.251306533813477
    9. '2' → logprob: -10.376306533813477
    10. '```' → logprob: -10.626306533813477

Token 223: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01648438163101673
    2. ' )' → logprob: -4.141484260559082
    3. ',' → logprob: -8.641484260559082
    4. '#' → logprob: -9.766484260559082
    5. ')
' → logprob: -10.266484260559082
    6. '
' → logprob: -10.391484260559082
    7. '.' → logprob: -10.766484260559082
    8. ').' → logprob: -11.016484260559082
    9. ' ' → logprob: -11.266484260559082
    10. ' ' → logprob: -11.766484260559082

Token 224: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0001645644661039114
    2. '
' → logprob: -9.875164985656738
    3. 'current' → logprob: -10.500164985656738
    4. ' now' → logprob: -11.250164985656738
    5. 'next' → logprob: -11.500164985656738
    6. '#' → logprob: -11.750164985656738
    7. 'pos' → logprob: -12.250164985656738
    8. 's' → logprob: -12.625164985656738
    9. 'j' → logprob: -12.625164985656738
    10. 'position' → logprob: -12.625164985656738

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38690388202667236
    2. '=' → logprob: -1.1369038820266724
    3. ',' → logprob: -11.386903762817383
    4. ' ' → logprob: -11.511903762817383
    5. ' +=' → logprob: -12.136903762817383
    6. '+=' → logprob: -13.261903762817383
    7. ' ' → logprob: -13.386903762817383
    8. ')' → logprob: -14.011903762817383
    9. '.' → logprob: -15.386903762817383
    10. '=int' → logprob: -15.386903762817383

Token 226: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '0' → logprob: -17.500295639038086
    4. '   ' → logprob: -19.250295639038086
    5. '１' → logprob: -19.875295639038086
    6. '```' → logprob: -20.062795639038086
    7. '' → logprob: -20.687795639038086
    8. '۱' → logprob: -20.687795639038086
    9. ' ' → logprob: -20.812795639038086
    10. '  ' → logprob: -21.000295639038086

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '0' → logprob: -18.375003814697266
    4. '１' → logprob: -20.875003814697266
    5. '   ' → logprob: -21.125003814697266
    6. '```' → logprob: -21.125003814697266
    7. '' → logprob: -21.875003814697266
    8. '=' → logprob: -22.375003814697266
    9. '۱' → logprob: -22.687503814697266
    10. '[' → logprob: -23.000003814697266

Token 228: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3774915039539337
    2. '<|end|>' → logprob: -2.0024914741516113
    3. 'for' → logprob: -2.3774914741516113
    4. '\n' → logprob: -2.7524914741516113
    5. ' for' → logprob: -4.627491474151611
    6. '#' → logprob: -6.002491474151611
    7. '<|end|>' → logprob: -6.377491474151611
    8. ' 
' → logprob: -6.502491474151611
    9. '\' → logprob: -6.752491474151611
    10. '' → logprob: -6.752491474151611

Token 229: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02352125197649002
    2. '
' → logprob: -4.398521423339844
    3. ' for' → logprob: -5.273521423339844
    4. '\n' → logprob: -6.148521423339844
    5. '#' → logprob: -6.273521423339844
    6. 'while' → logprob: -7.023521423339844
    7. '<|end|>' → logprob: -8.023521423339844
    8. ' ' → logprob: -9.523521423339844
    9. '\' → logprob: -9.898521423339844
    10. '' → logprob: -9.898521423339844

Token 230: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016942229121923447
    2. 'while' → logprob: -8.001694679260254
    3. 'steps' → logprob: -8.376694679260254
    4. 'j' → logprob: -8.751694679260254
    5. 'visited' → logprob: -8.751694679260254
    6. 'next' → logprob: -9.126694679260254
    7. '#' → logprob: -9.251694679260254
    8. 'result' → logprob: -9.376694679260254
    9. 'path' → logprob: -9.376694679260254
    10. 'positions' → logprob: -9.751694679260254

Token 231: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.0010047047398984432
    2. 'c' → logprob: -7.501004695892334
    3. 'cles' → logprob: -8.501005172729492
    4. 'for' → logprob: -8.626005172729492
    5. 'cl' → logprob: -10.251005172729492
    6. 'clé' → logprob: -11.251005172729492
    7. 't' → logprob: -12.376005172729492
    8. 'le' → logprob: -12.501005172729492
    9. 'r' → logprob: -12.876005172729492
    10. 'cler' → logprob: -12.876005172729492

Token 232: ' principale' (ID: 68926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2899131178855896
    2. ' for' → logprob: -1.4149131774902344
    3. ':' → logprob: -4.789913177490234
    4. '
' → logprob: -9.414913177490234
    5. ' ' → logprob: -9.414913177490234
    6. ' :' → logprob: -9.789913177490234
    7. ' 
' → logprob: -9.914913177490234
    8. '#' → logprob: -10.539913177490234
    9. 'while' → logprob: -10.664913177490234
    10. ' =' → logprob: -11.289913177490234

Token 233: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.994086627149954e-05
    2. ' for' → logprob: -9.500080108642578
    3. 'while' → logprob: -12.250080108642578
    4. '#' → logprob: -16.250080108642578
    5. '
' → logprob: -16.750080108642578
    6. ':' → logprob: -17.125080108642578
    7. 'range' → logprob: -19.000080108642578
    8. '.' → logprob: -19.250080108642578
    9. '```' → logprob: -19.500080108642578
    10. '	for' → logprob: -19.750080108642578

Token 234: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.908022285439074e-05
    2. 'while' → logprob: -10.125059127807617
    3. ' for' → logprob: -10.875059127807617
    4. 'range' → logprob: -19.625059127807617
    5. ' while' → logprob: -20.000059127807617
    6. '	for' → logprob: -20.250059127807617
    7. '   ' → logprob: -21.250059127807617
    8. 'print' → logprob: -21.250059127807617
    9. '#' → logprob: -21.375059127807617
    10. '```' → logprob: -21.375059127807617

Token 235: ' continue' (ID: 4901)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07021407037973404
    2. ' for' → logprob: -2.695214033126831
    3. 'while' → logprob: -8.57021427154541
    4. ' while' → logprob: -10.19521427154541
    5. 'range' → logprob: -10.32021427154541
    6. '_' → logprob: -11.94521427154541
    7. ' range' → logprob: -12.69521427154541
    8. 's' → logprob: -13.57021427154541
    9. 'or' → logprob: -13.69521427154541
    10. '=' → logprob: -14.19521427154541

Token 236: ' tant' (ID: 16235)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2795129418373108
    2. ' for' → logprob: -1.654512882232666
    3. 'while' → logprob: -3.279512882232666
    4. ' while' → logprob: -4.654512882232666
    5. ':' → logprob: -5.404512882232666
    6. '   ' → logprob: -8.654513359069824
    7. '_' → logprob: -9.279513359069824
    8. ' pour' → logprob: -9.279513359069824
    9. ' jusqu' → logprob: -9.404513359069824
    10. 'pour' → logprob: -9.654513359069824

Token 237: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.0029856672044843435
    2. ' now' → logprob: -6.62798547744751
    3. ' maintenant' → logprob: -7.25298547744751
    4. ' qu' → logprob: -8.127985954284668
    5. ' while' → logprob: -8.377985954284668
    6. ' ' → logprob: -8.627985954284668
    7. 'que' → logprob: -9.252985954284668
    8. ' not' → logprob: -10.752985954284668
    9. ' (' → logprob: -10.877985954284668
    10. '_' → logprob: -11.252985954284668

Token 238: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4848998188972473
    2. 'now' → logprob: -1.8598997592926025
    3. ' now' → logprob: -2.1098997592926025
    4. ' K' → logprob: -2.2348997592926025
    5. ' maintenant' → logprob: -9.234899520874023
    6. '0' → logprob: -9.984899520874023
    7. 'k' → logprob: -10.609899520874023
    8. 'True' → logprob: -10.734899520874023
    9. ' ' → logprob: -10.797399520874023
    10. 'Now' → logprob: -11.609899520874023

Token 239: ' n' (ID: 297)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3133372366428375
    2. '>' → logprob: -1.3133372068405151
    3. ':' → logprob: -10.563337326049805
    4. ' ' → logprob: -11.313337326049805
    5. ' ' → logprob: -11.938337326049805
    6. '!=' → logprob: -11.938337326049805
    7. '-' → logprob: -12.188337326049805
    8. '%' → logprob: -12.438337326049805
    9. ' !=' → logprob: -12.688337326049805
    10. ' >=' → logprob: -12.688337326049805

Token 240: ''est' (ID: 6616)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.34893935918807983
    2. '>' → logprob: -1.2239394187927246
    3. ' ' → logprob: -9.098938941955566
    4. ' !=' → logprob: -9.598938941955566
    5. '!=' → logprob: -9.598938941955566
    6. ' ' → logprob: -9.598938941955566
    7. ' >=' → logprob: -9.723938941955566
    8. '>=' → logprob: -10.223938941955566
    9. '%' → logprob: -10.473938941955566
    10. '-' → logprob: -10.598938941955566

Token 241: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.13830527663230896
    2. '>' → logprob: -2.513305187225342
    3. '0' → logprob: -3.888305187225342
    4. 'pas' → logprob: -4.513305187225342
    5. ' >' → logprob: -4.638305187225342
    6. ' ' → logprob: -5.263305187225342
    7. ' not' → logprob: -6.888305187225342
    8. ')' → logprob: -8.8883056640625
    9. '=' → logprob: -9.0133056640625
    10. '_pas' → logprob: -9.2633056640625

Token 242: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002675895346328616
    2. ' ' → logprob: -6.002676010131836
    3. '=' → logprob: -9.252676010131836
    4. '>' → logprob: -10.252676010131836
    5. ' zero' → logprob: -11.252676010131836
    6. ' égal' → logprob: -11.377676010131836
    7. '1' → logprob: -11.627676010131836
    8. 'zero' → logprob: -12.502676010131836
    9. ' equal' → logprob: -12.627676010131836
    10. 'égal' → logprob: -12.627676010131836

Token 243: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8352715373039246
    2. 'while' → logprob: -0.9602715373039246
    3. ':' → logprob: -1.8352715969085693
    4. ':
' → logprob: -4.21027135848999
    5. '
' → logprob: -5.46027135848999
    6. ' and' → logprob: -6.58527135848999
    7. ' :
' → logprob: -7.08527135848999
    8. ' :' → logprob: -7.33527135848999
    9. ' 
' → logprob: -7.58527135848999
    10. ',' → logprob: -8.460271835327148

Token 244: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.008617881685495377
    2. ' while' → logprob: -4.758617877960205
    3. '
' → logprob: -13.508618354797363
    4. 'wh' → logprob: -14.258618354797363
    5. '	while' → logprob: -14.883618354797363
    6. 'for' → logprob: -15.008618354797363
    7. ' 
' → logprob: -15.508618354797363
    8. 'While' → logprob: -15.883618354797363
    9. '```' → logprob: -16.133617401123047
    10. ':' → logprob: -16.383617401123047

Token 245: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.0485965758562088
    2. 'K' → logprob: -3.0485966205596924
    3. ' ' → logprob: -11.798596382141113
    4. ' ' → logprob: -13.673596382141113
    5. '	K' → logprob: -15.673596382141113
    6. '0' → logprob: -16.79859733581543
    7. '>K' → logprob: -16.79859733581543
    8. '_K' → logprob: -16.92359733581543
    9. '>' → logprob: -17.54859733581543
    10. '_' → logprob: -17.92359733581543

Token 246: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20142211019992828
    2. ' >' → logprob: -1.701422095298767
    3. ':' → logprob: -11.951421737670898
    4. ' ' → logprob: -14.576421737670898
    5. '!=' → logprob: -14.826421737670898
    6. '&gt' → logprob: -14.826421737670898
    7. ' ' → logprob: -15.326421737670898
    8. '-' → logprob: -15.701421737670898
    9. ' !=' → logprob: -16.0764217376709
    10. '>:' → logprob: -16.2014217376709

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016437482088804245
    2. '    
' → logprob: -5.141437530517578
    3. ' 
' → logprob: -6.141437530517578
    4. '
' → logprob: -6.391437530517578
    5. ' now' → logprob: -6.391437530517578
    6. '  
' → logprob: -6.516437530517578
    7. ' if' → logprob: -7.016437530517578
    8. '<|end|>' → logprob: -7.641437530517578
    9. ' ' → logprob: -7.891437530517578
    10. '   
' → logprob: -7.891437530517578

Token 248: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3687502443790436
    2. ' if' → logprob: -1.4937502145767212
    3. 'if' → logprob: -3.1187503337860107
    4. ' next' → logprob: -4.493750095367432
    5. '    
' → logprob: -5.368750095367432
    6. ' now' → logprob: -5.493750095367432
    7. ' s' → logprob: -5.868750095367432
    8. 'next' → logprob: -5.868750095367432
    9. 's' → logprob: -6.368750095367432
    10. ' step' → logprob: -6.618750095367432

Token 249: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7483806610107422
    2. 'next' → logprob: -1.6233806610107422
    3. 'step' → logprob: -1.8733806610107422
    4. 'jump' → logprob: -3.373380661010742
    5. ' if' → logprob: -3.623380661010742
    6. 's' → logprob: -3.998380661010742
    7. 'j' → logprob: -4.373380661010742
    8. ' next' → logprob: -4.498380661010742
    9. '   ' → logprob: -4.748380661010742
    10. 't' → logprob: -4.873380661010742

Token 250: ' le' (ID: 505)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.11912591010332108
    2. ' K' → logprob: -2.8691258430480957
    3. 'A' → logprob: -3.1191258430480957
    4. ' now' → logprob: -4.994125843048096
    5. 'K' → logprob: -5.744125843048096
    6. ' ' → logprob: -7.619125843048096
    7. ' not' → logprob: -7.619125843048096
    8. 'now' → logprob: -8.994126319885254
    9. ' (' → logprob: -9.244126319885254
    10. ' abs' → logprob: -10.619126319885254

Token 251: ' bit' (ID: 3546)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.39094066619873047
    2. ' A' → logprob: -1.2659406661987305
    3. 'K' → logprob: -4.0159406661987305
    4. ' K' → logprob: -4.2659406661987305
    5. ' now' → logprob: -5.1409406661987305
    6. 'now' → logprob: -5.7659406661987305
    7. ' ' → logprob: -8.51594066619873
    8. '0' → logprob: -9.64094066619873
    9. '1' → logprob: -10.07844066619873
    10. ' (' → logprob: -10.82844066619873

Token 252: ' de' (ID: 334)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.06149732694029808
    2. '&' → logprob: -3.686497211456299
    3. 'K' → logprob: -3.811497211456299
    4. ' &' → logprob: -4.686497211456299
    5. ' ' → logprob: -6.936497211456299
    6. '(K' → logprob: -7.186497211456299
    7. 's' → logprob: -7.561497211456299
    8. '   ' → logprob: -7.936497211456299
    9. ' (' → logprob: -8.436497688293457
    10. '>K' → logprob: -9.561497688293457

Token 253: ' poids' (ID: 56058)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0071032168343663216
    2. '(K' → logprob: -5.132103443145752
    3. ' K' → logprob: -6.757103443145752
    4. ' (' → logprob: -11.507102966308594
    5. '	K' → logprob: -15.132102966308594
    6. ' ' → logprob: -15.382102966308594
    7. '(' → logprob: -15.382102966308594
    8. '_K' → logprob: -15.632102966308594
    9. '1' → logprob: -16.382102966308594
    10. '[K' → logprob: -16.632102966308594

Token 254: ' faible' (ID: 75786)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6734682321548462
    2. ' fort' → logprob: -1.2984682321548462
    3. 'le' → logprob: -2.0484681129455566
    4. 'fort' → logprob: -2.7984681129455566
    5. ' faible' → logprob: -4.173468112945557
    6. 'fa' → logprob: -5.548468112945557
    7. ' ' → logprob: -6.173468112945557
    8. '#' → logprob: -6.423468112945557
    9. '_le' → logprob: -7.548468112945557
    10. ' haut' → logprob: -7.798468112945557

Token 255: ' de' (ID: 334)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5490366220474243
    2. ' &' → logprob: -1.5490366220474243
    3. '&' → logprob: -1.9240366220474243
    4. 'K' → logprob: -4.174036502838135
    5. ' ' → logprob: -4.299036502838135
    6. ' (' → logprob: -4.674036502838135
    7. '1' → logprob: -4.674036502838135
    8. '   ' → logprob: -5.174036502838135
    9. '(K' → logprob: -5.299036502838135
    10. ' de' → logprob: -5.799036502838135

Token 256: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.22542089223861694
    2. ' K' → logprob: -1.6004209518432617
    3. ' ' → logprob: -12.100420951843262
    4. ' ' → logprob: -13.850420951843262
    5. '(K' → logprob: -14.850420951843262
    6. '	K' → logprob: -14.975420951843262
    7. 'now' → logprob: -15.475420951843262
    8. 'A' → logprob: -15.725420951843262
    9. ' now' → logprob: -16.100419998168945
    10. '  ' → logprob: -16.600419998168945

Token 257: ' est' (ID: 893)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.0670095905661583
    2. '&' → logprob: -3.567009687423706
    3. ' ==' → logprob: -3.817009687423706
    4. ' ' → logprob: -4.567009449005127
    5. ':' → logprob: -6.317009449005127
    6. '==' → logprob: -6.567009449005127
    7. ' :' → logprob: -7.692009449005127
    8. ' ' → logprob: -8.567009925842285
    9. ' is' → logprob: -9.567009925842285
    10. ' &:' → logprob: -9.692009925842285

Token 258: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14670942723751068
    2. ' ' → logprob: -2.021709442138672
    3. ' set' → logprob: -5.646709442138672
    4. 'set' → logprob: -8.271709442138672
    5. '   ' → logprob: -8.646709442138672
    6. '0' → logprob: -11.271709442138672
    7. '```' → logprob: -12.271709442138672
    8. ' ' → logprob: -12.396709442138672
    9. 'é' → logprob: -12.396709442138672
    10. '  ' → logprob: -12.771709442138672

Token 259: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015179537003859878
    2. ' ' → logprob: -6.5015177726745605
    3. 'un' → logprob: -11.876518249511719
    4. ' ' → logprob: -12.876518249511719
    5. '```' → logprob: -13.376518249511719
    6. '0' → logprob: -13.501518249511719
    7. '   ' → logprob: -13.751518249511719
    8. '`' → logprob: -14.376518249511719
    9. 'l' → logprob: -14.751518249511719
    10. ''' → logprob: -15.626518249511719

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.600714161526412e-05
    2. ' ' → logprob: -9.875076293945312
    3. '0' → logprob: -10.750076293945312
    4. 'un' → logprob: -13.500076293945312
    5. 'l' → logprob: -15.000076293945312
    6. '```' → logprob: -15.250076293945312
    7. '   ' → logprob: -15.500076293945312
    8. 'set' → logprob: -15.750076293945312
    9. '#' → logprob: -15.875076293945312
    10. '`' → logprob: -16.125076293945312

Token 261: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41384485363960266
    2. ':
' → logprob: -2.1638448238372803
    3. ' and' → logprob: -2.6638448238372803
    4. ' :' → logprob: -2.7888448238372803
    5. '   ' → logprob: -2.9138448238372803
    6. ' :
' → logprob: -4.413845062255859
    7. ' ==' → logprob: -4.413845062255859
    8. ' &' → logprob: -4.663845062255859
    9. 'and' → logprob: -6.288845062255859
    10. 'if' → logprob: -7.288845062255859

Token 262: 'op' (ID: 467)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.11300353705883026
    2. 'K' → logprob: -2.2380034923553467
    3. ')' → logprob: -9.238003730773926
    4. ' ' → logprob: -10.488003730773926
    5. '   ' → logprob: -10.863003730773926
    6. ' (' → logprob: -11.238003730773926
    7. '(K' → logprob: -11.613003730773926
    8. '	K' → logprob: -12.613003730773926
    9. '  ' → logprob: -13.113003730773926
    10. ' )' → logprob: -13.363003730773926

Token 263: 'ération' (ID: 24977)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5146390795707703
    2. 'K' → logprob: -1.014639139175415
    3. 'r' → logprob: -4.639638900756836
    4. '&' → logprob: -5.514638900756836
    5. 't' → logprob: -5.764638900756836
    6. 'ut' → logprob: -5.889638900756836
    7. '1' → logprob: -6.139638900756836
    8. 'u' → logprob: -6.264638900756836
    9. ' &' → logprob: -6.389638900756836
    10. '#' → logprob: -6.514638900756836

Token 264: ' AND' (ID: 6178)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.10002774745225906
    2. '&' → logprob: -2.4750277996063232
    3. '   ' → logprob: -4.725027561187744
    4. ' K' → logprob: -6.350027561187744
    5. ' ' → logprob: -8.725028038024902
    6. ' =' → logprob: -9.850028038024902
    7. ' &
' → logprob: -10.100028038024902
    8. 'K' → logprob: -10.225028038024902
    9. '1' → logprob: -10.350028038024902
    10. '=' → logprob: -11.100028038024902

Token 265: ' entre' (ID: 3853)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.006584993097931147
    2. ')' → logprob: -6.506585121154785
    3. ' ' → logprob: -6.506585121154785
    4. '   ' → logprob: -6.756585121154785
    5. 'K' → logprob: -7.006585121154785
    6. '(K' → logprob: -7.756585121154785
    7. ' (' → logprob: -7.881585121154785
    8. '&' → logprob: -8.381585121154785
    9. '(' → logprob: -9.256585121154785
    10. ' ' → logprob: -9.256585121154785

Token 266: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.6931651830673218
    2. ' K' → logprob: -0.6931651830673218
    3. '1' → logprob: -12.193164825439453
    4. ' ' → logprob: -12.568164825439453
    5. ' ' → logprob: -12.818164825439453
    6. ' now' → logprob: -13.193164825439453
    7. 'now' → logprob: -13.443164825439453
    8. ')' → logprob: -13.693164825439453
    9. '	K' → logprob: -14.943164825439453
    10. 'k' → logprob: -15.193164825439453

Token 267: ' et' (ID: 859)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.13922515511512756
    2. '&' → logprob: -2.2642252445220947
    3. ' ' → logprob: -4.389225006103516
    4. ' and' → logprob: -4.514225006103516
    5. '1' → logprob: -7.014225006103516
    6. ')' → logprob: -8.014225006103516
    7. 'and' → logprob: -8.014225006103516
    8. ' et' → logprob: -8.139225006103516
    9. ' &
' → logprob: -8.639225006103516
    10. ' ' → logprob: -9.014225006103516

Token 268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31326544284820557
    2. ' ' → logprob: -1.3132654428482056
    3. ' ' → logprob: -12.563265800476074
    4. '   ' → logprob: -16.313264846801758
    5. '-' → logprob: -16.938264846801758
    6. '  ' → logprob: -17.563264846801758
    7. '(' → logprob: -18.063264846801758
    8. '#' → logprob: -18.500764846801758
    9. ' K' → logprob: -18.563264846801758
    10. ' (' → logprob: -18.750764846801758

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00462154159322381
    2. ' ' → logprob: -5.379621505737305
    3. '-' → logprob: -13.754621505737305
    4. ' -' → logprob: -16.254621505737305
    5. ' ' → logprob: -16.629621505737305
    6. '   ' → logprob: -17.754621505737305
    7. '
' → logprob: -18.129621505737305
    8. ')' → logprob: -18.254621505737305
    9. '(' → logprob: -18.379621505737305
    10. '' → logprob: -18.629621505737305

Token 270: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24760007858276367
    2. '):
' → logprob: -1.8726000785827637
    3. ')' → logprob: -2.8726000785827637
    4. ':' → logprob: -5.872600078582764
    5. ' ==' → logprob: -6.122600078582764
    6. ' ):' → logprob: -6.622600078582764
    7. '   ' → logprob: -7.247600078582764
    8. ' ):
' → logprob: -7.872600078582764
    9. ' !=' → logprob: -8.122600555419922
    10. '),' → logprob: -8.372600555419922

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23458833992481232
    2. ' ==' → logprob: -1.859588384628296
    3. ':' → logprob: -3.609588384628296
    4. ':
' → logprob: -4.484588146209717
    5. ' =' → logprob: -4.984588146209717
    6. ' >' → logprob: -5.984588146209717
    7. ' :
' → logprob: -6.734588146209717
    8. ' if' → logprob: -7.109588146209717
    9. ' :' → logprob: -7.234588146209717
    10. '==' → logprob: -7.359588146209717

Token 272: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27497708797454834
    2. '   ' → logprob: -1.7749770879745483
    3. 'if' → logprob: -2.649977207183838
    4. '    ' → logprob: -8.39997673034668
    5. '	if' → logprob: -11.39997673034668
    6. ' ' → logprob: -11.64997673034668
    7. '    
' → logprob: -11.64997673034668
    8. '
' → logprob: -13.14997673034668
    9. '   ' → logprob: -13.14997673034668
    10. ',' → logprob: -13.52497673034668

Token 273: ' Cela' (ID: 44403)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06265787035226822
    2. 'if' → logprob: -3.1876578330993652
    3. '   ' → logprob: -4.187657833099365
    4. ' step' → logprob: -6.187657833099365
    5. '    ' → logprob: -6.562657833099365
    6. ' jump' → logprob: -8.062658309936523
    7. ' s' → logprob: -8.812658309936523
    8. 'step' → logprob: -9.812658309936523
    9. 'jump' → logprob: -10.312658309936523
    10. ' next' → logprob: -10.562658309936523

Token 274: ' signifie' (ID: 81149)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.35303986072540283
    2. '   ' → logprob: -2.4780397415161133
    3. ' ' → logprob: -3.3530397415161133
    4. ' =' → logprob: -3.4780397415161133
    5. ':' → logprob: -4.228039741516113
    6. ' +=' → logprob: -4.228039741516113
    7. '=' → logprob: -4.353039741516113
    8. ' !=' → logprob: -4.353039741516113
    9. ' :' → logprob: -4.478039741516113
    10. ' ==' → logprob: -4.478039741516113

Token 275: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.2810061573982239
    2. '    ' → logprob: -2.281006097793579
    3. ' ' → logprob: -2.656006097793579
    4. '   ' → logprob: -3.406006097793579
    5. ' ' → logprob: -4.531006336212158
    6. ' qu' → logprob: -4.656006336212158
    7. ' that' → logprob: -4.656006336212158
    8. '     
' → logprob: -5.156006336212158
    9. '  ' → logprob: -7.531006336212158
    10. '   ' → logprob: -7.656006336212158

Token 276: ' pour' (ID: 1930)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.1178030967712402
    2. 'A' → logprob: -1.4928030967712402
    3. ' K' → logprob: -1.6178030967712402
    4. 'K' → logprob: -2.1178030967712402
    5. 'now' → logprob: -2.9928030967712402
    6. ' (' → logprob: -3.2428030967712402
    7. ' now' → logprob: -3.4928030967712402
    8. '(A' → logprob: -5.11780309677124
    9. ' ' → logprob: -6.74280309677124
    10. '(now' → logprob: -6.86780309677124

Token 277: ' ce' (ID: 2357)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9144672155380249
    2. ' K' → logprob: -2.2894673347473145
    3. 'A' → logprob: -2.4144673347473145
    4. 'i' → logprob: -2.4144673347473145
    5. ' (' → logprob: -3.0394673347473145
    6. ' A' → logprob: -3.2894673347473145
    7. ' ' → logprob: -3.5394673347473145
    8. ' this' → logprob: -3.7894673347473145
    9. ' le' → logprob: -3.9144673347473145
    10. ' cette' → logprob: -3.9144673347473145

Token 278: ' bit' (ID: 3546)
  Prédit: ' tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tour' → logprob: -0.5423792004585266
    2. 'tour' → logprob: -1.6673791408538818
    3. 'bit' → logprob: -2.792379140853882
    4. 'pas' → logprob: -2.792379140853882
    5. ' déplacement' → logprob: -3.917379140853882
    6. ' passage' → logprob: -4.292379379272461
    7. ' cycle' → logprob: -4.417379379272461
    8. ' pas' → logprob: -4.542379379272461
    9. 't' → logprob: -4.667379379272461
    10. ' bit' → logprob: -4.917379379272461

Token 279: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7754456400871277
    2. ':' → logprob: -1.9004456996917725
    3. ',' → logprob: -2.5254456996917725
    4. ' K' → logprob: -2.9004456996917725
    5. ' =' → logprob: -3.0254456996917725
    6. ' &' → logprob: -3.1504456996917725
    7. ' ==' → logprob: -3.2754456996917725
    8. ' :' → logprob: -3.5254456996917725
    9. ' ' → logprob: -3.6504456996917725
    10. '=' → logprob: -4.150445461273193

Token 280: ' K' (ID: 658)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.09117632359266281
    2. 'K' → logprob: -2.8411762714385986
    3. ' poids' → logprob: -3.9661762714385986
    4. 'pu' → logprob: -6.091176509857178
    5. 'b' → logprob: -6.341176509857178
    6. 'bit' → logprob: -6.966176509857178
    7. ' K' → logprob: -7.216176509857178
    8. 'ex' → logprob: -7.591176509857178
    9. 'k' → logprob: -7.841176509857178
    10. 'position' → logprob: -7.841176509857178

Token 281: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3950521945953369
    2. ',' → logprob: -1.520052194595337
    3. '   ' → logprob: -3.395052194595337
    4. ' :' → logprob: -3.520052194595337
    5. ' &' → logprob: -4.270051956176758
    6. ' ' → logprob: -4.645051956176758
    7. ' ,' → logprob: -4.895051956176758
    8. ' ==' → logprob: -5.645051956176758
    9. '&' → logprob: -5.770051956176758
    10. ':
' → logprob: -6.145051956176758

Token 282: ' il' (ID: 1793)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.22920550405979156
    2. 'now' → logprob: -2.22920560836792
    3. '   ' → logprob: -2.35420560836792
    4. 'A' → logprob: -7.72920560836792
    5. ' A' → logprob: -7.97920560836792
    6. ' ' → logprob: -8.354205131530762
    7. '	now' → logprob: -8.479205131530762
    8. ' maintenant' → logprob: -9.104205131530762
    9. '[now' → logprob: -9.229205131530762
    10. ' #' → logprob: -9.229205131530762

Token 283: ' faut' (ID: 17821)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.6699624061584473
    2. '&' → logprob: -1.2949624061584473
    3. ' y' → logprob: -2.6699624061584473
    4. '   ' → logprob: -3.0449624061584473
    5. ' ' → logprob: -3.9199624061584473
    6. ' n' → logprob: -4.544962406158447
    7. ' faut' → logprob: -4.919962406158447
    8. ' a' → logprob: -5.044962406158447
    9. '[' → logprob: -5.169962406158447
    10. ' est' → logprob: -5.169962406158447

Token 284: ' faire' (ID: 8119)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.26910269260406494
    2. '   ' → logprob: -2.7691025733947754
    3. 'faire' → logprob: -3.1441025733947754
    4. 'effect' → logprob: -3.2691025733947754
    5. 's' → logprob: -3.6441025733947754
    6. ' avancer' → logprob: -4.144102573394775
    7. 'jump' → logprob: -4.644102573394775
    8. ' sa' → logprob: -5.019102573394775
    9. 'mettre' → logprob: -5.019102573394775
    10. ' faire' → logprob: -5.144102573394775

Token 285: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1528029441833496
    2. 'A' → logprob: -1.5278029441833496
    3. ' now' → logprob: -2.0278029441833496
    4. 'now' → logprob: -2.1528029441833496
    5. ' A' → logprob: -2.4028029441833496
    6. ' un' → logprob: -3.7778029441833496
    7. ' maintenant' → logprob: -4.15280294418335
    8. 'un' → logprob: -4.27780294418335
    9. ' une' → logprob: -4.40280294418335
    10. ' ' → logprob: -4.52780294418335

Token 286: ' saut' (ID: 111480)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5586694478988647
    2. ' saut' → logprob: -0.9336694478988647
    3. ' déplacement' → logprob: -4.433669567108154
    4. ' sa' → logprob: -5.058669567108154
    5. 'pas' → logprob: -5.433669567108154
    6. 'jump' → logprob: -5.433669567108154
    7. ' salto' → logprob: -6.683669567108154
    8. 'salt' → logprob: -6.683669567108154
    9. 'dé' → logprob: -6.933669567108154
    10. ' pas' → logprob: -7.433669567108154

Token 287: ' depuis' (ID: 16277)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7520009875297546
    2. '   ' → logprob: -0.8770009875297546
    3. ' now' → logprob: -2.2520010471343994
    4. 'now' → logprob: -5.50200080871582
    5. ' maintenant' → logprob: -7.25200080871582
    6. ' =' → logprob: -7.25200080871582
    7. ',' → logprob: -7.75200080871582
    8. ' from' → logprob: -7.87700080871582
    9. 'from' → logprob: -8.87700080871582
    10. '[now' → logprob: -9.50200080871582

Token 288: ' la' (ID: 557)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.06308314204216003
    2. ' now' → logprob: -3.4380831718444824
    3. 'A' → logprob: -3.5630831718444824
    4. ' A' → logprob: -7.938083171844482
    5. ' maintenant' → logprob: -8.688082695007324
    6. '   ' → logprob: -10.063082695007324
    7. 'maint' → logprob: -10.688082695007324
    8. '[now' → logprob: -10.688082695007324
    9. '_now' → logprob: -12.063082695007324
    10. 'current' → logprob: -12.188082695007324

Token 289: ' position' (ID: 4010)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.2395048588514328
    2. 'position' → logprob: -1.6145048141479492
    3. 'maint' → logprob: -5.614504814147949
    4. 'pos' → logprob: -5.989504814147949
    5. ' now' → logprob: -5.989504814147949
    6. 'current' → logprob: -6.114504814147949
    7. 'A' → logprob: -6.489504814147949
    8. ' position' → logprob: -7.239504814147949
    9. 'print' → logprob: -8.11450481414795
    10. ' maintenant' → logprob: -8.61450481414795

Token 290: ' now' (ID: 1954)
  Prédit: ' now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.03994516655802727
    2. 'now' → logprob: -3.789945125579834
    3. ' maintenant' → logprob: -4.289945125579834
    4. ' ' → logprob: -6.289945125579834
    5. '[now' → logprob: -7.664945125579834
    6. ' A' → logprob: -8.539945602416992
    7. 'A' → logprob: -9.414945602416992
    8. '_now' → logprob: -9.789945602416992
    9. '   ' → logprob: -10.289945602416992
    10. '    ' → logprob: -10.539945602416992

Token 291: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6905529499053955
    2. '       ' → logprob: -0.8155529499053955
    3. ' now' → logprob: -3.1905529499053955
    4. ' =' → logprob: -4.940552711486816
    5. 'now' → logprob: -5.940552711486816
    6. ':' → logprob: -6.315552711486816
    7. ':
' → logprob: -6.815552711486816
    8. ',' → logprob: -7.190552711486816
    9. '=' → logprob: -8.190552711486816
    10. '    ' → logprob: -8.565552711486816

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2213992327451706
    2. ' now' → logprob: -2.2213993072509766
    3. '       ' → logprob: -2.5963993072509766
    4. '
' → logprob: -4.721399307250977
    5. 'now' → logprob: -5.596399307250977
    6. '    
' → logprob: -6.346399307250977
    7. '        
' → logprob: -8.346399307250977
    8. ' =' → logprob: -8.346399307250977
    9. '    ' → logprob: -9.221399307250977
    10. ' if' → logprob: -9.346399307250977

Token 293: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46498000621795654
    2. ' if' → logprob: -1.4649800062179565
    3. 'if' (adapté à ' if') → logprob: -2.089980125427246
    4. ' now' → logprob: -4.464980125427246
    5. '       ' → logprob: -5.464980125427246
    6. 'now' → logprob: -7.089980125427246
    7. '
' → logprob: -8.464980125427246
    8. '    
' → logprob: -9.214980125427246
    9. '    ' → logprob: -10.089980125427246
    10. '   ' → logprob: -10.589980125427246

Token 294: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.043087344616651535
    2. 'K' → logprob: -3.1680872440338135
    3. ' ' → logprob: -10.168087005615234
    4. ' (' → logprob: -10.418087005615234
    5. '(K' → logprob: -11.043087005615234
    6. '   ' → logprob: -13.543087005615234
    7. '	K' → logprob: -13.793087005615234
    8. '  ' → logprob: -14.293087005615234
    9. '(' → logprob: -14.418087005615234
    10. ' ' → logprob: -15.043087005615234

Token 295: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.018153101205825806
    2. '&' → logprob: -4.018153190612793
    3. ' ' → logprob: -13.018153190612793
    4. ' &
' → logprob: -14.268153190612793
    5. ' ' → logprob: -16.393152236938477
    6. '＆' → logprob: -16.643152236938477
    7. '&
' → logprob: -16.643152236938477
    8. '   ' → logprob: -17.393152236938477
    9. '&nbsp' → logprob: -17.518152236938477
    10. '  ' → logprob: -18.393152236938477

Token 296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2811505198478699
    2. ' ' → logprob: -1.4061505794525146
    3. ' ' → logprob: -15.281150817871094
    4. '  ' → logprob: -16.781150817871094
    5. '   ' → logprob: -16.781150817871094
    6. '' → logprob: -18.281150817871094
    7. '```' → logprob: -18.593650817871094
    8. '
' → logprob: -18.656150817871094
    9. '(' → logprob: -18.718650817871094
    10. '１' → logprob: -18.906150817871094

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.25009536743164
    4. '(' → logprob: -19.37509536743164
    5. '01' → logprob: -20.00009536743164
    6. '１' → logprob: -20.62509536743164
    7. '' → logprob: -20.62509536743164
    8. '
' → logprob: -20.62509536743164
    9. '#' → logprob: -20.93759536743164
    10. '  ' → logprob: -21.06259536743164

Token 298: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2015131264925003
    2. ':
' → logprob: -1.7015131711959839
    3. ' ==' → logprob: -9.951513290405273
    4. '==' → logprob: -10.701513290405273
    5. ' :' → logprob: -11.201513290405273
    6. ':
' → logprob: -11.576513290405273
    7. ' :
' → logprob: -12.451513290405273
    8. ':

' → logprob: -13.701513290405273
    9. '=' → logprob: -14.826513290405273
    10. '   ' → logprob: -14.951513290405273

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23934601247310638
    2. ' now' → logprob: -1.6143460273742676
    3. 'now' → logprob: -5.364346027374268
    4. ':' → logprob: -5.864346027374268
    5. ':
' → logprob: -5.864346027374268
    6. '   ' → logprob: -5.989346027374268
    7. '[now' → logprob: -8.11434555053711
    8. '	now' → logprob: -8.36434555053711
    9. '):
' → logprob: -9.36434555053711
    10. ' =' → logprob: -9.48934555053711

Token 300: ' #' (ID: 1069)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.4757678806781769
    2. ' now' → logprob: -0.9757678508758545
    3. '       ' → logprob: -6.975768089294434
    4. '   ' → logprob: -7.350768089294434
    5. '           ' → logprob: -9.475768089294434
    6. '	now' → logprob: -10.725768089294434
    7. '[now' → logprob: -12.350768089294434
    8. '
' → logprob: -13.600768089294434
    9. 'next' → logprob: -13.600768089294434
    10. ' ' → logprob: -13.725768089294434

Token 301: ' Met' (ID: 7227)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.3133668005466461
    2. ' now' → logprob: -1.3133667707443237
    3. '       ' → logprob: -9.438366889953613
    4. '   ' → logprob: -11.188366889953613
    5. '
' → logprob: -12.313366889953613
    6. '	now' → logprob: -12.563366889953613
    7. '           ' → logprob: -13.813366889953613
    8. 'next' → logprob: -13.813366889953613
    9. '[now' → logprob: -15.313366889953613
    10. '    ' → logprob: -15.438366889953613

Token 302: 'tre' (ID: 4086)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.16608141362667084
    2. ' now' → logprob: -2.541081428527832
    3. ' maintenant' → logprob: -3.291081428527832
    4. 'tre' → logprob: -3.416081428527832
    5. '_now' → logprob: -6.666081428527832
    6. '	now' → logprob: -6.666081428527832
    7. '   ' → logprob: -7.291081428527832
    8. 'h' → logprob: -9.041081428527832
    9. 'tr' → logprob: -9.541081428527832
    10. '[now' → logprob: -9.541081428527832

Token 303: ' à' (ID: 1221)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.6405226588249207
    2. ' now' → logprob: -0.7655226588249207
    3. '   ' → logprob: -5.515522480010986
    4. ' maintenant' → logprob: -6.140522480010986
    5. '_now' → logprob: -7.265522480010986
    6. '	now' → logprob: -7.890522480010986
    7. '[now' → logprob: -8.765522956848145
    8. ' ' → logprob: -9.390522956848145
    9. '=' → logprob: -9.640522956848145
    10. 'au' → logprob: -9.765522956848145

Token 304: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.06801723688840866
    2. 'now' → logprob: -3.1930172443389893
    3. ' jour' → logprob: -3.9430172443389893
    4. 'day' → logprob: -5.44301700592041
    5. 'A' → logprob: -7.69301700592041
    6. '```' → logprob: -8.94301700592041
    7. 'jours' → logprob: -9.06801700592041
    8. 'la' → logprob: -9.94301700592041
    9. 'Jour' → logprob: -10.06801700592041
    10. 'jump' → logprob: -10.44301700592041

Token 305: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.12700621783733368
    2. ' now' → logprob: -2.1270062923431396
    3. '   ' → logprob: -9.627006530761719
    4. '	now' → logprob: -12.127006530761719
    5. '[now' → logprob: -12.877006530761719
    6. ' maintenant' → logprob: -13.627006530761719
    7. '_now' → logprob: -13.627006530761719
    8. '       ' → logprob: -14.627006530761719
    9. 'Now' → logprob: -15.377006530761719
    10. '(now' → logprob: -15.377006530761719

Token 306: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126935675740242
    2. '=' → logprob: -2.1269357204437256
    3. '=A' → logprob: -11.876935958862305
    4. 'A' → logprob: -15.376935958862305
    5. '   ' → logprob: -15.876935958862305
    6. ' ' → logprob: -16.876935958862305
    7. '+=' → logprob: -16.876935958862305
    8. '＝' → logprob: -17.001935958862305
    9. ' +=' → logprob: -17.626935958862305
    10. ',' → logprob: -17.876935958862305

Token 307: ' saut' (ID: 111480)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03384244441986084
    2. ' A' → logprob: -3.5338425636291504
    3. ' maintenant' → logprob: -6.90884256362915
    4. ' passant' → logprob: -7.15884256362915
    5. '=A' → logprob: -7.28384256362915
    6. '[A' → logprob: -8.283842086791992
    7. 'now' → logprob: -8.408842086791992
    8. ' prenant' → logprob: -8.408842086791992
    9. ' now' → logprob: -8.658842086791992
    10. '(A' → logprob: -9.033842086791992

Token 308: 'ant' (ID: 493)
  Prédit: 'pant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pant' → logprob: -0.7292262315750122
    2. 'ping' → logprob: -0.9792262315750122
    3. '=' → logprob: -2.4792261123657227
    4. 'p' → logprob: -3.8542261123657227
    5. 'ant' → logprob: -4.604226112365723
    6. ' =' → logprob: -4.854226112365723
    7. 'nant' → logprob: -5.479226112365723
    8. 'A' → logprob: -5.729226112365723
    9. '[' → logprob: -6.479226112365723
    10. 'tant' → logprob: -6.979226112365723

Token 309: ' vers' (ID: 3640)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.045298021286726
    2. ' A' → logprob: -3.6702980995178223
    3. 'to' → logprob: -4.795298099517822
    4. ' to' → logprob: -5.670298099517822
    5. '   ' → logprob: -6.295298099517822
    6. '=' → logprob: -6.295298099517822
    7. 'now' → logprob: -6.670298099517822
    8. ' =' → logprob: -7.545298099517822
    9. ' now' → logprob: -7.795298099517822
    10. ' à' → logprob: -8.045297622680664

Token 310: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00976305641233921
    2. ' A' → logprob: -4.634763240814209
    3. ' ' → logprob: -12.25976276397705
    4. '   ' → logprob: -13.75976276397705
    5. '	A' → logprob: -14.25976276397705
    6. ' ' → logprob: -15.63476276397705
    7. '
' → logprob: -16.259763717651367
    8. '  ' → logprob: -16.634763717651367
    9. ')' → logprob: -16.759763717651367
    10. '_A' → logprob: -16.759763717651367

Token 311: ' position' (ID: 4010)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0021961715538054705
    2. ' A' → logprob: -6.127196311950684
    3. ' ' → logprob: -13.002196311950684
    4. ']' → logprob: -13.127196311950684
    5. 'now' → logprob: -13.502196311950684
    6. '[A' → logprob: -13.877196311950684
    7. ' now' → logprob: -14.002196311950684
    8. '_A' → logprob: -14.502196311950684
    9. ')' → logprob: -14.877196311950684
    10. '[' → logprob: -15.002196311950684

Token 312: ' indiqu' (ID: 100773)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.010371904820203781
    2. ' A' → logprob: -4.635371685028076
    3. '=A' → logprob: -8.385372161865234
    4. ' =' → logprob: -9.010372161865234
    5. '=' → logprob: -9.010372161865234
    6. '   ' → logprob: -9.760372161865234
    7. '+A' → logprob: -10.510372161865234
    8. ' +' → logprob: -11.510372161865234
    9. '[A' → logprob: -11.510372161865234
    10. 'now' → logprob: -11.635372161865234

Token 313: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.345695436000824
    2. 'é' → logprob: -1.9706954956054688
    3. 'A' → logprob: -2.0956954956054688
    4. 'e' → logprob: -4.345695495605469
    5. ' par' → logprob: -5.095695495605469
    6. '=' → logprob: -5.970695495605469
    7. 'par' → logprob: -6.220695495605469
    8. '   ' → logprob: -6.470695495605469
    9. '=A' → logprob: -6.470695495605469
    10. '#' → logprob: -7.470695495605469

Token 314: ' par' (ID: 686)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4352474808692932
    2. ' =' → logprob: -1.8102474212646484
    3. '=' → logprob: -2.0602474212646484
    4. '=A' → logprob: -4.060247421264648
    5. 'by' → logprob: -4.185247421264648
    6. ' by' → logprob: -4.560247421264648
    7. ' A' → logprob: -4.560247421264648
    8. 'now' → logprob: -5.935247421264648
    9. '   ' → logprob: -6.310247421264648
    10. ' par' → logprob: -6.685247421264648

Token 315: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6932254433631897
    2. ' A' → logprob: -0.6932254433631897
    3. ' ' → logprob: -10.318225860595703
    4. '   ' → logprob: -11.318225860595703
    5. '	A' → logprob: -11.943225860595703
    6. '(A' → logprob: -12.693225860595703
    7. ''A' → logprob: -12.693225860595703
    8. '_A' → logprob: -12.818225860595703
    9. '"A' → logprob: -12.943225860595703
    10. ' now' → logprob: -13.068225860595703

Token 316: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.005336574278771877
    2. '[A' → logprob: -5.255336761474609
    3. 'A' → logprob: -10.13033676147461
    4. '[' → logprob: -10.13033676147461
    5. 'now' → logprob: -11.00533676147461
    6. ' now' → logprob: -13.00533676147461
    7. '[next' → logprob: -13.25533676147461
    8. ' [' → logprob: -13.63033676147461
    9. '   ' → logprob: -15.25533676147461
    10. '[a' → logprob: -15.25533676147461

Token 317: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31668713688850403
    2. '[now' → logprob: -1.3166871070861816
    3. ' ]' → logprob: -6.816687107086182
    4. '])' → logprob: -7.066687107086182
    5. '[' → logprob: -7.316687107086182
    6. ']:' → logprob: -7.816687107086182
    7. 'now' → logprob: -9.31668758392334
    8. ' now' → logprob: -9.69168758392334
    9. '[next' → logprob: -9.94168758392334
    10. ']):' → logprob: -10.06668758392334

Token 318: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012532255612313747
    2. '=' → logprob: -4.3875322341918945
    3. '=A' → logprob: -11.512532234191895
    4. 'A' → logprob: -12.262532234191895
    5. ' now' → logprob: -13.512532234191895
    6. 'now' → logprob: -13.762532234191895
    7. '[now' → logprob: -13.762532234191895
    8. ']' → logprob: -14.012532234191895
    9. ' =
' → logprob: -14.262532234191895
    10. ',' → logprob: -14.512532234191895

Token 319: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.575996458530426
    2. ' now' → logprob: -0.825996458530426
    3. '       ' → logprob: -10.700996398925781
    4. 'A' → logprob: -10.950996398925781
    5. ' A' → logprob: -12.700996398925781
    6. '           ' → logprob: -12.825996398925781
    7. '	now' → logprob: -12.950996398925781
    8. ' =' → logprob: -13.075996398925781
    9. '   ' → logprob: -13.325996398925781
    10. '[now' → logprob: -13.450996398925781

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. '＝' → logprob: -16.126928329467773
    4. '+=' → logprob: -17.126928329467773
    5. '.=' → logprob: -17.626928329467773
    6. ' +=' → logprob: -18.001928329467773
    7. ',' → logprob: -18.501928329467773
    8. '=A' → logprob: -18.876928329467773
    9. '*=' → logprob: -19.001928329467773
    10. ' ' → logprob: -19.251928329467773

Token 321: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001170225441455841
    2. ' A' → logprob: -6.7511701583862305
    3. '	A' → logprob: -19.626171112060547
    4. ' ' → logprob: -21.501171112060547
    5. '_A' → logprob: -21.501171112060547
    6. 'a' → logprob: -21.501171112060547
    7. '   ' → logprob: -22.001171112060547
    8. '[A' → logprob: -22.376171112060547
    9. '(A' → logprob: -23.001171112060547
    10. ' ' → logprob: -23.001171112060547

Token 322: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.875000953674316
    3. ' [' → logprob: -15.500000953674316
    4. '[next' → logprob: -19.250001907348633
    5. ' now' → logprob: -19.375001907348633
    6. '[current' → logprob: -20.125001907348633
    7. 'now' → logprob: -20.125001907348633
    8. '[
' → logprob: -21.375001907348633
    9. '(now' → logprob: -21.500001907348633
    10. '	now' → logprob: -21.875001907348633

Token 323: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001931696751853451
    2. ' ]' → logprob: -9.00019359588623
    3. ']
' → logprob: -9.62519359588623
    4. ']
' → logprob: -13.12519359588623
    5. '[' → logprob: -14.50019359588623
    6. '   ' → logprob: -14.87519359588623
    7. ']

' → logprob: -15.25019359588623
    8. ')' → logprob: -15.75019359588623
    9. '[now' → logprob: -16.125192642211914
    10. '])' → logprob: -16.250192642211914

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05700824037194252
    2. '    
' → logprob: -2.9320082664489746
    3. '
' → logprob: -6.682008266448975
    4. '   
' → logprob: -7.807008266448975
    5. ' 
' → logprob: -8.557007789611816
    6. '  
' → logprob: -8.682007789611816
    7. '\n' → logprob: -10.307007789611816
    8. '        
' → logprob: -10.807007789611816
    9. '     
' → logprob: -11.057007789611816
    10. '  ' → logprob: -12.182007789611816

Token 325: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20266126096248627
    2. 'K' → logprob: -1.7026612758636475
    3. '    
' → logprob: -7.327661037445068
    4. ' K' → logprob: -7.577661037445068
    5. '  ' → logprob: -10.952661514282227
    6. '#' (adapté à ' #') → logprob: -10.952661514282227
    7. '  
' → logprob: -11.327661514282227
    8. '
' → logprob: -11.577661514282227
    9. '   
' → logprob: -11.827661514282227
    10. ' ' → logprob: -11.827661514282227

Token 326: ' Cr' (ID: 5790)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0005259881727397442
    2. 'A' → logprob: -7.625525951385498
    3. ' K' → logprob: -10.625526428222656
    4. '   ' → logprob: -11.375526428222656
    5. 'now' → logprob: -13.875526428222656
    6. '#' → logprob: -14.375526428222656
    7. ' ' → logprob: -15.625526428222656
    8. 'k' → logprob: -16.250526428222656
    9. '  ' → logprob: -16.625526428222656
    10. '	K' → logprob: -16.750526428222656

Token 327: 'éer' (ID: 83012)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0003589416155591607
    2. ' K' → logprob: -8.250358581542969
    3. '#' → logprob: -9.875358581542969
    4. '   ' → logprob: -11.375358581542969
    5. 'e' → logprob: -11.750358581542969
    6. 'k' → logprob: -12.000358581542969
    7. '	K' → logprob: -12.750358581542969
    8. 'er' → logprob: -12.875358581542969
    9. '```' → logprob: -12.875358581542969
    10. 'ont' → logprob: -13.125358581542969

Token 328: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.182050421833992
    2. ' une' → logprob: -2.4320504665374756
    3. 'A' → logprob: -3.1820504665374756
    4. ' a' → logprob: -4.1820502281188965
    5. ' A' → logprob: -4.8070502281188965
    6. '   ' → logprob: -5.8070502281188965
    7. 'a' → logprob: -6.3070502281188965
    8. ' new' → logprob: -6.4320502281188965
    9. '#' → logprob: -6.8070502281188965
    10. 'un' → logprob: -6.8070502281188965

Token 329: ' nouveau' (ID: 23184)
  Prédit: ' nouveau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nouveau' → logprob: -0.8252015709877014
    2. ' new' → logprob: -1.5752015113830566
    3. ' tmp' → logprob: -2.0752015113830566
    4. 'tmp' → logprob: -2.5752015113830566
    5. ' nouvel' → logprob: -3.7002015113830566
    6. 'A' → logprob: -4.075201511383057
    7. ' temp' → logprob: -4.075201511383057
    8. ' ' → logprob: -4.325201511383057
    9. ' A' → logprob: -4.325201511383057
    10. 'new' → logprob: -4.325201511383057

Token 330: ' tableau' (ID: 67053)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06491909921169281
    2. ' tableau' → logprob: -3.5649189949035645
    3. ' A' → logprob: -4.6899189949035645
    4. 'tmp' → logprob: -4.8149189949035645
    5. 'temp' → logprob: -5.1899189949035645
    6. '_' → logprob: -5.6899189949035645
    7. ' nouveau' → logprob: -5.9399189949035645
    8. 'tab' → logprob: -7.6899189949035645
    9. ' nouvel' → logprob: -7.6899189949035645
    10. '_tmp' → logprob: -7.6899189949035645

Token 331: ' nex' (ID: 92763)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.644599199295044
    2. 'A' → logprob: -1.894599199295044
    3. ' new' → logprob: -2.394599199295044
    4. 'tmp' → logprob: -2.394599199295044
    5. 'new' → logprob: -2.519599199295044
    6. '   ' → logprob: -2.519599199295044
    7. ' next' → logprob: -2.644599199295044
    8. ' =' → logprob: -3.019599199295044
    9. 'next' → logprob: -3.019599199295044
    10. ' temp' → logprob: -3.144599199295044

Token 332: ' de' (ID: 334)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010020025074481964
    2. ' =' → logprob: -4.6350202560424805
    3. '=' → logprob: -9.01002025604248
    4. 'A' → logprob: -9.13502025604248
    5. 'T' → logprob: -11.76002025604248
    6. '=A' → logprob: -12.01002025604248
    7. '=[' → logprob: -12.76002025604248
    8. ' t' → logprob: -13.01002025604248
    9. ' ' → logprob: -13.63502025604248
    10. '=[]' → logprob: -13.63502025604248

Token 333: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006702631362713873
    2. ' [' → logprob: -7.500670433044434
    3. '0' → logprob: -9.250670433044434
    4. '[]' → logprob: -11.625670433044434
    5. 'A' → logprob: -12.125670433044434
    6. 'len' → logprob: -13.250670433044434
    7. 'size' → logprob: -13.375670433044434
    8. '[N' → logprob: -14.000670433044434
    9. '[A' → logprob: -14.000670433044434
    10. ' ' → logprob: -14.375670433044434

Token 334: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03999704495072365
    2. ' N' → logprob: -3.289997100830078
    3. '[N' → logprob: -6.664997100830078
    4. '(N' → logprob: -8.289997100830078
    5. ' [' → logprob: -8.914997100830078
    6. 'len' → logprob: -9.164997100830078
    7. '[' → logprob: -9.789997100830078
    8. 'A' → logprob: -10.164997100830078
    9. 'n' → logprob: -10.289997100830078
    10. ' len' → logprob: -10.664997100830078

Token 335: '+' (ID: 10)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022795919328927994
    2. '=' → logprob: -4.522796154022217
    3. '=[' → logprob: -4.647796154022217
    4. '   ' → logprob: -7.397796154022217
    5. ' [' → logprob: -7.647796154022217
    6. 'n' → logprob: -8.272795677185059
    7. ' =[' → logprob: -8.272795677185059
    8. '[' → logprob: -8.772795677185059
    9. '[n' → logprob: -9.397795677185059
    10. ' ' → logprob: -10.147795677185059

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006791393738240004
    2. ' ' → logprob: -5.256791591644287
    3. ' N' → logprob: -6.881791591644287
    4. 'N' → logprob: -7.631791591644287
    5. '   ' → logprob: -11.506791114807129
    6. '(N' → logprob: -12.131791114807129
    7. '(' → logprob: -12.756791114807129
    8. 'A' → logprob: -12.756791114807129
    9. ' (' → logprob: -12.881791114807129
    10. '=' → logprob: -13.006791114807129

Token 337: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003695920342579484
    2. '=' → logprob: -6.003695964813232
    3. '   ' → logprob: -7.003695964813232
    4. 'n' → logprob: -8.628695487976074
    5. '=n' → logprob: -10.128695487976074
    6. ' ' → logprob: -11.003695487976074
    7. ' n' → logprob: -11.003695487976074
    8. '=[' → logprob: -11.003695487976074
    9. ',' → logprob: -11.378695487976074
    10. '[n' → logprob: -11.378695487976074

Token 338: ' initial' (ID: 4871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5473949313163757
    2. ' [' → logprob: -0.9223949313163757
    3. ' nex' → logprob: -4.672394752502441
    4. '[n' → logprob: -5.297394752502441
    5. 'n' → logprob: -5.547394752502441
    6. ' n' → logprob: -5.797394752502441
    7. 'A' → logprob: -6.672394752502441
    8. '[A' → logprob: -7.922394752502441
    9. '[N' → logprob: -8.297394752502441
    10. ' A' → logprob: -8.422394752502441

Token 339: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.011281589977443218
    2. 'isée' → logprob: -4.511281490325928
    3. 'ized' → logprob: -8.886281967163086
    4. 'iz' → logprob: -9.636281967163086
    5. 'isés' → logprob: -11.886281967163086
    6. 'is' → logprob: -11.886281967163086
    7. 'isées' → logprob: -12.011281967163086
    8. 'iser' → logprob: -12.636281967163086
    9. 'e' → logprob: -13.261281967163086
    10. 'ise' → logprob: -13.761281967163086

Token 340: ' avec' (ID: 3937)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.33917543292045593
    2. '[' → logprob: -1.5891754627227783
    3. '=' → logprob: -3.7141754627227783
    4. ' =' → logprob: -3.7141754627227783
    5. ' [' → logprob: -4.214175224304199
    6. ' à' → logprob: -4.464175224304199
    7. ' avec' → logprob: -6.214175224304199
    8. ',' → logprob: -6.464175224304199
    9. ')' → logprob: -6.839175224304199
    10. ' with' → logprob: -6.964175224304199

Token 341: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4302476644515991
    2. '0' → logprob: -1.0552476644515991
    3. ' [' → logprob: -6.805247783660889
    4. ' ' → logprob: -8.55524730682373
    5. 'None' → logprob: -9.43024730682373
    6. 'range' → logprob: -9.93024730682373
    7. '[-' → logprob: -10.18024730682373
    8. '[now' → logprob: -10.30524730682373
    9. 'zeros' → logprob: -11.18024730682373
    10. ' zeros' → logprob: -11.68024730682373

Token 342: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043630000203847885
    2. '[' → logprob: -3.2936298847198486
    3. 'None' → logprob: -6.543630123138428
    4. 'range' → logprob: -6.543630123138428
    5. ' ' → logprob: -7.418630123138428
    6. 'zeros' → logprob: -7.418630123138428
    7. 'z' → logprob: -8.04362964630127
    8. ' [' → logprob: -8.54362964630127
    9. ' zeros' → logprob: -8.54362964630127
    10. ' z' → logprob: -8.79362964630127

Token 343: 'éros' (ID: 120888)
  Prédit: 'eros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eros' → logprob: -0.4153541326522827
    2. 'éros' → logprob: -1.1653541326522827
    3. 'ero' → logprob: -3.7903542518615723
    4. 'éro' → logprob: -5.415354251861572
    5. '[' → logprob: -7.665354251861572
    6. 'er' → logprob: -8.040353775024414
    7. 'e' → logprob: -9.415353775024414
    8. 'é' → logprob: -9.415353775024414
    9. '#' → logprob: -10.040353775024414
    10. '0' → logprob: -11.415353775024414

Token 344: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7856829166412354
    2. ' =' → logprob: -1.2856829166412354
    3. '[' → logprob: -2.4106829166412354
    4. '[n' → logprob: -2.4106829166412354
    5. '   ' → logprob: -3.5356829166412354
    6. ' nex' → logprob: -3.5356829166412354
    7. ' [' → logprob: -4.285682678222656
    8. '
' → logprob: -5.410682678222656
    9. '(n' → logprob: -5.535682678222656
    10. '=' → logprob: -5.910682678222656

Token 345: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3704753518104553
    2. ' =' → logprob: -2.3704752922058105
    3. '[' → logprob: -2.4954752922058105
    4. '[n' → logprob: -2.9954752922058105
    5. ' nex' → logprob: -3.1204752922058105
    6. '
' → logprob: -4.2454752922058105
    7. ' [' → logprob: -4.4954752922058105
    8. '   ' → logprob: -4.7454752922058105
    9. '=' → logprob: -6.2454752922058105
    10. ' n' → logprob: -6.8704752922058105

Token 346: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.160702645778656
    2. '[' → logprob: -2.410702705383301
    3. ' nex' → logprob: -3.410702705383301
    4. '[n' → logprob: -4.160702705383301
    5. ' [' → logprob: -4.660702705383301
    6. ' n' → logprob: -7.660702705383301
    7. '   ' → logprob: -9.2857027053833
    8. '[next' → logprob: -10.9107027053833
    9. '	n' → logprob: -12.0357027053833
    10. 'next' → logprob: -12.2857027053833

Token 347: ' Ce' (ID: 14228)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12076594680547714
    2. ' nex' → logprob: -2.2457659244537354
    3. '[' → logprob: -5.2457661628723145
    4. ' [' → logprob: -6.6207661628723145
    5. ' n' → logprob: -7.3707661628723145
    6. '[n' → logprob: -7.6207661628723145
    7. '   ' → logprob: -8.870765686035156
    8. '	n' → logprob: -11.620765686035156
    9. '
' → logprob: -12.370765686035156
    10. ' ' → logprob: -12.495765686035156

Token 348: ' tableau' (ID: 67053)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12179559469223022
    2. ' nex' → logprob: -2.371795654296875
    3. ' n' → logprob: -4.246795654296875
    4. ' =' → logprob: -6.496795654296875
    5. 's' → logprob: -6.746795654296875
    6. ' ' → logprob: -6.746795654296875
    7. '[' → logprob: -7.621795654296875
    8. '
' → logprob: -7.996795654296875
    9. 'A' → logprob: -8.121795654296875
    10. '=' → logprob: -8.371795654296875

Token 349: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28331515192985535
    2. '=' → logprob: -1.4083151817321777
    3. 'n' → logprob: -6.283315181732178
    4. ' nex' → logprob: -9.03331470489502
    5. '=n' → logprob: -10.40831470489502
    6. '[' → logprob: -10.53331470489502
    7. ' ' → logprob: -10.65831470489502
    8. ' n' → logprob: -11.03331470489502
    9. 'A' → logprob: -11.15831470489502
    10. '=[]' → logprob: -11.28331470489502

Token 350: 'ira' (ID: 2633)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8297343850135803
    2. 'ra' → logprob: -1.0797343254089355
    3. 'ira' → logprob: -1.7047343254089355
    4. 'ant' → logprob: -4.7047343254089355
    5. 'e' → logprob: -4.9547343254089355
    6. 'i' → logprob: -4.9547343254089355
    7. 'er' → logprob: -5.9547343254089355
    8. 'it' → logprob: -5.9547343254089355
    9. '#' → logprob: -6.0797343254089355
    10. 'ait' → logprob: -6.0797343254089355

Token 351: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35651665925979614
    2. '[n' → logprob: -2.6065165996551514
    3. 'for' → logprob: -3.2315165996551514
    4. ' [' → logprob: -3.3565165996551514
    5. ' to' → logprob: -3.6065165996551514
    6. 'n' → logprob: -3.6065165996551514
    7. '[]' → logprob: -4.1065168380737305
    8. '   ' → logprob: -4.2315168380737305
    9. ' for' → logprob: -4.4815168380737305
    10. 'to' → logprob: -4.6065168380737305

Token 352: ' calcul' (ID: 7559)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00047702479059807956
    2. 'A' → logprob: -8.125476837158203
    3. '0' → logprob: -9.125476837158203
    4. ' [' → logprob: -10.375476837158203
    5. '[]' → logprob: -11.250476837158203
    6. '[A' → logprob: -12.000476837158203
    7. 'n' → logprob: -12.125476837158203
    8. 'range' → logprob: -12.375476837158203
    9. '[n' → logprob: -12.625476837158203
    10. '<|end|>' → logprob: -13.125476837158203

Token 353: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00021271906734909862
    2. 'r' → logprob: -9.750212669372559
    3. '#' → logprob: -10.250212669372559
    4. 'ate' → logprob: -10.375212669372559
    5. 'rer' → logprob: -10.500212669372559
    6. 'ater' → logprob: -11.000212669372559
    7. 'e' → logprob: -11.500212669372559
    8. 'ler' → logprob: -12.250212669372559
    9. 'cer' → logprob: -12.500212669372559
    10. 'culate' → logprob: -12.500212669372559

Token 354: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022958680987358093
    2. ' [' → logprob: -3.897958755493164
    3. 'A' → logprob: -6.147958755493164
    4. '[n' → logprob: -9.022958755493164
    5. 'n' → logprob: -9.147958755493164
    6. ' A' → logprob: -11.147958755493164
    7. ' ' → logprob: -11.647958755493164
    8. '[A' → logprob: -11.772958755493164
    9. '[]' → logprob: -12.397958755493164
    10. '0' → logprob: -12.772958755493164

Token 355: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5815495848655701
    2. '[' → logprob: -1.2065496444702148
    3. 'A' → logprob: -2.456549644470215
    4. '[n' → logprob: -3.456549644470215
    5. ' [' → logprob: -4.581549644470215
    6. '[]' → logprob: -5.206549644470215
    7. ' ' → logprob: -6.206549644470215
    8. 'new' → logprob: -6.956549644470215
    9. '[A' → logprob: -7.081549644470215
    10. ' A' → logprob: -7.331549644470215

Token 356: 'd' (ID: 67)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.46206822991371155
    2. 'n' → logprob: -1.5870682001113892
    3. '[' → logprob: -2.0870683193206787
    4. '[n' → logprob: -4.2120680809021
    5. '[]' → logprob: -4.7120680809021
    6. ' [' → logprob: -4.9620680809021
    7. ' A' → logprob: -5.7120680809021
    8. '[next' → logprob: -5.8370680809021
    9. ' nex' → logprob: -7.0870680809021
    10. 'next' → logprob: -7.2120680809021

Token 357: 'oubles' (ID: 136449)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2807311713695526
    2. 'e' → logprob: -2.280731201171875
    3. 'ex' → logprob: -2.530731201171875
    4. 'n' → logprob: -3.905731201171875
    5. '[' → logprob: -4.030731201171875
    6. '[n' → logprob: -5.655731201171875
    7. ' A' → logprob: -5.780731201171875
    8. 'for' → logprob: -5.780731201171875
    9. '[A' → logprob: -5.780731201171875
    10. '#' → logprob: -6.655731201171875

Token 358: ' sa' (ID: 880)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9213775396347046
    2. 's' → logprob: -2.296377658843994
    3. ' ' → logprob: -2.296377658843994
    4. ' =' → logprob: -2.296377658843994
    5. '   ' → logprob: -2.671377658843994
    6. ' saut' → logprob: -3.046377658843994
    7. 'jump' → logprob: -3.421377658843994
    8. 'A' → logprob: -4.046377658843994
    9. '  ' → logprob: -4.171377658843994
    10. '=' → logprob: -4.296377658843994

Token 359: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.010870599187910557
    2. 'ps' → logprob: -4.885870456695557
    3. 'ut' → logprob: -7.010870456695557
    4. 'p' → logprob: -7.260870456695557
    5. 'pts' → logprob: -7.885870456695557
    6. 'ts' → logprob: -8.010870933532715
    7. 'u' → logprob: -8.760870933532715
    8. 'umps' → logprob: -8.760870933532715
    9. 'puts' → logprob: -9.385870933532715
    10. 'unts' → logprob: -9.635870933532715

Token 360: ''' (ID: 6)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8415572047233582
    2. ''' → logprob: -2.216557264328003
    3. ']' → logprob: -2.341557264328003
    4. ''
' → logprob: -2.466557264328003
    5. ' nex' → logprob: -2.466557264328003
    6. '   ' → logprob: -2.841557264328003
    7. '\n' → logprob: -3.716557264328003
    8. ',' → logprob: -4.216557025909424
    9. '
' → logprob: -4.216557025909424
    10. '[n' → logprob: -4.341557025909424

Token 361: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07458434253931046
    2. 'n' → logprob: -2.9495842456817627
    3. '
' → logprob: -4.199584484100342
    4. '	n' → logprob: -6.074584484100342
    5. '    
' → logprob: -7.324584484100342
    6. ' nex' → logprob: -8.199584007263184
    7. ' n' → logprob: -8.324584007263184
    8. '   
' → logprob: -8.574584007263184
    9. '  
' → logprob: -8.949584007263184
    10. '  ' → logprob: -9.074584007263184

Token 362: ' nex' (ID: 92763)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6089836955070496
    2. ' nex' → logprob: -1.6089837551116943
    3. '[' → logprob: -2.2339837551116943
    4. ' [' → logprob: -2.3589837551116943
    5. '[n' → logprob: -2.9839837551116943
    6. 'A' → logprob: -6.858983516693115
    7. ' n' → logprob: -7.108983516693115
    8. '0' → logprob: -7.608983516693115
    9. '[A' → logprob: -8.233983993530273
    10. ' A' → logprob: -8.358983993530273

Token 363: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029764730483293533
    2. '=' → logprob: -3.5297646522521973
    3. ' ' → logprob: -11.654765129089355
    4. '=[' → logprob: -12.529765129089355
    5. ' =[' → logprob: -13.529765129089355
    6. '[' → logprob: -15.404765129089355
    7. '=[]' → logprob: -15.404765129089355
    8. ']' → logprob: -16.40476417541504
    9. '  ' → logprob: -16.77976417541504
    10. '   ' → logprob: -17.15476417541504

Token 364: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011170001234859228
    2. ']=' → logprob: -7.37611722946167
    3. ' ]' → logprob: -8.001116752624512
    4. '=' → logprob: -9.626116752624512
    5. '[i' → logprob: -10.126116752624512
    6. ' =' → logprob: -11.126116752624512
    7. '[' → logprob: -11.626116752624512
    8. '   ' → logprob: -12.376116752624512
    9. '][' → logprob: -12.751116752624512
    10. '+' → logprob: -13.126116752624512

Token 365: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47417452931404114
    2. ' =' → logprob: -0.9741744995117188
    3. ']' → logprob: -9.974174499511719
    4. '=[' → logprob: -10.099174499511719
    5. '=[]' → logprob: -12.849174499511719
    6. '[' → logprob: -13.474174499511719
    7. '   ' → logprob: -13.599174499511719
    8. 'n' → logprob: -13.724174499511719
    9. ' ' → logprob: -14.224174499511719
    10. ']=' → logprob: -14.224174499511719

Token 366: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5635228753089905
    2. '[' → logprob: -0.9385228753089905
    3. ' [' → logprob: -4.313522815704346
    4. '[A' → logprob: -4.563522815704346
    5. '[i' → logprob: -4.688522815704346
    6. ' A' → logprob: -5.563522815704346
    7. '0' → logprob: -6.438522815704346
    8. ']' → logprob: -8.063523292541504
    9. '[n' → logprob: -8.063523292541504
    10. '[]' → logprob: -8.563523292541504

Token 367: ' résultat' (ID: 62556)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004854449536651373
    2. '[' → logprob: -6.004854679107666
    3. '0' → logprob: -6.254854679107666
    4. ' A' → logprob: -8.879854202270508
    5. ']' → logprob: -9.504854202270508
    6. '[i' → logprob: -9.504854202270508
    7. '[A' → logprob: -10.129854202270508
    8. 'i' → logprob: -10.254854202270508
    9. 'n' → logprob: -10.504854202270508
    10. ' ' → logprob: -11.254854202270508

Token 368: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5155290961265564
    2. '=' → logprob: -1.7655291557312012
    3. '[' → logprob: -1.7655291557312012
    4. '   ' → logprob: -4.140529155731201
    5. ' for' → logprob: -4.265529155731201
    6. ' [' → logprob: -4.640529155731201
    7. ' ' → logprob: -5.015529155731201
    8. ' of' → logprob: -5.890529155731201
    9. '=[' → logprob: -5.890529155731201
    10. '[i' → logprob: -6.265529155731201

Token 369: ' deux' (ID: 10301)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0494847409427166
    2. ' A' → logprob: -3.1744847297668457
    3. '[' → logprob: -5.424484729766846
    4. '[A' → logprob: -7.299484729766846
    5. ' [' → logprob: -7.549484729766846
    6. 'n' → logprob: -8.174485206604004
    7. '0' → logprob: -8.674485206604004
    8. ' ' → logprob: -9.549485206604004
    9. '[i' → logprob: -9.549485206604004
    10. '[n' → logprob: -10.174485206604004

Token 370: ' sa' (ID: 880)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4206523001194
    2. 's' → logprob: -1.5456522703170776
    3. ']' → logprob: -2.295652389526367
    4. ' A' → logprob: -4.420652389526367
    5. ' ' → logprob: -5.545652389526367
    6. '   ' → logprob: -5.670652389526367
    7. '[i' → logprob: -6.420652389526367
    8. '[A' → logprob: -6.920652389526367
    9. '[' → logprob: -7.045652389526367
    10. ' =' → logprob: -7.045652389526367

Token 371: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.005587448365986347
    2. '[' → logprob: -6.380587577819824
    3. 'ut' → logprob: -6.380587577819824
    4. 'u' → logprob: -7.880587577819824
    5. 'A' → logprob: -8.505587577819824
    6. '[i' → logprob: -8.630587577819824
    7. 'ts' → logprob: -8.880587577819824
    8. 'pts' → logprob: -9.005587577819824
    9. 'ults' → logprob: -9.255587577819824
    10. '[j' → logprob: -9.380587577819824

Token 372: ' cons' (ID: 1473)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03745362535119057
    2. '   ' → logprob: -4.037453651428223
    3. 'n' → logprob: -4.662453651428223
    4. '=' → logprob: -5.287453651428223
    5. '
' → logprob: -6.662453651428223
    6. '=[' → logprob: -7.162453651428223
    7. '[' → logprob: -7.537453651428223
    8. '[n' → logprob: -7.787453651428223
    9. ',' → logprob: -7.912453651428223
    10. ' ' → logprob: -8.037453651428223

Token 373: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.1446395069360733
    2. 'ecut' → logprob: -2.019639492034912
    3. 'n' → logprob: -6.894639492034912
    4. 'secut' → logprob: -8.01963996887207
    5. '[' → logprob: -8.76963996887207
    6. 'A' → logprob: -9.01963996887207
    7. '[n' → logprob: -9.64463996887207
    8. '[i' → logprob: -10.14463996887207
    9. 'éc' → logprob: -10.14463996887207
    10. '=' → logprob: -10.26963996887207

Token 374: 'ifs' (ID: 14119)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6452153921127319
    2. '   ' → logprob: -1.895215392112732
    3. 'e' → logprob: -2.0202155113220215
    4. 'for' → logprob: -3.0202155113220215
    5. 'u' → logprob: -3.6452155113220215
    6. '=' → logprob: -4.0202155113220215
    7. 'if' → logprob: -4.1452155113220215
    8. ' =' → logprob: -4.5202155113220215
    9. '[' → logprob: -4.6452155113220215
    10. ' n' → logprob: -5.2702155113220215

Token 375: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8425604104995728
    2. 'n' → logprob: -1.2175604104995728
    3. '
' → logprob: -1.3425604104995728
    4. '[n' → logprob: -6.217560291290283
    5. '	n' → logprob: -6.467560291290283
    6. '    
' → logprob: -6.592560291290283
    7. '\n' → logprob: -6.592560291290283
    8. ' nex' → logprob: -6.592560291290283
    9. '  
' → logprob: -6.717560291290283
    10. ' =' → logprob: -7.342560291290283

Token 376: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.060908976942300797
    2. '
' → logprob: -3.0609090328216553
    3. '   ' → logprob: -5.060908794403076
    4. '\n' → logprob: -6.435908794403076
    5. ' 
' → logprob: -6.685908794403076
    6. ' nex' → logprob: -7.310908794403076
    7. ' =' → logprob: -7.810908794403076
    8. '  
' → logprob: -7.935908794403076
    9. ' ' → logprob: -8.310909271240234
    10. '
' → logprob: -8.435909271240234

Token 377: ' nex' (ID: 92763)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04886610433459282
    2. ' nex' → logprob: -3.173866033554077
    3. '
' → logprob: -6.423866271972656
    4. '   ' → logprob: -6.673866271972656
    5. '\n' → logprob: -6.923866271972656
    6. ' 
' → logprob: -7.673866271972656
    7. '[n' → logprob: -7.798866271972656
    8. '	n' → logprob: -8.423866271972656
    9. ' n' → logprob: -8.548866271972656
    10. ' ' → logprob: -8.673866271972656

Token 378: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741131365299225
    2. ' =' → logprob: -0.9741131067276001
    3. '=[' → logprob: -10.474113464355469
    4. ' =[' → logprob: -12.724113464355469
    5. ' ' → logprob: -12.849113464355469
    6. '[' → logprob: -13.599113464355469
    7. '=[]' → logprob: -14.849113464355469
    8. '＝' → logprob: -15.599113464355469
    9. '   ' → logprob: -15.724113464355469
    10. ']' → logprob: -16.59911346435547

Token 379: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00033546582562848926
    2. ' [' → logprob: -8.000335693359375
    3. 'A' → logprob: -18.125335693359375
    4. '[A' → logprob: -18.375335693359375
    5. '([' → logprob: -19.000335693359375
    6. '[N' → logprob: -19.250335693359375
    7. ' ' → logprob: -19.375335693359375
    8. '[i' → logprob: -19.750335693359375
    9. '   ' → logprob: -20.000335693359375
    10. '  ' → logprob: -20.750335693359375

Token 380: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '۰' → logprob: -19.75
    4. '   ' → logprob: -20.125
    5. '000' → logprob: -20.625
    6. '00' → logprob: -21.0
    7. '０' → logprob: -22.0
    8. '  ' → logprob: -23.25
    9. '০' → logprob: -23.3125
    10. '०' → logprob: -23.3125

Token 381: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008311899146065116
    2. ']*(' → logprob: -7.375831127166748
    3. 'for' → logprob: -9.625831604003906
    4. ']+' → logprob: -9.625831604003906
    5. ']*' → logprob: -10.250831604003906
    6. ' for' → logprob: -10.250831604003906
    7. ' ]' → logprob: -14.125831604003906
    8. ')' → logprob: -14.500831604003906
    9. '   ' → logprob: -14.875831604003906
    10. '*' → logprob: -15.875831604003906

Token 382: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7988604307174683
    2. '*' → logprob: -1.6738604307174683
    3. ' for' → logprob: -1.9238604307174683
    4. 'for' → logprob: -1.9238604307174683
    5. ']*(' → logprob: -3.298860549926758
    6. '*(' → logprob: -3.798860549926758
    7. ' *' → logprob: -5.298860549926758
    8. '+' → logprob: -5.798860549926758
    9. '   ' → logprob: -6.798860549926758
    10. ']+' → logprob: -7.298860549926758

Token 383: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.005276569165289402
    2. ' (' → logprob: -5.255276679992676
    3. '(n' → logprob: -10.505276679992676
    4. '(len' → logprob: -11.880276679992676
    5. '(' → logprob: -12.380276679992676
    6. '   ' → logprob: -13.130276679992676
    7. 'N' → logprob: -13.505276679992676
    8. ' ' → logprob: -15.255276679992676
    9. '((' → logprob: -15.380276679992676
    10. '(
' → logprob: -16.25527572631836

Token 384: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.643152740551159e-05
    2. ' N' → logprob: -10.625036239624023
    3. '(N' → logprob: -11.375036239624023
    4. ' (' → logprob: -15.250036239624023
    5. '   ' → logprob: -15.375036239624023
    6. ' ' → logprob: -16.625036239624023
    7. '	N' → logprob: -19.000036239624023
    8. '  ' → logprob: -19.375036239624023
    9. '(' → logprob: -19.750036239624023
    10. 'len' → logprob: -20.000036239624023

Token 385: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00031305922311730683
    2. ' +' → logprob: -8.250312805175781
    3. '+
' → logprob: -9.875312805175781
    4. ' +
' → logprob: -15.750312805175781
    5. '＋' → logprob: -17.12531280517578
    6. '+

' → logprob: -17.37531280517578
    7. '+)' → logprob: -17.50031280517578
    8. ')+' → logprob: -18.00031280517578
    9. '+[' → logprob: -18.12531280517578
    10. '
' → logprob: -18.25031280517578

Token 386: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.500045776367188
    4. '```' → logprob: -17.500045776367188
    5. '2' → logprob: -17.625045776367188
    6. ')' → logprob: -18.375045776367188
    7. '  ' → logprob: -18.875045776367188
    8. '
' → logprob: -19.000045776367188
    9. '１' → logprob: -19.000045776367188
    10. '0' → logprob: -19.812545776367188

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. ' ' → logprob: -10.625025749206543
    3. '2' → logprob: -14.250025749206543
    4. '
' → logprob: -16.000024795532227
    5. '   ' → logprob: -16.250024795532227
    6. '  ' → logprob: -17.250024795532227
    7. '１' → logprob: -17.375024795532227
    8. '```' → logprob: -17.437524795532227
    9. '{' → logprob: -17.687524795532227
    10. '10' → logprob: -17.687524795532227

Token 388: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1603614240884781
    2. ')
' → logprob: -1.910361409187317
    3. ')
' → logprob: -9.160361289978027
    4. ')

' → logprob: -10.410361289978027
    5. ' )' → logprob: -14.285361289978027
    6. ')#' → logprob: -14.785361289978027
    7. '   ' → logprob: -14.910361289978027
    8. ' )
' → logprob: -15.035361289978027
    9. ')

' → logprob: -16.285362243652344
    10. ']' → logprob: -16.410362243652344

Token 389: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009773324243724346
    2. 'for' → logprob: -4.759773254394531
    3. ' for' → logprob: -7.259773254394531
    4. '<|end|>' → logprob: -7.759773254394531
    5. '	for' → logprob: -10.884773254394531
    6. '    
' → logprob: -12.509773254394531
    7. '
' → logprob: -13.134773254394531
    8. '<|end|>' → logprob: -13.259773254394531
    9. '       ' → logprob: -14.634773254394531
    10. ' ' → logprob: -14.884773254394531

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47682586312294006
    2. 'for' → logprob: -0.9768258333206177
    3. ' for' → logprob: -5.976825714111328
    4. '	for' → logprob: -8.601825714111328
    5. '
' → logprob: -10.976825714111328
    6. '    
' → logprob: -12.351825714111328
    7. '```' → logprob: -14.226825714111328
    8. ' ' → logprob: -14.476825714111328
    9. '<|end|>' → logprob: -14.601825714111328
    10. '       ' → logprob: -15.101825714111328

Token 391: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007146967691369355
    2. '   ' → logprob: -7.5007147789001465
    3. ' for' → logprob: -8.750714302062988
    4. '	for' → logprob: -12.625714302062988
    5. ' ' → logprob: -17.625715255737305
    6. '
' → logprob: -18.625715255737305
    7. '```' → logprob: -19.000715255737305
    8. '    
' → logprob: -19.125715255737305
    9. '  ' → logprob: -19.250715255737305
    10. ' 
' → logprob: -20.375715255737305

Token 392: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.5577775128767826e-06
    2. ' for' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.250005722045898
    4. '	for' → logprob: -19.1250057220459
    5. 'i' → logprob: -19.7500057220459
    6. '#' → logprob: -20.6250057220459
    7. ' ' → logprob: -21.5000057220459
    8. 'fo' → logprob: -21.5000057220459
    9. 'f' → logprob: -22.8750057220459
    10. '```' → logprob: -22.8750057220459

Token 393: 'cler' (ID: 55207)
  Prédit: 'cle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.0008645339403301477
    2. 'c' → logprob: -7.875864505767822
    3. 'for' → logprob: -8.12586498260498
    4. 'cler' → logprob: -9.37586498260498
    5. 'cles' → logprob: -10.50086498260498
    6. 'cl' → logprob: -10.62586498260498
    7. '#' → logprob: -11.12586498260498
    8. 'r' → logprob: -11.25086498260498
    9. 'clé' → logprob: -11.37586498260498
    10. 't' → logprob: -12.37586498260498

Token 394: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2609178423881531
    2. ' for' → logprob: -1.5109179019927979
    3. '   ' → logprob: -4.760917663574219
    4. ' i' → logprob: -8.135917663574219
    5. 'i' → logprob: -9.635917663574219
    6. '	for' → logprob: -11.135917663574219
    7. 'from' → logprob: -12.135917663574219
    8. ' pour' → logprob: -13.135917663574219
    9. 'pour' → logprob: -13.260917663574219
    10. '[i' → logprob: -13.510917663574219

Token 395: ' toutes' (ID: 17502)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03806249052286148
    2. ' range' → logprob: -3.288062572479248
    3. 'i' → logprob: -10.78806209564209
    4. ' i' → logprob: -15.16306209564209
    5. '(range' → logprob: -17.788063049316406
    6. '	range' → logprob: -17.913063049316406
    7. '_' → logprob: -18.038063049316406
    8. '_range' → logprob: -18.163063049316406
    9. 'rang' → logprob: -18.538063049316406
    10. 'in' → logprob: -18.788063049316406

Token 396: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.622570812702179
    2. ' range' → logprob: -0.872570812702179
    3. 'i' → logprob: -3.497570753097534
    4. ' la' → logprob: -5.122570991516113
    5. ' i' → logprob: -5.622570991516113
    6. 'la' → logprob: -5.872570991516113
    7. 'l' → logprob: -6.497570991516113
    8. '(range' → logprob: -6.997570991516113
    9. 'in' → logprob: -9.372570991516113
    10. ' l' → logprob: -9.372570991516113

Token 397: ' positions' (ID: 15897)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1919383555650711
    2. 'i' → logprob: -2.4419384002685547
    3. ' range' → logprob: -2.4419384002685547
    4. ' i' → logprob: -7.441938400268555
    5. 'indices' → logprob: -10.066938400268555
    6. 'index' → logprob: -11.066938400268555
    7. 'positions' → logprob: -12.566938400268555
    8. ' indices' → logprob: -12.816938400268555
    9. '1' → logprob: -14.066938400268555
    10. ' ' → logprob: -14.191938400268555

Token 398: ' possibles' (ID: 97753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09690705686807632
    2. 'in' → logprob: -3.346907138824463
    3. ' for' → logprob: -3.721907138824463
    4. 'i' → logprob: -4.221907138824463
    5. ' in' → logprob: -4.721907138824463
    6. 'range' → logprob: -5.096907138824463
    7. ' i' → logprob: -6.346907138824463
    8. ' range' → logprob: -6.596907138824463
    9. '   ' → logprob: -9.721906661987305
    10. 'from' → logprob: -10.346906661987305

Token 399: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03123333491384983
    2. ' for' → logprob: -3.531233310699463
    3. '   ' → logprob: -6.531233310699463
    4. 'range' → logprob: -11.281233787536621
    5. 'i' → logprob: -12.031233787536621
    6. 'in' → logprob: -12.906233787536621
    7. ' range' → logprob: -13.656233787536621
    8. '	for' → logprob: -14.281233787536621
    9. '```' → logprob: -14.531233787536621
    10. ' in' → logprob: -14.906233787536621

Token 400: 'de' (ID: 613)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026365209370851517
    2. ' range' → logprob: -3.776365280151367
    3. 'i' → logprob: -5.776365280151367
    4. ' i' → logprob: -11.526365280151367
    5. 'for' → logprob: -13.026365280151367
    6. '   ' → logprob: -13.151365280151367
    7. '1' → logprob: -14.901365280151367
    8. ')' → logprob: -16.151365280151367
    9. 'in' → logprob: -16.151365280151367
    10. '_' → logprob: -16.901365280151367

Token 401: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11381283402442932
    2. 'range' → logprob: -2.7388129234313965
    3. ' range' → logprob: -3.6138129234313965
    4. 'i' → logprob: -4.3638129234313965
    5. ' i' → logprob: -5.8638129234313965
    6. ' ' → logprob: -7.9888129234313965
    7. '   ' → logprob: -9.988812446594238
    8. '_' → logprob: -12.613812446594238
    9. '```' → logprob: -12.738812446594238
    10. ')' → logprob: -13.113812446594238

Token 402: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00268504093401134
    2. ' range' → logprob: -6.502685070037842
    3. '1' → logprob: -6.752685070037842
    4. 'i' → logprob: -11.502684593200684
    5. '   ' → logprob: -13.127684593200684
    6. '(range' → logprob: -14.877684593200684
    7. 'in' → logprob: -15.127684593200684
    8. '```' → logprob: -15.127684593200684
    9. ')' → logprob: -15.752684593200684
    10. 'import' → logprob: -16.002685546875

Token 403: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0531650111079216
    2. ' à' → logprob: -3.8031649589538574
    3. ')' → logprob: -4.053164958953857
    4. ' ,' → logprob: -4.928164958953857
    5. 'à' → logprob: -5.803164958953857
    6. ',
' → logprob: -8.178165435791016
    7. '1' → logprob: -8.303165435791016
    8. ' to' → logprob: -8.303165435791016
    9. ' ' → logprob: -8.678165435791016
    10. '+' → logprob: -8.928165435791016

Token 404: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008615042082965374
    2. ' N' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.883615493774414
    4. '1' → logprob: -16.383615493774414
    5. '   ' → logprob: -16.633615493774414
    6. '
' → logprob: -16.758615493774414
    7. '```' → logprob: -17.133615493774414
    8. 'n' → logprob: -17.758615493774414
    9. '	N' → logprob: -18.133615493774414
    10. ',' → logprob: -19.133615493774414

Token 405: ' inclus' (ID: 11891)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.843955934047699
    2. ')' → logprob: -1.3439559936523438
    3. '+' → logprob: -1.7189559936523438
    4. '):
' → logprob: -2.0939559936523438
    5. ')
' → logprob: -6.343955993652344
    6. '):

' → logprob: -6.343955993652344
    7. ' +' → logprob: -7.093955993652344
    8. ' )' → logprob: -7.468955993652344
    9. '1' → logprob: -7.843955993652344
    10. ':' → logprob: -8.218955993652344

Token 406: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9141311049461365
    2. '):
' → logprob: -1.0391311645507812
    3. ')' → logprob: -1.4141311645507812
    4. ')
' → logprob: -7.164131164550781
    5. ':' → logprob: -7.789131164550781
    6. '):
' → logprob: -8.664131164550781
    7. ' )' → logprob: -8.789131164550781
    8. 'for' → logprob: -8.789131164550781
    9. ' ):
' → logprob: -8.914131164550781
    10. '   ' → logprob: -9.289131164550781

Token 407: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10057283192873001
    2. 'for' → logprob: -2.3505728244781494
    3. '   ' → logprob: -8.60057258605957
    4. ':' → logprob: -8.85057258605957
    5. ' in' → logprob: -11.10057258605957
    6. '```' → logprob: -11.60057258605957
    7. '0' → logprob: -12.60057258605957
    8. ' range' → logprob: -12.60057258605957
    9. ':
' → logprob: -13.35057258605957
    10. ',' → logprob: -13.72557258605957

Token 408: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20850354433059692
    2. ' for' → logprob: -1.7085034847259521
    3. '   ' → logprob: -4.958503723144531
    4. ' range' → logprob: -10.458503723144531
    5. 'range' → logprob: -11.583503723144531
    6. '	for' → logprob: -12.708503723144531
    7. 'i' → logprob: -15.083503723144531
    8. '0' → logprob: -15.833503723144531
    9. ' i' → logprob: -16.20850372314453
    10. '```' → logprob: -16.95850372314453

Token 409: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018151583150029182
    2. ' i' → logprob: -4.018151760101318
    3. 'pos' → logprob: -13.89315128326416
    4. '	i' → logprob: -14.76815128326416
    5. 'x' → logprob: -15.76815128326416
    6. 'idx' → logprob: -15.89315128326416
    7. ' ' → logprob: -17.143152236938477
    8. '```' → logprob: -17.643152236938477
    9. '   ' → logprob: -17.768152236938477
    10. 'index' → logprob: -17.893152236938477

Token 410: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01257169060409069
    2. 'in' → logprob: -4.387571811676025
    3. ' ' → logprob: -10.012571334838867
    4. '0' → logprob: -11.887571334838867
    5. '1' → logprob: -12.637571334838867
    6. ' i' → logprob: -13.762571334838867
    7. ',' → logprob: -13.887571334838867
    8. 's' → logprob: -14.262571334838867
    9. 'n' → logprob: -14.387571334838867
    10. '  ' → logprob: -14.762571334838867

Token 411: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020871460437775
    2. ' range' → logprob: -2.3502087593078613
    3. ' ' → logprob: -13.725208282470703
    4. '   ' → logprob: -14.600208282470703
    5. '(range' → logprob: -15.225208282470703
    6. '  ' → logprob: -16.225208282470703
    7. '	range' → logprob: -16.725208282470703
    8. '0' → logprob: -17.225208282470703
    9. 'rang' → logprob: -17.850208282470703
    10. ' ' → logprob: -18.475208282470703

Token 412: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06923200935125351
    2. '(N' → logprob: -2.8192319869995117
    3. '1' → logprob: -4.944231986999512
    4. '   ' → logprob: -10.319231986999512
    5. ' ' → logprob: -10.569231986999512
    6. ' (' → logprob: -10.569231986999512
    7. 'N' → logprob: -11.069231986999512
    8. '(n' → logprob: -11.819231986999512
    9. '(len' → logprob: -13.319231986999512
    10. ' N' → logprob: -13.569231986999512

Token 413: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04316360875964165
    2. ' +' → logprob: -3.168163537979126
    3. '1' → logprob: -9.668163299560547
    4. '):
' → logprob: -10.043163299560547
    5. '+
' → logprob: -10.543163299560547
    6. '   ' → logprob: -11.043163299560547
    7. '):' → logprob: -11.793163299560547
    8. ')' → logprob: -13.168163299560547
    9. ' +
' → logprob: -13.543163299560547
    10. ' ' → logprob: -13.918163299560547

Token 414: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001589618914294988
    2. ' ' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.12515926361084
    4. '
' → logprob: -16.750158309936523
    5. ')' → logprob: -17.312658309936523
    6. '0' → logprob: -17.437658309936523
    7. '  ' → logprob: -17.562658309936523
    8. '+' → logprob: -17.875158309936523
    9. '2' → logprob: -18.187658309936523
    10. '```' → logprob: -18.500158309936523

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.726595241460018e-05
    2. ' ' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.62503719329834
    4. '```' → logprob: -15.37503719329834
    5. '2' → logprob: -16.437538146972656
    6. '0' → logprob: -16.875038146972656
    7. '+' → logprob: -16.875038146972656
    8. ')' → logprob: -17.500038146972656
    9. '  ' → logprob: -18.000038146972656
    10. '7' → logprob: -18.062538146972656

Token 416: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2520048916339874
    2. '):
' → logprob: -1.502004861831665
    3. '):
' → logprob: -9.877004623413086
    4. ' ):' → logprob: -11.252004623413086
    5. ')' → logprob: -12.252004623413086
    6. '   ' → logprob: -12.877004623413086
    7. ' ):
' → logprob: -13.002004623413086
    8. ':' → logprob: -13.752004623413086
    9. '):

' → logprob: -14.377004623413086
    10. ':
' → logprob: -17.002004623413086

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07066236436367035
    2. 'n' → logprob: -2.820662260055542
    3. '   ' → logprob: -4.820662498474121
    4. ' if' → logprob: -8.820662498474121
    5. 'if' → logprob: -8.945662498474121
    6. ' nex' → logprob: -9.070662498474121
    7. ' n' → logprob: -9.945662498474121
    8. '	n' → logprob: -10.570662498474121
    9. '```' → logprob: -10.695662498474121
    10. '
' → logprob: -11.695662498474121

Token 418: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009578057564795017
    2. '       ' → logprob: -5.009578227996826
    3. 'if' → logprob: -6.509578227996826
    4. '   ' → logprob: -6.634578227996826
    5. ' nex' → logprob: -10.759577751159668
    6. ' if' → logprob: -11.384577751159668
    7. '	n' → logprob: -11.509577751159668
    8. '           ' → logprob: -12.634577751159668
    9. ' n' → logprob: -13.634577751159668
    10. ' ' → logprob: -14.009577751159668

Token 419: ' Pour' (ID: 13931)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1147993803024292
    2. 'if' → logprob: -2.2397994995117188
    3. '   ' → logprob: -6.364799499511719
    4. ' if' → logprob: -9.114799499511719
    5. ' nex' → logprob: -10.239799499511719
    6. 'try' → logprob: -10.364799499511719
    7. ' ' → logprob: -11.364799499511719
    8. '       ' → logprob: -11.364799499511719
    9. '  ' → logprob: -11.614799499511719
    10. 'next' → logprob: -12.114799499511719

Token 420: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0932304859161377
    2. ' i' → logprob: -2.4682304859161377
    3. 'n' → logprob: -5.968230247497559
    4. ' nex' → logprob: -6.593230247497559
    5. '0' → logprob: -8.843230247497559
    6. ' ' → logprob: -9.468230247497559
    7. 'A' → logprob: -10.093230247497559
    8. ' n' → logprob: -10.218230247497559
    9. 'now' → logprob: -11.718230247497559
    10. 'next' → logprob: -11.843230247497559

Token 421: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3710203766822815
    2. ' i' → logprob: -1.4960203170776367
    3. 'n' → logprob: -2.6210203170776367
    4. ' nex' → logprob: -4.371020317077637
    5. ' n' → logprob: -8.496020317077637
    6. 'next' → logprob: -9.746020317077637
    7. ' now' → logprob: -9.871020317077637
    8. '   ' → logprob: -10.121020317077637
    9. '[i' → logprob: -10.371020317077637
    10. ' position' → logprob: -10.496020317077637

Token 422: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2817743420600891
    2. ':' → logprob: -1.9067742824554443
    3. '   ' → logprob: -2.9067742824554443
    4. '       ' → logprob: -4.281774520874023
    5. 'n' → logprob: -4.531774520874023
    6. ',' → logprob: -5.156774520874023
    7. '           ' → logprob: -5.531774520874023
    8. '):
' → logprob: -6.031774520874023
    9. ',n' → logprob: -6.781774520874023
    10. ':n' → logprob: -7.031774520874023

Token 423: ' on' (ID: 402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05981527268886566
    2. ' nex' → logprob: -2.9348151683807373
    3. '   ' → logprob: -5.559815406799316
    4. 'if' → logprob: -7.809815406799316
    5. ' if' → logprob: -8.184815406799316
    6. ' n' → logprob: -9.059815406799316
    7. '       ' → logprob: -9.309815406799316
    8. ' ' → logprob: -9.559815406799316
    9. '  ' → logprob: -10.434815406799316
    10. '	n' → logprob: -10.559815406799316

Token 424: ' définit' (ID: 89835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16033419966697693
    2. ' nex' → logprob: -2.0353341102600098
    3. ' if' → logprob: -4.78533411026001
    4. 'if' → logprob: -4.91033411026001
    5. '   ' → logprob: -6.91033411026001
    6. ' n' → logprob: -7.91033411026001
    7. '       ' → logprob: -9.660334587097168
    8. 'i' → logprob: -10.285334587097168
    9. '[n' → logprob: -10.285334587097168
    10. '=' → logprob: -10.410334587097168

Token 425: ' nex' (ID: 92763)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08113851398229599
    2. ' nex' → logprob: -2.5811386108398438
    3. '   ' → logprob: -6.331138610839844
    4. ' n' → logprob: -8.206138610839844
    5. '	n' → logprob: -9.581138610839844
    6. ' ' → logprob: -10.331138610839844
    7. ' if' → logprob: -10.706138610839844
    8. 'if' → logprob: -10.831138610839844
    9. '  ' → logprob: -11.456138610839844
    10. '       ' → logprob: -11.456138610839844

Token 426: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008316631428897381
    2. '[n' → logprob: -7.125831604003906
    3. '[' → logprob: -10.750831604003906
    4. ' [' → logprob: -13.125831604003906
    5. '[j' → logprob: -13.500831604003906
    6. 'n' → logprob: -14.000831604003906
    7. '[next' → logprob: -14.750831604003906
    8. '[N' → logprob: -14.750831604003906
    9. '\[' → logprob: -15.875831604003906
    10. '[e' → logprob: -16.250831604003906

Token 427: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008346432005055249
    2. ' ]' → logprob: -7.3758344650268555
    3. ']=' → logprob: -8.500834465026855
    4. '=' → logprob: -12.750834465026855
    5. ' =' → logprob: -14.125834465026855
    6. ')' → logprob: -14.625834465026855
    7. ']
' → logprob: -16.250835418701172
    8. '   ' → logprob: -16.625835418701172
    9. ' ' → logprob: -16.750835418701172
    10. ' as' → logprob: -16.875835418701172

Token 428: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023251652717590332
    2. ' =' → logprob: -3.773251533508301
    3. '=A' → logprob: -13.0232515335083
    4. ']' → logprob: -13.1482515335083
    5. '=n' → logprob: -13.6482515335083
    6. ']=' → logprob: -14.7732515335083
    7. '=i' → logprob: -16.023252487182617
    8. ')' → logprob: -16.148252487182617
    9. '=
' → logprob: -16.648252487182617
    10. '=

' → logprob: -16.773252487182617

Token 429: ' étant' (ID: 47869)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0017148085171356797
    2. ' A' → logprob: -6.376714706420898
    3. 'n' → logprob: -12.376714706420898
    4. '   ' → logprob: -12.876714706420898
    5. ' now' → logprob: -13.376714706420898
    6. 'now' → logprob: -13.501714706420898
    7. '	A' → logprob: -13.876714706420898
    8. ' ' → logprob: -14.126714706420898
    9. '_A' → logprob: -15.376714706420898
    10. '=A' → logprob: -15.376714706420898

Token 430: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0019359003053978086
    2. ' A' → logprob: -6.251935958862305
    3. 'n' → logprob: -12.376935958862305
    4. ' ' → logprob: -14.001935958862305
    5. '_A' → logprob: -14.751935958862305
    6. '	A' → logprob: -14.751935958862305
    7. ' now' → logprob: -15.251935958862305
    8. '   ' → logprob: -15.501935958862305
    9. 'now' → logprob: -15.501935958862305
    10. ' ' → logprob: -15.876935958862305

Token 431: ' position' (ID: 4010)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0069820028729736805
    2. ' A' → logprob: -5.00698184967041
    3. ' value' → logprob: -9.75698184967041
    4. 'n' → logprob: -10.00698184967041
    5. ' position' → logprob: -10.13198184967041
    6. 'position' → logprob: -10.25698184967041
    7. 'value' → logprob: -10.63198184967041
    8. ' valeur' → logprob: -10.88198184967041
    9. ' suivante' → logprob: -11.50698184967041
    10. 'next' → logprob: -12.25698184967041

Token 432: ' atte' (ID: 43312)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8136540055274963
    2. ' suivante' → logprob: -1.3136539459228516
    3. ' A' → logprob: -2.1886539459228516
    4. ' de' → logprob: -3.4386539459228516
    5. 'd' → logprob: -3.5636539459228516
    6. 'n' → logprob: -3.6886539459228516
    7. 'de' → logprob: -3.8136539459228516
    8. ' d' → logprob: -3.9386539459228516
    9. '   ' → logprob: -4.438653945922852
    10. 'su' → logprob: -4.438653945922852

Token 433: 'inte' (ID: 18750)
  Prédit: 'inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.001407613162882626
    2. 'int' → logprob: -7.126407623291016
    3. 'nte' → logprob: -8.501407623291016
    4. 'ind' → logprob: -8.626407623291016
    5. 'i' → logprob: -9.001407623291016
    6. 'in' → logprob: -10.751407623291016
    7. '#' → logprob: -10.876407623291016
    8. 'ign' → logprob: -11.376407623291016
    9. 'nd' → logprob: -11.751407623291016
    10. '[i' → logprob: -11.751407623291016

Token 434: ' après' (ID: 16460)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.33354857563972473
    2. 'par' → logprob: -1.9585485458374023
    3. ' après' → logprob: -2.9585485458374023
    4. '   ' → logprob: -3.8335485458374023
    5. ' ' → logprob: -4.083548545837402
    6. 'n' → logprob: -4.708548545837402
    7. '       ' → logprob: -4.958548545837402
    8. 'en' → logprob: -5.208548545837402
    9. 'A' → logprob: -5.333548545837402
    10. ' =' → logprob: -5.708548545837402

Token 435: ' deux' (ID: 10301)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03870378062129021
    2. '2' → logprob: -4.538703918457031
    3. ' deux' → logprob: -4.663703918457031
    4. 'n' → logprob: -4.913703918457031
    5. ' A' → logprob: -5.413703918457031
    6. 'two' → logprob: -6.038703918457031
    7. 'de' → logprob: -6.288703918457031
    8. ' two' → logprob: -7.288703918457031
    9. ' ' → logprob: -8.038703918457031
    10. 's' → logprob: -8.663703918457031

Token 436: ' sa' (ID: 880)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01801707223057747
    2. ' sa' → logprob: -4.268017292022705
    3. ' saut' → logprob: -6.643017292022705
    4. ' ' → logprob: -7.143017292022705
    5. '   ' → logprob: -7.768017292022705
    6. 'sa' → logprob: -8.143016815185547
    7. ' s' → logprob: -8.518016815185547
    8. ']' → logprob: -8.643016815185547
    9. 'n' → logprob: -8.768016815185547
    10. 'A' → logprob: -9.268016815185547

Token 437: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.00010604646377032623
    2. 'u' → logprob: -10.375105857849121
    3. 'ut' → logprob: -11.000105857849121
    4. 'puts' → logprob: -11.250105857849121
    5. '[' → logprob: -12.500105857849121
    6. '1' → logprob: -12.750105857849121
    7. ' uts' → logprob: -12.875105857849121
    8. '=' → logprob: -12.875105857849121
    9. 'A' → logprob: -13.000105857849121
    10. '   ' → logprob: -13.000105857849121

Token 438: ' depuis' (ID: 16277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10272113978862762
    2. '=' → logprob: -2.6027212142944336
    3. 'n' → logprob: -4.727721214294434
    4. '       ' → logprob: -4.852721214294434
    5. '   ' → logprob: -6.477721214294434
    6. 'from' → logprob: -7.102721214294434
    7. ' from' → logprob: -7.227721214294434
    8. '=n' → logprob: -7.352721214294434
    9. 'A' → logprob: -7.477721214294434
    10. ':' → logprob: -7.852721214294434

Token 439: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5003340840339661
    2. 'i' → logprob: -1.5003340244293213
    3. ' A' → logprob: -2.2503340244293213
    4. 'A' → logprob: -2.7503340244293213
    5. ' ' → logprob: -7.6253342628479
    6. ' the' → logprob: -9.000333786010742
    7. ' la' → logprob: -9.000333786010742
    8. ' now' → logprob: -9.625333786010742
    9. ' ' → logprob: -9.750333786010742
    10. '   ' → logprob: -9.812833786010742

Token 440: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25404757261276245
    2. 'n' → logprob: -2.7540476322174072
    3. '       ' → logprob: -2.7540476322174072
    4. '=' → logprob: -3.1290476322174072
    5. '   ' → logprob: -3.1290476322174072
    6. ' now' → logprob: -6.379047393798828
    7. ' nex' → logprob: -6.629047393798828
    8. '=n' → logprob: -6.754047393798828
    9. '
' → logprob: -6.879047393798828
    10. ':' → logprob: -7.379047393798828

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.608870267868042
    2. ' =' → logprob: -0.858870267868042
    3. '=' → logprob: -4.358870506286621
    4. '   ' → logprob: -4.608870506286621
    5. 'n' → logprob: -4.858870506286621
    6. '=n' → logprob: -7.608870506286621
    7. ':' → logprob: -8.233870506286621
    8. '           ' → logprob: -8.233870506286621
    9. '[n' → logprob: -8.983870506286621
    10. ',' → logprob: -9.233870506286621

Token 442: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0068957009352743626
    2. 'A' → logprob: -5.131895542144775
    3. ' nex' → logprob: -7.131895542144775
    4. '   ' → logprob: -9.631896018981934
    5. '       ' → logprob: -10.381896018981934
    6. 'N' → logprob: -10.631896018981934
    7. '=' → logprob: -11.631896018981934
    8. ' A' → logprob: -11.756896018981934
    9. ' n' → logprob: -12.381896018981934
    10. ' =' → logprob: -12.506896018981934

Token 443: ' Cela' (ID: 44403)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06926604360342026
    2. '       ' → logprob: -3.1942660808563232
    3. ' nex' → logprob: -3.6942660808563232
    4. '   ' → logprob: -7.569265842437744
    5. ' n' → logprob: -8.694266319274902
    6. 'if' → logprob: -9.319266319274902
    7. ' if' → logprob: -10.256766319274902
    8. ' nxt' → logprob: -10.381766319274902
    9. '	n' → logprob: -10.506766319274902
    10. '           ' → logprob: -10.631766319274902

Token 444: ' revient' (ID: 95900)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23764966428279877
    2. '=' → logprob: -1.61264967918396
    3. ' nex' → logprob: -5.112649440765381
    4. 'n' → logprob: -5.487649440765381
    5. '=n' → logprob: -6.987649440765381
    6. '   ' → logprob: -7.862649440765381
    7. ' n' → logprob: -8.362649917602539
    8. '       ' → logprob: -9.362649917602539
    9. ' ' → logprob: -9.612649917602539
    10. ',' → logprob: -10.237649917602539

Token 445: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04558996483683586
    2. 'A' → logprob: -3.7955899238586426
    3. 'à' → logprob: -4.045589923858643
    4. ' ' → logprob: -6.545589923858643
    5. ' A' → logprob: -6.545589923858643
    6. ' a' → logprob: -7.545589923858643
    7. ' to' → logprob: -8.2955904006958
    8. 'a' → logprob: -8.6705904006958
    9. '   ' → logprob: -8.7955904006958
    10. '=' → logprob: -9.1705904006958

Token 446: ' appliquer' (ID: 172872)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014656426385045052
    2. ' A' → logprob: -4.2646565437316895
    3. 'n' → logprob: -7.8896565437316895
    4. ' nex' → logprob: -9.764656066894531
    5. ' ' → logprob: -11.014656066894531
    6. '   ' → logprob: -12.014656066894531
    7. 'now' → logprob: -12.014656066894531
    8. ' now' → logprob: -12.139656066894531
    9. ' n' → logprob: -12.639656066894531
    10. '>A' → logprob: -13.014656066894531

Token 447: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.016338393092155457
    2. ' A' → logprob: -4.141338348388672
    3. 'n' → logprob: -8.641338348388672
    4. ' ' → logprob: -10.516338348388672
    5. '   ' → logprob: -10.766338348388672
    6. ' the' → logprob: -10.891338348388672
    7. 'the' → logprob: -11.391338348388672
    8. 'lambda' → logprob: -11.391338348388672
    9. '	A' → logprob: -12.391338348388672
    10. '_A' → logprob: -12.516338348388672

Token 448: ' fonction' (ID: 17610)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.007583912927657366
    2. ' A' → logprob: -5.007584095001221
    3. 'n' → logprob: -8.007583618164062
    4. 's' → logprob: -8.382583618164062
    5. ' saut' → logprob: -9.257583618164062
    6. '#' → logprob: -10.007583618164062
    7. 'lambda' → logprob: -10.882583618164062
    8. 'fonction' → logprob: -11.382583618164062
    9. 'def' → logprob: -11.507583618164062
    10. '[A' → logprob: -11.632583618164062

Token 449: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07373373210430145
    2. ' A' → logprob: -2.6987338066101074
    3. 'lambda' → logprob: -7.073733806610107
    4. '   ' → logprob: -7.073733806610107
    5. ' lambda' → logprob: -7.323733806610107
    6. 'n' → logprob: -8.07373332977295
    7. 'def' → logprob: -8.57373332977295
    8. ' ' → logprob: -8.57373332977295
    9. '=lambda' → logprob: -9.44873332977295
    10. '(lambda' → logprob: -9.69873332977295

Token 450: ' deux' (ID: 10301)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.11360301077365875
    2. 'n' → logprob: -3.363603115081787
    3. '[n' → logprob: -3.488603115081787
    4. 'A' → logprob: -3.988603115081787
    5. '[' → logprob: -5.613603115081787
    6. ']' → logprob: -5.738603115081787
    7. ' à' → logprob: -5.863603115081787
    8. ',' → logprob: -6.238603115081787
    9. '][' → logprob: -6.613603115081787
    10. ' at' → logprob: -6.988603115081787

Token 451: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.3842660188674927
    2. ' fois' → logprob: -2.134265899658203
    3. 'n' → logprob: -2.509265899658203
    4. '[A' → logprob: -2.884265899658203
    5. '[n' → logprob: -3.259265899658203
    6. 'times' → logprob: -4.884265899658203
    7. 'A' → logprob: -5.009265899658203
    8. ']' → logprob: -5.884265899658203
    9. '[' → logprob: -6.009265899658203
    10. '[i' → logprob: -6.009265899658203

Token 452: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04949267581105232
    2. 'n' → logprob: -3.924492597579956
    3. ' =' → logprob: -4.299492835998535
    4. '   ' → logprob: -4.674492835998535
    5. ':' → logprob: -6.424492835998535
    6. '=' → logprob: -6.674492835998535
    7. '[n' → logprob: -7.299492835998535
    8. '           ' → logprob: -8.174492835998535
    9. ',' → logprob: -8.299492835998535
    10. ':
' → logprob: -8.299492835998535

Token 453: ' d' (ID: 272)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10451759397983551
    2. 'n' → logprob: -2.604517698287964
    3. ' A' → logprob: -3.854517698287964
    4. ' nex' → logprob: -6.354517459869385
    5. ']' → logprob: -7.354517459869385
    6. '   ' → logprob: -7.354517459869385
    7. ' n' → logprob: -7.729517459869385
    8. ' now' → logprob: -8.729517936706543
    9. 'now' → logprob: -8.854517936706543
    10. ' ' → logprob: -9.604517936706543

Token 454: ''abord' (ID: 89989)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20014609396457672
    2. 'e' → logprob: -3.075146198272705
    3. 'ef' → logprob: -3.075146198272705
    4. 'ouble' → logprob: -3.950146198272705
    5. '[i' → logprob: -4.075146198272705
    6. '[A' → logprob: -4.450146198272705
    7. 'n' → logprob: -4.700146198272705
    8. ' A' → logprob: -4.950146198272705
    9. 'i' → logprob: -5.450146198272705
    10. 'oub' → logprob: -5.825146198272705

Token 455: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.044324275106191635
    2. ' A' → logprob: -3.1693241596221924
    3. ' à' → logprob: -7.9193243980407715
    4. 'à' → logprob: -8.794323921203613
    5. 'n' → logprob: -8.919323921203613
    6. 'l' → logprob: -9.294323921203613
    7. 'au' → logprob: -9.419323921203613
    8. 'le' → logprob: -9.919323921203613
    9. ' at' → logprob: -10.169323921203613
    10. '=A' → logprob: -10.294323921203613

Token 456: '[i' (ID: 1768)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.4348333179950714
    2. '[n' → logprob: -1.809833288192749
    3. '[now' → logprob: -1.934833288192749
    4. 'now' → logprob: -4.309833526611328
    5. 'A' → logprob: -4.809833526611328
    6. '[' → logprob: -4.809833526611328
    7. 'n' → logprob: -5.309833526611328
    8. ' now' → logprob: -5.809833526611328
    9. '[i' → logprob: -5.934833526611328
    10. ',' → logprob: -7.059833526611328

Token 457: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.06551928073167801
    2. ']' → logprob: -2.815519332885742
    3. ']),' → logprob: -6.565519332885742
    4. ' ],' → logprob: -6.815519332885742
    5. '[i' → logprob: -7.815519332885742
    6. '])' → logprob: -8.690519332885742
    7. ']],' → logprob: -9.190519332885742
    8. '[now' → logprob: -9.190519332885742
    9. ' ]' → logprob: -9.940519332885742
    10. 'A' → logprob: -10.440519332885742

Token 458: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.562406599521637
    2. 'A' → logprob: -1.8124065399169922
    3. '],' → logprob: -2.562406539916992
    4. ']' → logprob: -2.687406539916992
    5. 'et' → logprob: -3.437406539916992
    6. 'n' → logprob: -3.687406539916992
    7. ' A' → logprob: -4.062406539916992
    8. ' et' → logprob: -4.687406539916992
    9. ' ensuite' → logprob: -4.687406539916992
    10. '),' → logprob: -5.062406539916992

Token 459: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01604785956442356
    2. ' A' → logprob: -4.141047954559326
    3. '   ' → logprob: -12.016047477722168
    4. ' ' → logprob: -13.016047477722168
    5. '
' → logprob: -13.891047477722168
    6. ']' → logprob: -14.266047477722168
    7. '[' → logprob: -14.516047477722168
    8. '[A' → logprob: -14.641047477722168
    9. '`' → logprob: -14.766047477722168
    10. '	A' → logprob: -14.766047477722168

Token 460: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.0012929741060361266
    2. '[n' → logprob: -7.376293182373047
    3. 'A' → logprob: -7.751293182373047
    4. '[' → logprob: -8.626293182373047
    5. '][' → logprob: -11.251293182373047
    6. '[
' → logprob: -11.501293182373047
    7. '[N' → logprob: -11.626293182373047
    8. '[now' → logprob: -12.251293182373047
    9. '[a' → logprob: -12.501293182373047
    10. 'n' → logprob: -12.626293182373047

Token 461: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005118065746501088
    2. '[A' → logprob: -7.625511646270752
    3. '[' → logprob: -10.75051212310791
    4. 'A' → logprob: -14.50051212310791
    5. '[I' → logprob: -14.50051212310791
    6. 'i' → logprob: -14.62551212310791
    7. '[int' → logprob: -15.37551212310791
    8. '[
' → logprob: -15.62551212310791
    9. '[a' → logprob: -15.75051212310791
    10. ']' → logprob: -16.750511169433594

Token 462: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.06585585325956345
    2. '[i' → logprob: -2.8158557415008545
    3. ']]]' → logprob: -6.065855979919434
    4. ']' → logprob: -7.690855979919434
    5. ']])' → logprob: -7.940855979919434
    6. ']].' → logprob: -8.065855979919434
    7. '[' → logprob: -8.565855979919434
    8. ' ]]' → logprob: -9.815855979919434
    9. '[]' → logprob: -9.815855979919434
    10. '])]' → logprob: -10.315855979919434

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011822949163615704
    2. 'n' → logprob: -4.7618231773376465
    3. '   ' → logprob: -5.8868231773376465
    4. '           ' → logprob: -8.886822700500488
    5. ' =' → logprob: -9.636822700500488
    6. ',' → logprob: -10.386822700500488
    7. '=' → logprob: -10.511822700500488
    8. '      ' → logprob: -10.886822700500488
    9. ' nex' → logprob: -11.261822700500488
    10. '	' → logprob: -11.511822700500488

Token 464: ' nex' (ID: 92763)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08690787106752396
    2. ' nex' → logprob: -3.3369078636169434
    3. '   ' → logprob: -3.7119078636169434
    4. '       ' → logprob: -4.336907863616943
    5. ' =' → logprob: -5.336907863616943
    6. ' n' → logprob: -6.711907863616943
    7. '=' → logprob: -6.836907863616943
    8. ']' → logprob: -6.961907863616943
    9. ' if' → logprob: -7.586907863616943
    10. 'if' → logprob: -8.211908340454102

Token 465: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00038145645521581173
    2. '[' → logprob: -8.000381469726562
    3. '[n' → logprob: -11.000381469726562
    4. ' [' → logprob: -11.375381469726562
    5. '=' → logprob: -12.125381469726562
    6. '[A' → logprob: -12.750381469726562
    7. ' =' → logprob: -12.875381469726562
    8. ']' → logprob: -13.750381469726562
    9. '\[' → logprob: -14.125381469726562
    10. '=[' → logprob: -14.250381469726562

Token 466: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005806732806377113
    2. ']=' → logprob: -7.625580787658691
    3. ' ]' → logprob: -9.625580787658691
    4. '])' → logprob: -10.750580787658691
    5. '=' → logprob: -12.875580787658691
    6. ')' → logprob: -14.000580787658691
    7. '[' → logprob: -14.625580787658691
    8. ']]' → logprob: -14.625580787658691
    9. ' =' → logprob: -14.875580787658691
    10. ')]' → logprob: -16.125579833984375

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022604703903198
    2. ' =' → logprob: -1.9102261066436768
    3. '=A' → logprob: -13.285225868225098
    4. ']' → logprob: -16.535226821899414
    5. ']=' → logprob: -17.785226821899414
    6. '＝' → logprob: -18.160226821899414
    7. ' ' → logprob: -18.660226821899414
    8. '.=' → logprob: -18.785226821899414
    9. '=n' → logprob: -18.910226821899414
    10. ',' → logprob: -18.910226821899414

Token 468: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0009115827269852161
    2. ' A' → logprob: -7.000911712646484
    3. '	A' → logprob: -16.500911712646484
    4. ' ' → logprob: -17.500911712646484
    5. '_A' → logprob: -18.750911712646484
    6. '>A' → logprob: -19.750911712646484
    7. 'a' → logprob: -19.875911712646484
    8. '(A' → logprob: -20.500911712646484
    9. '=A' → logprob: -20.500911712646484
    10. ' ' → logprob: -20.625911712646484

Token 469: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.0001410850090906024
    2. '[' → logprob: -9.000141143798828
    3. 'A' → logprob: -11.875141143798828
    4. '[n' → logprob: -12.000141143798828
    5. '[
' → logprob: -13.000141143798828
    6. '[N' → logprob: -13.500141143798828
    7. '[a' → logprob: -14.750141143798828
    8. ' [' → logprob: -16.125141143798828
    9. '	A' → logprob: -16.625141143798828
    10. '[[' → logprob: -16.875141143798828

Token 470: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.125001907348633
    3. 'i' → logprob: -14.125001907348633
    4. ' [' → logprob: -17.500001907348633
    5. ' i' → logprob: -18.000001907348633
    6. '[I' → logprob: -18.625001907348633
    7. '[
' → logprob: -19.375001907348633
    8. '[n' → logprob: -19.875001907348633
    9. ' ' → logprob: -20.000001907348633
    10. '[j' → logprob: -20.000001907348633

Token 471: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.10094499588012695
    2. '[i' → logprob: -2.350944995880127
    3. ']' → logprob: -7.600944995880127
    4. 'i' → logprob: -8.850944519042969
    5. ']]]' → logprob: -10.100944519042969
    6. '[' → logprob: -10.850944519042969
    7. ' ]]' → logprob: -10.975944519042969
    8. ']]
' → logprob: -11.975944519042969
    9. ']]

' → logprob: -13.350944519042969
    10. '']]' → logprob: -13.475944519042969

Token 472: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1208588108420372
    2. '    
' → logprob: -2.495858907699585
    3. '
' → logprob: -4.745858669281006
    4. 'K' → logprob: -4.995858669281006
    5. '  
' → logprob: -5.120858669281006
    6. 'A' → logprob: -5.370858669281006
    7. '   
' → logprob: -6.620858669281006
    8. '#' → logprob: -6.870858669281006
    9. ' ' → logprob: -7.120858669281006
    10. ' K' → logprob: -7.120858669281006

Token 473: '   ' (ID: 271)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.44628286361694336
    2. 'A' → logprob: -1.4462828636169434
    3. '   ' → logprob: -2.3212828636169434
    4. '    
' → logprob: -4.196282863616943
    5. ' K' → logprob: -5.196282863616943
    6. ' A' → logprob: -6.321282863616943
    7. '
' → logprob: -6.571282863616943
    8. '#' → logprob: -6.821282863616943
    9. '  
' → logprob: -7.571282863616943
    10. ' ' → logprob: -8.196283340454102

Token 474: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.010214269161224365
    2. 'K' → logprob: -5.135214328765869
    3. '   ' → logprob: -5.635214328765869
    4. ' A' → logprob: -7.510214328765869
    5. '#' (adapté à ' #') → logprob: -8.885213851928711
    6. ' ' → logprob: -11.635213851928711
    7. ' K' → logprob: -12.135213851928711
    8. '    
' → logprob: -12.260213851928711
    9. '  ' → logprob: -14.635213851928711
    10. 'k' → logprob: -15.010213851928711

Token 475: ' Met' (ID: 7227)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07026161998510361
    2. 'K' → logprob: -2.6952617168426514
    3. '#' → logprob: -8.69526195526123
    4. ' A' → logprob: -9.07026195526123
    5. '   ' → logprob: -10.32026195526123
    6. ' K' → logprob: -11.69526195526123
    7. ' ' → logprob: -14.44526195526123
    8. '    
' → logprob: -14.44526195526123
    9. 'k' → logprob: -15.94526195526123
    10. '  ' → logprob: -16.695261001586914

Token 476: 'tre' (ID: 4086)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.13158521056175232
    2. 'it' → logprob: -3.006585121154785
    3. 'now' → logprob: -3.381585121154785
    4. 'A' → logprob: -4.506585121154785
    5. '=' → logprob: -5.381585121154785
    6. 'p' → logprob: -5.381585121154785
    7. '_now' → logprob: -5.631585121154785
    8. ' now' → logprob: -5.881585121154785
    9. 'iter' → logprob: -6.131585121154785
    10. '   ' → logprob: -6.256585121154785

Token 477: ' à' (ID: 1221)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002815693849697709
    2. '   ' → logprob: -6.2528157234191895
    3. 'K' → logprob: -7.8778157234191895
    4. 'à' → logprob: -8.377815246582031
    5. ' A' → logprob: -9.002815246582031
    6. 'À' → logprob: -9.752815246582031
    7. 'au' → logprob: -10.502815246582031
    8. 'l' → logprob: -11.252815246582031
    9. 'a' → logprob: -11.752815246582031
    10. 'la' → logprob: -11.752815246582031

Token 478: ' jour' (ID: 8379)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8010871410369873
    2. 'jour' → logprob: -1.1760871410369873
    3. ' jour' → logprob: -1.4260871410369873
    4. 'day' → logprob: -7.176087379455566
    5. 'Jour' → logprob: -7.426087379455566
    6. 'la' → logprob: -8.426087379455566
    7. 'jours' → logprob: -8.426087379455566
    8. 'l' → logprob: -8.926087379455566
    9. 'K' → logprob: -9.426087379455566
    10. '_A' → logprob: -9.426087379455566

Token 479: ' le' (ID: 505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -8.613945101387799e-05
    2. ' A' → logprob: -9.375085830688477
    3. 'K' → logprob: -13.875085830688477
    4. '   ' → logprob: -15.000085830688477
    5. ' ' → logprob: -18.250085830688477
    6. '    
' → logprob: -18.500085830688477
    7. '
' → logprob: -18.625085830688477
    8. '	A' → logprob: -18.625085830688477
    9. '  ' → logprob: -18.875085830688477
    10. '_A' → logprob: -19.250085830688477

Token 480: ' tableau' (ID: 67053)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0001600347168277949
    2. ' A' → logprob: -8.750160217285156
    3. 'K' → logprob: -13.750160217285156
    4. 'a' → logprob: -15.125160217285156
    5. ' ' → logprob: -15.875160217285156
    6. '   ' → logprob: -16.500160217285156
    7. '_A' → logprob: -17.375160217285156
    8. '  ' → logprob: -17.625160217285156
    9. '#' → logprob: -17.875160217285156
    10. 'k' → logprob: -18.625160217285156

Token 481: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006718690041452646
    2. ' A' → logprob: -5.006718635559082
    3. '   ' → logprob: -13.131718635559082
    4. '=A' → logprob: -14.131718635559082
    5. ' =' → logprob: -15.131718635559082
    6. '=' → logprob: -15.506718635559082
    7. '	A' → logprob: -17.2567195892334
    8. '```' → logprob: -18.2567195892334
    9. '`' → logprob: -18.3817195892334
    10. '[A' → logprob: -18.5067195892334

Token 482: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890080660581589
    2. ' =' → logprob: -2.5789008140563965
    3. '=A' → logprob: -11.453900337219238
    4. 'A' → logprob: -15.453900337219238
    5. '   ' → logprob: -16.078901290893555
    6. '=n' → logprob: -16.453901290893555
    7. ',' → logprob: -17.828901290893555
    8. ' A' → logprob: -18.328901290893555
    9. '[:]' → logprob: -18.328901290893555
    10. '=
' → logprob: -18.453901290893555

Token 483: ' qu' (ID: 474)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20149169862270355
    2. ' nex' → logprob: -1.7014917135238647
    3. ' n' → logprob: -9.826491355895996
    4. 'next' → logprob: -11.826491355895996
    5. '=' → logprob: -11.951491355895996
    6. '=n' → logprob: -12.451491355895996
    7. ' nxt' → logprob: -13.451491355895996
    8. ' next' → logprob: -13.701491355895996
    9. ' ne' → logprob: -14.201491355895996
    10. 'A' → logprob: -14.576491355895996

Token 484: ''il' (ID: 14683)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.17421852052211761
    2. ' A' → logprob: -2.0492184162139893
    3. '=A' → logprob: -4.674218654632568
    4. ' qu' → logprob: -5.299218654632568
    5. '#' → logprob: -5.799218654632568
    6. 'être' → logprob: -5.924218654632568
    7. '   ' → logprob: -6.299218654632568
    8. '=' → logprob: -6.424218654632568
    9. ' ' → logprob: -6.799218654632568
    10. ' soit' → logprob: -7.049218654632568

Token 485: ' dev' (ID: 3947)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001556163071654737
    2. ' =' → logprob: -6.501556396484375
    3. '=A' → logprob: -9.876556396484375
    4. 'A' → logprob: -13.751556396484375
    5. 's' → logprob: -15.001556396484375
    6. ' soit' → logprob: -15.376556396484375
    7. '=
' → logprob: -15.501556396484375
    8. ',' → logprob: -15.751556396484375
    9. '.=' → logprob: -16.126556396484375
    10. '=s' → logprob: -16.376556396484375

Token 486: 'ienne' (ID: 18387)
  Prédit: 'ienne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ienne' → logprob: -0.009532477706670761
    2. 'enne' → logprob: -6.134532451629639
    3. '[' → logprob: -6.884532451629639
    4. 'iennent' → logprob: -7.009532451629639
    5. 'iene' → logprob: -7.134532451629639
    6. '=' → logprob: -7.259532451629639
    7. ' =' → logprob: -7.759532451629639
    8. 'A' → logprob: -7.759532451629639
    9. 'ente' → logprob: -8.009532928466797
    10. 'ene' → logprob: -8.134532928466797

Token 487: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0052422950975596905
    2. ' nex' → logprob: -5.255242347717285
    3. ' n' → logprob: -12.005242347717285
    4. '[n' → logprob: -14.755242347717285
    5. '	n' → logprob: -14.880242347717285
    6. '```' → logprob: -14.880242347717285
    7. 'next' → logprob: -15.630242347717285
    8. '_n' → logprob: -16.13024139404297
    9. ' Nex' → logprob: -16.13024139404297
    10. ' nxt' → logprob: -16.13024139404297

Token 488: ' table' (ID: 3293)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.898723561083898e-05
    2. ' nex' → logprob: -10.000079154968262
    3. 'x' → logprob: -11.125079154968262
    4. 'next' → logprob: -11.250079154968262
    5. ' n' → logprob: -14.125079154968262
    6. '[' → logprob: -14.500079154968262
    7. 'prox' → logprob: -14.500079154968262
    8. 's' → logprob: -14.625079154968262
    9. 'ex' → logprob: -14.625079154968262
    10. '[n' → logprob: -14.625079154968262

Token 489: ' des' (ID: 731)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6912243366241455
    2. ' =' → logprob: -1.6912243366241455
    3. ' nex' → logprob: -1.6912243366241455
    4. '   ' → logprob: -2.8162243366241455
    5. ' n' → logprob: -3.5662243366241455
    6. 'A' → logprob: -3.9412243366241455
    7. ' A' → logprob: -5.316224098205566
    8. '=' → logprob: -5.691224098205566
    9. ' des' → logprob: -5.691224098205566
    10. ' nxt' → logprob: -5.816224098205566

Token 490: ' doubles' (ID: 65870)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017247559502720833
    2. 's' → logprob: -4.267247676849365
    3. 'sa' → logprob: -6.767247676849365
    4. 'p' → logprob: -7.267247676849365
    5. 'next' → logprob: -7.767247676849365
    6. 'salt' → logprob: -8.892247200012207
    7. 'm' → logprob: -9.142247200012207
    8. 'double' → logprob: -9.392247200012207
    9. 'su' → logprob: -9.392247200012207
    10. 'd' → logprob: -9.767247200012207

Token 491: ' sa' (ID: 880)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5372220873832703
    2. '   ' → logprob: -1.287222146987915
    3. ' ' → logprob: -2.787222146987915
    4. ' sa' → logprob: -2.912222146987915
    5. ' saut' → logprob: -4.912221908569336
    6. 'A' → logprob: -5.287221908569336
    7. ' A' → logprob: -5.412221908569336
    8. 'sa' → logprob: -5.662221908569336
    9. '  ' → logprob: -6.662221908569336
    10. '    
' → logprob: -8.162221908569336

Token 492: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -5.633853652398102e-05
    2. 'ut' → logprob: -10.625056266784668
    3. 'u' → logprob: -11.250056266784668
    4. 'pts' → logprob: -12.750056266784668
    5. 'A' → logprob: -13.125056266784668
    6. 'unts' → logprob: -13.750056266784668
    7. '[' → logprob: -13.875056266784668
    8. 'puts' → logprob: -14.000056266784668
    9. 'utions' → logprob: -14.125056266784668
    10. '	' → logprob: -14.250056266784668

Token 493: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03824562206864357
    2. '   ' → logprob: -3.288245677947998
    3. ' A' → logprob: -8.53824520111084
    4. '    
' → logprob: -13.28824520111084
    5. '  ' → logprob: -13.66324520111084
    6. ' ' → logprob: -13.78824520111084
    7. '	A' → logprob: -13.78824520111084
    8. ' =' → logprob: -14.16324520111084
    9. '=' → logprob: -14.16324520111084
    10. '
' → logprob: -14.28824520111084

Token 494: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03371589258313179
    2. ' A' → logprob: -3.5337159633636475
    3. '   ' → logprob: -5.533715724945068
    4. ' =' → logprob: -12.408716201782227
    5. '=' → logprob: -13.908716201782227
    6. ' ' → logprob: -14.658716201782227
    7. '=A' → logprob: -14.908716201782227
    8. '	A' → logprob: -15.033716201782227
    9. '    
' → logprob: -15.908716201782227
    10. '  ' → logprob: -16.283716201782227

Token 495: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.008624859154224396
    2. ' A' → logprob: -4.758625030517578
    3. '   ' → logprob: -11.508625030517578
    4. ' ' → logprob: -15.633625030517578
    5. '	A' → logprob: -16.508625030517578
    6. ' =' → logprob: -18.008625030517578
    7. '=' → logprob: -18.383625030517578
    8. '```' → logprob: -18.758625030517578
    9. '=A' → logprob: -18.883625030517578
    10. '_A' → logprob: -19.258625030517578

Token 496: ' Cela' (ID: 44403)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011921331752091646
    2. ' A' → logprob: -6.751192092895508
    3. '   ' → logprob: -10.751192092895508
    4. ' ' → logprob: -15.001192092895508
    5. '	A' → logprob: -16.501192092895508
    6. '  ' → logprob: -18.876192092895508
    7. '_A' → logprob: -20.376192092895508
    8. 'a' → logprob: -21.626192092895508
    9. 'Ａ' → logprob: -22.001192092895508
    10. '    ' → logprob: -22.251192092895508

Token 497: ' correspond' (ID: 11095)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2539724111557007
    2. ' =' → logprob: -1.5039724111557007
    3. '=A' → logprob: -6.50397253036499
    4. 'A' → logprob: -7.62897253036499
    5. ',' → logprob: -10.503972053527832
    6. ' A' → logprob: -10.628972053527832
    7. '   ' → logprob: -13.128972053527832
    8. ',A' → logprob: -13.503972053527832
    9. '=
' → logprob: -13.628972053527832
    10. ' ' → logprob: -14.878972053527832

Token 498: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.052934277802705765
    2. '=' → logprob: -3.677934169769287
    3. 'à' → logprob: -4.677934169769287
    4. 'A' → logprob: -4.802934169769287
    5. ' =' → logprob: -4.802934169769287
    6. ' to' → logprob: -9.052934646606445
    7. ' A' → logprob: -9.427934646606445
    8. ' a' → logprob: -9.552934646606445
    9. '=A' → logprob: -9.552934646606445
    10. '#' → logprob: -9.677934646606445

Token 499: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005547016044147313
    2. ' nex' → logprob: -7.50055456161499
    3. ' n' → logprob: -14.125555038452148
    4. '[n' → logprob: -14.500555038452148
    5. '	n' → logprob: -15.125555038452148
    6. 'A' → logprob: -15.875555038452148
    7. ' ' → logprob: -18.00055503845215
    8. '(n' → logprob: -18.12555503845215
    9. '   ' → logprob: -18.25055503845215
    10. '<n' → logprob: -18.37555503845215

Token 500: ' montée' (ID: 156495)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3546784520149231
    2. 'A' → logprob: -1.2296783924102783
    3. ' nex' → logprob: -6.479678630828857
    4. 'next' → logprob: -6.604678630828857
    5. ' n' → logprob: -7.479678630828857
    6. 'rem' → logprob: -7.604678630828857
    7. '[n' → logprob: -7.854678630828857
    8. 'nou' → logprob: -8.1046781539917
    9. ' A' → logprob: -8.7296781539917
    10. '[' → logprob: -9.1046781539917

Token 501: ' b' (ID: 287)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9115960597991943
    2. 'de' → logprob: -1.0365960597991943
    3. ' de' → logprob: -2.0365960597991943
    4. '   ' → logprob: -2.7865960597991943
    5. 'en' → logprob: -3.9115960597991943
    6. ' en' → logprob: -4.411596298217773
    7. ' A' → logprob: -5.786596298217773
    8. ' à' → logprob: -5.911596298217773
    9. 'à' → logprob: -6.036596298217773
    10. ' ' → logprob: -6.161596298217773

Token 502: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.060668472200632095
    2. 'in' → logprob: -3.185668468475342
    3. 'it' → logprob: -4.810668468475342
    4. 'inary' → logprob: -6.060668468475342
    5. '[' → logprob: -7.185668468475342
    6. 'itness' → logprob: -7.310668468475342
    7. 'iné' → logprob: -7.310668468475342
    8. 'y' → logprob: -7.435668468475342
    9. 'o' → logprob: -8.3106689453125
    10. 'le' → logprob: -8.5606689453125

Token 503: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06394076347351074
    2. 'A' → logprob: -3.5639407634735107
    3. ' A' → logprob: -3.9389407634735107
    4. '
' → logprob: -4.43894100189209
    5. '    
' → logprob: -6.31394100189209
    6. '	A' → logprob: -8.81394100189209
    7. ' 
' → logprob: -9.18894100189209
    8. ' ' → logprob: -9.81394100189209
    9. ',' → logprob: -10.06394100189209
    10. '  ' → logprob: -10.18894100189209

Token 504: ' utile' (ID: 68237)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04373385012149811
    2. 'A' → logprob: -3.793733835220337
    3. ' A' → logprob: -4.168734073638916
    4. ' K' → logprob: -5.793734073638916
    5. 'K' → logprob: -6.418734073638916
    6. ' ' → logprob: -9.793733596801758
    7. '    ' → logprob: -10.293733596801758
    8. '  ' → logprob: -10.668733596801758
    9. '	A' → logprob: -11.793733596801758
    10. 'k' → logprob: -13.043733596801758

Token 505: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4057322144508362
    2. ' pour' → logprob: -1.5307321548461914
    3. 'for' → logprob: -3.1557321548461914
    4. 'pour' → logprob: -3.2807321548461914
    5. ' for' → logprob: -3.7807321548461914
    6. ' à' → logprob: -4.530732154846191
    7. ' ' → logprob: -6.280732154846191
    8. '  ' → logprob: -7.530732154846191
    9. 'A' → logprob: -8.280732154846191
    10. '=' → logprob: -9.030732154846191

Token 506: ' traiter' (ID: 105852)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.602291226387024
    2. 'div' → logprob: -1.602291226387024
    3. 'optim' → logprob: -1.852291226387024
    4. 'effect' → logprob: -1.852291226387024
    5. 'le' → logprob: -3.1022911071777344
    6. 'faire' → logprob: -3.1022911071777344
    7. 'la' → logprob: -3.6022911071777344
    8. 'les' → logprob: -3.7272911071777344
    9. 'ré' → logprob: -3.7272911071777344
    10. 'acc' → logprob: -4.102291107177734

Token 507: ' rapidement' (ID: 43157)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.461742639541626
    2. 'les' → logprob: -1.586742639541626
    3. ' K' → logprob: -1.836742639541626
    4. 'de' → logprob: -2.336742639541626
    5. ' les' → logprob: -2.336742639541626
    6. 'des' → logprob: -2.586742639541626
    7. ' des' → logprob: -2.836742639541626
    8. ' de' → logprob: -3.461742639541626
    9. ' rapidement' → logprob: -4.336742401123047
    10. 'le' → logprob: -4.461742401123047

Token 508: ' les' (ID: 1341)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.503205418586731
    2. ' K' → logprob: -1.378205418586731
    3. 'les' → logprob: -3.2532052993774414
    4. 'le' → logprob: -3.2532052993774414
    5. ' les' → logprob: -3.3782052993774414
    6. ' des' → logprob: -5.003205299377441
    7. ' le' → logprob: -5.003205299377441
    8. 'des' → logprob: -5.378205299377441
    9. 'la' → logprob: -5.503205299377441
    10. 'l' → logprob: -5.628205299377441

Token 509: ' grands' (ID: 43085)
  Prédit: ' sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.23496907949447632
    2. 's' → logprob: -2.734969139099121
    3. ' grandes' → logprob: -3.734969139099121
    4. 'K' → logprob: -3.859969139099121
    5. 'ex' → logprob: -3.859969139099121
    6. ' grands' → logprob: -3.859969139099121
    7. ' K' → logprob: -4.359969139099121
    8. 'k' → logprob: -4.734969139099121
    9. 'gr' → logprob: -4.859969139099121
    10. ' déplacements' → logprob: -5.609969139099121

Token 510: ' K' (ID: 658)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0872852802276611
    2. ' sa' → logprob: -1.0872852802276611
    3. 'pas' → logprob: -1.7122852802276611
    4. 'K' → logprob: -2.837285280227661
    5. 'indices' → logprob: -3.337285280227661
    6. 'k' → logprob: -4.212285041809082
    7. ' K' → logprob: -4.462285041809082
    8. 'sa' → logprob: -4.837285041809082
    9. ' pas' → logprob: -5.462285041809082
    10. 'sal' → logprob: -6.337285041809082

Token 511: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5125263333320618
    2. '   ' → logprob: -1.262526273727417
    3. ' A' → logprob: -2.137526273727417
    4. ' ' → logprob: -9.512526512145996
    5. '	A' → logprob: -10.512526512145996
    6. '    
' → logprob: -10.887526512145996
    7. '  ' → logprob: -11.512526512145996
    8. '
' → logprob: -13.012526512145996
    9. '    ' → logprob: -13.887526512145996
    10. '_A' → logprob: -14.637526512145996

Token 512: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16861341893672943
    2. ' A' → logprob: -1.9186134338378906
    3. '   ' → logprob: -4.793613433837891
    4. '	A' → logprob: -10.79361343383789
    5. ' ' → logprob: -11.16861343383789
    6. ' =' → logprob: -11.29361343383789
    7. '    
' → logprob: -11.41861343383789
    8. '=' → logprob: -12.41861343383789
    9. ' 
' → logprob: -12.79361343383789
    10. '=A' → logprob: -13.41861343383789

Token 513: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0019295861711725593
    2. ' A' → logprob: -6.251929759979248
    3. '   ' → logprob: -13.87692928314209
    4. ' ' → logprob: -16.751930236816406
    5. '	A' → logprob: -17.626930236816406
    6. '_A' → logprob: -20.751930236816406
    7. '  ' → logprob: -20.876930236816406
    8. '```' → logprob: -21.251930236816406
    9. '=A' → logprob: -21.251930236816406
    10. 'Ａ' → logprob: -21.626930236816406

Token 514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815146580338478
    2. ' =' → logprob: -4.01815128326416
    3. '=n' → logprob: -13.39315128326416
    4. '.=' → logprob: -18.018152236938477
    5. ',' → logprob: -18.393152236938477
    6. '＝' → logprob: -18.518152236938477
    7. '=A' → logprob: -19.393152236938477
    8. '[:]' → logprob: -19.768152236938477
    9. '=N' → logprob: -19.893152236938477
    10. 'n' → logprob: -20.518152236938477

Token 515: ' nex' (ID: 92763)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003607555292546749
    2. ' nex' → logprob: -5.628607749938965
    3. ' n' → logprob: -12.128607749938965
    4. '	n' → logprob: -14.253607749938965
    5. ' ' → logprob: -14.878607749938965
    6. '[n' → logprob: -15.003607749938965
    7. 'ne' → logprob: -15.378607749938965
    8. ' Nex' → logprob: -16.56610679626465
    9. '(n' → logprob: -16.69110679626465
    10. 'ned' → logprob: -17.00360679626465

Token 516: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31680968403816223
    2. 'K' → logprob: -1.3168096542358398
    3. ' K' → logprob: -6.31680965423584
    4. '    
' → logprob: -7.19180965423584
    5. '
' → logprob: -8.19180965423584
    6. '>>' → logprob: -8.44180965423584
    7. '	K' → logprob: -8.69180965423584
    8. '>K' → logprob: -9.06680965423584
    9. '>>>' → logprob: -9.81680965423584
    10. ',K' → logprob: -9.94180965423584

Token 517: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032311868853867054
    2. ' K' → logprob: -6.003231048583984
    3. 'K' → logprob: -7.628231048583984
    4. '    
' → logprob: -8.378231048583984
    5. '
' → logprob: -10.753231048583984
    6. '    ' → logprob: -11.753231048583984
    7. ' 
' → logprob: -12.628231048583984
    8. '	K' → logprob: -13.378231048583984
    9. '   
' → logprob: -13.503231048583984
    10. '  
' → logprob: -14.253231048583984

Token 518: ' #' (ID: 1069)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.001562000485137105
    2. '   ' → logprob: -6.501562118530273
    3. ' K' → logprob: -9.751562118530273
    4. '	K' → logprob: -14.001562118530273
    5. '>K' → logprob: -15.501562118530273
    6. '  ' → logprob: -16.001562118530273
    7. '    
' → logprob: -16.126562118530273
    8. '
' → logprob: -16.376562118530273
    9. ' ' → logprob: -16.751562118530273
    10. '```' → logprob: -17.251562118530273

Token 519: ' Déc' (ID: 56995)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -7.941850526549388e-06
    2. ' K' → logprob: -11.750007629394531
    3. '#' → logprob: -18.50000762939453
    4. 'k' → logprob: -19.62500762939453
    5. '   ' → logprob: -20.00000762939453
    6. '
' → logprob: -21.37500762939453
    7. '	K' → logprob: -22.12500762939453
    8. '>K' → logprob: -23.00000762939453
    9. 'Ｋ' → logprob: -23.37500762939453
    10. '
' → logprob: -24.37500762939453

Token 520: 'aler' (ID: 13534)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.22467531263828278
    2. 'K' → logprob: -1.7246752977371216
    3. 'r' → logprob: -5.224675178527832
    4. '=' → logprob: -5.974675178527832
    5. ' K' → logprob: -6.099675178527832
    6. 'ide' → logprob: -6.224675178527832
    7. 'ale' → logprob: -6.349675178527832
    8. 'l' → logprob: -6.849675178527832
    9. '   ' → logprob: -6.974675178527832
    10. '>>>' → logprob: -6.974675178527832

Token 521: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.02324768900871277
    2. ' K' → logprob: -3.773247718811035
    3. '   ' → logprob: -13.523247718811035
    4. ' ' → logprob: -15.023247718811035
    5. '>K' → logprob: -15.773247718811035
    6. '>>>' → logprob: -15.898247718811035
    7. '	K' → logprob: -16.02324676513672
    8. '>>' → logprob: -16.14824676513672
    9. '  ' → logprob: -16.52324676513672
    10. '>' → logprob: -17.64824676513672

Token 522: ' d' (ID: 272)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.38807249069213867
    2. ' >>=' → logprob: -1.1380724906921387
    3. '=' → logprob: -7.263072490692139
    4. '//=' → logprob: -8.013072967529297
    5. ' ' → logprob: -10.263072967529297
    6. '>>>' → logprob: -10.388072967529297
    7. ' right' → logprob: -10.763072967529297
    8. 'K' → logprob: -10.888072967529297
    9. ')>>' → logprob: -11.138072967529297
    10. 'Right' → logprob: -11.263072967529297

Token 523: ''un' (ID: 9788)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4718204438686371
    2. 'e' → logprob: -1.4718204736709595
    3. 'roit' → logprob: -2.97182035446167
    4. 'ro' → logprob: -3.34682035446167
    5. 'iv' → logprob: -4.72182035446167
    6. 'eux' → logprob: -4.84682035446167
    7. '```' → logprob: -4.97182035446167
    8. 'i' → logprob: -5.22182035446167
    9. ''un' → logprob: -5.34682035446167
    10. ' ' → logprob: -5.47182035446167

Token 524: ' bit' (ID: 3546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05757245048880577
    2. ' bit' → logprob: -3.432572364807129
    3. ' ' → logprob: -4.182572364807129
    4. 'bit' → logprob: -4.932572364807129
    5. 'e' → logprob: -8.432572364807129
    6. 'c' → logprob: -8.807572364807129
    7. ' coup' → logprob: -8.807572364807129
    8. 'd' → logprob: -9.557572364807129
    9. '0' → logprob: -10.182572364807129
    10. '```' → logprob: -10.307572364807129

Token 525: ' vers' (ID: 3640)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.7564253211021423
    2. ' >>=' → logprob: -0.8814253211021423
    3. ' K' → logprob: -3.381425380706787
    4. 'K' → logprob: -3.381425380706787
    5. ' right' → logprob: -3.881425380706787
    6. 'right' → logprob: -4.506425380706787
    7. '=' → logprob: -5.256425380706787
    8. '1' → logprob: -5.506425380706787
    9. '>>>' → logprob: -5.756425380706787
    10. 'Right' → logprob: -6.256425380706787

Token 526: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.040412500500679016
    2. 'right' → logprob: -3.915412425994873
    3. 'l' → logprob: -4.665412425994873
    4. ' droite' → logprob: -5.290412425994873
    5. '1' → logprob: -5.540412425994873
    6. 'dro' → logprob: -7.915412425994873
    7. ' la' → logprob: -8.040412902832031
    8. '>' → logprob: -9.415412902832031
    9. 'le' → logprob: -9.915412902832031
    10. '>>' → logprob: -10.040412902832031

Token 527: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6498766541481018
    2. 'dro' → logprob: -1.274876594543457
    3. '1' → logprob: -1.899876594543457
    4. ' droite' → logprob: -3.399876594543457
    5. 'd' → logprob: -5.399876594543457
    6. '>' → logprob: -6.399876594543457
    7. ' right' → logprob: -6.399876594543457
    8. '-dro' → logprob: -6.649876594543457
    9. 'Dro' → logprob: -6.649876594543457
    10. ' ' → logprob: -7.149876594543457

Token 528: ' (' (ID: 350)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.30559325218200684
    2. ' K' → logprob: -1.6805932521820068
    3. '>>' → logprob: -2.805593252182007
    4. '   ' → logprob: -4.430593490600586
    5. '>K' → logprob: -6.180593490600586
    6. ' >>=' → logprob: -6.805593490600586
    7. '>>>' → logprob: -6.930593490600586
    8. '>' → logprob: -8.180593490600586
    9. '=' → logprob: -9.055593490600586
    10. '	K' → logprob: -10.055593490600586

Token 529: 'division' (ID: 50596)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.03812732920050621
    2. ' K' → logprob: -3.2881274223327637
    3. '>K' → logprob: -10.413126945495605
    4. 'k' → logprob: -11.163126945495605
    5. '>>' → logprob: -11.413126945495605
    6. '1' → logprob: -11.788126945495605
    7. ')' → logprob: -11.913126945495605
    8. '   ' → logprob: -12.663126945495605
    9. '=' → logprob: -12.913126945495605
    10. ' >>=' → logprob: -13.413126945495605

Token 530: ' entière' (ID: 61583)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.29469749331474304
    2. ' entière' → logprob: -1.5446975231170654
    3. ' ' → logprob: -4.169697284698486
    4. 'par' → logprob: -4.919697284698486
    5. ' by' → logprob: -5.794697284698486
    6. '   ' → logprob: -5.919697284698486
    7. '//' → logprob: -6.044697284698486
    8. ' integer' → logprob: -6.544697284698486
    9. 'integer' → logprob: -6.794697284698486
    10. '>>' → logprob: -6.919697284698486

Token 531: ' par' (ID: 686)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.6946696043014526
    2. ' >>=' → logprob: -2.194669723510742
    3. ')' → logprob: -2.444669723510742
    4. '>>' → logprob: -2.569669723510742
    5. 'K' → logprob: -2.694669723510742
    6. ' K' → logprob: -2.819669723510742
    7. '=' → logprob: -3.194669723510742
    8. '   ' → logprob: -3.694669723510742
    9. 'by' → logprob: -4.444669723510742
    10. ' ' → logprob: -5.694669723510742

Token 532: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20141372084617615
    2. ' ' → logprob: -1.7014137506484985
    3. ' ' → logprob: -15.326414108276367
    4. '```' → logprob: -15.826414108276367
    5. ' deux' → logprob: -15.951414108276367
    6. 'de' → logprob: -17.951414108276367
    7. '1' → logprob: -18.951414108276367
    8. 'Deux' → logprob: -19.576414108276367
    9. ' Deux' → logprob: -19.826414108276367
    10. ' ' → logprob: -19.951414108276367

Token 533: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -18.75009536743164
    4. '   ' → logprob: -21.50009536743164
    5. 'de' → logprob: -21.75009536743164
    6. ' ' → logprob: -21.87509536743164
    7. '1' → logprob: -22.00009536743164
    8. '２' → logprob: -22.50009536743164
    9. '=' → logprob: -22.62509536743164
    10. '>' → logprob: -23.12509536743164

Token 534: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02889534831047058
    2. '<|end|>' → logprob: -3.903895378112793
    3. '   ' → logprob: -5.403895378112793
    4. '>>>' → logprob: -6.903895378112793
    5. ')
' → logprob: -7.028895378112793
    6. 'K' → logprob: -7.653895378112793
    7. '>>' → logprob: -8.028895378112793
    8. '<|end|>' → logprob: -8.403895378112793
    9. '>K' → logprob: -8.653895378112793
    10. ')>>' → logprob: -9.028895378112793

Token 535: '   ' (ID: 271)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.355777770280838
    2. ' K' → logprob: -1.8557777404785156
    3. '=' → logprob: -1.9807777404785156
    4. ' =' → logprob: -5.480777740478516
    5. '   ' → logprob: -7.355777740478516
    6. ' >>=' → logprob: -9.855777740478516
    7. '=
' → logprob: -10.230777740478516
    8. '```' → logprob: -10.230777740478516
    9. ' <<=' → logprob: -10.355777740478516
    10. '>K' → logprob: -10.480777740478516

Token 536: ' #' (ID: 1069)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.001929228543303907
    2. ' K' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.37692928314209
    4. '>K' → logprob: -20.376928329467773
    5. '	K' → logprob: -20.751928329467773
    6. 'k' → logprob: -20.751928329467773
    7. '  ' → logprob: -21.626928329467773
    8. ' ' → logprob: -21.751928329467773
    9. ',K' → logprob: -22.751928329467773
    10. '```' → logprob: -22.876928329467773

Token 537: ' Cela' (ID: 44403)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.008618712425231934
    2. ' K' → logprob: -4.7586188316345215
    3. '   ' → logprob: -12.383618354797363
    4. ' ' → logprob: -19.00861930847168
    5. '	K' → logprob: -19.25861930847168
    6. '  ' → logprob: -19.38361930847168
    7. 'k' → logprob: -20.50861930847168
    8. '    ' → logprob: -21.38361930847168
    9. '>K' → logprob: -21.50861930847168
    10. ' ' → logprob: -22.75861930847168

Token 538: ' permet' (ID: 11798)
  Prédit: ' >>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >>=' → logprob: -0.10181479156017303
    2. '>>' → logprob: -2.3518147468566895
    3. '=' → logprob: -7.1018147468566895
    4. '//=' → logprob: -7.8518147468566895
    5. ' >>' → logprob: -8.601815223693848
    6. ' =' → logprob: -9.226815223693848
    7. ' //' → logprob: -9.476815223693848
    8. ' ' → logprob: -11.476815223693848
    9. '>>>' → logprob: -11.976815223693848
    10. ' <<=' → logprob: -12.226815223693848

Token 539: ' de' (ID: 334)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.4299548268318176
    2. 'K' → logprob: -1.0549547672271729
    3. '   ' → logprob: -6.929955005645752
    4. '	K' → logprob: -9.304954528808594
    5. '=' → logprob: -9.804954528808594
    6. ' de' → logprob: -9.929954528808594
    7. '    ' → logprob: -10.679954528808594
    8. ' d' → logprob: -11.304954528808594
    9. ' ' → logprob: -11.429954528808594
    10. '  ' → logprob: -12.054954528808594

Token 540: ' traiter' (ID: 105852)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.38687291741371155
    2. ' K' → logprob: -1.1368728876113892
    3. ' ' → logprob: -13.511873245239258
    4. 'k' → logprob: -15.886873245239258
    5. '>K' → logprob: -15.886873245239258
    6. '  ' → logprob: -17.136873245239258
    7. '    ' → logprob: -17.136873245239258
    8. '>' → logprob: -17.261873245239258
    9. '	K' → logprob: -17.511873245239258
    10. '   ' → logprob: -17.761873245239258

Token 541: ' le' (ID: 505)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.1602402776479721
    2. 'K' → logprob: -1.9102402925491333
    3. '<|end|>' → logprob: -11.660240173339844
    4. ' ' → logprob: -12.535240173339844
    5. '>K' → logprob: -14.160240173339844
    6. ' the' → logprob: -14.285240173339844
    7. '	K' → logprob: -14.285240173339844
    8. '<|end|>' → logprob: -14.660240173339844
    9. ',K' → logprob: -15.285240173339844
    10. '    ' → logprob: -15.535240173339844

Token 542: ' bit' (ID: 3546)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.25252342224121094
    2. 'K' → logprob: -1.502523422241211
    3. ' next' → logprob: -8.002523422241211
    4. '>' → logprob: -9.502523422241211
    5. ' ' → logprob: -10.002523422241211
    6. '>>' → logprob: -10.627523422241211
    7. 'next' → logprob: -10.752523422241211
    8. '>>>' → logprob: -10.877523422241211
    9. '>K' → logprob: -11.002523422241211
    10. 'k' → logprob: -11.877523422241211

Token 543: ' suivant' (ID: 68705)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.028084559366106987
    2. ' ' → logprob: -4.778084754943848
    3. ' >>=' → logprob: -4.778084754943848
    4. 'K' → logprob: -4.903084754943848
    5. '>>' → logprob: -7.028084754943848
    6. ' >>' → logprob: -7.028084754943848
    7. '>' → logprob: -7.528084754943848
    8. '   ' → logprob: -8.403084754943848
    9. '>>>' → logprob: -8.528084754943848
    10. ' right' → logprob: -8.653084754943848

Token 544: ' lors' (ID: 15456)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.31328654289245605
    2. ' K' → logprob: -1.313286542892456
    3. '=' → logprob: -11.938286781311035
    4. '>K' → logprob: -12.063286781311035
    5. '   ' → logprob: -12.563286781311035
    6. ' >>=' → logprob: -12.813286781311035
    7. '>>' → logprob: -12.938286781311035
    8. '>>>' → logprob: -13.813286781311035
    9. ' =' → logprob: -14.438286781311035
    10. '	K' → logprob: -14.688286781311035

Token 545: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08699759095907211
    2. ' K' → logprob: -4.0869975090026855
    3. ' la' → logprob: -4.2119975090026855
    4. ' que' → logprob: -4.3369975090026855
    5. '   ' → logprob: -4.9619975090026855
    6. ' d' → logprob: -4.9619975090026855
    7. ' du' → logprob: -5.0869975090026855
    8. ' of' → logprob: -5.5869975090026855
    9. '#' → logprob: -5.7119975090026855
    10. 'de' → logprob: -6.0869975090026855

Token 546: ' la' (ID: 557)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.1616893708705902
    2. ' K' → logprob: -1.9116894006729126
    3. ' ' → logprob: -8.036689758300781
    4. 'the' → logprob: -8.161689758300781
    5. ' the' → logprob: -8.536689758300781
    6. ' each' → logprob: -8.911689758300781
    7. ' this' → logprob: -8.911689758300781
    8. '#' → logprob: -9.661689758300781
    9. 'each' → logprob: -9.661689758300781
    10. 'this' → logprob: -9.911689758300781

Token 547: ' prochaine' (ID: 78876)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4933624267578125
    2. ' next' → logprob: -1.7433624267578125
    3. 'while' → logprob: -1.9933624267578125
    4. '#' → logprob: -2.2433624267578125
    5. 'next' → logprob: -2.3683624267578125
    6. '>>' → logprob: -2.6183624267578125
    7. 'K' → logprob: -3.4933624267578125
    8. ' K' → logprob: -3.6183624267578125
    9. ' right' → logprob: -3.6183624267578125
    10. 'shift' → logprob: -3.9933624267578125

Token 548: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.6348935961723328
    2. ' iteration' → logprob: -1.2598936557769775
    3. 'iteration' → logprob: -2.5098936557769775
    4. ' ' → logprob: -2.7598936557769775
    5. 'it' → logprob: -3.5098936557769775
    6. 'while' → logprob: -5.259893417358398
    7. ' boucle' → logprob: -5.759893417358398
    8. ' while' → logprob: -6.634893417358398
    9. ' iter' → logprob: -7.009893417358398
    10. ' loop' → logprob: -8.134893417358398

Token 549: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.002185118617489934
    2. 'er' → logprob: -6.252185344696045
    3. 'érations' → logprob: -9.127184867858887
    4. 'ér' → logprob: -9.377184867858887
    5. 'érée' → logprob: -10.752184867858887
    6. 'éré' → logprob: -11.252184867858887
    7. 'K' → logprob: -11.752184867858887
    8. 'érateur' → logprob: -12.752184867858887
    9. '>>' → logprob: -13.002184867858887
    10. 'èr' → logprob: -13.002184867858887

Token 550: '
' (ID: 198)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.16123351454734802
    2. ' K' → logprob: -1.9112335443496704
    3. '   ' → logprob: -6.911233425140381
    4. '	K' → logprob: -11.411233901977539
    5. ' ' → logprob: -14.036233901977539
    6. '  ' → logprob: -15.036233901977539
    7. '>K' → logprob: -16.16123390197754
    8. '    ' → logprob: -17.16123390197754
    9. '/K' → logprob: -17.41123390197754
    10. ',K' → logprob: -17.78623390197754

Token 551: '   ' (ID: 271)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.03627030923962593
    2. ' K' → logprob: -3.5362703800201416
    3. '   ' → logprob: -5.0362701416015625
    4. '	K' → logprob: -14.786270141601562
    5. ' ' → logprob: -16.036270141601562
    6. '```' → logprob: -16.161270141601562
    7. '  ' → logprob: -16.786270141601562
    8. '>K' → logprob: -16.911270141601562
    9. '    
' → logprob: -17.411270141601562
    10. '
' → logprob: -17.661270141601562

Token 552: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' (adapté à ' K') → logprob: -1.688212614681106e-05
    2. ' K' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.625017166137695
    4. '>K' → logprob: -21.250017166137695
    5. 'k' → logprob: -21.375017166137695
    6. '	K' → logprob: -21.750017166137695
    7. '```' → logprob: -21.750017166137695
    8. '  ' → logprob: -24.000017166137695
    9. ',K' → logprob: -24.125017166137695
    10. '    
' → logprob: -24.250017166137695

Token 553: ' >>=' (ID: 81952)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.907554030418396
    2. '>>' → logprob: -1.157554030418396
    3. ' >>=' → logprob: -1.282554030418396
    4. '=' → logprob: -6.0325541496276855
    5. ' //' → logprob: -6.0325541496276855
    6. '>' → logprob: -9.782553672790527
    7. '//' → logprob: -11.157553672790527
    8. ' =' → logprob: -11.407553672790527
    9. '≫' → logprob: -11.657553672790527
    10. '>>>' → logprob: -12.157553672790527

Token 554: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -19.375015258789062
    4. '   ' → logprob: -20.625015258789062
    5. '１' → logprob: -21.375015258789062
    6. '  ' → logprob: -21.625015258789062
    7. ' ' → logprob: -21.812515258789062
    8. '۱' → logprob: -22.687515258789062
    9. '' → logprob: -23.125015258789062
    10. '১' → logprob: -23.312515258789062

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -20.625
    4. '۱' → logprob: -21.75
    5. '１' → logprob: -22.25
    6. '১' → logprob: -22.625
    7. '   ' → logprob: -23.0
    8. '' → logprob: -23.375
    9. '<|end|>' → logprob: -23.4375
    10. '0' → logprob: -23.5625

Token 556: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006621609791181982
    2. '
' → logprob: -7.500662326812744
    3. ' print' → logprob: -9.250661849975586
    4. '

' → logprob: -11.375661849975586
    5. '```' → logprob: -14.375661849975586
    6. ' 
' → logprob: -14.750661849975586
    7. '  
' → logprob: -15.875661849975586
    8. '#' → logprob: -15.875661849975586
    9. '(print' → logprob: -16.125661849975586
    10. '#print' → logprob: -16.125661849975586

Token 557: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005261152982711792
    2. '
' → logprob: -5.255260944366455
    3. ' print' → logprob: -11.005261421203613
    4. '```' → logprob: -11.880261421203613
    5. '

' → logprob: -13.005261421203613
    6. '
' → logprob: -14.255261421203613
    7. '  
' → logprob: -15.005261421203613
    8. ' 
' → logprob: -16.005260467529297
    9. '\n' → logprob: -16.130260467529297
    10. '``' → logprob: -16.255260467529297

Token 558: ' À' (ID: 27643)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.75
    3. '```' → logprob: -22.0
    4. '
' → logprob: -23.625
    5. 'printf' → logprob: -24.875
    6. '#print' → logprob: -25.125
    7. 'pr' → logprob: -26.75
    8. 'sys' → logprob: -26.75
    9. 'import' → logprob: -27.125
    10. '   ' → logprob: -27.25

Token 559: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026722108013927937
    2. 'dd' → logprob: -7.12767219543457
    3. 'pp' → logprob: -7.25267219543457
    4. 'rr' → logprob: -7.75267219543457
    5. 'r' → logprob: -8.25267219543457
    6. 'rray' → logprob: -8.87767219543457
    7. '#' → logprob: -9.87767219543457
    8. 'rg' → logprob: -10.12767219543457
    9. 'rt' → logprob: -10.25267219543457
    10. ' print' → logprob: -10.62767219543457

Token 560: ' fin' (ID: 2131)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003799104888457805
    2. ' print' → logprob: -8.37537956237793
    3. 'pp' → logprob: -10.37537956237793
    4. 'nd' → logprob: -10.50037956237793
    5. 'final' → logprob: -10.75037956237793
    6. 'bout' → logprob: -11.37537956237793
    7. 'stdout' → logprob: -12.00037956237793
    8. 'output' → logprob: -12.50037956237793
    9. 'sys' → logprob: -12.50037956237793
    10. 'finally' → logprob: -12.50037956237793

Token 561: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010735770774772391
    2. ' print' → logprob: -9.750107765197754
    3. '
' → logprob: -10.000107765197754
    4. '(print' → logprob: -12.750107765197754
    5. ',' → logprob: -14.750107765197754
    6. '.print' → logprob: -15.875107765197754
    7. '#' → logprob: -16.750106811523438
    8. ',
' → logprob: -17.125106811523438
    9. '

' → logprob: -17.750106811523438
    10. '(' → logprob: -17.750106811523438

Token 562: ' toutes' (ID: 17502)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.125
    4. 'pr' → logprob: -18.75
    5. 'la' → logprob: -19.375
    6. '#' → logprob: -19.75
    7. '```' → logprob: -20.125
    8. ' ' → logprob: -20.375
    9. 'python' → logprob: -20.5
    10. 'sys' → logprob: -20.625

Token 563: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5125349164009094
    2. 'le' → logprob: -1.6375348567962646
    3. 'la' → logprob: -1.8875348567962646
    4. 'print' → logprob: -3.5125348567962646
    5. '#' → logprob: -4.762535095214844
    6. ' l' → logprob: -5.262535095214844
    7. 'les' → logprob: -5.762535095214844
    8. ' la' → logprob: -6.012535095214844
    9. '(l' → logprob: -7.137535095214844
    10. 'leur' → logprob: -7.137535095214844

Token 564: ' opérations' (ID: 102793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018341571558266878
    2. ' print' → logprob: -6.876834392547607
    3. 'prints' → logprob: -8.87683391571045
    4. '#' → logprob: -9.25183391571045
    5. 'im' → logprob: -9.25183391571045
    6. 'instructions' → logprob: -9.50183391571045
    7. 'bou' → logprob: -9.87683391571045
    8. 'import' → logprob: -10.37683391571045
    9. 'ré' → logprob: -10.50183391571045
    10. '   ' → logprob: -10.75183391571045

Token 565: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.25
    3. ' print' → logprob: -15.625
    4. '(print' → logprob: -16.75
    5. '```' → logprob: -19.75
    6. '#print' → logprob: -19.875
    7. '#' → logprob: -20.625
    8. 'pr' → logprob: -21.75
    9. '.print' → logprob: -22.125
    10. '(' → logprob: -22.375

Token 566: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.75
    3. '
' → logprob: -25.75
    4. '```' → logprob: -25.875
    5. '   ' → logprob: -27.0
    6. 'printf' → logprob: -27.75
    7. '#print' → logprob: -28.25
    8. '	print' → logprob: -28.25
    9. 'sys' → logprob: -28.375
    10. 'Print' → logprob: -29.625

Token 567: ' la' (ID: 557)
  Prédit: '(now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.07890333980321884
    2. 'now' → logprob: -2.5789034366607666
    3. 'print' → logprob: -11.328903198242188
    4. ' now' → logprob: -14.328903198242188
    5. '(print' → logprob: -14.453903198242188
    6. '[now' → logprob: -14.578903198242188
    7. '_now' → logprob: -18.078903198242188
    8. '	now' → logprob: -18.828903198242188
    9. '(' → logprob: -19.203903198242188
    10. 'Now' → logprob: -19.703903198242188

Token 568: ' position' (ID: 4010)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.01110995002090931
    2. 'print' → logprob: -4.511109828948975
    3. '(now' → logprob: -10.636110305786133
    4. 'r' → logprob: -11.011110305786133
    5. 'result' → logprob: -11.386110305786133
    6. ' now' → logprob: -12.261110305786133
    7. 'ow' → logprob: -13.511110305786133
    8. '[now' → logprob: -13.886110305786133
    9. 'position' → logprob: -14.136110305786133
    10. 'nown' → logprob: -14.886110305786133

Token 569: ' actuelle' (ID: 104951)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016636352520436049
    2. '(now' → logprob: -6.751663684844971
    3. '(print' → logprob: -8.001663208007812
    4. 'now' → logprob: -8.751663208007812
    5. '(' → logprob: -16.001663208007812
    6. ' print' → logprob: -16.126663208007812
    7. '[now' → logprob: -17.876663208007812
    8. '#print' → logprob: -18.001663208007812
    9. ' now' → logprob: -18.251663208007812
    10. 'Print' → logprob: -19.126663208007812

Token 570: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1875571544806007e-05
    2. 'now' → logprob: -12.125011444091797
    3. '(print' → logprob: -12.500011444091797
    4. '(now' → logprob: -13.125011444091797
    5. '
' → logprob: -14.875011444091797
    6. ' print' → logprob: -16.125011444091797
    7. '(' → logprob: -16.250011444091797
    8. '```' → logprob: -16.375011444091797
    9. '()
' → logprob: -16.750011444091797
    10. '()' → logprob: -18.500011444091797

Token 571: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.5
    3. '```' → logprob: -18.5
    4. '(print' → logprob: -23.5
    5. '``' → logprob: -25.0
    6. 'printf' → logprob: -25.125
    7. 'Print' → logprob: -25.25
    8. '#print' → logprob: -25.75
    9. '	print' → logprob: -26.125
    10. '_print' → logprob: -26.375

Token 572: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.25001335144043
    3. 'now' → logprob: -15.50001335144043
    4. '(n' → logprob: -16.87501335144043
    5. '[now' → logprob: -17.12501335144043
    6. '(no' → logprob: -18.25001335144043
    7. '()' → logprob: -18.37501335144043
    8. ' now' → logprob: -19.37501335144043
    9. '(not' → logprob: -19.75001335144043
    10. '((' → logprob: -20.00001335144043

Token 573: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.000000953674316
    3. '))' → logprob: -16.875001907348633
    4. ')
' → logprob: -17.375001907348633
    5. ')`' → logprob: -17.625001907348633
    6. ')#' → logprob: -18.500001907348633
    7. '`)' → logprob: -19.375001907348633
    8. ')}' → logprob: -19.375001907348633
    9. '())' → logprob: -20.000001907348633
    10. '})' → logprob: -20.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 571
Tokens correctement prédits (1ère position, stricte): 125
Tokens correctement prédits (1ère position, avec adaptation): 129
Tokens correctement prédits (top 10): 314
Précision stricte (1ère position): 21.89%
Précision adaptée (1ère position): 22.59%
Précision (top 10): 54.99%
================================================================================
