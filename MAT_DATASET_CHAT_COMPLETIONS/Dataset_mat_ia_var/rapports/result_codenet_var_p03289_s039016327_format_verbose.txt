================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

input_string_as_list = list(input())

if input_string_as_list[0] == 'A':

    del input_string_as_list[0]

    substring_middle = input_string_as_list[1:-1]

    count_uppercase_C_in_middle = substring_middle.count('C')

    if count_uppercase_C_in_middle == 1:

        input_string_as_list.remove('C')

        for character_index in range(len(input_string_as_list)):

            if input_string_as_list[character_index].isupper():

                print('WA')
                sys.exit()

        print('AC')

    else:

        print('WA')

else:

    print('WA')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: '_string' (ID: 8609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036376076750457287
    2. '.' → logprob: -5.753637790679932
    3. '(
' → logprob: -9.003637313842773
    4. ' (' → logprob: -9.503637313842773
    5. '()' → logprob: -9.503637313842773
    6. ')' → logprob: -10.003637313842773
    7. '_' → logprob: -10.253637313842773
    8. '('' → logprob: -11.253637313842773
    9. ''' → logprob: -11.378637313842773
    10. '[' → logprob: -11.378637313842773

Token 5: '_as' (ID: 25206)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6163806319236755
    2. '[' → logprob: -1.1163806915283203
    3. ')' → logprob: -2.8663806915283203
    4. '.' → logprob: -3.1163806915283203
    5. '=' → logprob: -3.7413806915283203
    6. '_' → logprob: -5.86638069152832
    7. '()' → logprob: -6.99138069152832
    8. ''' → logprob: -7.24138069152832
    9. ' =' → logprob: -7.74138069152832
    10. ',' → logprob: -7.74138069152832

Token 6: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9225941896438599
    2. '_string' → logprob: -1.4225941896438599
    3. '_bytes' → logprob: -2.5475940704345703
    4. '_str' → logprob: -2.6725940704345703
    5. '_s' → logprob: -2.6725940704345703
    6. 's' → logprob: -2.9225940704345703
    7. '_input' → logprob: -3.7975940704345703
    8. 'cii' → logprob: -3.9225940704345703
    9. '_list' → logprob: -4.79759407043457
    10. ' =' → logprob: -5.17259407043457

Token 7: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03812158480286598
    2. '=' → logprob: -3.6631217002868652
    3. '[' → logprob: -4.663121700286865
    4. ' =' → logprob: -7.163121700286865
    5. '_' → logprob: -7.538121700286865
    6. '[:]' → logprob: -7.788121700286865
    7. ')' → logprob: -8.913121223449707
    8. '()' → logprob: -9.038121223449707
    9. '.' → logprob: -9.163121223449707
    10. '(
' → logprob: -9.788121223449707

Token 8: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9937189817428589
    2. ' list' → logprob: -1.2437189817428589
    3. ' []' → logprob: -1.2437189817428589
    4. '[]' → logprob: -2.9937191009521484
    5. ' sys' → logprob: -6.993719100952148
    6. ' [' → logprob: -7.368719100952148
    7. 'sys' → logprob: -7.493719100952148
    8. 'input' → logprob: -7.868719100952148
    9. '[list' → logprob: -8.368719100952148
    10. '[' → logprob: -9.118719100952148

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038010270800441504
    2. '(input' → logprob: -5.628800868988037
    3. '((' → logprob: -10.253801345825195
    4. '(sys' → logprob: -10.503801345825195
    5. '('' → logprob: -10.753801345825195
    6. '("("' → logprob: -11.003801345825195
    7. '(user' → logprob: -11.253801345825195
    8. '(
' → logprob: -11.378801345825195
    9. '(eval' → logprob: -11.503801345825195
    10. '(open' → logprob: -11.628801345825195

Token 10: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010113373398780823
    2. '()))' → logprob: -5.38511323928833
    3. ')' → logprob: -5.76011323928833
    4. '()' → logprob: -6.51011323928833
    5. '(' → logprob: -7.88511323928833
    6. '))' → logprob: -8.635113716125488
    7. ' ())' → logprob: -8.760113716125488
    8. '().' → logprob: -9.135113716125488
    9. '('' → logprob: -12.135113716125488
    10. '())
' → logprob: -12.260113716125488

Token 11: 'if' (ID: 366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07604878395795822
    2. ')' → logprob: -3.8260488510131836
    3. '[' → logprob: -3.9510488510131836
    4. '+' → logprob: -4.076048851013184
    5. '_' → logprob: -5.201048851013184
    6. '#' → logprob: -5.576048851013184
    7. '=' → logprob: -6.451048851013184
    8. ' ' → logprob: -6.826048851013184
    9. '(' → logprob: -7.451048851013184
    10. '.strip' → logprob: -8.326048851013184

Token 12: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030406713485717773
    2. 'input' → logprob: -4.155406951904297
    3. '  ' → logprob: -5.280406951904297
    4. ' input' → logprob: -5.655406951904297
    5. ''' → logprob: -6.280406951904297
    6. ' not' → logprob: -6.905406951904297
    7. ' len' → logprob: -6.905406951904297
    8. '"' → logprob: -7.030406951904297
    9. 'len' → logprob: -7.780406951904297
    10. '_' → logprob: -8.655406951904297

Token 13: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.03012590855360031
    2. '_' → logprob: -3.530125856399536
    3. ' _' → logprob: -9.780125617980957
    4. 'string' → logprob: -9.905125617980957
    5. '_strings' → logprob: -10.030125617980957
    6. '_str' → logprob: -10.155125617980957
    7. '_s' → logprob: -10.655125617980957
    8. '```' → logprob: -10.780125617980957
    9. '()' → logprob: -11.030125617980957
    10. 'String' → logprob: -11.155125617980957

Token 14: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -0.0018969867378473282
    2. '_' → logprob: -7.126896858215332
    3. '_string' → logprob: -8.001896858215332
    4. '[' → logprob: -8.126896858215332
    5. '[_' → logprob: -8.501896858215332
    6. '.startswith' → logprob: -9.876896858215332
    7. '[:' → logprob: -10.751896858215332
    8. '_As' → logprob: -10.751896858215332
    9. '"_' → logprob: -10.876896858215332
    10. '```' → logprob: -11.376896858215332

Token 15: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.08972927927970886
    2. '_' → logprob: -2.4647293090820312
    3. '_l' → logprob: -7.964729309082031
    4. ' _' → logprob: -9.214729309082031
    5. '_li' → logprob: -9.214729309082031
    6. '_string' → logprob: -9.589729309082031
    7. '_lists' → logprob: -10.089729309082031
    8. '_lst' → logprob: -10.214729309082031
    9. '_ls' → logprob: -10.964729309082031
    10. '_str' → logprob: -11.214729309082031

Token 16: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00441706320270896
    2. ':' → logprob: -5.7544169425964355
    3. '[:]' → logprob: -7.7544169425964355
    4. '[:' → logprob: -8.629417419433594
    5. '[-' → logprob: -8.754417419433594
    6. '[i' → logprob: -9.254417419433594
    7. '.' → logprob: -9.879417419433594
    8. '[]' → logprob: -9.879417419433594
    9. '[len' → logprob: -10.254417419433594
    10. '==' → logprob: -10.504417419433594

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006544163916260004
    2. ' ' → logprob: -7.375654220581055
    3. '1' → logprob: -11.250654220581055
    4. '-' → logprob: -11.500654220581055
    5. '==' → logprob: -14.125654220581055
    6. ')' → logprob: -14.250654220581055
    7. '2' → logprob: -14.813154220581055
    8. ']' → logprob: -14.813154220581055
    9. ':' → logprob: -14.938154220581055
    10. ' ==' → logprob: -14.938154220581055

Token 18: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2949865162372589
    2. '==' → logprob: -1.5449864864349365
    3. '=' → logprob: -4.169986724853516
    4. ' !=' → logprob: -5.044986724853516
    5. ' ' → logprob: -5.044986724853516
    6. ']' → logprob: -5.794986724853516
    7. '!=' → logprob: -5.794986724853516
    8. '.' → logprob: -6.044986724853516
    9. '[' → logprob: -6.044986724853516
    10. ')' → logprob: -6.169986724853516

Token 19: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3273651599884033
    2. '==' → logprob: -1.4523651599884033
    3. '.' → logprob: -3.7023651599884033
    4. '=' → logprob: -4.202364921569824
    5. ' !=' → logprob: -6.452364921569824
    6. '!=' → logprob: -6.702364921569824
    7. ' in' → logprob: -7.327364921569824
    8. '>' → logprob: -7.702364921569824
    9. ' ' → logprob: -8.077364921569824
    10. '<' → logprob: -8.327364921569824

Token 20: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20562228560447693
    2. '"' → logprob: -2.4556221961975098
    3. ' '' → logprob: -2.7056221961975098
    4. ' "' → logprob: -4.95562219619751
    5. ' '"'' → logprob: -5.20562219619751
    6. ''-' → logprob: -5.58062219619751
    7. ''"' → logprob: -5.83062219619751
    8. ' '('' → logprob: -6.08062219619751
    9. ''a' → logprob: -6.33062219619751
    10. ' "'"' → logprob: -6.33062219619751

Token 21: 'A' (ID: 32)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5893888473510742
    2. 'a' → logprob: -2.214388847351074
    3. '-' → logprob: -2.339388847351074
    4. '"' → logprob: -3.339388847351074
    5. 'A' → logprob: -3.589388847351074
    6. 'h' → logprob: -3.839388847351074
    7. 'i' → logprob: -4.339388847351074
    8. '?' → logprob: -4.589388847351074
    9. 'H' → logprob: -4.714388847351074
    10. '0' → logprob: -4.714388847351074

Token 22: '':

' (ID: 143071)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7143595814704895
    2. '':' → logprob: -0.7143595814704895
    3. ''):' → logprob: -3.9643595218658447
    4. '')' → logprob: -7.089359760284424
    5. ':' → logprob: -7.464359760284424
    6. ' ':' → logprob: -8.589359283447266
    7. '):' → logprob: -9.714359283447266
    8. '':'' → logprob: -9.839359283447266
    9. ''s' → logprob: -10.464359283447266
    10. 'b' → logprob: -10.589359283447266

Token 23: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05724557861685753
    2. ' :' → logprob: -2.9322454929351807
    3. ' ' → logprob: -7.43224573135376
    4. '   ' → logprob: -7.55724573135376
    5. ' print' → logprob: -8.057245254516602
    6. '[' → logprob: -8.557245254516602
    7. ' and' → logprob: -8.557245254516602
    8. ':
' → logprob: -9.182245254516602
    9. 'print' → logprob: -9.682245254516602
    10. 'n' → logprob: -9.932245254516602

Token 24: ' del' (ID: 1083)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.9081598520278931
    2. ' ' → logprob: -1.783159852027893
    3. ' pass' → logprob: -1.783159852027893
    4. 'print' → logprob: -2.6581597328186035
    5. '   ' → logprob: -3.1581597328186035
    6. ' input' → logprob: -3.2831597328186035
    7. '    ' → logprob: -3.9081597328186035
    8. ' sys' → logprob: -4.4081597328186035
    9. ' `' → logprob: -4.6581597328186035
    10. ' if' → logprob: -4.9081597328186035

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.020546209067106247
    2. 'input' → logprob: -3.8955461978912354
    3. ' ' → logprob: -13.145545959472656
    4. '(input' → logprob: -13.395545959472656
    5. '[input' → logprob: -14.895545959472656
    6. '=input' → logprob: -16.270545959472656
    7. ' ' → logprob: -16.645545959472656
    8. '_input' → logprob: -16.770545959472656
    9. ' space' → logprob: -17.020545959472656
    10. '	input' → logprob: -17.020545959472656

Token 26: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0006378580583259463
    2. '_' → logprob: -7.500638008117676
    3. ' _' → logprob: -10.000638008117676
    4. '_s' → logprob: -11.750638008117676
    5. '_str' → logprob: -12.000638008117676
    6. 'string' → logprob: -12.125638008117676
    7. '```' → logprob: -12.125638008117676
    8. '__' → logprob: -12.750638008117676
    9. '(' → logprob: -13.250638008117676
    10. '(_' → logprob: -13.500638008117676

Token 27: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -8.08944896562025e-05
    2. '_' → logprob: -10.000081062316895
    3. '_string' → logprob: -10.500081062316895
    4. ' _' → logprob: -12.625081062316895
    5. '_s' → logprob: -13.875081062316895
    6. '_As' → logprob: -14.125081062316895
    7. '```' → logprob: -14.625081062316895
    8. '_a' → logprob: -14.875081062316895
    9. '_str' → logprob: -15.375081062316895
    10. '__' → logprob: -15.625081062316895

Token 28: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.825890159234405e-05
    2. 'list' → logprob: -10.000068664550781
    3. '_' → logprob: -11.000068664550781
    4. 's' → logprob: -13.375068664550781
    5. '_l' → logprob: -13.875068664550781
    6. 'ist' → logprob: -14.000068664550781
    7. '_string' → logprob: -14.250068664550781
    8. 'alist' → logprob: -14.750068664550781
    9. 'List' → logprob: -15.125068664550781
    10. '_as' → logprob: -15.375068664550781

Token 29: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.0536883615423e-05
    2. '[:]' → logprob: -10.875080108642578
    3. '\[' → logprob: -11.250080108642578
    4. '[-' → logprob: -11.250080108642578
    5. '[]' → logprob: -11.750080108642578
    6. '0' → logprob: -12.250080108642578
    7. '[
' → logprob: -12.625080108642578
    8. ' [' → logprob: -12.750080108642578
    9. '.' → logprob: -12.875080108642578
    10. ' ' → logprob: -13.125080108642578

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005311904475092888
    2. '1' → logprob: -5.255311965942383
    3. ' ' → logprob: -9.880311965942383
    4. '-' → logprob: -11.005311965942383
    5. '2' → logprob: -12.505311965942383
    6. ']' → logprob: -13.255311965942383
    7. '3' → logprob: -13.505311965942383
    8. '4' → logprob: -14.005311965942383
    9. '   ' → logprob: -14.380311965942383
    10. '5' → logprob: -14.817811965942383

Token 31: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00025001514586620033
    2. ')' → logprob: -8.875249862670898
    3. ' ]' → logprob: -9.375249862670898
    4. '']' → logprob: -10.625249862670898
    5. ')]' → logprob: -14.750249862670898
    6. '])' → logprob: -15.875249862670898
    7. '}' → logprob: -16.1252498626709
    8. ']
' → logprob: -16.5002498626709
    9. '"]' → logprob: -16.5002498626709
    10. ' ' → logprob: -17.1252498626709

Token 32: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' substring' (ID: 89494)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.918215274810791
    2. 'print' → logprob: -1.543215274810791
    3. ':' → logprob: -2.043215274810791
    4. '[' → logprob: -2.418215274810791
    5. 'if' → logprob: -3.168215274810791
    6. 'input' → logprob: -3.918215274810791
    7. '#' → logprob: -4.168215274810791
    8. '.' → logprob: -4.293215274810791
    9. ' if' → logprob: -4.543215274810791
    10. ')' → logprob: -4.543215274810791

Token 34: '_middle' (ID: 155207)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31022191047668457
    2. '_' → logprob: -1.8102219104766846
    3. '=' → logprob: -2.6852219104766846
    4. 's' → logprob: -4.1852216720581055
    5. '_start' → logprob: -4.9352216720581055
    6. '_length' → logprob: -5.6852216720581055
    7. '_index' → logprob: -6.3102216720581055
    8. '_to' → logprob: -6.9352216720581055
    9. '_from' → logprob: -7.1852216720581055
    10. '_indices' → logprob: -7.8102216720581055

Token 35: ' =' (ID: 314)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.6986910700798035
    2. '_' → logprob: -1.1986911296844482
    3. '=' → logprob: -2.3236911296844482
    4. ' =' → logprob: -2.8236911296844482
    5. '_idx' → logprob: -3.6986911296844482
    6. 's' → logprob: -4.573690891265869
    7. '_start' → logprob: -5.948690891265869
    8. '_of' → logprob: -6.323690891265869
    9. '_pos' → logprob: -6.823690891265869
    10. '_chars' → logprob: -7.573690891265869

Token 36: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3144683539867401
    2. ' input' → logprob: -1.3144683837890625
    3. 'len' → logprob: -8.189468383789062
    4. ''' → logprob: -8.564468383789062
    5. ' len' → logprob: -8.814468383789062
    6. ' ' → logprob: -9.189468383789062
    7. ' ''.' → logprob: -9.314468383789062
    8. '''.' → logprob: -9.314468383789062
    9. '"' → logprob: -9.439468383789062
    10. ' '' → logprob: -10.064468383789062

Token 37: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.2664456789934775e-06
    2. 'string' → logprob: -13.750000953674316
    3. '_' → logprob: -17.125001907348633
    4. 'String' → logprob: -17.750001907348633
    5. '_str' → logprob: -17.750001907348633
    6. '```' → logprob: -18.250001907348633
    7. '_STRING' → logprob: -18.625001907348633
    8. '_strings' → logprob: -19.000001907348633
    9. '_String' → logprob: -19.500001907348633
    10. '_token' → logprob: -19.625001907348633

Token 38: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -0.0008825227851048112
    2. '_' → logprob: -7.625882625579834
    3. '[' → logprob: -8.875882148742676
    4. 'As' → logprob: -9.500882148742676
    5. '_As' → logprob: -10.250882148742676
    6. '_string' → logprob: -10.625882148742676
    7. '_a' → logprob: -11.000882148742676
    8. '__' → logprob: -11.125882148742676
    9. '```' → logprob: -11.125882148742676
    10. 's' → logprob: -11.500882148742676

Token 39: '_list' (ID: 4162)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.09792892634868622
    2. '_list' → logprob: -2.472929000854492
    3. 'ist' → logprob: -4.722929000854492
    4. 'string' → logprob: -11.347929000854492
    5. 'id' → logprob: -11.722929000854492
    6. 'st' → logprob: -11.847929000854492
    7. 'iddle' → logprob: -12.097929000854492
    8. 'List' → logprob: -12.097929000854492
    9. 'plit' → logprob: -12.472929000854492
    10. 'li' → logprob: -13.597929000854492

Token 40: '[' (ID: 58)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.8194907903671265
    2. '[' → logprob: -1.0694907903671265
    3. '[:-' → logprob: -1.8194907903671265
    4. '[len' → logprob: -3.319490909576416
    5. '[:' → logprob: -4.319490909576416
    6. '[::-' → logprob: -6.819490909576416
    7. '.pop' → logprob: -7.069490909576416
    8. '[-' → logprob: -7.319490909576416
    9. '<|end|>' → logprob: -7.694490909576416
    10. '[int' → logprob: -7.694490909576416

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6368077397346497
    2. 'len' → logprob: -1.2618076801300049
    3. ':' → logprob: -2.136807680130005
    4. ':-' → logprob: -3.511807680130005
    5. ':]' → logprob: -4.261807918548584
    6. '-' → logprob: -4.261807918548584
    7. ':int' → logprob: -5.386807918548584
    8. '2' → logprob: -6.761807918548584
    9. '0' → logprob: -6.886807918548584
    10. '(len' → logprob: -7.136807918548584

Token 42: ':-' (ID: 20118)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.6515231728553772
    2. ':' → logprob: -0.7765231728553772
    3. ']' → logprob: -4.151523113250732
    4. ':-' → logprob: -6.276523113250732
    5. ' :]' → logprob: -7.026523113250732
    6. ' :' → logprob: -8.77652359008789
    7. '1' → logprob: -10.90152359008789
    8. ':].' → logprob: -11.27652359008789
    9. ':end' → logprob: -11.77652359008789
    10. ' ]' → logprob: -12.02652359008789

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002326767658814788
    2. '2' → logprob: -6.127326965332031
    3. '3' → logprob: -9.252326965332031
    4. '4' → logprob: -11.002326965332031
    5. '5' → logprob: -11.439826965332031
    6. '6' → logprob: -12.752326965332031
    7. '-' → logprob: -13.002326965332031
    8. ' ' → logprob: -13.002326965332031
    9. '7' → logprob: -13.502326965332031
    10. '```' → logprob: -13.627326965332031

Token 44: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001422770437784493
    2. ')' → logprob: -9.375142097473145
    3. ' ]' → logprob: -10.250142097473145
    4. '']' → logprob: -11.875142097473145
    5. ']
' → logprob: -12.125142097473145
    6. ']

' → logprob: -13.000142097473145
    7. ':]' → logprob: -13.375142097473145
    8. '   ' → logprob: -13.750142097473145
    9. '[' → logprob: -13.875142097473145
    10. ')]' → logprob: -14.375142097473145

Token 45: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6936906576156616
    2. '[' → logprob: -1.0686906576156616
    3. ':' → logprob: -3.193690776824951
    4. '[:]' → logprob: -3.318690776824951
    5. '<|end|>' → logprob: -3.568690776824951
    6. ' ' → logprob: -3.818690776824951
    7. '   ' → logprob: -5.193690776824951
    8. ')' → logprob: -5.318690776824951
    9. '.' → logprob: -5.568690776824951
    10. ':
' → logprob: -6.068690776824951

Token 46: ' count' (ID: 3605)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26672786474227905
    2. '[' → logprob: -2.266727924346924
    3. ' ' → logprob: -3.766727924346924
    4. ')' → logprob: -4.141727924346924
    5. '   ' → logprob: -4.391727924346924
    6. '+' → logprob: -4.391727924346924
    7. 'substring' → logprob: -4.516727924346924
    8. '=' → logprob: -4.766727924346924
    9. '.' → logprob: -5.391727924346924
    10. ':' → logprob: -5.391727924346924

Token 47: '_upper' (ID: 82658)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09535481035709381
    2. 's' → logprob: -3.2203547954559326
    3. '(' → logprob: -3.4703547954559326
    4. '=' → logprob: -4.720355033874512
    5. '_sub' → logprob: -5.720355033874512
    6. 'substring' → logprob: -5.845355033874512
    7. ' =' → logprob: -6.470355033874512
    8. '(sub' → logprob: -6.970355033874512
    9. '_spaces' → logprob: -7.845355033874512
    10. '_s' → logprob: -7.970355033874512

Token 48: 'case' (ID: 9994)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8893349170684814
    2. '=' → logprob: -1.1393349170684814
    3. 's' → logprob: -1.7643349170684814
    4. '_letters' → logprob: -3.3893349170684814
    5. '()' → logprob: -3.7643349170684814
    6. 'case' → logprob: -4.014334678649902
    7. ' =' → logprob: -4.639334678649902
    8. '_chars' → logprob: -5.639334678649902
    9. '_=' → logprob: -5.889334678649902
    10. ')' → logprob: -6.514334678649902

Token 49: '_C' (ID: 1720)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6592662930488586
    2. '_' → logprob: -1.7842662334442139
    3. 's' → logprob: -2.034266233444214
    4. ' =' → logprob: -2.159266233444214
    5. '_letters' → logprob: -3.284266233444214
    6. '(' → logprob: -4.034266471862793
    7. '_chars' → logprob: -5.034266471862793
    8. ')' → logprob: -6.034266471862793
    9. ' ' → logprob: -6.284266471862793
    10. '_=' → logprob: -7.534266471862793

Token 50: '_in' (ID: 2267)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45848730206489563
    2. ' =' → logprob: -1.3334872722625732
    3. 's' → logprob: -2.3334872722625732
    4. '_' → logprob: -5.083487510681152
    5. ' ' → logprob: -7.458487510681152
    6. '  ' → logprob: -8.833487510681152
    7. 'S' → logprob: -9.708487510681152
    8. ')' → logprob: -9.958487510681152
    9. '_chars' → logprob: -9.958487510681152
    10. '   ' → logprob: -10.583487510681152

Token 51: '_middle' (ID: 155207)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'substring' → logprob: -0.1774301677942276
    2. ' substring' → logprob: -1.9274301528930664
    3. '_sub' → logprob: -4.177430152893066
    4. '_' → logprob: -7.177430152893066
    5. '=' → logprob: -7.677430152893066
    6. ' =' → logprob: -8.677430152893066
    7. 'sub' → logprob: -9.052430152893066
    8. '(sub' → logprob: -10.177430152893066
    9. ' ' → logprob: -10.177430152893066
    10. '	sub' → logprob: -10.302430152893066

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6774182319641113
    2. '=' → logprob: -0.8024182319641113
    3. 's' → logprob: -3.3024182319641113
    4. '_' → logprob: -5.052418231964111
    5. ' ' → logprob: -8.302417755126953
    6. '(' → logprob: -9.052417755126953
    7. ')' → logprob: -9.427417755126953
    8. '   ' → logprob: -9.677417755126953
    9. '  ' → logprob: -10.177417755126953
    10. '_=' → logprob: -11.552417755126953

Token 53: ' substring' (ID: 89494)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5101612210273743
    2. 'input' → logprob: -1.7601611614227295
    3. ' sum' → logprob: -2.5101611614227295
    4. 'sum' → logprob: -2.6351611614227295
    5. 'substring' → logprob: -3.1351611614227295
    6. ' substring' → logprob: -3.5101611614227295
    7. 'substr' → logprob: -8.010161399841309
    8. ' ' → logprob: -8.260161399841309
    9. ' substr' → logprob: -9.135161399841309
    10. ' [' → logprob: -9.260161399841309

Token 54: '_middle' (ID: 155207)
  Prédit: '_middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_middle' → logprob: -7.941850526549388e-06
    2. '_' → logprob: -12.500007629394531
    3. '_medium' → logprob: -13.250007629394531
    4. '_mid' → logprob: -13.625007629394531
    5. '_m' → logprob: -13.875007629394531
    6. '_lower' → logprob: -16.25000762939453
    7. 'middle' → logprob: -16.25000762939453
    8. '_more' → logprob: -17.50000762939453
    9. '_upper' → logprob: -17.87500762939453
    10. '_length' → logprob: -18.25000762939453

Token 55: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.005241583567112684
    2. '.' → logprob: -5.255241394042969
    3. 'count' → logprob: -12.755241394042969
    4. ' .' → logprob: -13.505241394042969
    5. '.Count' → logprob: -13.630241394042969
    6. '.c' → logprob: -13.880241394042969
    7. '.filter' → logprob: -15.255241394042969
    8. ').' → logprob: -15.755241394042969
    9. '.upper' → logprob: -15.755241394042969
    10. '.lower' → logprob: -15.880241394042969

Token 56: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.012624661438167095
    2. '(' → logprob: -4.387624740600586
    3. '("' → logprob: -9.137624740600586
    4. '(C' → logprob: -12.887624740600586
    5. '(('' → logprob: -13.137624740600586
    6. '("("' → logprob: -13.887624740600586
    7. ''' → logprob: -13.887624740600586
    8. '('_' → logprob: -15.637624740600586
    9. '(
' → logprob: -15.762624740600586
    10. ''C' → logprob: -16.137624740600586

Token 57: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0002647927321959287
    2. ''C' → logprob: -8.250265121459961
    3. ' C' → logprob: -13.375265121459961
    4. ''' → logprob: -13.500265121459961
    5. 'С' → logprob: -15.875265121459961
    6. ')' → logprob: -16.12526512145996
    7. 'A' → logprob: -16.50026512145996
    8. '')' → logprob: -16.50026512145996
    9. '"C' → logprob: -16.62526512145996
    10. 'B' → logprob: -17.25026512145996

Token 58: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0023364010266959667
    2. ')' → logprob: -6.252336502075195
    3. ''' → logprob: -8.002336502075195
    4. '')
' → logprob: -9.752336502075195
    5. ' ')' → logprob: -12.377336502075195
    6. '')

' → logprob: -12.502336502075195
    7. '")' → logprob: -13.252336502075195
    8. '   ' → logprob: -13.877336502075195
    9. '')
' → logprob: -14.377336502075195
    10. 'C' → logprob: -14.502336502075195

Token 59: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2874426543712616
    2. ')' → logprob: -2.037442684173584
    3. '<|end|>' → logprob: -2.537442684173584
    4. '#' → logprob: -4.787442684173584
    5. ' ' → logprob: -5.162442684173584
    6. 'if' (adapté à ' if') → logprob: -5.412442684173584
    7. ':' → logprob: -5.662442684173584
    8. ' if' → logprob: -5.912442684173584
    9. '<|end|>' → logprob: -6.287442684173584
    10. '    ' → logprob: -6.287442684173584

Token 61: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.014287383295595646
    2. 'count' → logprob: -4.26428747177124
    3. ' input' → logprob: -9.264286994934082
    4. '    ' → logprob: -11.514286994934082
    5. ' counts' → logprob: -12.639286994934082
    6. '(count' → logprob: -12.764286994934082
    7. '	count' → logprob: -13.014286994934082
    8. ' ' → logprob: -13.264286994934082
    9. '_count' → logprob: -13.514286994934082
    10. 'input' → logprob: -13.514286994934082

Token 62: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -9.746380237629637e-05
    2. '_' → logprob: -9.250097274780273
    3. '_up' → logprob: -15.250097274780273
    4. '_lower' → logprob: -15.375097274780273
    5. '>' → logprob: -15.875097274780273
    6. ' _' → logprob: -16.125097274780273
    7. '```' → logprob: -16.625097274780273
    8. '.upper' → logprob: -16.750097274780273
    9. 'uppercase' → logprob: -16.875097274780273
    10. ' ' → logprob: -17.125097274780273

Token 63: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.009345421567559242
    2. 'ase' → logprob: -5.009345531463623
    3. 'C' → logprob: -6.759345531463623
    4. '_case' → logprob: -7.009345531463623
    5. 'uppercase' → logprob: -8.759345054626465
    6. 'Case' → logprob: -9.384345054626465
    7. 'CASE' → logprob: -9.384345054626465
    8. '```' → logprob: -10.134345054626465
    9. 'code' → logprob: -10.884345054626465
    10. '_C' → logprob: -10.884345054626465

Token 64: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.07034085690975189
    2. '_' → logprob: -2.695340871810913
    3. 'C' → logprob: -9.070341110229492
    4. '('_' → logprob: -9.820341110229492
    5. '_c' → logprob: -10.570341110229492
    6. ' _' → logprob: -10.570341110229492
    7. ')' → logprob: -10.695341110229492
    8. ''_' → logprob: -10.695341110229492
    9. '```' → logprob: -10.695341110229492
    10. ' ' → logprob: -10.945341110229492

Token 65: '_in' (ID: 2267)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.34532245993614197
    2. ' ==' → logprob: -2.345322370529175
    3. '>' → logprob: -2.470322370529175
    4. ' ' → logprob: -2.720322370529175
    5. ' >=' → logprob: -3.720322370529175
    6. '==' → logprob: -4.470322608947754
    7. '  ' → logprob: -5.720322608947754
    8. '_' → logprob: -6.345322608947754
    9. ' <' → logprob: -6.345322608947754
    10. '>=' → logprob: -7.095322608947754

Token 66: '_middle' (ID: 155207)
  Prédit: '_middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_middle' → logprob: -0.25692856311798096
    2. 'middle' → logprob: -1.506928563117981
    3. 'iddle' → logprob: -6.131928443908691
    4. 'in' → logprob: -7.256928443908691
    5. ''m' → logprob: -8.256928443908691
    6. '_m' → logprob: -8.256928443908691
    7. '_upper' → logprob: -8.756928443908691
    8. 'substring' → logprob: -8.881928443908691
    9. '['' → logprob: -9.131928443908691
    10. ''' → logprob: -9.256928443908691

Token 67: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.32427558302879333
    2. ' >=' → logprob: -2.199275493621826
    3. ' >' → logprob: -2.199275493621826
    4. '==' → logprob: -3.324275493621826
    5. '>' → logprob: -4.199275493621826
    6. '>=' → logprob: -5.699275493621826
    7. ' ' → logprob: -7.824275493621826
    8. ' <=' → logprob: -8.699275970458984
    9. ' <' → logprob: -9.324275970458984
    10. '   ' → logprob: -9.949275970458984

Token 68: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4369109869003296
    2. '1' → logprob: -1.0619109869003296
    3. '2' → logprob: -4.811911106109619
    4. '0' → logprob: -11.186910629272461
    5. '  ' → logprob: -11.561910629272461
    6. '   ' → logprob: -12.186910629272461
    7. ' ' → logprob: -12.749410629272461
    8. '3' → logprob: -12.936910629272461
    9. '(' → logprob: -13.311910629272461
    10. 'exact' → logprob: -13.624410629272461

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10155290365219116
    2. '2' → logprob: -2.726552963256836
    3. ' ' → logprob: -3.476552963256836
    4. '   ' → logprob: -9.601552963256836
    5. '```' → logprob: -10.226552963256836
    6. '  ' → logprob: -10.601552963256836
    7. '0' → logprob: -11.289052963256836
    8. '>' → logprob: -11.289052963256836
    9. 'exact' → logprob: -11.289052963256836
    10. ':' → logprob: -11.851552963256836

Token 70: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -7.755678961984813e-05
    2. ' and' → logprob: -10.250077247619629
    3. ':
' → logprob: -11.250077247619629
    4. '):' → logprob: -12.000077247619629
    5. '   ' → logprob: -12.125077247619629
    6. '       ' → logprob: -12.250077247619629
    7. ' :' → logprob: -12.375077247619629
    8. ',' → logprob: -13.250077247619629
    9. ':**' → logprob: -13.375077247619629
    10. '<|end|>' → logprob: -13.500077247619629

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026516243815422058
    2. ' print' → logprob: -4.651516437530518
    3. '   ' → logprob: -5.151516437530518
    4. '    ' → logprob: -5.276516437530518
    5. 'print' → logprob: -5.901516437530518
    6. ':' → logprob: -7.026516437530518
    7. ' and' → logprob: -7.526516437530518
    8. ' if' → logprob: -8.27651596069336
    9. '        ' → logprob: -8.40151596069336
    10. '     ' → logprob: -8.65151596069336

Token 72: ' input' (ID: 3422)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2656436860561371
    2. ' print' → logprob: -1.7656437158584595
    3. 'if' → logprob: -3.51564359664917
    4. ' if' → logprob: -3.89064359664917
    5. '       ' → logprob: -5.01564359664917
    6. '   ' → logprob: -6.14064359664917
    7. '    ' → logprob: -7.01564359664917
    8. '        ' → logprob: -7.51564359664917
    9. ' pass' → logprob: -7.89064359664917
    10. 'pass' → logprob: -8.140644073486328

Token 73: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -3.845798710244708e-05
    2. 'string' → logprob: -10.500038146972656
    3. 'String' → logprob: -12.000038146972656
    4. '_' → logprob: -13.375038146972656
    5. '_str' → logprob: -13.500038146972656
    6. '_strings' → logprob: -14.750038146972656
    7. '()' → logprob: -14.875038146972656
    8. '```' → logprob: -15.375038146972656
    9. '_length' → logprob: -16.000038146972656
    10. '('_' → logprob: -16.125038146972656

Token 74: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -0.003417958738282323
    2. 'As' → logprob: -6.75341796875
    3. '_' → logprob: -8.25341796875
    4. 'as' → logprob: -8.37841796875
    5. '<|end|>' → logprob: -8.62841796875
    6. '_upper' → logprob: -9.00341796875
    7. '.pop' → logprob: -9.12841796875
    8. '_lower' → logprob: -9.12841796875
    9. '[' → logprob: -9.12841796875
    10. '_join' → logprob: -9.25341796875

Token 75: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0023805228993296623
    2. 'ist' → logprob: -6.25238037109375
    3. 'list' → logprob: -8.00238037109375
    4. '_as' → logprob: -9.62738037109375
    5. 'st' → logprob: -11.12738037109375
    6. '```' → logprob: -11.25238037109375
    7. 's' → logprob: -11.87738037109375
    8. 'List' → logprob: -12.50238037109375
    9. 'isted' → logprob: -12.62738037109375
    10. 'string' → logprob: -13.00238037109375

Token 76: '.remove' (ID: 7986)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4195789396762848
    2. '.pop' → logprob: -1.6695789098739624
    3. '.sort' → logprob: -3.044579029083252
    4. '.remove' → logprob: -3.044579029083252
    5. '.insert' → logprob: -3.919579029083252
    6. '.reverse' → logprob: -4.044579029083252
    7. '[-' → logprob: -4.669579029083252
    8. '<|end|>' → logprob: -4.919579029083252
    9. '[' → logprob: -6.294579029083252
    10. '[:]' → logprob: -6.919579029083252

Token 77: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0017371822614222765
    2. ''C' → logprob: -6.876737117767334
    3. '(' → logprob: -7.751737117767334
    4. ''' → logprob: -8.251737594604492
    5. '("' → logprob: -12.001737594604492
    6. ''S' → logprob: -13.001737594604492
    7. ' '' → logprob: -13.501737594604492
    8. ''s' → logprob: -13.501737594604492
    9. ''A' → logprob: -14.876737594604492
    10. '(
' → logprob: -15.376737594604492

Token 78: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.7954958821064793e-05
    2. ''C' → logprob: -11.500018119812012
    3. ')' → logprob: -12.875018119812012
    4. 'B' → logprob: -13.000018119812012
    5. 'A' → logprob: -13.750018119812012
    6. '')' → logprob: -14.000018119812012
    7. ''' → logprob: -14.500018119812012
    8. ' C' → logprob: -15.000018119812012
    9. 'c' → logprob: -16.750017166137695
    10. ']' → logprob: -17.625017166137695

Token 79: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.4824526906013489
    2. ')' → logprob: -1.482452630996704
    3. '       ' → logprob: -1.982452630996704
    4. ')

' → logprob: -4.857452869415283
    5. '')

' → logprob: -5.232452869415283
    6. '')
' → logprob: -6.107452869415283
    7. ')
' → logprob: -6.732452869415283
    8. ''' → logprob: -7.857452869415283
    9. ']' → logprob: -8.732452392578125
    10. '   ' → logprob: -9.107452392578125

Token 80: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1961696594953537
    2. 'print' → logprob: -1.8211696147918701
    3. '       ' → logprob: -4.446169853210449
    4. ' if' → logprob: -6.071169853210449
    5. 'input' → logprob: -6.571169853210449
    6. '   ' → logprob: -8.44616985321045
    7. ' print' → logprob: -8.69616985321045
    8. '        
' → logprob: -8.94616985321045
    9. 'output' → logprob: -9.82116985321045
    10. 'for' (adapté à ' for') → logprob: -9.94616985321045

Token 82: ' character' (ID: 5855)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.068435899913311
    2. ' char' → logprob: -4.0684356689453125
    3. ' _' → logprob: -4.0684356689453125
    4. ' c' → logprob: -4.4434356689453125
    5. 'i' → logprob: -5.1934356689453125
    6. 'char' → logprob: -5.3184356689453125
    7. ' ' → logprob: -6.1934356689453125
    8. ' ch' → logprob: -6.3184356689453125
    9. 'ch' → logprob: -6.4434356689453125
    10. '_' → logprob: -6.8184356689453125

Token 83: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004491358529776335
    2. 'in' → logprob: -5.504491329193115
    3. 's' → logprob: -8.379491806030273
    4. ' ' → logprob: -9.379491806030273
    5. '_in' → logprob: -10.004491806030273
    6. '  ' → logprob: -11.004491806030273
    7. '_' → logprob: -11.754491806030273
    8. '<|end|>' → logprob: -12.129491806030273
    9. '	in' → logprob: -12.129491806030273
    10. ' i' → logprob: -12.629491806030273

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005093818064779043
    2. 'in' → logprob: -5.505094051361084
    3. ',' → logprob: -7.130094051361084
    4. ' ' → logprob: -8.630093574523926
    5. '	in' → logprob: -11.130093574523926
    6. ' ,' → logprob: -12.130093574523926
    7. '<|end|>' → logprob: -12.630093574523926
    8. 's' → logprob: -13.130093574523926
    9. '_in' → logprob: -13.380093574523926
    10. ' i' → logprob: -14.005093574523926

Token 85: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196914613246918
    2. ' range' → logprob: -2.811969041824341
    3. '	range' → logprob: -14.436968803405762
    4. 'input' → logprob: -14.686968803405762
    5. 're' → logprob: -15.686968803405762
    6. '   ' → logprob: -16.061969757080078
    7. ' ' → logprob: -16.061969757080078
    8. '  ' → logprob: -16.061969757080078
    9. 'rang' → logprob: -17.436969757080078
    10. ' input' → logprob: -17.811969757080078

Token 86: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.17991462349891663
    2. '(' → logprob: -1.8049145936965942
    3. 'len' → logprob: -9.179914474487305
    4. ' len' → logprob: -10.179914474487305
    5. ' (' → logprob: -11.554914474487305
    6. '	len' → logprob: -12.054914474487305
    7. '1' → logprob: -12.304914474487305
    8. '   ' → logprob: -13.054914474487305
    9. '(
' → logprob: -13.429914474487305
    10. '<len' → logprob: -13.679914474487305

Token 87: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00027301779482513666
    2. '(' → logprob: -8.250272750854492
    3. ' (' → logprob: -12.000272750854492
    4. 'input' → logprob: -12.375272750854492
    5. ' input' → logprob: -13.875272750854492
    6. '=input' → logprob: -16.125272750854492
    7. '(s' → logprob: -16.875272750854492
    8. '(output' → logprob: -17.000272750854492
    9. '	input' → logprob: -17.000272750854492
    10. ',input' → logprob: -17.125272750854492

Token 88: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0007998613873496652
    2. '_' → logprob: -7.250799655914307
    3. '_s' → logprob: -9.750800132751465
    4. ')' → logprob: -11.500800132751465
    5. '_)' → logprob: -11.750800132751465
    6. ' _' → logprob: -13.000800132751465
    7. '_String' → logprob: -13.000800132751465
    8. ')_' → logprob: -13.250800132751465
    9. 'string' → logprob: -13.375800132751465
    10. '_str' → logprob: -13.500800132751465

Token 89: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -0.00017982252757064998
    2. '_string' → logprob: -9.5001802444458
    3. '_list' → logprob: -9.6251802444458
    4. ')_' → logprob: -11.7501802444458
    5. 'As' → logprob: -12.0001802444458
    6. ')' → logprob: -12.0001802444458
    7. '_' → logprob: -12.3751802444458
    8. 'as' → logprob: -12.7501802444458
    9. '_s' → logprob: -12.7501802444458
    10. '_As' → logprob: -12.8751802444458

Token 90: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.015521829016506672
    2. '_string' → logprob: -5.015522003173828
    3. 'string' → logprob: -5.515522003173828
    4. 'list' → logprob: -6.015522003173828
    5. 's' → logprob: -6.265522003173828
    6. 'ist' → logprob: -8.890522003173828
    7. 'input' → logprob: -9.015522003173828
    8. 'tring' → logprob: -10.265522003173828
    9. 't' → logprob: -10.390522003173828
    10. ')' → logprob: -11.390522003173828

Token 91: '))' (ID: 915)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1619834154844284
    2. ')):' → logprob: -1.9119833707809448
    3. '))' → logprob: -7.411983489990234
    4. ')' → logprob: -8.036983489990234
    5. ' ):' → logprob: -8.036983489990234
    6. '[' → logprob: -8.036983489990234
    7. '-' → logprob: -10.036983489990234
    8. ':' → logprob: -10.411983489990234
    9. ' ' → logprob: -10.786983489990234
    10. ')):
' → logprob: -10.911983489990234

Token 92: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013047521933913231
    2. ' :' → logprob: -4.388047695159912
    3. '   ' → logprob: -8.888047218322754
    4. ' ' → logprob: -9.013047218322754
    5. '<|end|>' → logprob: -9.013047218322754
    6. ':
' → logprob: -10.263047218322754
    7. '{' → logprob: -10.763047218322754
    8. '[' → logprob: -10.763047218322754
    9. '    ' → logprob: -11.638047218322754
    10. '	' → logprob: -11.763047218322754

Token 93: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.289542019367218
    2. '    ' → logprob: -1.9145419597625732
    3. '       ' → logprob: -2.5395419597625732
    4. '        ' → logprob: -5.164542198181152
    5. '<|end|>' → logprob: -5.164542198181152
    6. ':' → logprob: -6.289542198181152
    7. ' _' → logprob: -6.289542198181152
    8. '_' → logprob: -6.289542198181152
    9. ' ' → logprob: -6.539542198181152
    10. '#' → logprob: -7.164542198181152

Token 94: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7047495245933533
    2. '   ' → logprob: -0.9547495245933533
    3. ' ' → logprob: -2.954749584197998
    4. ' if' → logprob: -3.079749584197998
    5. '    ' → logprob: -4.579749584197998
    6. '  ' → logprob: -5.204749584197998
    7. '       ' → logprob: -6.204749584197998
    8. '_' → logprob: -6.204749584197998
    9. '<|end|>' → logprob: -7.579749584197998
    10. '	if' → logprob: -7.954749584197998

Token 95: ' input' (ID: 3422)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6779093742370605
    2. 'input' → logprob: -1.5529093742370605
    3. 'not' → logprob: -1.6779093742370605
    4. ' input' → logprob: -2.4279093742370605
    5. ' ' → logprob: -6.1779093742370605
    6. 'i' → logprob: -6.4279093742370605
    7. ' i' → logprob: -7.9279093742370605
    8. 'character' → logprob: -7.9279093742370605
    9. ' character' → logprob: -8.990409851074219
    10. ''' → logprob: -9.115409851074219

Token 96: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.9504606825648807e-05
    2. '_' → logprob: -11.625019073486328
    3. 'string' → logprob: -12.250019073486328
    4. 'String' → logprob: -12.250019073486328
    5. '_String' → logprob: -15.250019073486328
    6. '_character' → logprob: -15.375019073486328
    7. '_str' → logprob: -15.875019073486328
    8. '_char' → logprob: -16.625019073486328
    9. '_s' → logprob: -16.750019073486328
    10. '_STRING' → logprob: -16.750019073486328

Token 97: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -0.0007475639577023685
    2. '_string' → logprob: -7.2507476806640625
    3. 'as' → logprob: -10.500747680664062
    4. 'As' → logprob: -12.500747680664062
    5. '_list' → logprob: -13.625747680664062
    6. '[' → logprob: -13.750747680664062
    7. '```' → logprob: -13.750747680664062
    8. '_As' → logprob: -14.000747680664062
    9. 'string' → logprob: -14.500747680664062
    10. '_' → logprob: -14.750747680664062

Token 98: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0011706985533237457
    2. '_as' → logprob: -7.251170635223389
    3. 'as' → logprob: -8.376171112060547
    4. 'list' → logprob: -8.626171112060547
    5. '```' → logprob: -11.126171112060547
    6. '_string' → logprob: -11.376171112060547
    7. 'string' → logprob: -11.751171112060547
    8. 'As' → logprob: -12.001171112060547
    9. 'List' → logprob: -12.251171112060547
    10. '_lists' → logprob: -13.376171112060547

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03657548502087593
    2. '[input' → logprob: -3.7865755558013916
    3. '[i' → logprob: -5.0365753173828125
    4. '[index' → logprob: -5.4115753173828125
    5. '[in' → logprob: -8.036575317382812
    6. '[
' → logprob: -8.286575317382812
    7. '[int' → logprob: -8.661575317382812
    8. '[-' → logprob: -8.911575317382812
    9. '[user' → logprob: -8.911575317382812
    10. '[element' → logprob: -8.911575317382812

Token 100: 'character' (ID: 38245)
  Prédit: 'character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.004179071635007858
    2. '0' → logprob: -5.504179000854492
    3. '1' → logprob: -10.504179000854492
    4. ' character' → logprob: -10.754179000854492
    5. 'index' → logprob: -10.879179000854492
    6. '-' → logprob: -11.129179000854492
    7. ' ' → logprob: -12.254179000854492
    8. '(character' → logprob: -12.254179000854492
    9. '[' → logprob: -12.629179000854492
    10. '   ' → logprob: -13.629179000854492

Token 101: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.007104871328920126
    2. ']' → logprob: -5.507104873657227
    3. ']_' → logprob: -6.507104873657227
    4. 's' → logprob: -7.382104873657227
    5. '```' → logprob: -8.507104873657227
    6. '_]' → logprob: -8.882104873657227
    7. 'index' → logprob: -8.882104873657227
    8. ']==' → logprob: -9.257104873657227
    9. '   ' → logprob: -9.257104873657227
    10. '_' → logprob: -10.132104873657227

Token 102: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.15083956718444824
    2. '].' → logprob: -3.4008395671844482
    3. 'is' → logprob: -3.5258395671844482
    4. '.' → logprob: -3.9008395671844482
    5. '>' → logprob: -3.9008395671844482
    6. ']' → logprob: -4.400839805603027
    7. 'isl' → logprob: -4.650839805603027
    8. 'isdigit' → logprob: -5.775839805603027
    9. '<|end|>' → logprob: -6.650839805603027
    10. 'not' → logprob: -6.650839805603027

Token 103: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3905101716518402
    2. 'isl' → logprob: -1.1405102014541626
    3. 'isdigit' → logprob: -5.640510082244873
    4. 'ist' → logprob: -10.765510559082031
    5. 'isal' → logprob: -10.890510559082031
    6. 'isas' → logprob: -11.140510559082031
    7. 'upper' → logprob: -11.265510559082031
    8. 'lower' → logprob: -11.765510559082031
    9. 'i' → logprob: -13.515510559082031
    10. '```' → logprob: -13.515510559082031

Token 104: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.013779815286397934
    2. 'lower' → logprob: -4.388779640197754
    3. 'alpha' → logprob: -6.763779640197754
    4. ' upper' → logprob: -9.638779640197754
    5. '_upper' → logprob: -11.388779640197754
    6. 'upp' → logprob: -11.513779640197754
    7. 'uppercase' → logprob: -11.888779640197754
    8. 'a' → logprob: -12.138779640197754
    9. 'up' → logprob: -12.388779640197754
    10. 'uppe' → logprob: -12.763779640197754

Token 105: '():

' (ID: 101746)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3135834038257599
    2. '()' → logprob: -1.3135833740234375
    3. '(' → logprob: -8.313583374023438
    4. '():
' → logprob: -10.063583374023438
    5. '()==' → logprob: -11.188583374023438
    6. '()>' → logprob: -11.813583374023438
    7. '()]' → logprob: -13.188583374023438
    8. '():

' → logprob: -13.188583374023438
    9. '()">' → logprob: -13.313583374023438
    10. '().' → logprob: -13.438583374023438

Token 106: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0948516130447388
    2. '               ' → logprob: -1.3448516130447388
    3. '<|end|>' → logprob: -1.8448516130447388
    4. 'print' → logprob: -2.844851493835449
    5. ' ' → logprob: -3.469851493835449
    6. '       ' → logprob: -3.969851493835449
    7. '<|end|>' → logprob: -4.094851493835449
    8. 'continue' → logprob: -4.344851493835449
    9. ' continue' → logprob: -4.469851493835449
    10. '0' → logprob: -5.094851493835449

Token 107: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.09487234055995941
    2. ' print' → logprob: -3.344872236251831
    3. '               ' → logprob: -3.719872236251831
    4. '                   ' → logprob: -4.71987247467041
    5. 'sys' → logprob: -5.09487247467041
    6. 'continue' → logprob: -5.59487247467041
    7. '                ' → logprob: -5.96987247467041
    8. ' sys' → logprob: -6.09487247467041
    9. ' continue' → logprob: -6.09487247467041
    10. ' ' → logprob: -6.84487247467041

Token 108: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.4598041772842407
    2. '(' → logprob: -1.5848041772842407
    3. '('' → logprob: -1.8348041772842407
    4. '(input' → logprob: -6.334804058074951
    5. '(i' → logprob: -6.709804058074951
    6. '()' → logprob: -8.83480453491211
    7. '(I' → logprob: -9.58480453491211
    8. '(
' → logprob: -9.70980453491211
    9. '(False' → logprob: -9.83480453491211
    10. '(-' → logprob: -9.95980453491211

Token 109: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -0.47373712062835693
    2. '!' → logprob: -1.723737120628357
    3. 'AC' → logprob: -3.3487372398376465
    4. 'A' → logprob: -3.8487372398376465
    5. 'Y' → logprob: -3.9737372398376465
    6. 'I' → logprob: -4.2237372398376465
    7. '"' → logprob: -4.2237372398376465
    8. 'No' → logprob: -4.3487372398376465
    9. 'Error' → logprob: -4.7237372398376465
    10. 'Invalid' → logprob: -4.9737372398376465

Token 110: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1254529356956482
    2. '               ' → logprob: -2.250452995300293
    3. '<|end|>' → logprob: -4.750452995300293
    4. '                   ' → logprob: -6.875452995300293
    5. '')' → logprob: -7.375452995300293
    6. ')
' → logprob: -7.750452995300293
    7. ')return' → logprob: -7.750452995300293
    8. '                ' → logprob: -8.500452995300293
    9. '           ' → logprob: -8.625452995300293
    10. '<|end|>' → logprob: -9.000452995300293

Token 111: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006343480199575424
    2. '                   ' → logprob: -5.631343364715576
    3. '                
' → logprob: -6.131343364715576
    4. '                ' → logprob: -8.631343841552734
    5. 'else' → logprob: -9.631343841552734
    6. '                       ' → logprob: -9.756343841552734
    7. '<|end|>' → logprob: -9.881343841552734
    8. '           ' → logprob: -10.006343841552734
    9. '                    
' → logprob: -10.631343841552734
    10. '              ' → logprob: -11.256343841552734

Token 112: ' sys' (ID: 12228)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02154330350458622
    2. '                   ' → logprob: -4.396543502807617
    3. '                
' → logprob: -5.146543502807617
    4. '                ' → logprob: -6.521543502807617
    5. ' 
' → logprob: -8.021543502807617
    6. ' ' → logprob: -8.646543502807617
    7. '                       ' → logprob: -8.896543502807617
    8. '                    
' → logprob: -9.021543502807617
    9. '                 ' → logprob: -9.271543502807617
    10. '           ' → logprob: -9.521543502807617

Token 113: '.exit' (ID: 27076)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5762296319007874
    2. '.exit' → logprob: -0.8262296319007874
    3. 'exit' → logprob: -9.3262300491333
    4. '.stdout' → logprob: -9.4512300491333
    5. '.Exit' → logprob: -10.3262300491333
    6. ' exit' → logprob: -10.5762300491333
    7. '.EXIT' → logprob: -10.5762300491333
    8. '.stderr' → logprob: -11.4512300491333
    9. '.quit' → logprob: -12.2012300491333
    10. '.stdin' → logprob: -12.5762300491333

Token 114: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.632981538772583
    2. '()' → logprob: -0.757981538772583
    3. '(
' → logprob: -8.132981300354004
    4. '()
' → logprob: -9.882981300354004
    5. '(

' → logprob: -11.132981300354004
    6. '()

' → logprob: -12.882981300354004
    7. ' ()' → logprob: -13.007981300354004
    8. '```' → logprob: -13.132981300354004
    9. ' (' → logprob: -13.382981300354004
    10. '1' → logprob: -13.382981300354004

Token 115: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06968285143375397
    2. 'A' → logprob: -3.5696828365325928
    3. '_' → logprob: -4.444683074951172
    4. '\' → logprob: -5.444683074951172
    5. '       ' → logprob: -5.819683074951172
    6. '\n' → logprob: -6.069683074951172
    7. 'n' → logprob: -6.194683074951172
    8. '<|end|>' → logprob: -6.444683074951172
    9. ' ' → logprob: -6.569683074951172
    10. '   ' → logprob: -6.819683074951172

Token 116: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0016472071874886751
    2. '   ' → logprob: -6.751646995544434
    3. '       ' → logprob: -8.876646995544434
    4. 'else' → logprob: -9.626646995544434
    5. '    
' → logprob: -9.626646995544434
    6. '        
' → logprob: -10.376646995544434
    7. 'P' → logprob: -10.376646995544434
    8. ' print' → logprob: -10.751646995544434
    9. '```' → logprob: -10.876646995544434
    10. ')' → logprob: -11.251646995544434

Token 117: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08155645430088043
    2. '(' → logprob: -2.581556558609009
    3. '("' → logprob: -5.95655632019043
    4. '("("' → logprob: -10.70655632019043
    5. '('(' → logprob: -10.95655632019043
    6. '()' → logprob: -11.33155632019043
    7. ''' → logprob: -11.70655632019043
    8. '(
' → logprob: -12.33155632019043
    9. ' ('' → logprob: -12.83155632019043
    10. ' (' → logprob: -13.45655632019043

Token 118: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -8.864272967912257e-05
    2. 'OK' → logprob: -9.750088691711426
    3. ''' → logprob: -11.500088691711426
    4. 'AA' → logprob: -12.125088691711426
    5. 'ACC' → logprob: -12.875088691711426
    6. '('' → logprob: -13.125088691711426
    7. 'A' → logprob: -13.125088691711426
    8. ''A' → logprob: -13.625088691711426
    9. 'AP' → logprob: -13.875088691711426
    10. '`' → logprob: -13.875088691711426

Token 119: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0017716889269649982
    2. ')' → logprob: -6.376771926879883
    3. '')
' → logprob: -10.001771926879883
    4. '")' → logprob: -11.001771926879883
    5. '()' → logprob: -13.251771926879883
    6. '#' → logprob: -13.376771926879883
    7. '!' → logprob: -13.751771926879883
    8. ''' → logprob: -13.876771926879883
    9. '<|end|>' → logprob: -14.251771926879883
    10. '```' → logprob: -14.501771926879883

Token 120: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10315055400133133
    2. 'elif' → logprob: -2.7281506061553955
    3. '<|end|>' → logprob: -3.9781506061553955
    4. ' else' → logprob: -4.353150367736816
    5. ')' → logprob: -7.478150367736816
    6. '```' → logprob: -8.478150367736816
    7. ' elif' → logprob: -9.103150367736816
    8. '<|end|>' → logprob: -9.728150367736816
    9. '	else' → logprob: -11.228150367736816
    10. 'e' → logprob: -11.603150367736816

Token 122: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010581758106127381
    2. ':
' → logprob: -6.876058101654053
    3. '       ' → logprob: -11.126058578491211
    4. ':

' → logprob: -13.001058578491211
    5. ' :' → logprob: -13.126058578491211
    6. '   ' → logprob: -13.251058578491211
    7. '<|end|>' → logprob: -13.501058578491211
    8. '```' → logprob: -14.376058578491211
    9. '{' → logprob: -14.501058578491211
    10. '():' → logprob: -15.001058578491211

Token 123: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.41002097725868225
    2. '       ' → logprob: -1.1600209474563599
    3. '   ' → logprob: -3.9100210666656494
    4. ' print' → logprob: -6.16002082824707
    5. 'sys' → logprob: -7.53502082824707
    6. '           ' → logprob: -9.66002082824707
    7. '```' → logprob: -10.03502082824707
    8. '               ' → logprob: -10.53502082824707
    9. ' sys' → logprob: -10.78502082824707
    10. '	print' → logprob: -11.53502082824707

Token 124: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.431207682704553e-05
    2. ' print' → logprob: -9.875054359436035
    3. 'sys' → logprob: -13.500054359436035
    4. '   ' → logprob: -13.875054359436035
    5. '	print' → logprob: -15.875054359436035
    6. 'pass' → logprob: -16.00005340576172
    7. '```' → logprob: -16.12505340576172
    8. 'WA' → logprob: -16.62505340576172
    9. '       ' → logprob: -17.00005340576172
    10. ' ' → logprob: -17.50005340576172

Token 125: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0381443090736866
    2. '(' → logprob: -3.28814435005188
    3. '("' → logprob: -9.2881441116333
    4. '()' → logprob: -11.7881441116333
    5. ' ('' → logprob: -13.6631441116333
    6. '('(' → logprob: -14.4131441116333
    7. ' (' → logprob: -15.0381441116333
    8. '(`' → logprob: -15.7881441116333
    9. '(
' → logprob: -16.413145065307617
    10. ''' → logprob: -16.538145065307617

Token 126: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -2.6060808522743173e-05
    2. ''' → logprob: -10.750025749206543
    3. ' WA' → logprob: -13.250025749206543
    4. '"' → logprob: -14.250025749206543
    5. 'WR' → logprob: -14.375025749206543
    6. '
' → logprob: -14.500025749206543
    7. '

' → logprob: -15.625025749206543
    8. 'W' → logprob: -15.625025749206543
    9. 'Wa' → logprob: -15.625025749206543
    10. '```' → logprob: -15.625025749206543

Token 127: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2523658871650696
    2. ')' → logprob: -1.5023658275604248
    3. '<|end|>' → logprob: -8.252366065979004
    4. '')
' → logprob: -9.502366065979004
    5. '")' → logprob: -9.752366065979004
    6. '```' → logprob: -11.127366065979004
    7. ')
' → logprob: -12.127366065979004
    8. '}' → logprob: -12.627366065979004
    9. '<|end|>' → logprob: -12.627366065979004
    10. '`)' → logprob: -12.877366065979004

Token 128: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04040299355983734
    2. 'elif' → logprob: -4.040402889251709
    3. ' else' → logprob: -4.290402889251709
    4. '<|end|>' → logprob: -4.915402889251709
    5. '```' → logprob: -7.415402889251709
    6. ')' → logprob: -8.790403366088867
    7. ' elif' → logprob: -10.040403366088867
    8. '...' → logprob: -10.165403366088867
    9. '}' → logprob: -10.540403366088867
    10. '#' → logprob: -10.665403366088867

Token 129: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.493430894101039e-05
    2. ':
' → logprob: -9.750075340270996
    3. ' :' → logprob: -11.125075340270996
    4. ':

' → logprob: -13.500075340270996
    5. '   ' → logprob: -16.37507438659668
    6. '{' → logprob: -16.62507438659668
    7. '():' → logprob: -17.00007438659668
    8. '):' → logprob: -17.37507438659668
    9. ' :
' → logprob: -17.50007438659668
    10. ':**' → logprob: -17.50007438659668

Token 130: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.404745439183898e-05
    2. '   ' → logprob: -11.00003433227539
    3. 'WA' → logprob: -11.62503433227539
    4. ' print' → logprob: -11.75003433227539
    5. '```' → logprob: -16.00003433227539
    6. '	print' → logprob: -16.12503433227539
    7. ' ' → logprob: -17.12503433227539
    8. 'Print' → logprob: -17.25003433227539
    9. '       ' → logprob: -18.00003433227539
    10. 'printf' → logprob: -18.25003433227539

Token 131: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.2664456789934775e-06
    2. ' print' → logprob: -13.875000953674316
    3. '   ' → logprob: -15.375000953674316
    4. '```' → logprob: -18.250001907348633
    5. '	print' → logprob: -18.500001907348633
    6. ' ' → logprob: -20.000001907348633
    7. 'printf' → logprob: -20.375001907348633
    8. '.print' → logprob: -20.375001907348633
    9. 'prin' → logprob: -20.500001907348633
    10. 'Print' → logprob: -21.000001907348633

Token 132: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.023252932354807854
    2. '(' → logprob: -3.7732529640197754
    3. '("' → logprob: -12.398252487182617
    4. '('(' → logprob: -13.523252487182617
    5. ' ('' → logprob: -14.023252487182617
    6. '(
' → logprob: -15.023252487182617
    7. '()' → logprob: -15.273252487182617
    8. '(

' → logprob: -15.898252487182617
    9. '(\'' → logprob: -16.148252487182617
    10. '(`' → logprob: -16.148252487182617

Token 133: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -7.3458322731312364e-06
    2. ''' → logprob: -12.375007629394531
    3. 'W' → logprob: -12.875007629394531
    4. ' WA' → logprob: -15.250007629394531
    5. 'Wa' → logprob: -15.750007629394531
    6. 'wa' → logprob: -16.50000762939453
    7. '```' → logprob: -17.00000762939453
    8. '')' → logprob: -17.75000762939453
    9. '`' → logprob: -18.25000762939453
    10. 'BA' → logprob: -18.25000762939453

Token 134: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1270626038312912
    2. ')' → logprob: -2.1270625591278076
    3. '```' → logprob: -9.877062797546387
    4. '")' → logprob: -10.127062797546387
    5. '')
' → logprob: -11.127062797546387
    6. '`)' → logprob: -11.502062797546387
    7. '<|end|>' → logprob: -11.752062797546387
    8. '\n' → logprob: -12.002062797546387
    9. ')
' → logprob: -13.627062797546387
    10. '#' → logprob: -14.127062797546387


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 132
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 44.70%
Précision adaptée (1ère position): 49.24%
Précision (top 10): 77.27%
================================================================================
