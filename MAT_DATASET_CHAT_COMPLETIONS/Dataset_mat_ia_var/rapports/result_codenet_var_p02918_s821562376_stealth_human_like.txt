================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, K = map(int, input().split())
S = input()

# Ok, we need to process S by grouping same chars together... don't love this style but whatever
blocs = []
block_ct = 1
last = S[0]
count = 1

for j in range(1, N-1):
    if S[j] == last:
        count += 1
    else:
        blocs.append(count)
        count = 1
        last = S[j]
        block_ct += 1

if S[N-1] == last:
    count += 1
    blocs.append(count)
else:
    blocs.append(count)
    count = 1
    last = S[N-1]
    blocs.append(count)
    block_ct += 1

# print(blocs) # Debug, just in case

num = 2*K + 1

# Ya it's kind of brute force
if block_ct == 1 or block_ct == 2 or num >= block_ct:
    print(N-1)
elif num < block_ct:
    left = block_ct - num
    print(N - left - 1)
# probably missed a weird edge case? oh well
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' K' (ID: 658)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03046221099793911
    2. ' =' → logprob: -3.6554622650146484
    3. ',' → logprob: -5.530462265014648
    4. ';' → logprob: -10.030462265014648
    5. ')' → logprob: -10.155462265014648
    6. '.' → logprob: -10.405462265014648
    7. '=int' → logprob: -10.655462265014648
    8. '+' → logprob: -11.405462265014648
    9. '```' → logprob: -11.405462265014648
    10. '#' → logprob: -11.905462265014648

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.22694803774356842
    2. ' input' → logprob: -2.3519480228424072
    3. 'map' → logprob: -2.7269480228424072
    4. ' ' → logprob: -3.9769480228424072
    5. 'input' → logprob: -4.101948261260986
    6. '10' → logprob: -5.976948261260986
    7. ' list' → logprob: -6.101948261260986
    8. ' int' → logprob: -6.851948261260986
    9. '0' → logprob: -7.601948261260986
    10. 'list' → logprob: -8.101947784423828

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03673947975039482
    2. '<|end|>' → logprob: -4.286739349365234
    3. '(int' → logprob: -4.411739349365234
    4. '(lambda' → logprob: -5.411739349365234
    5. '```' → logprob: -6.286739349365234
    6. '(str' → logprob: -6.786739349365234
    7. '<|end|>' → logprob: -7.411739349365234
    8. ')' → logprob: -7.536739349365234
    9. '(input' → logprob: -8.911739349365234
    10. '(len' → logprob: -9.036739349365234

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.318373441696167
    2. '(input' → logprob: -1.443373441696167
    3. '(' → logprob: -3.943373441696167
    4. '```' → logprob: -5.193373680114746
    5. '`)' → logprob: -5.318373680114746
    6. 'input' → logprob: -6.318373680114746
    7. '`' → logprob: -6.568373680114746
    8. '(user' → logprob: -6.568373680114746
    9. ')(' → logprob: -7.568373680114746
    10. '(int' → logprob: -8.693373680114746

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004099058452993631
    2. ' input' → logprob: -5.504098892211914
    3. ')' → logprob: -10.879098892211914
    4. '(input' → logprob: -13.754098892211914
    5. ',input' → logprob: -14.754098892211914
    6. '<input' → logprob: -15.379098892211914
    7. '```' → logprob: -17.129098892211914
    8. '=input' → logprob: -17.254098892211914
    9. '	input' → logprob: -18.004098892211914
    10. '[input' → logprob: -18.254098892211914

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6118540167808533
    2. '())' → logprob: -0.8618540167808533
    3. ')' → logprob: -3.611854076385498
    4. '(' → logprob: -6.111854076385498
    5. '().' → logprob: -6.736854076385498
    6. '();)' → logprob: -6.986854076385498
    7. '(""))' → logprob: -7.361854076385498
    8. '()))' → logprob: -7.486854076385498
    9. '('' → logprob: -8.11185359954834
    10. '("")' → logprob: -8.36185359954834

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0022398277651518583
    2. 'strip' → logprob: -6.12723970413208
    3. ')' → logprob: -10.627240180969238
    4. ' split' → logprob: -10.877240180969238
    5. 'rstrip' → logprob: -11.627240180969238
    6. 'read' → logprob: -13.627240180969238
    7. '(split' → logprob: -14.502240180969238
    8. 'spl' → logprob: -14.627240180969238
    9. 'replace' → logprob: -15.877240180969238
    10. 'decode' → logprob: -16.377239227294922

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05386718735098839
    2. '))' → logprob: -3.3038671016693115
    3. '())' → logprob: -4.178867340087891
    4. '()' → logprob: -8.67886734008789
    5. '()))' → logprob: -9.42886734008789
    6. '`)' → logprob: -9.67886734008789
    7. '(' → logprob: -10.30386734008789
    8. ')`' → logprob: -11.55386734008789
    9. ')))' → logprob: -12.55386734008789
    10. '```' → logprob: -12.55386734008789

Token 11: 'S' (ID: 50)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.129086971282959
    2. '#' → logprob: -1.879086971282959
    3. 'for' → logprob: -2.129086971282959
    4. '`' → logprob: -2.254086971282959
    5. '\n' → logprob: -3.129086971282959
    6. '```' → logprob: -3.254086971282959
    7. ' ' → logprob: -3.379086971282959
    8. ')' → logprob: -3.504086971282959
    9. 'if' → logprob: -3.754086971282959
    10. 'x' → logprob: -3.879086971282959

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13394764065742493
    2. '.' → logprob: -3.2589476108551025
    3. '=' → logprob: -3.2589476108551025
    4. ' =' → logprob: -3.2589476108551025
    5. '[:]' → logprob: -5.633947849273682
    6. '[:' → logprob: -6.133947849273682
    7. '[]' → logprob: -7.133947849273682
    8. '[i' → logprob: -7.258947849273682
    9. '[int' → logprob: -7.758947849273682
    10. '[count' → logprob: -8.508947372436523

Token 13: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5231560468673706
    2. 'input' → logprob: -0.8981560468673706
    3. ' list' → logprob: -11.02315616607666
    4. 'list' → logprob: -11.77315616607666
    5. '[input' → logprob: -12.89815616607666
    6. '(input' → logprob: -13.64815616607666
    7. '=input' → logprob: -13.64815616607666
    8. '<input' → logprob: -14.64815616607666
    9. '"' → logprob: -14.89815616607666
    10. ' ' → logprob: -14.89815616607666

Token 14: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2833854556083679
    2. '(' → logprob: -1.4083855152130127
    3. ')' → logprob: -6.658385276794434
    4. '())' → logprob: -8.658385276794434
    5. '('' → logprob: -8.783385276794434
    6. '().' → logprob: -9.283385276794434
    7. ' ()' → logprob: -9.408385276794434
    8. '```' → logprob: -9.408385276794434
    9. ''' → logprob: -9.783385276794434
    10. '`()' → logprob: -10.158385276794434

Token 15: '#' (ID: 2)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6946309804916382
    2. 'result' → logprob: -1.8196309804916382
    3. 'dp' → logprob: -2.3196310997009277
    4. 'counts' → logprob: -2.9446310997009277
    5. 'c' → logprob: -3.0696310997009277
    6. 'for' → logprob: -3.3196310997009277
    7. 'freq' → logprob: -3.4446310997009277
    8. 'd' → logprob: -3.9446310997009277
    9. 'from' → logprob: -4.444631099700928
    10. 'if' → logprob: -4.819631099700928

Token 16: ' Ok' (ID: 13927)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.9235150814056396
    2. 'count' → logprob: -1.9235150814056396
    3. 'dp' → logprob: -2.2985150814056396
    4. 'd' → logprob: -2.4235150814056396
    5. ' count' → logprob: -2.7985150814056396
    6. 'for' → logprob: -3.0485150814056396
    7. ' from' → logprob: -3.1735150814056396
    8. ' dp' → logprob: -3.2985150814056396
    9. 'f' → logprob: -3.4235150814056396
    10. 'i' → logprob: -3.5485150814056396

Token 17: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.69733065366745
    2. 'count' → logprob: -1.9473307132720947
    3. 'for' → logprob: -2.1973307132720947
    4. 'result' → logprob: -2.9473307132720947
    5. 'max' → logprob: -3.4473307132720947
    6. 'i' → logprob: -3.4473307132720947
    7. 'd' → logprob: -3.5723307132720947
    8. '_' → logprob: -4.322330474853516
    9. 'sum' → logprob: -4.822330474853516
    10. 'c' → logprob: -4.947330474853516

Token 18: ' we' (ID: 581)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4665057361125946
    2. ' so' → logprob: -2.841505765914917
    3. ' for' → logprob: -3.091505765914917
    4. ' here' → logprob: -3.466505765914917
    5. ' let's' → logprob: -3.466505765914917
    6. ' but' → logprob: -3.966505765914917
    7. ' if' → logprob: -3.966505765914917
    8. ' i' → logprob: -3.966505765914917
    9. ' we' → logprob: -3.966505765914917
    10. ' ans' → logprob: -4.216505527496338

Token 19: ' need' (ID: 1309)
  Prédit: ' want'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.7455888986587524
    2. ''re' → logprob: -1.3705888986587524
    3. ''' → logprob: -2.620588779449463
    4. 'want' → logprob: -3.245588779449463
    5. ''ll' → logprob: -3.620588779449463
    6. ' need' → logprob: -3.745588779449463
    7. 'need' → logprob: -3.995588779449463
    8. '#' → logprob: -4.120588779449463
    9. 'are' → logprob: -4.120588779449463
    10. 're' → logprob: -4.370588779449463

Token 20: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03511805459856987
    2. 'to' → logprob: -3.4101181030273438
    3. ' ' → logprob: -7.035118103027344
    4. ' a' → logprob: -8.035118103027344
    5. '_' → logprob: -9.410118103027344
    6. ' `' → logprob: -10.785118103027344
    7. '_to' → logprob: -11.160118103027344
    8. ' =' → logprob: -11.285118103027344
    9. ' t' → logprob: -11.535118103027344
    10. '`' → logprob: -11.535118103027344

Token 21: ' process' (ID: 2273)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5748410224914551
    2. 'find' → logprob: -1.449841022491455
    3. 'maximize' → logprob: -2.574841022491455
    4. 'make' → logprob: -3.824841022491455
    5. ' find' → logprob: -3.949841022491455
    6. ' count' → logprob: -4.574841022491455
    7. 'do' → logprob: -5.199841022491455
    8. 'transform' → logprob: -5.199841022491455
    9. 'convert' → logprob: -5.324841022491455
    10. 'calculate' → logprob: -5.324841022491455

Token 22: ' S' (ID: 336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1073548793792725
    2. '_' → logprob: -1.7323548793792725
    3. 'for' → logprob: -2.1073548793792725
    4. 'S' → logprob: -2.3573548793792725
    5. ' for' → logprob: -2.8573548793792725
    6. ' ' → logprob: -2.8573548793792725
    7. 'tokens' → logprob: -3.2323548793792725
    8. '<|end|>' → logprob: -4.232355117797852
    9. '```' → logprob: -4.232355117797852
    10. ' S' → logprob: -4.357355117797852

Token 23: ' by' (ID: 656)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5482075810432434
    2. 'count' → logprob: -2.5482075214385986
    3. 'result' → logprob: -2.6732075214385986
    4. '.' → logprob: -2.6732075214385986
    5. 'for' → logprob: -2.7982075214385986
    6. 's' → logprob: -3.7982075214385986
    7. 'max' → logprob: -4.173207759857178
    8. 'i' → logprob: -4.923207759857178
    9. ' for' → logprob: -4.923207759857178
    10. '```' → logprob: -4.923207759857178

Token 24: ' grouping' (ID: 97243)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.9478780031204224
    2. 're' → logprob: -1.6978780031204224
    3. 'finding' → logprob: -1.6978780031204224
    4. 'spl' → logprob: -2.697877883911133
    5. 'count' → logprob: -3.322877883911133
    6. 'checking' → logprob: -3.572877883911133
    7. 'app' → logprob: -3.697877883911133
    8. 'changing' → logprob: -4.447877883911133
    9. ' replacing' → logprob: -4.572877883911133
    10. ' finding' → logprob: -4.822877883911133

Token 25: ' same' (ID: 2684)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07115041464567184
    2. ' ' → logprob: -3.696150302886963
    3. 's' → logprob: -4.321150302886963
    4. '_tokens' → logprob: -4.321150302886963
    5. ' _' → logprob: -5.946150302886963
    6. ' =' → logprob: -5.946150302886963
    7. '[' → logprob: -6.196150302886963
    8. '_s' → logprob: -6.321150302886963
    9. ')' → logprob: -6.321150302886963
    10. ',' → logprob: -6.696150302886963

Token 26: ' chars' (ID: 47991)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' together' (ID: 4717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.427341103553772
    2. ' 
' → logprob: -1.802341103553772
    3. ' from' → logprob: -2.4273409843444824
    4. 'from' → logprob: -2.5523409843444824
    5. 's' → logprob: -2.6773409843444824
    6. '
' → logprob: -2.9273409843444824
    7. 'result' → logprob: -3.1773409843444824
    8. 'current' → logprob: -3.3023409843444824
    9. ',' → logprob: -3.4273409843444824
    10. 'i' → logprob: -3.5523409843444824

Token 28: '...' (ID: 1008)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13182753324508667
    2. 'result' → logprob: -3.5068275928497314
    3. 'from' → logprob: -3.7568275928497314
    4. 'tokens' → logprob: -4.381827354431152
    5. '```' → logprob: -4.506827354431152
    6. 's' → logprob: -5.006827354431152
    7. 'current' → logprob: -5.506827354431152
    8. 'groups' → logprob: -5.881827354431152
    9. 'n' → logprob: -6.006827354431152
    10. '\n' → logprob: -6.006827354431152

Token 29: ' don't' (ID: 4128)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.473727285861969
    2. 'from' → logprob: -1.8487272262573242
    3. ' from' → logprob: -2.848727226257324
    4. 'tokens' → logprob: -3.598727226257324
    5. 'result' → logprob: -3.598727226257324
    6. ' 
' → logprob: -3.848727226257324
    7. 's' → logprob: -3.848727226257324
    8. 'current' → logprob: -4.223727226257324
    9. '```' → logprob: -4.723727226257324
    10. 'count' → logprob: -5.598727226257324

Token 30: ' love' (ID: 3047)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.7110143303871155
    2. 'use' → logprob: -1.7110142707824707
    3. 'S' → logprob: -2.5860142707824707
    4. 'change' → logprob: -2.8360142707824707
    5. 's' → logprob: -3.0860142707824707
    6. 'forget' → logprob: -3.3360142707824707
    7. 'count' → logprob: -3.8360142707824707
    8. 'need' → logprob: -4.586014270782471
    9. 'split' → logprob: -4.586014270782471
    10. 'know' → logprob: -4.586014270782471

Token 31: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.09904798865318298
    2. ' it' → logprob: -2.849047899246216
    3. ' to' → logprob: -4.099048137664795
    4. ' S' → logprob: -4.974048137664795
    5. 'the' → logprob: -5.349048137664795
    6. ' ' → logprob: -5.724048137664795
    7. ' a' → logprob: -6.849048137664795
    8. 's' → logprob: -7.474048137664795
    9. ' this' → logprob: -7.724048137664795
    10. 'it' → logprob: -7.724048137664795

Token 32: ' style' (ID: 2713)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0894304513931274
    2. 'from' → logprob: -1.4644304513931274
    3. '
' → logprob: -2.839430332183838
    4. 'result' → logprob: -2.964430332183838
    5. ' from' → logprob: -3.089430332183838
    6. 'groups' → logprob: -3.089430332183838
    7. ',' → logprob: -3.464430332183838
    8. ' groups' → logprob: -3.589430332183838
    9. ' 
' → logprob: -3.839430332183838
    10. 'res' → logprob: -3.964430332183838

Token 33: ' but' (ID: 889)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.398752897977829
    2. 'groups' → logprob: -2.0237529277801514
    3. 'result' → logprob: -2.5237529277801514
    4. 'from' → logprob: -3.0237529277801514
    5. '```' → logprob: -4.148752689361572
    6. 'tokens' → logprob: -4.398752689361572
    7. 'group' → logprob: -4.648752689361572
    8. 'res' → logprob: -5.398752689361572
    9. ' groups' → logprob: -5.398752689361572
    10. '``' → logprob: -5.773752689361572

Token 34: ' whatever' (ID: 13485)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.8235315680503845
    2. ' from' → logprob: -2.3235316276550293
    3. ' groups' → logprob: -2.4485316276550293
    4. 'result' → logprob: -2.4485316276550293
    5. ' prev' → logprob: -2.6985316276550293
    6. ' ' → logprob: -3.0735316276550293
    7. ' res' → logprob: -3.1985316276550293
    8. 'from' → logprob: -3.5735316276550293
    9. ' i' → logprob: -3.8235316276550293
    10. 'groups' → logprob: -4.448531627655029

Token 35: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18659305572509766
    2. 'groups' → logprob: -2.0615930557250977
    3. 'result' → logprob: -4.436593055725098
    4. ' groups' → logprob: -4.686593055725098
    5. 'from' → logprob: -4.811593055725098
    6. 'tokens' → logprob: -5.686593055725098
    7. 'group' → logprob: -5.936593055725098
    8. 'res' → logprob: -6.686593055725098
    9. 'counts' → logprob: -7.061593055725098
    10. ' from' → logprob: -7.186593055725098

Token 36: 'bl' (ID: 1751)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.47524958848953247
    2. 'result' → logprob: -1.6002495288848877
    3. ' groups' → logprob: -3.1002495288848877
    4. 'from' → logprob: -3.2252495288848877
    5. 'res' → logprob: -3.8502495288848877
    6. '
' → logprob: -4.100249767303467
    7. ' from' → logprob: -4.725249767303467
    8. 'tokens' → logprob: -4.850249767303467
    9. 'current' → logprob: -5.100249767303467
    10. 'group' → logprob: -5.100249767303467

Token 37: 'ocs' (ID: 20929)
  Prédit: 'ocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ocks' → logprob: -0.016883807256817818
    2. 'ock' → logprob: -4.391883850097656
    3. 'en' → logprob: -6.516883850097656
    4. 'e' → logprob: -7.141883850097656
    5. 'ocs' → logprob: -7.516883850097656
    6. 'ocked' → logprob: -7.766883850097656
    7. 'o' → logprob: -8.391883850097656
    8. '=' → logprob: -8.766883850097656
    9. 'obs' → logprob: -8.766883850097656
    10. 'locks' → logprob: -9.266883850097656

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025138312485069036
    2. '=' → logprob: -6.877513885498047
    3. 's' → logprob: -7.127513885498047
    4. ' ' → logprob: -7.752513885498047
    5. '=[]' → logprob: -8.877513885498047
    6. ',' → logprob: -10.502513885498047
    7. '.append' → logprob: -10.877513885498047
    8. '_' → logprob: -11.127513885498047
    9. '[' → logprob: -11.502513885498047
    10. '=[]
' → logprob: -11.627513885498047

Token 39: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0016642312984913588
    2. '[' → logprob: -7.501664161682129
    3. '[]
' → logprob: -8.001664161682129
    4. '[(' → logprob: -8.126664161682129
    5. '[[' → logprob: -8.376664161682129
    6. ' []' → logprob: -8.376664161682129
    7. '[][]' → logprob: -12.501664161682129
    8. '[['' → logprob: -12.501664161682129
    9. '[]

' → logprob: -12.876664161682129
    10. '[]}' → logprob: -13.376664161682129

Token 40: 'block' (ID: 6230)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6819713115692139
    2. 'current' → logprob: -1.1819713115692139
    3. 'if' → logprob: -3.556971311569214
    4. 'prev' → logprob: -3.556971311569214
    5. 'cur' → logprob: -3.681971311569214
    6. 'last' → logprob: -3.681971311569214
    7. 'i' → logprob: -3.931971311569214
    8. 'cnt' → logprob: -4.181971549987793
    9. 'for' → logprob: -4.556971549987793
    10. 'length' → logprob: -4.556971549987793

Token 41: '_ct' (ID: 61056)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.008097767829895
    2. 's' → logprob: -1.258097767829895
    3. '_size' → logprob: -2.1330976486206055
    4. '_len' → logprob: -2.6330976486206055
    5. '_start' → logprob: -3.0080976486206055
    6. ' =' → logprob: -3.1330976486206055
    7. '_' → logprob: -3.3830976486206055
    8. '_s' → logprob: -4.3830976486206055
    9. '_length' → logprob: -4.6330976486206055
    10. '_chars' → logprob: -5.5080976486206055

Token 42: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8119756579399109
    2. 's' → logprob: -0.9369756579399109
    3. '=' → logprob: -2.3119757175445557
    4. ' =' → logprob: -2.9369757175445557
    5. 'rs' → logprob: -4.436975479125977
    6. 'er' → logprob: -9.061975479125977
    7. 'x' → logprob: -9.186975479125977
    8. 'e' → logprob: -11.561975479125977
    9. 'nt' → logprob: -11.811975479125977
    10. '=[]' → logprob: -11.936975479125977

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1059664636850357
    2. ' ' → logprob: -2.480966567993164
    3. '1' → logprob: -4.105966567993164
    4. '[]' → logprob: -8.355966567993164
    5. '{}' → logprob: -8.980966567993164
    6. ' []' → logprob: -10.480966567993164
    7. '[' → logprob: -11.980966567993164
    8. ' {}' → logprob: -12.980966567993164
    9. '{' → logprob: -13.355966567993164
    10. '  ' → logprob: -13.355966567993164

Token 44: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0893453061580658
    2. '1' → logprob: -2.4643452167510986
    3. ' ' → logprob: -7.964345455169678
    4. '{}' → logprob: -10.46434497833252
    5. '[]' → logprob: -10.71434497833252
    6. '[' → logprob: -13.33934497833252
    7. '[]
' → logprob: -13.33934497833252
    8. '{' → logprob: -14.08934497833252
    9. '{}
' → logprob: -14.08934497833252
    10. 'len' → logprob: -14.58934497833252

Token 45: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16978444159030914
    2. ' for' → logprob: -1.919784426689148
    3. 'prev' → logprob: -4.9197845458984375
    4. ',' → logprob: -7.4197845458984375
    5. ' prev' → logprob: -7.5447845458984375
    6. 'previous' → logprob: -8.669784545898438
    7. 'b' → logprob: -9.169784545898438
    8. '
' → logprob: -9.294784545898438
    9. '<|end|>' → logprob: -9.294784545898438
    10. '' → logprob: -9.419784545898438

Token 46: 'last' (ID: 6684)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01822369173169136
    2. ' for' → logprob: -4.018223762512207
    3. 'prev' → logprob: -10.268223762512207
    4. '
' → logprob: -11.143223762512207
    5. 'i' → logprob: -11.643223762512207
    6. 'previous' → logprob: -12.393223762512207
    7. 'n' → logprob: -13.143223762512207
    8. 's' → logprob: -13.393223762512207
    9. 'f' → logprob: -13.518223762512207
    10. 'last' → logprob: -14.018223762512207

Token 47: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4480253756046295
    2. '_char' → logprob: -1.1980253458023071
    3. ' =' → logprob: -3.1980254650115967
    4. '=' → logprob: -4.573025226593018
    5. '_c' → logprob: -5.698025226593018
    6. '_=' → logprob: -5.698025226593018
    7. 'char' → logprob: -7.198025226593018
    8. 'c' → logprob: -8.323025703430176
    9. '_ch' → logprob: -8.823025703430176
    10. '=_' → logprob: -9.573025703430176

Token 48: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.014590993523597717
    2. ' S' → logprob: -4.264591217041016
    3. 'None' → logprob: -8.389591217041016
    4. ' None' → logprob: -9.014591217041016
    5. ' ' → logprob: -10.014591217041016
    6. ''' → logprob: -11.889591217041016
    7. ''S' → logprob: -11.889591217041016
    8. 's' → logprob: -12.639591217041016
    9. ' '' → logprob: -12.764591217041016
    10. '''' → logprob: -12.889591217041016

Token 49: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.759734732331708e-05
    2. '0' → logprob: -11.250017166137695
    3. ' [' → logprob: -13.375017166137695
    4. '[
' → logprob: -14.000017166137695
    5. '\[' → logprob: -14.375017166137695
    6. ''s' → logprob: -14.750017166137695
    7. '```' → logprob: -14.875017166137695
    8. '[]' → logprob: -16.125017166137695
    9. ' ' → logprob: -16.750017166137695
    10. '[len' → logprob: -16.812517166137695

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.625866030342877e-05
    2. ' ' → logprob: -9.375085830688477
    3. '-' → logprob: -14.125085830688477
    4. '   ' → logprob: -15.437585830688477
    5. '  ' → logprob: -16.687585830688477
    6. '1' → logprob: -16.750085830688477
    7. '۰' → logprob: -17.062585830688477
    8. '00' → logprob: -17.437585830688477
    9. '[' → logprob: -17.437585830688477
    10. '000' → logprob: -17.500085830688477

Token 51: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002879057079553604
    2. ')' → logprob: -6.5028791427612305
    3. ']
' → logprob: -6.8778791427612305
    4. ' ]' → logprob: -8.12787914276123
    5. ']

' → logprob: -11.25287914276123
    6. '']' → logprob: -11.50287914276123
    7. ')
' → logprob: -11.62787914276123
    8. ' )' → logprob: -12.37787914276123
    9. ' ' → logprob: -12.50287914276123
    10. 'if' → logprob: -13.00287914276123

Token 52: 'count' (ID: 5420)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8878196477890015
    2. '<|end|>' → logprob: -1.6378196477890015
    3. 'for' → logprob: -1.7628196477890015
    4. ' 
' → logprob: -2.262819766998291
    5. '
' → logprob: -2.512819766998291
    6. '\n' → logprob: -3.512819766998291
    7. '<|end|>' → logprob: -6.137819766998291
    8. '  
' → logprob: -6.262819766998291
    9. ' ' → logprob: -6.512819766998291
    10. ')' → logprob: -7.262819766998291

Token 53: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7082463502883911
    2. ' =' → logprob: -0.7082463502883911
    3. '_' → logprob: -4.208246231079102
    4. 's' → logprob: -9.833246231079102
    5. '_=' → logprob: -9.958246231079102
    6. ' ' → logprob: -13.083246231079102
    7. 'er' → logprob: -13.833246231079102
    8. '	' → logprob: -13.833246231079102
    9. '  ' → logprob: -13.958246231079102
    10. ' +=' → logprob: -13.958246231079102

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34964779019355774
    2. ' ' → logprob: -1.2246477603912354
    3. '0' → logprob: -6.7246479988098145
    4. '  ' → logprob: -14.974647521972656
    5. ' ' → logprob: -15.099647521972656
    6. '2' → logprob: -15.474647521972656
    7. '   ' → logprob: -15.849647521972656
    8. 'block' → logprob: -16.349647521972656
    9. ' block' → logprob: -16.599647521972656
    10. '```' → logprob: -16.662147521972656

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03466470167040825
    2. '0' → logprob: -3.4096646308898926
    3. ' ' → logprob: -6.909664630889893
    4. 'block' → logprob: -11.03466510772705
    5. '   ' → logprob: -14.15966510772705
    6. '  ' → logprob: -14.28466510772705
    7. ' block' → logprob: -14.40966510772705
    8. 'bloc' → logprob: -14.40966510772705
    9. 'bl' → logprob: -15.28466510772705
    10. '2' → logprob: -15.34716510772705

Token 56: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21808214485645294
    2. ' for' → logprob: -2.0930821895599365
    3. 'for' → logprob: -2.8430821895599365
    4. '<|end|>' → logprob: -4.843081951141357
    5. ' 
' → logprob: -5.343081951141357
    6. '<|end|>' → logprob: -7.968081951141357
    7. '\n' → logprob: -8.343082427978516
    8. '

' → logprob: -8.468082427978516
    9. ' ' → logprob: -8.593082427978516
    10. ' if' → logprob: -8.593082427978516

Token 57: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8862470388412476
    2. 'for' → logprob: -1.0112470388412476
    3. '
' → logprob: -1.5112470388412476
    4. '<|end|>' → logprob: -6.386247158050537
    5. '```' → logprob: -6.511247158050537
    6. '<|end|>' → logprob: -9.261246681213379
    7. 'i' → logprob: -10.636246681213379
    8. ' 
' → logprob: -10.761246681213379
    9. '\n' → logprob: -10.886246681213379
    10. '	for' → logprob: -11.261246681213379

Token 58: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12479233741760254
    2. ' c' → logprob: -2.7497923374176025
    3. 'i' → logprob: -2.9997923374176025
    4. 'c' → logprob: -6.249792098999023
    5. ' ' → logprob: -6.624792098999023
    6. ' ch' → logprob: -8.874792098999023
    7. 'ch' → logprob: -10.374792098999023
    8. ' char' → logprob: -10.624792098999023
    9. ' _' → logprob: -10.749792098999023
    10. ' s' → logprob: -10.749792098999023

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10123558342456818
    2. 'in' → logprob: -2.3512356281280518
    3. ' ' → logprob: -7.476235389709473
    4. 'n' → logprob: -8.226235389709473
    5. ',' → logprob: -8.726235389709473
    6. 's' → logprob: -11.976235389709473
    7. '	in' → logprob: -12.226235389709473
    8. 'range' → logprob: -12.601235389709473
    9. ' n' → logprob: -12.851235389709473
    10. ' ,' → logprob: -13.101235389709473

Token 60: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.009759752079844475
    2. 'range' → logprob: -4.634759902954102
    3. ' ' → logprob: -12.884759902954102
    4. ' S' → logprob: -14.634759902954102
    5. '   ' → logprob: -15.509759902954102
    6. '  ' → logprob: -15.634759902954102
    7. 'S' → logprob: -16.0097599029541
    8. '	range' → logprob: -16.6347599029541
    9. ' xrange' → logprob: -16.8847599029541
    10. '(range' → logprob: -17.1347599029541

Token 61: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012844942102674395
    2. '(len' → logprob: -9.125128746032715
    3. '(N' → logprob: -11.125128746032715
    4. ' (' → logprob: -13.000128746032715
    5. '(K' → logprob: -13.250128746032715
    6. '1' → logprob: -15.000128746032715
    7. 'len' → logprob: -15.625128746032715
    8. ' ' → logprob: -16.1251277923584
    9. '(n' → logprob: -16.6251277923584
    10. '(length' → logprob: -17.6251277923584

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00032259183353744447
    2. 'N' → logprob: -8.875322341918945
    3. ' ' → logprob: -8.875322341918945
    4. 'len' → logprob: -10.250322341918945
    5. '   ' → logprob: -12.875322341918945
    6. '(' → logprob: -13.375322341918945
    7. 'K' → logprob: -13.875322341918945
    8. ' N' → logprob: -14.000322341918945
    9. ' len' → logprob: -14.812822341918945
    10. '0' → logprob: -15.312822341918945

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14657476544380188
    2. ',len' → logprob: -2.3965747356414795
    3. '(len' → logprob: -3.1465747356414795
    4. 'len' → logprob: -7.396574974060059
    5. ',N' → logprob: -7.521574974060059
    6. '(N' → logprob: -7.521574974060059
    7. '(' → logprob: -7.896574974060059
    8. ' ,' → logprob: -9.021574974060059
    9. ' len' → logprob: -9.771574974060059
    10. ' ' → logprob: -10.771574974060059

Token 64: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00019293125660624355
    2. 'len' → logprob: -8.875192642211914
    3. ' N' → logprob: -9.875192642211914
    4. 'K' → logprob: -14.375192642211914
    5. ' len' → logprob: -15.000192642211914
    6. '   ' → logprob: -15.250192642211914
    7. '	N' → logprob: -15.875192642211914
    8. 'n' → logprob: -16.250192642211914
    9. ' ' → logprob: -16.625192642211914
    10. 'length' → logprob: -18.125192642211914

Token 65: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002614550176076591
    2. ' ):' → logprob: -8.750261306762695
    3. '):
' → logprob: -9.500261306762695
    4. ':' → logprob: -10.625261306762695
    5. ')' → logprob: -12.875261306762695
    6. '):
' → logprob: -14.750261306762695
    7. ',' → logprob: -15.500261306762695
    8. '}:' → logprob: -16.125261306762695
    9. ' :' → logprob: -16.375261306762695
    10. '+' → logprob: -16.625261306762695

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024705438409000635
    2. ')' → logprob: -6.50247049331665
    3. ' ' → logprob: -7.37747049331665
    4. '):' → logprob: -9.002470970153809
    5. '0' → logprob: -9.752470970153809
    6. 'N' → logprob: -10.252470970153809
    7. 'K' → logprob: -10.877470970153809
    8. '>' → logprob: -11.127470970153809
    9. '+' → logprob: -11.377470970153809
    10. ':' → logprob: -11.377470970153809

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009842199506238103
    2. '):
' → logprob: -7.125984191894531
    3. ' ):' → logprob: -9.000984191894531
    4. ')' → logprob: -10.625984191894531
    5. '+' → logprob: -10.750984191894531
    6. ':' → logprob: -12.000984191894531
    7. '):
' → logprob: -13.000984191894531
    8. ',' → logprob: -13.500984191894531
    9. '):

' → logprob: -15.625984191894531
    10. ']:' → logprob: -15.875984191894531

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1886218786239624
    2. ':' → logprob: -2.563621997833252
    3. ' ' → logprob: -2.563621997833252
    4. ' if' → logprob: -4.688621997833252
    5. ' :' → logprob: -6.063621997833252
    6. '    ' → logprob: -6.688621997833252
    7. ',' → logprob: -6.813621997833252
    8. '  ' → logprob: -7.063621997833252
    9. '<|end|>' → logprob: -7.188621997833252
    10. '```' → logprob: -7.938621997833252

Token 69: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43968936800956726
    2. '   ' → logprob: -1.0646893978118896
    3. 'if' (adapté à ' if') → logprob: -5.3146891593933105
    4. '       ' → logprob: -5.8146891593933105
    5. ' ' → logprob: -6.3146891593933105
    6. '```' → logprob: -7.6896891593933105
    7. '    ' → logprob: -8.439689636230469
    8. '	if' → logprob: -9.189689636230469
    9. ' 
' → logprob: -9.439689636230469
    10. '    
' → logprob: -9.439689636230469

Token 70: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.34849366545677185
    2. 'S' → logprob: -1.2234936952590942
    3. ' ' → logprob: -10.473493576049805
    4. ' last' → logprob: -11.723493576049805
    5. 'last' → logprob: -11.973493576049805
    6. '   ' → logprob: -12.473493576049805
    7. '	S' → logprob: -13.848493576049805
    8. '    ' → logprob: -14.973493576049805
    9. '  ' → logprob: -15.098493576049805
    10. '(S' → logprob: -15.348493576049805

Token 71: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. '[i' → logprob: -17.625
    4. '```' → logprob: -18.25
    5. ' [' → logprob: -19.875
    6. '[J' → logprob: -20.375
    7. '   ' → logprob: -21.0
    8. 'j' → logprob: -21.375
    9. '[N' → logprob: -21.75
    10. ' ' → logprob: -22.875

Token 72: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.398680180311203
    2. '==' → logprob: -1.3986802101135254
    3. ']' → logprob: -3.1486802101135254
    4. ' ' → logprob: -3.7736802101135254
    5. ']==' → logprob: -4.273680210113525
    6. ')' → logprob: -6.898680210113525
    7. ' ]' → logprob: -7.148680210113525
    8. ')==' → logprob: -9.523679733276367
    9. ' )' → logprob: -10.148679733276367
    10. '']==' → logprob: -10.523679733276367

Token 73: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12696287035942078
    2. '==' → logprob: -2.126962900161743
    3. ' ' → logprob: -10.626962661743164
    4. ' !=' → logprob: -12.626962661743164
    5. ']==' → logprob: -13.126962661743164
    6. ')' → logprob: -13.376962661743164
    7. '=' → logprob: -13.376962661743164
    8. '!=' → logprob: -14.376962661743164
    9. ')==' → logprob: -14.876962661743164
    10. ' ' → logprob: -15.251962661743164

Token 74: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.1449393332004547
    2. ' last' → logprob: -2.019939422607422
    3. 'S' → logprob: -6.394939422607422
    4. ' S' → logprob: -7.519939422607422
    5. ' ' → logprob: -10.269939422607422
    6. '	last' → logprob: -12.144939422607422
    7. '  ' → logprob: -13.394939422607422
    8. 'lasti' → logprob: -13.519939422607422
    9. 'las' → logprob: -13.644939422607422
    10. '   ' → logprob: -13.769939422607422

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026430921629071236
    2. ':
' → logprob: -3.65143084526062
    3. '       ' → logprob: -9.5264310836792
    4. '   ' → logprob: -10.9014310836792
    5. '):
' → logprob: -11.6514310836792
    6. '):' → logprob: -11.9014310836792
    7. ':block' → logprob: -12.6514310836792
    8. '    ' → logprob: -12.7764310836792
    9. ' and' → logprob: -12.9014310836792
    10. ':
' → logprob: -13.0264310836792

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016490597277879715
    2. '   ' → logprob: -5.266490459442139
    3. 'count' → logprob: -5.516490459442139
    4. ' count' → logprob: -5.766490459442139
    5. '
' → logprob: -6.141490459442139
    6. '	count' → logprob: -7.141490459442139
    7. ':
' → logprob: -8.266490936279297
    8. '    ' → logprob: -8.516490936279297
    9. ':' → logprob: -9.016490936279297
    10. '        
' → logprob: -9.141490936279297

Token 77: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0067355032078921795
    2. ' count' → logprob: -5.006735324859619
    3. '       ' → logprob: -11.756735801696777
    4. '   ' → logprob: -11.881735801696777
    5. '	count' → logprob: -13.256735801696777
    6. '
' → logprob: -13.381735801696777
    7. 'block' → logprob: -14.131735801696777
    8. '           ' → logprob: -14.381735801696777
    9. '_count' → logprob: -15.256735801696777
    10. '.count' → logprob: -16.63173484802246

Token 78: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1523256152868271
    2. '+=' → logprob: -2.0273256301879883
    3. '+' → logprob: -4.652325630187988
    4. ' +' → logprob: -9.777325630187988
    5. '=' → logprob: -13.152325630187988
    6. '++' → logprob: -13.402325630187988
    7. '<|end|>' → logprob: -13.652325630187988
    8. ']+=' → logprob: -14.027325630187988
    9. '+="' → logprob: -14.277325630187988
    10. '+='' → logprob: -14.402325630187988

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.87520408630371
    4. '```' → logprob: -18.12520408630371
    5. '<|end|>' → logprob: -18.62520408630371
    6. '+' → logprob: -19.25020408630371
    7. 'count' → logprob: -19.43770408630371
    8. '  ' → logprob: -19.81270408630371
    9. '0' → logprob: -19.87520408630371
    10. '１' → logprob: -20.50020408630371

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -20.75
    4. '   ' → logprob: -21.25
    5. '<|end|>' → logprob: -21.375
    6. '１' → logprob: -22.75
    7. '-' → logprob: -23.25
    8. '`' → logprob: -23.375
    9. '۱' → logprob: -23.5
    10. '  ' → logprob: -23.625

Token 81: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.779689371585846
    2. 'else' → logprob: -1.2796893119812012
    3. '
' → logprob: -1.9046893119812012
    4. ' else' → logprob: -2.279689311981201
    5. '	else' → logprob: -5.529689311981201
    6. '<|end|>' → logprob: -5.654689311981201
    7. '    
' → logprob: -7.029689311981201
    8. '\n' → logprob: -7.279689311981201
    9. ' 
' → logprob: -7.529689311981201
    10. 'elif' → logprob: -7.779689311981201

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008956079371273518
    2. 'else' → logprob: -4.883955955505371
    3. ' else' → logprob: -6.633955955505371
    4. '	else' → logprob: -10.633955955505371
    5. '       ' → logprob: -12.633955955505371
    6. '```' → logprob: -12.758955955505371
    7. 'elif' → logprob: -13.758955955505371
    8. '   ' → logprob: -14.008955955505371
    9. ')' → logprob: -15.508955955505371
    10. '}else' → logprob: -15.758955955505371

Token 83: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.18063372373580933
    2. ' else' → logprob: -1.805633783340454
    3. '   ' → logprob: -7.180633544921875
    4. '	else' → logprob: -9.180633544921875
    5. ' ' → logprob: -11.805633544921875
    6. 'e' → logprob: -12.930633544921875
    7. 'elif' → logprob: -12.930633544921875
    8. ')' → logprob: -13.055633544921875
    9. '_else' → logprob: -13.305633544921875
    10. ':
' → logprob: -13.555633544921875

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008792304433882236
    2. ':
' → logprob: -4.758792400360107
    3. '<|end|>' → logprob: -9.63379192352295
    4. '
' → logprob: -10.00879192352295
    5. '```' → logprob: -11.00879192352295
    6. '       ' → logprob: -11.50879192352295
    7. '   ' → logprob: -11.50879192352295
    8. '<|end|>' → logprob: -11.75879192352295
    9. ':return' → logprob: -12.50879192352295
    10. ' :' → logprob: -13.00879192352295

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06936925649642944
    2. ' blocs' → logprob: -3.194369316101074
    3. 'bl' → logprob: -3.819369316101074
    4. '   ' → logprob: -5.819369316101074
    5. 'bloc' → logprob: -8.444369316101074
    6. '
' → logprob: -8.444369316101074
    7. ' bloc' → logprob: -8.569369316101074
    8. '```' → logprob: -8.569369316101074
    9. ' bl' → logprob: -9.444369316101074
    10. '_bloc' → logprob: -10.319369316101074

Token 86: ' blocs' (ID: 182599)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.6863731741905212
    2. ' blocs' → logprob: -0.8113731741905212
    3. '       ' → logprob: -3.186373233795166
    4. ' bl' → logprob: -5.061373233795166
    5. '   ' → logprob: -5.811373233795166
    6. ' bloc' → logprob: -7.436373233795166
    7. 'bloc' → logprob: -8.061372756958008
    8. ' blocks' → logprob: -8.686372756958008
    9. '           ' → logprob: -8.936372756958008
    10. 'blocks' → logprob: -9.186372756958008

Token 87: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04859611392021179
    2. '.' → logprob: -3.048596143722534
    3. '.app' → logprob: -12.048596382141113
    4. '.ap' → logprob: -14.048596382141113
    5. '.extend' → logprob: -14.298596382141113
    6. '.Append' → logprob: -14.423596382141113
    7. '.add' → logprob: -15.048596382141113
    8. '.push' → logprob: -15.548596382141113
    9. 'append' → logprob: -15.548596382141113
    10. ' .' → logprob: -16.423595428466797

Token 88: '(count' (ID: 25892)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.06369102746248245
    2. '(' → logprob: -2.8136911392211914
    3. '(count' → logprob: -6.438691139221191
    4. '(last' → logprob: -9.438691139221191
    5. '(
' → logprob: -10.813691139221191
    6. '([' → logprob: -10.813691139221191
    7. '(('' → logprob: -13.563691139221191
    8. '(len' → logprob: -14.688691139221191
    9. '(

' → logprob: -14.813691139221191
    10. '(c' → logprob: -15.563691139221191

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008340472122654319
    2. ')
' → logprob: -7.125833988189697
    3. ' )' → logprob: -11.125834465026855
    4. ',' → logprob: -11.875834465026855
    5. '),' → logprob: -12.625834465026855
    6. ',)' → logprob: -14.250834465026855
    7. ')n' → logprob: -14.500834465026855
    8. ');' → logprob: -14.750834465026855
    9. ')
' → logprob: -14.750834465026855
    10. '<|end|>' → logprob: -14.750834465026855

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14739622175693512
    2. '        
' → logprob: -2.7723963260650635
    3. 'count' → logprob: -4.147396087646484
    4. ' 
' → logprob: -4.397396087646484
    5. '
' → logprob: -4.522396087646484
    6. '`
' → logprob: -4.772396087646484
    7. '\n' → logprob: -4.897396087646484
    8. '    
' → logprob: -5.397396087646484
    9. '  
' → logprob: -6.147396087646484
    10. '   ' → logprob: -6.147396087646484

Token 91: ' count' (ID: 3605)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.03500927984714508
    2. 'count' (adapté à ' count') → logprob: -3.5350093841552734
    3. ' last' → logprob: -5.285009384155273
    4. ' count' → logprob: -9.535009384155273
    5. '   ' → logprob: -9.910009384155273
    6. 'block' → logprob: -10.660009384155273
    7. '    
' → logprob: -11.535009384155273
    8. 'bl' → logprob: -12.410009384155273
    9. '	last' → logprob: -12.660009384155273
    10. '        
' → logprob: -12.910009384155273

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858805239200592
    2. '=' → logprob: -3.0485880374908447
    3. ' ' → logprob: -14.548587799072266
    4. ' =
' → logprob: -16.798587799072266
    5. '＝' → logprob: -16.923587799072266
    6. ' =)' → logprob: -17.048587799072266
    7. '1' → logprob: -17.923587799072266
    8. 's' → logprob: -18.173587799072266
    9. '0' → logprob: -18.423587799072266
    10. ' +=' → logprob: -18.548587799072266

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '0' → logprob: -16.50004005432129
    4. '   ' → logprob: -16.87504005432129
    5. '```' → logprob: -19.37504005432129
    6. '  ' → logprob: -20.18754005432129
    7. '`' → logprob: -20.25004005432129
    8. '۱' → logprob: -20.43754005432129
    9. '１' → logprob: -20.75004005432129
    10. '' → logprob: -20.75004005432129

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '0' → logprob: -16.000001907348633
    4. '   ' → logprob: -18.437501907348633
    5. '```' → logprob: -18.562501907348633
    6. '' → logprob: -19.687501907348633
    7. '۱' → logprob: -19.750001907348633
    8. '１' → logprob: -19.812501907348633
    9. '१' → logprob: -19.937501907348633
    10. '`' → logprob: -20.000001907348633

Token 95: '
' (ID: 198)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.2503124177455902
    2. ' last' → logprob: -1.6253124475479126
    3. '[last' → logprob: -4.375312328338623
    4. '	last' → logprob: -5.500312328338623
    5. '<|end|>' → logprob: -5.750312328338623
    6. '   ' → logprob: -6.875312328338623
    7. ',last' → logprob: -6.875312328338623
    8. '       ' → logprob: -7.000312328338623
    9. '(last' → logprob: -7.375312328338623
    10. ' ' → logprob: -7.625312328338623

Token 96: '       ' (ID: 309)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.05605607107281685
    2. ' last' → logprob: -3.056056022644043
    3. '       ' → logprob: -5.556056022644043
    4. '	last' → logprob: -6.556056022644043
    5. '   ' → logprob: -6.681056022644043
    6. '[last' → logprob: -7.681056022644043
    7. ',last' → logprob: -8.806056022644043
    8. '<|end|>' → logprob: -8.931056022644043
    9. '
' → logprob: -9.681056022644043
    10. ' ' → logprob: -10.306056022644043

Token 97: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -6.2729995988775045e-06
    2. ' last' → logprob: -12.125006675720215
    3. 'S' → logprob: -14.375006675720215
    4. 'las' → logprob: -16.8750057220459
    5. 'lasti' → logprob: -17.5000057220459
    6. '	last' → logprob: -17.7500057220459
    7. '   ' → logprob: -18.2500057220459
    8. '```' → logprob: -19.5000057220459
    9. 'Last' → logprob: -19.6250057220459
    10. ' ' → logprob: -19.8750057220459

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07002702355384827
    2. '=' → logprob: -2.6950271129608154
    3. ' ' → logprob: -9.320027351379395
    4. ' =
' → logprob: -15.320027351379395
    5. ' ='' → logprob: -15.695027351379395
    6. ' ==' → logprob: -15.695027351379395
    7. 'space' → logprob: -15.945027351379395
    8. '<|end|>' → logprob: -16.445026397705078
    9. ' ' → logprob: -16.695026397705078
    10. ' ="' → logprob: -16.945026397705078

Token 99: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03804229199886322
    2. ' S' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.038042068481445
    4. ' ' → logprob: -17.413042068481445
    5. '_S' → logprob: -17.663042068481445
    6. '	S' → logprob: -18.038042068481445
    7. ''S' → logprob: -18.913042068481445
    8. 's' → logprob: -19.413042068481445
    9. '>S' → logprob: -19.788042068481445
    10. '=S' → logprob: -19.788042068481445

Token 100: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0036018555983901024
    2. '[' → logprob: -5.628602027893066
    3. '[
' → logprob: -14.253602027893066
    4. '```' → logprob: -14.253602027893066
    5. ' [' → logprob: -15.753602027893066
    6. '[i' → logprob: -16.12860107421875
    7. 'j' → logprob: -16.37860107421875
    8. '[...]' → logprob: -16.75360107421875
    9. '[J' → logprob: -16.87860107421875
    10. '[]' → logprob: -17.37860107421875

Token 101: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013284345157444477
    2. '}' → logprob: -4.638284206390381
    3. '<|end|>' → logprob: -5.763284206390381
    4. ']' → logprob: -8.013284683227539
    5. '<|end|>' → logprob: -10.763284683227539
    6. ' )' → logprob: -11.888284683227539
    7. '```' → logprob: -12.013284683227539
    8. ')
' → logprob: -12.138284683227539
    9. ')}' → logprob: -12.763284683227539
    10. '#' → logprob: -13.013284683227539

Token 102: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0173743963241577
    2. '+' → logprob: -1.3923743963241577
    3. 'for' → logprob: -1.6423743963241577
    4. '<|end|>' → logprob: -3.1423745155334473
    5. '[' → logprob: -3.2673745155334473
    6. ')' → logprob: -3.5173745155334473
    7. '```' → logprob: -3.5173745155334473
    8. ']' → logprob: -4.392374515533447
    9. 'b' → logprob: -5.267374515533447
    10. '
' → logprob: -5.267374515533447

Token 103: ' block' (ID: 4355)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0883253812789917
    2. 'j' → logprob: -1.4633253812789917
    3. 'for' → logprob: -2.2133255004882812
    4. '<|end|>' → logprob: -2.5883255004882812
    5. '```' → logprob: -2.8383255004882812
    6. '   ' → logprob: -3.0883255004882812
    7. '#' → logprob: -3.8383255004882812
    8. '<|end|>' → logprob: -3.8383255004882812
    9. 'if' → logprob: -4.213325500488281
    10. ']' → logprob: -4.338325500488281

Token 104: '_ct' (ID: 61056)
  Prédit: '_ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ct' → logprob: -0.0005669722449965775
    2. '_' → logprob: -7.5005669593811035
    3. 'ct' → logprob: -11.875567436218262
    4. 's' → logprob: -12.625567436218262
    5. ' _' → logprob: -13.250567436218262
    6. '_count' → logprob: -14.875567436218262
    7. '_CT' → logprob: -15.250567436218262
    8. '_ctl' → logprob: -15.750567436218262
    9. '_c' → logprob: -15.875567436218262
    10. '=_' → logprob: -16.500566482543945

Token 105: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04053843021392822
    2. '+=' → logprob: -4.040538311004639
    3. '+' → logprob: -4.165538311004639
    4. ' ' → logprob: -5.165538311004639
    5. ' +' → logprob: -7.540538311004639
    6. '=' → logprob: -8.040538787841797
    7. ' =' → logprob: -9.915538787841797
    8. '<|end|>' → logprob: -12.665538787841797
    9. ' ' → logprob: -14.415538787841797
    10. '++' → logprob: -15.165538787841797

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3868711292743683
    2. ' ' → logprob: -1.136871099472046
    3. '<|end|>' → logprob: -16.511871337890625
    4. ' ' → logprob: -17.886871337890625
    5. '```' → logprob: -18.761871337890625
    6. '0' → logprob: -19.136871337890625
    7. '   ' → logprob: -19.511871337890625
    8. '  ' → logprob: -19.886871337890625
    9. '    ' → logprob: -20.199371337890625
    10. ' one' → logprob: -20.261871337890625

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -17.625009536743164
    4. '<|end|>' → logprob: -18.625009536743164
    5. '   ' → logprob: -19.250009536743164
    6. '۱' → logprob: -20.187509536743164
    7. '１' → logprob: -20.750009536743164
    8. '  ' → logprob: -21.000009536743164
    9. '`' → logprob: -21.062509536743164
    10. '१' → logprob: -21.062509536743164

Token 108: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6945191025733948
    2. '<|end|>' → logprob: -1.31951904296875
    3. ')' → logprob: -2.69451904296875
    4. '#' → logprob: -3.44451904296875
    5. '```' → logprob: -3.56951904296875
    6. ' blocs' → logprob: -4.06951904296875
    7. '
' → logprob: -4.06951904296875
    8. '+' → logprob: -4.56951904296875
    9. ']' → logprob: -4.56951904296875
    10. 'bl' → logprob: -4.56951904296875

Token 109: 'if' (ID: 366)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.08725457638502121
    2. 'b' → logprob: -3.337254524230957
    3. ')' → logprob: -4.337254524230957
    4. 'if' → logprob: -4.462254524230957
    5. ' blocs' → logprob: -4.837254524230957
    6. 'for' → logprob: -5.337254524230957
    7. '```' → logprob: -5.837254524230957
    8. '#' → logprob: -5.837254524230957
    9. ']' → logprob: -6.337254524230957
    10. 'blo' → logprob: -7.337254524230957

Token 110: ' S' (ID: 336)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.3419749140739441
    2. 'count' → logprob: -1.4669749736785889
    3. ' S' → logprob: -3.341974973678589
    4. 'S' → logprob: -4.46697473526001
    5. ' N' → logprob: -5.46697473526001
    6. ' block' → logprob: -5.84197473526001
    7. ' j' → logprob: -6.59197473526001
    8. 'N' → logprob: -6.59197473526001
    9. ' last' → logprob: -7.21697473526001
    10. ' ' → logprob: -7.34197473526001

Token 111: '[N' (ID: 49776)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.012751311995089054
    2. '[N' → logprob: -4.38775110244751
    3. '[' → logprob: -8.637751579284668
    4. '[len' → logprob: -10.262751579284668
    5. '[j' → logprob: -11.762751579284668
    6. ' and' → logprob: -11.887751579284668
    7. '[last' → logprob: -12.137751579284668
    8. 'and' → logprob: -12.887751579284668
    9. '[S' → logprob: -13.512751579284668
    10. '[n' → logprob: -13.887751579284668

Token 112: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011231913231313229
    2. ' -' → logprob: -7.126123428344727
    3. ']' → logprob: -8.626123428344727
    4. '1' → logprob: -9.001123428344727
    5. '[' → logprob: -12.376123428344727
    6. ' ' → logprob: -12.876123428344727
    7. '[-' → logprob: -13.501123428344727
    8. ']==' → logprob: -13.876123428344727
    9. '0' → logprob: -14.001123428344727
    10. ']-' → logprob: -14.126123428344727

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.125045776367188
    3. '2' → logprob: -12.250045776367188
    4. '-' → logprob: -15.750045776367188
    5. ')' → logprob: -15.937545776367188
    6. '   ' → logprob: -16.125045776367188
    7. '```' → logprob: -16.250045776367188
    8. '１' → logprob: -16.687545776367188
    9. '۱' → logprob: -17.062545776367188
    10. '>' → logprob: -17.062545776367188

Token 114: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5795077681541443
    2. '==' → logprob: -0.9545077681541443
    3. ']' → logprob: -3.204507827758789
    4. ')' → logprob: -4.579507827758789
    5. ']==' → logprob: -6.079507827758789
    6. ' ' → logprob: -6.954507827758789
    7. '=' → logprob: -7.954507827758789
    8. ' ]' → logprob: -8.454507827758789
    9. ')==' → logprob: -9.954507827758789
    10. ' )' → logprob: -9.954507827758789

Token 115: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16025103628635406
    2. ' ==' → logprob: -1.9102510213851929
    3. '=' → logprob: -11.535250663757324
    4. ' ' → logprob: -11.660250663757324
    5. '!=' → logprob: -12.535250663757324
    6. '==
' → logprob: -13.535250663757324
    7. ')' → logprob: -14.285250663757324
    8. ' !=' → logprob: -14.410250663757324
    9. ']==' → logprob: -14.660250663757324
    10. ' =' → logprob: -15.035250663757324

Token 116: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.16063708066940308
    2. ' last' → logprob: -1.9106371402740479
    3. 'S' → logprob: -8.035636901855469
    4. ' S' → logprob: -9.410636901855469
    5. ' ' → logprob: -12.660636901855469
    6. '	last' → logprob: -13.035636901855469
    7. '(last' → logprob: -14.660636901855469
    8. 'lasti' → logprob: -14.785636901855469
    9. 'Last' → logprob: -15.035636901855469
    10. '[last' → logprob: -15.035636901855469

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0549178272485733
    2. ':
' → logprob: -2.929917812347412
    3. ' :' → logprob: -11.30491828918457
    4. ' :
' → logprob: -11.67991828918457
    5. '   ' → logprob: -11.92991828918457
    6. ':
' → logprob: -12.55491828918457
    7. '):
' → logprob: -13.67991828918457
    8. '       ' → logprob: -14.17991828918457
    9. '=' → logprob: -14.42991828918457
    10. ':

' → logprob: -14.80491828918457

Token 118: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.19774597883224487
    2. ' count' → logprob: -1.8227460384368896
    3. '   ' → logprob: -4.3227458000183105
    4. '       ' → logprob: -5.4477458000183105
    5. '	count' → logprob: -9.072746276855469
    6. '
' → logprob: -9.947746276855469
    7. '_count' → logprob: -10.822746276855469
    8. '.count' → logprob: -10.822746276855469
    9. '    ' → logprob: -11.197746276855469
    10. '[count' → logprob: -11.572746276855469

Token 119: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.005234594456851482
    2. ' count' → logprob: -5.255234718322754
    3. '   ' → logprob: -15.005234718322754
    4. '	count' → logprob: -15.255234718322754
    5. '
' → logprob: -15.880234718322754
    6. ' ' → logprob: -16.130233764648438
    7. '_count' → logprob: -17.755233764648438
    8. '.count' → logprob: -18.005233764648438
    9. '$count' → logprob: -18.380233764648438
    10. '[count' → logprob: -18.880233764648438

Token 120: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47408798336982727
    2. '+=' → logprob: -0.9740879535675049
    3. '+' → logprob: -11.724087715148926
    4. '=' → logprob: -13.349087715148926
    5. ']+=' → logprob: -14.599087715148926
    6. '   ' → logprob: -15.099087715148926
    7. '+="' → logprob: -16.099088668823242
    8. '+='' → logprob: -16.724088668823242
    9. '    ' → logprob: -16.974088668823242
    10. '+=(' → logprob: -17.099088668823242

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. '0' → logprob: -16.764163970947266
    4. '   ' → logprob: -18.764163970947266
    5. '<|end|>' → logprob: -18.764163970947266
    6. '  ' → logprob: -18.889163970947266
    7. '```' → logprob: -19.139163970947266
    8. '`' → logprob: -19.514163970947266
    9. '2' → logprob: -20.264163970947266
    10. '-' → logprob: -20.264163970947266

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '0' → logprob: -15.250051498413086
    4. '-' → logprob: -17.625051498413086
    5. '```' → logprob: -19.875051498413086
    6. '`' → logprob: -20.000051498413086
    7. '   ' → logprob: -20.125051498413086
    8. '<|end|>' → logprob: -21.125051498413086
    9. '  ' → logprob: -21.375051498413086
    10. '１' → logprob: -21.500051498413086

Token 123: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47487324476242065
    2. 'bl' → logprob: -0.9748732447624207
    3. ' else' → logprob: -7.599873065948486
    4. '
' → logprob: -9.849873542785645
    5. 'elif' → logprob: -9.849873542785645
    6. ' blocs' → logprob: -9.849873542785645
    7. '```' → logprob: -10.599873542785645
    8. ')' → logprob: -10.724873542785645
    9. '}else' → logprob: -10.974873542785645
    10. '   ' → logprob: -11.099873542785645

Token 124: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06200936436653137
    2. 'bl' → logprob: -2.812009334564209
    3. ' else' → logprob: -10.187009811401367
    4. 'elif' → logprob: -13.062009811401367
    5. '```' → logprob: -14.687009811401367
    6. '
' → logprob: -15.187009811401367
    7. '   ' → logprob: -15.187009811401367
    8. '}else' → logprob: -15.312009811401367
    9. 'elses' → logprob: -16.187009811401367
    10. ' bl' → logprob: -16.312009811401367

Token 125: ' blocs' (ID: 182599)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.018337469547986984
    2. 'else' → logprob: -4.018337249755859
    3. ' blocs' → logprob: -9.64333724975586
    4. '
' → logprob: -10.51833724975586
    5. '```' → logprob: -10.64333724975586
    6. 'bloc' → logprob: -10.89333724975586
    7. 'elif' → logprob: -11.39333724975586
    8. 'blocks' → logprob: -11.39333724975586
    9. 'for' → logprob: -12.01833724975586
    10. ' bl' → logprob: -12.26833724975586

Token 126: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015081972815096378
    2. '.' → logprob: -6.5015082359313965
    3. 'append' → logprob: -12.376507759094238
    4. '.app' → logprob: -13.626507759094238
    5. '.ap' → logprob: -15.501507759094238
    6. '.extend' → logprob: -16.251508712768555
    7. ' .' → logprob: -17.251508712768555
    8. '[-' → logprob: -17.876508712768555
    9. '_append' → logprob: -18.126508712768555
    10. '.pop' → logprob: -18.626508712768555

Token 127: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0002036595979006961
    2. '(' → logprob: -8.500204086303711
    3. '(
' → logprob: -15.625204086303711
    4. 'count' → logprob: -16.75020408630371
    5. ' (' → logprob: -19.25020408630371
    6. '(

' → logprob: -19.87520408630371
    7. '(value' → logprob: -20.12520408630371
    8. '=count' → logprob: -20.12520408630371
    9. '((' → logprob: -20.37520408630371
    10. '(cnt' → logprob: -20.50020408630371

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16027408838272095
    2. ')
' → logprob: -1.9102740287780762
    3. 'else' → logprob: -10.285274505615234
    4. ' )' → logprob: -11.785274505615234
    5. ' )
' → logprob: -12.660274505615234
    6. ')

' → logprob: -12.910274505615234
    7. ')
' → logprob: -13.535274505615234
    8. ')#' → logprob: -14.660274505615234
    9. ' else' → logprob: -15.785274505615234
    10. '   ' → logprob: -15.910274505615234

Token 129: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0008153468370437622
    2. ' else' → logprob: -7.125815391540527
    3. '```' → logprob: -12.125815391540527
    4. 'elif' → logprob: -12.750815391540527
    5. '
' → logprob: -13.625815391540527
    6. '#else' → logprob: -15.250815391540527
    7. '<|end|>' → logprob: -15.375815391540527
    8. '}else' → logprob: -15.875815391540527
    9. ')' → logprob: -16.00081443786621
    10. '#' → logprob: -16.00081443786621

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3558075726032257
    2. ':
' → logprob: -1.3558075428009033
    3. '   ' → logprob: -3.4808075428009033
    4. '{' → logprob: -5.105807781219482
    5. 'count' → logprob: -7.105807781219482
    6. '{
' → logprob: -7.605807781219482
    7. '       ' → logprob: -7.605807781219482
    8. '[' → logprob: -7.605807781219482
    9. ' :
' → logprob: -7.730807781219482
    10. ' :' → logprob: -7.855807781219482

Token 131: '   ' (ID: 271)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.016890130937099457
    2. '   ' → logprob: -4.141890048980713
    3. 'bloc' → logprob: -7.766890048980713
    4. ' blocs' → logprob: -8.891890525817871
    5. '       ' → logprob: -9.266890525817871
    6. '```' → logprob: -10.266890525817871
    7. ' ' → logprob: -10.391890525817871
    8. 'block' → logprob: -10.641890525817871
    9. 'count' → logprob: -10.641890525817871
    10. '1' → logprob: -11.016890525817871

Token 132: ' blocs' (ID: 182599)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -8.876193169271573e-05
    2. 'count' → logprob: -9.750088691711426
    3. '   ' → logprob: -11.125088691711426
    4. 'bloc' → logprob: -11.625088691711426
    5. ' blocs' → logprob: -13.125088691711426
    6. 'blocks' → logprob: -13.250088691711426
    7. 'block' → logprob: -13.625088691711426
    8. '```' → logprob: -14.375088691711426
    9. 'blo' → logprob: -15.125088691711426
    10. '1' → logprob: -15.125088691711426

Token 133: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014060820103622973
    2. '.' → logprob: -8.875140190124512
    3. '.extend' → logprob: -14.750140190124512
    4. 'append' → logprob: -15.625140190124512
    5. '.app' → logprob: -16.625141143798828
    6. '.setdefault' → logprob: -17.500141143798828
    7. ').' → logprob: -17.500141143798828
    8. ' .' → logprob: -17.500141143798828
    9. '.push' → logprob: -18.625141143798828
    10. '```' → logprob: -18.875141143798828

Token 134: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.32392441527918e-05
    2. '(count' → logprob: -10.375053405761719
    3. '1' → logprob: -10.750053405761719
    4. 'count' → logprob: -14.500053405761719
    5. '(
' → logprob: -17.37505340576172
    6. '((' → logprob: -17.37505340576172
    7. '(int' → logprob: -19.12505340576172
    8. ' (' → logprob: -19.37505340576172
    9. '`' → logprob: -19.50005340576172
    10. '```' → logprob: -20.37505340576172

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014341950416565
    2. ')
' → logprob: -1.7014341354370117
    3. ' )' → logprob: -11.576434135437012
    4. ' )
' → logprob: -12.701434135437012
    5. ')
' → logprob: -12.701434135437012
    6. ')

' → logprob: -13.201434135437012
    7. '   ' → logprob: -13.701434135437012
    8. 'count' → logprob: -14.826434135437012
    9. '),' → logprob: -15.076434135437012
    10. ',' → logprob: -15.201434135437012

Token 136: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' count' (ID: 3605)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.0023687512148171663
    2. 'count' (adapté à ' count') → logprob: -6.127368927001953
    3. 'block' → logprob: -8.752368927001953
    4. 'last' → logprob: -11.127368927001953
    5. 'bloc' → logprob: -12.627368927001953
    6. 'blocks' → logprob: -13.127368927001953
    7. 'if' → logprob: -13.252368927001953
    8. 'blo' → logprob: -13.877368927001953
    9. ' blocs' → logprob: -14.377368927001953
    10. 'cl' → logprob: -14.502368927001953

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002613358374219388
    2. ' =' → logprob: -8.250261306762695
    3. '1' → logprob: -17.750261306762695
    4. '=

' → logprob: -19.250261306762695
    5. '=
' → logprob: -19.500261306762695
    6. '＝' → logprob: -19.500261306762695
    7. '+=' → logprob: -20.125261306762695
    8. '=}' → logprob: -21.875261306762695
    9. ' ' → logprob: -22.000261306762695
    10. '.=' → logprob: -22.000261306762695

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005539863486774266
    2. ' ' → logprob: -7.500554084777832
    3. '0' → logprob: -14.000554084777832
    4. '   ' → logprob: -16.125553131103516
    5. '2' → logprob: -17.813053131103516
    6. '  ' → logprob: -18.125553131103516
    7. '`' → logprob: -18.375553131103516
    8. '```' → logprob: -18.375553131103516
    9. '=' → logprob: -18.938053131103516
    10. '<|end|>' → logprob: -19.188053131103516

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '0' → logprob: -15.000009536743164
    4. '   ' → logprob: -17.687509536743164
    5. '' → logprob: -17.875009536743164
    6. '2' → logprob: -18.062509536743164
    7. '`' → logprob: -18.250009536743164
    8. '```' → logprob: -18.875009536743164
    9. '۱' → logprob: -18.937509536743164
    10. '１' → logprob: -19.062509536743164

Token 141: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.4291670620441437
    2. 'bl' → logprob: -1.0541670322418213
    3. 'block' → logprob: -8.429166793823242
    4. 'S' → logprob: -9.554166793823242
    5. 'blocks' → logprob: -9.554166793823242
    6. 'bloc' → logprob: -10.429166793823242
    7. ' blocs' → logprob: -11.179166793823242
    8. 'if' → logprob: -11.179166793823242
    9. '#' → logprob: -11.304166793823242
    10. 'N' → logprob: -11.929166793823242

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245826363563538
    2. ' =' → logprob: -3.7732458114624023
    3. '=S' → logprob: -14.773245811462402
    4. '=

' → logprob: -18.39824676513672
    5. '=
' → logprob: -18.52324676513672
    6. ' ' → logprob: -19.14824676513672
    7. '=s' → logprob: -19.27324676513672
    8. '=}' → logprob: -19.77324676513672
    9. 'S' → logprob: -19.89824676513672
    10. ')' → logprob: -20.02324676513672

Token 145: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.000158842682139948
    2. ' S' → logprob: -8.75015926361084
    3. ' ' → logprob: -15.87515926361084
    4. '`' → logprob: -16.625158309936523
    5. '   ' → logprob: -17.000158309936523
    6. ''S' → logprob: -17.625158309936523
    7. '_S' → logprob: -18.125158309936523
    8. '	S' → logprob: -18.500158309936523
    9. '  ' → logprob: -18.750158309936523
    10. '(S' → logprob: -18.875158309936523

Token 146: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.250007629394531
    3. '[-' → logprob: -13.000007629394531
    4. '[S' → logprob: -15.375007629394531
    5. '[
' → logprob: -16.62500762939453
    6. ' [' → logprob: -17.12500762939453
    7. 'N' → logprob: -17.37500762939453
    8. ''[' → logprob: -17.37500762939453
    9. '`' → logprob: -17.75000762939453
    10. '[n' → logprob: -18.12500762939453

Token 147: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.464347173576243e-05
    2. '[' → logprob: -10.37503433227539
    3. '1' → logprob: -13.25003433227539
    4. '[-' → logprob: -14.12503433227539
    5. ' -' → logprob: -15.37503433227539
    6. '```' → logprob: -15.62503433227539
    7. ']' → logprob: -16.75003433227539
    8. '-
' → logprob: -16.75003433227539
    9. '2' → logprob: -16.87503433227539
    10. '[
' → logprob: -17.25003433227539

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.514650183613412e-05
    2. ' ' → logprob: -9.875055313110352
    3. '2' → logprob: -14.000055313110352
    4. '-' → logprob: -14.375055313110352
    5. '[' → logprob: -14.562555313110352
    6. ']' → logprob: -15.250055313110352
    7. '0' → logprob: -15.375055313110352
    8. '   ' → logprob: -15.937555313110352
    9. 'S' → logprob: -16.06255531311035
    10. '```' → logprob: -16.18755531311035

Token 149: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8908587662735954e-05
    2. ')
' → logprob: -11.625019073486328
    3. ' )' → logprob: -12.125019073486328
    4. '<|end|>' → logprob: -13.750019073486328
    5. ']' → logprob: -14.125019073486328
    6. '#' → logprob: -14.250019073486328
    7. '}' → logprob: -14.750019073486328
    8. '")' → logprob: -15.000019073486328
    9. '')' → logprob: -15.000019073486328
    10. '```' → logprob: -15.375019073486328

Token 150: '   ' (ID: 271)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.0014202340971678495
    2. '#' → logprob: -7.501420021057129
    3. 'for' → logprob: -8.251420021057129
    4. ')' → logprob: -8.876420021057129
    5. 'block' → logprob: -9.001420021057129
    6. '```' → logprob: -9.001420021057129
    7. 'if' → logprob: -9.501420021057129
    8. 'blocks' → logprob: -10.501420021057129
    9. '<|end|>' → logprob: -10.501420021057129
    10. 'print' → logprob: -10.501420021057129

Token 151: ' blocs' (ID: 182599)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.3224009871482849
    2. 'bl' → logprob: -1.3224010467529297
    3. 'bloc' → logprob: -4.94740104675293
    4. 'blok' → logprob: -6.44740104675293
    5. '<|end|>' → logprob: -8.57240104675293
    6. '```' → logprob: -9.07240104675293
    7. '#' → logprob: -10.69740104675293
    8. 'blo' → logprob: -10.94740104675293
    9. 'blocks' → logprob: -10.94740104675293
    10. 'blk' → logprob: -11.19740104675293

Token 152: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.062046218663454056
    2. '.' → logprob: -2.8120462894439697
    3. 'append' → logprob: -9.68704605102539
    4. '.app' → logprob: -11.18704605102539
    5. '.extend' → logprob: -13.43704605102539
    6. '.ap' → logprob: -14.68704605102539
    7. '.Append' → logprob: -15.81204605102539
    8. '_append' → logprob: -15.93704605102539
    9. '.insert' → logprob: -16.31204605102539
    10. '.push' → logprob: -16.43704605102539

Token 153: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.04914863407611847
    2. '(' → logprob: -3.0491485595703125
    3. 'count' → logprob: -7.5491485595703125
    4. '1' → logprob: -10.299148559570312
    5. '(
' → logprob: -14.299148559570312
    6. ' count' → logprob: -16.174148559570312
    7. '$count' → logprob: -17.424148559570312
    8. '<count' → logprob: -17.424148559570312
    9. '	count' → logprob: -17.549148559570312
    10. '[count' → logprob: -17.799148559570312

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.625
    3. ')
' → logprob: -16.125
    4. '))' → logprob: -18.625
    5. ')`' → logprob: -18.875
    6. ')#' → logprob: -19.0
    7. ']' → logprob: -19.5
    8. '()' → logprob: -19.5
    9. '#' → logprob: -19.5
    10. '),' → logprob: -19.875

Token 155: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5723868012428284
    2. '#' → logprob: -2.4473867416381836
    3. 'for' → logprob: -3.1973867416381836
    4. 'total' → logprob: -3.3223867416381836
    5. 'diff' → logprob: -3.4473867416381836
    6. 'blocks' → logprob: -3.6973867416381836
    7. ')' → logprob: -3.8223867416381836
    8. 'K' → logprob: -3.9473867416381836
    9. 'dp' → logprob: -4.072386741638184
    10. 'prefix' → logprob: -4.197386741638184

Token 156: ' block' (ID: 4355)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7533060908317566
    2. '<|end|>' → logprob: -1.0033061504364014
    3. '
' → logprob: -3.1283061504364014
    4. ')' → logprob: -3.5033061504364014
    5. 'K' → logprob: -4.003305912017822
    6. 'bl' → logprob: -4.378305912017822
    7. '<|end|>' → logprob: -4.753305912017822
    8. '```' → logprob: -5.003305912017822
    9. 'blocks' → logprob: -5.128305912017822
    10. '[' → logprob: -5.503305912017822

Token 157: '_ct' (ID: 61056)
  Prédit: '_ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ct' → logprob: -2.45848218582978e-06
    2. 'ct' → logprob: -13.00000286102295
    3. '_' → logprob: -16.125001907348633
    4. '	ct' → logprob: -18.875001907348633
    5. '_CT' → logprob: -19.625001907348633
    6. '_ctr' → logprob: -19.750001907348633
    7. '_cnt' → logprob: -19.875001907348633
    8. '_ctl' → logprob: -19.875001907348633
    9. '=_' → logprob: -20.500001907348633
    10. ' _' → logprob: -20.750001907348633

Token 158: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4805063009262085
    2. ' +=' → logprob: -0.9805063009262085
    3. '+' → logprob: -5.480506420135498
    4. '=' → logprob: -6.105506420135498
    5. ' =' → logprob: -12.60550594329834
    6. ' ' → logprob: -13.73050594329834
    7. '-=' → logprob: -13.73050594329834
    8. '+='' → logprob: -13.85550594329834
    9. ' -=' → logprob: -13.98050594329834
    10. ' +' → logprob: -14.23050594329834

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001328095211647451
    2. ' ' → logprob: -6.626327991485596
    3. '2' → logprob: -13.126328468322754
    4. '0' → logprob: -15.626328468322754
    5. '```' → logprob: -18.251327514648438
    6. '   ' → logprob: -18.626327514648438
    7. '  ' → logprob: -18.751327514648438
    8. '+' → logprob: -18.813827514648438
    9. '3' → logprob: -19.376327514648438
    10. '<|end|>' → logprob: -19.938827514648438

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.141186450899113e-05
    2. ' ' → logprob: -10.875020980834961
    3. '2' → logprob: -13.000020980834961
    4. '0' → logprob: -16.75002098083496
    5. '   ' → logprob: -18.75002098083496
    6. '```' → logprob: -18.75002098083496
    7. '3' → logprob: -19.06252098083496
    8. '  ' → logprob: -19.25002098083496
    9. '１' → logprob: -19.75002098083496
    10. '+' → logprob: -20.06252098083496

Token 161: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8295692801475525
    2. 'max' → logprob: -2.2045693397521973
    3. ' ' → logprob: -2.3295693397521973
    4. '+' → logprob: -3.0795693397521973
    5. 'for' → logprob: -3.4545693397521973
    6. 'b' → logprob: -3.7045693397521973
    7. 'i' → logprob: -3.7045693397521973
    8. 'K' → logprob: -3.9545693397521973
    9. 'bl' → logprob: -4.079569339752197
    10. ')' → logprob: -4.079569339752197

Token 163: ' print' (ID: 2123)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1542034149169922
    2. 'dp' → logprob: -2.279203414916992
    3. 'd' → logprob: -2.529203414916992
    4. 'prefix' → logprob: -3.154203414916992
    5. 'sum' → logprob: -3.404203414916992
    6. 'diff' → logprob: -3.404203414916992
    7. 'total' → logprob: -3.654203414916992
    8. 'result' → logprob: -3.904203414916992
    9. 'l' → logprob: -4.029203414916992
    10. 'window' → logprob: -4.029203414916992

Token 164: '(bl' (ID: 110427)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7006163001060486
    2. '(bl' → logprob: -0.7006163001060486
    3. '()' → logprob: -5.950616359710693
    4. '(len' → logprob: -6.200616359710693
    5. '('' → logprob: -7.075616359710693
    6. 'bl' → logprob: -7.575616359710693
    7. '(b' → logprob: -7.825616359710693
    8. '("' → logprob: -7.825616359710693
    9. '(block' → logprob: -8.700615882873535
    10. 's' → logprob: -8.825615882873535

Token 165: 'ocs' (ID: 20929)
  Prédit: 'ocs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ocs' → logprob: -0.00017922651022672653
    2. 'oc' → logprob: -8.875179290771484
    3. ')' → logprob: -10.250179290771484
    4. '(' → logprob: -14.000179290771484
    5. 'o' → logprob: -14.750179290771484
    6. 'ocks' → logprob: -14.750179290771484
    7. 'cs' → logprob: -14.875179290771484
    8. ')(' → logprob: -15.000179290771484
    9. '_' → logprob: -15.625179290771484
    10. 'ocy' → logprob: -15.750179290771484

Token 166: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.580929347255733e-05
    2. '[' → logprob: -11.250016212463379
    3. ']' → logprob: -14.000016212463379
    4. ')
' → logprob: -14.500016212463379
    5. '#' → logprob: -14.750016212463379
    6. ' )' → logprob: -14.875016212463379
    7. ')#' → logprob: -15.000016212463379
    8. '))' → logprob: -16.375015258789062
    9. ')`' → logprob: -16.500015258789062
    10. ')

' → logprob: -17.625015258789062

Token 167: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0454051494598389
    2. 'window' → logprob: -1.9204051494598389
    3. '#' → logprob: -2.670405149459839
    4. 'total' → logprob: -2.795405149459839
    5. 'diff' → logprob: -2.795405149459839
    6. 'prefix' → logprob: -2.920405149459839
    7. 'sum' → logprob: -3.170405149459839
    8. '<|end|>' → logprob: -3.670405149459839
    9. 'dp' → logprob: -3.795405149459839
    10. 'K' → logprob: -3.920405149459839

Token 168: ' Debug' (ID: 23285)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.378338098526001
    2. '#' → logprob: -1.503338098526001
    3. ' ' → logprob: -2.128338098526001
    4. ' max' → logprob: -2.878338098526001
    5. 'result' → logprob: -3.503338098526001
    6. 'ans' → logprob: -3.628338098526001
    7. 'sum' → logprob: -3.628338098526001
    8. 'K' → logprob: -3.753338098526001
    9. 'dp' → logprob: -3.753338098526001
    10. 'total' → logprob: -4.003337860107422

Token 169: ',' (ID: 11)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.277123212814331
    2. '#' → logprob: -1.527123212814331
    3. 'max' → logprob: -2.527123212814331
    4. 'b' → logprob: -2.527123212814331
    5. '
' → logprob: -3.027123212814331
    6. 'K' → logprob: -3.277123212814331
    7. 'i' → logprob: -3.652123212814331
    8. 'd' → logprob: -4.02712345123291
    9. '[' → logprob: -4.02712345123291
    10. ')' → logprob: -4.15212345123291

Token 170: ' just' (ID: 1327)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0645051002502441
    2. ' i' → logprob: -1.0645051002502441
    3. ' ' → logprob: -1.8145051002502441
    4. 'idx' → logprob: -4.564505100250244
    5. 'd' → logprob: -4.689505100250244
    6. 'k' → logprob: -4.689505100250244
    7. ' #' → logprob: -5.064505100250244
    8. 'max' → logprob: -5.064505100250244
    9. 'dp' → logprob: -5.064505100250244
    10. 's' → logprob: -5.189505100250244

Token 171: ' in' (ID: 306)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.153090476989746
    2. 'a' → logprob: -1.653090476989746
    3. 'for' → logprob: -2.528090476989746
    4. 'bl' → logprob: -2.653090476989746
    5. 'to' → logprob: -2.778090476989746
    6. 'checking' → logprob: -3.778090476989746
    7. 'pass' → logprob: -3.903090476989746
    8. 'count' → logprob: -3.903090476989746
    9. 'the' → logprob: -3.903090476989746
    10. 'after' → logprob: -4.278090476989746

Token 172: ' case' (ID: 1890)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.9595389366149902
    2. '#' → logprob: -1.4595389366149902
    3. ')' → logprob: -2.2095389366149902
    4. 'b' → logprob: -2.5845389366149902
    5. ' blocs' → logprob: -3.2095389366149902
    6. 'for' → logprob: -3.4595389366149902
    7. '[' → logprob: -3.8345389366149902
    8. 'K' → logprob: -4.08453893661499
    9. 'range' → logprob: -4.33453893661499
    10. ']' → logprob: -4.45953893661499

Token 173: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.9939696788787842
    2. 'i' → logprob: -2.243969678878784
    3. 'max' → logprob: -2.368969678878784
    4. 'b' → logprob: -2.618969678878784
    5. ' 
' → logprob: -2.618969678878784
    6. ')' → logprob: -2.618969678878784
    7. '+' → logprob: -3.243969678878784
    8. 'K' → logprob: -3.243969678878784
    9. 'd' → logprob: -3.368969678878784
    10. 'w' → logprob: -3.368969678878784

Token 174: 'num' (ID: 4571)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37800300121307373
    2. 'max' → logprob: -2.8780031204223633
    3. 'result' → logprob: -3.5030031204223633
    4. 'diff' → logprob: -3.5030031204223633
    5. 'changes' → logprob: -3.6280031204223633
    6. 'res' → logprob: -3.7530031204223633
    7. 'prefix' → logprob: -3.8780031204223633
    8. 'answer' → logprob: -4.128003120422363
    9. 'window' → logprob: -4.378003120422363
    10. 'total' → logprob: -4.628003120422363

Token 175: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7048699259757996
    2. '_blocks' → logprob: -0.8298699259757996
    3. '_' → logprob: -3.2048699855804443
    4. '_changes' → logprob: -4.829869747161865
    5. ' =' → logprob: -5.079869747161865
    6. '_s' → logprob: -5.329869747161865
    7. '=' → logprob: -6.454869747161865
    8. '_bloc' → logprob: -6.954869747161865
    9. '_bl' → logprob: -7.079869747161865
    10. '_spaces' → logprob: -7.204869747161865

Token 176: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8267541527748108
    2. 'block' → logprob: -1.326754093170166
    3. 'len' → logprob: -2.201754093170166
    4. 'sum' → logprob: -2.826754093170166
    5. ' ' → logprob: -3.826754093170166
    6. 'K' → logprob: -4.076754093170166
    7. 'max' → logprob: -4.076754093170166
    8. ' K' → logprob: -4.076754093170166
    9. ' block' → logprob: -4.451754093170166
    10. ' len' → logprob: -4.701754093170166

Token 177: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8750730752944946
    2. '0' → logprob: -1.3750730752944946
    3. 'block' → logprob: -1.5000730752944946
    4. 'sum' → logprob: -2.625072956085205
    5. 'K' → logprob: -4.125072956085205
    6. '1' → logprob: -5.000072956085205
    7. 'max' → logprob: -5.125072956085205
    8. 'min' → logprob: -6.000072956085205
    9. 'bl' → logprob: -6.750072956085205
    10. 'N' → logprob: -6.875072956085205

Token 178: '*K' (ID: 167586)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3883726894855499
    2. '*' → logprob: -2.1383726596832275
    3. '<|end|>' → logprob: -2.1383726596832275
    4. '*K' → logprob: -3.5133726596832275
    5. '**' → logprob: -4.013372898101807
    6. ' **' → logprob: -4.388372898101807
    7. '
' → logprob: -5.013372898101807
    8. '0' → logprob: -5.513372898101807
    9. ' ' → logprob: -5.763372898101807
    10. '#' → logprob: -6.263372898101807

Token 179: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.017548635601997375
    2. ' +' → logprob: -4.392548561096191
    3. '<|end|>' → logprob: -5.392548561096191
    4. '*' → logprob: -8.517548561096191
    5. '#' → logprob: -9.767548561096191
    6. 'if' → logprob: -10.142548561096191
    7. ' if' → logprob: -10.142548561096191
    8. '-' → logprob: -10.517548561096191
    9. '<|end|>' → logprob: -10.517548561096191
    10. ' ' → logprob: -10.892548561096191

Token 180: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010568885772954673
    2. ' ' → logprob: -9.750105857849121
    3. 'block' → logprob: -10.125105857849121
    4. 'len' → logprob: -12.875105857849121
    5. 'sum' → logprob: -13.250105857849121
    6. '2' → logprob: -13.750105857849121
    7. '(' → logprob: -14.875105857849121
    8. '   ' → logprob: -15.375105857849121
    9. '3' → logprob: -15.500105857849121
    10. ' block' → logprob: -15.875105857849121

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. 'block' → logprob: -11.000024795532227
    3. ' ' → logprob: -12.625024795532227
    4. '2' → logprob: -13.000024795532227
    5. '3' → logprob: -14.125024795532227
    6. 'sum' → logprob: -14.875024795532227
    7. '(' → logprob: -15.125024795532227
    8. 'b' → logprob: -15.375024795532227
    9. 'len' → logprob: -15.625024795532227
    10. 'bloc' → logprob: -16.000024795532227

Token 182: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12263470888137817
    2. 'res' → logprob: -3.8726346492767334
    3. 'ans' → logprob: -3.9976346492767334
    4. 'dp' → logprob: -4.1226348876953125
    5. 'max' → logprob: -4.2476348876953125
    6. 'result' → logprob: -4.3726348876953125
    7. 'answer' → logprob: -4.3726348876953125
    8. 'window' → logprob: -5.6226348876953125
    9. 'total' → logprob: -5.7476348876953125
    10. 'for' → logprob: -5.9976348876953125

Token 184: ' Ya' (ID: 26118)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2016778290271759
    2. 'res' → logprob: -3.2016777992248535
    3. 'dp' → logprob: -3.3266777992248535
    4. 'result' → logprob: -3.4516777992248535
    5. 'answer' → logprob: -3.8266777992248535
    6. 'ans' → logprob: -4.0766777992248535
    7. 'max' → logprob: -5.0766777992248535
    8. 'for' → logprob: -5.8266777992248535
    9. 'window' → logprob: -5.9516777992248535
    10. 'from' → logprob: -5.9516777992248535

Token 185: ' it's' (ID: 4275)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.6164876222610474
    2. ' if' → logprob: -1.7414876222610474
    3. ' i' → logprob: -1.9914876222610474
    4. 'for' → logprob: -1.9914876222610474
    5. ' =' → logprob: -2.366487503051758
    6. 'if' → logprob: -2.491487503051758
    7. ' #' → logprob: -2.616487503051758
    8. 'i' → logprob: -3.866487503051758
    9. '#' → logprob: -4.616487503051758
    10. '
' → logprob: -4.991487503051758

Token 186: ' kind' (ID: 3675)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9097411632537842
    2. ' a' → logprob: -2.159741163253784
    3. 'num' → logprob: -2.409741163253784
    4. 'not' → logprob: -2.659741163253784
    5. 'a' → logprob: -2.784741163253784
    6. ' num' → logprob: -2.784741163253784
    7. 'len' → logprob: -2.909741163253784
    8. ' len' → logprob: -3.034741163253784
    9. 'possible' → logprob: -4.409741401672363
    10. ' possible' → logprob: -4.784741401672363

Token 187: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7987217903137207
    2. '=' → logprob: -1.4237217903137207
    3. ' if' → logprob: -1.7987217903137207
    4. ' of' → logprob: -2.5487217903137207
    5. ' ' → logprob: -3.4237217903137207
    6. 'if' → logprob: -5.423721790313721
    7. ' for' → logprob: -5.548721790313721
    8. 'of' → logprob: -5.673721790313721
    9. ' to' → logprob: -6.048721790313721
    10. '[' → logprob: -6.173721790313721

Token 188: ' brute' (ID: 128602)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11733973026275635
    2. 'sl' → logprob: -3.492339611053467
    3. ' a' → logprob: -4.117339611053467
    4. 'an' → logprob: -4.492339611053467
    5. 'like' → logprob: -4.742339611053467
    6. '```' → logprob: -5.117339611053467
    7. 'not' → logprob: -5.242339611053467
    8. 'hard' → logprob: -5.367339611053467
    9. 'two' → logprob: -5.992339611053467
    10. 'awk' → logprob: -6.117339611053467

Token 189: ' force' (ID: 9578)
  Prédit: ' force'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' force' → logprob: -0.3830500841140747
    2. '_force' → logprob: -1.3830500841140747
    3. '-force' → logprob: -3.258049964904785
    4. 'force' → logprob: -3.633049964904785
    5. 'f' → logprob: -7.008049964904785
    6. 'for' → logprob: -8.383049964904785
    7. '_' → logprob: -8.633049964904785
    8. ' forcing' → logprob: -8.758049964904785
    9. ' ' → logprob: -8.883049964904785
    10. 'forced' → logprob: -9.008049964904785

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7904767990112305
    2. '<|end|>' → logprob: -1.0404767990112305
    3. 'for' → logprob: -2.6654767990112305
    4. ',' → logprob: -2.9154767990112305
    5. ' for' → logprob: -4.1654767990112305
    6. 'i' → logprob: -4.5404767990112305
    7. ':' → logprob: -4.6654767990112305
    8. '#' → logprob: -4.9154767990112305
    9. '<|end|>' → logprob: -5.1654767990112305
    10. 'range' → logprob: -6.2904767990112305

Token 191: 'if' (ID: 366)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.40416261553764343
    2. ' max' → logprob: -2.279162645339966
    3. 'res' → logprob: -2.654162645339966
    4. 'result' → logprob: -3.029162645339966
    5. 'for' → logprob: -3.779162645339966
    6. 'ans' → logprob: -3.904162645339966
    7. 'answer' → logprob: -4.654162406921387
    8. ' res' → logprob: -4.779162406921387
    9. ' ans' → logprob: -4.779162406921387
    10. ' for' → logprob: -4.779162406921387

Token 192: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.6698545217514038
    2. ' num' → logprob: -1.0448545217514038
    3. 'num' → logprob: -2.2948546409606934
    4. 'block' → logprob: -4.169854640960693
    5. ' len' → logprob: -5.169854640960693
    6. ' N' → logprob: -5.294854640960693
    7. ' K' → logprob: -5.419854640960693
    8. ' ' → logprob: -5.669854640960693
    9. 'N' → logprob: -7.669854640960693
    10. 'len' → logprob: -7.669854640960693

Token 193: '_ct' (ID: 61056)
  Prédit: '_ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ct' → logprob: -1.7432603272027336e-06
    2. 'ct' → logprob: -14.250001907348633
    3. '_' → logprob: -14.375001907348633
    4. '_CT' → logprob: -16.000001907348633
    5. ' _' → logprob: -16.250001907348633
    6. '_cnt' → logprob: -16.375001907348633
    7. '_cp' → logprob: -17.625001907348633
    8. '_cm' → logprob: -17.875001907348633
    9. '	ct' → logprob: -18.250001907348633
    10. '_ctr' → logprob: -18.375001907348633

Token 194: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.054635461419820786
    2. '<=' → logprob: -3.179635524749756
    3. ' ==' → logprob: -5.429635524749756
    4. ' <' → logprob: -5.929635524749756
    5. ' >' → logprob: -6.054635524749756
    6. '==' → logprob: -7.054635524749756
    7. ' >=' → logprob: -7.929635524749756
    8. '>' → logprob: -8.054635047912598
    9. ' ' → logprob: -8.179635047912598
    10. '<' → logprob: -8.179635047912598

Token 195: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3487006723880768
    2. '1' → logprob: -1.2237006425857544
    3. 'num' → logprob: -8.973700523376465
    4. ' num' → logprob: -9.973700523376465
    5. '0' → logprob: -10.223700523376465
    6. '=' → logprob: -10.473700523376465
    7. '  ' → logprob: -11.598700523376465
    8. '   ' → logprob: -13.536200523376465
    9. 'len' → logprob: -13.786200523376465
    10. ' K' → logprob: -13.786200523376465

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037630246952176094
    2. ' ' → logprob: -5.753763198852539
    3. 'num' → logprob: -8.003763198852539
    4. '0' → logprob: -8.503763198852539
    5. 'len' → logprob: -10.503763198852539
    6. 'K' → logprob: -12.128763198852539
    7. '=' → logprob: -12.253763198852539
    8. '  ' → logprob: -12.753763198852539
    9. ' num' → logprob: -13.128763198852539
    10. 'N' → logprob: -13.503763198852539

Token 197: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003023345780093223
    2. ':
' → logprob: -8.3753023147583
    3. ' or' → logprob: -10.0003023147583
    4. ' and' → logprob: -10.8753023147583
    5. ' :' → logprob: -12.6253023147583
    6. 'or' → logprob: -13.2503023147583
    7. 'and' → logprob: -13.7503023147583
    8. ':return' → logprob: -14.6253023147583
    9. '   ' → logprob: -15.2503023147583
    10. '.' → logprob: -15.3753023147583

Token 198: ' block' (ID: 4355)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.21467792987823486
    2. 'K' → logprob: -1.7146779298782349
    3. ' num' → logprob: -5.339677810668945
    4. ' K' → logprob: -5.714677810668945
    5. 'block' → logprob: -5.839677810668945
    6. 'N' → logprob: -6.714677810668945
    7. '2' → logprob: -8.464677810668945
    8. 'len' → logprob: -8.964677810668945
    9. 'bl' → logprob: -9.089677810668945
    10. '(num' → logprob: -9.214677810668945

Token 199: '_ct' (ID: 61056)
  Prédit: '_ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ct' → logprob: -0.0002601438027340919
    2. '==' → logprob: -9.750260353088379
    3. '<=' → logprob: -10.000260353088379
    4. ' ==' → logprob: -10.000260353088379
    5. ' <=' → logprob: -10.125260353088379
    6. 'ct' → logprob: -10.500260353088379
    7. '_CT' → logprob: -11.625260353088379
    8. ' ' → logprob: -11.875260353088379
    9. '>' → logprob: -12.250260353088379
    10. 'CT' → logprob: -12.625260353088379

Token 200: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.28185129165649414
    2. '<=' → logprob: -1.4068512916564941
    3. '==' → logprob: -7.656851291656494
    4. ' ==' → logprob: -8.781850814819336
    5. ' ' → logprob: -9.906850814819336
    6. ' *' → logprob: -12.406850814819336
    7. '-' → logprob: -12.406850814819336
    8. '*' → logprob: -12.781850814819336
    9. '1' → logprob: -13.031850814819336
    10. '```' → logprob: -13.156850814819336

Token 201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.549410343170166
    2. ' ' → logprob: -1.174410343170166
    3. '2' → logprob: -2.424410343170166
    4. '1' → logprob: -4.299410343170166
    5. '3' → logprob: -4.799410343170166
    6. 'num' → logprob: -5.924410343170166
    7. ' num' → logprob: -7.549410343170166
    8. '  ' → logprob: -9.799409866333008
    9. '   ' → logprob: -10.174409866333008
    10. '(' → logprob: -11.736909866333008

Token 202: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05733541399240494
    2. '2' → logprob: -2.932335376739502
    3. ' ' → logprob: -6.182335376739502
    4. '3' → logprob: -8.05733585357666
    5. '1' → logprob: -9.68233585357666
    6. '  ' → logprob: -13.68233585357666
    7. 'num' → logprob: -13.86983585357666
    8. '   ' → logprob: -14.05733585357666
    9. 'N' → logprob: -14.61983585357666
    10. '(' → logprob: -15.36983585357666

Token 203: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012332366895861924
    2. ':
' → logprob: -9.375123023986816
    3. ' or' → logprob: -10.625123023986816
    4. ' and' → logprob: -11.750123023986816
    5. ' :' → logprob: -12.625123023986816
    6. 'or' → logprob: -13.375123023986816
    7. 'and' → logprob: -14.250123023986816
    8. ':return' → logprob: -14.500123023986816
    9. '):' → logprob: -16.000123977661133
    10. '   ' → logprob: -17.125123977661133

Token 204: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.09774265438318253
    2. 'K' → logprob: -3.2227425575256348
    3. ' num' → logprob: -3.5977425575256348
    4. 'block' → logprob: -4.472742557525635
    5. 'N' → logprob: -5.472742557525635
    6. ' K' → logprob: -5.597742557525635
    7. 'bl' → logprob: -6.347742557525635
    8. ' block' → logprob: -6.722742557525635
    9. '(num' → logprob: -7.472742557525635
    10. ' N' → logprob: -7.847742557525635

Token 205: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7388545870780945
    2. ' >=' → logprob: -1.1138546466827393
    3. '>' → logprob: -1.9888546466827393
    4. ' >' → logprob: -2.8638546466827393
    5. '<=' → logprob: -10.11385440826416
    6. '==' → logprob: -10.11385440826416
    7. ' ' → logprob: -10.23885440826416
    8. ' <=' → logprob: -11.61385440826416
    9. '<' → logprob: -12.36385440826416
    10. ' <' → logprob: -12.86385440826416

Token 206: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.010454135946929455
    2. 'len' → logprob: -5.010454177856445
    3. ' block' → logprob: -5.635454177856445
    4. ' len' → logprob: -8.760454177856445
    5. ' ' → logprob: -13.135454177856445
    6. '   ' → logprob: -13.135454177856445
    7. '	block' → logprob: -14.010454177856445
    8. '  ' → logprob: -15.260454177856445
    9. 'bl' → logprob: -15.385454177856445
    10. 'bloc' → logprob: -15.385454177856445

Token 207: '_ct' (ID: 61056)
  Prédit: '_ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ct' → logprob: -2.935296834039036e-06
    2. 'ct' → logprob: -12.75000286102295
    3. '_' → logprob: -17.875003814697266
    4. '	ct' → logprob: -19.375003814697266
    5. '_ctl' → logprob: -19.500003814697266
    6. ' _' → logprob: -19.500003814697266
    7. '_CT' → logprob: -19.875003814697266
    8. '\' → logprob: -20.875003814697266
    9. 's' → logprob: -21.125003814697266
    10. '```' → logprob: -22.250003814697266

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010747690976131707
    2. ':
' → logprob: -9.250107765197754
    3. ' :' → logprob: -12.125107765197754
    4. ' or' → logprob: -12.875107765197754
    5. 'or' → logprob: -13.375107765197754
    6. '):' → logprob: -13.625107765197754
    7. ':return' → logprob: -15.250107765197754
    8. '   ' → logprob: -16.000106811523438
    9. '==' → logprob: -16.750106811523438
    10. ':
' → logprob: -17.250106811523438

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11324083805084229
    2. 'print' → logprob: -2.7382407188415527
    3. ':' → logprob: -3.8632407188415527
    4. ':
' → logprob: -3.9882407188415527
    5. ' print' → logprob: -5.988240718841553
    6. '       ' → logprob: -9.363241195678711
    7. '    
' → logprob: -9.738241195678711
    8. '
' → logprob: -9.738241195678711
    9. '#' → logprob: -10.988241195678711
    10. '```' → logprob: -11.238241195678711

Token 210: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0044768815860152245
    2. '   ' → logprob: -5.504477024078369
    3. ' print' → logprob: -8.004476547241211
    4. '
' → logprob: -10.254476547241211
    5. 'result' → logprob: -11.629476547241211
    6. '    
' → logprob: -12.629476547241211
    7. '#' → logprob: -13.129476547241211
    8. 'res' → logprob: -13.129476547241211
    9. 'answer' → logprob: -13.379476547241211
    10. '       ' → logprob: -13.504476547241211

Token 211: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4092128872871399
    2. '(S' → logprob: -1.5342128276824951
    3. '(' → logprob: -2.534212827682495
    4. '(len' → logprob: -3.284212827682495
    5. 'N' → logprob: -7.284213066101074
    6. '(
' → logprob: -7.409213066101074
    7. '(max' → logprob: -7.534213066101074
    8. 'len' → logprob: -8.034213066101074
    9. '()' → logprob: -8.409213066101074
    10. 'S' → logprob: -8.534213066101074

Token 212: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026634239475242794
    2. ')
' → logprob: -8.875266075134277
    3. ' )' → logprob: -9.000266075134277
    4. '-' → logprob: -13.875266075134277
    5. '))' → logprob: -14.625266075134277
    6. '`)' → logprob: -15.500266075134277
    7. '")' → logprob: -15.875266075134277
    8. ')`' → logprob: -16.000267028808594
    9. ')
' → logprob: -16.125267028808594
    10. ')return' → logprob: -16.250267028808594

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004884536610916257
    2. ' ' → logprob: -8.37548828125
    3. '2' → logprob: -9.25048828125
    4. 'K' → logprob: -9.50048828125
    5. '0' → logprob: -10.12548828125
    6. '(' → logprob: -10.37548828125
    7. ' K' → logprob: -12.87548828125
    8. ')' → logprob: -13.00048828125
    9. 'S' → logprob: -13.00048828125
    10. 'num' → logprob: -13.50048828125

Token 214: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.460291767027229e-05
    2. ' )' → logprob: -10.375094413757324
    3. '-' → logprob: -10.500094413757324
    4. '+' → logprob: -10.875094413757324
    5. ')
' → logprob: -11.125094413757324
    6. '-)' → logprob: -14.375094413757324
    7. ' -' → logprob: -15.125094413757324
    8. '))' → logprob: -15.500094413757324
    9. '   ' → logprob: -15.625094413757324
    10. '`)' → logprob: -15.750094413757324

Token 215: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0023237948771566153
    2. 'elif' → logprob: -6.127323627471924
    3. '   ' → logprob: -9.127324104309082
    4. ')' → logprob: -11.002324104309082
    5. ' else' → logprob: -11.627324104309082
    6. '```' → logprob: -13.752324104309082
    7. 'exit' → logprob: -14.502324104309082
    8. '    
' → logprob: -14.752324104309082
    9. '#else' → logprob: -14.877324104309082
    10. '.' → logprob: -15.127324104309082

Token 216: ' num' (ID: 2269)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.12281890958547592
    2. 'num' → logprob: -2.872818946838379
    3. ' block' → logprob: -3.122818946838379
    4. 'bl' → logprob: -5.247818946838379
    5. 'bloc' → logprob: -5.497818946838379
    6. ' num' → logprob: -5.872818946838379
    7. 'K' → logprob: -7.372818946838379
    8. ' K' → logprob: -7.997818946838379
    9. ' bloc' → logprob: -7.997818946838379
    10. '   ' → logprob: -8.747818946838379

Token 217: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7487379908561707
    2. ' ==' → logprob: -1.2487380504608154
    3. ' >=' → logprob: -2.2487380504608154
    4. '==' → logprob: -2.9987380504608154
    5. '<' → logprob: -3.8737380504608154
    6. ' ' → logprob: -4.123737812042236
    7. ' <=' → logprob: -4.498737812042236
    8. '*' → logprob: -4.748737812042236
    9. ' +' → logprob: -5.123737812042236
    10. '+' → logprob: -5.123737812042236

Token 218: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.006857693195343018
    2. ' block' → logprob: -5.131857872009277
    3. ' ' → logprob: -7.881857872009277
    4. '2' → logprob: -8.256857872009277
    5. '1' → logprob: -8.881857872009277
    6. '3' → logprob: -9.256857872009277
    7. '   ' → logprob: -10.881857872009277
    8. 'bloc' → logprob: -11.381857872009277
    9. '0' → logprob: -11.631857872009277
    10. '	block' → logprob: -12.506857872009277

Token 219: '_ct' (ID: 61056)
  Prédit: '_ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ct' → logprob: -0.0003805064770858735
    2. 'ct' → logprob: -7.875380516052246
    3. 'CT' → logprob: -16.12537956237793
    4. '_CT' → logprob: -16.25037956237793
    5. '	ct' → logprob: -16.37537956237793
    6. '_' → logprob: -16.50037956237793
    7. 'Ct' → logprob: -17.50037956237793
    8. '   ' → logprob: -17.75037956237793
    9. '_cnt' → logprob: -18.75037956237793
    10. '_ctl' → logprob: -19.00037956237793

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009162207134068012
    2. ':
' → logprob: -7.000916004180908
    3. ' :' → logprob: -12.375916481018066
    4. '):' → logprob: -15.125916481018066
    5. ':
' → logprob: -15.750916481018066
    6. ' :
' → logprob: -17.12591552734375
    7. ':

' → logprob: -17.37591552734375
    8. ')' → logprob: -17.87591552734375
    9. '   ' → logprob: -18.12591552734375
    10. ':def' → logprob: -18.62591552734375

Token 221: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5545796751976013
    2. ':' → logprob: -0.9295796751976013
    3. '   ' → logprob: -3.554579734802246
    4. 'else' → logprob: -7.179579734802246
    5. 'max' → logprob: -7.304579734802246
    6. 'sum' → logprob: -7.929579734802246
    7. ' :
' → logprob: -8.929579734802246
    8. '):
' → logprob: -9.679579734802246
    9. ' :' → logprob: -9.804579734802246
    10. 's' → logprob: -10.304579734802246

Token 222: ' left' (ID: 3561)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2656901478767395
    2. 'res' → logprob: -3.0156900882720947
    3. 'best' → logprob: -3.1406900882720947
    4. 'ans' → logprob: -3.2656900882720947
    5. 'mx' → logprob: -3.2656900882720947
    6. 'answer' → logprob: -4.140690326690674
    7. '   ' → logprob: -4.765690326690674
    8. 'length' → logprob: -5.515690326690674
    9. 'l' → logprob: -5.640690326690674
    10. 'mi' → logprob: -5.640690326690674

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05220508202910423
    2. '=' → logprob: -3.4272050857543945
    3. ',' → logprob: -4.0522050857543945
    4. '_idx' → logprob: -7.8022050857543945
    5. '_ptr' → logprob: -9.302205085754395
    6. '_' → logprob: -9.427205085754395
    7. ' ,' → logprob: -9.427205085754395
    8. '_sum' → logprob: -9.677205085754395
    9. '_block' → logprob: -9.927205085754395
    10. ',right' → logprob: -9.927205085754395

Token 224: ' block' (ID: 4355)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007237526006065309
    2. ' ' → logprob: -7.625723838806152
    3. 'bl' → logprob: -9.500723838806152
    4. 'num' → logprob: -10.125723838806152
    5. 'sum' → logprob: -10.500723838806152
    6. '1' → logprob: -10.625723838806152
    7. 'max' → logprob: -10.875723838806152
    8. '2' → logprob: -11.125723838806152
    9. '(' → logprob: -11.375723838806152
    10. 'block' → logprob: -11.875723838806152

Token 225: '_ct' (ID: 61056)
  Prédit: '_ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ct' → logprob: -0.03758705034852028
    2. '=' → logprob: -3.6625871658325195
    3. ' =' → logprob: -5.0375871658325195
    4. '_idx' → logprob: -6.1625871658325195
    5. 's' → logprob: -7.1625871658325195
    6. '_CT' → logprob: -7.4125871658325195
    7. '_' → logprob: -8.66258716583252
    8. '   ' → logprob: -8.66258716583252
    9. '0' → logprob: -8.66258716583252
    10. 'CT' → logprob: -8.78758716583252

Token 226: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19836409389972687
    2. ' -' → logprob: -1.8233641386032104
    3. '-num' → logprob: -4.0733642578125
    4. '-block' → logprob: -7.4483642578125
    5. '-n' → logprob: -8.4483642578125
    6. '-length' → logprob: -8.9483642578125
    7. '   ' → logprob: -9.5733642578125
    8. '
' → logprob: -9.6983642578125
    9. 'num' → logprob: -9.9483642578125
    10. '=' → logprob: -10.0733642578125

Token 227: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.04605713486671448
    2. '1' → logprob: -3.1710572242736816
    3. '2' → logprob: -6.046057224273682
    4. ' num' → logprob: -7.921057224273682
    5. '(num' → logprob: -8.671056747436523
    6. '(' → logprob: -9.046056747436523
    7. '3' → logprob: -11.046056747436523
    8. ' ' → logprob: -12.046056747436523
    9. 'left' → logprob: -12.796056747436523
    10. ' (' → logprob: -13.296056747436523

Token 228: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4001643657684326
    2. ' +' → logprob: -2.2751643657684326
    3. '
' → logprob: -2.6501643657684326
    4. 'sum' → logprob: -3.5251643657684326
    5. 'right' → logprob: -3.6501643657684326
    6. '   ' → logprob: -3.7751643657684326
    7. 'max' → logprob: -3.9001643657684326
    8. '-' → logprob: -4.400164604187012
    9. 's' → logprob: -5.150164604187012
    10. 'result' → logprob: -5.400164604187012

Token 229: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.727730393409729
    2. 'res' → logprob: -1.852730393409729
    3. 'ans' → logprob: -2.7277302742004395
    4. 'result' → logprob: -3.1027302742004395
    5. 'answer' → logprob: -3.1027302742004395
    6. 'right' → logprob: -3.2277302742004395
    7. 'for' → logprob: -3.7277302742004395
    8. ' ans' → logprob: -4.1027302742004395
    9. 'best' → logprob: -4.3527302742004395
    10. ' max' → logprob: -4.4777302742004395

Token 230: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1817374229431152
    2. 'max' → logprob: -2.1817374229431152
    3. 'answer' → logprob: -2.5567374229431152
    4. 'ans' → logprob: -2.5567374229431152
    5. 'bl' → logprob: -2.8067374229431152
    6. 'res' → logprob: -2.9317374229431152
    7. 'best' → logprob: -3.1817374229431152
    8. 'left' → logprob: -3.4317374229431152
    9. 'total' → logprob: -3.4317374229431152
    10. 'right' → logprob: -3.9317374229431152

Token 231: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.14002729952335358
    2. '(' → logprob: -2.1400272846221924
    3. '(bl' → logprob: -5.0150275230407715
    4. '(left' → logprob: -5.7650275230407715
    5. '(max' → logprob: -6.8900275230407715
    6. '(min' → logprob: -7.3900275230407715
    7. '(sum' → logprob: -7.6400275230407715
    8. '(n' → logprob: -8.390027046203613
    9. 'N' → logprob: -8.765027046203613
    10. '(len' → logprob: -9.015027046203613

Token 232: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20149686932563782
    2. ' -' → logprob: -1.7014968395233154
    3. '-left' → logprob: -9.826497077941895
    4. ')' → logprob: -11.701497077941895
    5. '-)' → logprob: -12.201497077941895
    6. '+' → logprob: -12.451497077941895
    7. '-l' → logprob: -12.826497077941895
    8. '-
' → logprob: -13.326497077941895
    9. '-block' → logprob: -13.576497077941895
    10. '-length' → logprob: -13.951497077941895

Token 233: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.44439056515693665
    2. 'sum' → logprob: -1.1943905353546143
    3. ' sum' → logprob: -3.6943905353546143
    4. 'bl' → logprob: -4.069390773773193
    5. ' left' → logprob: -4.569390773773193
    6. 'min' → logprob: -6.444390773773193
    7. 'max' → logprob: -8.069390296936035
    8. '(bl' → logprob: -8.069390296936035
    9. ' min' → logprob: -8.194390296936035
    10. '(sum' → logprob: -8.569390296936035

Token 234: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024132482707500458
    2. '*' → logprob: -4.774132251739502
    3. '-' → logprob: -4.899132251739502
    4. ' )' → logprob: -5.274132251739502
    5. ' -' → logprob: -5.899132251739502
    6. ' *' → logprob: -10.02413272857666
    7. '-)' → logprob: -11.64913272857666
    8. '+' → logprob: -11.77413272857666
    9. '*)' → logprob: -12.27413272857666
    10. ' ' → logprob: -12.27413272857666

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014121392741799355
    2. ' ' → logprob: -7.5014119148254395
    3. 'left' → logprob: -7.8764119148254395
    4. '2' → logprob: -8.626412391662598
    5. 'bl' → logprob: -8.751412391662598
    6. 'sum' → logprob: -10.126412391662598
    7. '(' → logprob: -10.376412391662598
    8. '(bl' → logprob: -11.376412391662598
    9. 'blocks' → logprob: -11.501412391662598
    10. 'K' → logprob: -11.501412391662598

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014936764491721988
    2. 'bl' → logprob: -7.626493453979492
    3. 'left' → logprob: -8.126493453979492
    4. '2' → logprob: -8.251493453979492
    5. ' ' → logprob: -8.626493453979492
    6. 'K' → logprob: -9.751493453979492
    7. '(bl' → logprob: -10.126493453979492
    8. '(' → logprob: -10.251493453979492
    9. 'num' → logprob: -10.251493453979492
    10. 'sum' → logprob: -10.251493453979492

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5570885807392187e-05
    2. ' )' → logprob: -11.375015258789062
    3. ')
' → logprob: -12.500015258789062
    4. '))' → logprob: -16.375015258789062
    5. '   ' → logprob: -17.250015258789062
    6. '')' → logprob: -17.500015258789062
    7. '),' → logprob: -18.000015258789062
    8. '+' → logprob: -18.000015258789062
    9. ')}' → logprob: -18.375015258789062
    10. ')`' → logprob: -18.375015258789062

Token 238: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' probably' (ID: 7038)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' missed' (ID: 20677)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' a' (ID: 261)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.33359429240226746
    2. '<|end|>' → logprob: -2.33359432220459
    3. ':' → logprob: -2.83359432220459
    4. '.' → logprob: -3.08359432220459
    5. '```' → logprob: -3.08359432220459
    6. 'elif' → logprob: -4.83359432220459
    7. ' else' → logprob: -5.08359432220459
    8. '#' → logprob: -5.08359432220459
    9. '...' → logprob: -5.20859432220459
    10. ')' → logprob: -5.95859432220459

Token 242: ' weird' (ID: 28783)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.05383555591106415
    2. 'corner' → logprob: -3.92883563041687
    3. 'newline' → logprob: -4.678835391998291
    4. 'return' → logprob: -4.678835391998291
    5. ' case' → logprob: -5.553835391998291
    6. 'final' → logprob: -5.678835391998291
    7. 'detail' → logprob: -6.678835391998291
    8. 'line' → logprob: -7.053835391998291
    9. 'special' → logprob: -7.553835391998291
    10. ' corner' → logprob: -7.553835391998291

Token 243: ' edge' (ID: 11165)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.04689180850982666
    2. 'edge' → logprob: -3.171891689300537
    3. 'corner' → logprob: -6.421891689300537
    4. ' edge' → logprob: -7.171891689300537
    5. ' case' → logprob: -7.421891689300537
    6. 'else' → logprob: -7.546891689300537
    7. '_case' → logprob: -9.171892166137695
    8. '
' → logprob: -9.921892166137695
    9. 'elif' → logprob: -10.171892166137695
    10. '_' → logprob: -10.421892166137695

Token 244: ' case' (ID: 1890)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' oh' (ID: 8718)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' well' (ID: 1775)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 245
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 175
Précision stricte (1ère position): 28.98%
Précision adaptée (1ère position): 31.84%
Précision (top 10): 71.43%
================================================================================
