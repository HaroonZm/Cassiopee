================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def swap_and_concatenate():
    """
    Demande à l'utilisateur d'entrer deux mots séparés par un espace,
    puis inverse l'ordre des mots et les concatène sans espace supplémentaire.
    Affiche le résultat à l'écran.

    Exemple :
        Entrée : chat chien
        Sortie : chienchat
    """
    # Demander à l'utilisateur d'entrer deux éléments séparés par un espace
    first, second = input().split()
    # Concaténer le second mot avant le premier et afficher le résultat
    print(second + first)

# Appeler la fonction principale pour exécuter le programme
swap_and_concatenate()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' swap' (ID: 25489)
  → Token d'amorce (pas de prédiction)

Token 2: '_and' (ID: 18645)
  → Token d'amorce (pas de prédiction)

Token 3: '_con' (ID: 7531)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08609282225370407
    2. '_return' → logprob: -3.336092710494995
    3. ' return' → logprob: -3.586092710494995
    4. 'reverse' → logprob: -4.836092948913574
    5. 'replace' → logprob: -5.211092948913574
    6. 'remove' → logprob: -6.086092948913574
    7. 'append' → logprob: -6.836092948913574
    8. 'print' → logprob: -7.836092948913574
    9. 'sort' → logprob: -8.086092948913574
    10. 'split' → logprob: -8.211092948913574

Token 4: 'c' (ID: 66)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5069690942764282
    2. 'nect' → logprob: -1.3819690942764282
    3. 'cat' → logprob: -2.0069689750671387
    4. 'vert' → logprob: -4.881968975067139
    5. 'tent' → logprob: -6.381968975067139
    6. 'atenate' → logprob: -7.131968975067139
    7. '```' → logprob: -7.506968975067139
    8. 'cate' → logprob: -7.881968975067139
    9. 'd' → logprob: -8.256969451904297
    10. 'firm' → logprob: -8.881969451904297

Token 5: 'atenate' (ID: 63439)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.04869966581463814
    2. 'atenate' → logprob: -3.0486996173858643
    3. 'aten' → logprob: -9.173699378967285
    4. 'ate' → logprob: -12.548699378967285
    5. '```' → logprob: -12.923699378967285
    6. '(at' → logprob: -13.423699378967285
    7. 'ат' → logprob: -15.298699378967285
    8. '_at' → logprob: -15.423699378967285
    9. '(' → logprob: -16.1737003326416
    10. '	at' → logprob: -16.4237003326416

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008852534228935838
    2. '(_' → logprob: -8.250885009765625
    3. '():' → logprob: -8.375885009765625
    4. '(_:' → logprob: -8.875885009765625
    5. '_' → logprob: -9.375885009765625
    6. '(:' → logprob: -9.750885009765625
    7. ' (' → logprob: -11.125885009765625
    8. '(a' → logprob: -11.125885009765625
    9. '```' → logprob: -11.875885009765625
    10. '(parent' → logprob: -11.875885009765625

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.833402693271637
    2. '```' → logprob: -1.2084026336669922
    3. ':' → logprob: -2.208402633666992
    4. '   ' → logprob: -2.333402633666992
    5. '():' → logprob: -3.583402633666992
    6. '\' → logprob: -4.333402633666992
    7. '_' → logprob: -5.833402633666992
    8. '(
' → logprob: -5.833402633666992
    9. ''' → logprob: -6.208402633666992
    10. '\n' → logprob: -6.458402633666992

Token 8: ' """
' (ID: 7037)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2108016014099121
    2. '   ' → logprob: -3.335801601409912
    3. 'return' → logprob: -3.335801601409912
    4. '```' → logprob: -3.835801601409912
    5. 'x' → logprob: -3.960801601409912
    6. '(' → logprob: -4.085801601409912
    7. ' a' → logprob: -4.460801601409912
    8. 'r' → logprob: -4.460801601409912
    9. 'b' → logprob: -4.710801601409912
    10. '_' → logprob: -4.835801601409912

Token 9: '   ' (ID: 271)
  Prédit: 'Swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Swap' → logprob: -0.7784960269927979
    2. '"""' → logprob: -1.5284960269927979
    3. 'Sw' → logprob: -1.9034960269927979
    4. 'Returns' → logprob: -3.153496026992798
    5. 'Return' → logprob: -3.403496026992798
    6. 'T' → logprob: -3.528496026992798
    7. '   ' → logprob: -4.403495788574219
    8. ' Swap' → logprob: -4.653495788574219
    9. 'Conc' → logprob: -5.153495788574219
    10. 'Perform' → logprob: -5.278495788574219

Token 10: ' Dem' (ID: 9458)
  Prédit: 'Sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sw' → logprob: -0.8459931015968323
    2. 'Swap' → logprob: -0.9709931015968323
    3. 'T' → logprob: -2.0959930419921875
    4. 'Returns' → logprob: -3.8459930419921875
    5. '"""' → logprob: -4.0959930419921875
    6. 'Return' → logprob: -4.0959930419921875
    7. 'Conc' → logprob: -5.4709930419921875
    8. 'Take' → logprob: -5.9709930419921875
    9. 'Per' → logprob: -6.7209930419921875
    10. 'Re' → logprob: -6.7209930419921875

Token 11: 'ande' (ID: 4102)
  Prédit: 'onstr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onstr' → logprob: -0.006064240820705891
    2. 'on' → logprob: -5.131064414978027
    3. 'ons' → logprob: -10.381064414978027
    4. ' on' → logprob: -10.631064414978027
    5. '   ' → logprob: -10.756064414978027
    6. 'ands' → logprob: -10.756064414978027
    7. 'and' → logprob: -11.006064414978027
    8. '```' → logprob: -11.756064414978027
    9. 'ont' → logprob: -12.631064414978027
    10. 'onte' → logprob: -13.756064414978027

Token 12: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6034612655639648
    2. ' return' → logprob: -2.103461265563965
    3. 's' → logprob: -2.353461265563965
    4. ' ' → logprob: -2.728461265563965
    5. 'r' → logprob: -3.353461265563965
    6. ' de' → logprob: -3.353461265563965
    7. ' d' → logprob: -3.603461265563965
    8. ' un' → logprob: -4.603461265563965
    9. ' des' → logprob: -4.603461265563965
    10. ' """
' → logprob: -4.853461265563965

Token 13: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018824247643351555
    2. ' l' → logprob: -4.018824100494385
    3. '   ' → logprob: -8.518824577331543
    4. 'user' → logprob: -8.768824577331543
    5. 'la' → logprob: -8.893824577331543
    6. ' user' → logprob: -10.768824577331543
    7. 'le' → logprob: -11.018824577331543
    8. '"""
' → logprob: -11.143824577331543
    9. 'une' → logprob: -11.268824577331543
    10. 'vous' → logprob: -11.268824577331543

Token 14: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.03508075699210167
    2. 'util' → logprob: -3.535080671310425
    3. ' utilisateur' → logprob: -6.285080909729004
    4. 'a' → logprob: -6.660080909729004
    5. '’utilisateur' → logprob: -7.035080909729004
    6. 'u' → logprob: -7.410080909729004
    7. ''' → logprob: -8.035080909729004
    8. ''util' → logprob: -8.785080909729004
    9. ''user' → logprob: -10.035080909729004
    10. ''us' → logprob: -10.410080909729004

Token 15: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.15881280601024628
    2. '   ' → logprob: -2.2838127613067627
    3. ' d' → logprob: -4.408812999725342
    4. ' un' → logprob: -4.533812999725342
    5. ' ' → logprob: -5.533812999725342
    6. '    ' → logprob: -5.658812999725342
    7. 'de' → logprob: -5.908812999725342
    8. ' la' → logprob: -6.408812999725342
    9. ' des' → logprob: -6.783812999725342
    10. ''' → logprob: -6.908812999725342

Token 16: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08594297617673874
    2. ''' → logprob: -2.8359429836273193
    3. ''é' → logprob: -4.46094274520874
    4. ''entrée' → logprob: -5.96094274520874
    5. ''effect' → logprob: -6.58594274520874
    6. ''un' → logprob: -6.71094274520874
    7. 'é' → logprob: -6.83594274520874
    8. ''e' → logprob: -6.83594274520874
    9. ''u' → logprob: -7.21094274520874
    10. 'u' → logprob: -7.33594274520874

Token 17: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.038170475512742996
    2. 'ent' → logprob: -4.788170337677002
    3. ''' → logprob: -5.413170337677002
    4. ' entrer' → logprob: -5.538170337677002
    5. 'éch' → logprob: -5.538170337677002
    6. 'entrée' → logprob: -5.788170337677002
    7. 'ins' → logprob: -5.788170337677002
    8. 'é' → logprob: -5.913170337677002
    9. '```' → logprob: -6.913170337677002
    10. 's' → logprob: -7.163170337677002

Token 18: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -8.149051427608356e-05
    2. 'éer' → logprob: -10.375081062316895
    3. 'e' → logprob: -10.750081062316895
    4. 'oyer' → logprob: -11.250081062316895
    5. 'é' → logprob: -12.750081062316895
    6. 'er's' → logprob: -13.125081062316895
    7. 'o' → logprob: -13.375081062316895
    8. '   ' → logprob: -13.875081062316895
    9. 'ée' → logprob: -13.875081062316895
    10. 'ér' → logprob: -14.250081062316895

Token 19: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.38555580377578735
    2. ' un' → logprob: -2.0105557441711426
    3. ' une' → logprob: -2.2605557441711426
    4. 'de' → logprob: -3.2605557441711426
    5. ' ' → logprob: -4.635555744171143
    6. ' des' → logprob: -5.135555744171143
    7. 'une' → logprob: -5.260555744171143
    8. '   ' → logprob: -5.510555744171143
    9. ' de' → logprob: -5.510555744171143
    10. ' le' → logprob: -6.260555744171143

Token 20: ' mots' (ID: 38338)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9230387806892395
    2. ' chaînes' → logprob: -1.1730387210845947
    3. ' espaces' → logprob: -1.7980387210845947
    4. ' mots' → logprob: -2.5480387210845947
    5. '  ' → logprob: -4.548038959503174
    6. ' strings' → logprob: -5.048038959503174
    7. 'es' → logprob: -5.298038959503174
    8. 's' → logprob: -5.423038959503174
    9. '_' → logprob: -5.673038959503174
    10. '   ' → logprob: -5.673038959503174

Token 21: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029487095773220062
    2. '\n' → logprob: -4.154487133026123
    3. ',' → logprob: -5.404487133026123
    4. '.' → logprob: -5.779487133026123
    5. ' ' → logprob: -6.029487133026123
    6. ' et' → logprob: -6.654487133026123
    7. '
' → logprob: -8.154486656188965
    8. '    
' → logprob: -8.279486656188965
    9. '    ' → logprob: -8.529486656188965
    10. '  ' → logprob: -8.529486656188965

Token 22: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0005784121458418667
    2. 'é' → logprob: -7.5005784034729
    3. 'es' → logprob: -11.000578880310059
    4. 'ès' → logprob: -12.250578880310059
    5. '```' → logprob: -13.500578880310059
    6. 's' → logprob: -14.250578880310059
    7. 'ÉS' → logprob: -14.250578880310059
    8. 'e' → logprob: -15.000578880310059
    9. 'ées' → logprob: -15.125578880310059
    10. '\xc2' → logprob: -15.875578880310059

Token 23: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.06727622449398041
    2. 'par' → logprob: -2.8172762393951416
    3. 'es' → logprob: -6.1922760009765625
    4. '```' → logprob: -7.4422760009765625
    5. ' ' → logprob: -7.5672760009765625
    6. 's' → logprob: -7.6922760009765625
    7. ',' → logprob: -7.9422760009765625
    8. '   ' → logprob: -8.067276000976562
    9. '  ' → logprob: -8.817276000976562
    10. '_par' → logprob: -9.067276000976562

Token 24: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.33807894587516785
    2. 'un' → logprob: -1.3380789756774902
    3. ''un' → logprob: -4.08807897567749
    4. '```' → logprob: -5.71307897567749
    5. ' ' → logprob: -6.58807897567749
    6. 'une' → logprob: -6.83807897567749
    7. ' ' → logprob: -8.213078498840332
    8. '  ' → logprob: -8.338078498840332
    9. ''' → logprob: -8.713078498840332
    10. '_un' → logprob: -8.838078498840332

Token 25: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5747560262680054
    2. ' espace' → logprob: -0.9497560262680054
    3. 'esp' → logprob: -3.449756145477295
    4. ''espace' → logprob: -4.699756145477295
    5. '_' → logprob: -5.199756145477295
    6. ' ' → logprob: -6.699756145477295
    7. 'space' → logprob: -7.074756145477295
    8. 'e' → logprob: -7.699756145477295
    9. '’espace' → logprob: -7.824756145477295
    10. ' espaces' → logprob: -8.324755668640137

Token 26: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008057743310928345
    2. ',' → logprob: -5.258057594299316
    3. ')' → logprob: -7.008057594299316
    4. '.' → logprob: -7.383057594299316
    5. '\n' → logprob: -7.633057594299316
    6. '"""' → logprob: -8.008057594299316
    7. ' """' → logprob: -9.758057594299316
    8. '"' → logprob: -9.883057594299316
    9. ' ,' → logprob: -10.133057594299316
    10. ' ' → logprob: -10.133057594299316

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008724601939320564
    2. ' puis' → logprob: -5.258724689483643
    3. '    ' → logprob: -7.258724689483643
    4. 'et' → logprob: -7.508724689483643
    5. 'p' → logprob: -7.508724689483643
    6. ' et' → logprob: -7.758724689483643
    7. ',' → logprob: -8.633724212646484
    8. 's' → logprob: -8.633724212646484
    9. ')' → logprob: -8.883724212646484
    10. ' return' → logprob: -9.133724212646484

Token 28: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07906945049762726
    2. ' puis' → logprob: -3.3290693759918213
    3. 'p' → logprob: -4.4540696144104
    4. '    ' → logprob: -4.5790696144104
    5. 'et' → logprob: -5.3290696144104
    6. ' et' → logprob: -5.3290696144104
    7. ',' → logprob: -6.9540696144104
    8. ' return' → logprob: -7.0790696144104
    9. ' retourne' → logprob: -7.0790696144104
    10. ' )' → logprob: -7.4540696144104

Token 29: ' inverse' (ID: 53743)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22557607293128967
    2. ' retourne' → logprob: -2.725576162338257
    3. ' les' → logprob: -3.225576162338257
    4. ' ren' → logprob: -3.850576162338257
    5. 'concat' → logprob: -4.225575923919678
    6. ' concat' → logprob: -4.350575923919678
    7. 'ren' → logprob: -4.475575923919678
    8. ' effect' → logprob: -5.350575923919678
    9. 'les' → logprob: -5.475575923919678
    10. 'effect' → logprob: -5.725575923919678

Token 30: ' l' (ID: 305)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.03208484873175621
    2. ' l' → logprob: -4.407084941864014
    3. ' leurs' → logprob: -5.157084941864014
    4. ' le' → logprob: -5.532084941864014
    5. ' leur' → logprob: -5.532084941864014
    6. ' la' → logprob: -5.907084941864014
    7. 'r' → logprob: -6.657084941864014
    8. 's' → logprob: -7.407084941864014
    9. ' ' → logprob: -7.532084941864014
    10. 'les' → logprob: -9.032084465026855

Token 31: ''ordre' (ID: 124753)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0729542151093483
    2. 'e' → logprob: -2.8229541778564453
    3. ''ordre' → logprob: -5.072954177856445
    4. 'a' → logprob: -5.697954177856445
    5. 'les' → logprob: -7.697954177856445
    6. 's' → logprob: -8.072954177856445
    7. 'eur' → logprob: -8.947954177856445
    8. ''' → logprob: -9.822954177856445
    9. 'eux' → logprob: -9.822954177856445
    10. 'eurs' → logprob: -10.072954177856445

Token 32: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.022701755166053772
    2. ' ' → logprob: -4.522701740264893
    3. '   ' → logprob: -5.397701740264893
    4. 'des' → logprob: -5.647701740264893
    5. ' de' → logprob: -6.397701740264893
    6. ' et' → logprob: -8.02270221710205
    7. 's' → logprob: -8.14770221710205
    8. ' d' → logprob: -8.27270221710205
    9. '  ' → logprob: -8.89770221710205
    10. 'def' → logprob: -9.02270221710205

Token 33: ' mots' (ID: 38338)
  Prédit: ' mots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.2068115621805191
    2. 'm' → logprob: -1.831811547279358
    3. ' deux' → logprob: -4.456811428070068
    4. 'de' → logprob: -4.706811428070068
    5. ' ' → logprob: -5.456811428070068
    6. 'mot' → logprob: -7.081811428070068
    7. '   ' → logprob: -8.831811904907227
    8. ' m' → logprob: -9.331811904907227
    9. ' words' → logprob: -9.581811904907227
    10. ' ' → logprob: -9.706811904907227

Token 34: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024107355624437332
    2. ',' → logprob: -3.8991074562072754
    3. ' et' → logprob: -7.274107456207275
    4. '.' → logprob: -7.649107456207275
    5. '    
' → logprob: -7.774107456207275
    6. ' ,' → logprob: -7.774107456207275
    7. '    ' → logprob: -8.274106979370117
    8. ' ' → logprob: -8.274106979370117
    9. ')' → logprob: -9.024106979370117
    10. '\' → logprob: -9.149106979370117

Token 35: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.34847700595855713
    2. ' retourne' → logprob: -1.4734770059585571
    3. '   ' → logprob: -3.8484768867492676
    4. ' return' → logprob: -3.9734768867492676
    5. ' ren' → logprob: -4.348476886749268
    6. ' returns' → logprob: -5.848476886749268
    7. 'return' → logprob: -6.223476886749268
    8. ' ' → logprob: -7.098476886749268
    9. ' retourner' → logprob: -7.223476886749268
    10. 'les' → logprob: -7.348476886749268

Token 36: ' concat' (ID: 73950)
  Prédit: ' concat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' concat' → logprob: -0.38953155279159546
    2. 'concat' → logprob: -1.7645316123962402
    3. ' concaten' → logprob: -2.7645316123962402
    4. ' concatenate' → logprob: -4.01453161239624
    5. ' retourne' → logprob: -4.26453161239624
    6. 'conc' → logprob: -4.26453161239624
    7. '   ' → logprob: -4.63953161239624
    8. ' combine' → logprob: -4.88953161239624
    9. ' conc' → logprob: -5.13953161239624
    10. 'con' → logprob: -5.63953161239624

Token 37: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.009163285605609417
    2. 'é' → logprob: -5.2591633796691895
    3. 'è' → logprob: -6.5091633796691895
    4. 'èn' → logprob: -7.2591633796691895
    5. '```' → logprob: -7.7591633796691895
    6. '\' → logprob: -8.134162902832031
    7. 'én' → logprob: -8.884162902832031
    8. '**' → logprob: -9.009162902832031
    9. '#' → logprob: -9.009162902832031
    10. 'éné' → logprob: -9.509162902832031

Token 38: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2129947543144226
    2. ',' → logprob: -3.0879948139190674
    3. '.' → logprob: -3.2129948139190674
    4. ' en' → logprob: -3.5879948139190674
    5. ' avec' → logprob: -4.212994575500488
    6. ' et' → logprob: -4.337994575500488
    7. 'def' → logprob: -4.587994575500488
    8. ' ' → logprob: -5.212994575500488
    9. ')' → logprob: -5.337994575500488
    10. ' )' → logprob: -5.337994575500488

Token 39: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.2706049978733063
    2. ' espace' → logprob: -1.6456049680709839
    3. 'esp' → logprob: -3.7706050872802734
    4. ' espaces' → logprob: -4.395605087280273
    5. ''espace' → logprob: -5.770605087280273
    6. ' ' → logprob: -6.145605087280273
    7. 's' → logprob: -6.895605087280273
    8. 'space' → logprob: -7.395605087280273
    9. '_' → logprob: -7.520605087280273
    10. '   ' → logprob: -8.145605087280273

Token 40: ' supplémentaire' (ID: 111252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020077454391866922
    2. ')' → logprob: -7.627007961273193
    3. '\n' → logprob: -7.877007961273193
    4. '    
' → logprob: -8.252007484436035
    5. ',' → logprob: -8.627007484436035
    6. '  ' → logprob: -9.002007484436035
    7. ':' → logprob: -9.252007484436035
    8. '):' → logprob: -9.252007484436035
    9. ' ' → logprob: -9.502007484436035
    10. '.' → logprob: -9.752007484436035

Token 41: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0227776188403368
    2. '.' → logprob: -4.522777557373047
    3. '    
' → logprob: -5.897777557373047
    4. '\n' → logprob: -6.522777557373047
    5. ',' → logprob: -6.772777557373047
    6. '\' → logprob: -7.022777557373047
    7. ')' → logprob: -7.272777557373047
    8. ' ' → logprob: -7.272777557373047
    9. '
' → logprob: -7.397777557373047
    10. '"' → logprob: -7.522777557373047

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005960795562714338
    2. '"""' → logprob: -5.255960941314697
    3. '"' → logprob: -8.255960464477539
    4. '"""
' → logprob: -8.380960464477539
    5. '```' → logprob: -9.005960464477539
    6. '""' → logprob: -10.255960464477539
    7. ' """' → logprob: -11.005960464477539
    8. '\n' → logprob: -11.505960464477539
    9. '    
' → logprob: -11.630960464477539
    10. ' ' → logprob: -11.630960464477539

Token 43: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0431838184595108
    2. '"""' → logprob: -3.2931838035583496
    3. '"""
' → logprob: -6.29318380355835
    4. '\n' → logprob: -6.66818380355835
    5. '```' → logprob: -7.29318380355835
    6. '""' → logprob: -7.66818380355835
    7. '"' → logprob: -7.79318380355835
    8. ' """' → logprob: -9.043184280395508
    9. '\' → logprob: -9.668184280395508
    10. '`' → logprob: -10.168184280395508

Token 44: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0030360594391822815
    2. 'ic' → logprob: -5.878036022186279
    3. 'icher' → logprob: -9.503036499023438
    4. 'ichage' → logprob: -9.628036499023438
    5. 'ich' → logprob: -9.878036499023438
    6. 'ect' → logprob: -11.628036499023438
    7. '   ' → logprob: -12.128036499023438
    8. 'fic' → logprob: -12.128036499023438
    9. 'ric' → logprob: -12.128036499023438
    10. 'i' → logprob: -12.878036499023438

Token 45: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4567956030368805
    2. ' les' → logprob: -1.081795573234558
    3. ' la' → logprob: -4.206795692443848
    4. 's' → logprob: -5.206795692443848
    5. ' l' → logprob: -6.831795692443848
    6. '   ' → logprob: -6.956795692443848
    7. ' the' → logprob: -7.206795692443848
    8. ' ' → logprob: -7.456795692443848
    9. 'le' → logprob: -7.581795692443848
    10. 'es' → logprob: -7.581795692443848

Token 46: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.048676617443561554
    2. 'rés' → logprob: -3.9236767292022705
    3. 's' → logprob: -4.173676490783691
    4. ' resultat' → logprob: -5.298676490783691
    5. ' result' → logprob: -6.798676490783691
    6. ' rés' → logprob: -7.048676490783691
    7. ' résult' → logprob: -7.173676490783691
    8. 'result' → logprob: -7.173676490783691
    9. '   ' → logprob: -7.298676490783691
    10. ' mot' → logprob: -7.548676490783691

Token 47: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12893922626972198
    2. '
' → logprob: -2.628939151763916
    3. '"""' → logprob: -4.003939151763916
    4. '"""
' → logprob: -4.253939151763916
    5. '\n' → logprob: -4.628939151763916
    6. '"' → logprob: -5.878939151763916
    7. '    
' → logprob: -6.503939151763916
    8. '```' → logprob: -7.878939151763916
    9. '""' → logprob: -8.378939628601074
    10. ' """
' → logprob: -8.378939628601074

Token 48: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3336162269115448
    2. ' l' → logprob: -1.7086162567138672
    3. 'la' → logprob: -2.583616256713867
    4. '   ' → logprob: -4.708616256713867
    5. ' la' → logprob: -4.958616256713867
    6. ' ' → logprob: -5.833616256713867
    7. 'à' → logprob: -6.208616256713867
    8. 'é' → logprob: -6.458616256713867
    9. 'lac' → logprob: -6.458616256713867
    10. '	l' → logprob: -6.958616256713867

Token 49: ''écran' (ID: 147901)
  Prédit: ''utilisateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.6514464020729065
    2. 'a' → logprob: -0.7764464020729065
    3. ''' → logprob: -4.651446342468262
    4. 'e' → logprob: -5.776446342468262
    5. ''a' → logprob: -6.276446342468262
    6. 'u' → logprob: -6.401446342468262
    7. ''écran' → logprob: -7.651446342468262
    8. ''aff' → logprob: -8.151446342468262
    9. ''intérieur' → logprob: -8.276446342468262
    10. ''util' → logprob: -8.276446342468262

Token 50: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03047041967511177
    2. '"""' → logprob: -4.030470371246338
    3. '"""
' → logprob: -5.155470371246338
    4. '"' → logprob: -5.405470371246338
    5. '\n' → logprob: -7.280470371246338
    6. '
' → logprob: -7.905470371246338
    7. '```' → logprob: -8.155470848083496
    8. '""' → logprob: -8.155470848083496
    9. ')' → logprob: -9.405470848083496
    10. '    
' → logprob: -9.905470848083496

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00732193561270833
    2. '"""' → logprob: -5.007321834564209
    3. '"""
' → logprob: -7.882321834564209
    4. '```' → logprob: -8.632322311401367
    5. '""' → logprob: -10.757322311401367
    6. '    ' → logprob: -11.757322311401367
    7. '
' → logprob: -12.382322311401367
    8. '  ' → logprob: -12.632322311401367
    9. ' ' → logprob: -12.632322311401367
    10. '"' → logprob: -12.632322311401367

Token 52: ' Exemple' (ID: 142783)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27373313903808594
    2. '"""' → logprob: -1.523733139038086
    3. '"""
' → logprob: -3.898733139038086
    4. '```' → logprob: -7.523733139038086
    5. '""' → logprob: -7.648733139038086
    6. ' """' → logprob: -9.773733139038086
    7. '    ' → logprob: -9.773733139038086
    8. ' """
' → logprob: -10.023733139038086
    9. '  ' → logprob: -10.398733139038086
    10. 'def' → logprob: -10.773733139038086

Token 53: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6127424836158752
    2. ' :' → logprob: -1.2377424240112305
    3. ':' → logprob: -3.2377424240112305
    4. '    
' → logprob: -3.7377424240112305
    5. ' d' → logprob: -3.8627424240112305
    6. '    ' → logprob: -4.2377424240112305
    7. '\n' → logprob: -4.3627424240112305
    8. '
' → logprob: -4.4877424240112305
    9. ' :
' → logprob: -4.4877424240112305
    10. 'd' → logprob: -4.7377424240112305

Token 54: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00788023043423891
    2. '"' → logprob: -6.132880210876465
    3. 'Bonjour' → logprob: -6.507880210876465
    4. '    ' → logprob: -7.382880210876465
    5. '    
' → logprob: -7.632880210876465
    6. '  ' → logprob: -8.257880210876465
    7. '>>>' → logprob: -8.507880210876465
    8. 'Ex' → logprob: -8.632880210876465
    9. '```' → logprob: -8.632880210876465
    10. '       ' → logprob: -9.007880210876465

Token 55: ' Entr' (ID: 50650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0245262049138546
    2. 'Bonjour' → logprob: -5.524526119232178
    3. 'input' → logprob: -6.024526119232178
    4. '"' → logprob: -6.524526119232178
    5. 'mot' → logprob: -6.649526119232178
    6. 'word' → logprob: -6.774526119232178
    7. 'user' → logprob: -7.024526119232178
    8. 'Ent' → logprob: -7.024526119232178
    9. 'Entr' (adapté à ' Entr') → logprob: -7.274526119232178
    10. 'm' → logprob: -7.399526119232178

Token 56: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.16017334163188934
    2. 'er' → logprob: -2.1601734161376953
    3. '   ' → logprob: -3.6601734161376953
    4. 'ez' → logprob: -5.660173416137695
    5. 'é' → logprob: -6.410173416137695
    6. 'e' → logprob: -6.785173416137695
    7. 'ées' → logprob: -8.410173416137695
    8. 'ee' → logprob: -8.660173416137695
    9. '```' → logprob: -9.285173416137695
    10. 'és' → logprob: -10.160173416137695

Token 57: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8584915399551392
    2. ' :' → logprob: -0.9834915399551392
    3. ':' → logprob: -1.7334915399551392
    4. '       ' → logprob: -4.85849142074585
    5. '"' → logprob: -4.98349142074585
    6. ' "' → logprob: -6.60849142074585
    7. '    ' → logprob: -6.73349142074585
    8. 's' → logprob: -7.10849142074585
    9. ''' → logprob: -7.23349142074585
    10. ' d' → logprob: -7.73349142074585

Token 58: ' chat' (ID: 7999)
  Prédit: 'bonjour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bonjour' → logprob: -1.0547702312469482
    2. ' bon' → logprob: -1.5547702312469482
    3. 'chat' → logprob: -2.1797702312469482
    4. ' chat' → logprob: -2.3047702312469482
    5. '"' → logprob: -2.8047702312469482
    6. 'Bonjour' → logprob: -3.3047702312469482
    7. 'hello' → logprob: -3.6797702312469482
    8. 'python' → logprob: -4.304770469665527
    9. ' hello' → logprob: -4.304770469665527
    10. ' Bonjour' → logprob: -4.804770469665527

Token 59: ' chien' (ID: 76860)
  Prédit: ' chien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chien' → logprob: -0.4276977479457855
    2. '   ' → logprob: -1.302697777748108
    3. 'chien' → logprob: -2.9276976585388184
    4. ' et' → logprob: -4.927697658538818
    5. ' ' → logprob: -4.927697658538818
    6. '    ' → logprob: -5.927697658538818
    7. '  ' → logprob: -7.177697658538818
    8. ' dog' → logprob: -7.552697658538818
    9. '"' → logprob: -7.677697658538818
    10. ',' → logprob: -8.177698135375977

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11673157662153244
    2. '\n' → logprob: -2.491731643676758
    3. '    
' → logprob: -4.366731643676758
    4. '
' → logprob: -5.866731643676758
    5. '"""
' → logprob: -5.991731643676758
    6. '       ' → logprob: -6.491731643676758
    7. '"' → logprob: -6.491731643676758
    8. '"\' → logprob: -6.616731643676758
    9. '   
' → logprob: -7.241731643676758
    10. ' """
' → logprob: -7.616731643676758

Token 61: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059322334825992584
    2. '\n' → logprob: -3.3093223571777344
    3. '       ' → logprob: -4.559322357177734
    4. '    
' → logprob: -5.684322357177734
    5. '
' → logprob: -6.059322357177734
    6. '"""
' → logprob: -6.684322357177734
    7. '"\' → logprob: -6.809322357177734
    8. '"' → logprob: -7.184322357177734
    9. '  
' → logprob: -8.059322357177734
    10. '        
' → logprob: -8.184322357177734

Token 62: ' Sort' (ID: 25945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.164495050907135
    2. '       ' → logprob: -2.4144949913024902
    3. 'Sort' (adapté à ' Sort') → logprob: -3.7894949913024902
    4. 'Rés' → logprob: -4.91449499130249
    5. ' Rés' → logprob: -5.16449499130249
    6. 'Retour' → logprob: -5.16449499130249
    7. 'sort' → logprob: -5.28949499130249
    8. '"""
' → logprob: -6.03949499130249
    9. ' Sort' → logprob: -6.41449499130249
    10. 'chien' → logprob: -6.41449499130249

Token 63: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.05228632688522339
    2. 'i' → logprob: -3.677286386489868
    3. 'ié' → logprob: -4.302286148071289
    4. 'e' → logprob: -5.427286148071289
    5. '   ' → logprob: -6.177286148071289
    6. ' ie' → logprob: -6.552286148071289
    7. 'é' → logprob: -6.677286148071289
    8. 'ée' → logprob: -7.302286148071289
    9. ' ' → logprob: -7.927286148071289
    10. ' chat' → logprob: -8.302286148071289

Token 64: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.0822005569934845
    2. ':' → logprob: -2.582200527191162
    3. '   ' → logprob: -6.082200527191162
    4. ' ' → logprob: -8.08220100402832
    5. ' =' → logprob: -8.45720100402832
    6. 'chat' → logprob: -9.20720100402832
    7. '"' → logprob: -9.58220100402832
    8. '=' → logprob: -9.70720100402832
    9. '  ' → logprob: -10.20720100402832
    10. ' chat' → logprob: -10.51970100402832

Token 65: ' chien' (ID: 76860)
  Prédit: 'chien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chien' → logprob: -0.014019173569977283
    2. ' chien' → logprob: -4.639019012451172
    3. 'chi' → logprob: -5.764019012451172
    4. 'ch' → logprob: -7.764019012451172
    5. '"' → logprob: -8.764019012451172
    6. ' chiens' → logprob: -9.014019012451172
    7. ' ' → logprob: -9.639019012451172
    8. 'chen' → logprob: -10.014019012451172
    9. ' "' → logprob: -10.451519012451172
    10. '   ' → logprob: -10.576519012451172

Token 66: 'chat' (ID: 13503)
  Prédit: 'chat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chat' → logprob: -0.020569102838635445
    2. ' chat' → logprob: -4.020569324493408
    3. 'ch' → logprob: -6.895569324493408
    4. '+' → logprob: -7.520569324493408
    5. ' ' → logprob: -9.02056884765625
    6. ' +' → logprob: -9.14556884765625
    7. 'cat' → logprob: -9.27056884765625
    8. 'cha' → logprob: -9.64556884765625
    9. '   ' → logprob: -9.77056884765625
    10. 'chien' → logprob: -10.02056884765625

Token 67: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012158997356891632
    2. '
' → logprob: -4.7621588706970215
    3. '    
' → logprob: -6.2621588706970215
    4. '\n' → logprob: -7.6371588706970215
    5. '"""' → logprob: -8.38715934753418
    6. '   
' → logprob: -8.51215934753418
    7. '```' → logprob: -8.63715934753418
    8. '  
' → logprob: -8.76215934753418
    9. '"""
' → logprob: -9.88715934753418
    10. ')' → logprob: -10.13715934753418

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10081923753023148
    2. '"""' → logprob: -2.3508193492889404
    3. '"' → logprob: -8.35081958770752
    4. '"""
' → logprob: -8.60081958770752
    5. ' """' → logprob: -9.35081958770752
    6. '""' → logprob: -9.97581958770752
    7. '```' → logprob: -10.10081958770752
    8. '  ' → logprob: -11.85081958770752
    9. '    ' → logprob: -12.47581958770752
    10. ' ' → logprob: -13.22581958770752

Token 69: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43779438734054565
    2. '"""' → logprob: -1.0627944469451904
    3. '"' → logprob: -5.562794208526611
    4. '"""
' (adapté à ' """
') → logprob: -5.812794208526611
    5. '""' → logprob: -6.562794208526611
    6. '```' → logprob: -7.437794208526611
    7. ' """' → logprob: -9.06279468536377
    8. '\n' → logprob: -11.06279468536377
    9. ''''' → logprob: -11.06279468536377
    10. '`' → logprob: -11.68779468536377

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012892824597656727
    2. 'input' → logprob: -7.751289367675781
    3. '    
' → logprob: -8.001289367675781
    4. 'user' → logprob: -8.251289367675781
    5. '
' → logprob: -8.876289367675781
    6. '\n' → logprob: -11.001289367675781
    7. 'word' → logprob: -11.126289367675781
    8. 'words' → logprob: -11.126289367675781
    9. 'result' → logprob: -11.376289367675781
    10. '    ' → logprob: -11.501289367675781

Token 71: ' #' (ID: 1069)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -1.3097401857376099
    2. 'input' → logprob: -1.3097401857376099
    3. 'words' → logprob: -1.5597401857376099
    4. '   ' → logprob: -1.6847401857376099
    5. 'm' → logprob: -3.5597400665283203
    6. 'try' → logprob: -4.43474006652832
    7. 'first' → logprob: -4.80974006652832
    8. 'inputs' → logprob: -5.30974006652832
    9. 'word' → logprob: -5.80974006652832
    10. 'text' → logprob: -5.93474006652832

Token 72: ' Dem' (ID: 9458)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -1.1647478342056274
    2. 'input' → logprob: -1.2897478342056274
    3. ' user' → logprob: -1.5397478342056274
    4. ' input' → logprob: -2.664747714996338
    5. ' mots' → logprob: -3.039747714996338
    6. 'words' → logprob: -3.664747714996338
    7. ' words' → logprob: -4.414747714996338
    8. 'm' → logprob: -4.664747714996338
    9. '   ' → logprob: -4.914747714996338
    10. 'inputs' → logprob: -5.414747714996338

Token 73: 'ander' (ID: 9330)
  Prédit: 'ande'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.005844531115144491
    2. 'ander' → logprob: -6.380844593048096
    3. '#' → logprob: -7.005844593048096
    4. 'and' → logprob: -7.255844593048096
    5. '   ' → logprob: -8.005844116210938
    6. 'andes' → logprob: -8.005844116210938
    7. 'andez' → logprob: -8.255844116210938
    8. '_' → logprob: -8.380844116210938
    9. 'a' → logprob: -8.755844116210938
    10. 'an' → logprob: -9.255844116210938

Token 74: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0660279393196106
    2. '   ' → logprob: -3.441027879714966
    3. ' ' → logprob: -4.941028118133545
    4. ' =' → logprob: -5.066028118133545
    5. 'à' → logprob: -5.441028118133545
    6. ' deux' → logprob: -5.691028118133545
    7. ' a' → logprob: -6.066028118133545
    8. ' un' → logprob: -6.441028118133545
    9. ' user' → logprob: -6.441028118133545
    10. ' une' → logprob: -6.691028118133545

Token 75: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5820868611335754
    2. 'l' → logprob: -0.8320868611335754
    3. ' ' → logprob: -5.33208703994751
    4. 'user' → logprob: -7.58208703994751
    5. ' user' → logprob: -8.707086563110352
    6. 's' → logprob: -8.957086563110352
    7. ' a' → logprob: -9.832086563110352
    8. ' utilisateur' → logprob: -9.832086563110352
    9. '	l' → logprob: -9.957086563110352
    10. '  ' → logprob: -9.957086563110352

Token 76: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.06675080955028534
    2. 'u' → logprob: -2.9417507648468018
    3. ''u' → logprob: -6.191751003265381
    4. ''' → logprob: -6.441751003265381
    5. ''util' → logprob: -6.566751003265381
    6. '_util' → logprob: -6.816751003265381
    7. ''user' → logprob: -6.816751003265381
    8. '’utilisateur' → logprob: -7.066751003265381
    9. 'user' → logprob: -7.191751003265381
    10. 'l' → logprob: -7.316751003265381

Token 77: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06643963605165482
    2. 'de' → logprob: -4.191439628601074
    3. ' =' → logprob: -4.816439628601074
    4. ' un' → logprob: -5.441439628601074
    5. 'input' → logprob: -5.441439628601074
    6. ' de' → logprob: -5.816439628601074
    7. 'un' → logprob: -5.941439628601074
    8. 'le' → logprob: -6.066439628601074
    9. '  ' → logprob: -6.066439628601074
    10. '    ' → logprob: -6.441439628601074

Token 78: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4906299114227295
    2. ''' → logprob: -1.4906299114227295
    3. ''entrée' → logprob: -1.9906299114227295
    4. ''ent' → logprob: -3.9906299114227295
    5. ''entre' → logprob: -6.240630149841309
    6. ' e' → logprob: -7.365630149841309
    7. 'entr' → logprob: -7.365630149841309
    8. ' ' → logprob: -7.615630149841309
    9. ' entrer' → logprob: -7.865630149841309
    10. 'a' → logprob: -7.865630149841309

Token 79: 'entr' (ID: 12792)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12788346409797668
    2. 'entr' → logprob: -2.1278834342956543
    3. 'entrée' → logprob: -7.502883434295654
    4. ' input' → logprob: -8.502883911132812
    5. ' entrer' → logprob: -10.002883911132812
    6. ''entrée' → logprob: -10.752883911132812
    7. 's' → logprob: -10.877883911132812
    8. ' entr' → logprob: -10.877883911132812
    9. ' ' → logprob: -11.252883911132812
    10. '   ' → logprob: -11.252883911132812

Token 80: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.021143514662981033
    2. 'ter' → logprob: -4.146143436431885
    3. 'e' → logprob: -6.021143436431885
    4. 'trer' → logprob: -6.521143436431885
    5. 't' → logprob: -6.771143436431885
    6. 'tre' → logprob: -11.771143913269043
    7. 'tr' → logprob: -11.896143913269043
    8. 'éer' → logprob: -12.146143913269043
    9. 'ez' → logprob: -12.771143913269043
    10. 'te' → logprob: -12.771143913269043

Token 81: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.544622540473938
    2. 'de' → logprob: -1.044622540473938
    3. ' un' → logprob: -3.9196224212646484
    4. ' les' → logprob: -3.9196224212646484
    5. ' ' → logprob: -4.669622421264648
    6. '   ' → logprob: -5.044622421264648
    7. ' une' → logprob: -6.044622421264648
    8. ' de' → logprob: -6.169622421264648
    9. ' aux' → logprob: -6.419622421264648
    10. ' two' → logprob: -6.794622421264648

Token 82: ' éléments' (ID: 57375)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.059563055634498596
    2. 'm' → logprob: -3.059563159942627
    3. ' ' → logprob: -4.809563159942627
    4. ' m' → logprob: -6.434563159942627
    5. '  ' → logprob: -7.809563159942627
    6. ' ' → logprob: -8.559562683105469
    7. ' mot' → logprob: -8.809562683105469
    8. 'mot' → logprob: -8.934562683105469
    9. 's' → logprob: -9.684562683105469
    10. ' espaces' → logprob: -9.809562683105469

Token 83: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2393403947353363
    2. ' mots' → logprob: -2.614340305328369
    3. 'user' → logprob: -3.489340305328369
    4. ' user' → logprob: -3.614340305328369
    5. ' input' → logprob: -3.864340305328369
    6. 's' → logprob: -4.114340305328369
    7. 'input' → logprob: -4.114340305328369
    8. '    ' → logprob: -5.239340305328369
    9. 'm' → logprob: -5.864340305328369
    10. '    
' → logprob: -5.864340305328369

Token 84: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.002058903919532895
    2. 'é' → logprob: -6.252058982849121
    3. 'par' → logprob: -9.752058982849121
    4. ' par' → logprob: -10.002058982849121
    5. 'es' → logprob: -11.752058982849121
    6. 's' → logprob: -12.252058982849121
    7. 'ès' → logprob: -12.502058982849121
    8. '-' → logprob: -13.377058982849121
    9. 'ées' → logprob: -13.377058982849121
    10. '_par' → logprob: -13.627058982849121

Token 85: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.31399333477020264
    2. 'par' → logprob: -1.3139933347702026
    3. '_par' → logprob: -7.938993453979492
    4. '(par' → logprob: -9.563993453979492
    5. '	par' → logprob: -9.813993453979492
    6. '  ' → logprob: -10.063993453979492
    7. '   ' → logprob: -10.188993453979492
    8. ' ' → logprob: -10.438993453979492
    9. '```' → logprob: -10.438993453979492
    10. '.' → logprob: -11.438993453979492

Token 86: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.30062443017959595
    2. ' un' → logprob: -1.5506243705749512
    3. 'input' → logprob: -3.925624370574951
    4. ''un' → logprob: -4.550624370574951
    5. ' ' → logprob: -5.925624370574951
    6. 'es' → logprob: -5.925624370574951
    7. 'une' → logprob: -6.050624370574951
    8. 'space' → logprob: -6.425624370574951
    9. ' espace' → logprob: -6.675624370574951
    10. ''' → logprob: -6.800624370574951

Token 87: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.05428335443139076
    2. ' espace' → logprob: -3.054283380508423
    3. 'esp' → logprob: -5.554283142089844
    4. ''espace' → logprob: -6.929283142089844
    5. ' ' → logprob: -7.429283142089844
    6. 'space' → logprob: -10.054283142089844
    7. ' espaces' → logprob: -10.304283142089844
    8. '’espace' → logprob: -10.304283142089844
    9. ''' → logprob: -10.679283142089844
    10. '  ' → logprob: -10.929283142089844

Token 88: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06448028981685638
    2. 'user' → logprob: -3.6894803047180176
    3. 'input' → logprob: -3.6894803047180176
    4. ' user' → logprob: -6.189480304718018
    5. ' input' → logprob: -6.189480304718018
    6. '    
' → logprob: -6.314480304718018
    7. 'm' → logprob: -6.439480304718018
    8. '\n' → logprob: -6.564480304718018
    9. 'n' → logprob: -6.689480304718018
    10. 's' → logprob: -7.939480304718018

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0077269417233765125
    2. 'input' → logprob: -5.757727146148682
    3. 'user' → logprob: -6.007727146148682
    4. ' input' → logprob: -7.632727146148682
    5. 'n' → logprob: -7.882727146148682
    6. ' user' → logprob: -8.132726669311523
    7. 'm' → logprob: -8.257726669311523
    8. 's' → logprob: -9.507726669311523
    9. ' ' → logprob: -9.507726669311523
    10. 'u' → logprob: -9.632726669311523

Token 90: ' first' (ID: 1577)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.8582590818405151
    2. 'input' → logprob: -1.4832590818405151
    3. 'm' → logprob: -1.8582590818405151
    4. '   ' → logprob: -2.1082592010498047
    5. ' user' → logprob: -4.108259201049805
    6. 'words' → logprob: -4.233259201049805
    7. ' input' → logprob: -4.483259201049805
    8. 'inputs' → logprob: -4.983259201049805
    9. ' mots' → logprob: -4.983259201049805
    10. 'entrée' → logprob: -5.858259201049805

Token 91: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34524109959602356
    2. '_input' → logprob: -1.9702410697937012
    3. ' =' → logprob: -2.470241069793701
    4. '_m' → logprob: -3.470241069793701
    5. '_word' → logprob: -4.470241069793701
    6. '_name' → logprob: -5.220241069793701
    7. '_words' → logprob: -5.720241069793701
    8. ' ' → logprob: -5.970241069793701
    9. '_string' → logprob: -6.095241069793701
    10. '  ' → logprob: -6.220241069793701

Token 92: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.029869895428419113
    2. 'second' → logprob: -3.529869794845581
    3. ' ' → logprob: -9.52987003326416
    4. '<|end|>' → logprob: -11.15487003326416
    5. '	second' → logprob: -11.27987003326416
    6. ' last' → logprob: -11.90487003326416
    7. ' space' → logprob: -12.77987003326416
    8. ' seconde' → logprob: -13.27987003326416
    9. 'space' → logprob: -13.27987003326416
    10. ' secon' → logprob: -13.27987003326416

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008619539439678192
    2. '=' → logprob: -4.75861930847168
    3. '=input' → logprob: -13.38361930847168
    4. ',' → logprob: -13.75861930847168
    5. '<|end|>' → logprob: -14.25861930847168
    6. 's' → logprob: -14.38361930847168
    7. ')' → logprob: -15.38361930847168
    8. ' ' → logprob: -15.75861930847168
    9. '.' → logprob: -15.88361930847168
    10. 'input' → logprob: -16.00861930847168

Token 94: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.01604398898780346
    2. 'input' → logprob: -4.1410441398620605
    3. ' map' → logprob: -12.141043663024902
    4. ' ' → logprob: -13.641043663024902
    5. '	input' → logprob: -13.641043663024902
    6. '=input' → logprob: -14.016043663024902
    7. ' ' → logprob: -14.516043663024902
    8. 'map' → logprob: -15.391043663024902
    9. '  ' → logprob: -16.26604461669922
    10. '(input' → logprob: -16.39104461669922

Token 95: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17574244737625122
    2. '("' → logprob: -2.4257423877716064
    3. '('' → logprob: -3.1757423877716064
    4. '()' → logprob: -4.3007426261901855
    5. '("("' → logprob: -4.5507426261901855
    6. '().' → logprob: -5.0507426261901855
    7. '("")' → logprob: -9.425742149353027
    8. '("(' → logprob: -9.425742149353027
    9. '(">' → logprob: -9.550742149353027
    10. '("").' → logprob: -9.925742149353027

Token 96: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002614550176076591
    2. 'strip' → logprob: -8.250261306762695
    3. 'spl' → logprob: -15.750261306762695
    4. ' split' → logprob: -17.000261306762695
    5. '(split' → logprob: -18.625261306762695
    6. '.split' → logprob: -19.500261306762695
    7. 'rstrip' → logprob: -19.625261306762695
    8. 's' → logprob: -20.125261306762695
    9. '```' → logprob: -21.625261306762695
    10. 'str' → logprob: -21.750261306762695

Token 97: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01093226857483387
    2. '(' → logprob: -5.135932445526123
    3. '("("' → logprob: -5.635932445526123
    4. '("' → logprob: -6.635932445526123
    5. '()' → logprob: -9.510931968688965
    6. ''' → logprob: -10.510931968688965
    7. '"' → logprob: -13.010931968688965
    8. '('.')' → logprob: -13.260931968688965
    9. '('(' → logprob: -13.385931968688965
    10. '(',' → logprob: -13.385931968688965

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7544928193092346
    2. 'return' → logprob: -1.8794927597045898
    3. '    
' → logprob: -2.00449275970459
    4. ' return' → logprob: -2.75449275970459
    5. '
' → logprob: -2.87949275970459
    6. '  
' → logprob: -2.87949275970459
    7. ' ' → logprob: -3.87949275970459
    8. '   
' → logprob: -4.00449275970459
    9. ' 
' → logprob: -4.50449275970459
    10. ')' → logprob: -5.62949275970459

Token 99: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7107623219490051
    2. '   ' → logprob: -1.0857622623443604
    3. '
' → logprob: -2.7107622623443604
    4. '    
' → logprob: -2.9607622623443604
    5. ' return' → logprob: -3.7107622623443604
    6. '  
' → logprob: -4.3357625007629395
    7. '   
' → logprob: -5.4607625007629395
    8. ' 
' → logprob: -5.4607625007629395
    9. ' ' → logprob: -5.9607625007629395
    10. '\n' → logprob: -6.9607625007629395

Token 100: ' Con' (ID: 1532)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.26411378383636475
    2. 'return' → logprob: -1.7641137838363647
    3. '   ' → logprob: -3.8891139030456543
    4. 'print' → logprob: -4.264113903045654
    5. ' print' → logprob: -4.639113903045654
    6. '#' → logprob: -4.889113903045654
    7. 'result' → logprob: -5.264113903045654
    8. ' result' → logprob: -6.014113903045654
    9. ' #' → logprob: -7.639113903045654
    10. ' first' → logprob: -7.764113903045654

Token 101: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.04805726185441017
    2. 'c' → logprob: -3.2980573177337646
    3. 'cate' → logprob: -4.6730570793151855
    4. 'cats' → logprob: -8.923057556152344
    5. 'kat' → logprob: -9.173057556152344
    6. 'vert' → logprob: -9.673057556152344
    7. 'ca' → logprob: -9.798057556152344
    8. 'st' → logprob: -9.923057556152344
    9. '#' → logprob: -10.048057556152344
    10. 't' → logprob: -10.173057556152344

Token 102: 'é' (ID: 377)
  Prédit: 'atenate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atenate' → logprob: -0.08861015737056732
    2. 'at' → logprob: -2.8386101722717285
    3. 'ate' → logprob: -4.2136101722717285
    4. 'aten' → logprob: -4.8386101722717285
    5. 'en' → logprob: -6.7136101722717285
    6. 'cat' → logprob: -7.4636101722717285
    7. 'én' → logprob: -7.5886101722717285
    8. '=' → logprob: -7.9636101722717285
    9. 'ten' → logprob: -8.58860969543457
    10. '   ' → logprob: -8.83860969543457

Token 103: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.044864438474178314
    2. 'n' → logprob: -3.1698644161224365
    3. 'ne' → logprob: -6.544864654541016
    4. 'nation' → logprob: -8.794864654541016
    5. 'nner' → logprob: -9.544864654541016
    6. 'né' → logprob: -10.919864654541016
    7. 'na' → logprob: -10.919864654541016
    8. '"' → logprob: -11.294864654541016
    9. 'nier' → logprob: -11.294864654541016
    10. 'nez' → logprob: -11.419864654541016

Token 104: ' le' (ID: 505)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.05546201765537262
    2. ' second' → logprob: -2.930462121963501
    3. 'return' → logprob: -8.555461883544922
    4. 'print' → logprob: -8.680461883544922
    5. '   ' → logprob: -9.055461883544922
    6. ' return' → logprob: -10.180461883544922
    7. '(second' → logprob: -10.180461883544922
    8. ' print' → logprob: -12.055461883544922
    9. 'result' → logprob: -12.055461883544922
    10. ' =' → logprob: -13.180461883544922

Token 105: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0009145628428086638
    2. ' second' → logprob: -7.000914573669434
    3. 's' → logprob: -13.500914573669434
    4. '(second' → logprob: -15.250914573669434
    5. '   ' → logprob: -15.375914573669434
    6. '.second' → logprob: -15.375914573669434
    7. '	second' → logprob: -15.375914573669434
    8. '```' → logprob: -15.500914573669434
    9. '2' → logprob: -16.125913619995117
    10. '_second' → logprob: -16.250913619995117

Token 106: ' mot' (ID: 3598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03831654414534569
    2. ' +' → logprob: -3.288316488265991
    3. 'second' → logprob: -8.53831672668457
    4. 'first' → logprob: -10.41331672668457
    5. '+
' → logprob: -10.78831672668457
    6. 'plus' → logprob: -11.91331672668457
    7. '   ' → logprob: -12.78831672668457
    8. ' first' → logprob: -13.41331672668457
    9. ' plus' → logprob: -13.53831672668457
    10. ' +
' → logprob: -13.66331672668457

Token 107: ' avant' (ID: 13339)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030016131699085236
    2. ' +' → logprob: -3.5300161838531494
    3. 'first' → logprob: -8.65501594543457
    4. '   ' → logprob: -9.78001594543457
    5. 'second' → logprob: -11.03001594543457
    6. ' first' → logprob: -11.78001594543457
    7. '+
' → logprob: -13.28001594543457
    8. '```' → logprob: -13.40501594543457
    9. '[first' → logprob: -13.40501594543457
    10. 'plus' → logprob: -13.53001594543457

Token 108: ' le' (ID: 505)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.47993597388267517
    2. 'le' → logprob: -0.9799360036849976
    3. ' first' → logprob: -5.854936122894287
    4. ' le' → logprob: -5.979936122894287
    5. 'the' → logprob: -7.854936122894287
    6. '   ' → logprob: -10.729935646057129
    7. 'prem' → logprob: -11.729935646057129
    8. ' the' → logprob: -11.979935646057129
    9. 'second' → logprob: -12.354935646057129
    10. 'la' → logprob: -12.604935646057129

Token 109: ' premier' (ID: 15506)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.4795930087566376
    2. 'prem' → logprob: -0.97959303855896
    3. ' first' → logprob: -5.854592800140381
    4. ' premier' → logprob: -5.979592800140381
    5. 'pr' → logprob: -9.604593276977539
    6. 'f' → logprob: -11.479593276977539
    7. 'Premier' → logprob: -11.979593276977539
    8. 'irst' → logprob: -13.229593276977539
    9. '```' → logprob: -13.229593276977539
    10. '[first' → logprob: -13.229593276977539

Token 110: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048768699169158936
    2. ' +' → logprob: -3.7987687587738037
    3. 'return' → logprob: -4.048768520355225
    4. '+
' → logprob: -5.298768520355225
    5. '   ' → logprob: -6.298768520355225
    6. 'print' → logprob: -7.798768520355225
    7. ' return' → logprob: -8.298768997192383
    8. ' +
' → logprob: -8.798768997192383
    9. 'second' → logprob: -9.923768997192383
    10. 'result' → logprob: -10.923768997192383

Token 111: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0062673091888427734
    2. ' print' → logprob: -5.131267547607422
    3. 'return' → logprob: -8.631267547607422
    4. '   ' → logprob: -9.006267547607422
    5. '```' → logprob: -11.756267547607422
    6. ' return' → logprob: -12.006267547607422
    7. ')' → logprob: -12.006267547607422
    8. '_print' → logprob: -12.381267547607422
    9. ' afficher' → logprob: -13.131267547607422
    10. '.print' → logprob: -13.381267547607422

Token 112: ' le' (ID: 505)
  Prédit: '(second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(second' → logprob: -0.5324227809906006
    2. 'second' → logprob: -1.0324227809906006
    3. 'print' → logprob: -2.9074227809906006
    4. '(' → logprob: -6.40742301940918
    5. ' second' → logprob: -8.90742301940918
    6. '(print' → logprob: -9.28242301940918
    7. '(se' → logprob: -9.53242301940918
    8. '   ' → logprob: -10.28242301940918
    9. '```' → logprob: -11.28242301940918
    10. 'se' → logprob: -11.40742301940918

Token 113: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.014696354046463966
    2. 'second' → logprob: -4.51469612121582
    3. 'print' → logprob: -6.01469612121582
    4. ' result' → logprob: -7.13969612121582
    5. '(second' → logprob: -9.13969612121582
    6. ' second' → logprob: -9.38969612121582
    7. ' résultat' → logprob: -9.88969612121582
    8. '(result' → logprob: -10.13969612121582
    9. 'rés' → logprob: -10.38969612121582
    10. 'res' → logprob: -10.63969612121582

Token 114: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014401133172214031
    2. '   ' → logprob: -4.264400959014893
    3. ' print' → logprob: -8.38940143585205
    4. '
' → logprob: -13.01440143585205
    5. '    
' → logprob: -13.13940143585205
    6. '	print' → logprob: -13.26440143585205
    7. '```' → logprob: -13.38940143585205
    8. ')' → logprob: -14.01440143585205
    9. ',' → logprob: -14.51440143585205
    10. '(print' → logprob: -14.88940143585205

Token 115: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00403636833652854
    2. '   ' → logprob: -5.6290364265441895
    3. ' print' → logprob: -7.7540364265441895
    4. '```' → logprob: -12.004035949707031
    5. '
' → logprob: -14.754035949707031
    6. '    
' → logprob: -15.254035949707031
    7. '	print' → logprob: -16.12903594970703
    8. '.print' → logprob: -16.25403594970703
    9. '(print' → logprob: -16.37903594970703
    10. '`' → logprob: -16.75403594970703

Token 116: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00027456742827780545
    2. ' print' → logprob: -8.250274658203125
    3. '   ' → logprob: -11.250274658203125
    4. 'prin' → logprob: -16.375274658203125
    5. 'pr' → logprob: -17.250274658203125
    6. '
' → logprob: -17.625274658203125
    7. '```' → logprob: -17.625274658203125
    8. '	print' → logprob: -18.125274658203125
    9. 'result' → logprob: -18.375274658203125
    10. 'Print' → logprob: -18.375274658203125

Token 117: '(second' (ID: 78627)
  Prédit: '(second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(second' → logprob: -0.0009500489104539156
    2. '(' → logprob: -7.250949859619141
    3. '(f' → logprob: -8.37594985961914
    4. '()' → logprob: -12.25094985961914
    5. '(se' → logprob: -12.87594985961914
    6. 'second' → logprob: -13.37594985961914
    7. '(s' → logprob: -15.87594985961914
    8. '((' → logprob: -16.12594985961914
    9. '("")' → logprob: -16.50094985961914
    10. '("' → logprob: -16.50094985961914

Token 118: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006721417419612408
    2. ' +' → logprob: -5.006721496582031
    3. ')' → logprob: -12.756721496582031
    4. '+)' → logprob: -12.881721496582031
    5. 'first' → logprob: -14.631721496582031
    6. ')+' → logprob: -17.00672149658203
    7. ' first' → logprob: -17.13172149658203
    8. '+")' → logprob: -17.63172149658203
    9. '+
' → logprob: -17.88172149658203
    10. '＋' → logprob: -18.38172149658203

Token 119: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -1.0206720617134124e-05
    2. ' first' → logprob: -11.50001049041748
    3. 'f' → logprob: -21.375009536743164
    4. '	first' → logprob: -21.625009536743164
    5. ' ' → logprob: -22.500009536743164
    6. '   ' → logprob: -22.875009536743164
    7. 'frist' → logprob: -22.875009536743164
    8. 'firstname' → logprob: -23.000009536743164
    9. '[first' → logprob: -23.125009536743164
    10. 'fi' → logprob: -23.250009536743164

Token 120: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.375
    3. ')
' → logprob: -17.375
    4. '')' → logprob: -17.625
    5. '))' → logprob: -18.125
    6. ')`' → logprob: -18.125
    7. '")' → logprob: -18.25
    8. '`)' → logprob: -18.375
    9. '）' → logprob: -19.5
    10. '   ' → logprob: -19.625

Token 121: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' App' (ID: 2583)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.35780981183052063
    2. '
' → logprob: -1.8578097820281982
    3. '```' → logprob: -2.9828097820281982
    4. 'def' → logprob: -3.2328097820281982
    5. '<|end|>' → logprob: -3.8578097820281982
    6. '#' → logprob: -4.482810020446777
    7. '\n' → logprob: -4.857810020446777
    8. 'd' → logprob: -6.107810020446777
    9. '\' → logprob: -6.232810020446777
    10. '<|end|>' → logprob: -6.482810020446777

Token 123: 'eler' (ID: 6998)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.0012441592989489436
    2. 'eler' → logprob: -6.751244068145752
    3. 'elé' → logprob: -9.87624454498291
    4. 'le' → logprob: -12.12624454498291
    5. 'e' → logprob: -12.50124454498291
    6. 'l' → logprob: -13.00124454498291
    7. '_' → logprob: -13.00124454498291
    8. 'elle' → logprob: -13.50124454498291
    9. '.py' → logprob: -13.87624454498291
    10. '#' → logprob: -13.87624454498291

Token 124: ' la' (ID: 557)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.10045424103736877
    2. ' swap' → logprob: -2.350454330444336
    3. '(' → logprob: -8.725454330444336
    4. '()' → logprob: -10.225454330444336
    5. '	swap' → logprob: -10.975454330444336
    6. 'def' → logprob: -11.475454330444336
    7. '_swap' → logprob: -11.850454330444336
    8. '_' → logprob: -12.100454330444336
    9. ' ' → logprob: -12.975454330444336
    10. '.swap' → logprob: -13.475454330444336

Token 125: ' fonction' (ID: 17610)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.0007139815716072917
    2. ' swap' → logprob: -7.25071382522583
    3. 'function' → logprob: -13.375714302062988
    4. 'def' → logprob: -13.625714302062988
    5. '_swap' → logprob: -15.000714302062988
    6. '	swap' → logprob: -15.375714302062988
    7. 'sw' → logprob: -15.750714302062988
    8. 'fonction' → logprob: -16.125713348388672
    9. '.swap' → logprob: -16.375713348388672
    10. ' function' → logprob: -16.500713348388672

Token 126: ' principale' (ID: 68926)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.005057041067630053
    2. '
' → logprob: -5.755056858062744
    3. '()
' → logprob: -6.380056858062744
    4. ' swap' → logprob: -10.005057334899902
    5. '	swap' → logprob: -10.380057334899902
    6. '_swap' → logprob: -10.755057334899902
    7. '(
' → logprob: -10.880057334899902
    8. '()' → logprob: -11.130057334899902
    9. '.swap' → logprob: -11.255057334899902
    10. '```' → logprob: -12.005057334899902

Token 127: ' pour' (ID: 1930)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.5772455930709839
    2. '
' → logprob: -0.8272455930709839
    3. '()
' → logprob: -6.827245712280273
    4. '
' → logprob: -9.702245712280273
    5. '

' → logprob: -10.202245712280273
    6. ' swap' → logprob: -10.577245712280273
    7. '\n' → logprob: -11.327245712280273
    8. '\' → logprob: -11.452245712280273
    9. '(
' → logprob: -11.452245712280273
    10. '```' → logprob: -11.452245712280273

Token 128: ' ex' (ID: 513)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.7453438639640808
    2. 'ex' → logprob: -1.2453439235687256
    3. ' ex' → logprob: -2.3703439235687256
    4. ' swap' → logprob: -2.9953439235687256
    5. ' execut' → logprob: -3.4953439235687256
    6. ' lancer' → logprob: -3.7453439235687256
    7. 'execut' → logprob: -4.1203436851501465
    8. ' effectuer' → logprob: -4.9953436851501465
    9. ' tester' → logprob: -5.3703436851501465
    10. 'l' → logprob: -5.6203436851501465

Token 129: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.02730616368353367
    2. 'ec' → logprob: -4.652306079864502
    3. 'é' → logprob: -4.777306079864502
    4. 'ecut' → logprob: -4.902306079864502
    5. 'ecute' → logprob: -6.902306079864502
    6. 'e' → logprob: -8.40230655670166
    7. 'écut' → logprob: -9.15230655670166
    8. 'è' → logprob: -10.02730655670166
    9. '#' → logprob: -10.15230655670166
    10. 'ect' → logprob: -10.40230655670166

Token 130: 'uter' (ID: 23469)
  Prédit: 'uter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uter' → logprob: -0.841164767742157
    2. 'cut' → logprob: -1.4661648273468018
    3. 'éc' → logprob: -1.7161648273468018
    4. 'é' → logprob: -2.3411648273468018
    5. 'ut' → logprob: -3.8411648273468018
    6. '```' → logprob: -3.9661648273468018
    7. 'ecut' → logprob: -4.716164588928223
    8. 'éter' → logprob: -5.841164588928223
    9. 'érer' → logprob: -6.591164588928223
    10. 'e' → logprob: -6.841164588928223

Token 131: ' le' (ID: 505)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.04349248483777046
    2. ' swap' → logprob: -3.168492555618286
    3. '()' → logprob: -7.918492317199707
    4. '	swap' → logprob: -9.918492317199707
    5. '_swap' → logprob: -10.293492317199707
    6. '()
' → logprob: -11.543492317199707
    7. 'sw' → logprob: -11.668492317199707
    8. '.swap' → logprob: -12.043492317199707
    9. '```' → logprob: -12.168492317199707
    10. '(
' → logprob: -12.293492317199707

Token 132: ' programme' (ID: 18190)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.19550752639770508
    2. 'programme' → logprob: -2.320507526397705
    3. 'code' → logprob: -2.695507526397705
    4. 'script' → logprob: -5.070507526397705
    5. ' programme' → logprob: -6.070507526397705
    6. ' swap' → logprob: -6.570507526397705
    7. ' code' → logprob: -6.695507526397705
    8. 'program' → logprob: -8.195507049560547
    9. '```' → logprob: -9.195507049560547
    10. ' script' → logprob: -9.195507049560547

Token 133: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1277911365032196
    2. 'swap' → logprob: -2.127791166305542
    3. '()
' → logprob: -7.627790927886963
    4. '
' → logprob: -8.752791404724121
    5. '

' → logprob: -9.002791404724121
    6. ' swap' → logprob: -11.127791404724121
    7. '(
' → logprob: -11.252791404724121
    8. ' 
' → logprob: -11.252791404724121
    9. '	swap' → logprob: -11.627791404724121
    10. '.swap' → logprob: -11.752791404724121

Token 134: 'swap' (ID: 55961)
  Prédit: 'swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -3.531315314830863e-06
    2. '
' → logprob: -12.625003814697266
    3. ' swap' → logprob: -16.000003814697266
    4. '	swap' → logprob: -16.750003814697266
    5. '```' → logprob: -17.125003814697266
    6. '.swap' → logprob: -18.250003814697266
    7. 'sw' → logprob: -19.375003814697266
    8. '_swap' → logprob: -20.500003814697266
    9. '

' → logprob: -20.875003814697266
    10. 'wap' → logprob: -20.875003814697266

Token 135: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -4.632542913896032e-05
    2. '_' → logprob: -10.000046730041504
    3. '_an' → logprob: -14.250046730041504
    4. '_a' → logprob: -16.500045776367188
    5. '_AND' → logprob: -17.250045776367188
    6. '_or' → logprob: -17.625045776367188
    7. '_to' → logprob: -17.875045776367188
    8. '_at' → logprob: -18.000045776367188
    9. 'and' → logprob: -18.250045776367188
    10. '_)' → logprob: -18.625045776367188

Token 136: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.31331852078437805
    2. 'conc' → logprob: -1.3133184909820557
    3. 'con' → logprob: -10.063318252563477
    4. '_' → logprob: -12.063318252563477
    5. '_cons' → logprob: -12.563318252563477
    6. '_concat' → logprob: -13.188318252563477
    7. '.concatenate' → logprob: -13.938318252563477
    8. ' concatenate' → logprob: -14.438318252563477
    9. '_cont' → logprob: -14.563318252563477
    10. 'concat' → logprob: -15.563318252563477

Token 137: 'c' (ID: 66)
  Prédit: 'atenate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atenate' → logprob: -8.423219696851447e-05
    2. 'aten' → logprob: -9.750083923339844
    3. 'at' → logprob: -10.875083923339844
    4. 'c' → logprob: -12.250083923339844
    5. 'ate' → logprob: -13.250083923339844
    6. '```' → logprob: -16.875083923339844
    7. 't' → logprob: -17.000083923339844
    8. 'cat' → logprob: -17.000083923339844
    9. 'a' → logprob: -17.250083923339844
    10. '.concatenate' → logprob: -17.375083923339844

Token 138: 'atenate' (ID: 63439)
  Prédit: 'atenate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atenate' → logprob: -5.776898251497187e-05
    2. 'aten' → logprob: -10.5000581741333
    3. 'at' → logprob: -10.6250581741333
    4. 'ate' → logprob: -12.2500581741333
    5. 'onate' → logprob: -14.6250581741333
    6. 'utate' → logprob: -15.1250581741333
    7. 'ernate' → logprob: -16.625057220458984
    8. 't' → logprob: -17.375057220458984
    9. 'on' → logprob: -17.750057220458984
    10. '```' → logprob: -18.000057220458984

Token 139: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1142616719007492
    2. '(' → logprob: -2.2392616271972656
    3. '()
' → logprob: -7.614261627197266
    4. '(
' → logprob: -7.739261627197266
    5. '<|end|>' → logprob: -8.864261627197266
    6. ')' → logprob: -9.739261627197266
    7. '
' → logprob: -9.739261627197266
    8. '#' → logprob: -9.739261627197266
    9. '\' → logprob: -9.989261627197266
    10. '```' → logprob: -10.239261627197266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 137
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 95
Précision stricte (1ère position): 35.77%
Précision adaptée (1ère position): 36.50%
Précision (top 10): 69.34%
================================================================================
