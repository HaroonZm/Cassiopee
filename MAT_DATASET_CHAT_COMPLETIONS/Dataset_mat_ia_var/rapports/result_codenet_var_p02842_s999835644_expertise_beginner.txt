================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
found = False
for x in range(n + 1):
    if (x * 108) // 100 == n:
        print(x)
        found = True
        break
if not found:
    print(':(')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'found' (ID: 26334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3530406951904297
    2. 'i' → logprob: -1.4780406951904297
    3. 'if' → logprob: -1.8530406951904297
    4. 's' → logprob: -2.2280406951904297
    5. ' ' → logprob: -3.1030406951904297
    6. ''' → logprob: -3.1030406951904297
    7. 'f' → logprob: -3.8530406951904297
    8. '`' → logprob: -3.9780406951904297
    9. 'a' → logprob: -3.9780406951904297
    10. 'x' → logprob: -4.10304069519043

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5507456064224243
    2. ' =' → logprob: -1.4257456064224243
    3. '=' → logprob: -1.9257456064224243
    4. ' ' → logprob: -3.4257454872131348
    5. ':' → logprob: -6.425745487213135
    6. '(' → logprob: -6.550745487213135
    7. '_space' → logprob: -7.425745487213135
    8. '[' → logprob: -8.300745964050293
    9. ',' → logprob: -8.425745964050293
    10. '[:]' → logprob: -8.925745964050293

Token 7: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.02337859757244587
    2. 'False' → logprob: -3.773378610610962
    3. ' True' → logprob: -9.273378372192383
    4. ' ' → logprob: -10.523378372192383
    5. ' []' → logprob: -11.898378372192383
    6. '0' → logprob: -12.898378372192383
    7. '[]' → logprob: -13.648378372192383
    8. 'True' → logprob: -14.273378372192383
    9. '(False' → logprob: -14.898378372192383
    10. ' None' → logprob: -15.023378372192383

Token 8: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0307683944702148
    2. 'for' → logprob: -1.4057683944702148
    3. '\n' → logprob: -1.6557683944702148
    4. ' for' → logprob: -2.280768394470215
    5. '
' → logprob: -3.030768394470215
    6. '\' → logprob: -3.780768394470215
    7. ' 
' → logprob: -4.030768394470215
    8. '`' → logprob: -5.405768394470215
    9. '``' → logprob: -5.530768394470215
    10. '' → logprob: -6.405768394470215

Token 9: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27443382143974304
    2. '
' → logprob: -2.3994338512420654
    3. '```' → logprob: -2.5244338512420654
    4. ' for' → logprob: -3.2744338512420654
    5. '\n' → logprob: -3.8994338512420654
    6. ' 
' → logprob: -5.274433612823486
    7. '  
' → logprob: -6.399433612823486
    8. '`' → logprob: -7.024433612823486
    9. '\' → logprob: -7.274433612823486
    10. '' → logprob: -7.274433612823486

Token 10: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033630140125751495
    2. ' i' → logprob: -4.03363037109375
    3. ' n' → logprob: -4.53363037109375
    4. '  ' → logprob: -5.40863037109375
    5. ' range' → logprob: -11.03363037109375
    6. 'i' → logprob: -11.28363037109375
    7. ' ' → logprob: -11.40863037109375
    8. ' ,' → logprob: -11.40863037109375
    9. ' ‌' → logprob: -11.40863037109375
    10. ' )' → logprob: -11.53363037109375

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015042011626064777
    2. 'in' → logprob: -4.265041828155518
    3. ' ' → logprob: -7.140041828155518
    4. '<|end|>' → logprob: -10.765042304992676
    5. 'space' → logprob: -11.015042304992676
    6. '  ' → logprob: -11.390042304992676
    7. ')' → logprob: -12.640042304992676
    8. ' x' → logprob: -12.640042304992676
    9. 'range' → logprob: -12.765042304992676
    10. ',' → logprob: -13.202542304992676

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004625937435775995
    2. 'range' → logprob: -5.3796257972717285
    3. ' ' → logprob: -12.504626274108887
    4. '	range' → logprob: -13.879626274108887
    5. ' xrange' → logprob: -14.754626274108887
    6. '(range' → logprob: -15.254626274108887
    7. '```' → logprob: -16.25462532043457
    8. 'n' → logprob: -16.87962532043457
    9. ' n' → logprob: -17.12962532043457
    10. ')' → logprob: -17.37962532043457

Token 13: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037276302464306355
    2. '(n' → logprob: -5.628727436065674
    3. '(len' → logprob: -9.878727912902832
    4. ' (' → logprob: -10.253727912902832
    5. '(x' → logprob: -10.878727912902832
    6. '(
' → logprob: -11.253727912902832
    7. '(range' → logprob: -12.878727912902832
    8. '((' → logprob: -13.003727912902832
    9. '(

' → logprob: -13.878727912902832
    10. '(nx' → logprob: -14.128727912902832

Token 14: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030096637085080147
    2. '+' → logprob: -4.030096530914307
    3. ')' → logprob: -4.655096530914307
    4. ',' → logprob: -6.280096530914307
    5. '):
' → logprob: -8.655097007751465
    6. '-' → logprob: -9.280097007751465
    7. '**' → logprob: -9.780097007751465
    8. ' +' → logprob: -9.780097007751465
    9. ' ):' → logprob: -10.030097007751465
    10. ':' → logprob: -11.030097007751465

Token 15: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06994365900754929
    2. ' ' → logprob: -2.69494366645813
    3. '2' → logprob: -13.19494342803955
    4. '   ' → logprob: -13.56994342803955
    5. '```' → logprob: -13.81994342803955
    6. ' ' → logprob: -14.06994342803955
    7. '`' → logprob: -14.63244342803955
    8. '  ' → logprob: -14.81994342803955
    9. '+' → logprob: -15.00744342803955
    10. '(' → logprob: -15.19494342803955

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '2' → logprob: -16.12504005432129
    4. '0' → logprob: -17.87504005432129
    5. '  ' → logprob: -18.75004005432129
    6. ')' → logprob: -18.87504005432129
    7. '7' → logprob: -19.25004005432129
    8. '   ' → logprob: -19.50004005432129
    9. '(' → logprob: -19.75004005432129
    10. '```' → logprob: -20.25004005432129

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01888238452374935
    2. ')' → logprob: -4.1438822746276855
    3. ':' → logprob: -5.8938822746276855
    4. ',' → logprob: -10.268882751464844
    5. '):
' → logprob: -10.893882751464844
    6. ' ):' → logprob: -11.393882751464844
    7. ':)' → logprob: -11.393882751464844
    8. ' ' → logprob: -13.393882751464844
    9. '():' → logprob: -13.393882751464844
    10. '+' → logprob: -13.643882751464844

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03086942806839943
    2. ':' → logprob: -3.780869483947754
    3. ' ' → logprob: -5.155869483947754
    4. '    ' → logprob: -7.405869483947754
    5. '<|end|>' → logprob: -7.905869483947754
    6. ' if' → logprob: -8.030869483947754
    7. ' for' → logprob: -8.530869483947754
    8. ' :' → logprob: -8.780869483947754
    9. '    
' → logprob: -9.655869483947754
    10. '  ' → logprob: -10.530869483947754

Token 19: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6173919439315796
    2. ' if' → logprob: -0.8673919439315796
    3. ' for' → logprob: -3.617392063140869
    4. ' ' → logprob: -5.117392063140869
    5. 'if' (adapté à ' if') → logprob: -5.117392063140869
    6. 'for' → logprob: -7.367392063140869
    7. '    ' → logprob: -7.367392063140869
    8. ' x' → logprob: -8.867391586303711
    9. '```' → logprob: -9.742391586303711
    10. ' ```' → logprob: -9.867391586303711

Token 20: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.010162586346268654
    2. 'x' → logprob: -4.760162353515625
    3. ' ' → logprob: -7.010162353515625
    4. ' n' → logprob: -7.510162353515625
    5. 'n' → logprob: -10.385162353515625
    6. ' not' → logprob: -10.760162353515625
    7. ' (' → logprob: -11.135162353515625
    8. '(' → logprob: -11.635162353515625
    9. ')' → logprob: -11.635162353515625
    10. '<|end|>' → logprob: -13.010162353515625

Token 21: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12825524806976318
    2. ' x' → logprob: -2.1282553672790527
    3. 'n' → logprob: -7.378255367279053
    4. ' n' → logprob: -8.003254890441895
    5. ')' → logprob: -8.503254890441895
    6. ' ' → logprob: -9.503254890441895
    7. '   ' → logprob: -10.378254890441895
    8. '(x' → logprob: -10.878254890441895
    9. ' (' → logprob: -11.128254890441895
    10. ')x' → logprob: -11.503254890441895

Token 22: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9410654902458191
    2. '**' → logprob: -1.1910655498504639
    3. ' %' → logprob: -2.441065549850464
    4. ' **' → logprob: -2.691065549850464
    5. ' )' → logprob: -3.441065549850464
    6. '*' → logprob: -3.566065549850464
    7. ')' → logprob: -3.941065549850464
    8. ' ==' → logprob: -4.191065311431885
    9. ' ' → logprob: -4.191065311431885
    10. '*x' → logprob: -4.441065311431885

Token 23: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015853699296712875
    2. ' x' → logprob: -4.3908538818359375
    3. '2' → logprob: -6.2658538818359375
    4. '3' → logprob: -8.015853881835938
    5. '4' → logprob: -8.515853881835938
    6. '7' → logprob: -8.640853881835938
    7. '6' → logprob: -8.640853881835938
    8. ')x' → logprob: -8.640853881835938
    9. ' ' → logprob: -8.890853881835938
    10. ')' → logprob: -8.890853881835938

Token 24: '108' (ID: 11003)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16384053230285645
    2. '5' → logprob: -3.1638405323028564
    3. '7' → logprob: -3.2888405323028564
    4. '2' → logprob: -4.038840293884277
    5. '3' → logprob: -4.163840293884277
    6. '6' → logprob: -4.413840293884277
    7. '4' → logprob: -4.663840293884277
    8. '123' → logprob: -5.788840293884277
    9. '10' → logprob: -6.163840293884277
    10. '111' → logprob: -6.288840293884277

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020127680152654648
    2. ' ==' → logprob: -5.645127773284912
    3. '>=' → logprob: -5.645127773284912
    4. ' >=' → logprob: -5.770127773284912
    5. ')>=' → logprob: -5.770127773284912
    6. '==' → logprob: -6.145127773284912
    7. ')%' → logprob: -6.895127773284912
    8. ' )' → logprob: -7.020127773284912
    9. ')==' → logprob: -7.270127773284912
    10. ' <=' → logprob: -7.645127773284912

Token 26: ' //' (ID: 602)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9523573517799377
    2. '==' → logprob: -1.702357292175293
    3. ' %' → logprob: -1.952357292175293
    4. '%' → logprob: -1.952357292175293
    5. ' >=' → logprob: -2.827357292175293
    6. ' <=' → logprob: -3.077357292175293
    7. '>=' → logprob: -3.702357292175293
    8. '<=' → logprob: -4.077357292175293
    9. ' ' → logprob: -7.827357292175293
    10. '>' → logprob: -8.452357292175293

Token 27: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.009650428779423237
    2. ' ' → logprob: -5.509650230407715
    3. '10' → logprob: -6.134650230407715
    4. 'n' → logprob: -7.134650230407715
    5. '999' → logprob: -7.634650230407715
    6. '360' → logprob: -7.634650230407715
    7. '1' → logprob: -7.759650230407715
    8. '11' → logprob: -8.884650230407715
    9. '98' → logprob: -9.509650230407715
    10. '99' → logprob: -9.509650230407715

Token 28: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.002012860029935837
    2. '10' → logprob: -7.002012729644775
    3. '1' → logprob: -8.877013206481934
    4. '999' → logprob: -9.002013206481934
    5. '98' → logprob: -9.127013206481934
    6. ' ' → logprob: -9.127013206481934
    7. 'n' → logprob: -9.252013206481934
    8. '980' → logprob: -9.752013206481934
    9. '99' → logprob: -9.877013206481934
    10. '989' → logprob: -10.002013206481934

Token 29: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023348083719611168
    2. '==' → logprob: -3.773348093032837
    3. ')' → logprob: -10.023347854614258
    4. '=' → logprob: -10.523347854614258
    5. ' <=' → logprob: -11.648347854614258
    6. ' =' → logprob: -11.773347854614258
    7. ' ' → logprob: -12.273347854614258
    8. ' >=' → logprob: -12.398347854614258
    9. ')==' → logprob: -13.398347854614258
    10. '   ' → logprob: -14.648347854614258

Token 30: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14445185661315918
    2. ' n' → logprob: -2.019451856613159
    3. 'x' → logprob: -6.894452095031738
    4. ' ' → logprob: -7.894452095031738
    5. '100' → logprob: -9.144452095031738
    6. '   ' → logprob: -9.269452095031738
    7. ' x' → logprob: -10.144452095031738
    8. '108' → logprob: -10.144452095031738
    9. '	n' → logprob: -10.519452095031738
    10. '10' → logprob: -10.769452095031738

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001254693343071267
    2. ' :' → logprob: -9.250125885009766
    3. ' and' → logprob: -11.250125885009766
    4. '):' → logprob: -11.750125885009766
    5. ':
' → logprob: -12.250125885009766
    6. ':**' → logprob: -13.500125885009766
    7. 'and' → logprob: -14.375125885009766
    8. ':return' → logprob: -14.500125885009766
    9. '>:' → logprob: -15.250125885009766
    10. '   ' → logprob: -15.375125885009766

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16958734393119812
    2. ':' → logprob: -1.9195873737335205
    3. '   ' → logprob: -5.169587135314941
    4. '<|end|>' → logprob: -6.294587135314941
    5. ':
' → logprob: -7.544587135314941
    6. '\' → logprob: -8.419587135314941
    7. ' :' → logprob: -8.669587135314941
    8. '\n' → logprob: -8.919587135314941
    9. '```' → logprob: -9.169587135314941
    10. ' ' → logprob: -9.294587135314941

Token 33: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9760756492614746
    2. 'print' (adapté à ' print') → logprob: -1.2260756492614746
    3. ' print' → logprob: -1.3510756492614746
    4. '       ' → logprob: -3.3510756492614746
    5. '    ' → logprob: -3.9760756492614746
    6. ' found' → logprob: -4.351075649261475
    7. 'found' → logprob: -5.851075649261475
    8. ' ' → logprob: -7.726075649261475
    9. ' x' → logprob: -8.726076126098633
    10. 'x' → logprob: -9.601076126098633

Token 34: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03288997709751129
    2. '(' → logprob: -3.5328900814056396
    3. 'x' → logprob: -5.7828898429870605
    4. ' x' → logprob: -10.157890319824219
    5. ' (' → logprob: -11.657890319824219
    6. '('' → logprob: -12.782890319824219
    7. '(f' → logprob: -13.657890319824219
    8. ' ' → logprob: -14.532890319824219
    9. '(s' → logprob: -14.532890319824219
    10. ')' → logprob: -14.907890319824219

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018458595499396324
    2. ')
' → logprob: -4.018458366394043
    3. '       ' → logprob: -8.143458366394043
    4. '   ' → logprob: -11.518458366394043
    5. ' )' → logprob: -13.268458366394043
    6. ',' → logprob: -13.393458366394043
    7. ')
' → logprob: -13.768458366394043
    8. '`)' → logprob: -14.393458366394043
    9. '),' → logprob: -15.018458366394043
    10. ' )
' → logprob: -15.268458366394043

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02569909393787384
    2. '   ' → logprob: -3.7756991386413574
    3. '<|end|>' → logprob: -6.650699138641357
    4. '```' → logprob: -7.650699138641357
    5. '        
' → logprob: -8.9006986618042
    6. ' ' → logprob: -9.5256986618042
    7. '           ' → logprob: -9.5256986618042
    8. '    
' → logprob: -9.6506986618042
    9. '    ' → logprob: -10.0256986618042
    10. '      ' → logprob: -10.0256986618042

Token 37: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.0010516269830986857
    2. '   ' → logprob: -7.126051425933838
    3. '       ' → logprob: -8.876051902770996
    4. ' found' → logprob: -9.376051902770996
    5. '```' → logprob: -11.001051902770996
    6. 'Found' → logprob: -13.126051902770996
    7. '	found' → logprob: -13.626051902770996
    8. 'break' → logprob: -13.751051902770996
    9. '
' → logprob: -14.376051902770996
    10. '(found' → logprob: -14.501051902770996

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014260820113122463
    2. '=' → logprob: -4.264260768890381
    3. '=True' → logprob: -9.264261245727539
    4. ' =
' → logprob: -13.514261245727539
    5. ' ' → logprob: -14.639261245727539
    6. 'True' → logprob: -15.014261245727539
    7. ' True' → logprob: -15.389261245727539
    8. '=False' → logprob: -15.764261245727539
    9. ' =)' → logprob: -17.38926124572754
    10. '<|end|>' → logprob: -17.38926124572754

Token 39: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3132616877555847
    2. 'True' → logprob: -1.3132617473602295
    3. '=True' → logprob: -18.563261032104492
    4. '(True' → logprob: -18.563261032104492
    5. ' Tru' → logprob: -20.688261032104492
    6. 'Tr' → logprob: -21.438261032104492
    7. 'T' → logprob: -22.563261032104492
    8. '.True' → logprob: -22.688261032104492
    9. ' Tr' → logprob: -22.938261032104492
    10. ' ' → logprob: -23.063261032104492

Token 40: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6953123807907104
    2. 'if' → logprob: -0.6953123807907104
    3. '```' → logprob: -6.1953125
    4. 'break' → logprob: -9.6953125
    5. ' if' → logprob: -10.3203125
    6. '``' → logprob: -11.5703125
    7. '        
' → logprob: -11.8203125
    8. '   ' → logprob: -12.3203125
    9. '           ' → logprob: -12.8203125
    10. '\' → logprob: -13.6953125

Token 41: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10106277465820312
    2. '       ' → logprob: -2.351062774658203
    3. '```' → logprob: -7.101062774658203
    4. 'break' → logprob: -10.726062774658203
    5. ' if' → logprob: -12.101062774658203
    6. '        
' → logprob: -13.601062774658203
    7. '``' → logprob: -14.101062774658203
    8. '   ' → logprob: -14.226062774658203
    9. '           ' → logprob: -14.476062774658203
    10. 'print' → logprob: -15.101062774658203

Token 42: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.20171290636062622
    2. '       ' → logprob: -1.7017128467559814
    3. '```' → logprob: -8.451712608337402
    4. ' break' → logprob: -9.576712608337402
    5. '	break' → logprob: -11.576712608337402
    6. '   ' → logprob: -12.076712608337402
    7. 'b' → logprob: -14.451712608337402
    8. 'br' → logprob: -15.076712608337402
    9. '_break' → logprob: -15.326712608337402
    10. '           ' → logprob: -15.826712608337402

Token 43: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00018923594325315207
    2. 'else' → logprob: -8.875188827514648
    3. '```' → logprob: -10.125188827514648
    4. ' if' → logprob: -12.500188827514648
    5. '  
' → logprob: -13.375188827514648
    6. '    
' → logprob: -13.750188827514648
    7. '
' → logprob: -13.875188827514648
    8. 'print' → logprob: -14.625188827514648
    9. '        
' → logprob: -14.875188827514648
    10. '``' → logprob: -15.000188827514648

Token 44: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00031413204851560295
    2. '```' → logprob: -8.375313758850098
    3. 'else' → logprob: -9.500313758850098
    4. '``' → logprob: -12.625313758850098
    5. ' if' → logprob: -12.875313758850098
    6. 'i' → logprob: -13.625313758850098
    7. '
' → logprob: -14.375313758850098
    8. 'If' → logprob: -15.125313758850098
    9. 'print' → logprob: -15.750313758850098
    10. '  
' → logprob: -15.875313758850098

Token 45: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0021867838222533464
    2. 'not' → logprob: -6.1271867752075195
    3. ' found' → logprob: -13.87718677520752
    4. ' ' → logprob: -15.12718677520752
    5. ' no' → logprob: -15.87718677520752
    6. ' ' → logprob: -16.252187728881836
    7. '	not' → logprob: -16.377187728881836
    8. '(not' → logprob: -16.752187728881836
    9. '```' → logprob: -17.877187728881836
    10. 'found' → logprob: -18.127187728881836

Token 46: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.011048054322600365
    2. 'found' → logprob: -4.511047840118408
    3. '	found' → logprob: -15.886048316955566
    4. ' ' → logprob: -17.01104736328125
    5. '(found' → logprob: -17.26104736328125
    6. ' ' → logprob: -18.26104736328125
    7. 'Found' → logprob: -18.63604736328125
    8. ' Found' → logprob: -18.88604736328125
    9. '_found' → logprob: -19.01104736328125
    10. ' space' → logprob: -20.13604736328125

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003178071230649948
    2. ':
' → logprob: -5.753178119659424
    3. ':
' → logprob: -15.253177642822266
    4. ':

' → logprob: -16.128177642822266
    5. ':**' → logprob: -18.378177642822266
    6. '   ' → logprob: -18.628177642822266
    7. ':`' → logprob: -18.753177642822266
    8. '():
' → logprob: -18.878177642822266
    9. ' :' → logprob: -19.003177642822266
    10. ':return' → logprob: -19.128177642822266

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17205509543418884
    2. ' print' → logprob: -2.0470550060272217
    3. 'print' → logprob: -3.5470550060272217
    4. '```' → logprob: -9.4220552444458
    5. '    ' → logprob: -10.2970552444458
    6. '	print' → logprob: -10.9220552444458
    7. ' ' → logprob: -12.9220552444458
    8. '``' → logprob: -13.0470552444458
    9. '  ' → logprob: -13.4220552444458
    10. '       ' → logprob: -14.1720552444458

Token 49: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.016931038349866867
    2. ' print' → logprob: -4.516931056976318
    3. '   ' → logprob: -5.141931056976318
    4. '```' → logprob: -11.26693058013916
    5. '	print' → logprob: -12.64193058013916
    6. '    ' → logprob: -13.64193058013916
    7. '``' → logprob: -14.14193058013916
    8. ' ' → logprob: -14.89193058013916
    9. '-' → logprob: -15.01693058013916
    10. '  ' → logprob: -15.01693058013916

Token 50: '(':' (ID: 36524)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029414284974336624
    2. '(-' → logprob: -3.779414176940918
    3. '("' → logprob: -5.279414176940918
    4. '()' → logprob: -7.404414176940918
    5. '('' → logprob: -8.779414176940918
    6. '(None' → logprob: -8.779414176940918
    7. '(n' → logprob: -9.279414176940918
    8. '0' → logprob: -11.779414176940918
    9. ' (' → logprob: -12.529414176940918
    10. '(`' → logprob: -12.529414176940918

Token 51: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09576446563005447
    2. '('' → logprob: -3.220764398574829
    3. '(-' → logprob: -4.345764636993408
    4. '(None' → logprob: -4.845764636993408
    5. '(':' → logprob: -5.095764636993408
    6. '(:' → logprob: -5.220764636993408
    7. ')' → logprob: -5.595764636993408
    8. '(No' → logprob: -5.845764636993408
    9. '(n' → logprob: -6.220764636993408
    10. 'None' → logprob: -6.345764636993408

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005750744021497667
    2. '')' → logprob: -7.500575065612793
    3. ')
' → logprob: -11.875575065612793
    4. '```' → logprob: -12.625575065612793
    5. '`)' → logprob: -13.000575065612793
    6. '")' → logprob: -13.000575065612793
    7. '))' → logprob: -13.375575065612793
    8. ':)' → logprob: -13.500575065612793
    9. ' )' → logprob: -13.750575065612793
    10. ')")' → logprob: -14.125575065612793


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 50
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 42
Précision stricte (1ère position): 42.00%
Précision adaptée (1ère position): 48.00%
Précision (top 10): 84.00%
================================================================================
