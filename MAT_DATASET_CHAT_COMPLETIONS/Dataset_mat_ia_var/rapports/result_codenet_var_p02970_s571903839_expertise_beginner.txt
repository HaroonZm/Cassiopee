================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = input().split()
a = int(a)
b = int(b)

d = 2 * b + 1
if a % d == 0:
    result = a // d
else:
    result = a // d + 1

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02665090374648571
    2. '+' → logprob: -4.276650905609131
    3. ' =' → logprob: -4.526650905609131
    4. ',' → logprob: -6.901650905609131
    5. ' ' → logprob: -9.026650428771973
    6. '+=' → logprob: -9.151650428771973
    7. '```' → logprob: -9.651650428771973
    8. ' +' → logprob: -9.901650428771973
    9. '.' → logprob: -10.026650428771973
    10. '_' → logprob: -10.401650428771973

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4988064467906952
    2. '1' → logprob: -1.2488064765930176
    3. '0' → logprob: -2.3738064765930176
    4. '10' → logprob: -4.748806476593018
    5. '5' → logprob: -6.123806476593018
    6. 'b' → logprob: -8.12380599975586
    7. 'a' → logprob: -8.24880599975586
    8. '3' → logprob: -8.49880599975586
    9. ' b' → logprob: -8.62380599975586
    10. '42' → logprob: -8.87380599975586

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005264949053525925
    2. '()' → logprob: -5.880264759063721
    3. '.' → logprob: -6.380264759063721
    4. '(.)' → logprob: -8.380265235900879
    5. '(
' → logprob: -9.255265235900879
    6. '[' → logprob: -9.380265235900879
    7. '('.')' → logprob: -9.380265235900879
    8. '('' → logprob: -9.380265235900879
    9. ''' → logprob: -10.130265235900879
    10. '().' → logprob: -10.380265235900879

Token 6: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0016588744474574924
    2. 'strip' → logprob: -6.876658916473389
    3. '.split' → logprob: -7.501658916473389
    4. ' split' → logprob: -10.12665843963623
    5. '().' → logprob: -11.37665843963623
    6. '.' → logprob: -11.87665843963623
    7. '()' → logprob: -12.12665843963623
    8. ',' → logprob: -12.75165843963623
    9. 'spl' → logprob: -13.12665843963623
    10. '_split' → logprob: -13.62665843963623

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014394075609743595
    2. '()' → logprob: -4.264394283294678
    3. '('' → logprob: -9.38939380645752
    4. '(
' → logprob: -9.88939380645752
    5. '```' → logprob: -11.13939380645752
    6. '`' → logprob: -11.51439380645752
    7. '("("' → logprob: -11.76439380645752
    8. '"' → logprob: -11.76439380645752
    9. ''' → logprob: -11.88939380645752
    10. '`()' → logprob: -12.13939380645752

Token 8: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3832593560218811
    2. '=' → logprob: -1.2582592964172363
    3. ' =' → logprob: -3.8832592964172363
    4. '\n' → logprob: -5.383259296417236
    5. '#' → logprob: -6.008259296417236
    6. '=a' → logprob: -6.633259296417236
    7. ',' → logprob: -7.008259296417236
    8. 'print' → logprob: -7.383259296417236
    9. ' a' → logprob: -7.383259296417236
    10. '```' → logprob: -7.633259296417236

Token 9: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1869944930076599
    2. '[' → logprob: -1.9369945526123047
    3. '*' → logprob: -4.811994552612305
    4. '.' → logprob: -5.186994552612305
    5. ' ' → logprob: -5.311994552612305
    6. 'a' → logprob: -6.561994552612305
    7. '```' → logprob: -6.561994552612305
    8. '=' → logprob: -6.686994552612305
    9. ' +' → logprob: -7.061994552612305
    10. '<|end|>' → logprob: -7.686994552612305

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.024807436391711235
    2. 'a' → logprob: -4.024807453155518
    3. ' int' → logprob: -5.274807453155518
    4. 'float' → logprob: -7.149807453155518
    5. 'input' → logprob: -7.899807453155518
    6. ' a' → logprob: -8.64980697631836
    7. 'b' → logprob: -9.39980697631836
    8. '0' → logprob: -10.14980697631836
    9. '[int' → logprob: -11.27480697631836
    10. ' float' → logprob: -11.52480697631836

Token 11: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06233031302690506
    2. '(a' → logprob: -2.8123302459716797
    3. '('' → logprob: -8.81233024597168
    4. 'a' → logprob: -8.93733024597168
    5. '```' → logprob: -10.56233024597168
    6. '("("' → logprob: -11.56233024597168
    7. '`' → logprob: -11.93733024597168
    8. '(`' → logprob: -12.06233024597168
    9. '("' → logprob: -12.43733024597168
    10. '()' → logprob: -12.56233024597168

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002901757834479213
    2. '+' → logprob: -8.250289916992188
    3. ' )' → logprob: -11.250289916992188
    4. ')
' → logprob: -12.500289916992188
    5. '+)' → logprob: -12.500289916992188
    6. ')+' → logprob: -13.125289916992188
    7. '<|end|>' → logprob: -13.875289916992188
    8. ')a' → logprob: -14.000289916992188
    9. ' +' → logprob: -14.125289916992188
    10. '),' → logprob: -14.250289916992188

Token 13: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5464768409729004
    2. '+' → logprob: -0.9214768409729004
    3. ' b' → logprob: -4.7964768409729
    4. ' ' → logprob: -4.7964768409729
    5. '<|end|>' → logprob: -6.1714768409729
    6. '+b' → logprob: -6.2964768409729
    7. ' +' → logprob: -7.0464768409729
    8. '*' → logprob: -7.7964768409729
    9. ' 
' → logprob: -8.171476364135742
    10. '+
' → logprob: -8.171476364135742

Token 14: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12744802236557007
    2. ' +' → logprob: -2.752448081970215
    3. '<|end|>' → logprob: -4.002448081970215
    4. ' ' → logprob: -4.127448081970215
    5. '=' → logprob: -4.752448081970215
    6. ' =' → logprob: -5.252448081970215
    7. ')' → logprob: -5.377448081970215
    8. '*' → logprob: -7.127448081970215
    9. ' +=' → logprob: -7.502448081970215
    10. ' *' → logprob: -7.752448081970215

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.048590436577796936
    2. ' int' → logprob: -3.0485904216766357
    3. '(int' → logprob: -14.298590660095215
    4. '=int' → logprob: -14.423590660095215
    5. ' ' → logprob: -14.798590660095215
    6. '<int' → logprob: -14.923590660095215
    7. '0' → logprob: -15.298590660095215
    8. 'a' → logprob: -15.423590660095215
    9. '[int' → logprob: -15.923590660095215
    10. 'b' → logprob: -15.923590660095215

Token 16: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0112336166203022
    2. '(a' → logprob: -5.136233806610107
    3. '(b' → logprob: -5.261233806610107
    4. 'b' → logprob: -11.38623332977295
    5. '(
' → logprob: -11.38623332977295
    6. '```' → logprob: -11.38623332977295
    7. '('' → logprob: -11.51123332977295
    8. 'a' → logprob: -11.63623332977295
    9. '("("' → logprob: -11.63623332977295
    10. '(

' → logprob: -11.63623332977295

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '')' → logprob: -14.625001907348633
    3. ')
' → logprob: -14.875001907348633
    4. ' )' → logprob: -15.250001907348633
    5. '`)' → logprob: -15.375001907348633
    6. '```' → logprob: -16.000001907348633
    7. '))' → logprob: -16.625001907348633
    8. '+' → logprob: -16.875001907348633
    9. '[' → logprob: -17.250001907348633
    10. '")' → logprob: -17.625001907348633

Token 18: 'd' (ID: 67)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0643349885940552
    2. 'if' → logprob: -1.0643349885940552
    3. 's' → logprob: -2.4393348693847656
    4. '+' → logprob: -2.5643348693847656
    5. 'i' → logprob: -2.6893348693847656
    6. 'print' → logprob: -3.9393348693847656
    7. 'for' → logprob: -4.064334869384766
    8. 'n' → logprob: -4.564334869384766
    9. 'p' → logprob: -5.064334869384766
    10. 'sum' → logprob: -5.189334869384766

Token 19: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7664581537246704
    2. 'iv' → logprob: -0.7664581537246704
    3. 'e' → logprob: -3.516458034515381
    4. '+' → logprob: -4.391458034515381
    5. '=' → logprob: -4.391458034515381
    6. '*' → logprob: -5.391458034515381
    7. '-' → logprob: -6.141458034515381
    8. ' =' → logprob: -6.641458034515381
    9. 'v' → logprob: -7.141458034515381
    10. 'ivid' → logprob: -7.141458034515381

Token 20: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3425145149230957
    2. '{}' → logprob: -1.8425145149230957
    3. 'abs' → logprob: -2.8425145149230957
    4. 'b' → logprob: -2.9675145149230957
    5. ' a' → logprob: -5.217514514923096
    6. '{' → logprob: -5.342514514923096
    7. ' abs' → logprob: -5.842514514923096
    8. ' {}' → logprob: -5.967514514923096
    9. ' b' → logprob: -6.592514514923096
    10. 'max' → logprob: -6.967514514923096

Token 21: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4625195562839508
    2. 'b' → logprob: -1.8375195264816284
    3. 'abs' → logprob: -1.8375195264816284
    4. '{}' → logprob: -3.462519645690918
    5. '{' → logprob: -4.587519645690918
    6. 'max' → logprob: -5.337519645690918
    7. 'div' → logprob: -6.837519645690918
    8. 'min' → logprob: -6.837519645690918
    9. '{}
' → logprob: -6.962519645690918
    10. 'dict' → logprob: -7.462519645690918

Token 22: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2231903076171875
    2. '**' → logprob: -2.4731903076171875
    3. ' *' → logprob: -2.8481903076171875
    4. '+' → logprob: -3.0981903076171875
    5. ' **' → logprob: -5.3481903076171875
    6. ' +' → logprob: -5.7231903076171875
    7. '*d' → logprob: -6.5981903076171875
    8. 'd' → logprob: -7.3481903076171875
    9. '0' → logprob: -7.5981903076171875
    10. '\' → logprob: -7.8481903076171875

Token 23: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14748509228229523
    2. 'b' → logprob: -2.0224850177764893
    3. ' a' → logprob: -6.022485256195068
    4. ' b' → logprob: -6.897485256195068
    5. '(a' → logprob: -6.897485256195068
    6. '(' → logprob: -8.77248477935791
    7. ' (' → logprob: -9.39748477935791
    8. '*a' → logprob: -10.77248477935791
    9. '(b' → logprob: -11.02248477935791
    10. ' ' → logprob: -11.14748477935791

Token 24: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22440877556800842
    2. '-' → logprob: -2.2244088649749756
    3. ' +' → logprob: -3.0994088649749756
    4. ' -' → logprob: -3.4744088649749756
    5. '*' → logprob: -4.4744086265563965
    6. ' ' → logprob: -5.7244086265563965
    7. '<|end|>' → logprob: -7.4744086265563965
    8. '**' → logprob: -8.349409103393555
    9. ' *' → logprob: -8.599409103393555
    10. 'a' → logprob: -8.849409103393555

Token 25: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6944392323493958
    2. '1' → logprob: -1.444439172744751
    3. ' a' → logprob: -1.819439172744751
    4. ' ' → logprob: -2.819439172744751
    5. '3' → logprob: -3.694439172744751
    6. '2' → logprob: -4.31943941116333
    7. '4' → logprob: -6.94443941116333
    8. ' (' → logprob: -7.19443941116333
    9. '(' → logprob: -7.31943941116333
    10. '6' → logprob: -7.31943941116333

Token 26: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5637596845626831
    2. '1' → logprob: -1.313759684562683
    3. '3' → logprob: -2.3137598037719727
    4. '2' → logprob: -3.1887598037719727
    5. '4' → logprob: -4.813759803771973
    6. '6' → logprob: -6.063759803771973
    7. '100' → logprob: -6.188759803771973
    8. '(' → logprob: -6.438759803771973
    9. '5' → logprob: -6.563759803771973
    10. ' ' → logprob: -6.938759803771973

Token 27: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2863786816596985
    2. '<|end|>' → logprob: -2.0363786220550537
    3. '*' → logprob: -2.7863786220550537
    4. '
' → logprob: -4.036378860473633
    5. '-' → logprob: -4.536378860473633
    6. '%' → logprob: -4.911378860473633
    7. '\n' → logprob: -5.911378860473633
    8. '#' → logprob: -5.911378860473633
    9. ')' → logprob: -6.036378860473633
    10. '>' → logprob: -6.161378860473633

Token 28: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.008840406313538551
    2. 'a' → logprob: -5.258840560913086
    3. ' d' → logprob: -6.133840560913086
    4. ' ' → logprob: -6.633840560913086
    5. 'd' → logprob: -9.508840560913086
    6. ' b' → logprob: -10.258840560913086
    7. ' (' → logprob: -12.758840560913086
    8. '  ' → logprob: -13.633840560913086
    9. '	a' → logprob: -13.883840560913086
    10. ' ' → logprob: -14.633840560913086

Token 30: ' %' (ID: 1851)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.0795660018920898
    2. ' >' → logprob: -1.0795660018920898
    3. ' >=' → logprob: -1.5795660018920898
    4. ' <=' → logprob: -2.57956600189209
    5. ' ==' → logprob: -4.07956600189209
    6. ' ' → logprob: -4.57956600189209
    7. '>' → logprob: -5.20456600189209
    8. '<' → logprob: -5.95456600189209
    9. '>=' → logprob: -6.70456600189209
    10. ' %' → logprob: -7.20456600189209

Token 31: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13591890037059784
    2. ' d' → logprob: -2.1359188556671143
    3. '2' → logprob: -4.885919094085693
    4. ' ' → logprob: -6.635919094085693
    5. '3' → logprob: -9.885918617248535
    6. 'b' → logprob: -11.385918617248535
    7. '4' → logprob: -11.885918617248535
    8. '1' → logprob: -12.635918617248535
    9. '7' → logprob: -12.885918617248535
    10. ' b' → logprob: -13.010918617248535

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13182470202445984
    2. '==' → logprob: -2.1318247318267822
    3. ' !=' → logprob: -5.881824493408203
    4. ':' → logprob: -6.506824493408203
    5. '!=' → logprob: -8.256824493408203
    6. ' :' → logprob: -8.381824493408203
    7. ' ' → logprob: -10.381824493408203
    8. '=' → logprob: -10.631824493408203
    9. '>' → logprob: -10.756824493408203
    10. ' =' → logprob: -11.256824493408203

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20147697627544403
    2. '0' → logprob: -1.7014769315719604
    3. '1' → logprob: -10.70147705078125
    4. ' a' → logprob: -10.95147705078125
    5. ' b' → logprob: -11.45147705078125
    6. ' d' → logprob: -12.20147705078125
    7. 'a' → logprob: -13.20147705078125
    8. ' (' → logprob: -13.70147705078125
    9. 'd' → logprob: -14.01397705078125
    10. 'b' → logprob: -14.13897705078125

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03344765678048134
    2. ' ' → logprob: -4.158447742462158
    3. 'b' → logprob: -4.908447742462158
    4. '1' → logprob: -5.033447742462158
    5. ' b' → logprob: -6.283447742462158
    6. 'a' → logprob: -7.033447742462158
    7. '2' → logprob: -8.408447265625
    8. ' a' → logprob: -8.658447265625
    9. 'd' → logprob: -9.533447265625
    10. '(' → logprob: -10.158447265625

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1041145626222715e-05
    2. ' :' → logprob: -11.500011444091797
    3. ':
' → logprob: -14.875011444091797
    4. ':**' → logprob: -15.625011444091797
    5. ':return' → logprob: -16.000011444091797
    6. ' and' → logprob: -16.375011444091797
    7. ',' → logprob: -17.125011444091797
    8. ':

' → logprob: -17.625011444091797
    9. ':def' → logprob: -17.625011444091797
    10. ' or' → logprob: -17.750011444091797

Token 36: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7740518450737
    2. ' print' → logprob: -1.3990519046783447
    3. '"' → logprob: -1.8990519046783447
    4. ''' → logprob: -2.3990519046783447
    5. '\n' → logprob: -4.024051666259766
    6. '"\' → logprob: -4.399051666259766
    7. ''\' → logprob: -5.149051666259766
    8. ' True' → logprob: -5.774051666259766
    9. '   ' → logprob: -5.899051666259766
    10. ' ' → logprob: -6.149051666259766

Token 37: ' result' (ID: 1534)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.22586125135421753
    2. 'print' → logprob: -1.6008613109588623
    3. '   ' → logprob: -8.975861549377441
    4. ' ' → logprob: -9.725861549377441
    5. '    ' → logprob: -9.725861549377441
    6. ' pass' → logprob: -10.350861549377441
    7. '"' → logprob: -10.600861549377441
    8. ' a' → logprob: -10.725861549377441
    9. ' p' → logprob: -11.538361549377441
    10. ' \' → logprob: -11.788361549377441

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04390669986605644
    2. '=' → logprob: -3.1689066886901855
    3. ' +=' → logprob: -7.2939066886901855
    4. ' ' → logprob: -9.168907165527344
    5. ':' → logprob: -10.043907165527344
    6. ' ==' → logprob: -11.043907165527344
    7. '+=' → logprob: -11.293907165527344
    8. ')' → logprob: -11.418907165527344
    9. '<|end|>' → logprob: -11.793907165527344
    10. '   ' → logprob: -12.043907165527344

Token 39: ' a' (ID: 261)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7144084572792053
    2. 'a' → logprob: -1.2144083976745605
    3. '"a' → logprob: -2.9644083976745605
    4. '0' → logprob: -3.0894083976745605
    5. ' a' → logprob: -3.0894083976745605
    6. ' "' → logprob: -3.8394083976745605
    7. ' True' → logprob: -4.5894083976745605
    8. 'True' → logprob: -4.7144083976745605
    9. ' ' → logprob: -5.2144083976745605
    10. ''a' → logprob: -5.2144083976745605

Token 40: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0431736595928669
    2. '//' → logprob: -3.2931735515594482
    3. ' ' → logprob: -6.293173789978027
    4. '   ' → logprob: -7.043173789978027
    5. ' /' → logprob: -7.543173789978027
    6. '#' → logprob: -8.168173789978027
    7. '+' → logprob: -8.293173789978027
    8. ' #' → logprob: -8.793173789978027
    9. '-' → logprob: -8.918173789978027
    10. ' +' → logprob: -9.043173789978027

Token 41: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1472419600977446e-06
    2. ' d' → logprob: -14.000000953674316
    3. '2' → logprob: -16.750001907348633
    4. 'b' → logprob: -16.875001907348633
    5. '(' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '  ' → logprob: -17.750001907348633
    8. ' ' → logprob: -18.000001907348633
    9. '(d' → logprob: -18.125001907348633
    10. '	d' → logprob: -18.875001907348633

Token 42: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5189446806907654
    2. '+' → logprob: -1.6439447402954102
    3. '-' → logprob: -2.39394474029541
    4. '
' → logprob: -3.51894474029541
    5. ' +' → logprob: -3.64394474029541
    6. ' else' → logprob: -4.01894474029541
    7. '+
' → logprob: -4.26894474029541
    8. '   ' → logprob: -4.76894474029541
    9. '*' → logprob: -4.89394474029541
    10. ' -' → logprob: -5.51894474029541

Token 43: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.028994372114539146
    2. ' else' → logprob: -4.153994560241699
    3. '+' → logprob: -4.778994560241699
    4. '   ' → logprob: -6.653994560241699
    5. 'print' → logprob: -6.653994560241699
    6. '+
' → logprob: -7.153994560241699
    7. '*' → logprob: -7.403994560241699
    8. ' +' → logprob: -9.4039945602417
    9. 'elif' → logprob: -9.4039945602417
    10. '-' → logprob: -9.7789945602417

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031595381442457438
    2. ':
' → logprob: -6.128159523010254
    3. '   ' → logprob: -7.003159523010254
    4. ' :' → logprob: -10.628159523010254
    5. '    ' → logprob: -10.753159523010254
    6. '+' → logprob: -12.628159523010254
    7. '=' → logprob: -12.878159523010254
    8. ' ' → logprob: -13.128159523010254
    9. '1' → logprob: -13.503159523010254
    10. '```' → logprob: -13.628159523010254

Token 45: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21075573563575745
    2. ' result' → logprob: -1.960755705833435
    3. ' (' → logprob: -4.210755825042725
    4. '(result' → logprob: -4.460755825042725
    5. '   ' → logprob: -4.585755825042725
    6. 'a' → logprob: -4.835755825042725
    7. '(a' → logprob: -6.335755825042725
    8. ' a' → logprob: -6.335755825042725
    9. '0' → logprob: -7.085755825042725
    10. '(' → logprob: -8.585755348205566

Token 46: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.017387574538588524
    2. ' result' → logprob: -4.392387390136719
    3. '   ' → logprob: -5.642387390136719
    4. '(result' → logprob: -7.267387390136719
    5. '0' → logprob: -8.392387390136719
    6. 'a' → logprob: -8.517387390136719
    7. ' (' → logprob: -10.142387390136719
    8. 'print' → logprob: -10.517387390136719
    9. '(' → logprob: -10.517387390136719
    10. 'r' → logprob: -10.892387390136719

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2268037050962448
    2. '=' → logprob: -1.9768036603927612
    3. ' +=' → logprob: -2.976803779602051
    4. '+' → logprob: -4.851803779602051
    5. ' +' → logprob: -6.101803779602051
    6. '+=' → logprob: -6.476803779602051
    7. ' ' → logprob: -6.976803779602051
    8. '   ' → logprob: -7.351803779602051
    9. '    ' → logprob: -9.47680377960205
    10. '-' → logprob: -9.85180377960205

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02876957133412361
    2. ' a' → logprob: -3.9037694931030273
    3. '(a' → logprob: -5.153769493103027
    4. ' (' → logprob: -6.903769493103027
    5. '0' → logprob: -7.028769493103027
    6. '(' → logprob: -7.903769493103027
    7. ' ' → logprob: -9.653769493103027
    8. '   ' → logprob: -9.778769493103027
    9. '  ' → logprob: -11.778769493103027
    10. '1' → logprob: -12.028769493103027

Token 49: ' //' (ID: 602)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3845149874687195
    2. '%' → logprob: -1.6345150470733643
    3. '<|end|>' → logprob: -2.3845150470733643
    4. ' //' → logprob: -4.134514808654785
    5. ' ' → logprob: -5.009514808654785
    6. ')' → logprob: -6.509514808654785
    7. ' %
' → logprob: -6.509514808654785
    8. ' *' → logprob: -6.884514808654785
    9. '<|end|>' → logprob: -7.384514808654785
    10. '*' → logprob: -7.384514808654785

Token 50: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.2524021157296374e-05
    2. ' d' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.000052452087402
    4. '  ' → logprob: -16.62505340576172
    5. ' ' → logprob: -16.62505340576172
    6. '(' → logprob: -17.12505340576172
    7. '	d' → logprob: -17.87505340576172
    8. '2' → logprob: -18.00005340576172
    9. '(d' → logprob: -18.00005340576172
    10. 'b' → logprob: -18.12505340576172

Token 51: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05548581853508949
    2. ' +' → logprob: -2.930485725402832
    3. '0' → logprob: -8.555485725402832
    4. ' ' → logprob: -8.805485725402832
    5. '+
' → logprob: -9.305485725402832
    6. '1' → logprob: -9.555485725402832
    7. '```' → logprob: -10.680485725402832
    8. ' +
' → logprob: -11.305485725402832
    9. '   ' → logprob: -11.305485725402832
    10. ' plus' → logprob: -11.680485725402832

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.125709533691406
    4. '```' → logprob: -17.375709533691406
    5. '  ' → logprob: -18.250709533691406
    6. '0' → logprob: -18.250709533691406
    7. '+' → logprob: -18.313209533691406
    8. '(' → logprob: -19.563209533691406
    9. ' ' → logprob: -19.563209533691406
    10. '2' → logprob: -19.813209533691406

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '(' → logprob: -16.500009536743164
    4. '0' → logprob: -16.750009536743164
    5. '   ' → logprob: -17.500009536743164
    6. '-' → logprob: -17.750009536743164
    7. '2' → logprob: -18.250009536743164
    8. '  ' → logprob: -18.312509536743164
    9. '+' → logprob: -18.375009536743164
    10. '```' → logprob: -18.625009536743164

Token 54: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23169060051441193
    2. '\n' → logprob: -2.3566906452178955
    3. '<|end|>' → logprob: -3.1066906452178955
    4. '
' → logprob: -3.6066906452178955
    5. '#' → logprob: -3.8566906452178955
    6. '\' → logprob: -4.981690406799316
    7. ')' → logprob: -5.356690406799316
    8. '```' → logprob: -6.731690406799316
    9. '*' → logprob: -7.606690406799316
    10. 'r' → logprob: -7.731690406799316

Token 55: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0325924449716695e-05
    2. ' print' → logprob: -12.50001049041748
    3. '```' → logprob: -12.87501049041748
    4. '\n' → logprob: -13.62501049041748
    5. 'result' → logprob: -13.75001049041748
    6. '
' → logprob: -14.62501049041748
    7. '#' → logprob: -15.00001049041748
    8. '\' → logprob: -15.12501049041748
    9. '#print' → logprob: -15.25001049041748
    10. 'pr' → logprob: -16.250009536743164

Token 56: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.31326693296432495
    2. '(' → logprob: -1.3132669925689697
    3. 'result' → logprob: -12.56326675415039
    4. '()' → logprob: -14.43826675415039
    5. '('' → logprob: -14.68826675415039
    6. ' (' → logprob: -15.31326675415039
    7. '((' → logprob: -16.18826675415039
    8. '(
' → logprob: -16.31326675415039
    9. '(Result' → logprob: -16.31326675415039
    10. '(res' → logprob: -16.56326675415039

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. '))' → logprob: -17.0
    4. ')
' → logprob: -17.375
    5. ')`' → logprob: -18.375
    6. ')#' → logprob: -20.25
    7. '`)' → logprob: -20.375
    8. '')' → logprob: -20.375
    9. '）' → logprob: -20.875
    10. '()' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 55
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 45
Précision stricte (1ère position): 27.27%
Précision adaptée (1ère position): 29.09%
Précision (top 10): 81.82%
================================================================================
