================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import reduce
from itertools import starmap, product, chain
from operator import xor, add
from collections import defaultdict

DBG = not True
DBG2 = not True
n, a, b = map(int, input().split())
MAXM = 18

# Réseau d'initialisation éclaté sur des structures variées
r = defaultdict(list)
s = defaultdict(list)
tuple_assign = lambda t, d: d.update({k: v for k, v in t})
tuple_assign([(0, [0]), (1, [0, 1])], r)
tuple_assign([(1, [0, 1])], s)
p1a = [0, 1, 3, 2]
p2a = [3, 1, 0, 2, 2, 0, 1, 3]

# Méthode inutilement imbriquée pour swiz
def swiz(n, z, d):
    (xpos, ypos, t) = (n - len(d), 0, 0)
    def extract(bitfield, pos, shift): 
        return ((bitfield >> shift) & 1) << pos
    def body(acc, ip):
        i, (x, y, t_) = ip
        return (x+1, y, t_ + extract(z, i, x)) if i in d else (x, y+1, t_ + extract(z, i, y))
    _, _, t_final = reduce(
        lambda state, i: body(state, (i, state)),
        range(n), (xpos, ypos, t))
    if DBG2:
        print(f"sw z {z} d {d} ret {t_final}")
    return t_final

for m in range(3, MAXM, 2):
    s[m] = [0] * (1 << m)
    hi_vals = (val << 2 for val in s[m - 2])
    for i, hi in enumerate(hi_vals):
        for j in range(4):
            idx = 4 * i + j
            s[m][idx] = hi + (p1a[j] if not i else p2a[4 * (i % 2) + j])
            if DBG2:
                print(f"set s m {m} i {i} j {j} - {s[m][idx]}")

for m in range(2, MAXM):
    s2m = (1 << m)
    r[m] = [0] * s2m
    for i in range(s2m >> 1):
        r[m][i] = r[m - 1][i]
        r[m][s2m - 1 - i] = (s2m >> 1) + r[m - 1][i]

if DBG:
    print('\n'.join(map(str, [s[m] for m in range(1, 6)])))
    print('')
    print('\n'.join(map(str, [r[m] for m in range(1, 6)])))

z = a ^ b
d = list(chain.from_iterable([[i] if (z >> i) & 1 else [] for i in range(MAXM)]))
cnt = sum((z >> i) & 1 for i in range(MAXM))
print('NO' if cnt % 2 == 0 else 'YES')
if cnt % 2 == 0:
    sys.exit(0)
sz = len(d)
if DBG:
    print(f"n {n} a {a} b {b} sz {sz} d:")
    print(d)

gen = lambda sz, nsz: product(range(1 << sz), range(1 << nsz))
expression = lambda i, j: ((s[sz][i] << (n - sz)), r[n - sz][j] if i % 2 == 0 else r[n - sz][(1 << (n - sz)) - 1 - j])

def output_numbers():
    for i in range(1 << sz):
        for j in range(1 << (n - sz)):
            hi, lo = expression(i, j)
            z0 = hi + lo
            sw = swiz(n, z0, d)
            if DBG:
                print(f"i {i} j {j} hi {hi} lo {lo} z {z0} sw {sw}")
            yield str(a ^ sw)

print(' '.join(output_numbers()))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30036604404449463
    2. '\n' → logprob: -1.5503660440444946
    3. '<|end|>' → logprob: -3.675365924835205
    4. '\' → logprob: -4.925365924835205
    5. 'newline' → logprob: -5.675365924835205
    6. 'import' → logprob: -5.675365924835205
    7. '<|end|>' → logprob: -6.050365924835205
    8. '
' → logprob: -6.925365924835205
    9. '```' → logprob: -6.925365924835205
    10. '' → logprob: -7.550365924835205

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00688101164996624
    2. 'os' → logprob: -5.756881237030029
    3. ' math' → logprob: -6.881881237030029
    4. ' collections' → logprob: -7.256881237030029
    5. ' pathlib' → logprob: -7.756881237030029
    6. ' ' → logprob: -8.131880760192871
    7. ' typing' → logprob: -8.131880760192871
    8. ' datetime' → logprob: -9.006880760192871
    9. 'collections' → logprob: -9.256880760192871
    10. ' Py' → logprob: -9.256880760192871

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11333046108484268
    2. 'import' → logprob: -2.238330364227295
    3. '_import' → logprob: -8.113330841064453
    4. ' ' → logprob: -8.863330841064453
    5. '_' → logprob: -10.363330841064453
    6. '	import' → logprob: -10.988330841064453
    7. '.' → logprob: -12.488330841064453
    8. ' _' → logprob: -12.613330841064453
    9. ' ' → logprob: -12.738330841064453
    10. '```' → logprob: -13.113330841064453

Token 6: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.6477278470993042
    2. ' wraps' → logprob: -1.0227278470993042
    3. 'partial' → logprob: -2.6477279663085938
    4. 'l' → logprob: -4.272727966308594
    5. ' l' → logprob: -4.272727966308594
    6. ' partial' → logprob: -4.647727966308594
    7. 'reduce' → logprob: -4.897727966308594
    8. 'cmp' → logprob: -7.772727966308594
    9. ' reduce' → logprob: -7.897727966308594
    10. 'cache' → logprob: -8.647727966308594

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7293345332145691
    2. ',' → logprob: -1.1043345928192139
    3. '(' → logprob: -2.604334592819214
    4. '\n' → logprob: -3.354334592819214
    5. '\' → logprob: -3.729334592819214
    6. '.' → logprob: -4.104334354400635
    7. '```' → logprob: -4.604334354400635
    8. ' ' → logprob: -5.104334354400635
    9. '' → logprob: -5.854334354400635
    10. 'def' → logprob: -5.854334354400635

Token 8: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.28145086765289307
    2. ',' → logprob: -2.0314507484436035
    3. '```' → logprob: -2.9064507484436035
    4. '\n' → logprob: -4.1564507484436035
    5. 'def' → logprob: -4.6564507484436035
    6. '(' → logprob: -4.6564507484436035
    7. '\' → logprob: -4.9064507484436035
    8. '.' → logprob: -5.5314507484436035
    9. '[' → logprob: -6.0314507484436035
    10. '
' → logprob: -6.5314507484436035

Token 9: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.7963497042655945
    2. ' math' → logprob: -0.9213497042655945
    3. ' itertools' → logprob: -2.0463497638702393
    4. ' collections' → logprob: -4.29634952545166
    5. 'operator' → logprob: -5.54634952545166
    6. ' os' → logprob: -5.79634952545166
    7. 'math' → logprob: -7.17134952545166
    8. ' ' → logprob: -8.42134952545166
    9. ' typing' → logprob: -9.04634952545166
    10. 'collections' → logprob: -9.54634952545166

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18746700882911682
    2. 'import' → logprob: -1.9374669790267944
    3. '.' → logprob: -3.687467098236084
    4. ' .' → logprob: -7.062467098236084
    5. '.import' → logprob: -7.437467098236084
    6. ' ' → logprob: -9.187466621398926
    7. '	import' → logprob: -9.312466621398926
    8. '<|end|>' → logprob: -9.312466621398926
    9. '.im' → logprob: -10.187466621398926
    10. '_import' → logprob: -10.937466621398926

Token 11: ' st' (ID: 420)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1405792236328125
    2. 'group' → logprob: -1.3905792236328125
    3. 'cycle' → logprob: -2.0155792236328125
    4. 'acc' → logprob: -2.2655792236328125
    5. 'chain' → logprob: -2.5155792236328125
    6. 'com' → logprob: -3.5155792236328125
    7. ' group' → logprob: -3.6405792236328125
    8. ' cycle' → logprob: -4.5155792236328125
    9. 'product' → logprob: -4.7655792236328125
    10. 'per' → logprob: -4.7655792236328125

Token 12: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.13452614843845367
    2. 'ar' → logprob: -2.134526252746582
    3. 'ertools' → logprob: -5.759526252746582
    4. 'art' → logprob: -6.009526252746582
    5. 'arl' → logprob: -7.384526252746582
    6. 'r' → logprob: -7.509526252746582
    7. 'a' → logprob: -8.884526252746582
    8. 'arp' → logprob: -9.009526252746582
    9. 'er' → logprob: -9.134526252746582
    10. 'erm' → logprob: -9.759526252746582

Token 13: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.005247514229267836
    2. 'atch' → logprob: -5.255247592926025
    3. 'ach' → logprob: -11.880247116088867
    4. 'at' → logprob: -12.130247116088867
    5. 'app' → logprob: -15.505247116088867
    6. 'a' → logprob: -15.505247116088867
    7. 'atched' → logprob: -15.630247116088867
    8. 'atching' → logprob: -15.755247116088867
    9. 'ep' → logprob: -16.005247116088867
    10. 'atches' → logprob: -16.130247116088867

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9012427926063538
    2. 'import' → logprob: -1.026242733001709
    3. '\n' → logprob: -2.526242733001709
    4. 'def' → logprob: -3.151242733001709
    5. '
' → logprob: -3.776242733001709
    6. ',
' → logprob: -4.026242733001709
    7. '\' → logprob: -4.526242733001709
    8. '' → logprob: -4.776242733001709
    9. '

' → logprob: -4.776242733001709
    10. '(' → logprob: -4.901242733001709

Token 15: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.0605552196502686
    2. 'acc' → logprob: -1.4355552196502686
    3. 'group' → logprob: -1.9355552196502686
    4. ' product' → logprob: -3.0605552196502686
    5. 'chain' → logprob: -3.1855552196502686
    6. 'filter' → logprob: -3.3105552196502686
    7. ' accumulate' → logprob: -3.4355552196502686
    8. ' group' → logprob: -3.9355552196502686
    9. 'tee' → logprob: -3.9355552196502686
    10. 'compress' → logprob: -4.060555458068848

Token 16: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.048476219177246
    2. ',' → logprob: -1.423476219177246
    3. '
' → logprob: -2.048476219177246
    4. 'import' → logprob: -2.423476219177246
    5. '

' → logprob: -2.548476219177246
    6. '\' → logprob: -3.298476219177246
    7. ',
' → logprob: -4.048476219177246
    8. '(' → logprob: -4.173476219177246
    9. 'def' → logprob: -4.548476219177246
    10. '(
' → logprob: -5.048476219177246

Token 17: ' chain' (ID: 13464)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -2.0540778636932373
    2. ' chain' → logprob: -2.1790778636932373
    3. 'com' → logprob: -2.3040778636932373
    4. ' accumulate' → logprob: -2.5540778636932373
    5. ' permutations' → logprob: -2.6790778636932373
    6. 'chain' → logprob: -2.6790778636932373
    7. 'acc' → logprob: -2.9290778636932373
    8. 'filter' → logprob: -3.0540778636932373
    9. ' cycle' → logprob: -3.1790778636932373
    10. '```' → logprob: -3.3040778636932373

Token 18: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13602378964424133
    2. 'import' → logprob: -3.261023759841919
    3. ',
' → logprob: -4.011023998260498
    4. '\n' → logprob: -4.136023998260498
    5. '<|end|>' → logprob: -4.511023998260498
    6. '.' → logprob: -5.011023998260498
    7. ',

' → logprob: -5.011023998260498
    8. '
' → logprob: -5.011023998260498
    9. '

' → logprob: -5.261023998260498
    10. '```' → logprob: -5.511023998260498

Token 19: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1056448221206665
    2. 'import' → logprob: -1.2306448221206665
    3. 'def' → logprob: -2.105644702911377
    4. '\n' → logprob: -2.480644702911377
    5. '

' → logprob: -3.105644702911377
    6. '```' → logprob: -3.105644702911377
    7. '
' → logprob: -3.855644702911377
    8. ',

' → logprob: -4.105644702911377
    9. ',
' → logprob: -4.355644702911377
    10. '\' → logprob: -4.480644702911377

Token 20: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5025200843811035
    2. 'operator' → logprob: -2.1275200843811035
    3. ' math' → logprob: -2.3775200843811035
    4. ' collections' → logprob: -2.6275200843811035
    5. 'math' → logprob: -2.8775200843811035
    6. 'collections' → logprob: -3.0025200843811035
    7. ' ' → logprob: -6.1275200843811035
    8. ' typing' → logprob: -6.7525200843811035
    9. 'os' → logprob: -8.127519607543945
    10. ' functools' → logprob: -8.377519607543945

Token 21: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.021634655073285103
    2. 'import' → logprob: -3.896634578704834
    3. '.' → logprob: -7.646634578704834
    4. ' ' → logprob: -8.146635055541992
    5. '<|end|>' → logprob: -8.271635055541992
    6. '	import' → logprob: -11.146635055541992
    7. '_import' → logprob: -11.396635055541992
    8. ' .' → logprob: -11.646635055541992
    9. ',' → logprob: -11.771635055541992
    10. ' ,' → logprob: -12.146635055541992

Token 22: ' xor' (ID: 106402)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.36994221806526184
    2. 'mul' → logprob: -1.4949421882629395
    3. ' item' → logprob: -3.4949421882629395
    4. 'item' → logprob: -3.6199421882629395
    5. ' add' → logprob: -4.1199421882629395
    6. 'add' → logprob: -4.9949421882629395
    7. 'getitem' → logprob: -6.9949421882629395
    8. ' import' → logprob: -7.1199421882629395
    9. 'import' → logprob: -7.2449421882629395
    10. ' method' → logprob: -7.4949421882629395

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5282154083251953
    2. '

' → logprob: -1.4032154083251953
    3. '
' → logprob: -2.5282154083251953
    4. ',

' → logprob: -3.6532154083251953
    5. ',
' → logprob: -4.028215408325195
    6. 'def' → logprob: -4.903215408325195
    7. '(' → logprob: -5.028215408325195
    8. 'import' → logprob: -5.153215408325195
    9. '\n' → logprob: -5.403215408325195
    10. ' 

' → logprob: -5.403215408325195

Token 24: ' add' (ID: 1147)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.3551153838634491
    2. 'and' → logprob: -2.3551154136657715
    3. ' and' → logprob: -2.6051154136657715
    4. 'mul' → logprob: -2.6051154136657715
    5. ' or' → logprob: -4.4801154136657715
    6. '```' → logprob: -4.8551154136657715
    7. ' add' → logprob: -4.9801154136657715
    8. 'add' → logprob: -4.9801154136657715
    9. ' ' → logprob: -5.9801154136657715
    10. 'pow' → logprob: -6.7301154136657715

Token 25: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6252275705337524
    2. ',' → logprob: -1.2502275705337524
    3. '
' → logprob: -2.375227451324463
    4. 'import' → logprob: -3.875227451324463
    5. ',

' → logprob: -4.125227451324463
    6. ',
' → logprob: -5.000227451324463
    7. '#' → logprob: -5.250227451324463
    8. 'def' → logprob: -5.250227451324463
    9. '


' → logprob: -5.375227451324463
    10. '\n' → logprob: -5.375227451324463

Token 26: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5719451308250427
    2. ',' → logprob: -1.6969451904296875
    3. 'import' → logprob: -2.4469451904296875
    4. '
' → logprob: -3.1969451904296875
    5. 'def' → logprob: -3.1969451904296875
    6. ',

' → logprob: -3.8219451904296875
    7. '```' → logprob: -4.4469451904296875
    8. '\n' → logprob: -4.8219451904296875
    9. ',
' → logprob: -5.1969451904296875
    10. '`

' → logprob: -5.1969451904296875

Token 27: ' collections' (ID: 22690)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.27345430850982666
    2. 'collections' → logprob: -2.148454189300537
    3. ' math' → logprob: -2.773454189300537
    4. 'random' → logprob: -4.023454189300537
    5. ' collections' → logprob: -4.398454189300537
    6. 'operator' → logprob: -4.398454189300537
    7. ' functools' → logprob: -5.398454189300537
    8. ' random' → logprob: -6.148454189300537
    9. 'typing' → logprob: -6.523454189300537
    10. ' hashlib' → logprob: -6.648454189300537

Token 28: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6346055865287781
    2. ' import' → logprob: -0.7596055865287781
    3. '<|end|>' → logprob: -7.509605407714844
    4. '.' → logprob: -7.884605407714844
    5. '```' → logprob: -8.384605407714844
    6. 'abc' → logprob: -8.384605407714844
    7. '	import' → logprob: -8.884605407714844
    8. ' abc' → logprob: -8.884605407714844
    9. ' defaultdict' → logprob: -9.259605407714844
    10. ' ' → logprob: -10.822105407714844

Token 29: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2306218296289444
    2. ' deque' → logprob: -2.230621814727783
    3. 'deque' → logprob: -2.980621814727783
    4. ' Counter' → logprob: -3.480621814727783
    5. 'default' → logprob: -5.105621814727783
    6. ' abc' → logprob: -5.605621814727783
    7. 'Counter' → logprob: -5.855621814727783
    8. ' named' → logprob: -6.105621814727783
    9. 'abc' → logprob: -6.855621814727783
    10. 'named' → logprob: -7.105621814727783

Token 30: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2841045558452606
    2. '
' → logprob: -1.784104585647583
    3. 'import' → logprob: -3.159104585647583
    4. ',' → logprob: -4.284104347229004
    5. '```' → logprob: -5.159104347229004
    6. '


' → logprob: -5.784104347229004
    7. 'def' → logprob: -5.909104347229004
    8. '\n' → logprob: -6.034104347229004
    9. '<|end|>' → logprob: -6.034104347229004
    10. '#' → logprob: -7.159104347229004

Token 31: 'DBG' (ID: 68421)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15828797221183777
    2. 'd' → logprob: -2.53328800201416
    3. '
' → logprob: -4.15828800201416
    4. '#' → logprob: -4.15828800201416
    5. 'import' → logprob: -4.53328800201416
    6. '```' → logprob: -5.28328800201416
    7. 'class' → logprob: -5.40828800201416
    8. '\' → logprob: -6.15828800201416
    9. ',' → logprob: -6.15828800201416
    10. 'n' → logprob: -6.65828800201416

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2006538212299347
    2. '_' → logprob: -2.0756537914276123
    3. ' =' → logprob: -2.9506537914276123
    4. '_=' → logprob: -6.575654029846191
    5. ':' → logprob: -6.825654029846191
    6. 'O' → logprob: -8.450654029846191
    7. '[:]' → logprob: -8.450654029846191
    8. 'E' → logprob: -8.700654029846191
    9. ' ' → logprob: -9.325654029846191
    10. '(' → logprob: -9.450654029846191

Token 33: ' not' (ID: 625)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.39762887358665466
    2. ' True' → logprob: -1.647628903388977
    3. 'False' → logprob: -2.1476287841796875
    4. 'True' → logprob: -4.7726287841796875
    5. ' ' → logprob: -4.8976287841796875
    6. '0' → logprob: -6.1476287841796875
    7. '1' → logprob: -7.5226287841796875
    8. ' []' → logprob: -10.147628784179688
    9. ' None' → logprob: -10.647628784179688
    10. '10' → logprob: -10.772628784179688

Token 34: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2883411943912506
    2. ' False' → logprob: -1.6633411645889282
    3. ' DBG' → logprob: -4.038341045379639
    4. 'True' → logprob: -4.163341045379639
    5. ' DEBUG' → logprob: -4.288341045379639
    6. 'False' → logprob: -4.538341045379639
    7. ' sys' → logprob: -6.913341045379639
    8. 'DEBUG' → logprob: -7.538341045379639
    9. ' __' → logprob: -7.788341045379639
    10. ' ' → logprob: -7.913341045379639

Token 35: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7889416217803955
    2. '#' → logprob: -1.7889416217803955
    3. '\n' → logprob: -2.4139416217803955
    4. '' → logprob: -2.5389416217803955
    5. '

' → logprob: -2.6639416217803955
    6. 'newline' → logprob: -2.6639416217803955
    7. '\' → logprob: -3.5389416217803955
    8. ',' → logprob: -4.163941383361816
    9. '<|end|>' → logprob: -5.413941383361816
    10. 'import' → logprob: -5.663941383361816

Token 36: 'DBG' (ID: 68421)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28678423166275024
    2. '

' → logprob: -1.5367841720581055
    3. '#' → logprob: -3.9117841720581055
    4. 'newline' → logprob: -5.4117841720581055
    5. '' → logprob: -5.7867841720581055
    6. '\n' → logprob: -6.0367841720581055
    7. ' 

' → logprob: -7.1617841720581055
    8. '
' → logprob: -7.4117841720581055
    9. 'def' → logprob: -7.6617841720581055
    10. '


' → logprob: -7.9117841720581055

Token 37: '2' (ID: 17)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11286043375730515
    2. '=' → logprob: -2.2378604412078857
    3. ' ' → logprob: -10.862860679626465
    4. ' =)' → logprob: -12.112860679626465
    5. '=True' → logprob: -12.612860679626465
    6. '=False' → logprob: -12.987860679626465
    7. ' is' → logprob: -13.987860679626465
    8. ' ==' → logprob: -14.112860679626465
    9. '_' → logprob: -14.237860679626465
    10. ' |=' → logprob: -14.362860679626465

Token 39: ' not' (ID: 625)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.9929754137992859
    2. ' not' → logprob: -1.3679754734039307
    3. ' False' → logprob: -1.3679754734039307
    4. 'False' → logprob: -2.4929754734039307
    5. 'True' → logprob: -3.8679754734039307
    6. 'not' → logprob: -4.242975234985352
    7. ' ' → logprob: -6.492975234985352
    8. '0' → logprob: -7.867975234985352
    9. ' None' → logprob: -9.242975234985352
    10. '1' → logprob: -9.242975234985352

Token 40: ' True' (ID: 6432)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5290905833244324
    2. ' True' → logprob: -1.0290906429290771
    3. 'False' → logprob: -3.029090642929077
    4. 'True' → logprob: -5.279090404510498
    5. '(False' → logprob: -10.779090881347656
    6. ' DBG' → logprob: -10.904090881347656
    7. '(True' → logprob: -11.279090881347656
    8. ' ' → logprob: -11.279090881347656
    9. 'DBG' → logprob: -13.029090881347656
    10. ' not' → logprob: -13.904090881347656

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.592045783996582
    2. '

' → logprob: -1.217045783996582
    3. '\n' → logprob: -3.092045783996582
    4. '' → logprob: -3.342045783996582
    5. '#' → logprob: -4.342045783996582
    6. 'newline' → logprob: -4.342045783996582
    7. 'import' → logprob: -4.842045783996582
    8. '\' → logprob: -4.967045783996582
    9. '


' → logprob: -5.217045783996582
    10. 'DBG' → logprob: -5.467045783996582

Token 42: 'n' (ID: 77)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5406140089035034
    2. '

' → logprob: -1.2906140089035034
    3. '\n' → logprob: -2.790614128112793
    4. 'def' → logprob: -3.290614128112793
    5. '#' → logprob: -4.790614128112793
    6. 'import' → logprob: -5.165614128112793
    7. 'newline' → logprob: -5.290614128112793
    8. 'x' → logprob: -5.540614128112793
    9. '\' → logprob: -5.665614128112793
    10. '


' → logprob: -5.790614128112793

Token 43: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4801494777202606
    2. ' =' → logprob: -1.480149507522583
    3. 'um' → logprob: -2.355149507522583
    4. '_' → logprob: -3.230149507522583
    5. 'u' → logprob: -5.230149269104004
    6. 'umber' → logprob: -5.480149269104004
    7. ' ' → logprob: -6.355149269104004
    8. 'ums' → logprob: -6.730149269104004
    9. '=int' → logprob: -7.355149269104004
    10. 'a' → logprob: -7.355149269104004

Token 44: ' a' (ID: 261)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.8035038709640503
    2. ' k' → logprob: -1.5535038709640503
    3. 'm' → logprob: -1.8035038709640503
    4. 'k' → logprob: -2.17850399017334
    5. '=' → logprob: -4.92850399017334
    6. ' t' → logprob: -5.05350399017334
    7. ' =' → logprob: -5.30350399017334
    8. ' q' → logprob: -5.67850399017334
    9. ' s' → logprob: -5.80350399017334
    10. ' a' → logprob: -5.80350399017334

Token 45: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43795159459114075
    2. ' =' → logprob: -1.0629515647888184
    3. ',' → logprob: -4.937951564788818
    4. 's' → logprob: -6.312951564788818
    5. 'r' → logprob: -9.937952041625977
    6. 'rray' → logprob: -10.062952041625977
    7. ' ' → logprob: -10.687952041625977
    8. 'b' → logprob: -11.187952041625977
    9. 'l' → logprob: -11.687952041625977
    10. ')' → logprob: -11.687952041625977

Token 46: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4807225465774536
    2. ' b' → logprob: -1.6057225465774536
    3. 'k' → logprob: -2.730722427368164
    4. ' k' → logprob: -3.730722427368164
    5. 'm' → logprob: -3.855722427368164
    6. ' =' → logprob: -4.605722427368164
    7. 'd' → logprob: -4.855722427368164
    8. 's' → logprob: -4.980722427368164
    9. '=' → logprob: -5.230722427368164
    10. '_' → logprob: -5.480722427368164

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2146352380514145
    2. '=' → logprob: -1.7146352529525757
    3. ',' → logprob: -4.339635372161865
    4. '<|end|>' → logprob: -9.839634895324707
    5. ' ' → logprob: -11.089634895324707
    6. ' =
' → logprob: -11.214634895324707
    7. ' ,' → logprob: -12.839634895324707
    8. '=

' → logprob: -13.464634895324707
    9. ')' → logprob: -13.464634895324707
    10. '=int' → logprob: -14.089634895324707

Token 48: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.09653402119874954
    2. 'map' → logprob: -2.471534013748169
    3. '0' → logprob: -5.596534252166748
    4. ' ' → logprob: -6.096534252166748
    5. ' input' → logprob: -7.846534252166748
    6. ' [' → logprob: -8.34653377532959
    7. ' int' → logprob: -8.84653377532959
    8. '1' → logprob: -8.97153377532959
    9. 'input' → logprob: -9.09653377532959
    10. 'int' → logprob: -9.22153377532959

Token 49: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6952120065689087
    2. '(int' → logprob: -0.6952120065689087
    3. '(str' → logprob: -6.695211887359619
    4. '(lambda' → logprob: -7.695211887359619
    5. '(input' → logprob: -9.445212364196777
    6. '(map' → logprob: -9.445212364196777
    7. '(list' → logprob: -9.570212364196777
    8. 'int' → logprob: -10.320212364196777
    9. '(eval' → logprob: -10.570212364196777
    10. '(len' → logprob: -10.820212364196777

Token 50: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.41610440611839294
    2. '(' → logprob: -1.6661044359207153
    3. ')' → logprob: -2.416104316711426
    4. '(sys' → logprob: -3.666104316711426
    5. 'input' → logprob: -4.041104316711426
    6. ',' → logprob: -4.291104316711426
    7. ',input' → logprob: -5.666104316711426
    8. ' input' → logprob: -7.541104316711426
    9. '<|end|>' → logprob: -8.416104316711426
    10. '```' → logprob: -8.916104316711426

Token 51: ' input' (ID: 3422)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6709991693496704
    2. ' input' → logprob: -1.4209991693496704
    3. 'sys' → logprob: -1.9209991693496704
    4. 'input' → logprob: -2.295999050140381
    5. ')' → logprob: -8.920999526977539
    6. '=sys' → logprob: -10.545999526977539
    7. '(sys' → logprob: -11.045999526977539
    8. ' ' → logprob: -11.170999526977539
    9. ' )' → logprob: -11.670999526977539
    10. '	sys' → logprob: -12.670999526977539

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0029000937938690186
    2. '()' → logprob: -6.377900123596191
    3. '())' → logprob: -6.752900123596191
    4. ')' → logprob: -11.002900123596191
    5. '());' → logprob: -11.877900123596191
    6. '(' → logprob: -13.502900123596191
    7. ' ().' → logprob: -13.752900123596191
    8. '()
' → logprob: -14.252900123596191
    9. '();)' → logprob: -14.877900123596191
    10. '()[' → logprob: -15.127900123596191

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015122429467737675
    2. 'strip' → logprob: -6.501512050628662
    3. 'rstrip' → logprob: -12.25151252746582
    4. 'read' → logprob: -12.50151252746582
    5. '(split' → logprob: -13.75151252746582
    6. ' split' → logprob: -15.25151252746582
    7. 'spl' → logprob: -17.25151252746582
    8. ')' → logprob: -17.62651252746582
    9. 's' → logprob: -18.12651252746582
    10. 'rs' → logprob: -18.25151252746582

Token 54: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000305310997646302
    2. '))' → logprob: -8.37530517578125
    3. '())' → logprob: -10.12530517578125
    4. '`)' → logprob: -12.12530517578125
    5. '')' → logprob: -12.25030517578125
    6. '()' → logprob: -12.37530517578125
    7. ')))' → logprob: -12.50030517578125
    8. '),' → logprob: -12.62530517578125
    9. ')`' → logprob: -12.62530517578125
    10. ')(' → logprob: -13.25030517578125

Token 55: 'MAX' (ID: 21911)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41755685210227966
    2. 'n' → logprob: -2.5425567626953125
    3. 'c' → logprob: -3.1675567626953125
    4. '<|end|>' → logprob: -3.2925567626953125
    5. ' 
' → logprob: -3.5425567626953125
    6. 'a' → logprob: -3.6675567626953125
    7. '[' → logprob: -3.7925567626953125
    8. 'data' → logprob: -4.1675567626953125
    9. '\n' → logprob: -4.2925567626953125
    10. ')' → logprob: -4.2925567626953125

Token 56: 'M' (ID: 44)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22127006947994232
    2. '_VAL' → logprob: -2.2212700843811035
    3. '_A' → logprob: -3.8462700843811035
    4. '_VALUE' → logprob: -4.0962700843811035
    5. '_LEN' → logprob: -4.3462700843811035
    6. '_N' → logprob: -5.0962700843811035
    7. '_=' → logprob: -5.0962700843811035
    8. '_NUM' → logprob: -5.3462700843811035
    9. '_SUM' → logprob: -5.7212700843811035
    10. '_SIZE' → logprob: -5.8462700843811035

Token 57: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3513219952583313
    2. ' =' → logprob: -1.2263219356536865
    3. '_' → logprob: -6.101322174072266
    4. '_=' → logprob: -8.851322174072266
    5. '_VAL' → logprob: -9.976322174072266
    6. ' ' → logprob: -10.101322174072266
    7. ',' → logprob: -10.101322174072266
    8. ')' → logprob: -10.226322174072266
    9. '=_' → logprob: -10.226322174072266
    10. '=int' → logprob: -10.351322174072266

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.052212100476026535
    2. '10' → logprob: -3.8022119998931885
    3. '100' → logprob: -3.9272119998931885
    4. ' n' → logprob: -5.802212238311768
    5. ' a' → logprob: -6.552212238311768
    6. '20' → logprob: -7.552212238311768
    7. 'a' → logprob: -7.552212238311768
    8. 'n' → logprob: -7.802212238311768
    9. '200' → logprob: -7.802212238311768
    10. ' max' → logprob: -8.05221176147461

Token 59: '18' (ID: 1157)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6102361083030701
    2. '100' → logprob: -1.3602361679077148
    3. ' ' → logprob: -3.110236167907715
    4. 'a' → logprob: -3.485236167907715
    5. '200' → logprob: -3.860236167907715
    6. '2' → logprob: -3.985236167907715
    7. '20' → logprob: -4.360236167907715
    8. 'n' → logprob: -4.360236167907715
    9. '500' → logprob: -4.860236167907715
    10. '300' → logprob: -4.860236167907715

Token 60: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3399188220500946
    2. 'n' → logprob: -1.964918851852417
    3. '\n' → logprob: -3.214918851852417
    4. '<|end|>' → logprob: -3.714918851852417
    5. '*' → logprob: -4.089918613433838
    6. '#' → logprob: -4.339918613433838
    7. '**' → logprob: -4.714918613433838
    8. ' ' → logprob: -4.839918613433838
    9. ' 
' → logprob: -5.339918613433838
    10. '+' → logprob: -5.589918613433838

Token 61: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.5306386947631836
    2. 'm' → logprob: -1.7806386947631836
    3. 'a' → logprob: -1.9056386947631836
    4. 'n' → logprob: -2.5306386947631836
    5. 'x' → logprob: -2.7806386947631836
    6. 'p' → logprob: -3.0306386947631836
    7. 's' → logprob: -3.1556386947631836
    8. 'c' → logprob: -3.2806386947631836
    9. 'data' → logprob: -4.155638694763184
    10. 'd' → logprob: -4.155638694763184

Token 62: ' Ré' (ID: 27181)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.540554940700531
    2. ' dp' → logprob: -1.7905550003051758
    3. 'def' → logprob: -1.7905550003051758
    4. ' def' → logprob: -5.040555000305176
    5. 'a' → logprob: -5.290555000305176
    6. 'd' → logprob: -5.415555000305176
    7. '#' → logprob: -5.665555000305176
    8. 'arr' → logprob: -5.665555000305176
    9. 'mask' → logprob: -5.665555000305176
    10. 'x' → logprob: -5.790555000305176

Token 63: 'seau' (ID: 193041)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.515283226966858
    2. 'sum' → logprob: -2.0152831077575684
    3. 'p' → logprob: -2.2652831077575684
    4. 'cur' → logprob: -2.3902831077575684
    5. 'du' → logprob: -2.7652831077575684
    6. 'curr' → logprob: -2.7652831077575684
    7. 'g' → logprob: -2.7652831077575684
    8. 'set' → logprob: -2.8902831077575684
    9. 'duction' → logprob: -3.3902831077575684
    10. 's' → logprob: -3.7652831077575684

Token 64: ' d' (ID: 272)
  Prédit: 'neur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neur' → logprob: -0.3903394937515259
    2. ' de' → logprob: -1.7653394937515259
    3. ' neuronal' → logprob: -2.8903393745422363
    4. ' neuron' → logprob: -4.140339374542236
    5. 'ne' → logprob: -4.390339374542236
    6. ' neural' → logprob: -4.515339374542236
    7. 'de' → logprob: -4.640339374542236
    8. ' =' → logprob: -4.765339374542236
    9. 'b' → logprob: -4.890339374542236
    10. ' ' → logprob: -5.015339374542236

Token 65: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1929728984832764
    2. 'neur' → logprob: -1.9429728984832764
    3. 'entr' → logprob: -2.1929728984832764
    4. 'ent' → logprob: -2.5679728984832764
    5. 'es' → logprob: -3.0679728984832764
    6. 'enses' → logprob: -3.4429728984832764
    7. 'er' → logprob: -4.0679731369018555
    8. '

' → logprob: -4.1929731369018555
    9. ''ent' → logprob: -4.3179731369018555
    10. 'ence' → logprob: -4.3179731369018555

Token 66: 'initial' (ID: 17493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.979548990726471
    2. 'neur' → logprob: -1.9795489311218262
    3. 'autom' → logprob: -2.479548931121826
    4. 'entr' → logprob: -3.104548931121826
    5. 'aires' → logprob: -3.354548931121826
    6. 'inter' → logprob: -3.479548931121826
    7. 'ord' → logprob: -3.604548931121826
    8. 'ent' → logprob: -3.854548931121826
    9. 'intr' → logprob: -3.979548931121826
    10. 'a' → logprob: -4.229548931121826

Token 67: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.1800449639558792
    2. 'ization' → logprob: -1.8050450086593628
    3. 'al' → logprob: -9.805045127868652
    4. 'itial' → logprob: -10.055045127868652
    5. 'es' → logprob: -10.180045127868652
    6. 'ition' → logprob: -10.555045127868652
    7. 'isations' → logprob: -10.555045127868652
    8. 'izations' → logprob: -10.680045127868652
    9. 'is' → logprob: -10.805045127868652
    10. 'ation' → logprob: -10.805045127868652

Token 68: ' écl' (ID: 106108)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9928567409515381
    2. 's' → logprob: -1.742856740951538
    3. ':' → logprob: -2.992856740951538
    4. '#' → logprob: -3.117856740951538
    5. ',' → logprob: -3.117856740951538
    6. ' ' → logprob: -3.117856740951538
    7. '<|end|>' → logprob: -3.117856740951538
    8. 'n' → logprob: -3.367856740951538
    9. 'm' → logprob: -3.867856740951538
    10. 'def' → logprob: -3.992856740951538

Token 69: 'até' (ID: 141237)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.3841438889503479
    2. 'air' → logprob: -1.3841438293457031
    3. 'acement' → logprob: -4.384143829345703
    4. 'atement' → logprob: -4.509143829345703
    5. 'a' → logprob: -4.759143829345703
    6. 'ique' → logprob: -5.259143829345703
    7. 'airs' → logprob: -5.509143829345703
    8. 'an' → logprob: -5.634143829345703
    9. 'ar' → logprob: -6.134143829345703
    10. 'ement' → logprob: -6.259143829345703

Token 70: ' sur' (ID: 1512)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7927981615066528
    2. ':' → logprob: -2.0427980422973633
    3. ' =' → logprob: -2.0427980422973633
    4. '#' → logprob: -2.4177980422973633
    5. ' :' → logprob: -2.5427980422973633
    6. ' ' → logprob: -2.9177980422973633
    7. 'n' → logprob: -2.9177980422973633
    8. 's' → logprob: -3.2927980422973633
    9. '<|end|>' → logprob: -3.6677980422973633
    10. '...' → logprob: -3.7927980422973633

Token 71: ' des' (ID: 731)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.2630136013031006
    2. ' plusieurs' → logprob: -1.5130136013031006
    3. 'MAX' → logprob: -2.1380136013031006
    4. ' ' → logprob: -2.5130136013031006
    5. ' MAX' → logprob: -3.2630136013031006
    6. 'au' → logprob: -3.6380136013031006
    7. 'les' → logprob: -3.6380136013031006
    8. '18' → logprob: -3.7630136013031006
    9. 'tout' → logprob: -4.26301383972168
    10. 'le' → logprob: -4.26301383972168

Token 72: ' structures' (ID: 21207)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.19018849730491638
    2. 'l' → logprob: -2.565188407897949
    3. ' plusieurs' → logprob: -3.565188407897949
    4. ' lines' → logprob: -4.440188407897949
    5. ' multiple' → logprob: -4.565188407897949
    6. ' ' → logprob: -4.815188407897949
    7. 'plus' → logprob: -5.127688407897949
    8. ' ' → logprob: -5.815188407897949
    9. 'multip' → logprob: -6.002688407897949
    10. 'ligne' → logprob: -6.315188407897949

Token 73: ' vari' (ID: 4233)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.49543967843055725
    2. 'de' → logprob: -2.1204397678375244
    3. 'd' → logprob: -3.1204397678375244
    4. 'dis' → logprob: -3.1204397678375244
    5. '[]' → logprob: -3.4954397678375244
    6. ' dis' → logprob: -4.370439529418945
    7. ' d' → logprob: -4.620439529418945
    8. 'n' → logprob: -4.745439529418945
    9. 'list' → logprob: -4.745439529418945
    10. '.' → logprob: -4.745439529418945

Token 74: 'ées' (ID: 5161)
  Prédit: 'ables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ables' → logprob: -0.0011740362970158458
    2. 'ab' → logprob: -7.876173973083496
    3. 'ées' → logprob: -8.126173973083496
    4. 'a' → logprob: -8.376173973083496
    5. 'able' → logprob: -9.501173973083496
    6. '```' → logprob: -9.501173973083496
    7. 'antes' → logprob: -10.876173973083496
    8. 'ales' → logprob: -11.001173973083496
    9. 'ablement' → logprob: -11.126173973083496
    10. 'bles' → logprob: -11.376173973083496

Token 75: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2280757427215576
    2. ':' → logprob: -1.4780757427215576
    3. '#' → logprob: -2.6030757427215576
    4. '
' → logprob: -2.6030757427215576
    5. 'n' → logprob: -2.9780757427215576
    6. 'def' → logprob: -3.1030757427215576
    7. '.' → logprob: -3.2280757427215576
    8. '<|end|>' → logprob: -3.3530757427215576
    9. ' =' → logprob: -3.4780757427215576
    10. 'a' → logprob: -3.6030757427215576

Token 76: 'r' (ID: 81)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9140311479568481
    2. ',' → logprob: -2.1640310287475586
    3. 'm' → logprob: -2.1640310287475586
    4. 'data' → logprob: -2.6640310287475586
    5. 'graph' → logprob: -2.6640310287475586
    6. 'a' → logprob: -2.7890310287475586
    7. '#' → logprob: -2.7890310287475586
    8. ':' → logprob: -2.9140310287475586
    9. 's' → logprob: -3.2890310287475586
    10. '.' → logprob: -3.6640310287475586

Token 77: ' =' (ID: 314)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7793490290641785
    2. 'ese' → logprob: -1.9043490886688232
    3. 'ése' → logprob: -1.9043490886688232
    4. 'e' → logprob: -2.4043490886688232
    5. 'eq' → logprob: -3.5293490886688232
    6. 'eg' → logprob: -4.029348850250244
    7. 'ead' → logprob: -4.404348850250244
    8. ' =' → logprob: -4.654348850250244
    9. 'és' → logprob: -4.779348850250244
    10. 'ep' → logprob: -4.904348850250244

Token 78: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4016343653202057
    2. ' [' → logprob: -1.4016343355178833
    3. ' []' → logprob: -3.526634454727173
    4. 'default' → logprob: -3.651634454727173
    5. ' [{}' → logprob: -4.901634216308594
    6. '[' → logprob: -5.026634216308594
    7. ' [[]' → logprob: -5.151634216308594
    8. '[]' → logprob: -5.401634216308594
    9. ' [[' → logprob: -7.026634216308594
    10. ' {}' → logprob: -7.151634216308594

Token 79: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -1.0878437757492065
    2. '(int' → logprob: -1.2128437757492065
    3. '(lambda' → logprob: -1.4628437757492065
    4. '(' → logprob: -2.087843894958496
    5. '(
' → logprob: -4.962843894958496
    6. '(dict' → logprob: -6.212843894958496
    7. '(set' → logprob: -7.962843894958496
    8. '(<' → logprob: -8.712843894958496
    9. 'list' → logprob: -8.837843894958496
    10. '(bool' → logprob: -9.087843894958496

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.011373155459296e-05
    2. ' )' → logprob: -11.500030517578125
    3. ',' → logprob: -12.000030517578125
    4. ',)' → logprob: -13.000030517578125
    5. ')
' → logprob: -13.125030517578125
    6. '))' → logprob: -13.250030517578125
    7. '())' → logprob: -13.375030517578125
    8. '()' → logprob: -13.875030517578125
    9. '[' → logprob: -13.875030517578125
    10. '),' → logprob: -14.000030517578125

Token 81: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3311559557914734
    2. 'r' → logprob: -2.456156015396118
    3. ')' → logprob: -2.706156015396118
    4. '
' → logprob: -3.206156015396118
    5. '[' → logprob: -3.706156015396118
    6. ' for' → logprob: -4.456155776977539
    7. 'n' → logprob: -4.581155776977539
    8. '<|end|>' → logprob: -4.706155776977539
    9. '[]' → logprob: -5.206155776977539
    10. '[r' → logprob: -5.456155776977539

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4121497869491577
    2. 'et' → logprob: -1.5371497869491577
    3. '=' → logprob: -3.0371499061584473
    4. 't' → logprob: -3.9121499061584473
    5. 'y' → logprob: -4.287149906158447
    6. 'e' → logprob: -4.537149906158447
    7. 'ys' → logprob: -4.912149906158447
    8. 'um' → logprob: -5.537149906158447
    9. ' ' → logprob: -6.037149906158447
    10. '[' → logprob: -6.412149906158447

Token 83: ' defaultdict' (ID: 107098)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6706356406211853
    2. 'default' → logprob: -1.79563570022583
    3. ' []' → logprob: -2.17063570022583
    4. 'set' → logprob: -2.67063570022583
    5. ' defaultdict' → logprob: -2.92063570022583
    6. ' [' → logprob: -4.04563570022583
    7. '[' → logprob: -4.04563570022583
    8. '{}' → logprob: -4.54563570022583
    9. ' set' → logprob: -4.67063570022583
    10. 'range' → logprob: -5.04563570022583

Token 84: '(list' (ID: 13116)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.41654089093208313
    2. '(list' → logprob: -1.5415408611297607
    3. '(lambda' → logprob: -2.6665408611297607
    4. 'int' → logprob: -3.7915408611297607
    5. '(set' → logprob: -4.16654109954834
    6. 'list' → logprob: -4.54154109954834
    7. '(' → logprob: -5.91654109954834
    8. 'lambda' → logprob: -6.29154109954834
    9. 'set' → logprob: -6.79154109954834
    10. 's' → logprob: -7.79154109954834

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ' )' → logprob: -12.500007629394531
    3. ')
' → logprob: -13.125007629394531
    4. ')

' → logprob: -14.625007629394531
    5. '[' → logprob: -15.125007629394531
    6. ',' → logprob: -15.125007629394531
    7. '))' → logprob: -15.375007629394531
    8. '[])' → logprob: -15.625007629394531
    9. ',)' → logprob: -15.875007629394531
    10. '),' → logprob: -16.12500762939453

Token 86: 'tuple' (ID: 52834)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3767417073249817
    2. ')' → logprob: -2.251741647720337
    3. 'r' → logprob: -2.751741647720337
    4. '#' → logprob: -3.251741647720337
    5. 'n' → logprob: -4.376741886138916
    6. 'c' → logprob: -4.376741886138916
    7. 'm' → logprob: -4.751741886138916
    8. ' for' → logprob: -4.751741886138916
    9. 's' → logprob: -5.001741886138916
    10. 't' → logprob: -5.001741886138916

Token 87: '_assign' (ID: 55018)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004408159293234348
    2. 'd' → logprob: -6.254408359527588
    3. '_' → logprob: -7.004408359527588
    4. '_s' → logprob: -7.379408359527588
    5. '_list' → logprob: -8.25440788269043
    6. ' s' → logprob: -8.50440788269043
    7. '(' → logprob: -8.62940788269043
    8. '(s' → logprob: -9.62940788269043
    9. '_set' → logprob: -10.12940788269043
    10. ' =' → logprob: -10.87940788269043

Token 88: ' =' (ID: 314)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.7346749305725098
    2. 'ments' → logprob: -1.2346749305725098
    3. '=' → logprob: -1.7346749305725098
    4. 's' → logprob: -3.4846749305725098
    5. ' =' → logprob: -4.35967493057251
    6. 'ement' → logprob: -5.48467493057251
    7. 'er' → logprob: -6.10967493057251
    8. 'ations' → logprob: -6.98467493057251
    9. 'ation' → logprob: -7.10967493057251
    10. 'ements' → logprob: -7.10967493057251

Token 89: ' lambda' (ID: 27871)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9870135188102722
    2. '[]' → logprob: -1.487013578414917
    3. '(lambda' → logprob: -1.487013578414917
    4. '(' → logprob: -3.237013578414917
    5. '(tuple' → logprob: -3.487013578414917
    6. '[(' → logprob: -3.737013578414917
    7. '([]' → logprob: -4.237013339996338
    8. '(zip' → logprob: -4.487013339996338
    9. '(product' → logprob: -4.862013339996338
    10. '[' → logprob: -4.987013339996338

Token 90: ' t' (ID: 260)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.33366745710372925
    2. ' a' → logprob: -2.333667516708374
    3. ' t' → logprob: -2.833667516708374
    4. ' lambda' → logprob: -3.458667516708374
    5. ' lst' → logprob: -3.708667516708374
    6. ':' → logprob: -4.583667278289795
    7. 'x' → logprob: -4.958667278289795
    8. ' l' → logprob: -5.083667278289795
    9. ' s' → logprob: -5.208667278289795
    10. ' r' → logprob: -5.458667278289795

Token 91: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1390291005373001
    2. ' :' → logprob: -2.639029026031494
    3. ' t' → logprob: -3.264029026031494
    4. 't' → logprob: -4.639029026031494
    5. ',' → logprob: -4.764029026031494
    6. 's' → logprob: -7.264029026031494
    7. ':t' → logprob: -8.264029502868652
    8. ',t' → logprob: -8.389029502868652
    9. ' ,' → logprob: -8.889029502868652
    10. ' s' → logprob: -9.264029502868652

Token 92: ' d' (ID: 272)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7263359427452087
    2. ' v' → logprob: -1.6013360023498535
    3. ' lambda' → logprob: -3.3513360023498535
    4. 'x' → logprob: -3.4763360023498535
    5. 'i' → logprob: -3.4763360023498535
    6. 'lambda' → logprob: -3.6013360023498535
    7. 'l' → logprob: -3.7263360023498535
    8. 'f' → logprob: -4.1013360023498535
    9. ' x' → logprob: -4.1013360023498535
    10. ' i' → logprob: -4.3513360023498535

Token 93: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0223588477820158
    2. ',' → logprob: -4.1473588943481445
    3. ' :' → logprob: -5.1473588943481445
    4. ',:' → logprob: -8.647358894348145
    5. '[' → logprob: -9.772358894348145
    6. '=' → logprob: -10.397358894348145
    7. ',t' → logprob: -10.772358894348145
    8. '[:' → logprob: -10.897358894348145
    9. ':[' → logprob: -10.897358894348145
    10. ',d' → logprob: -11.022358894348145

Token 94: ' d' (ID: 272)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.5585111379623413
    2. ' tuple' → logprob: -1.8085111379623413
    3. '[d' → logprob: -2.058511257171631
    4. ' {' → logprob: -2.308511257171631
    5. '{' → logprob: -2.558511257171631
    6. ' (' → logprob: -2.683511257171631
    7. ' d' → logprob: -2.933511257171631
    8. ' [(' → logprob: -3.183511257171631
    9. '[' → logprob: -3.433511257171631
    10. '[(' → logprob: -3.433511257171631

Token 95: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.07876011729240417
    2. '[t' → logprob: -3.2037601470947266
    3. '.setdefault' → logprob: -3.5787601470947266
    4. '.__' → logprob: -4.953760147094727
    5. '.get' → logprob: -10.328760147094727
    6. 'update' → logprob: -10.578760147094727
    7. 't' → logprob: -10.828760147094727
    8. '.' → logprob: -11.328760147094727
    9. '[(' → logprob: -11.953760147094727
    10. '|' → logprob: -11.953760147094727

Token 96: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.03809576854109764
    2. '(dict' → logprob: -3.663095712661743
    3. '(zip' → logprob: -5.163095951080322
    4. '((' → logprob: -5.538095951080322
    5. '(' → logprob: -7.038095951080322
    6. '(t' → logprob: -7.413095951080322
    7. '(({' → logprob: -8.413095474243164
    8. '([(' → logprob: -8.913095474243164
    9. '(((' → logprob: -9.663095474243164
    10. '(**' → logprob: -9.788095474243164

Token 97: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08815796673297882
    2. 't' → logprob: -3.213157892227173
    3. 'i' → logprob: -4.088158130645752
    4. 'x' → logprob: -4.088158130645752
    5. 'e' → logprob: -5.588158130645752
    6. 'v' → logprob: -5.713158130645752
    7. 'c' → logprob: -6.588158130645752
    8. ' k' → logprob: -7.838158130645752
    9. '   ' → logprob: -8.088157653808594
    10. 'key' → logprob: -8.213157653808594

Token 98: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18371212482452393
    2. ':t' → logprob: -1.933712124824524
    3. ':v' → logprob: -3.8087120056152344
    4. ' :' → logprob: -7.558712005615234
    5. 't' → logprob: -7.808712005615234
    6. 'v' → logprob: -9.808712005615234
    7. ':k' → logprob: -10.933712005615234
    8. ':i' → logprob: -11.058712005615234
    9. ':value' → logprob: -12.308712005615234
    10. '   ' → logprob: -13.058712005615234

Token 99: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0029801984783262014
    2. 't' → logprob: -6.2529802322387695
    3. ' v' → logprob: -6.8779802322387695
    4. ' t' → logprob: -11.12798023223877
    5. '   ' → logprob: -13.00298023223877
    6. ' ' → logprob: -13.87798023223877
    7. 'vv' → logprob: -14.62798023223877
    8. '	v' → logprob: -14.75298023223877
    9. '[v' → logprob: -15.00298023223877
    10. '
' → logprob: -15.25298023223877

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06201529875397682
    2. 'for' → logprob: -2.8120152950286865
    3. ' ' → logprob: -10.187015533447266
    4. 'k' → logprob: -13.562015533447266
    5. '   ' → logprob: -13.562015533447266
    6. '	for' → logprob: -13.812015533447266
    7. '}' → logprob: -13.937015533447266
    8. '  ' → logprob: -14.062015533447266
    9. ')' → logprob: -14.187015533447266
    10. 't' → logprob: -14.437015533447266

Token 101: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04302099719643593
    2. ' k' → logprob: -3.1680209636688232
    3. '(k' → logprob: -11.543021202087402
    4. 't' → logprob: -12.918021202087402
    5. ' t' → logprob: -12.918021202087402
    6. ' (' → logprob: -13.043021202087402
    7. ',' → logprob: -13.293021202087402
    8. ' ' → logprob: -13.418021202087402
    9. '	k' → logprob: -14.418021202087402
    10. ',k' → logprob: -14.918021202087402

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10373789072036743
    2. ' in' → logprob: -2.7287378311157227
    3. ',k' → logprob: -3.4787378311157227
    4. ',v' → logprob: -6.603737831115723
    5. 'in' → logprob: -7.353737831115723
    6. ' ,' → logprob: -8.478737831115723
    7. ',t' → logprob: -9.353737831115723
    8. 's' → logprob: -10.853737831115723
    9. '  ' → logprob: -11.603737831115723
    10. 'k' → logprob: -11.728737831115723

Token 103: ' v' (ID: 323)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.9767587780952454
    2. 'k' → logprob: -1.1017587184906006
    3. 't' → logprob: -1.6017587184906006
    4. ' k' → logprob: -2.4767587184906006
    5. 'v' → logprob: -6.60175895690918
    6. ' in' → logprob: -6.85175895690918
    7. ' zip' → logprob: -6.97675895690918
    8. '_' → logprob: -7.35175895690918
    9. '_t' → logprob: -8.22675895690918
    10. ' _' → logprob: -8.22675895690918

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008668818511068821
    2. 'in' → logprob: -4.758668899536133
    3. ' ' → logprob: -10.383668899536133
    4. '<|end|>' → logprob: -11.008668899536133
    5. '
' → logprob: -13.758668899536133
    6. ',' → logprob: -13.758668899536133
    7. '<|end|>' → logprob: -13.883668899536133
    8. 's' → logprob: -14.133668899536133
    9. '  ' → logprob: -14.133668899536133
    10. '	in' → logprob: -14.758668899536133

Token 105: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.035831332206726
    2. 't' → logprob: -1.160831332206726
    3. ' zip' → logprob: -1.285831332206726
    4. 'zip' → logprob: -3.5358314514160156
    5. '[' → logprob: -4.785831451416016
    6. '[t' → logprob: -4.910831451416016
    7. ' [' → logprob: -5.410831451416016
    8. '(t' → logprob: -6.285831451416016
    9. '(zip' → logprob: -6.535831451416016
    10. ' map' → logprob: -6.910831451416016

Token 106: '})
' (ID: 6795)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.46872085332870483
    2. '})' → logprob: -1.0937209129333496
    3. 'in' → logprob: -3.3437209129333496
    4. ' })' → logprob: -7.09372091293335
    5. ' if' → logprob: -7.59372091293335
    6. ')' → logprob: -7.84372091293335
    7. '[' → logprob: -7.84372091293335
    8. '}),' → logprob: -7.96872091293335
    9. '  ' → logprob: -8.218720436096191
    10. ' ' → logprob: -8.468720436096191

Token 107: 'tuple' (ID: 52834)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29376518726348877
    2. ')' → logprob: -2.793765068054199
    3. '<|end|>' → logprob: -2.918765068054199
    4. '#' → logprob: -3.168765068054199
    5. 'for' → logprob: -4.543765068054199
    6. '_' → logprob: -4.793765068054199
    7. '(
' → logprob: -4.793765068054199
    8. 'def' → logprob: -4.918765068054199
    9. ';' → logprob: -5.293765068054199
    10. '[' → logprob: -5.418765068054199

Token 108: '_assign' (ID: 55018)
  Prédit: '_assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_assign' → logprob: -0.050310906022787094
    2. ' =' → logprob: -3.3003108501434326
    3. '=' → logprob: -5.425311088562012
    4. 's' → logprob: -5.925311088562012
    5. '_' → logprob: -6.050311088562012
    6. 'assign' → logprob: -7.300311088562012
    7. '_assignment' → logprob: -7.300311088562012
    8. '_=' → logprob: -7.800311088562012
    9. '<|end|>' → logprob: -8.425311088562012
    10. '_ass' → logprob: -9.175311088562012

Token 109: '([(' (ID: 156282)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009624337777495384
    2. '(t' → logprob: -5.509624481201172
    3. '(r' → logprob: -6.009624481201172
    4. '((' → logprob: -7.009624481201172
    5. ' =' → logprob: -7.134624481201172
    6. '=' → logprob: -7.634624481201172
    7. '(
' → logprob: -8.509624481201172
    8. ' (' → logprob: -8.634624481201172
    9. '(s' → logprob: -8.634624481201172
    10. '(lambda' → logprob: -9.509624481201172

Token 110: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.169098138809204
    2. '0' → logprob: -1.794098138809204
    3. ''a' → logprob: -1.794098138809204
    4. 'n' → logprob: -2.294098138809204
    5. 'i' → logprob: -3.044098138809204
    6. '(' → logprob: -3.044098138809204
    7. '('' → logprob: -3.169098138809204
    8. '(i' → logprob: -3.544098138809204
    9. '1' → logprob: -4.169097900390625
    10. ''' → logprob: -4.294097900390625

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001554620685055852
    2. ' ,' → logprob: -7.001554489135742
    3. ',)' → logprob: -8.001554489135742
    4. ',),' → logprob: -9.001554489135742
    5. ',n' → logprob: -10.126554489135742
    6. ',
' → logprob: -10.501554489135742
    7. ' ' → logprob: -11.126554489135742
    8. ',a' → logprob: -11.501554489135742
    9. ')' → logprob: -11.626554489135742
    10. ','' → logprob: -11.751554489135742

Token 112: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0218442678451538
    2. '[]' → logprob: -1.7718442678451538
    3. ' ' → logprob: -2.0218443870544434
    4. ' [])' → logprob: -2.7718443870544434
    5. '[])' → logprob: -3.2718443870544434
    6. 'a' → logprob: -3.3968443870544434
    7. 'r' → logprob: -3.6468443870544434
    8. 'n' → logprob: -3.6468443870544434
    9. '1' → logprob: -3.6468443870544434
    10. ' [' → logprob: -3.7718443870544434

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29807049036026
    2. '1' → logprob: -2.1730704307556152
    3. 'n' → logprob: -3.0480704307556152
    4. 'False' → logprob: -3.5480704307556152
    5. '])' → logprob: -4.173070430755615
    6. 'a' → logprob: -4.673070430755615
    7. '[]' → logprob: -5.048070430755615
    8. '(' → logprob: -5.173070430755615
    9. 'True' → logprob: -5.298070430755615
    10. '-' → logprob: -5.673070430755615

Token 114: ']),' (ID: 19560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.570924699306488
    2. ']),' → logprob: -0.945924699306488
    3. ',' → logprob: -3.695924758911133
    4. '])]' → logprob: -4.445924758911133
    5. ']' → logprob: -4.945924758911133
    6. '])),' → logprob: -6.945924758911133
    7. '0' → logprob: -7.570924758911133
    8. ')]' → logprob: -8.195924758911133
    9. ']))' → logprob: -8.570924758911133
    10. ')' → logprob: -8.945924758911133

Token 115: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.264407753944397
    2. ' (' → logprob: -1.639407753944397
    3. '1' → logprob: -4.514407634735107
    4. '[' → logprob: -4.514407634735107
    5. ' ' → logprob: -5.389407634735107
    6. ' [' → logprob: -5.514407634735107
    7. '[]' → logprob: -6.514407634735107
    8. '[(' → logprob: -6.639407634735107
    9. '0' → logprob: -7.389407634735107
    10. ' [(' → logprob: -7.639407634735107

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003735706675797701
    2. '(' → logprob: -6.628735542297363
    3. '2' → logprob: -7.753735542297363
    4. '18' → logprob: -7.753735542297363
    5. '0' → logprob: -8.378735542297363
    6. 'MAX' → logprob: -8.378735542297363
    7. 'b' → logprob: -8.878735542297363
    8. 'a' → logprob: -9.003735542297363
    9. '17' → logprob: -9.253735542297363
    10. '3' → logprob: -9.378735542297363

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016539888747502118
    2. ' ,' → logprob: -8.875164985656738
    3. '<|end|>' → logprob: -11.500164985656738
    4. ',[' → logprob: -12.375164985656738
    5. ',
' → logprob: -12.750164985656738
    6. ',(' → logprob: -12.875164985656738
    7. ' ' → logprob: -13.000164985656738
    8. ',['' → logprob: -15.125164985656738
    9. ',

' → logprob: -15.312664985656738
    10. '[' → logprob: -15.312664985656738

Token 118: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4456912875175476
    2. '[' → logprob: -1.0706913471221924
    3. '[]' → logprob: -5.570691108703613
    4. ' [])' → logprob: -5.695691108703613
    5. '[a' → logprob: -6.070691108703613
    6. ' []' → logprob: -6.695691108703613
    7. ' ' → logprob: -7.320691108703613
    8. '[-' → logprob: -7.695691108703613
    9. '[n' → logprob: -7.695691108703613
    10. '[])' → logprob: -7.820691108703613

Token 119: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09006541967391968
    2. '0' → logprob: -2.7150654792785645
    3. 'b' → logprob: -5.3400654792785645
    4. 'n' → logprob: -5.7150654792785645
    5. 'MAX' → logprob: -5.7150654792785645
    6. '-' → logprob: -6.3400654792785645
    7. 'a' → logprob: -6.3400654792785645
    8. '2' → logprob: -6.5900654792785645
    9. '(' → logprob: -7.3400654792785645
    10. '3' → logprob: -8.340065002441406

Token 120: ',' (ID: 11)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6168881058692932
    2. ']),' → logprob: -0.9918881058692932
    3. '])]' → logprob: -2.7418880462646484
    4. ',' → logprob: -3.7418880462646484
    5. ' ])' → logprob: -8.366888046264648
    6. '1' → logprob: -8.616888046264648
    7. '])]
' → logprob: -8.866888046264648
    8. ']' → logprob: -9.116888046264648
    9. ' ]' → logprob: -9.241888046264648
    10. ']))' → logprob: -9.741888046264648

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11522142589092255
    2. ' ' → logprob: -2.3652215003967285
    3. '0' → logprob: -4.3652215003967285
    4. '2' → logprob: -6.7402215003967285
    5. '-' → logprob: -7.9902215003967285
    6. '])' → logprob: -9.11522102355957
    7. '3' → logprob: -9.17772102355957
    8. 'b' → logprob: -9.67772102355957
    9. ' -' → logprob: -10.05272102355957
    10. '4' → logprob: -10.30272102355957

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017403896199539304
    2. '0' → logprob: -7.126740455627441
    3. ' ' → logprob: -8.126740455627441
    4. '-' → logprob: -8.251740455627441
    5. '2' → logprob: -8.626740455627441
    6. '])' → logprob: -10.126740455627441
    7. '3' → logprob: -10.251740455627441
    8. '(' → logprob: -11.501740455627441
    9. '
' → logprob: -11.501740455627441
    10. '4' → logprob: -11.751740455627441

Token 123: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0665084570646286
    2. '])]' → logprob: -3.0665085315704346
    3. ']),' → logprob: -4.0665082931518555
    4. ')])' → logprob: -8.191508293151855
    5. '])]
' → logprob: -9.191508293151855
    6. ' ])' → logprob: -9.316508293151855
    7. ']))' → logprob: -10.566508293151855
    8. ')]' → logprob: -10.691508293151855
    9. ']' → logprob: -10.691508293151855
    10. ',' → logprob: -10.691508293151855

Token 124: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.01973620243370533
    2. ')],' → logprob: -4.019736289978027
    3. '])' → logprob: -7.144736289978027
    4. '),' → logprob: -8.269736289978027
    5. ',' → logprob: -8.769736289978027
    6. ' ],' → logprob: -9.019736289978027
    7. ']' → logprob: -9.769736289978027
    8. ')])' → logprob: -10.144736289978027
    9. ')]' → logprob: -10.144736289978027
    10. '},' → logprob: -10.269736289978027

Token 125: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1464707851409912
    2. ' r' → logprob: -2.021470785140991
    3. 's' → logprob: -5.89647102355957
    4. ' s' → logprob: -6.89647102355957
    5. ')' → logprob: -12.02147102355957
    6. '{' → logprob: -12.39647102355957
    7. 'd' → logprob: -13.02147102355957
    8. ' ' → logprob: -13.27147102355957
    9. ' d' → logprob: -13.33397102355957
    10. 'a' → logprob: -13.77147102355957

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4987974029500037e-05
    2. ')
' → logprob: -10.750024795532227
    3. ' )' → logprob: -13.250024795532227
    4. '))' → logprob: -14.500024795532227
    5. ')

' → logprob: -15.125024795532227
    6. ',' → logprob: -15.375024795532227
    7. ');' → logprob: -15.500024795532227
    8. ')#' → logprob: -15.750024795532227
    9. '),' → logprob: -15.875024795532227
    10. ',)' → logprob: -17.250024795532227

Token 127: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.6782710552215576
    2. ')' → logprob: -0.8032710552215576
    3. 's' → logprob: -4.928271293640137
    4. ')
' → logprob: -5.053271293640137
    5. '(tuple' → logprob: -5.053271293640137
    6. 'for' → logprob: -5.428271293640137
    7. ',' → logprob: -5.553271293640137
    8. ' tuple' → logprob: -5.678271293640137
    9. '[' → logprob: -6.303271293640137
    10. '#' → logprob: -6.803271293640137

Token 128: '_assign' (ID: 55018)
  Prédit: '_assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_assign' → logprob: -3.607391408877447e-05
    2. '_ass' → logprob: -10.875036239624023
    3. 'assign' → logprob: -11.125036239624023
    4. '_' → logprob: -14.375036239624023
    5. '_ASSIGN' → logprob: -14.625036239624023
    6. '_assignment' → logprob: -14.625036239624023
    7. 'Assign' → logprob: -15.250036239624023
    8. '.assign' → logprob: -16.500036239624023
    9. '(assign' → logprob: -17.000036239624023
    10. 'a' → logprob: -17.125036239624023

Token 129: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.0029140000697225332
    2. '([' → logprob: -6.627913951873779
    3. '[(' → logprob: -7.127913951873779
    4. '(s' → logprob: -8.627914428710938
    5. '([
' → logprob: -8.627914428710938
    6. '((' → logprob: -9.127914428710938
    7. '(((' → logprob: -9.877914428710938
    8. '(r' → logprob: -10.002914428710938
    9. '([]' → logprob: -10.127914428710938
    10. 's' → logprob: -10.252914428710938

Token 130: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6199366450309753
    2. '2' → logprob: -0.8699366450309753
    3. '(' → logprob: -3.61993670463562
    4. '1' → logprob: -4.369936466217041
    5. ' ' → logprob: -6.369936466217041
    6. ' (' → logprob: -7.369936466217041
    7. ')' → logprob: -8.2449369430542
    8. '3' → logprob: -8.8699369430542
    9. '  ' → logprob: -9.5574369430542
    10. '
' → logprob: -9.6199369430542

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013458272442221642
    2. ' ,' → logprob: -7.501345634460449
    3. '2' → logprob: -8.00134563446045
    4. '0' → logprob: -8.00134563446045
    5. '1' → logprob: -10.25134563446045
    6. '3' → logprob: -11.62634563446045
    7. '7' → logprob: -11.62634563446045
    8. ',
' → logprob: -11.75134563446045
    9. ' ' → logprob: -11.75134563446045
    10. '-' → logprob: -11.75134563446045

Token 132: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1823640614748001
    2. ' [' → logprob: -1.8073641061782837
    3. 'range' → logprob: -7.057363986968994
    4. '[]' → logprob: -7.432363986968994
    5. ' range' → logprob: -7.932363986968994
    6. ' ' → logprob: -8.432364463806152
    7. 'list' → logprob: -8.932364463806152
    8. ' list' → logprob: -9.557364463806152
    9. ' [])' → logprob: -9.932364463806152
    10. ' []' → logprob: -10.182364463806152

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31969448924064636
    2. '1' → logprob: -1.4446945190429688
    3. '2' → logprob: -3.5696945190429688
    4. ' ' → logprob: -5.944694519042969
    5. '-' → logprob: -6.444694519042969
    6. 'b' → logprob: -7.132194519042969
    7. '3' → logprob: -7.194694519042969
    8. 'a' → logprob: -7.382194519042969
    9. '])' → logprob: -7.632194519042969
    10. 'i' → logprob: -7.819694519042969

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012342800619080663
    2. ' ,' → logprob: -7.50123405456543
    3. '2' → logprob: -7.87623405456543
    4. '1' → logprob: -8.50123405456543
    5. ']),' → logprob: -10.25123405456543
    6. '])' → logprob: -10.37623405456543
    7. ' ' → logprob: -11.25123405456543
    8. ',
' → logprob: -11.75123405456543
    9. '3' → logprob: -13.25123405456543
    10. ']' → logprob: -13.75123405456543

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02685900591313839
    2. ' ' → logprob: -4.276858806610107
    3. '2' → logprob: -4.776858806610107
    4. '0' → logprob: -5.776858806610107
    5. '])' → logprob: -7.776858806610107
    6. '3' → logprob: -9.401859283447266
    7. '-' → logprob: -9.589359283447266
    8. ',' → logprob: -9.651859283447266
    9. ']),' → logprob: -10.464359283447266
    10. ']])' → logprob: -10.464359283447266

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021130792796611786
    2. '0' → logprob: -4.646130561828613
    3. '2' → logprob: -4.646130561828613
    4. ' ' → logprob: -6.771130561828613
    5. '])' → logprob: -8.521130561828613
    6. '-' → logprob: -9.646130561828613
    7. '3' → logprob: -9.646130561828613
    8. 'b' → logprob: -9.771130561828613
    9. 'a' → logprob: -10.333630561828613
    10. ']])' → logprob: -11.458630561828613

Token 137: '])' (ID: 4636)
  Prédit: ']),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.18123607337474823
    2. '])' → logprob: -1.8062360286712646
    3. '])]' → logprob: -6.931236267089844
    4. ')]' → logprob: -8.806236267089844
    5. ']),
' → logprob: -8.931236267089844
    6. ']' → logprob: -10.056236267089844
    7. '2' → logprob: -10.556236267089844
    8. ')],' → logprob: -10.556236267089844
    9. ' ]' → logprob: -10.556236267089844
    10. ',' → logprob: -10.931236267089844

Token 138: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017812862992286682
    2. '],' → logprob: -4.142812728881836
    3. ' ,' → logprob: -7.267812728881836
    4. '),' → logprob: -7.267812728881836
    5. ')],' → logprob: -8.267812728881836
    6. ' ],' → logprob: -10.517812728881836
    7. '])' → logprob: -10.767812728881836
    8. 's' → logprob: -10.892812728881836
    9. ']),' → logprob: -11.517812728881836
    10. ',),' → logprob: -11.892812728881836

Token 139: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2812388837337494
    2. 's' → logprob: -1.4062389135360718
    3. ' b' → logprob: -10.656238555908203
    4. 'b' → logprob: -10.781238555908203
    5. 'r' → logprob: -10.906238555908203
    6. ' r' → logprob: -11.406238555908203
    7. ')' → logprob: -12.406238555908203
    8. 'a' → logprob: -12.531238555908203
    9. ' a' → logprob: -13.156238555908203
    10. ')s' → logprob: -13.843738555908203

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -13.75000286102295
    3. ' )' → logprob: -14.00000286102295
    4. '))' → logprob: -14.12500286102295
    5. ')}' → logprob: -15.62500286102295
    6. ')#' → logprob: -16.375003814697266
    7. ')`' → logprob: -17.250003814697266
    8. ')return' → logprob: -17.500003814697266
    9. ')

' → logprob: -17.625003814697266
    10. '}' → logprob: -17.625003814697266

Token 141: 'p' (ID: 79)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520565986633301
    2. '
' → logprob: -2.50205659866333
    3. 'for' → logprob: -3.00205659866333
    4. '<|end|>' → logprob: -3.25205659866333
    5. '#' → logprob: -4.37705659866333
    6. 'r' → logprob: -5.50205659866333
    7. ' for' → logprob: -5.50205659866333
    8. ')
' → logprob: -5.62705659866333
    9. 'n' → logprob: -5.62705659866333
    10. ',' → logprob: -5.75205659866333

Token 142: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03310784697532654
    2. ' =' → logprob: -4.658107757568359
    3. '=' → logprob: -4.783107757568359
    4. 'ro' → logprob: -5.283107757568359
    5. 'rod' → logprob: -6.033107757568359
    6. 'range' → logprob: -7.158107757568359
    7. 'ow' → logprob: -7.783107757568359
    8. 'er' → logprob: -8.03310775756836
    9. 'ar' → logprob: -8.03310775756836
    10. ',' → logprob: -8.15810775756836

Token 143: 'a' (ID: 64)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.24362827837467194
    2. ' =' → logprob: -1.7436282634735107
    3. '=' → logprob: -4.74362850189209
    4. 'ar' → logprob: -4.86862850189209
    5. 'os' → logprob: -5.86862850189209
    6. 'rod' → logprob: -5.99362850189209
    7. ',' → logprob: -6.11862850189209
    8. 'ro' → logprob: -6.24362850189209
    9. '0' → logprob: -6.36862850189209
    10. '1' → logprob: -6.36862850189209

Token 144: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7861759662628174
    2. ' =' → logprob: -1.5361759662628174
    3. 'ss' → logprob: -2.4111759662628174
    4. '=' → logprob: -2.4111759662628174
    5. 'dd' → logprob: -2.9111759662628174
    6. 'b' → logprob: -3.2861759662628174
    7. 's' → logprob: -4.411175727844238
    8. 'ir' → logprob: -4.661175727844238
    9. ',' → logprob: -4.911175727844238
    10. 'rr' → logprob: -5.411175727844238

Token 145: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2423712015151978
    2. '[a' → logprob: -2.617371082305908
    3. ' [' → logprob: -2.742371082305908
    4. '[(' → logprob: -2.867371082305908
    5. 'lambda' → logprob: -2.867371082305908
    6. 'list' → logprob: -3.367371082305908
    7. ' lambda' → logprob: -3.367371082305908
    8. '[n' → logprob: -3.367371082305908
    9. '(lambda' → logprob: -3.367371082305908
    10. '[b' → logprob: -3.617371082305908

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09121419489383698
    2. '1' → logprob: -3.091214179992676
    3. '[]' → logprob: -5.591214179992676
    4. 'False' → logprob: -5.591214179992676
    5. '-' → logprob: -5.716214179992676
    6. 'i' → logprob: -5.841214179992676
    7. 'a' → logprob: -5.841214179992676
    8. '(' → logprob: -5.966214179992676
    9. 'int' → logprob: -6.091214179992676
    10. 'n' → logprob: -6.091214179992676

Token 147: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02802799642086029
    2. ',' → logprob: -3.9030280113220215
    3. ']*' → logprob: -5.6530280113220215
    4. ' ]' → logprob: -6.6530280113220215
    5. ']*(' → logprob: -7.0280280113220215
    6. ' for' → logprob: -7.0280280113220215
    7. ']+' → logprob: -8.528027534484863
    8. '0' → logprob: -8.653027534484863
    9. 'for' → logprob: -9.028027534484863
    10. 'b' → logprob: -9.028027534484863

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4147772490978241
    2. ' ' → logprob: -1.7897772789001465
    3. '0' → logprob: -2.0397772789001465
    4. '2' → logprob: -4.1647772789001465
    5. '3' → logprob: -5.1647772789001465
    6. '4' → logprob: -5.9147772789001465
    7. 'a' → logprob: -5.9147772789001465
    8. 'b' → logprob: -6.0397772789001465
    9. '5' → logprob: -6.2897772789001465
    10. '6' → logprob: -6.7897772789001465

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21710234880447388
    2. '0' → logprob: -1.967102289199829
    3. 'b' → logprob: -4.342102527618408
    4. '2' → logprob: -4.467102527618408
    5. 'a' → logprob: -5.217102527618408
    6. 'n' → logprob: -5.467102527618408
    7. '3' → logprob: -5.592102527618408
    8. '-' → logprob: -6.217102527618408
    9. '17' → logprob: -6.217102527618408
    10. ' ' → logprob: -6.467102527618408

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23302175104618073
    2. ']' → logprob: -1.7330217361450195
    3. ' ,' → logprob: -3.7330217361450195
    4. ' ]' → logprob: -6.1080217361450195
    5. '1' → logprob: -6.2330217361450195
    6. '2' → logprob: -6.6080217361450195
    7. '0' → logprob: -6.7330217361450195
    8. ' ' → logprob: -8.73302173614502
    9. ']
' → logprob: -9.85802173614502
    10. '3' → logprob: -9.85802173614502

Token 151: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1135815382003784
    2. '1' → logprob: -1.2385815382003784
    3. '0' → logprob: -1.3635815382003784
    4. ' ' → logprob: -2.238581657409668
    5. ']' → logprob: -5.113581657409668
    6. '-' → logprob: -5.363581657409668
    7. '3' → logprob: -5.613581657409668
    8. '4' → logprob: -7.363581657409668
    9. 'None' → logprob: -7.426081657409668
    10. ' -' → logprob: -7.863581657409668

Token 152: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6143108606338501
    2. '1' → logprob: -1.23931086063385
    3. '0' → logprob: -1.98931086063385
    4. ' ' → logprob: -4.1143107414245605
    5. ']' → logprob: -5.4893107414245605
    6. '-' → logprob: -5.6143107414245605
    7. '3' → logprob: -5.8643107414245605
    8. 'None' → logprob: -6.9893107414245605
    9. '17' → logprob: -7.1143107414245605
    10. 'b' → logprob: -7.1143107414245605

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0648898258805275
    2. ']' → logprob: -2.939889907836914
    3. ' ,' → logprob: -4.939889907836914
    4. ' ]' → logprob: -7.314889907836914
    5. '4' → logprob: -7.814889907836914
    6. '6' → logprob: -7.939889907836914
    7. '7' → logprob: -7.939889907836914
    8. '2' → logprob: -8.189889907836914
    9. '3' → logprob: -8.564889907836914
    10. '5' → logprob: -8.689889907836914

Token 154: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7381870150566101
    2. '7' → logprob: -0.8631870150566101
    3. '2' → logprob: -2.863187074661255
    4. '4' → logprob: -3.738187074661255
    5. '6' → logprob: -4.863186836242676
    6. '5' → logprob: -4.863186836242676
    7. '3' → logprob: -6.613186836242676
    8. '8' → logprob: -7.238186836242676
    9. '1' → logprob: -7.363186836242676
    10. '9' → logprob: -8.113186836242676

Token 155: '2' (ID: 17)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.09523287415504456
    2. '2' → logprob: -2.8452329635620117
    3. '4' → logprob: -4.220232963562012
    4. '5' → logprob: -4.970232963562012
    5. '6' → logprob: -4.970232963562012
    6. '0' → logprob: -6.470232963562012
    7. '1' → logprob: -7.095232963562012
    8. '3' → logprob: -7.470232963562012
    9. ' ' → logprob: -7.720232963562012
    10. '15' → logprob: -8.532732963562012

Token 156: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3511376678943634
    2. ',' → logprob: -1.226137638092041
    3. ' ]' → logprob: -6.101137638092041
    4. ' ,' → logprob: -8.3511381149292
    5. '4' → logprob: -9.3511381149292
    6. '3' → logprob: -9.9761381149292
    7. '6' → logprob: -11.1011381149292
    8. ']
' → logprob: -11.7261381149292
    9. ' ' → logprob: -11.8511381149292
    10. '1' → logprob: -11.8511381149292

Token 157: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05275087058544159
    2. ']' → logprob: -4.177751064300537
    3. 'for' → logprob: -4.427751064300537
    4. 'def' → logprob: -4.802751064300537
    5. 'dp' → logprob: -6.427751064300537
    6. '#' → logprob: -6.427751064300537
    7. 'n' → logprob: -6.552751064300537
    8. ')' → logprob: -6.927751064300537
    9. 'res' → logprob: -7.177751064300537
    10. ',' → logprob: -7.177751064300537

Token 158: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01643361896276474
    2. '2' → logprob: -4.1414337158203125
    3. '3' → logprob: -8.766433715820312
    4. 'b' → logprob: -9.016433715820312
    5. '=' → logprob: -10.141433715820312
    6. 'p' → logprob: -10.766433715820312
    7. '4' → logprob: -10.766433715820312
    8. ' =' → logprob: -11.641433715820312
    9. 'a' → logprob: -12.516433715820312
    10. '0' → logprob: -13.203933715820312

Token 159: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01291219424456358
    2. ' =' → logprob: -4.762912273406982
    3. 'b' → logprob: -5.762912273406982
    4. '=' → logprob: -6.887912273406982
    5. '3' → logprob: -10.512911796569824
    6. '2' → logprob: -11.137911796569824
    7. '6' → logprob: -11.387911796569824
    8. '1' → logprob: -11.762911796569824
    9. 'c' → logprob: -11.887911796569824
    10. ' ' → logprob: -12.262911796569824

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052929348312318325
    2. '=' → logprob: -5.255292892456055
    3. ' =[' → logprob: -9.880292892456055
    4. '=[' → logprob: -12.380292892456055
    5. '[' → logprob: -14.005292892456055
    6. ',' → logprob: -14.005292892456055
    7. ' ' → logprob: -14.380292892456055
    8. '=[]' → logprob: -14.880292892456055
    9. ' [' → logprob: -15.505292892456055
    10. ' =
' → logprob: -15.505292892456055

Token 161: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12701378762722015
    2. ' [' → logprob: -2.127013683319092
    3. ' ' → logprob: -10.37701416015625
    4. 'p' → logprob: -11.00201416015625
    5. '[]' → logprob: -11.50201416015625
    6. ' p' → logprob: -11.62701416015625
    7. '[-' → logprob: -12.87701416015625
    8. '[
' → logprob: -13.00201416015625
    9. '[p' → logprob: -13.25201416015625
    10. '0' → logprob: -13.75201416015625

Token 162: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09181554615497589
    2. '1' → logprob: -3.34181547164917
    3. '3' → logprob: -3.46681547164917
    4. '2' → logprob: -4.09181547164917
    5. ' ' → logprob: -5.84181547164917
    6. '4' → logprob: -7.21681547164917
    7. '7' → logprob: -8.216815948486328
    8. ']' → logprob: -8.466815948486328
    9. '6' → logprob: -9.529315948486328
    10. '5' → logprob: -9.591815948486328

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00324473949149251
    2. ' ,' → logprob: -5.878244876861572
    3. '2' → logprob: -8.378244400024414
    4. '1' → logprob: -9.753244400024414
    5. ' ' → logprob: -10.003244400024414
    6. ']' → logprob: -10.253244400024414
    7. '3' → logprob: -10.378244400024414
    8. '0' → logprob: -11.128244400024414
    9. '4' → logprob: -11.503244400024414
    10. ',
' → logprob: -12.378244400024414

Token 164: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42058056592941284
    2. '0' → logprob: -1.4205806255340576
    3. '1' → logprob: -2.2955806255340576
    4. ' ' → logprob: -7.2955803871154785
    5. '4' → logprob: -8.670580863952637
    6. '7' → logprob: -9.920580863952637
    7. '3' → logprob: -9.983080863952637
    8. '5' → logprob: -10.108080863952637
    9. '6' → logprob: -10.733080863952637
    10. '8' → logprob: -11.983080863952637

Token 165: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5367379784584045
    2. '0' → logprob: -1.1617379188537598
    3. '1' → logprob: -2.2867379188537598
    4. ' ' → logprob: -7.28673791885376
    5. '4' → logprob: -10.161738395690918
    6. '7' → logprob: -10.411738395690918
    7. '3' → logprob: -11.099238395690918
    8. '5' → logprob: -11.349238395690918
    9. '6' → logprob: -11.974238395690918
    10. '```' → logprob: -12.974238395690918

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00492466613650322
    2. ' ,' → logprob: -5.379924774169922
    3. '2' → logprob: -8.629924774169922
    4. '3' → logprob: -9.504924774169922
    5. ' ' → logprob: -11.254924774169922
    6. '0' → logprob: -11.379924774169922
    7. ']' → logprob: -12.004924774169922
    8. '1' → logprob: -12.004924774169922
    9. '4' → logprob: -12.129924774169922
    10. '7' → logprob: -12.629924774169922

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0755535140633583
    2. '2' → logprob: -3.2005534172058105
    3. ' ' → logprob: -3.4505534172058105
    4. '4' → logprob: -8.575553894042969
    5. '7' → logprob: -10.013053894042969
    6. '1' → logprob: -10.388053894042969
    7. '6' → logprob: -11.263053894042969
    8. '5' → logprob: -11.450553894042969
    9. '  ' → logprob: -12.888053894042969
    10. '3' → logprob: -13.263053894042969

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03809278458356857
    2. '2' → logprob: -3.288092851638794
    3. '3' → logprob: -11.038092613220215
    4. '4' → logprob: -11.600592613220215
    5. ' ' → logprob: -11.663092613220215
    6. '7' → logprob: -11.975592613220215
    7. '1' → logprob: -12.475592613220215
    8. '5' → logprob: -13.038092613220215
    9. '6' → logprob: -13.288092613220215
    10. '```' → logprob: -15.038092613220215

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017569332849234343
    2. ' ,' → logprob: -6.3767571449279785
    3. '])' → logprob: -10.75175666809082
    4. ']' → logprob: -11.50175666809082
    5. '2' → logprob: -11.50175666809082
    6. '3' → logprob: -11.62675666809082
    7. '4' → logprob: -12.87675666809082
    8. '1' → logprob: -14.87675666809082
    9. '5' → logprob: -15.12675666809082
    10. ' ])' → logprob: -15.37675666809082

Token 170: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006471486412920058
    2. ' ' → logprob: -7.375647068023682
    3. '1' → logprob: -11.37564754486084
    4. '4' → logprob: -12.68814754486084
    5. '3' → logprob: -14.00064754486084
    6. '0' → logprob: -14.00064754486084
    7. '```' → logprob: -14.43814754486084
    8. '7' → logprob: -14.81314754486084
    9. '5' → logprob: -14.93814754486084
    10. '   ' → logprob: -15.06314754486084

Token 171: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.35837464465294e-05
    2. '1' → logprob: -10.812543869018555
    3. '3' → logprob: -11.375043869018555
    4. ' ' → logprob: -12.062543869018555
    5. '0' → logprob: -13.250043869018555
    6. '4' → logprob: -14.187543869018555
    7. '```' → logprob: -15.000043869018555
    8. '5' → logprob: -15.250043869018555
    9. '7' → logprob: -15.375043869018555
    10. '-' → logprob: -15.875043869018555

Token 172: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001006846665404737
    2. ']
' → logprob: -7.001007080078125
    3. ' ]' → logprob: -10.126007080078125
    4. ',' → logprob: -10.376007080078125
    5. 'p' → logprob: -12.001007080078125
    6. '4' → logprob: -12.251007080078125
    7. ']

' → logprob: -12.751007080078125
    8. '3' → logprob: -13.001007080078125
    9. ')' → logprob: -13.501007080078125
    10. '6' → logprob: -14.251007080078125

Token 173: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.21325445175170898
    2. ' ' → logprob: -2.088254451751709
    3. '5' → logprob: -2.713254451751709
    4. '1' → logprob: -6.838254451751709
    5. ']' → logprob: -8.463254928588867
    6. '3' → logprob: -8.463254928588867
    7. '7' → logprob: -9.213254928588867
    8. '6' → logprob: -9.463254928588867
    9. '])' → logprob: -9.713254928588867
    10. '0' → logprob: -10.463254928588867

Token 174: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.048306502401828766
    2. '5' → logprob: -3.798306465148926
    3. '3' → logprob: -4.173306465148926
    4. ' ' → logprob: -5.673306465148926
    5. '1' → logprob: -5.923306465148926
    6. ')' → logprob: -7.298306465148926
    7. ']' → logprob: -7.548306465148926
    8. '7' → logprob: -7.548306465148926
    9. '0' → logprob: -7.673306465148926
    10. '6' → logprob: -8.110806465148926

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07435230910778046
    2. ']' → logprob: -2.699352264404297
    3. '3' → logprob: -5.824352264404297
    4. ' ,' → logprob: -7.199352264404297
    5. '4' → logprob: -8.449352264404297
    6. ' ]' → logprob: -8.699352264404297
    7. '1' → logprob: -8.949352264404297
    8. '5' → logprob: -9.824352264404297
    9. ' ' → logprob: -10.574352264404297
    10. '0' → logprob: -10.699352264404297

Token 176: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8222281336784363
    2. '1' → logprob: -1.322228193283081
    3. '0' → logprob: -1.947228193283081
    4. ' ' → logprob: -1.947228193283081
    5. '4' → logprob: -5.072227954864502
    6. '2' → logprob: -6.197227954864502
    7. '5' → logprob: -8.57222843170166
    8. ',' → logprob: -9.25972843170166
    9. '<|end|>' → logprob: -11.50972843170166
    10. '7' → logprob: -11.57222843170166

Token 177: '0' (ID: 15)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.12405666708946228
    2. '0' → logprob: -2.999056577682495
    3. '1' → logprob: -2.999056577682495
    4. '4' → logprob: -4.624056816101074
    5. '2' → logprob: -5.499056816101074
    6. ' ' → logprob: -6.374056816101074
    7. '5' → logprob: -6.749056816101074
    8. '6' → logprob: -9.311556816101074
    9. '7' → logprob: -10.436556816101074
    10. ',' → logprob: -10.936556816101074

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027033647522330284
    2. ']' → logprob: -4.027033805847168
    3. '3' → logprob: -5.027033805847168
    4. ' ,' → logprob: -6.527033805847168
    5. '4' → logprob: -7.652033805847168
    6. '1' → logprob: -9.152033805847168
    7. ' ]' → logprob: -9.777033805847168
    8. '2' → logprob: -10.152033805847168
    9. ' ' → logprob: -10.277033805847168
    10. '5' → logprob: -10.402033805847168

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13156171143054962
    2. '3' → logprob: -2.131561756134033
    3. ' ' → logprob: -6.381561756134033
    4. '2' → logprob: -6.631561756134033
    5. '4' → logprob: -7.131561756134033
    6. '0' → logprob: -7.381561756134033
    7. '5' → logprob: -9.006561279296875
    8. '7' → logprob: -10.944061279296875
    9. ',' → logprob: -11.319061279296875
    10. '<|end|>' → logprob: -12.131561279296875

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25604313611984253
    2. '3' → logprob: -1.5060431957244873
    3. ' ' → logprob: -6.631042957305908
    4. '2' → logprob: -6.756042957305908
    5. '4' → logprob: -6.881042957305908
    6. '0' → logprob: -8.256043434143066
    7. '5' → logprob: -8.506043434143066
    8. ',' → logprob: -10.193543434143066
    9. '7' → logprob: -10.193543434143066
    10. '6' → logprob: -10.318543434143066

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007588287349790335
    2. ']' → logprob: -5.2575883865356445
    3. ' ,' → logprob: -6.8825883865356445
    4. '3' → logprob: -6.8825883865356445
    5. '4' → logprob: -8.757588386535645
    6. '])' → logprob: -10.507588386535645
    7. '2' → logprob: -10.632588386535645
    8. ' ]' → logprob: -10.757588386535645
    9. '1' → logprob: -10.882588386535645
    10. '5' → logprob: -11.382588386535645

Token 182: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01338738203048706
    2. ' ' → logprob: -5.013387203216553
    3. '1' → logprob: -6.013387203216553
    4. '7' → logprob: -6.138387203216553
    5. '4' → logprob: -7.013387203216553
    6. '5' → logprob: -7.138387203216553
    7. '2' → logprob: -8.513387680053711
    8. '6' → logprob: -9.263387680053711
    9. '0' → logprob: -9.888387680053711
    10. ',' → logprob: -14.388387680053711

Token 183: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0019353042589500546
    2. '1' → logprob: -6.7519354820251465
    3. '7' → logprob: -8.251935005187988
    4. '2' → logprob: -8.501935005187988
    5. ' ' → logprob: -8.626935005187988
    6. '4' → logprob: -9.876935005187988
    7. '5' → logprob: -10.126935005187988
    8. '0' → logprob: -11.251935005187988
    9. '6' → logprob: -11.251935005187988
    10. '...' → logprob: -14.751935005187988

Token 184: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010207825107499957
    2. ',' → logprob: -7.001020908355713
    3. ' ]' → logprob: -9.251020431518555
    4. '4' → logprob: -12.626020431518555
    5. '])' → logprob: -13.126020431518555
    6. ')' → logprob: -13.501020431518555
    7. ']
' → logprob: -13.751020431518555
    8. '7' → logprob: -14.376020431518555
    9. '[' → logprob: -14.501020431518555
    10. ')]' → logprob: -14.501020431518555

Token 185: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.23118603229522705
    2. ')' → logprob: -2.4811859130859375
    3. '#' → logprob: -3.3561859130859375
    4. ']' → logprob: -3.9811859130859375
    5. 'n' → logprob: -4.8561859130859375
    6. 'def' → logprob: -4.8561859130859375
    7. 'r' → logprob: -5.2311859130859375
    8. '[' → logprob: -5.3561859130859375
    9. 't' → logprob: -5.3561859130859375
    10. 'x' → logprob: -5.4811859130859375

Token 186: ' Mé' (ID: 23435)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9036738872528076
    2. 'for' → logprob: -1.7786738872528076
    3. ')' → logprob: -2.0286738872528076
    4. '#' → logprob: -2.7786738872528076
    5. 'p' → logprob: -2.9036738872528076
    6. 'x' → logprob: -3.5286738872528076
    7. 'r' → logprob: -4.153674125671387
    8. 'n' → logprob: -4.403674125671387
    9. 'dp' → logprob: -4.903674125671387
    10. ' for' → logprob: -4.903674125671387

Token 187: 'th' (ID: 404)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8465668559074402
    2. 'def' → logprob: -1.596566915512085
    3. 'th' → logprob: -1.971566915512085
    4. 'mo' → logprob: -2.346566915512085
    5. 't' → logprob: -3.096566915512085
    6. 'm' → logprob: -3.221566915512085
    7. 'd' → logprob: -4.471566677093506
    8. 'a' → logprob: -5.096566677093506
    9. '```' → logprob: -5.471566677093506
    10. 'moire' → logprob: -5.596566677093506

Token 188: 'ode' (ID: 676)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002703112317249179
    2. '#' → logprob: -6.6277031898498535
    3. 'd' → logprob: -7.5027031898498535
    4. 'ode' → logprob: -8.377702713012695
    5. 'de' → logprob: -8.502702713012695
    6. 'od' → logprob: -9.002702713012695
    7. 'odu' → logprob: -10.002702713012695
    8. 'a' → logprob: -10.377702713012695
    9. ' def' → logprob: -10.502702713012695
    10. '...' → logprob: -11.002702713012695

Token 189: ' inutile' (ID: 157748)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011686748825013638
    2. ' def' → logprob: -5.8866868019104
    3. 'p' → logprob: -6.6366868019104
    4. ' =' → logprob: -6.7616868019104
    5. '#' → logprob: -6.8866868019104
    6. ')' → logprob: -7.0116868019104
    7. 's' → logprob: -7.0116868019104
    8. ',' → logprob: -7.3866868019104
    9. '=' → logprob: -7.5116868019104
    10. ']' → logprob: -7.7616868019104

Token 190: 'ment' (ID: 508)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004074601456522942
    2. ' def' → logprob: -6.379074573516846
    3. ':' → logprob: -7.379074573516846
    4. ',' → logprob: -7.629074573516846
    5. '<|end|>' → logprob: -8.754075050354004
    6. 's' → logprob: -9.129075050354004
    7. ')' → logprob: -9.129075050354004
    8. '#' → logprob: -9.129075050354004
    9. 'de' → logprob: -9.254075050354004
    10. '...' → logprob: -9.254075050354004

Token 191: ' imb' (ID: 63592)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06312590092420578
    2. ' def' → logprob: -3.8131258487701416
    3. ' complète' → logprob: -5.688126087188721
    4. 's' → logprob: -5.938126087188721
    5. ' défin' → logprob: -6.063126087188721
    6. '_' → logprob: -6.063126087188721
    7. ' complexe' → logprob: -6.188126087188721
    8. 'complex' → logprob: -6.313126087188721
    9. 'd' → logprob: -6.438126087188721
    10. ',' → logprob: -6.438126087188721

Token 192: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.004425251390784979
    2. 'r' → logprob: -6.629425048828125
    3. 'ro' → logprob: -7.754425048828125
    4. 'ron' → logprob: -7.879425048828125
    5. 'rique' → logprob: -8.254425048828125
    6. 'rou' → logprob: -8.379425048828125
    7. 'ar' → logprob: -8.754425048828125
    8. 'ut' → logprob: -8.879425048828125
    9. 'ru' → logprob: -8.879425048828125
    10. 'roc' → logprob: -9.254425048828125

Token 193: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -1.32872474193573
    2. 'd' → logprob: -1.45372474193573
    3. 'ée' → logprob: -1.70372474193573
    4. 'ed' → logprob: -1.95372474193573
    5. 'def' → logprob: -2.8287248611450195
    6. 'é' → logprob: -3.4537248611450195
    7. 'éd' → logprob: -3.5787248611450195
    8. 'dee' → logprob: -3.8287248611450195
    9. 'érée' → logprob: -4.7037248611450195
    10. 'rée' → logprob: -5.0787248611450195

Token 194: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009800514671951532
    2. ' def' → logprob: -7.125979900360107
    3. ':' → logprob: -10.375980377197266
    4. 'de' → logprob: -10.500980377197266
    5. ':def' → logprob: -10.625980377197266
    6. 'for' → logprob: -10.750980377197266
    7. ',' → logprob: -11.125980377197266
    8. '
' → logprob: -11.250980377197266
    9. ' for' → logprob: -11.625980377197266
    10. 'ndef' → logprob: -12.125980377197266

Token 195: ' sw' (ID: 2766)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -2.5281014442443848
    2. 'calcul' → logprob: -2.6531014442443848
    3. 'le' → logprob: -2.7781014442443848
    4. '#' → logprob: -2.7781014442443848
    5. 'l' → logprob: -2.7781014442443848
    6. 'per' → logprob: -3.1531014442443848
    7. 'p' → logprob: -3.1531014442443848
    8. 'def' → logprob: -3.5281014442443848
    9. ' la' → logprob: -3.6531014442443848
    10. 'dé' → logprob: -3.9031014442443848

Token 196: 'iz' (ID: 482)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.80253666639328
    2. 'apping' → logprob: -0.92753666639328
    3. 'aps' → logprob: -2.052536725997925
    4. 'itch' → logprob: -3.927536725997925
    5. 'aping' → logprob: -6.052536487579346
    6. 'izzle' → logprob: -6.927536487579346
    7. 'app' → logprob: -7.177536487579346
    8. 'izzling' → logprob: -7.615036487579346
    9. 'a' → logprob: -8.240036964416504
    10. 'appings' → logprob: -8.302536964416504

Token 197: '
' (ID: 198)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.7622013688087463
    2. 'p' → logprob: -1.2622013092041016
    3. 'ard' → logprob: -2.2622013092041016
    4. 'e' → logprob: -3.6372013092041016
    5. 'rd' → logprob: -3.8872013092041016
    6. 'def' → logprob: -4.137201309204102
    7. 'd' → logprob: -4.262201309204102
    8. 'r' → logprob: -5.199701309204102
    9. 'ze' → logprob: -5.199701309204102
    10. ' =' → logprob: -5.387201309204102

Token 198: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0040268683806061745
    2. ' def' → logprob: -6.004026889801025
    3. 'p' → logprob: -7.254026889801025
    4. 's' → logprob: -7.879026889801025
    5. 'd' → logprob: -9.379026412963867
    6. ' ' → logprob: -9.879026412963867
    7. 'de' → logprob: -10.004026412963867
    8. ' 
' → logprob: -10.379026412963867
    9. 'sw' → logprob: -10.379026412963867
    10. ' p' → logprob: -10.754026412963867

Token 199: ' sw' (ID: 2766)
  Prédit: ' sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sw' → logprob: -0.268117219209671
    2. 'sw' → logprob: -1.5181171894073486
    3. ' swirl' → logprob: -5.393117427825928
    4. ' swap' → logprob: -5.518117427825928
    5. '_sw' → logprob: -6.518117427825928
    6. 'swap' → logprob: -6.768117427825928
    7. 's' → logprob: -7.518117427825928
    8. 'Sw' → logprob: -7.643117427825928
    9. '	sw' → logprob: -7.643117427825928
    10. ' swi' → logprob: -8.08061695098877

Token 200: 'iz' (ID: 482)
  Prédit: 'iz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iz' → logprob: -0.0028208012226969004
    2. 'izzle' → logprob: -6.37782096862793
    3. 'i' → logprob: -7.50282096862793
    4. 'izz' → logprob: -8.62782096862793
    5. 'ap' → logprob: -9.37782096862793
    6. 'ip' → logprob: -9.87782096862793
    7. 'a' → logprob: -10.50282096862793
    8. '\' → logprob: -10.62782096862793
    9. '(i' → logprob: -10.75282096862793
    10. ' iz' → logprob: -10.75282096862793

Token 201: '(n' (ID: 2406)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.20138634741306305
    2. '(a' → logprob: -2.9513864517211914
    3. '(i' → logprob: -3.7013864517211914
    4. '(t' → logprob: -3.9513864517211914
    5. '(p' → logprob: -4.201386451721191
    6. '(s' → logprob: -4.326386451721191
    7. '(v' → logprob: -4.326386451721191
    8. '(' → logprob: -4.826386451721191
    9. '(arr' → logprob: -4.826386451721191
    10. '(l' → logprob: -4.951386451721191

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004663899540901184
    2. '):' → logprob: -6.004663944244385
    3. ' ,' → logprob: -6.754663944244385
    4. ':' → logprob: -9.129663467407227
    5. 'x' → logprob: -9.129663467407227
    6. 'a' → logprob: -9.254663467407227
    7. 'e' → logprob: -9.504663467407227
    8. ',x' → logprob: -9.504663467407227
    9. ',k' → logprob: -9.629663467407227
    10. ',a' → logprob: -9.629663467407227

Token 203: ' z' (ID: 579)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.44059205055236816
    2. 'i' → logprob: -2.315592050552368
    3. 'a' → logprob: -3.190592050552368
    4. 'mask' → logprob: -3.440592050552368
    5. 'x' → logprob: -3.440592050552368
    6. 'idx' → logprob: -3.690592050552368
    7. 'm' → logprob: -3.690592050552368
    8. 'k' → logprob: -4.190591812133789
    9. 't' → logprob: -4.690591812133789
    10. 's' → logprob: -4.815591812133789

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045157190412282944
    2. '):' → logprob: -3.9201571941375732
    3. '):
' → logprob: -4.045156955718994
    4. 'x' → logprob: -5.420156955718994
    5. 'ex' → logprob: -7.170156955718994
    6. ' ,' → logprob: -7.545156955718994
    7. '0' → logprob: -8.795157432556152
    8. ',
' → logprob: -9.420157432556152
    9. 's' → logprob: -9.420157432556152
    10. '1' → logprob: -9.795157432556152

Token 205: ' d' (ID: 272)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.010833740234375
    2. 'm' → logprob: -2.260833740234375
    3. 'i' → logprob: -2.510833740234375
    4. 'x' → logprob: -2.885833740234375
    5. 'a' → logprob: -3.135833740234375
    6. 's' → logprob: -3.510833740234375
    7. ' p' → logprob: -3.510833740234375
    8. 't' → logprob: -3.635833740234375
    9. 'k' → logprob: -3.760833740234375
    10. 'mask' → logprob: -4.135833740234375

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8853819966316223
    2. '):
' → logprob: -1.1353819370269775
    3. 'x' → logprob: -2.7603819370269775
    4. '=' → logprob: -2.8853819370269775
    5. ',' → logprob: -3.2603819370269775
    6. 'ef' → logprob: -3.3853819370269775
    7. 'st' → logprob: -4.135382175445557
    8. 'ata' → logprob: -4.885382175445557
    9. 'e' → logprob: -5.135382175445557
    10. '0' → logprob: -5.135382175445557

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2997215688228607
    2. ' if' → logprob: -1.549721598625183
    3. ' return' → logprob: -3.2997214794158936
    4. 'if' → logprob: -5.299721717834473
    5. 'return' → logprob: -6.674721717834473
    6. '	if' → logprob: -7.049721717834473
    7. ' r' → logprob: -7.299721717834473
    8. '	return' → logprob: -7.799721717834473
    9. ' i' → logprob: -7.924721717834473
    10. 'r' → logprob: -8.049721717834473

Token 208: ' (' (ID: 350)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6759575605392456
    2. 'if' → logprob: -1.3009575605392456
    3. 'r' → logprob: -2.425957679748535
    4. ' return' → logprob: -3.050957679748535
    5. '   ' → logprob: -3.675957679748535
    6. ' if' → logprob: -3.800957679748535
    7. 'res' → logprob: -4.925957679748535
    8. ' r' → logprob: -5.425957679748535
    9. ' res' → logprob: -5.425957679748535
    10. 'ret' → logprob: -5.800957679748535

Token 209: 'x' (ID: 87)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6531962752342224
    2. 'z' → logprob: -1.1531963348388672
    3. 'x' → logprob: -3.153196334838867
    4. 'd' → logprob: -3.153196334838867
    5. 'a' → logprob: -3.403196334838867
    6. 'p' → logprob: -4.528196334838867
    7. '(z' → logprob: -5.278196334838867
    8. '(n' → logprob: -5.653196334838867
    9. 'r' → logprob: -5.903196334838867
    10. 'i' → logprob: -6.028196334838867

Token 210: 'pos' (ID: 1103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004018091131001711
    2. ',y' → logprob: -6.004018306732178
    3. ',)' → logprob: -7.254018306732178
    4. ')' → logprob: -8.25401782989502
    5. ' ,' → logprob: -8.87901782989502
    6. '1' → logprob: -9.00401782989502
    7. 'y' → logprob: -9.50401782989502
    8. '0' → logprob: -9.62901782989502
    9. ',
' → logprob: -11.00401782989502
    10. ' y' → logprob: -11.12901782989502

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017384823877364397
    2. ',y' → logprob: -7.126738548278809
    3. ' ,' → logprob: -7.876738548278809
    4. ')' → logprob: -8.376738548278809
    5. ',)' → logprob: -10.001738548278809
    6. ',z' → logprob: -10.126738548278809
    7. '1' → logprob: -10.376738548278809
    8. ' ' → logprob: -10.376738548278809
    9. '),' → logprob: -10.626738548278809
    10. '0' → logprob: -11.126738548278809

Token 212: ' ypos' (ID: 180845)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8038146495819092
    2. ' ypos' → logprob: -0.8038146495819092
    3. 'z' → logprob: -3.303814649581909
    4. 'yp' → logprob: -4.178814888000488
    5. ')' → logprob: -4.303814888000488
    6. ' y' → logprob: -5.241314888000488
    7. 'n' → logprob: -5.616314888000488
    8. 'x' → logprob: -5.741314888000488
    9. ' z' → logprob: -5.928814888000488
    10. 'pos' → logprob: -5.928814888000488

Token 213: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013863403350114822
    2. ',' → logprob: -4.388863563537598
    3. ')=' → logprob: -6.763863563537598
    4. '),' → logprob: -9.013863563537598
    5. ' )' → logprob: -9.888863563537598
    6. ',)' → logprob: -11.388863563537598
    7. '=' → logprob: -13.138863563537598
    8. ' =' → logprob: -13.201363563537598
    9. ' ,' → logprob: -13.763863563537598
    10. ' ' → logprob: -14.013863563537598

Token 214: ' t' (ID: 260)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.8025718927383423
    2. ' z' → logprob: -2.8025717735290527
    3. 'mask' → logprob: -3.3650717735290527
    4. ' mask' → logprob: -3.4900717735290527
    5. 'w' → logprob: -3.6150717735290527
    6. 'x' → logprob: -3.6150717735290527
    7. ')' → logprob: -3.8650717735290527
    8. 'val' → logprob: -3.9900717735290527
    9. ' xpos' → logprob: -4.490071773529053
    10. ' w' → logprob: -4.740071773529053

Token 215: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06990330666303635
    2. ')=' → logprob: -3.6949033737182617
    3. ',' → logprob: -4.319903373718262
    4. 'ime' → logprob: -4.444903373718262
    5. 'ype' → logprob: -4.694903373718262
    6. 'ab' → logprob: -7.194903373718262
    7. 'p' → logprob: -7.444903373718262
    8. 'mp' → logprob: -7.819903373718262
    9. 'emp' → logprob: -7.819903373718262
    10. 'o' → logprob: -7.944903373718262

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34944313764572144
    2. ' =' → logprob: -1.2244431972503662
    3. ',' → logprob: -6.974442958831787
    4. ')' → logprob: -10.849443435668945
    5. ' ' → logprob: -10.849443435668945
    6. ')=' → logprob: -11.974443435668945
    7. '   ' → logprob: -12.224443435668945
    8. '=x' → logprob: -12.224443435668945
    9. ',x' → logprob: -13.349443435668945
    10. ' ,' → logprob: -13.849443435668945

Token 217: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2314953804016113
    2. 'n' → logprob: -1.4814953804016113
    3. 'z' → logprob: -1.4814953804016113
    4. ' z' → logprob: -1.8564953804016113
    5. 'd' → logprob: -3.3564953804016113
    6. ' d' → logprob: -3.4814953804016113
    7. ' (' → logprob: -4.856495380401611
    8. '(' → logprob: -5.106495380401611
    9. '0' → logprob: -5.356495380401611
    10. '(n' → logprob: -5.481495380401611

Token 218: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18225648999214172
    2. 'z' → logprob: -2.3072564601898193
    3. '0' → logprob: -3.3072564601898193
    4. '(n' → logprob: -4.432256698608398
    5. 'd' → logprob: -5.307256698608398
    6. '(z' → logprob: -5.682256698608398
    7. ' n' → logprob: -5.932256698608398
    8. 'p' → logprob: -6.307256698608398
    9. '(' → logprob: -7.182256698608398
    10. '[n' → logprob: -7.307256698608398

Token 219: ' -' (ID: 533)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.9124631285667419
    2. ' >>' → logprob: -1.4124631881713867
    3. '%' → logprob: -2.5374631881713867
    4. '[' → logprob: -2.7874631881713867
    5. ' &' → logprob: -2.7874631881713867
    6. ',' → logprob: -3.2874631881713867
    7. ' //' → logprob: -3.4124631881713867
    8. '[z' → logprob: -3.5374631881713867
    9. '>>' → logprob: -3.7874631881713867
    10. ')' → logprob: -4.787463188171387

Token 220: ' len' (ID: 4631)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1963316947221756
    2. 'z' → logprob: -1.8213317394256592
    3. 'x' → logprob: -5.44633150100708
    4. '2' → logprob: -6.19633150100708
    5. 'd' → logprob: -6.32133150100708
    6. 'a' → logprob: -6.69633150100708
    7. '(' → logprob: -6.82133150100708
    8. '(z' → logprob: -7.32133150100708
    9. 'MAX' → logprob: -7.44633150100708
    10. 'n' → logprob: -7.44633150100708

Token 221: '(d' (ID: 2572)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.09512308984994888
    2. '(d' → logprob: -2.470123052597046
    3. '(str' → logprob: -5.470123291015625
    4. '(t' → logprob: -7.095123291015625
    5. '(p' → logprob: -7.220123291015625
    6. '(x' → logprob: -9.595123291015625
    7. '(s' → logprob: -9.720123291015625
    8. 'z' → logprob: -9.720123291015625
    9. '(' → logprob: -9.970123291015625
    10. 'd' → logprob: -10.595123291015625

Token 222: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10273265093564987
    2. ')' → logprob: -3.1027326583862305
    3. '[z' → logprob: -3.2277326583862305
    4. '[n' → logprob: -5.1027326583862305
    5. '[' → logprob: -5.6027326583862305
    6. ')+' → logprob: -6.4777326583862305
    7. ')-' → logprob: -7.9777326583862305
    8. '[-' → logprob: -7.9777326583862305
    9. '[x' → logprob: -8.35273265838623
    10. '[y' → logprob: -8.72773265838623

Token 223: ' ' (ID: 220)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.7881563901901245
    2. '0' → logprob: -2.038156509399414
    3. ' z' → logprob: -2.288156509399414
    4. 'n' → logprob: -2.413156509399414
    5. 'len' → logprob: -2.913156509399414
    6. ' n' → logprob: -3.288156509399414
    7. ' ' → logprob: -3.663156509399414
    8. ')' → logprob: -3.913156509399414
    9. 'y' → logprob: -4.413156509399414
    10. 'd' → logprob: -4.663156509399414

Token 224: '0' (ID: 15)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.8106240630149841
    2. 'len' → logprob: -1.810624122619629
    3. '0' → logprob: -1.935624122619629
    4. 'n' → logprob: -2.310624122619629
    5. 'y' → logprob: -2.685624122619629
    6. ')' → logprob: -4.310624122619629
    7. 'max' → logprob: -4.435624122619629
    8. 'x' → logprob: -4.685624122619629
    9. 'd' → logprob: -4.685624122619629
    10. 'MAX' → logprob: -4.810624122619629

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2258264422416687
    2. ')' → logprob: -1.6008265018463135
    3. '   ' → logprob: -9.225826263427734
    4. ' ,' → logprob: -9.475826263427734
    5. '),' → logprob: -9.850826263427734
    6. ' if' → logprob: -10.350826263427734
    7. ',)' → logprob: -10.350826263427734
    8. ' )' → logprob: -10.475826263427734
    9. ',
' → logprob: -10.850826263427734
    10. 'if' → logprob: -11.100826263427734

Token 226: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23607933521270752
    2. '[])' → logprob: -1.9860793352127075
    3. 'z' → logprob: -3.611079216003418
    4. ')' → logprob: -4.486079216003418
    5. ' ' → logprob: -4.611079216003418
    6. 'n' → logprob: -5.486079216003418
    7. '[]' → logprob: -5.736079216003418
    8. '{})' → logprob: -5.861079216003418
    9. ' [])' → logprob: -5.861079216003418
    10. '[' → logprob: -5.986079216003418

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2730240821838379
    2. '[])' → logprob: -2.148024082183838
    3. 'z' → logprob: -2.898024082183838
    4. 'len' → logprob: -4.523024082183838
    5. 'n' → logprob: -4.648024082183838
    6. '1' → logprob: -4.898024082183838
    7. 'x' → logprob: -5.148024082183838
    8. '[' → logprob: -5.398024082183838
    9. '{})' → logprob: -5.398024082183838
    10. ')' → logprob: -5.773024082183838

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032163821742869914
    2. ')
' → logprob: -8.375321388244629
    3. '   ' → logprob: -9.875321388244629
    4. ' )' → logprob: -10.500321388244629
    5. ',' → logprob: -13.250321388244629
    6. '
' → logprob: -13.750321388244629
    7. ' ' → logprob: -13.875321388244629
    8. '  ' → logprob: -14.000321388244629
    9. '<|end|>' → logprob: -14.000321388244629
    10. '),' → logprob: -14.125321388244629

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05419629067182541
    2. '<|end|>' → logprob: -3.179196357727051
    3. ')' → logprob: -5.429196357727051
    4. ' ' → logprob: -6.429196357727051
    5. '    
' → logprob: -7.179196357727051
    6. ':' → logprob: -7.179196357727051
    7. '
' → logprob: -7.679196357727051
    8. '    ' → logprob: -7.679196357727051
    9. ',' → logprob: -7.929196357727051
    10. '  ' → logprob: -8.05419635772705

Token 230: ' def' (ID: 1056)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.44567546248435974
    2. '   ' → logprob: -1.3206754922866821
    3. 'while' → logprob: -3.1956753730773926
    4. ' for' → logprob: -3.9456753730773926
    5. '	while' → logprob: -4.820675373077393
    6. ' ' → logprob: -4.945675373077393
    7. 'for' → logprob: -5.445675373077393
    8. ')' → logprob: -5.820675373077393
    9. '    ' → logprob: -6.070675373077393
    10. ' if' → logprob: -6.695675373077393

Token 231: ' extract' (ID: 13424)
  Prédit: ' inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inner' → logprob: -0.40797847509384155
    2. ' sw' → logprob: -2.6579785346984863
    3. ' f' → logprob: -2.9079785346984863
    4. ' helper' → logprob: -3.2829785346984863
    5. ' _' → logprob: -4.157978534698486
    6. ' step' → logprob: -4.157978534698486
    7. ' loop' → logprob: -4.407978534698486
    8. ' next' → logprob: -4.532978534698486
    9. ' swap' → logprob: -4.532978534698486
    10. ' get' → logprob: -5.157978534698486

Token 232: '(bit' (ID: 123258)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0201359987258911
    2. '(i' → logprob: -1.3951359987258911
    3. '(k' → logprob: -2.7701358795166016
    4. '(n' → logprob: -2.8951358795166016
    5. '(z' → logprob: -3.1451358795166016
    6. '():' → logprob: -3.5201358795166016
    7. '(s' → logprob: -3.7701358795166016
    8. '(t' → logprob: -3.8951358795166016
    9. '_bits' → logprob: -4.145135879516602
    10. '(idx' → logprob: -4.270135879516602

Token 233: 'field' (ID: 4735)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25963014364242554
    2. 's' → logprob: -1.6346302032470703
    3. ',' → logprob: -4.00963020324707
    4. '):
' → logprob: -4.88463020324707
    5. '_idx' → logprob: -5.75963020324707
    6. 'mask' → logprob: -7.00963020324707
    7. '_pos' → logprob: -7.38463020324707
    8. 'set' → logprob: -7.50963020324707
    9. 'pos' → logprob: -7.63463020324707
    10. '_index' → logprob: -8.13463020324707

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005463436245918274
    2. '):' → logprob: -5.880463600158691
    3. ' ,' → logprob: -6.005463600158691
    4. ',n' → logprob: -10.005463600158691
    5. ' ):' → logprob: -10.880463600158691
    6. ',i' → logprob: -11.005463600158691
    7. ' ' → logprob: -11.505463600158691
    8. '):
' → logprob: -11.505463600158691
    9. 's' → logprob: -11.630463600158691
    10. '  ' → logprob: -11.755463600158691

Token 235: ' pos' (ID: 1253)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.5891845226287842
    2. ' mask' → logprob: -1.8391845226287842
    3. 'pos' → logprob: -1.9641845226287842
    4. 'length' → logprob: -2.714184522628784
    5. ' pos' → logprob: -2.964184522628784
    6. ' length' → logprob: -3.214184522628784
    7. 'i' → logprob: -3.589184522628784
    8. 'idx' → logprob: -3.589184522628784
    9. 'shift' → logprob: -3.589184522628784
    10. 'start' → logprob: -3.714184522628784

Token 236: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005618027411401272
    2. '):
' → logprob: -5.255618095397949
    3. ',' → logprob: -8.00561809539795
    4. ' ):' → logprob: -11.00561809539795
    5. '):
' → logprob: -11.25561809539795
    6. ')' → logprob: -11.75561809539795
    7. '   ' → logprob: -12.38061809539795
    8. '=' → logprob: -12.63061809539795
    9. ' ' → logprob: -13.88061809539795
    10. '):

' → logprob: -14.00561809539795

Token 237: ' shift' (ID: 12847)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2336098849773407
    2. ' length' → logprob: -1.858609914779663
    3. 'size' → logprob: -3.983609914779663
    4. 'width' → logprob: -4.233609676361084
    5. ' size' → logprob: -5.483609676361084
    6. 'count' → logprob: -5.608609676361084
    7. ' width' → logprob: -5.733609676361084
    8. 'num' → logprob: -6.483609676361084
    9. 'mask' → logprob: -6.983609676361084
    10. 'len' → logprob: -7.108609676361084

Token 238: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02177964523434639
    2. '):
' → logprob: -3.8967795372009277
    3. ' ):' → logprob: -7.271779537200928
    4. ',' → logprob: -8.146780014038086
    5. ')' → logprob: -9.146780014038086
    6. '):
' → logprob: -9.521780014038086
    7. '=' → logprob: -10.521780014038086
    8. ' ' → logprob: -11.521780014038086
    9. ' ):
' → logprob: -12.021780014038086
    10. ')):' → logprob: -12.146780014038086

Token 239: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15958216786384583
    2. ' return' → logprob: -2.1595821380615234
    3. 'return' → logprob: -3.7845821380615234
    4. '   ' → logprob: -5.159582138061523
    5. ' if' → logprob: -6.784582138061523
    6. ' (' → logprob: -7.284582138061523
    7. '    ' → logprob: -7.784582138061523
    8. ' ' → logprob: -7.909582138061523
    9. ' bit' → logprob: -8.784582138061523
    10. '<|end|>' → logprob: -8.784582138061523

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05821910500526428
    2. ' return' → logprob: -3.5582191944122314
    3. 'return' → logprob: -3.6832191944122314
    4. '   ' → logprob: -6.433218955993652
    5. '    ' → logprob: -7.808218955993652
    6. '      ' → logprob: -8.683218955993652
    7. '     ' → logprob: -8.808218955993652
    8. ' if' → logprob: -9.183218955993652
    9. '	return' → logprob: -9.308218955993652
    10. '	   ' → logprob: -9.308218955993652

Token 241: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3706783652305603
    2. ' return' → logprob: -1.245678424835205
    3. '   ' → logprob: -3.995678424835205
    4. ' (' → logprob: -6.370678424835205
    5. '(bit' → logprob: -6.745678424835205
    6. '((' → logprob: -8.370677947998047
    7. 'bit' → logprob: -8.745677947998047
    8. ' bit' → logprob: -9.245677947998047
    9. ' ((' → logprob: -9.370677947998047
    10. '(x' → logprob: -10.745677947998047

Token 242: ' ((' (ID: 3536)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.3525698482990265
    2. ' (' → logprob: -1.227569818496704
    3. '((' → logprob: -5.602570056915283
    4. ' ((' → logprob: -8.227569580078125
    5. '(x' → logprob: -9.727569580078125
    6. ' ' → logprob: -10.102569580078125
    7. ' bit' → logprob: -11.102569580078125
    8. '  ' → logprob: -11.727569580078125
    9. '(Bit' → logprob: -12.227569580078125
    10. '(mask' → logprob: -12.227569580078125

Token 243: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0016818441217765212
    2. '(bit' → logprob: -6.501681804656982
    3. ' bit' → logprob: -8.62668228149414
    4. ' (' → logprob: -15.87668228149414
    5. '1' → logprob: -17.25168228149414
    6. '(' → logprob: -17.25168228149414
    7. 'bitr' → logprob: -17.50168228149414
    8. '   ' → logprob: -17.87668228149414
    9. 'b' → logprob: -18.12668228149414
    10. ' ' → logprob: -18.37668228149414

Token 244: 'field' (ID: 4735)
  Prédit: 'field'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -9.088346359931165e-07
    2. '(field' → logprob: -14.250000953674316
    3. 'ield' → logprob: -16.375
    4. '(' → logprob: -18.625
    5. '((' → logprob: -18.75
    6. '```' → logprob: -18.875
    7. ')' → logprob: -19.125
    8. '(n' → logprob: -19.125
    9. 'fields' → logprob: -19.75
    10. '   ' → logprob: -19.875

Token 245: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.6934515833854675
    2. ' >>' → logprob: -0.6934515833854675
    3. ' &' → logprob: -8.818451881408691
    4. ')' → logprob: -9.568451881408691
    5. ' ' → logprob: -10.318451881408691
    6. '&' → logprob: -10.568451881408691
    7. '>>(' → logprob: -11.943451881408691
    8. '[' → logprob: -12.068451881408691
    9. ')>>' → logprob: -12.318451881408691
    10. ' )' → logprob: -12.443451881408691

Token 246: ' shift' (ID: 12847)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.023966418579220772
    2. '(pos' → logprob: -3.8989663124084473
    3. '(' → logprob: -6.273966312408447
    4. 'shift' → logprob: -6.773966312408447
    5. ' pos' → logprob: -7.898966312408447
    6. ' (' → logprob: -11.523966789245605
    7. '((' → logprob: -12.273966789245605
    8. ' shift' → logprob: -13.523966789245605
    9. '(x' → logprob: -14.648966789245605
    10. '	pos' → logprob: -14.898966789245605

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000193527273950167
    2. ' )' → logprob: -8.75019359588623
    3. ')&' → logprob: -10.50019359588623
    4. ')>>' → logprob: -12.25019359588623
    5. '>>' → logprob: -14.00019359588623
    6. '[pos' → logprob: -14.50019359588623
    7. '&' → logprob: -15.12519359588623
    8. '))' → logprob: -16.000192642211914
    9. 'x' → logprob: -16.375192642211914
    10. ')
' → logprob: -16.375192642211914

Token 248: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005409611389040947
    2. ')&' → logprob: -5.5054097175598145
    3. ' )' → logprob: -7.0054097175598145
    4. '&' → logprob: -8.755409240722656
    5. '>>' → logprob: -8.880409240722656
    6. ' &' → logprob: -9.380409240722656
    7. ')>>' → logprob: -10.255409240722656
    8. ' >>' → logprob: -13.005409240722656
    9. ' ' → logprob: -13.755409240722656
    10. '   ' → logprob: -14.380409240722656

Token 249: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16827447712421417
    2. '1' → logprob: -2.418274402618408
    3. '((' → logprob: -2.918274402618408
    4. '(' → logprob: -5.043274402618408
    5. 'pos' → logprob: -5.668274402618408
    6. '(pos' → logprob: -6.918274402618408
    7. '0' → logprob: -8.543274879455566
    8. 'z' → logprob: -8.918274879455566
    9. '(((' → logprob: -9.168274879455566
    10. '7' → logprob: -9.168274879455566

Token 250: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.510248064994812
    2. '1' → logprob: -1.260248064994812
    3. '((' → logprob: -2.3852481842041016
    4. 'pos' → logprob: -4.385248184204102
    5. '(' → logprob: -4.760248184204102
    6. '(pos' → logprob: -6.760248184204102
    7. 'z' → logprob: -7.385248184204102
    8. '0' → logprob: -8.385248184204102
    9. '7' → logprob: -8.510248184204102
    10. 'x' → logprob: -8.635248184204102

Token 251: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024834630312398076
    2. ')
' → logprob: -9.250247955322266
    3. ' )' → logprob: -10.000247955322266
    4. ')>>' → logprob: -10.750247955322266
    5. '<|end|>' → logprob: -11.000247955322266
    6. ')<<' → logprob: -11.125247955322266
    7. ',' → logprob: -11.500247955322266
    8. ')==' → logprob: -11.625247955322266
    9. '),' → logprob: -11.875247955322266
    10. '))' → logprob: -12.625247955322266

Token 252: ' <<' (ID: 2256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0010946154361590743
    2. ' pos' → logprob: -6.876094818115234
    3. '0' → logprob: -10.251094818115234
    4. '(pos' → logprob: -11.001094818115234
    5. '1' → logprob: -12.126094818115234
    6. ' ' → logprob: -14.001094818115234
    7. '	pos' → logprob: -14.126094818115234
    8. '[pos' → logprob: -14.251094818115234
    9. 'position' → logprob: -14.376094818115234
    10. '(' → logprob: -15.376094818115234

Token 254: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38768941164016724
    2. '<|end|>' → logprob: -1.2626893520355225
    3. '	return' → logprob: -3.8876893520355225
    4. ')' → logprob: -5.762689590454102
    5. '<|end|>' → logprob: -6.262689590454102
    6. 'def' → logprob: -6.262689590454102
    7. 'return' → logprob: -6.762689590454102
    8. '	' → logprob: -6.762689590454102
    9. 'x' → logprob: -6.762689590454102
    10. '    ' → logprob: -7.012689590454102

Token 256: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032497819513082504
    2. ' for' → logprob: -4.657497882843018
    3. 'for' → logprob: -5.157497882843018
    4. 'result' → logprob: -5.782497882843018
    5. ' res' → logprob: -5.907497882843018
    6. 'def' (adapté à ' def') → logprob: -6.157497882843018
    7. ' result' → logprob: -6.282497882843018
    8. 'res' → logprob: -6.782497882843018
    9. ' y' → logprob: -6.782497882843018
    10. 'x' → logprob: -7.407497882843018

Token 257: ' body' (ID: 3641)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combine' → logprob: -1.54237699508667
    2. 'extract' → logprob: -1.91737699508667
    3. 'sw' → logprob: -2.41737699508667
    4. ' extract' → logprob: -3.04237699508667
    5. 'compose' → logprob: -3.16737699508667
    6. ' combine' → logprob: -3.16737699508667
    7. ' sw' → logprob: -3.60487699508667
    8. 'xor' → logprob: -3.85487699508667
    9. 'merge' → logprob: -3.91737699508667
    10. ' compose' → logprob: -4.41737699508667

Token 258: '(acc' (ID: 82668)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.4257405400276184
    2. '(z' → logprob: -1.9257404804229736
    3. '(n' → logprob: -2.5507404804229736
    4. '():' → logprob: -3.3007404804229736
    5. '(b' → logprob: -3.5507404804229736
    6. '(x' → logprob: -4.425740718841553
    7. '(i' → logprob: -4.550740718841553
    8. '(' → logprob: -5.050740718841553
    9. '(*' → logprob: -5.175740718841553
    10. '(d' → logprob: -5.675740718841553

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005538671393878758
    2. ' ,' → logprob: -7.875554084777832
    3. ',n' → logprob: -9.375554084777832
    4. ',x' → logprob: -11.125554084777832
    5. ',b' → logprob: -11.625554084777832
    6. '   ' → logprob: -11.750554084777832
    7. '):' → logprob: -12.250554084777832
    8. ',value' → logprob: -12.438054084777832
    9. ',val' → logprob: -12.563054084777832
    10. '       ' → logprob: -13.125554084777832

Token 260: ' ip' (ID: 7993)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1891566514968872
    2. 'bit' → logprob: -1.6891566514968872
    3. 'item' → logprob: -2.1891565322875977
    4. 'args' → logprob: -2.6891565322875977
    5. 'elem' → logprob: -3.0641565322875977
    6. 'bits' → logprob: -3.6891565322875977
    7. ' bit' → logprob: -3.8141565322875977
    8. 'b' → logprob: -3.8141565322875977
    9. 'i' → logprob: -3.8141565322875977
    10. 'v' → logprob: -3.9391565322875977

Token 261: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20798537135124207
    2. '):' → logprob: -2.0829854011535645
    3. '):
' → logprob: -3.0829854011535645
    4. 'os' → logprob: -4.9579854011535645
    5. '),' → logprob: -5.4579854011535645
    6. 'x' → logprob: -7.0829854011535645
    7. '):

' → logprob: -7.2079854011535645
    8. ',d' → logprob: -7.2079854011535645
    9. 'd' → logprob: -7.5829854011535645
    10. ',i' → logprob: -7.5829854011535645

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011323434300720692
    2. ' bit' → logprob: -5.51132345199585
    3. ' return' → logprob: -6.51132345199585
    4. ' x' → logprob: -7.01132345199585
    5. ',' → logprob: -7.13632345199585
    6. 'return' → logprob: -7.38632345199585
    7. 'bit' → logprob: -7.38632345199585
    8. 'x' → logprob: -7.63632345199585
    9. ' pos' → logprob: -8.511322975158691
    10. '        
' → logprob: -8.761322975158691

Token 263: ' i' (ID: 575)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.1599171161651611
    2. 'return' → logprob: -1.9099171161651611
    3. 'x' → logprob: -2.034917116165161
    4. 'pos' → logprob: -2.409917116165161
    5. 'shift' → logprob: -2.659917116165161
    6. 'acc' → logprob: -3.284917116165161
    7. ' return' → logprob: -3.659917116165161
    8. ' bit' → logprob: -3.659917116165161
    9. '   ' → logprob: -3.659917116165161
    10. 'b' → logprob: -3.909917116165161

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15719939768314362
    2. 'f' → logprob: -2.7821993827819824
    3. ' =' → logprob: -3.6571993827819824
    4. 'p' → logprob: -3.9071993827819824
    5. 'n' → logprob: -4.157199382781982
    6. '=' → logprob: -4.782199382781982
    7. 'dx' → logprob: -5.282199382781982
    8. ' ,' → logprob: -5.907199382781982
    9. 'd' → logprob: -6.782199382781982
    10. 'x' → logprob: -7.282199382781982

Token 265: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.101876735687256
    2. 'v' → logprob: -2.226876735687256
    3. 'b' → logprob: -2.476876735687256
    4. ' j' → logprob: -2.476876735687256
    5. ' v' → logprob: -2.726876735687256
    6. ' bit' → logprob: -2.726876735687256
    7. 'bit' → logprob: -2.851876735687256
    8. ' b' → logprob: -2.851876735687256
    9. ' val' → logprob: -3.351876735687256
    10. 'x' → logprob: -3.601876735687256

Token 266: 'x' (ID: 87)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8377916812896729
    2. 'bit' → logprob: -1.9627916812896729
    3. 'x' → logprob: -2.587791681289673
    4. 'p' → logprob: -2.837791681289673
    5. 'b' → logprob: -3.087791681289673
    6. 'k' → logprob: -3.212791681289673
    7. 'j' → logprob: -3.462791681289673
    8. 'v' → logprob: -3.962791681289673
    9. 'idx' → logprob: -3.962791681289673
    10. 'mask' → logprob: -4.087791442871094

Token 267: ',' (ID: 11)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3189266622066498
    2. ',' → logprob: -1.4439266920089722
    3. 'p' → logprob: -3.6939265727996826
    4. 'y' → logprob: -5.568926811218262
    5. ',y' → logprob: -5.693926811218262
    6. 'bit' → logprob: -7.568926811218262
    7. 'shift' → logprob: -7.568926811218262
    8. 'os' → logprob: -7.568926811218262
    9. 's' → logprob: -7.693926811218262
    10. ',pos' → logprob: -7.693926811218262

Token 268: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0378107950091362
    2. ' y' → logprob: -3.537810802459717
    3. 'z' → logprob: -5.412810802459717
    4. 'p' → logprob: -7.537810802459717
    5. 'b' → logprob: -8.037810325622559
    6. 'v' → logprob: -8.162810325622559
    7. ')' → logprob: -8.287810325622559
    8. 's' → logprob: -8.600310325622559
    9. 'bit' → logprob: -8.725310325622559
    10. 'm' → logprob: -8.912810325622559

Token 269: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010160179808735847
    2. ')=' → logprob: -7.126016139984131
    3. ',' → logprob: -8.876015663146973
    4. ' )' → logprob: -10.251015663146973
    5. '),' → logprob: -11.251015663146973
    6. '))' → logprob: -11.876015663146973
    7. ',)' → logprob: -12.501015663146973
    8. '=' → logprob: -12.751015663146973
    9. 's' → logprob: -13.501015663146973
    10. '_)' → logprob: -14.126015663146973

Token 270: ' t' (ID: 260)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2832701504230499
    2. 'b' → logprob: -2.9082701206207275
    3. 'v' → logprob: -3.1582701206207275
    4. 't' → logprob: -3.9082701206207275
    5. 'bit' → logprob: -4.033270359039307
    6. 's' → logprob: -4.158270359039307
    7. 'p' → logprob: -4.283270359039307
    8. ')' → logprob: -4.783270359039307
    9. ' z' → logprob: -4.783270359039307
    10. 'd' → logprob: -4.908270359039307

Token 271: '_)' (ID: 35080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017517358355689794
    2. ')=' → logprob: -8.750175476074219
    3. ' )' → logprob: -11.875175476074219
    4. ',' → logprob: -12.375175476074219
    5. '))' → logprob: -12.875175476074219
    6. '_)' → logprob: -14.000175476074219
    7. '=' → logprob: -14.750175476074219
    8. '),' → logprob: -14.750175476074219
    9. ',)' → logprob: -14.875175476074219
    10. ' =' → logprob: -15.625175476074219

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16220663487911224
    2. ' =' → logprob: -1.9122066497802734
    3. ')' → logprob: -6.287206649780273
    4. ')=' → logprob: -9.162206649780273
    5. ' ' → logprob: -12.287206649780273
    6. '   ' → logprob: -12.537206649780273
    7. ',' → logprob: -12.537206649780273
    8. '    ' → logprob: -13.662206649780273
    9. '  ' → logprob: -13.787206649780273
    10. ' )' → logprob: -14.537206649780273

Token 273: ' ip' (ID: 7993)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.006764513906091452
    2. ' ip' → logprob: -5.0067644119262695
    3. '(ip' → logprob: -10.63176441192627
    4. '	ip' → logprob: -11.50676441192627
    5. 'next' → logprob: -12.25676441192627
    6. 'd' → logprob: -12.75676441192627
    7. '   ' → logprob: -13.63176441192627
    8. 'i' → logprob: -13.63176441192627
    9. 'acc' → logprob: -14.38176441192627
    10. '(' → logprob: -14.38176441192627

Token 274: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5267274379730225
    2. ' =' → logprob: -0.9017274379730225
    3. ')' → logprob: -5.651727676391602
    4. ')=' → logprob: -10.401727676391602
    5. '   ' → logprob: -10.526727676391602
    6. ',' → logprob: -11.151727676391602
    7. ' ' → logprob: -11.526727676391602
    8. ' )' → logprob: -13.651727676391602
    9. ']' → logprob: -13.776727676391602
    10. '  ' → logprob: -13.901727676391602

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30092310905456543
    2. '
' → logprob: -2.1759231090545654
    3. ',' → logprob: -3.3009231090545654
    4. ':' → logprob: -3.8009231090545654
    5. ' =' → logprob: -4.0509233474731445
    6. ':
' → logprob: -4.3009233474731445
    7. 'return' → logprob: -4.6759233474731445
    8. ' return' → logprob: -4.8009233474731445
    9. '   ' → logprob: -4.8009233474731445
    10. '        
' → logprob: -5.0509233474731445

Token 276: ' return' (ID: 622)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.8469516634941101
    2. ' acc' → logprob: -1.4719517230987549
    3. 'return' (adapté à ' return') → logprob: -1.7219517230987549
    4. ' return' → logprob: -3.471951723098755
    5. 'if' → logprob: -3.846951723098755
    6. 'res' → logprob: -4.096951484680176
    7. 'ret' → logprob: -4.721951484680176
    8. 'pos' → logprob: -4.846951484680176
    9. 'shift' → logprob: -4.846951484680176
    10. 'new' → logprob: -5.096951484680176

Token 277: ' (' (ID: 350)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.35544919967651367
    2. ' acc' → logprob: -1.7304491996765137
    3. '(acc' → logprob: -2.2304491996765137
    4. 'add' → logprob: -5.855449199676514
    5. '(x' → logprob: -5.855449199676514
    6. ' (' → logprob: -6.230449199676514
    7. '(' → logprob: -6.355449199676514
    8. 'xor' → logprob: -6.730449199676514
    9. '((' → logprob: -7.480449199676514
    10. 'x' → logprob: -7.480449199676514

Token 278: 'x' (ID: 87)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.032956529408693314
    2. '(acc' → logprob: -3.657956600189209
    3. ' acc' → logprob: -6.032956600189209
    4. 'x' → logprob: -6.282956600189209
    5. '(x' → logprob: -7.907956600189209
    6. '(
' → logprob: -8.03295612335205
    7. 'xor' → logprob: -8.15795612335205
    8. '(' → logprob: -8.15795612335205
    9. '((' → logprob: -8.65795612335205
    10. 'add' → logprob: -9.15795612335205

Token 279: '+' (ID: 10)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3550384044647217
    2. 'os' → logprob: -1.7300384044647217
    3. ',' → logprob: -3.1050384044647217
    4. 'or' → logprob: -3.1050384044647217
    5. 'acc' → logprob: -4.480038642883301
    6. '|' → logprob: -5.480038642883301
    7. ' ^' → logprob: -5.855038642883301
    8. 's' → logprob: -6.230038642883301
    9. '^' → logprob: -6.480038642883301
    10. '+' → logprob: -6.605038642883301

Token 280: '1' (ID: 16)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.05496184155344963
    2. 'acc' → logprob: -3.679961919784546
    3. ' extract' → logprob: -4.679961681365967
    4. 'pos' → logprob: -5.304961681365967
    5. '1' → logprob: -5.679961681365967
    6. 'y' → logprob: -6.054961681365967
    7. '(acc' → logprob: -6.429961681365967
    8. '(' → logprob: -6.804961681365967
    9. 't' → logprob: -6.929961681365967
    10. '(ex' → logprob: -7.179961681365967

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009748285519890487
    2. ',
' → logprob: -7.750974655151367
    3. ',y' → logprob: -8.500974655151367
    4. ' ,' → logprob: -8.750974655151367
    5. '),' → logprob: -9.875974655151367
    6. 'y' → logprob: -10.625974655151367
    7. ')' → logprob: -11.375974655151367
    8. ' y' → logprob: -11.500974655151367
    9. '+' → logprob: -11.500974655151367
    10. ' if' → logprob: -11.625974655151367

Token 282: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06545675545930862
    2. '(y' → logprob: -3.4404568672180176
    3. ' y' → logprob: -3.6904568672180176
    4. '((' → logprob: -6.940456867218018
    5. ' (' → logprob: -6.940456867218018
    6. 'max' → logprob: -6.940456867218018
    7. '(max' → logprob: -7.690456867218018
    8. '0' → logprob: -7.940456867218018
    9. ' ' → logprob: -8.06545639038086
    10. '   ' → logprob: -8.31545639038086

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017622781917452812
    2. '+' → logprob: -4.392622947692871
    3. '^' → logprob: -6.142622947692871
    4. ' ^' → logprob: -7.017622947692871
    5. ' ,' → logprob: -7.767622947692871
    6. 'y' → logprob: -8.142622947692871
    7. ' +' → logprob: -8.392622947692871
    8. 'xor' → logprob: -8.642622947692871
    9. ' xor' → logprob: -8.892622947692871
    10. ')' → logprob: -9.017622947692871

Token 284: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6154736876487732
    2. ' t' → logprob: -1.615473747253418
    3. '(t' → logprob: -2.615473747253418
    4. 'acc' → logprob: -2.865473747253418
    5. ' acc' → logprob: -3.240473747253418
    6. '(acc' → logprob: -3.240473747253418
    7. ' (' → logprob: -3.615473747253418
    8. '((' → logprob: -5.115473747253418
    9. '(' → logprob: -5.615473747253418
    10. ' ' → logprob: -6.240473747253418

Token 285: '_' (ID: 62)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.7332839965820312
    2. ' ^' → logprob: -1.1082839965820312
    3. ')' → logprob: -2.4832839965820312
    4. '+' → logprob: -2.7332839965820312
    5. '_' → logprob: -4.108283996582031
    6. ' if' → logprob: -4.983283996582031
    7. '|' → logprob: -5.608283996582031
    8. ' +' → logprob: -5.858283996582031
    9. '^(' → logprob: -6.233283996582031
    10. ' )' → logprob: -6.483283996582031

Token 286: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34533241391181946
    2. ' ^' → logprob: -1.720332384109497
    3. ' |' → logprob: -3.095332384109497
    4. '|' → logprob: -3.345332384109497
    5. '^' → logprob: -3.595332384109497
    6. '+' → logprob: -6.970332622528076
    7. ' +' → logprob: -7.095332622528076
    8. ' )' → logprob: -7.345332622528076
    9. ' xor' → logprob: -7.595332622528076
    10. ')^' → logprob: -7.845332622528076

Token 287: ' extract' (ID: 13424)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.1251964122056961
    2. ' extract' → logprob: -2.2501964569091797
    3. '((' → logprob: -5.62519645690918
    4. '(' → logprob: -6.50019645690918
    5. 'acc' → logprob: -6.62519645690918
    6. '(x' → logprob: -6.87519645690918
    7. '(ex' → logprob: -7.12519645690918
    8. 'x' → logprob: -7.12519645690918
    9. ' (' → logprob: -7.25019645690918
    10. '(((' → logprob: -7.50019645690918

Token 288: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.4682866036891937
    2. '(n' → logprob: -1.0932866334915161
    3. '(d' → logprob: -3.9682865142822266
    4. '(bit' → logprob: -4.343286514282227
    5. '(t' → logprob: -5.468286514282227
    6. '(x' → logprob: -6.843286514282227
    7. '(' → logprob: -7.218286514282227
    8. 'z' → logprob: -8.343286514282227
    9. '((' → logprob: -8.968286514282227
    10. '(acc' → logprob: -9.218286514282227

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052437346428632736
    2. ',i' → logprob: -4.3024373054504395
    3. ' ,' → logprob: -4.3024373054504395
    4. ',x' → logprob: -4.4274373054504395
    5. ',n' → logprob: -5.0524373054504395
    6. ',y' → logprob: -5.6774373054504395
    7. ',z' → logprob: -7.0524373054504395
    8. ',p' → logprob: -8.177437782287598
    9. ',t' → logprob: -8.552437782287598
    10. 'x' → logprob: -8.802437782287598

Token 290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6966119408607483
    2. 'x' → logprob: -1.0716118812561035
    3. 'y' → logprob: -2.3216118812561035
    4. ' i' → logprob: -4.1966118812561035
    5. '0' → logprob: -4.3216118812561035
    6. '1' → logprob: -4.8216118812561035
    7. ' y' → logprob: -5.1966118812561035
    8. ' x' → logprob: -5.4466118812561035
    9. 'pos' → logprob: -5.9466118812561035
    10. ' ' → logprob: -6.1966118812561035

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016752632334828377
    2. '+' → logprob: -4.64175271987915
    3. '-' → logprob: -5.51675271987915
    4. ' +' → logprob: -7.14175271987915
    5. ' ,' → logprob: -7.14175271987915
    6. ' -' → logprob: -7.14175271987915
    7. ',x' → logprob: -8.641752243041992
    8. 'x' → logprob: -10.141752243041992
    9. '+x' → logprob: -10.266752243041992
    10. '   ' → logprob: -10.391752243041992

Token 292: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04790704697370529
    2. ' i' → logprob: -3.4229071140289307
    3. 'x' → logprob: -4.672906875610352
    4. ')' → logprob: -6.422906875610352
    5. 'y' → logprob: -6.422906875610352
    6. ' y' → logprob: -8.422906875610352
    7. ' ' → logprob: -8.422906875610352
    8. '2' → logprob: -8.672906875610352
    9. ' x' → logprob: -8.672906875610352
    10. 'n' → logprob: -9.047906875610352

Token 293: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10605394095182419
    2. ')' → logprob: -2.3560538291931152
    3. ')))' → logprob: -6.106053829193115
    4. '+' → logprob: -6.231053829193115
    5. '*' → logprob: -7.231053829193115
    6. 'pos' → logprob: -8.606054306030273
    7. ' ))' → logprob: -9.356054306030273
    8. '),' → logprob: -9.731054306030273
    9. ')+' → logprob: -10.106054306030273
    10. 's' → logprob: -10.231054306030273

Token 294: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42810437083244324
    2. '+' → logprob: -1.9281044006347656
    3. '       ' → logprob: -2.4281044006347656
    4. '<|end|>' → logprob: -2.8031044006347656
    5. ' +' → logprob: -3.6781044006347656
    6. '   ' → logprob: -4.803104400634766
    7. ' )' → logprob: -6.053104400634766
    8. ' ' → logprob: -6.303104400634766
    9. ')+' → logprob: -6.428104400634766
    10. 'x' → logprob: -6.803104400634766

Token 295: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.45559167861938477
    2. 'y' → logprob: -1.7055916786193848
    3. ' x' → logprob: -2.7055916786193848
    4. ' y' → logprob: -2.9555916786193848
    5. '(x' → logprob: -3.7055916786193848
    6. 'i' → logprob: -4.330591678619385
    7. 't' → logprob: -4.705591678619385
    8. ' i' → logprob: -5.830591678619385
    9. '(y' → logprob: -5.955591678619385
    10. '(i' → logprob: -5.955591678619385

Token 296: ' in' (ID: 306)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6664523482322693
    2. '<' → logprob: -1.791452407836914
    3. ' <=' → logprob: -2.041452407836914
    4. '<=' → logprob: -2.291452407836914
    5. ' ' → logprob: -3.166452407836914
    6. '==' → logprob: -4.791452407836914
    7. ' >=' → logprob: -5.041452407836914
    8. '>=' → logprob: -5.291452407836914
    9. ' >' → logprob: -5.416452407836914
    10. '<p' → logprob: -5.541452407836914

Token 297: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2128886729478836
    2. 'range' → logprob: -2.087888717651367
    3. '{' → logprob: -3.837888717651367
    4. 'z' → logprob: -4.212888717651367
    5. '[' → logprob: -4.337888717651367
    6. '[d' → logprob: -5.212888717651367
    7. ' range' → logprob: -5.962888717651367
    8. '[z' → logprob: -6.087888717651367
    9. '(' → logprob: -6.462888717651367
    10. '{x' → logprob: -6.962888717651367

Token 298: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06225761026144028
    2. 'else' → logprob: -2.8122575283050537
    3. ' ' → logprob: -9.187257766723633
    4. ' and' → logprob: -9.937257766723633
    5. '        ' → logprob: -10.062257766723633
    6. '    ' → logprob: -10.812257766723633
    7. '       ' → logprob: -11.437257766723633
    8. '   ' → logprob: -11.437257766723633
    9. 'and' → logprob: -11.562257766723633
    10. '  ' → logprob: -11.812257766723633

Token 299: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.11859499663114548
    2. ' (' → logprob: -2.3685948848724365
    3. '(' → logprob: -4.493595123291016
    4. '(acc' → logprob: -5.368595123291016
    5. 'acc' → logprob: -6.493595123291016
    6. '(y' → logprob: -7.743595123291016
    7. ' acc' → logprob: -8.993595123291016
    8. '(n' → logprob: -10.243595123291016
    9. '(ip' → logprob: -10.243595123291016
    10. ' ' → logprob: -10.368595123291016

Token 300: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004055248107761145
    2. '(x' → logprob: -5.879055023193359
    3. ' x' → logprob: -7.004055023193359
    4. '0' → logprob: -8.75405502319336
    5. 'n' → logprob: -10.00405502319336
    6. '   ' → logprob: -10.37905502319336
    7. ' ' → logprob: -10.37905502319336
    8. '(' → logprob: -11.50405502319336
    9. ' (' → logprob: -11.75405502319336
    10. '  ' → logprob: -11.75405502319336

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2174534648656845
    2. 'pos' → logprob: -1.8424534797668457
    3. '+' → logprob: -3.3424534797668457
    4. ',pos' → logprob: -7.467453479766846
    5. ',y' → logprob: -7.967453479766846
    6. '-' → logprob: -8.717453002929688
    7. ' ,' → logprob: -8.717453002929688
    8. 'y' → logprob: -9.342453002929688
    9. 'p' → logprob: -10.092453002929688
    10. '0' → logprob: -10.467453002929688

Token 302: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026537494733929634
    2. ' y' → logprob: -3.6515374183654785
    3. ' ' → logprob: -9.276537895202637
    4. '   ' → logprob: -9.776537895202637
    5. '(y' → logprob: -10.026537895202637
    6. '  ' → logprob: -11.526537895202637
    7. '0' → logprob: -11.651537895202637
    8. '    ' → logprob: -12.151537895202637
    9. '	y' → logprob: -12.651537895202637
    10. 'x' → logprob: -13.026537895202637

Token 303: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006956900469958782
    2. '+' → logprob: -5.506957054138184
    3. ' ,' → logprob: -6.256957054138184
    4. ' +' → logprob: -7.006957054138184
    5. ',
' → logprob: -11.506957054138184
    6. ')' → logprob: -12.006957054138184
    7. 'def' → logprob: -12.256957054138184
    8. '),' → logprob: -12.381957054138184
    9. '       ' → logprob: -12.381957054138184
    10. '   ' → logprob: -12.881957054138184

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.7689099018462e-05
    2. ' ' → logprob: -9.50008773803711
    3. 'extract' → logprob: -12.50008773803711
    4. '0' → logprob: -12.87508773803711
    5. 'x' → logprob: -13.25008773803711
    6. 'i' → logprob: -13.75008773803711
    7. ' extract' → logprob: -14.37508773803711
    8. '   ' → logprob: -14.68758773803711
    9. 'shift' → logprob: -14.68758773803711
    10. 'y' → logprob: -15.12508773803711

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003876550472341478
    2. ' ,' → logprob: -7.875387668609619
    3. ',t' → logprob: -12.250387191772461
    4. 't' → logprob: -13.750387191772461
    5. '),' → logprob: -14.750387191772461
    6. 'def' → logprob: -15.375387191772461
    7. ' ' → logprob: -15.875387191772461
    8. ')' → logprob: -16.00038719177246
    9. '   ' → logprob: -16.12538719177246
    10. 's' → logprob: -16.12538719177246

Token 306: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.007962901145219803
    2. ' t' → logprob: -4.882962703704834
    3. ' ' → logprob: -9.132963180541992
    4. '(t' → logprob: -9.757963180541992
    5. '   ' → logprob: -9.757963180541992
    6. '  ' → logprob: -10.632963180541992
    7. 'xor' → logprob: -10.632963180541992
    8. '    ' → logprob: -11.507963180541992
    9. '     ' → logprob: -11.757963180541992
    10. '0' → logprob: -12.007963180541992

Token 307: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010555118322372437
    2. '+' → logprob: -4.635555267333984
    3. ' +' → logprob: -7.385555267333984
    4. '_)' → logprob: -8.885555267333984
    5. ')' → logprob: -10.510555267333984
    6. '-' → logprob: -12.760555267333984
    7. ' ' → logprob: -12.885555267333984
    8. '_,' → logprob: -13.510555267333984
    9. '_
' → logprob: -14.010555267333984
    10. '_=' → logprob: -14.010555267333984

Token 308: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41327962279319763
    2. ' +' → logprob: -1.16327965259552
    3. ')' → logprob: -3.6632795333862305
    4. '+)' → logprob: -9.16327953338623
    5. ' )' → logprob: -9.28827953338623
    6. ')+' → logprob: -9.66327953338623
    7. '0' → logprob: -10.66327953338623
    8. ' ' → logprob: -10.91327953338623
    9. '1' → logprob: -11.16327953338623
    10. '2' → logprob: -11.53827953338623

Token 309: ' extract' (ID: 13424)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.0018808044260367751
    2. ' extract' → logprob: -6.376880645751953
    3. '(ex' → logprob: -9.876880645751953
    4. '(' → logprob: -10.001880645751953
    5. '((' → logprob: -10.251880645751953
    6. 'y' → logprob: -12.001880645751953
    7. '0' → logprob: -12.251880645751953
    8. '1' → logprob: -12.251880645751953
    9. ' (' → logprob: -12.376880645751953
    10. 'ex' → logprob: -12.501880645751953

Token 310: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.008877621963620186
    2. 'z' → logprob: -4.883877754211426
    3. '(n' → logprob: -7.383877754211426
    4. '(x' → logprob: -7.883877754211426
    5. '(y' → logprob: -8.883877754211426
    6. '(' → logprob: -10.008877754211426
    7. ' z' → logprob: -10.508877754211426
    8. 'n' → logprob: -11.133877754211426
    9. '(p' → logprob: -11.758877754211426
    10. '	z' → logprob: -12.008877754211426

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9424725148128346e-05
    2. ',i' → logprob: -10.500049591064453
    3. ' ,' → logprob: -11.375049591064453
    4. 'i' → logprob: -12.250049591064453
    5. ')' → logprob: -13.875049591064453
    6. ' i' → logprob: -14.000049591064453
    7. ',
' → logprob: -14.375049591064453
    8. 's' → logprob: -14.500049591064453
    9. ',x' → logprob: -14.625049591064453
    10. 'x' → logprob: -14.750049591064453

Token 312: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001443449524231255
    2. ' i' → logprob: -6.876443386077881
    3. 'y' → logprob: -8.126443862915039
    4. 'x' → logprob: -9.876443862915039
    5. 'ip' → logprob: -10.251443862915039
    6. ' ' → logprob: -12.751443862915039
    7. ' y' → logprob: -12.876443862915039
    8. ')' → logprob: -12.876443862915039
    9. '   ' → logprob: -12.876443862915039
    10. 'p' → logprob: -13.251443862915039

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008216609712690115
    2. ',y' → logprob: -7.500821590423584
    3. ',x' → logprob: -8.750822067260742
    4. ' ,' → logprob: -10.500822067260742
    5. 'y' → logprob: -10.875822067260742
    6. ',p' → logprob: -11.125822067260742
    7. '+' → logprob: -11.250822067260742
    8. ',
' → logprob: -11.625822067260742
    9. ' y' → logprob: -12.125822067260742
    10. '-' → logprob: -12.500822067260742

Token 314: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.036960773169994354
    2. 'i' → logprob: -3.9119608402252197
    3. 'x' → logprob: -4.161960601806641
    4. ' y' → logprob: -8.41196060180664
    5. '0' → logprob: -9.16196060180664
    6. 'ip' → logprob: -9.16196060180664
    7. '1' → logprob: -10.16196060180664
    8. 'p' → logprob: -10.53696060180664
    9. 'len' → logprob: -10.66196060180664
    10. '   ' → logprob: -10.78696060180664

Token 315: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0018067917553707957
    2. ')))' → logprob: -7.251806735992432
    3. ')' → logprob: -7.751806735992432
    4. '))
' → logprob: -8.00180721282959
    5. '+' → logprob: -8.25180721282959
    6. ' ))' → logprob: -10.50180721282959
    7. '))

' → logprob: -11.12680721282959
    8. '-' → logprob: -12.12680721282959
    9. ' ' → logprob: -12.75180721282959
    10. '   ' → logprob: -12.87680721282959

Token 316: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5494472980499268
    2. '   ' → logprob: -1.2994472980499268
    3. '       ' → logprob: -2.4244472980499268
    4. ' )' → logprob: -3.2994472980499268
    5. '<|end|>' → logprob: -5.049447059631348
    6. ' ' → logprob: -5.049447059631348
    7. '  ' → logprob: -5.924447059631348
    8. '    ' → logprob: -6.424447059631348
    9. ',' → logprob: -7.049447059631348
    10. ' return' → logprob: -7.174447059631348

Token 317: ' _,' (ID: 18042)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4309034049510956
    2. '   ' → logprob: -1.305903434753418
    3. '
' → logprob: -4.555903434753418
    4. ' ' → logprob: -4.680903434753418
    5. '<|end|>' → logprob: -4.805903434753418
    6. ',' → logprob: -4.930903434753418
    7. '       ' → logprob: -5.430903434753418
    8. ')
' → logprob: -5.555903434753418
    9. '_' → logprob: -6.055903434753418
    10. '    ' → logprob: -6.180903434753418

Token 318: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.2693551480770111
    2. ' _,' → logprob: -1.5193551778793335
    3. '__,' → logprob: -4.144355297088623
    4. '_' → logprob: -7.519355297088623
    5. 'y' → logprob: -7.769355297088623
    6. ' y' → logprob: -9.144354820251465
    7. ' __' → logprob: -9.519354820251465
    8. ' ' → logprob: -9.644354820251465
    9. ' _' → logprob: -9.769354820251465
    10. '__' → logprob: -9.769354820251465

Token 319: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0052721803076565266
    2. ' t' → logprob: -5.255272388458252
    3. 'sw' → logprob: -10.880271911621094
    4. 'res' → logprob: -12.755271911621094
    5. 'result' → logprob: -13.005271911621094
    6. '_t' → logprob: -13.380271911621094
    7. 's' → logprob: -13.505271911621094
    8. 'z' → logprob: -13.755271911621094
    9. 'tmp' → logprob: -14.005271911621094
    10. 'out' → logprob: -14.005271911621094

Token 320: '_final' (ID: 46468)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061970602720975876
    2. ' =' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.311970710754395
    4. 't' → logprob: -15.186970710754395
    5. '  ' → logprob: -15.311970710754395
    6. '   ' → logprob: -16.061969757080078
    7. '2' → logprob: -16.186969757080078
    8. '_=' → logprob: -16.436969757080078
    9. 'sw' → logprob: -16.436969757080078
    10. '+=' → logprob: -16.686969757080078

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602250337600708
    2. ' =' → logprob: -1.9102250337600708
    3. 't' → logprob: -15.285224914550781
    4. ')' → logprob: -15.660224914550781
    5. ' ' → logprob: -15.785224914550781
    6. 'sw' → logprob: -16.03522491455078
    7. '  ' → logprob: -17.16022491455078
    8. ')=' → logprob: -17.41022491455078
    9. '   ' → logprob: -17.66022491455078
    10. '```' → logprob: -18.03522491455078

Token 322: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.014260000549256802
    2. ' reduce' → logprob: -4.2642598152160645
    3. '   ' → logprob: -9.764260292053223
    4. ' ' → logprob: -11.389260292053223
    5. 'chain' → logprob: -11.389260292053223
    6. 'list' → logprob: -12.264260292053223
    7. 're' → logprob: -12.389260292053223
    8. '  ' → logprob: -13.139260292053223
    9. ' list' → logprob: -13.889260292053223
    10. 'redu' → logprob: -13.889260292053223

Token 323: '(
' (ID: 1607)
  Prédit: '(body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(body' → logprob: -5.56233171664644e-05
    2. '(lambda' → logprob: -10.375055313110352
    3. '(' → logprob: -10.750055313110352
    4. 'body' → logprob: -13.750055313110352
    5. ' body' → logprob: -14.125055313110352
    6. '<body' → logprob: -14.375055313110352
    7. ' (' → logprob: -15.125055313110352
    8. '(
' → logprob: -15.375055313110352
    9. '   ' → logprob: -18.25005531311035
    10. '	body' → logprob: -18.50005531311035

Token 324: '       ' (ID: 309)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.023491092026233673
    2. ' body' → logprob: -3.898491144180298
    3. '   ' → logprob: -5.898490905761719
    4. '(body' → logprob: -9.023490905761719
    5. 'lambda' → logprob: -10.773490905761719
    6. ' ' → logprob: -10.773490905761719
    7. '       ' → logprob: -11.523490905761719
    8. '  ' → logprob: -11.898490905761719
    9. '<body' → logprob: -12.148490905761719
    10. '	body' → logprob: -12.148490905761719

Token 325: ' lambda' (ID: 27871)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.0037643322721123695
    2. ' body' → logprob: -5.6287641525268555
    3. '   ' → logprob: -8.878764152526855
    4. 'lambda' (adapté à ' lambda') → logprob: -11.128764152526855
    5. '       ' → logprob: -12.878764152526855
    6. '
' → logprob: -13.253764152526855
    7. '(body' → logprob: -13.503764152526855
    8. '    ' → logprob: -14.003764152526855
    9. ' ' → logprob: -14.253764152526855
    10. '  ' → logprob: -14.253764152526855

Token 326: ' state' (ID: 2608)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.00935191661119461
    2. ' body' → logprob: -5.00935173034668
    3. 'lambda' → logprob: -6.00935173034668
    4. '   ' → logprob: -9.00935173034668
    5. ' lambda' → logprob: -10.38435173034668
    6. '(body' → logprob: -11.88435173034668
    7. '(lambda' → logprob: -12.38435173034668
    8. '       ' → logprob: -12.88435173034668
    9. ' ' → logprob: -13.50935173034668
    10. '           ' → logprob: -13.63435173034668

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015552815049886703
    2. '=lambda' → logprob: -4.265552997589111
    3. ',index' → logprob: -7.515552997589111
    4. 'lambda' → logprob: -8.515552520751953
    5. '(lambda' → logprob: -8.640552520751953
    6. ' ,' → logprob: -8.765552520751953
    7. '=' → logprob: -9.765552520751953
    8. 'enumer' → logprob: -9.890552520751953
    9. '   ' → logprob: -10.390552520751953
    10. ' lambda' → logprob: -10.390552520751953

Token 328: ' i' (ID: 575)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.011333221569657326
    2. 'ip' → logprob: -5.011332988739014
    3. ' enumerate' → logprob: -6.011332988739014
    4. 'lambda' → logprob: -6.261332988739014
    5. 'pair' → logprob: -9.511333465576172
    6. 'body' → logprob: -10.761333465576172
    7. 'en' → logprob: -11.011333465576172
    8. '(lambda' → logprob: -11.136333465576172
    9. 'ix' → logprob: -11.386333465576172
    10. 'i' → logprob: -11.386333465576172

Token 329: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006038292311131954
    2. ',' → logprob: -5.256038188934326
    3. ' :' → logprob: -7.256038188934326
    4. ':(' → logprob: -10.006038665771484
    5. '=' → logprob: -11.256038665771484
    6. 'ip' → logprob: -11.381038665771484
    7. 't' → logprob: -12.131038665771484
    8. ':
' → logprob: -12.256038665771484
    9. ',i' → logprob: -12.506038665771484
    10. '_:' → logprob: -13.506038665771484

Token 330: ' body' (ID: 3641)
  Prédit: 'body'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'body' → logprob: -0.0012808336177840829
    2. ' body' → logprob: -7.126280784606934
    3. '(body' → logprob: -7.751280784606934
    4. 'lambda' → logprob: -10.626280784606934
    5. '(' → logprob: -11.251280784606934
    6. '(lambda' → logprob: -12.626280784606934
    7. '   ' → logprob: -13.501280784606934
    8. '	body' → logprob: -14.626280784606934
    9. '(i' → logprob: -14.751280784606934
    10. '(
' → logprob: -14.876280784606934

Token 331: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.046926163136959076
    2. 'state' → logprob: -3.171926259994507
    3. ',state' → logprob: -7.046926021575928
    4. 'enumer' → logprob: -7.296926021575928
    5. '(*' → logprob: -7.671926021575928
    6. '[state' → logprob: -7.796926021575928
    7. '((' → logprob: -8.171926498413086
    8. ' state' → logprob: -8.421926498413086
    9. '=' → logprob: -8.671926498413086
    10. '(' → logprob: -8.671926498413086

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036329696886241436
    2. ',i' → logprob: -6.25363302230835
    3. ' ,' → logprob: -7.25363302230835
    4. ',(' → logprob: -7.87863302230835
    5. 'enumer' → logprob: -8.003632545471191
    6. '(i' → logprob: -8.753632545471191
    7. '[i' → logprob: -10.378632545471191
    8. '(' → logprob: -11.003632545471191
    9. 'i' → logprob: -11.628632545471191
    10. ')' → logprob: -11.878632545471191

Token 333: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06968763470649719
    2. 'i' → logprob: -3.319687604904175
    3. ' (' → logprob: -3.569687604904175
    4. '(' → logprob: -6.319687843322754
    5. '   ' → logprob: -8.069687843322754
    6. ' i' → logprob: -8.194687843322754
    7. '(
' → logprob: -8.444687843322754
    8. ' ' → logprob: -8.944687843322754
    9. ')' → logprob: -9.569687843322754
    10. '[i' → logprob: -9.694687843322754

Token 334: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00011236425780225545
    2. ' i' → logprob: -9.250112533569336
    3. '(i' → logprob: -12.125112533569336
    4. ')' → logprob: -12.375112533569336
    5. '   ' → logprob: -12.875112533569336
    6. ')i' → logprob: -13.625112533569336
    7. ',' → logprob: -14.750112533569336
    8. ' ' → logprob: -14.875112533569336
    9. '(' → logprob: -14.875112533569336
    10. '_i' → logprob: -15.375112533569336

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000387535837944597
    2. ',(' → logprob: -8.000387191772461
    3. ' ,' → logprob: -10.625387191772461
    4. ',r' → logprob: -12.000387191772461
    5. ',[' → logprob: -12.625387191772461
    6. '(' → logprob: -12.750387191772461
    7. '(i' → logprob: -12.750387191772461
    8. ',i' → logprob: -13.000387191772461
    9. ',n' → logprob: -13.500387191772461
    10. '(n' → logprob: -13.500387191772461

Token 336: ' state' (ID: 2608)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9660897850990295
    2. '(' → logprob: -1.4660897254943848
    3. '(r' → logprob: -2.2160897254943848
    4. '(x' → logprob: -2.4660897254943848
    5. '(n' → logprob: -2.4660897254943848
    6. '(a' → logprob: -3.0910897254943848
    7. '(p' → logprob: -3.3410897254943848
    8. 'r' → logprob: -4.216089725494385
    9. '(s' → logprob: -5.591089725494385
    10. '((' → logprob: -5.966089725494385

Token 337: ')),
' (ID: 13846)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4852074384689331
    2. '[' → logprob: -2.2352075576782227
    3. ',' → logprob: -2.3602075576782227
    4. ')),' → logprob: -2.3602075576782227
    5. '[n' → logprob: -3.4852075576782227
    6. '[i' → logprob: -3.9852075576782227
    7. ')' → logprob: -4.860207557678223
    8. '[(' → logprob: -4.860207557678223
    9. '[r' → logprob: -5.610207557678223
    10. ')))' → logprob: -5.735207557678223

Token 338: '       ' (ID: 309)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019201948307454586
    2. ' range' → logprob: -6.376920223236084
    3. '   ' → logprob: -9.001919746398926
    4. ' ' → logprob: -11.001919746398926
    5. '(range' → logprob: -11.251919746398926
    6. 'list' → logprob: -11.501919746398926
    7. 're' → logprob: -11.501919746398926
    8. 'r' → logprob: -11.751919746398926
    9. 'filter' → logprob: -12.001919746398926
    10. ')' → logprob: -12.001919746398926

Token 339: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' (adapté à ' range') → logprob: -0.004945189692080021
    2. ' range' → logprob: -5.379945278167725
    3. 'list' → logprob: -8.254944801330566
    4. '(range' → logprob: -10.879944801330566
    5. 'r' → logprob: -11.254944801330566
    6. '[' → logprob: -11.754944801330566
    7. 'enumer' → logprob: -11.879944801330566
    8. 're' → logprob: -12.254944801330566
    9. ' ' → logprob: -13.004944801330566
    10. '	range' → logprob: -13.129944801330566

Token 340: '(n' (ID: 2406)
  Prédit: '(MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.2122388780117035
    2. '(n' → logprob: -1.7122389078140259
    3. '(' → logprob: -4.712238788604736
    4. 'MAX' → logprob: -7.212238788604736
    5. '(len' → logprob: -7.712238788604736
    6. 'n' → logprob: -7.837238788604736
    7. '(max' → logprob: -9.087239265441895
    8. '(M' → logprob: -10.587239265441895
    9. '(a' → logprob: -10.962239265441895
    10. '(m' → logprob: -12.587239265441895

Token 341: '),' (ID: 936)
  Prédit: '),
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.18069243431091309
    2. '),' → logprob: -1.805692434310913
    3. ')' → logprob: -8.680692672729492
    4. 'm' → logprob: -8.930692672729492
    5. 'MAX' → logprob: -9.055692672729492
    6. 'a' → logprob: -9.430692672729492
    7. '),
' → logprob: -9.430692672729492
    8. 'n' → logprob: -9.680692672729492
    9. ' ),
' → logprob: -10.305692672729492
    10. '),

' → logprob: -10.430692672729492

Token 342: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46405303478240967
    2. '(x' → logprob: -1.4640530347824097
    3. '(n' → logprob: -2.464053153991699
    4. ' (' → logprob: -3.089053153991699
    5. '(MAX' → logprob: -5.214053153991699
    6. '(len' → logprob: -5.839053153991699
    7. '   ' → logprob: -7.589053153991699
    8. ' ' → logprob: -9.3390531539917
    9. 'n' → logprob: -9.9640531539917
    10. '(X' → logprob: -10.3390531539917

Token 343: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4636478126049042
    2. '0' → logprob: -1.3386478424072266
    3. 'n' → logprob: -2.4636478424072266
    4. 'MAX' → logprob: -4.213647842407227
    5. 'p' → logprob: -5.088647842407227
    6. 'len' → logprob: -7.588647842407227
    7. '(' → logprob: -7.713647842407227
    8. ' ' → logprob: -8.088647842407227
    9. '(MAX' → logprob: -8.088647842407227
    10. 'max' → logprob: -8.838647842407227

Token 344: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.843177233240567e-05
    2. 'os' → logprob: -11.000018119812012
    3. 'position' → logprob: -14.375018119812012
    4. 'p' → logprob: -15.000018119812012
    5. 'positions' → logprob: -15.625018119812012
    6. '_pos' → logprob: -15.750018119812012
    7. 'poz' → logprob: -15.875018119812012
    8. 'poss' → logprob: -16.625019073486328
    9. 'pose' → logprob: -17.125019073486328
    10. 'npos' → logprob: -17.250019073486328

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003349890175741166
    2. ' ,' → logprob: -8.125334739685059
    3. '<|end|>' → logprob: -11.250334739685059
    4. ',
' → logprob: -11.375334739685059
    5. ',n' → logprob: -13.250334739685059
    6. 'import' → logprob: -13.250334739685059
    7. ',y' → logprob: -13.625334739685059
    8. ' ' → logprob: -13.875334739685059
    9. '0' → logprob: -14.125334739685059
    10. '+' → logprob: -14.250334739685059

Token 346: ' ypos' (ID: 180845)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008969667367637157
    2. '0' → logprob: -4.758969783782959
    3. ' ypos' → logprob: -8.1339693069458
    4. ' ' → logprob: -10.3839693069458
    5. '  ' → logprob: -11.7589693069458
    6. '    ' → logprob: -12.0089693069458
    7. '   ' → logprob: -12.1339693069458
    8. '     ' → logprob: -12.7589693069458
    9. ' y' → logprob: -13.5089693069458
    10. '      ' → logprob: -13.7589693069458

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.277553620748222e-05
    2. '0' → logprob: -10.500062942504883
    3. ' ,' → logprob: -10.750062942504883
    4. '))' → logprob: -12.500062942504883
    5. ')' → logprob: -12.875062942504883
    6. 't' → logprob: -13.875062942504883
    7. 's' → logprob: -13.875062942504883
    8. 'n' → logprob: -14.375062942504883
    9. ',
' → logprob: -14.375062942504883
    10. 'r' → logprob: -14.625062942504883

Token 348: ' t' (ID: 260)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.047236744314432144
    2. 't' → logprob: -3.172236680984497
    3. ' ' → logprob: -5.672236919403076
    4. ' t' → logprob: -7.797236919403076
    5. 'n' → logprob: -8.922236442565918
    6. ')' → logprob: -9.172236442565918
    7. 'MAX' → logprob: -9.547236442565918
    8. 'a' → logprob: -11.422236442565918
    9. 'b' → logprob: -12.172236442565918
    10. '[]' → logprob: -12.422236442565918

Token 349: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5291495323181152
    2. ')))' → logprob: -1.0291495323181152
    3. ')' → logprob: -3.0291495323181152
    4. ')
' → logprob: -6.404149532318115
    5. '))))' → logprob: -6.529149532318115
    6. '_final' → logprob: -6.779149532318115
    7. ',' → logprob: -7.404149532318115
    8. '))
' → logprob: -8.779150009155273
    9. ')))
' → logprob: -9.404150009155273
    10. ')));' → logprob: -10.279150009155273

Token 350: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05099276453256607
    2. '<|end|>' → logprob: -3.425992727279663
    3. '   ' → logprob: -4.925992965698242
    4. ' )' → logprob: -6.425992965698242
    5. '
' → logprob: -6.425992965698242
    6. ' ' → logprob: -6.550992965698242
    7. '[' → logprob: -6.800992965698242
    8. ',' → logprob: -7.550992965698242
    9. '<|end|>' → logprob: -7.675992965698242
    10. ')
' → logprob: -7.800992965698242

Token 351: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04018155857920647
    2. ',' → logprob: -3.9151816368103027
    3. '   ' → logprob: -4.915181636810303
    4. ' )' → logprob: -5.040181636810303
    5. '<|end|>' → logprob: -6.665181636810303
    6. ' ' → logprob: -7.040181636810303
    7. ' ,' → logprob: -7.415181636810303
    8. '  ' → logprob: -7.665181636810303
    9. '    ' → logprob: -7.790181636810303
    10. ':' → logprob: -8.415181159973145

Token 352: ' DBG' (ID: 100080)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.43345770239830017
    2. 't' → logprob: -1.1834577322006226
    3. 'DBG' → logprob: -4.808457851409912
    4. ' DBG' → logprob: -4.808457851409912
    5. ' not' → logprob: -5.058457851409912
    6. '(t' → logprob: -5.058457851409912
    7. ' (' → logprob: -5.308457851409912
    8. ' n' → logprob: -6.308457851409912
    9. ' ' → logprob: -6.308457851409912
    10. ' len' → logprob: -6.433457851409912

Token 353: '2' (ID: 17)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0639367401599884
    2. ' and' → logprob: -3.063936710357666
    3. ':
' → logprob: -5.063936710357666
    4. '2' → logprob: -5.313936710357666
    5. ' :' → logprob: -6.188936710357666
    6. 'and' → logprob: -6.563936710357666
    7. ':return' → logprob: -8.563937187194824
    8. '==' → logprob: -9.313937187194824
    9. ' ==' → logprob: -10.188937187194824
    10. ' or' → logprob: -10.188937187194824

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0444556400179863
    2. ':
' → logprob: -3.5444555282592773
    3. ' and' → logprob: -4.544455528259277
    4. ' :' → logprob: -6.294455528259277
    5. ':return' → logprob: -6.419455528259277
    6. 'and' → logprob: -8.794455528259277
    7. '   ' → logprob: -9.044455528259277
    8. ' :
' → logprob: -9.169455528259277
    9. '==' → logprob: -10.419455528259277
    10. ' or' → logprob: -10.794455528259277

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11500553786754608
    2. ' print' → logprob: -2.2400054931640625
    3. 'print' → logprob: -6.8650054931640625
    4. ' return' → logprob: -7.6150054931640625
    5. '   ' → logprob: -8.115005493164062
    6. ' sys' → logprob: -8.615005493164062
    7. '           ' → logprob: -9.740005493164062
    8. '    ' → logprob: -10.240005493164062
    9. ' ' → logprob: -10.615005493164062
    10. ' ' → logprob: -12.365005493164062

Token 356: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05507636070251465
    2. ' print' → logprob: -2.9300763607025146
    3. '   ' → logprob: -9.805076599121094
    4. 'return' → logprob: -10.055076599121094
    5. 'sys' → logprob: -10.555076599121094
    6. ' for' → logprob: -10.680076599121094
    7. 'for' → logprob: -10.930076599121094
    8. ' sys' → logprob: -11.680076599121094
    9. 'import' → logprob: -11.805076599121094
    10. ' return' → logprob: -12.180076599121094

Token 357: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8451168537139893
    2. '(t' → logprob: -1.2201168537139893
    3. '(f' → logprob: -2.2201168537139893
    4. '("' → logprob: -2.2201168537139893
    5. '()' → logprob: -4.22011661529541
    6. '('' → logprob: -4.34511661529541
    7. '("("' → logprob: -4.47011661529541
    8. '((' → logprob: -5.09511661529541
    9. '("",' → logprob: -5.47011661529541
    10. '(n' → logprob: -6.72011661529541

Token 358: '"' (ID: 1)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3756021559238434
    2. '"' → logprob: -1.875602126121521
    3. '(' → logprob: -2.5006022453308105
    4. '('' → logprob: -3.7506022453308105
    5. '(f' → logprob: -4.5006022453308105
    6. '")' → logprob: -4.8756022453308105
    7. ''' → logprob: -5.0006022453308105
    8. '(t' → logprob: -5.1256022453308105
    9. '(n' → logprob: -5.3756022453308105
    10. 't' → logprob: -5.3756022453308105

Token 359: 'sw' (ID: 16440)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2895140647888184
    2. '_final' → logprob: -1.6645140647888184
    3. '")' → logprob: -2.2895140647888184
    4. 'final' → logprob: -2.9145140647888184
    5. '{' → logprob: -3.0395140647888184
    6. ' n' → logprob: -3.4145140647888184
    7. 'x' → logprob: -3.4145140647888184
    8. 'i' → logprob: -3.7895140647888184
    9. ',' → logprob: -4.039514064788818
    10. ')' → logprob: -4.039514064788818

Token 360: ' z' (ID: 579)
  Prédit: 'iz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iz' → logprob: -0.00022976152831688523
    2. 'i' → logprob: -9.625229835510254
    3. ' iz' → logprob: -9.625229835510254
    4. 'z' → logprob: -10.125229835510254
    5. 'из' → logprob: -11.250229835510254
    6. 'izz' → logprob: -11.250229835510254
    7. '{' → logprob: -13.062729835510254
    8. '{"' → logprob: -13.062729835510254
    9. '_' → logprob: -13.375229835510254
    10. '   ' → logprob: -13.875229835510254

Token 361: ' {' (ID: 354)
  Prédit: 'iz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iz' → logprob: -0.7639208436012268
    2. '={' → logprob: -1.388920783996582
    3. '{' → logprob: -2.138920783996582
    4. ':' → logprob: -3.013920783996582
    5. '=' → logprob: -3.513920783996582
    6. ' =' → logprob: -3.888920783996582
    7. ':{' → logprob: -4.263920783996582
    8. ' {' → logprob: -4.388920783996582
    9. '{i' → logprob: -4.388920783996582
    10. 'final' → logprob: -4.513920783996582

Token 362: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.04445016756653786
    2. 'n' → logprob: -3.169450283050537
    3. 't' → logprob: -6.669450283050537
    4. ' z' → logprob: -10.169449806213379
    5. 'd' → logprob: -10.419449806213379
    6. 'bin' → logprob: -10.794449806213379
    7. 'sw' → logprob: -11.294449806213379
    8. '{' → logprob: -11.669449806213379
    9. '(z' → logprob: -11.669449806213379
    10. 'len' → logprob: -11.794449806213379

Token 363: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.5814976096153259
    2. '=}' → logprob: -1.4564976692199707
    3. '=' → logprob: -2.0814976692199707
    4. ',' → logprob: -3.3314976692199707
    5. ' =' → logprob: -4.206497669219971
    6. '},' → logprob: -4.581497669219971
    7. '}:' → logprob: -4.956497669219971
    8. ':' → logprob: -5.831497669219971
    9. 'final' → logprob: -6.081497669219971
    10. '}")' → logprob: -6.581497669219971

Token 364: ' d' (ID: 272)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -1.4421114921569824
    2. ' =' → logprob: -1.6921114921569824
    3. '=' → logprob: -1.9421114921569824
    4. ' ->' → logprob: -2.0671114921569824
    5. ':' → logprob: -2.4421114921569824
    6. ' =>' → logprob: -3.1921114921569824
    7. '=>' → logprob: -3.8171114921569824
    8. ' final' → logprob: -3.9421114921569824
    9. ',' → logprob: -3.9421114921569824
    10. ' ' → logprob: -4.067111492156982

Token 365: ' {' (ID: 354)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.0147663354873657
    2. '}:' → logprob: -1.2647663354873657
    3. '=' → logprob: -1.8897663354873657
    4. ' =' → logprob: -2.639766216278076
    5. '):' → logprob: -3.514766216278076
    6. ')' → logprob: -3.639766216278076
    7. ':' → logprob: -4.014766216278076
    8. '}")' → logprob: -4.389766216278076
    9. ' {' → logprob: -4.514766216278076
    10. '=}' → logprob: -4.889766216278076

Token 366: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00010914575977949426
    2. 'repr' → logprob: -10.50010871887207
    3. '}' → logprob: -10.75010871887207
    4. ' d' → logprob: -11.00010871887207
    5. 'list' → logprob: -11.00010871887207
    6. '{' → logprob: -11.12510871887207
    7. 'n' → logprob: -12.12510871887207
    8. 'str' → logprob: -13.50010871887207
    9. 'dict' → logprob: -13.62510871887207
    10. 'sorted' → logprob: -14.50010871887207

Token 367: '}' (ID: 92)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.27592983841896057
    2. '}' → logprob: -1.5259298086166382
    3. '}:' → logprob: -4.150929927825928
    4. ' }' → logprob: -6.400929927825928
    5. ')}' → logprob: -6.650929927825928
    6. ')' → logprob: -6.775929927825928
    7. '}")
' → logprob: -7.150929927825928
    8. '})' → logprob: -7.275929927825928
    9. ',' → logprob: -7.400929927825928
    10. '},' → logprob: -8.02592945098877

Token 368: ' ret' (ID: 2881)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.1595413237810135
    2. '")' → logprob: -3.159541368484497
    3. ')' → logprob: -3.409541368484497
    4. ')")' → logprob: -3.784541368484497
    5. '}' → logprob: -4.159541130065918
    6. ' ->' → logprob: -5.159541130065918
    7. ':' → logprob: -5.284541130065918
    8. ' )' → logprob: -5.409541130065918
    9. ' }' → logprob: -6.034541130065918
    10. ' =' → logprob: -6.159541130065918

Token 369: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.4626142680644989
    2. '{' → logprob: -1.7126142978668213
    3. 'urn' → logprob: -2.0876142978668213
    4. ' t' → logprob: -2.9626142978668213
    5. ' ' → logprob: -5.962614059448242
    6. '={' → logprob: -6.087614059448242
    7. 't' → logprob: -6.087614059448242
    8. '=' → logprob: -6.587614059448242
    9. '_t' → logprob: -6.587614059448242
    10. ':' → logprob: -6.837614059448242

Token 370: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.009773443453013897
    2. ' t' → logprob: -4.634773254394531
    3. '{' → logprob: -11.634773254394531
    4. '(t' → logprob: -12.634773254394531
    5. ' ' → logprob: -12.884773254394531
    6. '   ' → logprob: -14.259773254394531
    7. 'repr' → logprob: -14.634773254394531
    8. '`t' → logprob: -14.884773254394531
    9. ' {' → logprob: -15.259773254394531
    10. '}' → logprob: -15.509773254394531

Token 371: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -3.690834273584187e-05
    2. 'final' → logprob: -10.37503719329834
    3. '}_' → logprob: -13.12503719329834
    4. '}' → logprob: -13.62503719329834
    5. '_' → logprob: -14.00003719329834
    6. ' _' → logprob: -15.00003719329834
    7. '"' → logprob: -15.50003719329834
    8. ' final' → logprob: -15.62503719329834
    9. '{' → logprob: -16.000036239624023
    10. '}_{' → logprob: -16.000036239624023

Token 372: '}")
' (ID: 23577)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.5038082003593445
    2. '}")' → logprob: -1.0038082599639893
    3. '")' → logprob: -4.12880802154541
    4. ')' → logprob: -4.37880802154541
    5. ' )' → logprob: -8.50380802154541
    6. ')")
' → logprob: -8.50380802154541
    7. '}' → logprob: -9.50380802154541
    8. ')}' → logprob: -9.62880802154541
    9. '}")
' → logprob: -10.00380802154541
    10. ')"' → logprob: -11.50380802154541

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13608694076538086
    2. ')' → logprob: -2.761086940765381
    3. '
' → logprob: -3.511086940765381
    4. '    
' → logprob: -4.511086940765381
    5. '	return' → logprob: -5.511086940765381
    6. ' return' → logprob: -5.511086940765381
    7. ' )' → logprob: -6.011086940765381
    8. ' 
' → logprob: -6.136086940765381
    9. '<|end|>' → logprob: -6.261086940765381
    10. ' ' → logprob: -6.761086940765381

Token 374: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040796298533678055
    2. 'return' (adapté à ' return') → logprob: -3.2907962799072266
    3. ' return' → logprob: -6.290796279907227
    4. '	return' → logprob: -7.290796279907227
    5. '    
' → logprob: -9.040796279907227
    6. '
' → logprob: -9.665796279907227
    7. ')' → logprob: -12.165796279907227
    8. '<|end|>' → logprob: -12.165796279907227
    9. 'eturn' → logprob: -12.290796279907227
    10. ':return' → logprob: -12.415796279907227

Token 375: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005233882926404476
    2. ' t' → logprob: -5.2552337646484375
    3. '(t' → logprob: -16.630233764648438
    4. ' ' → logprob: -17.005233764648438
    5. '	t' → logprob: -17.130233764648438
    6. '`t' → logprob: -18.005233764648438
    7. '   ' → logprob: -18.505233764648438
    8. '  ' → logprob: -19.755233764648438
    9. ' ' → logprob: -19.880233764648438
    10. '0' → logprob: -20.005233764648438

Token 376: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -2.1888679839321412e-05
    2. 'final' → logprob: -11.250021934509277
    3. '_f' → logprob: -12.375021934509277
    4. '_' → logprob: -12.875021934509277
    5. '_fin' → logprob: -13.625021934509277
    6. '_finalize' → logprob: -15.375021934509277
    7. 'f' → logprob: -16.00002098083496
    8. ' _' → logprob: -16.00002098083496
    9. '_
' → logprob: -16.50002098083496
    10. '_FINAL' → logprob: -16.50002098083496

Token 377: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30673909187316895
    2. ')' → logprob: -1.931739091873169
    3. ' ,' → logprob: -3.056739091873169
    4. ' )' → logprob: -3.931739091873169
    5. '   ' → logprob: -4.55673885345459
    6. ' ' → logprob: -4.68173885345459
    7. '[' → logprob: -4.80673885345459
    8. '+' → logprob: -5.05673885345459
    9. ',
' → logprob: -5.30673885345459
    10. '  ' → logprob: -6.43173885345459

Token 378: 'for' (ID: 1938)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4581478536128998
    2. ' ,' → logprob: -1.5831478834152222
    3. '[' → logprob: -3.0831477642059326
    4. ')' → logprob: -3.0831477642059326
    5. ' )' → logprob: -3.7081477642059326
    6. ' ' → logprob: -3.9581477642059326
    7. '+' → logprob: -5.208148002624512
    8. '   ' → logprob: -5.458148002624512
    9. ',)' → logprob: -5.583148002624512
    10. '  ' → logprob: -6.208148002624512

Token 379: ' m' (ID: 284)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14437177777290344
    2. ' _' → logprob: -2.519371747970581
    3. 'i' → logprob: -3.644371747970581
    4. '_' → logprob: -4.89437198638916
    5. ' m' → logprob: -5.14437198638916
    6. ' x' → logprob: -5.14437198638916
    7. '_i' → logprob: -6.01937198638916
    8. ' line' → logprob: -7.14437198638916
    9. ' length' → logprob: -7.14437198638916
    10. ' k' → logprob: -7.51937198638916

Token 380: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006812931038439274
    2. 'in' → logprob: -5.131813049316406
    3. ' ' → logprob: -7.131813049316406
    4. 'm' → logprob: -10.881813049316406
    5. ',' → logprob: -11.006813049316406
    6. 'n' → logprob: -11.256813049316406
    7. '_' → logprob: -11.881813049316406
    8. ' i' → logprob: -12.131813049316406
    9. 'range' → logprob: -12.381813049316406
    10. '  ' → logprob: -12.756813049316406

Token 381: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023267842829227448
    2. ' range' → logprob: -3.7732677459716797
    3. '[' → logprob: -12.27326774597168
    4. ' ' → logprob: -12.39826774597168
    5. 'in' → logprob: -13.02326774597168
    6. 'r' → logprob: -13.14826774597168
    7. '   ' → logprob: -13.64826774597168
    8. '  ' → logprob: -13.77326774597168
    9. '(range' → logprob: -13.89826774597168
    10. 'n' → logprob: -14.14826774597168

Token 382: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2924956679344177
    2. '(MAX' → logprob: -1.6674957275390625
    3. '(n' → logprob: -2.7924957275390625
    4. '(M' → logprob: -5.9174957275390625
    5. '(a' → logprob: -7.2924957275390625
    6. '1' → logprob: -9.417495727539062
    7. '(max' → logprob: -10.042495727539062
    8. 'MAX' → logprob: -10.542495727539062
    9. '(m' → logprob: -10.667495727539062
    10. 'n' → logprob: -10.792495727539062

Token 383: '3' (ID: 18)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.3742537200450897
    2. '1' → logprob: -1.249253749847412
    3. 'a' → logprob: -4.249253749847412
    4. 'n' → logprob: -5.249253749847412
    5. '2' → logprob: -6.249253749847412
    6. 'b' → logprob: -6.374253749847412
    7. '0' → logprob: -7.124253749847412
    8. '(' → logprob: -7.999253749847412
    9. '(MAX' → logprob: -8.249253273010254
    10. 'max' → logprob: -8.499253273010254

Token 384: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2928929030895233
    2. ',' → logprob: -1.5428929328918457
    3. '):
' → logprob: -3.5428929328918457
    4. '+' → logprob: -5.542892932891846
    5. ' ):' → logprob: -6.542892932891846
    6. ' ,' → logprob: -6.792892932891846
    7. '3' → logprob: -7.042892932891846
    8. ' +' → logprob: -7.417892932891846
    9. '2' → logprob: -7.417892932891846
    10. '4' → logprob: -7.542892932891846

Token 385: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.007429265417158604
    2. ' MAX' → logprob: -5.632429122924805
    3. 'n' → logprob: -7.382429122924805
    4. '21' → logprob: -7.882429122924805
    5. ' ' → logprob: -8.007429122924805
    6. '4' → logprob: -8.132429122924805
    7. 'max' → logprob: -8.382429122924805
    8. '18' → logprob: -8.507429122924805
    9. '20' → logprob: -8.507429122924805
    10. '10' → logprob: -8.882429122924805

Token 386: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00656853336840868
    2. 'm' → logprob: -5.631568431854248
    3. '):' → logprob: -5.881568431854248
    4. '+' → logprob: -9.631568908691406
    5. '):
' → logprob: -10.506568908691406
    6. ')' → logprob: -10.506568908691406
    7. ',' → logprob: -11.006568908691406
    8. '-' → logprob: -11.381568908691406
    9. '**' → logprob: -12.756568908691406
    10. '(' → logprob: -13.006568908691406

Token 387: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.047599293291568756
    2. '+' → logprob: -3.2975993156433105
    3. '):
' → logprob: -4.9225993156433105
    4. ' +' → logprob: -6.2975993156433105
    5. ' ):' → logprob: -8.172598838806152
    6. '1' → logprob: -10.547598838806152
    7. '2' → logprob: -11.047598838806152
    8. '-' → logprob: -11.422598838806152
    9. ',' → logprob: -11.672598838806152
    10. '):
' → logprob: -11.797598838806152

Token 388: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5721052289009094
    2. '2' → logprob: -1.6971051692962646
    3. '3' → logprob: -1.6971051692962646
    4. ' ' → logprob: -2.6971051692962646
    5. '4' → logprob: -6.447105407714844
    6. ')' → logprob: -9.447105407714844
    7. '5' → logprob: -9.947105407714844
    8. '+' → logprob: -10.447105407714844
    9. '6' → logprob: -10.572105407714844
    10. '  ' → logprob: -10.947105407714844

Token 389: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6091617345809937
    2. '2' → logprob: -1.2341617345809937
    3. '3' → logprob: -1.8591617345809937
    4. ' ' → logprob: -5.109161853790283
    5. '4' → logprob: -5.859161853790283
    6. '5' → logprob: -8.984161376953125
    7. '6' → logprob: -9.234161376953125
    8. '7' → logprob: -9.984161376953125
    9. '+' → logprob: -10.484161376953125
    10. ')' → logprob: -10.734161376953125

Token 390: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004261226858943701
    2. '):
' → logprob: -5.504261016845703
    3. ' ):' → logprob: -9.254261016845703
    4. ':' → logprob: -10.379261016845703
    5. ')' → logprob: -10.504261016845703
    6. '+' → logprob: -10.879261016845703
    7. ',' → logprob: -12.254261016845703
    8. '1' → logprob: -13.629261016845703
    9. '2' → logprob: -14.004261016845703
    10. '):
' → logprob: -14.504261016845703

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.100443996489048
    2. ':' → logprob: -2.6004440784454346
    3. ' :' → logprob: -4.7254438400268555
    4. '    ' → logprob: -6.1004438400268555
    5. ':
' → logprob: -6.3504438400268555
    6. 'n' → logprob: -6.4754438400268555
    7. ',' → logprob: -6.4754438400268555
    8. ' n' → logprob: -6.9754438400268555
    9. '    
' → logprob: -6.9754438400268555
    10. ' :
' → logprob: -7.7254438400268555

Token 392: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4295822381973267
    2. 'z' → logprob: -1.9295822381973267
    3. 'if' → logprob: -2.429582118988037
    4. 'for' → logprob: -2.679582118988037
    5. 'x' → logprob: -2.929582118988037
    6. ' if' → logprob: -3.804582118988037
    7. 't' → logprob: -3.804582118988037
    8. 'r' → logprob: -3.804582118988037
    9. ' z' → logprob: -3.929582118988037
    10. 'd' → logprob: -3.929582118988037

Token 393: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.01203274354338646
    2. '[' → logprob: -5.262032508850098
    3. ' =' → logprob: -6.387032508850098
    4. '_' → logprob: -7.262032508850098
    5. 's' → logprob: -7.512032508850098
    6. '2' → logprob: -7.637032508850098
    7. '.setdefault' → logprob: -7.637032508850098
    8. '.append' → logprob: -7.887032508850098
    9. '1' → logprob: -8.512032508850098
    10. 'm' → logprob: -9.012032508850098

Token 394: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.606209933757782
    2. ']' → logprob: -0.856209933757782
    3. ']=' → logprob: -3.8562099933624268
    4. ']+=' → logprob: -5.606209754943848
    5. ' ].' → logprob: -6.856209754943848
    6. '+' → logprob: -6.856209754943848
    7. '])' → logprob: -7.356209754943848
    8. ']+' → logprob: -7.356209754943848
    9. '.append' → logprob: -7.856209754943848
    10. ' ]' → logprob: -8.106209754943848

Token 395: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6201521158218384
    2. ' =' → logprob: -1.6201521158218384
    3. '=' → logprob: -1.9951521158218384
    4. ' +=' → logprob: -2.870151996612549
    5. '.extend' → logprob: -2.995151996612549
    6. '+=' → logprob: -4.370151996612549
    7. '=[]' → logprob: -5.870151996612549
    8. '+' → logprob: -6.245151996612549
    9. 'append' → logprob: -7.120151996612549
    10. '=[' → logprob: -7.120151996612549

Token 396: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.9633365273475647
    2. '[' → logprob: -1.08833646774292
    3. '[s' → logprob: -1.96333646774292
    4. 'list' → logprob: -3.21333646774292
    5. 'p' → logprob: -3.58833646774292
    6. 's' → logprob: -3.96333646774292
    7. '[(' → logprob: -4.21333646774292
    8. '[]' → logprob: -5.21333646774292
    9. '[b' → logprob: -5.21333646774292
    10. '[a' → logprob: -5.21333646774292

Token 397: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2088260650634766
    2. 'm' → logprob: -1.7088260650634766
    3. 'x' → logprob: -1.9588260650634766
    4. '0' → logprob: -2.0838260650634766
    5. '(i' → logprob: -2.9588260650634766
    6. 'p' → logprob: -3.0838260650634766
    7. 'sw' → logprob: -3.4588260650634766
    8. '(' → logprob: -3.4588260650634766
    9. 'j' → logprob: -4.083826065063477
    10. '(x' → logprob: -4.458826065063477

Token 398: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10692917555570602
    2. ']' → logprob: -2.356929063796997
    3. ' ,' → logprob: -5.356929302215576
    4. ',m' → logprob: -7.731929302215576
    5. 'm' → logprob: -8.231928825378418
    6. ']+' → logprob: -8.481928825378418
    7. '   ' → logprob: -8.481928825378418
    8. ',
' → logprob: -8.981928825378418
    9. '0' → logprob: -9.356928825378418
    10. ']
' → logprob: -9.481928825378418

Token 399: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10153783112764359
    2. '(m' → logprob: -2.6015379428863525
    3. 'm' → logprob: -4.101537704467773
    4. '2' → logprob: -6.101537704467773
    5. '((' → logprob: -6.226537704467773
    6. '3' → logprob: -7.476537704467773
    7. '4' → logprob: -7.976537704467773
    8. '(b' → logprob: -9.101537704467773
    9. ' (' → logprob: -9.101537704467773
    10. '(a' → logprob: -9.226537704467773

Token 401: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5560909509658813
    2. '1' → logprob: -1.0560909509658813
    3. 'm' → logprob: -3.181090831756592
    4. '3' → logprob: -4.056090831756592
    5. '4' → logprob: -4.681090831756592
    6. '(' → logprob: -4.806090831756592
    7. 'len' → logprob: -6.681090831756592
    8. '(m' → logprob: -8.18109130859375
    9. 'b' → logprob: -8.68109130859375
    10. 'a' → logprob: -8.68109130859375

Token 402: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.009858318604528904
    2. '<<(' → logprob: -4.759858131408691
    3. ' <<' → logprob: -6.759858131408691
    4. '<m' → logprob: -9.884858131408691
    5. '<' → logprob: -11.634858131408691
    6. 'm' → logprob: -11.759858131408691
    7. '   ' → logprob: -12.009858131408691
    8. '<<<' → logprob: -12.134858131408691
    9. '<(' → logprob: -13.884858131408691
    10. ' ' → logprob: -14.134858131408691

Token 403: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5541585087776184
    2. '(m' → logprob: -0.9291585087776184
    3. '((' → logprob: -3.5541584491729736
    4. '(' → logprob: -6.804158687591553
    5. '(n' → logprob: -8.679158210754395
    6. ' (' → logprob: -9.054158210754395
    7. '(a' → logprob: -9.179158210754395
    8. '(((' → logprob: -9.304158210754395
    9. '(b' → logprob: -9.679158210754395
    10. 'n' → logprob: -10.054158210754395

Token 404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013520221691578627
    2. ' )' → logprob: -7.376351833343506
    3. ')]' → logprob: -8.001352310180664
    4. ')
' → logprob: -9.126352310180664
    5. '))' → logprob: -9.876352310180664
    6. '2' → logprob: -10.001352310180664
    7. 'm' → logprob: -10.001352310180664
    8. '//' → logprob: -10.501352310180664
    9. '1' → logprob: -10.751352310180664
    10. '[' → logprob: -11.376352310180664

Token 405: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: ' hi' (ID: 5911)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5005767941474915
    2. '<|end|>' → logprob: -1.7505767345428467
    3. '   ' → logprob: -2.7505767345428467
    4. ' for' → logprob: -2.7505767345428467
    5. 's' → logprob: -3.6255767345428467
    6. 'r' → logprob: -4.125576972961426
    7. 'p' → logprob: -4.250576972961426
    8. 'm' → logprob: -5.125576972961426
    9. 'b' → logprob: -5.250576972961426
    10. ')' → logprob: -5.625576972961426

Token 407: '_vals' (ID: 71688)
  Prédit: 'gh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gh' → logprob: -0.04207918792963028
    2. ' =' → logprob: -3.542079210281372
    3. 'ght' → logprob: -5.292078971862793
    4. 'gher' → logprob: -5.667078971862793
    5. '=' → logprob: -6.917078971862793
    6. 'g' → logprob: -7.417078971862793
    7. 's' → logprob: -7.667078971862793
    8. 't' → logprob: -8.542078971862793
    9. 'ts' → logprob: -8.667078971862793
    10. 'st' → logprob: -8.792078971862793

Token 408: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20213858783245087
    2. '=' → logprob: -1.7021385431289673
    3. ',' → logprob: -8.577138900756836
    4. ']' → logprob: -8.952138900756836
    5. '<|end|>' → logprob: -8.952138900756836
    6. ')' → logprob: -9.327138900756836
    7. ' ' → logprob: -10.577138900756836
    8. '   ' → logprob: -10.702138900756836
    9. 's' → logprob: -10.827138900756836
    10. '=[]' → logprob: -11.077138900756836

Token 409: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8802035450935364
    2. '[p' → logprob: -1.6302034854888916
    3. ' [' → logprob: -2.5052034854888916
    4. '[(' → logprob: -2.6302034854888916
    5. 'list' → logprob: -2.7552034854888916
    6. 'range' → logprob: -3.3802034854888916
    7. '[s' → logprob: -3.5052034854888916
    8. '[m' → logprob: -3.6302034854888916
    9. '[]' → logprob: -4.380203723907471
    10. ' list' → logprob: -4.505203723907471

Token 410: 'val' (ID: 1105)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3687328100204468
    2. '1' → logprob: -1.6187328100204468
    3. '(i' → logprob: -2.1187329292297363
    4. 'range' → logprob: -2.3687329292297363
    5. 'sw' → logprob: -2.8687329292297363
    6. 'i' → logprob: -2.8687329292297363
    7. 'x' → logprob: -3.2437329292297363
    8. '0' → logprob: -3.8687329292297363
    9. '(x' → logprob: -4.118732929229736
    10. '((' → logprob: -4.118732929229736

Token 411: ' <<' (ID: 2256)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12404139339923859
    2. ',)' → logprob: -3.2490413188934326
    3. ',' → logprob: -3.6240413188934326
    4. 'for' → logprob: -3.7490413188934326
    5. ' >>' → logprob: -4.749041557312012
    6. '>>' → logprob: -5.124041557312012
    7. ' :=' → logprob: -5.624041557312012
    8. ' <<' → logprob: -6.124041557312012
    9. '<<' → logprob: -6.124041557312012
    10. ')' → logprob: -7.249041557312012

Token 412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9789774417877197
    2. 'm' → logprob: -1.2289774417877197
    3. '(m' → logprob: -1.3539774417877197
    4. '(' → logprob: -3.3539774417877197
    5. '(a' → logprob: -4.603977203369141
    6. '2' → logprob: -5.478977203369141
    7. '(n' → logprob: -5.728977203369141
    8. 'b' → logprob: -5.978977203369141
    9. ' (' → logprob: -5.978977203369141
    10. 'a' → logprob: -6.103977203369141

Token 413: '2' (ID: 17)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.4655091166496277
    2. 'm' → logprob: -1.8405091762542725
    3. '1' → logprob: -2.0905091762542725
    4. '(' → logprob: -3.0905091762542725
    5. '(a' → logprob: -4.465508937835693
    6. '((' → logprob: -4.840508937835693
    7. '0' → logprob: -4.965508937835693
    8. '(n' → logprob: -5.715508937835693
    9. 'a' → logprob: -5.840508937835693
    10. '2' → logprob: -6.590508937835693

Token 414: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45497384667396545
    2. ' for' → logprob: -1.079973816871643
    3. ')' → logprob: -3.7049739360809326
    4. '	for' → logprob: -7.5799736976623535
    5. ' ' → logprob: -7.9549736976623535
    6. '   ' → logprob: -9.204974174499512
    7. '  ' → logprob: -9.329974174499512
    8. ' )' → logprob: -9.579974174499512
    9. ',' → logprob: -10.579974174499512
    10. '    ' → logprob: -10.704974174499512

Token 415: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.014256121590733528
    2. ' val' → logprob: -4.264256000518799
    3. 'v' → logprob: -11.139256477355957
    4. ' ' → logprob: -11.139256477355957
    5. '   ' → logprob: -11.139256477355957
    6. '	val' → logprob: -11.264256477355957
    7. '  ' → logprob: -11.514256477355957
    8. '_' → logprob: -12.514256477355957
    9. '(val' → logprob: -12.576756477355957
    10. '_val' → logprob: -13.451756477355957

Token 416: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6330333948135376
    2. 'in' → logprob: -0.7580333948135376
    3. ' val' → logprob: -9.258033752441406
    4. 'val' → logprob: -9.383033752441406
    5. ')' → logprob: -9.758033752441406
    6. ',' → logprob: -9.758033752441406
    7. ',val' → logprob: -9.758033752441406
    8. ' ' → logprob: -10.383033752441406
    9. '   ' → logprob: -10.883033752441406
    10. '	in' → logprob: -12.258033752441406

Token 417: ' s' (ID: 265)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.48859819769859314
    2. 'p' → logprob: -1.1135982275009155
    3. '(' → logprob: -4.113598346710205
    4. '[' → logprob: -4.488598346710205
    5. ' range' → logprob: -4.738598346710205
    6. 's' → logprob: -4.988598346710205
    7. 'a' → logprob: -5.613598346710205
    8. 'chain' → logprob: -5.988598346710205
    9. ' p' → logprob: -6.488598346710205
    10. 'r' → logprob: -6.488598346710205

Token 418: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.002486715093255043
    2. 'm' → logprob: -6.127486705780029
    3. '[' → logprob: -9.002487182617188
    4. ')' → logprob: -9.752487182617188
    5. '(m' → logprob: -11.002487182617188
    6. '[(' → logprob: -11.627487182617188
    7. 's' → logprob: -11.752487182617188
    8. '[-' → logprob: -11.877487182617188
    9. '[n' → logprob: -12.314987182617188
    10. '[s' → logprob: -12.314987182617188

Token 419: ' -' (ID: 533)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.008613868616521358
    2. '])
' → logprob: -5.7586140632629395
    3. ')' → logprob: -6.1336140632629395
    4. ']' → logprob: -6.8836140632629395
    5. ' if' → logprob: -7.3836140632629395
    6. 'm' → logprob: -8.008613586425781
    7. ' ])' → logprob: -8.258613586425781
    8. '[' → logprob: -8.758613586425781
    9. '][' → logprob: -9.008613586425781
    10. 'if' → logprob: -9.133613586425781

Token 420: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01054343394935131
    2. '1' → logprob: -4.635543346405029
    3. '3' → logprob: -7.510543346405029
    4. '4' → logprob: -8.885543823242188
    5. ' ' → logprob: -9.885543823242188
    6. '
' → logprob: -11.260543823242188
    7. '   ' → logprob: -11.885543823242188
    8. '```' → logprob: -12.448043823242188
    9. '(' → logprob: -12.698043823242188
    10. '

' → logprob: -13.198043823242188

Token 421: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010145004838705063
    2. '1' → logprob: -4.63514518737793
    3. '3' → logprob: -8.51014518737793
    4. '4' → logprob: -9.01014518737793
    5. ' ' → logprob: -10.82264518737793
    6. '
' → logprob: -11.32264518737793
    7. '(' → logprob: -12.01014518737793
    8. '   ' → logprob: -12.19764518737793
    9. 'm' → logprob: -12.69764518737793
    10. '```' → logprob: -12.94764518737793

Token 422: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2593916952610016
    2. ')' → logprob: -1.5093916654586792
    3. '])
' → logprob: -6.009391784667969
    4. ' )' → logprob: -6.759391784667969
    5. ']' → logprob: -6.884391784667969
    6. ')
' → logprob: -7.259391784667969
    7. ' ])' → logprob: -7.509391784667969
    8. 'if' → logprob: -7.884391784667969
    9. ' if' → logprob: -8.134391784667969
    10. '   ' → logprob: -8.509391784667969

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36699801683425903
    2. ' for' → logprob: -1.7419979572296143
    3. 'for' → logprob: -2.3669979572296143
    4. ')' → logprob: -3.7419979572296143
    5. ' if' → logprob: -5.366998195648193
    6. ')
' → logprob: -5.741998195648193
    7. 'if' → logprob: -6.241998195648193
    8. '
' → logprob: -7.241998195648193
    9. ',' → logprob: -7.366998195648193
    10. 's' → logprob: -7.366998195648193

Token 424: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026781490072607994
    2. ' for' → logprob: -4.0267815589904785
    3. 's' → logprob: -5.1517815589904785
    4. '   ' → logprob: -6.0267815589904785
    5. 'chain' → logprob: -8.90178108215332
    6. ' s' → logprob: -10.02678108215332
    7. 'r' → logprob: -10.27678108215332
    8. 'hi' → logprob: -10.52678108215332
    9. 'm' → logprob: -11.02678108215332
    10. 'vals' → logprob: -11.40178108215332

Token 425: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21291768550872803
    2. 'j' → logprob: -2.5879178047180176
    3. 'idx' → logprob: -2.7129178047180176
    4. 'k' → logprob: -4.337917804718018
    5. 'val' → logprob: -4.837917804718018
    6. 'x' → logprob: -4.962917804718018
    7. 'v' → logprob: -5.337917804718018
    8. 'pos' → logprob: -6.087917804718018
    9. ' i' → logprob: -6.337917804718018
    10. 'ind' → logprob: -6.337917804718018

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07084917277097702
    2. 'in' → logprob: -2.8208491802215576
    3. ' in' → logprob: -4.8208489418029785
    4. ',val' → logprob: -7.8208489418029785
    5. ' ,' → logprob: -8.195849418640137
    6. 'val' → logprob: -10.695849418640137
    7. 'i' → logprob: -10.820849418640137
    8. ' ' → logprob: -11.445849418640137
    9. 'n' → logprob: -11.820849418640137
    10. ',i' → logprob: -12.070849418640137

Token 427: ' hi' (ID: 5911)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3135891556739807
    2. 'v' → logprob: -2.313589096069336
    3. 'hi' → logprob: -2.813589096069336
    4. 'old' → logprob: -3.188589096069336
    5. 'prev' → logprob: -3.438589096069336
    6. 'x' → logprob: -4.188589096069336
    7. 'h' → logprob: -5.188589096069336
    8. 'base' → logprob: -5.813589096069336
    9. 'lo' → logprob: -6.438589096069336
    10. ' val' → logprob: -6.938589096069336

Token 428: ' in' (ID: 306)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.4295322895050049
    2. '_vals' → logprob: -2.054532289505005
    3. ',' → logprob: -2.304532289505005
    4. ' in' → logprob: -2.804532289505005
    5. 'val' → logprob: -3.179532289505005
    6. ',val' → logprob: -5.179532051086426
    7. 'vals' → logprob: -5.304532051086426
    8. 'in' → logprob: -6.304532051086426
    9. 's' → logprob: -6.429532051086426
    10. 'v' → logprob: -6.679532051086426

Token 429: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0004919105558656156
    2. ' enumerate' → logprob: -7.625492095947266
    3. 'en' → logprob: -13.125492095947266
    4. 'enum' → logprob: -13.500492095947266
    5. 'zip' → logprob: -15.500492095947266
    6. '(en' → logprob: -16.125492095947266
    7. 'enqueue' → logprob: -16.250492095947266
    8. 'in' → logprob: -16.750492095947266
    9. ' ' → logprob: -16.875492095947266
    10. '   ' → logprob: -17.125492095947266

Token 430: '(' (ID: 7)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.0007568581495434046
    2. 'zip' → logprob: -7.500756740570068
    3. 'chain' → logprob: -9.500757217407227
    4. 'product' → logprob: -9.625757217407227
    5. '(' → logprob: -10.750757217407227
    6. 'enumer' → logprob: -11.250757217407227
    7. 'p' → logprob: -11.750757217407227
    8. 's' → logprob: -12.125757217407227
    9. ' hi' → logprob: -12.375757217407227
    10. '(zip' → logprob: -13.000757217407227

Token 431: 'hi' (ID: 3686)
  Prédit: 'hi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.0011139007983729243
    2. 'chain' → logprob: -7.3761138916015625
    3. 'product' → logprob: -8.251113891601562
    4. 'zip' → logprob: -8.751113891601562
    5. 'p' → logprob: -10.751113891601562
    6. ' hi' → logprob: -11.376113891601562
    7. 'map' → logprob: -11.626113891601562
    8. 'list' → logprob: -11.626113891601562
    9. 's' → logprob: -13.376113891601562
    10. 'st' → logprob: -13.626113891601562

Token 432: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0001872094871941954
    2. 'vals' → logprob: -9.500186920166016
    3. 's' → logprob: -9.875186920166016
    4. 'als' → logprob: -10.875186920166016
    5. '
' → logprob: -11.750186920166016
    6. ')' → logprob: -12.000186920166016
    7. 'l' → logprob: -12.875186920166016
    8. 'm' → logprob: -13.000186920166016
    9. 'v' → logprob: -13.125186920166016
    10. 'a' → logprob: -13.125186920166016

Token 433: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8488002419471741
    2. '):' → logprob: -1.2238001823425293
    3. '):
' → logprob: -1.3488001823425293
    4. ':
' → logprob: -4.098800182342529
    5. '       ' → logprob: -6.973800182342529
    6. '   ' → logprob: -7.348800182342529
    7. '):
' → logprob: -9.473800659179688
    8. ',' → logprob: -9.973800659179688
    9. ')' → logprob: -10.223800659179688
    10. ' :' → logprob: -10.598800659179688

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03655801713466644
    2. ' s' → logprob: -3.661557912826538
    3. 's' → logprob: -4.661558151245117
    4. '   ' → logprob: -7.911558151245117
    5. ' for' → logprob: -9.286558151245117
    6. ',' → logprob: -10.161558151245117
    7. ' ' → logprob: -10.661558151245117
    8. ':' → logprob: -10.661558151245117
    9. 'b' → logprob: -10.786558151245117
    10. '	   ' → logprob: -10.786558151245117

Token 435: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26989245414733887
    2. 'for' (adapté à ' for') → logprob: -2.144892454147339
    3. '   ' → logprob: -2.269892454147339
    4. 'low' → logprob: -5.269892692565918
    5. 'lo' → logprob: -5.394892692565918
    6. '       ' → logprob: -5.894892692565918
    7. 'v' → logprob: -7.269892692565918
    8. 'val' → logprob: -7.519892692565918
    9. 'if' → logprob: -8.019892692565918
    10. ' s' → logprob: -8.019892692565918

Token 436: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5016922950744629
    2. 'lo' → logprob: -1.126692295074463
    3. 'low' → logprob: -3.626692295074463
    4. ' lo' → logprob: -4.626692295074463
    5. 'l' → logprob: -5.001692295074463
    6. 'val' → logprob: -5.126692295074463
    7. ' j' → logprob: -5.126692295074463
    8. 'x' → logprob: -5.626692295074463
    9. 'v' → logprob: -6.626692295074463
    10. 'k' → logprob: -6.751692295074463

Token 437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10498081147670746
    2. ',' → logprob: -2.354980707168579
    3. 'in' → logprob: -5.479980945587158
    4. '   ' → logprob: -8.35498046875
    5. 's' → logprob: -9.35498046875
    6. 'range' → logprob: -9.60498046875
    7. ' ,' → logprob: -9.72998046875
    8. ' ' → logprob: -10.60498046875
    9. '  ' → logprob: -11.35498046875
    10. '0' → logprob: -11.35498046875

Token 438: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03389371931552887
    2. 's' → logprob: -4.408893585205078
    3. ' range' → logprob: -4.533893585205078
    4. 'p' → logprob: -4.908893585205078
    5. 'r' → logprob: -6.158893585205078
    6. '[' → logprob: -8.408893585205078
    7. '(' → logprob: -8.533893585205078
    8. 'product' → logprob: -8.783893585205078
    9. 'chain' → logprob: -9.283893585205078
    10. ' s' → logprob: -9.408893585205078

Token 439: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33621907234191895
    2. '1' → logprob: -1.961219072341919
    3. '4' → logprob: -2.336219072341919
    4. 'len' → logprob: -3.836219072341919
    5. '(i' → logprob: -4.46121883392334
    6. '(len' → logprob: -5.08621883392334
    7. 'i' → logprob: -5.58621883392334
    8. '2' → logprob: -6.33621883392334
    9. '0' → logprob: -6.33621883392334
    10. '((' → logprob: -7.46121883392334

Token 440: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32692819833755493
    2. '4' → logprob: -1.5769281387329102
    3. 'len' → logprob: -3.07692813873291
    4. '(' → logprob: -3.82692813873291
    5. '0' → logprob: -6.57692813873291
    6. '2' → logprob: -6.82692813873291
    7. 'i' → logprob: -7.20192813873291
    8. '(len' → logprob: -8.32692813873291
    9. '16' → logprob: -8.82692813873291
    10. ' ' → logprob: -8.82692813873291

Token 441: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07291353493928909
    2. '):' → logprob: -2.822913646697998
    3. '           ' → logprob: -4.697913646697998
    4. '       ' → logprob: -7.322913646697998
    5. '):
' → logprob: -7.572913646697998
    6. '+' → logprob: -8.69791316986084
    7. ',' → logprob: -9.19791316986084
    8. '**' → logprob: -9.94791316986084
    9. ':' → logprob: -10.07291316986084
    10. '   ' → logprob: -10.07291316986084

Token 442: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019025782821699977
    2. 's' → logprob: -6.7519025802612305
    3. ' s' → logprob: -7.3769025802612305
    4. '	       ' → logprob: -10.00190258026123
    5. '               ' → logprob: -10.25190258026123
    6. '		' → logprob: -11.87690258026123
    7. '          ' → logprob: -12.12690258026123
    8. ',' → logprob: -13.75190258026123
    9. '                   ' → logprob: -13.75190258026123
    10. 'a' → logprob: -13.75190258026123

Token 443: ' idx' (ID: 14016)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12048478424549103
    2. 's' → logprob: -2.7454848289489746
    3. ' s' → logprob: -3.3704848289489746
    4. '           ' → logprob: -4.245484828948975
    5. '   ' → logprob: -8.370484352111816
    6. '                   ' → logprob: -8.745484352111816
    7. ' ' → logprob: -9.995484352111816
    8. '       ' → logprob: -10.120484352111816
    9. '                       ' → logprob: -10.620484352111816
    10. '              ' → logprob: -10.995484352111816

Token 444: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10376572608947754
    2. '=' → logprob: -2.3537657260894775
    3. '           ' → logprob: -6.478765487670898
    4. ']' → logprob: -6.978765487670898
    5. '       ' → logprob: -8.478765487670898
    6. '   ' → logprob: -8.728765487670898
    7. ']=' → logprob: -8.853765487670898
    8. '=s' → logprob: -9.603765487670898
    9. ' ' → logprob: -9.853765487670898
    10. '          ' → logprob: -9.978765487670898

Token 445: ' ' (ID: 220)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12919099628925323
    2. 'i' → logprob: -2.7541909217834473
    3. '(p' → logprob: -3.5041909217834473
    4. '(' → logprob: -4.504190921783447
    5. 'p' → logprob: -5.129190921783447
    6. '4' → logprob: -5.254190921783447
    7. '(j' → logprob: -6.504190921783447
    8. ' (' → logprob: -6.629190921783447
    9. '((' → logprob: -6.879190921783447
    10. ' i' → logprob: -7.879190921783447

Token 446: '4' (ID: 19)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03743937984108925
    2. '(' → logprob: -4.412439346313477
    3. 'i' → logprob: -4.412439346313477
    4. '(j' → logprob: -5.162439346313477
    5. '((' → logprob: -5.537439346313477
    6. '(p' → logprob: -6.912439346313477
    7. '4' → logprob: -7.287439346313477
    8. ' (' → logprob: -7.912439346313477
    9. 'j' → logprob: -8.162439346313477
    10. '(((' → logprob: -9.162439346313477

Token 447: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.11066308617591858
    2. ' *' → logprob: -2.7356631755828857
    3. '*' → logprob: -3.2356631755828857
    4. '*j' → logprob: -7.485662937164307
    5. 'i' → logprob: -12.360663414001465
    6. '*(' → logprob: -13.485663414001465
    7. ' ' → logprob: -13.735663414001465
    8. '   ' → logprob: -13.860663414001465
    9. '*m' → logprob: -13.860663414001465
    10. '*q' → logprob: -14.485663414001465

Token 448: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009176511666737497
    2. ' i' → logprob: -7.000917434692383
    3. '(i' → logprob: -13.000917434692383
    4. '   ' → logprob: -13.125917434692383
    5. ' ' → logprob: -14.625917434692383
    6. '(' → logprob: -14.750917434692383
    7. ' (' → logprob: -15.500917434692383
    8. '	i' → logprob: -15.750917434692383
    9. '[i' → logprob: -15.875917434692383
    10. 'j' → logprob: -15.875917434692383

Token 449: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31665611267089844
    2. ' +' → logprob: -1.3166561126708984
    3. '+j' → logprob: -5.691656112670898
    4. '           ' → logprob: -11.441656112670898
    5. '+i' → logprob: -14.566656112670898
    6. '       ' → logprob: -14.566656112670898
    7. '|' → logprob: -15.066656112670898
    8. '+
' → logprob: -15.066656112670898
    9. '＋' → logprob: -15.316656112670898
    10. '+k' → logprob: -15.316656112670898

Token 450: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00015860427811276168
    2. ' j' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.625158309936523
    4. ' ' → logprob: -17.125158309936523
    5. '[' → logprob: -17.625158309936523
    6. '	j' → logprob: -17.875158309936523
    7. '[j' → logprob: -18.500158309936523
    8. '           ' → logprob: -18.750158309936523
    9. '  ' → logprob: -19.375158309936523
    10. '<|end|>' → logprob: -19.750158309936523

Token 451: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007440392859280109
    2. ' s' → logprob: -5.632440567016602
    3. 's' → logprob: -6.132440567016602
    4. '
' → logprob: -7.007440567016602
    5. '       ' → logprob: -8.257440567016602
    6. '               ' → logprob: -8.882440567016602
    7. '          ' → logprob: -9.507440567016602
    8. ' =' → logprob: -10.382440567016602
    9. '            
' → logprob: -10.382440567016602
    10. '         ' → logprob: -10.632440567016602

Token 452: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000735177774913609
    2. 's' → logprob: -7.625735282897949
    3. ',' → logprob: -9.12573528289795
    4. '               ' → logprob: -9.87573528289795
    5. ' s' → logprob: -10.50073528289795
    6. '       ' → logprob: -11.87573528289795
    7. '<|end|>' → logprob: -11.87573528289795
    8. '                   ' → logprob: -12.50073528289795
    9. 'b' → logprob: -12.50073528289795
    10. '>' → logprob: -12.75073528289795

Token 453: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.03603069484233856
    2. ' s' → logprob: -3.7860307693481445
    3. '           ' → logprob: -4.4110307693481445
    4. 'if' → logprob: -8.036030769348145
    5. '               ' → logprob: -9.036030769348145
    6. '   ' → logprob: -10.036030769348145
    7. ' if' → logprob: -10.536030769348145
    8. '       ' → logprob: -11.536030769348145
    9. 'val' → logprob: -11.536030769348145
    10. '                   ' → logprob: -11.661030769348145

Token 454: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -1.4617256056226324e-05
    2. 'm' → logprob: -11.250014305114746
    3. ' [' → logprob: -14.500014305114746
    4. '[' → logprob: -14.500014305114746
    5. '```' → logprob: -15.125014305114746
    6. '[
' → logprob: -16.250015258789062
    7. '   ' → logprob: -16.500015258789062
    8. '][' → logprob: -17.250015258789062
    9. '
' → logprob: -17.375015258789062
    10. '<m' → logprob: -18.500015258789062

Token 455: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10490385442972183
    2. '[idx' → logprob: -2.3549039363861084
    3. '[' → logprob: -6.479903697967529
    4. ']' → logprob: -6.604903697967529
    5. ' ][' → logprob: -7.479903697967529
    6. '[j' → logprob: -8.354904174804688
    7. ']=' → logprob: -8.479904174804688
    8. 'idx' → logprob: -8.979904174804688
    9. '[m' → logprob: -9.354904174804688
    10. '[i' → logprob: -9.354904174804688

Token 456: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.404745439183898e-05
    2. ' idx' → logprob: -10.50003433227539
    3. '[idx' → logprob: -12.62503433227539
    4. '           ' → logprob: -13.87503433227539
    5. ']' → logprob: -14.62503433227539
    6. '   ' → logprob: -14.87503433227539
    7. 'index' → logprob: -15.25003433227539
    8. '(idx' → logprob: -15.37503433227539
    9. '	idx' → logprob: -15.62503433227539
    10. '       ' → logprob: -15.75003433227539

Token 457: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005910431034862995
    2. '=' → logprob: -5.630910396575928
    3. ']=' → logprob: -6.380910396575928
    4. ' =' → logprob: -7.755910396575928
    5. ' ]' → logprob: -8.755910873413086
    6. ']+=' → logprob: -10.755910873413086
    7. '+=' → logprob: -13.505910873413086
    8. 's' → logprob: -13.880910873413086
    9. ')' → logprob: -14.005910873413086
    10. ' ' → logprob: -14.255910873413086

Token 458: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10112031549215317
    2. ' =' → logprob: -2.3511202335357666
    3. '+=' → logprob: -7.101120471954346
    4. ' +=' → logprob: -9.601119995117188
    5. '|' → logprob: -11.726119995117188
    6. ' |=' → logprob: -11.851119995117188
    7. ' ' → logprob: -13.226119995117188
    8. ' ^=' → logprob: -13.976119995117188
    9. '=s' → logprob: -14.101119995117188
    10. '.=' → logprob: -14.726119995117188

Token 459: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.23301824927330017
    2. '(' → logprob: -1.8580182790756226
    3. '(s' → logprob: -4.233018398284912
    4. '((' → logprob: -4.608018398284912
    5. 's' → logprob: -4.608018398284912
    6. 'add' → logprob: -5.358018398284912
    7. '(h' → logprob: -6.233018398284912
    8. ' hi' → logprob: -6.483018398284912
    9. '(add' → logprob: -6.483018398284912
    10. 'xor' → logprob: -6.733018398284912

Token 460: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.684995710849762
    2. ' ^' → logprob: -1.4349956512451172
    3. ' +' → logprob: -1.5599956512451172
    4. '^' → logprob: -3.434995651245117
    5. '|' → logprob: -4.809995651245117
    6. ' |' → logprob: -5.309995651245117
    7. ' ' → logprob: -6.684995651245117
    8. 'xor' → logprob: -8.059995651245117
    9. '   ' → logprob: -8.809995651245117
    10. ' xor' → logprob: -9.184995651245117

Token 461: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3505935072898865
    2. '(p' → logprob: -2.2255935668945312
    3. '(j' → logprob: -2.6005935668945312
    4. 'j' → logprob: -2.7255935668945312
    5. '(' → logprob: -3.7255935668945312
    6. '((' → logprob: -5.100593566894531
    7. 'b' → logprob: -5.600593566894531
    8. '(b' → logprob: -5.725593566894531
    9. '(s' → logprob: -6.225593566894531
    10. 's' → logprob: -6.600593566894531

Token 462: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.22560137510299683
    2. '(p' → logprob: -2.1006014347076416
    3. 'b' → logprob: -3.7256014347076416
    4. 'a' → logprob: -4.2256011962890625
    5. '(j' → logprob: -4.6006011962890625
    6. '1' → logprob: -4.8506011962890625
    7. 'j' → logprob: -5.3506011962890625
    8. '(' → logprob: -5.3506011962890625
    9. '(b' → logprob: -5.6006011962890625
    10. '(a' → logprob: -5.6006011962890625

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4740978181362152
    2. '2' → logprob: -0.9740978479385376
    3. '```' → logprob: -11.849098205566406
    4. 'a' → logprob: -12.661598205566406
    5. 'j' → logprob: -13.161598205566406
    6. '
' → logprob: -13.786598205566406
    7. ')' → logprob: -13.974098205566406
    8. '3' → logprob: -14.099098205566406
    9. ' ' → logprob: -14.474098205566406
    10. '   ' → logprob: -14.536598205566406

Token 464: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.440506407059729e-05
    2. '[j' → logprob: -10.50003433227539
    3. 'j' → logprob: -12.37503433227539
    4. 'aj' → logprob: -14.25003433227539
    5. ' a' → logprob: -14.50003433227539
    6. '2' → logprob: -15.12503433227539
    7. '[a' → logprob: -15.25003433227539
    8. '   ' → logprob: -15.50003433227539
    9. '[' → logprob: -15.50003433227539
    10. 'а' → logprob: -15.62503433227539

Token 465: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.9054008084349334e-05
    2. 'j' → logprob: -11.125039100646973
    3. '[' → logprob: -11.375039100646973
    4. '[(' → logprob: -12.125039100646973
    5. '[p' → logprob: -12.750039100646973
    6. ')[' → logprob: -13.000039100646973
    7. ' [' → logprob: -14.375039100646973
    8. '   ' → logprob: -14.625039100646973
    9. '[
' → logprob: -15.250039100646973
    10. '[i' → logprob: -15.375039100646973

Token 466: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023257475346326828
    2. '])' → logprob: -4.023257255554199
    3. ']<<' → logprob: -5.773257255554199
    4. ' if' → logprob: -7.898257255554199
    5. ' ]' → logprob: -8.1482572555542
    6. ' ^' → logprob: -8.1482572555542
    7. 'if' → logprob: -8.5232572555542
    8. ']^' → logprob: -8.7732572555542
    9. '^' → logprob: -9.0232572555542
    10. ']&' → logprob: -9.5232572555542

Token 467: ' if' (ID: 538)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.8504140973091125
    2. ' if' → logprob: -1.8504140377044678
    3. ' ^' → logprob: -1.8504140377044678
    4. ' <<' → logprob: -1.8504140377044678
    5. ')' → logprob: -3.2254140377044678
    6. 'if' → logprob: -4.350414276123047
    7. '^' → logprob: -4.600414276123047
    8. ' *' → logprob: -4.975414276123047
    9. ' ' → logprob: -5.225414276123047
    10. '   ' → logprob: -5.600414276123047

Token 468: ' not' (ID: 625)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1025519371032715
    2. 'i' → logprob: -1.7275519371032715
    3. 'm' → logprob: -1.7275519371032715
    4. '(i' → logprob: -1.8525519371032715
    5. '(j' → logprob: -3.4775519371032715
    6. '(m' → logprob: -3.7275519371032715
    7. '((' → logprob: -4.1025519371032715
    8. 'b' → logprob: -4.7275519371032715
    9. 'idx' → logprob: -4.7275519371032715
    10. 'p' → logprob: -4.9775519371032715

Token 469: ' i' (ID: 575)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7284190058708191
    2. '(j' → logprob: -2.228419065475464
    3. ' (' → logprob: -2.478419065475464
    4. ' j' → logprob: -2.978419065475464
    5. 'j' → logprob: -2.978419065475464
    6. '((' → logprob: -3.103419065475464
    7. 'i' → logprob: -3.353419065475464
    8. 'DBG' → logprob: -3.478419065475464
    9. ' i' → logprob: -3.603419065475464
    10. ' DBG' → logprob: -4.228418827056885

Token 470: ' else' (ID: 1203)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.37657850980758667
    2. '&' → logprob: -1.2515785694122314
    3. '>>' → logprob: -4.126578330993652
    4. '%' → logprob: -5.251578330993652
    5. ' else' → logprob: -5.751578330993652
    6. '==' → logprob: -7.001578330993652
    7. ' %' → logprob: -7.626578330993652
    8. 'else' → logprob: -7.876578330993652
    9. ' >>' → logprob: -8.126578330993652
    10. '&amp' → logprob: -8.376578330993652

Token 471: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3600883185863495
    2. ' p' → logprob: -1.3600883483886719
    3. '0' → logprob: -4.110088348388672
    4. '(p' → logprob: -4.485088348388672
    5. ' ' → logprob: -4.985088348388672
    6. 'b' → logprob: -5.985088348388672
    7. ' (' → logprob: -6.610088348388672
    8. 's' → logprob: -6.860088348388672
    9. '1' → logprob: -6.860088348388672
    10. ' b' → logprob: -7.110088348388672

Token 472: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1798010915517807
    2. '1' → logprob: -1.804801106452942
    3. 'a' → logprob: -11.492300987243652
    4. '```' → logprob: -12.742300987243652
    5. '
' → logprob: -12.804800987243652
    6. '0' → logprob: -12.929800987243652
    7. '[' → logprob: -12.929800987243652
    8. 'p' → logprob: -12.992300987243652
    9. 'b' → logprob: -13.492300987243652
    10. '[p' → logprob: -13.679800987243652

Token 473: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.523948907968588e-05
    2. '[j' → logprob: -10.375035285949707
    3. '[m' → logprob: -13.750035285949707
    4. 'а' → logprob: -14.625035285949707
    5. '[' → logprob: -15.000035285949707
    6. 'j' → logprob: -15.000035285949707
    7. '1' → logprob: -15.000035285949707
    8. '_a' → logprob: -15.250035285949707
    9. '[a' → logprob: -15.375035285949707
    10. '```' → logprob: -15.500035285949707

Token 474: '[' (ID: 58)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005352786974981427
    2. '[i' → logprob: -8.125535011291504
    3. '[idx' → logprob: -8.750535011291504
    4. '[' → logprob: -9.750535011291504
    5. '][' → logprob: -11.875535011291504
    6. ' [' → logprob: -12.000535011291504
    7. '])' → logprob: -13.000535011291504
    8. ']' → logprob: -13.125535011291504
    9. 'j' → logprob: -13.250535011291504
    10. ')' → logprob: -13.875535011291504

Token 475: '4' (ID: 19)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5031856894493103
    2. 'i' → logprob: -1.003185749053955
    3. 'j' → logprob: -3.628185749053955
    4. '4' → logprob: -7.378185749053955
    5. '(i' → logprob: -7.753185749053955
    6. '(' → logprob: -8.128185272216797
    7. '(idx' → logprob: -8.253185272216797
    8. ' idx' → logprob: -8.378185272216797
    9. 'index' → logprob: -9.503185272216797
    10. '(j' → logprob: -10.378185272216797

Token 476: ' *' (ID: 425)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2660543620586395
    2. '*j' → logprob: -2.016054391860962
    3. '*' → logprob: -3.391054391860962
    4. 'i' → logprob: -3.641054391860962
    5. '*i' → logprob: -3.891054391860962
    6. 'idx' → logprob: -4.141054153442383
    7. ' *' → logprob: -5.766054153442383
    8. ' j' → logprob: -8.016054153442383
    9. '+' → logprob: -9.141054153442383
    10. '+j' → logprob: -9.141054153442383

Token 477: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1269262135028839
    2. '(i' → logprob: -2.2519261837005615
    3. 'idx' → logprob: -5.376926422119141
    4. ' (' → logprob: -5.876926422119141
    5. ' i' → logprob: -6.251926422119141
    6. '((' → logprob: -6.501926422119141
    7. 'j' → logprob: -7.126926422119141
    8. '(idx' → logprob: -7.251926422119141
    9. '(' → logprob: -7.376926422119141
    10. '(j' → logprob: -7.751926422119141

Token 478: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5242847204208374
    2. '(i' → logprob: -0.8992847204208374
    3. ' (' → logprob: -7.274284839630127
    4. ' i' → logprob: -8.649284362792969
    5. '(' → logprob: -9.774284362792969
    6. '(j' → logprob: -10.149284362792969
    7. '(m' → logprob: -10.399284362792969
    8. 'j' → logprob: -10.899284362792969
    9. '((' → logprob: -10.899284362792969
    10. ' ' → logprob: -11.149284362792969

Token 479: ' %' (ID: 1851)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06693601608276367
    2. ' +' → logprob: -2.9419360160827637
    3. '   ' → logprob: -5.566936016082764
    4. '       ' → logprob: -6.066936016082764
    5. '+j' → logprob: -6.191936016082764
    6. '//' → logprob: -6.941936016082764
    7. '    ' → logprob: -7.441936016082764
    8. '-' → logprob: -7.566936016082764
    9. ' ' → logprob: -7.941936016082764
    10. '1' → logprob: -8.191936492919922

Token 480: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4195529818534851
    2. '8' → logprob: -2.04455304145813
    3. '2' → logprob: -2.79455304145813
    4. '(' → logprob: -3.04455304145813
    5. '7' → logprob: -3.16955304145813
    6. '((' → logprob: -3.79455304145813
    7. 'len' → logprob: -4.669552803039551
    8. '(len' → logprob: -4.669552803039551
    9. '16' → logprob: -5.044552803039551
    10. '3' → logprob: -5.669552803039551

Token 481: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.536331295967102
    2. '2' → logprob: -1.536331295967102
    3. '1' → logprob: -1.911331295967102
    4. '((' → logprob: -1.911331295967102
    5. '(m' → logprob: -2.4113311767578125
    6. '(j' → logprob: -2.9113311767578125
    7. '(i' → logprob: -2.9113311767578125
    8. '(len' → logprob: -3.4113311767578125
    9. '4' → logprob: -4.2863311767578125
    10. '8' → logprob: -4.9113311767578125

Token 482: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8392654657363892
    2. ')' → logprob: -1.2142654657363892
    3. ' +' → logprob: -1.3392654657363892
    4. ')+' → logprob: -5.3392653465271
    5. '+j' → logprob: -6.2142653465271
    6. '   ' → logprob: -7.4642653465271
    7. ' ' → logprob: -7.5892653465271
    8. '+i' → logprob: -7.9642653465271
    9. ')]' → logprob: -8.714265823364258
    10. '//' → logprob: -8.964265823364258

Token 483: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28211870789527893
    2. '+' → logprob: -1.4071186780929565
    3. '+j' → logprob: -7.407118797302246
    4. ':' → logprob: -8.782118797302246
    5. ')' → logprob: -9.657118797302246
    6. '+i' → logprob: -9.907118797302246
    7. '   ' → logprob: -11.032118797302246
    8. ' :' → logprob: -11.407118797302246
    9. ')+' → logprob: -11.657118797302246
    10. ' ' → logprob: -11.782118797302246

Token 484: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0015224798116832972
    2. ' j' → logprob: -6.501522541046143
    3. '   ' → logprob: -12.001522064208984
    4. '(j' → logprob: -12.376522064208984
    5. ' ' → logprob: -12.876522064208984
    6. 'p' → logprob: -13.126522064208984
    7. '	j' → logprob: -13.751522064208984
    8. '  ' → logprob: -13.751522064208984
    9. '(' → logprob: -14.001522064208984
    10. ' (' → logprob: -14.251522064208984

Token 485: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0017714503919705749
    2. '])
' → logprob: -7.501771450042725
    3. ' ])' → logprob: -7.626771450042725
    4. ']' → logprob: -7.751771450042725
    5. ')])' → logprob: -8.751771926879883
    6. ']))' → logprob: -9.751771926879883
    7. ')' → logprob: -10.376771926879883
    8. '])]' → logprob: -10.751771926879883
    9. ']])' → logprob: -11.751771926879883
    10. '])

' → logprob: -12.876771926879883

Token 486: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 487: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: ' DBG' (ID: 100080)
  Prédit: 'DBG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DBG' → logprob: -0.393378883600235
    2. ' DBG' → logprob: -1.1433788537979126
    3. ' not' → logprob: -6.518378734588623
    4. '(DB' → logprob: -7.018378734588623
    5. ' s' → logprob: -7.393378734588623
    6. 'i' → logprob: -7.393378734588623
    7. 's' → logprob: -7.768378734588623
    8. 'not' → logprob: -8.143379211425781
    9. ' i' → logprob: -8.268379211425781
    10. ' ' → logprob: -8.518379211425781

Token 489: '2' (ID: 17)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20675291121006012
    2. '2' → logprob: -1.956752896308899
    3. ' and' → logprob: -3.3317530155181885
    4. 'and' → logprob: -4.956752777099609
    5. '[' → logprob: -6.706752777099609
    6. ':
' → logprob: -8.20675277709961
    7. '   ' → logprob: -8.20675277709961
    8. ' :' → logprob: -8.45675277709961
    9. '):' → logprob: -8.58175277709961
    10. '==' → logprob: -9.08175277709961

Token 490: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015251481905579567
    2. ':
' → logprob: -4.390251636505127
    3. ' and' → logprob: -6.265251636505127
    4. ' :' → logprob: -7.765251636505127
    5. '           ' → logprob: -9.140251159667969
    6. '==' → logprob: -9.265251159667969
    7. ' ==' → logprob: -10.140251159667969
    8. '       ' → logprob: -10.140251159667969
    9. ' :
' → logprob: -10.765251159667969
    10. '<|end|>' → logprob: -10.890251159667969

Token 491: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12838661670684814
    2. ' print' → logprob: -2.1283864974975586
    3. 'print' → logprob: -7.378386497497559
    4. '                       ' → logprob: -8.628386497497559
    5. '                   ' → logprob: -8.628386497497559
    6. '                           ' → logprob: -9.503386497497559
    7. '             ' → logprob: -9.503386497497559
    8. '                ' → logprob: -9.753386497497559
    9. '                               ' → logprob: -9.753386497497559
    10. '           ' → logprob: -9.753386497497559

Token 492: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16022828221321106
    2. ' print' → logprob: -1.9102282524108887
    3. '                   ' → logprob: -12.910228729248047
    4. '               ' → logprob: -14.660228729248047
    5. '                           ' → logprob: -14.660228729248047
    6. '                               ' → logprob: -15.035228729248047
    7. '                       ' → logprob: -15.035228729248047
    8. '                                   ' → logprob: -16.910228729248047
    9. '   ' → logprob: -17.410228729248047
    10. '	print' → logprob: -17.660228729248047

Token 493: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.05839577689766884
    2. '(' → logprob: -3.0583958625793457
    3. '("' → logprob: -4.933395862579346
    4. '('' → logprob: -6.683395862579346
    5. '()' → logprob: -6.933395862579346
    6. '("")' → logprob: -8.558395385742188
    7. '(
' → logprob: -9.683395385742188
    8. '("("' → logprob: -10.433395385742188
    9. '(s' → logprob: -10.808395385742188
    10. '("",' → logprob: -11.933395385742188

Token 494: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.832656741142273
    2. 'm' → logprob: -1.082656741142273
    3. 's' → logprob: -2.5826568603515625
    4. '"' → logprob: -2.7076568603515625
    5. ' f' → logprob: -3.4576568603515625
    6. ''m' → logprob: -4.2076568603515625
    7. ' m' → logprob: -4.4576568603515625
    8. 'idx' → logprob: -4.9576568603515625
    9. '"s' → logprob: -5.2076568603515625
    10. ' s' → logprob: -5.9576568603515625

Token 495: 'set' (ID: 977)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.31269243359565735
    2. 's' → logprob: -1.812692403793335
    3. 'idx' → logprob: -3.062692403793335
    4. ' m' → logprob: -4.312692642211914
    5. '")' → logprob: -4.937692642211914
    6. ')' → logprob: -4.937692642211914
    7. ' s' → logprob: -5.062692642211914
    8. '{' → logprob: -5.187692642211914
    9. '4' → logprob: -5.687692642211914
    10. 'i' → logprob: -6.187692642211914

Token 496: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23179934918880463
    2. 'm' → logprob: -2.731799364089966
    3. '(m' → logprob: -2.731799364089966
    4. '[m' → logprob: -3.231799364089966
    5. ' s' → logprob: -4.106799125671387
    6. ' m' → logprob: -4.856799125671387
    7. '(s' → logprob: -5.231799125671387
    8. ' (' → logprob: -5.731799125671387
    9. '")' → logprob: -6.731799125671387
    10. '(' → logprob: -7.356799125671387

Token 497: ' m' (ID: 284)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.03646066412329674
    2. '{' → logprob: -3.7864606380462646
    3. 'm' → logprob: -4.411460876464844
    4. '[{' → logprob: -7.286460876464844
    5. '")' → logprob: -8.661460876464844
    6. '[' → logprob: -10.661460876464844
    7. ' {' → logprob: -11.161460876464844
    8. ')' → logprob: -11.161460876464844
    9. ',m' → logprob: -11.286460876464844
    10. ')m' → logprob: -11.536460876464844

Token 498: ' {' (ID: 354)
  Prédit: '[{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[{' → logprob: -0.37440046668052673
    2. '[m' → logprob: -1.6244004964828491
    3. '{' → logprob: -2.3744003772735596
    4. '[' → logprob: -4.374400615692139
    5. ',' → logprob: -5.249400615692139
    6. 'm' → logprob: -6.874400615692139
    7. '")' → logprob: -7.624400615692139
    8. '}' → logprob: -7.624400615692139
    9. ',m' → logprob: -7.999400615692139
    10. ' {' → logprob: -7.999400615692139

Token 499: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.749814019713085e-06
    2. ' m' → logprob: -12.750006675720215
    3. '{' → logprob: -12.875006675720215
    4. '}' → logprob: -14.375006675720215
    5. '[m' → logprob: -15.375006675720215
    6. ',m' → logprob: -16.12500762939453
    7. ')m' → logprob: -16.12500762939453
    8. ')' → logprob: -17.25000762939453
    9. ''m' → logprob: -17.50000762939453
    10. ' ' → logprob: -17.75000762939453

Token 500: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0027116762939840555
    2. '},' → logprob: -6.377711772918701
    3. '}[' → logprob: -7.127711772918701
    4. '}{' → logprob: -9.252711296081543
    5. 'idx' → logprob: -10.627711296081543
    6. '[idx' → logprob: -10.627711296081543
    7. ' }' → logprob: -11.752711296081543
    8. ' idx' → logprob: -11.752711296081543
    9. '[i' → logprob: -11.877711296081543
    10. '=}' → logprob: -12.127711296081543

Token 501: ' i' (ID: 575)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.09611721336841583
    2. '}' → logprob: -3.5961172580718994
    3. '[idx' → logprob: -4.09611701965332
    4. ',' → logprob: -4.34611701965332
    5. 'idx' → logprob: -4.59611701965332
    6. '[{' → logprob: -4.97111701965332
    7. ' {' → logprob: -5.09611701965332
    8. ' i' → logprob: -5.47111701965332
    9. '[i' → logprob: -5.97111701965332
    10. ' j' → logprob: -6.84611701965332

Token 502: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3054864704608917
    2. '}' → logprob: -1.8054864406585693
    3. '}{' → logprob: -3.1804864406585693
    4. ' {' → logprob: -3.4304864406585693
    5. 'idx' → logprob: -4.430486679077148
    6. ' idx' → logprob: -4.805486679077148
    7. '[idx' → logprob: -6.305486679077148
    8. '{i' → logprob: -6.680486679077148
    9. '={' → logprob: -7.555486679077148
    10. '=' → logprob: -7.805486679077148

Token 503: 'i' (ID: 72)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0002120038407156244
    2. 'i' → logprob: -9.000211715698242
    3. ' idx' → logprob: -10.250211715698242
    4. '{' → logprob: -10.250211715698242
    5. 'index' → logprob: -11.500211715698242
    6. '{i' → logprob: -12.875211715698242
    7. '}' → logprob: -13.875211715698242
    8. 'm' → logprob: -14.125211715698242
    9. 'id' → logprob: -14.375211715698242
    10. '	idx' → logprob: -14.625211715698242

Token 504: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0019269711337983608
    2. '},' → logprob: -6.751926898956299
    3. '}{' → logprob: -8.251927375793457
    4. ' }' → logprob: -9.376927375793457
    5. '[j' → logprob: -9.501927375793457
    6. ' j' → logprob: -9.626927375793457
    7. '}[' → logprob: -9.751927375793457
    8. ',j' → logprob: -9.751927375793457
    9. ',' → logprob: -9.876927375793457
    10. 'j' → logprob: -11.001927375793457

Token 505: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06476625800132751
    2. ' idx' → logprob: -3.3147661685943604
    3. '}' → logprob: -4.6897664070129395
    4. ' {' → logprob: -4.9397664070129395
    5. ' ' → logprob: -6.0647664070129395
    6. 'j' → logprob: -6.3147664070129395
    7. ',' → logprob: -6.5647664070129395
    8. ']' → logprob: -6.6897664070129395
    9. '[j' → logprob: -6.9397664070129395
    10. '{' → logprob: -7.6897664070129395

Token 506: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.48491740226745605
    2. '{' → logprob: -0.984917402267456
    3. ' j' → logprob: -4.859917640686035
    4. '}' → logprob: -5.984917640686035
    5. 'j' → logprob: -8.484917640686035
    6. ' ' → logprob: -8.984917640686035
    7. '{i' → logprob: -9.859917640686035
    8. ' }' → logprob: -10.109917640686035
    9. '={' → logprob: -10.234917640686035
    10. '}{' → logprob: -10.984917640686035

Token 507: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.833878508885391e-05
    2. ' j' → logprob: -10.250038146972656
    3. '}' → logprob: -13.500038146972656
    4. 'str' → logprob: -14.000038146972656
    5. '{' → logprob: -15.250038146972656
    6. '   ' → logprob: -15.375038146972656
    7. ' ' → logprob: -15.500038146972656
    8. '	j' → logprob: -17.500038146972656
    9. '  ' → logprob: -18.750038146972656
    10. 'f' → logprob: -19.000038146972656

Token 508: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.07436968386173248
    2. '}")' → logprob: -2.6993696689605713
    3. ' }' → logprob: -5.57436990737915
    4. '}")
' → logprob: -8.324369430541992
    5. ']' → logprob: -9.074369430541992
    6. '}:' → logprob: -10.324369430541992
    7. '}{' → logprob: -10.324369430541992
    8. '")' → logprob: -10.449369430541992
    9. '}"' → logprob: -10.699369430541992
    10. '}\' → logprob: -10.949369430541992

Token 509: ' -' (ID: 533)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.5116449594497681
    2. '")' → logprob: -1.386644959449768
    3. ' {' → logprob: -2.7616448402404785
    4. ')")' → logprob: -3.7616448402404785
    5. ' ' → logprob: -4.1366448402404785
    6. '}' → logprob: -4.5116448402404785
    7. ' }' → logprob: -4.6366448402404785
    8. ' ")' → logprob: -5.0116448402404785
    9. '{' → logprob: -5.1366448402404785
    10. ' s' → logprob: -6.2616448402404785

Token 510: ' {' (ID: 354)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7867593169212341
    2. '{s' → logprob: -1.661759376525879
    3. 's' → logprob: -1.786759376525879
    4. '{' → logprob: -2.411759376525879
    5. ' {' → logprob: -2.411759376525879
    6. ' idx' → logprob: -5.161759376525879
    7. 'idx' → logprob: -6.536759376525879
    8. '{i' → logprob: -8.661759376525879
    9. ' ' → logprob: -8.911759376525879
    10. ' p' → logprob: -9.661759376525879

Token 511: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3137456178665161
    2. 'm' → logprob: -2.5637454986572266
    3. 'idx' → logprob: -2.8137454986572266
    4. ' s' → logprob: -2.9387454986572266
    5. 'hi' → logprob: -3.1887454986572266
    6. ' idx' → logprob: -4.688745498657227
    7. ' m' → logprob: -5.063745498657227
    8. 'i' → logprob: -5.438745498657227
    9. ' hi' → logprob: -5.563745498657227
    10. 'repr' → logprob: -5.813745498657227

Token 512: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.006760487332940102
    2. 'm' → logprob: -5.881760597229004
    3. '}' → logprob: -6.506760597229004
    4. '2' → logprob: -6.881760597229004
    5. '}[' → logprob: -7.131760597229004
    6. '{' → logprob: -8.756760597229004
    7. '[' → logprob: -9.506760597229004
    8. '})' → logprob: -9.506760597229004
    9. '}{' → logprob: -9.631760597229004
    10. ')m' → logprob: -9.881760597229004

Token 513: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02009320817887783
    2. ']' → logprob: -4.7700934410095215
    3. ']}' → logprob: -5.2700934410095215
    4. '[j' → logprob: -5.7700934410095215
    5. '])' → logprob: -7.2700934410095215
    6. '[m' → logprob: -7.2700934410095215
    7. '[' → logprob: -7.2700934410095215
    8. '}[' → logprob: -7.6450934410095215
    9. ' ][' → logprob: -9.020092964172363
    10. '[i' → logprob: -9.395092964172363

Token 514: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0008211841923184693
    2. 'i' → logprob: -7.625821113586426
    3. '][' → logprob: -9.375821113586426
    4. ']' → logprob: -9.875821113586426
    5. ' idx' → logprob: -10.000821113586426
    6. ']}' → logprob: -10.375821113586426
    7. '{' → logprob: -10.500821113586426
    8. '[idx' → logprob: -10.500821113586426
    9. '}' → logprob: -10.750821113586426
    10. '
' → logprob: -11.875821113586426

Token 515: ']}' (ID: 28000)
  Prédit: ']}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']}' → logprob: -0.5551674962043762
    2. '}")' → logprob: -0.9301674962043762
    3. ']' → logprob: -4.0551676750183105
    4. '}' → logprob: -4.4301676750183105
    5. ' }' → logprob: -7.9301676750183105
    6. '}")
' → logprob: -7.9301676750183105
    7. ']}"' → logprob: -8.055167198181152
    8. '])' → logprob: -8.180167198181152
    9. ')}' → logprob: -8.430167198181152
    10. '}]' → logprob: -8.555167198181152

Token 516: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.030778920277953148
    2. ')' → logprob: -4.155778884887695
    3. '\n' → logprob: -5.155778884887695
    4. '}")' → logprob: -5.155778884887695
    5. '")
' → logprob: -6.405778884887695
    6. ')")' → logprob: -7.030778884887695
    7. '}' → logprob: -8.780778884887695
    8. '")}' → logprob: -9.280778884887695
    9. ' ")' → logprob: -9.530778884887695
    10. ' )' → logprob: -10.280778884887695

Token 517: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 518: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16037553548812866
    2. ' m' → logprob: -2.0353755950927734
    3. 'i' → logprob: -5.035375595092773
    4. 'k' → logprob: -6.410375595092773
    5. ' i' → logprob: -6.660375595092773
    6. 'x' → logprob: -6.660375595092773
    7. 'n' → logprob: -6.785375595092773
    8. 'd' → logprob: -7.035375595092773
    9. 'l' → logprob: -7.410375595092773
    10. ' n' → logprob: -7.910375595092773

Token 519: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029791342094540596
    2. 'in' → logprob: -3.5297913551330566
    3. ' ' → logprob: -11.154790878295898
    4. ',' → logprob: -11.529790878295898
    5. '	in' → logprob: -12.529790878295898
    6. 'm' → logprob: -13.279790878295898
    7. '1' → logprob: -13.779790878295898
    8. '  ' → logprob: -13.779790878295898
    9. ')' → logprob: -14.092290878295898
    10. 'n' → logprob: -14.217290878295898

Token 520: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048741791397333145
    2. ' range' → logprob: -3.0487418174743652
    3. '(range' → logprob: -9.548741340637207
    4. '[' → logprob: -10.173741340637207
    5. 'in' → logprob: -11.173741340637207
    6. ' ' → logprob: -11.798741340637207
    7. 'b' → logprob: -12.423741340637207
    8. ' in' → logprob: -12.923741340637207
    9. 'a' → logprob: -13.298741340637207
    10. '   ' → logprob: -13.548741340637207

Token 521: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04219187796115875
    2. '5' → logprob: -3.292191982269287
    3. '3' → logprob: -5.542191982269287
    4. '(MAX' → logprob: -9.042191505432129
    5. 'MAX' → logprob: -10.542191505432129
    6. '4' → logprob: -10.917191505432129
    7. '7' → logprob: -11.542191505432129
    8. 'a' → logprob: -11.792191505432129
    9. '(M' → logprob: -11.792191505432129
    10. '1' → logprob: -12.167191505432129

Token 522: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5811288356781006
    2. '3' → logprob: -0.8311288356781006
    3. '1' → logprob: -5.83112907409668
    4. 'MAX' → logprob: -7.08112907409668
    5. '4' → logprob: -7.20612907409668
    6. '7' → logprob: -8.08112907409668
    7. ' ' → logprob: -8.83112907409668
    8. '2' → logprob: -9.08112907409668
    9. '0' → logprob: -10.95612907409668
    10. '6' → logprob: -11.20612907409668

Token 523: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003852812573313713
    2. '+' → logprob: -5.878852844238281
    3. ' +' → logprob: -7.003852844238281
    4. ' ,' → logprob: -9.503852844238281
    5. '2' → logprob: -11.128852844238281
    6. 'MAX' → logprob: -11.128852844238281
    7. 'm' → logprob: -11.753852844238281
    8. '+,' → logprob: -12.253852844238281
    9. ',m' → logprob: -12.503852844238281
    10. 'n' → logprob: -12.753852844238281

Token 524: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0013366704806685448
    2. ' MAX' → logprob: -6.626336574554443
    3. '(MAX' → logprob: -12.126337051391602
    4. '   ' → logprob: -13.751337051391602
    5. 'max' → logprob: -13.751337051391602
    6. ' ' → logprob: -14.001337051391602
    7. 'MIN' → logprob: -14.376337051391602
    8. '3' → logprob: -14.751337051391602
    9. '4' → logprob: -15.126337051391602
    10. '  ' → logprob: -16.0013370513916

Token 525: 'M' (ID: 44)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.13679292798042297
    2. ',' → logprob: -2.5117928981781006
    3. 'M' → logprob: -3.3867928981781006
    4. '+' → logprob: -5.01179313659668
    5. '(' → logprob: -6.01179313659668
    6. '(m' → logprob: -7.13679313659668
    7. '1' → logprob: -7.76179313659668
    8. '```' → logprob: -7.76179313659668
    9. '2' → logprob: -8.01179313659668
    10. ')' → logprob: -8.63679313659668

Token 526: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07497414946556091
    2. '+' → logprob: -2.8249740600585938
    3. '):
' → logprob: -4.949974060058594
    4. ' +' → logprob: -5.324974060058594
    5. '   ' → logprob: -8.199974060058594
    6. '):' → logprob: -8.324974060058594
    7. ' ,' → logprob: -8.949974060058594
    8. '+,' → logprob: -9.574974060058594
    9. '2' → logprob: -9.949974060058594
    10. '-' → logprob: -9.949974060058594

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05935738608241081
    2. 's' → logprob: -3.3093574047088623
    3. ' s' → logprob: -4.184357166290283
    4. 'for' → logprob: -5.934357166290283
    5. ' for' → logprob: -6.809357166290283
    6. '	s' → logprob: -7.184357166290283
    7. ' ' → logprob: -8.059357643127441
    8. 'if' → logprob: -8.184357643127441
    9. 'a' → logprob: -9.309357643127441
    10. 'n' → logprob: -9.434357643127441

Token 528: ' s' (ID: 265)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07015527784824371
    2. 's' (adapté à ' s') → logprob: -3.695155382156372
    3. 'for' → logprob: -3.820155382156372
    4. '   ' → logprob: -4.695155143737793
    5. 'if' → logprob: -5.320155143737793
    6. 'p' → logprob: -6.320155143737793
    7. 't' → logprob: -7.195155143737793
    8. 'l' → logprob: -7.445155143737793
    9. 'n' → logprob: -7.820155143737793
    10. 'a' → logprob: -7.820155143737793

Token 529: '2' (ID: 17)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.00022713904036208987
    2. 'm' → logprob: -8.500226974487305
    3. '[' → logprob: -12.250226974487305
    4. '   ' → logprob: -12.375226974487305
    5. ' [' → logprob: -13.000226974487305
    6. '][' → logprob: -13.375226974487305
    7. ' =' → logprob: -13.750226974487305
    8. '
' → logprob: -14.000226974487305
    9. ')[' → logprob: -14.375226974487305
    10. '_m' → logprob: -14.500226974487305

Token 530: 'm' (ID: 76)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.002154784044250846
    2. ' =' → logprob: -6.50215482711792
    3. 'm' → logprob: -8.127154350280762
    4. '=' → logprob: -8.252154350280762
    5. '[' → logprob: -10.502154350280762
    6. '=m' → logprob: -10.502154350280762
    7. ' [' → logprob: -11.627154350280762
    8. '   ' → logprob: -11.752154350280762
    9. '=[' → logprob: -12.002154350280762
    10. ']' → logprob: -12.377154350280762

Token 531: ' =' (ID: 314)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.047856368124485016
    2. '=' → logprob: -3.797856330871582
    3. ' =' → logprob: -3.797856330871582
    4. '[' → logprob: -7.047856330871582
    5. '=m' → logprob: -7.297856330871582
    6. 'm' → logprob: -8.922856330871582
    7. '=[' → logprob: -9.422856330871582
    8. ']' → logprob: -9.797856330871582
    9. ' [' → logprob: -11.172856330871582
    10. '[s' → logprob: -11.422856330871582

Token 532: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06099892407655716
    2. '[m' → logprob: -3.6859989166259766
    3. '[s' → logprob: -4.685998916625977
    4. 's' → logprob: -4.685998916625977
    5. 'default' → logprob: -5.185998916625977
    6. '{}' → logprob: -5.310998916625977
    7. ' [' → logprob: -6.560998916625977
    8. '{' → logprob: -6.560998916625977
    9. 'm' → logprob: -8.060998916625977
    10. '[(' → logprob: -8.060998916625977

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5028359293937683
    2. 's' → logprob: -1.752835988998413
    3. 'm' → logprob: -2.002835988998413
    4. '(' → logprob: -3.252835988998413
    5. '2' → logprob: -3.877835988998413
    6. 'sum' → logprob: -5.377835750579834
    7. '[' → logprob: -5.502835750579834
    8. '0' → logprob: -5.627835750579834
    9. '[m' → logprob: -5.752835750579834
    10. '(m' → logprob: -6.252835750579834

Token 534: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.2815680205821991
    2. ' <<' → logprob: -1.4065680503845215
    3. 'm' → logprob: -9.406567573547363
    4. '   ' → logprob: -9.656567573547363
    5. '<<(' → logprob: -9.781567573547363
    6. '<' → logprob: -10.031567573547363
    7. ' ' → logprob: -10.281567573547363
    8. '1' → logprob: -10.281567573547363
    9. '<m' → logprob: -10.656567573547363
    10. '<<<' → logprob: -11.531567573547363

Token 535: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06475832313299179
    2. '(m' → logprob: -2.81475830078125
    3. '(' → logprob: -5.93975830078125
    4. ' (' → logprob: -10.43975830078125
    5. ' m' → logprob: -10.56475830078125
    6. '2' → logprob: -10.81475830078125
    7. '   ' → logprob: -11.31475830078125
    8. '1' → logprob: -11.56475830078125
    9. '18' → logprob: -12.06475830078125
    10. '((' → logprob: -12.18975830078125

Token 536: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013871987350285053
    2. '1' → logprob: -4.763872146606445
    3. ')
' → logprob: -5.638872146606445
    4. '2' → logprob: -7.638872146606445
    5. '-' → logprob: -8.013872146606445
    6. '   ' → logprob: -8.763872146606445
    7. ')-' → logprob: -9.013872146606445
    8. ')>>' → logprob: -9.013872146606445
    9. ' ' → logprob: -9.138872146606445
    10. ' )' → logprob: -9.138872146606445

Token 537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23634372651576996
    2. ' for' → logprob: -1.9863437414169312
    3. 'for' → logprob: -3.2363436222076416
    4. ' s' → logprob: -4.486343860626221
    5. 's' → logprob: -4.611343860626221
    6. ' =' → logprob: -4.861343860626221
    7. '=' → logprob: -7.111343860626221
    8. ',' → logprob: -7.111343860626221
    9. ' ' → logprob: -7.486343860626221
    10. ' range' → logprob: -7.861343860626221

Token 538: ' r' (ID: 428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03168337792158127
    2. ' for' → logprob: -4.656683444976807
    3. 's' → logprob: -5.156683444976807
    4. '   ' → logprob: -5.281683444976807
    5. 'r' (adapté à ' r') → logprob: -5.781683444976807
    6. 'if' → logprob: -6.656683444976807
    7. 'a' → logprob: -7.281683444976807
    8. 'dp' → logprob: -7.281683444976807
    9. 't' → logprob: -7.406683444976807
    10. 'p' → logprob: -7.656683444976807

Token 539: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.008755200542509556
    2. '2' → logprob: -5.758755207061768
    3. '[s' → logprob: -6.133755207061768
    4. 's' → logprob: -7.008755207061768
    5. 'm' → logprob: -7.258755207061768
    6. ' =' → logprob: -7.383755207061768
    7. '[' → logprob: -8.25875473022461
    8. '   ' → logprob: -8.63375473022461
    9. '=' → logprob: -8.75875473022461
    10. ' [' → logprob: -9.38375473022461

Token 540: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07474619150161743
    2. ']=' → logprob: -2.8247461318969727
    3. '][' → logprob: -4.449746131896973
    4. '=' → logprob: -8.574746131896973
    5. ']+=' → logprob: -8.699746131896973
    6. '[' → logprob: -8.949746131896973
    7. '][]' → logprob: -9.449746131896973
    8. '],' → logprob: -9.449746131896973
    9. '].' → logprob: -9.574746131896973
    10. ']=(' → logprob: -9.699746131896973

Token 541: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1288299262523651
    2. ' =' → logprob: -2.1288299560546875
    3. '[' → logprob: -6.6288299560546875
    4. '=[' → logprob: -8.878829956054688
    5. ']' → logprob: -9.253829956054688
    6. '[:]' → logprob: -9.503829956054688
    7. ' +=' → logprob: -9.753829956054688
    8. '.append' → logprob: -10.003829956054688
    9. '=[]' → logprob: -10.253829956054688
    10. '.extend' → logprob: -10.378829956054688

Token 542: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012549558654427528
    2. ' [' → logprob: -4.63754940032959
    3. '[s' → logprob: -6.38754940032959
    4. '[(' → logprob: -7.76254940032959
    5. '[[' → logprob: -8.51254940032959
    6. '[p' → logprob: -9.01254940032959
    7. '[-' → logprob: -9.13754940032959
    8. '   ' → logprob: -10.38754940032959
    9. '[r' → logprob: -10.38754940032959
    10. 's' → logprob: -10.51254940032959

Token 543: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030385900288820267
    2. '(' → logprob: -4.905385971069336
    3. '[' → logprob: -4.905385971069336
    4. 'x' → logprob: -5.280385971069336
    5. 's' → logprob: -6.405385971069336
    6. '((' → logprob: -6.655385971069336
    7. 'i' → logprob: -7.030385971069336
    8. '(x' → logprob: -7.155385971069336
    9. '[x' → logprob: -7.405385971069336
    10. 'val' → logprob: -7.530385971069336

Token 544: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030654144939035177
    2. ']*' → logprob: -6.003065586090088
    3. ']*(' → logprob: -8.62806510925293
    4. ' for' → logprob: -8.87806510925293
    5. '   ' → logprob: -9.00306510925293
    6. ' ]' → logprob: -9.37806510925293
    7. 'for' → logprob: -11.12806510925293
    8. ']<<' → logprob: -11.75306510925293
    9. '+' → logprob: -12.00306510925293
    10. '*' → logprob: -12.00306510925293

Token 545: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43604105710983276
    2. '*' → logprob: -2.0610411167144775
    3. ']*' → logprob: -2.0610411167144775
    4. ']*(' → logprob: -2.9360411167144775
    5. ' *' → logprob: -3.6860411167144775
    6. '*(' → logprob: -4.686040878295898
    7. ' for' → logprob: -5.061040878295898
    8. 'for' → logprob: -5.811040878295898
    9. '*s' → logprob: -7.686040878295898
    10. '(s' → logprob: -8.436040878295898

Token 546: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.035602834075689316
    2. '(' → logprob: -3.4106028079986572
    3. '(s' → logprob: -6.285603046417236
    4. ' s' → logprob: -10.285602569580078
    5. '   ' → logprob: -10.410602569580078
    6. ' (' → logprob: -11.285602569580078
    7. ' ' → logprob: -12.285602569580078
    8. '((' → logprob: -12.660602569580078
    9. '```' → logprob: -13.035602569580078
    10. '1' → logprob: -13.410602569580078

Token 547: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005343331955373287
    2. '[m' → logprob: -5.255343437194824
    3. 'm' → logprob: -9.505343437194824
    4. '[' → logprob: -11.005343437194824
    5. '(m' → logprob: -12.130343437194824
    6. '
' → logprob: -13.005343437194824
    7. '```' → logprob: -13.942843437194824
    8. 'ize' → logprob: -14.005343437194824
    9. '{' → logprob: -14.130343437194824
    10. '_m' → logprob: -14.567843437194824

Token 548: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.4617256056226324e-05
    2. '(m' → logprob: -11.500014305114746
    3. ' m' → logprob: -13.625014305114746
    4. '   ' → logprob: -14.000014305114746
    5. '```' → logprob: -14.750014305114746
    6. 'м' → logprob: -14.875014305114746
    7. '(' → logprob: -15.000014305114746
    8. '[m' → logprob: -15.375014305114746
    9. 's' → logprob: -15.625014305114746
    10. 'r' → logprob: -15.750014305114746

Token 549: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04239471256732941
    2. '<|end|>' → logprob: -4.167394638061523
    3. 'for' → logprob: -4.292394638061523
    4. ' for' → logprob: -4.417394638061523
    5. '
' → logprob: -9.542394638061523
    6. ')' → logprob: -9.542394638061523
    7. '	for' → logprob: -10.417394638061523
    8. ' ' → logprob: -11.042394638061523
    9. '```' → logprob: -11.042394638061523
    10. '...' → logprob: -11.292394638061523

Token 551: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004641544655896723
    2. '   ' → logprob: -8.25046443939209
    3. 'mask' → logprob: -9.62546443939209
    4. 'if' → logprob: -10.62546443939209
    5. 'r' → logprob: -11.12546443939209
    6. ' for' → logprob: -11.25046443939209
    7. 'inv' → logprob: -11.37546443939209
    8. 'val' → logprob: -11.50046443939209
    9. 'shift' → logprob: -11.50046443939209
    10. 'prev' → logprob: -12.00046443939209

Token 552: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9352318048477173
    2. 'mask' → logprob: -1.9352318048477173
    3. 'i' → logprob: -2.0602316856384277
    4. 'z' → logprob: -2.6852316856384277
    5. 'k' → logprob: -2.8102316856384277
    6. 'j' → logprob: -2.9352316856384277
    7. 'm' → logprob: -3.5602316856384277
    8. 'v' → logprob: -3.5602316856384277
    9. 'val' → logprob: -3.8102316856384277
    10. 't' → logprob: -4.435231685638428

Token 553: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14296916127204895
    2. 'in' → logprob: -2.0179691314697266
    3. ',' → logprob: -8.517969131469727
    4. '   ' → logprob: -9.767969131469727
    5. 's' → logprob: -12.017969131469727
    6. 'range' → logprob: -12.142969131469727
    7. 'n' → logprob: -12.267969131469727
    8. ' ' → logprob: -12.392969131469727
    9. 'm' → logprob: -12.892969131469727
    10. '0' → logprob: -13.267969131469727

Token 554: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019405345665290952
    2. ' range' → logprob: -6.251940727233887
    3. '(range' → logprob: -13.126940727233887
    4. 'r' → logprob: -13.126940727233887
    5. 'chain' → logprob: -13.251940727233887
    6. 's' → logprob: -13.751940727233887
    7. '   ' → logprob: -14.126940727233887
    8. 'in' → logprob: -14.251940727233887
    9. '
' → logprob: -14.251940727233887
    10. '	range' → logprob: -14.501940727233887

Token 555: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0069856722839176655
    2. '1' → logprob: -5.756985664367676
    3. '(' → logprob: -6.131985664367676
    4. ' s' → logprob: -7.381985664367676
    5. '0' → logprob: -7.881985664367676
    6. '(s' → logprob: -8.381985664367676
    7. '   ' → logprob: -8.506985664367676
    8. '2' → logprob: -9.381985664367676
    9. ' ' → logprob: -10.006985664367676
    10. 'len' → logprob: -11.256985664367676

Token 556: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1888679839321412e-05
    2. '[m' → logprob: -11.000021934509277
    3. 'm' → logprob: -14.250021934509277
    4. '
' → logprob: -14.312521934509277
    5. '   ' → logprob: -14.562521934509277
    6. ')' → logprob: -14.562521934509277
    7. '(m' → logprob: -14.687521934509277
    8. '```' → logprob: -14.687521934509277
    9. ' ' → logprob: -15.000021934509277
    10. '<m' → logprob: -15.562521934509277

Token 557: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.009831530973315239
    2. '2' → logprob: -4.634831428527832
    3. '   ' → logprob: -10.384831428527832
    4. ')' → logprob: -11.509831428527832
    5. ' m' → logprob: -11.634831428527832
    6. '[m' → logprob: -12.009831428527832
    7. '```' → logprob: -12.134831428527832
    8. '**' → logprob: -13.259831428527832
    9. '       ' → logprob: -13.259831428527832
    10. '(m' → logprob: -13.259831428527832

Token 558: ' >>' (ID: 6832)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011482194066047668
    2. '):' → logprob: -4.511482238769531
    3. '   ' → logprob: -7.886482238769531
    4. '):
' → logprob: -10.136482238769531
    5. ')' → logprob: -12.386482238769531
    6. '       ' → logprob: -12.511482238769531
    7. ' ):
' → logprob: -12.511482238769531
    8. '):

' → logprob: -13.636482238769531
    9. '//' → logprob: -13.636482238769531
    10. '()):
' → logprob: -14.386482238769531

Token 559: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12697546184062958
    2. '2' → logprob: -2.1269755363464355
    3. ' ' → logprob: -10.751975059509277
    4. '   ' → logprob: -11.001975059509277
    5. '3' → logprob: -12.126975059509277
    6. '4' → logprob: -13.001975059509277
    7. '```' → logprob: -15.001975059509277
    8. '0' → logprob: -15.501975059509277
    9. '       ' → logprob: -15.626975059509277
    10. '  ' → logprob: -15.626975059509277

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1427125632762909
    2. '2' → logprob: -2.0177125930786133
    3. '3' → logprob: -11.017712593078613
    4. '   ' → logprob: -11.642712593078613
    5. ' ' → logprob: -11.642712593078613
    6. '4' → logprob: -13.642712593078613
    7. '
' → logprob: -14.892712593078613
    8. '```' → logprob: -14.955212593078613
    9. '  ' → logprob: -15.392712593078613
    10. '       ' → logprob: -15.892712593078613

Token 561: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28836798667907715
    2. '):' → logprob: -1.4133679866790771
    3. '   ' → logprob: -5.413368225097656
    4. '       ' → logprob: -6.788368225097656
    5. ',' → logprob: -7.038368225097656
    6. '):
' → logprob: -7.913368225097656
    7. ')' → logprob: -8.413368225097656
    8. ':' → logprob: -9.788368225097656
    9. ' ):
' → logprob: -11.538368225097656
    10. '+' → logprob: -11.663368225097656

Token 562: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015690360218286514
    2. ' for' → logprob: -4.515690326690674
    3. 'for' → logprob: -6.390690326690674
    4. 'r' → logprob: -6.515690326690674
    5. ' r' → logprob: -6.765690326690674
    6. '   ' → logprob: -8.890690803527832
    7. '	   ' → logprob: -10.265690803527832
    8. '           ' → logprob: -10.515690803527832
    9. ',' → logprob: -10.765690803527832
    10. '	' → logprob: -10.890690803527832

Token 563: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.2539619505405426
    2. '       ' → logprob: -2.0039620399475098
    3. 'for' → logprob: -3.0039620399475098
    4. 'val' → logprob: -3.8789620399475098
    5. 'v' → logprob: -4.62896203994751
    6. 'x' → logprob: -6.25396203994751
    7. '   ' → logprob: -6.62896203994751
    8. ' for' → logprob: -7.00396203994751
    9. ' r' → logprob: -7.12896203994751
    10. '           ' → logprob: -7.12896203994751

Token 564: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -3.2020991056924686e-05
    2. 'm' → logprob: -10.500032424926758
    3. ' [' → logprob: -13.625032424926758
    4. '   ' → logprob: -14.000032424926758
    5. '[' → logprob: -14.500032424926758
    6. '[n' → logprob: -15.125032424926758
    7. ' =' → logprob: -15.250032424926758
    8. '][' → logprob: -15.500032424926758
    9. '[r' → logprob: -15.875032424926758
    10. '       ' → logprob: -16.125032424926758

Token 565: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013386443257331848
    2. '[i' → logprob: -5.263386249542236
    3. ' ][' → logprob: -5.763386249542236
    4. '[' → logprob: -6.138386249542236
    5. ']' → logprob: -6.888386249542236
    6. '   ' → logprob: -7.388386249542236
    7. 'm' → logprob: -8.513386726379395
    8. '[m' → logprob: -8.513386726379395
    9. ' [' → logprob: -9.013386726379395
    10. ')[' → logprob: -9.138386726379395

Token 566: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.642838180065155
    2. '2' → logprob: -0.767838180065155
    3. '(' → logprob: -4.892838001251221
    4. 's' → logprob: -7.267838001251221
    5. '(i' → logprob: -7.642838001251221
    6. '   ' → logprob: -7.767838001251221
    7. ' i' → logprob: -8.142838478088379
    8. ' ' → logprob: -8.267838478088379
    9. '4' → logprob: -8.517838478088379
    10. '1' → logprob: -9.517838478088379

Token 567: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05186818540096283
    2. '<<' → logprob: -3.301868200302124
    3. '+' → logprob: -4.926867961883545
    4. ' <<' → logprob: -6.426867961883545
    5. ']=' → logprob: -6.676867961883545
    6. '|' → logprob: -7.051867961883545
    7. ']<<' → logprob: -7.676867961883545
    8. '   ' → logprob: -7.801867961883545
    9. '*' → logprob: -7.801867961883545
    10. ' |' → logprob: -8.051868438720703

Token 568: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47269487380981445
    2. ' =' → logprob: -1.3476948738098145
    3. ']' → logprob: -2.4726948738098145
    4. ']=' → logprob: -3.9726948738098145
    5. '|' → logprob: -4.9726948738098145
    6. '   ' → logprob: -6.5976948738098145
    7. '+=' → logprob: -6.5976948738098145
    8. ',' → logprob: -7.3476948738098145
    9. ' |=' → logprob: -7.5976948738098145
    10. '[' → logprob: -7.7226948738098145

Token 569: ' r' (ID: 428)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23334898054599762
    2. '(' → logprob: -3.483349084854126
    3. 'i' → logprob: -3.483349084854126
    4. 'a' → logprob: -3.733349084854126
    5. 'r' → logprob: -3.733349084854126
    6. 'p' → logprob: -3.733349084854126
    7. '(i' → logprob: -3.733349084854126
    8. '0' → logprob: -4.108348846435547
    9. '(s' → logprob: -4.483348846435547
    10. '((' → logprob: -5.483348846435547

Token 570: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.0004468772385735065
    2. 'm' → logprob: -7.750446796417236
    3. '[' → logprob: -12.500447273254395
    4. '   ' → logprob: -12.625447273254395
    5. '(m' → logprob: -13.375447273254395
    6. '2' → logprob: -13.375447273254395
    7. '```' → logprob: -13.625447273254395
    8. '[(' → logprob: -14.250447273254395
    9. '[n' → logprob: -14.625447273254395
    10. '{' → logprob: -15.000447273254395

Token 571: ' -' (ID: 533)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.0014997448306530714
    2. 'm' → logprob: -6.876499652862549
    3. '-' → logprob: -8.501500129699707
    4. '[' → logprob: -8.876500129699707
    5. '][' → logprob: -9.501500129699707
    6. '.get' → logprob: -10.751500129699707
    7. '(m' → logprob: -12.251500129699707
    8. ']' → logprob: -12.376500129699707
    9. '[n' → logprob: -12.626500129699707
    10. ' -' → logprob: -12.751500129699707

Token 572: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.203409844194539e-05
    2. ' ' → logprob: -10.875041961669922
    3. '1' → logprob: -11.250041961669922
    4. '   ' → logprob: -11.750041961669922
    5. '{' → logprob: -14.875041961669922
    6. '       ' → logprob: -15.312541961669922
    7. '
' → logprob: -15.375041961669922
    8. '  ' → logprob: -15.812541961669922
    9. '           ' → logprob: -15.937541961669922
    10. '	' → logprob: -16.062541961669922

Token 573: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.6060808522743173e-05
    2. '1' → logprob: -10.875025749206543
    3. ' ' → logprob: -12.750025749206543
    4. '   ' → logprob: -13.375025749206543
    5. '
' → logprob: -13.500025749206543
    6. '```' → logprob: -15.750025749206543
    7. '(' → logprob: -16.43752670288086
    8. '

' → logprob: -16.43752670288086
    9. '{' → logprob: -16.43752670288086
    10. '  ' → logprob: -16.56252670288086

Token 574: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07272423058748245
    2. '[i' → logprob: -2.6977243423461914
    3. '[' → logprob: -7.322724342346191
    4. '       ' → logprob: -7.447724342346191
    5. ' ][' → logprob: -7.447724342346191
    6. '   ' → logprob: -8.197724342346191
    7. ' [' → logprob: -8.822724342346191
    8. ']' → logprob: -9.197724342346191
    9. '           ' → logprob: -9.572724342346191
    10. 'i' → logprob: -9.697724342346191

Token 575: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001656613196246326
    2. '2' → logprob: -6.751656532287598
    3. '(' → logprob: -8.501656532287598
    4. '(i' → logprob: -8.876656532287598
    5. ' i' → logprob: -10.126656532287598
    6. '   ' → logprob: -10.626656532287598
    7. '0' → logprob: -11.126656532287598
    8. '  ' → logprob: -11.751656532287598
    9. ' ' → logprob: -11.751656532287598
    10. '[i' → logprob: -11.876656532287598

Token 576: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024583088234066963
    2. ']<<' → logprob: -3.774583101272583
    3. ']+' → logprob: -7.399582862854004
    4. ' ]' → logprob: -8.399582862854004
    5. '<<' → logprob: -8.399582862854004
    6. ']
' → logprob: -8.649582862854004
    7. '+' → logprob: -11.274582862854004
    8. '1' → logprob: -11.399582862854004
    9. '2' → logprob: -11.399582862854004
    10. '|' → logprob: -11.649582862854004

Token 577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026947785168886185
    2. '   ' → logprob: -3.6519477367401123
    3. ' for' → logprob: -9.151947975158691
    4. '	' → logprob: -9.276947975158691
    5. '<|end|>' → logprob: -9.401947975158691
    6. ' ' → logprob: -9.526947975158691
    7. 'for' → logprob: -10.151947975158691
    8. '      ' → logprob: -10.276947975158691
    9. ',' → logprob: -10.401947975158691
    10. '
' → logprob: -10.401947975158691

Token 578: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.13187840580940247
    2. '       ' → logprob: -2.38187837600708
    3. ' r' → logprob: -3.50687837600708
    4. '   ' → logprob: -7.25687837600708
    5. '           ' → logprob: -8.381878852844238
    6. ' ' → logprob: -9.881878852844238
    7. '      ' → logprob: -10.381878852844238
    8. '    ' → logprob: -10.506878852844238
    9. '     ' → logprob: -10.506878852844238
    10. '	r' → logprob: -11.006878852844238

Token 579: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.0009832700015977025
    2. '[' → logprob: -7.500983238220215
    3. 'm' → logprob: -8.750983238220215
    4. '   ' → logprob: -9.375983238220215
    5. ' [' → logprob: -9.500983238220215
    6. '][' → logprob: -9.625983238220215
    7. '       ' → logprob: -12.000983238220215
    8. ' ' → logprob: -12.375983238220215
    9. '```' → logprob: -12.500983238220215
    10. '[s' → logprob: -12.875983238220215

Token 580: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12959246337413788
    2. '+' → logprob: -2.2545924186706543
    3. ' +' → logprob: -4.379592418670654
    4. '+m' → logprob: -6.754592418670654
    5. '+i' → logprob: -7.379592418670654
    6. '   ' → logprob: -7.504592418670654
    7. ' ][' → logprob: -8.004592895507812
    8. '<<' → logprob: -8.004592895507812
    9. '|' → logprob: -8.129592895507812
    10. ']' → logprob: -8.254592895507812

Token 581: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.028150169178843498
    2. 's' → logprob: -4.2781500816345215
    3. '(i' → logprob: -4.7781500816345215
    4. '(s' → logprob: -5.4031500816345215
    5. '   ' → logprob: -7.9031500816345215
    6. '(' → logprob: -8.15315055847168
    7. ' i' → logprob: -8.90315055847168
    8. ' (' → logprob: -10.65315055847168
    9. '((' → logprob: -11.02815055847168
    10. ' ' → logprob: -11.27815055847168

Token 582: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '[m' → logprob: -15.5
    3. '(m' → logprob: -16.375
    4. '<m' → logprob: -18.375
    5. '   ' → logprob: -18.625
    6. '```' → logprob: -18.75
    7. 'm' → logprob: -18.75
    8. '[' → logprob: -19.75
    9. ' ' → logprob: -20.125
    10. '/m' → logprob: -20.25

Token 583: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6328815221786499
    2. '2' → logprob: -0.7578815221786499
    3. '(m' → logprob: -8.882881164550781
    4. '[m' → logprob: -9.132881164550781
    5. '```' → logprob: -11.757881164550781
    6. ')' → logprob: -12.132881164550781
    7. '   ' → logprob: -12.507881164550781
    8. ' m' → logprob: -12.632881164550781
    9. 'м' → logprob: -13.007881164550781
    10. '_m' → logprob: -13.382881164550781

Token 584: ' -' (ID: 533)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.07904379069805145
    2. '//' → logprob: -3.0790438652038574
    3. ' >>' → logprob: -3.9540438652038574
    4. '[' → logprob: -5.579043865203857
    5. ']' → logprob: -6.204043865203857
    6. ' ' → logprob: -6.329043865203857
    7. '#' → logprob: -7.079043865203857
    8. '   ' → logprob: -7.579043865203857
    9. '>>>' → logprob: -7.829043865203857
    10. '```' → logprob: -7.954043865203857

Token 585: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34854617714881897
    2. 'i' → logprob: -1.2235461473464966
    3. ' ' → logprob: -10.473546028137207
    4. '(i' → logprob: -10.598546028137207
    5. ' i' → logprob: -10.848546028137207
    6. '(' → logprob: -10.848546028137207
    7. '   ' → logprob: -11.973546028137207
    8. '2' → logprob: -14.348546028137207
    9. '  ' → logprob: -14.473546028137207
    10. '-' → logprob: -15.223546028137207

Token 586: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326645016670227
    2. 'i' → logprob: -0.7576645016670227
    3. ' i' → logprob: -10.882664680480957
    4. '(i' → logprob: -11.007664680480957
    5. ' ' → logprob: -11.382664680480957
    6. '(' → logprob: -11.382664680480957
    7. '   ' → logprob: -12.382664680480957
    8. '  ' → logprob: -14.882664680480957
    9. '2' → logprob: -15.007664680480957
    10. '
' → logprob: -15.257664680480957

Token 587: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.535425066947937
    2. '-' → logprob: -0.910425066947937
    3. '-i' → logprob: -4.535425186157227
    4. ']' → logprob: -6.535425186157227
    5. '   ' → logprob: -10.535425186157227
    6. ' ' → logprob: -11.535425186157227
    7. '^' → logprob: -12.285425186157227
    8. ']=' → logprob: -12.410425186157227
    9. '```' → logprob: -14.035425186157227
    10. '  ' → logprob: -14.285425186157227

Token 588: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003382038848940283
    2. ' i' → logprob: -8.000338554382324
    3. '1' → logprob: -13.375338554382324
    4. ' ' → logprob: -14.375338554382324
    5. '   ' → logprob: -14.750338554382324
    6. '(i' → logprob: -16.750337600708008
    7. '  ' → logprob: -17.000337600708008
    8. '	i' → logprob: -17.000337600708008
    9. '_i' → logprob: -18.125337600708008
    10. ']' → logprob: -18.375337600708008

Token 589: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005567280459217727
    2. ' ]' → logprob: -7.625556945800781
    3. ']=' → logprob: -9.625556945800781
    4. '   ' → logprob: -14.000556945800781
    5. ' =' → logprob: -14.125556945800781
    6. '=' → logprob: -14.125556945800781
    7. '`]' → logprob: -16.00055694580078
    8. ' ' → logprob: -16.50055694580078
    9. ']+=' → logprob: -17.00055694580078
    10. '    ' → logprob: -17.12555694580078

Token 590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6956935524940491
    2. ' =' → logprob: -0.6956935524940491
    3. ']' → logprob: -6.070693492889404
    4. ']=' → logprob: -8.570693969726562
    5. '   ' → logprob: -11.320693969726562
    6. '[' → logprob: -11.820693969726562
    7. '=r' → logprob: -11.945693969726562
    8. ')' → logprob: -12.445693969726562
    9. ' ' → logprob: -12.695693969726562
    10. '    ' → logprob: -13.320693969726562

Token 591: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004048006143420935
    2. '1' → logprob: -7.004047870635986
    3. 'i' → logprob: -7.004047870635986
    4. '0' → logprob: -7.879047870635986
    5. ' r' → logprob: -7.879047870635986
    6. '255' → logprob: -8.254048347473145
    7. '(r' → logprob: -8.379048347473145
    8. 's' → logprob: -8.754048347473145
    9. '   ' → logprob: -8.754048347473145
    10. '(' → logprob: -9.379048347473145

Token 592: 's' (ID: 82)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07470724731683731
    2. '(' → logprob: -3.949707269668579
    3. '1' → logprob: -4.19970703125
    4. 'b' → logprob: -4.94970703125
    5. '(r' → logprob: -4.94970703125
    6. '3' → logprob: -5.57470703125
    7. '0' → logprob: -5.69970703125
    8. 'a' → logprob: -6.32470703125
    9. '((' → logprob: -6.44970703125
    10. 'n' → logprob: -6.69970703125

Token 593: '2' (ID: 17)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.32219481468200684
    2. 'm' → logprob: -1.3221948146820068
    3. '2' → logprob: -4.822195053100586
    4. '   ' → logprob: -8.197195053100586
    5. '       ' → logprob: -9.447195053100586
    6. '    ' → logprob: -9.697195053100586
    7. '(m' → logprob: -9.697195053100586
    8. ')m' → logprob: -10.072195053100586
    9. ')' → logprob: -10.197195053100586
    10. ' m' → logprob: -10.322195053100586

Token 594: 'm' (ID: 76)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.03870159760117531
    2. 'm' → logprob: -3.4137015342712402
    3. '2' → logprob: -5.41370153427124
    4. '   ' → logprob: -8.538702011108398
    5. '[' → logprob: -9.413702011108398
    6. '       ' → logprob: -10.163702011108398
    7. '1' → logprob: -10.288702011108398
    8. '(m' → logprob: -10.663702011108398
    9. ')' → logprob: -10.913702011108398
    10. ' [' → logprob: -11.038702011108398

Token 595: ' >>' (ID: 6832)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42968448996543884
    2. ' -' → logprob: -1.0546845197677612
    3. '>>' → logprob: -7.929684638977051
    4. ')' → logprob: -7.929684638977051
    5. '1' → logprob: -8.67968463897705
    6. ' ' → logprob: -10.17968463897705
    7. '   ' → logprob: -10.92968463897705
    8. ' >>' → logprob: -11.17968463897705
    9. '[' → logprob: -12.17968463897705
    10. ')-' → logprob: -12.67968463897705

Token 596: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.947715832618997e-05
    2. '2' → logprob: -9.375089645385742
    3. ' ' → logprob: -13.000089645385742
    4. '   ' → logprob: -13.500089645385742
    5. '(' → logprob: -15.875089645385742
    6. '           ' → logprob: -16.125089645385742
    7. 'i' → logprob: -16.375089645385742
    8. '
' → logprob: -16.625089645385742
    9. '0' → logprob: -16.750089645385742
    10. '3' → logprob: -17.187589645385742

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024382755509577692
    2. '2' → logprob: -8.375244140625
    3. 'i' → logprob: -12.250244140625
    4. '(' → logprob: -12.875244140625
    5. ' ' → logprob: -13.125244140625
    6. '   ' → logprob: -13.875244140625
    7. '(i' → logprob: -13.875244140625
    8. '
' → logprob: -14.937744140625
    9. 'm' → logprob: -14.937744140625
    10. '3' → logprob: -15.250244140625

Token 598: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004472965840250254
    2. '-' → logprob: -6.254472732543945
    3. ')-' → logprob: -6.379472732543945
    4. ' )' → logprob: -7.629472732543945
    5. ' -' → logprob: -9.254472732543945
    6. '1' → logprob: -9.379472732543945
    7. ')+' → logprob: -9.879472732543945
    8. '[i' → logprob: -10.754472732543945
    9. ')
' → logprob: -10.754472732543945
    10. '[' → logprob: -11.129472732543945

Token 599: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005142203997820616
    2. ' -' → logprob: -5.5051422119140625
    3. '+' → logprob: -6.8801422119140625
    4. '+i' → logprob: -11.505142211914062
    5. ' +' → logprob: -11.755142211914062
    6. '|' → logprob: -12.630142211914062
    7. ')' → logprob: -13.005142211914062
    8. '-i' → logprob: -13.005142211914062
    9. '1' → logprob: -13.130142211914062
    10. '[' → logprob: -13.255142211914062

Token 600: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0795430839061737
    2. 'i' → logprob: -2.579543113708496
    3. 's' → logprob: -8.454543113708496
    4. ' r' → logprob: -8.704543113708496
    5. '(i' → logprob: -9.329543113708496
    6. ' i' → logprob: -9.704543113708496
    7. '(r' → logprob: -10.079543113708496
    8. '   ' → logprob: -10.954543113708496
    9. '(' → logprob: -11.204543113708496
    10. ' ' → logprob: -11.829543113708496

Token 601: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -7.465036105713807e-06
    2. 'm' → logprob: -11.875007629394531
    3. '[' → logprob: -15.875007629394531
    4. '   ' → logprob: -16.25000762939453
    5. '```' → logprob: -17.00000762939453
    6. '(m' → logprob: -17.12500762939453
    7. '[n' → logprob: -17.25000762939453
    8. '	m' → logprob: -17.50000762939453
    9. ' [' → logprob: -18.00000762939453
    10. '       ' → logprob: -18.25000762939453

Token 602: ' -' (ID: 533)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -4.370294846012257e-05
    2. 'm' → logprob: -10.375043869018555
    3. '```' → logprob: -12.500043869018555
    4. '[' → logprob: -12.500043869018555
    5. '(m' → logprob: -13.750043869018555
    6. '   ' → logprob: -14.250043869018555
    7. '[(' → logprob: -14.750043869018555
    8. '[n' → logprob: -15.000043869018555
    9. '][' → logprob: -15.000043869018555
    10. ' [' → logprob: -15.375043869018555

Token 603: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.500012397766113
    3. '(' → logprob: -14.125012397766113
    4. '```' → logprob: -14.500012397766113
    5. '   ' → logprob: -14.750012397766113
    6. '2' → logprob: -15.125012397766113
    7. '(m' → logprob: -16.437511444091797
    8. '{' → logprob: -17.125011444091797
    9. '`' → logprob: -17.250011444091797
    10. '-' → logprob: -17.312511444091797

Token 604: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.87500286102295
    3. 'm' → logprob: -14.75000286102295
    4. ' ' → logprob: -14.87500286102295
    5. '2' → logprob: -15.00000286102295
    6. '(m' → logprob: -15.12500286102295
    7. '```' → logprob: -15.25000286102295
    8. '
' → logprob: -16.750001907348633
    9. '   ' → logprob: -16.812501907348633
    10. '{' → logprob: -17.125001907348633

Token 605: '][' (ID: 2696)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.2685244083404541
    2. '[i' → logprob: -1.893524408340454
    3. '][' → logprob: -2.518524408340454
    4. '[s' → logprob: -6.018524169921875
    5. '[' → logprob: -6.393524169921875
    6. 'm' → logprob: -9.268524169921875
    7. ')[' → logprob: -10.268524169921875
    8. ' [' → logprob: -10.518524169921875
    9. '   ' → logprob: -10.893524169921875
    10. '}[' → logprob: -11.018524169921875

Token 606: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008986682631075382
    2. 'm' → logprob: -4.758986473083496
    3. 's' → logprob: -8.258986473083496
    4. '(m' → logprob: -10.258986473083496
    5. '(s' → logprob: -10.383986473083496
    6. '(i' → logprob: -10.758986473083496
    7. ' i' → logprob: -11.883986473083496
    8. '(' → logprob: -12.258986473083496
    9. '   ' → logprob: -13.008986473083496
    10. '[i' → logprob: -13.133986473083496

Token 607: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2258760780096054
    2. '<|end|>' → logprob: -1.7258760929107666
    3. '[i' → logprob: -4.6008758544921875
    4. '[' → logprob: -4.9758758544921875
    5. '       ' → logprob: -5.7258758544921875
    6. '<|end|>' → logprob: -6.6008758544921875
    7. ')' → logprob: -6.7258758544921875
    8. ' ]' → logprob: -7.7258758544921875
    9. '
' → logprob: -8.600875854492188
    10. '[
' → logprob: -8.975875854492188

Token 608: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: ' DBG' (ID: 100080)
  Prédit: ' DBG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DBG' → logprob: -0.6787916421890259
    2. ' n' → logprob: -1.0537916421890259
    3. ' __' → logprob: -2.9287915229797363
    4. ' a' → logprob: -3.0537915229797363
    5. ' not' → logprob: -3.9287915229797363
    6. 'n' → logprob: -4.928791522979736
    7. 'DBG' → logprob: -5.053791522979736
    8. ' len' → logprob: -5.803791522979736
    9. 'a' → logprob: -6.303791522979736
    10. '__' → logprob: -6.553791522979736

Token 610: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02697436884045601
    2. '2' → logprob: -3.7769744396209717
    3. ':
' → logprob: -6.776974201202393
    4. ' :' → logprob: -6.901974201202393
    5. ' and' → logprob: -7.526974201202393
    6. '==' → logprob: -8.02697467803955
    7. ' ==' → logprob: -8.65197467803955
    8. '[' → logprob: -8.77697467803955
    9. 'and' → logprob: -9.65197467803955
    10. '3' → logprob: -10.02697467803955

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3562512993812561
    2. ' for' → logprob: -1.3562512397766113
    3. ' print' → logprob: -3.2312512397766113
    4. 'for' → logprob: -6.356251239776611
    5. 'print' → logprob: -7.981251239776611
    6. ' import' → logprob: -8.60625171661377
    7. ' sys' → logprob: -9.35625171661377
    8. ' pass' → logprob: -9.60625171661377
    9. '	for' → logprob: -10.35625171661377
    10. '	print' → logprob: -10.85625171661377

Token 612: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.31839269399642944
    2. 'for' → logprob: -1.3183927536010742
    3. ' for' → logprob: -5.443392753601074
    4. ' print' → logprob: -7.818392753601074
    5. 'sys' → logprob: -8.943392753601074
    6. 'import' → logprob: -9.318392753601074
    7. 'pass' → logprob: -9.443392753601074
    8. '   ' → logprob: -10.443392753601074
    9. 'from' → logprob: -11.193392753601074
    10. 'r' → logprob: -11.318392753601074

Token 613: '('\' (ID: 24345)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42355841398239136
    2. '("' → logprob: -2.048558473587036
    3. '()' → logprob: -2.798558473587036
    4. '('' → logprob: -3.048558473587036
    5. '(f' → logprob: -3.173558473587036
    6. '(r' → logprob: -3.298558473587036
    7. '(len' → logprob: -4.423558235168457
    8. '("("' → logprob: -5.423558235168457
    9. '(s' → logprob: -5.673558235168457
    10. '(
' → logprob: -6.548558235168457

Token 614: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4486115276813507
    2. ''' → logprob: -1.3236114978790283
    3. ')' → logprob: -3.8236114978790283
    4. ''\' → logprob: -3.9486114978790283
    5. '''' → logprob: -4.573611736297607
    6. '')' → logprob: -5.323611736297607
    7. '[' → logprob: -5.448611736297607
    8. 'r' → logprob: -5.698611736297607
    9. ''''' → logprob: -5.698611736297607
    10. 'x' → logprob: -5.823611736297607

Token 615: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.06349313259124756
    2. '')' → logprob: -3.313493251800537
    3. 'r' → logprob: -4.563493251800537
    4. ''' → logprob: -6.188493251800537
    5. 'Code' → logprob: -6.438493251800537
    6. 'join' → logprob: -6.563493251800537
    7. 'R' → logprob: -7.063493251800537
    8. '(r' → logprob: -7.188493251800537
    9. '(s' → logprob: -7.188493251800537
    10. '#' → logprob: -7.188493251800537

Token 616: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0026449791621416807
    2. ')' → logprob: -6.877645015716553
    3. 'print' → logprob: -7.002645015716553
    4. '')' → logprob: -7.502645015716553
    5. 'write' → logprob: -10.377644538879395
    6. '")' → logprob: -10.752644538879395
    7. '(join' → logprob: -10.752644538879395
    8. '<|end|>' → logprob: -11.252644538879395
    9. 'split' → logprob: -11.377644538879395
    10. ' join' → logprob: -11.752644538879395

Token 617: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2303345948457718
    2. '(f' → logprob: -2.105334520339966
    3. '(str' → logprob: -2.605334520339966
    4. '([' → logprob: -4.855334758758545
    5. 'map' → logprob: -7.105334758758545
    6. '(re' → logprob: -7.480334758758545
    7. '(r' → logprob: -7.605334758758545
    8. '(' → logprob: -9.355334281921387
    9. '[f' → logprob: -9.480334281921387
    10. 'f' → logprob: -10.230334281921387

Token 618: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.006315650884062052
    2. 'str' → logprob: -5.1313157081604
    3. '(re' → logprob: -8.381315231323242
    4. '(lambda' → logprob: -10.006315231323242
    5. 'repr' → logprob: -10.006315231323242
    6. '   ' → logprob: -10.381315231323242
    7. '(' → logprob: -10.756315231323242
    8. ' str' → logprob: -12.631315231323242
    9. '(chr' → logprob: -13.006315231323242
    10. '    ' → logprob: -13.006315231323242

Token 619: ',' (ID: 11)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.6393559575080872
    2. ',' → logprob: -0.7643559575080872
    3. ',r' → logprob: -5.2643561363220215
    4. '   ' → logprob: -7.2643561363220215
    5. '(s' → logprob: -7.8893561363220215
    6. '(' → logprob: -8.264355659484863
    7. ',(' → logprob: -9.389355659484863
    8. 'r' → logprob: -9.889355659484863
    9. ' ,' → logprob: -10.514355659484863
    10. ',s' → logprob: -10.889355659484863

Token 620: ' [' (ID: 723)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003944113850593567
    2. ' r' → logprob: -6.503943920135498
    3. '[r' → logprob: -6.753943920135498
    4. 's' → logprob: -7.003943920135498
    5. '   ' → logprob: -9.503944396972656
    6. ' ' → logprob: -9.628944396972656
    7. '[' → logprob: -9.878944396972656
    8. '(r' → logprob: -10.003944396972656
    9. '  ' → logprob: -10.878944396972656
    10. '[s' → logprob: -11.003944396972656

Token 621: 's' (ID: 82)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04753631725907326
    2. 's' → logprob: -3.1725363731384277
    3. 'len' → logprob: -6.672536373138428
    4. 'range' → logprob: -7.297536373138428
    5. '(r' → logprob: -7.547536373138428
    6. 'tuple' → logprob: -8.29753589630127
    7. '(' → logprob: -8.42253589630127
    8. '(s' → logprob: -8.42253589630127
    9. 'list' → logprob: -8.42253589630127
    10. '{' → logprob: -8.67253589630127

Token 622: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.12483779340982437
    2. ',' → logprob: -2.999837875366211
    3. ']))' → logprob: -3.624837875366211
    4. ',m' → logprob: -3.624837875366211
    5. '])))' → logprob: -4.749837875366211
    6. '[n' → logprob: -6.124837875366211
    7. '[' → logprob: -6.624837875366211
    8. 'm' → logprob: -7.499837875366211
    9. ']' → logprob: -8.249837875366211
    10. '[a' → logprob: -8.499837875366211

Token 623: ']' (ID: 60)
  Prédit: '])))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])))' → logprob: -0.33196592330932617
    2. ']))' → logprob: -1.8319659233093262
    3. ']' → logprob: -2.331965923309326
    4. '],' → logprob: -4.706965923309326
    5. '][' → logprob: -5.456965923309326
    6. '][:' → logprob: -5.581965923309326
    7. ']]' → logprob: -5.581965923309326
    8. '])),' → logprob: -6.206965923309326
    9. '])))
' → logprob: -7.331965923309326
    10. '[' → logprob: -8.081966400146484

Token 624: ' for' (ID: 395)
  Prédit: '])))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])))' → logprob: -0.05317314714193344
    2. ']))' → logprob: -3.178173065185547
    3. ']' → logprob: -5.303173065185547
    4. ',' → logprob: -6.553173065185547
    5. '))))' → logprob: -7.178173065185547
    6. 'for' → logprob: -7.303173065185547
    7. ' for' → logprob: -7.428173065185547
    8. '])))
' → logprob: -7.803173065185547
    9. '   ' → logprob: -7.928173065185547
    10. '[' → logprob: -8.553173065185547

Token 625: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00016218038217630237
    2. ' m' → logprob: -8.750162124633789
    3. 'range' → logprob: -13.000162124633789
    4. ' ' → logprob: -15.375162124633789
    5. 'x' → logprob: -15.500162124633789
    6. 'i' → logprob: -15.625162124633789
    7. '   ' → logprob: -15.750162124633789
    8. '3' → logprob: -15.875162124633789
    9. '_' → logprob: -16.00016212463379
    10. ' range' → logprob: -16.37516212463379

Token 626: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47457462549209595
    2. 'in' → logprob: -0.974574625492096
    3. 'if' → logprob: -7.724574565887451
    4. ' ' → logprob: -11.34957504272461
    5. ' if' → logprob: -11.34957504272461
    6. 'm' → logprob: -11.47457504272461
    7. 'n' → logprob: -11.72457504272461
    8. ']))' → logprob: -12.22457504272461
    9. 'import' → logprob: -12.84957504272461
    10. '   ' → logprob: -13.22457504272461

Token 627: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006947549059987068
    2. ' range' → logprob: -5.3819475173950195
    3. 's' → logprob: -7.0069475173950195
    4. 'r' → logprob: -7.2569475173950195
    5. 'sorted' → logprob: -7.5069475173950195
    6. '[' → logprob: -9.75694751739502
    7. '(range' → logprob: -10.50694751739502
    8. '[s' → logprob: -10.75694751739502
    9. ' s' → logprob: -11.50694751739502
    10. '[r' → logprob: -12.13194751739502

Token 628: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1458449810743332
    2. '(MAX' → logprob: -2.1458449363708496
    3. '(n' → logprob: -4.89584493637085
    4. '3' → logprob: -4.89584493637085
    5. '2' → logprob: -6.77084493637085
    6. 'n' → logprob: -7.64584493637085
    7. 'MAX' → logprob: -7.64584493637085
    8. '1' → logprob: -7.77084493637085
    9. '4' → logprob: -7.89584493637085
    10. '(max' → logprob: -8.520845413208008

Token 629: '1' (ID: 16)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.5833405256271362
    2. '3' → logprob: -1.3333405256271362
    3. '4' → logprob: -3.083340644836426
    4. '1' → logprob: -3.583340644836426
    5. '5' → logprob: -3.708340644836426
    6. '2' → logprob: -3.708340644836426
    7. '6' → logprob: -4.208340644836426
    8. 'n' → logprob: -4.708340644836426
    9. '10' → logprob: -4.708340644836426
    10. '7' → logprob: -5.333340644836426

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04097916930913925
    2. ')]' → logprob: -3.4159791469573975
    3. ' ,' → logprob: -6.540979385375977
    4. ')' → logprob: -6.665979385375977
    5. '+' → logprob: -6.665979385375977
    6. 'MAX' → logprob: -7.165979385375977
    7. ',m' → logprob: -7.290979385375977
    8. ',n' → logprob: -7.915979385375977
    9. 'n' → logprob: -8.040979385375977
    10. ')])' → logprob: -8.165979385375977

Token 631: ' ' (ID: 220)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.019114911556243896
    2. '10' → logprob: -5.269114971160889
    3. '11' → logprob: -6.019114971160889
    4. '5' → logprob: -6.144114971160889
    5. '6' → logprob: -6.269114971160889
    6. '4' → logprob: -6.519114971160889
    7. '7' → logprob: -6.769114971160889
    8. '8' → logprob: -7.144114971160889
    9. 'MIN' → logprob: -7.394114971160889
    10. ' MAX' → logprob: -7.519114971160889

Token 632: '6' (ID: 21)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.4801020920276642
    2. '6' → logprob: -2.230102062225342
    3. '4' → logprob: -2.355102062225342
    4. '5' → logprob: -2.605102062225342
    5. '10' → logprob: -3.230102062225342
    6. '7' → logprob: -3.855102062225342
    7. '8' → logprob: -4.105102062225342
    8. '11' → logprob: -4.605102062225342
    9. '9' → logprob: -5.355102062225342
    10. '12' → logprob: -5.980102062225342

Token 633: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012919493950903416
    2. ']))' → logprob: -4.8879194259643555
    3. ')])' → logprob: -6.2629194259643555
    4. '])))' → logprob: -6.7629194259643555
    5. ']' → logprob: -6.8879194259643555
    6. '+' → logprob: -7.3879194259643555
    7. '])]' → logprob: -8.887919425964355
    8. ')' → logprob: -8.887919425964355
    9. ' ]' → logprob: -9.387919425964355
    10. '])' → logprob: -9.637919425964355

Token 634: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0009826739551499486
    2. '))' → logprob: -7.500982761383057
    3. '))))' → logprob: -8.000982284545898
    4. ')' → logprob: -10.000982284545898
    5. ')))
' → logprob: -10.875982284545898
    6. ' ' → logprob: -11.625982284545898
    7. '   ' → logprob: -12.000982284545898
    8. ')));' → logprob: -12.375982284545898
    9. '+' → logprob: -12.750982284545898
    10. '[' → logprob: -13.500982284545898

Token 635: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34761837124824524
    2. '<|end|>' → logprob: -1.3476183414459229
    3. ']' → logprob: -4.597618579864502
    4. ' ' → logprob: -4.847618579864502
    5. '   ' → logprob: -6.097618579864502
    6. '[' → logprob: -6.097618579864502
    7. '[]' → logprob: -6.347618579864502
    8. '(' → logprob: -6.472618579864502
    9. '```' → logprob: -6.722618579864502
    10. '#' → logprob: -6.972618579864502

Token 636: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24670162796974182
    2. '<|end|>' → logprob: -1.7467015981674194
    3. '   ' → logprob: -3.871701717376709
    4. ' ' → logprob: -5.246701717376709
    5. '(' → logprob: -6.121701717376709
    6. '    ' → logprob: -6.246701717376709
    7. '[' → logprob: -6.246701717376709
    8. '```' → logprob: -6.371701717376709
    9. ']' → logprob: -6.496701717376709
    10. '\n' → logprob: -6.621701717376709

Token 637: '('')
' (ID: 74203)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006748289801180363
    2. '('' → logprob: -5.506748199462891
    3. '(' → logprob: -6.006748199462891
    4. '("")' → logprob: -10.25674819946289
    5. '('\' → logprob: -10.25674819946289
    6. '(sys' → logprob: -10.25674819946289
    7. '()
' → logprob: -10.50674819946289
    8. '(s' → logprob: -10.75674819946289
    9. '("("' → logprob: -11.75674819946289
    10. '<|end|>' → logprob: -11.88174819946289

Token 638: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6223166584968567
    2. ')' → logprob: -1.622316598892212
    3. '<|end|>' → logprob: -1.997316598892212
    4. '#' → logprob: -2.622316598892212
    5. '...' → logprob: -3.497316598892212
    6. 'n' → logprob: -4.997316837310791
    7. 'm' → logprob: -5.997316837310791
    8. 'r' → logprob: -5.997316837310791
    9. '[' → logprob: -6.497316837310791
    10. 'if' → logprob: -6.872316837310791

Token 639: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6137262582778931
    2. '#' → logprob: -1.238726258277893
    3. 'for' → logprob: -2.3637261390686035
    4. 'if' → logprob: -3.4887261390686035
    5. '...' → logprob: -4.1137261390686035
    6. 'def' → logprob: -5.4887261390686035
    7. 'r' → logprob: -5.8637261390686035
    8. '```' → logprob: -5.8637261390686035
    9. '#print' → logprob: -6.2387261390686035
    10. 'pass' → logprob: -6.6137261390686035

Token 640: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.03982832282781601
    2. '([' → logprob: -3.914828300476074
    3. '(r' → logprob: -4.164828300476074
    4. '(list' → logprob: -6.664828300476074
    5. 'r' → logprob: -7.539828300476074
    6. '(*' → logprob: -8.164828300476074
    7. '('' → logprob: -8.164828300476074
    8. '(re' → logprob: -8.414828300476074
    9. ''\' → logprob: -8.789828300476074
    10. '(len' → logprob: -8.789828300476074

Token 641: 'n' (ID: 77)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.9569960832595825
    2. 'n' → logprob: -1.3319960832595825
    3. 'm' → logprob: -1.5819960832595825
    4. 's' → logprob: -3.206995964050293
    5. 'r' → logprob: -3.331995964050293
    6. '[s' → logprob: -3.956995964050293
    7. '[n' → logprob: -4.206995964050293
    8. '(m' → logprob: -5.581995964050293
    9. '[' → logprob: -5.706995964050293
    10. ''m' → logprob: -5.831995964050293

Token 642: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.24767090380191803
    2. 'join' → logprob: -1.8726708889007568
    3. '.join' → logprob: -2.997670888900757
    4. '''.' → logprob: -4.247671127319336
    5. '.' → logprob: -7.372671127319336
    6. ''' → logprob: -8.997671127319336
    7. 'str' → logprob: -9.247671127319336
    8. '''' → logprob: -9.372671127319336
    9. 's' → logprob: -9.872671127319336
    10. '".' → logprob: -10.122671127319336

Token 643: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.5048530030981055e-06
    2. '(join' → logprob: -14.500001907348633
    3. ''.' → logprob: -14.750001907348633
    4. ' join' → logprob: -14.875001907348633
    5. 'str' → logprob: -16.125001907348633
    6. 'print' → logprob: -16.875001907348633
    7. '.join' → logprob: -17.500001907348633
    8. '```' → logprob: -18.125001907348633
    9. 'sep' → logprob: -18.750001907348633
    10. '(' → logprob: -19.125001907348633

Token 644: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007245833403430879
    2. 'map' → logprob: -7.250724792480469
    3. '(list' → logprob: -11.500724792480469
    4. '(str' → logprob: -12.500724792480469
    5. '(' → logprob: -15.750724792480469
    6. 'str' → logprob: -16.12572479248047
    7. '('' → logprob: -16.12572479248047
    8. ',map' → logprob: -16.62572479248047
    9. ' map' → logprob: -16.75072479248047
    10. '.map' → logprob: -16.75072479248047

Token 645: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0010141143575310707
    2. 'str' → logprob: -7.001014232635498
    3. '=str' → logprob: -9.87601375579834
    4. '(' → logprob: -10.12601375579834
    5. '[str' → logprob: -12.37601375579834
    6. ' str' → logprob: -13.25101375579834
    7. '```' → logprob: -13.50101375579834
    8. '(map' → logprob: -13.87601375579834
    9. '(lambda' → logprob: -14.12601375579834
    10. '(
' → logprob: -14.37601375579834

Token 646: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010319051332771778
    2. '([' → logprob: -4.635319232940674
    3. ',[' → logprob: -7.635319232940674
    4. '(s' → logprob: -10.635318756103516
    5. '   ' → logprob: -10.885318756103516
    6. '(' → logprob: -12.010318756103516
    7. 'for' → logprob: -12.135318756103516
    8. '(range' → logprob: -12.260318756103516
    9. '(r' → logprob: -13.010318756103516
    10. ' ,' → logprob: -13.135318756103516

Token 647: ' [' (ID: 723)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.02077881619334221
    2. ' [' → logprob: -3.8957788944244385
    3. '[' → logprob: -9.27077865600586
    4. '[s' → logprob: -9.77077865600586
    5. '   ' → logprob: -9.89577865600586
    6. ' ' → logprob: -11.77077865600586
    7. '  ' → logprob: -12.02077865600586
    8. '[[' → logprob: -12.14577865600586
    9. 'r' → logprob: -12.27077865600586
    10. '    ' → logprob: -13.02077865600586

Token 648: 'r' (ID: 81)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.4748503267765045
    2. 'r' → logprob: -0.9748502969741821
    3. '[s' → logprob: -7.849850177764893
    4. '[' → logprob: -8.97485065460205
    5. ' [' → logprob: -9.34985065460205
    6. '   ' → logprob: -9.47485065460205
    7. ' r' → logprob: -10.59985065460205
    8. 's' → logprob: -11.34985065460205
    9. '[(' → logprob: -12.22485065460205
    10. '[p' → logprob: -12.47485065460205

Token 649: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -1.723973582556937e-05
    2. 'm' → logprob: -11.375017166137695
    3. '(m' → logprob: -12.750017166137695
    4. 'range' → logprob: -14.375017166137695
    5. '[(' → logprob: -14.750017166137695
    6. '[' → logprob: -14.875017166137695
    7. '   ' → logprob: -15.000017166137695
    8. '.get' → logprob: -15.375017166137695
    9. 'for' → logprob: -15.625017166137695
    10. '[n' → logprob: -16.125017166137695

Token 650: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2968294620513916
    2. ' for' → logprob: -1.4218294620513916
    3. ']' → logprob: -4.1718292236328125
    4. ')' → logprob: -10.671829223632812
    5. '[' → logprob: -10.671829223632812
    6. '   ' → logprob: -10.671829223632812
    7. ' ' → logprob: -11.046829223632812
    8. '[m' → logprob: -11.421829223632812
    9. '	for' → logprob: -11.671829223632812
    10. '])' → logprob: -11.921829223632812

Token 651: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20148001611232758
    2. 'for' → logprob: -1.7014800310134888
    3. '   ' → logprob: -10.4514799118042
    4. ')' → logprob: -11.3264799118042
    5. '[' → logprob: -11.9514799118042
    6. ' ' → logprob: -12.2014799118042
    7. '	for' → logprob: -12.3264799118042
    8. '    ' → logprob: -12.7014799118042
    9. ']' → logprob: -13.2014799118042
    10. '  ' → logprob: -13.4514799118042

Token 652: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0007107630372047424
    2. ' m' → logprob: -7.250710964202881
    3. 'range' → logprob: -15.250710487365723
    4. ' ' → logprob: -16.12571144104004
    5. '   ' → logprob: -16.25071144104004
    6. '(m' → logprob: -16.50071144104004
    7. '[m' → logprob: -16.50071144104004
    8. ' range' → logprob: -16.87571144104004
    9. '	m' → logprob: -17.87571144104004
    10. '  ' → logprob: -18.25071144104004

Token 653: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05527162551879883
    2. 'in' → logprob: -2.930271625518799
    3. 'range' → logprob: -8.05527114868164
    4. 'm' → logprob: -10.55527114868164
    5. 'n' → logprob: -10.68027114868164
    6. ' range' → logprob: -11.43027114868164
    7. ' ' → logprob: -12.05527114868164
    8. 'ange' → logprob: -13.55527114868164
    9. '(' → logprob: -13.80527114868164
    10. '1' → logprob: -14.05527114868164

Token 654: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011760591296479106
    2. ' range' → logprob: -6.751175880432129
    3. '(range' → logprob: -12.626175880432129
    4. '1' → logprob: -13.626175880432129
    5. '(' → logprob: -14.251175880432129
    6. 'm' → logprob: -14.876175880432129
    7. '   ' → logprob: -15.876175880432129
    8. ' ' → logprob: -16.001176834106445
    9. '  ' → logprob: -17.376176834106445
    10. '2' → logprob: -17.876176834106445

Token 655: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.636475493200123e-05
    2. '(m' → logprob: -10.375076293945312
    3. 'range' → logprob: -10.625076293945312
    4. '(range' → logprob: -11.625076293945312
    5. ' in' → logprob: -12.375076293945312
    6. '1' → logprob: -12.500076293945312
    7. 'in' → logprob: -13.375076293945312
    8. 'm' → logprob: -14.125076293945312
    9. ' (' → logprob: -14.625076293945312
    10. ' range' → logprob: -15.125076293945312

Token 656: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019212529296055436
    2. '(' → logprob: -6.6269211769104
    3. '6' → logprob: -7.5019211769104
    4. '2' → logprob: -11.126921653747559
    5. '5' → logprob: -11.126921653747559
    6. '3' → logprob: -12.501921653747559
    7. ' ' → logprob: -12.751921653747559
    8. '7' → logprob: -12.876921653747559
    9. '   ' → logprob: -13.501921653747559
    10. '0' → logprob: -14.001921653747559

Token 657: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010883049108088017
    2. '6' → logprob: -8.00108814239502
    3. '(' → logprob: -8.25108814239502
    4. ' ,' → logprob: -8.25108814239502
    5. '5' → logprob: -8.50108814239502
    6. '1' → logprob: -12.37608814239502
    7. '   ' → logprob: -12.37608814239502
    8. '7' → logprob: -12.50108814239502
    9. ' ' → logprob: -12.75108814239502
    10. ' (' → logprob: -13.12608814239502

Token 658: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.7888184528565034e-05
    2. ' ' → logprob: -10.3750581741333
    3. '7' → logprob: -11.2500581741333
    4. '5' → logprob: -11.5000581741333
    5. '   ' → logprob: -13.8750581741333
    6. '1' → logprob: -14.1250581741333
    7. '4' → logprob: -14.8750581741333
    8. '8' → logprob: -15.0000581741333
    9. '  ' → logprob: -15.7500581741333
    10. '{' → logprob: -15.8750581741333

Token 659: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0001999642699956894
    2. '7' → logprob: -8.750200271606445
    3. '5' → logprob: -10.750200271606445
    4. ' ' → logprob: -12.250200271606445
    5. '8' → logprob: -12.375200271606445
    6. '4' → logprob: -13.250200271606445
    7. '1' → logprob: -13.312700271606445
    8. '(' → logprob: -13.750200271606445
    9. '3' → logprob: -13.875200271606445
    10. '11' → logprob: -13.937700271606445

Token 660: ')]' (ID: 15710)
  Prédit: '])))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])))' → logprob: -0.08315186947584152
    2. ']))' → logprob: -3.2081518173217773
    3. ')]' → logprob: -3.9581518173217773
    4. ']' → logprob: -3.9581518173217773
    5. '])))
' → logprob: -7.083151817321777
    6. '()]' → logprob: -9.083151817321777
    7. '])]' → logprob: -9.208151817321777
    8. ' ]' → logprob: -10.333151817321777
    9. '])),' → logprob: -10.833151817321777
    10. ']]' → logprob: -11.333151817321777

Token 661: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00035536551149562
    2. '))' → logprob: -8.62535572052002
    3. ')))
' → logprob: -8.75035572052002
    4. ')' → logprob: -11.75035572052002
    5. '))))' → logprob: -12.25035572052002
    6. ' ' → logprob: -13.75035572052002
    7. ')));' → logprob: -13.87535572052002
    8. '   ' → logprob: -13.87535572052002
    9. ')))

' → logprob: -14.25035572052002
    10. '')))' → logprob: -15.12535572052002

Token 662: 'z' (ID: 89)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1995880603790283
    2. '#' → logprob: -1.6995880603790283
    3. 'res' → logprob: -1.8245880603790283
    4. 'def' → logprob: -2.6995880603790283
    5. 'x' → logprob: -2.8245880603790283
    6. 'result' → logprob: -3.1995880603790283
    7. 'print' → logprob: -3.4495880603790283
    8. 'answer' → logprob: -3.6995880603790283
    9. 'n' → logprob: -3.8245880603790283
    10. 'm' → logprob: -4.449587821960449

Token 663: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6381152868270874
    2. ' =' → logprob: -0.7631152868270874
    3. ',' → logprob: -5.263115406036377
    4. ')' → logprob: -9.638114929199219
    5. ' ' → logprob: -10.263114929199219
    6. '.' → logprob: -10.388114929199219
    7. '[' → logprob: -10.388114929199219
    8. 's' → logprob: -10.763114929199219
    9. 'z' → logprob: -11.013114929199219
    10. '_' → logprob: -11.138114929199219

Token 664: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3873993456363678
    2. 'int' → logprob: -2.137399435043335
    3. 'a' → logprob: -2.762399435043335
    4. 'n' → logprob: -3.387399435043335
    5. '(' → logprob: -3.512399435043335
    6. '(a' → logprob: -3.887399435043335
    7. '[a' → logprob: -4.637399196624756
    8. '1' → logprob: -4.887399196624756
    9. '[' → logprob: -5.262399196624756
    10. ' ' → logprob: -5.387399196624756

Token 665: ' ^' (ID: 7602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 666: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.372294698550832e-06
    2. ' b' → logprob: -12.000009536743164
    3. '0' → logprob: -13.875009536743164
    4. '(b' → logprob: -14.375009536743164
    5. 'a' → logprob: -14.750009536743164
    6. '   ' → logprob: -15.250009536743164
    7. 'z' → logprob: -15.375009536743164
    8. 'n' → logprob: -15.500009536743164
    9. '3' → logprob: -15.625009536743164
    10. '	b' → logprob: -16.125009536743164

Token 667: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7321720123291016
    2. 'res' → logprob: -2.1071720123291016
    3. 'result' → logprob: -2.3571720123291016
    4. 'd' → logprob: -2.4821720123291016
    5. 'm' → logprob: -2.4821720123291016
    6. 'dp' → logprob: -2.7321720123291016
    7. 'answer' → logprob: -2.8571720123291016
    8. 'def' → logprob: -2.9821720123291016
    9. 't' → logprob: -3.1071720123291016
    10. 'print' → logprob: -3.2321720123291016

Token 668: 'd' (ID: 67)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1927282810211182
    2. 'res' → logprob: -1.8177282810211182
    3. 'result' → logprob: -1.9427282810211182
    4. 'answer' → logprob: -2.442728281021118
    5. 'ans' → logprob: -2.692728281021118
    6. 'dp' → logprob: -3.067728281021118
    7. 'for' → logprob: -3.192728281021118
    8. 'r' → logprob: -3.692728281021118
    9. 't' → logprob: -3.692728281021118
    10. 'def' → logprob: -4.192728042602539

Token 669: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1158500462770462
    2. ' =' → logprob: -2.3658499717712402
    3. '={' → logprob: -4.61584997177124
    4. '[' → logprob: -5.86584997177124
    5. '=set' → logprob: -6.49084997177124
    6. '={}' → logprob: -8.115850448608398
    7. '=[' → logprob: -8.615850448608398
    8. '={(' → logprob: -8.865850448608398
    9. '{' → logprob: -8.865850448608398
    10. '=[]' → logprob: -9.115850448608398

Token 670: ' list' (ID: 1562)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.045866433531045914
    2. 'set' → logprob: -3.2958664894104004
    3. 'r' → logprob: -5.6708664894104
    4. 'range' → logprob: -6.4208664894104
    5. '[' → logprob: -6.5458664894104
    6. '{}' → logprob: -7.2958664894104
    7. '{s' → logprob: -8.170866012573242
    8. '[r' → logprob: -8.795866012573242
    9. 'list' → logprob: -9.920866012573242
    10. 'default' → logprob: -10.420866012573242

Token 671: '(chain' (ID: 124348)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.007790451403707266
    2. '(r' → logprob: -5.882790565490723
    3. '(set' → logprob: -5.882790565490723
    4. '({' → logprob: -6.757790565490723
    5. '()' → logprob: -7.632790565490723
    6. '(filter' → logprob: -8.257790565490723
    7. '(map' → logprob: -9.132790565490723
    8. '(' → logprob: -9.132790565490723
    9. '(sorted' → logprob: -10.882790565490723
    10. '(i' → logprob: -11.132790565490723

Token 672: '.from' (ID: 10935)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0869189128279686
    2. '(r' → logprob: -2.711918830871582
    3. '((' → logprob: -4.586918830871582
    4. '([' → logprob: -5.336918830871582
    5. '(filter' → logprob: -7.461918830871582
    6. '(map' → logprob: -7.461918830871582
    7. '(s' → logprob: -8.211918830871582
    8. '.from' → logprob: -9.336918830871582
    9. '(
' → logprob: -9.836918830871582
    10. '(' → logprob: -10.086918830871582

Token 673: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -1.016752004623413
    2. 'range' → logprob: -1.141752004623413
    3. 'iter' → logprob: -1.766752004623413
    4. 'r' → logprob: -3.016752004623413
    5. '[r' → logprob: -3.266752004623413
    6. '(range' → logprob: -3.641752004623413
    7. '(r' → logprob: -4.766752243041992
    8. '[' → logprob: -4.766752243041992
    9. 's' → logprob: -5.141752243041992
    10. '([' → logprob: -5.141752243041992

Token 674: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -1.580929347255733e-05
    2. 'ate' → logprob: -12.250016212463379
    3. 'product' → logprob: -12.625016212463379
    4. '(product' → logprob: -12.750016212463379
    5. '(' → logprob: -13.750016212463379
    6. 'ble' → logprob: -14.125016212463379
    7. 'ab' → logprob: -14.625016212463379
    8. 'chain' → logprob: -14.875016212463379
    9. 'al' → logprob: -15.000016212463379
    10. 'nable' → logprob: -15.000016212463379

Token 675: '([[' (ID: 60239)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5728511810302734
    2. '([' → logprob: -2.1978511810302734
    3. '((' → logprob: -2.3228511810302734
    4. '(range' → logprob: -2.5728511810302734
    5. '([[' → logprob: -2.8228511810302734
    6. '(s' → logprob: -3.0728511810302734
    7. '(([' → logprob: -3.6978511810302734
    8. '([(' → logprob: -5.197851181030273
    9. '(((' → logprob: -5.447851181030273
    10. 'r' → logprob: -6.072851181030273

Token 676: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1261969804763794
    2. '(i' → logprob: -1.1261969804763794
    3. '[i' → logprob: -2.37619686126709
    4. 'range' → logprob: -3.12619686126709
    5. 'x' → logprob: -3.25119686126709
    6. '0' → logprob: -3.75119686126709
    7. '[x' → logprob: -4.00119686126709
    8. 'm' → logprob: -4.12619686126709
    9. '(x' → logprob: -4.50119686126709
    10. '[' → logprob: -4.62619686126709

Token 677: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06837111711502075
    2. ',i' → logprob: -3.818371057510376
    3. '-' → logprob: -3.943371057510376
    4. '*' → logprob: -5.193371295928955
    5. '+' → logprob: -5.193371295928955
    6. ' -' → logprob: -5.443371295928955
    7. ' ,' → logprob: -5.568371295928955
    8. '   ' → logprob: -6.443371295928955
    9. '],' → logprob: -6.693371295928955
    10. ' +' → logprob: -7.193371295928955

Token 678: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03855239227414131
    2. 'for' → logprob: -3.7885522842407227
    3. ' for' → logprob: -5.413552284240723
    4. ']' → logprob: -6.413552284240723
    5. 'range' → logprob: -6.663552284240723
    6. 'if' → logprob: -6.788552284240723
    7. '])' → logprob: -6.788552284240723
    8. '*' → logprob: -6.788552284240723
    9. ' if' → logprob: -6.913552284240723
    10. '   ' → logprob: -7.788552284240723

Token 679: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7429102659225464
    2. 'x' → logprob: -1.6179102659225464
    3. '(i' → logprob: -2.117910385131836
    4. '(x' → logprob: -3.242910385131836
    5. 'r' → logprob: -3.492910385131836
    6. '((' → logprob: -3.742910385131836
    7. 'z' → logprob: -4.242910385131836
    8. 'bit' → logprob: -4.367910385131836
    9. '(r' → logprob: -4.617910385131836
    10. 'b' → logprob: -4.992910385131836

Token 680: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.2949802875518799
    2. '(i' → logprob: -1.6699802875518799
    3. 'i' → logprob: -2.16998028755188
    4. '((' → logprob: -2.41998028755188
    5. 'x' → logprob: -2.54498028755188
    6. '(z' → logprob: -2.66998028755188
    7. '(x' → logprob: -3.04498028755188
    8. 'a' → logprob: -3.16998028755188
    9. '(a' → logprob: -3.91998028755188
    10. 'r' → logprob: -4.419980049133301

Token 681: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.11060076206922531
    2. ' &' → logprob: -2.735600709915161
    3. '&' → logprob: -3.360600709915161
    4. ' >>' → logprob: -5.48560094833374
    5. '>>(' → logprob: -8.235600471496582
    6. '&(' → logprob: -8.235600471496582
    7. '&i' → logprob: -9.485600471496582
    8. '   ' → logprob: -9.735600471496582
    9. '==' → logprob: -10.110600471496582
    10. ' ' → logprob: -10.110600471496582

Token 682: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005012048059143126
    2. ' i' → logprob: -8.50050163269043
    3. '(i' → logprob: -8.75050163269043
    4. '(' → logprob: -9.25050163269043
    5. '_i' → logprob: -11.75050163269043
    6. 'k' → logprob: -11.87550163269043
    7. 'j' → logprob: -12.25050163269043
    8. '   ' → logprob: -12.62550163269043
    9. ' (' → logprob: -12.75050163269043
    10. 'a' → logprob: -13.12550163269043

Token 683: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017900925129652023
    2. ')&' → logprob: -4.1429009437561035
    3. '&' → logprob: -6.6429009437561035
    4. ' &' → logprob: -7.5179009437561035
    5. ' )' → logprob: -11.642900466918945
    6. '0' → logprob: -13.017900466918945
    7. '   ' → logprob: -13.392900466918945
    8. '&amp' → logprob: -13.642900466918945
    9. '1' → logprob: -14.017900466918945
    10. ')==' → logprob: -14.142900466918945

Token 684: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.6938220262527466
    2. ' &' → logprob: -0.6938220262527466
    3. '==' → logprob: -7.818821907043457
    4. ' ==' → logprob: -9.193821907043457
    5. '&a' → logprob: -10.568821907043457
    6. ' else' → logprob: -10.943821907043457
    7. 'else' → logprob: -10.943821907043457
    8. 'and' → logprob: -11.068821907043457
    9. ')' → logprob: -11.568821907043457
    10. '&amp' → logprob: -11.568821907043457

Token 685: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040910433745011687
    2. ' ' → logprob: -8.125409126281738
    3. '0' → logprob: -9.375409126281738
    4. 'i' → logprob: -11.750409126281738
    5. 'a' → logprob: -12.125409126281738
    6. 'j' → logprob: -12.125409126281738
    7. 'k' → logprob: -13.375409126281738
    8. '(i' → logprob: -13.750409126281738
    9. '   ' → logprob: -13.875409126281738
    10. 'd' → logprob: -13.875409126281738

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034511767444200814
    2. ' ' → logprob: -8.625345230102539
    3. '0' → logprob: -9.000345230102539
    4. 'a' → logprob: -11.125345230102539
    5. '3' → logprob: -12.250345230102539
    6. 'n' → logprob: -12.687845230102539
    7. '   ' → logprob: -12.875345230102539
    8. 'i' → logprob: -12.875345230102539
    9. '(i' → logprob: -12.937845230102539
    10. '(' → logprob: -13.062845230102539

Token 687: ' else' (ID: 1203)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.29523923993110657
    2. 'else' → logprob: -1.7952392101287842
    3. ' else' → logprob: -2.545239210128784
    4. ' ==' → logprob: -4.545239448547363
    5. '!=' → logprob: -8.795239448547363
    6. ' ' → logprob: -9.170239448547363
    7. '   ' → logprob: -9.795239448547363
    8. '^' → logprob: -10.420239448547363
    9. 'and' → logprob: -10.420239448547363
    10. 'for' → logprob: -10.420239448547363

Token 688: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.11462687700986862
    2. '[' → logprob: -2.239626884460449
    3. ' []' → logprob: -7.114626884460449
    4. '[]
' → logprob: -7.614626884460449
    5. ' [' → logprob: -8.86462688446045
    6. '[]}' → logprob: -9.23962688446045
    7. '[],' → logprob: -9.48962688446045
    8. '   ' → logprob: -10.23962688446045
    9. '[i' → logprob: -10.36462688446045
    10. '[])' → logprob: -10.61462688446045

Token 689: ' for' (ID: 395)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4157397150993347
    2. ' for' → logprob: -1.7907397747039795
    3. 'for' → logprob: -2.1657397747039795
    4. '(range' → logprob: -2.9157397747039795
    5. ' range' → logprob: -5.6657395362854
    6. 'in' → logprob: -7.7907395362854
    7. '   ' → logprob: -8.165740013122559
    8. ' in' → logprob: -8.915740013122559
    9. ']' → logprob: -10.040740013122559
    10. ',' → logprob: -10.165740013122559

Token 690: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005575829651206732
    2. ' range' → logprob: -5.505575656890869
    3. 'i' → logprob: -6.505575656890869
    4. ' i' → logprob: -14.255576133728027
    5. ' ' → logprob: -15.505576133728027
    6. 'r' → logprob: -16.25557518005371
    7. '(range' → logprob: -16.88057518005371
    8. '   ' → logprob: -16.88057518005371
    9. 'x' → logprob: -17.00557518005371
    10. '  ' → logprob: -17.00557518005371

Token 691: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5387357473373413
    2. 'range' → logprob: -1.2887357473373413
    3. ' range' → logprob: -2.038735866546631
    4. 'in' → logprob: -4.538735866546631
    5. '(range' → logprob: -11.663735389709473
    6. ' ' → logprob: -12.288735389709473
    7. ',' → logprob: -14.413735389709473
    8. '  ' → logprob: -14.788735389709473
    9. '   ' → logprob: -15.163735389709473
    10. '	range' → logprob: -15.538735389709473

Token 692: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004895264864899218
    2. ' range' → logprob: -7.625489711761475
    3. '   ' → logprob: -14.000489234924316
    4. 're' → logprob: -14.375489234924316
    5. ' ' → logprob: -15.750489234924316
    6. '  ' → logprob: -16.750490188598633
    7. '(range' → logprob: -17.500490188598633
    8. '	range' → logprob: -18.375490188598633
    9. '    ' → logprob: -18.750490188598633
    10. '0' → logprob: -18.875490188598633

Token 693: '(MAX' (ID: 129209)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.08488787710666656
    2. 'n' → logprob: -2.584887981414795
    3. '(MAX' → logprob: -5.584887981414795
    4. '(n' → logprob: -6.584887981414795
    5. '18' → logprob: -8.209887504577637
    6. 'max' → logprob: -8.584887504577637
    7. 'm' → logprob: -9.209887504577637
    8. ' MAX' → logprob: -9.334887504577637
    9. '(' → logprob: -9.584887504577637
    10. ' n' → logprob: -10.209887504577637

Token 694: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0019726462196558714
    2. 'm' → logprob: -6.251972675323486
    3. ')' → logprob: -11.376972198486328
    4. 'n' → logprob: -11.501972198486328
    5. 'MAX' → logprob: -11.501972198486328
    6. ' ' → logprob: -13.126972198486328
    7. '```' → logprob: -14.001972198486328
    8. '16' → logprob: -14.001972198486328
    9. '18' → logprob: -14.126972198486328
    10. '0' → logprob: -14.376972198486328

Token 695: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.41192060708999634
    2. ']))' → logprob: -1.5369205474853516
    3. '])' → logprob: -2.9119205474853516
    4. '])))' → logprob: -3.1619205474853516
    5. ')])' → logprob: -4.161920547485352
    6. '])]' → logprob: -5.411920547485352
    7. ']' → logprob: -6.036920547485352
    8. ')' → logprob: -7.036920547485352
    9. ']]' → logprob: -7.661920547485352
    10. '])))
' → logprob: -7.661920547485352

Token 696: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12805473804473877
    2. '))
' → logprob: -2.128054618835449
    3. ')))' → logprob: -7.128054618835449
    4. ']))' → logprob: -8.75305461883545
    5. '))

' → logprob: -9.62805461883545
    6. ')))
' → logprob: -10.12805461883545
    7. ')' → logprob: -10.87805461883545
    8. ']))
' → logprob: -11.12805461883545
    9. '))
' → logprob: -12.00305461883545
    10. '()))' → logprob: -12.62805461883545

Token 697: 'cnt' (ID: 33160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3760879337787628
    2. ')' → logprob: -2.3760879039764404
    3. 'result' → logprob: -2.8760879039764404
    4. 't' → logprob: -3.1260879039764404
    5. 'res' → logprob: -3.2510879039764404
    6. 'for' → logprob: -3.3760879039764404
    7. 'x' → logprob: -4.6260881423950195
    8. 'answer' → logprob: -4.8760881423950195
    9. 'ret' → logprob: -5.5010881423950195
    10. 'if' → logprob: -5.6260881423950195

Token 698: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25209641456604004
    2. '=' → logprob: -1.50209641456604
    3. ',' → logprob: -8.877096176147461
    4. '_' → logprob: -11.377096176147461
    5. 's' → logprob: -12.127096176147461
    6. '  ' → logprob: -12.252096176147461
    7. ' ' → logprob: -14.002096176147461
    8. ')' → logprob: -14.127096176147461
    9. 'z' → logprob: -14.127096176147461
    10. 'd' → logprob: -14.377096176147461

Token 699: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06091267615556717
    2. 'sw' → logprob: -3.435912609100342
    3. 'sum' → logprob: -4.560912609100342
    4. '1' → logprob: -4.935912609100342
    5. ' ' → logprob: -5.935912609100342
    6. 'z' → logprob: -6.560912609100342
    7. '[' → logprob: -7.185912609100342
    8. 'len' → logprob: -7.185912609100342
    9. 'a' → logprob: -7.560912609100342
    10. '(' → logprob: -7.685912609100342

Token 700: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7215916514396667
    2. '(' → logprob: -0.8465916514396667
    3. '(((' → logprob: -3.2215917110443115
    4. '(d' → logprob: -3.4715917110443115
    5. '([(' → logprob: -5.596591472625732
    6. '([' → logprob: -5.721591472625732
    7. '(r' → logprob: -5.846591472625732
    8. '((((' → logprob: -6.346591472625732
    9. '(x' → logprob: -7.221591472625732
    10. '(s' → logprob: -7.346591472625732

Token 701: 'z' (ID: 89)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9429821968078613
    2. 'sw' → logprob: -1.0679821968078613
    3. '(' → logprob: -2.3179821968078613
    4. '(sw' → logprob: -3.0679821968078613
    5. '((' → logprob: -3.5679821968078613
    6. '(z' → logprob: -3.6929821968078613
    7. 'z' → logprob: -4.067982196807861
    8. '(s' → logprob: -4.567982196807861
    9. '(x' → logprob: -4.942982196807861
    10. '(a' → logprob: -5.567982196807861

Token 702: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.2520061731338501
    2. ' >>' → logprob: -1.50200617313385
    3. ' &' → logprob: -11.377006530761719
    4. ' ' → logprob: -11.502006530761719
    5. '>>(' → logprob: -11.502006530761719
    6. ' ' → logprob: -11.502006530761719
    7. '>' → logprob: -11.752006530761719
    8. '
' → logprob: -12.502006530761719
    9. '[i' → logprob: -12.752006530761719
    10. '	' → logprob: -13.002006530761719

Token 703: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009912493405863643
    2. 'd' → logprob: -8.375990867614746
    3. ' i' → logprob: -8.625990867614746
    4. '1' → logprob: -8.750990867614746
    5. 'k' → logprob: -9.000990867614746
    6. 'z' → logprob: -9.875990867614746
    7. 'x' → logprob: -10.000990867614746
    8. '(i' → logprob: -10.500990867614746
    9. 'j' → logprob: -10.625990867614746
    10. 'a' → logprob: -10.875990867614746

Token 704: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006806228775531054
    2. ')&' → logprob: -7.500680446624756
    3. '&' → logprob: -9.625680923461914
    4. ' )' → logprob: -10.375680923461914
    5. ' &' → logprob: -11.125680923461914
    6. '   ' → logprob: -12.750680923461914
    7. '1' → logprob: -12.875680923461914
    8. 'for' → logprob: -13.250680923461914
    9. '(i' → logprob: -13.250680923461914
    10. ')>>' → logprob: -13.750680923461914

Token 705: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14399994909763336
    2. '&' → logprob: -2.5190000534057617
    3. ' for' → logprob: -3.8940000534057617
    4. ')&' → logprob: -4.019000053405762
    5. 'for' → logprob: -4.519000053405762
    6. ' &' → logprob: -5.519000053405762
    7. '&i' → logprob: -8.894000053405762
    8. ' )' → logprob: -9.769000053405762
    9. '[i' → logprob: -11.144000053405762
    10. '```' → logprob: -11.144000053405762

Token 706: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38872161507606506
    2. 'i' → logprob: -1.1387215852737427
    3. ' i' → logprob: -6.888721466064453
    4. ' ' → logprob: -7.138721466064453
    5. '(i' → logprob: -11.138721466064453
    6. '0' → logprob: -11.513721466064453
    7. '   ' → logprob: -12.763721466064453
    8. '```' → logprob: -13.513721466064453
    9. 'z' → logprob: -13.888721466064453
    10. 'a' → logprob: -14.013721466064453

Token 707: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011130942031741142
    2. 'i' → logprob: -4.5111308097839355
    3. ' ' → logprob: -9.761131286621094
    4. ' i' → logprob: -11.136131286621094
    5. '(i' → logprob: -12.261131286621094
    6. '0' → logprob: -13.261131286621094
    7. '```' → logprob: -14.011131286621094
    8. '
' → logprob: -14.136131286621094
    9. '   ' → logprob: -14.761131286621094
    10. '2' → logprob: -15.261131286621094

Token 708: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1610780656337738
    2. 'for' → logprob: -1.9110780954360962
    3. ')' → logprob: -7.161077976226807
    4. '()' → logprob: -10.661078453063965
    5. ' ' → logprob: -10.661078453063965
    6. '   ' → logprob: -11.536078453063965
    7. '(i' → logprob: -11.661078453063965
    8. '	for' → logprob: -12.411078453063965
    9. '  ' → logprob: -12.911078453063965
    10. ' i' → logprob: -13.786078453063965

Token 709: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1642076075077057
    2. ' range' → logprob: -2.664207696914673
    3. 'range' → logprob: -2.664207696914673
    4. ' i' → logprob: -4.414207458496094
    5. ' in' → logprob: -11.289207458496094
    6. 'in' → logprob: -11.914207458496094
    7. ' ' → logprob: -13.789207458496094
    8. '[i' → logprob: -16.039207458496094
    9. '(range' → logprob: -16.039207458496094
    10. '_' → logprob: -16.039207458496094

Token 710: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20283976197242737
    2. 'in' → logprob: -1.702839732170105
    3. 'range' → logprob: -7.3278398513793945
    4. 'i' → logprob: -7.5778398513793945
    5. ' range' → logprob: -8.702839851379395
    6. ' i' → logprob: -9.327839851379395
    7. ' ' → logprob: -14.077839851379395
    8. '   ' → logprob: -15.077839851379395
    9. ')' → logprob: -15.577839851379395
    10. '0' → logprob: -15.952839851379395

Token 711: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019289902411401272
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -15.37692928314209
    4. 'd' → logprob: -16.126928329467773
    5. '	range' → logprob: -17.501928329467773
    6. ' ' → logprob: -18.001928329467773
    7. 'chain' → logprob: -18.626928329467773
    8. '   ' → logprob: -19.126928329467773
    9. '
' → logprob: -20.251928329467773
    10. '  ' → logprob: -20.501928329467773

Token 712: '(MAX' (ID: 129209)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06112789362668991
    2. 'i' → logprob: -3.1861279010772705
    3. ' range' → logprob: -4.436127662658691
    4. 'MAX' → logprob: -5.686127662658691
    5. '(MAX' → logprob: -6.561127662658691
    6. '(range' → logprob: -7.061127662658691
    7. '(i' → logprob: -8.311127662658691
    8. ' i' → logprob: -8.561127662658691
    9. ' MAX' → logprob: -12.186127662658691
    10. 'd' → logprob: -12.811127662658691

Token 713: 'M' (ID: 44)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.013913020491600037
    2. 'm' → logprob: -4.388913154602051
    3. 'z' → logprob: -7.513913154602051
    4. '(MAX' → logprob: -7.763913154602051
    5. 'cnt' → logprob: -8.51391315460205
    6. 'n' → logprob: -9.26391315460205
    7. ')' → logprob: -10.26391315460205
    8. 'i' → logprob: -10.76391315460205
    9. '18' → logprob: -10.88891315460205
    10. 'M' → logprob: -11.01391315460205

Token 714: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022763425949960947
    2. ')
' → logprob: -6.377276420593262
    3. '))' → logprob: -7.752276420593262
    4. ' )' → logprob: -9.252276420593262
    5. ')+' → logprob: -11.127276420593262
    6. 'if' → logprob: -11.627276420593262
    7. ' if' → logprob: -12.377276420593262
    8. ')))' → logprob: -12.377276420593262
    9. ')>' → logprob: -13.002276420593262
    10. '   ' → logprob: -13.127276420593262

Token 715: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.05169677734375
    2. 'res' → logprob: -1.67669677734375
    3. 'ans' → logprob: -1.67669677734375
    4. 'if' → logprob: -2.05169677734375
    5. 'result' → logprob: -2.92669677734375
    6. 'ret' → logprob: -3.55169677734375
    7. 'answer' → logprob: -3.92669677734375
    8. 'def' → logprob: -4.17669677734375
    9. 'for' → logprob: -4.17669677734375
    10. 'r' → logprob: -6.05169677734375

Token 716: '('' (ID: 706)
  Prédit: '(sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sw' → logprob: -0.012158408761024475
    2. '(cnt' → logprob: -5.387158393859863
    3. '(' → logprob: -6.137158393859863
    4. '(sum' → logprob: -6.137158393859863
    5. '(s' → logprob: -6.887158393859863
    6. '(len' → logprob: -7.387158393859863
    7. '((' → logprob: -7.762158393859863
    8. '(max' → logprob: -8.262158393859863
    9. '(n' → logprob: -8.762158393859863
    10. '(min' → logprob: -9.012158393859863

Token 717: 'NO' (ID: 14695)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.4028542637825012
    2. 'sw' → logprob: -1.9028542041778564
    3. '(cnt' → logprob: -3.0278542041778564
    4. 'z' → logprob: -3.4028542041778564
    5. '0' → logprob: -3.6528542041778564
    6. '1' → logprob: -4.6528544425964355
    7. 'sum' → logprob: -4.7778544425964355
    8. '(' → logprob: -5.1528544425964355
    9. 'max' → logprob: -5.2778544425964355
    10. '(sw' → logprob: -5.5278544425964355

Token 718: ''' (ID: 6)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.29995810985565186
    2. 'if' → logprob: -1.5499581098556519
    3. ''' → logprob: -3.4249582290649414
    4. ')' → logprob: -4.674958229064941
    5. '')' → logprob: -5.674958229064941
    6. '()' → logprob: -7.299958229064941
    7. ' ' → logprob: -8.424958229064941
    8. '"' → logprob: -8.674958229064941
    9. '   ' → logprob: -8.924958229064941
    10. '  ' → logprob: -9.299958229064941

Token 719: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15129444003105164
    2. ')' → logprob: -2.026294469833374
    3. 'if' → logprob: -4.776294231414795
    4. ',' → logprob: -9.276294708251953
    5. ' )' → logprob: -10.151294708251953
    6. '()' → logprob: -11.776294708251953
    7. '')' → logprob: -12.401294708251953
    8. ' ' → logprob: -12.651294708251953
    9. ''' → logprob: -13.901294708251953
    10. '	if' → logprob: -14.026294708251953

Token 720: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.10027653723955154
    2. '(cnt' → logprob: -2.975276470184326
    3. 'z' → logprob: -4.725276470184326
    4. ' cnt' → logprob: -4.850276470184326
    5. 'n' → logprob: -4.975276470184326
    6. 'a' → logprob: -4.975276470184326
    7. 'not' → logprob: -5.225276470184326
    8. '(a' → logprob: -6.350276470184326
    9. '(z' → logprob: -6.725276470184326
    10. 'sw' → logprob: -6.850276470184326

Token 721: ' %' (ID: 1851)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.2734742164611816
    2. '<' → logprob: -1.6484742164611816
    3. '>' → logprob: -2.0234742164611816
    4. '!=' → logprob: -2.1484742164611816
    5. ' <' → logprob: -2.3984742164611816
    6. ' !=' → logprob: -2.6484742164611816
    7. ' ==' → logprob: -3.0234742164611816
    8. ' >' → logprob: -3.2734742164611816
    9. '<=' → logprob: -4.648474216461182
    10. '%' → logprob: -4.648474216461182

Token 722: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013896391028538346
    2. ' ' → logprob: -6.626389503479004
    3. '4' → logprob: -10.376389503479004
    4. '3' → logprob: -10.626389503479004
    5. '```' → logprob: -13.126389503479004
    6. '>' → logprob: -13.501389503479004
    7. '  ' → logprob: -13.751389503479004
    8. '=' → logprob: -14.126389503479004
    9. '==' → logprob: -14.876389503479004
    10. '...' → logprob: -15.063889503479004

Token 723: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.314625690924004e-05
    2. ' ' → logprob: -9.750073432922363
    3. '4' → logprob: -11.500073432922363
    4. '3' → logprob: -12.625073432922363
    5. '```' → logprob: -14.625073432922363
    6. '>' → logprob: -16.000072479248047
    7. '1' → logprob: -16.187572479248047
    8. '  ' → logprob: -16.375072479248047
    9. '=' → logprob: -16.687572479248047
    10. '   ' → logprob: -16.937572479248047

Token 724: ' ==' (ID: 951)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.454181969165802
    2. '==' → logprob: -1.3291819095611572
    3. 'else' → logprob: -2.3291819095611572
    4. ' ==' → logprob: -6.079182147979736
    5. '!=' → logprob: -7.704182147979736
    6. ')' → logprob: -8.579181671142578
    7. ' !=' → logprob: -11.204181671142578
    8. ' ' → logprob: -12.579181671142578
    9. '==
' → logprob: -12.829181671142578
    10. ')==' → logprob: -12.954181671142578

Token 725: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018704519607126713
    2. '1' → logprob: -6.626870632171631
    3. ' ' → logprob: -7.626870632171631
    4. '2' → logprob: -9.876870155334473
    5. '=' → logprob: -12.626870155334473
    6. '```' → logprob: -14.126870155334473
    7. 'n' → logprob: -15.001870155334473
    8. ')' → logprob: -15.251870155334473
    9. '   ' → logprob: -15.439370155334473
    10. '==' → logprob: -15.501870155334473

Token 726: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02649768255650997
    2. '2' → logprob: -3.6514976024627686
    3. '1' → logprob: -9.026497840881348
    4. ' ' → logprob: -9.526497840881348
    5. '=' → logprob: -12.651497840881348
    6. '```' → logprob: -14.651497840881348
    7. '==' → logprob: -15.776497840881348
    8. ')' → logprob: -16.33899688720703
    9. 'else' → logprob: -16.40149688720703
    10. '   ' → logprob: -16.46399688720703

Token 727: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10021281987428665
    2. 'else' → logprob: -2.350212812423706
    3. ' or' → logprob: -12.475213050842285
    4. ' ' → logprob: -13.725213050842285
    5. '	else' → logprob: -14.725213050842285
    6. 'or' → logprob: -14.850213050842285
    7. 'and' → logprob: -15.850213050842285
    8. '```' → logprob: -16.10021209716797
    9. ' and' → logprob: -16.47521209716797
    10. '    ' → logprob: -16.85021209716797

Token 728: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08047900348901749
    2. '"' → logprob: -2.7054789066314697
    3. 'sw' → logprob: -5.205479145050049
    4. 'all' → logprob: -6.580479145050049
    5. '('' → logprob: -7.330479145050049
    6. 'print' → logprob: -7.455479145050049
    7. ''all' → logprob: -7.455479145050049
    8. '   ' → logprob: -7.580479145050049
    9. ''s' → logprob: -8.45547866821289
    10. ' ' → logprob: -9.08047866821289

Token 729: 'YES' (ID: 31958)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.019386552274227142
    2. '"' → logprob: -4.0193867683410645
    3. 'sw' → logprob: -8.019386291503906
    4. 'YES' → logprob: -8.019386291503906
    5. 'print' → logprob: -8.019386291503906
    6. '   ' → logprob: -10.394386291503906
    7. '('' → logprob: -10.519386291503906
    8. 'yes' → logprob: -10.644386291503906
    9. 'sum' → logprob: -11.144386291503906
    10. 'str' → logprob: -11.269386291503906

Token 730: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012251086300238967
    2. ' )' → logprob: -6.751224994659424
    3. '')' → logprob: -10.001225471496582
    4. '))' → logprob: -12.751225471496582
    5. '`)' → logprob: -13.251225471496582
    6. '())' → logprob: -13.626225471496582
    7. ')
' → logprob: -13.751225471496582
    8. '")' → logprob: -14.626225471496582
    9. '
' → logprob: -14.876225471496582
    10. ')`' → logprob: -15.001225471496582

Token 731: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 732: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.6940965056419373
    2. ' cnt' → logprob: -1.194096565246582
    3. 'DBG' → logprob: -2.694096565246582
    4. ' DBG' → logprob: -2.694096565246582
    5. 'z' → logprob: -4.444096565246582
    6. 'a' → logprob: -4.694096565246582
    7. 'n' → logprob: -4.819096565246582
    8. ' z' → logprob: -4.819096565246582
    9. '(cnt' → logprob: -4.944096565246582
    10. ' n' → logprob: -5.069096565246582

Token 733: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0252479314804077
    2. ' >' → logprob: -1.0252479314804077
    3. ':' → logprob: -1.6502479314804077
    4. '==' → logprob: -3.1502480506896973
    5. '>' → logprob: -3.4002480506896973
    6. ' %' → logprob: -5.275248050689697
    7. ' :' → logprob: -5.775248050689697
    8. ' !=' → logprob: -6.400248050689697
    9. '%' → logprob: -6.650248050689697
    10. ' <' → logprob: -7.025248050689697

Token 734: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1427529752254486
    2. ' ' → logprob: -2.0177528858184814
    3. '1' → logprob: -10.642752647399902
    4. '==' → logprob: -10.892752647399902
    5. ' ==' → logprob: -11.142752647399902
    6. '```' → logprob: -12.517752647399902
    7. ' !=' → logprob: -13.017752647399902
    8. '=' → logprob: -13.142752647399902
    9. '4' → logprob: -13.392752647399902
    10. '!=' → logprob: -13.455252647399902

Token 735: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003490514063742012
    2. ' ' → logprob: -8.125349044799805
    3. '1' → logprob: -10.000349044799805
    4. '==' → logprob: -12.750349044799805
    5. '```' → logprob: -13.375349044799805
    6. '=' → logprob: -13.875349044799805
    7. '!=' → logprob: -14.125349044799805
    8. '0' → logprob: -15.000349044799805
    9. ' ==' → logprob: -15.812849044799805
    10. '``' → logprob: -16.062849044799805

Token 736: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.823066771030426
    2. '==' → logprob: -0.823066771030426
    3. ' ==' → logprob: -2.1980667114257812
    4. '!=' → logprob: -5.198066711425781
    5. ' !=' → logprob: -6.198066711425781
    6. ' :' → logprob: -6.698066711425781
    7. ':
' → logprob: -7.198066711425781
    8. ' and' → logprob: -7.323066711425781
    9. '>' → logprob: -8.323066711425781
    10. 'and' → logprob: -8.448066711425781

Token 737: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16137604415416718
    2. '0' → logprob: -2.5363759994506836
    3. ' ' → logprob: -2.6613759994506836
    4. '   ' → logprob: -11.661375999450684
    5. '  ' → logprob: -13.473875999450684
    6. '```' → logprob: -13.473875999450684
    7. ' ' → logprob: -13.661375999450684
    8. '==' → logprob: -13.848875999450684
    9. 'n' → logprob: -14.036375999450684
    10. '=' → logprob: -14.223875999450684

Token 738: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14495985209941864
    2. '0' → logprob: -2.0199599266052246
    3. ' ' → logprob: -6.269959926605225
    4. '2' → logprob: -7.894959926605225
    5. '   ' → logprob: -12.082459449768066
    6. '```' → logprob: -12.894959449768066
    7. '==' → logprob: -13.519959449768066
    8. '  ' → logprob: -13.957459449768066
    9. '``' → logprob: -14.269959449768066
    10. '=' → logprob: -14.394959449768066

Token 739: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28025054931640625
    2. '   ' → logprob: -2.2802505493164062
    3. ':
' → logprob: -2.5302505493164062
    4. ' and' → logprob: -3.6552505493164062
    5. ' :' → logprob: -3.6552505493164062
    6. ' :
' → logprob: -5.530250549316406
    7. ' or' → logprob: -6.280250549316406
    8. '==' → logprob: -6.405250549316406
    9. ' ==' → logprob: -6.905250549316406
    10. ' sys' → logprob: -7.530250549316406

Token 740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06290730088949203
    2. ' sys' → logprob: -3.4379072189331055
    3. 'sys' → logprob: -3.5629072189331055
    4. '	sys' → logprob: -8.812907218933105
    5. 'exit' → logprob: -8.937907218933105
    6. 'print' → logprob: -9.187907218933105
    7. ' exit' → logprob: -10.562907218933105
    8. ' ' → logprob: -10.937907218933105
    9. ' print' → logprob: -11.312907218933105
    10. '    ' → logprob: -11.562907218933105

Token 741: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.04033292084932327
    2. ' sys' → logprob: -3.4153330326080322
    3. '   ' → logprob: -5.665332794189453
    4. 'exit' → logprob: -6.415332794189453
    5. 'print' → logprob: -6.665332794189453
    6. 'pass' → logprob: -9.165332794189453
    7. ' ' → logprob: -9.915332794189453
    8. '	sys' → logprob: -10.665332794189453
    9. 'for' → logprob: -10.790332794189453
    10. 'quit' → logprob: -10.790332794189453

Token 742: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.0006360700353980064
    2. '.' → logprob: -7.500636100769043
    3. 'exit' → logprob: -10.375636100769043
    4. '.stdout' → logprob: -11.125636100769043
    5. ' exit' → logprob: -11.375636100769043
    6. '	exit' → logprob: -11.375636100769043
    7. '.quit' → logprob: -12.500636100769043
    8. '.EXIT' → logprob: -12.625636100769043
    9. '   ' → logprob: -13.375636100769043
    10. '.stderr' → logprob: -13.500636100769043

Token 743: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2520486116409302
    2. '()' → logprob: -1.5020486116409302
    3. '0' → logprob: -9.25204849243164
    4. '()
' → logprob: -10.75204849243164
    5. ' ()' → logprob: -14.12704849243164
    6. '()(' → logprob: -15.25204849243164
    7. '()`' → logprob: -15.37704849243164
    8. '().' → logprob: -15.50204849243164
    9. '(
' → logprob: -15.75204849243164
    10. '()\' → logprob: -16.37704849243164

Token 744: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018101456225849688
    2. ')' → logprob: -8.625181198120117
    3. ' ' → logprob: -13.500181198120117
    4. '1' → logprob: -18.250181198120117
    5. ' )' → logprob: -18.250181198120117
    6. ')
' → logprob: -18.625181198120117
    7. '"' → logprob: -19.250181198120117
    8. ''' → logprob: -20.125181198120117
    9. '()' → logprob: -20.625181198120117
    10. '   ' → logprob: -20.625181198120117

Token 745: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062131475657224655
    2. ')
' → logprob: -2.812131404876709
    3. 'if' → logprob: -9.687131881713867
    4. ')

' → logprob: -10.312131881713867
    5. '
' → logprob: -11.062131881713867
    6. '#' → logprob: -11.437131881713867
    7. 'print' → logprob: -11.562131881713867
    8. ')n' → logprob: -11.812131881713867
    9. ')#' → logprob: -12.312131881713867
    10. '<|end|>' → logprob: -12.687131881713867

Token 746: 'sz' (ID: 13849)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3387900590896606
    2. 'for' → logprob: -1.4637900590896606
    3. 'res' → logprob: -1.7137900590896606
    4. 'x' → logprob: -2.963789939880371
    5. 'def' → logprob: -2.963789939880371
    6. 'z' → logprob: -3.463789939880371
    7. 't' → logprob: -3.588789939880371
    8. 'm' → logprob: -3.838789939880371
    9. 'if' → logprob: -4.213789939880371
    10. 'answer' → logprob: -4.463789939880371

Token 747: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2083253562450409
    2. '=' → logprob: -1.7083253860473633
    3. 'z' → logprob: -5.333325386047363
    4. 's' → logprob: -8.083325386047363
    5. '   ' → logprob: -8.083325386047363
    6. ',' → logprob: -8.083325386047363
    7. 'ize' → logprob: -8.458325386047363
    8. 'x' → logprob: -9.083325386047363
    9. '=size' → logprob: -9.208325386047363
    10. ' ' → logprob: -9.333325386047363

Token 748: ' len' (ID: 4631)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5143876075744629
    2. 'n' → logprob: -2.014387607574463
    3. 'cnt' → logprob: -2.889387607574463
    4. '(' → logprob: -3.014387607574463
    5. '2' → logprob: -3.139387607574463
    6. 'a' → logprob: -3.889387607574463
    7. 'b' → logprob: -4.014387607574463
    8. 'MAX' → logprob: -4.139387607574463
    9. 'max' → logprob: -4.264387607574463
    10. '0' → logprob: -4.639387607574463

Token 749: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0227220319211483
    2. '(z' → logprob: -4.772722244262695
    3. '(s' → logprob: -4.897722244262695
    4. '(a' → logprob: -5.522722244262695
    5. '(r' → logprob: -6.522722244262695
    6. '(sys' → logprob: -7.522722244262695
    7. '(str' → logprob: -8.272722244262695
    8. '(b' → logprob: -9.397722244262695
    9. '(' → logprob: -10.272722244262695
    10. 'd' → logprob: -10.397722244262695

Token 750: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016737529076635838
    2. ')
' → logprob: -6.501673698425293
    3. ' )' → logprob: -9.626673698425293
    4. ')-' → logprob: -9.751673698425293
    5. '[' → logprob: -11.251673698425293
    6. 'd' → logprob: -12.126673698425293
    7. ')d' → logprob: -12.501673698425293
    8. '   ' → logprob: -12.626673698425293
    9. ' ' → logprob: -12.751673698425293
    10. ')#' → logprob: -12.876673698425293

Token 751: 'if' (ID: 366)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.34782490134239197
    2. 'def' → logprob: -2.597824811935425
    3. 'for' → logprob: -2.972824811935425
    4. 'if' → logprob: -3.097824811935425
    5. 'res' → logprob: -3.347824811935425
    6. 'ans' → logprob: -4.097825050354004
    7. 'f' → logprob: -4.847825050354004
    8. 'memo' → logprob: -5.222825050354004
    9. 'r' → logprob: -5.347825050354004
    10. 'm' → logprob: -5.472825050354004

Token 752: ' DBG' (ID: 100080)
  Prédit: ' sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sz' → logprob: -0.6429460644721985
    2. 'sz' → logprob: -1.0179460048675537
    3. ' DBG' → logprob: -3.3929460048675537
    4. ' cnt' → logprob: -3.7679460048675537
    5. 'cnt' → logprob: -4.392946243286133
    6. 'DBG' → logprob: -5.017946243286133
    7. ' not' → logprob: -5.267946243286133
    8. 'z' → logprob: -5.517946243286133
    9. ' z' → logprob: -5.517946243286133
    10. ' d' → logprob: -5.517946243286133

Token 753: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02310466207563877
    2. ':
' → logprob: -4.648104667663574
    3. '2' → logprob: -5.023104667663574
    4. '==' → logprob: -5.523104667663574
    5. ' and' → logprob: -6.398104667663574
    6. ' ==' → logprob: -8.023104667663574
    7. 'and' → logprob: -8.398104667663574
    8. ' :' → logprob: -9.148104667663574
    9. '>' → logprob: -9.398104667663574
    10. '   ' → logprob: -10.023104667663574

Token 754: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.033275056630373
    2. ' print' → logprob: -3.6582751274108887
    3. '   ' → logprob: -5.033275127410889
    4. 'for' → logprob: -8.40827465057373
    5. ' for' → logprob: -8.53327465057373
    6. 'pass' → logprob: -12.15827465057373
    7. '	print' → logprob: -13.28327465057373
    8. '```' → logprob: -13.40827465057373
    9. ' ' → logprob: -13.90827465057373
    10. 'import' → logprob: -14.03327465057373

Token 755: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.60414821645827e-06
    2. ' print' → logprob: -12.375004768371582
    3. 'for' → logprob: -15.000004768371582
    4. '   ' → logprob: -16.625003814697266
    5. '```' → logprob: -18.750003814697266
    6. 'pass' → logprob: -19.750003814697266
    7. '#print' → logprob: -20.125003814697266
    8. '...' → logprob: -20.250003814697266
    9. 'pr' → logprob: -20.750003814697266
    10. ' for' → logprob: -20.750003814697266

Token 756: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.04958343133330345
    2. '(d' → logprob: -4.049583435058594
    3. '(sz' → logprob: -4.049583435058594
    4. '('' → logprob: -4.924583435058594
    5. '()' → logprob: -6.174583435058594
    6. '(' → logprob: -6.424583435058594
    7. '(s' → logprob: -6.674583435058594
    8. '(z' → logprob: -7.549583435058594
    9. '("' → logprob: -8.424583435058594
    10. '(len' → logprob: -8.549583435058594

Token 757: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14223504066467285
    2. 'f' → logprob: -3.142235040664673
    3. ''s' → logprob: -3.767235040664673
    4. 'sz' → logprob: -4.142234802246094
    5. '"a' → logprob: -4.267234802246094
    6. '"d' → logprob: -4.642234802246094
    7. ''' → logprob: -5.017234802246094
    8. ''a' → logprob: -5.392234802246094
    9. 'a' → logprob: -5.642234802246094
    10. ''z' → logprob: -5.892234802246094

Token 758: 'n' (ID: 77)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.7964495420455933
    2. 'd' → logprob: -2.046449661254883
    3. 'z' → logprob: -2.046449661254883
    4. ''' → logprob: -2.421449661254883
    5. ''z' → logprob: -2.796449661254883
    6. ''s' → logprob: -3.296449661254883
    7. 'cnt' → logprob: -3.671449661254883
    8. 'f' → logprob: -3.796449661254883
    9. 'n' → logprob: -4.171449661254883
    10. 'a' → logprob: -4.546449661254883

Token 759: ' {' (ID: 354)
  Prédit: '={'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.9186526536941528
    2. ' {' → logprob: -1.0436526536941528
    3. ',' → logprob: -2.1686525344848633
    4. '=' → logprob: -3.0436525344848633
    5. '{' → logprob: -3.0436525344848633
    6. ' =' → logprob: -3.5436525344848633
    7. ' d' → logprob: -6.043652534484863
    8. ':' → logprob: -6.418652534484863
    9. ' z' → logprob: -7.043652534484863
    10. ' ={' → logprob: -7.043652534484863

Token 760: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011979619972407818
    2. 'sz' → logprob: -4.511979579925537
    3. ' n' → logprob: -8.011980056762695
    4. 'a' → logprob: -8.011980056762695
    5. 'd' → logprob: -9.136980056762695
    6. 'z' → logprob: -10.011980056762695
    7. 'cnt' → logprob: -10.761980056762695
    8. ' sz' → logprob: -10.886980056762695
    9. 'len' → logprob: -10.886980056762695
    10. 'sys' → logprob: -11.136980056762695

Token 761: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.041599273681640625
    2. ',' → logprob: -3.4165992736816406
    3. '},' → logprob: -5.166599273681641
    4. '}")' → logprob: -7.041599273681641
    5. ' }' → logprob: -7.541599273681641
    6. ' d' → logprob: -8.29159927368164
    7. ' ' → logprob: -9.04159927368164
    8. ' ,' → logprob: -9.41659927368164
    9. ',d' → logprob: -10.16659927368164
    10. '-' → logprob: -10.16659927368164

Token 762: ' a' (ID: 261)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.17286239564418793
    2. ',' → logprob: -2.4228622913360596
    3. ' {' → logprob: -3.2978622913360596
    4. ' a' → logprob: -4.672862529754639
    5. '")' → logprob: -5.172862529754639
    6. ' b' → logprob: -5.547862529754639
    7. ' sz' → logprob: -5.797862529754639
    8. '{' → logprob: -6.297862529754639
    9. 'd' → logprob: -6.547862529754639
    10. ' n' → logprob: -6.922862529754639

Token 763: ' {' (ID: 354)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6837361454963684
    2. ' {' → logprob: -0.9337361454963684
    3. '{' → logprob: -2.9337360858917236
    4. '}' → logprob: -3.8087360858917236
    5. ',b' → logprob: -4.308736324310303
    6. ',' → logprob: -4.683736324310303
    7. '={' → logprob: -6.433736324310303
    8. '=' → logprob: -6.808736324310303
    9. 'b' → logprob: -7.558736324310303
    10. ' a' → logprob: -7.808736324310303

Token 764: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.747814349073451e-05
    2. ' a' → logprob: -11.000017166137695
    3. 'n' → logprob: -15.250017166137695
    4. ' ' → logprob: -15.750017166137695
    5. '   ' → logprob: -16.000017166137695
    6. 'b' → logprob: -16.375017166137695
    7. 'repr' → logprob: -17.000017166137695
    8. '  ' → logprob: -17.500017166137695
    9. 'z' → logprob: -17.875017166137695
    10. 'sz' → logprob: -18.125017166137695

Token 765: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0008611999801360071
    2. ' b' → logprob: -7.625861167907715
    3. 'b' → logprob: -8.875861167907715
    4. ',' → logprob: -9.250861167907715
    5. ' }' → logprob: -9.250861167907715
    6. '},' → logprob: -11.000861167907715
    7. ',b' → logprob: -11.125861167907715
    8. '}")' → logprob: -12.875861167907715
    9. '=}' → logprob: -13.000861167907715
    10. ' ' → logprob: -14.000861167907715

Token 766: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03367739915847778
    2. 'b' → logprob: -3.408677339553833
    3. ',b' → logprob: -11.408677101135254
    4. ',' → logprob: -11.783677101135254
    5. '{' → logprob: -12.408677101135254
    6. '}' → logprob: -12.908677101135254
    7. ' ' → logprob: -13.783677101135254
    8. ' {' → logprob: -13.908677101135254
    9. ' d' → logprob: -14.033677101135254
    10. ')' → logprob: -14.158677101135254

Token 767: ' {' (ID: 354)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.04360581189393997
    2. '}")' → logprob: -3.1686058044433594
    3. '}")
' → logprob: -8.04360580444336
    4. '}{' → logprob: -9.91860580444336
    5. ' }' → logprob: -10.04360580444336
    6. '}\' → logprob: -10.54360580444336
    7. '}')' → logprob: -10.66860580444336
    8. '},' → logprob: -10.79360580444336
    9. '}")
' → logprob: -10.91860580444336
    10. ',' → logprob: -11.04360580444336

Token 768: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006943239714019
    2. 'a' → logprob: -8.000694274902344
    3. 'n' → logprob: -8.750694274902344
    4. 'z' → logprob: -9.375694274902344
    5. 'sz' → logprob: -9.625694274902344
    6. '}' → logprob: -10.375694274902344
    7. ' b' → logprob: -11.500694274902344
    8. 'bz' → logprob: -13.750694274902344
    9. 'd' → logprob: -13.875694274902344
    10. ' ' → logprob: -14.250694274902344

Token 769: '}' (ID: 92)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.3991573750972748
    2. '}' → logprob: -1.1491574048995972
    3. '}")
' → logprob: -4.649157524108887
    4. ' }' → logprob: -6.774157524108887
    5. ')' → logprob: -7.649157524108887
    6. '")' → logprob: -8.274157524108887
    7. ',' → logprob: -8.649157524108887
    8. '}")

' → logprob: -8.899157524108887
    9. '})' → logprob: -9.524157524108887
    10. '   ' → logprob: -9.899157524108887

Token 770: ' sz' (ID: 8515)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12828533351421356
    2. ' sz' → logprob: -3.1282854080200195
    3. ' ")' → logprob: -3.8782854080200195
    4. '")
' → logprob: -4.3782854080200195
    5. ')' → logprob: -4.6282854080200195
    6. ' d' → logprob: -5.1282854080200195
    7. ' z' → logprob: -5.5032854080200195
    8. ' n' → logprob: -5.7532854080200195
    9. ' ")
' → logprob: -5.8782854080200195
    10. ',' → logprob: -6.3782854080200195

Token 771: ' {' (ID: 354)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0020204742904752493
    2. '{' → logprob: -7.252020359039307
    3. '}")' → logprob: -7.752020359039307
    4. '}{' → logprob: -8.252020835876465
    5. ' {' → logprob: -8.502020835876465
    6. '=' → logprob: -9.002020835876465
    7. '=}' → logprob: -9.252020835876465
    8. 'd' → logprob: -9.502020835876465
    9. '(sz' → logprob: -10.377020835876465
    10. ' sz' → logprob: -10.627020835876465

Token 772: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.0002820736262947321
    2. ' sz' → logprob: -8.750282287597656
    3. 'len' → logprob: -9.750282287597656
    4. '}' → logprob: -10.500282287597656
    5. 'd' → logprob: -10.875282287597656
    6. 'z' → logprob: -11.750282287597656
    7. '(sz' → logprob: -12.750282287597656
    8. '   ' → logprob: -13.125282287597656
    9. 's' → logprob: -13.125282287597656
    10. ' ' → logprob: -14.125282287597656

Token 773: '}' (ID: 92)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.11768566817045212
    2. ')")' → logprob: -2.492685556411743
    3. ')' → logprob: -4.117685794830322
    4. '")' → logprob: -5.117685794830322
    5. '}' → logprob: -6.367685794830322
    6. ',' → logprob: -6.492685794830322
    7. '}")
' → logprob: -6.742685794830322
    8. ' )' → logprob: -7.242685794830322
    9. ')")
' → logprob: -7.742685794830322
    10. '   ' → logprob: -8.992685317993164

Token 774: ' d' (ID: 272)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3048306107521057
    2. ')' → logprob: -1.429830551147461
    3. '")
' → logprob: -4.929830551147461
    4. ')
' → logprob: -5.679830551147461
    5. 'if' → logprob: -5.679830551147461
    6. 'print' → logprob: -6.304830551147461
    7. ',' → logprob: -6.554830551147461
    8. '
' → logprob: -6.679830551147461
    9. 'for' → logprob: -6.804830551147461
    10. ')")' → logprob: -7.054830551147461

Token 775: ':")
' (ID: 80684)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.11409129947423935
    2. '}")' → logprob: -2.239091396331787
    3. '=' → logprob: -8.239090919494629
    4. '}")
' → logprob: -8.364090919494629
    5. '{' → logprob: -8.864090919494629
    6. ' d' → logprob: -9.114090919494629
    7. ' }' → logprob: -9.114090919494629
    8. '=}' → logprob: -9.489090919494629
    9. '})' → logprob: -10.239090919494629
    10. ' {' → logprob: -10.364090919494629

Token 776: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6260973811149597
    2. ' print' → logprob: -0.8760973811149597
    3. 'print' → logprob: -3.5010974407196045
    4. ' for' → logprob: -4.001097202301025
    5. 'for' → logprob: -8.251097679138184
    6. '<|end|>' → logprob: -10.376097679138184
    7. '	print' → logprob: -10.751097679138184
    8. ',' → logprob: -10.876097679138184
    9. '    ' → logprob: -10.876097679138184
    10. '[' → logprob: -11.501097679138184

Token 777: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5644758343696594
    2. 'for' → logprob: -1.0644757747650146
    3. '   ' → logprob: -3.0644757747650146
    4. ' for' → logprob: -3.3144757747650146
    5. ' print' → logprob: -5.689476013183594
    6. '	for' → logprob: -12.314476013183594
    7. '	print' → logprob: -12.439476013183594
    8. '    ' → logprob: -13.064476013183594
    9. '  ' → logprob: -13.314476013183594
    10. '[' → logprob: -13.314476013183594

Token 778: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.04381097853183746
    2. '('' → logprob: -3.793811082839966
    3. 'd' → logprob: -4.043810844421387
    4. ' d' → logprob: -6.168810844421387
    5. '(f' → logprob: -8.043810844421387
    6. '(*' → logprob: -8.668810844421387
    7. '('\' → logprob: -8.918810844421387
    8. '(' → logprob: -10.668810844421387
    9. ''' → logprob: -10.668810844421387
    10. '("' → logprob: -10.793810844421387

Token 779: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003534582501742989
    2. ')
' → logprob: -8.500353813171387
    3. ' )' → logprob: -9.375353813171387
    4. '   ' → logprob: -10.500353813171387
    5. ',' → logprob: -10.625353813171387
    6. '))' → logprob: -13.000353813171387
    7. ')#' → logprob: -13.500353813171387
    8. '")' → logprob: -13.625353813171387
    9. ')`' → logprob: -13.625353813171387
    10. ')")' → logprob: -13.750353813171387

Token 780: 'gen' (ID: 2468)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9769324660301208
    2. ')' → logprob: -1.8519325256347656
    3. '[' → logprob: -1.9769325256347656
    4. 'n' → logprob: -2.3519325256347656
    5. 'for' → logprob: -2.9769325256347656
    6. '#' → logprob: -3.3519325256347656
    7. 'z' → logprob: -3.8519325256347656
    8. 'i' → logprob: -3.9769325256347656
    9. 't' → logprob: -4.226932525634766
    10. 'x' → logprob: -4.351932525634766

Token 781: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.059356268495321274
    2. 'er' → logprob: -3.309356212615967
    3. '=' → logprob: -4.309356212615967
    4. 'def' → logprob: -5.559356212615967
    5. '_' → logprob: -7.184356212615967
    6. 't' → logprob: -7.809356212615967
    7. 'r' → logprob: -7.934356212615967
    8. 'v' → logprob: -8.184356689453125
    9. 'u' → logprob: -8.309356689453125
    10. 's' → logprob: -8.934356689453125

Token 782: ' lambda' (ID: 27871)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.565110445022583
    2. '(product' → logprob: -1.440110445022583
    3. '(range' → logprob: -3.065110445022583
    4. '(st' → logprob: -3.065110445022583
    5. '((' → logprob: -4.065110206604004
    6. '(chain' → logprob: -4.065110206604004
    7. 'range' → logprob: -4.315110206604004
    8. 'st' → logprob: -4.315110206604004
    9. '(s' → logprob: -4.565110206604004
    10. 'chain' → logprob: -4.690110206604004

Token 783: ' sz' (ID: 8515)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43609732389450073
    2. ' i' → logprob: -2.5610973834991455
    3. 'x' → logprob: -2.6860973834991455
    4. '(i' → logprob: -3.1860973834991455
    5. 'n' → logprob: -3.3110973834991455
    6. 'range' → logprob: -3.5610973834991455
    7. 'm' → logprob: -3.9360973834991455
    8. 'lambda' → logprob: -4.436097145080566
    9. 'k' → logprob: -4.936097145080566
    10. ':' → logprob: -4.936097145080566

Token 784: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0052671958692371845
    2. ',' → logprob: -5.630267143249512
    3. '=' → logprob: -7.380267143249512
    4. ' :' → logprob: -7.505267143249512
    5. 'd' → logprob: -9.630267143249512
    6. 'n' → logprob: -9.755267143249512
    7. 'f' → logprob: -10.005267143249512
    8. 'sz' → logprob: -10.130267143249512
    9. ':[' → logprob: -10.130267143249512
    10. 'x' → logprob: -10.630267143249512

Token 785: ' n' (ID: 297)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.30495575070381165
    2. 'lambda' → logprob: -2.8049557209014893
    3. ' range' → logprob: -3.1799557209014893
    4. '[' → logprob: -3.4299557209014893
    5. 'product' → logprob: -3.4299557209014893
    6. '(' → logprob: -4.429955959320068
    7. ' product' → logprob: -4.679955959320068
    8. '(lambda' → logprob: -4.929955959320068
    9. 'chain' → logprob: -5.179955959320068
    10. ' lambda' → logprob: -5.179955959320068

Token 786: 'sz' (ID: 13849)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013708440586924553
    2. ',' → logprob: -5.013708591461182
    3. '=' → logprob: -5.263708591461182
    4. ' :' → logprob: -6.513708591461182
    5. 'd' → logprob: -10.138708114624023
    6. '=n' → logprob: -10.138708114624023
    7. '=i' → logprob: -10.388708114624023
    8. ':[' → logprob: -10.763708114624023
    9. '=[' → logprob: -10.763708114624023
    10. ':(' → logprob: -10.888708114624023

Token 787: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012732958421111107
    2. ',' → logprob: -4.887732982635498
    3. '=' → logprob: -5.762732982635498
    4. ' :' → logprob: -6.512732982635498
    5. ':(' → logprob: -8.26273250579834
    6. ':[' → logprob: -9.76273250579834
    7. 'd' → logprob: -10.76273250579834
    8. ',i' → logprob: -11.13773250579834
    9. '=[' → logprob: -11.26273250579834
    10. '=(' → logprob: -11.26273250579834

Token 788: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.1066579818725586
    2. 'list' → logprob: -2.4816579818725586
    3. 'range' → logprob: -2.6066579818725586
    4. 'chain' → logprob: -2.7316579818725586
    5. '[(' → logprob: -2.7316579818725586
    6. '(chain' → logprob: -2.7316579818725586
    7. '(product' → logprob: -2.8566579818725586
    8. '[' → logprob: -2.9816579818725586
    9. '(range' → logprob: -3.1066579818725586
    10. '((' → logprob: -3.9816579818725586

Token 789: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0016733952797949314
    2. '([' → logprob: -6.501673221588135
    3. '((' → logprob: -9.376673698425293
    4. '(d' → logprob: -10.376673698425293
    5. '(list' → logprob: -10.751673698425293
    6. '(*' → logprob: -11.376673698425293
    7. '(' → logprob: -12.001673698425293
    8. 'range' → logprob: -12.751673698425293
    9. '(*(' → logprob: -13.126673698425293
    10. '(([' → logprob: -13.376673698425293

Token 790: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5841057896614075
    2. '(sz' → logprob: -0.8341057896614075
    3. '(n' → logprob: -5.209105968475342
    4. '(s' → logprob: -6.834105968475342
    5. 'sz' → logprob: -7.709105968475342
    6. '(ns' → logprob: -7.834105968475342
    7. '4' → logprob: -7.959105968475342
    8. '(p' → logprob: -9.334105491638184
    9. '((' → logprob: -9.459105491638184
    10. '2' → logprob: -9.459105491638184

Token 791: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6635812520980835
    2. 'sz' → logprob: -1.0385812520980835
    3. '2' → logprob: -2.788581371307373
    4. 'ns' → logprob: -3.663581371307373
    5. '(sz' → logprob: -4.288581371307373
    6. '(' → logprob: -4.288581371307373
    7. 'n' → logprob: -5.288581371307373
    8. '3' → logprob: -5.413581371307373
    9. '(n' → logprob: -6.038581371307373
    10. '1' → logprob: -6.413581371307373

Token 792: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12247029691934586
    2. ',n' → logprob: -3.3724703788757324
    3. 'sz' → logprob: -3.3724703788757324
    4. '(sz' → logprob: -4.122470378875732
    5. '4' → logprob: -4.622470378875732
    6. '3' → logprob: -5.122470378875732
    7. '2' → logprob: -5.497470378875732
    8. ' ,' → logprob: -6.372470378875732
    9. '0' → logprob: -6.872470378875732
    10. '(n' → logprob: -6.997470378875732

Token 793: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.13524478673934937
    2. 'ns' → logprob: -3.260244846343994
    3. '(sz' → logprob: -3.260244846343994
    4. '2' → logprob: -3.885244846343994
    5. '(' → logprob: -4.885244846343994
    6. 'n' → logprob: -5.260244846343994
    7. '(n' → logprob: -5.260244846343994
    8. 'max' → logprob: -5.635244846343994
    9. '4' → logprob: -5.760244846343994
    10. 'min' → logprob: -7.010244846343994

Token 794: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.008474985137581825
    2. ',' → logprob: -5.133474826812744
    3. 'sz' → logprob: -6.258474826812744
    4. ' ),' → logprob: -8.508475303649902
    5. '(n' → logprob: -9.383475303649902
    6. '()),' → logprob: -10.133475303649902
    7. ' ,' → logprob: -10.133475303649902
    8. '   ' → logprob: -10.383475303649902
    9. '(sz' → logprob: -10.383475303649902
    10. 'n' → logprob: -10.758475303649902

Token 795: ' range' (ID: 3352)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.23667120933532715
    2. 'range' → logprob: -1.6116712093353271
    3. ' repeat' → logprob: -4.736671447753906
    4. ' range' → logprob: -6.111671447753906
    5. '   ' → logprob: -9.611671447753906
    6. ' ' → logprob: -9.736671447753906
    7. '  ' → logprob: -11.361671447753906
    8. '[' → logprob: -11.361671447753906
    9. 'reverse' → logprob: -11.361671447753906
    10. '(' → logprob: -11.736671447753906

Token 796: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.052108000963926315
    2. '(n' → logprob: -3.3021080493927
    3. '(sz' → logprob: -4.427107810974121
    4. '(ns' → logprob: -6.302107810974121
    5. '((' → logprob: -9.177107810974121
    6. '(max' → logprob: -10.177107810974121
    7. 'sz' → logprob: -11.677107810974121
    8. '(ms' → logprob: -12.177107810974121
    9. '(-' → logprob: -12.677107810974121
    10. ')' → logprob: -12.677107810974121

Token 797: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22153516113758087
    2. '(' → logprob: -2.2215352058410645
    3. 'ns' → logprob: -2.9715352058410645
    4. 'n' → logprob: -4.2215352058410645
    5. 'sz' → logprob: -4.2215352058410645
    6. '   ' → logprob: -5.7215352058410645
    7. ' ' → logprob: -6.7215352058410645
    8. ' n' → logprob: -6.8465352058410645
    9. '(n' → logprob: -7.0965352058410645
    10. '2' → logprob: -7.8465352058410645

Token 798: ' <<' (ID: 2256)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.3597210645675659
    2. 'ns' → logprob: -1.234721064567566
    3. ' sz' → logprob: -5.7347211837768555
    4. ' ' → logprob: -6.1097211837768555
    5. '   ' → logprob: -6.7347211837768555
    6. 'n' → logprob: -6.9847211837768555
    7. ' ns' → logprob: -7.6097211837768555
    8. ' n' → logprob: -7.7347211837768555
    9. '{' → logprob: -7.8597211837768555
    10. '1' → logprob: -7.9847211837768555

Token 799: ' n' (ID: 297)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.014750284142792225
    2. ' n' → logprob: -4.7647504806518555
    3. 'sz' → logprob: -5.8897504806518555
    4. 'n' → logprob: -6.0147504806518555
    5. '(n' → logprob: -7.7647504806518555
    6. '   ' → logprob: -9.389750480651855
    7. '(' → logprob: -9.389750480651855
    8. ' ns' → logprob: -9.639750480651855
    9. '(sz' → logprob: -10.014750480651855
    10. ' ' → logprob: -10.389750480651855

Token 800: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.05753946676850319
    2. 'ns' → logprob: -2.932539463043213
    3. ' sz' → logprob: -6.557539463043213
    4. '(sz' → logprob: -7.182539463043213
    5. '   ' → logprob: -8.682539939880371
    6. 'n' → logprob: -9.432539939880371
    7. 'nz' → logprob: -10.182539939880371
    8. '       ' → logprob: -10.807539939880371
    9. '2' → logprob: -10.932539939880371
    10. ')' → logprob: -11.057539939880371

Token 801: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3556440472602844
    2. '))' → logprob: -1.2306439876556396
    3. '),' → logprob: -5.105644226074219
    4. ',' → logprob: -7.605644226074219
    5. ')))' → logprob: -8.730644226074219
    6. '())' → logprob: -9.105644226074219
    7. ' )' → logprob: -9.480644226074219
    8. '})' → logprob: -9.980644226074219
    9. '[' → logprob: -10.855644226074219
    10. '])' → logprob: -10.855644226074219

Token 802: 'expression' (ID: 61248)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.254336953163147
    2. ')' → logprob: -1.879336953163147
    3. '<|end|>' → logprob: -3.8793368339538574
    4. '(' → logprob: -4.004336833953857
    5. 'next' → logprob: -5.004336833953857
    6. ' for' → logprob: -5.004336833953857
    7. 'range' → logprob: -5.754336833953857
    8. 'result' → logprob: -6.629336833953857
    9. 'sz' → logprob: -6.629336833953857
    10. 'idx' → logprob: -6.754336833953857

Token 803: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5770511031150818
    2. ' =' → logprob: -1.3270511627197266
    3. '=' → logprob: -2.0770511627197266
    4. '[' → logprob: -4.202051162719727
    5. ',' → logprob: -4.577051162719727
    6. ')' → logprob: -5.077051162719727
    7. ' (' → logprob: -5.202051162719727
    8. '_' → logprob: -5.827051162719727
    9. ' ' → logprob: -6.702051162719727
    10. '(
' → logprob: -6.827051162719727

Token 804: ' lambda' (ID: 27871)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7553060054779053
    2. 'lambda' → logprob: -1.0053060054779053
    3. ' lambda' → logprob: -2.6303060054779053
    4. 'reduce' → logprob: -3.8803060054779053
    5. 'add' → logprob: -4.255306243896484
    6. 'sum' → logprob: -4.380306243896484
    7. 'chain' → logprob: -5.130306243896484
    8. '(' → logprob: -5.130306243896484
    9. '(s' → logprob: -5.630306243896484
    10. 'all' → logprob: -5.755306243896484

Token 805: ' i' (ID: 575)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3486688733100891
    2. ' lambda' → logprob: -2.2236688137054443
    3. 'x' → logprob: -2.8486688137054443
    4. 'a' → logprob: -3.3486688137054443
    5. 'sz' → logprob: -3.5986688137054443
    6. 'n' → logprob: -3.7236688137054443
    7. ' x' → logprob: -4.723669052124023
    8. '(lambda' → logprob: -4.973669052124023
    9. ' n' → logprob: -5.223669052124023
    10. 'z' → logprob: -5.473669052124023

Token 806: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48298007249832153
    2. ',' → logprob: -0.9829800724983215
    3. ' :' → logprob: -5.107980251312256
    4. 'x' → logprob: -7.357980251312256
    5. ' ,' → logprob: -7.857980251312256
    6. ',i' → logprob: -8.107979774475098
    7. ' i' → logprob: -8.232979774475098
    8. ' x' → logprob: -8.982979774475098
    9. 'n' → logprob: -9.107979774475098
    10. '=' → logprob: -9.357979774475098

Token 807: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13143262267112732
    2. ' j' → logprob: -2.75643253326416
    3. 'sz' → logprob: -4.63143253326416
    4. 'x' → logprob: -4.88143253326416
    5. 'lambda' → logprob: -5.00643253326416
    6. 's' → logprob: -5.13143253326416
    7. 'n' → logprob: -5.25643253326416
    8. 'i' → logprob: -5.63143253326416
    9. 'a' → logprob: -5.88143253326416
    10. 'r' → logprob: -6.00643253326416

Token 808: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003236536169424653
    2. ' :' → logprob: -6.378236770629883
    3. ',' → logprob: -6.878236770629883
    4. '=' → logprob: -8.378236770629883
    5. ':(' → logprob: -9.878236770629883
    6. 'p' → logprob: -10.003236770629883
    7. '[' → logprob: -10.878236770629883
    8. '[i' → logprob: -10.878236770629883
    9. ':p' → logprob: -11.003236770629883
    10. ',i' → logprob: -11.128236770629883

Token 809: ' ((' (ID: 3536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9931244850158691
    2. 'r' → logprob: -1.7431244850158691
    3. '(s' → logprob: -2.368124485015869
    4. 'p' → logprob: -2.743124485015869
    5. '(i' → logprob: -2.743124485015869
    6. '(p' → logprob: -3.118124485015869
    7. '(r' → logprob: -3.618124485015869
    8. 'add' → logprob: -4.118124485015869
    9. 'xor' → logprob: -4.118124485015869
    10. '(' → logprob: -4.368124485015869

Token 810: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9654802680015564
    2. 'r' → logprob: -1.0904803276062012
    3. 's' → logprob: -1.9654803276062012
    4. '(i' → logprob: -3.340480327606201
    5. 'j' → logprob: -3.465480327606201
    6. '1' → logprob: -4.590480327606201
    7. 'n' → logprob: -4.715480327606201
    8. '(' → logprob: -4.715480327606201
    9. 'p' → logprob: -4.840480327606201
    10. 'a' → logprob: -4.840480327606201

Token 811: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9557712078094482
    2. '[len' → logprob: -1.0807712078094482
    3. '[j' → logprob: -2.2057712078094482
    4. '[i' → logprob: -2.5807712078094482
    5. '[n' → logprob: -2.7057712078094482
    6. '[m' → logprob: -5.080771446228027
    7. 'sz' → logprob: -5.455771446228027
    8. 'n' → logprob: -6.205771446228027
    9. '[a' → logprob: -6.330771446228027
    10. '[max' → logprob: -6.455771446228027

Token 812: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.14282169938087463
    2. 'len' → logprob: -3.142821788787842
    3. 'n' → logprob: -3.392821788787842
    4. 'm' → logprob: -3.517821788787842
    5. 'j' → logprob: -4.017821788787842
    6. 'max' → logprob: -5.517821788787842
    7. 'MAX' → logprob: -6.267821788787842
    8. 'a' → logprob: -7.267821788787842
    9. 'i' → logprob: -7.642821788787842
    10. 'b' → logprob: -8.142821311950684

Token 813: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10081126540899277
    2. '[m' → logprob: -2.600811243057251
    3. '[i' → logprob: -4.35081148147583
    4. 'm' → logprob: -5.35081148147583
    5. '[n' → logprob: -6.85081148147583
    6. '[j' → logprob: -7.22581148147583
    7. ']' → logprob: -7.72581148147583
    8. '+m' → logprob: -7.97581148147583
    9. '   ' → logprob: -8.100811004638672
    10. '[' → logprob: -8.100811004638672

Token 814: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011717714369297028
    2. 'j' → logprob: -7.126171588897705
    3. ' i' → logprob: -8.751172065734863
    4. '   ' → logprob: -10.126172065734863
    5. '[i' → logprob: -10.251172065734863
    6. '(i' → logprob: -10.501172065734863
    7. '((' → logprob: -10.751172065734863
    8. ' ' → logprob: -11.501172065734863
    9. '(' → logprob: -11.626172065734863
    10. 'z' → logprob: -11.751172065734863

Token 815: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017121860291808844
    2. ']<<' → logprob: -7.876712322235107
    3. ']^' → logprob: -8.00171184539795
    4. ']&' → logprob: -8.25171184539795
    5. '[j' → logprob: -8.62671184539795
    6. '&' → logprob: -8.87671184539795
    7. ']+' → logprob: -9.12671184539795
    8. '])' → logprob: -9.50171184539795
    9. 'j' → logprob: -10.50171184539795
    10. '^' → logprob: -10.50171184539795

Token 816: ' <<' (ID: 2256)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3318875730037689
    2. '^' → logprob: -2.2068874835968018
    3. '[j' → logprob: -2.4568874835968018
    4. ' ^' → logprob: -3.0818874835968018
    5. '>>' → logprob: -4.331887722015381
    6. '+' → logprob: -4.956887722015381
    7. ']^' → logprob: -5.206887722015381
    8. '[' → logprob: -5.581887722015381
    9. '][' → logprob: -5.706887722015381
    10. ']+' → logprob: -5.831887722015381

Token 817: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47478973865509033
    2. '(n' → logprob: -2.099789619445801
    3. '(sz' → logprob: -2.474789619445801
    4. '(j' → logprob: -2.849789619445801
    5. '((' → logprob: -3.599789619445801
    6. '(MAX' → logprob: -3.724789619445801
    7. '2' → logprob: -4.474789619445801
    8. 'sz' → logprob: -4.599789619445801
    9. 'n' → logprob: -5.099789619445801
    10. 'j' → logprob: -5.099789619445801

Token 818: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2429808378219604
    2. '(sz' → logprob: -2.11798095703125
    3. '(n' → logprob: -2.24298095703125
    4. '(j' → logprob: -2.49298095703125
    5. '2' → logprob: -2.49298095703125
    6. '(m' → logprob: -2.74298095703125
    7. 'm' → logprob: -2.99298095703125
    8. 'sz' → logprob: -2.99298095703125
    9. 'n' → logprob: -3.24298095703125
    10. 'MAX' → logprob: -3.61798095703125

Token 819: ' -' (ID: 533)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.3607457876205444
    2. '(m' → logprob: -1.8607457876205444
    3. '(j' → logprob: -1.9857457876205444
    4. 'sz' → logprob: -2.235745906829834
    5. '(sz' → logprob: -2.360745906829834
    6. '1' → logprob: -2.985745906829834
    7. '(n' → logprob: -2.985745906829834
    8. '(' → logprob: -3.110745906829834
    9. 'j' → logprob: -3.735745906829834
    10. '2' → logprob: -4.110745906829834

Token 820: ' sz' (ID: 8515)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8679473400115967
    2. 'sz' → logprob: -1.8679473400115967
    3. '1' → logprob: -1.9929473400115967
    4. 'j' → logprob: -2.8679473400115967
    5. '(' → logprob: -2.8679473400115967
    6. '2' → logprob: -2.9929473400115967
    7. '(m' → logprob: -2.9929473400115967
    8. '(j' → logprob: -3.7429473400115967
    9. '(sz' → logprob: -3.7429473400115967
    10. 'n' → logprob: -4.492947578430176

Token 821: ')),' (ID: 12098)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21876275539398193
    2. '))' → logprob: -1.843762755393982
    3. '-' → logprob: -3.4687628746032715
    4. '])' → logprob: -6.4687628746032715
    5. '-j' → logprob: -6.7187628746032715
    6. ')]' → logprob: -6.8437628746032715
    7. ' )' → logprob: -7.0937628746032715
    8. ' -' → logprob: -7.2187628746032715
    9. '-s' → logprob: -7.5937628746032715
    10. ')))' → logprob: -7.9687628746032715

Token 822: ' r' (ID: 428)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3696517944335938
    2. '(s' → logprob: -1.3696517944335938
    3. 'r' → logprob: -1.4946517944335938
    4. ' (' → logprob: -2.6196517944335938
    5. ' s' → logprob: -2.7446517944335938
    6. ' r' → logprob: -2.8696517944335938
    7. '(r' → logprob: -2.8696517944335938
    8. '(j' → logprob: -5.244651794433594
    9. 'j' → logprob: -6.244651794433594
    10. ' j' → logprob: -6.619651794433594

Token 823: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5050548911094666
    2. '[j' → logprob: -1.3800549507141113
    3. '[n' → logprob: -2.1300549507141113
    4. 'ns' → logprob: -4.505054950714111
    5. 'n' → logprob: -5.005054950714111
    6. 'j' → logprob: -5.880054950714111
    7. '[js' → logprob: -6.005054950714111
    8. 'sz' → logprob: -7.005054950714111
    9. 'nz' → logprob: -7.880054950714111
    10. '   ' → logprob: -8.130054473876953

Token 824: ' -' (ID: 533)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.8958617448806763
    2. '[j' → logprob: -1.0208617448806763
    3. '[n' → logprob: -1.7708617448806763
    4. '[' → logprob: -2.8958616256713867
    5. ']' → logprob: -6.020861625671387
    6. '[m' → logprob: -7.145861625671387
    7. '[s' → logprob: -7.645861625671387
    8. '-' → logprob: -7.770861625671387
    9. '].' → logprob: -7.895861625671387
    10. '[i' → logprob: -8.520861625671387

Token 825: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -2.15310683415737e-05
    2. ' sz' → logprob: -11.625021934509277
    3. 'n' → logprob: -11.750021934509277
    4. '(sz' → logprob: -12.875021934509277
    5. 'm' → logprob: -13.250021934509277
    6. 'nz' → logprob: -16.50002098083496
    7. '   ' → logprob: -16.87502098083496
    8. 'mz' → logprob: -16.87502098083496
    9. 'j' → logprob: -17.00002098083496
    10. 'ns' → logprob: -17.12502098083496

Token 826: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008307131356559694
    2. '[j' → logprob: -7.75083065032959
    3. ']' → logprob: -8.25083065032959
    4. ' ][' → logprob: -9.50083065032959
    5. '[' → logprob: -10.50083065032959
    6. '])' → logprob: -11.75083065032959
    7. '])[' → logprob: -12.25083065032959
    8. ')[' → logprob: -12.37583065032959
    9. '   ' → logprob: -12.62583065032959
    10. ']][' → logprob: -13.00083065032959

Token 827: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00031413204851560295
    2. ' j' → logprob: -8.500313758850098
    3. '[j' → logprob: -9.500313758850098
    4. '   ' → logprob: -11.875313758850098
    5. ']' → logprob: -12.125313758850098
    6. '  ' → logprob: -12.500313758850098
    7. '][' → logprob: -12.875313758850098
    8. '           ' → logprob: -13.000313758850098
    9. '(j' → logprob: -13.000313758850098
    10. '[' → logprob: -13.125313758850098

Token 828: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.11407790333032608
    2. ']' → logprob: -2.8640778064727783
    3. ']))' → logprob: -3.1140778064727783
    4. '[i' → logprob: -6.239078044891357
    5. '[' → logprob: -6.864078044891357
    6. '[j' → logprob: -7.114078044891357
    7. ')])' → logprob: -7.864078044891357
    8. '])]' → logprob: -7.989078044891357
    9. '])
' → logprob: -8.1140775680542
    10. '])))' → logprob: -8.3640775680542

Token 829: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11446984857320786
    2. '))' → logprob: -2.4894697666168213
    3. ')))' → logprob: -3.9894697666168213
    4. ' )' → logprob: -6.3644700050354
    5. '[i' → logprob: -6.8644700050354
    6. '[' → logprob: -6.8644700050354
    7. '])' → logprob: -7.4894700050354
    8. ' ^' → logprob: -7.9894700050354
    9. '[j' → logprob: -8.114469528198242
    10. ')
' → logprob: -8.364469528198242

Token 830: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13399915397167206
    2. 'j' → logprob: -3.2589991092681885
    3. '(n' → logprob: -3.3839991092681885
    4. 'i' → logprob: -4.008999347686768
    5. 'sz' → logprob: -4.008999347686768
    6. '(sz' → logprob: -5.758999347686768
    7. '(i' → logprob: -5.883999347686768
    8. ' n' → logprob: -6.383999347686768
    9. '(j' → logprob: -6.883999347686768
    10. 'not' → logprob: -6.883999347686768

Token 831: ' %' (ID: 1851)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4402504563331604
    2. '!=' → logprob: -1.4402503967285156
    3. ' else' → logprob: -2.3152503967285156
    4. '==' → logprob: -5.065250396728516
    5. ' !=' → logprob: -5.315250396728516
    6. '>' → logprob: -6.190250396728516
    7. '>=' → logprob: -6.190250396728516
    8. '<' → logprob: -6.315250396728516
    9. 'in' → logprob: -7.190250396728516
    10. ' in' → logprob: -7.190250396728516

Token 832: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1304706484079361
    2. '4' → logprob: -2.1304707527160645
    3. '(' → logprob: -6.0054707527160645
    4. '1' → logprob: -8.130470275878906
    5. ' ' → logprob: -8.255470275878906
    6. '8' → logprob: -9.380470275878906
    7. 'r' → logprob: -9.505470275878906
    8. '16' → logprob: -9.630470275878906
    9. '0' → logprob: -10.255470275878906
    10. '3' → logprob: -10.380470275878906

Token 833: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010426062159240246
    2. '4' → logprob: -4.760426044464111
    3. '1' → logprob: -7.385426044464111
    4. '(' → logprob: -7.885426044464111
    5. '16' → logprob: -9.01042652130127
    6. 's' → logprob: -9.13542652130127
    7. '8' → logprob: -9.38542652130127
    8. 'sz' → logprob: -9.51042652130127
    9. '3' → logprob: -9.63542652130127
    10. 'r' → logprob: -9.76042652130127

Token 834: ' ==' (ID: 951)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1817135065793991
    2. ' else' → logprob: -2.431713581085205
    3. '==' → logprob: -2.556713581085205
    4. ' ==' → logprob: -7.806713581085205
    5. '0' → logprob: -9.056713104248047
    6. '!=' → logprob: -9.181713104248047
    7. ' ' → logprob: -10.056713104248047
    8. '   ' → logprob: -11.556713104248047
    9. 'in' → logprob: -12.556713104248047
    10. ' !=' → logprob: -12.806713104248047

Token 835: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005342736374586821
    2. '1' → logprob: -5.380342960357666
    3. ' ' → logprob: -7.380342960357666
    4. 'else' → logprob: -9.880342483520508
    5. '2' → logprob: -10.880342483520508
    6. '   ' → logprob: -12.005342483520508
    7. 'r' → logprob: -12.505342483520508
    8. '==' → logprob: -12.630342483520508
    9. 'False' → logprob: -12.880342483520508
    10. 'not' → logprob: -13.317842483520508

Token 836: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3354574143886566
    2. '0' → logprob: -1.335457444190979
    3. '1' → logprob: -3.8354573249816895
    4. 'else' → logprob: -8.835457801818848
    5. ' ' → logprob: -9.210457801818848
    6. '==' → logprob: -9.710457801818848
    7. '=' → logprob: -10.210457801818848
    8. '```' → logprob: -12.835457801818848
    9. 'None' → logprob: -12.960457801818848
    10. '4' → logprob: -12.960457801818848

Token 837: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5260080695152283
    2. ' else' → logprob: -0.9010080695152283
    3. ')' → logprob: -6.026008129119873
    4. ' ' → logprob: -9.276007652282715
    5. '<<' → logprob: -9.526007652282715
    6. ',' → logprob: -9.651007652282715
    7. '>>' → logprob: -9.901007652282715
    8. '),' → logprob: -10.651007652282715
    9. '0' → logprob: -10.776007652282715
    10. '```' → logprob: -11.026007652282715

Token 838: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14187534153461456
    2. 's' → logprob: -3.1418752670288086
    3. '0' → logprob: -4.016875267028809
    4. '~' → logprob: -4.141875267028809
    5. 'add' → logprob: -4.266875267028809
    6. ' r' → logprob: -4.641875267028809
    7. '(r' → logprob: -4.641875267028809
    8. '(s' → logprob: -5.141875267028809
    9. '(' → logprob: -5.641875267028809
    10. 'n' → logprob: -6.391875267028809

Token 839: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.739826181321405e-05
    2. 'n' → logprob: -10.00004768371582
    3. '[' → logprob: -14.12504768371582
    4. '[(' → logprob: -15.00004768371582
    5. ' [' → logprob: -15.37504768371582
    6. '[
' → logprob: -15.62504768371582
    7. '	n' → logprob: -16.12504768371582
    8. '(n' → logprob: -16.25004768371582
    9. '
' → logprob: -16.50004768371582
    10. '{' → logprob: -16.75004768371582

Token 840: ' -' (ID: 533)
  Prédit: '-s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.41474205255508423
    2. '-' → logprob: -1.1647419929504395
    3. ' -' → logprob: -3.6647419929504395
    4. '[' → logprob: -7.5397419929504395
    5. '_sz' → logprob: -7.7897419929504395
    6. 'sz' → logprob: -8.539742469787598
    7. ' ' → logprob: -9.039742469787598
    8. '-n' → logprob: -9.414742469787598
    9. '<|end|>' → logprob: -9.414742469787598
    10. '   ' → logprob: -9.789742469787598

Token 841: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -2.5776860184123507e-06
    2. ' sz' → logprob: -14.25000286102295
    3. '-' → logprob: -14.37500286102295
    4. '(sz' → logprob: -14.62500286102295
    5. '_sz' → logprob: -15.12500286102295
    6. 'n' → logprob: -15.37500286102295
    7. '-s' → logprob: -15.87500286102295
    8. '   ' → logprob: -16.875001907348633
    9. ' ' → logprob: -17.125001907348633
    10. 's' → logprob: -17.625001907348633

Token 842: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.022706646472215652
    2. '[j' → logprob: -3.8977067470550537
    3. '[' → logprob: -6.397706508636475
    4. ']' → logprob: -8.147706985473633
    5. 'j' → logprob: -10.147706985473633
    6. ')[' → logprob: -10.272706985473633
    7. '1' → logprob: -10.522706985473633
    8. '-' → logprob: -11.147706985473633
    9. ']][' → logprob: -11.397706985473633
    10. ' ][' → logprob: -11.397706985473633

Token 843: '(' (ID: 7)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.29668760299682617
    2. '(' → logprob: -2.171687602996826
    3. '[' → logprob: -3.171687602996826
    4. '((' → logprob: -3.296687602996826
    5. '[j' → logprob: -3.796687602996826
    6. '[n' → logprob: -4.421687602996826
    7. '[((' → logprob: -4.546687602996826
    8. '(n' → logprob: -5.046687602996826
    9. '(ns' → logprob: -5.796687602996826
    10. 'j' → logprob: -6.796687602996826

Token 844: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11984418332576752
    2. 'j' → logprob: -2.3698441982269287
    3. '((' → logprob: -4.24484395980835
    4. 'ns' → logprob: -6.74484395980835
    5. 'n' → logprob: -7.49484395980835
    6. 's' → logprob: -7.49484395980835
    7. '(~' → logprob: -7.49484395980835
    8. '(s' → logprob: -7.74484395980835
    9. 'sz' → logprob: -7.99484395980835
    10. '~' → logprob: -7.99484395980835

Token 845: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.02591611072421074
    2. '-' → logprob: -5.02591609954834
    3. ' -' → logprob: -5.15091609954834
    4. ' <<' → logprob: -5.40091609954834
    5. 'j' → logprob: -5.52591609954834
    6. 'n' → logprob: -6.52591609954834
    7. '>>' → logprob: -6.90091609954834
    8. '[j' → logprob: -7.15091609954834
    9. ' ' → logprob: -8.40091609954834
    10. '<n' → logprob: -8.65091609954834

Token 846: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009961293544620275
    2. 'n' → logprob: -7.750996112823486
    3. '(sz' → logprob: -8.125996589660645
    4. '(' → logprob: -9.125996589660645
    5. ' (' → logprob: -9.750996589660645
    6. '(ns' → logprob: -10.375996589660645
    7. '(j' → logprob: -10.625996589660645
    8. '((' → logprob: -11.750996589660645
    9. 'sz' → logprob: -11.875996589660645
    10. '   ' → logprob: -12.000996589660645

Token 847: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.533605694770813
    2. 'n' → logprob: -1.158605694770813
    3. '(sz' → logprob: -3.0336055755615234
    4. 'sz' → logprob: -3.1586055755615234
    5. '(j' → logprob: -6.283605575561523
    6. 'j' → logprob: -6.283605575561523
    7. '(' → logprob: -6.533605575561523
    8. '(s' → logprob: -6.908605575561523
    9. ' (' → logprob: -7.408605575561523
    10. '(ns' → logprob: -7.658605575561523

Token 848: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31263142824172974
    2. 'sz' → logprob: -2.437631368637085
    3. 'n' → logprob: -2.687631368637085
    4. '(n' → logprob: -2.937631368637085
    5. ' -' → logprob: -3.937631368637085
    6. ')' → logprob: -4.437631607055664
    7. '(sz' → logprob: -4.687631607055664
    8. '   ' → logprob: -5.187631607055664
    9. '(' → logprob: -6.062631607055664
    10. ' ' → logprob: -6.187631607055664

Token 849: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.06963037699460983
    2. '(sz' → logprob: -2.8196303844451904
    3. '(n' → logprob: -5.319630146026611
    4. 'n' → logprob: -6.694630146026611
    5. '(' → logprob: -7.319630146026611
    6. ' sz' → logprob: -8.56963062286377
    7. '(s' → logprob: -8.69463062286377
    8. '1' → logprob: -9.06963062286377
    9. '   ' → logprob: -9.44463062286377
    10. '(m' → logprob: -9.69463062286377

Token 850: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026376070454716682
    2. ')-' → logprob: -6.3776373863220215
    3. '1' → logprob: -7.3776373863220215
    4. ' )' → logprob: -8.62763786315918
    5. ')]' → logprob: -10.25263786315918
    6. '[j' → logprob: -10.62763786315918
    7. 'j' → logprob: -10.75263786315918
    8. '[' → logprob: -11.25263786315918
    9. '))' → logprob: -12.12763786315918
    10. ']' → logprob: -12.37763786315918

Token 851: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14360462129116058
    2. '1' → logprob: -2.7686045169830322
    3. ' -' → logprob: -3.0186045169830322
    4. ']' → logprob: -4.768604755401611
    5. ')' → logprob: -5.268604755401611
    6. ']-' → logprob: -5.643604755401611
    7. '[' → logprob: -6.393604755401611
    8. ')-' → logprob: -7.018604755401611
    9. '-j' → logprob: -7.018604755401611
    10. '[j' → logprob: -7.268604755401611

Token 852: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002205828350270167
    2. 'j' → logprob: -8.50022029876709
    3. ' ' → logprob: -11.62522029876709
    4. '(' → logprob: -12.62522029876709
    5. '   ' → logprob: -12.75022029876709
    6. '           ' → logprob: -15.00022029876709
    7. ' j' → logprob: -15.12522029876709
    8. '  ' → logprob: -15.12522029876709
    9. '-' → logprob: -15.50022029876709
    10. '(j' → logprob: -15.62522029876709

Token 853: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001034714630804956
    2. 'j' → logprob: -6.876034736633301
    3. '(' → logprob: -14.2510347366333
    4. ' ' → logprob: -14.8760347366333
    5. '(j' → logprob: -15.3760347366333
    6. ' j' → logprob: -15.6260347366333
    7. '   ' → logprob: -15.7510347366333
    8. '-' → logprob: -16.376033782958984
    9. '
' → logprob: -16.376033782958984
    10. '2' → logprob: -16.501033782958984

Token 854: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.35735341906547546
    2. ' -' → logprob: -1.7323534488677979
    3. '-j' → logprob: -2.857353448867798
    4. '[j' → logprob: -3.357353448867798
    5. 'j' → logprob: -3.732353448867798
    6. ' j' → logprob: -5.732353210449219
    7. '1' → logprob: -7.107353210449219
    8. '[' → logprob: -7.232353210449219
    9. '   ' → logprob: -7.732353210449219
    10. ' ' → logprob: -7.857353210449219

Token 855: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002631238894537091
    2. ' j' → logprob: -8.250263214111328
    3. '   ' → logprob: -14.000263214111328
    4. '	j' → logprob: -15.250263214111328
    5. ' ' → logprob: -15.500263214111328
    6. '  ' → logprob: -16.000263214111328
    7. '[j' → logprob: -16.125263214111328
    8. '
' → logprob: -16.750263214111328
    9. '$j' → logprob: -16.750263214111328
    10. '       ' → logprob: -16.875263214111328

Token 856: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5251712203025818
    2. ')' → logprob: -0.9001712203025818
    3. ')])' → logprob: -6.900171279907227
    4. '))' → logprob: -7.400171279907227
    5. ']' → logprob: -9.400171279907227
    6. ' )' → logprob: -9.650171279907227
    7. ']))' → logprob: -9.650171279907227
    8. ' ])' → logprob: -10.275171279907227
    9. '   ' → logprob: -10.400171279907227
    10. '})' → logprob: -10.400171279907227

Token 857: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02221381664276123
    2. 'res' → logprob: -5.147213935852051
    3. 'result' → logprob: -5.397213935852051
    4. 'print' → logprob: -6.397213935852051
    5. 'i' → logprob: -6.522213935852051
    6. 'x' → logprob: -6.897213935852051
    7. 'answer' → logprob: -7.022213935852051
    8. 'def' → logprob: -7.147213935852051
    9. ')' → logprob: -7.647213935852051
    10. 'ans' → logprob: -7.772213935852051

Token 858: ' output' (ID: 4733)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.2535043954849243
    2. 'solve' → logprob: -1.2535043954849243
    3. ' main' → logprob: -1.8785043954849243
    4. 'main' → logprob: -2.3785042762756348
    5. ' search' → logprob: -3.3785042762756348
    6. ' find' → logprob: -4.003504276275635
    7. 'search' → logprob: -4.003504276275635
    8. ' f' → logprob: -4.253504276275635
    9. ' gen' → logprob: -4.753504276275635
    10. 'f' → logprob: -4.753504276275635

Token 859: '_numbers' (ID: 76842)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.287539005279541
    2. '():' → logprob: -1.287539005279541
    3. '(' → logprob: -1.662539005279541
    4. '(n' → logprob: -2.662539005279541
    5. '(expression' → logprob: -2.912539005279541
    6. '(idx' → logprob: -3.537539005279541
    7. '(index' → logprob: -4.037539005279541
    8. '_expression' → logprob: -4.412539005279541
    9. '(size' → logprob: -4.412539005279541
    10. '(output' → logprob: -4.787539005279541

Token 860: '():
' (ID: 8595)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.31767940521240234
    2. '(sz' → logprob: -1.8176794052124023
    3. '(n' → logprob: -2.3176794052124023
    4. '(s' → logprob: -5.817679405212402
    5. '(k' → logprob: -6.317679405212402
    6. '(size' → logprob: -6.442679405212402
    7. '(' → logprob: -7.067679405212402
    8. '(l' → logprob: -7.317679405212402
    9. '(a' → logprob: -7.442679405212402
    10. '():' → logprob: -7.442679405212402

Token 861: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005662570474669337
    2. ' for' → logprob: -8.000566482543945
    3. 'for' → logprob: -8.625566482543945
    4. '	for' → logprob: -10.250566482543945
    5. 'def' → logprob: -12.125566482543945
    6. 'n' → logprob: -13.125566482543945
    7. '```' → logprob: -13.125566482543945
    8. '   ' → logprob: -14.500566482543945
    9. '	n' → logprob: -14.625566482543945
    10. '
' → logprob: -14.875566482543945

Token 862: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.020189950242638588
    2. ' for' → logprob: -4.2701897621154785
    3. '   ' → logprob: -5.1451897621154785
    4. 'res' → logprob: -10.145190238952637
    5. 'print' → logprob: -10.270190238952637
    6. 'i' → logprob: -10.520190238952637
    7. 'result' → logprob: -10.645190238952637
    8. 'global' → logprob: -11.020190238952637
    9. ' res' → logprob: -11.645190238952637
    10. ' i' → logprob: -13.145190238952637

Token 863: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012491763569414616
    2. 'x' → logprob: -4.887491703033447
    3. ' i' → logprob: -6.512491703033447
    4. '(i' → logprob: -7.637491703033447
    5. 'a' → logprob: -7.887491703033447
    6. '_i' → logprob: -7.887491703033447
    7. 'm' → logprob: -8.387492179870605
    8. 'j' → logprob: -8.637492179870605
    9. '_' → logprob: -8.762492179870605
    10. 'p' → logprob: -8.887492179870605

Token 864: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4381496012210846
    2. ' in' → logprob: -1.0631495714187622
    3. ',' → logprob: -4.688149452209473
    4. '   ' → logprob: -9.313149452209473
    5. 'n' → logprob: -10.188149452209473
    6. ' ' → logprob: -11.188149452209473
    7. ' ,' → logprob: -11.688149452209473
    8. ')' → logprob: -11.688149452209473
    9. '```' → logprob: -11.688149452209473
    10. '  ' → logprob: -12.063149452209473

Token 865: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006283254479058087
    2. ' range' → logprob: -8.250628471374512
    3. 'gen' → logprob: -8.375628471374512
    4. 'product' → logprob: -9.000628471374512
    5. 'expression' → logprob: -12.000628471374512
    6. 's' → logprob: -13.250628471374512
    7. 'chain' → logprob: -13.625628471374512
    8. '(' → logprob: -13.875628471374512
    9. '0' → logprob: -14.000628471374512
    10. 'count' → logprob: -15.250628471374512

Token 866: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12704035639762878
    2. '1' → logprob: -2.127040386199951
    3. '((' → logprob: -9.752039909362793
    4. ' ' → logprob: -11.252039909362793
    5. ' (' → logprob: -11.252039909362793
    6. '(len' → logprob: -11.377039909362793
    7. 'len' → logprob: -11.752039909362793
    8. '   ' → logprob: -12.377039909362793
    9. '0' → logprob: -14.127039909362793
    10. '2' → logprob: -14.252039909362793

Token 867: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009808863513171673
    2. '(' → logprob: -4.6348090171813965
    3. 'len' → logprob: -10.634808540344238
    4. 'sz' → logprob: -10.884808540344238
    5. '2' → logprob: -13.134808540344238
    6. '4' → logprob: -13.259808540344238
    7. ' ' → logprob: -13.509808540344238
    8. '0' → logprob: -13.759808540344238
    9. '(sz' → logprob: -13.759808540344238
    10. '(len' → logprob: -14.884808540344238

Token 868: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.20490169525146484
    2. ' <<' → logprob: -1.7049016952514648
    3. ',' → logprob: -5.829901695251465
    4. '<<(' → logprob: -8.204901695251465
    5. '   ' → logprob: -8.579901695251465
    6. '(' → logprob: -9.829901695251465
    7. '1' → logprob: -11.704901695251465
    8. ' ,' → logprob: -11.704901695251465
    9. ' (' → logprob: -12.954901695251465
    10. '<<<' → logprob: -13.329901695251465

Token 869: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.004251846577972174
    2. '(sz' → logprob: -5.629251956939697
    3. '(' → logprob: -7.629251956939697
    4. ' sz' → logprob: -9.254251480102539
    5. '   ' → logprob: -11.254251480102539
    6. 'n' → logprob: -11.254251480102539
    7. '(n' → logprob: -11.504251480102539
    8. '(s' → logprob: -11.629251480102539
    9. ' ' → logprob: -12.004251480102539
    10. '  ' → logprob: -13.129251480102539

Token 870: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43447697162628174
    2. '):
' → logprob: -1.0594769716262817
    3. '   ' → logprob: -5.434476852416992
    4. '       ' → logprob: -6.809476852416992
    5. ':' → logprob: -8.684476852416992
    6. ',' → logprob: -10.059476852416992
    7. ')' → logprob: -10.684476852416992
    8. '):
' → logprob: -10.809476852416992
    9. '	' → logprob: -11.684476852416992
    10. ':
' → logprob: -12.684476852416992

Token 871: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.698698704596609e-05
    2. ' for' → logprob: -9.625097274780273
    3. 'for' → logprob: -11.250097274780273
    4. '   ' → logprob: -11.875097274780273
    5. '	   ' → logprob: -13.125097274780273
    6. '```' → logprob: -13.250097274780273
    7. '	' → logprob: -13.500097274780273
    8. 'print' → logprob: -13.500097274780273
    9. '<|end|>' → logprob: -13.625097274780273
    10. ',' → logprob: -13.750097274780273

Token 872: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13140513002872467
    2. 'print' → logprob: -2.3814051151275635
    3. '       ' → logprob: -4.256405353546143
    4. ' for' → logprob: -4.756405353546143
    5. '   ' → logprob: -5.256405353546143
    6. 'j' → logprob: -6.131405353546143
    7. ' print' → logprob: -8.131404876708984
    8. 'sys' → logprob: -9.006404876708984
    9. 'yield' → logprob: -10.256404876708984
    10. '	for' → logprob: -10.756404876708984

Token 873: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08907992392778397
    2. ' j' → logprob: -2.4640798568725586
    3. '   ' → logprob: -9.214079856872559
    4. '       ' → logprob: -10.964079856872559
    5. '	j' → logprob: -11.339079856872559
    6. '    ' → logprob: -12.339079856872559
    7. '  ' → logprob: -12.964079856872559
    8. ' ' → logprob: -13.839079856872559
    9. '           ' → logprob: -14.214079856872559
    10. '     ' → logprob: -14.339079856872559

Token 874: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008628524839878082
    2. 'in' → logprob: -4.7586283683776855
    3. ' ' → logprob: -12.758628845214844
    4. '	in' → logprob: -12.758628845214844
    5. '   ' → logprob: -13.508628845214844
    6. '(' → logprob: -13.633628845214844
    7. '       ' → logprob: -14.258628845214844
    8. '	' → logprob: -14.383628845214844
    9. '    ' → logprob: -14.383628845214844
    10. '<|end|>' → logprob: -14.633628845214844

Token 875: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01559976302087307
    2. ' range' → logprob: -4.265599727630615
    3. '(' → logprob: -6.640599727630615
    4. '1' → logprob: -9.265600204467773
    5. '(range' → logprob: -10.515600204467773
    6. '0' → logprob: -12.140600204467773
    7. ' (' → logprob: -13.515600204467773
    8. ' ' → logprob: -15.015600204467773
    9. '   ' → logprob: -16.015600204467773
    10. 'in' → logprob: -17.015600204467773

Token 876: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.828512363834307e-05
    2. '((' → logprob: -9.875088691711426
    3. '1' → logprob: -10.250088691711426
    4. ' (' → logprob: -13.625088691711426
    5. '   ' → logprob: -16.12508773803711
    6. ' ' → logprob: -17.00008773803711
    7. '
' → logprob: -18.75008773803711
    8. '(len' → logprob: -18.75008773803711
    9. '(
' → logprob: -19.12508773803711
    10. '(s' → logprob: -19.12508773803711

Token 877: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.474467009305954
    2. '1' → logprob: -0.9744670391082764
    3. ' (' → logprob: -8.474467277526855
    4. ' ' → logprob: -8.974467277526855
    5. '   ' → logprob: -10.099467277526855
    6. '  ' → logprob: -12.974467277526855
    7. '0' → logprob: -13.474467277526855
    8. '(n' → logprob: -13.724467277526855
    9. '((' → logprob: -13.849467277526855
    10. 'n' → logprob: -13.849467277526855

Token 878: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.5890684723854065
    2. '<<' → logprob: -0.8390684723854065
    3. '(' → logprob: -4.714068412780762
    4. '<<(' → logprob: -6.589068412780762
    5. ' (' → logprob: -6.839068412780762
    6. ' -' → logprob: -7.339068412780762
    7. '(n' → logprob: -7.589068412780762
    8. 'n' → logprob: -8.964068412780762
    9. ' ' → logprob: -9.214068412780762
    10. '   ' → logprob: -9.589068412780762

Token 879: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000500370399095118
    2. ' (' → logprob: -7.750500202178955
    3. '(sz' → logprob: -9.875500679016113
    4. '(' → logprob: -11.375500679016113
    5. '(s' → logprob: -13.375500679016113
    6. '((' → logprob: -13.750500679016113
    7. '   ' → logprob: -13.750500679016113
    8. 'n' → logprob: -13.750500679016113
    9. '(ns' → logprob: -15.125500679016113
    10. '[n' → logprob: -15.250500679016113

Token 880: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14296193420886993
    2. '(n' → logprob: -2.0179619789123535
    3. ' (' → logprob: -8.767961502075195
    4. ' n' → logprob: -9.392961502075195
    5. '   ' → logprob: -11.017961502075195
    6. '{' → logprob: -11.767961502075195
    7. '(' → logprob: -11.767961502075195
    8. '
' → logprob: -12.392961502075195
    9. 'nz' → logprob: -13.517961502075195
    10. '	n' → logprob: -13.642961502075195

Token 881: ' -' (ID: 533)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.9788576364517212
    2. ' -' → logprob: -1.2288576364517212
    3. '-s' → logprob: -1.3538576364517212
    4. '-' → logprob: -2.8538575172424316
    5. ' sz' → logprob: -4.853857517242432
    6. '   ' → logprob: -5.603857517242432
    7. '_sz' → logprob: -6.103857517242432
    8. '(sz' → logprob: -7.103857517242432
    9. ' ' → logprob: -7.478857517242432
    10. '  ' → logprob: -7.853857517242432

Token 882: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.00019328886992298067
    2. '(sz' → logprob: -8.75019359588623
    3. ' sz' → logprob: -10.37519359588623
    4. '   ' → logprob: -13.37519359588623
    5. '(' → logprob: -13.75019359588623
    6. 'n' → logprob: -15.25019359588623
    7. '.sz' → logprob: -15.87519359588623
    8. '_sz' → logprob: -15.87519359588623
    9. '       ' → logprob: -16.375192642211914
    10. ' ' → logprob: -16.500192642211914

Token 883: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.5360246896743774
    2. ')):' → logprob: -0.9110246896743774
    3. '):
' → logprob: -5.411024570465088
    4. '))' → logprob: -5.786024570465088
    5. '):' → logprob: -5.911024570465088
    6. ')' → logprob: -6.661024570465088
    7. '       ' → logprob: -7.036024570465088
    8. '           ' → logprob: -8.536025047302246
    9. ')):
' → logprob: -8.661025047302246
    10. '   ' → logprob: -11.036025047302246

Token 884: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017064384883269668
    2. 'print' → logprob: -8.875170707702637
    3. ' print' → logprob: -10.875170707702637
    4. '```' → logprob: -12.875170707702637
    5. '	       ' → logprob: -13.125170707702637
    6. '          ' → logprob: -13.250170707702637
    7. '		' → logprob: -13.750170707702637
    8. '               ' → logprob: -14.125170707702637
    9. '         ' → logprob: -14.125170707702637
    10. '       ' → logprob: -14.250170707702637

Token 885: ' hi' (ID: 5911)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12822797894477844
    2. '               ' → logprob: -3.003227949142456
    3. 'num' → logprob: -3.378227949142456
    4. '           ' → logprob: -4.503228187561035
    5. ' print' → logprob: -4.878228187561035
    6. 'x' → logprob: -5.003228187561035
    7. 'val' → logprob: -5.378228187561035
    8. 'v' → logprob: -5.878228187561035
    9. 'n' → logprob: -6.503228187561035
    10. 'k' → logprob: -7.628228187561035

Token 886: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6878610849380493
    2. ' =' → logprob: -1.0628610849380493
    3. '=' → logprob: -2.6878609657287598
    4. '           ' → logprob: -3.5628609657287598
    5. 'x' → logprob: -3.6878609657287598
    6. '       ' → logprob: -5.18786096572876
    7. '_val' → logprob: -5.18786096572876
    8. 'val' → logprob: -5.56286096572876
    9. 'num' → logprob: -6.18786096572876
    10. ',val' → logprob: -6.31286096572876

Token 887: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.0038378334138542414
    2. ' lo' → logprob: -5.628838062286377
    3. 'low' → logprob: -8.753837585449219
    4. 'ho' → logprob: -10.628837585449219
    5. 'hi' → logprob: -11.003837585449219
    6. '_lo' → logprob: -11.128837585449219
    7. '_' → logprob: -11.878837585449219
    8. 'hj' → logprob: -12.003837585449219
    9. ' low' → logprob: -13.003837585449219
    10. 'li' → logprob: -13.253837585449219

Token 888: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815064437687397
    2. ' =' → logprob: -4.018150806427002
    3. ' ' → logprob: -16.643150329589844
    4. ')' → logprob: -16.643150329589844
    5. ')=' → logprob: -16.768150329589844
    6. ',' → logprob: -17.018150329589844
    7. '＝' → logprob: -17.018150329589844
    8. '=int' → logprob: -17.518150329589844
    9. '  ' → logprob: -17.768150329589844
    10. '   ' → logprob: -17.893150329589844

Token 889: ' expression' (ID: 12973)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.0010754420654848218
    2. ' expression' → logprob: -7.501075267791748
    3. '(expression' → logprob: -7.626075267791748
    4. '((' → logprob: -11.376075744628906
    5. '(' → logprob: -11.876075744628906
    6. 'express' → logprob: -12.376075744628906
    7. '   ' → logprob: -12.751075744628906
    8. 'i' → logprob: -13.001075744628906
    9. ' (' → logprob: -13.876075744628906
    10. '(i' → logprob: -14.001075744628906

Token 890: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -15.875
    3. 'i' → logprob: -16.5
    4. '(' → logprob: -16.875
    5. '[i' → logprob: -17.125
    6. '(
' → logprob: -17.75
    7. '=i' → logprob: -17.875
    8. '=' → logprob: -17.875
    9. '
' → logprob: -18.625
    10. '   ' → logprob: -18.625

Token 891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004803784657269716
    2. ',j' → logprob: -5.379803657531738
    3. ' ,' → logprob: -8.754803657531738
    4. ',i' → logprob: -10.754803657531738
    5. ')' → logprob: -13.504803657531738
    6. '           ' → logprob: -13.629803657531738
    7. ',
' → logprob: -14.629803657531738
    8. ',n' → logprob: -15.129803657531738
    9. '   ' → logprob: -15.879803657531738
    10. 'import' → logprob: -16.504804611206055

Token 892: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003815756645053625
    2. ' j' → logprob: -7.8753814697265625
    3. '           ' → logprob: -15.000381469726562
    4. '   ' → logprob: -15.000381469726562
    5. ' ' → logprob: -15.625381469726562
    6. ')' → logprob: -15.875381469726562
    7. '	j' → logprob: -15.875381469726562
    8. '  ' → logprob: -16.125381469726562
    9. '    ' → logprob: -16.500381469726562
    10. '       ' → logprob: -16.750381469726562

Token 893: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3492545187473297
    2. ')
' → logprob: -1.2242544889450073
    3. '           ' → logprob: -7.599254608154297
    4. ')
' → logprob: -8.224254608154297
    5. 'print' → logprob: -10.724254608154297
    6. '       ' → logprob: -12.349254608154297
    7. ');' → logprob: -12.724254608154297
    8. '
' → logprob: -12.974254608154297
    9. '               ' → logprob: -13.349254608154297
    10. ',' → logprob: -13.724254608154297

Token 894: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.702754474943504e-05
    2. '<|end|>' → logprob: -10.87503719329834
    3. ',' → logprob: -12.37503719329834
    4. '       ' → logprob: -12.75003719329834
    5. 'print' → logprob: -13.12503719329834
    6. '	       ' → logprob: -13.12503719329834
    7. '               ' → logprob: -13.25003719329834
    8. '		' → logprob: -13.50003719329834
    9. '            
' → logprob: -14.37503719329834
    10. '<|end|>' → logprob: -14.50003719329834

Token 895: ' z' (ID: 579)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07171113044023514
    2. '           ' → logprob: -2.6967110633850098
    3. 'yield' → logprob: -6.94671106338501
    4. 'if' → logprob: -7.94671106338501
    5. ' print' → logprob: -8.071711540222168
    6. 'sys' → logprob: -9.446711540222168
    7. '               ' → logprob: -9.946711540222168
    8. '	       ' → logprob: -12.571711540222168
    9. '		' → logprob: -12.696711540222168
    10. '
' → logprob: -13.321711540222168

Token 896: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17585383355617523
    2. 'print' → logprob: -2.800853729248047
    3. '=' → logprob: -3.300853729248047
    4. 'xor' → logprob: -3.550853729248047
    5. 'ip' → logprob: -3.925853729248047
    6. '   ' → logprob: -5.300853729248047
    7. 'i' → logprob: -6.550853729248047
    8. 'z' → logprob: -6.675853729248047
    9. ' ^=' → logprob: -6.675853729248047
    10. ',' → logprob: -7.175853729248047

Token 897: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15868423879146576
    2. '=' → logprob: -2.658684253692627
    3. '0' → logprob: -2.783684253692627
    4. ',' → logprob: -5.033684253692627
    5. 'print' → logprob: -5.908684253692627
    6. 'ero' → logprob: -6.033684253692627
    7. '   ' → logprob: -6.408684253692627
    8. 'z' → logprob: -8.033683776855469
    9. ' ' → logprob: -8.783683776855469
    10. '       ' → logprob: -8.783683776855469

Token 898: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.03791191428899765
    2. '(' → logprob: -3.787911891937256
    3. 'lo' → logprob: -5.787911891937256
    4. '(i' → logprob: -6.162911891937256
    5. ' hi' → logprob: -6.787911891937256
    6. 'sw' → logprob: -6.912911891937256
    7. '((' → logprob: -7.162911891937256
    8. 'xor' → logprob: -7.162911891937256
    9. '0' → logprob: -7.287911891937256
    10. 'str' → logprob: -7.912911891937256

Token 899: ' +' (ID: 659)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.09117740392684937
    2. ' ^' → logprob: -2.591177463531494
    3. '+' → logprob: -4.716177463531494
    4. '|' → logprob: -6.841177463531494
    5. '>>' → logprob: -7.716177463531494
    6. '
' → logprob: -7.841177463531494
    7. '^(' → logprob: -7.966177463531494
    8. '&' → logprob: -8.091176986694336
    9. '<<' → logprob: -9.341176986694336
    10. '%' → logprob: -9.466176986694336

Token 900: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.0033261224161833525
    2. '(lo' → logprob: -6.128325939178467
    3. ' lo' → logprob: -7.378325939178467
    4. '(' → logprob: -8.003326416015625
    5. 'r' → logprob: -9.253326416015625
    6. '((' → logprob: -10.753326416015625
    7. ' (' → logprob: -11.128326416015625
    8. 's' → logprob: -11.503326416015625
    9. '(r' → logprob: -12.253326416015625
    10. '   ' → logprob: -12.253326416015625

Token 901: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008846191689372063
    2. '
' → logprob: -4.883846282958984
    3. '<|end|>' → logprob: -7.258846282958984
    4. ',' → logprob: -8.883846282958984
    5. '            
' → logprob: -9.383846282958984
    6. ';' → logprob: -10.008846282958984
    7. ',
' → logprob: -10.258846282958984
    8. ' if' → logprob: -10.383846282958984
    9. '               ' → logprob: -10.508846282958984
    10. '       ' → logprob: -10.633846282958984

Token 902: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.214019307051785e-05
    2. '               ' → logprob: -11.500032424926758
    3. '<|end|>' → logprob: -12.250032424926758
    4. '		' → logprob: -12.375032424926758
    5. '       ' → logprob: -12.750032424926758
    6. '                   ' → logprob: -13.000032424926758
    7. '```' → logprob: -13.000032424926758
    8. 'print' → logprob: -13.125032424926758
    9. '          ' → logprob: -14.375032424926758
    10. '                           ' → logprob: -14.375032424926758

Token 903: ' sw' (ID: 2766)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012560649774968624
    2. 'print' → logprob: -6.751255989074707
    3. '               ' → logprob: -10.501255989074707
    4. ' print' → logprob: -10.751255989074707
    5. 'if' → logprob: -11.001255989074707
    6. ' if' → logprob: -11.626255989074707
    7. '       ' → logprob: -12.001255989074707
    8. '                   ' → logprob: -13.626255989074707
    9. '		' → logprob: -13.751255989074707
    10. '	       ' → logprob: -14.876255989074707

Token 904: ' =' (ID: 314)
  Prédit: 'iz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iz' → logprob: -0.002432855311781168
    2. ' =' → logprob: -7.502432823181152
    3. '=' → logprob: -7.627432823181152
    4. 'z' → logprob: -7.877432823181152
    5. 'print' → logprob: -7.877432823181152
    6. 'izz' → logprob: -8.627432823181152
    7. 'izzle' → logprob: -8.877432823181152
    8. 'i' → logprob: -9.877432823181152
    9. '
' → logprob: -10.002432823181152
    10. '0' → logprob: -10.127432823181152

Token 905: ' sw' (ID: 2766)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.0010055390885099769
    2. 'z' → logprob: -7.87600564956665
    3. ' sw' → logprob: -8.751005172729492
    4. 'xor' → logprob: -9.251005172729492
    5. '(sw' → logprob: -9.501005172729492
    6. '0' → logprob: -10.126005172729492
    7. '(' → logprob: -10.751005172729492
    8. 'str' → logprob: -10.876005172729492
    9. 'bin' → logprob: -11.001005172729492
    10. 'abs' → logprob: -11.001005172729492

Token 906: 'iz' (ID: 482)
  Prédit: 'iz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iz' → logprob: -0.0010426939697936177
    2. '(n' → logprob: -7.12604284286499
    3. 'z' → logprob: -9.626042366027832
    4. '(i' → logprob: -10.251042366027832
    5. 'i' → logprob: -10.751042366027832
    6. '(' → logprob: -11.126042366027832
    7. '
' → logprob: -11.126042366027832
    8. 'ip' → logprob: -11.501042366027832
    9. 'из' → logprob: -11.501042366027832
    10. '(sz' → logprob: -11.751042366027832

Token 907: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0016937461914494634
    2. '(sz' → logprob: -7.0016937255859375
    3. '(z' → logprob: -7.7516937255859375
    4. '(' → logprob: -8.251693725585938
    5. 'sz' → logprob: -10.001693725585938
    6. 'n' → logprob: -10.626693725585938
    7. '(s' → logprob: -11.376693725585938
    8. 'z' → logprob: -12.251693725585938
    9. '(sw' → logprob: -13.751693725585938
    10. ' (' → logprob: -14.251693725585938

Token 908: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0958380177617073
    2. ',z' → logprob: -2.4708380699157715
    3. '(z' → logprob: -5.5958380699157715
    4. ',n' → logprob: -6.9708380699157715
    5. '(n' → logprob: -7.0958380699157715
    6. 'z' → logprob: -7.3458380699157715
    7. ')' → logprob: -8.470837593078613
    8. '(' → logprob: -8.845837593078613
    9. '<|end|>' → logprob: -9.595837593078613
    10. ',
' → logprob: -9.720837593078613

Token 909: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0004027865652460605
    2. 'sz' → logprob: -9.250402450561523
    3. 'hi' → logprob: -9.750402450561523
    4. ' z' → logprob: -9.875402450561523
    5. 'lo' → logprob: -10.125402450561523
    6. '           ' → logprob: -10.375402450561523
    7. '(z' → logprob: -10.375402450561523
    8. 'i' → logprob: -11.000402450561523
    9. 'n' → logprob: -11.125402450561523
    10. 'a' → logprob: -11.125402450561523

Token 910: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9862216504407115e-05
    2. 'z' → logprob: -11.250020027160645
    3. ',' → logprob: -12.500020027160645
    4. ',z' → logprob: -14.500020027160645
    5. ')' → logprob: -14.625020027160645
    6. '[z' → logprob: -15.000020027160645
    7. 'o' → logprob: -15.437520027160645
    8. '
' → logprob: -15.687520027160645
    9. '```' → logprob: -15.937520027160645
    10. '[i' → logprob: -16.062519073486328

Token 911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000817369669675827
    2. ',d' → logprob: -7.25081729888916
    3. ',z' → logprob: -10.25081729888916
    4. ' ,' → logprob: -10.62581729888916
    5. '           ' → logprob: -10.87581729888916
    6. 'd' → logprob: -11.12581729888916
    7. 'z' → logprob: -13.12581729888916
    8. '0' → logprob: -13.12581729888916
    9. '+' → logprob: -13.50081729888916
    10. '[' → logprob: -13.75081729888916

Token 912: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0010591294849291444
    2. 'set' → logprob: -7.001059055328369
    3. '{' → logprob: -9.251059532165527
    4. '[d' → logprob: -10.501059532165527
    5. ' d' → logprob: -11.126059532165527
    6. 'range' → logprob: -13.376059532165527
    7. '	d' → logprob: -13.376059532165527
    8. '[' → logprob: -13.626059532165527
    9. 'tuple' → logprob: -13.751059532165527
    10. '(d' → logprob: -13.751059532165527

Token 913: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008242443203926086
    2. '           ' → logprob: -5.383242607116699
    3. ')' → logprob: -5.633242607116699
    4. ')
' → logprob: -10.2582426071167
    5. ' )
' → logprob: -14.0082426071167
    6. ')

' → logprob: -14.6332426071167
    7. ',' → logprob: -14.6332426071167
    8. '       ' → logprob: -15.0082426071167
    9. ')`
' → logprob: -15.1332426071167
    10. '          ' → logprob: -15.2582426071167

Token 914: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004000873304903507
    2. '<|end|>' → logprob: -5.629000663757324
    3. '               ' → logprob: -8.629000663757324
    4. '		' → logprob: -10.129000663757324
    5. ')' → logprob: -10.379000663757324
    6. '```' → logprob: -10.504000663757324
    7. '          ' → logprob: -10.754000663757324
    8. '            ' → logprob: -11.129000663757324
    9. '       ' → logprob: -11.254000663757324
    10. '<|end|>' → logprob: -11.504000663757324

Token 915: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044263724237680435
    2. 'print' → logprob: -3.5442638397216797
    3. 'if' (adapté à ' if') → logprob: -4.29426383972168
    4. ' if' → logprob: -7.79426383972168
    5. '               ' → logprob: -8.41926383972168
    6. ' print' → logprob: -9.66926383972168
    7. '       ' → logprob: -10.66926383972168
    8. '                   ' → logprob: -11.54426383972168
    9. 'for' → logprob: -12.29426383972168
    10. '		' → logprob: -12.29426383972168

Token 916: ' DBG' (ID: 100080)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.18307773768901825
    2. 'z' → logprob: -2.058077812194824
    3. 'DBG' → logprob: -3.683077812194824
    4. '(sw' → logprob: -4.933077812194824
    5. '(z' → logprob: -5.933077812194824
    6. 'not' → logprob: -6.933077812194824
    7. '(DB' → logprob: -7.183077812194824
    8. '(s' → logprob: -7.558077812194824
    9. 'sz' → logprob: -7.683077812194824
    10. ' sw' → logprob: -7.933077812194824

Token 917: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6534645557403564
    2. ' and' → logprob: -0.9034645557403564
    3. 'and' → logprob: -3.4034645557403564
    4. '2' → logprob: -4.153464317321777
    5. '           ' → logprob: -4.653464317321777
    6. ':
' → logprob: -4.778464317321777
    7. '==' → logprob: -5.903464317321777
    8. '               ' → logprob: -6.403464317321777
    9. '       ' → logprob: -7.403464317321777
    10. '0' → logprob: -7.653464317321777

Token 918: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005877026706002653
    2. 'print' → logprob: -8.250587463378906
    3. '           ' → logprob: -9.000587463378906
    4. '                   ' → logprob: -9.875587463378906
    5. '                       ' → logprob: -10.000587463378906
    6. ' print' → logprob: -10.250587463378906
    7. '```' → logprob: -11.250587463378906
    8. '	           ' → logprob: -11.500587463378906
    9. '                           ' → logprob: -11.625587463378906
    10. '<|end|>' → logprob: -11.875587463378906

Token 919: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12491713464260101
    2. ' print' → logprob: -2.2499170303344727
    3. '                   ' → logprob: -4.749917030334473
    4. '                               ' → logprob: -6.999917030334473
    5. '                       ' → logprob: -7.499917030334473
    6. '                                       ' → logprob: -7.624917030334473
    7. '               ' → logprob: -7.749917030334473
    8. '   ' → logprob: -8.124917030334473
    9. '                           ' → logprob: -8.374917030334473
    10. '                                           ' → logprob: -8.624917030334473

Token 920: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.016688277944922447
    2. '(z' → logprob: -4.391688346862793
    3. '('' → logprob: -6.766688346862793
    4. '(i' → logprob: -7.016688346862793
    5. '(sw' → logprob: -7.266688346862793
    6. '(' → logprob: -7.391688346862793
    7. '()' → logprob: -7.891688346862793
    8. '("' → logprob: -8.516688346862793
    9. '(s' → logprob: -9.891688346862793
    10. '('\' → logprob: -10.016688346862793

Token 921: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7069345116615295
    2. 'z' → logprob: -0.9569345116615295
    3. ' f' → logprob: -3.3319344520568848
    4. 'i' → logprob: -3.4569344520568848
    5. ' z' → logprob: -3.8319344520568848
    6. 'hi' → logprob: -4.706934452056885
    7. '(f' → logprob: -5.081934452056885
    8. ' i' → logprob: -5.206934452056885
    9. '           ' → logprob: -5.956934452056885
    10. 'sw' → logprob: -6.206934452056885

Token 922: 'i' (ID: 72)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.7927449941635132
    2. 'i' → logprob: -1.9177449941635132
    3. '"' → logprob: -2.1677451133728027
    4. '")' → logprob: -2.9177451133728027
    5. ' i' → logprob: -3.4177451133728027
    6. 'for' → logprob: -3.7927451133728027
    7. ' "' → logprob: -3.9177451133728027
    8. ' z' → logprob: -4.042745113372803
    9. '           ' → logprob: -4.292745113372803
    10. ''' → logprob: -4.292745113372803

Token 923: ' {' (ID: 354)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18962889909744263
    2. ' ,' → logprob: -1.9396288394927979
    3. '[' → logprob: -5.314629077911377
    4. ')' → logprob: -5.314629077911377
    5. ' i' → logprob: -5.314629077911377
    6. ' {' → logprob: -5.564629077911377
    7. '[i' → logprob: -6.064629077911377
    8. ' ' → logprob: -6.564629077911377
    9. ',i' → logprob: -6.689629077911377
    10. '<|end|>' → logprob: -6.939629077911377

Token 924: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006353547796607018
    2. ' i' → logprob: -7.375635147094727
    3. ' ' → logprob: -12.625635147094727
    4. '{i' → logprob: -13.250635147094727
    5. ''i' → logprob: -13.750635147094727
    6. '   ' → logprob: -14.375635147094727
    7. '  ' → logprob: -14.750635147094727
    8. '           ' → logprob: -15.250635147094727
    9. ''' → logprob: -15.500635147094727
    10. '	i' → logprob: -15.625635147094727

Token 925: '}' (ID: 92)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24816006422042847
    2. '}' → logprob: -1.7481601238250732
    3. ')' → logprob: -4.373159885406494
    4. ' j' → logprob: -4.623159885406494
    5. ' {' → logprob: -4.623159885406494
    6. '},' → logprob: -4.873159885406494
    7. ',j' → logprob: -6.623159885406494
    8. '<|end|>' → logprob: -6.998159885406494
    9. ' ,' → logprob: -7.123159885406494
    10. '{' → logprob: -7.498159885406494

Token 926: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.08955579996109009
    2. ',' → logprob: -3.2145557403564453
    3. ' {' → logprob: -3.2145557403564453
    4. ',j' → logprob: -6.589555740356445
    5. '{' → logprob: -6.964555740356445
    6. ' ,' → logprob: -7.339555740356445
    7. '           ' → logprob: -7.464555740356445
    8. 'j' → logprob: -8.089555740356445
    9. '   ' → logprob: -8.589555740356445
    10. ' ' → logprob: -8.589555740356445

Token 927: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.5841601490974426
    2. '{' → logprob: -0.8341601490974426
    3. ' j' → logprob: -4.959160327911377
    4. '={' → logprob: -7.459160327911377
    5. ',' → logprob: -8.459159851074219
    6. '{i' → logprob: -8.709159851074219
    7. '}' → logprob: -9.209159851074219
    8. ' sw' → logprob: -10.584159851074219
    9. '[{' → logprob: -10.959159851074219
    10. ' ' → logprob: -11.334159851074219

Token 928: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.081584716506768e-05
    2. 'i' → logprob: -12.375020980834961
    3. 'sw' → logprob: -12.625020980834961
    4. ' j' → logprob: -12.750020980834961
    5. 'z' → logprob: -13.000020980834961
    6. '   ' → logprob: -13.375020980834961
    7. '}' → logprob: -14.000020980834961
    8. '{' → logprob: -14.125020980834961
    9. 's' → logprob: -14.437520980834961
    10. ' ' → logprob: -14.812520980834961

Token 929: '}' (ID: 92)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.18252040445804596
    2. ',' → logprob: -2.9325203895568848
    3. '}' → logprob: -3.6825203895568848
    4. '")' → logprob: -4.057520389556885
    5. '               ' → logprob: -4.182520389556885
    6. ')' → logprob: -4.182520389556885
    7. '                   ' → logprob: -4.557520389556885
    8. '           ' → logprob: -4.932520389556885
    9. '{' → logprob: -5.557520389556885
    10. ' z' → logprob: -5.682520389556885

Token 930: ' hi' (ID: 5911)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.08065904676914215
    2. '")' → logprob: -3.3306591510772705
    3. ' z' → logprob: -4.080658912658691
    4. ',' → logprob: -4.830658912658691
    5. ')' → logprob: -5.580658912658691
    6. ' f' → logprob: -5.955658912658691
    7. ' x' → logprob: -6.330658912658691
    8. '{' → logprob: -6.580658912658691
    9. ' ")' → logprob: -6.580658912658691
    10. '           ' → logprob: -7.205658912658691

Token 931: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.7113323211669922
    2. ',' → logprob: -0.9613323211669922
    3. '{' → logprob: -2.711332321166992
    4. ' lo' → logprob: -2.836332321166992
    5. ',{' → logprob: -8.086332321166992
    6. '}' → logprob: -8.336332321166992
    7. ' z' → logprob: -8.711332321166992
    8. '={' → logprob: -8.961332321166992
    9. 'lo' → logprob: -8.961332321166992
    10. ' ' → logprob: -9.086332321166992

Token 932: 'hi' (ID: 3686)
  Prédit: 'hi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.00015407454338856041
    2. ' hi' → logprob: -9.750154495239258
    3. '{' → logprob: -10.375154495239258
    4. 'lo' → logprob: -10.875154495239258
    5. 'hex' → logprob: -11.125154495239258
    6. '}' → logprob: -11.500154495239258
    7. 'z' → logprob: -12.500154495239258
    8. '   ' → logprob: -12.625154495239258
    9. 'str' → logprob: -13.250154495239258
    10. 'i' → logprob: -13.250154495239258

Token 933: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.6411095261573792
    2. ' lo' → logprob: -1.1411094665527344
    3. '               ' → logprob: -3.3911094665527344
    4. ',' → logprob: -3.6411094665527344
    5. ' {' → logprob: -3.8911094665527344
    6. '                   ' → logprob: -4.516109466552734
    7. '            ' → logprob: -4.641109466552734
    8. '           ' → logprob: -4.766109466552734
    9. '                ' → logprob: -4.766109466552734
    10. '{' → logprob: -5.766109466552734

Token 934: ' lo' (ID: 1445)
  Prédit: ' lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lo' → logprob: -0.010497309267520905
    2. ' {' → logprob: -5.385497093200684
    3. '")' → logprob: -6.635497093200684
    4. ',' → logprob: -6.760497093200684
    5. ' j' → logprob: -7.385497093200684
    6. 'lo' → logprob: -7.510497093200684
    7. '{' → logprob: -7.885497093200684
    8. ' l' → logprob: -8.135497093200684
    9. '           ' → logprob: -8.385497093200684
    10. '               ' → logprob: -8.385497093200684

Token 935: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.5778282880783081
    2. ' lo' → logprob: -1.702828288078308
    3. '{' → logprob: -1.952828288078308
    4. ' z' → logprob: -2.8278284072875977
    5. ' f' → logprob: -3.9528284072875977
    6. '}' → logprob: -4.077828407287598
    7. ' sw' → logprob: -4.077828407287598
    8. 'lo' → logprob: -7.077828407287598
    9. ' ' → logprob: -7.452828407287598
    10. ' j' → logprob: -7.702828407287598

Token 936: 'lo' (ID: 746)
  Prédit: 'lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.000194361709873192
    2. ' lo' → logprob: -8.625194549560547
    3. '(lo' → logprob: -11.625194549560547
    4. '   ' → logprob: -13.250194549560547
    5. '{' → logprob: -13.625194549560547
    6. ' ' → logprob: -15.000194549560547
    7. '}' → logprob: -15.250194549560547
    8. '(' → logprob: -15.375194549560547
    9. 'l' → logprob: -15.625194549560547
    10. '           ' → logprob: -15.875194549560547

Token 937: '}' (ID: 92)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.17093747854232788
    2. '}' → logprob: -2.0459375381469727
    3. ' sw' → logprob: -4.170937538146973
    4. ' f' → logprob: -5.670937538146973
    5. ' ' → logprob: -6.045937538146973
    6. ' }' → logprob: -6.670937538146973
    7. '}")' → logprob: -7.295937538146973
    8. '           ' → logprob: -7.295937538146973
    9. ' x' → logprob: -7.545937538146973
    10. '               ' → logprob: -7.545937538146973

Token 938: ' z' (ID: 579)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.40486249327659607
    2. '           ' → logprob: -2.029862403869629
    3. ' {' → logprob: -2.779862403869629
    4. '")
' → logprob: -3.279862403869629
    5. ' z' → logprob: -3.654862403869629
    6. ' ' → logprob: -4.529862403869629
    7. '               ' → logprob: -4.654862403869629
    8. ')' → logprob: -4.904862403869629
    9. ' sw' → logprob: -4.904862403869629
    10. ' ")
' → logprob: -5.029862403869629

Token 939: ' {' (ID: 354)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004913145676255226
    2. '_' → logprob: -8.50049114227295
    3. '{' → logprob: -9.37549114227295
    4. ' {' → logprob: -10.12549114227295
    5. ' ' → logprob: -10.25049114227295
    6. ' sw' → logprob: -11.00049114227295
    7. 'sw' → logprob: -11.12549114227295
    8. '=' → logprob: -11.37549114227295
    9. '_sw' → logprob: -11.50049114227295
    10. ' =' → logprob: -11.62549114227295

Token 940: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0007417303277179599
    2. 'sw' → logprob: -7.375741958618164
    3. 'hex' → logprob: -9.500741958618164
    4. 'bin' → logprob: -11.000741958618164
    5. '{' → logprob: -12.125741958618164
    6. '0' → logprob: -12.125741958618164
    7. ' z' → logprob: -12.375741958618164
    8. '(z' → logprob: -13.750741958618164
    9. ''z' → logprob: -13.750741958618164
    10. 'format' → logprob: -13.875741958618164

Token 941: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5941604690160602e-05
    2. '_' → logprob: -10.750025749206543
    3. ')' → logprob: -13.500025749206543
    4. ' ' → logprob: -14.125025749206543
    5. '```' → logprob: -14.375025749206543
    6. 'z' → logprob: -14.500025749206543
    7. '}' → logprob: -16.12502670288086
    8. ',' → logprob: -16.25002670288086
    9. '_final' → logprob: -16.37502670288086
    10. '2' → logprob: -16.62502670288086

Token 942: '}' (ID: 92)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.15836367011070251
    2. '")' → logprob: -2.9083635807037354
    3. '}' → logprob: -3.6583635807037354
    4. '}")
' → logprob: -3.9083635807037354
    5. ')' → logprob: -4.1583638191223145
    6. ')")' → logprob: -4.1583638191223145
    7. '           ' → logprob: -5.2833638191223145
    8. ' }' → logprob: -5.9083638191223145
    9. ')")
' → logprob: -6.2833638191223145
    10. ' ")' → logprob: -7.0333638191223145

Token 943: ' sw' (ID: 2766)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.05226550251245499
    2. '           ' → logprob: -3.6772654056549072
    3. '")
' → logprob: -4.302265644073486
    4. ' ")' → logprob: -5.427265644073486
    5. ')' → logprob: -5.802265644073486
    6. '               ' → logprob: -6.552265644073486
    7. ' ")
' → logprob: -7.052265644073486
    8. ')")' → logprob: -7.927265644073486
    9. '}")' → logprob: -8.177265167236328
    10. '       ' → logprob: -8.552265167236328

Token 944: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.010245069861412048
    2. '{' → logprob: -4.635244846343994
    3. ' =' → logprob: -9.010245323181152
    4. ' ' → logprob: -9.385245323181152
    5. '={' → logprob: -9.510245323181152
    6. '}' → logprob: -10.260245323181152
    7. '{return' → logprob: -10.260245323181152
    8. 'iz' → logprob: -10.760245323181152
    9. '=' → logprob: -10.760245323181152
    10. ')' → logprob: -11.010245323181152

Token 945: 'sw' (ID: 16440)
  Prédit: 'sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -9.372294698550832e-06
    2. ' sw' → logprob: -11.750009536743164
    3. 'z' → logprob: -13.875009536743164
    4. '}' → logprob: -15.875009536743164
    5. '(sw' → logprob: -15.875009536743164
    6. '	sw' → logprob: -16.000009536743164
    7. ' ' → logprob: -17.125009536743164
    8. 'sz' → logprob: -17.250009536743164
    9. 's' → logprob: -17.250009536743164
    10. ')' → logprob: -17.375009536743164

Token 946: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.22903437912464142
    2. ')' → logprob: -2.354034423828125
    3. ')")' → logprob: -2.729034423828125
    4. '")' → logprob: -3.979034423828125
    5. '}")
' → logprob: -4.229034423828125
    6. ')")
' → logprob: -5.354034423828125
    7. '}' → logprob: -5.979034423828125
    8. '           ' → logprob: -6.479034423828125
    9. '       ' → logprob: -7.604034423828125
    10. ' )' → logprob: -7.854034423828125

Token 947: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17123253643512726
    2. '               ' → logprob: -2.1712324619293213
    3. '   ' → logprob: -4.2962327003479
    4. '       ' → logprob: -4.2962327003479
    5. '                   ' → logprob: -5.1712327003479
    6. '                       ' → logprob: -5.6712327003479
    7. '                           ' → logprob: -6.0462327003479
    8. '                               ' → logprob: -7.0462327003479
    9. '		' → logprob: -7.1712327003479
    10. '            ' → logprob: -7.4212327003479

Token 948: ' yield' (ID: 14376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0054487320594489574
    2. '               ' → logprob: -5.380448818206787
    3. 'if' → logprob: -7.880448818206787
    4. ' if' → logprob: -8.505448341369629
    5. 'print' → logprob: -9.005448341369629
    6. '                   ' → logprob: -10.005448341369629
    7. 'yield' (adapté à ' yield') → logprob: -10.630448341369629
    8. '       ' → logprob: -10.880448341369629
    9. '                       ' → logprob: -11.630448341369629
    10. '		' → logprob: -11.880448341369629

Token 949: ' str' (ID: 989)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.049620527774095535
    2. ' z' → logprob: -3.0496206283569336
    3. '(z' → logprob: -7.174620628356934
    4. ''z' → logprob: -9.799620628356934
    5. 'str' → logprob: -10.424620628356934
    6. 'i' → logprob: -10.424620628356934
    7. ' (' → logprob: -10.549620628356934
    8. '	z' → logprob: -10.924620628356934
    9. '(' → logprob: -11.174620628356934
    10. ''' → logprob: -11.174620628356934

Token 950: '(a' (ID: 6271)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.0014220185112208128
    2. '(sw' → logprob: -6.751421928405762
    3. 'z' → logprob: -8.751421928405762
    4. '(i' → logprob: -9.751421928405762
    5. '(' → logprob: -11.001421928405762
    6. '(s' → logprob: -11.876421928405762
    7. 'sw' → logprob: -12.126421928405762
    8. '(sz' → logprob: -12.751421928405762
    9. '((' → logprob: -13.001421928405762
    10. '(x' → logprob: -15.501421928405762

Token 951: ' ^' (ID: 7602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013106698170304298
    2. ' +' → logprob: -4.638106822967529
    3. '^' → logprob: -5.888106822967529
    4. ' ^' → logprob: -8.263106346130371
    5. ')' → logprob: -8.513106346130371
    6. '|' → logprob: -10.263106346130371
    7. ')+' → logprob: -11.263106346130371
    8. 'if' → logprob: -11.763106346130371
    9. '),' → logprob: -11.763106346130371
    10. '[' → logprob: -11.888106346130371

Token 952: ' sw' (ID: 2766)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.5238966345787048
    2. 'z' → logprob: -0.8988966345787048
    3. '(sw' → logprob: -7.64889669418335
    4. '(z' → logprob: -9.648896217346191
    5. ' sw' → logprob: -9.773896217346191
    6. ' z' → logprob: -9.773896217346191
    7. 'lo' → logprob: -10.523896217346191
    8. 'b' → logprob: -10.773896217346191
    9. 'sz' → logprob: -10.773896217346191
    10. '(' → logprob: -11.273896217346191

Token 953: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005530661903321743
    2. ' ^' → logprob: -6.130530834197998
    3. '^' → logprob: -6.880530834197998
    4. '+' → logprob: -7.130530834197998
    5. ')+' → logprob: -7.630530834197998
    6. ')
' → logprob: -7.880530834197998
    7. ' +' → logprob: -8.38053035736084
    8. ')^' → logprob: -9.13053035736084
    9. ',' → logprob: -9.88053035736084
    10. '^)' → logprob: -10.13053035736084

Token 954: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18154552578926086
    2. 'print' → logprob: -1.8065454959869385
    3. 'next' → logprob: -6.806545734405518
    4. 'output' → logprob: -7.681545734405518
    5. 'result' → logprob: -8.68154525756836
    6. ' for' → logprob: -11.05654525756836
    7. '```' → logprob: -11.05654525756836
    8. ')' → logprob: -12.55654525756836
    9. 'i' → logprob: -12.68154525756836
    10. 'n' → logprob: -12.80654525756836

Token 955: '('' (ID: 706)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.007895490154623985
    2. '('' → logprob: -6.007895469665527
    3. '(*' → logprob: -6.007895469665527
    4. '("\' → logprob: -6.132895469665527
    5. '(' → logprob: -7.507895469665527
    6. '(*(' → logprob: -9.382895469665527
    7. '()' → logprob: -9.757895469665527
    8. '(next' → logprob: -10.382895469665527
    9. '((' → logprob: -10.382895469665527
    10. '(list' → logprob: -12.132895469665527

Token 956: ' '.' (ID: 12662)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.7153777480125427
    2. ''' → logprob: -0.8403777480125427
    3. ''.' → logprob: -2.9653778076171875
    4. '\n' → logprob: -4.0903778076171875
    5. 'YES' → logprob: -5.2153778076171875
    6. '"\' → logprob: -6.3403778076171875
    7. '\' → logprob: -6.7153778076171875
    8. ' '.' → logprob: -6.9653778076171875
    9. '"' → logprob: -7.8403778076171875
    10. '1' → logprob: -7.9653778076171875

Token 957: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -8.351697033504024e-05
    2. ''' → logprob: -9.500083923339844
    3. ''.' → logprob: -12.375083923339844
    4. 'write' → logprob: -13.500083923339844
    5. 'print' → logprob: -13.625083923339844
    6. 'j' → logprob: -14.875083923339844
    7. '.' → logprob: -15.125083923339844
    8. 'next' → logprob: -15.750083923339844
    9. 'start' → logprob: -16.125083923339844
    10. 'jo' → logprob: -16.250083923339844

Token 958: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.005384349264204502
    2. 'output' → logprob: -5.25538444519043
    3. '(list' → logprob: -9.00538444519043
    4. 'list' → logprob: -10.50538444519043
    5. '(map' → logprob: -15.13038444519043
    6. '$output' → logprob: -16.88038444519043
    7. '(next' → logprob: -17.13038444519043
    8. ' output' → logprob: -17.75538444519043
    9. '(' → logprob: -17.75538444519043
    10. 'map' → logprob: -18.00538444519043

Token 959: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -7.896309739408025e-07
    2. 'numbers' → logprob: -15.500000953674316
    3. '```' → logprob: -16.0
    4. '_number' → logprob: -16.5
    5. '_n' → logprob: -16.75
    6. ')_' → logprob: -17.25
    7. 's' → logprob: -17.375
    8. '_values' → logprob: -17.375
    9. ')' → logprob: -17.5
    10. '()' → logprob: -17.625

Token 960: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0014230913948267698
    2. '()' → logprob: -6.626422882080078
    3. '())' → logprob: -10.001422882080078
    4. '()))
' → logprob: -10.501422882080078
    5. '))' → logprob: -11.376422882080078
    6. '()));' → logprob: -12.126422882080078
    7. '())).' → logprob: -12.751422882080078
    8. '())))' → logprob: -13.376422882080078
    9. '()))

' → logprob: -13.501422882080078
    10. '()))
' → logprob: -14.751422882080078


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 958
Tokens correctement prédits (1ère position, stricte): 341
Tokens correctement prédits (1ère position, avec adaptation): 358
Tokens correctement prédits (top 10): 755
Précision stricte (1ère position): 35.59%
Précision adaptée (1ère position): 37.37%
Précision (top 10): 78.81%
================================================================================
