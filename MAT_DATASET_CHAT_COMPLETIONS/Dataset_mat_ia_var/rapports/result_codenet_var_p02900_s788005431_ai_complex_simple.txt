================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import reduce
from itertools import chain, count, takewhile

def _gcd(a, b):
    return b if a % b == 0 else _gcd(b, a % b)

def _unique_prime_factors(n):
    def s(n):
        for x in chain([2], count(3, 2)):
            if x*x > n: break
            while n % x == 0:
                yield x
                n //= x
            if n == 1: break
        if n > 1:
            yield n
    return set(s(n))

def _io_readline_ints():
    # Simulate the most indirect reading method possible (could compress further)
    return list(map(int, filter(None, ''.join(sys.stdin.readline() for _ in range(1)).replace('\n', ' ').split(' '))))

def solve():
    A, B = _io_readline_ints()
    cd = reduce(lambda x, y: _gcd(x, y), [A, B])
    primes = _unique_prime_factors(cd)
    print((cd == 1) + len(primes) * (cd != 1) + 1 - (cd != 1))

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02374373935163021
    2. '\n' → logprob: -4.023743629455566
    3. '<|end|>' → logprob: -6.773743629455566
    4. '\' → logprob: -7.273743629455566
    5. 'newline' → logprob: -7.273743629455566
    6. 'import' → logprob: -7.398743629455566
    7. '```' → logprob: -7.648743629455566
    8. '' → logprob: -8.023743629455566
    9. '<|end|>' → logprob: -8.023743629455566
    10. 'print' → logprob: -8.398743629455566

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012081976048648357
    2. 'os' → logprob: -4.762082099914551
    3. ' collections' → logprob: -6.887082099914551
    4. ' ' → logprob: -7.512082099914551
    5. ' math' → logprob: -7.887082099914551
    6. ' Py' → logprob: -7.887082099914551
    7. ' pathlib' → logprob: -8.01208209991455
    8. ' typing' → logprob: -8.63708209991455
    9. 'collections' → logprob: -9.38708209991455
    10. ' datetime' → logprob: -9.38708209991455

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18088944256305695
    2. 'import' → logprob: -1.8058894872665405
    3. '.' → logprob: -7.18088960647583
    4. ' ' → logprob: -8.555889129638672
    5. '_import' → logprob: -9.305889129638672
    6. '	import' → logprob: -9.930889129638672
    7. '_' → logprob: -11.180889129638672
    8. '.import' → logprob: -11.430889129638672
    9. ' ' → logprob: -11.680889129638672
    10. ' .' → logprob: -12.305889129638672

Token 6: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.8543403744697571
    2. ' wraps' → logprob: -1.4793403148651123
    3. 'partial' → logprob: -2.1043403148651123
    4. ' l' → logprob: -2.3543403148651123
    5. 'l' → logprob: -2.6043403148651123
    6. ' partial' → logprob: -3.2293403148651123
    7. 'reduce' → logprob: -4.354340553283691
    8. ' reduce' → logprob: -6.854340553283691
    9. 'cmp' → logprob: -7.354340553283691
    10. 'cache' → logprob: -7.604340553283691

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.46892404556274414
    2. ',' → logprob: -1.8439240455627441
    3. '(' → logprob: -2.718924045562744
    4. '\n' → logprob: -2.968924045562744
    5. '\' → logprob: -3.093924045562744
    6. '.' → logprob: -3.968924045562744
    7. '```' → logprob: -4.968924045562744
    8. '' → logprob: -5.218924045562744
    9. ' ' → logprob: -5.468924045562744
    10. 'def' → logprob: -5.593924045562744

Token 8: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.188187837600708
    2. 'import' → logprob: -1.313187837600708
    3. 'def' → logprob: -2.438187837600708
    4. '(' → logprob: -2.563187837600708
    5. '\n' → logprob: -2.563187837600708
    6. '```' → logprob: -2.563187837600708
    7. '\' → logprob: -2.938187837600708
    8. '`' → logprob: -4.563187599182129
    9. '(
' → logprob: -4.688187599182129
    10. '.' → logprob: -5.438187599182129

Token 9: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.3864264488220215
    2. ' itertools' → logprob: -1.8864264488220215
    3. ' math' → logprob: -2.1364264488220215
    4. 'operator' → logprob: -3.6364264488220215
    5. ' collections' → logprob: -4.0114264488220215
    6. ' os' → logprob: -5.7614264488220215
    7. 'math' → logprob: -6.3864264488220215
    8. ' ' → logprob: -7.5114264488220215
    9. 'collections' → logprob: -7.7614264488220215
    10. ' typing' → logprob: -8.13642692565918

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.343805730342865
    2. 'import' → logprob: -1.3438057899475098
    3. '.' → logprob: -3.5938057899475098
    4. ' .' → logprob: -6.46880578994751
    5. '.import' → logprob: -7.09380578994751
    6. '	import' → logprob: -9.593805313110352
    7. ' ' → logprob: -10.343805313110352
    8. '_import' → logprob: -10.718805313110352
    9. '<|end|>' → logprob: -10.718805313110352
    10. '.im' → logprob: -10.968805313110352

Token 11: ' chain' (ID: 13464)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.45515212416648865
    2. 'group' → logprob: -1.955152153968811
    3. ' cycle' → logprob: -2.4551520347595215
    4. 'count' → logprob: -2.9551520347595215
    5. 'cycle' → logprob: -3.8301520347595215
    6. ' chain' → logprob: -3.8301520347595215
    7. ' count' → logprob: -4.8301520347595215
    8. ' permutations' → logprob: -5.0801520347595215
    9. 'chain' → logprob: -5.2051520347595215
    10. 'per' → logprob: -5.3301520347595215

Token 12: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6458115577697754
    2. ',' → logprob: -1.0208115577697754
    3. '\n' → logprob: -3.2708115577697754
    4. '<|end|>' → logprob: -3.7708115577697754
    5. '```' → logprob: -3.8958115577697754
    6. '.' → logprob: -4.020811557769775
    7. '\' → logprob: -5.520811557769775
    8. '
' → logprob: -5.895811557769775
    9. '

' → logprob: -6.520811557769775
    10. 'def' → logprob: -6.645811557769775

Token 13: ' count' (ID: 3605)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5117387771606445
    2. 'cycle' → logprob: -2.2617387771606445
    3. 'count' → logprob: -2.6367387771606445
    4. 'is' → logprob: -3.1367387771606445
    5. ' is' → logprob: -3.1367387771606445
    6. 'group' → logprob: -3.5117387771606445
    7. ' cycle' → logprob: -3.6367387771606445
    8. 'product' → logprob: -3.7617387771606445
    9. ' group' → logprob: -4.3867387771606445
    10. ' product' → logprob: -4.6367387771606445

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7951758503913879
    2. 'import' → logprob: -1.1701757907867432
    3. '\' → logprob: -2.545175790786743
    4. '\n' → logprob: -3.045175790786743
    5. '' → logprob: -3.795175790786743
    6. 'def' → logprob: -4.295176029205322
    7. '

' → logprob: -4.295176029205322
    8. ',
' → logprob: -4.420176029205322
    9. '#' → logprob: -4.545176029205322
    10. '
' → logprob: -4.795176029205322

Token 15: ' take' (ID: 2304)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.36384743452072144
    2. ' cycle' → logprob: -2.488847494125366
    3. 'is' → logprob: -3.113847494125366
    4. ' is' → logprob: -3.738847494125366
    5. 'group' → logprob: -3.738847494125366
    6. 'repeat' → logprob: -3.863847494125366
    7. 'take' → logprob: -3.863847494125366
    8. 'drop' → logprob: -3.988847494125366
    9. 'filter' → logprob: -4.113847255706787
    10. 'acc' → logprob: -4.363847255706787

Token 16: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0013335748808458447
    2. 'import' → logprob: -7.376333713531494
    3. 'w' → logprob: -8.751333236694336
    4. '_' → logprob: -8.751333236694336
    5. 'until' → logprob: -9.626333236694336
    6. 'from' → logprob: -9.626333236694336
    7. 'While' → logprob: -9.876333236694336
    8. 'exact' → logprob: -10.001333236694336
    9. 'wh' → logprob: -10.626333236694336
    10. 'n' → logprob: -11.001333236694336

Token 17: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9360012412071228
    2. '(' → logprob: -1.4360013008117676
    3. 'import' → logprob: -2.1860013008117676
    4. '.' → logprob: -3.1860013008117676
    5. '\' → logprob: -3.3110013008117676
    6. '```' → logprob: -3.4360013008117676
    7. 'def' → logprob: -3.5610013008117676
    8. '(
' → logprob: -3.6860013008117676
    9. '\n' → logprob: -4.061001300811768
    10. '
' → logprob: -4.186001300811768

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48227429389953613
    2. ',' → logprob: -1.3572742938995361
    3. 'import' → logprob: -3.357274293899536
    4. '#' → logprob: -3.607274293899536
    5. '(' → logprob: -4.232274055480957
    6. ',
' → logprob: -4.482274055480957
    7. '```' → logprob: -4.732274055480957
    8. '\' → logprob: -5.607274055480957
    9. '
' → logprob: -5.982274055480957
    10. '(
' → logprob: -5.982274055480957

Token 19: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25549712777137756
    2. ' factorial' → logprob: -1.7554970979690552
    3. '_' → logprob: -4.630496978759766
    4. ' space' → logprob: -4.755496978759766
    5. ' factor' → logprob: -5.380496978759766
    6. ' reduce' → logprob: -5.630496978759766
    7. ' map' → logprob: -5.630496978759766
    8. ' my' → logprob: -5.880496978759766
    9. ' _' → logprob: -5.880496978759766
    10. ' add' → logprob: -6.005496978759766

Token 20: 'g' (ID: 70)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.333054780960083
    2. 'compose' → logprob: -1.958054780960083
    3. 'acc' → logprob: -2.083054780960083
    4. 'flatten' → logprob: -2.458054780960083
    5. 'chain' → logprob: -2.708054780960083
    6. 'is' → logprob: -2.708054780960083
    7. 'partial' → logprob: -3.333054780960083
    8. 'g' → logprob: -3.583054780960083
    9. 'group' → logprob: -3.708054780960083
    10. 'merge' → logprob: -4.083054542541504

Token 21: 'cd' (ID: 8301)
  Prédit: 'enerate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enerate' → logprob: -0.7661585211753845
    2. 'enerator' → logprob: -1.1411585807800293
    3. 'en' → logprob: -2.0161585807800293
    4. 'roup' → logprob: -2.8911585807800293
    5. 'ener' → logprob: -4.391158580780029
    6. '_generator' → logprob: -5.516158580780029
    7. 'et' → logprob: -6.141158580780029
    8. 'ene' → logprob: -6.641158580780029
    9. 'enerated' → logprob: -6.641158580780029
    10. '_generate' → logprob: -7.141158580780029

Token 22: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016820160672068596
    2. '(a' → logprob: -4.266819953918457
    3. ' (' → logprob: -6.391819953918457
    4. '(x' → logprob: -7.891819953918457
    5. '_' → logprob: -8.141819953918457
    6. '<|end|>' → logprob: -9.641819953918457
    7. '(token' → logprob: -10.516819953918457
    8. '(n' → logprob: -10.516819953918457
    9. '<|end|>' → logprob: -10.766819953918457
    10. '(value' → logprob: -10.891819953918457

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011010414455085993
    2. ',b' → logprob: -7.251101016998291
    3. ' ,' → logprob: -8.00110149383545
    4. ',a' → logprob: -11.00110149383545
    5. ',)' → logprob: -11.00110149383545
    6. '_,' → logprob: -12.00110149383545
    7. ')' → logprob: -12.50110149383545
    8. ',g' → logprob: -12.87610149383545
    9. 'b' → logprob: -12.87610149383545
    10. ' ' → logprob: -14.00110149383545

Token 24: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759431719779968
    2. 'b' → logprob: -0.8259431719779968
    3. ' ' → logprob: -13.325942993164062
    4. ')b' → logprob: -14.200942993164062
    5. '<|end|>' → logprob: -14.700942993164062
    6. ',b' → logprob: -15.200942993164062
    7. ' ' → logprob: -15.575942993164062
    8. '	b' → logprob: -15.700942993164062
    9. '*b' → logprob: -16.325942993164062
    10. ' )' → logprob: -16.575942993164062

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010176748037338257
    2. ')' → logprob: -4.635176658630371
    3. ',' → logprob: -8.135176658630371
    4. '):
' → logprob: -9.135176658630371
    5. '),' → logprob: -11.510176658630371
    6. ' ):' → logprob: -12.885176658630371
    7. '   ' → logprob: -13.760176658630371
    8. ')=' → logprob: -13.760176658630371
    9. '):
' → logprob: -14.135176658630371
    10. ':' → logprob: -14.510176658630371

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1892356872558594
    2. ' :' → logprob: -1.1892356872558594
    3. ':' → logprob: -1.5642356872558594
    4. ' ' → logprob: -2.4392356872558594
    5. ' return' → logprob: -2.5642356872558594
    6. 'return' → logprob: -5.314235687255859
    7. '    ' → logprob: -5.814235687255859
    8. ':return' → logprob: -5.814235687255859
    9. '  ' → logprob: -6.314235687255859
    10. '	return' → logprob: -6.814235687255859

Token 27: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.614544153213501
    2. '   ' → logprob: -0.989544153213501
    3. '    ' → logprob: -3.364544153213501
    4. 'return' (adapté à ' return') → logprob: -3.614544153213501
    5. ' if' → logprob: -4.364543914794922
    6. ' while' → logprob: -4.489543914794922
    7. 'if' → logprob: -7.614543914794922
    8. ' ' → logprob: -7.614543914794922
    9. '       ' → logprob: -8.364543914794922
    10. '```' → logprob: -8.489543914794922

Token 28: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2051977813243866
    2. 'a' → logprob: -1.705197811126709
    3. ' ' → logprob: -6.080197811126709
    4. ' gcd' → logprob: -7.080197811126709
    5. ' reduce' → logprob: -7.830197811126709
    6. ' abs' → logprob: -9.70519733428955
    7. '   ' → logprob: -9.95519733428955
    8. '  ' → logprob: -10.33019733428955
    9. 'reduce' → logprob: -10.58019733428955
    10. ' math' → logprob: -10.70519733428955

Token 29: ' if' (ID: 538)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3804345726966858
    2. ' and' → logprob: -1.880434513092041
    3. ' if' → logprob: -2.380434513092041
    4. '%' → logprob: -3.130434513092041
    5. 'and' → logprob: -4.130434513092041
    6. 'if' → logprob: -4.880434513092041
    7. ' ' → logprob: -6.130434513092041
    8. ' or' → logprob: -6.380434513092041
    9. '0' → logprob: -11.1304349899292
    10. '  ' → logprob: -11.2554349899292

Token 30: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07111756503582001
    2. ' a' → logprob: -3.321117639541626
    3. ' not' → logprob: -3.821117639541626
    4. 'not' → logprob: -4.571117401123047
    5. '0' → logprob: -8.946117401123047
    6. '!' → logprob: -9.821117401123047
    7. 'b' → logprob: -9.946117401123047
    8. '   ' → logprob: -10.196117401123047
    9. ' ' → logprob: -12.321117401123047
    10. ' b' → logprob: -12.321117401123047

Token 31: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.09070611000061035
    2. ' %' → logprob: -3.0907061100006104
    3. '==' → logprob: -3.3407061100006104
    4. ' ==' → logprob: -5.340705871582031
    5. '%b' → logprob: -7.590705871582031
    6. ' ' → logprob: -8.590705871582031
    7. '%d' → logprob: -9.340705871582031
    8. '%s' → logprob: -9.465705871582031
    9. '%i' → logprob: -10.340705871582031
    10. ' is' → logprob: -10.590705871582031

Token 32: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001183204003609717
    2. ' b' → logprob: -6.751183032989502
    3. ' ' → logprob: -11.87618350982666
    4. '<|end|>' → logprob: -12.12618350982666
    5. '	b' → logprob: -15.75118350982666
    6. '%b' → logprob: -16.501182556152344
    7. '>b' → logprob: -16.626182556152344
    8. '  ' → logprob: -16.876182556152344
    9. '_b' → logprob: -17.501182556152344
    10. '0' → logprob: -17.501182556152344

Token 33: ' ==' (ID: 951)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7485785484313965
    2. '==' → logprob: -0.9985785484313965
    3. 'else' → logprob: -2.3735785484313965
    4. ' ==' → logprob: -3.3735785484313965
    5. ' ' → logprob: -3.7485785484313965
    6. '%' → logprob: -5.1235785484313965
    7. '=' → logprob: -7.2485785484313965
    8. '0' → logprob: -8.123579025268555
    9. ' %' → logprob: -8.373579025268555
    10. '	else' → logprob: -9.498579025268555

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028076060116291046
    2. ' ' → logprob: -5.8778076171875
    3. 'b' → logprob: -12.8778076171875
    4. ' b' → logprob: -16.6278076171875
    5. '۰' → logprob: -17.0028076171875
    6. ' ' → logprob: -18.1278076171875
    7. '   ' → logprob: -18.2528076171875
    8. ' ' → logprob: -18.3153076171875
    9. '1' → logprob: -18.4403076171875
    10. '000' → logprob: -18.4403076171875

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00103352265432477
    2. ' ' → logprob: -6.876033306121826
    3. 'b' → logprob: -14.376033782958984
    4. '۰' → logprob: -17.501033782958984
    5. '000' → logprob: -17.626033782958984
    6. '```' → logprob: -18.001033782958984
    7. '  ' → logprob: -18.126033782958984
    8. '   ' → logprob: -18.501033782958984
    9. ' ' → logprob: -18.563533782958984
    10. '00' → logprob: -18.626033782958984

Token 36: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.016042111441493034
    2. 'else' → logprob: -4.141042232513428
    3. ' ' → logprob: -12.14104175567627
    4. '	else' → logprob: -13.01604175567627
    5. '   ' → logprob: -16.516042709350586
    6. '  ' → logprob: -17.016042709350586
    7. '    ' → logprob: -17.016042709350586
    8. ' ' → logprob: -17.016042709350586
    9. '_else' → logprob: -17.516042709350586
    10. '0' → logprob: -17.766042709350586

Token 37: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.13096226751804352
    2. '_g' → logprob: -2.130962371826172
    3. ' gcd' → logprob: -5.755962371826172
    4. '_' → logprob: -8.005962371826172
    5. ' ' → logprob: -8.005962371826172
    6. 'g' → logprob: -10.005962371826172
    7. '_a' → logprob: -11.380962371826172
    8. ' a' → logprob: -11.380962371826172
    9. ' b' → logprob: -11.630962371826172
    10. '_r' → logprob: -11.630962371826172

Token 38: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0016687574097886682
    2. 'gc' → logprob: -6.751668930053711
    3. ' gcd' → logprob: -8.251668930053711
    4. '_g' → logprob: -8.626668930053711
    5. 'gd' → logprob: -11.251668930053711
    6. '.g' → logprob: -11.501668930053711
    7. ' ' → logprob: -12.251668930053711
    8. 'cd' → logprob: -12.251668930053711
    9. 'gcc' → logprob: -12.501668930053711
    10. '	g' → logprob: -12.501668930053711

Token 39: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.02954091690480709
    2. 'c' → logprob: -4.154541015625
    3. '_cd' → logprob: -4.529541015625
    4. '_c' → logprob: -7.029541015625
    5. '	cd' → logprob: -7.029541015625
    6. '	c' → logprob: -7.529541015625
    7. '.cd' → logprob: -9.529541015625
    8. '.c' → logprob: -9.529541015625
    9. 'cdf' → logprob: -9.529541015625
    10. 'cdn' → logprob: -10.279541015625

Token 40: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6332072019577026
    2. '(b' → logprob: -0.7582072019577026
    3. ' (' → logprob: -7.758207321166992
    4. '(
' → logprob: -9.508207321166992
    5. '(chain' → logprob: -10.508207321166992
    6. '(a' → logprob: -10.758207321166992
    7. 'b' → logprob: -11.633207321166992
    8. '(None' → logprob: -11.758207321166992
    9. '((' → logprob: -12.133207321166992
    10. '(B' → logprob: -12.258207321166992

Token 41: ',' (ID: 11)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.19025355577468872
    2. '%' → logprob: -2.190253496170044
    3. ' ' → logprob: -3.440253496170044
    4. ',' → logprob: -4.065253734588623
    5. ' ,' → logprob: -4.565253734588623
    6. ' a' → logprob: -6.565253734588623
    7. 'a' → logprob: -9.065253257751465
    8. ')' → logprob: -9.940253257751465
    9. ' %,' → logprob: -9.940253257751465
    10. '%c' → logprob: -10.190253257751465

Token 42: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10021648555994034
    2. ' a' → logprob: -2.3502163887023926
    3. ')' → logprob: -11.85021686553955
    4. ' ' → logprob: -13.85021686553955
    5. ')a' → logprob: -14.47521686553955
    6. '	a' → logprob: -15.35021686553955
    7. '(a' → logprob: -15.72521686553955
    8. '_a' → logprob: -15.72521686553955
    9. ' )' → logprob: -16.100215911865234
    10. '%' → logprob: -16.350215911865234

Token 43: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03805847465991974
    2. '%' → logprob: -3.2880585193634033
    3. ' %)' → logprob: -12.038058280944824
    4. ')' → logprob: -12.663058280944824
    5. '%b' → logprob: -13.038058280944824
    6. ' ' → logprob: -13.038058280944824
    7. ' ' → logprob: -13.163058280944824
    8. ' )' → logprob: -13.663058280944824
    9. ' %
' → logprob: -15.663058280944824
    10. '%i' → logprob: -15.913058280944824

Token 44: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07891523092985153
    2. ' b' → logprob: -2.5789151191711426
    3. ' ' → logprob: -10.7039155960083
    4. ')' → logprob: -12.9539155960083
    5. ')b' → logprob: -15.9539155960083
    6. ' )' → logprob: -16.078914642333984
    7. '<|end|>' → logprob: -16.203914642333984
    8. 'a' → logprob: -16.453914642333984
    9. '_b' → logprob: -16.953914642333984
    10. '```' → logprob: -17.578914642333984

Token 45: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.37500286102295
    3. ')
' → logprob: -14.37500286102295
    4. '))' → logprob: -15.50000286102295
    5. ')a' → logprob: -16.375001907348633
    6. ')`' → logprob: -16.625001907348633
    7. '),' → logprob: -16.750001907348633
    8. '   ' → logprob: -17.000001907348633
    9. ')return' → logprob: -17.125001907348633
    10. ')))' → logprob: -17.250001907348633

Token 46: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.145175814628601
    2. ':' → logprob: -1.270175814628601
    3. '(' → logprob: -1.895175814628601
    4. '_' → logprob: -1.895175814628601
    5. ',' → logprob: -2.8951759338378906
    6. 'def' → logprob: -3.7701759338378906
    7. '(
' → logprob: -5.520175933837891
    8. '
' → logprob: -5.645175933837891
    9. '.' → logprob: -5.770175933837891
    10. '```' → logprob: -6.270175933837891

Token 47: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5092287063598633
    2. ' gcd' → logprob: -1.3842287063598633
    3. ' l' → logprob: -2.0092287063598633
    4. ' _' → logprob: -5.259228706359863
    5. '_' → logprob: -6.134228706359863
    6. ' space' → logprob: -6.759228706359863
    7. ' g' → logprob: -7.009228706359863
    8. ' find' → logprob: -7.259228706359863
    9. ' factor' → logprob: -7.509228706359863
    10. ' calculate' → logprob: -7.634228706359863

Token 48: 'unique' (ID: 22365)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.005879614036530256
    2. 'g' → logprob: -5.5058794021606445
    3. 'lc' → logprob: -7.8808794021606445
    4. 'lcd' → logprob: -8.130879402160645
    5. 'is' → logprob: -8.380879402160645
    6. 'cop' → logprob: -8.755879402160645
    7. 'pow' → logprob: -9.130879402160645
    8. 'sum' → logprob: -9.255879402160645
    9. '_l' → logprob: -9.630879402160645
    10. 'max' → logprob: -10.255879402160645

Token 49: '_prime' (ID: 98616)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6958933472633362
    2. '_' → logprob: -0.8208933472633362
    3. '_elements' → logprob: -3.4458932876586914
    4. '_items' → logprob: -4.570893287658691
    5. '(_' → logprob: -5.695893287658691
    6. '_values' → logprob: -6.195893287658691
    7. '_(' → logprob: -6.320893287658691
    8. '_tokens' → logprob: -6.445893287658691
    9. 's' → logprob: -6.570893287658691
    10. '(iter' → logprob: -6.695893287658691

Token 50: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0693667009472847
    2. 'f' → logprob: -3.194366693496704
    3. 's' → logprob: -4.444366931915283
    4. '_factor' → logprob: -4.569366931915283
    5. 'factor' → logprob: -6.319366931915283
    6. '```' → logprob: -6.569366931915283
    7. '_div' → logprob: -7.944366931915283
    8. '_' → logprob: -8.569366455078125
    9. ' ' → logprob: -10.444366455078125
    10. ' factors' → logprob: -10.694366455078125

Token 51: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.08158688992261887
    2. 'actor' → logprob: -2.5815868377685547
    3. 'a' → logprob: -6.456586837768555
    4. 'act' → logprob: -7.331586837768555
    5. 'acto' → logprob: -8.956586837768555
    6. '```' → logprob: -9.081586837768555
    7. 'ac' → logprob: -9.456586837768555
    8. 'acters' → logprob: -10.206586837768555
    9. 'acts' → logprob: -10.456586837768555
    10. 'acter' → logprob: -11.331586837768555

Token 52: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007768734358251095
    2. '(n' → logprob: -7.625776767730713
    3. ' (' → logprob: -9.125777244567871
    4. '(a' → logprob: -9.125777244567871
    5. '(x' → logprob: -9.750777244567871
    6. '(i' → logprob: -13.125777244567871
    7. '(s' → logprob: -13.625777244567871
    8. '(`' → logprob: -13.875777244567871
    9. '("("' → logprob: -13.875777244567871
    10. '(num' → logprob: -14.000777244567871

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013195235515013337
    2. ')' → logprob: -6.876319408416748
    3. ' ):' → logprob: -8.626319885253906
    4. ':' → logprob: -10.001319885253906
    5. ',' → logprob: -10.126319885253906
    6. '):
' → logprob: -11.126319885253906
    7. ' ' → logprob: -13.376319885253906
    8. '   ' → logprob: -13.376319885253906
    9. ''):' → logprob: -14.251319885253906
    10. '=' → logprob: -14.626319885253906

Token 54: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5640572309494019
    2. ' []' → logprob: -1.8140572309494019
    3. '   ' → logprob: -2.5640573501586914
    4. ' for' → logprob: -2.6890573501586914
    5. ' def' → logprob: -2.9390573501586914
    6. ' :' → logprob: -3.0640573501586914
    7. ' ```' → logprob: -3.0640573501586914
    8. 'def' → logprob: -3.1890573501586914
    9. '    ' → logprob: -3.5640573501586914
    10. ' result' → logprob: -3.8140573501586914

Token 55: ' def' (ID: 1056)
  Prédit: ' factors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.19209106266498566
    2. ' for' → logprob: -2.8170909881591797
    3. ' primes' → logprob: -3.5670909881591797
    4. ' i' → logprob: -4.06709098815918
    5. 'for' → logprob: -4.19209098815918
    6. 'f' → logprob: -4.81709098815918
    7. ' def' → logprob: -4.94209098815918
    8. ' result' → logprob: -5.19209098815918
    9. 'pr' → logprob: -5.31709098815918
    10. ' return' → logprob: -5.31709098815918

Token 56: ' s' (ID: 265)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2025439441204071
    2. ' trial' → logprob: -2.7025439739227295
    3. ' helper' → logprob: -2.9525439739227295
    4. ' prime' → logprob: -4.07754373550415
    5. ' gen' → logprob: -4.82754373550415
    6. ' factors' → logprob: -4.95254373550415
    7. '_' → logprob: -4.95254373550415
    8. ' f' → logprob: -5.07754373550415
    9. ' factor' → logprob: -5.45254373550415
    10. ' gcd' → logprob: -5.95254373550415

Token 57: '(n' (ID: 2406)
  Prédit: 'qrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -1.0818687677383423
    2. 'ieve' → logprob: -1.2068687677383423
    3. 'et' → logprob: -1.3318687677383423
    4. 't' → logprob: -3.5818686485290527
    5. 'mall' → logprob: -3.7068686485290527
    6. 'q' → logprob: -4.456868648529053
    7. 'plit' → logprob: -5.206868648529053
    8. 'qr' → logprob: -5.456868648529053
    9. 'quare' → logprob: -5.581868648529053
    10. 'earch' → logprob: -5.956868648529053

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1921595185995102
    2. '=' → logprob: -2.192159414291382
    3. ',' → logprob: -3.692159414291382
    4. ' ):' → logprob: -4.567159652709961
    5. '):
' → logprob: -4.692159652709961
    6. 'qrt' → logprob: -4.942159652709961
    7. ')' → logprob: -6.442159652709961
    8. '%' → logprob: -6.442159652709961
    9. ' =' → logprob: -6.692159652709961
    10. ' %' → logprob: -7.317159652709961

Token 59: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.0259969234466553
    2. '       ' → logprob: -1.0259969234466553
    3. '   ' → logprob: -2.4009969234466553
    4. ' ' → logprob: -2.7759969234466553
    5. ' for' → logprob: -3.1509969234466553
    6. ' if' → logprob: -3.6509969234466553
    7. '        ' → logprob: -4.650997161865234
    8. 'for' → logprob: -4.650997161865234
    9. ' i' → logprob: -4.775997161865234
    10. 'if' → logprob: -5.400997161865234

Token 60: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5477389097213745
    2. ' for' → logprob: -1.1727389097213745
    3. 'i' → logprob: -3.047739028930664
    4. ' i' → logprob: -3.797739028930664
    5. 'if' → logprob: -4.922739028930664
    6. 'yield' → logprob: -5.172739028930664
    7. ' if' → logprob: -5.297739028930664
    8. '   ' → logprob: -5.422739028930664
    9. 'while' → logprob: -5.547739028930664
    10. ' while' → logprob: -6.047739028930664

Token 61: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.017981473356485367
    2. 'i' → logprob: -4.64298152923584
    3. ' p' → logprob: -5.14298152923584
    4. ' d' → logprob: -6.76798152923584
    5. ' ' → logprob: -7.26798152923584
    6. 'p' → logprob: -9.01798152923584
    7. ' f' → logprob: -9.26798152923584
    8. '	i' → logprob: -9.64298152923584
    9. '2' → logprob: -9.76798152923584
    10. 'd' → logprob: -9.89298152923584

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007727012853138149
    2. 'in' → logprob: -7.250772476196289
    3. ' ' → logprob: -10.000772476196289
    4. ',' → logprob: -12.625772476196289
    5. '2' → logprob: -12.875772476196289
    6. '  ' → logprob: -13.500772476196289
    7. '   ' → logprob: -13.500772476196289
    8. 'x' → logprob: -13.625772476196289
    9. ' i' → logprob: -13.875772476196289
    10. 'import' → logprob: -14.000772476196289

Token 63: ' chain' (ID: 13464)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2829594016075134
    2. 'range' → logprob: -2.157959461212158
    3. ' count' → logprob: -2.407959461212158
    4. 'count' → logprob: -3.282959461212158
    5. ' chain' → logprob: -6.282959461212158
    6. 'chain' → logprob: -7.407959461212158
    7. ' ' → logprob: -8.282958984375
    8. ' xrange' → logprob: -8.907958984375
    9. '	range' → logprob: -9.407958984375
    10. 's' → logprob: -9.657958984375

Token 64: '([' (ID: 5194)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.290967732667923
    2. '(range' → logprob: -1.4159677028656006
    3. '(' → logprob: -4.79096794128418
    4. '([' → logprob: -7.29096794128418
    5. '(from' → logprob: -8.16596794128418
    6. 'from' → logprob: -8.79096794128418
    7. '((' → logprob: -9.04096794128418
    8. '(t' → logprob: -9.79096794128418
    9. '(chain' → logprob: -10.29096794128418
    10. ' (' → logprob: -10.79096794128418

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006527475197799504
    2. ' ' → logprob: -7.50065279006958
    3. '   ' → logprob: -10.250652313232422
    4. '
' → logprob: -11.250652313232422
    5. '1' → logprob: -11.500652313232422
    6. '     ' → logprob: -12.438152313232422
    7. ']' → logprob: -12.563152313232422
    8. '  ' → logprob: -12.625652313232422
    9. ')' → logprob: -13.000652313232422
    10. '    ' → logprob: -13.063152313232422

Token 66: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0008728709071874619
    2. ' ],' → logprob: -7.50087308883667
    3. ',' → logprob: -8.625872611999512
    4. ']' → logprob: -9.125872611999512
    5. '],[' → logprob: -11.625872611999512
    6. '],
' → logprob: -12.250872611999512
    7. ' ' → logprob: -12.750872611999512
    8. '),' → logprob: -13.000872611999512
    9. '()],' → logprob: -13.250872611999512
    10. '])' → logprob: -13.500872611999512

Token 67: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.578316867351532
    2. 'count' → logprob: -0.828316867351532
    3. '	count' → logprob: -7.078316688537598
    4. ' range' → logprob: -7.078316688537598
    5. 'range' → logprob: -7.828316688537598
    6. ' ' → logprob: -9.453316688537598
    7. '   ' → logprob: -10.203316688537598
    8. '```' → logprob: -10.578316688537598
    9. ')' → logprob: -10.828316688537598
    10. '    ' → logprob: -11.078316688537598

Token 68: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.2020991056924686e-05
    2. '=' → logprob: -11.250032424926758
    3. 'from' → logprob: -11.625032424926758
    4. '2' → logprob: -12.750032424926758
    5. ')' → logprob: -13.625032424926758
    6. '(n' → logprob: -14.000032424926758
    7. '3' → logprob: -14.125032424926758
    8. ' from' → logprob: -14.250032424926758
    9. ' ' → logprob: -14.375032424926758
    10. ' (' → logprob: -14.375032424926758

Token 69: '3' (ID: 18)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41433390974998474
    2. '3' → logprob: -1.1643339395523071
    3. '2' → logprob: -3.6643338203430176
    4. ')' → logprob: -7.539333820343018
    5. ' ' → logprob: -7.789333820343018
    6. ')(' → logprob: -8.914334297180176
    7. ',' → logprob: -9.664334297180176
    8. '4' → logprob: -10.414334297180176
    9. 'start' → logprob: -10.539334297180176
    10. '   ' → logprob: -10.851834297180176

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011641718447208405
    2. ' ,' → logprob: -9.250116348266602
    3. '2' → logprob: -11.875116348266602
    4. '),' → logprob: -12.000116348266602
    5. ' ' → logprob: -13.625116348266602
    6. '   ' → logprob: -13.625116348266602
    7. '7' → logprob: -14.250116348266602
    8. ')' → logprob: -14.250116348266602
    9. '```' → logprob: -14.750116348266602
    10. '):' → logprob: -15.000116348266602

Token 71: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10021767020225525
    2. ' ' → logprob: -2.350217580795288
    3. ')' → logprob: -12.600217819213867
    4. '  ' → logprob: -12.975217819213867
    5. ' ' → logprob: -13.787717819213867
    6. '```' → logprob: -14.037717819213867
    7. '   ' → logprob: -14.100217819213867
    8. ' )' → logprob: -14.225217819213867
    9. '))' → logprob: -14.975217819213867
    10. '    ' → logprob: -15.600217819213867

Token 72: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011778471525758505
    2. ' ' → logprob: -6.751177787780762
    3. ')' → logprob: -12.376177787780762
    4. '))' → logprob: -14.126177787780762
    5. '   ' → logprob: -14.813677787780762
    6. '  ' → logprob: -15.001177787780762
    7. '```' → logprob: -15.001177787780762
    8. '),' → logprob: -15.501177787780762
    9. '):
' → logprob: -15.501177787780762
    10. ' )' → logprob: -15.563677787780762

Token 73: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.07480204850435257
    2. '):' → logprob: -3.4498021602630615
    3. ')' → logprob: -3.5748021602630615
    4. '))' → logprob: -5.449801921844482
    5. ' ))' → logprob: -5.574801921844482
    6. ')):
' → logprob: -6.074801921844482
    7. ' ' → logprob: -6.949801921844482
    8. ' ):' → logprob: -7.324801921844482
    9. '),' → logprob: -9.07480239868164
    10. ' )' → logprob: -9.94980239868164

Token 74: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07157598435878754
    2. '           ' → logprob: -3.071575880050659
    3. '       ' → logprob: -5.071576118469238
    4. '):' → logprob: -5.071576118469238
    5. ' :' → logprob: -5.196576118469238
    6. ':
' → logprob: -6.196576118469238
    7. ',' → logprob: -7.071576118469238
    8. '        ' → logprob: -7.571576118469238
    9. '<|end|>' → logprob: -7.571576118469238
    10. ' ' → logprob: -9.321576118469238

Token 75: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12452725321054459
    2. 'if' (adapté à ' if') → logprob: -2.2495272159576416
    3. '               ' → logprob: -4.874527454376221
    4. ' ' → logprob: -6.374527454376221
    5. '                ' → logprob: -6.999527454376221
    6. 'yield' → logprob: -8.124526977539062
    7. '            ' → logprob: -8.249526977539062
    8. ' while' → logprob: -8.374526977539062
    9. ' yield' → logprob: -8.624526977539062
    10. '<|end|>' → logprob: -9.124526977539062

Token 76: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7204497456550598
    2. ' x' → logprob: -0.7204497456550598
    3. 'n' → logprob: -3.970449686050415
    4. ' n' → logprob: -4.845449924468994
    5. '	x' → logprob: -9.470449447631836
    6. ' ' → logprob: -9.845449447631836
    7. '   ' → logprob: -10.470449447631836
    8. 's' → logprob: -11.345449447631836
    9. '	n' → logprob: -11.845449447631836
    10. ' ' → logprob: -12.720449447631836

Token 77: '*x' (ID: 46987)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01012199092656374
    2. '*' → logprob: -4.635121822357178
    3. '*x' → logprob: -8.135122299194336
    4. '**' → logprob: -10.510122299194336
    5. '*>' → logprob: -11.385122299194336
    6. ' >' → logprob: -11.760122299194336
    7. ' **' → logprob: -12.260122299194336
    8. '*f' → logprob: -12.385122299194336
    9. ' *>' → logprob: -12.760122299194336
    10. '*i' → logprob: -12.885122299194336

Token 78: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1604352444410324
    2. '>' → logprob: -1.9104351997375488
    3. ' <=' → logprob: -9.160435676574707
    4. '<|end|>' → logprob: -10.285435676574707
    5. '<=' → logprob: -10.410435676574707
    6. ' ' → logprob: -10.910435676574707
    7. '<|end|>' → logprob: -11.910435676574707
    8. '">' → logprob: -12.410435676574707
    9. ' ' → logprob: -13.035435676574707
    10. '0' → logprob: -13.535435676574707

Token 79: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.033660680055618286
    2. 'n' → logprob: -3.408660650253296
    3. '	n' → logprob: -11.283660888671875
    4. ' ' → logprob: -13.908660888671875
    5. ' ' → logprob: -14.033660888671875
    6. ')n' → logprob: -15.658660888671875
    7. '<|end|>' → logprob: -15.908660888671875
    8. '<|end|>' → logprob: -16.408660888671875
    9. '_n' → logprob: -16.533660888671875
    10. '(n' → logprob: -17.158660888671875

Token 80: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004346329253166914
    2. ' or' → logprob: -5.6293463706970215
    3. ':return' → logprob: -7.7543463706970215
    4. ' :' → logprob: -9.254345893859863
    5. '):' → logprob: -9.879345893859863
    6. ':
' → logprob: -9.879345893859863
    7. ')' → logprob: -10.254345893859863
    8. ' and' → logprob: -10.754345893859863
    9. '   ' → logprob: -11.254345893859863
    10. ' ' → logprob: -11.254345893859863

Token 81: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24831528961658478
    2. ' ' → logprob: -1.8733153343200684
    3. ' return' → logprob: -3.3733153343200684
    4. ':' → logprob: -4.873315334320068
    5. '           ' → logprob: -4.873315334320068
    6. '                ' → logprob: -5.623315334320068
    7. ' break' → logprob: -6.248315334320068
    8. '            ' → logprob: -6.248315334320068
    9. ':return' → logprob: -6.623315334320068
    10. ' 
' → logprob: -6.748315334320068

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15590524673461914
    2. '\n' → logprob: -2.155905246734619
    3. '           ' → logprob: -5.280905246734619
    4. '<|end|>' → logprob: -5.405905246734619
    5. 'newline' → logprob: -6.030905246734619
    6. ' 
' → logprob: -6.030905246734619
    7. '
' → logprob: -6.280905246734619
    8. '' → logprob: -6.280905246734619
    9. '  
' → logprob: -6.405905246734619
    10. '            
' → logprob: -6.405905246734619

Token 83: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029488246887922287
    2. '           ' → logprob: -4.5294880867004395
    3. '
' → logprob: -5.4044880867004395
    4. '\n' → logprob: -5.7794880867004395
    5. '       ' → logprob: -6.0294880867004395
    6. '' → logprob: -6.6544880867004395
    7. '<|end|>' → logprob: -6.7794880867004395
    8. ' 
' → logprob: -7.1544880867004395
    9. '            
' → logprob: -7.2794880867004395
    10. '  
' → logprob: -7.4044880867004395

Token 84: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7166765928268433
    2. 'if' → logprob: -1.0916765928268433
    3. '           ' → logprob: -2.466676712036133
    4. '       ' → logprob: -2.966676712036133
    5. ' ' → logprob: -3.591676712036133
    6. ' yield' → logprob: -5.841676712036133
    7. '   ' → logprob: -6.091676712036133
    8. 'yield' → logprob: -6.091676712036133
    9. '        ' → logprob: -7.341676712036133
    10. '    ' → logprob: -7.466676712036133

Token 85: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.009785131551325321
    2. 'n' → logprob: -4.634785175323486
    3. '(n' → logprob: -10.884784698486328
    4. ' (' → logprob: -12.509784698486328
    5. '	n' → logprob: -12.759784698486328
    6. ' ' → logprob: -13.384784698486328
    7. ')n' → logprob: -14.009784698486328
    8. ' н' → logprob: -14.384784698486328
    9. '<|end|>' → logprob: -15.572284698486328
    10. '(' → logprob: -15.947284698486328

Token 86: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22738894820213318
    2. '%' → logprob: -1.6023889780044556
    3. ' ' → logprob: -6.727388858795166
    4. '%x' → logprob: -7.852388858795166
    5. '%e' → logprob: -8.852389335632324
    6. '%i' → logprob: -9.227389335632324
    7. '<|end|>' → logprob: -9.227389335632324
    8. ' %=' → logprob: -11.227389335632324
    9. '%n' → logprob: -11.602389335632324
    10. '<|end|>' → logprob: -12.102389335632324

Token 87: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2014375925064087
    2. ' x' → logprob: -1.7014375925064087
    3. '<|end|>' → logprob: -11.326437950134277
    4. '	x' → logprob: -11.951437950134277
    5. ' ' → logprob: -12.451437950134277
    6. '<|end|>' → logprob: -14.701437950134277
    7. '2' → logprob: -14.826437950134277
    8. '>x' → logprob: -15.451437950134277
    9. '{x' → logprob: -15.701437950134277
    10. '<x' → logprob: -16.07643699645996

Token 88: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4742874503135681
    2. '==' → logprob: -0.9742874503135681
    3. '=' → logprob: -9.224287033081055
    4. ' ' → logprob: -9.974287033081055
    5. '===' → logprob: -10.599287033081055
    6. ')==' → logprob: -10.849287033081055
    7. '0' → logprob: -12.099287033081055
    8. ']==' → logprob: -12.849287033081055
    9. ' =' → logprob: -12.974287033081055
    10. '```' → logprob: -12.974287033081055

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14267690479755402
    2. ' ' → logprob: -2.017676830291748
    3. ' ' → logprob: -14.392677307128906
    4. '  ' → logprob: -14.642677307128906
    5. '<|end|>' → logprob: -15.142677307128906
    6. '   ' → logprob: -16.017677307128906
    7. '	' → logprob: -16.267677307128906
    8. '۰' → logprob: -16.392677307128906
    9. ' ' → logprob: -16.955177307128906
    10. '    ' → logprob: -17.642677307128906

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028049908578395844
    2. ' ' → logprob: -5.877804756164551
    3. '  ' → logprob: -17.377805709838867
    4. '   ' → logprob: -18.252805709838867
    5. '00' → logprob: -19.002805709838867
    6. '<|end|>' → logprob: -19.002805709838867
    7. '۰' → logprob: -19.502805709838867
    8. '    ' → logprob: -20.065305709838867
    9. '```' → logprob: -20.065305709838867
    10. ' ' → logprob: -20.190305709838867

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026828988920897245
    2. ':
' → logprob: -6.002682685852051
    3. '):' → logprob: -8.87768268585205
    4. ' :' → logprob: -10.25268268585205
    5. '):
' → logprob: -11.12768268585205
    6. ',' → logprob: -12.50268268585205
    7. ':

' → logprob: -13.00268268585205
    8. '       ' → logprob: -13.37768268585205
    9. ' and' → logprob: -13.37768268585205
    10. ':
' → logprob: -13.50268268585205

Token 92: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0569082535803318
    2. ' ' → logprob: -4.306908130645752
    3. '                ' → logprob: -4.306908130645752
    4. '                
' → logprob: -4.931908130645752
    5. 'n' → logprob: -5.056908130645752
    6. '		       ' → logprob: -5.806908130645752
    7. '            ' → logprob: -6.306908130645752
    8. '	           ' → logprob: -6.431908130645752
    9. ' n' → logprob: -6.681908130645752
    10. '<|end|>' → logprob: -6.931908130645752

Token 93: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.1785392463207245
    2. 'yield' (adapté à ' yield') → logprob: -2.303539276123047
    3. 'n' → logprob: -3.428539276123047
    4. ' n' → logprob: -3.803539276123047
    5. '                ' → logprob: -5.428539276123047
    6. '	yield' → logprob: -5.928539276123047
    7. ' ' → logprob: -6.928539276123047
    8. '               ' → logprob: -8.053539276123047
    9. ' 
' → logprob: -9.428539276123047
    10. ' ' → logprob: -9.553539276123047

Token 94: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2519453167915344
    2. 'x' → logprob: -1.5019452571868896
    3. '	x' → logprob: -11.501945495605469
    4. ' ' → logprob: -12.126945495605469
    5. ' ' → logprob: -14.751945495605469
    6. '<|end|>' → logprob: -17.00194549560547
    7. 'n' → logprob: -17.37694549560547
    8. ' 
' → logprob: -17.87694549560547
    9. '2' → logprob: -17.93944549560547
    10. 'space' → logprob: -18.12694549560547

Token 95: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3609790802001953
    2. '                ' → logprob: -2.2359790802001953
    3. '                
' → logprob: -2.6109790802001953
    4. ' ' → logprob: -2.8609790802001953
    5. ',' → logprob: -4.110979080200195
    6. 'n' → logprob: -4.485979080200195
    7. '<|end|>' → logprob: -4.735979080200195
    8. '(n' → logprob: -5.360979080200195
    9. ' 
' → logprob: -5.610979080200195
    10. '                 
' → logprob: -5.860979080200195

Token 96: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2108725607395172
    2. ' ' → logprob: -2.3358726501464844
    3. 'n' → logprob: -3.5858726501464844
    4. '                ' → logprob: -3.9608726501464844
    5. ',' → logprob: -4.585872650146484
    6. '(n' → logprob: -4.960872650146484
    7. ' n' → logprob: -5.085872650146484
    8. '                
' → logprob: -5.210872650146484
    9. ')' → logprob: -5.710872650146484
    10. ' and' → logprob: -6.085872650146484

Token 97: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.1798247992992401
    2. ' n' → logprob: -1.8048248291015625
    3. '	n' → logprob: -9.804824829101562
    4. ' ' → logprob: -11.804824829101562
    5. '               ' → logprob: -11.804824829101562
    6. '                   ' → logprob: -12.804824829101562
    7. '                ' → logprob: -12.804824829101562
    8. '```' → logprob: -13.304824829101562
    9. '_n' → logprob: -14.179824829101562
    10. '            ' → logprob: -15.929824829101562

Token 98: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5241305232048035
    2. '//=' → logprob: -0.8991305232048035
    3. '//' → logprob: -7.524130344390869
    4. ' /=' → logprob: -8.774130821228027
    5. '=' → logprob: -8.899130821228027
    6. ' ' → logprob: -9.274130821228027
    7. ' =' → logprob: -9.774130821228027
    8. '/=' → logprob: -10.899130821228027
    9. '/' → logprob: -13.899130821228027
    10. ' ' → logprob: -14.024130821228027

Token 99: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1875571544806007e-05
    2. '=x' → logprob: -11.625011444091797
    3. '=n' → logprob: -13.375011444091797
    4. '=
' → logprob: -14.875011444091797
    5. '=_' → logprob: -15.000011444091797
    6. '_=' → logprob: -15.500011444091797
    7. '=

' → logprob: -15.500011444091797
    8. '=}' → logprob: -16.500011444091797
    9. '=int' → logprob: -17.250011444091797
    10. '='' → logprob: -18.000011444091797

Token 100: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048587486147880554
    2. ' x' → logprob: -3.0485875606536865
    3. '	x' → logprob: -16.173587799072266
    4. ' ' → logprob: -17.923587799072266
    5. '   ' → logprob: -20.298587799072266
    6. '"x' → logprob: -20.798587799072266
    7. ')x' → logprob: -21.298587799072266
    8. '    ' → logprob: -21.298587799072266
    9. '                   ' → logprob: -21.298587799072266
    10. '```' → logprob: -21.548587799072266

Token 101: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016108503565192223
    2. '   ' → logprob: -4.391108512878418
    3. '           ' → logprob: -6.016108512878418
    4. '
' → logprob: -8.016108512878418
    5. ' ' → logprob: -8.266108512878418
    6. '               ' → logprob: -8.891108512878418
    7. '<|end|>' → logprob: -8.891108512878418
    8. '	' → logprob: -10.016108512878418
    9. '    
' → logprob: -10.266108512878418
    10. ',' → logprob: -10.266108512878418

Token 102: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0201872605830431
    2. '   ' → logprob: -4.0201873779296875
    3. '
' → logprob: -7.3951873779296875
    4. '           ' → logprob: -7.3951873779296875
    5. ' ' → logprob: -8.520187377929688
    6. '               ' → logprob: -8.770187377929688
    7. '        
' → logprob: -9.020187377929688
    8. '    
' → logprob: -9.145187377929688
    9. ',' → logprob: -10.395187377929688
    10. '	' → logprob: -10.645187377929688

Token 103: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4290364980697632
    2. '       ' → logprob: -1.5540364980697632
    3. ' yield' → logprob: -2.3040366172790527
    4. 'yield' → logprob: -3.6790366172790527
    5. ' if' → logprob: -5.179036617279053
    6. ' ' → logprob: -5.679036617279053
    7. 'if' (adapté à ' if') → logprob: -7.179036617279053
    8. '	yield' → logprob: -7.929036617279053
    9. ' return' → logprob: -8.054036140441895
    10. '    ' → logprob: -8.054036140441895

Token 104: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05766889080405235
    2. 'n' → logprob: -2.932668924331665
    3. ' not' → logprob: -7.057668685913086
    4. ' x' → logprob: -7.182668685913086
    5. 'x' → logprob: -7.807668685913086
    6. ' ' → logprob: -8.432668685913086
    7. '	n' → logprob: -8.432668685913086
    8. '   ' → logprob: -9.995168685913086
    9. '_' → logprob: -10.120168685913086
    10. 'not' → logprob: -10.495168685913086

Token 105: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2282324582338333
    2. '==' → logprob: -1.603232502937317
    3. ' >' → logprob: -6.978232383728027
    4. ' <' → logprob: -7.353232383728027
    5. ' ' → logprob: -7.478232383728027
    6. '>' → logprob: -8.603232383728027
    7. ' <=' → logprob: -8.978232383728027
    8. ' %' → logprob: -9.478232383728027
    9. '1' → logprob: -9.728232383728027
    10. '%' → logprob: -9.978232383728027

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008689505979418755
    2. ' ' → logprob: -4.7586894035339355
    3. '0' → logprob: -9.883689880371094
    4. '   ' → logprob: -11.008689880371094
    5. 'x' → logprob: -13.258689880371094
    6. '  ' → logprob: -13.508689880371094
    7. '    ' → logprob: -14.008689880371094
    8. '2' → logprob: -14.258689880371094
    9. '     ' → logprob: -15.008689880371094
    10. '```' → logprob: -15.258689880371094

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002517515793442726
    2. ' ' → logprob: -6.0025177001953125
    3. '   ' → logprob: -10.752517700195312
    4. '0' → logprob: -11.502517700195312
    5. 'x' → logprob: -12.877517700195312
    6. '  ' → logprob: -13.127517700195312
    7. '    ' → logprob: -13.940017700195312
    8. '	' → logprob: -14.252517700195312
    9. '     ' → logprob: -14.440017700195312
    10. '           ' → logprob: -14.877517700195312

Token 108: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13011401891708374
    2. '               ' → logprob: -2.3801140785217285
    3. ':
' → logprob: -3.8801140785217285
    4. '           ' → logprob: -5.0051140785217285
    5. '       ' → logprob: -7.2551140785217285
    6. ':return' → logprob: -7.3801140785217285
    7. ' :' → logprob: -7.8801140785217285
    8. '   ' → logprob: -9.38011360168457
    9. ' ' → logprob: -10.13011360168457
    10. ' or' → logprob: -10.25511360168457

Token 109: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05475272610783577
    2. '                ' → logprob: -3.679752826690674
    3. ' break' → logprob: -4.679752826690674
    4. ' return' → logprob: -5.054752826690674
    5. '            ' → logprob: -5.429752826690674
    6. '           ' → logprob: -5.679752826690674
    7. ' ' → logprob: -5.804752826690674
    8. '       ' → logprob: -8.304752349853516
    9. '                   ' → logprob: -8.304752349853516
    10. '   ' → logprob: -8.429752349853516

Token 110: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010614447295665741
    2. '   ' → logprob: -4.635614395141602
    3. '           ' → logprob: -7.260614395141602
    4. 'yield' → logprob: -9.760614395141602
    5. ' yield' → logprob: -10.635614395141602
    6. '	   ' → logprob: -11.260614395141602
    7. '	yield' → logprob: -11.260614395141602
    8. '<|end|>' → logprob: -11.635614395141602
    9. '               ' → logprob: -11.885614395141602
    10. '	' → logprob: -12.010614395141602

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006129883229732513
    2. '   ' → logprob: -5.506129741668701
    3. '
' → logprob: -7.006129741668701
    4. '           ' → logprob: -7.131129741668701
    5. ',' → logprob: -8.75613021850586
    6. '<|end|>' → logprob: -9.38113021850586
    7. '               ' → logprob: -10.75613021850586
    8. '        
' → logprob: -11.38113021850586
    9. '    
' → logprob: -11.50613021850586
    10. '<|end|>' → logprob: -11.63113021850586

Token 112: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5972405672073364
    2. '   ' → logprob: -0.8472405672073364
    3. 'if' (adapté à ' if') → logprob: -4.097240447998047
    4. 'yield' → logprob: -5.972240447998047
    5. ' if' → logprob: -6.722240447998047
    6. ' yield' → logprob: -7.597240447998047
    7. '    ' → logprob: -9.472240447998047
    8. '           ' → logprob: -10.347240447998047
    9. '	yield' → logprob: -10.847240447998047
    10. 'return' → logprob: -10.972240447998047

Token 113: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08902115374803543
    2. 'n' → logprob: -2.4640212059020996
    3. '	n' → logprob: -10.339020729064941
    4. ' ' → logprob: -10.589020729064941
    5. '   ' → logprob: -11.089020729064941
    6. ' ' → logprob: -12.839020729064941
    7. ' isinstance' → logprob: -13.589020729064941
    8. 'n't' → logprob: -13.839020729064941
    9. ' not' → logprob: -14.214020729064941
    10. '```' → logprob: -14.339020729064941

Token 114: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4295075535774231
    2. '>' → logprob: -1.0545074939727783
    3. ' ' → logprob: -7.429507732391357
    4. '">' → logprob: -9.8045072555542
    5. ' !=' → logprob: -10.9295072555542
    6. ' ' → logprob: -11.1795072555542
    7. '   ' → logprob: -11.1795072555542
    8. '<|end|>' → logprob: -11.2420072555542
    9. '!=' → logprob: -11.4920072555542
    10. '

' → logprob: -12.1795072555542

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011057134717702866
    2. ' ' → logprob: -4.511056900024414
    3. '2' → logprob: -11.636056900024414
    4. '   ' → logprob: -15.511056900024414
    5. 'x' → logprob: -16.948556900024414
    6. '```' → logprob: -17.073556900024414
    7. '  ' → logprob: -17.323556900024414
    8. '9' → logprob: -17.698556900024414
    9. ' ' → logprob: -17.948556900024414
    10. '

' → logprob: -18.011056900024414

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023238400171976537
    2. ' ' → logprob: -8.375232696533203
    3. '2' → logprob: -13.750232696533203
    4. '   ' → logprob: -15.000232696533203
    5. 'x' → logprob: -16.562732696533203
    6. '```' → logprob: -17.000232696533203
    7. '  ' → logprob: -17.187732696533203
    8. '１' → logprob: -17.375232696533203
    9. '     ' → logprob: -17.875232696533203
    10. '	' → logprob: -18.312732696533203

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010738164186477661
    2. ':
' → logprob: -4.635738372802734
    3. '           ' → logprob: -7.510738372802734
    4. '       ' → logprob: -8.510738372802734
    5. ' :' → logprob: -9.760738372802734
    6. 'yield' → logprob: -9.760738372802734
    7. ':return' → logprob: -10.135738372802734
    8. ' yield' → logprob: -10.385738372802734
    9. ':
' → logprob: -11.260738372802734
    10. '	yield' → logprob: -11.385738372802734

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5277342796325684
    2. ' yield' → logprob: -0.9027342796325684
    3. 'yield' → logprob: -5.527734279632568
    4. '	yield' → logprob: -8.152734756469727
    5. '        ' → logprob: -8.527734756469727
    6. '       ' → logprob: -10.152734756469727
    7. 'Yield' → logprob: -10.902734756469727
    8. ':' → logprob: -11.027734756469727
    9. ' yields' → logprob: -11.152734756469727
    10. '            ' → logprob: -11.777734756469727

Token 119: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.38729238510131836
    2. 'yield' (adapté à ' yield') → logprob: -1.1372923851013184
    3. '	yield' → logprob: -7.887292385101318
    4. '           ' → logprob: -10.137292861938477
    5. '       ' → logprob: -12.512292861938477
    6. 'Yield' → logprob: -13.512292861938477
    7. '   ' → logprob: -14.512292861938477
    8. '               ' → logprob: -15.637292861938477
    9. '  ' → logprob: -16.012292861938477
    10. '```' → logprob: -16.012292861938477

Token 120: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.026348605751991272
    2. 'n' → logprob: -3.65134859085083
    3. ' ' → logprob: -10.401349067687988
    4. '	n' → logprob: -11.151349067687988
    5. ' ' → logprob: -12.776349067687988
    6. '(n' → logprob: -15.776349067687988
    7. '_n' → logprob: -16.151348114013672
    8. '    ' → logprob: -16.526348114013672
    9. ' 
' → logprob: -16.776348114013672
    10. ' ' → logprob: -17.151348114013672

Token 121: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3592444956302643
    2. '
' → logprob: -1.859244465827942
    3. 'return' → logprob: -2.3592445850372314
    4. 'def' → logprob: -3.7342445850372314
    5. ' return' → logprob: -5.109244346618652
    6. '<|end|>' → logprob: -5.484244346618652
    7. '    
' → logprob: -5.609244346618652
    8. ')' → logprob: -5.859244346618652
    9. '

' → logprob: -6.359244346618652
    10. '	return' → logprob: -6.359244346618652

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5194867253303528
    2. 'return' → logprob: -1.144486665725708
    3. '
' → logprob: -3.394486665725708
    4. 'def' → logprob: -3.769486665725708
    5. ' return' → logprob: -3.894486665725708
    6. 'for' → logprob: -6.394486904144287
    7. ' ' → logprob: -6.519486904144287
    8. '    
' → logprob: -6.644486904144287
    9. '	return' → logprob: -6.769486904144287
    10. ' for' → logprob: -7.019486904144287

Token 123: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.568284809589386
    2. '   ' → logprob: -1.4432847499847412
    3. 'return' (adapté à ' return') → logprob: -1.9432847499847412
    4. '
' → logprob: -3.818284749984741
    5. ' for' → logprob: -4.69328498840332
    6. ' primes' → logprob: -5.44328498840332
    7. ' unique' → logprob: -5.56828498840332
    8. ' ' → logprob: -5.69328498840332
    9. 'unique' → logprob: -6.19328498840332
    10. '    
' → logprob: -6.69328498840332

Token 124: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.03465145826339722
    2. ' set' → logprob: -3.659651517868042
    3. 'list' → logprob: -5.034651279449463
    4. 'sorted' → logprob: -7.284651279449463
    5. '{' → logprob: -7.659651279449463
    6. ' list' → logprob: -8.284651756286621
    7. 'fro' → logprob: -8.534651756286621
    8. 'tuple' → logprob: -9.284651756286621
    9. 'dict' → logprob: -10.159651756286621
    10. ' sorted' → logprob: -11.159651756286621

Token 125: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.001502717612311244
    2. '(' → logprob: -6.501502513885498
    3. '(
' → logprob: -15.751502990722656
    4. 's' → logprob: -16.376502990722656
    5. ' (' → logprob: -16.626502990722656
    6. '((' → logprob: -16.751502990722656
    7. '(list' → logprob: -18.126502990722656
    8. '(S' → logprob: -19.001502990722656
    9. ')(' → logprob: -19.126502990722656
    10. '(f' → logprob: -19.626502990722656

Token 126: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00030281138606369495
    2. '(' → logprob: -8.250303268432617
    3. ')' → logprob: -10.750303268432617
    4. ' (' → logprob: -10.875303268432617
    5. ')(' → logprob: -14.000303268432617
    6. ')n' → logprob: -16.375303268432617
    7. ' ' → logprob: -16.375303268432617
    8. '(
' → logprob: -16.625303268432617
    9. ',' → logprob: -18.000303268432617
    10. ' )' → logprob: -18.375303268432617

Token 127: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3868754208087921
    2. ')' → logprob: -1.1368753910064697
    3. ')))' → logprob: -13.13687515258789
    4. '())' → logprob: -14.26187515258789
    5. '()))' → logprob: -14.51187515258789
    6. ' ))' → logprob: -14.88687515258789
    7. ' )' → logprob: -15.26187515258789
    8. ')
' → logprob: -15.38687515258789
    9. '()' → logprob: -16.13687515258789
    10. '))
' → logprob: -16.38687515258789

Token 128: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.702774167060852
    2. '(' → logprob: -1.202774167060852
    3. ')' → logprob: -2.2027740478515625
    4. '_' → logprob: -2.8277740478515625
    5. '(
' → logprob: -4.7027740478515625
    6. '*' → logprob: -5.2027740478515625
    7. '
' → logprob: -5.2027740478515625
    8. '#' → logprob: -5.7027740478515625
    9. '<|end|>' → logprob: -6.0777740478515625
    10. ':' → logprob: -6.2027740478515625

Token 129: ' _' (ID: 1175)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.80345219373703
    2. ' _' → logprob: -0.80345219373703
    3. ' reduce' → logprob: -3.053452253341675
    4. ' is' → logprob: -4.053452014923096
    5. '_' → logprob: -5.553452014923096
    6. ' gcd' → logprob: -5.553452014923096
    7. ' count' → logprob: -5.928452014923096
    8. ' get' → logprob: -6.053452014923096
    9. ' prime' → logprob: -6.428452014923096
    10. ' least' → logprob: -6.428452014923096

Token 130: 'io' (ID: 726)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16765187680721283
    2. 'is' → logprob: -3.542651891708374
    3. 'cop' → logprob: -3.917651891708374
    4. 'prime' → logprob: -4.042651653289795
    5. 'g' → logprob: -4.167651653289795
    6. 'phi' → logprob: -4.167651653289795
    7. 'sum' → logprob: -5.042651653289795
    8. 'pow' → logprob: -5.542651653289795
    9. 'tot' → logprob: -5.542651653289795
    10. 'reduce' → logprob: -5.542651653289795

Token 131: '_read' (ID: 14291)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5430572032928467
    2. '_read' → logprob: -1.7930572032928467
    3. '():' → logprob: -2.1680572032928467
    4. '_' → logprob: -2.9180572032928467
    5. 'read' → logprob: -3.0430572032928467
    6. '():
' → logprob: -3.4180572032928467
    7. 'n' → logprob: -3.4180572032928467
    8. 'import' → logprob: -3.7930572032928467
    9. '_main' → logprob: -3.7930572032928467
    10. 's' → logprob: -3.9180572032928467

Token 132: 'line' (ID: 1137)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06472401320934296
    2. '()' → logprob: -2.9397239685058594
    3. '_line' → logprob: -5.189723968505859
    4. '():
' → logprob: -5.814723968505859
    5. 'line' → logprob: -7.189723968505859
    6. '_lines' → logprob: -9.43972396850586
    7. ' ():' → logprob: -9.56472396850586
    8. '(' → logprob: -10.18972396850586
    9. ' ()' → logprob: -10.68972396850586
    10. 's' → logprob: -10.68972396850586

Token 133: '_int' (ID: 12285)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0018581995973363519
    2. '()' → logprob: -6.876858234405518
    3. '():
' → logprob: -7.751858234405518
    4. ' ():' → logprob: -8.00185775756836
    5. '(' → logprob: -10.00185775756836
    6. ' ()' → logprob: -12.87685775756836
    7. '(line' → logprob: -13.12685775756836
    8. '(s' → logprob: -13.62685775756836
    9. '(reader' → logprob: -13.62685775756836
    10. ':' → logprob: -14.25185775756836

Token 134: 's' (ID: 82)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.027900366112589836
    2. '():
' → logprob: -3.777900457382202
    3. '()' → logprob: -5.402900218963623
    4. ' ():' → logprob: -9.652900695800781
    5. 's' → logprob: -10.152900695800781
    6. '(' → logprob: -11.402900695800781
    7. '():
' → logprob: -11.777900695800781
    8. '():

' → logprob: -12.402900695800781
    9. ' ()' → logprob: -12.652900695800781
    10. '(line' → logprob: -13.277900695800781

Token 135: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002324744826182723
    2. ' ():' → logprob: -6.50232458114624
    3. '():
' → logprob: -7.37732458114624
    4. '(line' → logprob: -9.502325057983398
    5. '(' → logprob: -9.752325057983398
    6. '()' → logprob: -10.127325057983398
    7. '(s' → logprob: -11.877325057983398
    8. ' ()' → logprob: -12.002325057983398
    9. '(reader' → logprob: -12.377325057983398
    10. ' (' → logprob: -13.377325057983398

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0532008558511734
    2. ' return' → logprob: -3.4282009601593018
    3. 'return' → logprob: -4.178200721740723
    4. '()' → logprob: -5.553200721740723
    5. '[]' → logprob: -9.428200721740723
    6. '	return' → logprob: -10.678200721740723
    7. '    
' → logprob: -11.303200721740723
    8. '()
' → logprob: -11.678200721740723
    9. '():' → logprob: -12.053200721740723
    10. '   ' → logprob: -12.053200721740723

Token 137: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7080037593841553
    2. ' return' → logprob: -0.9580037593841553
    3. '   ' → logprob: -2.4580037593841553
    4. ' map' → logprob: -4.083003997802734
    5. 'map' → logprob: -4.458003997802734
    6. ' list' → logprob: -4.833003997802734
    7. 'list' → logprob: -6.458003997802734
    8. ' ' → logprob: -9.833003997802734
    9. 'int' → logprob: -10.833003997802734
    10. '  ' → logprob: -11.458003997802734

Token 138: ' Sim' (ID: 7973)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5267416834831238
    2. ' return' → logprob: -0.9017416834831238
    3. '   ' → logprob: -5.7767415046691895
    4. 'line' → logprob: -8.526741981506348
    5. ' line' → logprob: -8.776741981506348
    6. 'import' → logprob: -10.276741981506348
    7. ' ' → logprob: -10.526741981506348
    8. 'l' → logprob: -10.776741981506348
    9. 'ret' → logprob: -11.401741981506348
    10. 'r' → logprob: -11.651741981506348

Token 139: 'ulate' (ID: 10111)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.042772166430950165
    2. 'pl' → logprob: -3.917772054672241
    3. 'ply' → logprob: -4.29277229309082
    4. 'def' → logprob: -5.29277229309082
    5. 'port' → logprob: -6.66777229309082
    6. 'plt' → logprob: -8.04277229309082
    7. 'p' → logprob: -8.16777229309082
    8. '   ' → logprob: -8.29277229309082
    9. 'ulate' → logprob: -8.41777229309082
    10. 'plate' → logprob: -8.79277229309082

Token 140: ' the' (ID: 290)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.33723294734954834
    2. ' map' → logprob: -1.5872329473495483
    3. 'list' → logprob: -2.962233066558838
    4. 'map' → logprob: -3.587233066558838
    5. '   ' → logprob: -6.587233066558838
    6. ' return' → logprob: -8.46223258972168
    7. 'int' → logprob: -8.46223258972168
    8. 'return' → logprob: -8.46223258972168
    9. ' ' → logprob: -9.46223258972168
    10. ' tuple' → logprob: -9.58723258972168

Token 141: ' most' (ID: 1645)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7088671922683716
    2. 'list' → logprob: -1.5838671922683716
    3. ' map' → logprob: -2.083867073059082
    4. 'map' → logprob: -2.333867073059082
    5. 'sys' → logprob: -3.458867073059082
    6. ' sys' → logprob: -3.958867073059082
    7. 'int' → logprob: -4.458867073059082
    8. 'return' → logprob: -4.958867073059082
    9. '[int' → logprob: -5.708867073059082
    10. ' return' → logprob: -5.958867073059082

Token 142: ' indirect' (ID: 36197)
  Prédit: ' common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' common' → logprob: -1.2201570272445679
    2. ' basic' → logprob: -1.2201570272445679
    3. ' efficient' → logprob: -1.7201570272445679
    4. ' fast' → logprob: -3.5951571464538574
    5. ' likely' → logprob: -3.8451571464538574
    6. 'basic' → logprob: -3.9701571464538574
    7. ' straightforward' → logprob: -3.9701571464538574
    8. 'common' → logprob: -4.095157146453857
    9. 'fast' → logprob: -4.470157146453857
    10. ' optimized' → logprob: -4.470157146453857

Token 143: ' reading' (ID: 6085)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5747913122177124
    2. ' way' → logprob: -2.199791431427002
    3. ' line' → logprob: -2.949791431427002
    4. ' method' → logprob: -3.074791431427002
    5. 'input' → logprob: -3.324791431427002
    6. ' readline' → logprob: -3.449791431427002
    7. '_input' → logprob: -3.824791431427002
    8. ' approach' → logprob: -4.074791431427002
    9. ' possible' → logprob: -4.199791431427002
    10. '_' → logprob: -4.324791431427002

Token 144: ' method' (ID: 2595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.14732110500335693
    2. '()' → logprob: -2.0223212242126465
    3. '():
' → logprob: -5.7723212242126465
    4. '   ' → logprob: -7.1473212242126465
    5. '()
' → logprob: -8.772320747375488
    6. ' ()' → logprob: -9.397320747375488
    7. ':' → logprob: -9.522320747375488
    8. '().' → logprob: -9.647320747375488
    9. 'def' → logprob: -9.647320747375488
    10. ' ():' → logprob: -10.022320747375488

Token 145: ' possible' (ID: 4149)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.13094112277030945
    2. '()' → logprob: -2.505941152572632
    3. '   ' → logprob: -3.755941152572632
    4. '():
' → logprob: -4.130940914154053
    5. ':' → logprob: -7.630940914154053
    6. '(' → logprob: -7.630940914154053
    7. '()
' → logprob: -8.130941390991211
    8. ' ():' → logprob: -9.005941390991211
    9. 'def' → logprob: -9.880941390991211
    10. '();' → logprob: -10.630941390991211

Token 146: ' (' (ID: 350)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.15565918385982513
    2. '():
' → logprob: -2.6556591987609863
    3. '   ' → logprob: -2.9056591987609863
    4. '()' → logprob: -4.030659198760986
    5. ':' → logprob: -7.905659198760986
    6. '()
' → logprob: -8.030658721923828
    7. ' ():' → logprob: -8.405658721923828
    8. '(' → logprob: -8.655658721923828
    9. '
' → logprob: -9.280658721923828
    10. ':
' → logprob: -10.405658721923828

Token 147: 'could' (ID: 58995)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3862817883491516
    2. ' return' → logprob: -2.011281728744507
    3. 'return' → logprob: -2.886281728744507
    4. ')' → logprob: -2.886281728744507
    5. ' )' → logprob: -3.511281728744507
    6. '    ' → logprob: -4.261281967163086
    7. ' sys' → logprob: -4.636281967163086
    8. '):' → logprob: -5.261281967163086
    9. ' line' → logprob: -5.636281967163086
    10. 'sys' → logprob: -5.761281967163086

Token 148: ' compress' (ID: 34112)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.43826958537101746
    2. '   ' → logprob: -1.5632696151733398
    3. ' return' → logprob: -3.31326961517334
    4. ' sys' → logprob: -3.93826961517334
    5. ' =' → logprob: -4.68826961517334
    6. '```' → logprob: -5.06326961517334
    7. 'return' → logprob: -5.18826961517334
    8. 'import' → logprob: -5.18826961517334
    9. ' readline' → logprob: -5.18826961517334
    10. ' ' → logprob: -5.18826961517334

Token 149: ' further' (ID: 6544)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.3009735345840454
    2. '   ' → logprob: -1.6759735345840454
    3. '):
' → logprob: -2.175973415374756
    4. ' input' → logprob: -2.425973415374756
    5. 'input' → logprob: -2.925973415374756
    6. ' lines' → logprob: -3.175973415374756
    7. ' line' → logprob: -3.425973415374756
    8. ')' → logprob: -3.550973415374756
    9. ' code' → logprob: -3.675973415374756
    10. ' into' → logprob: -3.800973415374756

Token 150: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9606308937072754
    2. '   ' → logprob: -1.2106308937072754
    3. '):' → logprob: -1.3356308937072754
    4. ' ):
' → logprob: -4.460630893707275
    5. ' ):' → logprob: -4.835630893707275
    6. ',' → logprob: -4.960630893707275
    7. ' but' → logprob: -4.960630893707275
    8. ')' → logprob: -5.210630893707275
    9. '    ' → logprob: -5.585630893707275
    10. '():' → logprob: -5.585630893707275

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021372836083173752
    2. '
' → logprob: -4.8963727951049805
    3. '    
' → logprob: -5.0213727951049805
    4. '():
' → logprob: -6.1463727951049805
    5. '():' → logprob: -6.2713727951049805
    6. '()
' → logprob: -7.0213727951049805
    7. '()' → logprob: -7.5213727951049805
    8. ' return' → logprob: -8.52137279510498
    9. 'return' → logprob: -8.77137279510498
    10. '<|end|>' → logprob: -9.02137279510498

Token 152: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43995943665504456
    2. 'return' (adapté à ' return') → logprob: -1.3149594068527222
    3. ' return' → logprob: -2.8149595260620117
    4. 'line' → logprob: -4.564959526062012
    5. ' line' → logprob: -4.814959526062012
    6. 'data' → logprob: -5.814959526062012
    7. '
' → logprob: -6.814959526062012
    8. '    
' → logprob: -6.939959526062012
    9. 's' → logprob: -7.314959526062012
    10. '_' → logprob: -7.689959526062012

Token 153: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4018324017524719
    2. ' list' → logprob: -1.1518323421478271
    3. 'map' → logprob: -4.401832580566406
    4. ' map' → logprob: -6.401832580566406
    5. '[list' → logprob: -7.776832580566406
    6. '[' → logprob: -8.151832580566406
    7. ' [' → logprob: -9.526832580566406
    8. '   ' → logprob: -10.026832580566406
    9. 'tuple' → logprob: -10.526832580566406
    10. '[int' → logprob: -10.901832580566406

Token 154: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005240275990217924
    2. '(' → logprob: -5.255240440368652
    3. '(int' → logprob: -12.505240440368652
    4. '(
' → logprob: -13.880240440368652
    5. '	map' → logprob: -14.880240440368652
    6. 'map' → logprob: -15.005240440368652
    7. '()' → logprob: -15.130240440368652
    8. '(m' → logprob: -15.130240440368652
    9. '(

' → logprob: -15.880240440368652
    10. ' (' → logprob: -16.005239486694336

Token 155: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01617044024169445
    2. '(' → logprob: -4.141170501708984
    3. 'int' → logprob: -9.766170501708984
    4. '(
' → logprob: -10.641170501708984
    5. ',int' → logprob: -10.641170501708984
    6. ' int' → logprob: -11.141170501708984
    7. ' (' → logprob: -11.516170501708984
    8. '   ' → logprob: -13.391170501708984
    9. ')' → logprob: -13.891170501708984
    10. '<int' → logprob: -13.891170501708984

Token 156: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.003922856878489256
    2. ',' → logprob: -6.003922939300537
    3. '(' → logprob: -6.878922939300537
    4. 'sys' → logprob: -8.253922462463379
    5. ' sys' → logprob: -9.253922462463379
    6. '=sys' → logprob: -10.378922462463379
    7. '	sys' → logprob: -11.003922462463379
    8. '(
' → logprob: -12.503922462463379
    9. ' ,' → logprob: -12.878922462463379
    10. ' (' → logprob: -13.003922462463379

Token 157: ' filter' (ID: 6690)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.28135228157043457
    2. ' sys' → logprob: -1.4063522815704346
    3. '(sys' → logprob: -9.781352043151855
    4. '_sys' → logprob: -9.906352043151855
    5. '	sys' → logprob: -10.156352043151855
    6. '=sys' → logprob: -10.781352043151855
    7. 'input' → logprob: -11.656352043151855
    8. ' input' → logprob: -11.781352043151855
    9. '   ' → logprob: -12.031352043151855
    10. '.sys' → logprob: -12.531352043151855

Token 158: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.041829779744148254
    2. '(str' → logprob: -3.791829824447632
    3. '(lambda' → logprob: -4.166829586029053
    4. 'None' → logprob: -6.666829586029053
    5. '(bool' → logprob: -7.166829586029053
    6. 'str' → logprob: -8.041830062866211
    7. 'bool' → logprob: -8.166830062866211
    8. 'lambda' → logprob: -9.041830062866211
    9. '(len' → logprob: -9.541830062866211
    10. ')' → logprob: -10.541830062866211

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004568849690258503
    2. ',input' → logprob: -6.629569053649902
    3. '(sys' → logprob: -6.754569053649902
    4. 'sys' → logprob: -7.379569053649902
    5. '=sys' → logprob: -7.629569053649902
    6. ',__' → logprob: -7.879569053649902
    7. ',map' → logprob: -8.754569053649902
    8. ' ,' → logprob: -9.004569053649902
    9. ' sys' → logprob: -9.504569053649902
    10. ',System' → logprob: -10.129569053649902

Token 160: ' ''.' (ID: 105941)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.08906476199626923
    2. ' sys' → logprob: -2.464064836502075
    3. '   ' → logprob: -9.714064598083496
    4. '(sys' → logprob: -10.839064598083496
    5. '	sys' → logprob: -10.964064598083496
    6. '_sys' → logprob: -11.339064598083496
    7. ' ' → logprob: -12.464064598083496
    8. '__' → logprob: -12.839064598083496
    9. '=sys' → logprob: -12.964064598083496
    10. 'map' → logprob: -13.339064598083496

Token 161: 'join' (ID: 10891)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0034170090220868587
    2. 'split' → logprob: -6.503417015075684
    3. 'stdin' → logprob: -7.003417015075684
    4. 'read' → logprob: -7.253417015075684
    5. '__' → logprob: -9.003417015075684
    6. '(sys' → logprob: -9.003417015075684
    7. '=sys' → logprob: -11.128417015075684
    8. 'map' → logprob: -11.253417015075684
    9. 'input' → logprob: -12.128417015075684
    10. 'strip' → logprob: -12.503417015075684

Token 162: '(sys' (ID: 41042)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1438758671283722
    2. '(sys' → logprob: -2.14387583732605
    3. 'map' → logprob: -4.893876075744629
    4. 'chr' → logprob: -5.018876075744629
    5. '(map' → logprob: -7.268876075744629
    6. '(chr' → logprob: -7.268876075744629
    7. ' sys' → logprob: -7.518876075744629
    8. 'filter' → logprob: -7.893876075744629
    9. 'iter' → logprob: -8.893876075744629
    10. '(iter' → logprob: -9.643876075744629

Token 163: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.0921942703134846e-05
    2. 'stdin' → logprob: -11.50001049041748
    3. '.' → logprob: -15.12501049041748
    4. '.stdout' → logprob: -15.75001049041748
    5. '.argv' → logprob: -15.87501049041748
    6. '

' → logprob: -17.250011444091797
    7. '.
' → logprob: -17.500011444091797
    8. '(stdin' → logprob: -17.875011444091797
    9. ' stdin' → logprob: -18.000011444091797
    10. '.__' → logprob: -18.000011444091797

Token 164: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.012749903835356236
    2. '.read' → logprob: -4.512749671936035
    3. '.readlines' → logprob: -6.387749671936035
    4. 'read' → logprob: -11.762749671936035
    5. '.buffer' → logprob: -12.012749671936035
    6. '.' → logprob: -12.762749671936035
    7. 'buffer' → logprob: -14.387749671936035
    8. ')' → logprob: -14.887749671936035
    9. '   ' → logprob: -15.012749671936035
    10. ').' → logprob: -15.012749671936035

Token 165: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04568791016936302
    2. '()).' → logprob: -3.1706879138946533
    3. '())))' → logprob: -6.545687675476074
    4. '()' → logprob: -6.795687675476074
    5. '())).' → logprob: -10.295687675476074
    6. '()))' → logprob: -10.420687675476074
    7. '(' → logprob: -11.045687675476074
    8. '()].' → logprob: -11.045687675476074
    9. '())' → logprob: -11.295687675476074
    10. ').' → logprob: -11.670687675476074

Token 166: ' for' (ID: 395)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0028975941240787506
    2. '()).' → logprob: -6.5028977394104
    3. '()' → logprob: -7.0028977394104
    4. '())))' → logprob: -7.8778977394104
    5. '()))' → logprob: -10.627897262573242
    6. '())).' → logprob: -10.877897262573242
    7. '(' → logprob: -10.877897262573242
    8. ').' → logprob: -11.002897262573242
    9. '())' → logprob: -12.002897262573242
    10. '())))
' → logprob: -12.877897262573242

Token 167: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1273299604654312
    2. ' _' → logprob: -2.1273300647735596
    3. ' range' → logprob: -8.87732982635498
    4. '_=' → logprob: -9.12732982635498
    5. '_
' → logprob: -9.50232982635498
    6. '__' → logprob: -11.50232982635498
    7. 'range' → logprob: -11.62732982635498
    8. '_

' → logprob: -12.12732982635498
    9. '...' → logprob: -12.25232982635498
    10. ' ' → logprob: -12.25232982635498

Token 168: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5570446848869324
    2. ' range' → logprob: -1.4320447444915771
    3. 'range' → logprob: -1.6820447444915771
    4. ' _' → logprob: -7.307044506072998
    5. '_range' → logprob: -7.932044506072998
    6. '...' → logprob: -8.807044982910156
    7. ' ' → logprob: -9.057044982910156
    8. '[' → logprob: -9.432044982910156
    9. ' in' → logprob: -9.432044982910156
    10. ' xrange' → logprob: -9.557044982910156

Token 169: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20993562042713165
    2. ' range' → logprob: -1.7099356651306152
    3. '_' → logprob: -5.084935665130615
    4. '[' → logprob: -7.084935665130615
    5. 'count' → logprob: -7.334935665130615
    6. 'iter' → logprob: -8.084935188293457
    7. ' iter' → logprob: -9.459935188293457
    8. 'chain' → logprob: -9.959935188293457
    9. '_range' → logprob: -9.959935188293457
    10. '__' → logprob: -10.209935188293457

Token 170: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003838071832433343
    2. '1' → logprob: -6.753838062286377
    3. '(sys' → logprob: -6.878838062286377
    4. '3' → logprob: -7.753838062286377
    5. '(int' → logprob: -8.003838539123535
    6. '2' → logprob: -8.003838539123535
    7. ' ' → logprob: -8.503838539123535
    8. '(
' → logprob: -9.753838539123535
    9. ' (' → logprob: -10.128838539123535
    10. '4' → logprob: -10.128838539123535

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5844260454177856
    2. '2' → logprob: -1.5844260454177856
    3. '3' → logprob: -1.7094260454177856
    4. '4' → logprob: -3.959425926208496
    5. '5' → logprob: -4.459425926208496
    6. '10' → logprob: -4.584425926208496
    7. ' ' → logprob: -4.584425926208496
    8. '6' → logprob: -6.209425926208496
    9. '8' → logprob: -6.584425926208496
    10. '7' → logprob: -7.334425926208496

Token 172: ')).' (ID: 8784)
  Prédit: ')).'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')).' → logprob: -0.009791151620447636
    2. '())).' → logprob: -5.134791374206543
    3. '))' → logprob: -6.509791374206543
    4. '))).' → logprob: -7.009791374206543
    5. '))))' → logprob: -7.884791374206543
    6. '   ' → logprob: -8.134791374206543
    7. ' )' → logprob: -8.509791374206543
    8. ')' → logprob: -9.009791374206543
    9. ')))' → logprob: -9.009791374206543
    10. '(' → logprob: -9.384791374206543

Token 173: 'replace' (ID: 15208)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.049120135605335236
    2. 'strip' → logprob: -3.0491201877593994
    3. 'rstrip' → logprob: -7.54911994934082
    4. 'replace' → logprob: -12.67411994934082
    5. 'read' → logprob: -12.92411994934082
    6. ' split' → logprob: -15.04911994934082
    7. '(split' → logprob: -16.54911994934082
    8. 'rs' → logprob: -17.17411994934082
    9. 'spl' → logprob: -17.29911994934082
    10. ' strip' → logprob: -17.92411994934082

Token 174: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.342983216047287
    2. '('' → logprob: -1.3429832458496094
    3. '('[' → logprob: -3.8429832458496094
    4. '(' → logprob: -5.467983245849609
    5. '(',' → logprob: -5.967983245849609
    6. '(',',' → logprob: -7.592983245849609
    7. '("\' → logprob: -8.34298324584961
    8. '('',' → logprob: -9.59298324584961
    9. '(','' → logprob: -9.59298324584961
    10. '(';' → logprob: -9.96798324584961

Token 175: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003317705122753978
    2. 'r' → logprob: -8.50033187866211
    3. '\n' → logprob: -9.25033187866211
    4. 't' → logprob: -11.12533187866211
    5. 'x' → logprob: -12.12533187866211
    6. '0' → logprob: -12.62533187866211
    7. ' \' → logprob: -12.87533187866211
    8. ' n' → logprob: -12.87533187866211
    9. ' ' → logprob: -13.62533187866211
    10. ''' → logprob: -14.50033187866211

Token 176: '',' (ID: 787)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.22557085752487183
    2. '',' → logprob: -1.6005709171295166
    3. '',"' → logprob: -9.725570678710938
    4. ''' → logprob: -9.975570678710938
    5. ' ',' → logprob: -10.975570678710938
    6. ' ','' → logprob: -11.225570678710938
    7. '',
' → logprob: -12.350570678710938
    8. ''',' → logprob: -12.475570678710938
    9. ',' → logprob: -12.600570678710938
    10. '','','' → logprob: -12.600570678710938

Token 177: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002527149161323905
    2. ' '' → logprob: -6.127527236938477
    3. '''' → logprob: -8.127527236938477
    4. '"' → logprob: -10.127527236938477
    5. ''''' → logprob: -13.502527236938477
    6. '',' → logprob: -14.002527236938477
    7. '   ' → logprob: -14.377527236938477
    8. ' '')' → logprob: -15.002527236938477
    9. ''s' → logprob: -15.002527236938477
    10. ')' → logprob: -15.127527236938477

Token 178: ' ').' (ID: 114765)
  Prédit: ' ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ').' → logprob: -0.2809118628501892
    2. ' '' → logprob: -1.655911922454834
    3. '').' → logprob: -3.405911922454834
    4. '')).' → logprob: -4.905911922454834
    5. ''))' → logprob: -5.155911922454834
    6. '')))' → logprob: -5.530911922454834
    7. ' ')' → logprob: -5.780911922454834
    8. '')' → logprob: -8.280911445617676
    9. ''' → logprob: -9.405911445617676
    10. ' ')[' → logprob: -9.530911445617676

Token 179: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00320123927667737
    2. 'strip' → logprob: -5.753201007843018
    3. ' split' → logprob: -10.753201484680176
    4. 'rstrip' → logprob: -13.628201484680176
    5. 'replace' → logprob: -14.003201484680176
    6. 'spl' → logprob: -16.87820053100586
    7. ' strip' → logprob: -17.00320053100586
    8. '   ' → logprob: -17.75320053100586
    9. '(split' → logprob: -17.87820053100586
    10. 's' → logprob: -19.50320053100586

Token 180: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6200395822525024
    2. '())))' → logprob: -0.8700395822525024
    3. '()))' → logprob: -3.870039463043213
    4. '('' → logprob: -3.995039463043213
    5. '(' → logprob: -6.120039463043213
    6. '())' → logprob: -6.995039463043213
    7. '())))
' → logprob: -7.745039463043213
    8. ')))' → logprob: -8.995039939880371
    9. '(None' → logprob: -9.370039939880371
    10. '()]' → logprob: -9.995039939880371

Token 181: ' '' (ID: 461)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.3847406506538391
    2. '()' → logprob: -2.0097405910491943
    3. '())))' → logprob: -2.1347405910491943
    4. ')' → logprob: -3.5097405910491943
    5. '))))' → logprob: -3.7597405910491943
    6. '')))' → logprob: -4.634740829467773
    7. '()))' → logprob: -6.134740829467773
    8. '())' → logprob: -6.884740829467773
    9. '(' → logprob: -8.384740829467773
    10. '))' → logprob: -8.759740829467773

Token 182: '))))

' (ID: 161772)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.586341917514801
    2. ')))' → logprob: -0.836341917514801
    3. ')' → logprob: -4.586341857910156
    4. '))' → logprob: -8.961341857910156
    5. '))))
' → logprob: -11.336341857910156
    6. ')));' → logprob: -11.836341857910156
    7. '))))

' → logprob: -13.211341857910156
    8. ')))
' → logprob: -13.586341857910156
    9. ')))),' → logprob: -13.711341857910156
    10. '')))' → logprob: -13.711341857910156

Token 183: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006028811447322369
    2. '
' → logprob: -5.881028652191162
    3. '<|end|>' → logprob: -5.881028652191162
    4. '#' → logprob: -9.00602912902832
    5. '<|end|>' → logprob: -9.75602912902832
    6. ')' → logprob: -10.25602912902832
    7. '```' → logprob: -10.38102912902832
    8. '

' → logprob: -10.88102912902832
    9. '  
' → logprob: -11.13102912902832
    10. '[' → logprob: -11.38102912902832

Token 184: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7136077284812927
    2. ' _' → logprob: -1.2136077880859375
    3. ' solve' → logprob: -2.5886077880859375
    4. '_' → logprob: -3.2136077880859375
    5. 'main' → logprob: -3.4636077880859375
    6. '_main' → logprob: -3.9636077880859375
    7. 'solve' → logprob: -4.0886077880859375
    8. '_s' → logprob: -5.3386077880859375
    9. ' process' → logprob: -5.3386077880859375
    10. '_io' → logprob: -5.8386077880859375

Token 185: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00013285996101330966
    2. '(' → logprob: -9.12513256072998
    3. ' ():' → logprob: -11.37513256072998
    4. '():
' → logprob: -12.25013256072998
    5. '()' → logprob: -12.87513256072998
    6. '(:' → logprob: -13.75013256072998
    7. '_' → logprob: -13.75013256072998
    8. '(args' → logprob: -14.37513256072998
    9. '()(' → logprob: -14.62513256072998
    10. '(line' → logprob: -15.00013256072998

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1232774406671524
    2. ' n' → logprob: -2.248277425765991
    3. 'n' → logprob: -4.62327766418457
    4. ' input' → logprob: -8.87327766418457
    5. '	n' → logprob: -9.37327766418457
    6. ' data' → logprob: -9.87327766418457
    7. ' import' → logprob: -10.12327766418457
    8. 'data' → logprob: -10.24827766418457
    9. ' line' → logprob: -10.24827766418457
    10. 'import' → logprob: -10.49827766418457

Token 187: ' A' (ID: 355)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3335067629814148
    2. ' n' → logprob: -2.2085068225860596
    3. '   ' → logprob: -2.4585068225860596
    4. 'N' → logprob: -3.3335068225860596
    5. 't' → logprob: -4.5835065841674805
    6. 'data' → logprob: -4.8335065841674805
    7. ' N' → logprob: -5.2085065841674805
    8. 'import' → logprob: -5.2085065841674805
    9. ' t' → logprob: -5.4585065841674805
    10. ' data' → logprob: -5.8335065841674805

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05166533961892128
    2. ' =' → logprob: -3.3016653060913086
    3. '=' → logprob: -4.676665306091309
    4. ' ,' → logprob: -5.551665306091309
    5. '   ' → logprob: -8.301665306091309
    6. ' ' → logprob: -10.426665306091309
    7. '_' → logprob: -11.926665306091309
    8. ':' → logprob: -11.926665306091309
    9. ',
' → logprob: -12.176665306091309
    10. '  ' → logprob: -12.301665306091309

Token 189: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06201048195362091
    2. ' B' → logprob: -2.8120105266571045
    3. '*' → logprob: -10.312010765075684
    4. '_' → logprob: -13.312010765075684
    5. 'b' → logprob: -13.312010765075684
    6. ' ' → logprob: -13.312010765075684
    7. 'K' → logprob: -13.562010765075684
    8. '=' → logprob: -14.312010765075684
    9. 'C' → logprob: -14.937010765075684
    10. ' =' → logprob: -15.187010765075684

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10027632862329483
    2. ' =' → logprob: -2.350276231765747
    3. ',' → logprob: -9.600275993347168
    4. '=int' → logprob: -14.725275993347168
    5. ')' → logprob: -15.350275993347168
    6. '   ' → logprob: -15.350275993347168
    7. ' ' → logprob: -15.475275993347168
    8. '=input' → logprob: -15.725275993347168
    9. ')=' → logprob: -15.725275993347168
    10. '=sys' → logprob: -16.350276947021484

Token 191: ' _' (ID: 1175)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.154919981956482
    2. ' _' → logprob: -1.279919981956482
    3. ' map' → logprob: -1.779919981956482
    4. '_' → logprob: -2.0299201011657715
    5. 'map' → logprob: -2.7799201011657715
    6. '_g' → logprob: -3.6549201011657715
    7. ' ' → logprob: -4.7799201011657715
    8. '_io' → logprob: -5.1549201011657715
    9. '_input' → logprob: -6.1549201011657715
    10. '_list' → logprob: -7.9049201011657715

Token 192: 'io' (ID: 726)
  Prédit: 'io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.006118032615631819
    2. 'unique' → logprob: -5.256117820739746
    3. '_io' → logprob: -7.756117820739746
    4. '_unique' → logprob: -8.506117820739746
    5. 'map' → logprob: -9.131117820739746
    6. 'g' → logprob: -9.256117820739746
    7. ' io' → logprob: -11.631117820739746
    8. 'read' → logprob: -11.631117820739746
    9. '(io' → logprob: -12.006117820739746
    10. 'tuple' → logprob: -12.256117820739746

Token 193: '_read' (ID: 14291)
  Prédit: '_read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -1.1756367712223437e-05
    2. 'read' → logprob: -11.375011444091797
    3. '_reads' → logprob: -16.125011444091797
    4. '_READ' → logprob: -16.625011444091797
    5. '.readline' → logprob: -17.000011444091797
    6. 'Read' → logprob: -17.125011444091797
    7. ' readline' → logprob: -18.250011444091797
    8. '_write' → logprob: -18.625011444091797
    9. '_' → logprob: -18.875011444091797
    10. '_Read' → logprob: -18.875011444091797

Token 194: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0005961624556221068
    2. 'ine' → logprob: -7.500596046447754
    3. '_line' → logprob: -11.500596046447754
    4. 'e' → logprob: -11.625596046447754
    5. 'ne' → logprob: -12.000596046447754
    6. '```' → logprob: -12.750596046447754
    7. 'int' → logprob: -13.000596046447754
    8. 'read' → logprob: -13.250596046447754
    9. 'l' → logprob: -13.625596046447754
    10. 'le' → logprob: -13.750596046447754

Token 195: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.014036338776350021
    2. 'int' → logprob: -4.389036178588867
    3. 'ints' → logprob: -6.514036178588867
    4. 'Ints' → logprob: -10.389036178588867
    5. 'Int' → logprob: -12.264036178588867
    6. '```' → logprob: -13.014036178588867
    7. 's' → logprob: -13.514036178588867
    8. '<int' → logprob: -14.389036178588867
    9. 'line' → logprob: -14.889036178588867
    10. ' ints' → logprob: -15.139036178588867

Token 196: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4498052223643754e-05
    2. 'ts' → logprob: -11.375014305114746
    3. '(s' → logprob: -13.625014305114746
    4. '[s' → logprob: -14.250014305114746
    5. ' s' → logprob: -15.000014305114746
    6. ')s' → logprob: -15.750014305114746
    7. '()' → logprob: -15.750014305114746
    8. 'sts' → logprob: -16.125015258789062
    9. '[' → logprob: -16.375015258789062
    10. 'S' → logprob: -16.875015258789062

Token 197: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.13388703338569e-06
    2. '()
' → logprob: -12.125009536743164
    3. '();' → logprob: -13.625009536743164
    4. '(' → logprob: -13.875009536743164
    5. '[]' → logprob: -14.250009536743164
    6. ' ()' → logprob: -15.250009536743164
    7. '()`' → logprob: -15.750009536743164
    8. '(),' → logprob: -16.625009536743164
    9. '()\' → logprob: -16.875009536743164
    10. ')' → logprob: -17.125009536743164

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021147366613149643
    2. '    
' → logprob: -4.64614725112915
    3. '
' → logprob: -4.89614725112915
    4. '<|end|>' → logprob: -6.27114725112915
    5. '  
' → logprob: -7.52114725112915
    6. '   
' → logprob: -8.396147727966309
    7. '[' → logprob: -8.896147727966309
    8. '```' → logprob: -9.271147727966309
    9. ' 
' → logprob: -9.646147727966309
    10. ',' → logprob: -9.771147727966309

Token 199: ' cd' (ID: 24852)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.355960875749588
    2. 'if' → logprob: -2.7309608459472656
    3. 'f' → logprob: -2.8559608459472656
    4. 'u' → logprob: -3.8559608459472656
    5. 'd' → logprob: -4.105960845947266
    6. 's' → logprob: -4.230960845947266
    7. 'common' → logprob: -4.355960845947266
    8. '   ' → logprob: -4.480960845947266
    9. 'res' → logprob: -4.605960845947266
    10. 'p' → logprob: -4.605960845947266

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29751792550086975
    2. '=' → logprob: -1.7975178956985474
    3. 'f' → logprob: -2.547518014907837
    4. 'g' → logprob: -5.172517776489258
    5. 'd' → logprob: -5.922517776489258
    6. 'iff' → logprob: -6.922517776489258
    7. 'iv' → logprob: -7.297517776489258
    8. 'a' → logprob: -7.797517776489258
    9. 'c' → logprob: -7.922517776489258
    10. 'ef' → logprob: -8.047517776489258

Token 201: ' reduce' (ID: 10389)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1572304666042328
    2. '_g' → logprob: -2.4072303771972656
    3. '_a' → logprob: -4.157230377197266
    4. ' ' → logprob: -4.157230377197266
    5. ' A' → logprob: -4.657230377197266
    6. '_reduce' → logprob: -5.157230377197266
    7. '_b' → logprob: -5.907230377197266
    8. '_abs' → logprob: -6.657230377197266
    9. '_' → logprob: -6.782230377197266
    10. 'A' → logprob: -7.032230377197266

Token 202: '(lambda' (ID: 43341)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.024542488157749176
    2. '(' → logprob: -3.8995425701141357
    3. '(lambda' → logprob: -5.524542331695557
    4. '(
' → logprob: -13.524542808532715
    5. '_g' → logprob: -14.649542808532715
    6. 'lambda' → logprob: -14.774542808532715
    7. '(math' → logprob: -14.774542808532715
    8. '_lambda' → logprob: -14.774542808532715
    9. ')(_' → logprob: -15.024542808532715
    10. '(__' → logprob: -15.149542808532715

Token 203: ' x' (ID: 1215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0163005590438843
    2. ' x' → logprob: -1.1413005590438843
    3. ' lambda' → logprob: -1.7663005590438843
    4. 'a' → logprob: -2.266300678253174
    5. 'lambda' → logprob: -3.516300678253174
    6. 'x' → logprob: -4.391300678253174
    7. '(lambda' → logprob: -7.516300678253174
    8. '=lambda' → logprob: -8.016300201416016
    9. ' ' → logprob: -8.391300201416016
    10. ',' → logprob: -8.766300201416016

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.639096970204264e-05
    2. ' ,' → logprob: -9.500096321105957
    3. ',b' → logprob: -11.750096321105957
    4. ',x' → logprob: -12.500096321105957
    5. ',g' → logprob: -12.875096321105957
    6. ',y' → logprob: -13.125096321105957
    7. ',d' → logprob: -14.125096321105957
    8. ',a' → logprob: -14.125096321105957
    9. 'lambda' → logprob: -14.375096321105957
    10. 'a' → logprob: -14.625096321105957

Token 205: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06302012503147125
    2. ' y' → logprob: -2.8130202293395996
    3. 'lambda' → logprob: -7.0630202293396
    4. ' lambda' → logprob: -9.438019752502441
    5. 'a' → logprob: -9.813019752502441
    6. '_y' → logprob: -11.313019752502441
    7. 'x' → logprob: -11.438019752502441
    8. ' ' → logprob: -12.063019752502441
    9. '   ' → logprob: -12.313019752502441
    10. 'g' → logprob: -12.438019752502441

Token 206: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11810202151536942
    2. ':' → logprob: -2.3681020736694336
    3. ',_' → logprob: -4.243102073669434
    4. ' ,' → logprob: -5.993102073669434
    5. ' :' → logprob: -7.993102073669434
    6. '=_' → logprob: -8.743102073669434
    7. ':_' → logprob: -8.868102073669434
    8. '=' → logprob: -9.118102073669434
    9. ',g' → logprob: -10.118102073669434
    10. '_g' → logprob: -10.243102073669434

Token 207: ' _' (ID: 1175)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.046709004789590836
    2. ' _' → logprob: -3.1717090606689453
    3. ' x' → logprob: -6.421709060668945
    4. 'x' → logprob: -7.421709060668945
    5. ' ' → logprob: -7.546709060668945
    6. ' gcd' → logprob: -7.546709060668945
    7. '_a' → logprob: -8.921709060668945
    8. 'g' → logprob: -9.296709060668945
    9. '_x' → logprob: -10.046709060668945
    10. 'a' → logprob: -10.046709060668945

Token 208: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00015097891446202993
    2. '_g' → logprob: -9.000150680541992
    3. ' gcd' → logprob: -11.375150680541992
    4. 'io' → logprob: -11.500150680541992
    5. 'unique' → logprob: -12.500150680541992
    6. '.g' → logprob: -14.500150680541992
    7. '	g' → logprob: -15.625150680541992
    8. '   ' → logprob: -16.125150680541992
    9. '[g' → logprob: -16.125150680541992
    10. 'gc' → logprob: -16.125150680541992

Token 209: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -6.869017852295656e-06
    2. 'c' → logprob: -12.375006675720215
    3. 'cdn' → logprob: -13.750006675720215
    4. '_cd' → logprob: -15.000006675720215
    5. 'g' → logprob: -15.125006675720215
    6. 'CD' → logprob: -15.500006675720215
    7. 'cm' → logprob: -15.625006675720215
    8. 'cdf' → logprob: -15.750006675720215
    9. 'cf' → logprob: -16.12500762939453
    10. 'dc' → logprob: -16.50000762939453

Token 210: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -6.360996485454962e-05
    2. 'x' → logprob: -10.6250638961792
    3. ',' → logprob: -10.8750638961792
    4. '(' → logprob: -11.0000638961792
    5. ',x' → logprob: -13.5000638961792
    6. ' (' → logprob: -14.5000638961792
    7. ' x' → logprob: -14.8750638961792
    8. '(
' → logprob: -15.5000638961792
    9. ')' → logprob: -15.6250638961792
    10. ' ' → logprob: -15.6250638961792

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07629954069852829
    2. ',y' → logprob: -2.7012994289398193
    3. ' ,' → logprob: -5.326299667358398
    4. 'y' → logprob: -6.701299667358398
    5. ' y' → logprob: -8.826299667358398
    6. '(y' → logprob: -9.576299667358398
    7. ',
' → logprob: -11.201299667358398
    8. '   ' → logprob: -12.701299667358398
    9. ' ' → logprob: -12.701299667358398
    10. ',b' → logprob: -12.701299667358398

Token 212: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018303286284208298
    2. ' y' → logprob: -4.018303394317627
    3. 'x' → logprob: -9.018302917480469
    4. ' ' → logprob: -10.893302917480469
    5. '   ' → logprob: -12.018302917480469
    6. '  ' → logprob: -12.893302917480469
    7. ' x' → logprob: -13.768302917480469
    8. '    ' → logprob: -14.018302917480469
    9. ',' → logprob: -14.143302917480469
    10. '	y' → logprob: -14.393302917480469

Token 213: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005382810719311237
    2. ' ,' → logprob: -5.755383014678955
    3. '(A' → logprob: -6.505383014678955
    4. '(B' → logprob: -8.255382537841797
    5. ',B' → logprob: -8.880382537841797
    6. ',A' → logprob: -8.880382537841797
    7. '),' → logprob: -10.130382537841797
    8. '   ' → logprob: -10.630382537841797
    9. '_,' → logprob: -11.005382537841797
    10. 'A' → logprob: -11.255382537841797

Token 214: ' [' (ID: 723)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.2144964337348938
    2. '(A' → logprob: -1.714496374130249
    3. 'A' → logprob: -5.339496612548828
    4. ' [' → logprob: -6.089496612548828
    5. '[B' → logprob: -6.464496612548828
    6. 'chain' → logprob: -6.464496612548828
    7. '[' → logprob: -6.964496612548828
    8. ' (' → logprob: -7.839496612548828
    9. '(B' → logprob: -7.964496612548828
    10. '([' → logprob: -8.339496612548828

Token 215: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.05499910004437e-05
    2. '   ' → logprob: -10.000090599060059
    3. ' A' → logprob: -11.000090599060059
    4. 'a' → logprob: -11.750090599060059
    5. '*' → logprob: -11.875090599060059
    6. 'int' → logprob: -12.250090599060059
    7. 'abs' → logprob: -13.125090599060059
    8. '*A' → logprob: -13.250090599060059
    9. 'i' → logprob: -13.500090599060059
    10. ' ' → logprob: -14.125090599060059

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006940563675016165
    2. ' ,' → logprob: -5.2569403648376465
    3. ',B' → logprob: -6.3819403648376465
    4. 'B' → logprob: -12.006940841674805
    5. ',
' → logprob: -12.881940841674805
    6. ',A' → logprob: -13.131940841674805
    7. '   ' → logprob: -14.006940841674805
    8. ',b' → logprob: -14.506940841674805
    9. ' ' → logprob: -14.881940841674805
    10. 'A' → logprob: -15.381940841674805

Token 217: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11283209919929504
    2. ' B' → logprob: -2.2378320693969727
    3. '   ' → logprob: -11.987832069396973
    4. ' ' → logprob: -13.612832069396973
    5. '    ' → logprob: -13.737832069396973
    6. '	B' → logprob: -14.237832069396973
    7. '  ' → logprob: -15.487832069396973
    8. '_B' → logprob: -16.48783302307129
    9. ' ' → logprob: -16.61283302307129
    10. ',' → logprob: -16.98783302307129

Token 218: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010400752071291208
    2. '])' → logprob: -7.876039981842041
    3. ')
' → logprob: -8.1260404586792
    4. '))' → logprob: -9.3760404586792
    5. ' )' → logprob: -9.3760404586792
    6. ',' → logprob: -9.6260404586792
    7. '   ' → logprob: -9.6260404586792
    8. ')])' → logprob: -10.3760404586792
    9. ')]' → logprob: -12.1260404586792
    10. '),' → logprob: -12.5010404586792

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15174686908721924
    2. '
' → logprob: -2.2767467498779297
    3. '    
' → logprob: -3.2767467498779297
    4. '<|end|>' → logprob: -8.77674674987793
    5. '   
' → logprob: -9.02674674987793
    6. '  
' → logprob: -9.77674674987793
    7. '    
    
' → logprob: -11.02674674987793
    8. '        
' → logprob: -11.15174674987793
    9. ' 
' → logprob: -11.77674674987793
    10. ',' → logprob: -12.02674674987793

Token 220: ' primes' (ID: 104042)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.555355966091156
    2. 'f' → logprob: -1.8053560256958008
    3. 'pf' → logprob: -2.805356025695801
    4. 'pr' → logprob: -2.930356025695801
    5. 'p' → logprob: -3.180356025695801
    6. 'print' → logprob: -3.680356025695801
    7. 'u' → logprob: -4.180356025695801
    8. 'uf' → logprob: -4.430356025695801
    9. 'unique' → logprob: -4.805356025695801
    10. 'prime' → logprob: -4.805356025695801

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11358417570590973
    2. '=' → logprob: -2.363584280014038
    3. '_' → logprob: -4.363584041595459
    4. '   ' → logprob: -8.363584518432617
    5. '(' → logprob: -9.488584518432617
    6. ' _' → logprob: -9.613584518432617
    7. 's' → logprob: -9.738584518432617
    8. ' ' → logprob: -10.363584518432617
    9. '_=' → logprob: -10.613584518432617
    10. '  ' → logprob: -11.488584518432617

Token 222: ' _' (ID: 1175)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.023623015731573105
    2. ' _' → logprob: -3.898622989654541
    3. '_sorted' → logprob: -6.398622989654541
    4. '_g' → logprob: -7.023622989654541
    5. '_' → logprob: -8.2736234664917
    6. '_un' → logprob: -9.5236234664917
    7. '_union' → logprob: -9.7736234664917
    8. ' list' → logprob: -10.5236234664917
    9. ' ' → logprob: -10.5236234664917
    10. '   ' → logprob: -11.1486234664917

Token 223: 'unique' (ID: 22365)
  Prédit: 'unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -2.057743949990254e-05
    2. '_unique' → logprob: -11.500020980834961
    3. '(unique' → logprob: -12.500020980834961
    4. 'g' → logprob: -12.750020980834961
    5. 'io' → logprob: -13.750020980834961
    6. ' unique' → logprob: -13.875020980834961
    7. 'union' → logprob: -14.000020980834961
    8. '.unique' → logprob: -15.375020980834961
    9. 'prime' → logprob: -16.00002098083496
    10. '{' → logprob: -16.12502098083496

Token 224: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -4.537180211627856e-05
    2. '_' → logprob: -10.375045776367188
    3. 'prime' → logprob: -11.250045776367188
    4. '_pr' → logprob: -14.000045776367188
    5. ''_' → logprob: -15.375045776367188
    6. '_unique' → logprob: -17.125045776367188
    7. 'Prime' → logprob: -17.625045776367188
    8. '```' → logprob: -17.750045776367188
    9. ' _' → logprob: -18.250045776367188
    10. ' prime' → logprob: -18.500045776367188

Token 225: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.012574284337460995
    2. 'f' → logprob: -4.387574195861816
    3. '_factor' → logprob: -10.512574195861816
    4. 'factor' → logprob: -11.387574195861816
    5. ' factors' → logprob: -11.887574195861816
    6. 'prime' → logprob: -12.012574195861816
    7. '_prime' → logprob: -12.137574195861816
    8. 'Factors' → logprob: -13.012574195861816
    9. '```' → logprob: -13.887574195861816
    10. 's' → logprob: -14.137574195861816

Token 226: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -2.7372048862162046e-05
    2. 'ctors' → logprob: -10.875027656555176
    3. 'acters' → logprob: -13.125027656555176
    4. 'f' → logprob: -13.250027656555176
    5. 'actor' → logprob: -13.250027656555176
    6. '```' → logprob: -14.125027656555176
    7. 'act' → logprob: -14.250027656555176
    8. 'Factors' → logprob: -14.875027656555176
    9. 'a' → logprob: -15.375027656555176
    10. 'ators' → logprob: -15.750027656555176

Token 227: '(cd' (ID: 144776)
  Prédit: '(cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cd' → logprob: -6.034592388459714e-06
    2. '(c' → logprob: -12.750005722045898
    3. '(' → logprob: -13.125005722045898
    4. ' (' → logprob: -14.125005722045898
    5. '((' → logprob: -16.3750057220459
    6. '(C' → logprob: -16.6250057220459
    7. '(abs' → logprob: -16.7500057220459
    8. '(
' → logprob: -17.0000057220459
    9. '	cd' → logprob: -17.7500057220459
    10. 'cd' → logprob: -17.7500057220459

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012408635579049587
    2. '())' → logprob: -5.01240873336792
    3. '()' → logprob: -5.88740873336792
    4. ')
' → logprob: -6.01240873336792
    5. '()
' → logprob: -8.012408256530762
    6. '())
' → logprob: -9.387408256530762
    7. ' )' → logprob: -11.387408256530762
    8. '   ' → logprob: -11.637408256530762
    9. ' ' → logprob: -12.637408256530762
    10. '(' → logprob: -12.762408256530762

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06613148748874664
    2. '
' → logprob: -3.316131591796875
    3. 'print' → logprob: -3.691131591796875
    4. '    
' → logprob: -6.191131591796875
    5. '<|end|>' → logprob: -7.441131591796875
    6. ' print' → logprob: -9.941131591796875
    7. '```' → logprob: -10.691131591796875
    8. '  
' → logprob: -11.441131591796875
    9. 'return' → logprob: -11.691131591796875
    10. '	print' → logprob: -12.816131591796875

Token 230: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009188431431539357
    2. '   ' → logprob: -7.000918865203857
    3. ' print' → logprob: -12.5009183883667
    4. '```' → logprob: -13.1259183883667
    5. '
' → logprob: -14.2509183883667
    6. 'return' → logprob: -14.7509183883667
    7. 'for' → logprob: -15.1259183883667
    8. 'sys' → logprob: -15.2509183883667
    9. '    
' → logprob: -16.750919342041016
    10. '#print' → logprob: -17.375919342041016

Token 231: '((' (ID: 2054)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0005058500682935119
    2. '(' → logprob: -7.6255059242248535
    3. 'len' → logprob: -11.625505447387695
    4. ' (' → logprob: -12.250505447387695
    5. ' len' → logprob: -13.625505447387695
    6. '(
' → logprob: -14.125505447387695
    7. '('' → logprob: -14.375505447387695
    8. '((' → logprob: -14.500505447387695
    9. '(sum' → logprob: -14.625505447387695
    10. '()' → logprob: -15.000505447387695

Token 232: 'cd' (ID: 8301)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00032247265335172415
    2. '1' → logprob: -9.000322341918945
    3. ' len' → logprob: -9.000322341918945
    4. 'pr' → logprob: -9.750322341918945
    5. 'cd' → logprob: -12.000322341918945
    6. '(len' → logprob: -12.375322341918945
    7. ')' → logprob: -12.625322341918945
    8. '2' → logprob: -13.750322341918945
    9. '   ' → logprob: -14.125322341918945
    10. '0' → logprob: -14.750322341918945

Token 233: ' ==' (ID: 951)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17062021791934967
    2. ' -' → logprob: -3.4206202030181885
    3. 'len' → logprob: -3.5456202030181885
    4. '-' → logprob: -3.5456202030181885
    5. ',len' → logprob: -4.045620441436768
    6. ')' → logprob: -4.295620441436768
    7. '+' → logprob: -4.420620441436768
    8. ' ,' → logprob: -4.795620441436768
    9. ')+' → logprob: -5.795620441436768
    10. '**' → logprob: -6.170620441436768

Token 234: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05819796770811081
    2. ' ' → logprob: -2.9331979751586914
    3. '0' → logprob: -6.308197975158691
    4. 'A' → logprob: -6.683197975158691
    5. ' A' → logprob: -8.683197975158691
    6. 'max' → logprob: -11.308197975158691
    7. 'pr' → logprob: -11.558197975158691
    8. '2' → logprob: -11.808197975158691
    9. ' max' → logprob: -11.933197975158691
    10. ')' → logprob: -12.058197975158691

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007206894923001528
    2. 'A' → logprob: -5.257206916809082
    3. '0' → logprob: -6.632206916809082
    4. ' ' → logprob: -7.632206916809082
    5. 'max' → logprob: -9.132206916809082
    6. 'B' → logprob: -10.507206916809082
    7. ' A' → logprob: -11.882206916809082
    8. '(' → logprob: -12.632206916809082
    9. 'sum' → logprob: -12.632206916809082
    10. 'min' → logprob: -12.882206916809082

Token 236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06401456892490387
    2. ' or' → logprob: -3.1890146732330322
    3. 'or' → logprob: -4.814014434814453
    4. ' and' → logprob: -5.314014434814453
    5. 'and' → logprob: -5.314014434814453
    6. ')*' → logprob: -6.814014434814453
    7. ',' → logprob: -7.314014434814453
    8. ')+' → logprob: -7.439014434814453
    9. ' )' → logprob: -8.189014434814453
    10. '   ' → logprob: -9.939014434814453

Token 237: ' +' (ID: 659)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.23745687305927277
    2. 'or' → logprob: -1.9874569177627563
    3. ',' → logprob: -3.487456798553467
    4. ')' → logprob: -3.862456798553467
    5. 'and' → logprob: -4.487456798553467
    6. ' and' → logprob: -4.612456798553467
    7. '   ' → logprob: -7.362456798553467
    8. ' ' → logprob: -8.237457275390625
    9. '    ' → logprob: -8.487457275390625
    10. ' ,' → logprob: -9.487457275390625

Token 238: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3136301040649414
    2. 'len' → logprob: -1.3136301040649414
    3. '(len' → logprob: -7.938630104064941
    4. ' ' → logprob: -12.313630104064941
    5. '   ' → logprob: -13.188630104064941
    6. ' (' → logprob: -13.813630104064941
    7. '	len' → logprob: -13.813630104064941
    8. '1' → logprob: -14.688630104064941
    9. '[len' → logprob: -14.688630104064941
    10. '=len' → logprob: -14.688630104064941

Token 239: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.125015258789062
    3. ' (' → logprob: -15.750015258789062
    4. '(pl' → logprob: -16.375015258789062
    5. 'pr' → logprob: -18.125015258789062
    6. ')' → logprob: -19.250015258789062
    7. '	pr' → logprob: -19.375015258789062
    8. '(
' → logprob: -19.750015258789062
    9. '(p' → logprob: -20.000015258789062
    10. '(par' → logprob: -20.125015258789062

Token 240: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -3.023293538717553e-05
    2. 'omes' → logprob: -12.000030517578125
    3. '[' → logprob: -12.500030517578125
    4. '
' → logprob: -12.625030517578125
    5. 'mes' → logprob: -12.875030517578125
    6. '{' → logprob: -13.750030517578125
    7. '#' → logprob: -14.000030517578125
    8. '

' → logprob: -14.125030517578125
    9. '_' → logprob: -14.125030517578125
    10. 'im' → logprob: -14.125030517578125

Token 241: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001940040965564549
    2. '))' → logprob: -8.62519359588623
    3. '())' → logprob: -12.00019359588623
    4. ' )' → logprob: -12.25019359588623
    5. '})' → logprob: -13.75019359588623
    6. ')))' → logprob: -14.37519359588623
    7. ')
' → logprob: -14.62519359588623
    8. '()' → logprob: -15.00019359588623
    9. ')`' → logprob: -15.00019359588623
    10. '`)' → logprob: -15.50019359588623

Token 242: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.849109119386412e-06
    2. ' )' → logprob: -12.500009536743164
    3. '))' → logprob: -13.125009536743164
    4. '+' → logprob: -13.375009536743164
    5. ')`' → logprob: -14.125009536743164
    6. ')
' → logprob: -14.875009536743164
    7. '+)' → logprob: -14.875009536743164
    8. '})' → logprob: -15.250009536743164
    9. '`)' → logprob: -15.375009536743164
    10. ')+' → logprob: -16.125009536743164

Token 243: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6027846932411194
    2. '2' → logprob: -1.1027846336364746
    3. '1' → logprob: -2.2277846336364746
    4. '0' → logprob: -5.727784633636475
    5. ' (' → logprob: -6.352784633636475
    6. '(' → logprob: -6.852784633636475
    7. ' True' → logprob: -6.977784633636475
    8. 'cd' → logprob: -6.977784633636475
    9. '3' → logprob: -7.352784633636475
    10. '[' → logprob: -7.477784633636475

Token 244: 'cd' (ID: 8301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21522022783756256
    2. 'cd' → logprob: -2.0902202129364014
    3. '1' → logprob: -3.7152202129364014
    4. ' ' → logprob: -3.9652202129364014
    5. '(cd' → logprob: -4.7152204513549805
    6. '0' → logprob: -4.8402204513549805
    7. 'True' → logprob: -5.9652204513549805
    8. ' cd' → logprob: -6.0902204513549805
    9. '(' → logprob: -6.8402204513549805
    10. ' True' → logprob: -6.8402204513549805

Token 245: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3254406154155731
    2. '>' → logprob: -1.4504406452178955
    3. ' !=' → logprob: -3.4504406452178955
    4. '!=' → logprob: -4.825440406799316
    5. ' -' → logprob: -6.575440406799316
    6. '-' → logprob: -7.075440406799316
    7. ')' → logprob: -7.825440406799316
    8. ' ' → logprob: -7.825440406799316
    9. ' )' → logprob: -9.200440406799316
    10. ')>' → logprob: -9.575440406799316

Token 246: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1637132167816162
    2. ' ' → logprob: -2.413713216781616
    3. '1' → logprob: -2.788713216781616
    4. '   ' → logprob: -11.038713455200195
    5. '  ' → logprob: -11.538713455200195
    6. '=' → logprob: -12.913713455200195
    7. ')' → logprob: -13.788713455200195
    8. '    ' → logprob: -14.413713455200195
    9. '     ' → logprob: -15.163713455200195
    10. '```' → logprob: -15.226213455200195

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002271700883284211
    2. '0' → logprob: -6.12727165222168
    3. ' ' → logprob: -9.37727165222168
    4. '   ' → logprob: -13.62727165222168
    5. '```' → logprob: -15.00227165222168
    6. '  ' → logprob: -15.50227165222168
    7. ')' → logprob: -16.56477165222168
    8. '    ' → logprob: -17.50227165222168
    9. '=' → logprob: -17.56477165222168
    10. '     ' → logprob: -17.62727165222168

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133174777030945
    2. '))' → logprob: -1.3133175373077393
    3. ')))' → logprob: -9.93831729888916
    4. ' )' → logprob: -13.06331729888916
    5. ')
' → logprob: -13.31331729888916
    6. '+' → logprob: -14.18831729888916
    7. ')+' → logprob: -14.43831729888916
    8. '))
' → logprob: -14.56331729888916
    9. ' ))' → logprob: -14.68831729888916
    10. '})' → logprob: -14.81331729888916

Token 249: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. '))' → logprob: -12.000006675720215
    3. ')
' → logprob: -15.000006675720215
    4. ' )' → logprob: -15.000006675720215
    5. '   ' → logprob: -16.75000762939453
    6. ')`' → logprob: -17.00000762939453
    7. ')))' → logprob: -17.12500762939453
    8. '`)' → logprob: -17.62500762939453
    9. '())' → logprob: -17.87500762939453
    10. '()' → logprob: -18.87500762939453

Token 250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02069627307355404
    2. ' ' → logprob: -4.27069616317749
    3. '-' → logprob: -5.64569616317749
    4. '0' → logprob: -6.14569616317749
    5. ' -' → logprob: -7.52069616317749
    6. '(' → logprob: -9.645696640014648
    7. '2' → logprob: -9.645696640014648
    8. ' (' → logprob: -9.770696640014648
    9. 'cd' → logprob: -10.520696640014648
    10. '(cd' → logprob: -11.145696640014648

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3748255968093872
    2. '-' → logprob: -1.3748255968093872
    3. '0' → logprob: -2.9998254776000977
    4. ' ' → logprob: -6.124825477600098
    5. '(' → logprob: -6.249825477600098
    6. '(-' → logprob: -6.499825477600098
    7. ' -' → logprob: -6.749825477600098
    8. '(cd' → logprob: -6.749825477600098
    9. '(A' → logprob: -7.999825477600098
    10. 'cd' → logprob: -7.999825477600098

Token 252: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. '))' → logprob: -12.500006675720215
    3. ' )' → logprob: -13.250006675720215
    4. ')
' → logprob: -14.500006675720215
    5. ')`' → logprob: -15.000006675720215
    6. '`)' → logprob: -16.3750057220459
    7. ')))' → logprob: -17.8750057220459
    8. ')#' → logprob: -18.1250057220459
    9. '})' → logprob: -18.2500057220459
    10. '```' → logprob: -18.6250057220459

Token 253: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.057520899921655655
    2. '(cd' → logprob: -3.057520866394043
    3. 'cd' → logprob: -6.432520866394043
    4. 'int' → logprob: -6.432520866394043
    5. '2' → logprob: -6.557520866394043
    6. ' (' → logprob: -7.057520866394043
    7. '(len' → logprob: -7.182520866394043
    8. ' ' → logprob: -7.182520866394043
    9. '(' → logprob: -7.307520866394043
    10. 'len' → logprob: -7.807520866394043

Token 254: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.16587501764297485
    2. '(cd' → logprob: -2.04087495803833
    3. '1' → logprob: -4.29087495803833
    4. ' cd' → logprob: -5.16587495803833
    5. 'A' → logprob: -6.41587495803833
    6. 'pr' → logprob: -7.54087495803833
    7. 'len' → logprob: -7.79087495803833
    8. 'B' → logprob: -8.415875434875488
    9. '(A' → logprob: -9.040875434875488
    10. '(pr' → logprob: -9.290875434875488

Token 255: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28648701310157776
    2. ' ==' → logprob: -1.4114869832992554
    3. '!=' → logprob: -5.786487102508545
    4. ' !=' → logprob: -6.286487102508545
    5. ' ' → logprob: -8.161486625671387
    6. '>' → logprob: -10.411486625671387
    7. ')' → logprob: -10.786486625671387
    8. '=' → logprob: -11.036486625671387
    9. '  ' → logprob: -11.286486625671387
    10. '%' → logprob: -12.286486625671387

Token 256: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02120128646492958
    2. '0' → logprob: -4.146201133728027
    3. ' ' → logprob: -5.271201133728027
    4. '   ' → logprob: -11.896201133728027
    5. ')' → logprob: -12.896201133728027
    6. '  ' → logprob: -13.458701133728027
    7. '=' → logprob: -13.458701133728027
    8. '```' → logprob: -14.708701133728027
    9. '    ' → logprob: -15.396201133728027
    10. '-' → logprob: -16.146202087402344

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006416454911231995
    2. '0' → logprob: -5.131416320800781
    3. ' ' → logprob: -7.631416320800781
    4. '   ' → logprob: -13.693916320800781
    5. ')' → logprob: -14.881416320800781
    6. '=' → logprob: -15.068916320800781
    7. '  ' → logprob: -15.318916320800781
    8. '```' → logprob: -15.818916320800781
    9. '-' → logprob: -17.38141632080078
    10. '    ' → logprob: -17.56891632080078

Token 258: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3870531916618347
    2. '))' → logprob: -1.1370532512664795
    3. ')))' → logprob: -8.762053489685059
    4. ' )' → logprob: -11.637053489685059
    5. ')
' → logprob: -12.012053489685059
    6. '))
' → logprob: -13.012053489685059
    7. ' ))' → logprob: -13.012053489685059
    8. ')}' → logprob: -13.887053489685059
    9. '   ' → logprob: -14.512053489685059
    10. ')`' → logprob: -14.512053489685059

Token 259: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.14279575645923615
    2. '__' → logprob: -2.0177958011627197
    3. '_' → logprob: -9.26779556274414
    4. '___' → logprob: -11.89279556274414
    5. '_name' → logprob: -12.01779556274414
    6. 'name' → logprob: -12.26779556274414
    7. ' ' → logprob: -13.01779556274414
    8. ' ' → logprob: -13.14279556274414
    9. ''' → logprob: -13.76779556274414
    10. '____' → logprob: -14.64279556274414

Token 261: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008790657739154994
    2. ' __' → logprob: -8.000879287719727
    3. '__.__' → logprob: -8.375879287719727
    4. '==' → logprob: -9.500879287719727
    5. '.__' → logprob: -9.500879287719727
    6. '___' → logprob: -10.125879287719727
    7. '____' → logprob: -10.375879287719727
    8. '__.' → logprob: -10.375879287719727
    9. '_' → logprob: -11.625879287719727
    10. ' ==' → logprob: -11.625879287719727

Token 262: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00017720005416776985
    2. '__.__' → logprob: -8.750177383422852
    3. '==' → logprob: -11.625177383422852
    4. '__.' → logprob: -12.750177383422852
    5. '___' → logprob: -13.250177383422852
    6. '____' → logprob: -13.250177383422852
    7. '__["' → logprob: -13.875177383422852
    8. '__
' → logprob: -14.250177383422852
    9. '__[' → logprob: -14.375177383422852
    10. '__":
' → logprob: -15.000177383422852

Token 263: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6472620368003845
    2. '==' → logprob: -0.8972620368003845
    3. ' ==' → logprob: -2.8972620964050293
    4. '=="' → logprob: -4.397262096405029
    5. '=='' → logprob: -7.522262096405029
    6. '__.__' → logprob: -8.147261619567871
    7. '_' → logprob: -9.147261619567871
    8. '[' → logprob: -9.397261619567871
    9. '.__' → logprob: -9.647261619567871
    10. '==
' → logprob: -10.022261619567871

Token 264: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1602337658405304
    2. ''' → logprob: -1.910233736038208
    3. ' "__' → logprob: -11.785233497619629
    4. '__' → logprob: -13.660233497619629
    5. ' '__' → logprob: -15.160233497619629
    6. '"user' → logprob: -15.410233497619629
    7. ' "' → logprob: -16.785234451293945
    8. ''"' → logprob: -17.535234451293945
    9. '"name' → logprob: -17.660234451293945
    10. '"_' → logprob: -17.910234451293945

Token 265: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.47626737493556e-05
    2. '__' → logprob: -11.12503433227539
    3. 'name' → logprob: -11.37503433227539
    4. '_main' → logprob: -13.00003433227539
    5. '"' → logprob: -13.37503433227539
    6. 'module' → logprob: -14.62503433227539
    7. '```' → logprob: -14.62503433227539
    8. 'python' → logprob: -14.87503433227539
    9. ' main' → logprob: -14.87503433227539
    10. 'built' → logprob: -15.12503433227539

Token 266: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.484160840511322
    2. '__' → logprob: -0.984160840511322
    3. '__':
' → logprob: -4.859160900115967
    4. '__:' → logprob: -6.234160900115967
    5. '__.' → logprob: -9.234160423278809
    6. '__["' → logprob: -9.609160423278809
    7. '__.__' → logprob: -9.609160423278809
    8. '__
' → logprob: -10.984160423278809
    9. '__
' → logprob: -11.109160423278809
    10. '__[' → logprob: -11.109160423278809

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09442208707332611
    2. 'solve' → logprob: -2.9694221019744873
    3. ' solve' → logprob: -3.8444221019744873
    4. '	s' → logprob: -4.344421863555908
    5. '```' → logprob: -6.344421863555908
    6. '.solve' → logprob: -7.219421863555908
    7. '    
' → logprob: -7.344421863555908
    8. '<|end|>' → logprob: -7.469421863555908
    9. '
' → logprob: -8.844422340393066
    10. '   ' → logprob: -9.719422340393066

Token 268: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -9.73446003627032e-05
    2. '   ' → logprob: -9.250097274780273
    3. ' solve' → logprob: -13.750097274780273
    4. 'import' → logprob: -16.750097274780273
    5. '.solve' → logprob: -17.000097274780273
    6. '```' → logprob: -18.750097274780273
    7. 'resolve' → logprob: -19.375097274780273
    8. 'main' → logprob: -19.875097274780273
    9. 'sys' → logprob: -20.125097274780273
    10. 'sol' → logprob: -20.125097274780273

Token 269: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 267
Tokens correctement prédits (1ère position, stricte): 111
Tokens correctement prédits (1ère position, avec adaptation): 115
Tokens correctement prédits (top 10): 214
Précision stricte (1ère position): 41.57%
Précision adaptée (1ère position): 43.07%
Précision (top 10): 80.15%
================================================================================
