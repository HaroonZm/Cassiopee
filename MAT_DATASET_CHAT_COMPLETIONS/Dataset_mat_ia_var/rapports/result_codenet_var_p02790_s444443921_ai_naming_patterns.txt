================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
value_first, value_second = map(int, input().split())
concat_first = 0
concat_second = 0
for index_first in range(value_second):
    concat_first += value_first * (10 ** index_first)
for index_second in range(value_first):
    concat_second += value_second * (10 ** index_second)
if value_first < value_second:
    print(concat_first)
elif value_first > value_second:
    print(concat_second)
else:
    print(min(concat_first, concat_second))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'value' (ID: 1594)
  → Token d'amorce (pas de prédiction)

Token 1: '_first' (ID: 29347)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' value' (ID: 1432)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3358847200870514
    2. '_' → logprob: -2.2108848094940186
    3. 'value' → logprob: -2.7108848094940186
    4. '```' → logprob: -3.0858848094940186
    5. '_value' → logprob: -4.0858845710754395
    6. ',' → logprob: -4.4608845710754395
    7. ')' → logprob: -4.7108845710754395
    8. '=value' → logprob: -4.8358845710754395
    9. ' =' → logprob: -5.5858845710754395
    10. ' ' → logprob: -6.2108845710754395

Token 4: '_second' (ID: 67724)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3432218134403229
    2. '_' → logprob: -1.7182217836380005
    3. '=' → logprob: -2.59322190284729
    4. ')' → logprob: -4.093221664428711
    5. '[' → logprob: -4.718221664428711
    6. '```' → logprob: -5.593221664428711
    7. ' =' → logprob: -5.718221664428711
    8. '+' → logprob: -7.093221664428711
    9. '_,' → logprob: -7.093221664428711
    10. '.' → logprob: -8.218221664428711

Token 5: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3080349564552307
    2. ',' → logprob: -2.058034896850586
    3. '=' → logprob: -2.183034896850586
    4. '```' → logprob: -4.058034896850586
    5. '+' → logprob: -6.433034896850586
    6. ')' → logprob: -6.808034896850586
    7. '_,' → logprob: -6.808034896850586
    8. '[' → logprob: -7.058034896850586
    9. ' =' → logprob: -7.683034896850586
    10. '.' → logprob: -7.808034896850586

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4091818630695343
    2. ' None' → logprob: -2.284181833267212
    3. ' input' → logprob: -2.409181833267212
    4. '0' → logprob: -3.159181833267212
    5. ' value' → logprob: -3.284181833267212
    6. 'input' → logprob: -4.034182071685791
    7. 'value' → logprob: -4.159182071685791
    8. ' []' → logprob: -4.784182071685791
    9. 'None' → logprob: -5.409182071685791
    10. ' some' → logprob: -5.659182071685791

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09306541085243225
    2. '(lambda' → logprob: -2.5930655002593994
    3. '<|end|>' → logprob: -4.46806526184082
    4. '```' → logprob: -7.59306526184082
    5. ')' → logprob: -7.71806526184082
    6. '<|end|>' → logprob: -8.09306526184082
    7. '(int' → logprob: -8.59306526184082
    8. '(token' → logprob: -8.71806526184082
    9. '(value' → logprob: -8.84306526184082
    10. '(user' → logprob: -8.84306526184082

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01651311106979847
    2. ')' → logprob: -4.641513347625732
    3. '(' → logprob: -5.891513347625732
    4. 'input' → logprob: -6.141513347625732
    5. '(value' → logprob: -6.641513347625732
    6. '(user' → logprob: -8.391512870788574
    7. ' input' → logprob: -9.516512870788574
    8. '('' → logprob: -10.016512870788574
    9. ',input' → logprob: -10.391512870788574
    10. '(raw' → logprob: -10.766512870788574

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1811351329088211
    2. ' input' → logprob: -1.8061351776123047
    3. ')' → logprob: -6.806135177612305
    4. '(input' → logprob: -8.306135177612305
    5. 'value' → logprob: -11.431135177612305
    6. ' )' → logprob: -12.306135177612305
    7. ',input' → logprob: -12.306135177612305
    8. 'user' → logprob: -13.431135177612305
    9. '```' → logprob: -13.431135177612305
    10. '=input' → logprob: -13.681135177612305

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7313008904457092
    2. '()' → logprob: -0.8563008904457092
    3. ')' → logprob: -3.3563008308410645
    4. '(' → logprob: -3.3563008308410645
    5. '(()' → logprob: -5.3563008308410645
    6. '().' → logprob: -5.3563008308410645
    7. '('' → logprob: -5.7313008308410645
    8. '()))' → logprob: -6.6063008308410645
    9. '();)' → logprob: -6.6063008308410645
    10. '`()' → logprob: -6.8563008308410645

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002682496269699186
    2. 'strip' → logprob: -8.25026798248291
    3. ' split' → logprob: -12.50026798248291
    4. 'rstrip' → logprob: -12.75026798248291
    5. '(split' → logprob: -16.125268936157227
    6. 'spl' → logprob: -16.125268936157227
    7. 'replace' → logprob: -16.750268936157227
    8. ')' → logprob: -16.875268936157227
    9. 'read' → logprob: -17.125268936157227
    10. 's' → logprob: -18.000268936157227

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17651133239269257
    2. ')' → logprob: -2.051511287689209
    3. '))' → logprob: -4.176511287689209
    4. '('' → logprob: -4.926511287689209
    5. '()))' → logprob: -5.551511287689209
    6. '()' → logprob: -5.676511287689209
    7. '(' → logprob: -5.801511287689209
    8. '`)' → logprob: -9.051511764526367
    9. '')' → logprob: -10.051511764526367
    10. '(','' → logprob: -10.176511764526367

Token 13: 'concat' (ID: 41859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03267954662442207
    2. '#' → logprob: -4.907679557800293
    3. '+
' → logprob: -4.907679557800293
    4. ',' → logprob: -5.532679557800293
    5. '*' → logprob: -5.532679557800293
    6. ')' → logprob: -6.407679557800293
    7. ':' → logprob: -6.782679557800293
    8. '[' → logprob: -6.907679557800293
    9. '.' → logprob: -7.032679557800293
    10. 'if' → logprob: -7.157679557800293

Token 14: '_first' (ID: 29347)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.056147702038288116
    2. '(value' → logprob: -4.056147575378418
    3. '_value' → logprob: -4.181147575378418
    4. '_' → logprob: -4.181147575378418
    5. 'ed' → logprob: -6.806147575378418
    6. '('' → logprob: -6.806147575378418
    7. 'value' → logprob: -7.056147575378418
    8. '_val' → logprob: -7.306147575378418
    9. 'er' → logprob: -7.431147575378418
    10. '('_' → logprob: -8.306147575378418

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07679368555545807
    2. '_value' → logprob: -3.326793670654297
    3. '+' → logprob: -3.951793670654297
    4. '(' → logprob: -4.826793670654297
    5. '(value' → logprob: -5.951793670654297
    6. ')' → logprob: -6.201793670654297
    7. 'ed' → logprob: -6.201793670654297
    8. 'value' → logprob: -6.576793670654297
    9. '=' → logprob: -7.326793670654297
    10. '```' → logprob: -8.201793670654297

Token 16: ' ' (ID: 220)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.1300363540649414
    2. ' str' → logprob: -2.1300363540649414
    3. 'value' → logprob: -6.005036354064941
    4. ' value' → logprob: -7.880036354064941
    5. 'int' → logprob: -8.880036354064941
    6. ' ' → logprob: -10.505036354064941
    7. '(str' → logprob: -10.880036354064941
    8. ' int' → logprob: -11.005036354064941
    9. 'f' → logprob: -11.255036354064941
    10. 'input' → logprob: -11.880036354064941

Token 17: '0' (ID: 15)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0018600922776386142
    2. ' str' → logprob: -6.62686014175415
    3. 'value' → logprob: -7.62686014175415
    4. '(str' → logprob: -11.251859664916992
    5. 'f' → logprob: -11.376859664916992
    6. 'input' → logprob: -11.751859664916992
    7. '""' → logprob: -12.376859664916992
    8. 'int' → logprob: -12.626859664916992
    9. ' value' → logprob: -13.626859664916992
    10. '[str' → logprob: -13.876859664916992

Token 18: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: 'concat' (ID: 41859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2352779656648636
    2. '_' → logprob: -2.1102778911590576
    3. 'for' → logprob: -3.9852778911590576
    4. ',' → logprob: -4.360278129577637
    5. ')' → logprob: -4.360278129577637
    6. '=' → logprob: -4.860278129577637
    7. '<|end|>' → logprob: -4.860278129577637
    8. ' ' → logprob: -5.360278129577637
    9. '#' → logprob: -5.610278129577637
    10. '*' → logprob: -5.860278129577637

Token 20: '_second' (ID: 67724)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8696413040161133
    2. '_first' → logprob: -1.1196413040161133
    3. '_second' → logprob: -1.3696413040161133
    4. 'ed' → logprob: -9.619641304016113
    5. '_value' → logprob: -9.994641304016113
    6. '_f' → logprob: -10.744641304016113
    7. '_concat' → logprob: -10.744641304016113
    8. '_=' → logprob: -10.869641304016113
    9. '__' → logprob: -10.994641304016113
    10. '_last' → logprob: -11.119641304016113

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05534392595291138
    2. '=' → logprob: -2.9303438663482666
    3. ' ' → logprob: -8.430343627929688
    4. ' +=' → logprob: -9.055343627929688
    5. '_' → logprob: -9.430343627929688
    6. '<|end|>' → logprob: -11.180343627929688
    7. ')' → logprob: -11.805343627929688
    8. '_=' → logprob: -12.055343627929688
    9. ' |=' → logprob: -12.430343627929688
    10. '+=' → logprob: -13.055343627929688

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7456664443016052
    2. ' ' → logprob: -0.7456664443016052
    3. ' value' → logprob: -3.74566650390625
    4. 'value' → logprob: -3.74566650390625
    5. 'concat' → logprob: -6.87066650390625
    6. ' int' → logprob: -6.99566650390625
    7. ' concat' → logprob: -7.37066650390625
    8. 'int' → logprob: -7.49566650390625
    9. '1' → logprob: -8.24566650390625
    10. '10' → logprob: -9.37066650390625

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008704278618097305
    2. 'value' → logprob: -4.88370418548584
    3. ' ' → logprob: -7.75870418548584
    4. 'concat' → logprob: -7.88370418548584
    5. 'int' → logprob: -8.88370418548584
    6. '''' → logprob: -10.13370418548584
    7. '1' → logprob: -10.63370418548584
    8. ' value' → logprob: -10.88370418548584
    9. '(value' → logprob: -11.25870418548584
    10. 'conc' → logprob: -11.50870418548584

Token 24: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.041530415415763855
    2. ' for' → logprob: -3.5415303707122803
    3. '
' → logprob: -5.041530609130859
    4. 'if' → logprob: -6.541530609130859
    5. '<|end|>' → logprob: -6.541530609130859
    6. 'i' → logprob: -7.291530609130859
    7. ' 
' → logprob: -7.791530609130859
    8. 'while' → logprob: -8.16653060913086
    9. ' if' → logprob: -8.91653060913086
    10. '```' → logprob: -9.16653060913086

Token 25: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023095807060599327
    2. 'i' → logprob: -4.648095607757568
    3. 'f' → logprob: -5.023095607757568
    4. ' for' → logprob: -5.648095607757568
    5. '
' → logprob: -7.023095607757568
    6. 'if' → logprob: -7.148095607757568
    7. 'n' → logprob: -8.648096084594727
    8. ' 
' → logprob: -8.648096084594727
    9. ' ' → logprob: -9.023096084594727
    10. '```' → logprob: -9.148096084594727

Token 26: ' index' (ID: 3472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21559669077396393
    2. ' i' → logprob: -2.2155966758728027
    3. '_' → logprob: -3.2155966758728027
    4. ' _' → logprob: -3.3405966758728027
    5. '  ' → logprob: -5.340596675872803
    6. ' value' → logprob: -5.465596675872803
    7. 'i' → logprob: -8.840597152709961
    8. 'value' → logprob: -10.340597152709961
    9. ' ‌' → logprob: -10.715597152709961
    10. ' ' → logprob: -11.090597152709961

Token 27: '_first' (ID: 29347)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09129852056503296
    2. 'in' → logprob: -2.4662985801696777
    3. ' ' → logprob: -6.466298580169678
    4. ',' → logprob: -8.34129810333252
    5. ')' → logprob: -8.46629810333252
    6. '+' → logprob: -9.34129810333252
    7. '[' → logprob: -9.96629810333252
    8. '  ' → logprob: -10.09129810333252
    9. ' ,' → logprob: -10.96629810333252
    10. '0' → logprob: -11.21629810333252

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22858232259750366
    2. 'in' → logprob: -1.6035823822021484
    3. ',' → logprob: -6.728582382202148
    4. ' ' → logprob: -6.978582382202148
    5. ')' → logprob: -7.353582382202148
    6. ' ,' → logprob: -9.478582382202148
    7. '[' → logprob: -9.728582382202148
    8. '+' → logprob: -9.978582382202148
    9. '  ' → logprob: -10.853582382202148
    10. '_in' → logprob: -10.853582382202148

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06666237115859985
    2. 'range' → logprob: -3.066662311553955
    3. ' value' → logprob: -4.066662311553955
    4. 'value' → logprob: -7.191662311553955
    5. ' ' → logprob: -11.191662788391113
    6. '	range' → logprob: -13.441662788391113
    7. '(range' → logprob: -13.566662788391113
    8. ')' → logprob: -13.816662788391113
    9. '  ' → logprob: -13.941662788391113
    10. '(value' → logprob: -14.066662788391113

Token 30: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7639461159706116
    2. '(value' → logprob: -1.0139460563659668
    3. '(len' → logprob: -1.7639460563659668
    4. '(length' → logprob: -11.513946533203125
    5. ' (' → logprob: -12.013946533203125
    6. '(
' → logprob: -12.513946533203125
    7. '((' → logprob: -13.513946533203125
    8. '(

' → logprob: -14.763946533203125
    9. 'len' → logprob: -15.138946533203125
    10. '(int' → logprob: -15.263946533203125

Token 31: '_second' (ID: 67724)
  Prédit: '_first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.000182921823579818
    2. '_second' → logprob: -8.62518310546875
    3. ')_' → logprob: -13.37518310546875
    4. '_' → logprob: -14.37518310546875
    5. '_f' → logprob: -14.62518310546875
    6. ' _' → logprob: -15.00018310546875
    7. '_FIRST' → logprob: -16.00018310546875
    8. 'First' → logprob: -16.12518310546875
    9. '_First' → logprob: -16.12518310546875
    10. ')' → logprob: -17.00018310546875

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02709270641207695
    2. '+' → logprob: -3.902092695236206
    3. ' ):' → logprob: -5.777092933654785
    4. ' +' → logprob: -6.277092933654785
    5. ')' → logprob: -7.027092933654785
    6. ',' → logprob: -8.027092933654785
    7. '):
' → logprob: -9.027092933654785
    8. ':' → logprob: -9.652092933654785
    9. '-' → logprob: -9.902092933654785
    10. '**' → logprob: -10.902092933654785

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.880561888217926
    2. '    ' → logprob: -1.0055618286132812
    3. ' ' → logprob: -2.2555618286132812
    4. ' concat' → logprob: -3.3805618286132812
    5. '+' → logprob: -3.8805618286132812
    6. '[' → logprob: -3.8805618286132812
    7. 'concat' → logprob: -4.505561828613281
    8. ' for' → logprob: -5.130561828613281
    9. ')' → logprob: -5.880561828613281
    10. '    
' → logprob: -6.255561828613281

Token 34: ' concat' (ID: 73950)
  Prédit: ' concat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' concat' → logprob: -0.09343484789133072
    2. ' ' → logprob: -3.3434348106384277
    3. 'concat' (adapté à ' concat') → logprob: -3.5934348106384277
    4. '    ' → logprob: -4.968434810638428
    5. ' for' → logprob: -5.093434810638428
    6. ' 
' → logprob: -5.843434810638428
    7. ' if' → logprob: -6.593434810638428
    8. ' ```' → logprob: -6.593434810638428
    9. '```' → logprob: -6.718434810638428
    10. ' conc' → logprob: -7.093434810638428

Token 35: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.006752905435860157
    2. '_second' → logprob: -5.006752967834473
    3. '_' → logprob: -10.881752967834473
    4. ')_' → logprob: -12.381752967834473
    5. 'First' → logprob: -12.881752967834473
    6. '```' → logprob: -12.881752967834473
    7. '__' → logprob: -13.256752967834473
    8. ' _' → logprob: -13.631752967834473
    9. '_concat' → logprob: -13.756752967834473
    10. '_FIRST' → logprob: -13.881752967834473

Token 36: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7661516666412354
    2. '=' → logprob: -0.8911516666412354
    3. ' +=' → logprob: -2.7661516666412354
    4. ' *=' → logprob: -3.5161516666412354
    5. '+=' → logprob: -4.016151428222656
    6. ' ' → logprob: -5.016151428222656
    7. '*=' → logprob: -5.016151428222656
    8. ' <<=' → logprob: -7.266151428222656
    9. ' |=' → logprob: -8.641151428222656
    10. '*' → logprob: -9.016151428222656

Token 37: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.3727222681045532
    2. ' value' → logprob: -1.3727222681045532
    3. '10' → logprob: -4.122722148895264
    4. 'int' → logprob: -4.372722148895264
    5. '(value' → logprob: -4.997722148895264
    6. '1' → logprob: -5.122722148895264
    7. ' ' → logprob: -5.247722148895264
    8. ' int' → logprob: -5.622722148895264
    9. ' (' → logprob: -6.122722148895264
    10. 'pow' → logprob: -6.622722148895264

Token 38: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0002124806633219123
    2. '_second' → logprob: -8.500212669372559
    3. '_' → logprob: -12.125212669372559
    4. 'first' → logprob: -14.500212669372559
    5. 's' → logprob: -14.625212669372559
    6. '_last' → logprob: -15.000212669372559
    7. 'First' → logprob: -15.250212669372559
    8. '_FIRST' → logprob: -15.250212669372559
    9. '```' → logprob: -15.250212669372559
    10. ' _' → logprob: -15.500212669372559

Token 39: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4329933524131775
    2. ' *' → logprob: -1.1829934120178223
    3. '<|end|>' → logprob: -3.9329934120178223
    4. '0' → logprob: -4.182993412017822
    5. '10' → logprob: -4.807993412017822
    6. '*(' → logprob: -7.057993412017822
    7. '000' → logprob: -8.057992935180664
    8. ' ' → logprob: -8.932992935180664
    9. '00' → logprob: -9.057992935180664
    10. '100' → logprob: -9.307992935180664

Token 40: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5646119713783264
    2. '(' → logprob: -1.3146119117736816
    3. '100' → logprob: -1.9396119117736816
    4. '0' → logprob: -5.064611911773682
    5. ' (' → logprob: -5.564611911773682
    6. '1' → logprob: -5.939611911773682
    7. 'pow' → logprob: -6.064611911773682
    8. '(value' → logprob: -6.564611911773682
    9. ' ' → logprob: -6.689611911773682
    10. 'value' → logprob: -7.439611911773682

Token 41: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.049359921365976334
    2. '(' → logprob: -3.7993600368499756
    3. '100' → logprob: -3.7993600368499756
    4. ' ' → logprob: -6.0493597984313965
    5. '0' → logprob: -7.9243597984313965
    6. '1' → logprob: -8.549360275268555
    7. 'pow' → logprob: -9.049360275268555
    8. ' (' → logprob: -9.674360275268555
    9. 'index' → logprob: -9.924360275268555
    10. '   ' → logprob: -9.924360275268555

Token 42: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.006774812005460262
    2. '**)' → logprob: -5.38177490234375
    3. '*' → logprob: -6.63177490234375
    4. ' **' → logprob: -7.63177490234375
    5. ')' → logprob: -8.75677490234375
    6. ')**' → logprob: -9.38177490234375
    7. ' **)' → logprob: -9.88177490234375
    8. '*)' → logprob: -10.25677490234375
    9. '***' → logprob: -11.88177490234375
    10. '```' → logprob: -12.50677490234375

Token 43: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0021004180889576674
    2. ' index' → logprob: -6.252100467681885
    3. '(index' → logprob: -8.877099990844727
    4. '(' → logprob: -11.002099990844727
    5. ')' → logprob: -12.377099990844727
    6. ' (' → logprob: -13.002099990844727
    7. '_index' → logprob: -13.627099990844727
    8. ' ' → logprob: -13.752099990844727
    9. '#index' → logprob: -13.752099990844727
    10. '   ' → logprob: -13.877099990844727

Token 44: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0002593130338937044
    2. '_second' → logprob: -9.000259399414062
    3. 'first' → logprob: -9.250259399414062
    4. ')' → logprob: -11.125259399414062
    5. 'First' → logprob: -11.375259399414062
    6. ')_' → logprob: -11.750259399414062
    7. '_FIRST' → logprob: -13.125259399414062
    8. '1' → logprob: -14.500259399414062
    9. '_)' → logprob: -14.625259399414062
    10. '+' → logprob: -14.625259399414062

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00778879364952445
    2. '+' → logprob: -5.38278865814209
    3. ')
' → logprob: -7.00778865814209
    4. ' )' → logprob: -7.00778865814209
    5. ' +' → logprob: -7.13278865814209
    6. ')+' → logprob: -8.13278865814209
    7. '+)' → logprob: -9.13278865814209
    8. '   ' → logprob: -9.38278865814209
    9. '<|end|>' → logprob: -11.25778865814209
    10. ' +
' → logprob: -11.38278865814209

Token 46: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21273432672023773
    2. '+
' → logprob: -1.837734341621399
    3. 'for' → logprob: -4.337734222412109
    4. '
' → logprob: -4.712734222412109
    5. ' for' → logprob: -5.712734222412109
    6. ' 
' → logprob: -6.087734222412109
    7. '<|end|>' → logprob: -6.587734222412109
    8. ')' → logprob: -7.462734222412109
    9. ' +' → logprob: -7.587734222412109
    10. '```' → logprob: -7.712734222412109

Token 47: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.22172723710536957
    2. ' range' → logprob: -1.9717272520065308
    3. ' value' → logprob: -3.096727132797241
    4. 'index' → logprob: -4.47172737121582
    5. 'range' → logprob: -6.22172737121582
    6. 'value' → logprob: -7.09672737121582
    7. ' ' → logprob: -9.09672737121582
    8. '_' → logprob: -10.09672737121582
    9. ' in' → logprob: -10.97172737121582
    10. ' _' → logprob: -10.97172737121582

Token 48: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.08905985951423645
    2. '_first' → logprob: -2.464059829711914
    3. '_' → logprob: -9.464059829711914
    4. 'second' → logprob: -10.964059829711914
    5. ' in' → logprob: -11.589059829711914
    6. 'Second' → logprob: -12.089059829711914
    7. 'first' → logprob: -12.589059829711914
    8. '```' → logprob: -13.464059829711914
    9. '_SECOND' → logprob: -13.964059829711914
    10. 'First' → logprob: -14.214059829711914

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007626030594110489
    2. 'in' → logprob: -4.882626056671143
    3. ' ' → logprob: -11.007625579833984
    4. '+' → logprob: -14.632625579833984
    5. 'range' → logprob: -15.007625579833984
    6. '_' → logprob: -15.132625579833984
    7. ',' → logprob: -15.132625579833984
    8. '<|end|>' → logprob: -15.132625579833984
    9. 'value' → logprob: -15.507625579833984
    10. '1' → logprob: -15.507625579833984

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326669454574585
    2. 'range' → logprob: -1.3132667541503906
    3. '(range' → logprob: -13.68826675415039
    4. '	range' → logprob: -13.68826675415039
    5. ' ' → logprob: -14.06326675415039
    6. '   ' → logprob: -14.18826675415039
    7. 'value' → logprob: -15.06326675415039
    8. ' value' → logprob: -15.81326675415039
    9. '  ' → logprob: -15.93826675415039
    10. '    ' → logprob: -16.06326675415039

Token 51: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.000614028365816921
    2. '(' → logprob: -8.000614166259766
    3. 'value' → logprob: -8.875614166259766
    4. ' (' → logprob: -9.625614166259766
    5. '(len' → logprob: -9.875614166259766
    6. ' value' → logprob: -11.375614166259766
    7. '(con' → logprob: -13.000614166259766
    8. ' ' → logprob: -13.625614166259766
    9. 'len' → logprob: -13.875614166259766
    10. '   ' → logprob: -14.000614166259766

Token 52: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.08899082988500595
    2. '_second' → logprob: -2.4639909267425537
    3. 'first' → logprob: -10.338991165161133
    4. '_th' → logprob: -12.588991165161133
    5. 'second' → logprob: -12.838991165161133
    6. 'First' → logprob: -13.338991165161133
    7. '_' → logprob: -13.463991165161133
    8. ')' → logprob: -13.838991165161133
    9. ' ' → logprob: -13.963991165161133
    10. '_FIRST' → logprob: -14.088991165161133

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009044341859407723
    2. '):
' → logprob: -7.875904560089111
    3. '+' → logprob: -8.375904083251953
    4. ':' → logprob: -8.625904083251953
    5. ',' → logprob: -9.375904083251953
    6. '*' → logprob: -11.750904083251953
    7. ' +' → logprob: -12.000904083251953
    8. ' *' → logprob: -12.375904083251953
    9. ' ):' → logprob: -12.750904083251953
    10. '):
' → logprob: -13.125904083251953

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013708343030884862
    2. ' concat' → logprob: -7.001370906829834
    3. 'concat' → logprob: -8.001370429992676
    4. '+' → logprob: -9.626370429992676
    5. '    ' → logprob: -11.001370429992676
    6. '   ' → logprob: -11.626370429992676
    7. '_concat' → logprob: -12.126370429992676
    8. '  ' → logprob: -12.126370429992676
    9. ' concaten' → logprob: -12.751370429992676
    10. ' ' → logprob: -13.001370429992676

Token 55: ' concat' (ID: 73950)
  Prédit: ' concat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' concat' → logprob: -0.6533410549163818
    2. 'concat' (adapté à ' concat') → logprob: -0.7783410549163818
    3. '   ' → logprob: -3.903341054916382
    4. '+' → logprob: -9.278341293334961
    5. '.concat' → logprob: -9.528341293334961
    6. '  ' → logprob: -10.153341293334961
    7. '_concat' → logprob: -10.278341293334961
    8. ' ' → logprob: -10.403341293334961
    9. '    ' → logprob: -10.778341293334961
    10. ' concaten' → logprob: -11.403341293334961

Token 56: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -8.2994620242971e-06
    2. '_first' → logprob: -11.875008583068848
    3. '_secondary' → logprob: -15.000008583068848
    4. ' _' → logprob: -16.00000762939453
    5. 'second' → logprob: -16.00000762939453
    6. '_' → logprob: -16.12500762939453
    7. '_seconds' → logprob: -16.12500762939453
    8. '_two' → logprob: -16.37500762939453
    9. '_SECOND' → logprob: -16.62500762939453
    10. ')_' → logprob: -16.75000762939453

Token 57: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008619893342256546
    2. '+=' → logprob: -4.758619785308838
    3. ' ' → logprob: -13.883620262145996
    4. '   ' → logprob: -13.883620262145996
    5. '=' → logprob: -14.258620262145996
    6. ']+=' → logprob: -14.508620262145996
    7. ' +' → logprob: -14.633620262145996
    8. '+=(' → logprob: -14.633620262145996
    9. ' ' → logprob: -14.758620262145996
    10. ' =' → logprob: -15.133620262145996

Token 58: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5759543180465698
    2. ' value' → logprob: -0.8259543180465698
    3. '   ' → logprob: -11.45095443725586
    4. '(value' → logprob: -13.57595443725586
    5. ' ' → logprob: -14.20095443725586
    6. '"value' → logprob: -14.70095443725586
    7. 'int' → logprob: -15.07595443725586
    8. '$value' → logprob: -15.45095443725586
    9. ')value' → logprob: -15.45095443725586
    10. '    ' → logprob: -15.45095443725586

Token 59: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -5.319370302458992e-06
    2. '_first' → logprob: -12.750005722045898
    3. 'second' → logprob: -14.000005722045898
    4. '_' → logprob: -14.250005722045898
    5. '```' → logprob: -15.750005722045898
    6. '_seconds' → logprob: -16.0000057220459
    7. '_secondary' → logprob: -16.0000057220459
    8. '_sec' → logprob: -16.6250057220459
    9. 'Second' → logprob: -16.7500057220459
    10. '_s' → logprob: -16.8750057220459

Token 60: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7686746716499329
    2. ' *' → logprob: -0.7686746716499329
    3. '*(' → logprob: -2.643674612045288
    4. '(' → logprob: -7.018674850463867
    5. '10' → logprob: -8.143674850463867
    6. ' ' → logprob: -9.143674850463867
    7. ' *(' → logprob: -9.268674850463867
    8. ' (' → logprob: -9.518674850463867
    9. '```' → logprob: -9.893674850463867
    10. '**' → logprob: -10.018674850463867

Token 61: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25192990899086
    2. ' (' → logprob: -1.5019298791885376
    3. '10' → logprob: -14.501930236816406
    4. ' ' → logprob: -15.626930236816406
    5. '`' → logprob: -16.626930236816406
    6. '(int' → logprob: -17.626930236816406
    7. ' ' → logprob: -18.001930236816406
    8. '```' → logprob: -18.626930236816406
    9. '*(' → logprob: -18.876930236816406
    10. '0' → logprob: -18.876930236816406

Token 62: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024090837687253952
    2. ' (' → logprob: -3.7740907669067383
    3. '10' → logprob: -7.149090766906738
    4. ' ' → logprob: -10.024090766906738
    5. ')' → logprob: -11.899090766906738
    6. '   ' → logprob: -12.649090766906738
    7. 'index' → logprob: -13.149090766906738
    8. '(index' → logprob: -13.899090766906738
    9. '  ' → logprob: -14.649090766906738
    10. '    ' → logprob: -14.899090766906738

Token 63: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.4741075932979584
    2. '**' → logprob: -0.9741076231002808
    3. ' ' → logprob: -11.22410774230957
    4. '^' → logprob: -11.97410774230957
    5. ' ' → logprob: -12.34910774230957
    6. '*' → logprob: -12.59910774230957
    7. ' **)' → logprob: -13.22410774230957
    8. ' *' → logprob: -14.59910774230957
    9. ')**' → logprob: -15.34910774230957
    10. ' ^' → logprob: -15.47410774230957

Token 64: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.12693072855472565
    2. ' index' → logprob: -2.1269307136535645
    3. '   ' → logprob: -13.501931190490723
    4. ' ' → logprob: -14.376931190490723
    5. '	index' → logprob: -15.376931190490723
    6. '(index' → logprob: -15.876931190490723
    7. '    ' → logprob: -16.501930236816406
    8. '#index' → logprob: -16.751930236816406
    9. '[index' → logprob: -17.251930236816406
    10. '  ' → logprob: -17.251930236816406

Token 65: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.002599557163193822
    2. '_first' → logprob: -6.002599716186523
    3. 'second' → logprob: -9.002599716186523
    4. 'first' → logprob: -14.377599716186523
    5. '_' → logprob: -16.752599716186523
    6. 'Second' → logprob: -17.002599716186523
    7. '_s' → logprob: -18.002599716186523
    8. ' second' → logprob: -18.252599716186523
    9. '	second' → logprob: -18.377599716186523
    10. '_se' → logprob: -18.627599716186523

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.215330409351736e-05
    2. ')
' → logprob: -10.125041961669922
    3. ')return' → logprob: -14.500041961669922
    4. ' )' → logprob: -14.750041961669922
    5. '   ' → logprob: -15.000041961669922
    6. '+' → logprob: -15.250041961669922
    7. ')
' → logprob: -16.125041961669922
    8. ')

' → logprob: -16.125041961669922
    9. '))' → logprob: -16.375041961669922
    10. ')`' → logprob: -17.375041961669922

Token 67: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21850870549678802
    2. 'if' → logprob: -1.7185087203979492
    3. 'result' → logprob: -4.468508720397949
    4. '
' → logprob: -5.343508720397949
    5. 'answer' → logprob: -8.34350872039795
    6. ' if' → logprob: -9.09350872039795
    7. '```' → logprob: -9.46850872039795
    8. ')
' → logprob: -9.84350872039795
    9. '+
' → logprob: -10.34350872039795
    10. 'output' → logprob: -10.59350872039795

Token 68: ' value' (ID: 1432)
  Prédit: ' concat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' concat' → logprob: -0.0021932062227278948
    2. 'concat' → logprob: -6.127192974090576
    3. ' concaten' → logprob: -12.627193450927734
    4. ' conc' → logprob: -12.877193450927734
    5. ' ' → logprob: -14.127193450927734
    6. '_concat' → logprob: -14.752193450927734
    7. ' ' → logprob: -14.877193450927734
    8. ' concatenate' → logprob: -15.002193450927734
    9. ' value' → logprob: -15.877193450927734
    10. ' (' → logprob: -16.502193450927734

Token 69: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.00012201975914649665
    2. '_second' → logprob: -9.5001220703125
    3. '_' → logprob: -10.0001220703125
    4. '_FIRST' → logprob: -14.8751220703125
    5. '```' → logprob: -15.2501220703125
    6. ')_' → logprob: -15.6251220703125
    7. 'First' → logprob: -15.6251220703125
    8. ' _' → logprob: -15.7501220703125
    9. 'first' → logprob: -16.1251220703125
    10. '_First' → logprob: -16.2501220703125

Token 70: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0456622838973999
    2. '>' → logprob: -3.2956624031066895
    3. ' <' → logprob: -5.2956624031066895
    4. ' ==' → logprob: -6.1706624031066895
    5. '==' → logprob: -8.420661926269531
    6. '<' → logprob: -8.920661926269531
    7. ' <=' → logprob: -10.295661926269531
    8. ' ' → logprob: -10.420661926269531
    9. ' >=' → logprob: -10.545661926269531
    10. ' !=' → logprob: -10.920661926269531

Token 71: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.02515612728893757
    2. ' value' → logprob: -4.025156021118164
    3. 'concat' → logprob: -5.025156021118164
    4. ' concat' → logprob: -8.150156021118164
    5. '10' → logprob: -9.775156021118164
    6. '=' → logprob: -11.275156021118164
    7. '=value' → logprob: -11.525156021118164
    8. 'conc' → logprob: -11.775156021118164
    9. '0' → logprob: -12.025156021118164
    10. ' ' → logprob: -12.150156021118164

Token 72: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -1.3544423381972592e-05
    2. '_' → logprob: -12.00001335144043
    3. '_first' → logprob: -12.25001335144043
    4. 'second' → logprob: -13.00001335144043
    5. 'Second' → logprob: -16.62501335144043
    6. '_
' → logprob: -17.37501335144043
    7. '_se' → logprob: -17.75001335144043
    8. '_SECOND' → logprob: -17.75001335144043
    9. '_two' → logprob: -17.87501335144043
    10. ' _' → logprob: -18.00001335144043

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024898070842027664
    2. ':
' → logprob: -6.002490043640137
    3. '>' → logprob: -12.002490043640137
    4. ' :' → logprob: -12.377490043640137
    5. ' and' → logprob: -14.502490043640137
    6. '.' → logprob: -14.502490043640137
    7. '   ' → logprob: -14.752490043640137
    8. ':

' → logprob: -14.877490043640137
    9. '==' → logprob: -15.002490043640137
    10. ',' → logprob: -15.127490043640137

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034646160900592804
    2. ':' → logprob: -3.9096462726593018
    3. 'print' → logprob: -4.909646034240723
    4. ' print' → logprob: -5.784646034240723
    5. ':
' → logprob: -6.284646034240723
    6. '
' → logprob: -6.659646034240723
    7. '```' → logprob: -9.409646034240723
    8. '<|end|>' → logprob: -9.659646034240723
    9. '    
' → logprob: -10.284646034240723
    10. '>' → logprob: -10.659646034240723

Token 75: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.14493365585803986
    2. 'print' (adapté à ' print') → logprob: -2.0199337005615234
    3. '
' → logprob: -6.269933700561523
    4. '   ' → logprob: -8.394933700561523
    5. '```' → logprob: -9.644933700561523
    6. '	print' → logprob: -11.019933700561523
    7. ' 
' → logprob: -11.644933700561523
    8. ' result' → logprob: -11.644933700561523
    9. '>' → logprob: -11.894933700561523
    10. ' ' → logprob: -12.019933700561523

Token 76: '(con' (ID: 37572)
  Prédit: '(con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(con' → logprob: -0.35664641857147217
    2. '(' → logprob: -1.2316464185714722
    3. '("' → logprob: -5.106646537780762
    4. '('' → logprob: -7.356646537780762
    5. '((' → logprob: -8.231646537780762
    6. '(max' → logprob: -8.481646537780762
    7. '(min' → logprob: -8.606646537780762
    8. '(value' → logprob: -8.606646537780762
    9. '()' → logprob: -8.731646537780762
    10. '("("' → logprob: -8.856646537780762

Token 77: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -1.0445127372804563e-05
    2. 'c' → logprob: -13.12501049041748
    3. 'at' → logprob: -13.12501049041748
    4. '_cat' → logprob: -13.62501049041748
    5. 'concat' → logprob: -13.62501049041748
    6. '(cat' → logprob: -14.00001049041748
    7. 'cate' → logprob: -14.12501049041748
    8. '```' → logprob: -14.87501049041748
    9. 'cant' → logprob: -15.00001049041748
    10. 't' → logprob: -15.00001049041748

Token 78: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.2519455850124359
    2. '_second' → logprob: -1.5019456148147583
    3. ')_' → logprob: -12.376945495605469
    4. 'first' → logprob: -13.001945495605469
    5. '_concat' → logprob: -13.251945495605469
    6. '_th' → logprob: -13.876945495605469
    7. 'second' → logprob: -14.126945495605469
    8. '_' → logprob: -14.251945495605469
    9. '_seconds' → logprob: -14.251945495605469
    10. '_f' → logprob: -14.251945495605469

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20360766351222992
    2. ')
' → logprob: -1.7036076784133911
    3. 'else' → logprob: -6.203607559204102
    4. ' else' → logprob: -10.078607559204102
    5. '+' → logprob: -10.578607559204102
    6. ' )' → logprob: -10.703607559204102
    7. ' )
' → logprob: -10.703607559204102
    8. ',' → logprob: -10.828607559204102
    9. '*' → logprob: -10.953607559204102
    10. 'elif' → logprob: -12.578607559204102

Token 80: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.016377203166484833
    2. 'elif' → logprob: -4.141376972198486
    3. ' else' → logprob: -8.516377449035645
    4. ')' → logprob: -9.141377449035645
    5. '<|end|>' → logprob: -10.891377449035645
    6. '```' → logprob: -12.016377449035645
    7. 'elseif' → logprob: -12.516377449035645
    8. '_else' → logprob: -13.266377449035645
    9. ' elif' → logprob: -13.391377449035645
    10. '}else' → logprob: -14.516377449035645

Token 81: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5234031081199646
    2. 'value' → logprob: -0.8984031081199646
    3. 'concat' → logprob: -8.52340316772461
    4. ' concat' → logprob: -10.14840316772461
    5. ' ' → logprob: -11.39840316772461
    6. '(value' → logprob: -11.64840316772461
    7. 'conc' → logprob: -12.27340316772461
    8. ' ' → logprob: -12.52340316772461
    9. '   ' → logprob: -12.89840316772461
    10. 'con' → logprob: -12.89840316772461

Token 82: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.16025082767009735
    2. '_second' → logprob: -1.9102507829666138
    3. '_' → logprob: -10.910250663757324
    4. '```' → logprob: -12.660250663757324
    5. 'first' → logprob: -13.660250663757324
    6. 'First' → logprob: -13.785250663757324
    7. '>' → logprob: -14.535250663757324
    8. 's' → logprob: -15.160250663757324
    9. '_self' → logprob: -15.660250663757324
    10. '_FIRST' → logprob: -15.785250663757324

Token 83: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07267645001411438
    2. '>' → logprob: -2.697676420211792
    3. ' ==' → logprob: -6.197676658630371
    4. '==' → logprob: -7.322676658630371
    5. ' <' → logprob: -10.947676658630371
    6. ' ' → logprob: -11.697676658630371
    7. ' ' → logprob: -12.072676658630371
    8. '<' → logprob: -12.822676658630371
    9. ' >=' → logprob: -12.822676658630371
    10. ' <=' → logprob: -13.447676658630371

Token 84: ' value' (ID: 1432)
  Prédit: ' concat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' concat' → logprob: -0.5410556793212891
    2. ' value' → logprob: -1.041055679321289
    3. 'concat' → logprob: -3.166055679321289
    4. 'value' → logprob: -3.791055679321289
    5. ' ' → logprob: -11.166055679321289
    6. ' concaten' → logprob: -11.416055679321289
    7. ' concatenate' → logprob: -12.416055679321289
    8. '(value' → logprob: -12.416055679321289
    9. ' conc' → logprob: -12.916055679321289
    10. '_concat' → logprob: -13.166055679321289

Token 85: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -1.4498052223643754e-05
    2. 'second' → logprob: -11.875014305114746
    3. '_first' → logprob: -11.875014305114746
    4. 'Second' → logprob: -14.750014305114746
    5. '_SECOND' → logprob: -15.875014305114746
    6. '_' → logprob: -17.875015258789062
    7. '	second' → logprob: -18.000015258789062
    8. '```' → logprob: -18.250015258789062
    9. '_secondary' → logprob: -19.000015258789062
    10. '-second' → logprob: -19.375015258789062

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002108118060277775
    2. ':
' → logprob: -8.625210762023926
    3. ' :' → logprob: -10.500210762023926
    4. '   ' → logprob: -12.750210762023926
    5. ' :
' → logprob: -15.125210762023926
    6. '):' → logprob: -15.500210762023926
    7. ':

' → logprob: -16.500211715698242
    8. ':
' → logprob: -17.750211715698242
    9. '.' → logprob: -17.875211715698242
    10. ')' → logprob: -18.000211715698242

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006364451255649328
    2. 'print' → logprob: -5.381364345550537
    3. ' print' → logprob: -6.631364345550537
    4. ':' → logprob: -8.381364822387695
    5. '       ' → logprob: -8.756364822387695
    6. '```' → logprob: -11.756364822387695
    7. ':
' → logprob: -12.006364822387695
    8. '	print' → logprob: -12.131364822387695
    9. '    
' → logprob: -12.256364822387695
    10. '   ' → logprob: -12.881364822387695

Token 88: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0028137899935245514
    2. ' print' → logprob: -5.877813816070557
    3. '   ' → logprob: -11.752813339233398
    4. '```' → logprob: -14.127813339233398
    5. '	print' → logprob: -15.752813339233398
    6. '(print' → logprob: -17.0028133392334
    7. ' ' → logprob: -17.1278133392334
    8. '.print' → logprob: -17.5028133392334
    9. 'printf' → logprob: -17.8778133392334
    10. '``' → logprob: -18.0028133392334

Token 89: '(con' (ID: 37572)
  Prédit: '(con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(con' → logprob: -1.9027791495318525e-05
    2. 'concat' → logprob: -11.125019073486328
    3. '(' → logprob: -12.875019073486328
    4. ' (' → logprob: -13.500019073486328
    5. ' concat' → logprob: -15.500019073486328
    6. '(cont' → logprob: -17.250019073486328
    7. 'con' → logprob: -17.500019073486328
    8. '((' → logprob: -17.625019073486328
    9. '_concat' → logprob: -18.250019073486328
    10. '(calc' → logprob: -18.375019073486328

Token 90: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.0015359314857050776
    2. 'at' → logprob: -6.501535892486572
    3. '_cat' → logprob: -10.87653636932373
    4. 'c' → logprob: -11.37653636932373
    5. 't' → logprob: -13.00153636932373
    6. 'concat' → logprob: -14.50153636932373
    7. '```' → logprob: -16.626535415649414
    8. '_second' → logprob: -16.876535415649414
    9. 'cate' → logprob: -16.876535415649414
    10. ' cat' → logprob: -17.126535415649414

Token 91: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -2.6060808522743173e-05
    2. '_first' → logprob: -10.750025749206543
    3. 'second' → logprob: -12.500025749206543
    4. '_' → logprob: -15.250025749206543
    5. '_se' → logprob: -15.750025749206543
    6. '_s' → logprob: -16.62502670288086
    7. 'Second' → logprob: -16.87502670288086
    8. 'ated' → logprob: -17.12502670288086
    9. '_two' → logprob: -17.12502670288086
    10. ')_' → logprob: -17.50002670288086

Token 92: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5780330300331116
    2. ')' → logprob: -0.8280330300331116
    3. 'else' → logprob: -6.203032970428467
    4. ' else' → logprob: -10.328033447265625
    5. '   ' → logprob: -10.453033447265625
    6. ')
' → logprob: -13.078033447265625
    7. ' )
' → logprob: -13.828033447265625
    8. 'elif' → logprob: -14.203033447265625
    9. '```' → logprob: -14.828033447265625
    10. ' )' → logprob: -15.078033447265625

Token 93: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.246537173457909e-06
    2. 'elif' → logprob: -12.625003814697266
    3. ' else' → logprob: -14.125003814697266
    4. '_else' → logprob: -17.000003814697266
    5. '```' → logprob: -17.125003814697266
    6. '#else' → logprob: -17.625003814697266
    7. 'elses' → logprob: -18.000003814697266
    8. 'els' → logprob: -18.250003814697266
    9. 'elser' → logprob: -18.625003814697266
    10. 'e' → logprob: -19.250003814697266

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003372502396814525
    2. ':
' → logprob: -8.000337600708008
    3. ' :' → logprob: -13.625337600708008
    4. ':
' → logprob: -15.750337600708008
    5. '   ' → logprob: -15.875337600708008
    6. ':

' → logprob: -16.125337600708008
    7. ':return' → logprob: -17.250337600708008
    8. ' :
' → logprob: -17.375337600708008
    9. '<|end|>' → logprob: -17.875337600708008
    10. ':def' → logprob: -18.375337600708008

Token 95: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10190016776323318
    2. '   ' → logprob: -2.351900100708008
    3. 'concat' → logprob: -6.976900100708008
    4. ' print' → logprob: -7.226900100708008
    5. ' concat' → logprob: -11.476900100708008
    6. '	print' → logprob: -11.976900100708008
    7. '0' → logprob: -12.101900100708008
    8. ' ' → logprob: -13.226900100708008
    9. '(print' → logprob: -13.476900100708008
    10. '  ' → logprob: -13.601900100708008

Token 96: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00013560164370574057
    2. '   ' → logprob: -9.50013542175293
    3. ' print' → logprob: -10.25013542175293
    4. 'concat' → logprob: -10.62513542175293
    5. '0' → logprob: -14.62513542175293
    6. '(print' → logprob: -15.62513542175293
    7. ' concat' → logprob: -16.00013542175293
    8. 'printf' → logprob: -16.12513542175293
    9. 'Print' → logprob: -17.37513542175293
    10. '	print' → logprob: -17.62513542175293

Token 97: '(min' (ID: 26035)
  Prédit: '(con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(con' → logprob: -0.03186744451522827
    2. '(' → logprob: -3.531867504119873
    3. '(value' → logprob: -6.531867504119873
    4. '((' → logprob: -8.531867027282715
    5. 'concat' → logprob: -9.156867027282715
    6. '("("' → logprob: -9.531867027282715
    7. ' (' → logprob: -9.906867027282715
    8. '(max' → logprob: -9.906867027282715
    9. '('' → logprob: -10.281867027282715
    10. '("' → logprob: -10.281867027282715

Token 98: '(con' (ID: 37572)
  Prédit: '(con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(con' → logprob: -0.00033832306507974863
    2. '(' → logprob: -8.000338554382324
    3. 'concat' → logprob: -13.625338554382324
    4. '((' → logprob: -14.375338554382324
    5. '(
' → logprob: -15.250338554382324
    6. ' concat' → logprob: -15.750338554382324
    7. '(

' → logprob: -16.000337600708008
    8. ')' → logprob: -16.000337600708008
    9. '(value' → logprob: -16.625337600708008
    10. ' (' → logprob: -16.750337600708008

Token 99: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.16024717688560486
    2. 'at' → logprob: -1.9102472066879272
    3. '(cat' → logprob: -11.160246849060059
    4. '_cat' → logprob: -12.660246849060059
    5. 'c' → logprob: -14.035246849060059
    6. 'concat' → logprob: -14.160246849060059
    7. '(' → logprob: -14.285246849060059
    8. '(at' → logprob: -14.535246849060059
    9. '```' → logprob: -14.785246849060059
    10. 'first' → logprob: -14.785246849060059

Token 100: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -7.302704761968926e-05
    2. '_second' → logprob: -9.625073432922363
    3. '_concat' → logprob: -12.250073432922363
    4. 'first' → logprob: -13.750073432922363
    5. '_' → logprob: -15.000073432922363
    6. 'First' → logprob: -15.125073432922363
    7. ')_' → logprob: -16.000072479248047
    8. '(first' → logprob: -16.375072479248047
    9. '_f' → logprob: -16.625072479248047
    10. 'concat' → logprob: -17.375072479248047

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018203912302851677
    2. ' ,' → logprob: -4.0182037353515625
    3. 'concat' → logprob: -10.268203735351562
    4. '_concat' → logprob: -11.893203735351562
    5. ' concat' → logprob: -12.018203735351562
    6. ',const' → logprob: -13.893203735351562
    7. '.concat' → logprob: -13.893203735351562
    8. '，' → logprob: -14.768203735351562
    9. 'conc' → logprob: -14.893203735351562
    10. ' concaten' → logprob: -15.143203735351562

Token 102: ' concat' (ID: 73950)
  Prédit: 'concat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'concat' → logprob: -0.16022889316082
    2. ' concat' → logprob: -1.9102288484573364
    3. 'conc' → logprob: -13.285228729248047
    4. ' ' → logprob: -14.035228729248047
    5. '_concat' → logprob: -14.035228729248047
    6. '.concat' → logprob: -14.660228729248047
    7. ' concaten' → logprob: -15.285228729248047
    8. ' conc' → logprob: -15.285228729248047
    9. '   ' → logprob: -15.535228729248047
    10. ' ' → logprob: -15.785228729248047

Token 103: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -4.179569077678025e-05
    2. '_first' → logprob: -10.125041961669922
    3. 'second' → logprob: -13.750041961669922
    4. '_' → logprob: -15.000041961669922
    5. '_two' → logprob: -16.750041961669922
    6. ')_' → logprob: -17.375041961669922
    7. '_se' → logprob: -17.500041961669922
    8. '_sec' → logprob: -17.625041961669922
    9. '__' → logprob: -18.000041961669922
    10. '_s' → logprob: -18.250041961669922

Token 104: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16022920608520508
    2. '))' → logprob: -1.910229206085205
    3. ')))' → logprob: -12.535228729248047
    4. ')
' → logprob: -14.410228729248047
    5. '())' → logprob: -15.285228729248047
    6. ')}' → logprob: -15.910228729248047
    7. '))
' → logprob: -16.035228729248047
    8. ' )' → logprob: -16.285228729248047
    9. '()' → logprob: -16.410228729248047
    10. ')`' → logprob: -16.660228729248047


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 88
Précision stricte (1ère position): 46.08%
Précision adaptée (1ère position): 48.04%
Précision (top 10): 86.27%
================================================================================
