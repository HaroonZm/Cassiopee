================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B, T = map(int, input().split())
print(int(((T+0.5)//A*B)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18060587346553802
    2. '+' → logprob: -2.680605888366699
    3. ',' → logprob: -3.680605888366699
    4. '.' → logprob: -3.805605888366699
    5. ')' → logprob: -4.180605888366699
    6. '[' → logprob: -4.680605888366699
    7. ' =' → logprob: -4.930605888366699
    8. 'C' → logprob: -5.805605888366699
    9. ';' → logprob: -5.805605888366699
    10. '<|end|>' → logprob: -5.805605888366699

Token 4: ' T' (ID: 353)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17127101123332977
    2. ',' → logprob: -2.2962710857391357
    3. 'C' → logprob: -3.4212710857391357
    4. ' =' → logprob: -4.421270847320557
    5. '.' → logprob: -5.171270847320557
    6. ' ' → logprob: -6.546270847320557
    7. ')' → logprob: -6.671270847320557
    8. ',C' → logprob: -6.671270847320557
    9. '+' → logprob: -7.671270847320557
    10. ':' → logprob: -8.171271324157715

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015314868651330471
    2. ' =' → logprob: -5.015315055847168
    3. ';' → logprob: -6.515315055847168
    4. '+' → logprob: -6.640315055847168
    5. '[' → logprob: -6.640315055847168
    6. ',' → logprob: -6.890315055847168
    7. '(' → logprob: -7.140315055847168
    8. ')' → logprob: -7.140315055847168
    9. '.' → logprob: -7.390315055847168
    10. ':' → logprob: -7.765315055847168

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.851032555103302
    2. ' map' → logprob: -1.3510324954986572
    3. '0' → logprob: -2.2260324954986572
    4. ' input' → logprob: -2.8510324954986572
    5. 'map' → logprob: -3.6010324954986572
    6. 'input' → logprob: -3.7260324954986572
    7. ' [' → logprob: -3.9760324954986572
    8. '1' → logprob: -3.9760324954986572
    9. '10' → logprob: -4.351032733917236
    10. ' [],' → logprob: -4.351032733917236

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2124704271554947
    2. '(lambda' → logprob: -2.087470531463623
    3. '<|end|>' → logprob: -3.462470531463623
    4. '(int' → logprob: -3.587470531463623
    5. '```' → logprob: -5.587470531463623
    6. ')' → logprob: -6.462470531463623
    7. '<|end|>' → logprob: -7.587470531463623
    8. '(input' → logprob: -8.337470054626465
    9. '(user' → logprob: -8.462470054626465
    10. '(str' → logprob: -8.462470054626465

Token 8: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.060648947954177856
    2. '(input' → logprob: -3.4356489181518555
    3. '`)' → logprob: -4.6856489181518555
    4. '(' → logprob: -5.3106489181518555
    5. '<|end|>' → logprob: -5.3106489181518555
    6. '(user' → logprob: -6.3106489181518555
    7. '```' → logprob: -6.9356489181518555
    8. 'input' → logprob: -6.9356489181518555
    9. '<|end|>' → logprob: -6.9356489181518555
    10. '(token' → logprob: -7.6856489181518555

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008624501526355743
    2. ' input' → logprob: -4.75862455368042
    3. '(input' → logprob: -11.633624076843262
    4. ')' → logprob: -14.383624076843262
    5. ',input' → logprob: -15.133624076843262
    6. '=input' → logprob: -16.508625030517578
    7. ' ' → logprob: -17.383625030517578
    8. '<input' → logprob: -17.633625030517578
    9. '	input' → logprob: -17.758625030517578
    10. '_input' → logprob: -17.883625030517578

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8526866436004639
    2. ')' → logprob: -1.3526866436004639
    3. '()' → logprob: -1.7276866436004639
    4. '(' → logprob: -2.352686643600464
    5. '(()' → logprob: -4.477686882019043
    6. '(""))' → logprob: -4.602686882019043
    7. '('' → logprob: -5.602686882019043
    8. '().' → logprob: -5.977686882019043
    9. '("")' → logprob: -5.977686882019043
    10. '("' → logprob: -6.602686882019043

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0008496518130414188
    2. 'strip' → logprob: -7.125849723815918
    3. 'rstrip' → logprob: -10.500849723815918
    4. ')' → logprob: -11.750849723815918
    5. ' split' → logprob: -12.250849723815918
    6. 'read' → logprob: -12.500849723815918
    7. '(split' → logprob: -14.750849723815918
    8. '```' → logprob: -15.250849723815918
    9. 'spl' → logprob: -15.500849723815918
    10. 'startswith' → logprob: -16.1258487701416

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008850920014083385
    2. '())' → logprob: -4.883851051330566
    3. '))' → logprob: -7.258851051330566
    4. '`)' → logprob: -8.133851051330566
    5. '()' → logprob: -9.008851051330566
    6. ')`' → logprob: -10.258851051330566
    7. '(' → logprob: -10.258851051330566
    8. '```' → logprob: -10.883851051330566
    9. '`' → logprob: -12.383851051330566
    10. '<|end|>' → logprob: -12.633851051330566

Token 13: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.035632848739624
    2. 'for' → logprob: -1.535632848739624
    3. 'i' → logprob: -2.035632848739624
    4. 'a' → logprob: -3.035632848739624
    5. 'x' → logprob: -3.160632848739624
    6. '#' → logprob: -3.285632848739624
    7. 'r' → logprob: -3.660632848739624
    8. 's' → logprob: -3.785632848739624
    9. 'n' → logprob: -4.035633087158203
    10. 'c' → logprob: -4.160633087158203

Token 14: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000624514592345804
    2. '('' → logprob: -7.750624656677246
    3. '("("' → logprob: -8.625624656677246
    4. '("""' → logprob: -12.750624656677246
    5. '()' → logprob: -13.000624656677246
    6. '((' → logprob: -13.375624656677246
    7. '(`' → logprob: -13.500624656677246
    8. '(
' → logprob: -13.500624656677246
    9. '(**' → logprob: -14.500624656677246
    10. ' (' → logprob: -14.625624656677246

Token 15: '(((' (ID: 13163)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09937357157468796
    2. '((' → logprob: -2.9743735790252686
    3. '(A' → logprob: -3.2243735790252686
    4. '(B' → logprob: -6.4743733406066895
    5. '(T' → logprob: -7.0993733406066895
    6. '('' → logprob: -7.5993733406066895
    7. '(((' → logprob: -8.474373817443848
    8. ' (' → logprob: -9.099373817443848
    9. '(a' → logprob: -9.224373817443848
    10. '("' → logprob: -9.474373817443848

Token 16: 'T' (ID: 51)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1871003806591034
    2. 'B' → logprob: -1.9371004104614258
    3. 'T' → logprob: -4.187100410461426
    4. '(A' → logprob: -5.562100410461426
    5. ' A' → logprob: -6.187100410461426
    6. '(B' → logprob: -6.687100410461426
    7. '((' → logprob: -7.062100410461426
    8. '(' → logprob: -7.187100410461426
    9. ' (' → logprob: -7.437100410461426
    10. ' B' → logprob: -8.187100410461426

Token 17: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0163058042526245
    2. ' -' → logprob: -1.3913058042526245
    3. '*' → logprob: -2.516305923461914
    4. '/A' → logprob: -2.766305923461914
    5. ' /' → logprob: -2.891305923461914
    6. '/' → logprob: -2.891305923461914
    7. '*A' → logprob: -3.391305923461914
    8. '-A' → logprob: -3.391305923461914
    9. '//' → logprob: -4.266305923461914
    10. '+' → logprob: -4.266305923461914

Token 18: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0033109188079834
    2. 'B' → logprob: -1.0033109188079834
    3. '1' → logprob: -1.3783109188079834
    4. '(A' → logprob: -5.8783111572265625
    5. ' ' → logprob: -6.0033111572265625
    6. ' A' → logprob: -6.0033111572265625
    7. ' B' → logprob: -6.0033111572265625
    8. 'T' → logprob: -6.5033111572265625
    9. '(' → logprob: -7.1283111572265625
    10. '-' → logprob: -7.6283111572265625

Token 19: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001967531396076083
    2. ' .' → logprob: -6.626967430114746
    3. '0' → logprob: -8.376967430114746
    4. '5' → logprob: -8.501967430114746
    5. '1' → logprob: -9.126967430114746
    6. ')' → logprob: -10.501967430114746
    7. '4' → logprob: -11.751967430114746
    8. ').' → logprob: -12.001967430114746
    9. 'B' → logprob: -12.126967430114746
    10. 'A' → logprob: -12.251967430114746

Token 20: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0002458430244587362
    2. '0' → logprob: -9.000246047973633
    3. '1' → logprob: -9.375246047973633
    4. '05' → logprob: -11.750246047973633
    5. '25' → logprob: -12.375246047973633
    6. '50' → logprob: -12.500246047973633
    7. '99' → logprob: -12.875246047973633
    8. '2' → logprob: -12.875246047973633
    9. '000' → logprob: -12.875246047973633
    10. '01' → logprob: -13.250246047973633

Token 21: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38699135184288025
    2. ')/' → logprob: -2.386991262435913
    3. ')*' → logprob: -2.636991262435913
    4. '-' → logprob: -3.011991262435913
    5. '*' → logprob: -3.636991262435913
    6. ' -' → logprob: -3.761991262435913
    7. ')**' → logprob: -4.261991500854492
    8. ')-' → logprob: -4.761991500854492
    9. '*A' → logprob: -5.261991500854492
    10. ')/(' → logprob: -5.386991500854492

Token 22: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5343181490898132
    2. 'B' → logprob: -1.034318208694458
    3. '1' → logprob: -3.534318208694458
    4. ' A' → logprob: -4.034317970275879
    5. ' B' → logprob: -4.784317970275879
    6. '60' → logprob: -6.659317970275879
    7. ' ' → logprob: -7.409317970275879
    8. '2' → logprob: -8.159317970275879
    9. '100' → logprob: -8.284317970275879
    10. 'C' → logprob: -8.784317970275879

Token 23: '*' (ID: 9)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.5961063504219055
    2. ')' → logprob: -0.8461063504219055
    3. ')/' → logprob: -4.22110652923584
    4. '*' → logprob: -5.84610652923584
    5. ' )' → logprob: -6.34610652923584
    6. ')))' → logprob: -8.59610652923584
    7. ')+' → logprob: -9.09610652923584
    8. '*A' → logprob: -9.59610652923584
    9. '/B' → logprob: -9.72110652923584
    10. ')*(' → logprob: -10.09610652923584

Token 24: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.08814956247806549
    2. 'A' → logprob: -2.5881495475769043
    3. ' B' → logprob: -4.838149547576904
    4. ' A' → logprob: -7.088149547576904
    5. ')' → logprob: -7.963149547576904
    6. ' ' → logprob: -10.463150024414062
    7. ')))' → logprob: -12.088150024414062
    8. '1' → logprob: -12.150650024414062
    9. '  ' → logprob: -12.275650024414062
    10. '*' → logprob: -12.338150024414062

Token 25: ')))' (ID: 15975)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.192726269364357
    2. '))' → logprob: -2.3177263736724854
    3. ')))' → logprob: -2.8177263736724854
    4. ')/' → logprob: -4.442726135253906
    5. '/' → logprob: -5.692726135253906
    6. ')*' → logprob: -7.067726135253906
    7. '*' → logprob: -7.942726135253906
    8. ' )' → logprob: -9.442726135253906
    9. ')+' → logprob: -9.567726135253906
    10. '/B' → logprob: -9.692726135253906


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 23
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 16
Précision stricte (1ère position): 21.74%
Précision adaptée (1ère position): 21.74%
Précision (top 10): 69.57%
================================================================================
