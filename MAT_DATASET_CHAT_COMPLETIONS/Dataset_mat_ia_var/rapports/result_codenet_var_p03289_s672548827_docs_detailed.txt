================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def validate_string():
    """
    Fonction principale qui lit une chaîne à partir de l'entrée standard et vérifie si elle suit un motif précis.
    Règles de validation :
    1. Le premier caractère doit être 'A'.
    2. Il doit y avoir exactement un 'C' dans la sous-chaîne S[2:-1].
    3. Après suppression du premier 'A' et du seul 'C', les caractères restants doivent tous être en minuscules.
    Affiche "AC" si la chaîne satisfait toutes les conditions, sinon affiche "WA".
    """
    # Lire la chaîne d'entrée et la convertir en liste de caractères pour faciliter les modifications
    S = [i for i in input()]
    
    # Vérifier si le premier caractère est "A" et s'il y a exactement un "C" dans la sous-liste S[2:-1]
    if S[0] == "A" and S[2:-1].count("C") == 1:
        # Supprimer la première occurrence de "A" (en position 0) de la liste
        S.remove("A")
        # Supprimer la première occurrence de "C" dans la liste restante
        S.remove("C")
        # Après suppressions, vérifier si les caractères restants sont tous des minuscules alphabétiques
        if "".join(S).islower():
            print("AC")
        else:
            print("WA")
    else:
        print("WA")

# Appel de la fonction principale si ce script est exécuté
if __name__ == "__main__":
    validate_string()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' validate' (ID: 14986)
  → Token d'amorce (pas de prédiction)

Token 2: '_string' (ID: 8609)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049680761992931366
    2. '_' → logprob: -3.049680709838867
    3. '```' → logprob: -7.799680709838867
    4. '(_' → logprob: -8.174680709838867
    5. '(_:' → logprob: -9.174680709838867
    6. ' (' → logprob: -10.049680709838867
    7. ':' → logprob: -10.174680709838867
    8. '_:' → logprob: -10.674680709838867
    9. '("("' → logprob: -11.049680709838867
    10. '[' → logprob: -11.174680709838867

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5771982073783875
    2. '   ' → logprob: -1.4521982669830322
    3. '\' → logprob: -2.5771982669830322
    4. '\n' → logprob: -2.7021982669830322
    5. ':' → logprob: -4.327198028564453
    6. ''' → logprob: -4.452198028564453
    7. '(' → logprob: -4.702198028564453
    8. '    
' → logprob: -5.202198028564453
    9. '`' → logprob: -5.702198028564453
    10. '"' → logprob: -6.077198028564453

Token 5: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20958960056304932
    2. ' ' → logprob: -2.0845894813537598
    3. '    ' → logprob: -3.7095894813537598
    4. 'a' → logprob: -4.58458948135376
    5. ' pass' → logprob: -5.33458948135376
    6. 'r' → logprob: -5.70958948135376
    7. '\' → logprob: -6.08458948135376
    8. 'pass' → logprob: -6.08458948135376
    9. '```' → logprob: -6.20958948135376
    10. '  ' → logprob: -6.20958948135376

Token 6: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.4187028110027313
    2. 'Validate' → logprob: -1.2937028408050537
    3. 'Valid' → logprob: -3.6687028408050537
    4. '   ' → logprob: -4.293702602386475
    5. 'Check' → logprob: -4.543702602386475
    6. '""' → logprob: -5.668702602386475
    7. 'This' → logprob: -5.793702602386475
    8. ' Validate' → logprob: -5.793702602386475
    9. '```' → logprob: -6.293702602386475
    10. ''''' → logprob: -6.293702602386475

Token 7: ' Fonction' (ID: 189149)
  Prédit: 'Validate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Validate' → logprob: -0.5516290068626404
    2. 'Valid' → logprob: -1.3016290664672852
    3. 'Check' → logprob: -2.551629066467285
    4. 'Checks' → logprob: -3.176629066467285
    5. '"""' → logprob: -3.801629066467285
    6. '   ' → logprob: -5.801629066467285
    7. 'This' → logprob: -6.676629066467285
    8. 'Returns' → logprob: -6.801629066467285
    9. '       ' → logprob: -7.301629066467285
    10. '""' → logprob: -7.551629066467285

Token 8: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47865116596221924
    2. ' de' → logprob: -1.4786511659622192
    3. ' validate' → logprob: -2.3536510467529297
    4. ' ' → logprob: -4.35365104675293
    5. ' ' → logprob: -5.72865104675293
    6. '  ' → logprob: -5.72865104675293
    7. '```' → logprob: -5.72865104675293
    8. ' valid' → logprob: -5.85365104675293
    9. ' ```' → logprob: -6.22865104675293
    10. ' check' → logprob: -6.47865104675293

Token 9: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12462891638278961
    2. ' de' → logprob: -2.749629020690918
    3. '```' → logprob: -3.874629020690918
    4. 'def' → logprob: -4.249629020690918
    5. '"""' → logprob: -5.124629020690918
    6. ' ' → logprob: -6.124629020690918
    7. 'de' → logprob: -6.249629020690918
    8. '    ' → logprob: -6.499629020690918
    9. ' pour' → logprob: -7.249629020690918
    10. '.' → logprob: -7.374629020690918

Token 10: ' lit' (ID: 11980)
  Prédit: ' vér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vér' → logprob: -1.0067033767700195
    2. '   ' → logprob: -1.6317033767700195
    3. ' prend' → logprob: -2.1317033767700195
    4. 'v' → logprob: -2.1317033767700195
    5. 'val' → logprob: -2.2567033767700195
    6. ' valide' → logprob: -3.7567033767700195
    7. 'validate' → logprob: -4.2567033767700195
    8. ' val' → logprob: -4.7567033767700195
    9. ' retourne' → logprob: -5.0067033767700195
    10. ' permet' → logprob: -5.0067033767700195

Token 11: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6225790977478027
    2. ' le' → logprob: -1.8725790977478027
    3. ' et' → logprob: -2.2475790977478027
    4. ' l' → logprob: -3.1225790977478027
    5. 'l' → logprob: -3.2475790977478027
    6. 'le' → logprob: -3.3725790977478027
    7. ' ' → logprob: -3.6225790977478027
    8. '   ' → logprob: -3.8725790977478027
    9. ' une' → logprob: -4.122579097747803
    10. ' un' → logprob: -5.122579097747803

Token 12: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.32119834423065186
    2. ' ' → logprob: -1.4461983442306519
    3. ' chaine' → logprob: -3.5711984634399414
    4. 'chaine' → logprob: -4.946198463439941
    5. ' string' → logprob: -6.321198463439941
    6. '   ' → logprob: -7.321198463439941
    7. 'cha' → logprob: -7.446198463439941
    8. 's' → logprob: -8.571198463439941
    9. 'string' → logprob: -8.571198463439941
    10. 'entrée' → logprob: -8.946198463439941

Token 13: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.041952893137931824
    2. 'de' → logprob: -4.041953086853027
    3. '   ' → logprob: -4.166953086853027
    4. ' et' → logprob: -5.291953086853027
    5. ',' → logprob: -6.791953086853027
    6. ' ' → logprob: -7.916953086853027
    7. ' d' → logprob: -8.166953086853027
    8. ' en' → logprob: -8.416953086853027
    9. '    ' → logprob: -8.541953086853027
    10. 'def' → logprob: -8.666953086853027

Token 14: ' partir' (ID: 12100)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.004540011752396822
    2. 'valid' → logprob: -5.879539966583252
    3. 'v' → logprob: -7.379539966583252
    4. '   ' → logprob: -8.25454044342041
    5. ' val' → logprob: -8.37954044342041
    6. 'validator' → logprob: -8.62954044342041
    7. 'validate' → logprob: -9.00454044342041
    8. 'l' → logprob: -9.37954044342041
    9. 'la' → logprob: -9.37954044342041
    10. '```' → logprob: -9.75454044342041

Token 15: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5632572174072266
    2. ' de' → logprob: -1.3132572174072266
    3. '   ' → logprob: -2.1882572174072266
    4. ' du' → logprob: -4.188257217407227
    5. 'def' → logprob: -4.313257217407227
    6. 'd' → logprob: -4.438257217407227
    7. 'de' → logprob: -5.688257217407227
    8. 's' → logprob: -6.313257217407227
    9. ' ' → logprob: -6.688257217407227
    10. '    ' → logprob: -7.188257217407227

Token 16: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.41394901275634766
    2. ' l' → logprob: -1.4139490127563477
    3. ' input' → logprob: -2.5389490127563477
    4. 'input' → logprob: -4.413949012756348
    5. '   ' → logprob: -5.913949012756348
    6. ' la' → logprob: -7.788949012756348
    7. 'la' → logprob: -8.038949012756348
    8. ' ' → logprob: -8.413949012756348
    9. '```' → logprob: -8.538949012756348
    10. '`' → logprob: -9.601449012756348

Token 17: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.44661906361579895
    2. 'a' → logprob: -1.8216190338134766
    3. ''utilisateur' → logprob: -2.0716190338134766
    4. ''' → logprob: -3.4466190338134766
    5. 'u' → logprob: -4.196619033813477
    6. 'entrée' → logprob: -4.446619033813477
    7. 'e' → logprob: -4.821619033813477
    8. 'input' → logprob: -5.946619033813477
    9. ''''' → logprob: -7.696619033813477
    10. '_' → logprob: -8.071619033813477

Token 18: ' standard' (ID: 7024)
  Prédit: ' utilisateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisateur' → logprob: -0.9654499888420105
    2. '   ' → logprob: -1.4654500484466553
    3. ' standard' → logprob: -1.9654500484466553
    4. 'standard' → logprob: -1.9654500484466553
    5. ',' → logprob: -3.2154500484466553
    6. 'util' → logprob: -3.4654500484466553
    7. 'user' → logprob: -4.965449810028076
    8. ' et' → logprob: -5.590449810028076
    9. ' de' → logprob: -5.715449810028076
    10. '_util' → logprob: -6.090449810028076

Token 19: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13970929384231567
    2. ',' → logprob: -2.389709234237671
    3. ' et' → logprob: -4.38970947265625
    4. '\n' → logprob: -4.76470947265625
    5. ' ' → logprob: -5.13970947265625
    6. '.' → logprob: -5.88970947265625
    7. ' ,' → logprob: -6.13970947265625
    8. '    ' → logprob: -6.76470947265625
    9. ')' → logprob: -6.76470947265625
    10. '\' → logprob: -7.13970947265625

Token 20: ' vér' (ID: 42524)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2792890965938568
    2. ' vér' → logprob: -2.1542890071868896
    3. ' la' → logprob: -2.9042890071868896
    4. ' retourne' → logprob: -3.9042890071868896
    5. ' valide' → logprob: -4.279289245605469
    6. 'v' → logprob: -4.279289245605469
    7. 'la' → logprob: -5.029289245605469
    8. '```' → logprob: -5.529289245605469
    9. 'val' → logprob: -6.029289245605469
    10. ' ren' → logprob: -6.154289245605469

Token 21: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0011077094823122025
    2. 'ifi' → logprob: -7.626107692718506
    3. 'i' → logprob: -7.751107692718506
    4. 'if' → logprob: -8.751108169555664
    5. 'ifié' → logprob: -11.251108169555664
    6. '   ' → logprob: -12.251108169555664
    7. 'ifiez' → logprob: -12.251108169555664
    8. 'ifier' → logprob: -13.251108169555664
    9. 'ifiée' → logprob: -14.126108169555664
    10. '
' → logprob: -14.126108169555664

Token 22: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01793135702610016
    2. 's' → logprob: -5.0179314613342285
    3. ' si' → logprob: -5.7679314613342285
    4. '```' → logprob: -6.3929314613342285
    5. '   ' → logprob: -6.5179314613342285
    6. '  ' → logprob: -6.7679314613342285
    7. '_' → logprob: -7.0179314613342285
    8. ' ' → logprob: -7.7679314613342285
    9. ' s' → logprob: -7.8929314613342285
    10. 'e' → logprob: -8.01793098449707

Token 23: ' elle' (ID: 11451)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.37588322162628174
    2. ' elle' → logprob: -2.125883102416992
    3. '   ' → logprob: -2.500883102416992
    4. 'la' → logprob: -2.625883102416992
    5. ' celle' → logprob: -4.375883102416992
    6. 'elle' → logprob: -5.000883102416992
    7. ' cette' → logprob: -5.750883102416992
    8. 'c' → logprob: -5.875883102416992
    9. ' l' → logprob: -5.875883102416992
    10. 'celle' → logprob: -6.250883102416992

Token 24: ' suit' (ID: 15170)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.014542937278747559
    2. 'est' → logprob: -5.139543056488037
    3. ' ' → logprob: -5.764543056488037
    4. 's' → logprob: -6.389543056488037
    5. '```' → logprob: -7.014543056488037
    6. ' correspond' → logprob: -7.264543056488037
    7. ' respecte' → logprob: -7.639543056488037
    8. ' a' → logprob: -8.264542579650879
    9. ' is' → logprob: -8.514542579650879
    10. ' contient' → logprob: -8.639542579650879

Token 25: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6557738780975342
    2. ' une' → logprob: -2.155773878097534
    3. '   ' → logprob: -2.280773878097534
    4. ' la' → logprob: -2.780773878097534
    5. ' le' → logprob: -3.155773878097534
    6. 'une' → logprob: -3.280773878097534
    7. ' l' → logprob: -3.530773878097534
    8. 'un' → logprob: -3.780773878097534
    9. ' les' → logprob: -4.155774116516113
    10. 's' → logprob: -4.530774116516113

Token 26: ' motif' (ID: 72753)
  Prédit: ' motif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' motif' → logprob: -1.6039490699768066
    2. ' pattern' → logprob: -1.8539490699768066
    3. 'certain' → logprob: -1.8539490699768066
    4. ' certain' → logprob: -1.9789490699768066
    5. '   ' → logprob: -2.6039490699768066
    6. ' sch' → logprob: -2.8539490699768066
    7. 'pattern' → logprob: -3.2289490699768066
    8. ' format' → logprob: -3.7289490699768066
    9. 'e' → logprob: -4.103949069976807
    10. ' caractère' → logprob: -4.228949069976807

Token 27: ' précis' (ID: 74758)
  Prédit: ' donné'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donné' → logprob: -0.2988099455833435
    2. '   ' → logprob: -1.6738100051879883
    3. ' valid' → logprob: -4.173810005187988
    4. ' d' → logprob: -4.173810005187988
    5. ' donnée' → logprob: -4.798810005187988
    6. ' de' → logprob: -4.923810005187988
    7. '```' → logprob: -5.423810005187988
    8. ' donn' → logprob: -5.798810005187988
    9. ' précis' → logprob: -6.048810005187988
    10. ' ' → logprob: -6.548810005187988

Token 28: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.193498432636261
    2. '.' → logprob: -3.068498373031616
    3. ' ' → logprob: -3.443498373031616
    4. ':' → logprob: -3.568498373031616
    5. ' :' → logprob: -3.568498373031616
    6. '\n' → logprob: -4.193498611450195
    7. ',' → logprob: -5.443498611450195
    8. 'e' → logprob: -5.568498611450195
    9. '\' → logprob: -5.818498611450195
    10. '```' → logprob: -6.068498611450195

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005026794504374266
    2. '"""' → logprob: -6.130026817321777
    3. '```' → logprob: -7.255026817321777
    4. '    ' → logprob: -7.380026817321777
    5. ' """' → logprob: -8.005026817321777
    6. ' ' → logprob: -8.255026817321777
    7. '  ' → logprob: -8.755026817321777
    8. '"' → logprob: -8.755026817321777
    9. '       ' → logprob: -9.255026817321777
    10. ' """
' → logprob: -9.380026817321777

Token 30: ' R' (ID: 460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037150459829717875
    2. '"""' → logprob: -6.0037150382995605
    3. '    ' → logprob: -7.8787150382995605
    4. ' """' → logprob: -8.878715515136719
    5. '       ' → logprob: -9.003715515136719
    6. ' ' → logprob: -9.128715515136719
    7. '```' → logprob: -9.253715515136719
    8. '
' → logprob: -9.878715515136719
    9. ')' → logprob: -10.128715515136719
    10. '    
' → logprob: -10.128715515136719

Token 31: 'è' (ID: 957)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.023634426295757294
    2. 'é' → logprob: -3.898634433746338
    3. 'eturn' → logprob: -6.648634433746338
    4. 'et' → logprob: -6.898634433746338
    5. 'éc' → logprob: -8.89863395690918
    6. 'è' → logprob: -9.14863395690918
    7. '\' → logprob: -9.27363395690918
    8. 'ée' → logprob: -9.64863395690918
    9. '\'' → logprob: -10.27363395690918
    10. '   ' → logprob: -10.39863395690918

Token 32: 'gles' (ID: 26095)
  Prédit: 'è'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'è' → logprob: -0.18859711289405823
    2. 'g' → logprob: -2.0635972023010254
    3. 'gles' → logprob: -3.6885972023010254
    4. 'gle' → logprob: -4.813597202301025
    5. 'é' → logprob: -4.938597202301025
    6. 'e' → logprob: -6.563597202301025
    7. 'èg' → logprob: -7.188597202301025
    8. 'ç' → logprob: -7.938597202301025
    9. 'eg' → logprob: -7.938597202301025
    10. 'gl' → logprob: -8.063596725463867

Token 33: ' de' (ID: 334)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.2968960106372833
    2. ':' → logprob: -2.046895980834961
    3. ' ' → logprob: -2.546895980834961
    4. 's' → logprob: -3.296895980834961
    5. 'es' → logprob: -5.421895980834961
    6. '_' → logprob: -6.796895980834961
    7. '   ' → logprob: -7.171895980834961
    8. ' ' → logprob: -7.296895980834961
    9. ' :
' → logprob: -7.421895980834961
    10. '```' → logprob: -7.546895980834961

Token 34: ' validation' (ID: 19618)
  Prédit: 'validation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'validation' → logprob: -0.6885915994644165
    2. ' validation' → logprob: -1.1885915994644165
    3. 'nom' → logprob: -2.688591480255127
    4. 'format' → logprob: -3.438591480255127
    5. ' format' → logprob: -4.438591480255127
    6. ' nom' → logprob: -4.438591480255127
    7. 'la' → logprob: -4.813591480255127
    8. 'con' → logprob: -5.313591480255127
    9. 'valid' → logprob: -5.313591480255127
    10. ' la' → logprob: -5.438591480255127

Token 35: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5596205592155457
    2. ':' → logprob: -0.9346205592155457
    3. ' :
' → logprob: -4.309620380401611
    4. '   ' → logprob: -4.559620380401611
    5. ':
' → logprob: -5.309620380401611
    6. ' ' → logprob: -6.059620380401611
    7. ' ' → logprob: -6.184620380401611
    8. 's' → logprob: -6.559620380401611
    9. '.' → logprob: -8.05962085723877
    10. ',' → logprob: -8.93462085723877

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5961986184120178
    2. '    ' → logprob: -1.096198558807373
    3. ' ' → logprob: -2.721198558807373
    4. '-' → logprob: -4.346198558807373
    5. ' )' → logprob: -4.596198558807373
    6. '*' → logprob: -5.471198558807373
    7. ' """' → logprob: -5.971198558807373
    8. ' "' → logprob: -6.221198558807373
    9. '  ' → logprob: -6.471198558807373
    10. ' *' → logprob: -6.471198558807373

Token 37: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06559810787439346
    2. '    ' → logprob: -3.1905980110168457
    3. ' ' → logprob: -5.315598011016846
    4. ' ' → logprob: -5.940598011016846
    5. ' )' → logprob: -5.940598011016846
    6. ' """' → logprob: -6.190598011016846
    7. ' "' → logprob: -6.565598011016846
    8. '-' → logprob: -6.940598011016846
    9. ' Le' → logprob: -7.190598011016846
    10. '"""' → logprob: -7.190598011016846

Token 38: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4400964677333832
    2. '    ' → logprob: -1.9400964975357056
    3. '-' → logprob: -2.315096378326416
    4. ' ' → logprob: -3.565096378326416
    5. ' La' → logprob: -3.940096378326416
    6. ' -' → logprob: -4.440096378326416
    7. 'La' → logprob: -4.815096378326416
    8. ' "' → logprob: -4.940096378326416
    9. ' '' → logprob: -5.065096378326416
    10. '*' → logprob: -5.565096378326416

Token 39: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3269741535186768
    2. '.' → logprob: -1.9519741535186768
    3. ' ' → logprob: -1.9519741535186768
    4. '-' → logprob: -2.0769741535186768
    5. ')' → logprob: -2.5769741535186768
    6. ' )' → logprob: -3.2019741535186768
    7. '    ' → logprob: -3.5769741535186768
    8. ' '' → logprob: -3.8269741535186768
    9. ':' → logprob: -3.9519741535186768
    10. ' "' → logprob: -4.076973915100098

Token 40: ' Le' (ID: 2018)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.6099361181259155
    2. ' La' → logprob: -1.8599361181259155
    3. 'La' → logprob: -2.109936237335205
    4. 'a' → logprob: -2.859936237335205
    5. ' L' → logprob: -2.859936237335205
    6. 'A' → logprob: -3.109936237335205
    7. '   ' → logprob: -3.109936237335205
    8. 's' → logprob: -3.234936237335205
    9. ' Le' → logprob: -3.734936237335205
    10. ' A' → logprob: -3.734936237335205

Token 41: ' premier' (ID: 15506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3391813039779663
    2. 's' → logprob: -1.7141813039779663
    3. ' ' → logprob: -2.589181423187256
    4. ' mot' → logprob: -2.589181423187256
    5. ' caractère' → logprob: -2.714181423187256
    6. ' string' → logprob: -3.464181423187256
    7. ' a' → logprob: -3.589181423187256
    8. ' premier' → logprob: -3.714181423187256
    9. '   ' → logprob: -3.714181423187256
    10. 'r' → logprob: -3.714181423187256

Token 42: ' caractère' (ID: 80509)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11186213046312332
    2. ' caractère' → logprob: -2.6118621826171875
    3. ' caract' → logprob: -4.3618621826171875
    4. 'car' → logprob: -4.6118621826171875
    5. ' c' → logprob: -6.3618621826171875
    6. 'c' → logprob: -6.6118621826171875
    7. '  ' → logprob: -6.9868621826171875
    8. ' car' → logprob: -7.1118621826171875
    9. ' caractères' → logprob: -7.3618621826171875
    10. '_' → logprob: -7.6118621826171875

Token 43: ' doit' (ID: 21822)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.31504136323928833
    2. ' doit' → logprob: -2.0650413036346436
    3. ' ' → logprob: -2.5650413036346436
    4. ' '' → logprob: -3.3150413036346436
    5. 's' → logprob: -4.190041542053223
    6. 'est' → logprob: -5.940041542053223
    7. 'do' → logprob: -6.565041542053223
    8. ' :' → logprob: -7.065041542053223
    9. ' c' → logprob: -7.065041542053223
    10. ' d' → logprob: -7.315041542053223

Token 44: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.08605967462062836
    2. ' ' → logprob: -3.2110595703125
    3. 'être' → logprob: -4.2110595703125
    4. ' ê' → logprob: -4.4610595703125
    5. 'ê' → logprob: -5.7110595703125
    6. ''être' → logprob: -5.8360595703125
    7. ' etre' → logprob: -5.8360595703125
    8. 's' → logprob: -6.4610595703125
    9. 'e' → logprob: -6.8360595703125
    10. ' be' → logprob: -6.8360595703125

Token 45: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.276397466659546
    2. ' un' → logprob: -2.026397466659546
    3. 'u' → logprob: -2.151397466659546
    4. ' '' → logprob: -2.276397466659546
    5. ' une' → logprob: -2.526397466659546
    6. ''un' → logprob: -3.026397466659546
    7. ' u' → logprob: -3.151397466659546
    8. 'a' → logprob: -3.276397466659546
    9. 'un' → logprob: -3.401397466659546
    10. ''u' → logprob: -3.651397466659546

Token 46: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29384365677833557
    2. 'A' → logprob: -1.9188436269760132
    3. 'b' → logprob: -4.668843746185303
    4. 's' → logprob: -5.043843746185303
    5. 'H' → logprob: -5.168843746185303
    6. '1' → logprob: -5.418843746185303
    7. 'h' → logprob: -5.418843746185303
    8. 'P' → logprob: -5.418843746185303
    9. 'S' → logprob: -5.543843746185303
    10. 'p' → logprob: -5.543843746185303

Token 47: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1316511482000351
    2. 'B' → logprob: -2.7566511631011963
    3. 'b' → logprob: -3.7566511631011963
    4. 'a' → logprob: -4.506650924682617
    5. '')' → logprob: -4.881650924682617
    6. 'A' → logprob: -6.131650924682617
    7. 'u' → logprob: -6.631650924682617
    8. '[' → logprob: -6.756650924682617
    9. '1' → logprob: -6.881650924682617
    10. ''.' → logprob: -7.006650924682617

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36291438341140747
    2. '\' → logprob: -2.7379143238067627
    3. '\n' → logprob: -2.8629143238067627
    4. '2' → logprob: -3.4879143238067627
    5. ')' → logprob: -3.4879143238067627
    6. '    ' → logprob: -4.237914562225342
    7. '"' → logprob: -4.237914562225342
    8. '[' → logprob: -4.612914562225342
    9. 'def' → logprob: -4.612914562225342
    10. 'e' → logprob: -4.737914562225342

Token 49: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7067418694496155
    2. '\n' → logprob: -0.8317418694496155
    3. '\' → logprob: -4.081741809844971
    4. 'n' → logprob: -4.831741809844971
    5. ')' → logprob: -5.081741809844971
    6. ' 
' → logprob: -5.331741809844971
    7. '    
' → logprob: -5.456741809844971
    8. '   
' → logprob: -5.581741809844971
    9. '```' → logprob: -5.956741809844971
    10. '
' → logprob: -6.456741809844971

Token 50: '2' (ID: 17)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.024883508682251
    2. '\n' → logprob: -1.274883508682251
    3. ')' → logprob: -1.524883508682251
    4. '\t' → logprob: -3.649883508682251
    5. '\s' → logprob: -4.149883270263672
    6. '\' → logprob: -4.149883270263672
    7. 'n' → logprob: -4.399883270263672
    8. 'b' → logprob: -4.399883270263672
    9. 'a' → logprob: -4.899883270263672
    10. '[' → logprob: -5.274883270263672

Token 51: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33135536313056946
    2. 'u' → logprob: -2.956355333328247
    3. ' Le' → logprob: -2.956355333328247
    4. 'e' → logprob: -3.081355333328247
    5. '   ' → logprob: -3.331355333328247
    6. ',' → logprob: -3.706355333328247
    7. ' ' → logprob: -4.706355571746826
    8. ' '' → logprob: -4.831355571746826
    9. 'Le' → logprob: -4.831355571746826
    10. ' .' → logprob: -5.206355571746826

Token 52: ' Il' (ID: 5329)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.9640445709228516
    2. 'Le' → logprob: -1.9640445709228516
    3. 'L' → logprob: -2.2140445709228516
    4. ' L' → logprob: -2.3390445709228516
    5. ' B' → logprob: -2.5890445709228516
    6. 'B' → logprob: -2.7140445709228516
    7. ' La' → logprob: -4.339044570922852
    8. '[' → logprob: -4.464044570922852
    9. ' '' → logprob: -4.464044570922852
    10. 'Les' → logprob: -4.464044570922852

Token 53: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.1775442659854889
    2. ' ' → logprob: -2.052544355392456
    3. ' est' → logprob: -5.052544116973877
    4. ' a' → logprob: -5.177544116973877
    5. 's' → logprob: -5.177544116973877
    6. ' faut' → logprob: -5.302544116973877
    7. ' '' → logprob: -6.427544116973877
    8. ' space' → logprob: -6.427544116973877
    9. ' f' → logprob: -6.802544116973877
    10. ' s' → logprob: -6.927544116973877

Token 54: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.33922111988067627
    2. ' être' → logprob: -1.3392211198806763
    3. 'être' → logprob: -5.214221000671387
    4. ' ' → logprob: -5.214221000671387
    5. ' suivre' → logprob: -5.714221000671387
    6. ' continuer' → logprob: -6.464221000671387
    7. ' etre' → logprob: -6.589221000671387
    8. ' ê' → logprob: -6.839221000671387
    9. '  ' → logprob: -7.214221000671387
    10. ' conten' → logprob: -7.214221000671387

Token 55: ' avoir' (ID: 16595)
  Prédit: ' avoir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoir' → logprob: -0.21512477099895477
    2. 'avoir' → logprob: -1.7151247262954712
    3. 'a' → logprob: -4.840124607086182
    4. ''avoir' → logprob: -5.715124607086182
    5. ' a' → logprob: -6.590124607086182
    6. ' ' → logprob: -8.21512508392334
    7. 'voir' → logprob: -8.34012508392334
    8. ' A' → logprob: -9.09012508392334
    9. '’avoir' → logprob: -9.59012508392334
    10. '   ' → logprob: -9.59012508392334

Token 56: ' exactement' (ID: 108701)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.4401264190673828
    2. 'au' → logprob: -2.065126419067383
    3. ' un' → logprob: -2.190126419067383
    4. ' ' → logprob: -3.190126419067383
    5. ' exactement' → logprob: -3.565126419067383
    6. ' une' → logprob: -4.065126419067383
    7. 'exact' → logprob: -5.065126419067383
    8. 'un' → logprob: -5.690126419067383
    9. 'une' → logprob: -5.815126419067383
    10. ' exactly' → logprob: -6.065126419067383

Token 57: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.040827538818120956
    2. ' a' → logprob: -4.290827751159668
    3. ' un' → logprob: -4.915827751159668
    4. ' one' → logprob: -5.665827751159668
    5. '1' → logprob: -6.040827751159668
    6. '  ' → logprob: -6.040827751159668
    7. ' deux' → logprob: -6.540827751159668
    8. '3' → logprob: -6.790827751159668
    9. '2' → logprob: -6.915827751159668
    10. ' trois' → logprob: -7.040827751159668

Token 58: ' '' (ID: 461)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.6538500189781189
    2. ' ' → logprob: -1.1538500785827637
    3. ''' → logprob: -3.7788500785827637
    4. 'space' → logprob: -4.278850078582764
    5. 'b' → logprob: -4.403850078582764
    6. ''espace' → logprob: -4.528850078582764
    7. 'es' → logprob: -4.653850078582764
    8. 'B' → logprob: -4.653850078582764
    9. ' space' → logprob: -4.778850078582764
    10. ' B' → logprob: -4.903850078582764

Token 59: 'C' (ID: 34)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01795138046145439
    2. 'C' → logprob: -5.642951488494873
    3. 'b' → logprob: -5.642951488494873
    4. 'S' → logprob: -6.892951488494873
    5. ' ' → logprob: -6.892951488494873
    6. 'A' → logprob: -7.017951488494873
    7. '0' → logprob: -7.142951488494873
    8. 'M' → logprob: -7.267951488494873
    9. ' B' → logprob: -7.267951488494873
    10. '1' → logprob: -7.517951488494873

Token 60: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014849414117634296
    2. ' '' → logprob: -4.3898491859436035
    3. '')' → logprob: -6.8898491859436035
    4. 'e' → logprob: -8.389849662780762
    5. 'a' → logprob: -8.514849662780762
    6. 'u' → logprob: -9.139849662780762
    7. ''''' → logprob: -9.514849662780762
    8. ''a' → logprob: -9.514849662780762
    9. ''entre' → logprob: -9.514849662780762
    10. ''au' → logprob: -9.639849662780762

Token 61: ' dans' (ID: 2671)
  Prédit: 'entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entre' → logprob: -1.344279408454895
    2. ' entre' → logprob: -1.594279408454895
    3. 'ap' → logprob: -1.969279408454895
    4. 'dans' → logprob: -2.2192792892456055
    5. ' au' → logprob: -2.7192792892456055
    6. 'au' → logprob: -3.0942792892456055
    7. ' dans' → logprob: -3.0942792892456055
    8. '   ' → logprob: -3.5942792892456055
    9. ' ' → logprob: -3.9692792892456055
    10. ' après' → logprob: -4.3442792892456055

Token 62: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.39483535289764404
    2. '<|end|>' → logprob: -2.5198354721069336
    3. ' le' → logprob: -3.0198354721069336
    4. 'le' → logprob: -3.3948354721069336
    5. ' les' → logprob: -3.5198354721069336
    6. 'la' → logprob: -3.5198354721069336
    7. ' l' → logprob: -3.6448354721069336
    8. 's' → logprob: -3.8948354721069336
    9. 'the' → logprob: -4.394835472106934
    10. ' the' → logprob: -4.394835472106934

Token 63: ' sous' (ID: 14487)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.0759421586990356
    2. ' chaîne' → logprob: -1.7009421586990356
    3. 's' → logprob: -1.8259421586990356
    4. 'string' → logprob: -2.575942039489746
    5. ' milieu' → logprob: -3.325942039489746
    6. ' string' → logprob: -3.325942039489746
    7. ' chaine' → logprob: -3.825942039489746
    8. 'de' → logprob: -4.325942039489746
    9. 'cha' → logprob: -4.388442039489746
    10. ' ' → logprob: -4.638442039489746

Token 64: '-cha' (ID: 163177)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.17697036266326904
    2. '-cha' → logprob: -2.5519704818725586
    3. 'cha' → logprob: -3.3019704818725586
    4. '-' → logprob: -3.9269704818725586
    5. ' chaîne' → logprob: -4.176970481872559
    6. 'string' → logprob: -4.926970481872559
    7. '   ' → logprob: -7.176970481872559
    8. 'tring' → logprob: -7.551970481872559
    9. '-string' → logprob: -7.676970481872559
    10. 'es' → logprob: -7.676970481872559

Token 65: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.07144347578287125
    2. 'î' → logprob: -3.446443557739258
    3. 'ine' → logprob: -4.321443557739258
    4. 'în' → logprob: -4.946443557739258
    5. 'ïne' → logprob: -5.321443557739258
    6. '   ' → logprob: -6.321443557739258
    7. 'i' → logprob: -6.571443557739258
    8. 'ne' → logprob: -6.696443557739258
    9. '```' → logprob: -7.071443557739258
    10. '^' → logprob: -7.696443557739258

Token 66: ' S' (ID: 336)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.8629864454269409
    2. ' ' → logprob: -2.2379865646362305
    3. ' située' → logprob: -2.3629865646362305
    4. '   ' → logprob: -3.2379865646362305
    5. ' de' → logprob: -3.3629865646362305
    6. ' suivante' → logprob: -3.4879865646362305
    7. '_' → logprob: -3.6129865646362305
    8. 's' → logprob: -3.9879865646362305
    9. ' après' → logprob: -3.9879865646362305
    10. ' _' → logprob: -3.9879865646362305

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017795410007238388
    2. 'tring' → logprob: -5.517795562744141
    3. '1' → logprob: -5.767795562744141
    4. 't' → logprob: -6.267795562744141
    5. '_' → logprob: -6.392795562744141
    6. 'u' → logprob: -6.767795562744141
    7. '2' → logprob: -7.142795562744141
    8. 'ur' → logprob: -7.392795562744141
    9. 'e' → logprob: -7.892795562744141
    10. ',' → logprob: -8.14279556274414

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11582594364881516
    2. '1' → logprob: -2.240825891494751
    3. '3' → logprob: -6.36582612991333
    4. ' ' → logprob: -7.86582612991333
    5. '
' → logprob: -8.740825653076172
    6. ':' → logprob: -9.240825653076172
    7. '4' → logprob: -9.303325653076172
    8. '0' → logprob: -9.490825653076172
    9. '(' → logprob: -9.928325653076172
    10. '

' → logprob: -9.928325653076172

Token 69: ':-' (ID: 20118)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1646922379732132
    2. ':-' → logprob: -2.5396921634674072
    3. ':]' → logprob: -2.9146921634674072
    4. '3' → logprob: -5.289692401885986
    5. ' :' → logprob: -5.664692401885986
    6. ']' → logprob: -5.914692401885986
    7. '4' → logprob: -6.039692401885986
    8. ' :]' → logprob: -6.664692401885986
    9. '1' → logprob: -7.164692401885986
    10. '5' → logprob: -7.414692401885986

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5238195061683655
    2. '2' → logprob: -0.8988195061683655
    3. '3' → logprob: -7.648819446563721
    4. ']' → logprob: -9.273819923400879
    5. ' ' → logprob: -10.336319923400879
    6. '4' → logprob: -10.711319923400879
    7. '```' → logprob: -11.461319923400879
    8. '5' → logprob: -11.898819923400879
    9. '

' → logprob: -12.273819923400879
    10. '-' → logprob: -12.336319923400879

Token 71: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001237133634276688
    2. ' ]' → logprob: -7.501236915588379
    3. '].' → logprob: -8.376236915588379
    4. '],' → logprob: -8.626236915588379
    5. '']' → logprob: -8.751236915588379
    6. ']
' → logprob: -11.376236915588379
    7. 'a' → logprob: -11.376236915588379
    8. ' ' → logprob: -11.501236915588379
    9. 'e' → logprob: -11.626236915588379
    10. '1' → logprob: -11.626236915588379

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008859194815158844
    2. 'def' → logprob: -5.758859157562256
    3. '"' → logprob: -6.508859157562256
    4. '"""' → logprob: -6.883859157562256
    5. ')' → logprob: -7.133859157562256
    6. '  ' → logprob: -7.633859157562256
    7. ' ' → logprob: -7.758859157562256
    8. '\' → logprob: -8.133859634399414
    9. '```' → logprob: -8.633859634399414
    10. ' def' → logprob: -8.883859634399414

Token 73: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45705610513687134
    2. '"' → logprob: -1.7070560455322266
    3. '\' → logprob: -2.7070560455322266
    4. ')' → logprob: -3.2070560455322266
    5. '"""' → logprob: -3.4570560455322266
    6. ' ' → logprob: -5.082056045532227
    7. '```' → logprob: -5.457056045532227
    8. 'def' → logprob: -5.707056045532227
    9. ''' → logprob: -5.832056045532227
    10. ' )' → logprob: -5.957056045532227

Token 74: '3' (ID: 18)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.162404865026474
    2. ')' → logprob: -2.287404775619507
    3. '"' → logprob: -4.662405014038086
    4. '\' → logprob: -4.787405014038086
    5. 'def' → logprob: -5.037405014038086
    6. ' ' → logprob: -5.537405014038086
    7. '.' → logprob: -5.912405014038086
    8. ')
' → logprob: -6.162405014038086
    9. '"""' → logprob: -6.162405014038086
    10. ''' → logprob: -6.537405014038086

Token 75: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16194722056388855
    2. ' Le' → logprob: -2.286947250366211
    3. '   ' → logprob: -3.411947250366211
    4. 'Le' → logprob: -4.911947250366211
    5. '    ' → logprob: -5.661947250366211
    6. ' ' → logprob: -7.036947250366211
    7. '  ' → logprob: -7.161947250366211
    8. ')' → logprob: -7.411947250366211
    9. ' .' → logprob: -7.661947250366211
    10. ',' → logprob: -8.036947250366211

Token 76: ' Après' (ID: 47562)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.27345213294029236
    2. 'Le' → logprob: -1.5234521627426147
    3. '   ' → logprob: -4.523452281951904
    4. 'La' → logprob: -6.398452281951904
    5. ' La' → logprob: -6.398452281951904
    6. 'Les' → logprob: -6.648452281951904
    7. 'def' → logprob: -6.898452281951904
    8. 'Tous' → logprob: -7.273452281951904
    9. ' Les' → logprob: -7.273452281951904
    10. '    ' → logprob: -7.648452281951904

Token 77: ' suppression' (ID: 78014)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2407196760177612
    2. ' le' → logprob: -1.6157196760177612
    3. ' '' → logprob: -2.240719795227051
    4. 'S' → logprob: -2.740719795227051
    5. ''' → logprob: -2.865719795227051
    6. ' la' → logprob: -2.865719795227051
    7. ''A' → logprob: -3.240719795227051
    8. 'def' → logprob: -3.490719795227051
    9. ' S' → logprob: -3.740719795227051
    10. 'l' → logprob: -3.740719795227051

Token 78: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0238142013549805
    2. ' du' → logprob: -1.1488142013549805
    3. 'de' → logprob: -1.7738142013549805
    4. 'du' → logprob: -2.7738142013549805
    5. ' des' → logprob: -3.2738142013549805
    6. ' ' → logprob: -3.8988142013549805
    7. 'des' → logprob: -4.5238142013549805
    8. 's' → logprob: -5.2738142013549805
    9. ' of' → logprob: -5.9613142013549805
    10. 'd' → logprob: -6.5863142013549805

Token 79: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.4659235179424286
    2. ''' → logprob: -2.090923547744751
    3. 'C' → logprob: -2.965923547744751
    4. ' '' → logprob: -3.590923547744751
    5. ''s' → logprob: -3.590923547744751
    6. 'prem' → logprob: -3.590923547744751
    7. 's' → logprob: -3.840923547744751
    8. 'S' → logprob: -4.340923309326172
    9. ''C' → logprob: -4.465923309326172
    10. ' caractère' → logprob: -4.715923309326172

Token 80: ' '' (ID: 461)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1604634523391724
    2. ' caractère' → logprob: -2.035463333129883
    3. ' et' → logprob: -2.160463333129883
    4. 'et' → logprob: -2.410463333129883
    5. ' A' → logprob: -2.410463333129883
    6. ' ' → logprob: -2.910463333129883
    7. ' '' → logprob: -3.160463333129883
    8. 'car' → logprob: -3.410463333129883
    9. 'a' → logprob: -3.660463333129883
    10. ''' → logprob: -4.285463333129883

Token 81: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.029250482097268105
    2. 'C' → logprob: -4.529250621795654
    3. 'S' → logprob: -5.404250621795654
    4. ''' → logprob: -5.654250621795654
    5. ''A' → logprob: -6.154250621795654
    6. 'a' → logprob: -6.279250621795654
    7. ' A' → logprob: -6.779250621795654
    8. ' ' → logprob: -6.904250621795654
    9. 'e' → logprob: -6.904250621795654
    10. 's' → logprob: -7.279250621795654

Token 82: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07673042267560959
    2. ' et' → logprob: -3.326730489730835
    3. '',' → logprob: -4.951730251312256
    4. 'C' → logprob: -4.951730251312256
    5. ' '' → logprob: -5.326730251312256
    6. ',' → logprob: -5.451730251312256
    7. 'et' → logprob: -5.701730251312256
    8. ' and' → logprob: -6.576730251312256
    9. 'c' → logprob: -6.701730251312256
    10. ' ' → logprob: -6.826730251312256

Token 83: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.1198706105351448
    2. ',' → logprob: -2.619870662689209
    3. 'et' → logprob: -3.744870662689209
    4. '   ' → logprob: -4.619870662689209
    5. 'def' → logprob: -5.994870662689209
    6. ' and' → logprob: -6.869870662689209
    7. ' ' → logprob: -7.119870662689209
    8. ' du' → logprob: -7.994870662689209
    9. ' ,' → logprob: -7.994870662689209
    10. '  ' → logprob: -8.49487018585205

Token 84: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.25194019079208374
    2. 'du' → logprob: -1.7519402503967285
    3. 'le' → logprob: -3.6269402503967285
    4. ' avant' → logprob: -4.6269402503967285
    5. ' le' → logprob: -5.5019402503967285
    6. 'avant' → logprob: -5.6269402503967285
    7. 'de' → logprob: -7.1269402503967285
    8. 'l' → logprob: -7.1269402503967285
    9. 'au' → logprob: -7.8769402503967285
    10. ' de' → logprob: -8.25193977355957

Token 85: ' seul' (ID: 33041)
  Prédit: ' dernier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dernier' → logprob: -0.2919105589389801
    2. 'dern' → logprob: -1.6669105291366577
    3. ''' → logprob: -3.4169106483459473
    4. ' ' → logprob: -4.791910648345947
    5. ' premier' → logprob: -4.916910648345947
    6. ' '' → logprob: -5.541910648345947
    7. ' C' → logprob: -5.791910648345947
    8. 'der' → logprob: -6.166910648345947
    9. ''C' → logprob: -6.666910648345947
    10. ' last' → logprob: -7.166910648345947

Token 86: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.27053332328796387
    2. ''C' → logprob: -1.6455333232879639
    3. ' C' → logprob: -3.895533323287964
    4. ''' → logprob: -4.145533561706543
    5. 'C' → logprob: -5.895533561706543
    6. ' ' → logprob: -6.270533561706543
    7. 'et' → logprob: -7.895533561706543
    8. '"C' → logprob: -8.020533561706543
    9. 'e' → logprob: -8.145533561706543
    10. ' et' → logprob: -8.270533561706543

Token 87: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.06432625651359558
    2. ''C' → logprob: -2.814326286315918
    3. ''' → logprob: -6.689326286315918
    4. ''S' → logprob: -8.814326286315918
    5. 'A' → logprob: -8.939326286315918
    6. ''A' → logprob: -9.064326286315918
    7. 'c' → logprob: -9.189326286315918
    8. ')' → logprob: -9.439326286315918
    9. '')' → logprob: -9.564326286315918
    10. 'S' → logprob: -9.564326286315918

Token 88: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23522275686264038
    2. '',' → logprob: -1.7352228164672852
    3. ',' → logprob: -3.985222816467285
    4. ']',' → logprob: -4.735222816467285
    5. ']' → logprob: -6.610222816467285
    6. '']' → logprob: -7.235222816467285
    7. 'e' → logprob: -7.485222816467285
    8. ''',' → logprob: -7.485222816467285
    9. 'a' → logprob: -8.110222816467285
    10. ''s' → logprob: -8.610222816467285

Token 89: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.654836118221283
    2. '   ' → logprob: -1.2798361778259277
    3. ' le' → logprob: -2.2798361778259277
    4. ' l' → logprob: -4.154836177825928
    5. 'le' → logprob: -4.279836177825928
    6. ' les' → logprob: -4.404836177825928
    7. 'la' → logprob: -4.654836177825928
    8. ' the' → logprob: -4.904836177825928
    9. 'l' → logprob: -5.154836177825928
    10. ' ' → logprob: -5.279836177825928

Token 90: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -1.3060578107833862
    2. 's' → logprob: -1.9310578107833862
    3. 'car' → logprob: -1.9310578107833862
    4. ' reste' → logprob: -2.306057929992676
    5. ' rest' → logprob: -2.306057929992676
    6. ' restantes' → logprob: -2.931057929992676
    7. 'reste' → logprob: -3.556057929992676
    8. ' autres' → logprob: -3.556057929992676
    9. 'rest' → logprob: -3.681057929992676
    10. ' ' → logprob: -3.806057929992676

Token 91: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6693410873413086
    2. ' rest' → logprob: -0.9193410873413086
    3. ' suivants' → logprob: -3.6693410873413086
    4. 's' → logprob: -3.7943410873413086
    5. 'su' → logprob: -4.919341087341309
    6. 'de' → logprob: -5.169341087341309
    7. ' restant' → logprob: -5.419341087341309
    8. ' de' → logprob: -5.419341087341309
    9. '```' → logprob: -5.669341087341309
    10. ' suivant' → logprob: -6.169341087341309

Token 92: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.0104106664657593
    2. 'ants' → logprob: -1.1354106664657593
    3. 'a' → logprob: -1.2604106664657593
    4. 'ent' → logprob: -3.885410785675049
    5. 'an' → logprob: -5.385410785675049
    6. '```' → logprob: -6.760410785675049
    7. '   ' → logprob: -6.885410785675049
    8. 'ante' → logprob: -7.385410785675049
    9. 'ents' → logprob: -7.760410785675049
    10. 'e' → logprob: -8.01041030883789

Token 93: ' doivent' (ID: 44722)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33819055557250977
    2. ' doivent' → logprob: -2.0881905555725098
    3. 'do' → logprob: -2.2131905555725098
    4. ' sont' → logprob: -3.3381905555725098
    5. ' appart' → logprob: -4.33819055557251
    6. ' n' → logprob: -7.21319055557251
    7. ' ' → logprob: -7.33819055557251
    8. 'n' → logprob: -7.71319055557251
    9. 'app' → logprob: -8.088190078735352
    10. ' do' → logprob: -8.213190078735352

Token 94: ' tous' (ID: 10688)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.34320855140686035
    2. 'être' → logprob: -1.3432085514068604
    3. 's' → logprob: -5.593208312988281
    4. ''être' → logprob: -5.593208312988281
    5. ' etre' → logprob: -5.718208312988281
    6. 'êtres' → logprob: -6.218208312988281
    7. 't' → logprob: -6.468208312988281
    8. ' n' → logprob: -6.593208312988281
    9. ' apparten' → logprob: -6.593208312988281
    10. ' tous' → logprob: -6.718208312988281

Token 95: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.08266973495483398
    2. 'ê' → logprob: -3.332669734954834
    3. ' être' → logprob: -3.582669734954834
    4. 'êt' → logprob: -5.582669734954834
    5. 'êtres' → logprob: -6.082669734954834
    6. ''être' → logprob: -6.082669734954834
    7. ' apparten' → logprob: -6.332669734954834
    8. 's' → logprob: -6.832669734954834
    9. 'etre' → logprob: -6.957669734954834
    10. 'app' → logprob: -7.207669734954834

Token 96: ' en' (ID: 469)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.007197380065918
    2. 'des' → logprob: -1.757197380065918
    3. ' des' → logprob: -1.882197380065918
    4. 'maj' → logprob: -2.882197380065918
    5. 's' → logprob: -3.632197380065918
    6. ''d' → logprob: -3.757197380065918
    7. ' maj' → logprob: -3.882197380065918
    8. ' compris' → logprob: -3.882197380065918
    9. ' dans' → logprob: -3.882197380065918
    10. 'entre' → logprob: -4.007197380065918

Token 97: ' minus' (ID: 40335)
  Prédit: ' maj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maj' → logprob: -0.15532386302947998
    2. ' {'' → logprob: -2.6553239822387695
    3. 'A' → logprob: -4.5303239822387695
    4. ' ['' → logprob: -4.7803239822387695
    5. '{'' → logprob: -4.9053239822387695
    6. '['' → logprob: -5.1553239822387695
    7. 'maj' → logprob: -5.2803239822387695
    8. ' '' → logprob: -5.4053239822387695
    9. ' uppercase' → logprob: -5.5303239822387695
    10. ''A' → logprob: -5.6553239822387695

Token 98: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.0006093903793953359
    2. 'cule' → logprob: -8.250609397888184
    3. 'c' → logprob: -8.375609397888184
    4. '```' → logprob: -9.375609397888184
    5. 'u' → logprob: -11.875609397888184
    6. '   ' → logprob: -12.250609397888184
    7. 'uc' → logprob: -13.125609397888184
    8. '``' → logprob: -13.250609397888184
    9. '**' → logprob: -13.375609397888184
    10. '�' → logprob: -13.500609397888184

Token 99: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8836458325386047
    2. ':' → logprob: -1.25864577293396
    3. 'a' → logprob: -2.50864577293396
    4. ')' → logprob: -2.75864577293396
    5. ' ' → logprob: -3.00864577293396
    6. ' :' → logprob: -4.008646011352539
    7. '"' → logprob: -4.008646011352539
    8. '.' → logprob: -4.758646011352539
    9. 'n' → logprob: -4.883646011352539
    10. '\n' → logprob: -5.008646011352539

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23738625645637512
    2. '"' → logprob: -1.9873862266540527
    3. '"""' → logprob: -2.7373862266540527
    4. ')' → logprob: -6.112386226654053
    5. '```' → logprob: -6.487386226654053
    6. ''' → logprob: -7.112386226654053
    7. ' 
' → logprob: -7.112386226654053
    8. ' ' → logprob: -7.237386226654053
    9. ' """' → logprob: -7.362386226654053
    10. 'a' → logprob: -7.612386226654053

Token 101: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2479383945465088
    2. '"""' → logprob: -1.8729383945465088
    3. '"' → logprob: -2.872938394546509
    4. ' """' → logprob: -5.37293815612793
    5. '```' → logprob: -6.49793815612793
    6. ' ' → logprob: -6.74793815612793
    7. ')' → logprob: -7.87293815612793
    8. ''' → logprob: -8.12293815612793
    9. '""' → logprob: -8.62293815612793
    10. '  ' → logprob: -8.87293815612793

Token 102: 'iche' (ID: 7509)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9194761514663696
    2. 'i' → logprob: -1.2944761514663696
    3. 'ect' → logprob: -1.5444761514663696
    4. 'r' → logprob: -3.29447603225708
    5. 'e' → logprob: -3.66947603225708
    6. 'ichage' → logprob: -4.41947603225708
    7. 'icher' → logprob: -4.54447603225708
    8. 'iche' → logprob: -5.16947603225708
    9. '   ' → logprob: -5.54447603225708
    10. 'iner' → logprob: -5.66947603225708

Token 103: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5358201861381531
    2. 'r' → logprob: -0.9108201861381531
    3. 'z' → logprob: -5.660820007324219
    4. ' r' → logprob: -5.910820007324219
    5. ' "' → logprob: -6.660820007324219
    6. '"' → logprob: -6.785820007324219
    7. ' un' → logprob: -7.535820007324219
    8. ''' → logprob: -7.660820007324219
    9. '   ' → logprob: -7.660820007324219
    10. 'e' → logprob: -8.160820007324219

Token 104: 'AC' (ID: 2436)
  Prédit: 'Valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Valid' → logprob: -0.20168794691562653
    2. 'Cha' → logprob: -2.451688051223755
    3. 'Val' → logprob: -2.701688051223755
    4. 'V' → logprob: -4.951687812805176
    5. 'La' → logprob: -5.326687812805176
    6. '"' → logprob: -5.701687812805176
    7. 'OK' → logprob: -5.951687812805176
    8. 'String' → logprob: -6.326687812805176
    9. 'Vale' → logprob: -6.451687812805176
    10. 'L' → logprob: -6.701687812805176

Token 105: '"' (ID: 1)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7541950941085815
    2. 'CEPT' → logprob: -0.7541950941085815
    3. 'cept' → logprob: -3.879195213317871
    4. 'E' → logprob: -4.379195213317871
    5. 'CEP' → logprob: -5.004195213317871
    6. '"' → logprob: -5.254195213317871
    7. 'T' → logprob: -5.629195213317871
    8. 'cepte' → logprob: -5.879195213317871
    9. 'e' → logprob: -6.379195213317871
    10. 'CE' → logprob: -6.754195213317871

Token 106: ' si' (ID: 1784)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.672561764717102
    2. '()' → logprob: -1.672561764717102
    3. '"' → logprob: -1.797561764717102
    4. '   ' → logprob: -3.5475616455078125
    5. ' ' → logprob: -4.1725616455078125
    6. '<|end|>' → logprob: -4.2975616455078125
    7. '```' → logprob: -4.4225616455078125
    8. ':' → logprob: -4.5475616455078125
    9. 'A' → logprob: -5.1725616455078125
    10. ')' → logprob: -5.1725616455078125

Token 107: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0846390426158905
    2. 'la' → logprob: -3.459639072418213
    3. ' le' → logprob: -3.959639072418213
    4. ' valid' → logprob: -4.084639072418213
    5. ' ' → logprob: -6.334639072418213
    6. ' l' → logprob: -6.584639072418213
    7. 'le' → logprob: -6.709639072418213
    8. ' the' → logprob: -6.709639072418213
    9. '   ' → logprob: -6.834639072418213
    10. ' len' → logprob: -6.959639072418213

Token 108: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.9100701808929443
    2. 'chaine' → logprob: -1.0350701808929443
    3. '   ' → logprob: -2.4100701808929443
    4. 'cha' → logprob: -2.4100701808929443
    5. 's' → logprob: -3.6600701808929443
    6. 'string' → logprob: -4.410070419311523
    7. ' chaine' → logprob: -4.785070419311523
    8. ' string' → logprob: -5.285070419311523
    9. ' ' → logprob: -5.785070419311523
    10. '    ' → logprob: -6.785070419311523

Token 109: ' satisfait' (ID: 174890)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.24124416708946228
    2. ' ' → logprob: -2.616244077682495
    3. '_' → logprob: -3.491244077682495
    4. ' respecte' → logprob: -3.616244077682495
    5. 'est' → logprob: -4.366244316101074
    6. ' n' → logprob: -4.616244316101074
    7. ' a' → logprob: -4.741244316101074
    8. '   ' → logprob: -4.866244316101074
    9. ' continue' → logprob: -5.241244316101074
    10. ' contient' → logprob: -5.366244316101074

Token 110: ' toutes' (ID: 17502)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.482246994972229
    2. '   ' → logprob: -2.1072468757629395
    3. '"' → logprob: -2.3572468757629395
    4. ' "' → logprob: -2.8572468757629395
    5. ' le' → logprob: -3.1072468757629395
    6. '    ' → logprob: -3.8572468757629395
    7. ' ' → logprob: -4.7322468757629395
    8. ' l' → logprob: -4.7322468757629395
    9. '_' → logprob: -5.4822468757629395
    10. '```' → logprob: -5.4822468757629395

Token 111: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.10862560570240021
    2. ' l' → logprob: -3.358625650405884
    3. ' la' → logprob: -3.608625650405884
    4. 'les' → logprob: -4.108625411987305
    5. ' le' → logprob: -4.608625411987305
    6. '   ' → logprob: -5.108625411987305
    7. ' the' → logprob: -5.733625411987305
    8. ' ' → logprob: -6.733625411987305
    9. 's' → logprob: -7.233625411987305
    10. 'l' → logprob: -7.483625411987305

Token 112: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.12558835744857788
    2. 'conditions' → logprob: -2.2505884170532227
    3. ' règles' → logprob: -5.125588417053223
    4. ' ' → logprob: -6.125588417053223
    5. '   ' → logprob: -6.250588417053223
    6. ' condition' → logprob: -7.125588417053223
    7. ' critères' → logprob: -7.625588417053223
    8. 'r' → logprob: -7.750588417053223
    9. 'condition' → logprob: -8.250588417053223
    10. 'cond' → logprob: -9.125588417053223

Token 113: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019696936011314392
    2. ':' → logprob: -5.0196967124938965
    3. 'def' → logprob: -5.0196967124938965
    4. ')' → logprob: -6.5196967124938965
    5. '
' → logprob: -7.0196967124938965
    6. '):' → logprob: -7.1446967124938965
    7. '  ' → logprob: -7.2696967124938965
    8. ',' → logprob: -7.2696967124938965
    9. '```' → logprob: -8.019697189331055
    10. ' :' → logprob: -8.644697189331055

Token 114: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004235816653817892
    2. '"' → logprob: -7.254235744476318
    3. ' ' → logprob: -7.254235744476318
    4. '
' → logprob: -7.629235744476318
    5. '    
' → logprob: -7.629235744476318
    6. ' 
' → logprob: -8.004236221313477
    7. '    ' → logprob: -8.129236221313477
    8. ' sinon' → logprob: -8.254236221313477
    9. ' else' → logprob: -8.504236221313477
    10. '\n' → logprob: -9.254236221313477

Token 115: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.04484586790204048
    2. 'print' → logprob: -3.5448458194732666
    3. '   ' → logprob: -4.294846057891846
    4. '"' → logprob: -7.544846057891846
    5. '    ' → logprob: -8.294845581054688
    6. ' ' → logprob: -9.169845581054688
    7. ' ' → logprob: -9.169845581054688
    8. ' affiche' → logprob: -9.669845581054688
    9. ' return' → logprob: -9.794845581054688
    10. ' "' → logprob: -9.794845581054688

Token 116: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.20199774205684662
    2. '"' → logprob: -1.7019977569580078
    3. ' ' → logprob: -7.951997756958008
    4. ''' → logprob: -9.701997756958008
    5. ' '' → logprob: -10.201997756958008
    6. '"C' → logprob: -10.576997756958008
    7. '"I' → logprob: -11.201997756958008
    8. '("' → logprob: -11.326997756958008
    9. '"N' → logprob: -11.576997756958008
    10. '"A' → logprob: -12.014497756958008

Token 117: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -0.004451600834727287
    2. 'Invalid' → logprob: -7.004451751708984
    3. 'NG' → logprob: -7.129451751708984
    4. 'AC' → logprob: -7.379451751708984
    5. 'WR' → logprob: -8.004451751708984
    6. 'Wrong' → logprob: -8.254451751708984
    7. 'error' → logprob: -8.379451751708984
    8. '!' → logprob: -8.379451751708984
    9. 'INVALID' → logprob: -8.754451751708984
    10. '"' → logprob: -9.004451751708984

Token 118: '".
' (ID: 26880)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001807268476113677
    2. '"""' → logprob: -7.00180721282959
    3. '"
' → logprob: -7.12680721282959
    4. '"
' → logprob: -10.50180721282959
    5. 'def' → logprob: -11.25180721282959
    6. '"""
' → logprob: -11.25180721282959
    7. '")' → logprob: -11.75180721282959
    8. '".' → logprob: -11.75180721282959
    9. '"`' → logprob: -12.62680721282959
    10. '```' → logprob: -12.62680721282959

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02993040718138218
    2. '"""' → logprob: -4.279930591583252
    3. '
' → logprob: -5.279930591583252
    4. '```' → logprob: -5.529930591583252
    5. '"' → logprob: -5.904930591583252
    6. ')' → logprob: -6.404930591583252
    7. 'def' → logprob: -7.029930591583252
    8. '    
' → logprob: -7.904930591583252
    9. '"""
' → logprob: -8.279930114746094
    10. '""' → logprob: -8.779930114746094

Token 120: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05179687216877937
    2. '
' → logprob: -3.6767969131469727
    3. '```' → logprob: -4.676796913146973
    4. '"""' → logprob: -4.926796913146973
    5. 'def' → logprob: -5.551796913146973
    6. '    
' → logprob: -6.176796913146973
    7. '"""
' (adapté à ' """
') → logprob: -7.301796913146973
    8. '"' → logprob: -7.926796913146973
    9. '\n' → logprob: -7.926796913146973
    10. ')' → logprob: -8.051796913146973

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006838271860033274
    2. 'def' → logprob: -5.506838321685791
    3. '    
' → logprob: -6.881838321685791
    4. '    ' → logprob: -7.131838321685791
    5. 'n' → logprob: -8.256837844848633
    6. 'a' → logprob: -9.256837844848633
    7. '\' → logprob: -9.381837844848633
    8. '
' → logprob: -9.631837844848633
    9. '       ' → logprob: -9.756837844848633
    10. 'input' → logprob: -9.881837844848633

Token 122: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020085148513317108
    2. 's' → logprob: -4.395085334777832
    3. 'input' → logprob: -5.395085334777832
    4. 'string' → logprob: -6.895085334777832
    5. '    
' → logprob: -7.020085334777832
    6. 'n' → logprob: -8.520085334777832
    7. 'chaine' → logprob: -8.520085334777832
    8. 'def' → logprob: -9.020085334777832
    9. ' input' → logprob: -9.520085334777832
    10. ' s' → logprob: -9.645085334777832

Token 123: ' Lire' (ID: 57624)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32781025767326355
    2. 'string' → logprob: -2.077810287475586
    3. '   ' → logprob: -2.702810287475586
    4. ' s' → logprob: -3.077810287475586
    5. 'input' → logprob: -3.952810287475586
    6. ' string' → logprob: -4.452810287475586
    7. 'chaine' → logprob: -5.702810287475586
    8. ' input' → logprob: -6.452810287475586
    9. 'line' → logprob: -6.827810287475586
    10. ' line' → logprob: -6.952810287475586

Token 124: ' la' (ID: 557)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.338468074798584
    2. '   ' → logprob: -1.463468074798584
    3. ' la' → logprob: -2.088468074798584
    4. ' s' → logprob: -2.213468074798584
    5. 's' → logprob: -2.338468074798584
    6. ' string' → logprob: -3.213468074798584
    7. 'input' → logprob: -3.213468074798584
    8. ' line' → logprob: -3.713468074798584
    9. 'chaine' → logprob: -3.713468074798584
    10. 'string' → logprob: -4.088468074798584

Token 125: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15280437469482422
    2. 'string' → logprob: -2.652804374694824
    3. ' s' → logprob: -3.527804374694824
    4. ' string' → logprob: -3.652804374694824
    5. 'chaine' → logprob: -4.902804374694824
    6. 'input' → logprob: -5.902804374694824
    7. ' input' → logprob: -6.527804374694824
    8. ' ' → logprob: -6.902804374694824
    9. 'str' → logprob: -7.027804374694824
    10. ' line' → logprob: -7.652804374694824

Token 126: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09080593287944794
    2. 's' → logprob: -2.590806007385254
    3. ' s' → logprob: -5.590806007385254
    4. 'chaine' → logprob: -5.840806007385254
    5. 'input' → logprob: -6.090806007385254
    6. 'string' → logprob: -6.465806007385254
    7. ' input' → logprob: -7.215806007385254
    8. ' string' → logprob: -8.715806007385254
    9. 'n' → logprob: -9.465806007385254
    10. 'ch' → logprob: -9.465806007385254

Token 127: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.20378521084785461
    2. ''entrée' → logprob: -1.7037851810455322
    3. ' entrée' → logprob: -6.578785419464111
    4. 'entr' → logprob: -8.078784942626953
    5. '’entrée' → logprob: -8.453784942626953
    6. 'e' → logprob: -8.578784942626953
    7. 'input' → logprob: -8.578784942626953
    8. 'ent' → logprob: -10.203784942626953
    9. 'entrada' → logprob: -11.578784942626953
    10. ' entr' → logprob: -11.953784942626953

Token 128: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12042538821697235
    2. 's' → logprob: -2.3704254627227783
    3. ' s' → logprob: -4.495425224304199
    4. 'input' → logprob: -5.620425224304199
    5. 'string' → logprob: -5.995425224304199
    6. '    
' → logprob: -6.995425224304199
    7. 'chaine' → logprob: -7.120425224304199
    8. ' input' → logprob: -7.745425224304199
    9. ' string' → logprob: -8.3704252243042
    10. 'n' → logprob: -9.7454252243042

Token 129: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5760164856910706
    2. 's' → logprob: -0.9510164856910706
    3. ' string' → logprob: -4.076016426086426
    4. 'string' → logprob: -4.201016426086426
    5. 'chaine' → logprob: -5.451016426086426
    6. ' input' → logprob: -5.826016426086426
    7. ' S' → logprob: -6.076016426086426
    8. '   ' → logprob: -6.201016426086426
    9. 'input' → logprob: -6.326016426086426
    10. 'strip' → logprob: -6.451016426086426

Token 130: ' convertir' (ID: 79223)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00930880568921566
    2. 'rstrip' → logprob: -5.259308815002441
    3. ' strip' → logprob: -6.884308815002441
    4. 's' → logprob: -7.009308815002441
    5. ' =' → logprob: -7.134308815002441
    6. 'input' → logprob: -7.384308815002441
    7. 'string' → logprob: -8.259308815002441
    8. '_strip' → logprob: -9.134308815002441
    9. '=' → logprob: -9.509308815002441
    10. '.strip' → logprob: -10.009308815002441

Token 131: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.047003842890262604
    2. '   ' → logprob: -4.047003746032715
    3. 'en' → logprob: -4.172003746032715
    4. ' =' → logprob: -5.297003746032715
    5. ' ' → logprob: -6.297003746032715
    6. ' input' → logprob: -6.672003746032715
    7. 'str' → logprob: -6.922003746032715
    8. 'input' → logprob: -7.172003746032715
    9. 's' → logprob: -7.422003746032715
    10. 'string' → logprob: -7.672003746032715

Token 132: ' liste' (ID: 31719)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.38050368428230286
    2. 'chaine' → logprob: -1.2555036544799805
    3. 'string' → logprob: -4.6305036544799805
    4. 'cha' → logprob: -5.1305036544799805
    5. 'maj' → logprob: -5.2555036544799805
    6. ' chaîne' → logprob: -5.5055036544799805
    7. 'minus' → logprob: -6.2555036544799805
    8. ' maj' → logprob: -6.6305036544799805
    9. 'ma' → logprob: -6.8805036544799805
    10. 's' → logprob: -7.1305036544799805

Token 133: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7782886028289795
    2. '   ' → logprob: -0.9032886028289795
    3. ' s' → logprob: -2.1532886028289795
    4. 'input' → logprob: -5.028288841247559
    5. 'chaine' → logprob: -5.528288841247559
    6. ' input' → logprob: -6.028288841247559
    7. '    
' → logprob: -6.153288841247559
    8. 'string' → logprob: -6.528288841247559
    9. ' =' → logprob: -7.153288841247559
    10. 'ch' → logprob: -7.403288841247559

Token 134: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.6025286316871643
    2. 'car' → logprob: -0.8525286316871643
    3. 'str' → logprob: -3.9775285720825195
    4. 'chars' → logprob: -5.7275285720825195
    5. 'char' → logprob: -5.8525285720825195
    6. ' caracteres' → logprob: -7.7275285720825195
    7. ' chaînes' → logprob: -8.60252857208252
    8. 'chain' → logprob: -8.97752857208252
    9. 'list' → logprob: -9.60252857208252
    10. 'cha' → logprob: -9.72752857208252

Token 135: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29091426730155945
    2. 's' → logprob: -1.5409142971038818
    3. ' s' → logprob: -3.665914297103882
    4. '    
' → logprob: -5.290914058685303
    5. 'input' → logprob: -5.790914058685303
    6. 'string' → logprob: -5.915914058685303
    7. 'chaine' → logprob: -7.540914058685303
    8. ' input' → logprob: -8.040914535522461
    9. ' string' → logprob: -8.415914535522461
    10. '
' → logprob: -8.665914535522461

Token 136: ' faciliter' (ID: 106284)
  Prédit: ' faciliter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.8445018529891968
    2. ' manip' → logprob: -1.5945018529891968
    3. ' manipulation' → logprob: -2.0945019721984863
    4. ' pouvoir' → logprob: -2.3445019721984863
    5. ' traiter' → logprob: -3.3445019721984863
    6. 'fac' → logprob: -3.7195019721984863
    7. ' traitement' → logprob: -4.344501972198486
    8. 'trait' → logprob: -4.344501972198486
    9. 'modifier' → logprob: -4.969501972198486
    10. ' modifier' → logprob: -5.094501972198486

Token 137: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1639939397573471
    2. ' manipulation' → logprob: -2.6639938354492188
    3. ' l' → logprob: -3.5389938354492188
    4. ' manip' → logprob: -3.9139938354492188
    5. ' les' → logprob: -4.538993835449219
    6. ' le' → logprob: -5.538993835449219
    7. 'la' → logprob: -5.788993835449219
    8. 'l' → logprob: -5.913993835449219
    9. ' manipul' → logprob: -6.288993835449219
    10. ' traitement' → logprob: -6.538993835449219

Token 138: ' modifications' (ID: 38756)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.5881839394569397
    2. ' modifications' → logprob: -1.963183879852295
    3. ' manipulation' → logprob: -2.463183879852295
    4. ' traitements' → logprob: -2.463183879852295
    5. 'trait' → logprob: -2.588183879852295
    6. ' vér' → logprob: -3.838183879852295
    7. 'mod' → logprob: -4.963183879852295
    8. 'man' → logprob: -4.963183879852295
    9. ' traitement' → logprob: -4.963183879852295
    10. ' opérations' → logprob: -5.713183879852295

Token 139: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5716270804405212
    2. '   ' → logprob: -0.9466270804405212
    3. ' s' → logprob: -4.071627140045166
    4. 'string' → logprob: -4.321627140045166
    5. 'input' → logprob: -4.696627140045166
    6. 'chaine' → logprob: -5.696627140045166
    7. '    
' → logprob: -5.946627140045166
    8. ' string' → logprob: -7.571627140045166
    9. ' input' → logprob: -8.071626663208008
    10. 'ch' → logprob: -8.571626663208008

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12706659734249115
    2. 's' → logprob: -2.2520666122436523
    3. ' s' → logprob: -5.002066612243652
    4. 'chaine' → logprob: -6.127066612243652
    5. 'string' → logprob: -6.252066612243652
    6. 'input' → logprob: -6.252066612243652
    7. '    
' → logprob: -7.377066612243652
    8. ' string' → logprob: -8.502066612243652
    9. ' input' → logprob: -8.627066612243652
    10. 'ch' → logprob: -9.502066612243652

Token 141: ' S' (ID: 336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43702951073646545
    2. ' s' → logprob: -1.312029480934143
    3. '   ' → logprob: -2.8120296001434326
    4. 'string' → logprob: -4.4370293617248535
    5. ' string' → logprob: -5.5620293617248535
    6. 'input' → logprob: -5.6870293617248535
    7. ' input' → logprob: -5.9370293617248535
    8. 'chaine' → logprob: -7.1870293617248535
    9. ' S' → logprob: -7.4370293617248535
    10. 'S' (adapté à ' S') → logprob: -7.8120293617248535

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009777575731277466
    2. '=' → logprob: -4.634777545928955
    3. '=input' → logprob: -11.259778022766113
    4. '_input' → logprob: -13.634778022766113
    5. ',' → logprob: -13.884778022766113
    6. 'input' → logprob: -14.134778022766113
    7. ' ' → logprob: -14.134778022766113
    8. 's' → logprob: -14.259778022766113
    9. ' =[' → logprob: -14.259778022766113
    10. '[' → logprob: -14.509778022766113

Token 143: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.32566624879837036
    2. 'input' → logprob: -1.9506661891937256
    3. ' list' → logprob: -2.0756661891937256
    4. ' input' → logprob: -4.575666427612305
    5. ' ' → logprob: -15.075666427612305
    6. '[input' → logprob: -15.200666427612305
    7. '(list' → logprob: -15.325666427612305
    8. '	list' → logprob: -15.325666427612305
    9. '=list' → logprob: -15.575666427612305
    10. 'str' → logprob: -15.825666427612305

Token 144: 'i' (ID: 72)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004237481392920017
    2. ' input' → logprob: -5.504237651824951
    3. 'c' → logprob: -9.004237174987793
    4. 'i' → logprob: -10.879237174987793
    5. 'x' → logprob: -12.379237174987793
    6. '   ' → logprob: -12.379237174987793
    7. 's' → logprob: -12.629237174987793
    8. 'char' → logprob: -13.004237174987793
    9. ' c' → logprob: -14.254237174987793
    10. 'str' → logprob: -14.879237174987793

Token 145: ' for' (ID: 395)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7380676865577698
    2. ' for' → logprob: -1.238067626953125
    3. 'for' → logprob: -2.113067626953125
    4. '(input' → logprob: -3.363067626953125
    5. 'n' → logprob: -3.488067626953125
    6. ']' → logprob: -3.738067626953125
    7. '(' → logprob: -5.363067626953125
    8. '()' → logprob: -5.488067626953125
    9. 's' → logprob: -5.738067626953125
    10. ' input' → logprob: -6.363067626953125

Token 146: ' i' (ID: 575)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6978619694709778
    2. ' input' → logprob: -0.6978619694709778
    3. 'i' → logprob: -5.947862148284912
    4. ' i' → logprob: -6.197862148284912
    5. ' ' → logprob: -11.072861671447754
    6. 'c' → logprob: -12.197861671447754
    7. '(input' → logprob: -12.197861671447754
    8. '_' → logprob: -12.322861671447754
    9. ' in' → logprob: -12.447861671447754
    10. ' c' → logprob: -12.572861671447754

Token 147: ' in' (ID: 306)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.973458468914032
    2. ' in' → logprob: -1.0984585285186768
    3. ' input' → logprob: -1.3484585285186768
    4. 'in' → logprob: -3.8484585285186768
    5. '(input' → logprob: -5.348458290100098
    6. '=input' → logprob: -6.223458290100098
    7. ' ' → logprob: -7.598458290100098
    8. '   ' → logprob: -8.473458290100098
    9. '_input' → logprob: -8.973458290100098
    10. '_' → logprob: -9.723458290100098

Token 148: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16026312112808228
    2. ' input' → logprob: -1.9102630615234375
    3. '(input' → logprob: -10.535263061523438
    4. 'list' → logprob: -12.660263061523438
    5. 'str' → logprob: -12.785263061523438
    6. ' ' → logprob: -13.660263061523438
    7. '<input' → logprob: -14.160263061523438
    8. 'range' → logprob: -14.535263061523438
    9. ' str' → logprob: -14.660263061523438
    10. ' list' → logprob: -14.660263061523438

Token 149: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.004093835595995188
    2. '()' → logprob: -5.504093647003174
    3. '().' → logprob: -11.629094123840332
    4. '()].' → logprob: -13.379094123840332
    5. '()][' → logprob: -13.754094123840332
    6. '()]
' → logprob: -13.879094123840332
    7. ' ()' → logprob: -14.254094123840332
    8. '()>' → logprob: -14.504094123840332
    9. '()],' → logprob: -14.879094123840332
    10. '()}' → logprob: -14.879094123840332

Token 150: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26899829506874084
    2. '
' → logprob: -2.143998384475708
    3. '    
' → logprob: -2.518998384475708
    4. ' 
' → logprob: -4.518998146057129
    5. ' ' → logprob: -4.768998146057129
    6. '  
' → logprob: -5.268998146057129
    7. '   
' → logprob: -5.518998146057129
    8. 'n' → logprob: -6.393998146057129
    9. ' if' → logprob: -6.518998146057129
    10. 'def' → logprob: -7.143998146057129

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06659489870071411
    2. ' if' → logprob: -3.4415948390960693
    3. 'if' → logprob: -4.191595077514648
    4. '    
' → logprob: -5.066595077514648
    5. ' ' → logprob: -5.816595077514648
    6. 'n' → logprob: -5.816595077514648
    7. '
' → logprob: -6.441595077514648
    8. ' 
' → logprob: -6.941595077514648
    9. 's' → logprob: -7.441595077514648
    10. '    ' → logprob: -7.566595077514648

Token 152: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011232907883822918
    2. '#' (adapté à ' #') → logprob: -4.511232852935791
    3. ' if' → logprob: -9.63623332977295
    4. 'n' → logprob: -10.38623332977295
    5. 'i' → logprob: -11.01123332977295
    6. 'first' → logprob: -11.01123332977295
    7. '   ' → logprob: -11.13623332977295
    8. 'for' → logprob: -11.76123332977295
    9. '```' → logprob: -12.01123332977295
    10. 'A' → logprob: -12.13623332977295

Token 153: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05512915179133415
    2. '#' → logprob: -3.305129051208496
    3. ' if' → logprob: -4.180129051208496
    4. 'first' → logprob: -7.430129051208496
    5. 'n' → logprob: -8.055129051208496
    6. ' #' → logprob: -8.680129051208496
    7. 'for' → logprob: -9.430129051208496
    8. '   ' → logprob: -9.805129051208496
    9. ' first' → logprob: -9.805129051208496
    10. 'def' → logprob: -9.930129051208496

Token 154: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3361258804798126
    2. 'ifier' → logprob: -1.3361258506774902
    3. 'er' → logprob: -3.9611258506774902
    4. 'ify' → logprob: -6.83612585067749
    5. 'ifie' → logprob: -6.83612585067749
    6. ' if' → logprob: -7.58612585067749
    7. '   ' → logprob: -8.086126327514648
    8. 'ifer' → logprob: -8.586126327514648
    9. 'ifiez' → logprob: -8.586126327514648
    10. '_if' → logprob: -10.086126327514648

Token 155: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26010096073150635
    2. ' len' → logprob: -1.5101009607315063
    3. 'if' → logprob: -5.885100841522217
    4. ' si' → logprob: -6.135100841522217
    5. 'len' → logprob: -6.635100841522217
    6. ' S' → logprob: -6.760100841522217
    7. ' not' → logprob: -8.010101318359375
    8. ' que' → logprob: -8.510101318359375
    9. ' ' → logprob: -9.010101318359375
    10. ' le' → logprob: -10.260101318359375

Token 156: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8716459274291992
    2. ' len' → logprob: -0.8716459274291992
    3. 'S' → logprob: -2.746645927429199
    4. ' S' → logprob: -3.371645927429199
    5. ' not' → logprob: -3.371645927429199
    6. 'not' → logprob: -3.496645927429199
    7. '(len' → logprob: -9.2466459274292
    8. ' ' → logprob: -9.4966459274292
    9. 'non' → logprob: -10.2466459274292
    10. ' la' → logprob: -10.6216459274292

Token 157: ' premier' (ID: 15506)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3206172585487366
    2. 'S' → logprob: -1.5706171989440918
    3. ' len' → logprob: -2.945617198944092
    4. ' S' → logprob: -4.320617198944092
    5. ' not' → logprob: -8.57061767578125
    6. 'not' → logprob: -8.69561767578125
    7. '(len' → logprob: -9.94561767578125
    8. ' ' → logprob: -10.57061767578125
    9. 'first' → logprob: -11.50811767578125
    10. '   ' → logprob: -11.88311767578125

Token 158: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.4394861459732056
    2. ' ' → logprob: -1.5644861459732056
    3. ' caractère' → logprob: -1.5644861459732056
    4. ' S' → logprob: -1.8144861459732056
    5. 'S' → logprob: -1.9394861459732056
    6. ' caract' → logprob: -4.439486026763916
    7. ' car' → logprob: -5.439486026763916
    8. '_' → logprob: -5.689486026763916
    9. ''' → logprob: -5.689486026763916
    10. 's' → logprob: -6.064486026763916

Token 159: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.1331084966659546
    2. ' est' → logprob: -1.6331084966659546
    3. ' ==' → logprob: -1.6331084966659546
    4. '!=' → logprob: -2.383108615875244
    5. '==' → logprob: -2.633108615875244
    6. ' S' → logprob: -2.883108615875244
    7. 'S' → logprob: -3.258108615875244
    8. 'est' → logprob: -4.008108615875244
    9. ' ' → logprob: -5.258108615875244
    10. ' is' → logprob: -6.758108615875244

Token 160: ' "' (ID: 392)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.18654072284698486
    2. ''A' → logprob: -2.0615406036376953
    3. ''' → logprob: -3.1865406036376953
    4. 'A' → logprob: -7.311540603637695
    5. ' A' → logprob: -7.436540603637695
    6. ' ' → logprob: -8.936540603637695
    7. '"A' → logprob: -9.436540603637695
    8. ' "' → logprob: -9.561540603637695
    9. ''S' → logprob: -10.936540603637695
    10. '"' → logprob: -11.436540603637695

Token 161: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05512181296944618
    2. ''A' → logprob: -2.930121898651123
    3. ' A' → logprob: -8.930121421813965
    4. ''' → logprob: -9.680121421813965
    5. '"A' → logprob: -10.680121421813965
    6. ' '' → logprob: -11.555121421813965
    7. '’A' → logprob: -12.430121421813965
    8. '`' → logprob: -12.930121421813965
    9. '   ' → logprob: -13.805121421813965
    10. ' ' → logprob: -14.305121421813965

Token 162: '"' (ID: 1)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.04751017317175865
    2. ']' → logprob: -3.6725101470947266
    3. '"' → logprob: -4.047510147094727
    4. ' "]' → logprob: -6.172510147094727
    5. '']' → logprob: -7.922510147094727
    6. '   ' → logprob: -7.922510147094727
    7. ')' → logprob: -8.672510147094727
    8. ' and' → logprob: -8.797510147094727
    9. ' ]' → logprob: -9.422510147094727
    10. '")' → logprob: -9.672510147094727

Token 163: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013910546898841858
    2. '    
' → logprob: -4.63891077041626
    3. ' if' → logprob: -6.26391077041626
    4. '   
' → logprob: -6.88891077041626
    5. 'if' → logprob: -8.263910293579102
    6. ' 
' → logprob: -8.513910293579102
    7. '  
' → logprob: -8.638910293579102
    8. '
' → logprob: -8.763910293579102
    9. '  ' → logprob: -8.888910293579102
    10. '    ' → logprob: -9.263910293579102

Token 164: ' s' (ID: 265)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9743213653564453
    2. 'len' → logprob: -1.0993213653564453
    3. ' S' → logprob: -1.7243213653564453
    4. 'S' → logprob: -2.4743213653564453
    5. ' '' → logprob: -4.974321365356445
    6. '   ' → logprob: -4.974321365356445
    7. ''' → logprob: -6.099321365356445
    8. ' ' → logprob: -6.224321365356445
    9. ''S' → logprob: -6.349321365356445
    10. 'if' → logprob: -6.849321365356445

Token 165: ''il' (ID: 14683)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.26819106936454773
    2. ' len' → logprob: -1.6431910991668701
    3. '(len' → logprob: -3.39319109916687
    4. '   ' → logprob: -5.768190860748291
    5. '=len' → logprob: -7.143190860748291
    6. '[len' → logprob: -7.268190860748291
    7. '    ' → logprob: -7.268190860748291
    8. 'i' → logprob: -8.14319133758545
    9. 'tring' → logprob: -8.14319133758545
    10. '_len' → logprob: -8.26819133758545

Token 166: ' y' (ID: 342)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5253576636314392
    2. ' len' → logprob: -0.9003576636314392
    3. '(len' → logprob: -6.525357723236084
    4. '<len' → logprob: -7.775357723236084
    5. ' est' → logprob: -9.525357246398926
    6. '=len' → logprob: -10.275357246398926
    7. 'a' → logprob: -10.400357246398926
    8. 't' → logprob: -10.650357246398926
    9. '[len' → logprob: -10.650357246398926
    10. 'S' → logprob: -10.775357246398926

Token 167: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16636157035827637
    2. ' a' → logprob: -2.5413615703582764
    3. ''a' → logprob: -2.9163615703582764
    4. ''est' → logprob: -5.4163618087768555
    5. 'est' → logprob: -5.5413618087768555
    6. ''' → logprob: -6.0413618087768555
    7. ''s' → logprob: -6.6663618087768555
    8. 'len' → logprob: -6.6663618087768555
    9. 'S' → logprob: -6.9163618087768555
    10. ' '' → logprob: -7.2913618087768555

Token 168: ' exactement' (ID: 108701)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.27992770075798035
    2. 'S' → logprob: -2.4049277305603027
    3. ' ' → logprob: -3.1549277305603027
    4. ' au' → logprob: -3.2799277305603027
    5. ' exactly' → logprob: -4.279927730560303
    6. ' '' → logprob: -4.279927730560303
    7. ' exactement' → logprob: -4.654927730560303
    8. ' len' → logprob: -4.779927730560303
    9. 'exact' → logprob: -5.279927730560303
    10. ' un' → logprob: -5.404927730560303

Token 169: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9584283232688904
    2. ' ' → logprob: -1.3334283828735352
    3. ' S' → logprob: -1.8334283828735352
    4. ' une' → logprob: -2.708428382873535
    5. ' un' → logprob: -2.958428382873535
    6. 'une' → logprob: -3.333428382873535
    7. 'S' → logprob: -3.958428382873535
    8. 'un' → logprob: -5.083428382873535
    9. ' exactly' → logprob: -5.083428382873535
    10. 'exact' → logprob: -6.083428382873535

Token 170: ' "' (ID: 392)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5147619843482971
    2. ''C' → logprob: -1.3897619247436523
    3. '"C' → logprob: -2.8897619247436523
    4. ' '' → logprob: -3.5147619247436523
    5. ' "' → logprob: -3.7647619247436523
    6. ' C' → logprob: -4.264761924743652
    7. ''' → logprob: -4.514761924743652
    8. '"' → logprob: -4.639761924743652
    9. ' ' → logprob: -4.764761924743652
    10. '  ' → logprob: -7.139761924743652

Token 171: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0022670666221529245
    2. ' C' → logprob: -6.252266883850098
    3. ''C' → logprob: -9.002266883850098
    4. '"C' → logprob: -9.377266883850098
    5. ' ' → logprob: -9.627266883850098
    6. '"' → logprob: -11.127266883850098
    7. '   ' → logprob: -11.127266883850098
    8. ' "' → logprob: -11.252266883850098
    9. ''' → logprob: -12.252266883850098
    10. ' '' → logprob: -12.502266883850098

Token 172: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.043473318219184875
    2. ' "' → logprob: -3.168473243713379
    3. '"in' → logprob: -9.043473243713379
    4. ' ' → logprob: -9.668473243713379
    5. ' in' → logprob: -9.668473243713379
    6. ''' → logprob: -9.668473243713379
    7. 'in' → logprob: -9.793473243713379
    8. 's' → logprob: -10.793473243713379
    9. ' dans' → logprob: -10.793473243713379
    10. '   ' → logprob: -11.168473243713379

Token 173: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25407958030700684
    2. ' dans' → logprob: -2.629079580307007
    3. ' ' → logprob: -2.754079580307007
    4. 'dans' → logprob: -3.879079580307007
    5. ' in' → logprob: -4.379079818725586
    6. '    ' → logprob: -4.379079818725586
    7. '  ' → logprob: -4.754079818725586
    8. ',' → logprob: -4.754079818725586
    9. 's' → logprob: -5.129079818725586
    10. 'in' → logprob: -5.629079818725586

Token 174: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.47426679730415344
    2. ' S' → logprob: -0.974266767501831
    3. ' ' → logprob: -8.97426700592041
    4. '   ' → logprob: -10.84926700592041
    5. '  ' → logprob: -11.22426700592041
    6. '(S' → logprob: -11.84926700592041
    7. ' la' → logprob: -11.97426700592041
    8. '    ' → logprob: -12.09926700592041
    9. 's' → logprob: -12.34926700592041
    10. 'la' → logprob: -13.47426700592041

Token 175: ' sous' (ID: 14487)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2015693485736847
    2. ' S' → logprob: -1.7015693187713623
    3. 's' → logprob: -8.951569557189941
    4. ' ' → logprob: -11.076569557189941
    5. '  ' → logprob: -13.576569557189941
    6. '2' → logprob: -13.576569557189941
    7. '[S' → logprob: -14.201569557189941
    8. '(S' → logprob: -14.201569557189941
    9. 'sub' → logprob: -14.326569557189941
    10. 'substring' → logprob: -14.701569557189941

Token 176: '-l' (ID: 2887)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37210774421691895
    2. 'chaine' → logprob: -1.497107744216919
    3. '_s' → logprob: -3.122107744216919
    4. 's' → logprob: -4.62210750579834
    5. 'S' → logprob: -4.74710750579834
    6. '_str' → logprob: -5.12210750579834
    7. '-cha' → logprob: -5.49710750579834
    8. '_string' → logprob: -5.87210750579834
    9. ' chaîne' → logprob: -6.12210750579834
    10. '-' → logprob: -6.24710750579834

Token 177: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -1.1052213907241821
    2. '   ' → logprob: -1.4802213907241821
    3. 'chaine' → logprob: -1.4802213907241821
    4. 'a' → logprob: -2.1052212715148926
    5. 'S' → logprob: -3.9802212715148926
    6. 'e' → logprob: -4.605221271514893
    7. 'string' → logprob: -4.605221271514893
    8. ' chaîne' → logprob: -5.230221271514893
    9. 'is' → logprob: -5.480221271514893
    10. 'igne' → logprob: -5.605221271514893

Token 178: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1565057039260864
    2. ' ' → logprob: -1.2815057039260864
    3. ' S' → logprob: -1.9065057039260864
    4. 'S' → logprob: -2.156505584716797
    5. '[' → logprob: -3.031505584716797
    6. 's' → logprob: -3.406505584716797
    7. ' de' → logprob: -4.156505584716797
    8. '    ' → logprob: -4.656505584716797
    9. 'de' → logprob: -4.781505584716797
    10. '  ' → logprob: -5.031505584716797

Token 179: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004211363382637501
    2. '   ' → logprob: -6.00421142578125
    3. '2' → logprob: -6.75421142578125
    4. 'def' → logprob: -8.12921142578125
    5. '1' → logprob: -9.00421142578125
    6. '(' → logprob: -9.87921142578125
    7. 'de' → logprob: -10.75421142578125
    8. ' [' → logprob: -11.25421142578125
    9. ' ' → logprob: -11.37921142578125
    10. '```' → logprob: -11.75421142578125

Token 180: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.750019073486328
    4. '1' → logprob: -16.750019073486328
    5. '```' → logprob: -17.000019073486328
    6. '
' → logprob: -17.875019073486328
    7. '  ' → logprob: -18.375019073486328
    8. '２' → logprob: -18.500019073486328
    9. ':' → logprob: -19.250019073486328
    10. '۲' → logprob: -19.250019073486328

Token 181: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.005567651707679033
    2. ':' → logprob: -5.38056755065918
    3. ' :' → logprob: -7.13056755065918
    4. ' :-' → logprob: -8.88056755065918
    5. ':]' → logprob: -12.50556755065918
    6. ' ' → logprob: -13.50556755065918
    7. '   ' → logprob: -13.88056755065918
    8. '[:-' → logprob: -14.75556755065918
    9. ':
' → logprob: -15.63056755065918
    10. '-' → logprob: -15.75556755065918

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.12500286102295
    3. '2' → logprob: -14.50000286102295
    4. '   ' → logprob: -16.000003814697266
    5. '１' → logprob: -16.250003814697266
    6. ']' → logprob: -16.375003814697266
    7. '
' → logprob: -17.375003814697266
    8. '```' → logprob: -17.500003814697266
    9. '

' → logprob: -17.625003814697266
    10. '  ' → logprob: -18.000003814697266

Token 183: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10229669511318207
    2. ']:' → logprob: -2.3522965908050537
    3. ' ]' → logprob: -6.727296829223633
    4. '].' → logprob: -7.477296829223633
    5. ']:
' → logprob: -9.477296829223633
    6. ']):' → logprob: -9.852296829223633
    7. '])' → logprob: -10.102296829223633
    8. ']]' → logprob: -10.602296829223633
    9. ']:

' → logprob: -11.102296829223633
    10. ' ' → logprob: -11.102296829223633

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02758672833442688
    2. '    
' → logprob: -3.7775866985321045
    3. '   
' → logprob: -6.902586936950684
    4. ' if' → logprob: -7.277586936950684
    5. 'if' → logprob: -7.402586936950684
    6. '    ' → logprob: -7.777586936950684
    7. '  ' → logprob: -7.777586936950684
    8. '
' → logprob: -7.902586936950684
    9. '.' → logprob: -8.527586936950684
    10. '  
' → logprob: -8.777586936950684

Token 185: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18270066380500793
    2. ' if' → logprob: -1.9327006340026855
    3. '   ' → logprob: -3.8077006340026855
    4. '    
' → logprob: -11.432701110839844
    5. 'c' → logprob: -12.932701110839844
    6. ' ' → logprob: -13.307701110839844
    7. '
' → logprob: -13.307701110839844
    8. 'count' → logprob: -13.307701110839844
    9. '	if' → logprob: -13.682701110839844
    10. '  ' → logprob: -13.682701110839844

Token 186: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.1037963479757309
    2. 'S' → logprob: -2.4787962436676025
    3. ' len' → logprob: -4.353796482086182
    4. 'len' → logprob: -6.603796482086182
    5. ' ' → logprob: -8.478796005249023
    6. ' not' → logprob: -9.103796005249023
    7. '   ' → logprob: -9.353796005249023
    8. ' (' → logprob: -10.228796005249023
    9. '(S' → logprob: -10.478796005249023
    10. '    ' → logprob: -10.728796005249023

Token 187: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5332478142227046e-05
    2. ' [' → logprob: -11.250015258789062
    3. ' ' → logprob: -13.625015258789062
    4. '][' → logprob: -14.875015258789062
    5. ' and' → logprob: -15.000015258789062
    6. '0' → logprob: -16.125015258789062
    7. '```' → logprob: -16.250015258789062
    8. '   ' → logprob: -16.375015258789062
    9. 'and' → logprob: -16.750015258789062
    10. ']' → logprob: -18.250015258789062

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3490450978279114
    2. '1' → logprob: -1.2240450382232666
    3. ' ' → logprob: -7.974045276641846
    4. '2' → logprob: -9.349044799804688
    5. ']' → logprob: -9.349044799804688
    6. '   ' → logprob: -10.099044799804688
    7. '[' → logprob: -10.974044799804688
    8. ')' → logprob: -12.411544799804688
    9. ':' → logprob: -12.911544799804688
    10. '=' → logprob: -12.974044799804688

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006325370632112026
    2. ']==' → logprob: -5.3813252449035645
    3. '==' → logprob: -6.6313252449035645
    4. ' ==' → logprob: -8.506325721740723
    5. ' ]' → logprob: -8.756325721740723
    6. ']=='' → logprob: -11.256325721740723
    7. '']' → logprob: -12.006325721740723
    8. '=' → logprob: -13.256325721740723
    9. ''' → logprob: -13.881325721740723
    10. '[' → logprob: -14.006325721740723

Token 190: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.062382493168115616
    2. ' ==' → logprob: -2.812382459640503
    3. '!=' → logprob: -8.187382698059082
    4. '=='' → logprob: -9.812382698059082
    5. '=' → logprob: -9.937382698059082
    6. ' !=' → logprob: -10.687382698059082
    7. '=="' → logprob: -12.437382698059082
    8. '[' → logprob: -12.937382698059082
    9. ' ' → logprob: -13.562382698059082
    10. ''' → logprob: -14.312382698059082

Token 191: ' "' (ID: 392)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.023117708042263985
    2. ' '' → logprob: -4.023117542266846
    3. ''' → logprob: -5.523117542266846
    4. '"A' → logprob: -7.023117542266846
    5. 'A' → logprob: -10.273118019104004
    6. '"' → logprob: -10.523118019104004
    7. ' "' → logprob: -12.148118019104004
    8. '’A' → logprob: -13.148118019104004
    9. ' A' → logprob: -14.273118019104004
    10. ''S' → logprob: -14.773118019104004

Token 192: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.676292231422849e-05
    2. ''A' → logprob: -11.125017166137695
    3. ' A' → logprob: -13.250017166137695
    4. '"A' → logprob: -16.375017166137695
    5. 'А' → logprob: -16.875017166137695
    6. '	A' → logprob: -17.000017166137695
    7. 'Ａ' → logprob: -17.875017166137695
    8. ''' → logprob: -17.875017166137695
    9. 'AC' → logprob: -18.000017166137695
    10. 'a' → logprob: -18.375017166137695

Token 193: '"' (ID: 1)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0036783369723707438
    2. 'and' → logprob: -5.628678321838379
    3. ' ' → logprob: -10.128678321838379
    4. '   ' → logprob: -10.753678321838379
    5. '    ' → logprob: -11.503678321838379
    6. '"' → logprob: -13.003678321838379
    7. ':' → logprob: -13.753678321838379
    8. ' a' → logprob: -14.128678321838379
    9. ')' → logprob: -14.128678321838379
    10. '  ' → logprob: -14.128678321838379

Token 194: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007670036982744932
    2. 'and' → logprob: -4.882669925689697
    3. '   ' → logprob: -10.132670402526855
    4. ' ' → logprob: -11.382670402526855
    5. '    ' → logprob: -11.507670402526855
    6. '  ' → logprob: -13.757670402526855
    7. ' a' → logprob: -14.257670402526855
    8. '	and' → logprob: -15.007670402526855
    9. ' an' → logprob: -15.632670402526855
    10. ':' → logprob: -16.13266944885254

Token 195: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.033701833337545395
    2. ' S' → logprob: -3.4087018966674805
    3. '"S' → logprob: -10.65870189666748
    4. '1' → logprob: -12.03370189666748
    5. '   ' → logprob: -12.15870189666748
    6. ' ' → logprob: -12.28370189666748
    7. ''S' → logprob: -12.28370189666748
    8. '"' → logprob: -12.40870189666748
    9. '(S' → logprob: -13.03370189666748
    10. 's' → logprob: -14.03370189666748

Token 196: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019574174657464027
    2. '.count' → logprob: -6.251957416534424
    3. '2' → logprob: -11.876957893371582
    4. '.' → logprob: -11.876957893371582
    5. 'S' → logprob: -12.501957893371582
    6. '```' → logprob: -12.751957893371582
    7. ' .' → logprob: -13.376957893371582
    8. 'count' → logprob: -13.501957893371582
    9. '   ' → logprob: -13.626957893371582
    10. '[S' → logprob: -13.626957893371582

Token 197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008193019777536392
    2. 'S' → logprob: -5.133193016052246
    3. '1' → logprob: -7.133193016052246
    4. ':' → logprob: -7.758193016052246
    5. '].' → logprob: -8.133193016052246
    6. ':].' → logprob: -8.258193016052246
    7. ']' → logprob: -8.758193016052246
    8. '   ' → logprob: -9.633193016052246
    9. ':S' → logprob: -9.633193016052246
    10. '[' → logprob: -9.758193016052246

Token 198: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.027489658445119858
    2. ':' → logprob: -3.90248966217041
    3. ' :' → logprob: -5.77748966217041
    4. ' :-' → logprob: -6.27748966217041
    5. ':]' → logprob: -6.40248966217041
    6. ' :]' → logprob: -9.27748966217041
    7. ':].' → logprob: -9.52748966217041
    8. ']' → logprob: -9.52748966217041
    9. ' ' → logprob: -11.15248966217041
    10. '   ' → logprob: -11.15248966217041

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '
' → logprob: -14.00000286102295
    3. '   ' → logprob: -14.50000286102295
    4. ' ' → logprob: -14.87500286102295
    5. '2' → logprob: -15.25000286102295
    6. '

' → logprob: -15.37500286102295
    7. '１' → logprob: -15.50000286102295
    8. '```' → logprob: -15.87500286102295
    9. '``' → logprob: -17.375001907348633
    10. '  ' → logprob: -17.375001907348633

Token 200: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0002646735229063779
    2. ' ].' → logprob: -8.875265121459961
    3. ']' → logprob: -9.625265121459961
    4. '"].' → logprob: -11.000265121459961
    5. ').' → logprob: -11.125265121459961
    6. '.count' → logprob: -11.375265121459961
    7. '   ' → logprob: -11.500265121459961
    8. ''].' → logprob: -12.875265121459961
    9. 'count' → logprob: -14.500265121459961
    10. ':].' → logprob: -14.750265121459961

Token 201: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -7.755678961984813e-05
    2. ' count' → logprob: -9.500077247619629
    3. '.count' → logprob: -13.000077247619629
    4. '```' → logprob: -15.625077247619629
    5. '   ' → logprob: -16.125078201293945
    6. '	count' → logprob: -16.250078201293945
    7. ' ' → logprob: -16.625078201293945
    8. '    ' → logprob: -18.625078201293945
    9. 'counts' → logprob: -19.500078201293945
    10. '  ' → logprob: -19.750078201293945

Token 202: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06496266275644302
    2. '('' → logprob: -2.81496262550354
    3. '(' → logprob: -5.814962863922119
    4. '(
' → logprob: -13.064962387084961
    5. ' ("' → logprob: -13.064962387084961
    6. '"' → logprob: -13.814962387084961
    7. ' (' → logprob: -13.939962387084961
    8. '("("' → logprob: -14.439962387084961
    9. '"C' → logprob: -14.689962387084961
    10. ''' → logprob: -15.564962387084961

Token 203: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.003571565030142665
    2. ''C' → logprob: -6.128571510314941
    3. '"C' → logprob: -6.628571510314941
    4. '"' → logprob: -9.878571510314941
    5. ' C' → logprob: -12.128571510314941
    6. ''' → logprob: -12.378571510314941
    7. ')' → logprob: -14.378571510314941
    8. '   ' → logprob: -14.628571510314941
    9. '>C' → logprob: -15.128571510314941
    10. '")' → logprob: -15.753571510314941

Token 204: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.11300843209028244
    2. ')' → logprob: -2.238008499145508
    3. ']' → logprob: -9.488008499145508
    4. '")==' → logprob: -9.988008499145508
    5. ')==' → logprob: -10.613008499145508
    6. ')")' → logprob: -11.113008499145508
    7. '')' → logprob: -11.988008499145508
    8. '"' → logprob: -12.363008499145508
    9. ' ")' → logprob: -12.488008499145508
    10. '"]' → logprob: -13.113008499145508

Token 205: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3869032859802246
    2. '==' → logprob: -1.1369032859802246
    3. ')==' → logprob: -11.511903762817383
    4. ')' → logprob: -11.636903762817383
    5. '=' → logprob: -12.136903762817383
    6. ']==' → logprob: -12.761903762817383
    7. '()==' → logprob: -13.511903762817383
    8. ' ' → logprob: -14.011903762817383
    9. ' ' → logprob: -14.011903762817383
    10. '==
' → logprob: -14.261903762817383

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -17.625335693359375
    4. '  ' → logprob: -17.875335693359375
    5. '   ' → logprob: -17.875335693359375
    6. '0' → logprob: -18.875335693359375
    7. '<|end|>' → logprob: -19.250335693359375
    8. '۱' → logprob: -19.375335693359375
    9. 'exact' → logprob: -19.625335693359375
    10. '2' → logprob: -20.062835693359375

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -17.750019073486328
    4. '  ' → logprob: -18.000019073486328
    5. '   ' → logprob: -18.000019073486328
    6. '۱' → logprob: -19.500019073486328
    7. 'exact' → logprob: -19.750019073486328
    8. '2' → logprob: -19.750019073486328
    9. '0' → logprob: -20.000019073486328
    10. '１' → logprob: -20.125019073486328

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001999642699956894
    2. ' :' → logprob: -9.125200271606445
    3. ':
' → logprob: -10.000200271606445
    4. '):' → logprob: -10.750200271606445
    5. '   ' → logprob: -11.375200271606445
    6. ' and' → logprob: -11.500200271606445
    7. ':**' → logprob: -14.000200271606445
    8. '():' → logprob: -14.125200271606445
    9. 'and' → logprob: -15.000200271606445
    10. '       ' → logprob: -16.000200271606445

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036329696886241436
    2. '   ' → logprob: -6.25363302230835
    3. ':' → logprob: -7.00363302230835
    4. '        
' → logprob: -8.628632545471191
    5. '
' → logprob: -9.378632545471191
    6. ')' → logprob: -9.378632545471191
    7. '#' → logprob: -9.628632545471191
    8. '    
' → logprob: -9.753632545471191
    9. ':
' → logprob: -9.878632545471191
    10. '    ' → logprob: -10.003632545471191

Token 210: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3484625816345215
    2. 'S' → logprob: -1.9734625816345215
    3. '   ' → logprob: -2.7234625816345215
    4. '#' (adapté à ' #') → logprob: -2.9734625816345215
    5. ' S' → logprob: -4.9734625816345215
    6. 'for' → logprob: -4.9734625816345215
    7. '        
' → logprob: -5.2234625816345215
    8. ' #' → logprob: -5.5984625816345215
    9. 'rest' → logprob: -6.0984625816345215
    10. 'temp' → logprob: -6.0984625816345215

Token 211: ' Sup' (ID: 13606)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.1183292865753174
    2. '#' → logprob: -1.3683292865753174
    3. 'C' → logprob: -1.8683292865753174
    4. '   ' → logprob: -2.7433292865753174
    5. '       ' → logprob: -2.8683292865753174
    6. 'idx' → logprob: -3.3683292865753174
    7. 'index' → logprob: -3.6183292865753174
    8. 'temp' → logprob: -4.118329048156738
    9. ' S' → logprob: -4.493329048156738
    10. 'for' → logprob: -4.743329048156738

Token 212: 'primer' (ID: 55821)
  Prédit: 'primer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primer' → logprob: -0.01389832142740488
    2. 'r' → logprob: -4.3888983726501465
    3. 'imer' → logprob: -7.0138983726501465
    4. '   ' → logprob: -8.388897895812988
    5. '       ' → logprob: -9.263897895812988
    6. 'p' → logprob: -9.888897895812988
    7. 'pr' → logprob: -10.388897895812988
    8. 'irmer' → logprob: -11.138897895812988
    9. 'tr' → logprob: -11.638897895812988
    10. 'ramer' → logprob: -11.763897895812988

Token 213: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.24967534840106964
    2. ' S' → logprob: -1.6246753931045532
    3. 'A' → logprob: -4.374675273895264
    4. ' A' → logprob: -6.124675273895264
    5. '"S' → logprob: -6.124675273895264
    6. '"' → logprob: -6.249675273895264
    7. ' "' → logprob: -6.249675273895264
    8. '   ' → logprob: -6.999675273895264
    9. ' '' → logprob: -7.624675273895264
    10. ' ' → logprob: -7.999675273895264

Token 214: ' première' (ID: 23423)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6749568581581116
    2. 'C' → logprob: -1.2999567985534668
    3. 'A' → logprob: -2.049956798553467
    4. 'first' → logprob: -2.924956798553467
    5. 'prem' → logprob: -4.049956798553467
    6. ' premier' → logprob: -4.674956798553467
    7. ' first' → logprob: -6.049956798553467
    8. ' S' → logprob: -6.174956798553467
    9. ' A' → logprob: -6.924956798553467
    10. 's' → logprob: -7.174956798553467

Token 215: ' occurrence' (ID: 55807)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09631211310625076
    2. ' A' → logprob: -2.7213120460510254
    3. 'C' → logprob: -4.971312046051025
    4. ' '' → logprob: -5.096312046051025
    5. ' "' → logprob: -5.721312046051025
    6. ' ' → logprob: -5.971312046051025
    7. ''A' → logprob: -6.346312046051025
    8. '"' → logprob: -6.596312046051025
    9. 'S' → logprob: -6.596312046051025
    10. '"A' → logprob: -7.721312046051025

Token 216: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6236218810081482
    2. ' of' → logprob: -1.248621940612793
    3. ' de' → logprob: -2.373621940612793
    4. '       ' → logprob: -3.623621940612793
    5. ' S' → logprob: -4.373621940612793
    6. '    ' → logprob: -4.748621940612793
    7. 'C' → logprob: -5.248621940612793
    8. '(S' → logprob: -5.248621940612793
    9. ' C' → logprob: -5.498621940612793
    10. '("' → logprob: -5.498621940612793

Token 217: ' "' (ID: 392)
  Prédit: '"C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"C' → logprob: -1.0234121084213257
    2. ''C' → logprob: -1.0234121084213257
    3. 'C' → logprob: -1.2734121084213257
    4. '"' → logprob: -7.648412227630615
    5. ''' → logprob: -8.648411750793457
    6. '"S' → logprob: -8.648411750793457
    7. ''S' → logprob: -8.773411750793457
    8. ' C' → logprob: -9.398411750793457
    9. ' "' → logprob: -9.648411750793457
    10. '`' → logprob: -9.773411750793457

Token 218: 'A' (ID: 32)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00570314284414053
    2. ''C' → logprob: -5.755702972412109
    3. '"C' → logprob: -6.005702972412109
    4. 'A' → logprob: -10.63070297241211
    5. '"' → logprob: -11.13070297241211
    6. ' C' → logprob: -11.88070297241211
    7. ''' → logprob: -12.38070297241211
    8. 'S' → logprob: -13.38070297241211
    9. '`' → logprob: -13.88070297241211
    10. 'c' → logprob: -14.25570297241211

Token 219: '"' (ID: 1)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5331953167915344
    2. ')' → logprob: -1.2831952571868896
    3. '
' → logprob: -3.4081952571868896
    4. 'S' → logprob: -3.5331952571868896
    5. '       ' → logprob: -3.7831952571868896
    6. ' S' → logprob: -3.9081952571868896
    7. ' and' → logprob: -4.658195495605469
    8. ')
' → logprob: -4.783195495605469
    9. ']' → logprob: -5.658195495605469
    10. '")' → logprob: -6.408195495605469

Token 220: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025108695030212402
    2. '       ' → logprob: -3.900108814239502
    3. ' S' → logprob: -6.400108814239502
    4. '    
' → logprob: -6.400108814239502
    5. 'S' → logprob: -7.775108814239502
    6. '    ' → logprob: -8.400108337402344
    7. ',' → logprob: -8.525108337402344
    8. '
' → logprob: -8.900108337402344
    9. '        
' → logprob: -9.775108337402344
    10. '  ' → logprob: -10.025108337402344

Token 221: 'en' (ID: 262)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0018896145047619939
    2. ' S' → logprob: -6.626889705657959
    3. ')' → logprob: -8.3768892288208
    4. '   ' → logprob: -9.3768892288208
    5. '"' → logprob: -9.5018892288208
    6. 'A' → logprob: -10.1268892288208
    7. '       ' → logprob: -10.5018892288208
    8. ''S' → logprob: -10.6268892288208
    9. '"S' → logprob: -10.7518892288208
    10. '")' → logprob: -11.7518892288208

Token 222: ' position' (ID: 4010)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.013584963046014309
    2. ' S' → logprob: -4.638585090637207
    3. 'del' → logprob: -5.888585090637207
    4. ')' → logprob: -7.763585090637207
    5. '   ' → logprob: -8.138585090637207
    6. ' del' → logprob: -9.138585090637207
    7. 'de' → logprob: -10.888585090637207
    8. ']' → logprob: -11.138585090637207
    9. ')
' → logprob: -11.138585090637207
    10. '    ' → logprob: -11.138585090637207

Token 223: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007660295814275742
    2. ' ' → logprob: -7.250765800476074
    3. '[' → logprob: -10.125765800476074
    4. '=' → logprob: -11.500765800476074
    5. 'S' → logprob: -13.500765800476074
    6. '   ' → logprob: -13.750765800476074
    7. '1' → logprob: -14.250765800476074
    8. ' [' → logprob: -14.375765800476074
    9. ' =' → logprob: -14.875765800476074
    10. '
' → logprob: -15.000765800476074

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.625005722045898
    3. '[' → logprob: -13.500005722045898
    4. '1' → logprob: -14.250005722045898
    5. '=' → logprob: -17.1250057220459
    6. '```' → logprob: -17.1250057220459
    7. '
' → logprob: -17.6250057220459
    8. '   ' → logprob: -17.6250057220459
    9. 'S' → logprob: -17.8750057220459
    10. '`' → logprob: -18.0000057220459

Token 225: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08518470823764801
    2. '       ' → logprob: -3.2101848125457764
    3. ')
' → logprob: -3.3351848125457764
    4. '   ' → logprob: -5.210184574127197
    5. ' )' → logprob: -9.585185050964355
    6. ',' → logprob: -10.085185050964355
    7. ').' → logprob: -10.460185050964355
    8. '    ' → logprob: -11.460185050964355
    9. ')
' → logprob: -11.585185050964355
    10. '           ' → logprob: -11.835185050964355

Token 226: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1326492577791214
    2. '   ' → logprob: -2.1326491832733154
    3. ' S' → logprob: -5.6326494216918945
    4. 'S' → logprob: -7.3826494216918945
    5. '    
' → logprob: -7.7576494216918945
    6. ',' → logprob: -8.257649421691895
    7. '        
' → logprob: -8.382649421691895
    8. ' and' → logprob: -8.632649421691895
    9. '
' → logprob: -8.632649421691895
    10. ' et' → logprob: -10.382649421691895

Token 227: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.20161886513233185
    2. ' S' → logprob: -1.7016189098358154
    3. '   ' → logprob: -9.076619148254395
    4. ' la' → logprob: -10.701619148254395
    5. '    ' → logprob: -10.826619148254395
    6. ' ' → logprob: -11.326619148254395
    7. ' the' → logprob: -11.576619148254395
    8. 'the' → logprob: -11.826619148254395
    9. 's' → logprob: -12.451619148254395
    10. '       ' → logprob: -13.264119148254395

Token 228: ' liste' (ID: 31719)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.02172938361763954
    2. 'liste' → logprob: -4.771729469299316
    3. ' S' → logprob: -5.021729469299316
    4. 'list' → logprob: -6.021729469299316
    5. 's' → logprob: -6.646729469299316
    6. 'chaine' → logprob: -6.896729469299316
    7. ' liste' → logprob: -7.021729469299316
    8. '   ' → logprob: -8.396729469299316
    9. ' list' → logprob: -8.521729469299316
    10. 'string' → logprob: -8.896729469299316

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02730906754732132
    2. 'S' → logprob: -3.7773091793060303
    3. '       ' → logprob: -6.402308940887451
    4. ' S' → logprob: -6.652308940887451
    5. '    
' → logprob: -7.027308940887451
    6. '    ' → logprob: -9.90230941772461
    7. '  ' → logprob: -10.27730941772461
    8. ' ' → logprob: -10.52730941772461
    9. '
' → logprob: -10.52730941772461
    10. ',' → logprob: -10.90230941772461

Token 230: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034316446632146835
    2. 'S' → logprob: -3.7843165397644043
    3. ' S' → logprob: -5.159316539764404
    4. '       ' → logprob: -5.534316539764404
    5. '    
' → logprob: -7.159316539764404
    6. '    ' → logprob: -8.409316062927246
    7. 'del' → logprob: -9.034316062927246
    8. '        
' → logprob: -10.034316062927246
    9. ' del' → logprob: -10.409316062927246
    10. '  ' → logprob: -10.409316062927246

Token 231: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.1134704127907753
    2. 'del' → logprob: -2.2384703159332275
    3. '   ' → logprob: -7.488470554351807
    4. ' S' → logprob: -10.113470077514648
    5. ' del' → logprob: -10.363470077514648
    6. '    
' → logprob: -12.738470077514648
    7. 'A' → logprob: -12.863470077514648
    8. 'de' → logprob: -13.113470077514648
    9. '       ' → logprob: -13.238470077514648
    10. 'Del' → logprob: -13.988470077514648

Token 232: '.remove' (ID: 7986)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.06228930875658989
    2. '.' → logprob: -2.812289237976074
    3. '.remove' → logprob: -8.062289237976074
    4. 'pop' → logprob: -12.562289237976074
    5. ' .' → logprob: -13.062289237976074
    6. '=' → logprob: -14.687289237976074
    7. ' =' → logprob: -15.437289237976074
    8. '.del' → logprob: -16.68729019165039
    9. '   ' → logprob: -17.81229019165039
    10. 'remove' → logprob: -18.18729019165039

Token 233: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.25289249420166016
    2. '('' → logprob: -1.5028924942016602
    3. '(' → logprob: -7.00289249420166
    4. '"A' → logprob: -10.87789249420166
    5. '"' → logprob: -11.25289249420166
    6. '"S' → logprob: -11.62789249420166
    7. '(S' → logprob: -12.37789249420166
    8. ''' → logprob: -12.87789249420166
    9. ''S' → logprob: -13.25289249420166
    10. ''A' → logprob: -13.25289249420166

Token 234: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0280383548888494e-06
    2. ' A' → logprob: -14.500000953674316
    3. '"A' → logprob: -15.500000953674316
    4. ''A' → logprob: -15.625000953674316
    5. '"' → logprob: -17.750001907348633
    6. 'А' → logprob: -19.000001907348633
    7. 'a' → logprob: -19.750001907348633
    8. '	A' → logprob: -20.375001907348633
    9. ''' → logprob: -20.500001907348633
    10. ' ' → logprob: -21.000001907348633

Token 235: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.195923313498497
    2. '")' → logprob: -1.8209233283996582
    3. ')
' → logprob: -4.445923328399658
    4. '")
' → logprob: -5.820923328399658
    5. '   ' → logprob: -6.820923328399658
    6. ')")' → logprob: -9.1959228515625
    7. '       ' → logprob: -9.6959228515625
    8. ')
' → logprob: -10.8209228515625
    9. ' ")' → logprob: -10.9459228515625
    10. ' )' → logprob: -11.0709228515625

Token 236: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27697038650512695
    2. '       ' → logprob: -1.776970386505127
    3. 'S' → logprob: -3.276970386505127
    4. '    
' → logprob: -4.276970386505127
    5. 'C' → logprob: -5.026970386505127
    6. ' S' → logprob: -5.276970386505127
    7. '        
' → logprob: -5.526970386505127
    8. '
' → logprob: -6.526970386505127
    9. ' 
' → logprob: -6.776970386505127
    10. ' ' → logprob: -7.651970386505127

Token 237: ' #' (ID: 1069)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03066997043788433
    2. 'C' → logprob: -4.530670166015625
    3. '   ' → logprob: -4.655670166015625
    4. '       ' → logprob: -4.780670166015625
    5. ' S' → logprob: -6.905670166015625
    6. '#' (adapté à ' #') → logprob: -8.030670166015625
    7. ' ' → logprob: -9.405670166015625
    8. '        
' → logprob: -10.155670166015625
    9. '    
' → logprob: -10.530670166015625
    10. '    ' → logprob: -11.280670166015625

Token 238: ' Sup' (ID: 13606)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0014910540776327252
    2. 'C' → logprob: -6.751491069793701
    3. ' S' → logprob: -8.876490592956543
    4. '       ' → logprob: -9.251490592956543
    5. '   ' → logprob: -10.126490592956543
    6. 'c' → logprob: -11.001490592956543
    7. '#' → logprob: -11.376490592956543
    8. 'for' → logprob: -12.626490592956543
    9. 'idx' → logprob: -12.751490592956543
    10. 'index' → logprob: -12.876490592956543

Token 239: 'primer' (ID: 55821)
  Prédit: 'primer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primer' → logprob: -0.0012189284898340702
    2. 'r' → logprob: -6.876218795776367
    3. 'pr' → logprob: -8.876218795776367
    4. 'imer' → logprob: -11.251218795776367
    5. '       ' → logprob: -11.501218795776367
    6. 'p' → logprob: -11.751218795776367
    7. 'primir' → logprob: -12.876218795776367
    8. 'prime' → logprob: -12.876218795776367
    9. 'irmer' → logprob: -13.001218795776367
    10. '#' → logprob: -13.501218795776367

Token 240: ' la' (ID: 557)
  Prédit: '"S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"S' → logprob: -0.6588294506072998
    2. '"C' → logprob: -1.1588294506072998
    3. 'S' → logprob: -2.0338294506073
    4. ' "' → logprob: -3.6588294506073
    5. '"' → logprob: -5.533829689025879
    6. ' S' → logprob: -5.783829689025879
    7. '("' → logprob: -6.408829689025879
    8. 'C' → logprob: -7.158829689025879
    9. '   ' → logprob: -7.283829689025879
    10. 'the' → logprob: -7.408829689025879

Token 241: ' première' (ID: 23423)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.12422807514667511
    2. 'S' → logprob: -2.999228000640869
    3. '"C' → logprob: -2.999228000640869
    4. 'first' → logprob: -4.499228000640869
    5. '"S' → logprob: -6.124228000640869
    6. ''C' → logprob: -6.999228000640869
    7. '"' → logprob: -6.999228000640869
    8. ' first' → logprob: -7.124228000640869
    9. 'prem' → logprob: -7.874228000640869
    10. ' C' → logprob: -7.874228000640869

Token 242: ' occurrence' (ID: 55807)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.25677427649497986
    2. 'occur' → logprob: -1.6317743062973022
    3. 'C' → logprob: -4.256774425506592
    4. ' occurrence' → logprob: -4.881774425506592
    5. 'S' → logprob: -5.131774425506592
    6. '("' → logprob: -6.631774425506592
    7. ' ' → logprob: -8.506773948669434
    8. '"' → logprob: -8.506773948669434
    9. 'oc' → logprob: -8.631773948669434
    10. '   ' → logprob: -8.756773948669434

Token 243: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04044352099299431
    2. 'de' → logprob: -3.2904434204101562
    3. ' of' → logprob: -6.915443420410156
    4. '   ' → logprob: -7.540443420410156
    5. '       ' → logprob: -8.165443420410156
    6. '("' → logprob: -8.290443420410156
    7. '    ' → logprob: -9.040443420410156
    8. '"' → logprob: -9.915443420410156
    9. ' ' → logprob: -10.165443420410156
    10. '        ' → logprob: -11.040443420410156

Token 244: ' "' (ID: 392)
  Prédit: '"C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"C' → logprob: -0.0009401659481227398
    2. 'C' → logprob: -7.250940322875977
    3. ''C' → logprob: -8.500940322875977
    4. ' "' → logprob: -10.750940322875977
    5. '"S' → logprob: -13.500940322875977
    6. '("' → logprob: -13.750940322875977
    7. '"' → logprob: -14.000940322875977
    8. ' C' → logprob: -14.250940322875977
    9. '```' → logprob: -15.500940322875977
    10. '`' → logprob: -15.625940322875977

Token 245: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008706163614988327
    2. '"C' → logprob: -4.883706092834473
    3. ''C' → logprob: -6.883706092834473
    4. '"' → logprob: -10.383706092834473
    5. ' C' → logprob: -10.383706092834473
    6. ''' → logprob: -12.883706092834473
    7. ' "' → logprob: -13.008706092834473
    8. ' ' → logprob: -13.633706092834473
    9. 'c' → logprob: -14.008706092834473
    10. '   ' → logprob: -14.008706092834473

Token 246: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007125468924641609
    2. '"' → logprob: -5.882125377655029
    3. '")
' → logprob: -6.257125377655029
    4. ')' → logprob: -7.132125377655029
    5. '(S' → logprob: -7.132125377655029
    6. '       ' → logprob: -8.507125854492188
    7. '   ' → logprob: -8.632125854492188
    8. ' ")' → logprob: -8.757125854492188
    9. '("' → logprob: -9.382125854492188
    10. '(' → logprob: -10.507125854492188

Token 247: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6767997145652771
    2. '(S' → logprob: -0.8017997145652771
    3. ' in' → logprob: -4.551799774169922
    4. '   ' → logprob: -5.301799774169922
    5. ' (' → logprob: -5.426799774169922
    6. 'S' → logprob: -5.426799774169922
    7. ' =' → logprob: -5.801799774169922
    8. '(s' → logprob: -6.051799774169922
    9. 'from' → logprob: -6.301799774169922
    10. '(' → logprob: -6.301799774169922

Token 248: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.20156030356884003
    2. ' S' → logprob: -1.7015602588653564
    3. '   ' → logprob: -9.326560020446777
    4. '[S' → logprob: -10.326560020446777
    5. '[' → logprob: -11.201560020446777
    6. '(S' → logprob: -12.576560020446777
    7. ' [' → logprob: -12.701560020446777
    8. ' ' → logprob: -12.826560020446777
    9. 's' → logprob: -14.576560020446777
    10. '  ' → logprob: -14.576560020446777

Token 249: ' liste' (ID: 31719)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008743628859519958
    2. ' S' → logprob: -4.758743762969971
    3. '[' → logprob: -9.258743286132812
    4. '   ' → logprob: -11.008743286132812
    5. 's' → logprob: -12.008743286132812
    6. ' ' → logprob: -12.633743286132812
    7. 'def' → logprob: -13.508743286132812
    8. '[S' → logprob: -13.883743286132812
    9. 'range' → logprob: -13.883743286132812
    10. '(S' → logprob: -14.258743286132812

Token 250: ' restante' (ID: 130202)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.7024840712547302
    2. 'S' → logprob: -0.9524840712547302
    3. '       ' → logprob: -2.202484130859375
    4. '(S' → logprob: -5.327484130859375
    5. 'C' → logprob: -7.077484130859375
    6. '   ' → logprob: -7.702484130859375
    7. '[S' → logprob: -7.952484130859375
    8. ' =' → logprob: -8.452484130859375
    9. ' (' → logprob: -8.827484130859375
    10. '        
' → logprob: -8.827484130859375

Token 251: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42859700322151184
    2. '   ' → logprob: -1.4285969734191895
    3. 'S' → logprob: -2.3035969734191895
    4. ' S' → logprob: -5.3035969734191895
    5. '
' → logprob: -7.0535969734191895
    6. 'C' → logprob: -7.0535969734191895
    7. '    
' → logprob: -7.9285969734191895
    8. '	S' → logprob: -7.9285969734191895
    9. '(S' → logprob: -7.9285969734191895
    10. ',' → logprob: -8.178597450256348

Token 252: '       ' (ID: 309)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0552394762635231
    2. '   ' → logprob: -3.68023943901062
    3. ' S' → logprob: -3.68023943901062
    4. '       ' → logprob: -6.180239677429199
    5. 'C' → logprob: -6.805239677429199
    6. ' ' → logprob: -10.6802396774292
    7. 'c' → logprob: -10.8052396774292
    8. '  ' → logprob: -11.6802396774292
    9. ' C' → logprob: -11.6802396774292
    10. 'for' → logprob: -11.8052396774292

Token 253: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.0005866335122846067
    2. 'C' → logprob: -7.62558650970459
    3. ' S' → logprob: -9.37558650970459
    4. '   ' → logprob: -11.37558650970459
    5. '       ' → logprob: -14.12558650970459
    6. 'c' → logprob: -15.12558650970459
    7. ' ' → logprob: -15.12558650970459
    8. '"S' → logprob: -15.62558650970459
    9. 'С' → logprob: -16.000587463378906
    10. 's' → logprob: -16.000587463378906

Token 254: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.004090508911758661
    2. '.' → logprob: -5.504090309143066
    3. 'remove' → logprob: -11.504090309143066
    4. ' .' → logprob: -13.254090309143066
    5. '.pop' → logprob: -16.879091262817383
    6. '   ' → logprob: -17.379091262817383
    7. '.s' → logprob: -17.754091262817383
    8. '.S' → logprob: -17.879091262817383
    9. ' remove' → logprob: -18.254091262817383
    10. '.index' → logprob: -18.379091262817383

Token 255: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.018770311027765274
    2. '"C' → logprob: -4.018770217895508
    3. '(' → logprob: -8.018770217895508
    4. '('' → logprob: -8.518770217895508
    5. '"' → logprob: -9.518770217895508
    6. ''C' → logprob: -11.268770217895508
    7. 'C' → logprob: -13.018770217895508
    8. ' "' → logprob: -13.268770217895508
    9. '(
' → logprob: -14.518770217895508
    10. ''' → logprob: -15.893770217895508

Token 256: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.76759916334413e-05
    2. '"C' → logprob: -9.625077247619629
    3. ''C' → logprob: -11.750077247619629
    4. '"' → logprob: -12.750077247619629
    5. ' C' → logprob: -14.500077247619629
    6. ''' → logprob: -16.125078201293945
    7. '")' → logprob: -17.250078201293945
    8. 'c' → logprob: -17.750078201293945
    9. '.C' → logprob: -17.812578201293945
    10. 'С' → logprob: -18.250078201293945

Token 257: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6146369576454163
    2. ')' → logprob: -0.9896369576454163
    3. '")
' → logprob: -3.1146368980407715
    4. ')
' → logprob: -3.4896368980407715
    5. '   ' → logprob: -4.4896368980407715
    6. '       ' → logprob: -7.4896368980407715
    7. ' )' → logprob: -8.98963737487793
    8. ' ")' → logprob: -9.11463737487793
    9. ')")' → logprob: -9.36463737487793
    10. '"' → logprob: -9.86463737487793

Token 258: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12996654212474823
    2. '       ' → logprob: -2.7549664974212646
    3. ' if' → logprob: -3.2549664974212646
    4. ' for' → logprob: -4.504966735839844
    5. '    
' → logprob: -5.504966735839844
    6. '    ' → logprob: -6.004966735839844
    7. '        
' → logprob: -6.879966735839844
    8. 'if' → logprob: -8.004966735839844
    9. '  ' → logprob: -9.254966735839844
    10. '   
' → logprob: -9.254966735839844

Token 259: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0359843969345093
    2. ' if' → logprob: -1.2859843969345093
    3. 'if' → logprob: -1.6609843969345093
    4. '       ' → logprob: -2.535984516143799
    5. ' for' → logprob: -2.660984516143799
    6. 'for' → logprob: -3.660984516143799
    7. '    
' → logprob: -6.285984516143799
    8. '        
' → logprob: -7.035984516143799
    9. '#' (adapté à ' #') → logprob: -8.16098403930664
    10. ' all' → logprob: -8.66098403930664

Token 260: ' Après' (ID: 47562)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.105517864227295
    2. ' if' → logprob: -1.230517864227295
    3. 'for' → logprob: -1.730517864227295
    4. ' for' → logprob: -1.855517864227295
    5. '#' → logprob: -3.355517864227295
    6. ' #' → logprob: -5.355517864227295
    7. '   ' → logprob: -6.605517864227295
    8. ' all' → logprob: -6.980517864227295
    9. 'all' → logprob: -7.730517864227295
    10. 'print' → logprob: -8.480518341064453

Token 261: ' suppress' (ID: 36382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1168147400021553
    2. ' for' → logprob: -3.2418148517608643
    3. 'all' → logprob: -3.4918148517608643
    4. 'avoir' → logprob: -4.366814613342285
    5. 't' → logprob: -4.866814613342285
    6. 'if' → logprob: -5.616814613342285
    7. 'tout' → logprob: -5.991814613342285
    8. 'la' → logprob: -6.116814613342285
    9. ' all' → logprob: -6.241814613342285
    10. 'le' → logprob: -6.866814613342285

Token 262: 'ions' (ID: 756)
  Prédit: 'ression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ression' → logprob: -0.39116114377975464
    2. 'ion' → logprob: -1.2661612033843994
    3. 'er' → logprob: -3.3911612033843994
    4. 'pression' → logprob: -6.14116096496582
    5. 'é' → logprob: -6.26616096496582
    6. 'ession' → logprob: -7.14116096496582
    7. 'ions' → logprob: -7.26616096496582
    8. 'ition' → logprob: -7.51616096496582
    9. 'de' → logprob: -7.89116096496582
    10. 'primer' → logprob: -8.39116096496582

Token 263: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15031340718269348
    2. ',' → logprob: -2.650313377380371
    3. 'if' → logprob: -3.900313377380371
    4. '   ' → logprob: -4.400313377380371
    5. ' for' → logprob: -4.525313377380371
    6. 'for' → logprob: -5.025313377380371
    7. ' if' → logprob: -5.400313377380371
    8. ' all' → logprob: -5.525313377380371
    9. '       ' → logprob: -5.775313377380371
    10. 'all' → logprob: -5.900313377380371

Token 264: ' vérifier' (ID: 93671)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.8591936230659485
    2. ' for' → logprob: -1.1091935634613037
    3. 'for' → logprob: -2.3591935634613037
    4. 'if' → logprob: -2.7341935634613037
    5. ' if' → logprob: -2.9841935634613037
    6. 'all' → logprob: -3.4841935634613037
    7. '#' → logprob: -5.984193801879883
    8. '   ' → logprob: -6.359193801879883
    9. ' #' → logprob: -6.859193801879883
    10. 'print' → logprob: -8.734193801879883

Token 265: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23190438747406006
    2. ' if' → logprob: -1.60690438747406
    3. 'all' → logprob: -5.85690450668335
    4. ' ' → logprob: -6.48190450668335
    5. ' all' → logprob: -6.60690450668335
    6. '   ' → logprob: -7.73190450668335
    7. '  ' → logprob: -8.981904029846191
    8. ' que' → logprob: -9.981904029846191
    9. ' si' → logprob: -10.481904029846191
    10. 'si' → logprob: -10.606904029846191

Token 266: ' les' (ID: 1341)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4321182370185852
    2. ' all' → logprob: -1.0571181774139404
    3. 'S' → logprob: -6.0571184158325195
    4. ' S' → logprob: -7.0571184158325195
    5. ' not' → logprob: -10.30711841583252
    6. 'not' → logprob: -10.30711841583252
    7. ' ' → logprob: -10.43211841583252
    8. 's' → logprob: -10.68211841583252
    9. 'len' → logprob: -11.18211841583252
    10. ' ''.' → logprob: -11.18211841583252

Token 267: ' caractères' (ID: 183106)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6634222269058228
    2. ' all' → logprob: -1.0384222269058228
    3. 'car' → logprob: -3.038422107696533
    4. 's' → logprob: -4.288422107696533
    5. 'rest' → logprob: -4.663422107696533
    6. ' caractères' → logprob: -4.788422107696533
    7. ' rest' → logprob: -4.913422107696533
    8. 't' → logprob: -5.038422107696533
    9. 'remaining' → logprob: -5.038422107696533
    10. 'c' → logprob: -5.913422107696533

Token 268: ' rest' (ID: 2867)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.637812614440918
    2. 'all' → logprob: -1.137812614440918
    3. 'for' → logprob: -3.137812614440918
    4. 'are' → logprob: -3.512812614440918
    5. 't' → logprob: -3.762812614440918
    6. 'rest' → logprob: -4.137812614440918
    7. ' all' → logprob: -4.137812614440918
    8. 'remaining' → logprob: -5.012812614440918
    9. 'ont' → logprob: -5.762812614440918
    10. 'tout' → logprob: -6.262812614440918

Token 269: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.14754073321819305
    2. 'ant' → logprob: -2.397540807723999
    3. 'ent' → logprob: -3.397540807723999
    4. 'ont' → logprob: -5.77254056930542
    5. 'nants' → logprob: -6.27254056930542
    6. '   ' → logprob: -6.27254056930542
    7. 'aient' → logprob: -6.39754056930542
    8. 's' → logprob: -6.64754056930542
    9. 'ents' → logprob: -7.27254056930542
    10. 'a' → logprob: -8.147541046142578

Token 270: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2644573748111725
    2. 'all' → logprob: -2.0144574642181396
    3. ' all' → logprob: -3.8894574642181396
    4. 'are' → logprob: -4.0144572257995605
    5. ' sont' → logprob: -4.1394572257995605
    6. '<|end|>' → logprob: -4.2644572257995605
    7. 'for' → logprob: -4.7644572257995605
    8. ' are' → logprob: -5.2644572257995605
    9. '[:]' → logprob: -6.0144572257995605
    10. 't' → logprob: -6.2644572257995605

Token 271: ' tous' (ID: 10688)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7026159763336182
    2. ' all' → logprob: -0.7026159763336182
    3. 's' → logprob: -5.452615737915039
    4. 't' → logprob: -6.327615737915039
    5. ' tous' → logprob: -6.452615737915039
    6. 'tout' → logprob: -7.452615737915039
    7. ' toutes' → logprob: -7.577615737915039
    8. ' allemaal' → logprob: -9.702615737915039
    9. ' en' → logprob: -9.702615737915039
    10. ' 모두' → logprob: -9.827615737915039

Token 272: ' des' (ID: 731)
  Prédit: 'isl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isl' → logprob: -0.7204651832580566
    2. 'en' → logprob: -1.4704651832580566
    3. ' en' → logprob: -1.5954651832580566
    4. 's' → logprob: -3.4704651832580566
    5. 'minus' → logprob: -3.8454651832580566
    6. 'c' → logprob: -5.095465183258057
    7. 'min' → logprob: -5.220465183258057
    8. ' minus' → logprob: -5.845465183258057
    9. 'is' → logprob: -6.095465183258057
    10. 'a' → logprob: -6.220465183258057

Token 273: ' minus' (ID: 40335)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.5027068853378296
    2. 'lett' → logprob: -2.127707004547119
    3. 'car' → logprob: -2.627707004547119
    4. 'a' → logprob: -3.002707004547119
    5. ' minus' → logprob: -3.002707004547119
    6. 'c' → logprob: -3.252707004547119
    7. ' lettres' → logprob: -3.502707004547119
    8. 's' → logprob: -4.752707004547119
    9. 'isl' → logprob: -5.252707004547119
    10. 'letters' → logprob: -5.377707004547119

Token 274: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.03807638958096504
    2. 'c' → logprob: -3.288076400756836
    3. 'culas' → logprob: -11.413076400756836
    4. 'cu' → logprob: -12.038076400756836
    5. 'cule' → logprob: -12.288076400756836
    6. 'cul' → logprob: -13.163076400756836
    7. '```' → logprob: -13.163076400756836
    8. 'ules' → logprob: -13.538076400756836
    9. 'C' → logprob: -13.663076400756836
    10. '   ' → logprob: -13.788076400756836

Token 275: ' alph' (ID: 133679)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7054235339164734
    2. '   ' → logprob: -0.9554235339164734
    3. ' if' → logprob: -2.955423593521118
    4. '       ' → logprob: -2.955423593521118
    5. 'if' → logprob: -4.830423355102539
    6. 'and' → logprob: -5.205423355102539
    7. ':' → logprob: -6.830423355102539
    8. ' for' → logprob: -7.330423355102539
    9. ' all' → logprob: -7.330423355102539
    10. ' or' → logprob: -7.705423355102539

Token 276: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.003294043941423297
    2. 'abet' → logprob: -5.878293991088867
    3. 'a' → logprob: -8.378293991088867
    4. 'abets' → logprob: -8.503293991088867
    5. 'abeth' → logprob: -11.003293991088867
    6. 'abc' → logprob: -12.003293991088867
    7. 'abt' → logprob: -12.378293991088867
    8. 'étiques' → logprob: -12.628293991088867
    9. '```' → logprob: -12.628293991088867
    10. 'аб' → logprob: -12.628293991088867

Token 277: 'étiques' (ID: 124984)
  Prédit: 'étiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étiques' → logprob: -0.034018632024526596
    2. 'et' → logprob: -3.4090185165405273
    3. 'é' → logprob: -8.534018516540527
    4. 'étique' → logprob: -9.659018516540527
    5. 'ets' → logprob: -10.534018516540527
    6. 'e' → logprob: -11.034018516540527
    7. 'eti' → logprob: -11.284018516540527
    8. 'ètes' → logprob: -11.534018516540527
    9. 'ет' → logprob: -12.034018516540527
    10. '#' → logprob: -12.034018516540527

Token 278: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.48812249302864075
    2. '   ' → logprob: -1.3631224632263184
    3. ' if' → logprob: -2.4881224632263184
    4. 'if' → logprob: -3.9881224632263184
    5. '       ' → logprob: -4.613122463226318
    6. ' for' → logprob: -5.113122463226318
    7. ' all' → logprob: -5.113122463226318
    8. 'and' → logprob: -5.238122463226318
    9. 'all' → logprob: -7.613122463226318
    10. 'for' → logprob: -8.113122940063477

Token 279: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4065648913383484
    2. '   ' → logprob: -1.2815649509429932
    3. '       ' → logprob: -3.281564950942993
    4. 'if' → logprob: -4.406564712524414
    5. ' and' → logprob: -5.531564712524414
    6. ' for' → logprob: -6.156564712524414
    7. '    ' → logprob: -8.156564712524414
    8. ' all' → logprob: -9.531564712524414
    9. ' or' → logprob: -9.656564712524414
    10. 'for' → logprob: -10.031564712524414

Token 280: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3462330400943756
    2. ' if' → logprob: -1.3462330102920532
    3. '   ' → logprob: -4.346232891082764
    4. ' for' → logprob: -4.971232891082764
    5. 'for' → logprob: -5.221232891082764
    6. ' all' → logprob: -5.596232891082764
    7. 'all' → logprob: -6.346232891082764
    8. '       ' → logprob: -6.596232891082764
    9. 'print' → logprob: -8.471233367919922
    10. ' ' → logprob: -10.596233367919922

Token 281: ' "".' (ID: 94734)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.14268526434898376
    2. ' all' → logprob: -2.0176851749420166
    3. ' ' → logprob: -12.892684936523438
    4. '   ' → logprob: -13.017684936523438
    5. '	all' → logprob: -14.142684936523438
    6. 'a' → logprob: -14.267684936523438
    7. '(all' → logprob: -14.267684936523438
    8. '_all' → logprob: -14.392684936523438
    9. ''all' → logprob: -14.517684936523438
    10. '.all' → logprob: -14.892684936523438

Token 282: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.006950749550014734
    2. 'is' → logprob: -5.506950855255127
    3. 'isl' → logprob: -5.881950855255127
    4. 'isas' → logprob: -10.256950378417969
    5. 'isdigit' → logprob: -11.131950378417969
    6. 'iss' → logprob: -11.506950378417969
    7. 'all' → logprob: -11.631950378417969
    8. 'isal' → logprob: -12.506950378417969
    9. ' join' → logprob: -13.381950378417969
    10. 'joined' → logprob: -13.631950378417969

Token 283: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.00022201328829396516
    2. 'S' → logprob: -8.500222206115723
    3. '([' → logprob: -11.625222206115723
    4. '(s' → logprob: -12.250222206115723
    5. '[S' → logprob: -12.750222206115723
    6. '(sorted' → logprob: -14.625222206115723
    7. 's' → logprob: -15.000222206115723
    8. '(' → logprob: -15.375222206115723
    9. 'filter' → logprob: -15.875222206115723
    10. '(filter' → logprob: -16.125221252441406

Token 284: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00030507624614983797
    2. '.is' → logprob: -8.25030517578125
    3. ' ).' → logprob: -11.00030517578125
    4. ')' → logprob: -11.87530517578125
    5. '.' → logprob: -12.00030517578125
    6. 'is' → logprob: -12.37530517578125
    7. '   ' → logprob: -12.50030517578125
    8. 'isl' → logprob: -12.62530517578125
    9. '()).' → logprob: -14.12530517578125
    10. ' .' → logprob: -14.12530517578125

Token 285: 'isl' (ID: 13495)
  Prédit: 'isl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isl' → logprob: -1.3306015716807451e-05
    2. 'isas' → logprob: -11.75001335144043
    3. 'all' → logprob: -13.00001335144043
    4. ' is' → logprob: -13.50001335144043
    5. 'is' → logprob: -14.00001335144043
    6. 'isal' → logprob: -14.50001335144043
    7. '```' → logprob: -15.37501335144043
    8. 'isdigit' → logprob: -16.00001335144043
    9. '   ' → logprob: -17.00001335144043
    10. 'ist' → logprob: -17.12501335144043

Token 286: 'ower' (ID: 1611)
  Prédit: 'ower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ower' → logprob: -1.0280383548888494e-06
    2. 'lower' → logprob: -14.625000953674316
    3. 'ow' → logprob: -15.250000953674316
    4. 'owe' → logprob: -15.625000953674316
    5. 'owered' → logprob: -17.875001907348633
    6. 'OWER' → logprob: -18.000001907348633
    7. 'wer' → logprob: -18.375001907348633
    8. 'o' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.750001907348633
    10. 'ocal' → logprob: -20.625001907348633

Token 287: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04859509319067001
    2. '()' → logprob: -3.0485951900482178
    3. '():
' → logprob: -12.048595428466797
    4. '(' → logprob: -14.173595428466797
    5. ' ():' → logprob: -15.048595428466797
    6. '().' → logprob: -15.798595428466797
    7. '()==' → logprob: -15.923595428466797
    8. '()>' → logprob: -16.048595428466797
    9. '()"' → logprob: -16.173595428466797
    10. '():
' → logprob: -16.298595428466797

Token 288: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03405296429991722
    2. '           ' → logprob: -4.159052848815918
    3. '       ' → logprob: -4.284052848815918
    4. ':
' → logprob: -5.534052848815918
    5. ':return' → logprob: -10.159052848815918
    6. ' :' → logprob: -10.409052848815918
    7. ' and' → logprob: -11.284052848815918
    8. '():' → logprob: -11.784052848815918
    9. '):' → logprob: -12.034052848815918
    10. '          ' → logprob: -12.659052848815918

Token 289: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0647151917219162
    2. 'print' (adapté à ' print') → logprob: -2.8147151470184326
    3. ' print' → logprob: -6.439715385437012
    4. '           ' → logprob: -6.939715385437012
    5. '   ' → logprob: -8.814715385437012
    6. 'return' → logprob: -11.189715385437012
    7. '
' → logprob: -11.689715385437012
    8. '	print' → logprob: -13.064715385437012
    9. ' return' → logprob: -13.439715385437012
    10. '               ' → logprob: -13.689715385437012

Token 290: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00020938136731274426
    2. '(' → logprob: -8.50020980834961
    3. '('' → logprob: -12.25020980834961
    4. '"' → logprob: -14.00020980834961
    5. '(
' → logprob: -15.50020980834961
    6. ' ("' → logprob: -17.50020980834961
    7. '(

' → logprob: -20.00020980834961
    8. '(("' → logprob: -20.37520980834961
    9. '()' → logprob: -21.00020980834961
    10. '"A' → logprob: -21.12520980834961

Token 291: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -1.3856492842023727e-06
    2. 'A' → logprob: -13.625000953674316
    3. '"' → logprob: -17.000001907348633
    4. '_AC' → logprob: -17.125001907348633
    5. ' AC' → logprob: -18.000001907348633
    6. 'ACC' → logprob: -18.125001907348633
    7. 'AA' → logprob: -18.625001907348633
    8. 'AG' → logprob: -18.750001907348633
    9. 'ACA' → logprob: -19.500001907348633
    10. 'OK' → logprob: -19.625001907348633

Token 292: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5761312246322632
    2. '")
' → logprob: -0.8261312246322632
    3. '")
' → logprob: -8.576130867004395
    4. ')' → logprob: -13.951130867004395
    5. '"' → logprob: -14.076130867004395
    6. '")

' → logprob: -14.076130867004395
    7. ')
' → logprob: -15.076130867004395
    8. ')")
' → logprob: -15.826130867004395
    9. ')")' → logprob: -16.07613182067871
    10. '”)' → logprob: -16.45113182067871

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00312650203704834
    2. 'else' → logprob: -6.003126621246338
    3. '   ' → logprob: -7.378126621246338
    4. ' else' → logprob: -10.62812614440918
    5. '           ' → logprob: -13.87812614440918
    6. '	else' → logprob: -14.62812614440918
    7. '```' → logprob: -15.87812614440918
    8. 'elif' → logprob: -17.12812614440918
    9. '
' → logprob: -17.50312614440918
    10. 'Else' → logprob: -18.12812614440918

Token 294: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14463548362255096
    2. 'else' (adapté à ' else') → logprob: -2.3946354389190674
    3. '       ' → logprob: -3.1446354389190674
    4. ' else' → logprob: -7.8946356773376465
    5. '	else' → logprob: -14.144635200500488
    6. '           ' → logprob: -16.019636154174805
    7. '    ' → logprob: -17.519636154174805
    8. '     ' → logprob: -17.644636154174805
    9. 'elif' → logprob: -18.144636154174805
    10. '
' → logprob: -18.394636154174805

Token 295: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1757689267396927
    2. ':' → logprob: -1.9257689714431763
    3. '           ' → logprob: -4.175768852233887
    4. ' :
' → logprob: -10.175768852233887
    5. '       ' → logprob: -11.675768852233887
    6. 'print' → logprob: -12.175768852233887
    7. ' :' → logprob: -12.425768852233887
    8. '   ' → logprob: -13.425768852233887
    9. ':
' → logprob: -13.550768852233887
    10. ':

' → logprob: -14.050768852233887

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05043457821011543
    2. 'print' → logprob: -3.0504345893859863
    3. ' print' → logprob: -6.300434589385986
    4. '       ' → logprob: -11.800434112548828
    5. '   ' → logprob: -14.050434112548828
    6. '               ' → logprob: -14.175434112548828
    7. '          ' → logprob: -14.675434112548828
    8. '		' → logprob: -15.300434112548828
    9. '	       ' → logprob: -16.300434112548828
    10. '         ' → logprob: -16.675434112548828

Token 297: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.676292231422849e-05
    2. ' print' → logprob: -11.000017166137695
    3. '   ' → logprob: -20.125017166137695
    4. '           ' → logprob: -20.250017166137695
    5. '	print' → logprob: -20.500017166137695
    6. '       ' → logprob: -20.625017166137695
    7. ' ' → logprob: -24.000017166137695
    8. '  ' → logprob: -24.875017166137695
    9. '.print' → logprob: -25.750017166137695
    10. 'Print' → logprob: -26.375017166137695

Token 298: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. '(
' → logprob: -18.250001907348633
    4. '('' → logprob: -18.250001907348633
    5. ' ("' → logprob: -18.500001907348633
    6. '"' → logprob: -18.750001907348633
    7. '("("' → logprob: -21.250001907348633
    8. '(("' → logprob: -21.625001907348633
    9. '   ' → logprob: -21.625001907348633
    10. '("""' → logprob: -21.875001907348633

Token 299: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -6.704273118884885e-07
    2. ' WA' → logprob: -14.750000953674316
    3. '"' → logprob: -15.250000953674316
    4. '   ' → logprob: -17.75
    5. ' ' → logprob: -18.0
    6. 'wa' → logprob: -18.25
    7. 'W' → logprob: -18.25
    8. ''' → logprob: -18.75
    9. 'Wa' → logprob: -19.125
    10. 'WR' → logprob: -19.875

Token 300: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0009038381977006793
    2. ')' → logprob: -7.750903606414795
    3. '")
' → logprob: -7.750903606414795
    4. ')")' → logprob: -10.625904083251953
    5. '   ' → logprob: -11.625904083251953
    6. '       ' → logprob: -11.875904083251953
    7. '}")' → logprob: -14.000904083251953
    8. ')")
' → logprob: -14.500904083251953
    9. ')
' → logprob: -15.125904083251953
    10. '```' → logprob: -15.125904083251953

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006609689444303513
    2. 'else' → logprob: -7.3756608963012695
    3. '<|end|>' → logprob: -10.62566089630127
    4. ' else' → logprob: -12.62566089630127
    5. '       ' → logprob: -13.00066089630127
    6. '	else' → logprob: -13.12566089630127
    7. '```' → logprob: -13.37566089630127
    8. '
' → logprob: -15.00066089630127
    9. '<|end|>' → logprob: -15.75066089630127
    10. 'elif' → logprob: -16.125661849975586

Token 302: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47447705268859863
    2. 'else' (adapté à ' else') → logprob: -0.9744770526885986
    3. ' else' → logprob: -7.8494768142700195
    4. '	else' → logprob: -11.59947681427002
    5. '       ' → logprob: -14.97447681427002
    6. 'elif' → logprob: -15.09947681427002
    7. ' ' → logprob: -15.59947681427002
    8. '  ' → logprob: -16.599477767944336
    9. '_else' → logprob: -17.224477767944336
    10. '```' → logprob: -17.224477767944336

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018182365223765373
    2. ':
' → logprob: -4.018182277679443
    3. '       ' → logprob: -10.643182754516602
    4. '   ' → logprob: -12.268182754516602
    5. ' :' → logprob: -13.018182754516602
    6. ' :
' → logprob: -14.518182754516602
    7. '():
' → logprob: -14.893182754516602
    8. '():' → logprob: -15.268182754516602
    9. ':

' → logprob: -15.393182754516602
    10. ':
' → logprob: -16.7681827545166

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022415895364247262
    2. 'print' → logprob: -8.875224113464355
    3. ' print' → logprob: -9.750224113464355
    4. '   ' → logprob: -10.625224113464355
    5. '           ' → logprob: -14.750224113464355
    6. '	   ' → logprob: -15.375224113464355
    7. '    ' → logprob: -15.875224113464355
    8. '```' → logprob: -15.875224113464355
    9. '     ' → logprob: -16.125225067138672
    10. '    ' → logprob: -16.250225067138672

Token 305: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07637309283018112
    2. ' print' → logprob: -2.8263731002807617
    3. '       ' → logprob: -4.326373100280762
    4. '   ' → logprob: -6.826373100280762
    5. '	print' → logprob: -13.451373100280762
    6. ' ' → logprob: -15.326373100280762
    7. '    ' → logprob: -15.576373100280762
    8. '  ' → logprob: -17.076372146606445
    9. '           ' → logprob: -17.451372146606445
    10. '     ' → logprob: -17.576372146606445

Token 306: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011705794604495168
    2. '(' → logprob: -6.751170635223389
    3. '(
' → logprob: -15.62617015838623
    4. '('' → logprob: -15.75117015838623
    5. '("("' → logprob: -16.251171112060547
    6. '()' → logprob: -17.501171112060547
    7. '("")' → logprob: -18.001171112060547
    8. '("""' → logprob: -18.376171112060547
    9. '"' → logprob: -18.876171112060547
    10. ' ("' → logprob: -19.001171112060547

Token 307: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -1.9361264946837764e-07
    2. '"' → logprob: -15.75
    3. ' WA' → logprob: -18.625
    4. 'wa' → logprob: -20.5
    5. 'W' → logprob: -20.625
    6. 'Wa' → logprob: -21.625
    7. '   ' → logprob: -21.75
    8. '"W' → logprob: -22.625
    9. 'WR' → logprob: -22.875
    10. '```' → logprob: -22.875

Token 308: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2520541548728943
    2. ')' → logprob: -1.502054214477539
    3. ')")' → logprob: -9.252054214477539
    4. '")
' → logprob: -11.502054214477539
    5. '')' → logprob: -11.752054214477539
    6. '```' → logprob: -12.502054214477539
    7. '}")' → logprob: -13.252054214477539
    8. ')
' → logprob: -13.252054214477539
    9. '   ' → logprob: -13.752054214477539
    10. '`)' → logprob: -13.877054214477539

Token 309: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: ' App' (ID: 2583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.01907350681722164
    2. 'eler' → logprob: -4.144073486328125
    3. '#' → logprob: -6.519073486328125
    4. 'l' → logprob: -7.644073486328125
    5. 'ly' → logprob: -7.894073486328125
    6. 'le' → logprob: -8.394073486328125
    7. 'elé' → logprob: -8.769073486328125
    8. 'ler' → logprob: -9.644073486328125
    9. '```' → logprob: -10.144073486328125
    10. 'elf' → logprob: -10.519073486328125

Token 312: ' de' (ID: 334)
  Prédit: 'validate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'validate' → logprob: -0.15682119131088257
    2. 'def' → logprob: -2.2818212509155273
    3. '()' → logprob: -3.4068212509155273
    4. '(validate' → logprob: -4.781821250915527
    5. 'de' → logprob: -7.281821250915527
    6. '();' → logprob: -8.406821250915527
    7. '(' → logprob: -9.031821250915527
    8. '()
' → logprob: -9.156821250915527
    9. '.validate' → logprob: -9.781821250915527
    10. ' validate' → logprob: -9.781821250915527

Token 313: ' la' (ID: 557)
  Prédit: 'validate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'validate' → logprob: -0.00023286080977413803
    2. ' validate' → logprob: -8.375232696533203
    3. 'def' → logprob: -13.375232696533203
    4. '(validate' → logprob: -15.375232696533203
    5. '```' → logprob: -15.500232696533203
    6. 'val' → logprob: -15.750232696533203
    7. '	validate' → logprob: -16.250232696533203
    8. 'valid' → logprob: -18.375232696533203
    9. '.validate' → logprob: -18.375232696533203
    10. '_validate' → logprob: -19.000232696533203

Token 314: ' fonction' (ID: 17610)
  Prédit: 'validate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'validate' → logprob: -1.1472419600977446e-06
    2. 'def' → logprob: -14.375000953674316
    3. ' validate' → logprob: -14.625000953674316
    4. '```' → logprob: -17.250001907348633
    5. 'val' → logprob: -17.625001907348633
    6. '	validate' → logprob: -18.250001907348633
    7. 'valid' → logprob: -18.375001907348633
    8. 'main' → logprob: -18.750001907348633
    9. '(validate' → logprob: -19.000001907348633
    10. 'function' → logprob: -19.250001907348633

Token 315: ' principale' (ID: 68926)
  Prédit: 'validate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'validate' → logprob: -9.496052371105179e-05
    2. '(validate' → logprob: -10.25009536743164
    3. 'def' → logprob: -10.37509536743164
    4. '```' → logprob: -10.87509536743164
    5. ' validate' → logprob: -12.00009536743164
    6. '()
' → logprob: -14.25009536743164
    7. '.validate' → logprob: -14.37509536743164
    8. '	validate' → logprob: -14.37509536743164
    9. '()' → logprob: -14.62509536743164
    10. '
' → logprob: -14.87509536743164

Token 316: ' si' (ID: 1784)
  Prédit: 'validate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'validate' → logprob: -3.726595241460018e-05
    2. '
' → logprob: -10.25003719329834
    3. '```' → logprob: -14.25003719329834
    4. ' validate' → logprob: -14.37503719329834
    5. 'def' → logprob: -14.87503719329834
    6. '(validate' → logprob: -15.12503719329834
    7. 'valid' → logprob: -16.750038146972656
    8. '	validate' → logprob: -17.250038146972656
    9. '.validate' → logprob: -17.750038146972656
    10. '  
' → logprob: -18.375038146972656

Token 317: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04858771339058876
    2. ' __' → logprob: -3.0485877990722656
    3. 'name' → logprob: -15.298587799072266
    4. '/__' → logprob: -16.923587799072266
    5. '___' → logprob: -17.298587799072266
    6. ' ' → logprob: -18.173587799072266
    7. ' "__' → logprob: -18.298587799072266
    8. '_name' → logprob: -18.923587799072266
    9. '.__' → logprob: -19.048587799072266
    10. '(__' → logprob: -19.173587799072266

Token 318: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008535854518413544
    2. ' __' → logprob: -5.008535861968994
    3. '_' → logprob: -7.383535861968994
    4. 'name' → logprob: -8.133535385131836
    5. 'if' → logprob: -8.633535385131836
    6. '==' → logprob: -8.633535385131836
    7. 'n' → logprob: -8.758535385131836
    8. '```' → logprob: -9.383535385131836
    9. ' ==' → logprob: -9.508535385131836
    10. '_name' → logprob: -9.883535385131836

Token 319: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.41899240016937256
    2. '==' → logprob: -1.2939924001693726
    3. ' ==' → logprob: -2.918992519378662
    4. 'name' → logprob: -5.543992519378662
    5. ' __' → logprob: -5.793992519378662
    6. 's' → logprob: -6.293992519378662
    7. 'est' → logprob: -6.793992519378662
    8. 'if' → logprob: -7.043992519378662
    9. ' est' → logprob: -7.043992519378662
    10. '```' → logprob: -7.168992519378662

Token 320: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001243444043211639
    2. ' __' → logprob: -7.251243591308594
    3. 'name' → logprob: -7.626243591308594
    4. '_name' → logprob: -11.001243591308594
    5. '___' → logprob: -12.376243591308594
    6. 'le' → logprob: -12.876243591308594
    7. ' exécut' → logprob: -12.876243591308594
    8. ' le' → logprob: -13.251243591308594
    9. '```' → logprob: -13.251243591308594
    10. ' "__' → logprob: -13.376243591308594

Token 321: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13800697028636932
    2. 'if' → logprob: -2.6380069255828857
    3. 'é' → logprob: -3.0130069255828857
    4. ' if' → logprob: -5.513007164001465
    5. ' __' → logprob: -7.263007164001465
    6. '   ' → logprob: -7.388007164001465
    7. 'er' → logprob: -7.763007164001465
    8. ' en' → logprob: -8.138007164001465
    9. 'able' → logprob: -8.138007164001465
    10. 'direct' → logprob: -8.138007164001465

Token 322: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29830202460289
    2. '```' → logprob: -1.4233020544052124
    3. 'en' → logprob: -5.048302173614502
    4. ' if' → logprob: -5.298302173614502
    5. ' en' → logprob: -6.048302173614502
    6. '__' → logprob: -7.173302173614502
    7. 'direct' → logprob: -7.798302173614502
    8. ' directement' → logprob: -8.298301696777344
    9. '
' → logprob: -8.423301696777344
    10. '``' → logprob: -8.423301696777344

Token 323: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -13.750000953674316
    3. ' if' → logprob: -16.500001907348633
    4. '
' → logprob: -21.625001907348633
    5. '``' → logprob: -22.000001907348633
    6. 'i' → logprob: -22.750001907348633
    7. '__' → logprob: -22.750001907348633
    8. 'def' → logprob: -24.375001907348633
    9. 'If' → logprob: -24.750001907348633
    10. 'import' → logprob: -25.875001907348633

Token 324: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3133132755756378
    2. '__' → logprob: -1.3133132457733154
    3. ' ' → logprob: -9.938313484191895
    4. ' ' → logprob: -14.313313484191895
    5. 'name' → logprob: -14.563313484191895
    6. '_' → logprob: -14.938313484191895
    7. '___' → logprob: -15.188313484191895
    8. '_name' → logprob: -15.313313484191895
    9. ' ' → logprob: -15.313313484191895
    10. '/__' → logprob: -15.813313484191895

Token 325: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5091318488121033
    2. '==' → logprob: -1.509131908416748
    3. '__' → logprob: -2.259131908416748
    4. 'name' → logprob: -2.634131908416748
    5. '=="' → logprob: -7.134131908416748
    6. ' __' → logprob: -7.509131908416748
    7. '=='' → logprob: -9.38413143157959
    8. '_' → logprob: -9.75913143157959
    9. ' =="' → logprob: -10.25913143157959
    10. 'main' → logprob: -10.25913143157959

Token 326: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.339278580620885e-06
    2. '==' → logprob: -13.625001907348633
    3. '__.__' → logprob: -14.250001907348633
    4. ' ==' → logprob: -16.000001907348633
    5. '___' → logprob: -16.375001907348633
    6. '=="' → logprob: -16.625001907348633
    7. '__["' → logprob: -17.500001907348633
    8. '____' → logprob: -17.625001907348633
    9. '__('' → logprob: -17.875001907348633
    10. ' __' → logprob: -18.500001907348633

Token 327: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002875569916795939
    2. '==' → logprob: -8.250288009643555
    3. ' ==' → logprob: -10.875288009643555
    4. '=="' → logprob: -12.500288009643555
    5. '_' → logprob: -13.125288009643555
    6. '___' → logprob: -14.500288009643555
    7. '____' → logprob: -15.250288009643555
    8. '__.__' → logprob: -15.375288009643555
    9. ' __' → logprob: -15.875288009643555
    10. '__,' → logprob: -16.125288009643555

Token 328: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0012146407971158624
    2. ''' → logprob: -6.751214504241943
    3. ' "__' → logprob: -10.126214981079102
    4. '__' → logprob: -12.376214981079102
    5. ' '__' → logprob: -16.0012149810791
    6. '"name' → logprob: -17.3762149810791
    7. '("__' → logprob: -17.8762149810791
    8. '"user' → logprob: -18.2512149810791
    9. '"'' → logprob: -19.1262149810791
    10. '"<?' → logprob: -19.3762149810791

Token 329: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. ' main' → logprob: -17.875
    3. 'name' → logprob: -18.0
    4. '_main' → logprob: -20.75
    5. '	main' → logprob: -21.75
    6. 'ma' → logprob: -22.5
    7. '__' → logprob: -22.875
    8. 'm' → logprob: -23.25
    9. '-main' → logprob: -23.375
    10. '(main' → logprob: -23.75

Token 330: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018158724531531334
    2. '__' → logprob: -4.018158912658691
    3. '__':
' → logprob: -11.643158912658691
    4. '_' → logprob: -17.643157958984375
    5. '__["' → logprob: -18.393157958984375
    6. '"' → logprob: -18.518157958984375
    7. '__
' → logprob: -19.268157958984375
    8. '__:' → logprob: -19.268157958984375
    9. '__("' → logprob: -19.643157958984375
    10. '__",' → logprob: -20.643157958984375

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006870475597679615
    2. ' validate' → logprob: -5.631870269775391
    3. '	validate' → logprob: -5.881870269775391
    4. 'validate' → logprob: -8.00687026977539
    5. '(validate' → logprob: -9.25687026977539
    6. '    
' → logprob: -11.00687026977539
    7. '<|end|>' → logprob: -11.75687026977539
    8. '_validate' → logprob: -12.25687026977539
    9. '   ' → logprob: -12.25687026977539
    10. '```' → logprob: -12.25687026977539

Token 332: ' validate' (ID: 14986)
  Prédit: 'validate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'validate' (adapté à ' validate') → logprob: -6.2729995988775045e-06
    2. ' validate' → logprob: -12.000006675720215
    3. '	validate' → logprob: -18.3750057220459
    4. '   ' → logprob: -20.5000057220459
    5. '_validate' → logprob: -21.1250057220459
    6. '.validate' → logprob: -21.2500057220459
    7. '(validate' → logprob: -22.2500057220459
    8. 'valid' → logprob: -23.7500057220459
    9. 'import' → logprob: -24.8750057220459
    10. 'verify' → logprob: -25.5000057220459

Token 333: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0007141007808968425
    2. '_' → logprob: -7.250714302062988
    3. '_str' → logprob: -12.750714302062988
    4. '_strings' → logprob: -14.625714302062988
    5. 'string' → logprob: -15.375714302062988
    6. '_String' → logprob: -15.625714302062988
    7. ' _' → logprob: -16.000713348388672
    8. '_STRING' → logprob: -16.250713348388672
    9. '_s' → logprob: -16.750713348388672
    10. 'String' → logprob: -16.875713348388672

Token 334: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00024192029377445579
    2. '(' → logprob: -8.375242233276367
    3. '()
' → logprob: -11.750242233276367
    4. '();' → logprob: -14.500242233276367
    5. '()`' → logprob: -14.500242233276367
    6. '()">' → logprob: -14.750242233276367
    7. '()

' → logprob: -14.875242233276367
    8. '()]' → logprob: -15.125242233276367
    9. ' ()' → logprob: -15.625242233276367
    10. '()<' → logprob: -15.625242233276367


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 332
Tokens correctement prédits (1ère position, stricte): 112
Tokens correctement prédits (1ère position, avec adaptation): 119
Tokens correctement prédits (top 10): 241
Précision stricte (1ère position): 33.73%
Précision adaptée (1ère position): 35.84%
Précision (top 10): 72.59%
================================================================================
