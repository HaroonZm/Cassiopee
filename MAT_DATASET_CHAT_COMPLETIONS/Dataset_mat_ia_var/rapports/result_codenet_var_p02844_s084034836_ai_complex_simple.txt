================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import product, accumulate

N = int(input())
S = input()
nums = list(map(str, range(10)))
triplets = map(lambda t: ''.join(t), product(nums, repeat=3))

def triplet_in_s(t):
    try:
        idx = next(idx for idx, c in enumerate(S) if c == t[0])
        idx = next(idx for idx, c in enumerate(S[idx+1:], idx+1) if c == t[1])
        idx = next(idx for idx, c in enumerate(S[idx+1:], idx+1) if c == t[2])
        return True
    except StopIteration:
        return False

result = sum(map(triplet_in_s, triplets))
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.019087785854935646
    2. 'import' → logprob: -4.019087791442871
    3. '.' → logprob: -7.394087791442871
    4. ' ' → logprob: -8.644087791442871
    5. ' .' → logprob: -9.519087791442871
    6. '.import' → logprob: -10.019087791442871
    7. '	import' → logprob: -11.269087791442871
    8. '_import' → logprob: -12.144087791442871
    9. '<|end|>' → logprob: -13.519087791442871
    10. '.groupby' → logprob: -13.769087791442871

Token 8: ' product' (ID: 1888)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.4097050726413727
    2. 'group' → logprob: -2.15970516204834
    3. ' accumulate' → logprob: -2.90970516204834
    4. 'acc' → logprob: -3.40970516204834
    5. 'count' → logprob: -3.40970516204834
    6. ' cycle' → logprob: -3.53470516204834
    7. ' chain' → logprob: -3.53470516204834
    8. 'cycle' → logprob: -4.28470516204834
    9. 'chain' → logprob: -4.40970516204834
    10. ' count' → logprob: -5.03470516204834

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020852264016866684
    2. '(
' → logprob: -4.270852088928223
    3. 'def' → logprob: -5.520852088928223
    4. '```' → logprob: -7.395852088928223
    5. '\' → logprob: -7.770852088928223
    6. '.' → logprob: -8.020852088928223
    7. '\(' → logprob: -8.145852088928223
    8. '`' → logprob: -8.520852088928223
    9. '\n' → logprob: -8.770852088928223
    10. ',' → logprob: -8.895852088928223

Token 10: ' accumulate' (ID: 74226)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.7025715708732605
    2. 'com' → logprob: -1.8275716304779053
    3. ' combinations' → logprob: -2.4525716304779053
    4. 'per' → logprob: -2.7025716304779053
    5. ' cycle' → logprob: -3.4525716304779053
    6. ' accumulate' → logprob: -3.5775716304779053
    7. 'acc' → logprob: -3.7025716304779053
    8. 'count' → logprob: -3.9525716304779053
    9. 'cycle' → logprob: -4.327571392059326
    10. 'st' → logprob: -4.452571392059326

Token 11: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0495566129684448
    2. 'def' → logprob: -1.7995566129684448
    3. ',' → logprob: -2.0495567321777344
    4. '\n' → logprob: -2.1745567321777344
    5. '#' → logprob: -2.5495567321777344
    6. '\' → logprob: -2.9245567321777344
    7. '.' → logprob: -3.9245567321777344
    8. '(
' → logprob: -4.174556732177734
    9. '`' → logprob: -4.299556732177734
    10. 'for' → logprob: -4.674556732177734

Token 12: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.177821397781372
    2. '(' → logprob: -1.302821397781372
    3. '\' → logprob: -1.927821397781372
    4. '`' → logprob: -3.052821397781372
    5. '#' → logprob: -3.302821397781372
    6. '=' → logprob: -3.427821397781372
    7. 'd' → logprob: -3.552821397781372
    8. ',' → logprob: -3.677821397781372
    9. '\n' → logprob: -4.052821159362793
    10. '```' → logprob: -4.052821159362793

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17760425806045532
    2. '=' → logprob: -2.3026041984558105
    3. ' ' → logprob: -3.4276041984558105
    4. ',' → logprob: -3.8026041984558105
    5. '_' → logprob: -5.4276041984558105
    6. '.' → logprob: -6.8026041984558105
    7. '  ' → logprob: -7.0526041984558105
    8. ' ,' → logprob: -7.8026041984558105
    9. 'u' → logprob: -7.8026041984558105
    10. ')' → logprob: -8.302604675292969

Token 14: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04413757845759392
    2. '10' → logprob: -3.919137477874756
    3. '5' → logprob: -4.044137477874756
    4. '3' → logprob: -6.419137477874756
    5. '0' → logprob: -6.544137477874756
    6. 'int' → logprob: -7.419137477874756
    7. '1' → logprob: -7.544137477874756
    8. '4' → logprob: -7.669137477874756
    9. '100' → logprob: -7.669137477874756
    10. '20' → logprob: -8.419137954711914

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014385659014806151
    2. '(input' → logprob: -7.501438617706299
    3. '(N' → logprob: -7.876438617706299
    4. '('' → logprob: -8.37643814086914
    5. '()' → logprob: -8.62643814086914
    6. '(`' → logprob: -10.87643814086914
    7. ''' → logprob: -11.12643814086914
    8. '```' → logprob: -11.75143814086914
    9. ' (' → logprob: -12.12643814086914
    10. '("' → logprob: -12.12643814086914

Token 16: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046683523803949356
    2. '())' → logprob: -3.7966835498809814
    3. '()' → logprob: -4.421683311462402
    4. '(' → logprob: -4.546683311462402
    5. '))' → logprob: -8.296683311462402
    6. '`)' → logprob: -9.421683311462402
    7. '')' → logprob: -9.546683311462402
    8. '('' → logprob: -10.046683311462402
    9. '(
' → logprob: -10.296683311462402
    10. '")' → logprob: -10.546683311462402

Token 17: 'S' (ID: 50)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2117811441421509
    2. ')' → logprob: -1.4617811441421509
    3. 'data' → logprob: -1.7117811441421509
    4. 'arr' → logprob: -2.9617810249328613
    5. 'numbers' → logprob: -2.9617810249328613
    6. 'result' → logprob: -3.9617810249328613
    7. 'nums' → logprob: -4.211781024932861
    8. 'A' → logprob: -4.211781024932861
    9. ' 
' → logprob: -4.336781024932861
    10. 'array' → logprob: -4.461781024932861

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14271442592144012
    2. '=' → logprob: -2.517714500427246
    3. '[' → logprob: -3.642714500427246
    4. '.' → logprob: -4.642714500427246
    5. ' ' → logprob: -4.767714500427246
    6. 'paces' → logprob: -6.517714500427246
    7. 's' → logprob: -6.517714500427246
    8. '_' → logprob: -6.642714500427246
    9. ')' → logprob: -7.392714500427246
    10. ',' → logprob: -7.642714500427246

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.35733267664909363
    2. ' input' → logprob: -1.232332706451416
    3. '[input' → logprob: -5.482332706451416
    4. 'list' → logprob: -6.357332706451416
    5. ' list' → logprob: -6.732332706451416
    6. '"' → logprob: -7.232332706451416
    7. ''' → logprob: -8.232332229614258
    8. '[' → logprob: -8.482332229614258
    9. ' [' → logprob: -8.857332229614258
    10. '(input' → logprob: -8.982332229614258

Token 20: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020741930231451988
    2. '()' → logprob: -4.020741939544678
    3. '[' → logprob: -7.020741939544678
    4. '.' → logprob: -7.520741939544678
    5. ')' → logprob: -7.520741939544678
    6. '('' → logprob: -8.39574146270752
    7. '(
' → logprob: -9.14574146270752
    8. ''' → logprob: -9.64574146270752
    9. ''s' → logprob: -10.02074146270752
    10. ' (' → logprob: -10.77074146270752

Token 21: 'nums' (ID: 44465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8593011498451233
    2. 'for' → logprob: -2.2343010902404785
    3. ')' → logprob: -2.3593010902404785
    4. '#' → logprob: -2.8593010902404785
    5. '
' → logprob: -3.1093010902404785
    6. '*' → logprob: -3.1093010902404785
    7. '[' → logprob: -3.2343010902404785
    8. '.' → logprob: -3.6093010902404785
    9. 'result' → logprob: -3.7343010902404785
    10. '=' → logprob: -3.8593010902404785

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06773386895656586
    2. '=' → logprob: -3.3177337646484375
    3. '[' → logprob: -3.5677337646484375
    4. '_' → logprob: -8.067733764648438
    5. '.' → logprob: -8.692733764648438
    6. ')' → logprob: -8.692733764648438
    7. ' ' → logprob: -8.817733764648438
    8. '[:]' → logprob: -9.692733764648438
    9. '  ' → logprob: -10.692733764648438
    10. ',' → logprob: -10.692733764648438

Token 23: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20054475963115692
    2. 'list' → logprob: -1.9505447149276733
    3. ' [' → logprob: -3.825544834136963
    4. '[' → logprob: -4.200544834136963
    5. '[list' → logprob: -6.075544834136963
    6. '[]' → logprob: -9.325544357299805
    7. ' []' → logprob: -9.450544357299805
    8. '[int' → logprob: -9.575544357299805
    9. ' range' → logprob: -9.950544357299805
    10. 'range' → logprob: -10.075544357299805

Token 24: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1462290287017822
    2. '(product' → logprob: -1.3962290287017822
    3. '(map' → logprob: -1.5212290287017822
    4. '(range' → logprob: -1.6462290287017822
    5. '(acc' → logprob: -3.8962290287017822
    6. '(en' → logprob: -7.021228790283203
    7. '(it' → logprob: -7.271228790283203
    8. '(re' → logprob: -8.396228790283203
    9. '(chain' → logprob: -8.396228790283203
    10. '(filter' → logprob: -8.771228790283203

Token 25: '(str' (ID: 7946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06995644420385361
    2. '(str' → logprob: -2.8199565410614014
    3. '(' → logprob: -4.944956302642822
    4. '(lambda' → logprob: -7.819956302642822
    5. '(ord' → logprob: -7.819956302642822
    6. 'str' → logprob: -11.56995677947998
    7. 'int' → logprob: -11.56995677947998
    8. '(len' → logprob: -12.31995677947998
    9. '(eval' → logprob: -13.19495677947998
    10. ')' → logprob: -13.31995677947998

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38922297954559326
    2. ',int' → logprob: -1.1392229795455933
    3. ',S' → logprob: -7.764223098754883
    4. ',input' → logprob: -7.889223098754883
    5. ',str' → logprob: -8.014223098754883
    6. ',N' → logprob: -8.139223098754883
    7. ',n' → logprob: -8.514223098754883
    8. ' ,' → logprob: -8.639223098754883
    9. ',len' → logprob: -8.639223098754883
    10. ',float' → logprob: -9.639223098754883

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01789424568414688
    2. ' range' → logprob: -4.767894268035889
    3. 'S' → logprob: -5.267894268035889
    4. 'list' → logprob: -6.767894268035889
    5. '[' → logprob: -6.892894268035889
    6. 'N' → logprob: -7.392894268035889
    7. ' S' → logprob: -7.767894268035889
    8. '(range' → logprob: -8.51789379119873
    9. 're' → logprob: -8.76789379119873
    10. ')' → logprob: -9.14289379119873

Token 28: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00040779312257654965
    2. '(N' → logprob: -8.125408172607422
    3. '10' → logprob: -9.250408172607422
    4. '9' → logprob: -12.125408172607422
    5. '1' → logprob: -12.875408172607422
    6. '(-' → logprob: -12.875408172607422
    7. '(len' → logprob: -13.625408172607422
    8. '(S' → logprob: -14.625408172607422
    9. ' (' → logprob: -14.750408172607422
    10. '(n' → logprob: -14.875408172607422

Token 29: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16108913719654083
    2. '(' → logprob: -2.2860891819000244
    3. '1' → logprob: -3.1610891819000244
    4. '9' → logprob: -6.286088943481445
    5. '0' → logprob: -6.911088943481445
    6. 'N' → logprob: -7.161088943481445
    7. '2' → logprob: -8.411088943481445
    8. '3' → logprob: -8.411088943481445
    9. '(N' → logprob: -8.411088943481445
    10. '4' → logprob: -9.286088943481445

Token 30: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.01982608065009117
    2. '))' → logprob: -4.3948259353637695
    3. ')' → logprob: -5.0198259353637695
    4. '0' → logprob: -7.8948259353637695
    5. '10' → logprob: -8.39482593536377
    6. '))))' → logprob: -10.64482593536377
    7. ' ' → logprob: -11.26982593536377
    8. '9' → logprob: -11.26982593536377
    9. '1' → logprob: -12.01982593536377
    10. ')))
' → logprob: -12.51982593536377

Token 31: 'trip' (ID: 51122)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.2664637565612793
    2. '+' → logprob: -1.3914637565612793
    3. ')' → logprob: -2.1414637565612793
    4. '
' → logprob: -2.3914637565612793
    5. '[' → logprob: -2.5164637565612793
    6. '+
' → logprob: -3.0164637565612793
    7. ' ' → logprob: -3.7664637565612793
    8. '(' → logprob: -4.016463756561279
    9. '  
' → logprob: -4.141463756561279
    10. '*' → logprob: -4.266463756561279

Token 32: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -0.6180177330970764
    2. 'let' → logprob: -1.2430176734924316
    3. 'le' → logprob: -1.8680176734924316
    4. 'les' → logprob: -4.118017673492432
    5. '=' → logprob: -8.11801815032959
    6. 's' → logprob: -8.36801815032959
    7. 'l' → logprob: -8.61801815032959
    8. '[' → logprob: -9.30551815032959
    9. ' =' → logprob: -9.36801815032959
    10. '['' → logprob: -9.49301815032959

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038216594606637955
    2. '=' → logprob: -3.2882165908813477
    3. '_' → logprob: -9.413216590881348
    4. '(' → logprob: -10.038216590881348
    5. 's' → logprob: -10.663216590881348
    6. ' ' → logprob: -11.663216590881348
    7. '_counts' → logprob: -12.538216590881348
    8. '=[]' → logprob: -13.663216590881348
    9. '_product' → logprob: -13.788216590881348
    10. '[' → logprob: -13.788216590881348

Token 34: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1753774881362915
    2. '['' → logprob: -2.675377368927002
    3. '[list' → logprob: -3.050377368927002
    4. '[' → logprob: -3.550377368927002
    5. ' list' → logprob: -4.675377368927002
    6. '(list' → logprob: -6.050377368927002
    7. ' ['' → logprob: -6.675377368927002
    8. 'product' → logprob: -6.675377368927002
    9. ' [' → logprob: -7.675377368927002
    10. '["' → logprob: -7.800377368927002

Token 35: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.667805552482605
    2. '(' → logprob: -0.792805552482605
    3. '(product' → logprob: -3.4178056716918945
    4. '(list' → logprob: -6.9178056716918945
    5. '(tuple' → logprob: -7.9178056716918945
    6. '(str' → logprob: -8.042805671691895
    7. '(p' → logprob: -10.917805671691895
    8. '(
' → logprob: -11.167805671691895
    9. '(part' → logprob: -11.292805671691895
    10. '((' → logprob: -11.292805671691895

Token 36: ' t' (ID: 260)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9413772821426392
    2. ' x' → logprob: -0.9413772821426392
    3. 's' → logprob: -2.3163771629333496
    4. 'x' → logprob: -2.3163771629333496
    5. ' lambda' → logprob: -5.06637716293335
    6. ' t' → logprob: -5.69137716293335
    7. ' c' → logprob: -6.06637716293335
    8. ' trip' → logprob: -6.31637716293335
    9. 'lambda' → logprob: -6.56637716293335
    10. ' p' → logprob: -6.94137716293335

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002787359117064625
    2. ' :' → logprob: -8.25027847290039
    3. ':t' → logprob: -11.75027847290039
    4. ',' → logprob: -12.87527847290039
    5. 't' → logprob: -13.37527847290039
    6. ':list' → logprob: -13.50027847290039
    7. ':(' → logprob: -13.87527847290039
    8. ':['' → logprob: -14.12527847290039
    9. ':
' → logprob: -14.87527847290039
    10. 's' → logprob: -14.87527847290039

Token 38: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.3117244243621826
    2. ' ''.' → logprob: -1.6867244243621826
    3. ' t' → logprob: -3.8117244243621826
    4. ' "".' → logprob: -4.311724662780762
    5. 't' → logprob: -4.686724662780762
    6. 'S' → logprob: -5.061724662780762
    7. ' str' → logprob: -5.186724662780762
    8. '"' → logprob: -5.311724662780762
    9. 'str' → logprob: -5.436724662780762
    10. ' S' → logprob: -5.936724662780762

Token 39: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.5332478142227046e-05
    2. 'j' → logprob: -11.750015258789062
    3. ' join' → logprob: -13.000015258789062
    4. '''.' → logprob: -13.375015258789062
    5. 'jo' → logprob: -13.500015258789062
    6. '```' → logprob: -14.500015258789062
    7. ''.' → logprob: -15.125015258789062
    8. 'format' → logprob: -15.375015258789062
    9. ' ' → logprob: -15.500015258789062
    10. '.' → logprob: -15.625015258789062

Token 40: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.023265745490789413
    2. 't' → logprob: -3.773265838623047
    3. '(' → logprob: -11.273265838623047
    4. 'trip' → logprob: -12.648265838623047
    5. '(list' → logprob: -13.648265838623047
    6. '(tuple' → logprob: -14.148265838623047
    7. ')' → logprob: -14.273265838623047
    8. ' t' → logprob: -14.648265838623047
    9. ')t' → logprob: -14.898265838623047
    10. 'tuple' → logprob: -15.148265838623047

Token 41: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1558225005865097
    2. ',' → logprob: -2.030822515487671
    3. 'product' → logprob: -4.780822277069092
    4. 'trip' → logprob: -5.905822277069092
    5. '(product' → logprob: -7.405822277069092
    6. '(t' → logprob: -7.780822277069092
    7. ')' → logprob: -8.03082275390625
    8. ' ,' → logprob: -9.15582275390625
    9. '   ' → logprob: -9.28082275390625
    10. ' ),' → logprob: -9.53082275390625

Token 42: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.2254481017589569
    2. ' product' → logprob: -1.6004481315612793
    3. 'list' → logprob: -11.600447654724121
    4. '	product' → logprob: -12.225447654724121
    5. '(product' → logprob: -12.350447654724121
    6. ' ' → logprob: -12.350447654724121
    7. '.product' → logprob: -12.725447654724121
    8. '   ' → logprob: -12.725447654724121
    9. ' list' → logprob: -12.975447654724121
    10. 'filter' → logprob: -14.100447654724121

Token 43: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -4.966313281329349e-05
    2. '(' → logprob: -10.375049591064453
    3. '(numbers' → logprob: -11.375049591064453
    4. '(num' → logprob: -12.875049591064453
    5. '((' → logprob: -13.125049591064453
    6. '(n' → logprob: -14.250049591064453
    7. '(chars' → logprob: -14.875049591064453
    8. ')' → logprob: -15.125049591064453
    9. ')(' → logprob: -15.125049591064453
    10. ' (' → logprob: -15.250049591064453

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022218646481633186
    2. ' ,' → logprob: -6.377222061157227
    3. '(' → logprob: -8.502222061157227
    4. '(),' → logprob: -8.752222061157227
    5. '',' → logprob: -10.377222061157227
    6. 'repeat' → logprob: -10.627222061157227
    7. ' (' → logprob: -11.127222061157227
    8. ',length' → logprob: -11.252222061157227
    9. ',num' → logprob: -11.377222061157227
    10. ',(' → logprob: -11.377222061157227

Token 45: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.016531286761164665
    2. ' repeat' → logprob: -4.141531467437744
    3. 'nums' → logprob: -7.766531467437744
    4. ' ' → logprob: -10.141530990600586
    5. '3' → logprob: -11.266530990600586
    6. 'S' → logprob: -12.016530990600586
    7. ' nums' → logprob: -12.516530990600586
    8. '  ' → logprob: -13.016530990600586
    9. 'r' → logprob: -13.016530990600586
    10. ' S' → logprob: -13.516530990600586

Token 46: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0280383548888494e-06
    2. '3' → logprob: -13.875000953674316
    3. '(' → logprob: -19.000001907348633
    4. ' =' → logprob: -19.375001907348633
    5. '=
' → logprob: -21.250001907348633
    6. 's' → logprob: -21.500001907348633
    7. '=

' → logprob: -22.500001907348633
    8. '＝' → logprob: -22.625001907348633
    9. ' ' → logprob: -22.875001907348633
    10. '2' → logprob: -23.000001907348633

Token 47: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003036457928828895
    2. ' ' → logprob: -8.125303268432617
    3. '2' → logprob: -12.125303268432617
    4. '4' → logprob: -14.000303268432617
    5. '1' → logprob: -15.250303268432617
    6. '   ' → logprob: -15.750303268432617
    7. '```' → logprob: -15.812803268432617
    8. '  ' → logprob: -16.062803268432617
    9. '6' → logprob: -16.312803268432617
    10. ' ' → logprob: -16.812803268432617

Token 48: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001562000485137105
    2. ')' → logprob: -6.501562118530273
    3. '))
' → logprob: -10.376562118530273
    4. ')))' → logprob: -10.626562118530273
    5. '))

' → logprob: -13.501562118530273
    6. '),' → logprob: -14.126562118530273
    7. ' ))' → logprob: -14.376562118530273
    8. ''))' → logprob: -14.626562118530273
    9. '));' → logprob: -15.376562118530273
    10. ')
' → logprob: -15.501562118530273

Token 49: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040434129536151886
    2. 'for' → logprob: -3.5404341220855713
    3. ')
' → logprob: -6.04043436050415
    4. '
' → logprob: -6.16543436050415
    5. 'def' → logprob: -6.29043436050415
    6. '#' → logprob: -7.04043436050415
    7. '=' → logprob: -7.29043436050415
    8. ':' → logprob: -7.54043436050415
    9. 'print' → logprob: -8.040433883666992
    10. 's' → logprob: -8.165433883666992

Token 50: ' trip' (ID: 8831)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.19904357194900513
    2. ' solve' → logprob: -3.3240435123443604
    3. ' check' → logprob: -3.5740435123443604
    4. ' find' → logprob: -3.9490435123443604
    5. ' decode' → logprob: -4.0740437507629395
    6. ' calculate' → logprob: -4.1990437507629395
    7. ' is' → logprob: -4.9490437507629395
    8. ' generate' → logprob: -5.0740437507629395
    9. ' ' → logprob: -5.1990437507629395
    10. ' get' → logprob: -5.3240437507629395

Token 51: 'let' (ID: 1347)
  Prédit: 'lets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -0.10021152347326279
    2. 'let' → logprob: -2.3502116203308105
    3. '(let' → logprob: -13.350211143493652
    4. 'plets' → logprob: -13.600211143493652
    5. 'le' → logprob: -13.850211143493652
    6. 'plet' → logprob: -14.850211143493652
    7. 'l' → logprob: -16.10021209716797
    8. 'лет' → logprob: -16.35021209716797
    9. 'Let' → logprob: -16.47521209716797
    10. 'def' → logprob: -16.47521209716797

Token 52: '_in' (ID: 2267)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.3458956480026245
    2. 's' → logprob: -1.4708956480026245
    3. '_count' → logprob: -1.8458956480026245
    4. '_counts' → logprob: -2.095895767211914
    5. '_s' → logprob: -3.095895767211914
    6. '_score' → logprob: -4.095895767211914
    7. '_sum' → logprob: -4.095895767211914
    8. '_value' → logprob: -4.220895767211914
    9. '_hash' → logprob: -4.345895767211914
    10. '_freq' → logprob: -4.595895767211914

Token 53: '_s' (ID: 1278)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6157360076904297
    2. 's' → logprob: -1.6157360076904297
    3. '(S' → logprob: -2.6157360076904297
    4. '_s' → logprob: -3.3657360076904297
    5. 'trip' → logprob: -3.4907360076904297
    6. '_string' → logprob: -3.7407360076904297
    7. 'string' → logprob: -3.7407360076904297
    8. 'dex' → logprob: -3.8657360076904297
    9. '_trip' → logprob: -4.24073600769043
    10. '_S' → logprob: -4.86573600769043

Token 54: '(t' (ID: 2025)
  Prédit: '(tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.46625134348869324
    2. '(' → logprob: -2.2162513732910156
    3. 'dex' → logprob: -2.2162513732910156
    4. '(t' → logprob: -2.8412513732910156
    5. '(sub' → logprob: -3.3412513732910156
    6. '(part' → logprob: -4.466251373291016
    7. 'ex' → logprob: -4.591251373291016
    8. '(token' → logprob: -4.716251373291016
    9. '(x' → logprob: -4.966251373291016
    10. 'trip' → logprob: -5.091251373291016

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018579611787572503
    2. ')' → logprob: -6.751857757568359
    3. '):
' → logprob: -7.376857757568359
    4. ':' → logprob: -10.75185775756836
    5. ',' → logprob: -11.25185775756836
    6. 's' → logprob: -11.25185775756836
    7. ' ):' → logprob: -12.00185775756836
    8. ')):' → logprob: -13.00185775756836
    9. '):
' → logprob: -14.12685775756836
    10. '):

' → logprob: -14.12685775756836

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13114984333515167
    2. ' return' → logprob: -2.2561497688293457
    3. 'return' → logprob: -4.631149768829346
    4. ':' → logprob: -5.381149768829346
    5. ' for' → logprob: -6.756149768829346
    6. '	return' → logprob: -7.131149768829346
    7. ' ' → logprob: -8.131150245666504
    8. ':return' → logprob: -8.131150245666504
    9. ')' → logprob: -8.256150245666504
    10. ' s' → logprob: -8.506150245666504

Token 57: ' try' (ID: 2075)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48430681228637695
    2. 'return' → logprob: -1.359306812286377
    3. '   ' → logprob: -2.234306812286377
    4. ' for' → logprob: -4.234306812286377
    5. 'for' → logprob: -5.359306812286377
    6. 's' → logprob: -8.484306335449219
    7. ' s' → logprob: -8.859306335449219
    8. '	return' → logprob: -9.359306335449219
    9. 'eturn' → logprob: -9.484306335449219
    10. ' ' → logprob: -10.359306335449219

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032226718962192535
    2. ':
' → logprob: -3.532226800918579
    3. '   ' → logprob: -6.4072265625
    4. ' :' → logprob: -7.9072265625
    5. 's' → logprob: -8.4072265625
    6. 'ing' → logprob: -9.9072265625
    7. '):' → logprob: -9.9072265625
    8. ' ' → logprob: -10.6572265625
    9. ' :
' → logprob: -11.2822265625
    10. ' s' → logprob: -11.4072265625

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6320304870605469
    2. '   ' → logprob: -1.5070304870605469
    3. ':' → logprob: -2.007030487060547
    4. ' s' → logprob: -3.257030487060547
    5. '    ' → logprob: -3.882030487060547
    6. ' S' → logprob: -4.382030487060547
    7. 's' → logprob: -4.632030487060547
    8. ':
' → logprob: -4.757030487060547
    9. ' ' → logprob: -5.382030487060547
    10. ' return' → logprob: -5.507030487060547

Token 60: ' idx' (ID: 14016)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.77116858959198
    2. 'S' → logprob: -1.64616858959198
    3. ' return' → logprob: -2.1461687088012695
    4. 'return' → logprob: -2.7711687088012695
    5. ' s' → logprob: -3.1461687088012695
    6. 's' → logprob: -3.1461687088012695
    7. '       ' → logprob: -3.5211687088012695
    8. '   ' → logprob: -4.0211687088012695
    9. '
' → logprob: -4.6461687088012695
    10. '           ' → logprob: -5.1461687088012695

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0672898218035698
    2. '=' → logprob: -3.0672898292541504
    3. 'ex' → logprob: -4.19228982925415
    4. 'x' → logprob: -5.94228982925415
    5. 's' → logprob: -7.69228982925415
    6. ')' → logprob: -8.942289352416992
    7. '=index' → logprob: -10.192289352416992
    8. 'dx' → logprob: -10.567289352416992
    9. 'index' → logprob: -10.692289352416992
    10. 'idx' → logprob: -11.067289352416992

Token 62: ' next' (ID: 2613)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.20145250856876373
    2. ' S' → logprob: -1.7014524936676025
    3. 's' → logprob: -10.326452255249023
    4. '   ' → logprob: -12.326452255249023
    5. ' s' → logprob: -14.201452255249023
    6. ' ' → logprob: -14.826452255249023
    7. '_S' → logprob: -14.826452255249023
    8. '(S' → logprob: -16.576452255249023
    9. '	S' → logprob: -16.701452255249023
    10. '_s' → logprob: -16.701452255249023

Token 63: '(idx' (ID: 42793)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1775570511817932
    2. '(' → logprob: -2.6775569915771484
    3. '((' → logprob: -3.1775569915771484
    4. '(s' → logprob: -3.8025569915771484
    5. '(S' → logprob: -4.052556991577148
    6. '(x' → logprob: -5.427556991577148
    7. '(iter' → logprob: -5.427556991577148
    8. '(idx' → logprob: -6.552556991577148
    9. '(lambda' → logprob: -7.177556991577148
    10. '(
' → logprob: -7.677556991577148

Token 64: ' for' (ID: 395)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.007334718015044928
    2. ' for' → logprob: -5.2573347091674805
    3. '(' → logprob: -7.1323347091674805
    4. '(s' → logprob: -7.3823347091674805
    5. 'for' → logprob: -7.6323347091674805
    6. '((' → logprob: -9.38233470916748
    7. '(x' → logprob: -10.38233470916748
    8. '(for' → logprob: -11.00733470916748
    9. '(idx' → logprob: -11.13233470916748
    10. '	for' → logprob: -11.75733470916748

Token 65: ' idx' (ID: 14016)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19552887976169586
    2. ' range' → logprob: -2.195528984069824
    3. 'range' → logprob: -3.195528984069824
    4. ' idx' → logprob: -4.195528984069824
    5. 'idx' → logprob: -5.070528984069824
    6. ' in' → logprob: -6.445528984069824
    7. 's' → logprob: -6.695528984069824
    8. ' s' → logprob: -8.445528984069824
    9. ')' → logprob: -9.195528984069824
    10. '(idx' → logprob: -9.445528984069824

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0588899590075016
    2. ',s' → logprob: -2.933889865875244
    3. ',S' → logprob: -5.558889865875244
    4. ',t' → logprob: -10.183890342712402
    5. 's' → logprob: -10.558890342712402
    6. ' in' → logprob: -10.808890342712402
    7. ',in' → logprob: -11.433890342712402
    8. 'range' → logprob: -11.683890342712402
    9. ' ,' → logprob: -11.683890342712402
    10. 'S' → logprob: -12.183890342712402

Token 67: ' c' (ID: 274)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28138771653175354
    2. 'c' → logprob: -2.1563878059387207
    3. ' c' → logprob: -2.5313878059387207
    4. 'ch' → logprob: -4.156387805938721
    5. ' _' → logprob: -4.281387805938721
    6. ' ch' → logprob: -4.531387805938721
    7. '_c' → logprob: -5.531387805938721
    8. ')' → logprob: -6.281387805938721
    9. 'v' → logprob: -7.156387805938721
    10. '_char' → logprob: -7.906387805938721

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00978961680084467
    2. 'in' → logprob: -4.63478946685791
    3. ' ' → logprob: -11.38478946685791
    4. 's' → logprob: -11.88478946685791
    5. ')' → logprob: -12.38478946685791
    6. '<|end|>' → logprob: -12.75978946685791
    7. '	in' → logprob: -12.75978946685791
    8. ',' → logprob: -13.88478946685791
    9. '<|end|>' → logprob: -14.00978946685791
    10. '  ' → logprob: -14.38478946685791

Token 69: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.2519453763961792
    2. 'enumer' → logprob: -1.5019453763961792
    3. 's' → logprob: -12.251945495605469
    4. 'en' → logprob: -12.876945495605469
    5. '(en' → logprob: -13.376945495605469
    6. ')' → logprob: -13.626945495605469
    7. '```' → logprob: -13.626945495605469
    8. ',' → logprob: -14.251945495605469
    9. 'trip' → logprob: -14.751945495605469
    10. 'enum' → logprob: -14.876945495605469

Token 70: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.18630200624465942
    2. 'S' → logprob: -2.0613019466400146
    3. ' S' → logprob: -3.3113019466400146
    4. ')' → logprob: -5.186302185058594
    5. 's' → logprob: -8.311302185058594
    6. '(s' → logprob: -8.686302185058594
    7. ' (' → logprob: -8.811302185058594
    8. '(' → logprob: -10.186302185058594
    9. ' ' → logprob: -11.561302185058594
    10. ' )' → logprob: -12.561302185058594

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01123904064297676
    2. ' if' → logprob: -4.886239051818848
    3. 'if' → logprob: -6.386239051818848
    4. ' )' → logprob: -6.636239051818848
    5. '[idx' → logprob: -8.136239051818848
    6. '   ' → logprob: -8.886239051818848
    7. '[' → logprob: -10.136239051818848
    8. '[start' → logprob: -10.261239051818848
    9. '           ' → logprob: -11.136239051818848
    10. '    ' → logprob: -11.261239051818848

Token 72: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17983047664165497
    2. '[idx' → logprob: -2.054830551147461
    3. ')' → logprob: -4.054830551147461
    4. 'if' → logprob: -4.179830551147461
    5. '   ' → logprob: -6.179830551147461
    6. '[len' → logprob: -7.804830551147461
    7. '[' → logprob: -7.929830551147461
    8. ' ' → logprob: -8.804830551147461
    9. '           ' → logprob: -8.929830551147461
    10. '                   ' → logprob: -9.179830551147461

Token 73: ' c' (ID: 274)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9941192269325256
    2. 'c' → logprob: -1.3691191673278809
    3. ' c' → logprob: -1.4941191673278809
    4. ' S' → logprob: -1.9941191673278809
    5. ' t' → logprob: -5.119119167327881
    6. 't' → logprob: -5.244119167327881
    7. 's' → logprob: -6.494119167327881
    8. ' s' → logprob: -7.119119167327881
    9. ' ' → logprob: -7.369119167327881
    10. ' all' → logprob: -8.681619644165039

Token 74: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5800791382789612
    2. '==' → logprob: -0.8300791382789612
    3. ' not' → logprob: -6.830079078674316
    4. ' in' → logprob: -6.955079078674316
    5. '.startswith' → logprob: -7.830079078674316
    6. '!=' → logprob: -7.955079078674316
    7. '>=' → logprob: -7.955079078674316
    8. ' !=' → logprob: -8.455079078674316
    9. ' >=' → logprob: -8.580079078674316
    10. 's' → logprob: -8.830079078674316

Token 75: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.16024190187454224
    2. 't' → logprob: -1.9102418422698975
    3. ' ' → logprob: -12.160242080688477
    4. '	t' → logprob: -12.535242080688477
    5. ')' → logprob: -13.660242080688477
    6. ')t' → logprob: -13.660242080688477
    7. '   ' → logprob: -14.035242080688477
    8. ' ' → logprob: -14.160242080688477
    9. '`t' → logprob: -14.472742080688477
    10. 's' → logprob: -14.597742080688477

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03375496715307236
    2. '0' → logprob: -3.40875506401062
    3. ' ' → logprob: -10.0337553024292
    4. ')' → logprob: -11.2837553024292
    5. ' [' → logprob: -11.2837553024292
    6. '[
' → logprob: -12.0337553024292
    7. '   ' → logprob: -12.0337553024292
    8. ''[' → logprob: -12.2837553024292
    9. ''s' → logprob: -12.5337553024292
    10. '1' → logprob: -12.9087553024292

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000170882252859883
    2. ' ' → logprob: -8.875170707702637
    3. '[' → logprob: -10.875170707702637
    4. '2' → logprob: -12.375170707702637
    5. '1' → logprob: -12.500170707702637
    6. '-' → logprob: -14.500170707702637
    7. '   ' → logprob: -14.500170707702637
    8. ']' → logprob: -14.750170707702637
    9. '3' → logprob: -14.875170707702637
    10. ')' → logprob: -15.562670707702637

Token 78: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4910356402397156
    2. ' and' → logprob: -0.9910356402397156
    3. 'and' → logprob: -4.491035461425781
    4. ' )' → logprob: -5.616035461425781
    5. '))' → logprob: -6.616035461425781
    6. ')
' → logprob: -8.241035461425781
    7. '])' → logprob: -8.616035461425781
    8. '})' → logprob: -10.491035461425781
    9. '   ' → logprob: -10.866035461425781
    10. ' or' → logprob: -11.116035461425781

Token 79: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06906435638666153
    2. ')' → logprob: -3.4440643787384033
    3. '       ' → logprob: -3.9440643787384033
    4. 'and' → logprob: -4.444064140319824
    5. ')
' → logprob: -6.319064140319824
    6. '   ' → logprob: -7.444064140319824
    7. '<|end|>' → logprob: -7.819064140319824
    8. '           ' → logprob: -8.819064140319824
    9. ' ' → logprob: -9.569064140319824
    10. '+' → logprob: -9.819064140319824

Token 80: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23543716967105865
    2. ' ' → logprob: -2.1104371547698975
    3. '        ' → logprob: -3.4854371547698975
    4. '   ' → logprob: -4.985437393188477
    5. '    ' → logprob: -5.110437393188477
    6. ' except' → logprob: -5.360437393188477
    7. '        
' → logprob: -5.360437393188477
    8. ' for' → logprob: -5.485437393188477
    9. '<|end|>' → logprob: -5.485437393188477
    10. ')' → logprob: -5.610437393188477

Token 81: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.387864351272583
    2. '+=' → logprob: -1.387864351272583
    3. '+' → logprob: -1.762864351272583
    4. ' =' → logprob: -2.137864351272583
    5. ' +' → logprob: -2.262864351272583
    6. '=' → logprob: -2.387864351272583
    7. '<|end|>' → logprob: -5.262864112854004
    8. ',' → logprob: -6.387864112854004
    9. 'for' → logprob: -6.887864112854004
    10. 'import' → logprob: -7.137864112854004

Token 82: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.1433754712343216
    2. 'next' → logprob: -2.1433753967285156
    3. ' S' → logprob: -4.768375396728516
    4. 'S' → logprob: -4.893375396728516
    5. ' t' → logprob: -9.893375396728516
    6. ' idx' → logprob: -10.268375396728516
    7. '[next' → logprob: -10.393375396728516
    8. ' trip' → logprob: -10.643375396728516
    9. ' ' → logprob: -10.768375396728516
    10. 'idx' → logprob: -10.893375396728516

Token 83: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.003916918765753508
    2. '(i' → logprob: -5.7539167404174805
    3. '(' → logprob: -7.3789167404174805
    4. '(lambda' → logprob: -9.37891674041748
    5. '((' → logprob: -11.37891674041748
    6. '(index' → logprob: -11.62891674041748
    7. '(
' → logprob: -12.75391674041748
    8. '(next' → logprob: -12.87891674041748
    9. ' (' → logprob: -13.50391674041748
    10. '(ii' → logprob: -13.75391674041748

Token 84: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012804158963263035
    2. 'for' → logprob: -4.51280403137207
    3. '+' → logprob: -7.51280403137207
    4. ' +' → logprob: -8.13780403137207
    5. ' ' → logprob: -8.26280403137207
    6. '(idx' → logprob: -9.01280403137207
    7. 'c' → logprob: -9.26280403137207
    8. '	for' → logprob: -9.51280403137207
    9. '(i' → logprob: -9.63780403137207
    10. 'x' → logprob: -10.01280403137207

Token 85: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5157151222229004
    2. ',' → logprob: -1.3907151222229004
    3. 'idx' → logprob: -2.8907151222229004
    4. '_,' → logprob: -3.0157151222229004
    5. 'i' → logprob: -4.1407151222229
    6. ' i' → logprob: -4.5157151222229
    7. ' ,' → logprob: -5.5157151222229
    8. 'enumer' → logprob: -6.0157151222229
    9. ' enumerate' → logprob: -6.1407151222229
    10. ' _,' → logprob: -6.1407151222229

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04841133952140808
    2. ' in' → logprob: -3.6734113693237305
    3. ' ,' → logprob: -4.0484113693237305
    4. ',S' → logprob: -6.7984113693237305
    5. ',c' → logprob: -7.6734113693237305
    6. ' S' → logprob: -7.7984113693237305
    7. '<|end|>' → logprob: -7.9234113693237305
    8. ',s' → logprob: -8.17341136932373
    9. ' ' → logprob: -8.29841136932373
    10. 's' → logprob: -8.42341136932373

Token 87: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.16457533836364746
    2. 'c' → logprob: -1.9145753383636475
    3. '_' → logprob: -6.289575576782227
    4. ' _' → logprob: -7.289575576782227
    5. ' idx' → logprob: -8.289575576782227
    6. 'idx' → logprob: -8.664575576782227
    7. 'enumer' → logprob: -8.789575576782227
    8. 'i' → logprob: -8.914575576782227
    9. ' i' → logprob: -8.914575576782227
    10. 'x' → logprob: -9.289575576782227

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004657849203795195
    2. 'in' → logprob: -5.379657745361328
    3. '<|end|>' → logprob: -11.504657745361328
    4. ' ' → logprob: -11.754657745361328
    5. 's' → logprob: -12.254657745361328
    6. ',' → logprob: -12.629657745361328
    7. ')' → logprob: -13.629657745361328
    8. '    ' → logprob: -14.004657745361328
    9. ' at' → logprob: -14.192157745361328
    10. 'to' → logprob: -14.192157745361328

Token 89: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.008799398317933083
    2. 'enumer' → logprob: -4.7587995529174805
    3. ' list' → logprob: -9.63379955291748
    4. 'S' → logprob: -10.75879955291748
    5. ' range' → logprob: -11.00879955291748
    6. '(en' → logprob: -11.38379955291748
    7. ' S' → logprob: -11.69629955291748
    8. 'list' → logprob: -11.75879955291748
    9. ' zip' → logprob: -11.94629955291748
    10. ' ' → logprob: -12.19629955291748

Token 90: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.25414079427719116
    2. 'S' → logprob: -1.504140853881836
    3. ' S' → logprob: -6.254140853881836
    4. 's' → logprob: -8.629140853881836
    5. ')' → logprob: -10.504140853881836
    6. '(s' → logprob: -10.879140853881836
    7. ' (' → logprob: -11.129140853881836
    8. '[S' → logprob: -11.379140853881836
    9. '(' → logprob: -11.629140853881836
    10. 'range' → logprob: -12.254140853881836

Token 91: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.03954257443547249
    2. ',' → logprob: -3.9145426750183105
    3. ' if' → logprob: -4.5395426750183105
    4. ')' → logprob: -5.6645426750183105
    5. '(idx' → logprob: -6.5395426750183105
    6. ' idx' → logprob: -6.6645426750183105
    7. '[' → logprob: -7.0395426750183105
    8. 'idx' → logprob: -7.6645426750183105
    9. '       ' → logprob: -8.789542198181152
    10. '           ' → logprob: -8.914542198181152

Token 92: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09186545014381409
    2. ' +' → logprob: -2.4668655395507812
    3. '(idx' → logprob: -6.841865539550781
    4. '[idx' → logprob: -6.966865539550781
    5. 'idx' → logprob: -8.716865539550781
    6. '1' → logprob: -8.841865539550781
    7. '+]' → logprob: -9.591865539550781
    8. '()+' → logprob: -9.716865539550781
    9. ':]' → logprob: -9.716865539550781
    10. ':].' → logprob: -9.966865539550781

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005751936114393175
    2. ' ' → logprob: -7.500575065612793
    3. '])' → logprob: -11.500575065612793
    4. ')' → logprob: -13.375575065612793
    5. '   ' → logprob: -13.500575065612793
    6. ']' → logprob: -13.625575065612793
    7. '...' → logprob: -14.125575065612793
    8. '```' → logprob: -14.250575065612793
    9. 't' → logprob: -14.375575065612793
    10. 'len' → logprob: -14.500575065612793

Token 94: ':],' (ID: 117284)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6948893666267395
    2. ':],' → logprob: -0.6948893666267395
    3. ' :' → logprob: -6.569889545440674
    4. ':]' → logprob: -8.319889068603516
    5. ':].' → logprob: -10.194889068603516
    6. '],' → logprob: -10.819889068603516
    7. ':])
' → logprob: -11.319889068603516
    8. ' :]' → logprob: -11.819889068603516
    9. ':t' → logprob: -12.569889068603516
    10. '():' → logprob: -13.069889068603516

Token 95: ' idx' (ID: 14016)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5492467880249023
    2. 'lambda' → logprob: -1.2992467880249023
    3. ' t' → logprob: -2.0492467880249023
    4. 't' → logprob: -3.9242467880249023
    5. ' ' → logprob: -7.174246788024902
    6. ')' → logprob: -7.924246788024902
    7. '    ' → logprob: -10.174246788024902
    8. '(lambda' → logprob: -10.549246788024902
    9. '=lambda' → logprob: -10.799246788024902
    10. ')t' → logprob: -11.299246788024902

Token 96: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07010170817375183
    2. ' +' → logprob: -2.695101737976074
    3. '1' → logprob: -9.945101737976074
    4. ')' → logprob: -10.570101737976074
    5. '=' → logprob: -10.820101737976074
    6. '+
' → logprob: -11.195101737976074
    7. '()+' → logprob: -11.445101737976074
    8. ' ' → logprob: -11.570101737976074
    9. '+)' → logprob: -11.570101737976074
    10. ')+' → logprob: -11.820101737976074

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040481300675310194
    2. ' ' → logprob: -7.8754048347473145
    3. '+' → logprob: -11.625404357910156
    4. ')' → logprob: -12.250404357910156
    5. '2' → logprob: -12.750404357910156
    6. '<|end|>' → logprob: -13.500404357910156
    7. 'idx' → logprob: -13.750404357910156
    8. '0' → logprob: -14.375404357910156
    9. '   ' → logprob: -14.625404357910156
    10. '[' → logprob: -14.750404357910156

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024714404717087746
    2. ' if' → logprob: -4.024714469909668
    3. 'if' → logprob: -5.274714469909668
    4. ' )' → logprob: -6.899714469909668
    5. '       ' → logprob: -8.149714469909668
    6. '           ' → logprob: -9.899714469909668
    7. '        ' → logprob: -10.024714469909668
    8. '   ' → logprob: -11.899714469909668
    9. '    ' → logprob: -12.149714469909668
    10. ')
' → logprob: -12.649714469909668

Token 99: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.007729776669293642
    2. '           ' → logprob: -5.507730007171631
    3. 'if' → logprob: -5.757730007171631
    4. '       ' → logprob: -8.507729530334473
    5. '               ' → logprob: -9.132729530334473
    6. ')' → logprob: -9.757729530334473
    7. '        ' → logprob: -10.882729530334473
    8. '            ' → logprob: -10.882729530334473
    9. '          ' → logprob: -11.257729530334473
    10. ' ' → logprob: -11.257729530334473

Token 100: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.25194641947746277
    2. 'c' → logprob: -1.5019464492797852
    3. '    ' → logprob: -12.001946449279785
    4. ' ' → logprob: -12.501946449279785
    5. '   ' → logprob: -12.751946449279785
    6. '	c' → logprob: -13.501946449279785
    7. ')c' → logprob: -14.251946449279785
    8. '        ' → logprob: -15.001946449279785
    9. '(c' → logprob: -15.126946449279785
    10. '           ' → logprob: -15.126946449279785

Token 101: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02630714885890484
    2. '==' → logprob: -3.6513071060180664
    3. ' ' → logprob: -12.401307106018066
    4. '=' → logprob: -14.026307106018066
    5. '==
' → logprob: -14.151307106018066
    6. ' ==
' → logprob: -14.151307106018066
    7. ')' → logprob: -15.276307106018066
    8. ' =' → logprob: -15.526307106018066
    9. '===' → logprob: -17.026308059692383
    10. ')==' → logprob: -17.276308059692383

Token 102: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.06197351589798927
    2. 't' → logprob: -2.8119735717773438
    3. ' ' → logprob: -13.061973571777344
    4. '`t' → logprob: -13.811973571777344
    5. 'trip' → logprob: -14.311973571777344
    6. '	t' → logprob: -14.686973571777344
    7. ')t' → logprob: -14.936973571777344
    8. ' ' → logprob: -14.936973571777344
    9. ' trip' → logprob: -15.436973571777344
    10. ')' → logprob: -16.186973571777344

Token 103: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014239625306800008
    2. '1' → logprob: -8.875142097473145
    3. ' [' → logprob: -14.625142097473145
    4. '[idx' → logprob: -14.625142097473145
    5. 'idx' → logprob: -15.000142097473145
    6. '(' → logprob: -15.125142097473145
    7. '```' → logprob: -15.375142097473145
    8. ')' → logprob: -16.50014305114746
    9. ''s' → logprob: -16.56264305114746
    10. '`' → logprob: -16.68764305114746

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.791440293658525e-05
    2. '[' → logprob: -9.750078201293945
    3. ' ' → logprob: -11.625078201293945
    4. '   ' → logprob: -12.625078201293945
    5. '0' → logprob: -12.750078201293945
    6. '2' → logprob: -14.125078201293945
    7. '```' → logprob: -14.625078201293945
    8. '
' → logprob: -15.000078201293945
    9. ']' → logprob: -15.312578201293945
    10. ')' → logprob: -15.312578201293945

Token 105: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12714292109012604
    2. ')
' → logprob: -2.127142906188965
    3. '       ' → logprob: -9.002142906188965
    4. ' )' → logprob: -10.127142906188965
    5. ' )
' → logprob: -11.252142906188965
    6. '])' → logprob: -11.377142906188965
    7. ')
' → logprob: -11.877142906188965
    8. '   ' → logprob: -12.377142906188965
    9. ')

' → logprob: -12.377142906188965
    10. '])
' → logprob: -12.877142906188965

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001080206478945911
    2. ')' → logprob: -6.87608003616333
    3. ' )' → logprob: -11.376080513000488
    4. '	' → logprob: -11.626080513000488
    5. ')
' → logprob: -11.751080513000488
    6. '           ' → logprob: -12.001080513000488
    7. '   ' → logprob: -12.501080513000488
    8. '
' → logprob: -13.501080513000488
    9. '               ' → logprob: -13.501080513000488
    10. '        
' → logprob: -14.001080513000488

Token 107: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.017350543290376663
    2. ' idx' → logprob: -4.142350673675537
    3. '       ' → logprob: -6.642350673675537
    4. 'index' → logprob: -12.892350196838379
    5. '	idx' → logprob: -13.017350196838379
    6. '_idx' → logprob: -13.142350196838379
    7. '   ' → logprob: -13.392350196838379
    8. 'next' → logprob: -14.142350196838379
    9. '[idx' → logprob: -14.392350196838379
    10. '(idx' → logprob: -14.892350196838379

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975454181432724
    2. '=' → logprob: -3.529754638671875
    3. '    ' → logprob: -13.654754638671875
    4. '   ' → logprob: -14.029754638671875
    5. '        ' → logprob: -14.404754638671875
    6. ' ' → logprob: -14.529754638671875
    7. '       ' → logprob: -14.779754638671875
    8. '	' → logprob: -15.404754638671875
    9. '		' → logprob: -16.779754638671875
    10. ' =
' → logprob: -17.029754638671875

Token 109: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.01815076172351837
    2. 'next' → logprob: -4.018150806427002
    3. '(next' → logprob: -14.768150329589844
    4. '	next' → logprob: -15.518150329589844
    5. '[next' → logprob: -16.268150329589844
    6. '.next' → logprob: -16.518150329589844
    7. 'n' → logprob: -17.893150329589844
    8. 'Next' → logprob: -18.518150329589844
    9. '_next' → logprob: -18.518150329589844
    10. ' nex' → logprob: -19.018150329589844

Token 110: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0009122979827225208
    2. '(' → logprob: -7.000912189483643
    3. '(index' → logprob: -14.8759126663208
    4. ' (' → logprob: -15.5009126663208
    5. '(
' → logprob: -16.000911712646484
    6. '(i' → logprob: -16.875911712646484
    7. '(ii' → logprob: -17.875911712646484
    8. '	idx' → logprob: -17.875911712646484
    9. 'idx' → logprob: -18.000911712646484
    10. '(id' → logprob: -18.375911712646484

Token 111: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5869327187538147
    2. 'for' → logprob: -0.8369327187538147
    3. '(idx' → logprob: -4.71193265914917
    4. '(for' → logprob: -6.46193265914917
    5. ' (' → logprob: -8.586933135986328
    6. '(' → logprob: -8.586933135986328
    7. '(
' → logprob: -12.836933135986328
    8. '(i' → logprob: -13.086933135986328
    9. '	for' → logprob: -13.836933135986328
    10. ' ' → logprob: -14.086933135986328

Token 112: ' idx' (ID: 14016)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3280172348022461
    2. ' idx' → logprob: -1.578017234802246
    3. 'idx' → logprob: -2.703017234802246
    4. ' ,' → logprob: -5.578017234802246
    5. '_,' → logprob: -6.203017234802246
    6. ' _,' → logprob: -8.828017234802246
    7. 'enumer' → logprob: -9.078017234802246
    8. '(idx' → logprob: -10.078017234802246
    9. 'c' → logprob: -10.578017234802246
    10. '           ' → logprob: -10.953017234802246

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.183501293184236e-05
    2. ' ,' → logprob: -9.75007152557373
    3. ' in' → logprob: -12.00007152557373
    4. 'S' → logprob: -13.37507152557373
    5. 'in' → logprob: -13.62507152557373
    6. 's' → logprob: -14.37507152557373
    7. ',S' → logprob: -14.50007152557373
    8. 'enumer' → logprob: -14.62507152557373
    9. 'for' → logprob: -15.00007152557373
    10. '2' → logprob: -15.12507152557373

Token 114: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3132631182670593
    2. 'c' → logprob: -1.313263177871704
    3. ' ' → logprob: -14.938262939453125
    4. '(c' → logprob: -14.938262939453125
    5. ' ' → logprob: -15.813262939453125
    6. ')c' → logprob: -16.188262939453125
    7. 'C' → logprob: -16.438262939453125
    8. '	c' → logprob: -16.563262939453125
    9. ' (' → logprob: -17.000762939453125
    10. 's' → logprob: -17.000762939453125

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043528661131858826
    2. 'in' → logprob: -3.1685285568237305
    3. ',' → logprob: -7.7935285568237305
    4. 'enumer' → logprob: -9.41852855682373
    5. ' ' → logprob: -12.29352855682373
    6. 's' → logprob: -12.54352855682373
    7. '	in' → logprob: -12.54352855682373
    8. 'In' → logprob: -12.54352855682373
    9. '=' → logprob: -12.79352855682373
    10. 'n' → logprob: -12.91852855682373

Token 116: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.009724805131554604
    2. ' enumerate' → logprob: -5.0097246170043945
    3. 'S' → logprob: -5.8847246170043945
    4. ' S' → logprob: -9.009724617004395
    5. '(S' → logprob: -9.634724617004395
    6. 'enum' → logprob: -11.509724617004395
    7. 'range' → logprob: -12.009724617004395
    8. 'en' → logprob: -12.259724617004395
    9. '(en' → logprob: -12.884724617004395
    10. 's' → logprob: -13.509724617004395

Token 117: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -7.896309739408025e-07
    2. 'S' → logprob: -14.500000953674316
    3. '(' → logprob: -15.500000953674316
    4. 's' → logprob: -17.125
    5. '(s' → logprob: -18.0
    6. ' (' → logprob: -18.5
    7. '(
' → logprob: -19.0
    8. ')' → logprob: -20.875
    9. '```' → logprob: -20.875
    10. '((' → logprob: -21.5

Token 118: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.749814019713085e-06
    2. 'idx' → logprob: -12.625006675720215
    3. '(idx' → logprob: -13.000006675720215
    4. '   ' → logprob: -15.125006675720215
    5. ' idx' → logprob: -15.125006675720215
    6. '[' → logprob: -15.375006675720215
    7. ' [' → logprob: -15.875006675720215
    8. '.index' → logprob: -17.62500762939453
    9. '[
' → logprob: -17.87500762939453
    10. '	idx' → logprob: -18.37500762939453

Token 119: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5690089639974758e-05
    2. '[' → logprob: -11.750015258789062
    3. ' +' → logprob: -11.875015258789062
    4. '+[' → logprob: -15.250015258789062
    5. '1' → logprob: -15.375015258789062
    6. 'idx' → logprob: -16.500015258789062
    7. '[idx' → logprob: -17.125015258789062
    8. '2' → logprob: -17.500015258789062
    9. ')+' → logprob: -17.625015258789062
    10. '+
' → logprob: -17.875015258789062

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018101456225849688
    2. ' ' → logprob: -9.125181198120117
    3. '+' → logprob: -9.875181198120117
    4. '2' → logprob: -11.625181198120117
    5. '   ' → logprob: -13.500181198120117
    6. ')' → logprob: -13.625181198120117
    7. '```' → logprob: -13.937681198120117
    8. '...' → logprob: -14.000181198120117
    9. '<|end|>' → logprob: -14.625181198120117
    10. '-' → logprob: -14.687681198120117

Token 121: ':],' (ID: 117284)
  Prédit: ':],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.053490396589040756
    2. '+' → logprob: -3.178490400314331
    3. '],' → logprob: -5.553490161895752
    4. ':,' → logprob: -5.553490161895752
    5. ',' → logprob: -6.178490161895752
    6. '+,' → logprob: -7.553490161895752
    7. '1' → logprob: -10.80349063873291
    8. ':' → logprob: -11.17849063873291
    9. ' +' → logprob: -11.55349063873291
    10. ':]' → logprob: -11.55349063873291

Token 122: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.16032841801643372
    2. 'idx' → logprob: -1.9103283882141113
    3. 't' → logprob: -9.53532886505127
    4. '(idx' → logprob: -11.16032886505127
    5. '[idx' → logprob: -12.16032886505127
    6. '	idx' → logprob: -12.41032886505127
    7. ' ' → logprob: -13.03532886505127
    8. ' t' → logprob: -13.41032886505127
    9. '2' → logprob: -13.53532886505127
    10. '1' → logprob: -13.53532886505127

Token 123: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.602024900028482e-05
    2. ' +' → logprob: -9.375085830688477
    3. '+
' → logprob: -14.750085830688477
    4. '1' → logprob: -15.125085830688477
    5. ')+' → logprob: -16.250085830688477
    6. '<|end|>' → logprob: -16.500085830688477
    7. '+)' → logprob: -16.625085830688477
    8. '2' → logprob: -16.875085830688477
    9. '<|end|>' → logprob: -17.750085830688477
    10. ')' → logprob: -17.750085830688477

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011856284982059151
    2. '2' → logprob: -9.250118255615234
    3. ' ' → logprob: -11.375118255615234
    4. '+' → logprob: -11.500118255615234
    5. '   ' → logprob: -16.000118255615234
    6. '```' → logprob: -16.062618255615234
    7. ')' → logprob: -16.937618255615234
    8. '-' → logprob: -17.500118255615234
    9. '...' → logprob: -17.625118255615234
    10. '  ' → logprob: -17.687618255615234

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010661551496014
    2. ' if' → logprob: -7.001066207885742
    3. 'if' → logprob: -9.126066207885742
    4. ' )' → logprob: -10.126066207885742
    5. '       ' → logprob: -13.751066207885742
    6. ')
' → logprob: -14.001066207885742
    7. '           ' → logprob: -14.001066207885742
    8. '   ' → logprob: -14.876066207885742
    9. '0' → logprob: -15.126066207885742
    10. '))' → logprob: -15.251066207885742

Token 126: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006717974785715342
    2. 'if' → logprob: -5.006718158721924
    3. ')' → logprob: -13.631717681884766
    4. '        ' → logprob: -14.256717681884766
    5. '       ' → logprob: -15.506717681884766
    6. '           ' → logprob: -15.756717681884766
    7. '            ' → logprob: -16.256717681884766
    8. ' ' → logprob: -16.381717681884766
    9. '                ' → logprob: -16.631717681884766
    10. '          ' → logprob: -16.631717681884766

Token 127: ' c' (ID: 274)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.16117751598358154
    2. 't' → logprob: -1.9111775159835815
    3. 'c' → logprob: -7.536177635192871
    4. ' c' → logprob: -7.786177635192871
    5. ' ' → logprob: -13.036177635192871
    6. '    ' → logprob: -14.536177635192871
    7. '(t' → logprob: -15.661177635192871
    8. '   ' → logprob: -15.661177635192871
    9. '`t' → logprob: -15.661177635192871
    10. ' ' → logprob: -15.911177635192871

Token 128: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931858658790588
    2. ' ==' → logprob: -0.6931858658790588
    3. '[' → logprob: -10.568185806274414
    4. '=' → logprob: -12.443185806274414
    5. ' ' → logprob: -12.818185806274414
    6. '==
' → logprob: -13.443185806274414
    7. ']==' → logprob: -13.693185806274414
    8. '[]' → logprob: -13.818185806274414
    9. ']' → logprob: -14.318185806274414
    10. ')' → logprob: -14.318185806274414

Token 129: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17976483702659607
    2. ' t' → logprob: -1.8047648668289185
    3. ' ' → logprob: -12.429764747619629
    4. 'trip' → logprob: -12.929764747619629
    5. '	t' → logprob: -13.179764747619629
    6. '`t' → logprob: -13.179764747619629
    7. '<|end|>' → logprob: -13.554764747619629
    8. '[' → logprob: -13.554764747619629
    9. '   ' → logprob: -13.929764747619629
    10. ')t' → logprob: -14.179764747619629

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012725738633889705
    2. '2' → logprob: -9.000126838684082
    3. ' [' → logprob: -13.750126838684082
    4. '```' → logprob: -14.250126838684082
    5. '[
' → logprob: -14.500126838684082
    6. '(' → logprob: -15.125126838684082
    7. '][' → logprob: -15.250126838684082
    8. ' ' → logprob: -15.375126838684082
    9. '   ' → logprob: -15.500126838684082
    10. ']' → logprob: -16.1251277923584

Token 131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.625012397766113
    3. '1' → logprob: -13.875012397766113
    4. '0' → logprob: -14.375012397766113
    5. '[' → logprob: -14.500012397766113
    6. '```' → logprob: -15.437512397766113
    7. '
' → logprob: -15.750012397766113
    8. '-' → logprob: -15.812512397766113
    9. '   ' → logprob: -15.875012397766113
    10. ']' → logprob: -16.250011444091797

Token 132: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.035760313272476196
    2. ')' → logprob: -3.7857604026794434
    3. '))' → logprob: -4.660760402679443
    4. '):' → logprob: -6.535760402679443
    5. '])
' → logprob: -7.035760402679443
    6. ')]' → logprob: -8.160759925842285
    7. ')
' → logprob: -9.035759925842285
    8. ']):' → logprob: -9.535759925842285
    9. ')])' → logprob: -10.285759925842285
    10. ']))' → logprob: -10.285759925842285

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005580098368227482
    2. '   ' → logprob: -5.880579948425293
    3. ')' → logprob: -6.005579948425293
    4. ' except' → logprob: -9.255579948425293
    5. 'except' → logprob: -9.505579948425293
    6. '           ' → logprob: -10.255579948425293
    7. ',' → logprob: -10.630579948425293
    8. '	' → logprob: -10.630579948425293
    9. ' return' → logprob: -11.255579948425293
    10. 'return' → logprob: -11.380579948425293

Token 134: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08049231022596359
    2. 'return' (adapté à ' return') → logprob: -2.5804922580718994
    3. ' return' → logprob: -7.3304924964904785
    4. '   ' → logprob: -7.3304924964904785
    5. 'except' → logprob: -8.45549201965332
    6. ')' → logprob: -10.70549201965332
    7. '           ' → logprob: -10.83049201965332
    8. '	return' → logprob: -11.45549201965332
    9. '	' → logprob: -12.08049201965332
    10. ' except' → logprob: -12.33049201965332

Token 135: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033581978641450405
    2. ' True' → logprob: -8.000335693359375
    3. 'idx' → logprob: -15.125335693359375
    4. 't' → logprob: -17.375335693359375
    5. '(True' → logprob: -17.500335693359375
    6. '   ' → logprob: -17.625335693359375
    7. '1' → logprob: -18.625335693359375
    8. 'False' → logprob: -19.500335693359375
    9. 'true' → logprob: -20.750335693359375
    10. ' idx' → logprob: -20.875335693359375

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06997500360012054
    2. '       ' → logprob: -2.819974899291992
    3. 'except' → logprob: -5.194974899291992
    4. ' except' → logprob: -6.319974899291992
    5. '
' → logprob: -8.569974899291992
    6. '    
' → logprob: -8.944974899291992
    7. '	except' → logprob: -9.194974899291992
    8. '           ' → logprob: -9.569974899291992
    9. '	' → logprob: -9.944974899291992
    10. ' else' → logprob: -10.569974899291992

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033591510728001595
    2. 'except' → logprob: -5.878359317779541
    3. '       ' → logprob: -7.753359317779541
    4. ' except' → logprob: -9.253358840942383
    5. '	except' → logprob: -10.628358840942383
    6. 'def' → logprob: -13.503358840942383
    7. '	' → logprob: -14.003358840942383
    8. '   ' → logprob: -14.128358840942383
    9. '           ' → logprob: -14.753358840942383
    10. '	   ' → logprob: -15.003358840942383

Token 138: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16271471977233887
    2. 'except' (adapté à ' except') → logprob: -1.9127147197723389
    3. ' except' → logprob: -6.162714958190918
    4. '	except' → logprob: -7.912714958190918
    5. '       ' → logprob: -12.037714958190918
    6. 'def' → logprob: -12.662714958190918
    7. 'return' → logprob: -13.287714958190918
    8. ' ' → logprob: -13.412714958190918
    9. '  ' → logprob: -14.287714958190918
    10. ',' → logprob: -14.287714958190918

Token 139: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.0002614550176076591
    2. ' Stop' → logprob: -8.250261306762695
    3. '_Stop' → logprob: -16.625261306762695
    4. 'Index' → logprob: -17.000261306762695
    5. 'Value' → logprob: -18.000261306762695
    6. '.Stop' → logprob: -19.625261306762695
    7. '_stop' → logprob: -19.875261306762695
    8. 'Stopping' → logprob: -20.000261306762695
    9. 'STOP' → logprob: -20.125261306762695
    10. 'Stops' → logprob: -20.750261306762695

Token 140: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -2.935296834039036e-06
    2. 'Iterator' → logprob: -13.37500286102295
    3. 'iteration' → logprob: -13.62500286102295
    4. 'Iter' → logprob: -16.750003814697266
    5. ' iteration' → logprob: -17.125003814697266
    6. '_iteration' → logprob: -17.250003814697266
    7. 'Traversal' → logprob: -17.375003814697266
    8. 'Async' → logprob: -17.875003814697266
    9. 'Iterations' → logprob: -19.000003814697266
    10. 'Exception' → logprob: -19.500003814697266

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021966483909636736
    2. ':
' → logprob: -6.127196788787842
    3. ':return' → logprob: -11.877196311950684
    4. '):' → logprob: -12.627196311950684
    5. '():' → logprob: -14.627196311950684
    6. ' :' → logprob: -15.127196311950684
    7. '   ' → logprob: -15.502196311950684
    8. '):
' → logprob: -16.502197265625
    9. '(True' → logprob: -17.127197265625
    10. 'True' → logprob: -17.127197265625

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00828642025589943
    2. '   ' → logprob: -5.008286476135254
    3. ' return' → logprob: -6.758286476135254
    4. 'return' → logprob: -9.008286476135254
    5. 'False' → logprob: -9.008286476135254
    6. ' False' → logprob: -9.258286476135254
    7. ' ' → logprob: -11.133286476135254
    8. '	' → logprob: -11.258286476135254
    9. '	return' → logprob: -11.883286476135254
    10. '           ' → logprob: -12.008286476135254

Token 143: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014221679419279099
    2. 'False' → logprob: -4.514221668243408
    3. ' return' → logprob: -5.764221668243408
    4. '   ' → logprob: -11.389222145080566
    5. ' False' → logprob: -11.389222145080566
    6. '       ' → logprob: -12.389222145080566
    7. 'false' → logprob: -12.764222145080566
    8. '	return' → logprob: -14.264222145080566
    9. '
' → logprob: -15.264222145080566
    10. 'pass' → logprob: -15.389222145080566

Token 144: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009114635176956654
    2. ' False' → logprob: -7.000911235809326
    3. '(False' → logprob: -20.625911712646484
    4. 'True' → logprob: -20.875911712646484
    5. 'None' → logprob: -22.375911712646484
    6. '=False' → logprob: -22.750911712646484
    7. 'false' → logprob: -23.375911712646484
    8. '_false' → logprob: -24.000911712646484
    9. 'FALSE' → logprob: -25.625911712646484
    10. 'F' → logprob: -25.625911712646484

Token 145: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6251487135887146
    2. 'for' → logprob: -2.0001487731933594
    3. ':' → logprob: -2.1251487731933594
    4. ' 
' → logprob: -2.6251487731933594
    5. ')' → logprob: -3.3751487731933594
    6. ' for' → logprob: -4.000148773193359
    7. '  
' → logprob: -4.125148773193359
    8. ':
' → logprob: -4.250148773193359
    9. '\n' → logprob: -4.625148773193359
    10. 'def' → logprob: -4.750148773193359

Token 146: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0033305182587355375
    2. 'print' → logprob: -6.378330707550049
    3. 'result' → logprob: -7.503330707550049
    4. 'missing' → logprob: -7.753330707550049
    5. 'answer' → logprob: -8.12833023071289
    6. 'res' → logprob: -8.50333023071289
    7. 'ans' → logprob: -9.62833023071289
    8. 'unused' → logprob: -11.00333023071289
    9. 'found' → logprob: -11.00333023071289
    10. 'trip' → logprob: -11.25333023071289

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04995296522974968
    2. '=' → logprob: -3.174952983856201
    3. '_' → logprob: -5.049952983856201
    4. ' ' → logprob: -7.674952983856201
    5. ')' → logprob: -10.424952507019043
    6. 's' → logprob: -12.424952507019043
    7. ' =
' → logprob: -12.674952507019043
    8. '_=' → logprob: -12.674952507019043
    9. '(' → logprob: -12.924952507019043
    10. 'space' → logprob: -13.049952507019043

Token 148: ' sum' (ID: 4215)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.005289373453706503
    2. ' next' → logprob: -5.255289554595947
    3. '[next' → logprob: -10.505289077758789
    4. 'min' → logprob: -11.755289077758789
    5. '(next' → logprob: -12.380289077758789
    6. 'list' → logprob: -12.380289077758789
    7. '''.' → logprob: -12.380289077758789
    8. '''' → logprob: -12.755289077758789
    9. '[' → logprob: -13.005289077758789
    10. 'first' → logprob: -14.630289077758789

Token 149: '(map' (ID: 16946)
  Prédit: '(tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.3159354329109192
    2. '(' → logprob: -1.3159353733062744
    3. '(map' → logprob: -5.9409356117248535
    4. '(t' → logprob: -10.690935134887695
    5. '(int' → logprob: -11.940935134887695
    6. '((' → logprob: -12.440935134887695
    7. '([' → logprob: -12.565935134887695
    8. 'trip' → logprob: -13.940935134887695
    9. '(tuple' → logprob: -14.190935134887695
    10. '(not' → logprob: -14.440935134887695

Token 150: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.04919164255261421
    2. '(lambda' → logprob: -3.04919171333313
    3. '(int' → logprob: -7.799191474914551
    4. '(' → logprob: -8.79919147491455
    5. 'trip' → logprob: -10.17419147491455
    6. 'lambda' → logprob: -12.92419147491455
    7. '((' → logprob: -13.79919147491455
    8. 'int' → logprob: -14.04919147491455
    9. '(t' → logprob: -15.42419147491455
    10. ' trip' → logprob: -15.79919147491455

Token 151: 'ip' (ID: 488)
  Prédit: 'ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -3.650518920039758e-06
    2. 'plet' → logprob: -13.250003814697266
    3. 'trip' → logprob: -13.500003814697266
    4. 'iple' → logprob: -15.250003814697266
    5. 'ipt' → logprob: -17.000003814697266
    6. 'rip' → logprob: -17.500003814697266
    7. ' trip' → logprob: -17.875003814697266
    8. 'i' → logprob: -18.500003814697266
    9. 'ipl' → logprob: -18.500003814697266
    10. ' ip' → logprob: -18.500003814697266

Token 152: 'let' (ID: 1347)
  Prédit: 'let'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'let' → logprob: -3.054500666621607e-06
    2. 'plet' → logprob: -13.00000286102295
    3. 'trip' → logprob: -14.50000286102295
    4. 'lets' → logprob: -16.000003814697266
    5. ' trip' → logprob: -17.000003814697266
    6. 'et' → logprob: -17.500003814697266
    7. 'лет' → logprob: -17.875003814697266
    8. 't' → logprob: -19.500003814697266
    9. '(let' → logprob: -19.875003814697266
    10. 'elt' → logprob: -20.000003814697266

Token 153: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.0921942703134846e-05
    2. 'in' → logprob: -11.50001049041748
    3. 's' → logprob: -14.87501049041748
    4. 't' → logprob: -16.250011444091797
    5. ')_' → logprob: -16.250011444091797
    6. 'In' → logprob: -16.625011444091797
    7. ' _' → logprob: -17.625011444091797
    8. 'int' → logprob: -17.750011444091797
    9. '_to' → logprob: -18.125011444091797
    10. '_int' → logprob: -18.250011444091797

Token 154: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0010482928482815623
    2. 's' → logprob: -6.8760480880737305
    3. '_t' → logprob: -11.87604808807373
    4. 't' → logprob: -12.12604808807373
    5. ')' → logprob: -13.62604808807373
    6. ')_' → logprob: -14.75104808807373
    7. 'trip' → logprob: -14.87604808807373
    8. '(s' → logprob: -15.75104808807373
    9. '_trip' → logprob: -15.87604808807373
    10. ' _' → logprob: -16.001049041748047

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005555360112339258
    2. ' ,' → logprob: -7.500555515289307
    3. '(tr' → logprob: -13.750555992126465
    4. ',tr' → logprob: -14.250555992126465
    5. '),' → logprob: -15.250555992126465
    6. ',
' → logprob: -15.500555992126465
    7. 'trip' → logprob: -16.25055503845215
    8. '(),' → logprob: -16.50055503845215
    9. '(' → logprob: -16.75055503845215
    10. ',(' → logprob: -17.12555503845215

Token 156: ' trip' (ID: 8831)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.00043353010551072657
    2. ' trip' → logprob: -7.750433444976807
    3. 'list' → logprob: -13.375433921813965
    4. '   ' → logprob: -14.125433921813965
    5. 'tr' → logprob: -15.500433921813965
    6. ')' → logprob: -15.625433921813965
    7. ' ' → logprob: -16.37543296813965
    8. 'trap' → logprob: -17.62543296813965
    9. '.trip' → logprob: -17.87543296813965
    10. 'trim' → logprob: -18.12543296813965

Token 157: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -1.6405310816480778e-05
    2. 'ets' → logprob: -11.125016212463379
    3. 'let' → logprob: -13.375016212463379
    4. 'plets' → logprob: -16.875017166137695
    5. 'elts' → logprob: -17.000017166137695
    6. 'its' → logprob: -17.625017166137695
    7. 'sets' → logprob: -18.125017166137695
    8. 'ts' → logprob: -18.875017166137695
    9. 'Lets' → logprob: -18.875017166137695
    10. 'ots' → logprob: -19.250017166137695

Token 158: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011049000546336174
    2. ')' → logprob: -4.511048793792725
    3. '))
' → logprob: -14.386049270629883
    4. ')))' → logprob: -14.386049270629883
    5. '),' → logprob: -17.011049270629883
    6. ')
' → logprob: -17.136049270629883
    7. ' ))' → logprob: -17.386049270629883
    8. '})' → logprob: -19.136049270629883
    9. '))

' → logprob: -19.261049270629883
    10. '])' → logprob: -19.886049270629883

Token 159: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015375682152807713
    2. ')' → logprob: -4.64037561416626
    3. '
' → logprob: -5.26537561416626
    4. ' print' → logprob: -8.140376091003418
    5. '<|end|>' → logprob: -9.765376091003418
    6. '\n' → logprob: -10.265376091003418
    7. ')
' → logprob: -10.390376091003418
    8. '#print' → logprob: -12.390376091003418
    9. '```' → logprob: -12.640376091003418
    10. '#' → logprob: -12.640376091003418

Token 160: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.3132747709751129
    2. '(' → logprob: -1.3132747411727905
    3. 'result' → logprob: -12.438274383544922
    4. '()' → logprob: -13.188274383544922
    5. '((' → logprob: -13.563274383544922
    6. ' (' → logprob: -13.563274383544922
    7. '(
' → logprob: -13.688274383544922
    8. '('' → logprob: -14.188274383544922
    9. '("("' → logprob: -14.188274383544922
    10. '(results' → logprob: -14.438274383544922

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. '))' → logprob: -12.125005722045898
    3. ' )' → logprob: -14.750005722045898
    4. ')`' → logprob: -15.375005722045898
    5. ')
' → logprob: -16.2500057220459
    6. '()' → logprob: -17.7500057220459
    7. '())' → logprob: -18.1250057220459
    8. '`)' → logprob: -18.1250057220459
    9. ')))' → logprob: -18.7500057220459
    10. '(' → logprob: -19.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 159
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 90
Tokens correctement prédits (top 10): 136
Précision stricte (1ère position): 55.35%
Précision adaptée (1ère position): 56.60%
Précision (top 10): 85.53%
================================================================================
