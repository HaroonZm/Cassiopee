================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools
cnt = 0
n = int(input())
p_list = list(map(int, input().split()))
q_list = list(map(int, input().split()))
combination = list(itertools.permutations(range(1, n+1)))
p_i = -1
q_i = -1
for idx in range(len(combination)):
    cur = list(combination[idx])
    if cur == p_list:
        p_i = idx
    if cur == q_list:
        q_i = idx
print(abs(p_i - q_i))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'cnt' (ID: 33160)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.8921695047756657e-05
    2. '\' → logprob: -12.625028610229492
    3. '```' → logprob: -12.625028610229492
    4. 'import' → logprob: -13.250028610229492
    5. '.period' → logprob: -13.250028610229492
    6. '."""' → logprob: -13.375028610229492
    7. '.​' → logprob: -13.500028610229492
    8. '.experimental' → logprob: -13.500028610229492
    9. '(' → logprob: -13.625028610229492
    10. '​.' → logprob: -13.750028610229492

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7927778959274292
    2. 'er' → logprob: -1.2927778959274292
    3. '.' → logprob: -1.9177778959274292
    4. '=' → logprob: -3.0427780151367188
    5. '[' → logprob: -3.5427780151367188
    6. 'ertools' → logprob: -3.6677780151367188
    7. '_' → logprob: -5.417778015136719
    8. 'ent' → logprob: -5.417778015136719
    9. '(.)' → logprob: -6.417778015136719
    10. ' =' → logprob: -6.792778015136719

Token 5: ' ' (ID: 220)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.022451400756835938
    2. ' ' → logprob: -4.647451400756836
    3. 'it' → logprob: -5.022451400756836
    4. '0' → logprob: -5.272451400756836
    5. '1' → logprob: -7.147451400756836
    6. '10' → logprob: -10.897451400756836
    7. ' iter' → logprob: -10.897451400756836
    8. ' it' → logprob: -11.022451400756836
    9. '100' → logprob: -11.522451400756836
    10. 'iter' → logprob: -11.647451400756836

Token 6: '0' (ID: 15)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.07108180969953537
    2. '0' → logprob: -2.8210818767547607
    3. '1' → logprob: -4.946081638336182
    4. '10' → logprob: -6.946081638336182
    5. '100' → logprob: -8.32108211517334
    6. '5' → logprob: -8.94608211517334
    7. '3' → logprob: -9.44608211517334
    8. 'sum' → logprob: -9.44608211517334
    9. ' itertools' → logprob: -9.57108211517334
    10. 'int' → logprob: -9.82108211517334

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7308157086372375
    2. 'for' → logprob: -1.2308156490325928
    3. ',' → logprob: -2.1058156490325928
    4. '(' → logprob: -3.1058156490325928
    5. '=' → logprob: -3.7308156490325928
    6. '\' → logprob: -4.855815887451172
    7. '+' → logprob: -5.105815887451172
    8. '*' → logprob: -5.230815887451172
    9. '#' → logprob: -5.730815887451172
    10. 'import' → logprob: -5.855815887451172

Token 8: 'n' (ID: 77)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6749116778373718
    2. '.' → logprob: -0.7999116778373718
    3. '(' → logprob: -3.5499117374420166
    4. ',' → logprob: -5.0499114990234375
    5. '\' → logprob: -6.1749114990234375
    6. ' for' → logprob: -6.5499114990234375
    7. '.for' → logprob: -7.5499114990234375
    8. '```' → logprob: -7.6749114990234375
    9. '*' → logprob: -7.7999114990234375
    10. ':' → logprob: -8.174911499023438

Token 9: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8695423603057861
    2. ' =' → logprob: -1.2445423603057861
    3. ' ' → logprob: -1.9945423603057861
    4. '=' → logprob: -2.744542360305786
    5. 'u' → logprob: -3.994542360305786
    6. ',' → logprob: -4.119542121887207
    7. 't' → logprob: -4.369542121887207
    8. '.' → logprob: -4.994542121887207
    9. '   ' → logprob: -5.119542121887207
    10. 'o' → logprob: -5.244542121887207

Token 10: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06509247422218323
    2. '5' → logprob: -3.1900925636291504
    3. '10' → logprob: -4.06509256362915
    4. '3' → logprob: -6.31509256362915
    5. '0' → logprob: -7.19009256362915
    6. '4' → logprob: -7.31509256362915
    7. '1' → logprob: -7.94009256362915
    8. ' itertools' → logprob: -7.94009256362915
    9. '20' → logprob: -8.815092086791992
    10. '7' → logprob: -9.440092086791992

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005772201111540198
    2. '('' → logprob: -7.875577449798584
    3. ''' → logprob: -9.000576972961426
    4. '```' → logprob: -11.000576972961426
    5. '`' → logprob: -11.875576972961426
    6. '(
' → logprob: -12.000576972961426
    7. '()' → logprob: -12.125576972961426
    8. '32' → logprob: -12.250576972961426
    9. ' (' → logprob: -12.250576972961426
    10. '"' → logprob: -12.375576972961426

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5767855048179626
    2. '(' → logprob: -1.2017855644226074
    3. '()' → logprob: -2.0767855644226074
    4. '())' → logprob: -4.701785564422607
    5. '))' → logprob: -6.701785564422607
    6. '('' → logprob: -7.576785564422607
    7. '')' → logprob: -7.826785564422607
    8. '")' → logprob: -8.07678508758545
    9. '(
' → logprob: -8.20178508758545
    10. ''' → logprob: -9.20178508758545

Token 13: 'p' (ID: 79)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04831899702548981
    2. ' for' → logprob: -3.923319101333618
    3. '
' → logprob: -4.173318862915039
    4. '\n' → logprob: -4.798318862915039
    5. ':' → logprob: -6.548318862915039
    6. '```' → logprob: -7.423318862915039
    7. '\' → logprob: -7.923318862915039
    8. ')' → logprob: -7.923318862915039
    9. '(' → logprob: -8.798318862915039
    10. '' → logprob: -8.923318862915039

Token 14: '_list' (ID: 4162)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03891580551862717
    2. 'erm' → logprob: -3.9139158725738525
    3. 'e' → logprob: -5.163915634155273
    4. 'er' → logprob: -5.538915634155273
    5. 'ermut' → logprob: -5.913915634155273
    6. '=' → logprob: -6.913915634155273
    7. 'range' → logprob: -6.913915634155273
    8. 'i' → logprob: -7.163915634155273
    9. ' =' → logprob: -7.413915634155273
    10. 'ro' → logprob: -7.538915634155273

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.437048077583313
    2. ' =' → logprob: -1.187048077583313
    3. '.' → logprob: -3.5620479583740234
    4. '[' → logprob: -4.062047958374023
    5. '[:]' → logprob: -5.937047958374023
    6. ')' → logprob: -8.562047958374023
    7. '.append' → logprob: -9.437047958374023
    8. ',' → logprob: -9.437047958374023
    9. '_' → logprob: -9.562047958374023
    10. '=[]' → logprob: -9.937047958374023

Token 16: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1793576180934906
    2. '[list' → logprob: -2.9293575286865234
    3. 'it' → logprob: -3.4293575286865234
    4. ' list' → logprob: -3.5543575286865234
    5. '[]' → logprob: -3.6793575286865234
    6. '[' → logprob: -4.804357528686523
    7. '[it' → logprob: -4.804357528686523
    8. ' [' → logprob: -5.804357528686523
    9. ' itertools' → logprob: -6.179357528686523
    10. ' []' → logprob: -6.554357528686523

Token 17: '(map' (ID: 16946)
  Prédit: '(it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.023294392973184586
    2. '(' → logprob: -3.773294448852539
    3. '(iter' → logprob: -10.898294448852539
    4. '(range' → logprob: -11.523294448852539
    5. ' itertools' → logprob: -12.648294448852539
    6. '(chain' → logprob: -12.648294448852539
    7. '(filter' → logprob: -12.773294448852539
    8. '(map' → logprob: -12.773294448852539
    9. '(en' → logprob: -13.398294448852539
    10. '(.' → logprob: -13.648294448852539

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10318421572446823
    2. '(' → logprob: -2.603184223175049
    3. '(lambda' → logprob: -4.103184223175049
    4. '(str' → logprob: -5.103184223175049
    5. 'int' → logprob: -7.228184223175049
    6. '(input' → logprob: -8.47818374633789
    7. '[int' → logprob: -9.22818374633789
    8. '(eval' → logprob: -9.85318374633789
    9. '<int' → logprob: -10.10318374633789
    10. ')' → logprob: -10.60318374633789

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.14458081126213074
    2. '(' → logprob: -2.394580841064453
    3. ',input' → logprob: -4.019580841064453
    4. '))' → logprob: -4.144580841064453
    5. 'input' → logprob: -5.644580841064453
    6. ',' → logprob: -5.894580841064453
    7. ')' → logprob: -6.269580841064453
    8. '=input' → logprob: -8.769580841064453
    9. '),' → logprob: -8.894580841064453
    10. '(n' → logprob: -9.019580841064453

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03815911337733269
    2. ' input' → logprob: -3.288159132003784
    3. '(input' → logprob: -9.538159370422363
    4. ')' → logprob: -11.163159370422363
    5. ',input' → logprob: -11.163159370422363
    6. 'range' → logprob: -11.663159370422363
    7. '=input' → logprob: -13.038159370422363
    8. '	input' → logprob: -13.288159370422363
    9. ' ' → logprob: -13.413159370422363
    10. '))' → logprob: -14.288159370422363

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00967876985669136
    2. '()' → logprob: -5.759678840637207
    3. '()))' → logprob: -5.759678840637207
    4. '(' → logprob: -5.884678840637207
    5. '())' → logprob: -7.884678840637207
    6. '()));' → logprob: -9.759678840637207
    7. '))' → logprob: -10.009678840637207
    8. ')' → logprob: -10.384678840637207
    9. '())))' → logprob: -11.884678840637207
    10. '(),' → logprob: -12.384678840637207

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004994167247787118
    2. 'strip' → logprob: -7.625499248504639
    3. 'rstrip' → logprob: -11.750499725341797
    4. ' split' → logprob: -12.875499725341797
    5. '(split' → logprob: -14.500499725341797
    6. 'spl' → logprob: -15.625499725341797
    7. 's' → logprob: -15.875499725341797
    8. ')' → logprob: -16.375499725341797
    9. '.split' → logprob: -16.875499725341797
    10. 'replace' → logprob: -17.125499725341797

Token 23: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7888968586921692
    2. ')' → logprob: -1.7888967990875244
    3. '()))' → logprob: -1.7888967990875244
    4. '(' → logprob: -1.9138967990875244
    5. '())' → logprob: -3.0388967990875244
    6. '('' → logprob: -4.6638970375061035
    7. '()' → logprob: -5.6638970375061035
    8. ')))' → logprob: -6.7888970375061035
    9. ''))' → logprob: -7.2888970375061035
    10. '(
' → logprob: -8.413896560668945

Token 24: 'q' (ID: 80)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8527615070343018
    2. '
' → logprob: -1.1027615070343018
    3. 'for' → logprob: -1.8527615070343018
    4. ' for' → logprob: -3.6027615070343018
    5. ' 
' → logprob: -4.477761268615723
    6. '\' → logprob: -4.602761268615723
    7. '  
' → logprob: -4.727761268615723
    8. '<|end|>' → logprob: -5.102761268615723
    9. '.' → logprob: -5.602761268615723
    10. '[' → logprob: -5.727761268615723

Token 25: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.008539512753486633
    2. '_' → logprob: -5.25853967666626
    3. ' =' → logprob: -5.88353967666626
    4. '=' → logprob: -8.008539199829102
    5. '=_' → logprob: -9.383539199829102
    6. ' _' → logprob: -10.008539199829102
    7. '_lst' → logprob: -11.008539199829102
    8. '_=' → logprob: -11.258539199829102
    9. 's' → logprob: -12.258539199829102
    10. 'u' → logprob: -13.258539199829102

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06993932276964188
    2. '=' → logprob: -2.694939374923706
    3. ' =)' → logprob: -14.319939613342285
    4. '[' → logprob: -14.569939613342285
    5. ')' → logprob: -14.944939613342285
    6. '_' → logprob: -15.319939613342285
    7. '.' → logprob: -15.319939613342285
    8. ',' → logprob: -15.444939613342285
    9. ' ' → logprob: -15.569939613342285
    10. ' =[' → logprob: -15.819939613342285

Token 27: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10021066665649414
    2. ' list' → logprob: -2.350210666656494
    3. '(list' → logprob: -12.600210189819336
    4. '=list' → logprob: -15.475210189819336
    5. '[list' → logprob: -15.975210189819336
    6. 'map' → logprob: -16.225210189819336
    7. '	list' → logprob: -17.225210189819336
    8. '[' → logprob: -17.225210189819336
    9. 'List' → logprob: -17.350210189819336
    10. 'sorted' → logprob: -17.600210189819336

Token 28: '(map' (ID: 16946)
  Prédit: '(it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.28438714146614075
    2. '(' → logprob: -1.7843871116638184
    3. '(map' → logprob: -2.5343871116638184
    4. '(.' → logprob: -9.409387588500977
    5. ' (' → logprob: -10.159387588500977
    6. '(list' → logprob: -10.409387588500977
    7. '.' → logprob: -10.409387588500977
    8. '(range' → logprob: -10.659387588500977
    9. '(iter' → logprob: -10.909387588500977
    10. ' itertools' → logprob: -11.159387588500977

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00015359772078227252
    2. 'int' → logprob: -9.000153541564941
    3. '=int' → logprob: -11.375153541564941
    4. '<int' → logprob: -11.750153541564941
    5. '[int' → logprob: -12.250153541564941
    6. '(' → logprob: -12.750153541564941
    7. ',int' → logprob: -13.250153541564941
    8. '```' → logprob: -14.750153541564941
    9. ']int' → logprob: -15.000153541564941
    10. '(lambda' → logprob: -15.750153541564941

Token 30: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.028137069195508957
    2. ',int' → logprob: -3.653136968612671
    3. ',' → logprob: -6.52813720703125
    4. 'int' → logprob: -8.15313720703125
    5. '=int' → logprob: -10.02813720703125
    6. '<int' → logprob: -11.02813720703125
    7. '[int' → logprob: -11.77813720703125
    8. '(' → logprob: -12.52813720703125
    9. '(input' → logprob: -12.77813720703125
    10. ':int' → logprob: -13.02813720703125

Token 31: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07132182270288467
    2. 'input' → logprob: -2.946321725845337
    3. ' int' → logprob: -4.696321964263916
    4. ' input' → logprob: -4.946321964263916
    5. '(int' → logprob: -9.696321487426758
    6. ' ' → logprob: -13.821321487426758
    7. '[int' → logprob: -13.946321487426758
    8. '(input' → logprob: -14.071321487426758
    9. '=int' → logprob: -14.696321487426758
    10. ',int' → logprob: -14.696321487426758

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.022525886073708534
    2. '()' → logprob: -3.8975257873535156
    3. '()))' → logprob: -6.522525787353516
    4. '(' → logprob: -8.397525787353516
    5. '())' → logprob: -8.522525787353516
    6. '))' → logprob: -11.022525787353516
    7. '(int' → logprob: -11.147525787353516
    8. '()-' → logprob: -11.647525787353516
    9. '()(' → logprob: -11.647525787353516
    10. '()));' → logprob: -12.147525787353516

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -15.000000953674316
    3. ' split' → logprob: -15.250000953674316
    4. '(split' → logprob: -15.750000953674316
    5. 'spl' → logprob: -17.25
    6. 'strip' → logprob: -18.0
    7. 'plit' → logprob: -18.5
    8. '.split' → logprob: -19.125
    9. '))' → logprob: -19.625
    10. 'rstrip' → logprob: -19.625

Token 34: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07567816972732544
    2. '))' → logprob: -2.9506781101226807
    3. '())' → logprob: -4.20067834854126
    4. '()' → logprob: -5.32567834854126
    5. ')' → logprob: -7.32567834854126
    6. '(' → logprob: -10.575677871704102
    7. '()))
' → logprob: -10.575677871704102
    8. '()));' → logprob: -11.575677871704102
    9. '()))

' → logprob: -12.950677871704102
    10. '())).' → logprob: -13.575677871704102

Token 35: 'comb' (ID: 43606)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03847380727529526
    2. 'p' → logprob: -4.538473606109619
    3. 'per' → logprob: -4.913473606109619
    4. 'all' → logprob: -4.913473606109619
    5. 'pos' → logprob: -6.163473606109619
    6. 'a' → logprob: -6.913473606109619
    7. 'import' → logprob: -6.913473606109619
    8. ' for' → logprob: -7.038473606109619
    9. 'positions' → logprob: -7.038473606109619
    10. 'com' → logprob: -7.163473606109619

Token 36: 'ination' (ID: 3273)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.8432496190071106
    2. '=' → logprob: -1.0932495594024658
    3. 's' → logprob: -2.343249559402466
    4. ' =' → logprob: -2.718249559402466
    5. 'os' → logprob: -3.593249559402466
    6. 'in' → logprob: -3.718249559402466
    7. '(' → logprob: -4.843249797821045
    8. 'ination' → logprob: -5.343249797821045
    9. '=os' → logprob: -6.468249797821045
    10. '(in' → logprob: -7.218249797821045

Token 37: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004450296983122826
    2. '(' → logprob: -5.50445032119751
    3. '_s' → logprob: -8.754449844360352
    4. '(s' → logprob: -8.754449844360352
    5. ' =' → logprob: -10.879449844360352
    6. '=' → logprob: -11.754449844360352
    7. '('' → logprob: -12.129449844360352
    8. '_' → logprob: -12.504449844360352
    9. ' s' → logprob: -12.504449844360352
    10. ' (' → logprob: -12.754449844360352

Token 38: ' list' (ID: 1562)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.16062763333320618
    2. 'list' → logprob: -1.9106276035308838
    3. '(it' → logprob: -9.035627365112305
    4. 'range' → logprob: -9.285627365112305
    5. ' itertools' → logprob: -9.285627365112305
    6. 'sorted' → logprob: -9.910627365112305
    7. '[it' → logprob: -10.910627365112305
    8. ' list' → logprob: -10.910627365112305
    9. '(list' → logprob: -12.535627365112305
    10. '[list' → logprob: -13.160627365112305

Token 39: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.008618827909231186
    2. '(' → logprob: -4.7586188316345215
    3. '(iter' → logprob: -14.133618354797363
    4. ' itertools' → logprob: -14.133618354797363
    5. 'it' → logprob: -14.258618354797363
    6. '(.' → logprob: -14.508618354797363
    7. '(list' → logprob: -14.883618354797363
    8. '(ent' → logprob: -15.883618354797363
    9. '(

' → logprob: -16.25861930847168
    10. '(en' → logprob: -16.38361930847168

Token 40: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.00024953833781182766
    2. 'ert' → logprob: -8.500249862670898
    3. 'er' → logprob: -10.500249862670898
    4. 'tools' → logprob: -11.125249862670898
    5. 'r' → logprob: -12.750249862670898
    6. 'erto' → logprob: -15.000249862670898
    7. 'ools' → logprob: -16.5002498626709
    8. 'rit' → logprob: -17.0002498626709
    9. 're' → logprob: -17.2502498626709
    10. 'ertu' → logprob: -17.2502498626709

Token 41: '.per' (ID: 18361)
  Prédit: '.per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.per' → logprob: -0.00947649497538805
    2. '.com' → logprob: -4.884476661682129
    3. ' .' → logprob: -6.634476661682129
    4. '.' → logprob: -8.134476661682129
    5. '.product' → logprob: -9.009476661682129
    6. ' permutations' → logprob: -9.509476661682129
    7. 'per' → logprob: -9.759476661682129
    8. ').' → logprob: -13.509476661682129
    9. '```' → logprob: -13.634476661682129
    10. '.p' → logprob: -13.759476661682129

Token 42: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.002841491252183914
    2. 'utations' → logprob: -5.877841472625732
    3. '```' → logprob: -11.12784194946289
    4. 'mu' → logprob: -12.37784194946289
    5. 'amut' → logprob: -12.37784194946289
    6. 'ut' → logprob: -12.50284194946289
    7. 'ermut' → logprob: -13.37784194946289
    8. 'm' → logprob: -13.62784194946289
    9. 'binations' → logprob: -13.87784194946289
    10. '``' → logprob: -14.25284194946289

Token 43: 'ations' (ID: 929)
  Prédit: 'utations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utations' → logprob: -0.20452429354190826
    2. 'ations' → logprob: -1.704524278640747
    3. 'ut' → logprob: -6.329524517059326
    4. 't' → logprob: -7.079524517059326
    5. 'utions' → logprob: -8.704524040222168
    6. 'tools' → logprob: -9.079524040222168
    7. 'u' → logprob: -9.204524040222168
    8. 'mut' → logprob: -10.204524040222168
    9. 'tool' → logprob: -11.454524040222168
    10. 's' → logprob: -11.579524040222168

Token 44: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.3871237635612488
    2. '(p' → logprob: -1.1371238231658936
    3. '(' → logprob: -8.762124061584473
    4. '(list' → logprob: -10.262124061584473
    5. '(sorted' → logprob: -10.262124061584473
    6. ' (' → logprob: -11.637124061584473
    7. 'range' → logprob: -11.637124061584473
    8. ' range' → logprob: -13.012124061584473
    9. '((' → logprob: -13.512124061584473
    10. '(n' → logprob: -13.637124061584473

Token 45: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005570820067077875
    2. '(n' → logprob: -7.500556945800781
    3. '1' → logprob: -12.750556945800781
    4. ' (' → logprob: -14.250556945800781
    5. 'n' → logprob: -15.875556945800781
    6. ')(' → logprob: -16.00055694580078
    7. ' ' → logprob: -16.12555694580078
    8. ')' → logprob: -17.50055694580078
    9. ' n' → logprob: -17.62555694580078
    10. ',' → logprob: -17.62555694580078

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003485677530989051
    2. 'n' → logprob: -5.753485679626465
    3. '(' → logprob: -8.128485679626465
    4. '(n' → logprob: -11.628485679626465
    5. ' ' → logprob: -12.878485679626465
    6. ' n' → logprob: -14.503485679626465
    7. '2' → logprob: -15.753485679626465
    8. '```' → logprob: -15.753485679626465
    9. '１' → logprob: -16.00348472595215
    10. '   ' → logprob: -16.25348472595215

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022293562069535255
    2. ',n' → logprob: -6.2522292137146
    3. ' ,' → logprob: -8.127229690551758
    4. 'n' → logprob: -12.877229690551758
    5. '1' → logprob: -13.127229690551758
    6. '(n' → logprob: -15.502229690551758
    7. ' n' → logprob: -16.752229690551758
    8. '(' → logprob: -16.752229690551758
    9. ',
' → logprob: -16.752229690551758
    10. ',num' → logprob: -16.752229690551758

Token 48: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.686778503237292e-05
    2. ' n' → logprob: -9.250097274780273
    3. '(n' → logprob: -14.500097274780273
    4. ')n' → logprob: -16.125097274780273
    5. '	n' → logprob: -16.500097274780273
    6. '_n' → logprob: -18.000097274780273
    7. ' ' → logprob: -18.500097274780273
    8. '<n' → logprob: -18.750097274780273
    9. ')' → logprob: -19.375097274780273
    10. '[n' → logprob: -19.500097274780273

Token 49: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026303434744477272
    2. ' +' → logprob: -3.65130352973938
    3. '+n' → logprob: -13.0263032913208
    4. '＋' → logprob: -14.1513032913208
    5. '```' → logprob: -16.401304244995117
    6. '1' → logprob: -17.026304244995117
    7. '+
' → logprob: -17.276304244995117
    8. ' ' → logprob: -17.526304244995117
    9. 'n' → logprob: -18.026304244995117
    10. ' ' → logprob: -18.276304244995117

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '2' → logprob: -16.875009536743164
    4. '```' → logprob: -17.875009536743164
    5. '   ' → logprob: -18.000009536743164
    6. '+' → logprob: -18.125009536743164
    7. '１' → logprob: -18.625009536743164
    8. '  ' → logprob: -18.875009536743164
    9. '`' → logprob: -19.500009536743164
    10. '``' → logprob: -19.562509536743164

Token 51: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.05461300536990166
    2. '))' → logprob: -3.6796131134033203
    3. ')' → logprob: -3.8046131134033203
    4. '),' → logprob: -5.17961311340332
    5. '))))' → logprob: -11.80461311340332
    6. ')));' → logprob: -12.42961311340332
    7. ')))
' → logprob: -12.92961311340332
    8. ' ' → logprob: -14.05461311340332
    9. '')))' → logprob: -14.17961311340332
    10. ')))

' → logprob: -14.92961311340332

Token 52: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07619747519493103
    2. 'pos' → logprob: -3.201197385787964
    3. 'for' → logprob: -4.451197624206543
    4. 'a' → logprob: -4.451197624206543
    5. 'idx' → logprob: -5.076197624206543
    6. 'i' → logprob: -6.951197624206543
    7. 'cnt' → logprob: -7.326197624206543
    8. 'index' → logprob: -7.576197624206543
    9. 'rank' → logprob: -8.826197624206543
    10. 'ans' → logprob: -9.201197624206543

Token 53: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10769522935152054
    2. '_list' → logprob: -2.6076953411102295
    3. '_index' → logprob: -3.9826953411102295
    4. '_idx' → logprob: -5.60769510269165
    5. '__' → logprob: -6.73269510269165
    6. '_pos' → logprob: -6.85769510269165
    7. '_comb' → logprob: -7.35769510269165
    8. '_i' → logprob: -7.60769510269165
    9. '_r' → logprob: -7.98269510269165
    10. '_s' → logprob: -8.232695579528809

Token 54: ' =' (ID: 314)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.7578410506248474
    2. '_' → logprob: -1.5078411102294922
    3. '_nd' → logprob: -2.382841110229492
    4. 'n' → logprob: -2.632841110229492
    5. 'dx' → logprob: -3.132841110229492
    6. '=' → logprob: -3.632841110229492
    7. 'd' → logprob: -4.007841110229492
    8. ' =' → logprob: -4.007841110229492
    9. '_index' → logprob: -4.132841110229492
    10. 'x' → logprob: -4.632841110229492

Token 55: ' -' (ID: 533)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.018301531672477722
    2. ' combination' → logprob: -4.018301486968994
    3. '0' → logprob: -9.018301963806152
    4. 'len' → logprob: -12.143301963806152
    5. 'com' → logprob: -12.393301963806152
    6. ' ' → logprob: -12.518301963806152
    7. 'list' → logprob: -12.893301963806152
    8. ' len' → logprob: -13.268301963806152
    9. ' comb' → logprob: -13.268301963806152
    10. ' p' → logprob: -13.393301963806152

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003422567679081112
    2. 'comb' → logprob: -8.87534236907959
    3. '-' → logprob: -9.62534236907959
    4. ' ' → logprob: -10.00034236907959
    5. 'cnt' → logprob: -10.62534236907959
    6. 'len' → logprob: -11.00034236907959
    7. '(-' → logprob: -11.75034236907959
    8. 'com' → logprob: -11.75034236907959
    9. '(' → logprob: -12.12534236907959
    10. ' combination' → logprob: -12.25034236907959

Token 57: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4051726460456848
    2. '
' → logprob: -1.15517258644104
    3. ' for' → logprob: -4.155172824859619
    4. '' → logprob: -7.655172824859619
    5. '<|end|>' → logprob: -7.655172824859619
    6. 'p' → logprob: -7.905172824859619
    7. '\n' → logprob: -8.280172348022461
    8. '
' → logprob: -8.405172348022461
    9. '1' → logprob: -9.155172348022461
    10. '0' → logprob: -9.155172348022461

Token 58: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6937766671180725
    2. 'for' → logprob: -0.6937766671180725
    3. 'p' → logprob: -7.943776607513428
    4. ' for' → logprob: -8.568777084350586
    5. '```' → logprob: -9.693777084350586
    6. 'i' → logprob: -12.068777084350586
    7. '0' → logprob: -12.693777084350586
    8. '_q' → logprob: -13.193777084350586
    9. '`' → logprob: -13.693777084350586
    10. '1' → logprob: -13.943777084350586

Token 59: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.005246329586952925
    2. '_' → logprob: -5.255246162414551
    3. ' _' → logprob: -12.38024616241455
    4. '_j' → logprob: -12.50524616241455
    5. '_a' → logprob: -14.13024616241455
    6. '_p' → logprob: -14.63024616241455
    7. '_=' → logprob: -14.63024616241455
    8. '_o' → logprob: -14.75524616241455
    9. '_n' → logprob: -14.88024616241455
    10. '_x' → logprob: -14.88024616241455

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.386880099773407
    2. '=' → logprob: -1.1368801593780518
    3. ' =
' → logprob: -12.386879920959473
    4. ' =)' → logprob: -13.386879920959473
    5. ' ' → logprob: -13.636879920959473
    6. '=

' → logprob: -14.136879920959473
    7. ')' → logprob: -15.261879920959473
    8. '＝' → logprob: -15.386879920959473
    9. ' +=' → logprob: -15.761879920959473
    10. ' ==' → logprob: -15.886879920959473

Token 61: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01815076172351837
    2. ' -' → logprob: -4.018150806427002
    3. '0' → logprob: -14.143150329589844
    4. ' ' → logprob: -16.518150329589844
    5. '-p' → logprob: -17.268150329589844
    6. '1' → logprob: -17.768150329589844
    7. '−' → logprob: -18.768150329589844
    8. '-i' → logprob: -19.893150329589844
    9. '-c' → logprob: -20.393150329589844
    10. '-s' → logprob: -20.518150329589844

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.184812031686306e-05
    2. ' ' → logprob: -9.500082015991211
    3. '2' → logprob: -12.625082015991211
    4. '0' → logprob: -13.625082015991211
    5. '```' → logprob: -15.187582015991211
    6. '１' → logprob: -15.375082015991211
    7. '`' → logprob: -15.687582015991211
    8. '   ' → logprob: -16.12508201599121
    9. 'len' → logprob: -16.18758201599121
    10. '10' → logprob: -16.18758201599121

Token 63: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12902429699897766
    2. '
' → logprob: -2.1290242671966553
    3. ' for' → logprob: -6.504024505615234
    4. '\n' → logprob: -7.754024505615234
    5. '
' → logprob: -9.004024505615234
    6. '' → logprob: -11.129024505615234
    7. '

' → logprob: -11.504024505615234
    8. '```' → logprob: -11.879024505615234
    9. '  
' → logprob: -12.629024505615234
    10. ' 
' → logprob: -12.754024505615234

Token 64: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.253090865968261e-06
    2. ' for' → logprob: -12.250009536743164
    3. '
' → logprob: -12.875009536743164
    4. '```' → logprob: -13.375009536743164
    5. '``' → logprob: -16.375009536743164
    6. '\n' → logprob: -17.375009536743164
    7. '`' → logprob: -18.000009536743164
    8. '

' → logprob: -18.500009536743164
    9. ')' → logprob: -18.750009536743164
    10. '0' → logprob: -18.875009536743164

Token 65: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5332223176956177
    2. ' i' → logprob: -0.9082223176956177
    3. 'comb' → logprob: -6.158222198486328
    4. ' combination' → logprob: -6.908222198486328
    5. ' idx' → logprob: -7.158222198486328
    6. ' comb' → logprob: -7.408222198486328
    7. ' perm' → logprob: -7.533222198486328
    8. ' combo' → logprob: -7.533222198486328
    9. 'idx' → logprob: -7.533222198486328
    10. 'perm' → logprob: -7.658222198486328

Token 66: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01940946653485298
    2. ' ,' → logprob: -4.644409656524658
    3. ' in' → logprob: -4.769409656524658
    4. 'in' → logprob: -6.894409656524658
    5. ',in' → logprob: -9.6444091796875
    6. ',p' → logprob: -11.5194091796875
    7. ',value' → logprob: -11.5194091796875
    8. ' ' → logprob: -12.0194091796875
    9. '，' → logprob: -12.7694091796875
    10. ',count' → logprob: -13.2694091796875

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2520502805709839
    2. ' range' → logprob: -1.5020502805709839
    3. 'comb' → logprob: -9.252050399780273
    4. ' combination' → logprob: -10.752050399780273
    5. '(range' → logprob: -13.377050399780273
    6. 'enumer' → logprob: -13.627050399780273
    7. '	range' → logprob: -15.002050399780273
    8. '```' → logprob: -15.752050399780273
    9. 'combo' → logprob: -16.127050399780273
    10. ' ' → logprob: -16.127050399780273

Token 68: '(len' (ID: 14990)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3992549180984497
    2. '(len' → logprob: -1.1492549180984497
    3. '(' → logprob: -4.39925479888916
    4. '(cnt' → logprob: -11.14925479888916
    5. ' (' → logprob: -12.39925479888916
    6. 'len' → logprob: -13.89925479888916
    7. 'n' → logprob: -14.39925479888916
    8. ' len' → logprob: -14.89925479888916
    9. '((' → logprob: -15.89925479888916
    10. ' n' → logprob: -15.89925479888916

Token 69: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -5.800739018013701e-05
    2. 'comb' → logprob: -10.3750581741333
    3. '(' → logprob: -10.6250581741333
    4. ' (' → logprob: -13.2500581741333
    5. 'com' → logprob: -15.6250581741333
    6. '(combo' → logprob: -16.000057220458984
    7. ')' → logprob: -16.125057220458984
    8. ' combination' → logprob: -16.500057220458984
    9. '```' → logprob: -16.875057220458984
    10. '(c' → logprob: -16.875057220458984

Token 70: 'bination' (ID: 180524)
  Prédit: 'bination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bination' → logprob: -0.015893474221229553
    2. 'ination' → logprob: -4.265893459320068
    3. 'b' → logprob: -6.390893459320068
    4. 'binations' → logprob: -10.640893936157227
    5. 'nation' → logprob: -11.015893936157227
    6. 'bin' → logprob: -12.265893936157227
    7. 'ation' → logprob: -12.890893936157227
    8. 'ib' → logprob: -13.515893936157227
    9. 'in' → logprob: -14.640893936157227
    10. 'onation' → logprob: -15.140893936157227

Token 71: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.12865804135799408
    2. ')):
' → logprob: -2.5036580562591553
    3. '))' → logprob: -3.8786580562591553
    4. '):' → logprob: -4.128657817840576
    5. ')' → logprob: -7.003657817840576
    6. ')):
' → logprob: -7.003657817840576
    7. '):
' → logprob: -8.128658294677734
    8. ':' → logprob: -10.878658294677734
    9. ' ' → logprob: -11.628658294677734
    10. '[' → logprob: -13.003658294677734

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3716883659362793
    2. ' if' → logprob: -1.2466883659362793
    3. ':' → logprob: -4.121688365936279
    4. '<|end|>' → logprob: -5.871688365936279
    5. ' ' → logprob: -6.121688365936279
    6. 'if' → logprob: -6.996688365936279
    7. '    ' → logprob: -8.496688842773438
    8. '  ' → logprob: -9.121688842773438
    9. '```' → logprob: -9.246688842773438
    10. '<|end|>' → logprob: -9.371688842773438

Token 73: ' cur' (ID: 4396)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08148536831140518
    2. '   ' → logprob: -2.7064852714538574
    3. '    ' → logprob: -4.956485271453857
    4. 'if' → logprob: -5.831485271453857
    5. ' ' → logprob: -6.706485271453857
    6. ' p' → logprob: -9.706485748291016
    7. '```' → logprob: -9.831485748291016
    8. ' ' → logprob: -9.956485748291016
    9. '    
' → logprob: -10.456485748291016
    10. '   ' → logprob: -10.956485748291016

Token 74: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3719925284385681
    2. '=' → logprob: -1.996992588043213
    3. ' =' → logprob: -2.496992588043213
    4. ' ' → logprob: -3.496992588043213
    5. '   ' → logprob: -3.621992588043213
    6. '_p' → logprob: -4.496992588043213
    7. '_comb' → logprob: -5.246992588043213
    8. 'ation' → logprob: -5.621992588043213
    9. '[' → logprob: -6.246992588043213
    10. ')' → logprob: -6.496992588043213

Token 75: ' list' (ID: 1562)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.3490327298641205
    2. ' combination' → logprob: -1.2240327596664429
    3. 'list' → logprob: -8.099032402038574
    4. 'com' → logprob: -8.849032402038574
    5. ' list' → logprob: -9.599032402038574
    6. 'combo' → logprob: -10.724032402038574
    7. 'tuple' → logprob: -11.474032402038574
    8. ' combinaison' → logprob: -11.599032402038574
    9. ' tuple' → logprob: -12.099032402038574
    10. '(com' → logprob: -12.099032402038574

Token 76: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -3.2020991056924686e-05
    2. '(' → logprob: -10.375032424926758
    3. 'comb' → logprob: -15.125032424926758
    4. ' (' → logprob: -15.250032424926758
    5. '```' → logprob: -17.000032424926758
    6. '()' → logprob: -17.250032424926758
    7. '(combo' → logprob: -17.500032424926758
    8. ')' → logprob: -17.875032424926758
    9. '((' → logprob: -17.875032424926758
    10. '(
' → logprob: -18.125032424926758

Token 77: 'bination' (ID: 180524)
  Prédit: 'bination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bination' → logprob: -0.008898068219423294
    2. 'b' → logprob: -5.1338982582092285
    3. 'ination' → logprob: -5.8838982582092285
    4. 'ation' → logprob: -9.13389778137207
    5. 'comb' → logprob: -9.88389778137207
    6. 'nation' → logprob: -11.50889778137207
    7. 'bin' → logprob: -12.00889778137207
    8. 'binations' → logprob: -13.25889778137207
    9. '   ' → logprob: -14.38389778137207
    10. 'utation' → logprob: -14.50889778137207

Token 78: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.002712272573262453
    2. ')[' → logprob: -6.002712249755859
    3. '[' → logprob: -8.62771224975586
    4. '(idx' → logprob: -11.25271224975586
    5. 's' → logprob: -11.50271224975586
    6. ' [' → logprob: -11.50271224975586
    7. ')' → logprob: -11.50271224975586
    8. 'idx' → logprob: -13.12771224975586
    9. '()[' → logprob: -13.25271224975586
    10. '   ' → logprob: -13.37771224975586

Token 79: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6439616084098816
    2. '])' → logprob: -1.2689616680145264
    3. '))' → logprob: -1.6439616680145264
    4. ')])' → logprob: -8.768961906433105
    5. '))
' → logprob: -9.643961906433105
    6. ']))' → logprob: -9.768961906433105
    7. ')
' → logprob: -9.893961906433105
    8. '])
' → logprob: -10.518961906433105
    9. ']' → logprob: -11.018961906433105
    10. ' )' → logprob: -11.143961906433105

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036861393600702286
    2. '
' → logprob: -3.9118614196777344
    3. '    
' → logprob: -5.286861419677734
    4. ' if' → logprob: -5.286861419677734
    5. '<|end|>' → logprob: -5.661861419677734
    6. '  
' → logprob: -7.661861419677734
    7. '```' → logprob: -7.911861419677734
    8. 'if' → logprob: -8.036861419677734
    9. '   
' → logprob: -8.161861419677734
    10. '    ' → logprob: -8.286861419677734

Token 81: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27809953689575195
    2. '   ' → logprob: -1.653099536895752
    3. 'if' (adapté à ' if') → logprob: -3.403099536895752
    4. '
' → logprob: -4.903099536895752
    5. ' ' → logprob: -5.278099536895752
    6. '    
' → logprob: -6.278099536895752
    7. '<|end|>' → logprob: -6.778099536895752
    8. ' 
' → logprob: -7.403099536895752
    9. '  
' → logprob: -7.653099536895752
    10. '    ' → logprob: -8.278099060058594

Token 82: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.015328837558627129
    2. 'cur' → logprob: -4.265328884124756
    3. ' p' → logprob: -6.765328884124756
    4. 'p' → logprob: -12.015328407287598
    5. ' ' → logprob: -12.640328407287598
    6. '	cur' → logprob: -13.390328407287598
    7. ' ' → logprob: -14.765328407287598
    8. '(cur' → logprob: -15.515328407287598
    9. '[cur' → logprob: -16.640329360961914
    10. ' c' → logprob: -16.890329360961914

Token 83: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12696076929569244
    2. '==' → logprob: -2.1269607543945312
    3. '=' → logprob: -11.501960754394531
    4. ')==' → logprob: -12.001960754394531
    5. '[' → logprob: -12.376960754394531
    6. ']==' → logprob: -12.501960754394531
    7. ')' → logprob: -12.501960754394531
    8. '[:]' → logprob: -13.251960754394531
    9. ' ' → logprob: -14.126960754394531
    10. ' ' → logprob: -14.501960754394531

Token 84: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.016037069261074066
    2. 'p' → logprob: -4.1410369873046875
    3. ' ' → logprob: -13.016036987304688
    4. '	p' → logprob: -16.016036987304688
    5. ' ' → logprob: -16.016036987304688
    6. '[p' → logprob: -16.016036987304688
    7. '[' → logprob: -16.516036987304688
    8. '(p' → logprob: -17.641036987304688
    9. '<p' → logprob: -17.641036987304688
    10. '   ' → logprob: -17.766036987304688

Token 85: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.125000953674316
    3. ' _' → logprob: -15.375000953674316
    4. '_l' → logprob: -16.500001907348633
    5. '_lst' → logprob: -16.500001907348633
    6. '_i' → logprob: -16.625001907348633
    7. '_li' → logprob: -16.875001907348633
    8. ''_' → logprob: -17.000001907348633
    9. '_lista' → logprob: -17.875001907348633
    10. 'list' → logprob: -18.000001907348633

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005053732893429697
    2. ':
' → logprob: -7.625505447387695
    3. '):' → logprob: -11.750505447387695
    4. '   ' → logprob: -12.375505447387695
    5. ' :' → logprob: -13.000505447387695
    6. ':
' → logprob: -14.375505447387695
    7. '       ' → logprob: -14.500505447387695
    8. ':p' → logprob: -14.625505447387695
    9. ':return' → logprob: -15.500505447387695
    10. ' and' → logprob: -15.500505447387695

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1851903349161148
    2. ':' → logprob: -2.060190439224243
    3. '   ' → logprob: -4.060190200805664
    4. ':
' → logprob: -4.435190200805664
    5. 'p' → logprob: -5.310190200805664
    6. ' p' → logprob: -5.560190200805664
    7. '
' → logprob: -6.185190200805664
    8. '	p' → logprob: -8.685190200805664
    9. ':p' → logprob: -8.685190200805664
    10. '	' → logprob: -8.935190200805664

Token 88: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.1002405434846878
    2. 'p' (adapté à ' p') → logprob: -2.350240468978882
    3. '   ' → logprob: -10.725240707397461
    4. ' ' → logprob: -11.850240707397461
    5. '       ' → logprob: -12.475240707397461
    6. '	p' → logprob: -15.100240707397461
    7. '           ' → logprob: -15.975240707397461
    8. '```' → logprob: -16.22524070739746
    9. '    ' → logprob: -16.35024070739746
    10. '
' → logprob: -16.35024070739746

Token 89: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.9361264946837764e-07
    2. '_j' → logprob: -17.25
    3. '```' → logprob: -17.375
    4. ' _' → logprob: -17.5
    5. '_' → logprob: -18.125
    6. 'i' → logprob: -18.25
    7. '\' → logprob: -18.75
    8. '_a' → logprob: -19.25
    9. '_s' → logprob: -19.375
    10. ' ' → logprob: -19.75

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313262403011322
    2. '=' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.063261985778809
    4. ' =)' → logprob: -15.938261985778809
    5. '＝' → logprob: -16.063262939453125
    6. ' =
' → logprob: -17.563262939453125
    7. '=end' → logprob: -17.688262939453125
    8. ' ==' → logprob: -17.688262939453125
    9. '<|end|>' → logprob: -18.438262939453125
    10. '=int' → logprob: -18.563262939453125

Token 91: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.10020720958709717
    2. ' idx' → logprob: -2.3502073287963867
    3. '	idx' → logprob: -14.850207328796387
    4. '[idx' → logprob: -16.10020637512207
    5. ' ' → logprob: -16.85020637512207
    6. 'index' → logprob: -16.85020637512207
    7. '(idx' → logprob: -16.85020637512207
    8. '   ' → logprob: -18.35020637512207
    9. ' index' → logprob: -19.47520637512207
    10. '_idx' → logprob: -19.47520637512207

Token 92: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015467056073248386
    2. 'elif' → logprob: -9.375154495239258
    3. '
' → logprob: -10.125154495239258
    4. ' elif' → logprob: -11.000154495239258
    5. '    
' → logprob: -12.375154495239258
    6. ' if' → logprob: -12.625154495239258
    7. '       ' → logprob: -13.000154495239258
    8. '        
' → logprob: -13.875154495239258
    9. 'if' → logprob: -14.125154495239258
    10. ' ' → logprob: -14.625154495239258

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.404745439183898e-05
    2. 'if' → logprob: -11.50003433227539
    3. 'elif' → logprob: -11.75003433227539
    4. '```' → logprob: -11.87503433227539
    5. ' if' → logprob: -12.25003433227539
    6. ' ' → logprob: -12.75003433227539
    7. '    
' → logprob: -14.75003433227539
    8. '       ' → logprob: -15.12503433227539
    9. '
' → logprob: -15.37503433227539
    10. ' elif' → logprob: -15.87503433227539

Token 94: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005091441795229912
    2. 'if' (adapté à ' if') → logprob: -6.005091667175293
    3. ' if' → logprob: -6.130091667175293
    4. 'elif' → logprob: -8.005091667175293
    5. ' ' → logprob: -9.630091667175293
    6. ' elif' → logprob: -10.380091667175293
    7. '```' → logprob: -12.755091667175293
    8. '    
' → logprob: -13.755091667175293
    9. '  ' → logprob: -14.380091667175293
    10. '       ' → logprob: -15.130091667175293

Token 95: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.16022859513759613
    2. 'cur' → logprob: -1.9102286100387573
    3. '	cur' → logprob: -13.660228729248047
    4. '   ' → logprob: -14.035228729248047
    5. '(cur' → logprob: -14.160228729248047
    6. 'q' → logprob: -14.660228729248047
    7. ' ' → logprob: -14.785228729248047
    8. ' q' → logprob: -15.035228729248047
    9. '[cur' → logprob: -15.160228729248047
    10. ' ' → logprob: -15.660228729248047

Token 96: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006716436706483364
    2. '==' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.25671672821045
    4. ')==' → logprob: -16.256715774536133
    5. '=' → logprob: -16.631715774536133
    6. '[' → logprob: -16.631715774536133
    7. ']==' → logprob: -16.756715774536133
    8. ' ' → logprob: -17.006715774536133
    9. ')' → logprob: -17.256715774536133
    10. '===' → logprob: -17.381715774536133

Token 97: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.026302969083189964
    2. 'q' → logprob: -3.6513030529022217
    3. ' ' → logprob: -13.4013032913208
    4. ' ' → logprob: -14.7763032913208
    5. '	q' → logprob: -14.7763032913208
    6. '   ' → logprob: -16.838802337646484
    7. '  ' → logprob: -17.213802337646484
    8. '[q' → logprob: -17.276302337646484
    9. ',' → logprob: -17.338802337646484
    10. '    ' → logprob: -17.338802337646484

Token 98: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.981667537620524e-06
    2. '_i' → logprob: -13.375001907348633
    3. 'list' → logprob: -14.750001907348633
    4. '_' → logprob: -16.875001907348633
    5. '_lst' → logprob: -18.000001907348633
    6. 'List' → logprob: -18.125001907348633
    7. ')_' → logprob: -18.875001907348633
    8. 'i' → logprob: -19.250001907348633
    9. '_lists' → logprob: -19.375001907348633
    10. ' _' → logprob: -19.375001907348633

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022286446765065193
    2. ':
' → logprob: -6.127228736877441
    3. '       ' → logprob: -10.252228736877441
    4. ' :' → logprob: -12.252228736877441
    5. ':

' → logprob: -14.377228736877441
    6. '):' → logprob: -14.377228736877441
    7. '   ' → logprob: -14.377228736877441
    8. '=' → logprob: -14.627228736877441
    9. ':
' → logprob: -15.127228736877441
    10. '==' → logprob: -15.377228736877441

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07104871422052383
    2. 'q' → logprob: -3.3210487365722656
    3. ' q' → logprob: -3.4460487365722656
    4. '   ' → logprob: -8.196048736572266
    5. '	q' → logprob: -8.571048736572266
    6. ' ' → logprob: -10.446048736572266
    7. '      ' → logprob: -10.571048736572266
    8. '     ' → logprob: -10.946048736572266
    9. '    ' → logprob: -11.071048736572266
    10. '           ' → logprob: -11.321048736572266

Token 101: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.1605253964662552
    2. ' q' → logprob: -1.9105254411697388
    3. 'idx' → logprob: -8.41052532196045
    4. ' idx' → logprob: -9.66052532196045
    5. '       ' → logprob: -11.28552532196045
    6. '           ' → logprob: -14.03552532196045
    7. '   ' → logprob: -14.03552532196045
    8. '	q' → logprob: -15.16052532196045
    9. ' ' → logprob: -15.66052532196045
    10. '    ' → logprob: -16.160526275634766

Token 102: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -13.625001907348633
    3. ' _' → logprob: -15.500001907348633
    4. '_j' → logprob: -16.375001907348633
    5. '_a' → logprob: -17.875001907348633
    6. 'i' → logprob: -18.625001907348633
    7. '_n' → logprob: -19.000001907348633
    8. '```' → logprob: -19.000001907348633
    9. ''_' → logprob: -19.000001907348633
    10. ' ' → logprob: -19.750001907348633

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858827963471413
    2. ' =' → logprob: -3.048588275909424
    3. '=
' → logprob: -15.048588752746582
    4. '=

' → logprob: -15.298588752746582
    5. '<|end|>' → logprob: -15.548588752746582
    6. '==' → logprob: -16.673587799072266
    7. '＝' → logprob: -16.673587799072266
    8. ' =
' → logprob: -17.298587799072266
    9. ' ' → logprob: -17.423587799072266
    10. '=int' → logprob: -17.923587799072266

Token 104: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6931495666503906
    2. ' idx' → logprob: -0.6931495666503906
    3. '[idx' → logprob: -13.94314956665039
    4. '	idx' → logprob: -13.94314956665039
    5. '(idx' → logprob: -14.44314956665039
    6. ' ' → logprob: -16.31814956665039
    7. '_idx' → logprob: -17.81814956665039
    8. '.idx' → logprob: -18.06814956665039
    9. 'Idx' → logprob: -19.06814956665039
    10. '   ' → logprob: -19.06814956665039

Token 105: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18255725502967834
    2. 'if' → logprob: -1.932557225227356
    3. '
' → logprob: -4.432557106018066
    4. 'diff' → logprob: -5.432557106018066
    5. '   ' → logprob: -5.682557106018066
    6. 'answer' → logprob: -6.557557106018066
    7. ' if' → logprob: -8.307557106018066
    8. 'ans' → logprob: -8.557557106018066
    9. 'abs' → logprob: -8.682557106018066
    10. 'result' → logprob: -8.807557106018066

Token 106: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001478796184528619
    2. '
' → logprob: -10.500147819519043
    3. 'if' → logprob: -10.500147819519043
    4. 'answer' → logprob: -10.625147819519043
    5. 'diff' → logprob: -11.125147819519043
    6. 'ans' → logprob: -11.125147819519043
    7. ' print' → logprob: -11.500147819519043
    8. 'abs' → logprob: -11.625147819519043
    9. 'result' → logprob: -11.625147819519043
    10. '```' → logprob: -12.500147819519043

Token 107: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.0001238004770129919
    2. 'abs' → logprob: -9.250123977661133
    3. '(' → logprob: -10.500123977661133
    4. ' abs' → logprob: -16.375123977661133
    5. '(
' → logprob: -17.750123977661133
    6. '(ab' → logprob: -19.875123977661133
    7. '(

' → logprob: -20.125123977661133
    8. '()' → logprob: -20.625123977661133
    9. '(max' → logprob: -20.750123977661133
    10. 'Abs' → logprob: -20.750123977661133

Token 108: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.88418151892256e-05
    2. '(' → logprob: -9.750059127807617
    3. '(q' → logprob: -15.250059127807617
    4. 'p' → logprob: -15.375059127807617
    5. ')' → logprob: -17.250059127807617
    6. '((' → logprob: -17.500059127807617
    7. ' (' → logprob: -18.375059127807617
    8. '(
' → logprob: -19.125059127807617
    9. ')p' → logprob: -19.750059127807617
    10. '(a' → logprob: -20.000059127807617

Token 109: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: 0.0
    2. ' _' → logprob: -17.125
    3. '_' → logprob: -18.375
    4. 'i' → logprob: -18.875
    5. '-i' → logprob: -19.375
    6. '-_' → logprob: -20.0
    7. ' -' → logprob: -20.75
    8. ')' → logprob: -20.875
    9. ')_' → logprob: -21.5
    10. ' ' → logprob: -21.5

Token 110: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20691189169883728
    2. ' -' → logprob: -1.7069119215011597
    3. '-q' → logprob: -5.206912040710449
    4. '-
' → logprob: -12.45691204071045
    5. ' -
' → logprob: -14.70691204071045
    6. ' ' → logprob: -14.95691204071045
    7. '	' → logprob: -15.70691204071045
    8. 'q' → logprob: -17.081911087036133
    9. ' q' → logprob: -17.331911087036133
    10. '-Q' → logprob: -17.331911087036133

Token 111: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.627176768844947e-05
    2. ' q' → logprob: -9.250096321105957
    3. '	q' → logprob: -17.62509536743164
    4. ' ' → logprob: -18.25009536743164
    5. '   ' → logprob: -18.87509536743164
    6. '       ' → logprob: -21.12509536743164
    7. '  ' → logprob: -21.25009536743164
    8. '_q' → logprob: -21.25009536743164
    9. '$q' → logprob: -21.25009536743164
    10. '    ' → logprob: -21.50009536743164

Token 112: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.1637164789135568e-05
    2. 'i' → logprob: -11.375011444091797
    3. ' _' → logprob: -17.125011444091797
    4. ' i' → logprob: -17.625011444091797
    5. '_' → logprob: -19.000011444091797
    6. ' ' → logprob: -19.625011444091797
    7. '	i' → logprob: -19.875011444091797
    8. '   ' → logprob: -20.250011444091797
    9. ')' → logprob: -20.500011444091797
    10. '```' → logprob: -20.500011444091797

Token 113: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06196846812963486
    2. ')' → logprob: -2.8119685649871826
    3. ')))' → logprob: -14.686968803405762
    4. '))
' → logprob: -15.186968803405762
    5. ' ))' → logprob: -16.936967849731445
    6. ')}' → logprob: -17.311967849731445
    7. '})' → logprob: -17.686967849731445
    8. '])' → logprob: -17.936967849731445
    9. '),' → logprob: -18.061967849731445
    10. ')
' → logprob: -18.061967849731445


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 111
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 55
Tokens correctement prédits (top 10): 98
Précision stricte (1ère position): 48.65%
Précision adaptée (1ère position): 49.55%
Précision (top 10): 88.29%
================================================================================
