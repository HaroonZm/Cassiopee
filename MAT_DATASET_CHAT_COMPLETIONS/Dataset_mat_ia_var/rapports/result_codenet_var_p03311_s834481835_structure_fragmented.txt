================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_integer():
    return int(input())

def read_integer_list():
    return list(map(int, input().split()))

def decrement_elements_by_indices(A):
    return [A[i] - (i + 1) for i in range(len(A))]

def sort_list(A):
    return sorted(A)

def is_odd(n):
    return n % 2 == 1

def get_median_index(n):
    return n // 2

def calculate_median(A, N):
    if is_odd(N):
        return A[get_median_index(N)]
    else:
        return (A[get_median_index(N)] + A[get_median_index(N)-1]) // 2

def sum_absolute_differences(A, b):
    return sum(abs(i - b) for i in A)

def sum_absolute_differences_alt(A, a):
    return sum(abs(i - (a - 1)) for i in A)

def process_odd_N(A, N):
    median = A[get_median_index(N)]
    return sum_absolute_differences(A, median)

def process_even_N(A, N):
    mid1 = A[get_median_index(N)-1]
    mid2 = A[get_median_index(N)]
    a = (mid1 + mid2) // 2
    s1 = sum_absolute_differences(A, a)
    s2 = sum_absolute_differences_alt(A, a)
    return min(s1, s2)

def output_result(result):
    print(result)

def main():
    N = read_integer()
    A = read_integer_list()
    A = decrement_elements_by_indices(A)
    A = sort_list(A)
    if is_odd(N):
        ans = process_odd_N(A, N)
    else:
        ans = process_even_N(A, N)
    output_result(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_integer' (ID: 82911)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07292073965072632
    2. '_' → logprob: -2.697920799255371
    3. '```' → logprob: -6.322920799255371
    4. '():' → logprob: -7.947920799255371
    5. '(_:' → logprob: -8.447920799255371
    6. '(_' → logprob: -8.572920799255371
    7. ':' → logprob: -9.197920799255371
    8. '(:' → logprob: -9.322920799255371
    9. '_:' → logprob: -9.447920799255371
    10. ' (' → logprob: -10.197920799255371

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8072522878646851
    2. ':' → logprob: -1.557252287864685
    3. '\n' → logprob: -2.1822524070739746
    4. '():' → logprob: -2.6822524070739746
    5. '\' → logprob: -3.1822524070739746
    6. '   ' → logprob: -3.5572524070739746
    7. ':
' → logprob: -3.8072524070739746
    8. '
' → logprob: -4.182252407073975
    9. '(' → logprob: -4.307252407073975
    10. '``' → logprob: -5.057252407073975

Token 5: ' return' (ID: 622)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5359494090080261
    2. 'r' → logprob: -1.785949468612671
    3. 'return' (adapté à ' return') → logprob: -2.285949468612671
    4. '   ' → logprob: -2.910949468612671
    5. 'n' → logprob: -3.160949468612671
    6. '```' → logprob: -3.910949468612671
    7. 'x' → logprob: -4.535949230194092
    8. ' ' → logprob: -4.785949230194092
    9. '`' → logprob: -6.285949230194092
    10. '(' → logprob: -6.785949230194092

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.040887169539928436
    2. ' ' → logprob: -3.4158871173858643
    3. 'int' → logprob: -5.040887355804443
    4. '  ' → logprob: -8.165886878967285
    5. '0' → logprob: -8.790886878967285
    6. '(int' → logprob: -9.040886878967285
    7. ' input' → logprob: -9.665886878967285
    8. '<int' → logprob: -10.540886878967285
    9. 'input' → logprob: -10.790886878967285
    10. ' None' → logprob: -11.290886878967285

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007794885314069688
    2. '('' → logprob: -8.125779151916504
    3. '()' → logprob: -9.000779151916504
    4. '(input' → logprob: -9.250779151916504
    5. '```' → logprob: -9.375779151916504
    6. ' (' → logprob: -9.625779151916504
    7. '("("' → logprob: -10.750779151916504
    8. ''' → logprob: -11.250779151916504
    9. '(
' → logprob: -11.750779151916504
    10. '`' → logprob: -12.000779151916504

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04925326257944107
    2. '())' → logprob: -3.549253225326538
    3. ')' → logprob: -4.674253463745117
    4. '()' → logprob: -4.799253463745117
    5. '('' → logprob: -7.424253463745117
    6. '(""))' → logprob: -7.924253463745117
    7. '("("' → logprob: -8.549253463745117
    8. '(
' → logprob: -8.674253463745117
    9. '()))' → logprob: -9.049253463745117
    10. '))' → logprob: -9.674253463745117

Token 9: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9763924479484558
    2. '(' → logprob: -1.3513925075531006
    3. '()' → logprob: -2.9763925075531006
    4. '```' → logprob: -3.1013925075531006
    5. ':' → logprob: -3.2263925075531006
    6. '#' → logprob: -3.3513925075531006
    7. '
' → logprob: -3.3513925075531006
    8. '\' → logprob: -3.4763925075531006
    9. 'def' → logprob: -3.8513925075531006
    10. '(
' → logprob: -3.9763925075531006

Token 10: ' read' (ID: 1729)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.573434054851532
    2. ' read' → logprob: -1.3234341144561768
    3. ' write' → logprob: -2.4484341144561768
    4. ' add' → logprob: -3.8234341144561768
    5. ' sum' → logprob: -3.8234341144561768
    6. ' compute' → logprob: -4.698433876037598
    7. ' factorial' → logprob: -4.823433876037598
    8. ' process' → logprob: -4.948433876037598
    9. ' square' → logprob: -5.448433876037598
    10. ' space' → logprob: -5.573433876037598

Token 11: '_integer' (ID: 82911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002069371985271573
    2. '_integer' → logprob: -6.502069473266602
    3. '_string' → logprob: -8.002069473266602
    4. '_line' → logprob: -9.502069473266602
    5. '(' → logprob: -9.502069473266602
    6. ')' → logprob: -11.377069473266602
    7. '()' → logprob: -11.502069473266602
    8. '_number' → logprob: -11.752069473266602
    9. '_space' → logprob: -12.002069473266602
    10. ' _' → logprob: -12.002069473266602

Token 12: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.045492805540561676
    2. 's' → logprob: -3.6704928874969482
    3. '(' → logprob: -4.045492649078369
    4. '_' → logprob: -7.795492649078369
    5. '_s' → logprob: -8.795493125915527
    6. '())' → logprob: -8.795493125915527
    7. '   ' → logprob: -9.420493125915527
    8. ' ()' → logprob: -9.420493125915527
    9. '`()' → logprob: -9.420493125915527
    10. ')' → logprob: -9.545493125915527

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1480088233947754
    2. '():' → logprob: -2.1480088233947754
    3. '_' → logprob: -4.648008823394775
    4. '()' → logprob: -5.023008823394775
    5. '("("' → logprob: -7.273008823394775
    6. '(()' → logprob: -7.773008823394775
    7. '```' → logprob: -7.773008823394775
    8. '([]' → logprob: -8.460508346557617
    9. '<|end|>' → logprob: -8.648008346557617
    10. '()>' → logprob: -8.773008346557617

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022751864045858383
    2. '[]' → logprob: -4.522751808166504
    3. ' return' → logprob: -5.522751808166504
    4. '(' → logprob: -6.022751808166504
    5. 'return' → logprob: -6.647751808166504
    6. '    ' → logprob: -6.772751808166504
    7. '()' → logprob: -6.772751808166504
    8. '[' → logprob: -6.772751808166504
    9. '(return' → logprob: -9.272751808166504
    10. '<|end|>' → logprob: -9.897751808166504

Token 15: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9393266439437866
    2. '   ' → logprob: -1.1893266439437866
    3. 'return' (adapté à ' return') → logprob: -1.1893266439437866
    4. '[]' → logprob: -9.439326286315918
    5. 'lst' → logprob: -10.189326286315918
    6. '    ' → logprob: -10.314326286315918
    7. ' ' → logprob: -10.564326286315918
    8. ' lst' → logprob: -10.689326286315918
    9. 'data' → logprob: -10.814326286315918
    10. 'result' → logprob: -12.314326286315918

Token 16: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.08088380098342896
    2. 'list' → logprob: -2.830883741378784
    3. ' [' → logprob: -4.455883979797363
    4. '[list' → logprob: -5.455883979797363
    5. '[' → logprob: -5.955883979797363
    6. '[int' → logprob: -8.955883979797363
    7. ' ' → logprob: -9.705883979797363
    8. '[input' → logprob: -9.955883979797363
    9. '[List' → logprob: -12.080883979797363
    10. ' []' → logprob: -12.205883979797363

Token 17: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00984261929988861
    2. '(map' → logprob: -5.134842395782471
    3. '(int' → logprob: -5.634842395782471
    4. '(input' → logprob: -8.384842872619629
    5. '(range' → logprob: -10.509842872619629
    6. '(eval' → logprob: -10.509842872619629
    7. '(

' → logprob: -11.384842872619629
    8. '(s' → logprob: -12.134842872619629
    9. ' (' → logprob: -12.134842872619629
    10. '()' → logprob: -12.259842872619629

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007666255696676672
    2. '(' → logprob: -7.250766754150391
    3. 'int' → logprob: -10.00076675415039
    4. '<int' → logprob: -12.62576675415039
    5. ',int' → logprob: -12.87576675415039
    6. '=int' → logprob: -13.25076675415039
    7. ' int' → logprob: -14.12576675415039
    8. ')' → logprob: -14.12576675415039
    9. '(input' → logprob: -14.37576675415039
    10. '(
' → logprob: -14.37576675415039

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2179216891527176
    2. ',input' → logprob: -1.8429217338562012
    3. ',' → logprob: -3.467921733856201
    4. 'input' → logprob: -5.217921733856201
    5. '(' → logprob: -8.342921257019043
    6. ' (' → logprob: -8.592921257019043
    7. ' ,' → logprob: -8.592921257019043
    8. ' input' → logprob: -8.717921257019043
    9. '=input' → logprob: -10.592921257019043
    10. '   ' → logprob: -10.842921257019043

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007632300723344088
    2. ' input' → logprob: -4.882632255554199
    3. '(input' → logprob: -11.1326322555542
    4. '   ' → logprob: -11.8826322555542
    5. ',input' → logprob: -13.1326322555542
    6. ' ' → logprob: -14.2576322555542
    7. '	input' → logprob: -14.3826322555542
    8. '<input' → logprob: -14.7576322555542
    9. '=input' → logprob: -14.8826322555542
    10. '_input' → logprob: -16.257633209228516

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002969703928101808
    2. '()' → logprob: -8.250296592712402
    3. '()))' → logprob: -10.500296592712402
    4. ' ().' → logprob: -13.000296592712402
    5. '())))' → logprob: -13.125296592712402
    6. '())' → logprob: -13.375296592712402
    7. '))' → logprob: -14.250296592712402
    8. ')' → logprob: -14.750296592712402
    9. '.split' → logprob: -15.250296592712402
    10. '()));' → logprob: -15.250296592712402

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004086708649992943
    2. 'strip' → logprob: -5.504086494445801
    3. 'rstrip' → logprob: -11.8790864944458
    4. 's' → logprob: -14.1290864944458
    5. ' split' → logprob: -15.2540864944458
    6. 'spl' → logprob: -15.3790864944458
    7. ')' → logprob: -16.129087448120117
    8. '(split' → logprob: -16.879087448120117
    9. 'read' → logprob: -18.004087448120117
    10. 'sp' → logprob: -18.754087448120117

Token 23: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03779357671737671
    2. '()' → logprob: -3.7877936363220215
    3. '())' → logprob: -4.9127936363220215
    4. '(' → logprob: -5.6627936363220215
    5. '))' → logprob: -5.9127936363220215
    6. '())))' → logprob: -7.1627936363220215
    7. ')))' → logprob: -10.037793159484863
    8. '()))
' → logprob: -10.412793159484863
    9. ')' → logprob: -10.412793159484863
    10. '()))

' → logprob: -11.912793159484863

Token 24: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03867751732468605
    2. 'd' → logprob: -3.288677453994751
    3. '
' → logprob: -8.413677215576172
    4. 'de' → logprob: -9.163677215576172
    5. '\' → logprob: -9.288677215576172
    6. '

' → logprob: -9.788677215576172
    7. '#' → logprob: -9.913677215576172
    8. '' → logprob: -10.538677215576172
    9. '```' → logprob: -10.788677215576172
    10. 'n' → logprob: -10.913677215576172

Token 25: ' decrement' (ID: 121877)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.8691586256027222
    2. ' read' → logprob: -1.6191586256027222
    3. ' solve' → logprob: -2.2441587448120117
    4. ' write' → logprob: -2.4941587448120117
    5. ' factorial' → logprob: -2.9941587448120117
    6. ' find' → logprob: -3.2441587448120117
    7. ' sum' → logprob: -3.3691587448120117
    8. ' compute' → logprob: -3.9941587448120117
    9. ' main' → logprob: -4.244158744812012
    10. ' count' → logprob: -4.994158744812012

Token 26: '_elements' (ID: 53344)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31832221150398254
    2. '_' → logprob: -1.3183221817016602
    3. '(_)' → logprob: -6.19332218170166
    4. '(_' → logprob: -7.19332218170166
    5. '_(' → logprob: -7.69332218170166
    6. '()' → logprob: -8.19332218170166
    7. '```' → logprob: -8.44332218170166
    8. '('_' → logprob: -9.19332218170166
    9. 's' → logprob: -9.19332218170166
    10. '_value' → logprob: -9.44332218170166

Token 27: '_by' (ID: 8214)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008140355930663645
    2. '_' → logprob: -7.625813961029053
    3. '_(' → logprob: -9.250814437866211
    4. '_list' → logprob: -10.250814437866211
    5. '("("' → logprob: -10.375814437866211
    6. '(_' → logprob: -10.500814437866211
    7. '((' → logprob: -10.875814437866211
    8. ' (' → logprob: -10.875814437866211
    9. '```' → logprob: -10.875814437866211
    10. '()' → logprob: -11.750814437866211

Token 28: '_indices' (ID: 43508)
  Prédit: '_one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.417587548494339
    2. '_' → logprob: -1.4175875186920166
    3. '1' → logprob: -2.4175875186920166
    4. 'one' → logprob: -4.792587757110596
    5. '_n' → logprob: -7.292587757110596
    6. '(n' → logprob: -8.417587280273438
    7. ' ' → logprob: -8.667587280273438
    8. '(' → logprob: -8.792587280273438
    9. ' one' → logprob: -8.792587280273438
    10. '_value' → logprob: -10.292587280273438

Token 29: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04324238374829292
    2. '_' → logprob: -3.4182424545288086
    3. '_at' → logprob: -5.668242454528809
    4. '(_' → logprob: -6.793242454528809
    5. '_by' → logprob: -7.168242454528809
    6. '_in' → logprob: -8.043242454528809
    7. '(_)' → logprob: -8.043242454528809
    8. '("("' → logprob: -8.043242454528809
    9. '_and' → logprob: -8.168242454528809
    10. '_except' → logprob: -8.293242454528809

Token 30: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005982005037367344
    2. '[' → logprob: -5.255981922149658
    3. ' ,' → logprob: -7.880981922149658
    4. ')' → logprob: -9.130982398986816
    5. ',[' → logprob: -9.255982398986816
    6. '[,' → logprob: -10.755982398986816
    7. ',A' → logprob: -11.005982398986816
    8. ',)' → logprob: -11.005982398986816
    9. '[A' → logprob: -11.255982398986816
    10. '[i' → logprob: -11.380982398986816

Token 31: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01132720522582531
    2. '(A' → logprob: -4.886327266693115
    3. '(:' → logprob: -5.761327266693115
    4. ':' → logprob: -8.636326789855957
    5. '():' → logprob: -9.136326789855957
    6. '(
' → logprob: -9.261326789855957
    7. '(a' → logprob: -9.886326789855957
    8. '((' → logprob: -10.636326789855957
    9. '[' → logprob: -11.011326789855957
    10. '([' → logprob: -11.136326789855957

Token 32: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28355181217193604
    2. ' ' → logprob: -2.4085516929626465
    3. '(' → logprob: -2.7835516929626465
    4. '[' → logprob: -3.0335516929626465
    5. ' (' → logprob: -4.7835516929626465
    6. ' A' → logprob: -4.9085516929626465
    7. ' for' → logprob: -5.2835516929626465
    8. ' [' → logprob: -5.2835516929626465
    9. ' return' → logprob: -6.0335516929626465
    10. ''' → logprob: -6.4085516929626465

Token 33: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5963523983955383
    2. '[A' → logprob: -0.9713523983955383
    3. ' [' → logprob: -2.7213523387908936
    4. '[i' → logprob: -5.971352577209473
    5. '[a' → logprob: -6.846352577209473
    6. '[len' → logprob: -7.846352577209473
    7. '[int' → logprob: -8.346352577209473
    8. '[(' → logprob: -8.721352577209473
    9. '[list' → logprob: -9.346352577209473
    10. '[
' → logprob: -9.471352577209473

Token 34: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0714954137802124
    2. 'a' → logprob: -2.696495532989502
    3. 'x' → logprob: -7.321495532989502
    4. 'i' → logprob: -7.946495532989502
    5. ' A' → logprob: -8.071495056152344
    6. 'elem' → logprob: -9.946495056152344
    7. 'val' → logprob: -10.196495056152344
    8. '   ' → logprob: -10.446495056152344
    9. 'e' → logprob: -10.571495056152344
    10. 'ai' → logprob: -10.946495056152344

Token 35: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016241880075540394
    2. 'i' → logprob: -9.375162124633789
    3. '[' → logprob: -10.375162124633789
    4. '[I' → logprob: -11.500162124633789
    5. '[index' → logprob: -11.625162124633789
    6. ')' → logprob: -12.125162124633789
    7. '[idx' → logprob: -12.375162124633789
    8. '[j' → logprob: -12.500162124633789
    9. '   ' → logprob: -13.250162124633789
    10. '(i' → logprob: -13.500162124633789

Token 36: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16887393593788147
    2. '-' → logprob: -2.0438740253448486
    3. ' -' → logprob: -4.0438737869262695
    4. ']-' → logprob: -5.0438737869262695
    5. '[i' → logprob: -7.0438737869262695
    6. ' ]' → logprob: -7.4188737869262695
    7. ')' → logprob: -9.04387378692627
    8. ' ' → logprob: -9.41887378692627
    9. '-i' → logprob: -10.16887378692627
    10. '[' → logprob: -10.16887378692627

Token 37: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34984633326530457
    2. ' -' → logprob: -1.224846363067627
    3. ' for' → logprob: -7.099846363067627
    4. ' ' → logprob: -7.974846363067627
    5. 'for' → logprob: -9.224845886230469
    6. '   ' → logprob: -10.474845886230469
    7. ']' → logprob: -10.724845886230469
    8. '-i' → logprob: -10.849845886230469
    9. ' i' → logprob: -11.474845886230469
    10. '  ' → logprob: -11.724845886230469

Token 38: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28966838121414185
    2. ' i' → logprob: -1.414668321609497
    3. '1' → logprob: -4.789668560028076
    4. ' ' → logprob: -9.289668083190918
    5. ' (' → logprob: -10.664668083190918
    6. '	i' → logprob: -11.039668083190918
    7. ' ' → logprob: -11.914668083190918
    8. '(' → logprob: -12.039668083190918
    9. '(i' → logprob: -12.289668083190918
    10. 'A' → logprob: -12.289668083190918

Token 39: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14291036128997803
    2. ' i' → logprob: -2.0179104804992676
    3. '1' → logprob: -9.01791000366211
    4. '   ' → logprob: -10.01791000366211
    5. ' ' → logprob: -10.51791000366211
    6. ')i' → logprob: -11.51791000366211
    7. '	i' → logprob: -11.51791000366211
    8. ')' → logprob: -11.76791000366211
    9. ' (' → logprob: -12.64291000366211
    10. '```' → logprob: -13.01791000366211

Token 40: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2499820441007614
    2. '+' → logprob: -1.6249819993972778
    3. ' +' → logprob: -4.249981880187988
    4. ' )' → logprob: -4.874981880187988
    5. ']' → logprob: -6.874981880187988
    6. ')]' → logprob: -7.374981880187988
    7. ' ' → logprob: -8.249981880187988
    8. '+)' → logprob: -9.374981880187988
    9. ')
' → logprob: -9.624981880187988
    10. ' for' → logprob: -10.249981880187988

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013271415373310447
    2. ' ' → logprob: -6.626327037811279
    3. ')' → logprob: -14.251327514648438
    4. '   ' → logprob: -14.751327514648438
    5. '```' → logprob: -16.376327514648438
    6. '<|end|>' → logprob: -16.876327514648438
    7. '2' → logprob: -17.126327514648438
    8. '0' → logprob: -17.626327514648438
    9. '  ' → logprob: -17.751327514648438
    10. '`' → logprob: -18.251327514648438

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '2' → logprob: -17.000001907348633
    4. '```' → logprob: -17.375001907348633
    5. ')' → logprob: -17.562501907348633
    6. '`' → logprob: -18.750001907348633
    7. '0' → logprob: -18.875001907348633
    8. '１' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.062501907348633
    10. 'def' → logprob: -19.875001907348633

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004414097871631384
    2. ')]' → logprob: -5.504414081573486
    3. ']' → logprob: -8.129414558410645
    4. ' )' → logprob: -10.879414558410645
    5. ')])' → logprob: -12.004414558410645
    6. ')
' → logprob: -12.629414558410645
    7. '   ' → logprob: -13.004414558410645
    8. '))' → logprob: -13.254414558410645
    9. ')`' → logprob: -13.754414558410645
    10. '),' → logprob: -13.879414558410645

Token 44: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11189284175634384
    2. ']' → logprob: -2.8618929386138916
    3. 'for' → logprob: -3.1118929386138916
    4. ')' → logprob: -5.9868927001953125
    5. ' ]' → logprob: -6.7368927001953125
    6. ' ' → logprob: -8.736892700195312
    7. ')]' → logprob: -8.986892700195312
    8. '   ' → logprob: -9.486892700195312
    9. '	for' → logprob: -9.486892700195312
    10. '}' → logprob: -11.361892700195312

Token 45: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.827347457408905
    2. ' range' → logprob: -0.827347457408905
    3. 'i' → logprob: -2.32734751701355
    4. 'range' → logprob: -3.57734751701355
    5. ' ' → logprob: -9.827347755432129
    6. ' in' → logprob: -11.202347755432129
    7. ' A' → logprob: -12.577347755432129
    8. '	range' → logprob: -12.952347755432129
    9. ')' → logprob: -13.327347755432129
    10. 'A' → logprob: -13.327347755432129

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0030990466475486755
    2. 'in' → logprob: -5.878098964691162
    3. ' ' → logprob: -8.37809944152832
    4. 'range' → logprob: -10.87809944152832
    5. ' range' → logprob: -11.00309944152832
    6. '  ' → logprob: -12.00309944152832
    7. ')' → logprob: -12.25309944152832
    8. ',' → logprob: -12.37809944152832
    9. '<|end|>' → logprob: -12.62809944152832
    10. ' i' → logprob: -12.75309944152832

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47407862544059753
    2. ' range' → logprob: -0.9740786552429199
    3. '	range' → logprob: -14.224078178405762
    4. ' xrange' → logprob: -14.724078178405762
    5. '(range' → logprob: -15.349078178405762
    6. ' ' → logprob: -15.599078178405762
    7. 'rang' → logprob: -16.099079132080078
    8. '_range' → logprob: -17.724079132080078
    9. '.range' → logprob: -17.724079132080078
    10. ')' → logprob: -17.974079132080078

Token 48: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -3.547789674485102e-05
    2. '(' → logprob: -10.250035285949707
    3. 'len' → logprob: -18.250036239624023
    4. '(
' → logprob: -18.625036239624023
    5. '(length' → logprob: -19.125036239624023
    6. ' (' → logprob: -19.375036239624023
    7. '<len' → logprob: -19.625036239624023
    8. ' len' → logprob: -20.125036239624023
    9. ',len' → logprob: -20.500036239624023
    10. '(l' → logprob: -20.625036239624023

Token 49: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0005537479883059859
    2. '(' → logprob: -7.500553607940674
    3. '(
' → logprob: -14.625554084777832
    4. ')' → logprob: -16.000553131103516
    5. 'A' → logprob: -16.125553131103516
    6. '(

' → logprob: -16.625553131103516
    7. ' (' → logprob: -17.125553131103516
    8. '(B' → logprob: -18.250553131103516
    9. '(I' → logprob: -18.500553131103516
    10. '(a' → logprob: -19.250553131103516

Token 50: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005358747439458966
    2. ')]' → logprob: -8.00053596496582
    3. ')' → logprob: -8.62553596496582
    4. ' ))' → logprob: -11.75053596496582
    5. ')))' → logprob: -12.37553596496582
    6. '))]
' → logprob: -12.87553596496582
    7. ' ' → logprob: -13.25053596496582
    8. '   ' → logprob: -13.50053596496582
    9. ')])' → logprob: -13.62553596496582
    10. '()))' → logprob: -14.12553596496582

Token 51: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10401762276887894
    2. ']' → logprob: -2.354017734527588
    3. ')' → logprob: -5.604017734527588
    4. '])' → logprob: -9.60401725769043
    5. '])]' → logprob: -10.35401725769043
    6. ')])' → logprob: -11.60401725769043
    7. '   ' → logprob: -11.85401725769043
    8. ' ]' → logprob: -13.97901725769043
    9. ']
' → logprob: -14.22901725769043
    10. '')]' → logprob: -14.60401725769043

Token 52: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024141794070601463
    2. '
' → logprob: -4.149141788482666
    3. '

' → logprob: -5.274141788482666
    4. '<|end|>' → logprob: -6.649141788482666
    5. '```' → logprob: -7.524141788482666
    6. '#' → logprob: -7.774141788482666
    7. ' def' → logprob: -8.399142265319824
    8. '\' → logprob: -9.024142265319824
    9. '[' → logprob: -9.149142265319824
    10. '<|end|>' → logprob: -9.649142265319824

Token 53: ' sort' (ID: 4506)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -1.8146263360977173
    2. ' solve' → logprob: -1.9396263360977173
    3. ' count' → logprob: -2.0646262168884277
    4. ' max' → logprob: -2.1896262168884277
    5. ' find' → logprob: -2.1896262168884277
    6. ' process' → logprob: -2.6896262168884277
    7. ' main' → logprob: -2.9396262168884277
    8. ' equal' → logprob: -3.1896262168884277
    9. ' sum' → logprob: -3.5646262168884277
    10. ' maximum' → logprob: -3.6896262168884277

Token 54: '_list' (ID: 4162)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.35464975237846375
    2. '(A' → logprob: -1.8546497821807861
    3. '_' → logprob: -2.729649782180786
    4. '(' → logprob: -3.479649782180786
    5. '_items' → logprob: -5.104649543762207
    6. '_array' → logprob: -5.104649543762207
    7. 'ed' → logprob: -5.104649543762207
    8. '```' → logprob: -5.104649543762207
    9. '(_' → logprob: -5.479649543762207
    10. '_list' → logprob: -6.104649543762207

Token 55: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06022176891565323
    2. '(A' → logprob: -2.9352216720581055
    3. '_' → logprob: -5.5602216720581055
    4. '_by' → logprob: -7.4352216720581055
    5. '()' → logprob: -8.560221672058105
    6. '(_' → logprob: -9.060221672058105
    7. 's' → logprob: -9.310221672058105
    8. 'def' → logprob: -9.810221672058105
    9. '((' → logprob: -9.935221672058105
    10. '(()' → logprob: -10.185221672058105

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006950510665774345
    2. ')' → logprob: -5.006950378417969
    3. '):
' → logprob: -8.631950378417969
    4. ',' → logprob: -10.881950378417969
    5. ' ):' → logprob: -11.131950378417969
    6. '   ' → logprob: -12.256950378417969
    7. ')):' → logprob: -12.256950378417969
    8. ')]' → logprob: -12.881950378417969
    9. '(A' → logprob: -13.756950378417969
    10. '))' → logprob: -14.006950378417969

Token 57: '   ' (ID: 271)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.0755500793457031
    2. '   ' → logprob: -1.2005500793457031
    3. ' sorted' → logprob: -1.4505500793457031
    4. ' return' → logprob: -2.450550079345703
    5. 'return' → logprob: -3.950550079345703
    6. 'A' → logprob: -4.950550079345703
    7. ' A' → logprob: -4.950550079345703
    8. '(sorted' → logprob: -5.825550079345703
    9. ' ' → logprob: -7.825550079345703
    10. '(A' → logprob: -8.575550079345703

Token 58: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31585216522216797
    2. '   ' → logprob: -1.940852165222168
    3. 'return' (adapté à ' return') → logprob: -2.065852165222168
    4. ' A' → logprob: -8.065852165222168
    5. 'A' → logprob: -9.190852165222168
    6. ' ' → logprob: -9.565852165222168
    7. ' sorted' → logprob: -10.565852165222168
    8. 'sorted' → logprob: -11.315852165222168
    9. '  ' → logprob: -11.940852165222168
    10. '    
' → logprob: -12.815852165222168

Token 59: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.3485088050365448
    2. ' sorted' → logprob: -1.2235088348388672
    3. '   ' → logprob: -10.473508834838867
    4. ' ' → logprob: -10.848508834838867
    5. '(sorted' → logprob: -11.973508834838867
    6. 's' → logprob: -12.598508834838867
    7. '  ' → logprob: -13.473508834838867
    8. '.sorted' → logprob: -13.598508834838867
    9. 'sort' → logprob: -13.848508834838867
    10. ' ' → logprob: -14.098508834838867

Token 60: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760558247566223
    2. '(A' → logprob: -0.8260558247566223
    3. '(
' → logprob: -9.701055526733398
    4. '(

' → logprob: -10.201055526733398
    5. '((' → logprob: -12.326055526733398
    6. '_list' → logprob: -12.326055526733398
    7. '(list' → logprob: -13.826055526733398
    8. '```' → logprob: -14.076055526733398
    9. '<|end|>' → logprob: -14.076055526733398
    10. ' (' → logprob: -14.326055526733398

Token 61: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -14.500001907348633
    4. ')
' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.250001907348633
    6. ']' → logprob: -17.750001907348633
    7. ')`' → logprob: -18.000001907348633
    8. ')}' → logprob: -18.250001907348633
    9. '())' → logprob: -18.375001907348633
    10. '[' → logprob: -18.375001907348633

Token 62: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001463793101720512
    2. '<|end|>' → logprob: -8.001463890075684
    3. '```' → logprob: -8.376463890075684
    4. '

' → logprob: -8.626463890075684
    5. '<|end|>' → logprob: -8.876463890075684
    6. 'A' → logprob: -9.001463890075684
    7. '
' → logprob: -9.376463890075684
    8. '\' → logprob: -9.501463890075684
    9. '#' → logprob: -9.876463890075684
    10. '(' → logprob: -10.126463890075684

Token 63: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011279122903943062
    2. ' process' → logprob: -5.636279106140137
    3. ' solve' → logprob: -5.886279106140137
    4. ' def' → logprob: -6.761279106140137
    5. ' sort' → logprob: -7.136279106140137
    6. ' calculate' → logprob: -7.261279106140137
    7. ' find' → logprob: -7.636279106140137
    8. 'main' → logprob: -7.886279106140137
    9. '_main' → logprob: -8.386279106140137
    10. ' compute' → logprob: -8.761279106140137

Token 64: '_' (ID: 62)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.17307788133621216
    2. '_possible' → logprob: -2.6730778217315674
    3. '_valid' → logprob: -3.0480778217315674
    4. '_' → logprob: -4.1730780601501465
    5. '_non' → logprob: -4.2980780601501465
    6. '_in' → logprob: -5.4230780601501465
    7. '_str' → logprob: -5.9230780601501465
    8. '_good' → logprob: -6.9230780601501465
    9. '_pos' → logprob: -6.9230780601501465
    10. '_fe' → logprob: -7.4230780601501465

Token 65: 'odd' (ID: 18303)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.8687552809715271
    2. 'sorted' → logprob: -1.4937553405761719
    3. 'valid' → logprob: -1.6187553405761719
    4. 'possible' → logprob: -2.118755340576172
    5. 'all' → logprob: -4.243755340576172
    6. 'fe' → logprob: -4.743755340576172
    7. 'strict' → logprob: -5.243755340576172
    8. 'beautiful' → logprob: -5.993755340576172
    9. 'good' → logprob: -6.868755340576172
    10. 'empty' → logprob: -7.118755340576172

Token 66: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005616117268800735
    2. '_' → logprob: -8.125561714172363
    3. '(_' → logprob: -9.125561714172363
    4. '(_)' → logprob: -10.250561714172363
    5. '("("' → logprob: -11.000561714172363
    6. '(a' → logprob: -11.125561714172363
    7. '(A' → logprob: -11.500561714172363
    8. '(n' → logprob: -11.500561714172363
    9. ' (' → logprob: -11.875561714172363
    10. '('' → logprob: -12.125561714172363

Token 67: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011690518818795681
    2. '):' → logprob: -4.511690616607666
    3. '(n' → logprob: -7.511690616607666
    4. '(' → logprob: -9.886690139770508
    5. ')n' → logprob: -10.761690139770508
    6. 'n' → logprob: -12.261690139770508
    7. '_' → logprob: -12.511690139770508
    8. ' )' → logprob: -12.886690139770508
    9. ')>' → logprob: -13.386690139770508
    10. ':)' → logprob: -13.886690139770508

Token 68: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7732549905776978
    2. '(n' → logprob: -0.8982549905776978
    3. 'n' → logprob: -2.648254871368408
    4. ' n' → logprob: -3.273254871368408
    5. ' (' → logprob: -3.898254871368408
    6. '   ' → logprob: -6.898254871368408
    7. ' return' → logprob: -7.273254871368408
    8. 'return' → logprob: -8.148255348205566
    9. ')' → logprob: -9.398255348205566
    10. ' ' → logprob: -10.148255348205566

Token 69: ' return' (ID: 622)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0164306852966547
    2. 'n' → logprob: -4.766430854797363
    3. ' return' → logprob: -4.891430854797363
    4. '   ' → logprob: -8.891430854797363
    5. '(n' → logprob: -9.891430854797363
    6. 'return' (adapté à ' return') → logprob: -10.016430854797363
    7. ' (' → logprob: -10.891430854797363
    8. ' ' → logprob: -11.266430854797363
    9. '(' → logprob: -11.641430854797363
    10. '	n' → logprob: -14.266430854797363

Token 70: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008616935461759567
    2. 'n' → logprob: -4.758616924285889
    3. ' (' → logprob: -14.008617401123047
    4. '(n' → logprob: -14.133617401123047
    5. ' ' → logprob: -15.133617401123047
    6. ' ' → logprob: -15.383617401123047
    7. '(' → logprob: -15.883617401123047
    8. ' bool' → logprob: -16.258617401123047
    9. '	n' → logprob: -16.258617401123047
    10. ' True' → logprob: -17.133617401123047

Token 71: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31329429149627686
    2. '%' → logprob: -1.3132942914962769
    3. ' ' → logprob: -10.688294410705566
    4. ' ' → logprob: -11.688294410705566
    5. '()%' → logprob: -14.563294410705566
    6. ' %
' → logprob: -15.563294410705566
    7. '1' → logprob: -15.813294410705566
    8. '()' → logprob: -16.06329345703125
    9. ')' → logprob: -16.31329345703125
    10. '_' → logprob: -17.18829345703125

Token 72: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01603436842560768
    2. ' ' → logprob: -4.1410346031188965
    3. '```' → logprob: -16.141035079956055
    4. '1' → logprob: -18.203535079956055
    5. '   ' → logprob: -18.328535079956055
    6. '3' → logprob: -18.391035079956055
    7. '۲' → logprob: -18.391035079956055
    8. '  ' → logprob: -18.891035079956055
    9. ' ' → logprob: -19.328535079956055
    10. '<|end|>' → logprob: -19.391035079956055

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -16.750001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '۲' → logprob: -20.125001907348633
    6. '  ' → logprob: -20.312501907348633
    7. '{' → logprob: -20.687501907348633
    8. '२' → logprob: -21.062501907348633
    9. '٢' → logprob: -21.375001907348633
    10. '২' → logprob: -21.687501907348633

Token 74: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.311309814453125
    2. '==' → logprob: -1.811309814453125
    3. ' !=' → logprob: -2.686309814453125
    4. '=' → logprob: -4.186309814453125
    5. '!=' → logprob: -4.686309814453125
    6. ' ' → logprob: -5.436309814453125
    7. '()==' → logprob: -5.436309814453125
    8. '()' → logprob: -6.311309814453125
    9. '()!=' → logprob: -7.436309814453125
    10. ' =' → logprob: -8.561309814453125

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519300878047943
    2. ' ' → logprob: -1.5019301176071167
    3. '0' → logprob: -14.001930236816406
    4. ' ' → logprob: -16.626930236816406
    5. '```' → logprob: -17.939430236816406
    6. '   ' → logprob: -18.314430236816406
    7. '  ' → logprob: -18.439430236816406
    8. '2' → logprob: -18.626930236816406
    9. 'space' → logprob: -19.314430236816406
    10. ')' → logprob: -19.689430236816406

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '0' → logprob: -18.000001907348633
    4. '```' → logprob: -20.750001907348633
    5. '' → logprob: -21.625001907348633
    6. '3' → logprob: -22.125001907348633
    7. '2' → logprob: -22.500001907348633
    8. '01' → logprob: -22.750001907348633
    9. '１' → logprob: -22.875001907348633
    10. '4' → logprob: -23.000001907348633

Token 77: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2643960416316986
    2. 'def' → logprob: -1.639396071434021
    3. '<|end|>' → logprob: -3.7643959522247314
    4. '

' → logprob: -5.0143961906433105
    5. '\n' → logprob: -5.8893961906433105
    6. '\' → logprob: -5.8893961906433105
    7. '#' → logprob: -7.3893961906433105
    8. '```' → logprob: -7.8893961906433105
    9. '' → logprob: -8.014395713806152
    10. '<|end|>' → logprob: -8.389395713806152

Token 78: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06114291772246361
    2. '
' → logprob: -3.811142921447754
    3. 'd' → logprob: -4.186142921447754
    4. '#' → logprob: -4.811142921447754
    5. 'n' → logprob: -5.436142921447754
    6. 'a' → logprob: -6.061142921447754
    7. '```' → logprob: -6.686142921447754
    8. ':' → logprob: -7.061142921447754
    9. '<|end|>' → logprob: -7.186142921447754
    10. '\' → logprob: -7.311142921447754

Token 79: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0352930948138237
    2. ' check' → logprob: -4.160293102264404
    3. ' is' → logprob: -4.785293102264404
    4. ' find' → logprob: -6.035293102264404
    5. ' can' → logprob: -6.285293102264404
    6. ' solve' → logprob: -6.285293102264404
    7. ' sum' → logprob: -6.410293102264404
    8. ' calculate' → logprob: -7.035293102264404
    9. ' count' → logprob: -7.910293102264404
    10. 'main' → logprob: -8.035292625427246

Token 80: '_m' (ID: 1285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8811887502670288
    2. '_max' → logprob: -1.1311887502670288
    3. ' _' → logprob: -2.7561888694763184
    4. '_sum' → logprob: -3.1311888694763184
    5. '_min' → logprob: -3.2561888694763184
    6. '_element' → logprob: -4.256188869476318
    7. '_average' → logprob: -4.506188869476318
    8. '_sorted' → logprob: -4.506188869476318
    9. '_elements' → logprob: -4.631188869476318
    10. '_value' → logprob: -5.006188869476318

Token 81: 'edian' (ID: 56611)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.28118661046028137
    2. 'edian' → logprob: -1.531186580657959
    3. 'ean' → logprob: -4.281186580657959
    4. 'a' → logprob: -5.281186580657959
    5. 'ost' → logprob: -5.906186580657959
    6. 'e' → logprob: -6.281186580657959
    7. 'od' → logprob: -6.531186580657959
    8. 'in' → logprob: -7.281186580657959
    9. 'ed' → logprob: -7.531186580657959
    10. 'iddle' → logprob: -7.781186580657959

Token 82: '_index' (ID: 7748)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21710608899593353
    2. '_' → logprob: -2.2171061038970947
    3. '_(' → logprob: -3.0921061038970947
    4. '(A' → logprob: -3.4671061038970947
    5. '_value' → logprob: -5.467105865478516
    6. '(_' → logprob: -7.092105865478516
    7. '_index' → logprob: -7.592105865478516
    8. '(a' → logprob: -8.092105865478516
    9. '_values' → logprob: -8.342105865478516
    10. '_range' → logprob: -8.467105865478516

Token 83: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007974773179739714
    2. '()' → logprob: -7.750797271728516
    3. '(A' → logprob: -8.000797271728516
    4. '():' → logprob: -10.625797271728516
    5. '(n' → logprob: -12.875797271728516
    6. '(
' → logprob: -13.000797271728516
    7. ' (' → logprob: -14.500797271728516
    8. '(

' → logprob: -14.750797271728516
    9. '(len' → logprob: -15.000797271728516
    10. '(a' → logprob: -15.625797271728516

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01822228543460369
    2. ')' → logprob: -4.018222332000732
    3. '):
' → logprob: -10.018221855163574
    4. ' ):' → logprob: -11.143221855163574
    5. ':' → logprob: -11.768221855163574
    6. '():' → logprob: -13.768221855163574
    7. ')：' → logprob: -14.018221855163574
    8. ')n' → logprob: -14.643221855163574
    9. '(n' → logprob: -14.768221855163574
    10. ' )' → logprob: -14.893221855163574

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08352993428707123
    2. ' n' → logprob: -3.7085299491882324
    3. 'n' → logprob: -4.083529949188232
    4. ' (' → logprob: -4.333529949188232
    5. '    ' → logprob: -4.458529949188232
    6. ' 
' → logprob: -5.333529949188232
    7. '(n' → logprob: -5.708529949188232
    8. ' ' → logprob: -6.208529949188232
    9. ' return' → logprob: -6.333529949188232
    10. '    
' → logprob: -6.583529949188232

Token 86: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3163679242134094
    2. 'return' (adapté à ' return') → logprob: -1.3163678646087646
    3. 'n' → logprob: -6.566368103027344
    4. '   ' → logprob: -7.191368103027344
    5. ' n' → logprob: -7.441368103027344
    6. ' (' → logprob: -8.691368103027344
    7. '```' → logprob: -9.441368103027344
    8. ' 
' → logprob: -10.316368103027344
    9. '(n' → logprob: -10.816368103027344
    10. '
' → logprob: -11.566368103027344

Token 87: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.27185672521591187
    2. 'n' → logprob: -2.1468567848205566
    3. ' (' → logprob: -2.2718567848205566
    4. '(n' → logprob: -4.021856784820557
    5. '(' → logprob: -9.146856307983398
    6. '   ' → logprob: -10.896856307983398
    7. ' ' → logprob: -12.146856307983398
    8. '[n' → logprob: -12.646856307983398
    9. '	n' → logprob: -12.646856307983398
    10. ' ' → logprob: -12.771856307983398

Token 88: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.10026933997869492
    2. '//' → logprob: -2.350269317626953
    3. ' ' → logprob: -9.975269317626953
    4. ' //
' → logprob: -12.100269317626953
    5. ' ' → logprob: -12.850269317626953
    6. '```' → logprob: -13.475269317626953
    7. '0' → logprob: -14.475269317626953
    8. '   ' → logprob: -14.600269317626953
    9. '`' → logprob: -14.600269317626953
    10. ' 
' → logprob: -14.850269317626953

Token 89: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.250028610229492
    4. '22' → logprob: -16.875028610229492
    5. '23' → logprob: -17.000028610229492
    6. '  ' → logprob: -17.375028610229492
    7. '```' → logprob: -17.750028610229492
    8. '1' → logprob: -17.875028610229492
    9. '۲' → logprob: -18.250028610229492
    10. '
' → logprob: -19.062528610229492

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -19.500001907348633
    4. '23' → logprob: -20.000001907348633
    5. '22' → logprob: -20.000001907348633
    6. '```' → logprob: -20.000001907348633
    7. '۲' → logprob: -20.500001907348633
    8. '   ' → logprob: -21.375001907348633
    9. '  ' → logprob: -21.500001907348633
    10. '21' → logprob: -21.625001907348633

Token 91: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003063630312681198
    2. 'n' → logprob: -6.503063678741455
    3. '#' → logprob: -7.378063678741455
    4. '<|end|>' → logprob: -7.878063678741455
    5. 'A' → logprob: -9.378063201904297
    6. 'a' → logprob: -9.503063201904297
    7. 'd' → logprob: -9.628063201904297
    8. '```' → logprob: -9.753063201904297
    9. '\' → logprob: -10.003063201904297
    10. '
' → logprob: -10.128063201904297

Token 93: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03121807798743248
    2. ' find' → logprob: -4.1562180519104
    3. 'main' → logprob: -5.4062180519104
    4. ' solve' → logprob: -5.7812180519104
    5. ' can' → logprob: -6.6562180519104
    6. ' median' → logprob: -6.6562180519104
    7. ' calculate' → logprob: -6.9062180519104
    8. ' process' → logprob: -7.0312180519104
    9. ' max' → logprob: -7.1562180519104
    10. ' is' → logprob: -7.7812180519104

Token 94: '_m' (ID: 1285)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.305798202753067
    2. '_max' → logprob: -2.305798292160034
    3. '(' → logprob: -2.930798292160034
    4. '_average' → logprob: -4.055798053741455
    5. '(A' → logprob: -4.180798053741455
    6. '_' → logprob: -4.430798053741455
    7. '_m' → logprob: -4.805798053741455
    8. '_de' → logprob: -4.805798053741455
    9. '_total' → logprob: -4.805798053741455
    10. '_difference' → logprob: -4.930798053741455

Token 95: 'edian' (ID: 56611)
  Prédit: 'edian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edian' → logprob: -0.013916072435677052
    2. 'ean' → logprob: -5.013916015625
    3. 'e' → logprob: -5.888916015625
    4. 'ed' → logprob: -6.388916015625
    5. '_e' → logprob: -6.763916015625
    6. 'edians' → logprob: -7.263916015625
    7. 'edi' → logprob: -7.388916015625
    8. '_' → logprob: -9.263916015625
    9. 'edia' → logprob: -10.513916015625
    10. 'ead' → logprob: -11.263916015625

Token 96: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.35226523876190186
    2. '(' → logprob: -1.2272652387619019
    3. '_(' → logprob: -6.977265357971191
    4. '(_' → logprob: -7.477265357971191
    5. '_' → logprob: -7.977265357971191
    6. '(a' → logprob: -8.352265357971191
    7. '_list' → logprob: -8.477265357971191
    8. '(n' → logprob: -8.602265357971191
    9. '_value' → logprob: -8.727265357971191
    10. 'def' → logprob: -9.102265357971191

Token 97: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011645073536783457
    2. ')' → logprob: -6.876164436340332
    3. '):
' → logprob: -9.126164436340332
    4. '   ' → logprob: -11.626164436340332
    5. ' ):' → logprob: -12.001164436340332
    6. ',' → logprob: -13.126164436340332
    7. ':' → logprob: -13.501164436340332
    8. '[]):' → logprob: -13.751164436340332
    9. '):
' → logprob: -14.251164436340332
    10. '[' → logprob: -14.376164436340332

Token 98: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7067043781280518
    2. ' n' → logprob: -0.8317043781280518
    3. ' start' → logprob: -4.456704139709473
    4. ' median' → logprob: -4.706704139709473
    5. 'start' → logprob: -4.831704139709473
    6. 'index' → logprob: -4.831704139709473
    7. ' index' → logprob: -5.081704139709473
    8. 'median' → logprob: -5.206704139709473
    9. ' indices' → logprob: -5.456704139709473
    10. ' is' → logprob: -5.706704139709473

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018041854491457343
    2. ')' → logprob: -9.1251802444458
    3. '):
' → logprob: -9.6251802444458
    4. ' ):' → logprob: -13.5001802444458
    5. '   ' → logprob: -13.6251802444458
    6. ':' → logprob: -14.2501802444458
    7. ',' → logprob: -14.3751802444458
    8. '[]):' → logprob: -14.8751802444458
    9. '):
' → logprob: -15.1251802444458
    10. '[' → logprob: -15.1251802444458

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014274981804192066
    2. ' return' → logprob: -7.37642765045166
    3. ' if' → logprob: -7.62642765045166
    4. ' sorted' → logprob: -8.37642765045166
    5. ' A' → logprob: -9.87642765045166
    6. 'A' → logprob: -11.87642765045166
    7. '   ' → logprob: -12.12642765045166
    8. '    ' → logprob: -12.62642765045166
    9. 'sorted' → logprob: -12.62642765045166
    10. 'return' → logprob: -13.12642765045166

Token 101: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.38491517305374146
    2. 'return' → logprob: -1.8849151134490967
    3. '   ' → logprob: -2.0099151134490967
    4. 'sorted' → logprob: -4.384915351867676
    5. ' if' → logprob: -5.009915351867676
    6. 'A' → logprob: -5.134915351867676
    7. ' return' → logprob: -5.509915351867676
    8. 'median' → logprob: -6.009915351867676
    9. 'mid' → logprob: -6.634915351867676
    10. 'index' → logprob: -8.759915351867676

Token 102: ' is' (ID: 382)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.030061140656471252
    2. 'N' → logprob: -3.7800612449645996
    3. ' is' → logprob: -5.2800612449646
    4. ' len' → logprob: -6.7800612449646
    5. ' not' → logprob: -8.780060768127441
    6. 'is' → logprob: -9.030060768127441
    7. 'len' → logprob: -9.280060768127441
    8. ' get' → logprob: -9.655060768127441
    9. ' n' → logprob: -10.155060768127441
    10. ' ' → logprob: -10.280060768127441

Token 103: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.988221684878226e-06
    2. '_od' → logprob: -12.125006675720215
    3. '_n' → logprob: -14.750006675720215
    4. 'odd' → logprob: -15.250006675720215
    5. '(N' → logprob: -15.375006675720215
    6. '_even' → logprob: -15.375006675720215
    7. '_o' → logprob: -15.750006675720215
    8. '(n' → logprob: -15.875006675720215
    9. '(' → logprob: -16.62500762939453
    10. '_(' → logprob: -16.87500762939453

Token 104: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -4.246537173457909e-06
    2. 'N' → logprob: -13.875003814697266
    3. 'Odd' → logprob: -13.875003814697266
    4. 'od' → logprob: -14.000003814697266
    5. 'n' → logprob: -14.500003814697266
    6. '(N' → logprob: -15.000003814697266
    7. ' odd' → logprob: -15.000003814697266
    8. '_' → logprob: -15.750003814697266
    9. '```' → logprob: -16.875003814697266
    10. 'o' → logprob: -17.875003814697266

Token 105: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004830957390367985
    2. '(' → logprob: -5.379830837249756
    3. ' (' → logprob: -9.254831314086914
    4. '(n' → logprob: -9.379831314086914
    5. ' ' → logprob: -11.129831314086914
    6. ')' → logprob: -12.254831314086914
    7. '  ' → logprob: -12.879831314086914
    8. '```' → logprob: -13.129831314086914
    9. '(
' → logprob: -13.254831314086914
    10. '   ' → logprob: -13.379831314086914

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013958042487502098
    2. '):
' → logprob: -4.888957977294922
    3. ' ):' → logprob: -5.138957977294922
    4. ')' → logprob: -7.763957977294922
    5. ' ):
' → logprob: -10.638957977294922
    6. '):
' → logprob: -11.888957977294922
    7. ':' → logprob: -12.263957977294922
    8. ' )' → logprob: -13.138957977294922
    9. '   ' → logprob: -13.388957977294922
    10. '):

' → logprob: -13.513957977294922

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5923973917961121
    2. ':' → logprob: -0.8423973917961121
    3. '   ' → logprob: -4.467397212982178
    4. ':
' → logprob: -6.092397212982178
    5. ' return' → logprob: -7.092397212982178
    6. ' :' → logprob: -7.217397212982178
    7. '):' → logprob: -7.592397212982178
    8. '):
' → logprob: -8.967397689819336
    9. '():' → logprob: -9.092397689819336
    10. '():
' → logprob: -9.717397689819336

Token 108: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1880253553390503
    2. 'return' (adapté à ' return') → logprob: -2.06302547454834
    3. ' return' → logprob: -3.18802547454834
    4. '       ' → logprob: -5.81302547454834
    5. '	return' → logprob: -10.56302547454834
    6. ' ' → logprob: -10.68802547454834
    7. ':return' → logprob: -11.18802547454834
    8. '
' → logprob: -11.31302547454834
    9. '  ' → logprob: -11.68802547454834
    10. '```' → logprob: -12.56302547454834

Token 109: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0031846018973737955
    2. 'A' → logprob: -5.753184795379639
    3. '	A' → logprob: -12.87818431854248
    4. ' ' → logprob: -13.75318431854248
    5. '   ' → logprob: -14.00318431854248
    6. ' ' → logprob: -14.12818431854248
    7. '(A' → logprob: -14.12818431854248
    8. '    ' → logprob: -14.50318431854248
    9. ' (' → logprob: -15.75318431854248
    10. ' А' → logprob: -16.378185272216797

Token 110: '[get' (ID: 160135)
  Prédit: '[get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[get' → logprob: -0.00046141279744915664
    2. '[' → logprob: -8.12546157836914
    3. '[N' → logprob: -8.75046157836914
    4. '[(' → logprob: -12.62546157836914
    5. '[
' → logprob: -13.50046157836914
    6. '[g' → logprob: -14.12546157836914
    7. '[A' → logprob: -14.62546157836914
    8. '[len' → logprob: -14.87546157836914
    9. '[n' → logprob: -15.25046157836914
    10. 'get' → logprob: -16.12546157836914

Token 111: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.5213274309644476e-05
    2. '_' → logprob: -11.125015258789062
    3. '_med' → logprob: -16.125015258789062
    4. 'median' → logprob: -16.250015258789062
    5. 'm' → logprob: -16.375015258789062
    6. '(m' → logprob: -17.000015258789062
    7. '_medium' → logprob: -17.250015258789062
    8. ' _' → logprob: -17.500015258789062
    9. '_n' → logprob: -18.250015258789062
    10. '_middle' → logprob: -18.250015258789062

Token 112: 'edian' (ID: 56611)
  Prédit: 'edian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edian' → logprob: -0.0436544269323349
    2. 'ed' → logprob: -3.168654441833496
    3. 'edi' → logprob: -7.918654441833496
    4. 'edia' → logprob: -8.668654441833496
    5. 'e' → logprob: -10.168654441833496
    6. 'ean' → logprob: -10.543654441833496
    7. 'adian' → logprob: -10.918654441833496
    8. 'edians' → logprob: -11.543654441833496
    9. 'edan' → logprob: -12.668654441833496
    10. 'median' → logprob: -13.168654441833496

Token 113: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.180879816180095e-05
    2. '_' → logprob: -11.000051498413086
    3. '_i' → logprob: -11.500051498413086
    4. '_idx' → logprob: -11.750051498413086
    5. ')' → logprob: -12.625051498413086
    6. ')_' → logprob: -12.750051498413086
    7. ' _' → logprob: -13.125051498413086
    8. '_ind' → logprob: -13.250051498413086
    9. 'Index' → logprob: -13.750051498413086
    10. '_x' → logprob: -14.250051498413086

Token 114: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.003056023269891739
    2. '(' → logprob: -5.878056049346924
    3. '(n' → logprob: -9.253055572509766
    4. '](' → logprob: -9.628055572509766
    5. ' (' → logprob: -10.003055572509766
    6. ']' → logprob: -10.878055572509766
    7. '(
' → logprob: -12.003055572509766
    8. ' ' → logprob: -12.253055572509766
    9. '```' → logprob: -12.378055572509766
    10. ')' → logprob: -12.878055572509766

Token 115: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006409500492736697
    2. ')' → logprob: -8.000640869140625
    3. ')]
' → logprob: -8.500640869140625
    4. ' )' → logprob: -9.875640869140625
    5. ')])' → logprob: -11.250640869140625
    6. '   ' → logprob: -11.500640869140625
    7. ']' → logprob: -11.625640869140625
    8. '())' → logprob: -12.750640869140625
    9. ')]

' → logprob: -12.875640869140625
    10. '))' → logprob: -13.125640869140625

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09123138338327408
    2. 'else' → logprob: -2.591231346130371
    3. ' else' → logprob: -4.466231346130371
    4. '    
' → logprob: -7.341231346130371
    5. '
' → logprob: -9.716231346130371
    6. '	else' → logprob: -10.341231346130371
    7. '   
' → logprob: -12.216231346130371
    8. '```' → logprob: -12.216231346130371
    9. 'return' → logprob: -12.341231346130371
    10. 'elif' → logprob: -12.841231346130371

Token 117: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.34931883215904236
    2. ' else' → logprob: -1.2243188619613647
    3. '   ' → logprob: -7.099318981170654
    4. '	else' → logprob: -10.599318504333496
    5. ' ' → logprob: -11.724318504333496
    6. 'return' → logprob: -12.474318504333496
    7. 'e' → logprob: -12.849318504333496
    8. 'elif' → logprob: -13.224318504333496
    9. '_else' → logprob: -13.599318504333496
    10. '    
' → logprob: -13.849318504333496

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42470160126686096
    2. ' (' → logprob: -1.4247015714645386
    3. ':
' → logprob: -2.799701690673828
    4. '(' → logprob: -3.424701690673828
    5. '   ' → logprob: -5.549701690673828
    6. ' return' → logprob: -6.299701690673828
    7. ' :' → logprob: -6.799701690673828
    8. '(
' → logprob: -6.799701690673828
    9. '    ' → logprob: -6.924701690673828
    10. ' ' → logprob: -7.174701690673828

Token 119: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.047900013625621796
    2. '(A' → logprob: -3.1728999614715576
    3. '(' → logprob: -6.422900199890137
    4. '   ' → logprob: -6.547900199890137
    5. '    ' → logprob: -6.672900199890137
    6. ' ' → logprob: -7.797900199890137
    7. ' ((' → logprob: -10.922900199890137
    8. ' A' → logprob: -11.047900199890137
    9. 'A' → logprob: -11.297900199890137
    10. ' `(' → logprob: -11.422900199890137

Token 120: ' return' (ID: 622)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08383922278881073
    2. ' return' → logprob: -2.583839178085327
    3. 'return' (adapté à ' return') → logprob: -5.958839416503906
    4. '(' → logprob: -6.833839416503906
    5. '(A' → logprob: -7.083839416503906
    6. ' ' → logprob: -7.958839416503906
    7. ' (
' → logprob: -10.833839416503906
    8. '   ' → logprob: -11.208839416503906
    9. '    ' → logprob: -11.583839416503906
    10. ' A' → logprob: -11.833839416503906

Token 121: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.023304294794797897
    2. '(A' → logprob: -3.7733042240142822
    3. ' ' → logprob: -10.648303985595703
    4. '   ' → logprob: -11.398303985595703
    5. '(' → logprob: -11.398303985595703
    6. '(int' → logprob: -12.398303985595703
    7. ' ' → logprob: -12.898303985595703
    8. '    ' → logprob: -13.898303985595703
    9. 'int' → logprob: -14.023303985595703
    10. ' ((' → logprob: -14.398303985595703

Token 122: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5761643648147583
    2. ' A' → logprob: -0.8261643648147583
    3. '(A' → logprob: -8.701164245605469
    4. ' (' → logprob: -10.326164245605469
    5. '   ' → logprob: -10.951164245605469
    6. ' ' → logprob: -12.451164245605469
    7. '	A' → logprob: -12.951164245605469
    8. '(' → logprob: -14.576164245605469
    9. '    ' → logprob: -14.826164245605469
    10. '  ' → logprob: -15.451164245605469

Token 123: '[get' (ID: 160135)
  Prédit: '[get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[get' → logprob: -0.00765738170593977
    2. '[' → logprob: -4.882657527923584
    3. '[N' → logprob: -10.882657051086426
    4. '[(' → logprob: -11.132657051086426
    5. '[len' → logprob: -11.507657051086426
    6. '[
' → logprob: -12.632657051086426
    7. '[int' → logprob: -13.007657051086426
    8. 'get' → logprob: -13.882657051086426
    9. '[n' → logprob: -14.757657051086426
    10. ' [' → logprob: -15.257657051086426

Token 124: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.292907877039397e-06
    2. 'median' → logprob: -13.50000286102295
    3. 'edian' → logprob: -14.62500286102295
    4. '_n' → logprob: -14.87500286102295
    5. '_med' → logprob: -15.00000286102295
    6. 'm' → logprob: -16.250003814697266
    7. '_' → logprob: -16.500003814697266
    8. 'Median' → logprob: -17.125003814697266
    9. '   ' → logprob: -17.125003814697266
    10. 'ed' → logprob: -17.250003814697266

Token 125: 'edian' (ID: 56611)
  Prédit: 'edian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edian' → logprob: -0.013778991997241974
    2. 'ian' → logprob: -5.263779163360596
    3. 'median' → logprob: -6.013779163360596
    4. 'd' → logprob: -6.388779163360596
    5. '_m' → logprob: -6.888779163360596
    6. 'adian' → logprob: -7.013779163360596
    7. 'idian' → logprob: -7.263779163360596
    8. 'di' → logprob: -7.513779163360596
    9. 'an' → logprob: -8.138778686523438
    10. 'ed' → logprob: -8.388778686523438

Token 126: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.002734858775511384
    2. 'index' → logprob: -6.377734661102295
    3. 'ex' → logprob: -7.127734661102295
    4. 'x' → logprob: -9.377735137939453
    5. 'n' → logprob: -10.252735137939453
    6. 'dex' → logprob: -10.627735137939453
    7. 'Index' → logprob: -11.252735137939453
    8. ' index' → logprob: -11.377735137939453
    9. 'nd' → logprob: -11.502735137939453
    10. '2' → logprob: -11.627735137939453

Token 127: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001978118671104312
    2. '(' → logprob: -6.251977920532227
    3. '(n' → logprob: -10.626977920532227
    4. '(A' → logprob: -11.751977920532227
    5. '((' → logprob: -12.126977920532227
    6. '(
' → logprob: -12.251977920532227
    7. ' (' → logprob: -12.251977920532227
    8. '```' → logprob: -14.001977920532227
    9. 'N' → logprob: -14.251977920532227
    10. '   ' → logprob: -15.876977920532227

Token 128: ')]' (ID: 15710)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49618667364120483
    2. ']' → logprob: -1.2461867332458496
    3. ' -' → logprob: -2.3711867332458496
    4. ')' → logprob: -4.87118673324585
    5. ')]' → logprob: -6.74618673324585
    6. '(N' → logprob: -7.74618673324585
    7. '(n' → logprob: -7.74618673324585
    8. '   ' → logprob: -8.871186256408691
    9. ' ]' → logprob: -8.996186256408691
    10. ']+' → logprob: -9.996186256408691

Token 129: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06999856978654861
    2. '+' → logprob: -2.6949985027313232
    3. '+A' → logprob: -10.069998741149902
    4. ' ' → logprob: -11.319998741149902
    5. '   ' → logprob: -12.944998741149902
    6. '[' → logprob: -13.069998741149902
    7. ' +
' → logprob: -13.694998741149902
    8. ' ' → logprob: -14.319998741149902
    9. '```' → logprob: -15.069998741149902
    10. '+B' → logprob: -15.569998741149902

Token 130: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.018279412761330605
    2. 'A' → logprob: -4.018279552459717
    3. ' ' → logprob: -9.018279075622559
    4. ' ' → logprob: -12.268279075622559
    5. '	A' → logprob: -12.768279075622559
    6. '1' → logprob: -14.268279075622559
    7. ' 
' → logprob: -16.393280029296875
    8. ' А' → logprob: -16.893280029296875
    9. '_A' → logprob: -17.393280029296875
    10. '(A' → logprob: -17.643280029296875

Token 131: '[get' (ID: 160135)
  Prédit: '[get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[get' → logprob: -0.00012737659562844783
    2. '[' → logprob: -9.000127792358398
    3. '[(' → logprob: -12.625127792358398
    4. '[
' → logprob: -14.750127792358398
    5. ' [' → logprob: -16.8751277923584
    6. '[int' → logprob: -17.0001277923584
    7. 'get' → logprob: -17.1251277923584
    8. '[-' → logprob: -17.6251277923584
    9. '[((' → logprob: -17.8751277923584
    10. '[`' → logprob: -17.8751277923584

Token 132: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.0921942703134846e-05
    2. '_n' → logprob: -13.12501049041748
    3. '(m' → logprob: -13.37501049041748
    4. 'm' → logprob: -13.62501049041748
    5. 'median' → logprob: -14.00001049041748
    6. '_index' → logprob: -14.25001049041748
    7. '-' → logprob: -14.25001049041748
    8. '_' → logprob: -14.75001049041748
    9. 'edian' → logprob: -14.87501049041748
    10. ' -' → logprob: -15.25001049041748

Token 133: 'edian' (ID: 56611)
  Prédit: 'edian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edian' → logprob: -0.09967389702796936
    2. '_index' → logprob: -2.7246739864349365
    3. '_m' → logprob: -4.099673748016357
    4. 'ed' → logprob: -5.474673748016357
    5. 'd' → logprob: -5.724673748016357
    6. 'index' → logprob: -7.224673748016357
    7. 'get' → logprob: -7.349673748016357
    8. '_' → logprob: -7.474673748016357
    9. 'ian' → logprob: -7.474673748016357
    10. '_d' → logprob: -7.599673748016357

Token 134: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.001471410971134901
    2. 'ex' → logprob: -6.876471519470215
    3. 'dex' → logprob: -8.251471519470215
    4. 'index' → logprob: -9.626471519470215
    5. 'x' → logprob: -9.876471519470215
    6. 'n' → logprob: -11.001471519470215
    7. 'get' → logprob: -11.501471519470215
    8. 'Index' → logprob: -11.751471519470215
    9. 'nd' → logprob: -12.251471519470215
    10. 'e' → logprob: -12.501471519470215

Token 135: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03844834119081497
    2. '(' → logprob: -3.2884483337402344
    3. '(
' → logprob: -8.788448333740234
    4. '(n' → logprob: -8.913448333740234
    5. ' (' → logprob: -9.663448333740234
    6. '(A' → logprob: -10.163448333740234
    7. '((' → logprob: -11.288448333740234
    8. '(

' → logprob: -12.913448333740234
    9. ' ' → logprob: -15.038448333740234
    10. 'N' → logprob: -15.288448333740234

Token 136: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029526911675930023
    2. ' -' → logprob: -3.654526948928833
    3. ')' → logprob: -5.779526710510254
    4. ')-' → logprob: -10.279526710510254
    5. '(n' → logprob: -10.654526710510254
    6. '(' → logprob: -10.779526710510254
    7. ')]' → logprob: -11.279526710510254
    8. '(N' → logprob: -11.404526710510254
    9. 'n' → logprob: -11.904526710510254
    10. '-)' → logprob: -11.904526710510254

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004622611217200756
    2. ' ' → logprob: -5.379622459411621
    3. '   ' → logprob: -14.004622459411621
    4. ']' → logprob: -15.129622459411621
    5. '<|end|>' → logprob: -15.129622459411621
    6. '  ' → logprob: -15.379622459411621
    7. '
' → logprob: -15.504622459411621
    8. ' 
' → logprob: -16.004623413085938
    9. ' ' → logprob: -16.379623413085938
    10. '```' → logprob: -16.504623413085938

Token 138: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013847592053934932
    2. ')//' → logprob: -7.126384735107422
    3. ' )' → logprob: -7.501384735107422
    4. '   ' → logprob: -11.251384735107422
    5. ']' → logprob: -11.751384735107422
    6. '）' → logprob: -13.126384735107422
    7. '])' → logprob: -13.251384735107422
    8. ')/' → logprob: -14.251384735107422
    9. ' ' → logprob: -14.501384735107422
    10. ')>>' → logprob: -15.376384735107422

Token 139: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32001081109046936
    2. '//' → logprob: -1.695010781288147
    3. ' //' → logprob: -2.5700109004974365
    4. ')//' → logprob: -5.070010662078857
    5. '2' → logprob: -6.445010662078857
    6. '   ' → logprob: -6.695010662078857
    7. ' ' → logprob: -7.070010662078857
    8. ']' → logprob: -7.195010662078857
    9. '/' → logprob: -7.445010662078857
    10. ' ' → logprob: -7.570010662078857

Token 140: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17974960803985596
    2. ' ' → logprob: -1.804749608039856
    3. ' ' → logprob: -12.679749488830566
    4. '```' → logprob: -15.179749488830566
    5. ' 
' → logprob: -15.304749488830566
    6. '   ' → logprob: -15.367249488830566
    7. '۲' → logprob: -15.429749488830566
    8. '1' → logprob: -16.117250442504883
    9. '
' → logprob: -16.429750442504883
    10. '  ' → logprob: -16.492250442504883

Token 141: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.25000286102295
    4. '```' → logprob: -15.50000286102295
    5. '
' → logprob: -16.375001907348633
    6. '۲' → logprob: -16.500001907348633
    7. '٢' → logprob: -18.312501907348633
    8. '２' → logprob: -18.500001907348633
    9. '  ' → logprob: -18.750001907348633
    10. '२' → logprob: -18.937501907348633

Token 142: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4290003180503845
    2. '<|end|>' → logprob: -1.0540003776550293
    3. '<|end|>' → logprob: -9.553999900817871
    4. '```' → logprob: -9.678999900817871
    5. '()' → logprob: -10.303999900817871
    6. '}' → logprob: -10.303999900817871
    7. ']' → logprob: -10.803999900817871
    8. '
' → logprob: -11.303999900817871
    9. '\n' → logprob: -11.553999900817871
    10. '#' → logprob: -11.803999900817871

Token 143: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022605258971452713
    2. 'd' → logprob: -4.1476054191589355
    3. '#' → logprob: -5.1476054191589355
    4. 'n' → logprob: -8.147604942321777
    5. '(' → logprob: -8.897604942321777
    6. 'de' → logprob: -9.397604942321777
    7. '<|end|>' → logprob: -9.772604942321777
    8. 'a' → logprob: -10.272604942321777
    9. 'A' → logprob: -10.397604942321777
    10. '```' → logprob: -10.647604942321777

Token 144: ' sum' (ID: 4215)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0025372595991939306
    2. ' solve' → logprob: -6.252537250518799
    3. ' calculate' → logprob: -9.002537727355957
    4. '_' → logprob: -9.252537727355957
    5. 'main' → logprob: -9.252537727355957
    6. ' ' → logprob: -9.377537727355957
    7. ' process' → logprob: -9.752537727355957
    8. '_main' → logprob: -10.002537727355957
    9. ' find' → logprob: -10.377537727355957
    10. ' compute' → logprob: -11.127537727355957

Token 145: '_absolute' (ID: 131930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.764793872833252
    2. '(A' → logprob: -0.764793872833252
    3. '_' → logprob: -3.264793872833252
    4. '_elements' → logprob: -3.639793872833252
    5. '_list' → logprob: -6.764793872833252
    6. '_(' → logprob: -6.764793872833252
    7. '(a' → logprob: -8.014793395996094
    8. '(elements' → logprob: -8.514793395996094
    9. 'def' → logprob: -8.639793395996094
    10. '(lst' → logprob: -9.264793395996094

Token 146: '_d' (ID: 1565)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.2033340483903885
    2. '_difference' → logprob: -1.828334093093872
    3. '_values' → logprob: -4.328333854675293
    4. '_' → logprob: -5.328333854675293
    5. '_de' → logprob: -6.203333854675293
    6. '_diff' → logprob: -6.578333854675293
    7. '_d' → logprob: -6.828333854675293
    8. '_distance' → logprob: -7.828333854675293
    9. '_val' → logprob: -8.953333854675293
    10. '_error' → logprob: -10.078333854675293

Token 147: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03556107357144356
    2. 'ifference' → logprob: -3.4105610847473145
    3. 'e' → logprob: -6.4105610847473145
    4. 'i' → logprob: -9.410560607910156
    5. 'iff' → logprob: -9.785560607910156
    6. 'istance' → logprob: -10.660560607910156
    7. 'ef' → logprob: -10.660560607910156
    8. 'iffs' → logprob: -11.035560607910156
    9. ' if' → logprob: -11.285560607910156
    10. 'elta' → logprob: -11.410560607910156

Token 148: 'ferences' (ID: 10131)
  Prédit: 'ferences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -0.25220686197280884
    2. 'ference' → logprob: -1.502206802368164
    3. 'fer' → logprob: -8.252206802368164
    4. 'er' → logprob: -12.127206802368164
    5. 'f' → logprob: -12.502206802368164
    6. '```' → logprob: -12.877206802368164
    7. 'for' → logprob: -13.877206802368164
    8. '(' → logprob: -13.877206802368164
    9. 'feren' → logprob: -14.252206802368164
    10. 'fs' → logprob: -14.627206802368164

Token 149: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.2017309069633484
    2. '(' → logprob: -1.7017309665679932
    3. '_' → logprob: -9.326730728149414
    4. '(_' → logprob: -9.951730728149414
    5. '_list' → logprob: -10.326730728149414
    6. '(a' → logprob: -10.451730728149414
    7. '(lst' → logprob: -10.576730728149414
    8. '(
' → logprob: -10.951730728149414
    9. '_(' → logprob: -11.326730728149414
    10. '(List' → logprob: -11.326730728149414

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005066845333203673
    2. '):' → logprob: -7.62550687789917
    3. ')' → logprob: -11.250506401062012
    4. ' ,' → logprob: -13.375506401062012
    5. ',n' → logprob: -13.750506401062012
    6. ',b' → logprob: -14.625506401062012
    7. ',a' → logprob: -14.875506401062012
    8. ',B' → logprob: -15.125506401062012
    9. ',k' → logprob: -15.375506401062012
    10. ':' → logprob: -15.625506401062012

Token 151: ' b' (ID: 287)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.198880910873413
    2. ' m' → logprob: -1.323880910873413
    3. ' x' → logprob: -2.448880910873413
    4. 'x' → logprob: -2.573880910873413
    5. ' B' → logprob: -2.698880910873413
    6. 'median' → logprob: -2.823880910873413
    7. 'M' → logprob: -3.323880910873413
    8. 'B' → logprob: -3.323880910873413
    9. ' median' → logprob: -3.448880910873413
    10. ' M' → logprob: -3.573880910873413

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2379026561975479
    2. ',' → logprob: -2.2379026412963867
    3. ')' → logprob: -2.4879026412963867
    4. '):
' → logprob: -3.8629026412963867
    5. '[' → logprob: -8.487902641296387
    6. 'ase' → logprob: -8.987902641296387
    7. '):

' → logprob: -9.612902641296387
    8. ',b' → logprob: -9.612902641296387
    9. '):
' → logprob: -9.987902641296387
    10. 'a' → logprob: -10.112902641296387

Token 153: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5281471610069275
    2. '   ' → logprob: -1.2781472206115723
    3. '(A' → logprob: -2.2781472206115723
    4. '(' → logprob: -3.9031472206115723
    5. ':
' → logprob: -5.653147220611572
    6. '=' → logprob: -6.028147220611572
    7. '(a' → logprob: -6.903147220611572
    8. ' =' → logprob: -7.278147220611572
    9. ',' → logprob: -7.653147220611572
    10. '):' → logprob: -8.528146743774414

Token 154: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7834091782569885
    2. 'sum' → logprob: -0.7834091782569885
    3. '   ' → logprob: -3.2834091186523438
    4. ' return' → logprob: -3.4084091186523438
    5. ' sum' → logprob: -4.158409118652344
    6. 's' → logprob: -10.658409118652344
    7. '
' → logprob: -10.658409118652344
    8. 'total' → logprob: -11.533409118652344
    9. '0' → logprob: -12.158409118652344
    10. '	sum' → logprob: -12.408409118652344

Token 155: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4740881323814392
    2. ' sum' → logprob: -0.9740881323814392
    3. '   ' → logprob: -12.349087715148926
    4. '	sum' → logprob: -12.349087715148926
    5. '(sum' → logprob: -14.099087715148926
    6. ' ' → logprob: -14.474087715148926
    7. '=sum' → logprob: -14.849087715148926
    8. '.sum' → logprob: -15.724087715148926
    9. ' ' → logprob: -15.724087715148926
    10. '
' → logprob: -16.224088668823242

Token 156: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.00018852073117159307
    2. '(' → logprob: -8.750188827514648
    3. '([' → logprob: -10.625188827514648
    4. 'abs' → logprob: -12.250188827514648
    5. '(|' → logprob: -14.375188827514648
    6. '(
' → logprob: -15.625188827514648
    7. ' abs' → logprob: -15.875188827514648
    8. ' (' → logprob: -17.25018882751465
    9. '((' → logprob: -17.50018882751465
    10. '```' → logprob: -18.12518882751465

Token 157: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02420056238770485
    2. '(x' → logprob: -3.774200677871704
    3. 'a' → logprob: -7.774200439453125
    4. '(A' → logprob: -7.774200439453125
    5. '(ai' → logprob: -9.774200439453125
    6. 'x' → logprob: -10.399200439453125
    7. '(' → logprob: -10.899200439453125
    8. '(i' → logprob: -12.899200439453125
    9. '((' → logprob: -13.649200439453125
    10. '(b' → logprob: -13.899200439453125

Token 158: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07001901417970657
    2. '-' → logprob: -2.695019006729126
    3. '-a' → logprob: -10.570018768310547
    4. '-b' → logprob: -10.695018768310547
    5. 'a' → logprob: -11.320018768310547
    6. '-x' → logprob: -12.070018768310547
    7. ' ' → logprob: -12.195018768310547
    8. 'x' → logprob: -12.695018768310547
    9. '-A' → logprob: -13.445018768310547
    10. '-j' → logprob: -13.695018768310547

Token 159: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005929393693804741
    2. ' b' → logprob: -5.130929470062256
    3. ' ' → logprob: -14.880928993225098
    4. ')b' → logprob: -16.380929946899414
    5. 'a' → logprob: -16.630929946899414
    6. '   ' → logprob: -16.755929946899414
    7. ')' → logprob: -16.755929946899414
    8. '  ' → logprob: -17.005929946899414
    9. '	b' → logprob: -18.130929946899414
    10. 'x' → logprob: -18.130929946899414

Token 160: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ' )' → logprob: -14.375001907348633
    3. '))' → logprob: -14.875001907348633
    4. 'for' → logprob: -15.375001907348633
    5. ')
' → logprob: -15.625001907348633
    6. '])' → logprob: -16.000001907348633
    7. 'A' → logprob: -16.375001907348633
    8. '[' → logprob: -16.500001907348633
    9. '[i' → logprob: -17.000001907348633
    10. 'a' → logprob: -17.125001907348633

Token 161: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004568903532344848
    2. 'for' → logprob: -8.000456809997559
    3. ' for' → logprob: -9.125456809997559
    4. ' )' → logprob: -12.000456809997559
    5. 'A' → logprob: -12.500456809997559
    6. ' ' → logprob: -14.125456809997559
    7. '  ' → logprob: -14.500456809997559
    8. '   ' → logprob: -14.875456809997559
    9. ')
' → logprob: -15.375456809997559
    10. ' A' → logprob: -15.750456809997559

Token 162: ' i' (ID: 575)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2814711332321167
    2. ' A' → logprob: -1.4064711332321167
    3. 'i' → logprob: -8.406471252441406
    4. 'a' → logprob: -10.406471252441406
    5. '<|end|>' → logprob: -10.531471252441406
    6. '	A' → logprob: -10.906471252441406
    7. ' i' → logprob: -11.281471252441406
    8. ' ' → logprob: -12.656471252441406
    9. ' a' → logprob: -13.531471252441406
    10. ',A' → logprob: -14.031471252441406

Token 163: ' in' (ID: 306)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.693308413028717
    2. ' A' → logprob: -0.693308413028717
    3. ' in' → logprob: -9.06830883026123
    4. ')' → logprob: -10.81830883026123
    5. '	A' → logprob: -11.44330883026123
    6. ' ' → logprob: -12.19330883026123
    7. '<|end|>' → logprob: -12.56830883026123
    8. 'in' → logprob: -13.44330883026123
    9. ' ' → logprob: -13.81830883026123
    10. '  ' → logprob: -13.81830883026123

Token 164: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004078997299075127
    2. ' A' → logprob: -5.5040788650512695
    3. '	A' → logprob: -15.62907886505127
    4. '[A' → logprob: -15.75407886505127
    5. '<|end|>' → logprob: -16.629079818725586
    6. '(A' → logprob: -17.004079818725586
    7. ')' → logprob: -17.129079818725586
    8. '_A' → logprob: -17.129079818725586
    9. ',A' → logprob: -17.504079818725586
    10. '>A' → logprob: -17.504079818725586

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.00000286102295
    3. '))' → logprob: -17.375001907348633
    4. ')
' → logprob: -17.750001907348633
    5. '())' → logprob: -17.875001907348633
    6. ')}' → logprob: -18.375001907348633
    7. ')`' → logprob: -18.750001907348633
    8. '}' → logprob: -18.875001907348633
    9. '),' → logprob: -19.750001907348633
    10. '[])' → logprob: -19.875001907348633

Token 166: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033763842657208443
    2. 'n' → logprob: -5.753376483917236
    3. 'if' → logprob: -10.003376007080078
    4. 'N' → logprob: -10.378376007080078
    5. '#' → logprob: -10.503376007080078
    6. 'a' → logprob: -10.628376007080078
    7. 'b' → logprob: -11.128376007080078
    8. '```' → logprob: -11.378376007080078
    9. '(' → logprob: -11.753376007080078
    10. 'print' → logprob: -11.878376007080078

Token 167: ' sum' (ID: 4215)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5789086222648621
    2. ' main' → logprob: -0.8289086222648621
    3. 'min' → logprob: -6.953908443450928
    4. 'minimum' → logprob: -7.953908443450928
    5. 'solve' → logprob: -8.203908920288086
    6. 'def' → logprob: -8.328908920288086
    7. ' minimize' → logprob: -8.328908920288086
    8. 'minimal' → logprob: -8.703908920288086
    9. 'calculate' → logprob: -8.828908920288086
    10. ' solve' → logprob: -8.953908920288086

Token 168: '_absolute' (ID: 131930)
  Prédit: '_absolute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_absolute' → logprob: -0.399154394865036
    2. '_' → logprob: -1.5241544246673584
    3. '(' → logprob: -2.2741544246673584
    4. '(abs' → logprob: -5.774154186248779
    5. 'absolute' → logprob: -6.024154186248779
    6. '_abs' → logprob: -6.774154186248779
    7. ' absolute' → logprob: -8.024154663085938
    8. '(_' → logprob: -8.149154663085938
    9. '([' → logprob: -8.524154663085938
    10. 'Absolute' → logprob: -8.774154663085938

Token 169: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.12218231707811356
    2. '_' → logprob: -2.2471823692321777
    3. '_difference' → logprob: -4.997182369232178
    4. '_diff' → logprob: -6.372182369232178
    5. '(' → logprob: -7.997182369232178
    6. 'dif' → logprob: -8.49718189239502
    7. '_dist' → logprob: -9.99718189239502
    8. 'd' → logprob: -10.24718189239502
    9. '(_' → logprob: -10.49718189239502
    10. 'def' → logprob: -10.74718189239502

Token 170: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.735893965815194e-05
    2. 'dif' → logprob: -11.500017166137695
    3. 'iffer' → logprob: -12.500017166137695
    4. ' if' → logprob: -14.000017166137695
    5. 'ifference' → logprob: -14.125017166137695
    6. 'ifferent' → logprob: -14.625017166137695
    7. 'i' → logprob: -14.750017166137695
    8. 'iff' → logprob: -15.125017166137695
    9. 'iffs' → logprob: -15.750017166137695
    10. 'def' → logprob: -15.750017166137695

Token 171: 'ferences' (ID: 10131)
  Prédit: 'ferences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -0.039053503423929214
    2. 'er' → logprob: -3.289053440093994
    3. 'fer' → logprob: -7.414053440093994
    4. 'ference' → logprob: -7.914053440093994
    5. 'ffer' → logprob: -11.039053916931152
    6. 'érences' → logprob: -11.414053916931152
    7. 'f' → logprob: -11.789053916931152
    8. 'feren' → logprob: -12.789053916931152
    9. 'eren' → logprob: -13.539053916931152
    10. 'e' → logprob: -13.914053916931152

Token 172: '_alt' (ID: 77054)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.24623848497867584
    2. '(' → logprob: -1.7462384700775146
    3. '_' → logprob: -4.121238708496094
    4. '(_,' → logprob: -4.621238708496094
    5. '_by' → logprob: -5.621238708496094
    6. '_de' → logprob: -5.996238708496094
    7. '([' → logprob: -6.371238708496094
    8. 'def' → logprob: -6.496238708496094
    9. '_(' → logprob: -6.496238708496094
    10. '([],' → logprob: -6.621238708496094

Token 173: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0021006562747061253
    2. '(' → logprob: -6.502100467681885
    3. '_' → logprob: -9.002100944519043
    4. '_(' → logprob: -9.002100944519043
    5. ' (' → logprob: -9.877100944519043
    6. 's' → logprob: -9.877100944519043
    7. '(B' → logprob: -10.002100944519043
    8. '2' → logprob: -10.502100944519043
    9. '(_' → logprob: -10.502100944519043
    10. '_b' → logprob: -11.002100944519043

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027274901513010263
    2. ',b' → logprob: -6.127727508544922
    3. ' ,' → logprob: -7.627727508544922
    4. '):' → logprob: -10.752727508544922
    5. ')' → logprob: -12.127727508544922
    6. ',a' → logprob: -12.252727508544922
    7. 'b' → logprob: -12.627727508544922
    8. ',n' → logprob: -12.627727508544922
    9. '):
' → logprob: -12.627727508544922
    10. ',
' → logprob: -12.752727508544922

Token 175: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.23804360628128052
    2. ' b' → logprob: -1.7380435466766357
    3. 'A' → logprob: -4.238043785095215
    4. ' A' → logprob: -4.738043785095215
    5. ')' → logprob: -5.613043785095215
    6. ' lambda' → logprob: -5.863043785095215
    7. 'lambda' → logprob: -6.238043785095215
    8. 'min' → logprob: -7.238043785095215
    9. ' )' → logprob: -7.488043785095215
    10. ' min' → logprob: -7.613043785095215

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23948806524276733
    2. ',' → logprob: -2.364488124847412
    3. 'b' → logprob: -2.739488124847412
    4. ',b' → logprob: -3.864488124847412
    5. '):
' → logprob: -4.114488124847412
    6. ')' → logprob: -4.239488124847412
    7. ' ):' → logprob: -7.489488124847412
    8. ' b' → logprob: -7.864488124847412
    9. ' ,' → logprob: -8.239487648010254
    10. ')b' → logprob: -8.364487648010254

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01133651938289404
    2. ':
' → logprob: -4.761336326599121
    3. ':' → logprob: -6.636336326599121
    4. '=' → logprob: -7.386336326599121
    5. 'return' → logprob: -8.011336326599121
    6. ' return' → logprob: -9.261336326599121
    7. ' =' → logprob: -9.511336326599121
    8. 'def' → logprob: -9.636336326599121
    9. '):
' → logprob: -9.761336326599121
    10. '
' → logprob: -10.386336326599121

Token 178: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024482695385813713
    2. '   ' → logprob: -4.024482727050781
    3. ' return' → logprob: -5.399482727050781
    4. 'sum' → logprob: -6.399482727050781
    5. 'def' → logprob: -10.024482727050781
    6. '
' → logprob: -10.149482727050781
    7. 'eturn' → logprob: -11.774482727050781
    8. '	return' → logprob: -12.024482727050781
    9. '=' → logprob: -12.274482727050781
    10. ' sum' → logprob: -12.399482727050781

Token 179: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.05532194674015045
    2. ' sum' → logprob: -2.9303219318389893
    3. 'max' → logprob: -8.68032169342041
    4. 'min' → logprob: -8.93032169342041
    5. 'abs' → logprob: -9.68032169342041
    6. '(sum' → logprob: -11.30532169342041
    7. ' max' → logprob: -11.43032169342041
    8. ' min' → logprob: -11.43032169342041
    9. '   ' → logprob: -12.05532169342041
    10. 'len' → logprob: -12.43032169342041

Token 180: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.00020330198458395898
    2. '(' → logprob: -9.625203132629395
    3. '(lambda' → logprob: -10.000203132629395
    4. 'abs' → logprob: -10.125203132629395
    5. '(max' → logprob: -10.875203132629395
    6. '(a' → logprob: -11.000203132629395
    7. '([' → logprob: -12.375203132629395
    8. '(i' → logprob: -12.375203132629395
    9. '((' → logprob: -13.250203132629395
    10. ' abs' → logprob: -13.750203132629395

Token 181: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.13701893389225006
    2. '(a' → logprob: -2.137018918991089
    3. '(x' → logprob: -5.387019157409668
    4. '(A' → logprob: -5.762019157409668
    5. '(' → logprob: -6.762019157409668
    6. 'a' → logprob: -7.887019157409668
    7. 'i' → logprob: -8.012019157409668
    8. '(j' → logprob: -9.137019157409668
    9. '(b' → logprob: -10.262019157409668
    10. 'x' → logprob: -10.262019157409668

Token 182: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11315599083900452
    2. '-' → logprob: -2.2381560802459717
    3. ' ' → logprob: -8.48815631866455
    4. ' a' → logprob: -9.98815631866455
    5. '+' → logprob: -10.86315631866455
    6. '-a' → logprob: -10.86315631866455
    7. ' +' → logprob: -11.36315631866455
    8. ')' → logprob: -11.73815631866455
    9. 'a' → logprob: -12.05065631866455
    10. '  ' → logprob: -13.05065631866455

Token 183: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015122429467737675
    2. ' a' → logprob: -6.501512050628662
    3. '-a' → logprob: -12.75151252746582
    4. '   ' → logprob: -13.37651252746582
    5. ' ' → logprob: -13.50151252746582
    6. '(a' → logprob: -13.75151252746582
    7. 'i' → logprob: -14.37651252746582
    8. '  ' → logprob: -14.75151252746582
    9. ')' → logprob: -15.00151252746582
    10. '-' → logprob: -15.12651252746582

Token 184: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011158766224980354
    2. ' a' → logprob: -4.5111589431762695
    3. 'i' → logprob: -10.63615894317627
    4. '   ' → logprob: -10.76115894317627
    5. ' ' → logprob: -10.88615894317627
    6. 'A' → logprob: -11.51115894317627
    7. ')' → logprob: -11.63615894317627
    8. ')a' → logprob: -12.01115894317627
    9. '  ' → logprob: -12.32365894317627
    10. ' i' → logprob: -12.88615894317627

Token 185: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3404513895511627
    2. ')' → logprob: -2.34045147895813
    3. ' +' → logprob: -2.34045147895813
    4. '))' → logprob: -2.84045147895813
    5. '-' → logprob: -3.59045147895813
    6. ' -' → logprob: -5.840451240539551
    7. '[i' → logprob: -6.215451240539551
    8. '[' → logprob: -6.590451240539551
    9. ' )' → logprob: -6.965451240539551
    10. ' ' → logprob: -7.215451240539551

Token 186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07733260095119476
    2. 'i' → logprob: -2.8273324966430664
    3. ' ' → logprob: -4.952332496643066
    4. ' i' → logprob: -5.077332496643066
    5. ')' → logprob: -7.077332496643066
    6. '2' → logprob: -7.952332496643066
    7. '(i' → logprob: -8.077332496643066
    8. ' (' → logprob: -9.702332496643066
    9. 'a' → logprob: -9.764832496643066
    10. ' )' → logprob: -10.389832496643066

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011126109398901463
    2. 'i' → logprob: -4.6361260414123535
    3. ' ' → logprob: -8.011126518249512
    4. ')' → logprob: -8.011126518249512
    5. 'a' → logprob: -8.511126518249512
    6. '2' → logprob: -9.011126518249512
    7. 'abs' → logprob: -9.261126518249512
    8. 'x' → logprob: -10.011126518249512
    9. ' i' → logprob: -10.011126518249512
    10. 'b' → logprob: -10.636126518249512

Token 188: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3871869742870331
    2. '))' → logprob: -1.1371870040893555
    3. ' )' → logprob: -8.512187004089355
    4. ')))' → logprob: -10.387187004089355
    5. '])' → logprob: -10.887187004089355
    6. ' ))' → logprob: -10.887187004089355
    7. '})' → logprob: -11.512187004089355
    8. ')
' → logprob: -12.387187004089355
    9. ')**' → logprob: -12.512187004089355
    10. '1' → logprob: -12.512187004089355

Token 189: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010463926941156387
    2. 'for' → logprob: -5.260463714599609
    3. ' for' → logprob: -5.385463714599609
    4. ' )' → logprob: -7.385463714599609
    5. '))' → logprob: -12.13546371459961
    6. ' ' → logprob: -13.76046371459961
    7. ')
' → logprob: -14.13546371459961
    8. '+' → logprob: -14.38546371459961
    9. 'A' → logprob: -14.51046371459961
    10. '	for' → logprob: -14.76046371459961

Token 190: ' i' (ID: 575)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.0928243398666382
    2. 'A' → logprob: -1.3428243398666382
    3. ' i' → logprob: -1.3428243398666382
    4. 'i' → logprob: -1.9678243398666382
    5. ' ' → logprob: -6.092824459075928
    6. '  ' → logprob: -9.09282398223877
    7. ' ' → logprob: -9.34282398223877
    8. ')' → logprob: -9.46782398223877
    9. 'a' → logprob: -9.71782398223877
    10. ' a' → logprob: -10.09282398223877

Token 191: ' in' (ID: 306)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.06742557138204575
    2. 'A' → logprob: -2.817425489425659
    3. ' in' → logprob: -5.817425727844238
    4. ')' → logprob: -6.067425727844238
    5. 'in' → logprob: -9.692425727844238
    6. ' )' → logprob: -10.067425727844238
    7. ' ' → logprob: -11.317425727844238
    8. '(A' → logprob: -11.317425727844238
    9. '	A' → logprob: -12.067425727844238
    10. ' ' → logprob: -12.692425727844238

Token 192: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.52312833070755
    2. 'A' → logprob: -0.89812833070755
    3. ' ' → logprob: -13.523128509521484
    4. '[A' → logprob: -14.398128509521484
    5. '	A' → logprob: -14.398128509521484
    6. '(A' → logprob: -15.023128509521484
    7. ' А' → logprob: -15.023128509521484
    8. '"A' → logprob: -15.148128509521484
    9. ' ' → logprob: -15.148128509521484
    10. '>A' → logprob: -15.398128509521484

Token 193: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.750001907348633
    4. ')}' → logprob: -15.000001907348633
    5. '))' → logprob: -15.250001907348633
    6. ')`' → logprob: -16.500001907348633
    7. '}' → logprob: -17.125001907348633
    8. '<|end|>' → logprob: -17.625001907348633
    9. ')a' → logprob: -17.750001907348633
    10. ')return' → logprob: -18.125001907348633

Token 194: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00533443596214056
    2. 'a' → logprob: -6.255334377288818
    3. '#' → logprob: -6.380334377288818
    4. '<|end|>' → logprob: -7.880334377288818
    5. 'd' → logprob: -8.130334854125977
    6. '
' → logprob: -8.630334854125977
    7. 'n' → logprob: -8.630334854125977
    8. '```' → logprob: -8.755334854125977
    9. 'b' → logprob: -9.130334854125977
    10. ')' → logprob: -9.255334854125977

Token 195: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.010056373663246632
    2. 'main' → logprob: -5.010056495666504
    3. ' solve' → logprob: -6.635056495666504
    4. ' def' → logprob: -8.135056495666504
    5. ' can' → logprob: -8.260056495666504
    6. ' find' → logprob: -8.510056495666504
    7. ' minimize' → logprob: -8.760056495666504
    8. ' minimal' → logprob: -8.885056495666504
    9. ' minimum' → logprob: -8.885056495666504
    10. ' calculate' → logprob: -9.010056495666504

Token 196: '_' (ID: 62)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.690246045589447
    2. '_' → logprob: -0.940246045589447
    3. '_(' → logprob: -3.065246105194092
    4. '(' → logprob: -3.690246105194092
    5. '_list' → logprob: -4.190246105194092
    6. '(A' → logprob: -5.565246105194092
    7. '_array' → logprob: -5.940246105194092
    8. '_values' → logprob: -6.065246105194092
    9. '(_' → logprob: -6.190246105194092
    10. '_items' → logprob: -6.315246105194092

Token 197: 'odd' (ID: 18303)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7834485173225403
    2. 'list' → logprob: -1.2834484577178955
    3. 'array' → logprob: -1.6584484577178955
    4. 'elements' → logprob: -3.4084484577178955
    5. 'A' → logprob: -4.283448696136475
    6. 'data' → logprob: -4.533448696136475
    7. 'inputs' → logprob: -5.533448696136475
    8. 'test' → logprob: -5.783448696136475
    9. 'sequence' → logprob: -6.033448696136475
    10. 'values' → logprob: -6.408448696136475

Token 198: '_N' (ID: 3080)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16982778906822205
    2. '(_' → logprob: -3.544827699661255
    3. '_' → logprob: -3.669827699661255
    4. '_elements' → logprob: -3.919827699661255
    5. '_n' → logprob: -4.419827938079834
    6. '(N' → logprob: -4.544827938079834
    7. '_number' → logprob: -4.669827938079834
    8. '(n' → logprob: -4.669827938079834
    9. '_numbers' → logprob: -4.669827938079834
    10. '_list' → logprob: -4.919827938079834

Token 199: '(A' (ID: 10706)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.17277774214744568
    2. '(' → logprob: -1.922777771949768
    3. '(A' → logprob: -4.9227776527404785
    4. '():' → logprob: -5.4227776527404785
    5. '(n' → logprob: -7.4227776527404785
    6. '(:' → logprob: -9.297778129577637
    7. '()' → logprob: -10.547778129577637
    8. '(_' → logprob: -10.547778129577637
    9. '(
' → logprob: -11.797778129577637
    10. '((' → logprob: -11.922778129577637

Token 200: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3494449257850647
    2. ',' → logprob: -1.22444486618042
    3. '):
' → logprob: -7.97444486618042
    4. ',N' → logprob: -7.97444486618042
    5. ')' → logprob: -8.349445343017578
    6. ',n' → logprob: -10.224445343017578
    7. '(N' → logprob: -11.849445343017578
    8. ':' → logprob: -11.974445343017578
    9. 'N' → logprob: -12.224445343017578
    10. '   ' → logprob: -12.349445343017578

Token 201: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0116789685562253
    2. ' N' → logprob: -4.511679172515869
    3. 'n' → logprob: -8.886678695678711
    4. '   ' → logprob: -9.011678695678711
    5. ')' → logprob: -9.136678695678711
    6. 'A' → logprob: -9.261678695678711
    7. 'B' → logprob: -9.636678695678711
    8. '):
' → logprob: -10.386678695678711
    9. 'b' → logprob: -11.386678695678711
    10. ' ' → logprob: -11.636678695678711

Token 202: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00014644917973782867
    2. ')' → logprob: -9.250146865844727
    3. '):
' → logprob: -10.000146865844727
    4. ':' → logprob: -12.625146865844727
    5. ' ):' → logprob: -13.875146865844727
    6. '   ' → logprob: -15.125146865844727
    7. '():' → logprob: -16.000146865844727
    8. ',' → logprob: -16.375146865844727
    9. '):
' → logprob: -17.250146865844727
    10. '):

' → logprob: -17.875146865844727

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034178397618234158
    2. ' median' → logprob: -7.12841796875
    3. 'median' → logprob: -7.37841796875
    4. 'b' → logprob: -7.75341796875
    5. 'a' → logprob: -8.37841796875
    6. '```' → logprob: -8.50341796875
    7. ' b' → logprob: -8.62841796875
    8. ':' → logprob: -8.87841796875
    9. 'm' → logprob: -9.00341796875
    10. ':
' → logprob: -9.62841796875

Token 204: ' median' (ID: 31473)
  Prédit: 'median'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'median' (adapté à ' median') → logprob: -0.26935452222824097
    2. '   ' → logprob: -2.2693545818328857
    3. 'b' → logprob: -3.1443545818328857
    4. 'm' → logprob: -3.2693545818328857
    5. ' median' → logprob: -4.019354343414307
    6. 'a' → logprob: -4.019354343414307
    7. 'med' → logprob: -5.269354343414307
    8. 'sorted' → logprob: -5.519354343414307
    9. 'mid' → logprob: -6.144354343414307
    10. 'def' → logprob: -7.144354343414307

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9789320826530457
    2. '_' → logprob: -1.1039321422576904
    3. '_index' → logprob: -1.3539321422576904
    4. '=' → logprob: -3.4789321422576904
    5. '_idx' → logprob: -5.978931903839111
    6. '_value' → logprob: -7.603931903839111
    7. '=_' → logprob: -8.60393238067627
    8. ' ' → logprob: -9.47893238067627
    9. ' _' → logprob: -9.47893238067627
    10. '_val' → logprob: -9.72893238067627

Token 206: ' A' (ID: 355)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.22628305852413177
    2. ' calculate' → logprob: -1.601283073425293
    3. 'A' → logprob: -7.351283073425293
    4. ' A' → logprob: -8.976283073425293
    5. 'get' → logprob: -10.351283073425293
    6. ' get' → logprob: -10.726283073425293
    7. ' ' → logprob: -10.976283073425293
    8. '   ' → logprob: -11.601283073425293
    9. 'sort' → logprob: -11.851283073425293
    10. 'cal' → logprob: -13.226283073425293

Token 207: '[get' (ID: 160135)
  Prédit: '[get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[get' → logprob: -0.018674371764063835
    2. '[N' → logprob: -4.018674373626709
    3. '[len' → logprob: -8.51867389678955
    4. 'get' → logprob: -8.51867389678955
    5. '[' → logprob: -9.51867389678955
    6. '[(' → logprob: -11.01867389678955
    7. '[-' → logprob: -11.76867389678955
    8. '(get' → logprob: -12.39367389678955
    9. '.get' → logprob: -12.51867389678955
    10. 'N' → logprob: -12.76867389678955

Token 208: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.318681188422488e-05
    2. 'm' → logprob: -11.87501335144043
    3. 'median' → logprob: -12.50001335144043
    4. '(m' → logprob: -13.50001335144043
    5. '_med' → logprob: -15.00001335144043
    6. '(' → logprob: -16.00001335144043
    7. '_' → logprob: -16.00001335144043
    8. '\' → logprob: -17.00001335144043
    9. 'a' → logprob: -17.37501335144043
    10. '_medium' → logprob: -17.50001335144043

Token 209: 'edian' (ID: 56611)
  Prédit: 'edian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edian' → logprob: -0.3153949975967407
    2. 'median' → logprob: -1.3153949975967407
    3. 'ed' → logprob: -6.315394878387451
    4. 'med' → logprob: -9.06539535522461
    5. 'm' → logprob: -10.06539535522461
    6. 'edi' → logprob: -10.19039535522461
    7. 'mediate' → logprob: -10.81539535522461
    8. 'edia' → logprob: -10.94039535522461
    9. '_m' → logprob: -11.19039535522461
    10. 'Median' → logprob: -11.56539535522461

Token 210: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.1438954770565033
    2. 'index' → logprob: -2.018895387649536
    3. 'ex' → logprob: -7.393895626068115
    4. 'Index' → logprob: -7.643895626068115
    5. 'x' → logprob: -9.893895149230957
    6. 'dex' → logprob: -10.893895149230957
    7. 'nd' → logprob: -10.893895149230957
    8. ' index' → logprob: -11.518895149230957
    9. 'n' → logprob: -11.643895149230957
    10. 'ind' → logprob: -13.268895149230957

Token 211: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00012868782505393028
    2. '(' → logprob: -9.000128746032715
    3. 'N' → logprob: -13.250128746032715
    4. '(
' → logprob: -13.875128746032715
    5. '```' → logprob: -14.125128746032715
    6. ' (' → logprob: -14.500128746032715
    7. ']' → logprob: -15.375128746032715
    8. '](' → logprob: -15.375128746032715
    9. '(n' → logprob: -15.625128746032715
    10. '
' → logprob: -15.875128746032715

Token 212: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008321399218402803
    2. ')]
' → logprob: -7.2508320808410645
    3. ')])' → logprob: -9.750832557678223
    4. ')' → logprob: -10.250832557678223
    5. ' )' → logprob: -12.000832557678223
    6. ')]

' → logprob: -12.250832557678223
    7. ']' → logprob: -12.500832557678223
    8. '   ' → logprob: -13.250832557678223
    9. '])]' → logprob: -13.375832557678223
    10. '())' → logprob: -13.500832557678223

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6440549492835999
    2. '
' → logprob: -0.7690549492835999
    3. 'return' → logprob: -5.394054889678955
    4. '    
' → logprob: -5.519054889678955
    5. ' return' → logprob: -6.144054889678955
    6. ' 
' → logprob: -9.394055366516113
    7. '
' → logprob: -9.394055366516113
    8. '   
' → logprob: -9.644055366516113
    9. '  
' → logprob: -9.644055366516113
    10. '```' → logprob: -10.144055366516113

Token 214: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.071238674223423
    2. 'result' → logprob: -3.6962387561798096
    3. '   ' → logprob: -3.8212387561798096
    4. 'total' → logprob: -4.9462385177612305
    5. 'sum' → logprob: -5.4462385177612305
    6. 'diff' → logprob: -6.3212385177612305
    7. 'res' → logprob: -6.4462385177612305
    8. 'print' → logprob: -6.5712385177612305
    9. 'b' → logprob: -6.9462385177612305
    10. 'median' → logprob: -7.0712385177612305

Token 215: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3879881203174591
    2. ' sum' → logprob: -1.1379880905151367
    3. 'median' → logprob: -7.887988090515137
    4. '   ' → logprob: -8.637988090515137
    5. ' median' → logprob: -9.012988090515137
    6. 'abs' → logprob: -9.137988090515137
    7. 'min' → logprob: -9.387988090515137
    8. ' min' → logprob: -10.137988090515137
    9. '[' → logprob: -10.137988090515137
    10. '(sum' → logprob: -10.512988090515137

Token 216: '_absolute' (ID: 131930)
  Prédit: '_absolute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_absolute' → logprob: -0.03140396624803543
    2. '(abs' → logprob: -3.5314040184020996
    3. '(' → logprob: -6.7814040184021
    4. '(sum' → logprob: -8.156403541564941
    5. 'Absolute' → logprob: -9.781403541564941
    6. '_abs' → logprob: -9.906403541564941
    7. 'absolute' → logprob: -10.031403541564941
    8. '([' → logprob: -10.281403541564941
    9. '(|' → logprob: -11.031403541564941
    10. '(_' → logprob: -12.031403541564941

Token 217: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.001194275333546102
    2. '_' → logprob: -6.876194477081299
    3. 'dif' → logprob: -9.50119400024414
    4. '_difference' → logprob: -10.50119400024414
    5. 'd' → logprob: -10.62619400024414
    6. '_diff' → logprob: -12.12619400024414
    7. ' _' → logprob: -12.25119400024414
    8. '_dist' → logprob: -13.37619400024414
    9. '_absolute' → logprob: -13.37619400024414
    10. '```' → logprob: -13.37619400024414

Token 218: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00015276329941116273
    2. 'dif' → logprob: -9.000152587890625
    3. ' if' → logprob: -11.000152587890625
    4. 'for' → logprob: -13.125152587890625
    5. '   ' → logprob: -13.375152587890625
    6. 'i' → logprob: -13.375152587890625
    7. 'ferences' → logprob: -13.625152587890625
    8. 'iffer' → logprob: -13.875152587890625
    9. 'ffer' → logprob: -14.125152587890625
    10. '[' → logprob: -14.375152587890625

Token 219: 'ferences' (ID: 10131)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4767860472202301
    2. 'ferences' → logprob: -0.9767860174179077
    3. 'r' → logprob: -7.351786136627197
    4. 'eren' → logprob: -7.601786136627197
    5. 'ences' → logprob: -7.601786136627197
    6. 'fer' → logprob: -7.976786136627197
    7. '(A' → logprob: -8.226785659790039
    8. 'rence' → logprob: -9.101785659790039
    9. 'dif' → logprob: -9.476785659790039
    10. 'érences' → logprob: -9.976785659790039

Token 220: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.9292415749514475e-05
    2. '(' → logprob: -10.250039100646973
    3. '_alt' → logprob: -13.000039100646973
    4. '(
' → logprob: -14.375039100646973
    5. ' (' → logprob: -14.625039100646973
    6. '```' → logprob: -15.000039100646973
    7. '
' → logprob: -16.25004005432129
    8. '(_' → logprob: -17.00004005432129
    9. '_' → logprob: -17.37504005432129
    10. '(B' → logprob: -17.75004005432129

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.895480277715251e-06
    2. ' ,' → logprob: -12.000008583068848
    3. ',
' → logprob: -12.875008583068848
    4. ',

' → logprob: -16.500009536743164
    5. 'median' → logprob: -17.000009536743164
    6. ',m' → logprob: -17.500009536743164
    7. ')' → logprob: -18.625009536743164
    8. '‌,' → logprob: -18.750009536743164
    9. ',
' → logprob: -19.125009536743164
    10. '1' → logprob: -19.500009536743164

Token 222: ' median' (ID: 31473)
  Prédit: 'median'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'median' → logprob: -0.4741314947605133
    2. ' median' → logprob: -0.9741314649581909
    3. 'med' → logprob: -10.47413158416748
    4. 'medi' → logprob: -11.22413158416748
    5. 'm' → logprob: -12.72413158416748
    6. '   ' → logprob: -12.97413158416748
    7. 'medium' → logprob: -13.34913158416748
    8. ')' → logprob: -13.47413158416748
    9. ' med' → logprob: -13.59913158416748
    10. 'mediate' → logprob: -14.09913158416748

Token 223: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. '+' → logprob: -13.75000286102295
    3. ')
' → logprob: -13.75000286102295
    4. ' )' → logprob: -15.00000286102295
    5. ')+' → logprob: -15.62500286102295
    6. '   ' → logprob: -16.125003814697266
    7. '))' → logprob: -16.375003814697266
    8. '}' → logprob: -17.375003814697266
    9. '),' → logprob: -17.625003814697266
    10. ')

' → logprob: -17.750003814697266

Token 224: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.3458322731312364e-06
    2. '<|end|>' → logprob: -12.125007629394531
    3. '
' → logprob: -13.500007629394531
    4. '

' → logprob: -15.625007629394531
    5. 'de' → logprob: -16.12500762939453
    6. '```' → logprob: -16.25000762939453
    7. ')' → logprob: -17.25000762939453
    8. ' def' → logprob: -17.50000762939453
    9. 'ndef' → logprob: -18.87500762939453
    10. '  
' → logprob: -19.37500762939453

Token 225: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.04858975484967232
    2. ' process' → logprob: -3.0485897064208984
    3. '	process' → logprob: -14.423589706420898
    4. 'def' → logprob: -14.798589706420898
    5. '_process' → logprob: -14.923589706420898
    6. 'proces' → logprob: -15.298589706420898
    7. 'rocess' → logprob: -15.298589706420898
    8. ' ' → logprob: -16.0485897064209
    9. '
' → logprob: -16.5485897064209
    10. '(process' → logprob: -16.6735897064209

Token 226: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.0001222508290084079
    2. '_' → logprob: -9.5001220703125
    3. '_else' → logprob: -10.5001220703125
    4. 'even' → logprob: -12.1251220703125
    5. '_alt' → logprob: -12.6251220703125
    6. 'def' → logprob: -13.6251220703125
    7. '```' → logprob: -14.0001220703125
    8. '_equal' → logprob: -14.0001220703125
    9. '_list' → logprob: -14.1251220703125
    10. '_under' → logprob: -14.1251220703125

Token 227: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -2.2842308680992573e-05
    2. '_' → logprob: -10.750022888183594
    3. '_n' → logprob: -14.875022888183594
    4. ' _' → logprob: -15.125022888183594
    5. '```' → logprob: -15.500022888183594
    6. '(N' → logprob: -15.625022888183594
    7. '＿' → logprob: -16.375022888183594
    8. '\' → logprob: -16.500022888183594
    9. '(' → logprob: -16.500022888183594
    10. 'N' → logprob: -16.625022888183594

Token 228: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00012356207298580557
    2. '(' → logprob: -9.000123977661133
    3. '(
' → logprob: -17.000123977661133
    4. '(N' → logprob: -18.875123977661133
    5. ':' → logprob: -19.125123977661133
    6. '(B' → logprob: -19.250123977661133
    7. ' (' → logprob: -20.250123977661133
    8. '(AST' → logprob: -20.250123977661133
    9. '(E' → logprob: -20.375123977661133
    10. '(a' → logprob: -20.375123977661133

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. ' ,' → logprob: -11.375015258789062
    3. ',N' → logprob: -13.500015258789062
    4. ',
' → logprob: -14.125015258789062
    5. '):' → logprob: -14.625015258789062
    6. ')' → logprob: -15.500015258789062
    7. '   ' → logprob: -15.750015258789062
    8. ',n' → logprob: -15.750015258789062
    9. ',A' → logprob: -15.750015258789062
    10. '‌,' → logprob: -15.750015258789062

Token 230: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0380566380918026
    2. ' N' → logprob: -3.2880566120147705
    3. ' ' → logprob: -12.288056373596191
    4. '   ' → logprob: -12.913056373596191
    5. ')' → logprob: -13.038056373596191
    6. 'A' → logprob: -13.663056373596191
    7. '
' → logprob: -13.788056373596191
    8. ' ' → logprob: -14.413056373596191
    9. '	N' → logprob: -14.663056373596191
    10. ',' → logprob: -14.663056373596191

Token 231: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011849920265376568
    2. '):
' → logprob: -6.751184940338135
    3. ':' → logprob: -11.376185417175293
    4. ')' → logprob: -12.751185417175293
    5. '   ' → logprob: -16.001184463500977
    6. '):
' → logprob: -16.251184463500977
    7. '}:' → logprob: -16.751184463500977
    8. ' ):' → logprob: -16.751184463500977
    9. ',' → logprob: -17.001184463500977
    10. ']:' → logprob: -17.126184463500977

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1359412670135498
    2. 'a' → logprob: -2.51094126701355
    3. 'b' → logprob: -4.260941505432129
    4. 'option' → logprob: -5.010941505432129
    5. 'val' → logprob: -5.635941505432129
    6. 'left' → logprob: -5.760941505432129
    7. 'ans' → logprob: -5.885941505432129
    8. 'm' → logprob: -6.010941505432129
    9. 'median' → logprob: -6.135941505432129
    10. 'min' → logprob: -6.260941505432129

Token 233: ' mid' (ID: 6959)
  Prédit: 'option'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'option' → logprob: -1.3448615074157715
    2. 'median' → logprob: -1.3448615074157715
    3. 'a' → logprob: -1.4698615074157715
    4. 'return' → logprob: -2.9698615074157715
    5. 'b' → logprob: -3.4698615074157715
    6. 'min' → logprob: -3.5948615074157715
    7. 'opt' → logprob: -3.9698615074157715
    8. 'm' → logprob: -4.0948615074157715
    9. 'diff' → logprob: -4.0948615074157715
    10. 'res' → logprob: -4.2198615074157715

Token 234: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5434765219688416
    2. '1' → logprob: -1.5434765815734863
    3. 'd' → logprob: -2.4184765815734863
    4. '_index' → logprob: -2.5434765815734863
    5. '=' → logprob: -3.5434765815734863
    6. '_idx' → logprob: -5.543476581573486
    7. 'ian' → logprob: -6.293476581573486
    8. '_lower' → logprob: -7.168476581573486
    9. '_low' → logprob: -7.168476581573486
    10. '_' → logprob: -7.793476581573486

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001597579917870462
    2. '=' → logprob: -6.7515974044799805
    3. ',' → logprob: -7.8765974044799805
    4. '=A' → logprob: -11.12659740447998
    5. '_index' → logprob: -11.75159740447998
    6. '_idx' → logprob: -11.87659740447998
    7. ' ' → logprob: -12.37659740447998
    8. '_' → logprob: -12.50159740447998
    9. '(A' → logprob: -12.75159740447998
    10. ')' → logprob: -13.75159740447998

Token 236: ' A' (ID: 355)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.16379448771476746
    2. 'N' → logprob: -2.28879451751709
    3. 'A' → logprob: -3.41379451751709
    4. ' get' → logprob: -4.41379451751709
    5. ' N' → logprob: -5.78879451751709
    6. ' A' → logprob: -6.53879451751709
    7. 'len' → logprob: -10.16379451751709
    8. '   ' → logprob: -10.28879451751709
    9. '(get' → logprob: -10.41379451751709
    10. ' ' → logprob: -10.53879451751709

Token 237: '[get' (ID: 160135)
  Prédit: '[get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[get' → logprob: -4.513339445111342e-05
    2. 'get' → logprob: -10.125044822692871
    3. '[N' → logprob: -13.000044822692871
    4. '[len' → logprob: -13.250044822692871
    5. '(get' → logprob: -14.875044822692871
    6. '[(' → logprob: -15.125044822692871
    7. '=get' → logprob: -16.125045776367188
    8. ' get' → logprob: -16.625045776367188
    9. '.get' → logprob: -16.750045776367188
    10. '[' → logprob: -17.125045776367188

Token 238: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -2.935296834039036e-06
    2. '(m' → logprob: -13.62500286102295
    3. 'median' → logprob: -14.62500286102295
    4. 'm' → logprob: -14.87500286102295
    5. '_' → logprob: -15.62500286102295
    6. 'def' → logprob: -15.75000286102295
    7. '_med' → logprob: -16.750003814697266
    8. '_n' → logprob: -16.750003814697266
    9. ')' → logprob: -16.875003814697266
    10. '_medium' → logprob: -17.250003814697266

Token 239: 'edian' (ID: 56611)
  Prédit: 'edian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edian' → logprob: -0.0011061598779633641
    2. 'median' → logprob: -7.376106262207031
    3. 'ed' → logprob: -8.251106262207031
    4. 'edi' → logprob: -8.876106262207031
    5. 'e' → logprob: -10.126106262207031
    6. 'ean' → logprob: -11.126106262207031
    7. 'edia' → logprob: -12.126106262207031
    8. '```' → logprob: -12.751106262207031
    9. 'adian' → logprob: -12.876106262207031
    10. '_m' → logprob: -13.251106262207031

Token 240: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.001060675480403006
    2. 'index' → logprob: -6.876060485839844
    3. 'Index' → logprob: -11.001060485839844
    4. 'n' → logprob: -12.876060485839844
    5. '_indices' → logprob: -13.626060485839844
    6. ' index' → logprob: -13.876060485839844
    7. 's' → logprob: -14.001060485839844
    8. 'nd' → logprob: -14.376060485839844
    9. '
' → logprob: -14.501060485839844
    10. 'get' → logprob: -14.751060485839844

Token 241: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.9743012671824545e-05
    2. '(' → logprob: -10.875020027160645
    3. '(
' → logprob: -14.875020027160645
    4. ' (' → logprob: -15.375020027160645
    5. '(n' → logprob: -16.125019073486328
    6. 'N' → logprob: -17.125019073486328
    7. '(A' → logprob: -17.250019073486328
    8. '((' → logprob: -17.750019073486328
    9. '```' → logprob: -19.000019073486328
    10. '(M' → logprob: -19.125019073486328

Token 242: ')-' (ID: 14080)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04700702428817749
    2. ')]' → logprob: -3.9220070838928223
    3. ']' → logprob: -4.047007083892822
    4. '()]' → logprob: -5.797007083892822
    5. ')' → logprob: -6.047007083892822
    6. '(' → logprob: -7.047007083892822
    7. ']
' → logprob: -7.547007083892822
    8. '-' → logprob: -7.797007083892822
    9. '   ' → logprob: -8.047006607055664
    10. ')]
' → logprob: -8.672006607055664

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003389190824236721
    2. ' ' → logprob: -8.000338554382324
    3. ']' → logprob: -13.625338554382324
    4. '0' → logprob: -14.000338554382324
    5. ')' → logprob: -14.750338554382324
    6. '   ' → logprob: -15.125338554382324
    7. '```' → logprob: -15.625338554382324
    8. '2' → logprob: -16.12533950805664
    9. ',' → logprob: -16.31283950805664
    10. ')]' → logprob: -16.37533950805664

Token 244: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.026390399783849716
    2. ']' → logprob: -3.651390314102173
    3. ']
' → logprob: -9.776390075683594
    4. ' ]
' → logprob: -11.526390075683594
    5. '   ' → logprob: -11.901390075683594
    6. ')
' → logprob: -12.276390075683594
    7. 'mid' → logprob: -12.276390075683594
    8. ']

' → logprob: -12.526390075683594
    9. ']+' → logprob: -14.026390075683594
    10. ',' → logprob: -14.651390075683594

Token 245: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.025364875793457
    2. 'mid' → logprob: -1.400364875793457
    3. '   ' → logprob: -1.525364875793457
    4. ' mid' → logprob: -1.775364875793457
    5. '    
' → logprob: -5.900364875793457
    6. ' 
' → logprob: -6.275364875793457
    7. ' ' → logprob: -7.275364875793457
    8. '  
' → logprob: -7.650364875793457
    9. '   
' → logprob: -8.025364875793457
    10. '  ' → logprob: -8.275364875793457

Token 246: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.35581082105636597
    2. ' mid' → logprob: -1.2308108806610107
    3. '   ' → logprob: -4.980810642242432
    4. '
' → logprob: -7.730810642242432
    5. ' ' → logprob: -11.60581111907959
    6. '[mid' → logprob: -12.85581111907959
    7. '(mid' → logprob: -13.16831111907959
    8. '    
' → logprob: -13.35581111907959
    9. ' ' → logprob: -13.41831111907959
    10. '
' → logprob: -13.41831111907959

Token 247: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.429896944202483e-05
    2. ' =' → logprob: -10.875043869018555
    3. ' ' → logprob: -11.625043869018555
    4. 'x' → logprob: -12.250043869018555
    5. '=' → logprob: -12.250043869018555
    6. '
' → logprob: -13.000043869018555
    7. '_' → logprob: -14.625043869018555
    8. '   ' → logprob: -14.812543869018555
    9. '２' → logprob: -14.812543869018555
    10. '  ' → logprob: -14.937543869018555

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00398246617987752
    2. '=' → logprob: -5.6289825439453125
    3. ' ' → logprob: -7.8789825439453125
    4. ',' → logprob: -13.128982543945312
    5. ' A' → logprob: -14.253982543945312
    6. ')' → logprob: -14.253982543945312
    7. ' =
' → logprob: -16.128982543945312
    8. ' ,' → logprob: -16.378982543945312
    9. '=A' → logprob: -16.628982543945312
    10. ' ' → logprob: -16.878982543945312

Token 249: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.04301494359970093
    2. 'A' → logprob: -3.1680150032043457
    3. ' ' → logprob: -11.418014526367188
    4. ' ' → logprob: -12.543014526367188
    5. '	A' → logprob: -15.168014526367188
    6. ''' → logprob: -15.793014526367188
    7. '  ' → logprob: -16.043014526367188
    8. ')' → logprob: -16.168014526367188
    9. 's' → logprob: -16.293014526367188
    10. '_A' → logprob: -16.668014526367188

Token 250: '[get' (ID: 160135)
  Prédit: '[get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[get' → logprob: -0.00018649426056072116
    2. '[' → logprob: -8.875186920166016
    3. '=get' → logprob: -10.750186920166016
    4. 'get' → logprob: -11.625186920166016
    5. '[A' → logprob: -12.000186920166016
    6. ' [' → logprob: -12.750186920166016
    7. '[
' → logprob: -12.750186920166016
    8. 'A' → logprob: -13.875186920166016
    9. ' get' → logprob: -14.250186920166016
    10. '[g' → logprob: -14.500186920166016

Token 251: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -2.2246291337069124e-05
    2. 'get' → logprob: -11.875021934509277
    3. 'median' → logprob: -12.000021934509277
    4. 'm' → logprob: -12.625021934509277
    5. 'def' → logprob: -12.750021934509277
    6. '(m' → logprob: -14.375021934509277
    7. ')' → logprob: -14.625021934509277
    8. '(get' → logprob: -15.000021934509277
    9. '```' → logprob: -15.875021934509277
    10. 'int' → logprob: -16.125022888183594

Token 252: 'edian' (ID: 56611)
  Prédit: 'edian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edian' → logprob: -0.04495207965373993
    2. 'edi' → logprob: -3.544952154159546
    3. 'median' → logprob: -4.669951915740967
    4. 'ed' → logprob: -5.419951915740967
    5. 'get' → logprob: -7.794951915740967
    6. '_index' → logprob: -7.919951915740967
    7. 'index' → logprob: -8.919952392578125
    8. '_med' → logprob: -9.669952392578125
    9. 'edit' → logprob: -9.794952392578125
    10. '_m' → logprob: -10.294952392578125

Token 253: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0022821726743131876
    2. 'index' → logprob: -6.62728214263916
    3. 'ex' → logprob: -7.75228214263916
    4. 'get' → logprob: -8.62728214263916
    5. 'nd' → logprob: -9.00228214263916
    6. 'x' → logprob: -9.62728214263916
    7. 'n' → logprob: -9.87728214263916
    8. '_list' → logprob: -10.75228214263916
    9. 'Index' → logprob: -11.00228214263916
    10. 'N' → logprob: -11.00228214263916

Token 254: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.721228368813172e-05
    2. '(' → logprob: -9.375086784362793
    3. '(n' → logprob: -14.000086784362793
    4. ' (' → logprob: -14.750086784362793
    5. 'N' → logprob: -14.875086784362793
    6. '<|end|>' → logprob: -15.250086784362793
    7. '(A' → logprob: -15.750086784362793
    8. '(
' → logprob: -17.00008773803711
    9. '(S' → logprob: -17.37508773803711
    10. '(Note' → logprob: -17.75008773803711

Token 255: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.28872111439704895
    2. '(N' → logprob: -2.2887210845947266
    3. ')' → logprob: -2.9137210845947266
    4. ']' → logprob: -3.1637210845947266
    5. '(A' → logprob: -3.4137210845947266
    6. ')]
' → logprob: -5.288721084594727
    7. '()]' → logprob: -5.788721084594727
    8. '])' → logprob: -6.038721084594727
    9. 'N' → logprob: -6.163721084594727
    10. '-' → logprob: -6.163721084594727

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003354401094838977
    2. '
' → logprob: -6.253354549407959
    3. '    
' → logprob: -6.628354549407959
    4. 'a' → logprob: -10.2533540725708
    5. 'b' → logprob: -10.8783540725708
    6. 'return' → logprob: -11.8783540725708
    7. ' return' → logprob: -12.2533540725708
    8. '```' → logprob: -12.3783540725708
    9. '   
' → logprob: -12.6283540725708
    10. '       ' → logprob: -12.7533540725708

Token 257: ' a' (ID: 261)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.3829606771469116
    2. 'return' → logprob: -1.3829606771469116
    3. 'diff' → logprob: -1.3829606771469116
    4. 'option' → logprob: -2.007960796356201
    5. 'opt' → logprob: -2.632960796356201
    6. 'result' → logprob: -4.257960796356201
    7. 'ans' → logprob: -4.507960796356201
    8. 'val' → logprob: -5.382960796356201
    9. 'sum' → logprob: -5.507960796356201
    10. 'cost' → logprob: -6.257960796356201

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16125360131263733
    2. 'lt' → logprob: -2.9112536907196045
    3. '=' → logprob: -3.5362536907196045
    4. 'bs' → logprob: -3.6612536907196045
    5. 'b' → logprob: -4.161253452301025
    6. 'l' → logprob: -4.536253452301025
    7. '_b' → logprob: -5.411253452301025
    8. '_sum' → logprob: -6.161253452301025
    9. '1' → logprob: -6.286253452301025
    10. 'ns' → logprob: -6.536253452301025

Token 259: ' (' (ID: 350)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.14737048745155334
    2. '(mid' → logprob: -2.5223705768585205
    3. 'sum' → logprob: -4.147370338439941
    4. ' mid' → logprob: -4.272370338439941
    5. 'min' → logprob: -4.772370338439941
    6. ' (' → logprob: -5.647370338439941
    7. '(A' → logprob: -6.147370338439941
    8. '(min' → logprob: -6.147370338439941
    9. 'process' → logprob: -6.272370338439941
    10. 'A' → logprob: -6.647370338439941

Token 260: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -9.2576454335358e-05
    2. ' mid' → logprob: -9.500092506408691
    3. '(mid' → logprob: -12.000092506408691
    4. '   ' → logprob: -12.750092506408691
    5. '[mid' → logprob: -13.125092506408691
    6. 'A' → logprob: -13.250092506408691
    7. '
' → logprob: -13.875092506408691
    8. 'mi' → logprob: -14.250092506408691
    9. 'm' → logprob: -14.375092506408691
    10. ')' → logprob: -14.500092506408691

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021867838222533464
    2. '2' → logprob: -6.1271867752075195
    3. ' ' → logprob: -14.93968677520752
    4. '
' → logprob: -15.43968677520752
    5. ')' → logprob: -15.50218677520752
    6. '_' → logprob: -16.252187728881836
    7. '```' → logprob: -16.252187728881836
    8. 's' → logprob: -16.752187728881836
    9. 'a' → logprob: -17.064687728881836
    10. '۱' → logprob: -17.127187728881836

Token 262: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.026366954669356346
    2. '+' → logprob: -3.651366949081421
    3. ' +
' → logprob: -9.7763671875
    4. ' ' → logprob: -12.2763671875
    5. '+
' → logprob: -13.2763671875
    6. ' +
' → logprob: -13.7763671875
    7. ' +

' → logprob: -14.1513671875
    8. ' )' → logprob: -15.2763671875
    9. '   ' → logprob: -15.4013671875
    10. ')' → logprob: -15.5263671875

Token 263: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.10031062364578247
    2. 'mid' → logprob: -2.3503105640411377
    3. '1' → logprob: -9.600310325622559
    4. ' ' → logprob: -11.475310325622559
    5. '   ' → logprob: -11.850310325622559
    6. '(mid' → logprob: -12.225310325622559
    7. '
' → logprob: -12.475310325622559
    8. '    ' → logprob: -12.850310325622559
    9. '[mid' → logprob: -12.975310325622559
    10. '2' → logprob: -13.725310325622559

Token 264: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0032163304276764393
    2. '1' → logprob: -5.75321626663208
    3. 'index' → logprob: -10.878216743469238
    4. ' ' → logprob: -11.753216743469238
    5. '```' → logprob: -13.128216743469238
    6. '_index' → logprob: -13.440716743469238
    7. 'def' → logprob: -13.565716743469238
    8. ')' → logprob: -14.190716743469238
    9. '
' → logprob: -14.315716743469238
    10. 'token' → logprob: -14.378216743469238

Token 265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005944972508586943
    2. ')//' → logprob: -7.500594615936279
    3. ' )' → logprob: -10.125594139099121
    4. ')
' → logprob: -14.625594139099121
    5. '   ' → logprob: -14.750594139099121
    6. '+' → logprob: -15.375594139099121
    7. ' +' → logprob: -15.625594139099121
    8. '1' → logprob: -16.625595092773438
    9. ')#' → logprob: -17.500595092773438
    10. '//' → logprob: -17.500595092773438

Token 266: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4323126971721649
    2. '//' → logprob: -1.0573127269744873
    3. '   ' → logprob: -6.057312488555908
    4. ' ' → logprob: -7.682312488555908
    5. '#' → logprob: -7.807312488555908
    6. '
' → logprob: -8.807312965393066
    7. '```' → logprob: -9.182312965393066
    8. ')' → logprob: -10.182312965393066
    9. '2' → logprob: -10.682312965393066
    10. '  ' → logprob: -10.932312965393066

Token 267: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017029138980433345
    2. ' ' → logprob: -6.376702785491943
    3. '
' → logprob: -15.376703262329102
    4. '   ' → logprob: -15.814203262329102
    5. '۲' → logprob: -16.1892032623291
    6. '```' → logprob: -16.9392032623291
    7. '1' → logprob: -17.5017032623291
    8. '２' → logprob: -17.8142032623291
    9. '  ' → logprob: -17.8767032623291
    10. '٢' → logprob: -18.1892032623291

Token 268: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -9.500075340270996
    3. '۲' → logprob: -15.750075340270996
    4. '   ' → logprob: -16.500076293945312
    5. '```' → logprob: -17.125076293945312
    6. '٢' → logprob: -17.312576293945312
    7. '22' → logprob: -17.500076293945312
    8. '２' → logprob: -17.750076293945312
    9. '212' → logprob: -17.937576293945312
    10. '216' → logprob: -18.375076293945312

Token 269: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053238265216350555
    2. '
' → logprob: -3.0532381534576416
    3. '    
' → logprob: -5.553238391876221
    4. 'b' → logprob: -7.553238391876221
    5. '   
' → logprob: -9.928237915039062
    6. '  
' → logprob: -10.053237915039062
    7. 'return' → logprob: -10.553237915039062
    8. 's' → logprob: -10.803237915039062
    9. ' return' → logprob: -11.178237915039062
    10. 'a' → logprob: -11.428237915039062

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008847257122397423
    2. 'return' → logprob: -5.133847236633301
    3. '
' → logprob: -6.383847236633301
    4. 'b' → logprob: -8.1338472366333
    5. '    
' → logprob: -8.3838472366333
    6. ' return' → logprob: -8.6338472366333
    7. 'result' → logprob: -8.8838472366333
    8. 'sum' → logprob: -9.1338472366333
    9. '```' → logprob: -9.2588472366333
    10. 's' → logprob: -9.6338472366333

Token 271: ' s' (ID: 265)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7533220052719116
    2. 'diff' → logprob: -1.7533220052719116
    3. 'res' → logprob: -1.8783220052719116
    4. 'option' → logprob: -2.253322124481201
    5. 'opt' → logprob: -3.503322124481201
    6. 'result' → logprob: -4.128322124481201
    7. 'sum' → logprob: -4.253322124481201
    8. 'b' → logprob: -4.253322124481201
    9. 'cost' → logprob: -5.128322124481201
    10. 'ans' → logprob: -5.503322124481201

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31437405943870544
    2. 'um' → logprob: -1.3143740892410278
    3. '_' → logprob: -8.314373970031738
    4. 'a' → logprob: -8.564373970031738
    5. '=' → logprob: -8.564373970031738
    6. ' =' → logprob: -8.939373970031738
    7. 'ums' → logprob: -9.314373970031738
    8. 'u' → logprob: -9.939373970031738
    9. '_a' → logprob: -10.189373970031738
    10. 'uma' → logprob: -10.689373970031738

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022899746894836
    2. '=' → logprob: -1.910228967666626
    3. '_' → logprob: -12.910228729248047
    4. ' ' → logprob: -13.910228729248047
    5. ' =
' → logprob: -14.535228729248047
    6. '=sum' → logprob: -14.910228729248047
    7. ',' → logprob: -15.785228729248047
    8. ' ' → logprob: -15.910228729248047
    9. '=s' → logprob: -16.285228729248047
    10. '  ' → logprob: -16.535228729248047

Token 274: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1269369274377823
    2. ' sum' → logprob: -2.126936912536621
    3. '
' → logprob: -12.751936912536621
    4. '=sum' → logprob: -13.501936912536621
    5. '(sum' → logprob: -13.876936912536621
    6. ' ' → logprob: -14.126936912536621
    7. '	sum' → logprob: -14.501936912536621
    8. 'abs' → logprob: -14.501936912536621
    9. '   ' → logprob: -14.751936912536621
    10. 'um' → logprob: -15.001936912536621

Token 275: '_absolute' (ID: 131930)
  Prédit: '_absolute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_absolute' → logprob: -3.7697225252486533e-06
    2. '_abs' → logprob: -13.000003814697266
    3. 'absolute' → logprob: -14.000003814697266
    4. '_' → logprob: -15.250003814697266
    5. 'Absolute' → logprob: -16.625003814697266
    6. ' absolute' → logprob: -17.000003814697266
    7. '_exact' → logprob: -17.125003814697266
    8. 's' → logprob: -18.125003814697266
    9. '(' → logprob: -18.125003814697266
    10. '(abs' → logprob: -18.250003814697266

Token 276: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -5.9153885558771435e-06
    2. 'dif' → logprob: -12.875005722045898
    3. '_difference' → logprob: -13.375005722045898
    4. '_absolute' → logprob: -14.125005722045898
    5. 'd' → logprob: -14.500005722045898
    6. '_a' → logprob: -16.0000057220459
    7. '_' → logprob: -16.1250057220459
    8. 's' → logprob: -16.6250057220459
    9. 'a' → logprob: -16.8750057220459
    10. '_dist' → logprob: -17.0000057220459

Token 277: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.44312788406387e-05
    2. ' if' → logprob: -10.625054359436035
    3. 'dif' → logprob: -10.875054359436035
    4. '   ' → logprob: -12.750054359436035
    5. 'for' → logprob: -13.250054359436035
    6. '(' → logprob: -13.375054359436035
    7. 'ffer' → logprob: -13.750054359436035
    8. 'i' → logprob: -14.250054359436035
    9. '(if' → logprob: -14.375054359436035
    10. '(i' → logprob: -14.750054359436035

Token 278: 'ferences' (ID: 10131)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2568839192390442
    2. 'ferences' → logprob: -2.0068838596343994
    3. 'r' → logprob: -2.5068838596343994
    4. 'ences' → logprob: -5.2568840980529785
    5. 'dif' → logprob: -6.3818840980529785
    6. 'ffer' → logprob: -6.5068840980529785
    7. 'fer' → logprob: -7.1318840980529785
    8. 'rer' → logprob: -7.2568840980529785
    9. 're' → logprob: -7.8818840980529785
    10. 'f' → logprob: -9.38188362121582

Token 279: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.9160102712921798e-05
    2. '_alt' → logprob: -10.625029563903809
    3. ' (' → logprob: -12.500029563903809
    4. '(' → logprob: -15.250029563903809
    5. '```' → logprob: -15.625029563903809
    6. '_ALT' → logprob: -15.750029563903809
    7. 'alt' → logprob: -16.125028610229492
    8. 'Alt' → logprob: -16.250028610229492
    9. '(AL' → logprob: -16.250028610229492
    10. '   ' → logprob: -16.750028610229492

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.759734732331708e-05
    2. ' ,' → logprob: -11.500017166137695
    3. ',A' → logprob: -12.375017166137695
    4. '(A' → logprob: -13.375017166137695
    5. ',a' → logprob: -14.375017166137695
    6. '(' → logprob: -15.250017166137695
    7. ',
' → logprob: -15.375017166137695
    8. 'A' → logprob: -15.625017166137695
    9. 'a' → logprob: -15.875017166137695
    10. ')' → logprob: -16.125017166137695

Token 281: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9948278069496155
    2. ' a' → logprob: -0.9948278069496155
    3. ' mid' → logprob: -1.8698277473449707
    4. 'mid' → logprob: -2.2448277473449707
    5. ' ' → logprob: -9.307328224182129
    6. 'm' → logprob: -10.057328224182129
    7. '   ' → logprob: -10.369828224182129
    8. '(mid' → logprob: -10.869828224182129
    9. '	a' → logprob: -11.182328224182129
    10. '(a' → logprob: -11.494828224182129

Token 282: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12721535563468933
    2. ')' → logprob: -2.1272153854370117
    3. ')

' → logprob: -8.377215385437012
    4. ')
' → logprob: -10.502215385437012
    5. '+' → logprob: -11.002215385437012
    6. '-' → logprob: -11.877215385437012
    7. ' )
' → logprob: -13.127215385437012
    8. ')s' → logprob: -13.877215385437012
    9. '   ' → logprob: -14.377215385437012
    10. 's' → logprob: -14.502215385437012

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022657555527985096
    2. 's' → logprob: -6.877265930175781
    3. ' s' → logprob: -7.502265930175781
    4. '
' → logprob: -7.502265930175781
    5. '    
' → logprob: -9.252265930175781
    6. '	s' → logprob: -11.377265930175781
    7. ',' → logprob: -12.627265930175781
    8. '       ' → logprob: -12.752265930175781
    9. ',s' → logprob: -13.127265930175781
    10. '_s' → logprob: -13.627265930175781

Token 284: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.6382015943527222
    2. ' s' → logprob: -0.7632015943527222
    3. '   ' → logprob: -5.263201713562012
    4. ' ' → logprob: -9.138201713562012
    5. '	s' → logprob: -9.513201713562012
    6. '1' → logprob: -9.638201713562012
    7. '_s' → logprob: -10.263201713562012
    8. '2' → logprob: -10.763201713562012
    9. '+' → logprob: -10.888201713562012
    10. ' +' → logprob: -11.138201713562012

Token 285: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007075040601193905
    2. '1' → logprob: -5.50707483291626
    3. '_alt' → logprob: -5.88207483291626
    4. 'alt' → logprob: -9.257075309753418
    5. ' =' → logprob: -10.507075309753418
    6. '_' → logprob: -10.507075309753418
    7. '_al' → logprob: -12.007075309753418
    8. '=' → logprob: -12.319575309753418
    9. '0' → logprob: -12.444575309753418
    10. ' ' → logprob: -12.632075309753418

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519296407699585
    2. '=' → logprob: -1.5019296407699585
    3. '=s' → logprob: -15.50192928314209
    4. ' ' → logprob: -15.50192928314209
    5. '_' → logprob: -16.376930236816406
    6. 's' → logprob: -16.876930236816406
    7. '  ' → logprob: -17.251930236816406
    8. '=sum' → logprob: -17.376930236816406
    9. ',' → logprob: -18.001930236816406
    10. ':' → logprob: -18.251930236816406

Token 287: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.31329116225242615
    2. 'sum' → logprob: -1.3132911920547485
    3. 's' → logprob: -11.563291549682617
    4. '   ' → logprob: -12.438291549682617
    5. ' ' → logprob: -12.563291549682617
    6. '(sum' → logprob: -12.938291549682617
    7. '	sum' → logprob: -13.063291549682617
    8. 'um' → logprob: -13.813291549682617
    9. 'm' → logprob: -13.938291549682617
    10. '=sum' → logprob: -14.250791549682617

Token 288: '_absolute' (ID: 131930)
  Prédit: '_absolute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_absolute' → logprob: -5.796184723294573e-06
    2. 'absolute' → logprob: -12.750005722045898
    3. '_' → logprob: -14.000005722045898
    4. '_abs' → logprob: -14.500005722045898
    5. '_al' → logprob: -14.625005722045898
    6. 'Absolute' → logprob: -14.750005722045898
    7. '_alt' → logprob: -15.250005722045898
    8. ' absolute' → logprob: -16.3750057220459
    9. 'sum' → logprob: -16.8750057220459
    10. '1' → logprob: -17.0000057220459

Token 289: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00025204161647707224
    2. '_absolute' → logprob: -8.875251770019531
    3. 'dif' → logprob: -9.750251770019531
    4. 'absolute' → logprob: -10.250251770019531
    5. 'd' → logprob: -11.500251770019531
    6. 'def' → logprob: -13.125251770019531
    7. '_' → logprob: -13.375251770019531
    8. 's' → logprob: -14.000251770019531
    9. '_difference' → logprob: -14.375251770019531
    10. '_def' → logprob: -14.750251770019531

Token 290: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0011990397470071912
    2. 'dif' → logprob: -6.751199245452881
    3. 'f' → logprob: -12.376198768615723
    4. 'is' → logprob: -12.626198768615723
    5. ' if' → logprob: -12.626198768615723
    6. '(' → logprob: -12.626198768615723
    7. 'i' → logprob: -12.751198768615723
    8. 'of' → logprob: -13.376198768615723
    9. 'for' → logprob: -13.501198768615723
    10. 'iffer' → logprob: -13.626198768615723

Token 291: 'ferences' (ID: 10131)
  Prédit: 'ferences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -0.1306859403848648
    2. 'er' → logprob: -2.130686044692993
    3. 'dif' → logprob: -6.380685806274414
    4. 'fer' → logprob: -7.505685806274414
    5. 'r' → logprob: -7.630685806274414
    6. 'ences' → logprob: -8.005685806274414
    7. '_absolute' → logprob: -8.505685806274414
    8. 'absolute' → logprob: -9.505685806274414
    9. '(' → logprob: -10.005685806274414
    10. 'ference' → logprob: -10.130685806274414

Token 292: '_alt' (ID: 77054)
  Prédit: '_alt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_alt' → logprob: -0.0488329641520977
    2. '(A' → logprob: -3.048832893371582
    3. '_ALT' → logprob: -9.298832893371582
    4. 'alt' → logprob: -9.548832893371582
    5. 'Alt' → logprob: -9.923832893371582
    6. '_(' → logprob: -11.548832893371582
    7. '```' → logprob: -12.298832893371582
    8. '[A' → logprob: -12.548832893371582
    9. '_' → logprob: -12.798832893371582
    10. '_al' → logprob: -12.923832893371582

Token 293: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: 0.0
    2. '(' → logprob: -17.25
    3. '(B' → logprob: -19.375
    4. '(
' → logprob: -19.375
    5. '```' → logprob: -19.875
    6. '(AST' → logprob: -20.5
    7. '(E' → logprob: -20.875
    8. ' (' → logprob: -21.125
    9. '(AL' → logprob: -21.75
    10. '(C' → logprob: -22.0

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003078840672969818
    2. '(A' → logprob: -5.878078937530518
    3. ',A' → logprob: -8.75307846069336
    4. ' ,' → logprob: -9.25307846069336
    5. '   ' → logprob: -11.62807846069336
    6. ')' → logprob: -11.75307846069336
    7. ',
' → logprob: -13.50307846069336
    8. '(' → logprob: -13.75307846069336
    9. ' (' → logprob: -15.50307846069336
    10. ',(' → logprob: -15.75307846069336

Token 295: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03901774436235428
    2. 'a' → logprob: -3.289017677307129
    3. ' A' → logprob: -7.039017677307129
    4. ' a' → logprob: -10.039017677307129
    5. '   ' → logprob: -10.539017677307129
    6. 's' → logprob: -11.539017677307129
    7. '(A' → logprob: -11.664017677307129
    8. ')' → logprob: -11.914017677307129
    9. '	A' → logprob: -14.414017677307129
    10. '(a' → logprob: -14.539017677307129

Token 296: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02333247661590576
    2. ')' → logprob: -3.7733325958251953
    3. '   ' → logprob: -9.523332595825195
    4. ')
' → logprob: -11.273332595825195
    5. ')

' → logprob: -14.148332595825195
    6. ')`
' → logprob: -15.398332595825195
    7. ' )
' → logprob: -15.898332595825195
    8. ' ' → logprob: -17.648332595825195
    9. '  ' → logprob: -17.898332595825195
    10. ')
/' → logprob: -19.398332595825195

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004046938265673816
    2. '
' → logprob: -8.125404357910156
    3. 'return' → logprob: -9.750404357910156
    4. ' return' → logprob: -10.000404357910156
    5. '    
' → logprob: -13.000404357910156
    6. '	return' → logprob: -14.500404357910156
    7. '```' → logprob: -14.625404357910156
    8. 'if' → logprob: -14.750404357910156
    9. 'def' → logprob: -14.750404357910156
    10. ' if' → logprob: -15.250404357910156

Token 298: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033778147771954536
    2. 'return' (adapté à ' return') → logprob: -5.753377914428711
    3. ' return' → logprob: -8.878377914428711
    4. '
' → logprob: -10.003377914428711
    5. 'if' → logprob: -11.253377914428711
    6. 'def' → logprob: -14.253377914428711
    7. ' if' → logprob: -14.253377914428711
    8. '    
' → logprob: -14.503377914428711
    9. '	return' → logprob: -15.003377914428711
    10. '       ' → logprob: -16.12837791442871

Token 299: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.043221615254879
    2. 'min' → logprob: -3.1682217121124268
    3. ' s' → logprob: -8.668221473693848
    4. 's' → logprob: -10.543221473693848
    5. '   ' → logprob: -11.418221473693848
    6. '	min' → logprob: -12.418221473693848
    7. ' minimum' → logprob: -12.918221473693848
    8. ' max' → logprob: -13.418221473693848
    9. '(min' → logprob: -13.918221473693848
    10. ' ' → logprob: -14.168221473693848

Token 300: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.1928003813372925e-05
    2. '(' → logprob: -9.875051498413086
    3. '(
' → logprob: -14.750051498413086
    4. 's' → logprob: -17.000051498413086
    5. ' (' → logprob: -17.375051498413086
    6. '((' → logprob: -18.750051498413086
    7. '(

' → logprob: -19.750051498413086
    8. '```' → logprob: -21.000051498413086
    9. '(a' → logprob: -21.125051498413086
    10. '(
' → logprob: -21.750051498413086

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01020211260765791
    2. '(s' → logprob: -4.635201930999756
    3. '2' → logprob: -8.010202407836914
    4. '(' → logprob: -10.135202407836914
    5. 's' → logprob: -10.260202407836914
    6. '(a' → logprob: -11.010202407836914
    7. '(
' → logprob: -12.385202407836914
    8. ')' → logprob: -12.760202407836914
    9. ' (' → logprob: -13.135202407836914
    10. '_' → logprob: -13.135202407836914

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015071245143190026
    2. ' ,' → logprob: -6.62650728225708
    3. ',s' → logprob: -8.626506805419922
    4. ',
' → logprob: -13.501506805419922
    5. ' s' → logprob: -15.251506805419922
    6. '   ' → logprob: -15.876506805419922
    7. 's' → logprob: -16.501506805419922
    8. ' ,
' → logprob: -17.626506805419922
    9. ' ' → logprob: -18.376506805419922
    10. '_,' → logprob: -19.876506805419922

Token 303: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4740770161151886
    2. 's' → logprob: -0.9740769863128662
    3. ' ' → logprob: -17.599077224731445
    4. ' ' → logprob: -18.224077224731445
    5. '	s' → logprob: -18.224077224731445
    6. '_s' → logprob: -18.974077224731445
    7. '(s' → logprob: -19.099077224731445
    8. ')' → logprob: -19.724077224731445
    9. ')s' → logprob: -20.349077224731445
    10. ',' → logprob: -20.849077224731445

Token 304: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.12500286102295
    3. 's' → logprob: -14.62500286102295
    4. '1' → logprob: -14.75000286102295
    5. ' ' → logprob: -16.125003814697266
    6. '
' → logprob: -16.250003814697266
    7. '₂' → logprob: -16.250003814697266
    8. ',' → logprob: -16.375003814697266
    9. '```' → logprob: -18.187503814697266
    10. ' s' → logprob: -18.250003814697266

Token 305: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.625003814697266
    3. '}' → logprob: -16.625003814697266
    4. ' )' → logprob: -16.625003814697266
    5. '   ' → logprob: -17.375003814697266
    6. '))' → logprob: -17.625003814697266
    7. ')}' → logprob: -17.625003814697266
    8. ')return' → logprob: -18.000003814697266
    9. '<|end|>' → logprob: -18.125003814697266
    10. ')

' → logprob: -19.500003814697266

Token 306: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.375
    3. '```' → logprob: -17.875
    4. '
' → logprob: -18.875
    5. 'N' → logprob: -19.125
    6. 'print' → logprob: -20.125
    7. 'if' → logprob: -20.375
    8. 'for' → logprob: -20.375
    9. 'n' → logprob: -20.625
    10. 'ndef' → logprob: -20.875

Token 307: ' output' (ID: 4733)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0014438070356845856
    2. ' main' → logprob: -6.626443862915039
    3. 'def' → logprob: -9.126443862915039
    4. 'process' → logprob: -12.376443862915039
    5. 'solve' → logprob: -12.501443862915039
    6. '_main' → logprob: -14.376443862915039
    7. 'm' → logprob: -15.751443862915039
    8. '
' → logprob: -15.876443862915039
    9. 'run' → logprob: -16.37644386291504
    10. ' def' → logprob: -16.50144386291504

Token 308: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11032450199127197
    2. '()' → logprob: -2.4853243827819824
    3. '(A' → logprob: -4.110324382781982
    4. '_' → logprob: -6.110324382781982
    5. '(_' → logprob: -7.235324382781982
    6. '():' → logprob: -7.860324382781982
    7. '("("' → logprob: -8.11032485961914
    8. '()(' → logprob: -8.86032485961914
    9. '("_' → logprob: -9.86032485961914
    10. '("")' → logprob: -9.86032485961914

Token 309: '(result' (ID: 8111)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0735639333724976
    2. '(result' → logprob: -1.1985639333724976
    3. '(value' → logprob: -1.6985639333724976
    4. '(' → logprob: -2.073564052581787
    5. '(A' → logprob: -3.573564052581787
    6. '(a' → logprob: -4.948564052581787
    7. '(b' → logprob: -5.323564052581787
    8. '(output' → logprob: -5.823564052581787
    9. '(s' → logprob: -6.698564052581787
    10. '(x' → logprob: -6.823564052581787

Token 310: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02329101227223873
    2. '):
' → logprob: -3.7732911109924316
    3. ')' → logprob: -10.398290634155273
    4. ',' → logprob: -12.023290634155273
    5. ':' → logprob: -12.898290634155273
    6. ',result' → logprob: -13.023290634155273
    7. '):
' → logprob: -13.273290634155273
    8. '   ' → logprob: -13.648290634155273
    9. '(result' → logprob: -14.273290634155273
    10. 'result' → logprob: -15.398290634155273

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007326744962483644
    2. 'print' → logprob: -7.500732898712158
    3. ' print' → logprob: -8.625732421875
    4. '	print' → logprob: -15.500732421875
    5. '```' → logprob: -16.875732421875
    6. '    
' → logprob: -17.375732421875
    7. '(print' → logprob: -17.750732421875
    8. '   ' → logprob: -18.625732421875
    9. '.print' → logprob: -19.375732421875
    10. 'def' → logprob: -19.625732421875

Token 312: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002888682356569916
    2. ' print' → logprob: -8.250288963317871
    3. '   ' → logprob: -10.500288963317871
    4. '```' → logprob: -16.875288009643555
    5. '	print' → logprob: -21.125288009643555
    6. 'pr' → logprob: -21.375288009643555
    7. '`' → logprob: -22.250288009643555
    8. '
' → logprob: -22.750288009643555
    9. ' ' → logprob: -23.125288009643555
    10. 'def' → logprob: -23.250288009643555

Token 313: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0031989887356758118
    2. '(' → logprob: -5.753199100494385
    3. 'result' → logprob: -11.128198623657227
    4. '()' → logprob: -12.128198623657227
    5. '(f' → logprob: -14.128198623657227
    6. '(
' → logprob: -15.378198623657227
    7. ' (' → logprob: -16.878198623657227
    8. '(res' → logprob: -17.128198623657227
    9. '=result' → logprob: -17.128198623657227
    10. ',result' → logprob: -17.378198623657227

Token 314: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -13.750000953674316
    3. ' )' → logprob: -17.000001907348633
    4. ')`' → logprob: -19.000001907348633
    5. '()' → logprob: -20.000001907348633
    6. '))' → logprob: -20.125001907348633
    7. '())' → logprob: -20.250001907348633
    8. '),' → logprob: -20.500001907348633
    9. '')' → logprob: -20.500001907348633
    10. ')

' → logprob: -20.625001907348633

Token 315: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002615742268972099
    2. 'if' → logprob: -8.250261306762695
    3. 'N' → logprob: -15.750261306762695
    4. 'n' → logprob: -16.750261306762695
    5. ' def' → logprob: -17.000261306762695
    6. '```' → logprob: -18.875261306762695
    7. 'ndef' → logprob: -19.250261306762695
    8. 'A' → logprob: -19.875261306762695
    9. 'de' → logprob: -20.625261306762695
    10. 't' → logprob: -21.250261306762695

Token 316: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.009932449087500572
    2. ' main' → logprob: -4.759932518005371
    3. 'def' → logprob: -6.634932518005371
    4. 'solve' → logprob: -13.259932518005371
    5. ' def' → logprob: -13.634932518005371
    6. '	main' → logprob: -16.509931564331055
    7. 'run' → logprob: -16.634931564331055
    8. '_main' → logprob: -16.884931564331055
    9. 'process' → logprob: -17.009931564331055
    10. ' solve' → logprob: -17.134931564331055

Token 317: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.1928003813372925e-05
    2. '():
' → logprob: -10.000051498413086
    3. ' ():' → logprob: -12.125051498413086
    4. '()' → logprob: -14.375051498413086
    5. '_' → logprob: -14.875051498413086
    6. '(' → logprob: -16.375051498413086
    7. '():
' → logprob: -17.375051498413086
    8. '():

' → logprob: -18.500051498413086
    9. '()>' → logprob: -19.250051498413086
    10. '().' → logprob: -19.375051498413086

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016888661775738
    2. 'N' → logprob: -7.1266889572143555
    3. 'n' → logprob: -7.2516889572143555
    4. ' N' → logprob: -9.251688957214355
    5. ' n' → logprob: -10.376688957214355
    6. 'A' → logprob: -10.751688957214355
    7. ' A' → logprob: -11.251688957214355
    8. '    
' → logprob: -12.501688957214355
    9. '	N' → logprob: -13.001688957214355
    10. '(n' → logprob: -13.376688957214355

Token 319: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.002118973294273019
    2. 'n' → logprob: -7.002119064331055
    3. '   ' → logprob: -7.002119064331055
    4. ' N' → logprob: -8.127119064331055
    5. ' n' → logprob: -14.002119064331055
    6. ' ' → logprob: -15.502119064331055
    7. '	N' → logprob: -16.252119064331055
    8. 't' → logprob: -16.377119064331055
    9. 'T' → logprob: -16.377119064331055
    10. '
' → logprob: -16.627119064331055

Token 320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426979899406433
    2. '=' → logprob: -2.017698049545288
    3. ',' → logprob: -11.392698287963867
    4. '=int' → logprob: -12.142698287963867
    5. '=N' → logprob: -12.392698287963867
    6. ' ' → logprob: -14.392698287963867
    7. ' N' → logprob: -14.767698287963867
    8. ' =
' → logprob: -15.142698287963867
    9. '   ' → logprob: -15.517698287963867
    10. '=input' → logprob: -15.642698287963867

Token 321: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.01814994215965271
    2. ' read' → logprob: -4.0181498527526855
    3. '	read' → logprob: -18.518150329589844
    4. '   ' → logprob: -18.893150329589844
    5. '(read' → logprob: -19.268150329589844
    6. '  ' → logprob: -20.518150329589844
    7. 'int' → logprob: -21.393150329589844
    8. '_read' → logprob: -21.768150329589844
    9. ' ' → logprob: -21.893150329589844
    10. '    ' → logprob: -22.643150329589844

Token 322: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -3.054500666621607e-06
    2. '_INTEGER' → logprob: -14.12500286102295
    3. 'integer' → logprob: -14.12500286102295
    4. '_in' → logprob: -14.50000286102295
    5. '_' → logprob: -14.62500286102295
    6. ' integer' → logprob: -15.87500286102295
    7. 'Integer' → logprob: -16.625003814697266
    8. '()' → logprob: -17.125003814697266
    9. '_line' → logprob: -17.125003814697266
    10. '_Integer' → logprob: -17.125003814697266

Token 323: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18548627197742462
    2. '   ' → logprob: -2.185486316680908
    3. '()' → logprob: -3.810486316680908
    4. '()
' → logprob: -3.810486316680908
    5. '    
' → logprob: -5.685486316680908
    6. '<|end|>' → logprob: -6.185486316680908
    7. ')' → logprob: -6.310486316680908
    8. '(A' → logprob: -6.310486316680908
    9. 'A' → logprob: -7.060486316680908
    10. ')
' → logprob: -7.310486316680908

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43171072006225586
    2. 'A' → logprob: -1.0567107200622559
    3. ' A' → logprob: -6.431710720062256
    4. '	A' → logprob: -7.181710720062256
    5. '    
' → logprob: -8.056711196899414
    6. '  ' → logprob: -9.431711196899414
    7. '<|end|>' → logprob: -9.806711196899414
    8. '
' → logprob: -9.931711196899414
    9. '    ' → logprob: -9.931711196899414
    10. ' ' → logprob: -10.431711196899414

Token 325: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0006595384911634028
    2. ' A' → logprob: -7.375659465789795
    3. '   ' → logprob: -10.375659942626953
    4. '	A' → logprob: -14.125659942626953
    5. ' ' → logprob: -16.250659942626953
    6. 'a' → logprob: -16.250659942626953
    7. 'arr' → logprob: -16.375659942626953
    8. '    
' → logprob: -16.750659942626953
    9. 'indices' → logprob: -16.750659942626953
    10. 'B' → logprob: -16.750659942626953

Token 326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693152129650116
    2. ' =' → logprob: -0.693152129650116
    3. '   ' → logprob: -13.44315242767334
    4. ',' → logprob: -13.81815242767334
    5. ' ' → logprob: -13.94315242767334
    6. '[' → logprob: -14.06815242767334
    7. '	' → logprob: -15.56815242767334
    8. ')' → logprob: -16.318151473999023
    9. '_' → logprob: -16.568151473999023
    10. ' =
' → logprob: -16.568151473999023

Token 327: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.004795834422111511
    2. ' read' → logprob: -5.504796028137207
    3. 'de' → logprob: -7.254796028137207
    4. '   ' → logprob: -12.504796028137207
    5. 'sort' → logprob: -12.879796028137207
    6. ' decrement' → logprob: -13.004796028137207
    7. '  ' → logprob: -14.129796028137207
    8. '(read' → logprob: -14.879796028137207
    9. '	read' → logprob: -15.129796028137207
    10. ' de' → logprob: -16.25479507446289

Token 328: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -1.3856492842023727e-06
    2. '_INTEGER' → logprob: -14.000000953674316
    3. 'integer' → logprob: -15.375000953674316
    4. '_in' → logprob: -16.625001907348633
    5. '_string' → logprob: -16.625001907348633
    6. '_list' → logprob: -17.250001907348633
    7. 'Integer' → logprob: -17.625001907348633
    8. ' _' → logprob: -17.875001907348633
    9. '_' → logprob: -18.125001907348633
    10. '_character' → logprob: -18.500001907348633

Token 329: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.008671891875565052
    2. '()' → logprob: -4.758671760559082
    3. '_' → logprob: -10.008671760559082
    4. 'list' → logprob: -12.133671760559082
    5. '()
' → logprob: -12.508671760559082
    6. '_lists' → logprob: -14.133671760559082
    7. '().' → logprob: -14.383671760559082
    8. 'List' → logprob: -14.883671760559082
    9. '()[' → logprob: -15.008671760559082
    10. '_line' → logprob: -15.758671760559082

Token 330: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009143244242295623
    2. '()
' → logprob: -7.000914096832275
    3. ' ()' → logprob: -13.750914573669434
    4. '()
' → logprob: -14.125914573669434
    5. '()

' → logprob: -14.750914573669434
    6. '(' → logprob: -15.750914573669434
    7. '()\' → logprob: -15.875914573669434
    8. '()[' → logprob: -16.125913619995117
    9. '())' → logprob: -16.375913619995117
    10. '()`' → logprob: -16.875913619995117

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019062170758843422
    2. 'A' → logprob: -4.019062042236328
    3. ' A' → logprob: -7.019062042236328
    4. '    
' → logprob: -11.769062042236328
    5. ' ' → logprob: -12.894062042236328
    6. '
' → logprob: -13.269062042236328
    7. '  ' → logprob: -13.519062042236328
    8. '	A' → logprob: -14.144062042236328
    9. '    ' → logprob: -14.269062042236328
    10. '```' → logprob: -14.269062042236328

Token 332: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.10654228180646896
    2. ' A' → logprob: -2.6065423488616943
    3. '   ' → logprob: -3.6065423488616943
    4. ' ' → logprob: -9.856542587280273
    5. '
' → logprob: -10.356542587280273
    6. '    
' → logprob: -10.856542587280273
    7. ' 
' → logprob: -12.106542587280273
    8. '  ' → logprob: -12.106542587280273
    9. '```' → logprob: -12.356542587280273
    10. 'B' → logprob: -13.231542587280273

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165864326059818
    2. '=' → logprob: -4.264165878295898
    3. '[' → logprob: -13.889165878295898
    4. '<|end|>' → logprob: -14.764165878295898
    5. ')' → logprob: -15.389165878295898
    6. ',' → logprob: -15.639165878295898
    7. ' =[' → logprob: -16.0141658782959
    8. ' ' → logprob: -16.1391658782959
    9. ' =
' → logprob: -16.3891658782959
    10. '_' → logprob: -16.5141658782959

Token 334: ' decrement' (ID: 121877)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.12696526944637299
    2. ' decrement' → logprob: -2.126965284347534
    3. ' de' → logprob: -10.501965522766113
    4. ' decre' → logprob: -11.751965522766113
    5. 'dec' → logprob: -14.501965522766113
    6. '	de' → logprob: -14.876965522766113
    7. '[' → logprob: -15.501965522766113
    8. '(de' → logprob: -15.501965522766113
    9. ',de' → logprob: -16.376964569091797
    10. '.de' → logprob: -16.626964569091797

Token 335: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.875000953674316
    3. ' _' → logprob: -15.000000953674316
    4. '_e' → logprob: -17.000001907348633
    5. '
' → logprob: -17.125001907348633
    6. '(_' → logprob: -17.250001907348633
    7. '_ELEMENTS' → logprob: -17.250001907348633
    8. 'elements' → logprob: -17.625001907348633
    9. '```' → logprob: -17.625001907348633
    10. '_items' → logprob: -18.500001907348633

Token 336: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -6.988221684878226e-06
    2. 'by' → logprob: -12.000006675720215
    3. '_' → logprob: -14.750006675720215
    4. '_elements' → logprob: -16.00000762939453
    5. 'By' → logprob: -16.50000762939453
    6. ' _' → logprob: -16.75000762939453
    7. '(_' → logprob: -17.75000762939453
    8. '   ' → logprob: -17.87500762939453
    9. '
' → logprob: -18.12500762939453
    10. '_BY' → logprob: -18.25000762939453

Token 337: '_indices' (ID: 43508)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.0009059838484972715
    2. '_indices' → logprob: -7.125905990600586
    3. 'index' → logprob: -9.250905990600586
    4. 'A' → logprob: -13.125905990600586
    5. ' indices' → logprob: -13.500905990600586
    6. 'indexes' → logprob: -14.625905990600586
    7. '[' → logprob: -15.750905990600586
    8. 'Indices' → logprob: -15.875905990600586
    9. '(indices' → logprob: -16.000905990600586
    10. 'list' → logprob: -16.000905990600586

Token 338: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00010962257510982454
    2. '(' → logprob: -9.125109672546387
    3. ' (' → logprob: -14.625109672546387
    4. '(
' → logprob: -16.00010871887207
    5. '(E' → logprob: -19.12510871887207
    6. ' ' → logprob: -19.62510871887207
    7. '```' → logprob: -19.62510871887207
    8. '(B' → logprob: -19.75010871887207
    9. '(I' → logprob: -19.87510871887207
    10. ',' → logprob: -20.00010871887207

Token 339: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38688066601753235
    2. ')
' → logprob: -1.13688063621521
    3. ')
' → logprob: -11.886880874633789
    4. '   ' → logprob: -13.261880874633789
    5. ')

' → logprob: -14.261880874633789
    6. ' )
' → logprob: -16.13688087463379
    7. ' ' → logprob: -16.88688087463379
    8. ' )' → logprob: -17.01188087463379
    9. ')`
' → logprob: -17.01188087463379
    10. '),' → logprob: -17.26188087463379

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00943115446716547
    2. 'A' → logprob: -4.8844313621521
    3. '
' → logprob: -6.5094313621521
    4. '    
' → logprob: -8.509430885314941
    5. ' A' → logprob: -9.259430885314941
    6. 'if' → logprob: -11.134430885314941
    7. '```' → logprob: -12.009430885314941
    8. '  ' → logprob: -12.884430885314941
    9. '  
' → logprob: -13.009430885314941
    10. ' if' → logprob: -13.384430885314941

Token 341: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.19477400183677673
    2. '   ' → logprob: -2.0697739124298096
    3. ' A' → logprob: -3.0697739124298096
    4. 'if' → logprob: -5.819774150848389
    5. ' if' → logprob: -6.819774150848389
    6. ' ' → logprob: -8.56977367401123
    7. '  ' → logprob: -10.56977367401123
    8. 'sorted' → logprob: -10.81977367401123
    9. '```' → logprob: -11.94477367401123
    10. '    
' → logprob: -11.94477367401123

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859429597854614
    2. ' =' → logprob: -3.0485942363739014
    3. '.sort' → logprob: -12.04859447479248
    4. '.' → logprob: -14.42359447479248
    5. ' ' → logprob: -16.048593521118164
    6. 'sorted' → logprob: -16.423593521118164
    7. '_sorted' → logprob: -16.423593521118164
    8. ',' → logprob: -17.298593521118164
    9. 'sort' → logprob: -17.298593521118164
    10. ' sort' → logprob: -17.423593521118164

Token 343: ' sort' (ID: 4506)
  Prédit: ' sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.38687410950660706
    2. 'sort' → logprob: -1.1368740797042847
    3. ' sorted' → logprob: -13.636874198913574
    4. 'sorted' → logprob: -13.761874198913574
    5. '(sort' → logprob: -15.136874198913574
    6. ' ' → logprob: -15.136874198913574
    7. '   ' → logprob: -15.636874198913574
    8. '	sort' → logprob: -15.761874198913574
    9. '.sort' → logprob: -18.136873245239258
    10. ' ' → logprob: -18.386873245239258

Token 344: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.030058471485972404
    2. '(A' → logprob: -3.5300583839416504
    3. 'List' → logprob: -8.280058860778809
    4. '_' → logprob: -10.905058860778809
    5. 'list' → logprob: -11.405058860778809
    6. '(' → logprob: -11.655058860778809
    7. '_List' → logprob: -11.780058860778809
    8. '```' → logprob: -12.655058860778809
    9. '(_' → logprob: -13.530058860778809
    10. ')' → logprob: -13.655058860778809

Token 345: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00012368128227535635
    2. '(' → logprob: -9.125123977661133
    3. '(
' → logprob: -11.750123977661133
    4. '   ' → logprob: -12.250123977661133
    5. 'A' → logprob: -13.375123977661133
    6. '
' → logprob: -14.500123977661133
    7. 'def' → logprob: -16.750123977661133
    8. ' ' → logprob: -18.125123977661133
    9. '    
' → logprob: -18.375123977661133
    10. '  ' → logprob: -18.375123977661133

Token 346: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ')
' → logprob: -12.000007629394531
    3. '()' → logprob: -14.125007629394531
    4. '())' → logprob: -14.250007629394531
    5. '   ' → logprob: -15.000007629394531
    6. ' )' → logprob: -15.875007629394531
    7. '))' → logprob: -17.25000762939453
    8. ')`' → logprob: -18.00000762939453
    9. ')

' → logprob: -18.25000762939453
    10. ' ' → logprob: -19.00000762939453

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004701872356235981
    2. 'if' → logprob: -6.129702091217041
    3. '    
' → logprob: -6.629702091217041
    4. '
' → logprob: -6.879702091217041
    5. ' if' → logprob: -9.254701614379883
    6. '```' → logprob: -10.379701614379883
    7. '  
' → logprob: -11.129701614379883
    8. '   
' → logprob: -12.504701614379883
    9. 'n' → logprob: -12.754701614379883
    10. ' ' → logprob: -12.879701614379883

Token 348: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.050175320357084274
    2. '   ' → logprob: -3.050175428390503
    3. 'result' → logprob: -7.050175189971924
    4. ' if' → logprob: -7.300175189971924
    5. 'i' → logprob: -10.425175666809082
    6. '```' → logprob: -12.300175666809082
    7. ' ' → logprob: -12.800175666809082
    8. '  ' → logprob: -12.925175666809082
    9. '
' → logprob: -13.550175666809082
    10. ' result' → logprob: -13.925175666809082

Token 349: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.006246103905141354
    2. ' N' → logprob: -5.256246089935303
    3. 'is' → logprob: -7.131246089935303
    4. 'N' → logprob: -8.631246566772461
    5. ' ' → logprob: -10.506246566772461
    6. ' len' → logprob: -12.631246566772461
    7. '   ' → logprob: -13.881246566772461
    8. '  ' → logprob: -14.256246566772461
    9. '	is' → logprob: -14.881246566772461
    10. ' (' → logprob: -15.256246566772461

Token 350: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.696889623621246e-06
    2. 'odd' → logprob: -13.12500286102295
    3. '_even' → logprob: -14.87500286102295
    4. '_od' → logprob: -15.25000286102295
    5. ' _' → logprob: -17.375001907348633
    6. '(N' → logprob: -17.750001907348633
    7. '_n' → logprob: -18.500001907348633
    8. 'Odd' → logprob: -18.500001907348633
    9. '_
' → logprob: -19.000001907348633
    10. '_o' → logprob: -19.000001907348633

Token 351: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -1.259079363080673e-05
    2. 'N' → logprob: -11.875012397766113
    3. 'od' → logprob: -12.875012397766113
    4. '(N' → logprob: -13.375012397766113
    5. ' odd' → logprob: -14.000012397766113
    6. 'Odd' → logprob: -15.000012397766113
    7. '_' → logprob: -16.00001335144043
    8. 'ood' → logprob: -18.00001335144043
    9. '(' → logprob: -18.25001335144043
    10. '   ' → logprob: -19.12501335144043

Token 352: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0024783893022686243
    2. '(' → logprob: -6.00247859954834
    3. '(
' → logprob: -12.87747859954834
    4. ' (' → logprob: -15.75247859954834
    5. '(

' → logprob: -17.252477645874023
    6. '((' → logprob: -17.502477645874023
    7. '(n' → logprob: -17.752477645874023
    8. '\(' → logprob: -18.127477645874023
    9. '   ' → logprob: -18.877477645874023
    10. '(NUM' → logprob: -19.252477645874023

Token 353: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018241018056869507
    2. '):
' → logprob: -4.018240928649902
    3. ')' → logprob: -10.143240928649902
    4. ':' → logprob: -10.268240928649902
    5. ' ):' → logprob: -11.518240928649902
    6. '():' → logprob: -12.643240928649902
    7. '   ' → logprob: -13.143240928649902
    8. '):

' → logprob: -14.393240928649902
    9. '):
' → logprob: -14.643240928649902
    10. '():
' → logprob: -15.143240928649902

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1595134735107422
    2. ' result' → logprob: -2.659513473510742
    3. 'result' → logprob: -2.659513473510742
    4. '   ' → logprob: -4.909513473510742
    5. 'print' → logprob: -10.659513473510742
    6. '    ' → logprob: -11.409513473510742
    7. '    
' → logprob: -11.534513473510742
    8. '	result' → logprob: -11.659513473510742
    9. '        
' → logprob: -11.784513473510742
    10. '_result' → logprob: -12.159513473510742

Token 355: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1044880598783493
    2. ' result' → logprob: -2.3544881343841553
    3. '   ' → logprob: -6.229487895965576
    4. '       ' → logprob: -6.354487895965576
    5. 'output' → logprob: -7.729487895965576
    6. ' output' → logprob: -9.729488372802734
    7. 'res' → logprob: -10.104488372802734
    8. 'print' → logprob: -11.979488372802734
    9. '	result' → logprob: -12.229488372802734
    10. ' res' → logprob: -12.729488372802734

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023105144500732
    2. '=' → logprob: -2.350231170654297
    3. '   ' → logprob: -10.725231170654297
    4. ' ' → logprob: -14.225231170654297
    5. ')' → logprob: -14.725231170654297
    6. '    ' → logprob: -14.725231170654297
    7. '  ' → logprob: -14.975231170654297
    8. '_' → logprob: -15.600231170654297
    9. '       ' → logprob: -15.725231170654297
    10. ',' → logprob: -15.975231170654297

Token 357: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.2519298195838928
    2. ' process' → logprob: -1.501929759979248
    3. '(process' → logprob: -15.001930236816406
    4. '   ' → logprob: -15.376930236816406
    5. '	process' → logprob: -15.626930236816406
    6. ' proces' → logprob: -18.001930236816406
    7. '.process' → logprob: -18.626930236816406
    8. '_process' → logprob: -18.751930236816406
    9. 'proces' → logprob: -19.001930236816406
    10. '       ' → logprob: -20.501930236816406

Token 358: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.704273118884885e-07
    2. 'odd' → logprob: -15.125000953674316
    3. '_even' → logprob: -15.125000953674316
    4. '_od' → logprob: -17.125
    5. '_o' → logprob: -17.75
    6. '```' → logprob: -18.125
    7. ' _' → logprob: -18.5
    8. '(' → logprob: -19.5
    9. ''_' → logprob: -19.75
    10. '_
' → logprob: -20.5

Token 359: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -4.246537173457909e-06
    2. 'N' → logprob: -12.500003814697266
    3. 'Odd' → logprob: -15.500003814697266
    4. ' odd' → logprob: -16.250003814697266
    5. '_' → logprob: -16.875003814697266
    6. '
' → logprob: -17.500003814697266
    7. 'od' → logprob: -18.500003814697266
    8. '   ' → logprob: -19.000003814697266
    9. 'O' → logprob: -19.125003814697266
    10. '```' → logprob: -19.500003814697266

Token 360: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -3.128163257315464e-07
    2. 'N' → logprob: -16.25
    3. '```' → logprob: -16.625
    4. '
' → logprob: -17.375
    5. '(N' → logprob: -17.625
    6. '_' → logprob: -17.625
    7. '_n' → logprob: -18.875
    8. '

' → logprob: -19.375
    9. ' _' → logprob: -19.5
    10. '\' → logprob: -19.75

Token 361: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. '(
' → logprob: -18.125001907348633
    4. ' (' → logprob: -18.375001907348633
    5. '```' → logprob: -19.500001907348633
    6. '   ' → logprob: -19.750001907348633
    7. 'A' → logprob: -20.625001907348633
    8. '((' → logprob: -20.750001907348633
    9. '(AST' → logprob: -20.875001907348633
    10. '
' → logprob: -21.750001907348633

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.214019307051785e-05
    2. ',N' → logprob: -10.500032424926758
    3. ' ,' → logprob: -12.500032424926758
    4. '   ' → logprob: -14.625032424926758
    5. ',
' → logprob: -15.625032424926758
    6. ')' → logprob: -16.500032424926758
    7. ',n' → logprob: -16.750032424926758
    8. 'N' → logprob: -18.000032424926758
    9. '```' → logprob: -18.125032424926758
    10. '‌,' → logprob: -18.250032424926758

Token 363: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0024758970830589533
    2. ' N' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.25247573852539
    4. ' ' → logprob: -17.62747573852539
    5. ')' → logprob: -17.87747573852539
    6. '
' → logprob: -18.62747573852539
    7. '	N' → logprob: -19.00247573852539
    8. 'n' → logprob: -19.37747573852539
    9. '    ' → logprob: -20.12747573852539
    10. '  ' → logprob: -20.37747573852539

Token 364: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03708633780479431
    2. '   ' → logprob: -3.787086248397827
    3. ')
' → logprob: -4.287086486816406
    4. ')
' → logprob: -15.287086486816406
    5. ')

' → logprob: -16.162086486816406
    6. ' )' → logprob: -16.287086486816406
    7. '       ' → logprob: -17.287086486816406
    8. ' ' → logprob: -18.162086486816406
    9. ').' → logprob: -18.412086486816406
    10. '  ' → logprob: -18.412086486816406

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003669317811727524
    2. 'else' → logprob: -5.628669261932373
    3. ' else' → logprob: -9.753669738769531
    4. '    
' → logprob: -11.753669738769531
    5. '	else' → logprob: -13.003669738769531
    6. '```' → logprob: -14.253669738769531
    7. '       ' → logprob: -15.753669738769531
    8. 'elif' → logprob: -16.00366973876953
    9. '
' → logprob: -16.12866973876953
    10. ')' → logprob: -17.37866973876953

Token 366: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4119015634059906
    2. ' else' → logprob: -1.661901593208313
    3. '   ' → logprob: -1.911901593208313
    4. '	else' → logprob: -10.411901473999023
    5. ' ' → logprob: -13.911901473999023
    6. 'els' → logprob: -14.286901473999023
    7. '    
' → logprob: -14.536901473999023
    8. '```' → logprob: -14.911901473999023
    9. 'e' → logprob: -15.411901473999023
    10. '       ' → logprob: -15.536901473999023

Token 367: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38906484842300415
    2. ':
' → logprob: -1.1390647888183594
    3. '       ' → logprob: -6.139064788818359
    4. '   ' → logprob: -10.63906478881836
    5. '{' → logprob: -12.51406478881836
    6. ':

' → logprob: -13.26406478881836
    7. '{
' → logprob: -13.38906478881836
    8. ' :
' → logprob: -14.13906478881836
    9. ':
' → logprob: -14.51406478881836
    10. ' :' → logprob: -14.76406478881836

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010731808142736554
    2. '   ' → logprob: -7.126073360443115
    3. ' ans' → logprob: -8.501072883605957
    4. 'ans' → logprob: -10.251072883605957
    5. '	ans' → logprob: -11.501072883605957
    6. '(ans' → logprob: -11.626072883605957
    7. '     ' → logprob: -12.626072883605957
    8. '      ' → logprob: -13.001072883605957
    9. '           ' → logprob: -13.001072883605957
    10. '    ' → logprob: -13.626072883605957

Token 369: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.006246222648769617
    2. ' ans' → logprob: -5.131246089935303
    3. '   ' → logprob: -8.381246566772461
    4. '       ' → logprob: -9.506246566772461
    5. '	ans' → logprob: -11.631246566772461
    6. '(ans' → logprob: -13.006246566772461
    7. ' ' → logprob: -14.006246566772461
    8. '  ' → logprob: -14.506246566772461
    9. 'answer' → logprob: -14.881246566772461
    10. '    ' → logprob: -15.006246566772461

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132619559764862
    2. ' =' → logprob: -1.3132619857788086
    3. ':' → logprob: -16.188261032104492
    4. '   ' → logprob: -16.313261032104492
    5. ' ' → logprob: -17.938261032104492
    6. '＝' → logprob: -17.938261032104492
    7. ' =
' → logprob: -19.438261032104492
    8. '=
' → logprob: -19.813261032104492
    9. '    ' → logprob: -19.813261032104492
    10. 's' → logprob: -19.938261032104492

Token 371: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.16022473573684692
    2. 'process' → logprob: -1.9102246761322021
    3. '(process' → logprob: -14.660224914550781
    4. '	process' → logprob: -16.03522491455078
    5. ' proces' → logprob: -17.16022491455078
    6. '_process' → logprob: -18.16022491455078
    7. '   ' → logprob: -18.66022491455078
    8. 'proces' → logprob: -19.16022491455078
    9. '.process' → logprob: -19.41022491455078
    10. ' ' → logprob: -19.66022491455078

Token 372: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.750001907348633
    3. 'even' → logprob: -14.125001907348633
    4. '_equal' → logprob: -20.875001907348633
    5. '_else' → logprob: -21.000001907348633
    6. 'Even' → logprob: -21.375001907348633
    7. '_e' → logprob: -21.375001907348633
    8. '_easy' → logprob: -21.750001907348633
    9. ' even' → logprob: -22.250001907348633
    10. 'evenodd' → logprob: -22.500001907348633

Token 373: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -1.6286106983898208e-05
    2. '(N' → logprob: -11.375016212463379
    3. 'N' → logprob: -13.375016212463379
    4. '```' → logprob: -13.875016212463379
    5. '   ' → logprob: -14.375016212463379
    6. '_n' → logprob: -14.875016212463379
    7. '\' → logprob: -15.000016212463379
    8. '(_' → logprob: -15.000016212463379
    9. '_' → logprob: -15.875016212463379
    10. '
' → logprob: -16.375017166137695

Token 374: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.0280383548888494e-06
    2. 'A' → logprob: -14.375000953674316
    3. '(' → logprob: -15.750000953674316
    4. '(
' → logprob: -16.750001907348633
    5. ' (' → logprob: -16.875001907348633
    6. '(N' → logprob: -17.500001907348633
    7. ' A' → logprob: -18.125001907348633
    8. ')' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '<|end|>' → logprob: -19.375001907348633

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09839791059494019
    2. '(A' → logprob: -3.098397970199585
    3. ',A' → logprob: -3.723397970199585
    4. ')' → logprob: -3.973397970199585
    5. 'A' → logprob: -5.598397731781006
    6. '   ' → logprob: -7.223397731781006
    7. ',
' → logprob: -7.598397731781006
    8. ' ,' → logprob: -8.723398208618164
    9. ' A' → logprob: -8.723398208618164
    10. '(' → logprob: -9.098398208618164

Token 376: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004325672052800655
    2. ' N' → logprob: -5.504325866699219
    3. 'A' → logprob: -8.379325866699219
    4. ' A' → logprob: -11.379325866699219
    5. '   ' → logprob: -12.004325866699219
    6. ' ' → logprob: -16.00432586669922
    7. ')' → logprob: -17.50432586669922
    8. '  ' → logprob: -18.00432586669922
    9. '	N' → logprob: -18.62932586669922
    10. '    ' → logprob: -18.75432586669922

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005413522943854332
    2. ')
' → logprob: -5.25541353225708
    3. '   ' → logprob: -8.630413055419922
    4. ' )' → logprob: -14.880413055419922
    5. ')`' → logprob: -15.130413055419922
    6. ')`
' → logprob: -15.755413055419922
    7. ')
' → logprob: -16.005413055419922
    8. ')

' → logprob: -16.005413055419922
    9. '))' → logprob: -16.880413055419922
    10. ')\
' → logprob: -17.130413055419922

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2033572942018509
    2. '
' → logprob: -1.7033573389053345
    3. '    
' → logprob: -6.453357219696045
    4. 'output' → logprob: -8.078357696533203
    5. '
' → logprob: -11.078357696533203
    6. '  
' → logprob: -11.578357696533203
    7. '```' → logprob: -11.578357696533203
    8. ' output' → logprob: -11.953357696533203
    9. '	output' → logprob: -12.578357696533203
    10. ' 
' → logprob: -13.328357696533203

Token 379: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.5353176593780518
    2. '   ' → logprob: -1.1603176593780518
    3. ' output' → logprob: -2.4103176593780518
    4. '
' → logprob: -4.535317420959473
    5. '    
' → logprob: -7.535317420959473
    6. '	output' → logprob: -10.410317420959473
    7. ' 
' → logprob: -11.035317420959473
    8. '(output' → logprob: -11.910317420959473
    9. '```' → logprob: -12.035317420959473
    10. '_output' → logprob: -12.285317420959473

Token 380: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -9.610702363715973e-06
    2. '_' → logprob: -11.625009536743164
    3. '_Result' → logprob: -15.750009536743164
    4. '_results' → logprob: -16.125009536743164
    5. '_RESULT' → logprob: -16.500009536743164
    6. '_answer' → logprob: -16.625009536743164
    7. '_res' → logprob: -16.750009536743164
    8. '(result' → logprob: -17.500009536743164
    9. 'result' → logprob: -18.000009536743164
    10. 's' → logprob: -18.125009536743164

Token 381: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00033581978641450405
    2. '(' → logprob: -8.000335693359375
    3. '(answer' → logprob: -15.625335693359375
    4. ' (' → logprob: -16.125335693359375
    5. '(
' → logprob: -16.500335693359375
    6. '(an' → logprob: -17.500335693359375
    7. '(

' → logprob: -19.000335693359375
    8. '(ord' → logprob: -19.250335693359375
    9. '(abs' → logprob: -19.375335693359375
    10. '(a' → logprob: -20.125335693359375

Token 382: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. ')
' → logprob: -11.50001049041748
    3. '()' → logprob: -16.625009536743164
    4. ' )' → logprob: -17.125009536743164
    5. '())' → logprob: -17.625009536743164
    6. ')

' → logprob: -18.750009536743164
    7. ')`' → logprob: -19.500009536743164
    8. '))' → logprob: -19.750009536743164
    9. '
' → logprob: -19.875009536743164
    10. '   ' → logprob: -21.000009536743164

Token 383: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12736427783966064
    2. 'main' → logprob: -2.127364158630371
    3. '
' → logprob: -8.502364158630371
    4. '#' → logprob: -9.752364158630371
    5. ' main' → logprob: -9.752364158630371
    6. '(main' → logprob: -10.002364158630371
    7. ' if' → logprob: -10.627364158630371
    8. '```' → logprob: -10.877364158630371
    9. '_' → logprob: -11.627364158630371
    10. '__' → logprob: -12.127364158630371

Token 384: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00699952058494091
    2. '(' → logprob: -5.006999492645264
    3. '()
' → logprob: -9.006999969482422
    4. '```' → logprob: -9.631999969482422
    5. '(
' → logprob: -10.631999969482422
    6. '#' → logprob: -10.756999969482422
    7. '<|end|>' → logprob: -11.256999969482422
    8. '
' → logprob: -11.506999969482422
    9. '\n' → logprob: -12.131999969482422
    10. '()\' → logprob: -12.131999969482422


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 382
Tokens correctement prédits (1ère position, stricte): 203
Tokens correctement prédits (1ère position, avec adaptation): 220
Tokens correctement prédits (top 10): 340
Précision stricte (1ère position): 53.14%
Précision adaptée (1ère position): 57.59%
Précision (top 10): 89.01%
================================================================================
