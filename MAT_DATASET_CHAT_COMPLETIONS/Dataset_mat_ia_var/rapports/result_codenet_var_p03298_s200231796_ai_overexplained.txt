================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict  # Importe la classe defaultdict du module collections. defaultdict fonctionne comme un dictionnaire, mais fournit une valeur par défaut pour les clés inexistantes.

N = int(input())  # Lit une ligne de l'entrée standard (utilisateur), convertit la chaîne saisie en entier, puis attribue ce nombre à la variable N. N représentera très souvent une taille ou un nombre d'éléments à traiter.
S = input()  # Lit encore une ligne au clavier, la conserve telle quelle (sous forme de chaîne de caractères), et stocke cette chaîne dans la variable S.

S1 = S[:N]  # Prend une sous-chaîne de S, allant du début (indice 0 inclus) jusqu'à l'indice N (exclu). Cela donne les N premiers caractères de S. On la stocke dans S1.
S2 = S[N:][::-1]  # Prend la sous-chaîne commencant à l'indice N jusqu'à la fin de S (cela représente la "seconde moitié" de S si S fait 2N caractères). Ensuite, [::-1] inverse cette sous-chaîne, donc S2 est la seconde moitié de S renversée.

D = defaultdict(int)  # Crée un nouveau dictionnaire dont les valeurs par défaut sont 0 (c'est le comportement de int()). On utilise D pour compter des occurrences avec des clés particulières qui vont être des tuples de chaînes, sans avoir à vérifier si la clé existe avant d'incrémenter.

ans = 0  # Initialise une variable nommée ans avec la valeur 0. Cette variable servira à accumuler, probablement le résultat final ou un comptage.

# Première boucle : On considère toutes les combinaisons possibles des caractères de S1, 0 ou 1 pour chaque position.
for i in range(2**N):  # Va boucler pour i allant de 0 à (2 puissance N) - 1 inclus, ce qui fait toutes les combinaisons binaires possibles sur N bits.
    # Convertit l'entier i en une chaîne binaire de N chiffres, en truquant : on ajoute 2**N (soit un "1" devant N zéros en binaire, ce qui permet de garantir que tous les bits soient présents même avec des zéros initiaux en binaire), puis on découpe la chaîne en sautant les trois premiers caractères ('0b1') pour n'avoir que N caractères.
    bit = bin(2**N+i)[3:]
    # Ici, on crée la chaîne red1 en parcourant simultanément S1 et bit lettre à lettre avec zip().
    # Pour chaque paire (d, s) où d vient de S1 et s du bit-string (chaîne de '0' et '1'), on sélectionne d si s vaut '1'.
    red1 = "".join([d for d, s in zip(S1, bit) if s == "1"])
    # De même, on crée blue1 en prenant d (caractère de S1) chaque fois que s (le caractère dans bit) est égal à '0'.
    blue1 = "".join([d for d, s in zip(S1, bit) if s == "0"])
    # On utilise le tuple (red1, blue1) comme clé dans le dictionnaire D. On ajoute 1 à la valeur associée à cette clé.
    # Si (red1, blue1) n'était pas encore présent dans D, il est créé automatiquement avec une valeur de 0 grâce à defaultdict.
    D[(red1, blue1)] += 1

# Deuxième boucle : cette fois, on itère à nouveau sur toutes les possibilités de combinaisons binaires sur N bits, mais en utilisant S2.
for i in range(2 ** N):  # Boucle de 0 à 2^N - 1 inclus.
    # Comme ci-dessus, prépare le bitstring correspondant (chaîne binaire de N caractères pour la combinaison courante).
    bit = bin(2 ** N + i)[3:]
    # On construit red2 en prenant les caractères de S2 pour lesquels le bit correspondant vaut '1'
    red2 = "".join([d for d, s in zip(S2, bit) if s == "1"])
    # blue2 prend les caractères de S2 pour lesquels le bit est '0'
    blue2 = "".join([d for d, s in zip(S2, bit) if s == "0"])
    # Pour chaque combinaison dans S2, on regarde si la paire (blue2, red2) existe dans le dictionnaire D et on additionne la valeur associée à ans.
    # Cela signifie qu'on recherche dans D le nombre d'occurrences où le red de la deuxième moitié correspond exactement au blue de la première, et inversement.
    ans += D[(blue2, red2)]

print(ans)  # Affiche (écrit sur la sortie standard) la valeur entière contenue dans ans, qui est la réponse finale calculée.
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007137189619243145
    2. '(
' → logprob: -5.632137298583984
    3. '\' → logprob: -7.132137298583984
    4. '\(' → logprob: -7.382137298583984
    5. '```' → logprob: -7.882137298583984
    6. 'newline' → logprob: -8.007137298583984
    7. '\n' → logprob: -8.382137298583984
    8. '[' → logprob: -8.507137298583984
    9. '
' → logprob: -9.132137298583984
    10. 'def' → logprob: -9.257137298583984

Token 5: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007363698096014559
    2. '(
' → logprob: -7.375736236572266
    3. '\' → logprob: -10.875736236572266
    4. '\(' → logprob: -11.000736236572266
    5. ' (' → logprob: -11.625736236572266
    6. 'd' → logprob: -12.000736236572266
    7. '()' → logprob: -12.000736236572266
    8. '\n' → logprob: -12.125736236572266
    9. '(

' → logprob: -12.125736236572266
    10. ',' → logprob: -12.250736236572266

Token 6: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.054105501621961594
    2. '_' → logprob: -4.054105281829834
    3. ' defaultdict' → logprob: -4.429105281829834
    4. '<|end|>' → logprob: -4.804105281829834
    5. 'a' → logprob: -5.804105281829834
    6. 'import' → logprob: -6.304105281829834
    7. '[' → logprob: -6.804105281829834
    8. 'd' → logprob: -6.929105281829834
    9. ' a' → logprob: -6.929105281829834
    10. 'collections' → logprob: -7.054105281829834

Token 7: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.0015283133834600449
    2. 'p' → logprob: -6.876528263092041
    3. 'ported' → logprob: -8.2515287399292
    4. 'import' → logprob: -9.2515287399292
    5. ' ' → logprob: -10.1265287399292
    6. 'po' → logprob: -10.5015287399292
    7. 'por' → logprob: -11.1265287399292
    8. '```' → logprob: -11.3765287399292
    9. 'porter' → logprob: -11.7515287399292
    10. '   ' → logprob: -11.8765287399292

Token 8: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020979750901460648
    2. 'r' → logprob: -4.520979881286621
    3. ' d' → logprob: -5.520979881286621
    4. 'd' → logprob: -5.645979881286621
    5. '  ' → logprob: -7.270979881286621
    6. 's' → logprob: -8.770979881286621
    7. '   ' → logprob: -8.895979881286621
    8. '    ' → logprob: -8.895979881286621
    9. 'space' → logprob: -9.020979881286621
    10. '  

' → logprob: -9.020979881286621

Token 9: ' classe' (ID: 29329)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004941869992762804
    2. 's' → logprob: -5.754941940307617
    3. ' collections' → logprob: -8.379941940307617
    4. ' s' → logprob: -8.504941940307617
    5. ' space' → logprob: -8.629941940307617
    6. '  ' → logprob: -8.629941940307617
    7. ' colección' → logprob: -8.879941940307617
    8. ' collection' → logprob: -9.504941940307617
    9. ' m' → logprob: -9.629941940307617
    10. 'm' → logprob: -9.817441940307617

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6690720915794373
    2. ' de' → logprob: -2.044072151184082
    3. 'dict' → logprob: -2.294072151184082
    4. ' defaultdict' → logprob: -2.419072151184082
    5. '(' → logprob: -3.169072151184082
    6. 'default' → logprob: -3.294072151184082
    7. ' (' → logprob: -4.044072151184082
    8. 'd' → logprob: -4.419072151184082
    9. '  ' → logprob: -5.169072151184082
    10. '(dict' → logprob: -5.294072151184082

Token 11: ' du' (ID: 1462)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9468317627906799
    2. '(' → logprob: -1.6968317031860352
    3. '.' → logprob: -2.071831703186035
    4. ' ' → logprob: -2.196831703186035
    5. '
' → logprob: -2.946831703186035
    6. ',' → logprob: -3.821831703186035
    7. '```' → logprob: -4.196831703186035
    8. '\n' → logprob: -4.321831703186035
    9. 'd' → logprob: -4.446831703186035
    10. '' → logprob: -4.571831703186035

Token 12: ' module' (ID: 8827)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.3126979470252991
    2. 'collections' → logprob: -1.8126978874206543
    3. ' ' → logprob: -3.0626978874206543
    4. ' module' → logprob: -3.8126978874206543
    5. ' collection' → logprob: -4.312697887420654
    6. 'module' → logprob: -4.812697887420654
    7. ' ' → logprob: -4.937697887420654
    8. 'collection' → logprob: -6.312697887420654
    9. '```' → logprob: -6.937697887420654
    10. ' ```' → logprob: -7.312697887420654

Token 13: ' collections' (ID: 22690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1929877996444702
    2. '.' → logprob: -1.8179877996444702
    3. 'collections' → logprob: -2.0679879188537598
    4. ' de' → logprob: -2.1929879188537598
    5. 'import' → logprob: -2.8179879188537598
    6. '```' → logprob: -3.0679879188537598
    7. ' import' → logprob: -3.1929879188537598
    8. ' .' → logprob: -3.3179879188537598
    9. ' collections' → logprob: -3.4429879188537598
    10. '`' → logprob: -3.8179879188537598

Token 14: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0981016159057617
    2. '\n' → logprob: -1.4731016159057617
    3. ' ' → logprob: -1.7231016159057617
    4. '\' → logprob: -2.7231016159057617
    5. ' 

' → logprob: -2.8481016159057617
    6. '

' → logprob: -2.9731016159057617
    7. '' → logprob: -4.348101615905762
    8. '.' → logprob: -4.723101615905762
    9. '<|end|>' → logprob: -4.723101615905762
    10. ',' → logprob: -4.973101615905762

Token 15: ' defaultdict' (ID: 107098)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.63138347864151
    2. '

' → logprob: -0.88138347864151
    3. '' → logprob: -3.8813834190368652
    4. '\n' → logprob: -4.006383419036865
    5. ' 

' → logprob: -6.256383419036865
    6. ' ' → logprob: -6.256383419036865
    7. '\' → logprob: -6.506383419036865
    8. ',' → logprob: -6.631383419036865
    9. '
' → logprob: -6.756383419036865
    10. 'd' → logprob: -7.131383419036865

Token 16: ' fonctionne' (ID: 79086)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043686782009899616
    2. '('' → logprob: -8.125436782836914
    3. '(
' → logprob: -10.125436782836914
    4. ' (' → logprob: -10.625436782836914
    5. '.' → logprob: -11.125436782836914
    6. ''' → logprob: -11.375436782836914
    7. '(

' → logprob: -11.500436782836914
    8. '()' → logprob: -12.000436782836914
    9. '("("' → logprob: -12.000436782836914
    10. '(lambda' → logprob: -12.500436782836914

Token 17: ' comme' (ID: 7971)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01923981122672558
    2. 's' → logprob: -4.519239902496338
    3. ' ' → logprob: -5.769239902496338
    4. ' (' → logprob: -6.144239902496338
    5. ',' → logprob: -6.769239902496338
    6. '(lambda' → logprob: -8.26923942565918
    7. '  ' → logprob: -8.76923942565918
    8. '```' → logprob: -9.14423942565918
    9. '.' → logprob: -9.26923942565918
    10. '(
' → logprob: -9.64423942565918

Token 18: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.09883041679859161
    2. 'un' → logprob: -2.473830461502075
    3. ' dict' → logprob: -5.348830223083496
    4. 'dict' → logprob: -5.723830223083496
    5. ' une' → logprob: -7.598830223083496
    6. ' ' → logprob: -7.973830223083496
    7. 'd' → logprob: -8.098830223083496
    8. ' le' → logprob: -9.098830223083496
    9. 'une' → logprob: -9.098830223083496
    10. 'le' → logprob: -9.348830223083496

Token 19: ' diction' (ID: 155259)
  Prédit: ' diction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diction' → logprob: -0.5586082935333252
    2. 'd' → logprob: -1.0586082935333252
    3. 'dict' → logprob: -2.683608293533325
    4. ' dict' → logprob: -4.683608055114746
    5. 'dic' → logprob: -7.183608055114746
    6. ' dictionary' → logprob: -7.308608055114746
    7. ' d' → logprob: -7.433608055114746
    8. 'dictionary' → logprob: -7.558608055114746
    9. 's' → logprob: -8.183608055114746
    10. 'type' → logprob: -8.308608055114746

Token 20: 'naire' (ID: 30464)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.025668766349554062
    2. 'ary' → logprob: -3.7756688594818115
    3. 'ar' → logprob: -6.775668621063232
    4. ' a' → logprob: -7.275668621063232
    5. 'naire' → logprob: -7.775668621063232
    6. 'n' → logprob: -9.02566909790039
    7. 'aire' → logprob: -11.15066909790039
    8. '   ' → logprob: -11.52566909790039
    9. '           ' → logprob: -13.15066909790039
    10. '{' → logprob: -13.15066909790039

Token 21: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1956060379743576
    2. '[' → logprob: -1.945605993270874
    3. 's' → logprob: -4.820606231689453
    4. ',' → logprob: -4.820606231689453
    5. ' ' → logprob: -5.570606231689453
    6. ' (' → logprob: -5.695606231689453
    7. '.' → logprob: -5.820606231689453
    8. ')' → logprob: -6.695606231689453
    9. '<|end|>' → logprob: -6.695606231689453
    10. '(
' → logprob: -6.820606231689453

Token 22: ' mais' (ID: 2899)
  Prédit: ' mais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.178511843085289
    2. ' but' → logprob: -2.17851185798645
    3. ' ' → logprob: -3.80351185798645
    4. '   ' → logprob: -4.803511619567871
    5. 'but' → logprob: -5.303511619567871
    6. ' sauf' → logprob: -5.678511619567871
    7. 'mais' → logprob: -5.928511619567871
    8. 's' → logprob: -6.428511619567871
    9. '(' → logprob: -6.678511619567871
    10. ',' → logprob: -6.928511619567871

Token 23: ' fournit' (ID: 123615)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.8129447102546692
    2. ' permet' → logprob: -2.0629446506500244
    3. ' avec' → logprob: -2.4379446506500244
    4. 'il' → logprob: -2.5629446506500244
    5. ' fournit' → logprob: -2.6879446506500244
    6. ' offre' → logprob: -3.5629446506500244
    7. ' crée' → logprob: -3.5629446506500244
    8. ' ' → logprob: -3.8129446506500244
    9. 'qui' → logprob: -3.8129446506500244
    10. ' qui' → logprob: -3.9379446506500244

Token 24: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6314868927001953
    2. ' un' → logprob: -0.8814868927001953
    3. 's' → logprob: -4.256486892700195
    4. ' automatiquement' → logprob: -4.881486892700195
    5. ' des' → logprob: -5.006486892700195
    6. '(' → logprob: -5.131486892700195
    7. '()' → logprob: -5.381486892700195
    8. 'un' → logprob: -5.381486892700195
    9. 'une' → logprob: -5.506486892700195
    10. ' ' → logprob: -6.131486892700195

Token 25: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.18928958475589752
    2. ' valeur' → logprob: -1.9392895698547363
    3. 'default' → logprob: -4.814289569854736
    4. 'fonction' → logprob: -5.189289569854736
    5. ' val' → logprob: -5.814289569854736
    6. 'dé' → logprob: -6.189289569854736
    7. ' factory' → logprob: -6.314289569854736
    8. 'factory' → logprob: -6.814289569854736
    9. ' default' → logprob: -6.814289569854736
    10. 'def' → logprob: -7.314289569854736

Token 26: ' par' (ID: 686)
  Prédit: '_par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.6202670931816101
    2. '_' → logprob: -1.4952671527862549
    3. ' par' → logprob: -2.495267152786255
    4. '<|end|>' → logprob: -2.745267152786255
    5. 'par' → logprob: -4.120266914367676
    6. 's' → logprob: -4.245266914367676
    7. ' ' → logprob: -4.245266914367676
    8. '_initial' → logprob: -4.495266914367676
    9. ' d' → logprob: -4.870266914367676
    10. ' de' → logprob: -4.870266914367676

Token 27: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.010033832862973213
    2. ' défaut' → logprob: -4.63503360748291
    3. 'def' → logprob: -9.26003360748291
    4. 'd' → logprob: -9.51003360748291
    5. '	d' → logprob: -9.76003360748291
    6. ' déf' → logprob: -10.88503360748291
    7. '```' → logprob: -12.38503360748291
    8. ' ' → logprob: -12.38503360748291
    9. 'default' → logprob: -12.51003360748291
    10. '_d' → logprob: -12.51003360748291

Token 28: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5784673094749451
    2. '(' → logprob: -1.3284673690795898
    3. ' pour' → logprob: -2.82846736907959
    4. ' (' → logprob: -3.70346736907959
    5. ')' → logprob: -4.32846736907959
    6. 'au' → logprob: -4.70346736907959
    7. ' lors' → logprob: -4.82846736907959
    8. ' lorsqu' → logprob: -5.07846736907959
    9. 's' → logprob: -5.20346736907959
    10. '```' → logprob: -5.20346736907959

Token 29: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7134711742401123
    2. ' les' → logprob: -0.7134711742401123
    3. '<|end|>' → logprob: -4.338471412658691
    4. ' chaque' → logprob: -6.463471412658691
    5. ' la' → logprob: -7.213471412658691
    6. 'l' → logprob: -7.213471412658691
    7. 'la' → logprob: -7.463471412658691
    8. 's' → logprob: -7.463471412658691
    9. ' l' → logprob: -7.713471412658691
    10. ' ' → logprob: -7.838471412658691

Token 30: ' clés' (ID: 96616)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.7673249244689941
    2. ' clés' → logprob: -0.8923249244689941
    3. 'clé' → logprob: -2.642324924468994
    4. 'cles' → logprob: -3.517324924468994
    5. ' cl' → logprob: -4.392324924468994
    6. '```' → logprob: -5.767324924468994
    7. 'cle' → logprob: -6.017324924468994
    8. ' ' → logprob: -6.142324924468994
    9. 'c' → logprob: -7.267324924468994
    10. '	' → logprob: -7.642324924468994

Token 31: ' inexist' (ID: 170075)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1789829730987549
    2. '[' → logprob: -1.8039829730987549
    3. ',' → logprob: -1.9289829730987549
    4. '.' → logprob: -2.553982973098755
    5. '[]' → logprob: -2.678982973098755
    6. ':' → logprob: -3.553982973098755
    7. '=' → logprob: -3.678982973098755
    8. '```' → logprob: -3.803982973098755
    9. '_' → logprob: -4.178982734680176
    10. ')' → logprob: -4.553982734680176

Token 32: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.0015888927737250924
    2. 'ante' → logprob: -6.501588821411133
    3. 'entes' → logprob: -10.626588821411133
    4. 'ant' → logprob: -12.001588821411133
    5. 'u' → logprob: -12.126588821411133
    6. '#' → logprob: -12.251588821411133
    7. ']' → logprob: -12.376588821411133
    8. '{' → logprob: -12.501588821411133
    9. '```' → logprob: -12.501588821411133
    10. 'es' → logprob: -12.751588821411133

Token 33: '.

' (ID: 364)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.138830542564392
    2. '.' → logprob: -1.388830542564392
    3. '
' → logprob: -1.638830542564392
    4. '\' → logprob: -2.8888306617736816
    5. ',' → logprob: -3.7638306617736816
    6. 'default' → logprob: -3.7638306617736816
    7. 'def' → logprob: -3.7638306617736816
    8. '' → logprob: -4.013830661773682
    9. 'a' → logprob: -4.263830661773682
    10. ' ' → logprob: -4.388830661773682

Token 34: 'N' (ID: 45)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06938382983207703
    2. '
' → logprob: -3.6943838596343994
    3. 'a' → logprob: -4.06938362121582
    4. 'n' → logprob: -5.81938362121582
    5. 'default' → logprob: -5.81938362121582
    6. '.' → logprob: -6.06938362121582
    7. '\' → logprob: -6.19438362121582
    8. '' → logprob: -6.31938362121582
    9. ',' → logprob: -6.31938362121582
    10. '#' → logprob: -6.81938362121582

Token 35: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.48487621545791626
    2. 'o' → logprob: -1.1098761558532715
    3. 'd' → logprob: -3.6098761558532715
    4. 'a' → logprob: -4.4848761558532715
    5. '=' → logprob: -5.1098761558532715
    6. 'u' → logprob: -6.2348761558532715
    7. 'def' → logprob: -6.3598761558532715
    8. 'ew' → logprob: -6.8598761558532715
    9. '```' → logprob: -6.9848761558532715
    10. 'N' → logprob: -7.4848761558532715

Token 36: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004317841492593288
    2. '10' → logprob: -5.754317760467529
    3. '5' → logprob: -7.629317760467529
    4. ' defaultdict' → logprob: -7.754317760467529
    5. 'int' → logprob: -9.254318237304688
    6. '3' → logprob: -10.129318237304688
    7. ' int' → logprob: -11.004318237304688
    8. '0' → logprob: -11.254318237304688
    9. '100' → logprob: -11.379318237304688
    10. '1' → logprob: -11.629318237304688

Token 37: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00046320082037709653
    2. '('' → logprob: -7.875463008880615
    3. ' (' → logprob: -9.875463485717773
    4. '()' → logprob: -11.750463485717773
    5. '(N' → logprob: -12.250463485717773
    6. ' ' → logprob: -12.750463485717773
    7. '(input' → logprob: -13.000463485717773
    8. '("' → logprob: -13.250463485717773
    9. ''' → logprob: -13.375463485717773
    10. '(
' → logprob: -13.500463485717773

Token 38: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2297631800174713
    2. '(' → logprob: -1.604763150215149
    3. '())' → logprob: -5.729763031005859
    4. '('' → logprob: -7.479763031005859
    5. '(()' → logprob: -8.97976303100586
    6. '("("' → logprob: -8.97976303100586
    7. ')' → logprob: -9.22976303100586
    8. '(
' → logprob: -9.72976303100586
    9. '("")' → logprob: -10.47976303100586
    10. '("' → logprob: -10.72976303100586

Token 39: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03872155770659447
    2. ' 
' → logprob: -4.038721561431885
    3. '
' → logprob: -4.788721561431885
    4. '  
' → logprob: -5.663721561431885
    5. ' ' → logprob: -5.788721561431885
    6. '<|end|>' → logprob: -6.538721561431885
    7. ')' → logprob: -6.913721561431885
    8. '' → logprob: -7.163721561431885
    9. '

' → logprob: -7.663721561431885
    10. '\n' → logprob: -8.163721084594727

Token 40: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11266766488552094
    2. 'data' → logprob: -3.2376675605773926
    3. '
' → logprob: -3.9876675605773926
    4. 'd' → logprob: -4.362667560577393
    5. 's' → logprob: -4.987667560577393
    6. ')' → logprob: -5.612667560577393
    7. '' → logprob: -5.612667560577393
    8. ' 
' → logprob: -5.737667560577393
    9. 'dict' → logprob: -5.862667560577393
    10. 'counts' → logprob: -6.362667560577393

Token 41: ' Lit' (ID: 45595)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2820594906806946
    2. ' for' → logprob: -2.28205943107605
    3. 'input' → logprob: -3.90705943107605
    4. 'count' → logprob: -4.282059669494629
    5. 'data' → logprob: -4.657059669494629
    6. 'from' → logprob: -4.782059669494629
    7. 'counts' → logprob: -4.907059669494629
    8. ' ' → logprob: -5.407059669494629
    9. 's' → logprob: -5.657059669494629
    10. '"' → logprob: -5.782059669494629

Token 42: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05653396248817444
    2. '(' → logprob: -3.3065340518951416
    3. ' ' → logprob: -4.4315338134765625
    4. ' un' → logprob: -6.4315338134765625
    5. ' ()' → logprob: -6.5565338134765625
    6. ')' → logprob: -7.3065338134765625
    7. ' (' → logprob: -7.4315338134765625
    8. '("' → logprob: -8.056533813476562
    9. ' la' → logprob: -8.431533813476562
    10. ' )' → logprob: -8.431533813476562

Token 43: ' ligne' (ID: 19583)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.4969880282878876
    2. ' chaîne' → logprob: -1.87198805809021
    3. ' ligne' → logprob: -3.12198805809021
    4. ' valeur' → logprob: -3.24698805809021
    5. ' ' → logprob: -3.37198805809021
    6. 'nombre' → logprob: -3.62198805809021
    7. ' entrée' → logprob: -3.87198805809021
    8. 'n' → logprob: -3.99698805809021
    9. 'ligne' → logprob: -4.621987819671631
    10. 'chaine' → logprob: -4.996987819671631

Token 44: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.10952889919281
    2. '<|end|>' → logprob: -1.98452889919281
    3. ')' → logprob: -2.2345290184020996
    4. '()' → logprob: -2.3595290184020996
    5. ' ' → logprob: -2.7345290184020996
    6. ' )' → logprob: -2.8595290184020996
    7. ' de' → logprob: -3.3595290184020996
    8. '\n' → logprob: -3.6095290184020996
    9. ' 
' → logprob: -4.1095290184021
    10. '```' → logprob: -4.1095290184021

Token 45: ' l' (ID: 305)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.5278071761131287
    2. ' code' → logprob: -1.4028072357177734
    3. 'code' → logprob: -2.5278072357177734
    4. ' input' → logprob: -2.9028072357177734
    5. 'input' → logprob: -4.277807235717773
    6. ' entrée' → logprob: -5.902807235717773
    7. ''entrée' → logprob: -6.027807235717773
    8. '<|end|>' → logprob: -6.027807235717773
    9. ' ' → logprob: -6.277807235717773
    10. 'texte' → logprob: -6.527807235717773

Token 46: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.2686472535133362
    2. 'entrée' → logprob: -1.5186471939086914
    3. 'input' → logprob: -4.393647193908691
    4. ''' → logprob: -7.018647193908691
    5. ''utilisateur' → logprob: -7.143647193908691
    6. 'a' → logprob: -7.393647193908691
    7. ''ent' → logprob: -7.643647193908691
    8. '’entrée' → logprob: -8.768647193908691
    9. 'stdin' → logprob: -8.768647193908691
    10. 'ent' → logprob: -8.768647193908691

Token 47: ' standard' (ID: 7024)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46295255422592163
    2. '.' → logprob: -1.9629526138305664
    3. ' ' → logprob: -3.0879526138305664
    4. ' )' → logprob: -3.4629526138305664
    5. '()' → logprob: -3.7129526138305664
    6. ' =' → logprob: -3.8379526138305664
    7. '
' → logprob: -3.8379526138305664
    8. 's' → logprob: -4.837952613830566
    9. ',' → logprob: -4.962952613830566
    10. '\n' → logprob: -4.962952613830566

Token 48: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24126271903514862
    2. ' ' → logprob: -2.366262674331665
    3. ')' → logprob: -2.741262674331665
    4. '<|end|>' → logprob: -4.366262912750244
    5. ' 
' → logprob: -4.741262912750244
    6. 'data' → logprob: -5.366262912750244
    7. 's' → logprob: -5.741262912750244
    8. 'for' → logprob: -5.741262912750244
    9. ' )' → logprob: -5.991262912750244
    10. 'n' → logprob: -5.991262912750244

Token 49: 'util' (ID: 2056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03452444076538086
    2. ' )' → logprob: -3.534524440765381
    3. '")' → logprob: -6.284524440765381
    4. '"' → logprob: -7.409524440765381
    5. '),' → logprob: -7.659524440765381
    6. 'input' → logprob: -7.784524440765381
    7. '()' → logprob: -8.034524917602539
    8. ' ' → logprob: -8.534524917602539
    9. ' "' → logprob: -8.659524917602539
    10. ' input' → logprob: -9.034524917602539

Token 50: 'isateur' (ID: 50127)
  Prédit: 'isateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isateur' → logprob: -0.014172090217471123
    2. 'is' → logprob: -4.764172077178955
    3. 'isant' → logprob: -6.264172077178955
    4. 'isateurs' → logprob: -6.764172077178955
    5. 'isat' → logprob: -7.014172077178955
    6. 's' → logprob: -7.889172077178955
    7. 'isation' → logprob: -8.014172554016113
    8. '```' → logprob: -8.764172554016113
    9. 'ateur' → logprob: -9.014172554016113
    10. 'isé' → logprob: -9.014172554016113

Token 51: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11947993189096451
    2. '()' → logprob: -2.6194798946380615
    3. '())' → logprob: -3.2444798946380615
    4. ' )' → logprob: -7.494480133056641
    5. '`)' → logprob: -9.86948013305664
    6. '")' → logprob: -9.99448013305664
    7. '()
' → logprob: -11.11948013305664
    8. '),' → logprob: -11.11948013305664
    9. '(' → logprob: -11.24448013305664
    10. ' ' → logprob: -11.36948013305664

Token 52: ' convert' (ID: 8452)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22142617404460907
    2. ')' → logprob: -1.9714261293411255
    3. ' )' → logprob: -2.971426248550415
    4. '<|end|>' → logprob: -6.221426010131836
    5. ' defaultdict' → logprob: -6.846426010131836
    6. ' 
' → logprob: -7.721426010131836
    7. 's' → logprob: -7.846426010131836
    8. 'dict' → logprob: -7.846426010131836
    9. '```' → logprob: -8.096426010131836
    10. '  ' → logprob: -8.221426010131836

Token 53: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.008648726157844067
    2. 'ie' → logprob: -5.133648872375488
    3. 'e' → logprob: -7.508648872375488
    4. 't' → logprob: -7.758648872375488
    5. 'et' → logprob: -8.008648872375488
    6. 'i' → logprob: -8.383648872375488
    7. 'issant' → logprob: -8.383648872375488
    8. ' it' → logprob: -8.633648872375488
    9. 'ent' → logprob: -8.883648872375488
    10. 'er' → logprob: -9.258648872375488

Token 54: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08860066533088684
    2. '()' → logprob: -2.7136006355285645
    3. ' ' → logprob: -4.3386006355285645
    4. ')' → logprob: -5.9636006355285645
    5. '```' → logprob: -6.4636006355285645
    6. '('' → logprob: -8.463601112365723
    7. '<|end|>' → logprob: -8.838601112365723
    8. '(
' → logprob: -8.963601112365723
    9. '  ' → logprob: -9.213601112365723
    10. '   ' → logprob: -9.588601112365723

Token 55: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7296392917633057
    2. 'entrée' → logprob: -1.4796392917633057
    3. ' input' → logprob: -1.8546392917633057
    4. ' chaîne' → logprob: -3.1046392917633057
    5. ' string' → logprob: -3.8546392917633057
    6. 'chaine' → logprob: -3.9796392917633057
    7. 'input' → logprob: -4.104639053344727
    8. '```' → logprob: -5.479639053344727
    9. ' )' → logprob: -5.604639053344727
    10. ')' → logprob: -5.604639053344727

Token 56: ' sais' (ID: 30010)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.5087758302688599
    2. ' en' → logprob: -1.0087758302688599
    3. ' ' → logprob: -4.13377571105957
    4. '_en' → logprob: -5.00877571105957
    5. '(' → logprob: -5.50877571105957
    6. '(en' → logprob: -6.50877571105957
    7. ')' → logprob: -6.75877571105957
    8. '```' → logprob: -6.88377571105957
    9. '  ' → logprob: -7.50877571105957
    10. '()' → logprob: -8.00877571105957

Token 57: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.008436090312898159
    2. 'e' → logprob: -5.38343620300293
    3. 'i' → logprob: -5.75843620300293
    4. 'isie' → logprob: -8.75843620300293
    5. 'is' → logprob: -8.88343620300293
    6. 'sie' → logprob: -9.63343620300293
    7. 'rie' → logprob: -10.25843620300293
    8. 'nie' → logprob: -10.63343620300293
    9. 'ue' → logprob: -10.88343620300293
    10. '```' → logprob: -10.88343620300293

Token 58: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.05706431716680527
    2. 'en' → logprob: -3.3070642948150635
    3. ' ' → logprob: -4.057064533233643
    4. ')' → logprob: -7.432064533233643
    5. '  ' → logprob: -8.057064056396484
    6. ' )' → logprob: -8.932064056396484
    7. '```' → logprob: -8.932064056396484
    8. '_en' → logprob: -9.057064056396484
    9. ''en' → logprob: -9.932064056396484
    10. ' in' → logprob: -10.182064056396484

Token 59: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1990973800420761
    2. 'int' → logprob: -2.4490973949432373
    3. ' un' → logprob: -2.4490973949432373
    4. ' ' → logprob: -5.699097156524658
    5. ' entier' → logprob: -5.949097156524658
    6. ' integer' → logprob: -7.324097156524658
    7. ' an' → logprob: -8.074097633361816
    8. 'ent' → logprob: -8.324097633361816
    9. 'un' → logprob: -8.574097633361816
    10. ' ent' → logprob: -8.949097633361816

Token 60: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2916766405105591
    2. ')' → logprob: -2.1666765213012695
    3. ' ' → logprob: -2.7916765213012695
    4. 's' → logprob: -4.1666765213012695
    5. '

' → logprob: -4.1666765213012695
    6. ',' → logprob: -4.2916765213012695
    7. ' 
' → logprob: -5.1666765213012695
    8. '
' → logprob: -5.2916765213012695
    9. ' )' → logprob: -5.9166765213012695
    10. 'default' → logprob: -6.0416765213012695

Token 61: ' puis' (ID: 18766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5923683643341064
    2. ')' → logprob: -1.7173683643341064
    3. ' defaultdict' → logprob: -1.9673683643341064
    4. ' )' → logprob: -3.2173683643341064
    5. 'default' → logprob: -3.4673683643341064
    6. ' d' → logprob: -5.092368125915527
    7. 's' → logprob: -5.217368125915527
    8. ' default' → logprob: -5.717368125915527
    9. 'data' → logprob: -5.842368125915527
    10. ' and' → logprob: -5.842368125915527

Token 62: ' attrib' (ID: 72186)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8600645661354065
    2. ' crée' → logprob: -0.9850645661354065
    3. ' continue' → logprob: -3.3600645065307617
    4. 'contin' → logprob: -4.235064506530762
    5. ' créer' → logprob: -4.360064506530762
    6. 'initialize' → logprob: -4.485064506530762
    7. 's' → logprob: -4.735064506530762
    8. ')' → logprob: -4.735064506530762
    9. ' create' → logprob: -4.735064506530762
    10. ' initialize' → logprob: -4.735064506530762

Token 63: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0016398312291130424
    2. 'u' → logprob: -6.8766398429870605
    3. 'ué' → logprob: -8.251639366149902
    4. 'uée' → logprob: -8.751639366149902
    5. 'e' → logprob: -9.126639366149902
    6. 'uer' → logprob: -10.001639366149902
    7. 'úe' → logprob: -11.251639366149902
    8. ' ue' → logprob: -11.876639366149902
    9. 'uez' → logprob: -12.126639366149902
    10. 'uera' → logprob: -13.001639366149902

Token 64: ' ce' (ID: 2357)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2545120418071747
    2. ')' → logprob: -2.254512071609497
    3. ' ' → logprob: -2.879512071609497
    4. '(N' → logprob: -4.004511833190918
    5. '()' → logprob: -4.379511833190918
    6. '(
' → logprob: -4.504511833190918
    7. ' (' → logprob: -4.629511833190918
    8. '(n' → logprob: -6.004511833190918
    9. ' )' → logprob: -6.379511833190918
    10. 's' → logprob: -6.879511833190918

Token 65: ' nombre' (ID: 9733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35714617371559143
    2. 'val' → logprob: -2.8571462631225586
    3. 'ent' → logprob: -3.3571462631225586
    4. ' N' → logprob: -3.7321462631225586
    5. ' nombre' → logprob: -3.8571462631225586
    6. ' à' → logprob: -3.9821462631225586
    7. 's' → logprob: -4.107146263122559
    8. 'N' → logprob: -4.107146263122559
    9. 'n' → logprob: -4.857146263122559
    10. '_val' → logprob: -4.857146263122559

Token 66: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04288065806031227
    2. ')' → logprob: -3.6678807735443115
    3. ' )' → logprob: -5.167880535125732
    4. 's' → logprob: -6.167880535125732
    5. '<|end|>' → logprob: -6.167880535125732
    6. '_' → logprob: -6.292880535125732
    7. '  ' → logprob: -6.917880535125732
    8. ' =' → logprob: -7.167880535125732
    9. ' a' → logprob: -7.167880535125732
    10. ' to' → logprob: -7.917880535125732

Token 67: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05435663089156151
    2. ' N' → logprob: -3.804356575012207
    3. ' ' → logprob: -4.554356575012207
    4. '`' → logprob: -6.179356575012207
    5. ' la' → logprob: -6.179356575012207
    6. ')' → logprob: -6.179356575012207
    7. ''' → logprob: -6.179356575012207
    8. '_' → logprob: -6.304356575012207
    9. ' defaultdict' → logprob: -6.304356575012207
    10. ' l' → logprob: -6.679356575012207

Token 68: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.04497407749295235
    2. 'variable' → logprob: -3.1699740886688232
    3. ' ' → logprob: -7.044973850250244
    4. ' N' → logprob: -8.794974327087402
    5. ')' → logprob: -9.294974327087402
    6. 'n' → logprob: -9.294974327087402
    7. ' following' → logprob: -9.419974327087402
    8. 's' → logprob: -9.669974327087402
    9. 'default' → logprob: -9.669974327087402
    10. ' nombre' → logprob: -9.919974327087402

Token 69: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.160588338971138
    2. 'N' → logprob: -2.535588264465332
    3. ' `' → logprob: -3.285588264465332
    4. '`' → logprob: -4.035588264465332
    5. ' ' → logprob: -4.535588264465332
    6. ' '' → logprob: -7.035588264465332
    7. 'n' → logprob: -7.660588264465332
    8. ' ' → logprob: -7.910588264465332
    9. '(' → logprob: -8.035588264465332
    10. '```' → logprob: -8.410588264465332

Token 70: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0860639438033104
    2. '\n' → logprob: -3.211063861846924
    3. 's' → logprob: -3.961063861846924
    4. '\' → logprob: -4.961063861846924
    5. '
' → logprob: -5.836063861846924
    6. 'n' → logprob: -5.836063861846924
    7. '```' → logprob: -5.961063861846924
    8. 'd' → logprob: -6.086063861846924
    9. 'newline' → logprob: -6.461063861846924
    10. '

' → logprob: -7.086063861846924

Token 71: ' N' (ID: 478)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005967899691313505
    2. 's' → logprob: -5.75596809387207
    3. '
' → logprob: -6.75596809387207
    4. 'd' → logprob: -8.00596809387207
    5. ' 
' → logprob: -8.38096809387207
    6. 'data' → logprob: -8.50596809387207
    7. '```' → logprob: -8.75596809387207
    8. '\n' → logprob: -8.88096809387207
    9. 'n' → logprob: -9.13096809387207
    10. '' → logprob: -9.38096809387207

Token 72: ' représent' (ID: 42664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5847011208534241
    2. '=' → logprob: -0.9597011208534241
    3. ')' → logprob: -3.5847010612487793
    4. 's' → logprob: -4.709701061248779
    5. '<|end|>' → logprob: -5.459701061248779
    6. ' ' → logprob: -5.834701061248779
    7. '>' → logprob: -5.834701061248779
    8. '.' → logprob: -5.834701061248779
    9. '+' → logprob: -5.959701061248779
    10. '%' → logprob: -7.084701061248779

Token 73: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -2.935296834039036e-06
    2. 'ent' → logprob: -13.75000286102295
    3. 'é' → logprob: -15.00000286102295
    4. ' e' → logprob: -15.12500286102295
    5. 'er' → logprob: -15.12500286102295
    6. 'a' → logprob: -15.25000286102295
    7. '```' → logprob: -15.37500286102295
    8. 'ant' → logprob: -16.125003814697266
    9. 'е' → logprob: -16.250003814697266
    10. '	e' → logprob: -16.375003814697266

Token 74: ' très' (ID: 9412)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3523876667022705
    2. ' la' → logprob: -1.8523876667022705
    3. ' ' → logprob: -3.1023876667022705
    4. 'le' → logprob: -3.2273876667022705
    5. '<|end|>' → logprob: -3.9773876667022705
    6. 'the' → logprob: -4.477387428283691
    7. 'la' → logprob: -4.977387428283691
    8. ' the' → logprob: -5.227387428283691
    9. '  ' → logprob: -5.602387428283691
    10. 's' → logprob: -5.977387428283691

Token 75: ' souvent' (ID: 28137)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2501378357410431
    2. ' la' → logprob: -2.5001378059387207
    3. ' souvent' → logprob: -3.1251378059387207
    4. 's' → logprob: -3.7501378059387207
    5. 'le' → logprob: -4.375137805938721
    6. ' un' → logprob: -4.625137805938721
    7. ' probablement' → logprob: -4.625137805938721
    8. '_' → logprob: -5.000137805938721
    9. '_le' → logprob: -5.375137805938721
    10. ' l' → logprob: -5.625137805938721

Token 76: ' une' (ID: 2463)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.007460738532245159
    2. 'le' → logprob: -5.507460594177246
    3. ' ' → logprob: -7.132460594177246
    4. ' la' → logprob: -7.382460594177246
    5. '<|end|>' → logprob: -7.382460594177246
    6. ' the' → logprob: -7.882460594177246
    7. ' nombre' → logprob: -8.132460594177246
    8. 'l' → logprob: -8.882460594177246
    9. 'nombre' → logprob: -8.882460594177246
    10. ' l' → logprob: -9.132460594177246

Token 77: ' taille' (ID: 41644)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3438369333744049
    2. 'nombre' → logprob: -2.218837022781372
    3. ' nombre' → logprob: -3.218837022781372
    4. 's' → logprob: -3.218837022781372
    5. ' quantité' → logprob: -3.218837022781372
    6. 'n' → logprob: -4.593836784362793
    7. 't' → logprob: -4.843836784362793
    8. 'élé' → logprob: -5.843836784362793
    9. ' "' → logprob: -5.968836784362793
    10. 'fois' → logprob: -6.156336784362793

Token 78: ' ou' (ID: 2031)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0035712074022740126
    2. ')' → logprob: -7.003571033477783
    3. '_' → logprob: -7.128571033477783
    4. ' )' → logprob: -7.628571033477783
    5. '<|end|>' → logprob: -8.128571510314941
    6. ',' → logprob: -8.253571510314941
    7. ' =' → logprob: -8.503571510314941
    8. '.' → logprob: -9.128571510314941
    9. '=' → logprob: -9.503571510314941
    10. 's' → logprob: -9.503571510314941

Token 79: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.17332006990909576
    2. ' ' → logprob: -3.2983200550079346
    3. ' une' → logprob: -3.2983200550079346
    4. ' la' → logprob: -3.2983200550079346
    5. ' le' → logprob: -3.9233200550079346
    6. ' l' → logprob: -4.048320293426514
    7. 'un' → logprob: -5.548320293426514
    8. 'le' → logprob: -6.298320293426514
    9. ' nombre' → logprob: -6.798320293426514
    10. 'l' → logprob: -6.923320293426514

Token 80: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1228562444448471
    2. ' nombre' → logprob: -2.3728561401367188
    3. 'nombre' → logprob: -4.622856140136719
    4. 'n' → logprob: -6.497856140136719
    5. ' espace' → logprob: -6.497856140136719
    6. '  ' → logprob: -6.622856140136719
    7. '_' → logprob: -6.747856140136719
    8. ' i' → logprob: -7.122856140136719
    9. 's' → logprob: -7.622856140136719
    10. ' quantité' → logprob: -7.747856140136719

Token 81: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019051166251301765
    2. '_' → logprob: -4.3940510749816895
    3. '=' → logprob: -6.0190510749816895
    4. ')' → logprob: -6.2690510749816895
    5. ',' → logprob: -8.019051551818848
    6. '[' → logprob: -8.144051551818848
    7. '<|end|>' → logprob: -8.269051551818848
    8. 's' → logprob: -8.519051551818848
    9. ' =' → logprob: -8.644051551818848
    10. ' )' → logprob: -8.894051551818848

Token 82: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029260331764817238
    2. '_' → logprob: -3.6542603969573975
    3. 'e' → logprob: -7.029260158538818
    4. '  ' → logprob: -7.404260158538818
    5. 'élé' → logprob: -8.029260635375977
    6. ')' → logprob: -9.029260635375977
    7. ' espaces' → logprob: -9.154260635375977
    8. 'es' → logprob: -9.154260635375977
    9. 's' → logprob: -9.404260635375977
    10. 'é' → logprob: -9.654260635375977

Token 83: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.06688327342271805
    2. ' ' → logprob: -3.1918833255767822
    3. 'l' → logprob: -5.066883087158203
    4. ' éléments' → logprob: -5.441883087158203
    5. 'é' → logprob: -5.566883087158203
    6. '_' → logprob: -6.566883087158203
    7. 'e' → logprob: -7.191883087158203
    8. ' él' → logprob: -7.191883087158203
    9. 'entrée' → logprob: -7.191883087158203
    10. 'él' → logprob: -7.441883087158203

Token 84: 'ments' (ID: 1626)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.055170103907585144
    2. 'ments' → logprob: -3.0551700592041016
    3. 'ment' → logprob: -5.555170059204102
    4. 'v' → logprob: -7.180170059204102
    5. 'é' → logprob: -7.430170059204102
    6. 'mé' → logprob: -7.805170059204102
    7. 'м' → logprob: -8.930170059204102
    8. 's' → logprob: -9.055170059204102
    9. 'men' → logprob: -9.055170059204102
    10. 'è' → logprob: -9.555170059204102

Token 85: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6216574907302856
    2. '\n' → logprob: -1.8716574907302856
    3. ' ' → logprob: -2.621657371520996
    4. ' 
' → logprob: -3.121657371520996
    5. 'd' → logprob: -3.371657371520996
    6. '\' → logprob: -3.496657371520996
    7. 'n' → logprob: -3.746657371520996
    8. '' → logprob: -3.871657371520996
    9. 's' → logprob: -4.371657371520996
    10. '#' → logprob: -4.621657371520996

Token 86: ' traiter' (ID: 105852)
  Prédit: ' traiter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traiter' → logprob: -0.2867256999015808
    2. ' ' → logprob: -2.1617257595062256
    3. 'l' → logprob: -3.1617257595062256
    4. 'r' → logprob: -3.7867257595062256
    5. ' lire' → logprob: -3.9117257595062256
    6. 'trait' → logprob: -4.1617255210876465
    7. 's' → logprob: -4.9117255210876465
    8. '_' → logprob: -5.4117255210876465
    9. ' saisir' → logprob: -5.4117255210876465
    10. ' trait' → logprob: -6.1617255210876465

Token 87: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02647469751536846
    2. 'n' → logprob: -5.276474475860596
    3. 's' → logprob: -5.401474475860596
    4. 'd' → logprob: -5.401474475860596
    5. ' 
' → logprob: -5.776474475860596
    6. ')' → logprob: -6.526474475860596
    7. '' → logprob: -6.651474475860596
    8. ' ' → logprob: -6.901474475860596
    9. '#' → logprob: -7.151474475860596
    10. 'a' → logprob: -7.526474475860596

Token 88: 'S' (ID: 50)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018196770921349525
    2. ' 
' → logprob: -5.0181965827941895
    3. 'd' → logprob: -5.3931965827941895
    4. '' → logprob: -6.2681965827941895
    5. 's' → logprob: -6.6431965827941895
    6. '
' → logprob: -6.7681965827941895
    7. ' ' → logprob: -7.2681965827941895
    8. 'n' → logprob: -7.8931965827941895
    9. 'a' → logprob: -8.393197059631348
    10. '

' → logprob: -8.518197059631348

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12249043583869934
    2. '=' → logprob: -2.372490406036377
    3. ' ' → logprob: -4.622490406036377
    4. '_' → logprob: -4.622490406036377
    5. 's' → logprob: -7.622490406036377
    6. 'e' → logprob: -7.747490406036377
    7. ':' → logprob: -8.497490882873535
    8. 'tring' → logprob: -8.497490882873535
    9. 'paces' → logprob: -8.622490882873535
    10. 't' → logprob: -8.747490882873535

Token 90: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5363996028900146
    2. 'input' → logprob: -1.9113996028900146
    3. ' []' → logprob: -2.2863996028900146
    4. ' defaultdict' → logprob: -2.2863996028900146
    5. 'default' → logprob: -3.4113996028900146
    6. ' ' → logprob: -4.411399841308594
    7. ' [' → logprob: -5.411399841308594
    8. 'list' → logprob: -5.786399841308594
    9. ' default' → logprob: -5.911399841308594
    10. ' list' → logprob: -6.036399841308594

Token 91: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0042228782549500465
    2. '(' → logprob: -5.504222869873047
    3. ' ()' → logprob: -9.129222869873047
    4. '().' → logprob: -11.004222869873047
    5. '("' → logprob: -12.254222869873047
    6. '('' → logprob: -12.379222869873047
    7. '("")' → logprob: -12.504222869873047
    8. ' (' → logprob: -14.004222869873047
    9. ')' → logprob: -14.254222869873047
    10. '()
' → logprob: -14.379222869873047

Token 92: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1255431175231934
    2. '[' → logprob: -1.7505431175231934
    3. '.' → logprob: -1.8755431175231934
    4. '
' → logprob: -2.0005431175231934
    5. ' 
' → logprob: -2.8755431175231934
    6. 's' → logprob: -3.5005431175231934
    7. '#' → logprob: -3.6255431175231934
    8. '  
' → logprob: -3.6255431175231934
    9. 'for' → logprob: -3.8755431175231934
    10. '<|end|>' → logprob: -3.8755431175231934

Token 93: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1376240253448486
    2. '[' → logprob: -1.3876240253448486
    3. ' ' → logprob: -1.7626240253448486
    4. '
' → logprob: -2.3876240253448486
    5. 'for' → logprob: -2.8876240253448486
    6. '#' → logprob: -3.3876240253448486
    7. '<|end|>' → logprob: -3.8876240253448486
    8. 's' → logprob: -4.0126237869262695
    9. ' 
' → logprob: -5.1376237869262695
    10. ':' → logprob: -5.2626237869262695

Token 94: ' Lit' (ID: 45595)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011359503492712975
    2. 's' → logprob: -5.136359691619873
    3. 'S' → logprob: -7.011359691619873
    4. ' S' → logprob: -7.136359691619873
    5. '#' → logprob: -7.636359691619873
    6. '  ' → logprob: -8.136359214782715
    7. '_' → logprob: -8.261359214782715
    8. 'strip' → logprob: -8.261359214782715
    9. ')' → logprob: -8.386359214782715
    10. 'r' → logprob: -8.386359214782715

Token 95: ' encore' (ID: 14043)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.061046257615089417
    2. ' ()' → logprob: -3.3110463619232178
    3. '(' → logprob: -4.186046123504639
    4. ' ' → logprob: -5.186046123504639
    5. ' un' → logprob: -7.561046123504639
    6. ' (' → logprob: -7.936046123504639
    7. 'a' → logprob: -8.686046600341797
    8. ')' → logprob: -8.686046600341797
    9. ' une' → logprob: -9.061046600341797
    10. '("")' → logprob: -9.061046600341797

Token 96: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007784181274473667
    2. ' ()' → logprob: -5.757784366607666
    3. '(' → logprob: -6.132784366607666
    4. 'a' → logprob: -7.257784366607666
    5. ' une' → logprob: -7.382784366607666
    6. ' un' → logprob: -7.757784366607666
    7. ')' → logprob: -8.382783889770508
    8. ' ' → logprob: -8.632783889770508
    9. '("")' → logprob: -9.757783889770508
    10. 'une' → logprob: -10.257783889770508

Token 97: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.03191016986966133
    2. 'ligne' → logprob: -3.9069101810455322
    3. ' ' → logprob: -5.406909942626953
    4. ' fois' → logprob: -5.656909942626953
    5. ' chaîne' → logprob: -6.406909942626953
    6. 'fois' → logprob: -7.781909942626953
    7. ' line' → logprob: -7.781909942626953
    8. 'l' → logprob: -7.781909942626953
    9. 'chaine' → logprob: -9.531909942626953
    10. 'line' → logprob: -10.156909942626953

Token 98: ' au' (ID: 2791)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0034367309417575598
    2. '<|end|>' → logprob: -6.37843656539917
    3. '(' → logprob: -7.12843656539917
    4. ')' → logprob: -7.62843656539917
    5. ' ' → logprob: -8.878437042236328
    6. ' ()' → logprob: -9.753437042236328
    7. 's' → logprob: -10.128437042236328
    8. '<|end|>' → logprob: -10.378437042236328
    9. '())' → logprob: -10.503437042236328
    10. '_' → logprob: -10.753437042236328

Token 99: ' clavier' (ID: 187878)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -1.7008061408996582
    2. ' input' → logprob: -1.9508061408996582
    3. ' string' → logprob: -2.325806140899658
    4. 't' → logprob: -2.450806140899658
    5. ' standard' → logprob: -2.825806140899658
    6. 'string' → logprob: -3.075806140899658
    7. ' code' → logprob: -3.200806140899658
    8. 'input' → logprob: -3.325806140899658
    9. '()' → logprob: -3.700806140899658
    10. 'standard' → logprob: -3.700806140899658

Token 100: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2752300500869751
    2. '[' → logprob: -2.5252299308776855
    3. ')' → logprob: -3.5252299308776855
    4. '.' → logprob: -3.6502299308776855
    5. ' 
' → logprob: -3.6502299308776855
    6. 's' → logprob: -3.7752299308776855
    7. '<|end|>' → logprob: -4.5252299308776855
    8. '#' → logprob: -4.6502299308776855
    9. '
' → logprob: -5.0252299308776855
    10. '  
' → logprob: -5.1502299308776855

Token 101: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13124382495880127
    2. 's' → logprob: -3.3812437057495117
    3. ')' → logprob: -4.631243705749512
    4. ' qui' → logprob: -5.256243705749512
    5. ' la' → logprob: -5.506243705749512
    6. ' un' → logprob: -5.506243705749512
    7. ' une' → logprob: -5.506243705749512
    8. ' )' → logprob: -5.506243705749512
    9. ' a' → logprob: -5.756243705749512
    10. ' ' → logprob: -5.756243705749512

Token 102: ' conserve' (ID: 72274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09126871079206467
    2. 's' → logprob: -2.96626877784729
    3. ' string' → logprob: -5.466268539428711
    4. ')' → logprob: -6.091268539428711
    5. ' =' → logprob: -6.091268539428711
    6. ' continue' → logprob: -6.216268539428711
    7. '_' → logprob: -6.341268539428711
    8. '=' → logprob: -6.591268539428711
    9. '#' → logprob: -6.591268539428711
    10. ' a' → logprob: -6.716268539428711

Token 103: ' telle' (ID: 70904)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028158744797110558
    2. '.' → logprob: -4.278158664703369
    3. ')' → logprob: -4.903158664703369
    4. ' )' → logprob: -6.278158664703369
    5. ' =' → logprob: -7.153158664703369
    6. 's' → logprob: -7.153158664703369
    7. '_' → logprob: -7.153158664703369
    8. '<|end|>' → logprob: -7.278158664703369
    9. ',' → logprob: -8.153159141540527
    10. ' ,' → logprob: -8.528159141540527

Token 104: ' quelle' (ID: 47442)
  Prédit: ' qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qu' → logprob: -1.0226590633392334
    2. 'quelle' → logprob: -1.5226590633392334
    3. ' que' → logprob: -1.7726590633392334
    4. ' ' → logprob: -2.3976590633392334
    5. ' quelle' → logprob: -2.3976590633392334
    6. 'qu' → logprob: -3.0226590633392334
    7. ' quelles' → logprob: -4.7726593017578125
    8. '  ' → logprob: -5.8976593017578125
    9. 'quel' → logprob: -6.0226593017578125
    10. 'que' → logprob: -6.5226593017578125

Token 105: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0581748485565186
    2. '.' → logprob: -1.1831748485565186
    3. '[' → logprob: -2.4331748485565186
    4. ' 
' → logprob: -2.6831748485565186
    5. '
' → logprob: -3.3081748485565186
    6. '#' → logprob: -3.5581748485565186
    7. 's' → logprob: -3.6831748485565186
    8. ')' → logprob: -4.058175086975098
    9. 'a' → logprob: -4.058175086975098
    10. '  
' → logprob: -4.183175086975098

Token 106: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40497899055480957
    2. ' )' → logprob: -1.5299789905548096
    3. ' ' → logprob: -2.1549789905548096
    4. ''' → logprob: -8.65497875213623
    5. '  
' → logprob: -9.77997875213623
    6. '')' → logprob: -9.90497875213623
    7. ' ' → logprob: -10.02997875213623
    8. '<|end|>' → logprob: -10.15497875213623
    9. '  ' → logprob: -10.65497875213623
    10. ' 
' → logprob: -10.65497875213623

Token 107: 'ous' (ID: 784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0651431754231453
    2. ' )' → logprob: -2.81514310836792
    3. ' ' → logprob: -7.44014310836792
    4. '')' → logprob: -7.56514310836792
    5. ' en' → logprob: -8.190143585205078
    6. ' que' → logprob: -8.190143585205078
    7. 'u' → logprob: -8.315143585205078
    8. ',' → logprob: -8.565143585205078
    9. 'e' → logprob: -8.815143585205078
    10. '`)' → logprob: -8.940143585205078

Token 108: ' forme' (ID: 27450)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6530389189720154
    2. ''' → logprob: -2.77803897857666
    3. ')' → logprob: -2.90303897857666
    4. ' forme' → logprob: -3.02803897857666
    5. ' form' → logprob: -3.02803897857666
    6. 'chaine' → logprob: -3.15303897857666
    7. 'str' → logprob: -3.65303897857666
    8. 's' → logprob: -3.65303897857666
    9. ' une' → logprob: -3.90303897857666
    10. ' ' → logprob: -4.52803897857666

Token 109: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.017229167744517326
    2. ' de' → logprob: -4.767229080200195
    3. ' ' → logprob: -5.142229080200195
    4. 'd' → logprob: -6.142229080200195
    5. ')' → logprob: -8.017229080200195
    6. 's' → logprob: -9.267229080200195
    7. ' )' → logprob: -9.642229080200195
    8. 'de' → logprob: -10.267229080200195
    9. '  ' → logprob: -10.767229080200195
    10. '<|end|>' → logprob: -11.642229080200195

Token 110: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.36342349648475647
    2. ' chaîne' → logprob: -1.613423466682434
    3. 'cha' → logprob: -2.6134235858917236
    4. 'str' → logprob: -3.9884235858917236
    5. 'string' → logprob: -4.3634233474731445
    6. ' chaine' → logprob: -7.4884233474731445
    7. 's' → logprob: -8.863423347473145
    8. 'chain' → logprob: -9.113423347473145
    9. ' string' → logprob: -10.238423347473145
    10. ' chaînes' → logprob: -10.613423347473145

Token 111: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4398472011089325
    2. ' )' → logprob: -1.0648472309112549
    3. ' ' → logprob: -4.564846992492676
    4. 's' → logprob: -8.689846992492676
    5. '()' → logprob: -9.189846992492676
    6. ' de' → logprob: -9.814846992492676
    7. ' 
' → logprob: -9.814846992492676
    8. '_' → logprob: -10.189846992492676
    9. ' )
' → logprob: -10.189846992492676
    10. ',' → logprob: -10.814846992492676

Token 112: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.4045850932598114
    2. 'car' → logprob: -1.1545851230621338
    3. 'texte' → logprob: -4.654584884643555
    4. ' caract' → logprob: -6.279584884643555
    5. ' caracteres' → logprob: -6.279584884643555
    6. 'chaine' → logprob: -6.654584884643555
    7. 'str' → logprob: -6.904584884643555
    8. ' texte' → logprob: -7.279584884643555
    9. ' caractère' → logprob: -7.654584884643555
    10. 'chars' → logprob: -8.404584884643555

Token 113: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009148012613877654
    2. ' )' → logprob: -7.125914573669434
    3. ').' → logprob: -9.625914573669434
    4. ')
' → logprob: -10.750914573669434
    5. 's' → logprob: -11.375914573669434
    6. '#' → logprob: -13.250914573669434
    7. ' ' → logprob: -13.750914573669434
    8. ')

' → logprob: -13.750914573669434
    9. ',' → logprob: -14.000914573669434
    10. '.' → logprob: -14.125914573669434

Token 114: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18408168852329254
    2. 's' → logprob: -3.559081792831421
    3. ' et' → logprob: -3.934081792831421
    4. ' puis' → logprob: -4.309081554412842
    5. ')' → logprob: -4.809081554412842
    6. ' qui' → logprob: -5.184081554412842
    7. '

' → logprob: -5.184081554412842
    8. '  ' → logprob: -5.309081554412842
    9. 'et' → logprob: -5.309081554412842
    10. 't' → logprob: -5.434081554412842

Token 115: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00272058742120862
    2. ')' → logprob: -7.252720355987549
    3. ' )' → logprob: -7.752720355987549
    4. 's' → logprob: -8.002720832824707
    5. ' continue' → logprob: -8.002720832824707
    6. '_' → logprob: -8.627720832824707
    7. ' a' → logprob: -9.877720832824707
    8. ' ' → logprob: -10.002720832824707
    9. ' #' → logprob: -10.190220832824707
    10. 'r' → logprob: -10.190220832824707

Token 116: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00033439300023019314
    2. 'é' → logprob: -8.750334739685059
    3. 'er' → logprob: -9.625334739685059
    4. ' e' → logprob: -9.750334739685059
    5. 'a' → logprob: -10.625334739685059
    6. 'ée' → logprob: -11.000334739685059
    7. 'r' → logprob: -12.625334739685059
    8. 'age' → logprob: -13.125334739685059
    9. 'ue' → logprob: -14.000334739685059
    10. 'ee' → logprob: -14.250334739685059

Token 117: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7671880722045898
    2. ' ' → logprob: -1.3921880722045898
    3. '()' → logprob: -1.8921880722045898
    4. ')' → logprob: -2.39218807220459
    5. ' )' → logprob: -3.76718807220459
    6. ' ()' → logprob: -4.64218807220459
    7. '_' → logprob: -4.89218807220459
    8. 's' → logprob: -6.51718807220459
    9. ' (' → logprob: -6.76718807220459
    10. 'e' → logprob: -8.39218807220459

Token 118: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04177374765276909
    2. '_' → logprob: -3.541773796081543
    3. ')' → logprob: -5.291773796081543
    4. ' )' → logprob: -6.041773796081543
    5. '  ' → logprob: -6.541773796081543
    6. 's' → logprob: -7.416773796081543
    7. ' espace' → logprob: -7.916773796081543
    8. ' chaîne' → logprob: -8.166773796081543
    9. ' space' → logprob: -8.916773796081543
    10. ' 
' → logprob: -9.041773796081543

Token 119: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6760569214820862
    2. ' ' → logprob: -1.1760568618774414
    3. '<|end|>' → logprob: -2.1760568618774414
    4. '_' → logprob: -4.176056861877441
    5. ' )' → logprob: -4.301056861877441
    6. 's' → logprob: -4.426056861877441
    7. ' =' → logprob: -4.926056861877441
    8. '.' → logprob: -5.176056861877441
    9. '=' → logprob: -5.676056861877441
    10. '[' → logprob: -5.801056861877441

Token 120: ' la' (ID: 557)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.688484787940979
    2. 'S' → logprob: -0.813484787940979
    3. ' ' → logprob: -2.9384846687316895
    4. 's' → logprob: -7.1884846687316895
    5. ' la' → logprob: -9.063485145568848
    6. ' ' → logprob: -9.188485145568848
    7. '  ' → logprob: -9.313485145568848
    8. '_' → logprob: -9.438485145568848
    9. ' a' → logprob: -9.938485145568848
    10. ')' → logprob: -10.438485145568848

Token 121: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.20170120894908905
    2. ' variable' → logprob: -1.7017011642456055
    3. 'var' → logprob: -8.951701164245605
    4. 'S' → logprob: -9.201701164245605
    5. ' S' → logprob: -10.701701164245605
    6. 's' → logprob: -11.951701164245605
    7. 'variables' → logprob: -12.201701164245605
    8. ' ' → logprob: -12.326701164245605
    9. 'vari' → logprob: -12.326701164245605
    10. '_variable' → logprob: -12.951701164245605

Token 122: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49772363901138306
    2. ' S' → logprob: -1.4977235794067383
    3. 'S' → logprob: -2.2477235794067383
    4. ''' → logprob: -3.1227235794067383
    5. '`' → logprob: -5.497723579406738
    6. '(' → logprob: -5.747723579406738
    7. ''S' → logprob: -6.247723579406738
    8. 's' → logprob: -6.372723579406738
    9. '(S' → logprob: -6.372723579406738
    10. ' ' → logprob: -6.747723579406738

Token 123: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6582224369049072
    2. 'd' → logprob: -0.7832224369049072
    3. ' 
' → logprob: -5.158222198486328
    4. 'counts' → logprob: -5.658222198486328
    5. 'a' → logprob: -6.158222198486328
    6. 'freq' → logprob: -6.408222198486328
    7. 'count' → logprob: -6.533222198486328
    8. 's' → logprob: -6.533222198486328
    9. '  
' → logprob: -6.908222198486328
    10. 'frequency' → logprob: -7.033222198486328

Token 124: 'S' (ID: 50)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5920297503471375
    2. 'freq' → logprob: -1.3420298099517822
    3. 'counts' → logprob: -2.4670298099517822
    4. 'count' → logprob: -3.3420298099517822
    5. 'frequency' → logprob: -3.8420298099517822
    6. '
' → logprob: -3.8420298099517822
    7. 'counter' → logprob: -5.092029571533203
    8. 'c' → logprob: -5.342029571533203
    9. 'fre' → logprob: -6.092029571533203
    10. ' 
' → logprob: -6.717029571533203

Token 125: '1' (ID: 16)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.40012866258621216
    2. '[' → logprob: -1.1501286029815674
    3. ':' → logprob: -5.9001288414001465
    4. ')' → logprob: -6.1501288414001465
    5. '[:]' → logprob: -6.1501288414001465
    6. '.count' → logprob: -6.5251288414001465
    7. '.split' → logprob: -7.0251288414001465
    8. '#' → logprob: -7.2751288414001465
    9. '<|end|>' → logprob: -8.025128364562988
    10. ' ' → logprob: -8.025128364562988

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5049011707305908
    2. '=' → logprob: -1.2549011707305908
    3. '[' → logprob: -3.004901170730591
    4. '_' → logprob: -3.379901170730591
    5. '.' → logprob: -5.129900932312012
    6. '_count' → logprob: -5.504900932312012
    7. '.count' → logprob: -5.504900932312012
    8. '_counts' → logprob: -5.504900932312012
    9. 'count' → logprob: -6.129900932312012
    10. 's' → logprob: -6.129900932312012

Token 127: ' S' (ID: 336)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.16057150065898895
    2. ' defaultdict' → logprob: -1.9105714559555054
    3. ' default' → logprob: -8.410571098327637
    4. '"default' → logprob: -9.160571098327637
    5. ''default' → logprob: -11.910571098327637
    6. '(default' → logprob: -12.410571098327637
    7. ' ' → logprob: -13.035571098327637
    8. 'list' → logprob: -13.160571098327637
    9. '.default' → logprob: -14.035571098327637
    10. '	default' → logprob: -14.285571098327637

Token 128: '[:' (ID: 7808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5983678102493286
    2. '.' → logprob: -0.9733678102493286
    3. '.lower' → logprob: -3.973367691040039
    4. '[:]' → logprob: -4.348367691040039
    5. '[::-' → logprob: -4.598367691040039
    6. '+' → logprob: -4.723367691040039
    7. '.count' → logprob: -4.848367691040039
    8. '[:' → logprob: -5.848367691040039
    9. '.replace' → logprob: -6.723367691040039
    10. ' .' → logprob: -6.973367691040039

Token 129: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002119330922141671
    2. ' N' → logprob: -6.502119541168213
    3. '2' → logprob: -8.377119064331055
    4. '1' → logprob: -8.502119064331055
    5. '3' → logprob: -9.127119064331055
    6. ' ' → logprob: -10.627119064331055
    7. '4' → logprob: -11.377119064331055
    8. '5' → logprob: -11.502119064331055
    9. ']' → logprob: -12.502119064331055
    10. '(' → logprob: -12.502119064331055

Token 130: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002798103028908372
    2. '//' → logprob: -6.377798080444336
    3. '].' → logprob: -7.252798080444336
    4. '-' → logprob: -8.752798080444336
    5. '+' → logprob: -9.502798080444336
    6. ' ]' → logprob: -9.627798080444336
    7. '/' → logprob: -10.502798080444336
    8. '1' → logprob: -10.752798080444336
    9. ' //' → logprob: -12.252798080444336
    10. '*' → logprob: -12.627798080444336

Token 131: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1564818620681763
    2. '.' → logprob: -1.7814818620681763
    3. '
' → logprob: -2.2814817428588867
    4. '<|end|>' → logprob: -2.2814817428588867
    5. '#' → logprob: -2.9064817428588867
    6. '  
' → logprob: -3.2814817428588867
    7. ' 
' → logprob: -3.4064817428588867
    8. ')' → logprob: -3.5314817428588867
    9. '+' → logprob: -3.7814817428588867
    10. ' ' → logprob: -3.9064817428588867

Token 132: ' #' (ID: 1069)
  Prédit: '.lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.lower' → logprob: -1.293788194656372
    2. '+' → logprob: -2.043788194656372
    3. '
' → logprob: -2.168788194656372
    4. '.' → logprob: -2.293788194656372
    5. '[' → logprob: -2.418788194656372
    6. '#' → logprob: -2.918788194656372
    7. '[::-' → logprob: -2.918788194656372
    8. '.count' → logprob: -3.543788194656372
    9. '  
' → logprob: -4.043787956237793
    10. ')' → logprob: -4.168787956237793

Token 133: ' Pr' (ID: 2284)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08162237703800201
    2. ' N' → logprob: -2.581622362136841
    3. 'len' → logprob: -6.83162260055542
    4. 'S' → logprob: -7.33162260055542
    5. ' ' → logprob: -8.081622123718262
    6. ' S' → logprob: -9.206622123718262
    7. ' len' → logprob: -9.206622123718262
    8. 'min' → logprob: -9.706622123718262
    9. '1' → logprob: -9.956622123718262
    10. '  ' → logprob: -10.456622123718262

Token 134: 'end' (ID: 419)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.9390716552734375
    2. 'em' → logprob: -1.3140716552734375
    3. 'e' → logprob: -2.4390716552734375
    4. 'int' → logprob: -2.4390716552734375
    5. 'ev' → logprob: -2.9390716552734375
    6. 'év' → logprob: -2.9390716552734375
    7. 'ef' → logprob: -4.6890716552734375
    8. 'end' → logprob: -4.6890716552734375
    9. 'o' → logprob: -4.8140716552734375
    10. 'ov' → logprob: -4.9390716552734375

Token 135: ' une' (ID: 2463)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.657096266746521
    2. 'N' → logprob: -0.782096266746521
    3. ' ' → logprob: -4.2820963859558105
    4. 'S' → logprob: -5.9070963859558105
    5. ' S' → logprob: -5.9070963859558105
    6. ' la' → logprob: -6.7820963859558105
    7. 'le' → logprob: -7.6570963859558105
    8. '  ' → logprob: -7.7820963859558105
    9. ' une' → logprob: -7.7820963859558105
    10. 'len' → logprob: -8.282095909118652

Token 136: ' sous' (ID: 14487)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2540970742702484
    2. ' N' → logprob: -1.6290971040725708
    3. 'S' → logprob: -4.504096984863281
    4. 's' → logprob: -5.629096984863281
    5. ' S' → logprob: -6.004096984863281
    6. 'chaine' → logprob: -6.379096984863281
    7. ' ' → logprob: -6.504096984863281
    8. 'space' → logprob: -7.504096984863281
    9. ' copie' → logprob: -7.504096984863281
    10. 'slice' → logprob: -7.629096984863281

Token 137: '-cha' (ID: 163177)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.6828793287277222
    2. 'string' → logprob: -1.3078793287277222
    3. '-' → logprob: -2.8078794479370117
    4. 's' → logprob: -3.1828794479370117
    5. 'tring' → logprob: -3.5578794479370117
    6. 'chain' → logprob: -4.307879447937012
    7. '=' → logprob: -4.307879447937012
    8. 'S' → logprob: -4.432879447937012
    9. ' =' → logprob: -4.682879447937012
    10. '_' → logprob: -5.432879447937012

Token 138: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.035915352404117584
    2. 'ine' → logprob: -3.7859153747558594
    3. 'ïne' → logprob: -4.910915374755859
    4. 'ne' → logprob: -5.910915374755859
    5. 'î' → logprob: -6.535915374755859
    6. '```' → logprob: -7.535915374755859
    7. 'íne' → logprob: -9.78591537475586
    8. '``' → logprob: -10.16091537475586
    9. 'inne' → logprob: -10.16091537475586
    10. 'ï' → logprob: -10.28591537475586

Token 139: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06888721883296967
    2. '(S' → logprob: -3.443887233734131
    3. '(N' → logprob: -3.693887233734131
    4. ' ' → logprob: -5.943887233734131
    5. 'S' → logprob: -6.568887233734131
    6. 's' → logprob: -6.693887233734131
    7. '<|end|>' → logprob: -7.568887233734131
    8. 'de' → logprob: -7.568887233734131
    9. '[' → logprob: -7.693887233734131
    10. 'N' → logprob: -7.693887233734131

Token 140: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3696289360523224
    2. ' S' → logprob: -1.36962890625
    3. 'N' → logprob: -3.11962890625
    4. ' N' → logprob: -4.99462890625
    5. ' ' → logprob: -5.61962890625
    6. ' ' → logprob: -8.99462890625
    7. 's' → logprob: -10.49462890625
    8. ' la' → logprob: -10.49462890625
    9. 'l' → logprob: -11.36962890625
    10. '  ' → logprob: -12.24462890625

Token 141: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' allant' (ID: 122150)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.20867307484149933
    2. ' N' → logprob: -1.708673119544983
    3. '0' → logprob: -5.333673000335693
    4. ' ' → logprob: -6.458673000335693
    5. 'len' → logprob: -8.458673477172852
    6. ' len' → logprob: -8.833673477172852
    7. ' ' → logprob: -9.083673477172852
    8. '1' → logprob: -9.333673477172852
    9. 'S' → logprob: -10.083673477172852
    10. ' S' → logprob: -10.583673477172852

Token 143: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9130516052246094
    2. ' jusqu' → logprob: -0.9130516052246094
    3. ' du' → logprob: -2.6630516052246094
    4. 'de' → logprob: -3.6630516052246094
    5. '0' → logprob: -3.7880516052246094
    6. ' au' → logprob: -3.7880516052246094
    7. ' des' → logprob: -4.038051605224609
    8. ' ' → logprob: -4.413051605224609
    9. ' jusque' → logprob: -4.913051605224609
    10. 'jus' → logprob: -5.038051605224609

Token 144: ' début' (ID: 29589)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017005346715450287
    2. 'dé' → logprob: -4.392005443572998
    3. ' début' → logprob: -6.017005443572998
    4. ' ' → logprob: -6.392005443572998
    5. 'd' → logprob: -8.14200496673584
    6. 'de' → logprob: -11.01700496673584
    7. 's' → logprob: -11.14200496673584
    8. 'N' → logprob: -11.39200496673584
    9. ' debut' → logprob: -11.51700496673584
    10. 'S' → logprob: -12.26700496673584

Token 145: ' (' (ID: 350)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.4382646679878235
    2. ' à' → logprob: -1.3132646083831787
    3. '<|end|>' → logprob: -3.8132646083831787
    4. ' ' → logprob: -3.8132646083831787
    5. ' jusque' → logprob: -4.438264846801758
    6. 'à' → logprob: -4.813264846801758
    7. ' au' → logprob: -5.063264846801758
    8. 'au' → logprob: -5.563264846801758
    9. 'N' → logprob: -6.063264846801758
    10. 's' → logprob: -6.688264846801758

Token 146: 'indice' (ID: 176697)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009793982841074467
    2. ' ' → logprob: -4.634793758392334
    3. ')' → logprob: -10.759794235229492
    4. 'N' → logprob: -11.634794235229492
    5. ' )' → logprob: -12.884794235229492
    6. ' N' → logprob: -13.509794235229492
    7. ' ' → logprob: -13.509794235229492
    8. ' 
' → logprob: -15.009794235229492
    9. '```' → logprob: -15.259794235229492
    10. 'S' → logprob: -15.384794235229492

Token 147: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606627885252237
    2. ' ' → logprob: -4.882606506347656
    3. '1' → logprob: -16.132606506347656
    4. ')' → logprob: -16.507606506347656
    5. ' 
' → logprob: -16.632606506347656
    6. ' ' → logprob: -16.757606506347656
    7. '```' → logprob: -17.757606506347656
    8. '=' → logprob: -17.882606506347656
    9. '  
' → logprob: -18.132606506347656
    10. 's' → logprob: -18.257606506347656

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009118211455643177
    2. ' ' → logprob: -7.000911712646484
    3. '1' → logprob: -16.500911712646484
    4. ')' → logprob: -16.500911712646484
    5. ' ' → logprob: -17.375911712646484
    6. ' à' → logprob: -17.750911712646484
    7. 's' → logprob: -17.750911712646484
    8. '=' → logprob: -17.875911712646484
    9. ' 
' → logprob: -18.000911712646484
    10. 'à' → logprob: -18.000911712646484

Token 149: ' inclus' (ID: 11891)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08670971542596817
    2. ' )' → logprob: -2.58670973777771
    3. ' ' → logprob: -5.086709499359131
    4. ',' → logprob: -6.836709499359131
    5. ' à' → logprob: -8.336709976196289
    6. ' ,' → logprob: -10.086709976196289
    7. ' jusqu' → logprob: -10.086709976196289
    8. ' au' → logprob: -10.336709976196289
    9. ':N' → logprob: -10.336709976196289
    10. 'à' → logprob: -10.461709976196289

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04962824657559395
    2. ':' → logprob: -3.674628257751465
    3. ' )' → logprob: -4.049628257751465
    4. '0' → logprob: -5.924628257751465
    5. 'jus' → logprob: -7.799628257751465
    6. ' à' → logprob: -7.924628257751465
    7. ' ' → logprob: -8.049628257751465
    8. ' jusqu' → logprob: -8.049628257751465
    9. ':)' → logprob: -8.049628257751465
    10. 'à' → logprob: -8.174628257751465

Token 151: ' jusqu' (ID: 21961)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.30026841163635254
    2. ' jusqu' → logprob: -2.0502684116363525
    3. ' au' → logprob: -3.4252684116363525
    4. ')' → logprob: -3.5502684116363525
    5. ' ' → logprob: -3.9252684116363525
    6. 'à' → logprob: -4.050268173217773
    7. ',' → logprob: -4.675268173217773
    8. ' jusque' → logprob: -4.925268173217773
    9. 'au' → logprob: -5.425268173217773
    10. '0' → logprob: -5.550268173217773

Token 152: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.057978518307209015
    2. ' au' → logprob: -3.557978630065918
    3. 'à' → logprob: -4.182978630065918
    4. 'au' → logprob: -5.307978630065918
    5. ''à' → logprob: -5.932978630065918
    6. 'N' → logprob: -6.807978630065918
    7. ' ' → logprob: -6.807978630065918
    8. 'a' → logprob: -6.932978630065918
    9. '’à' → logprob: -7.182978630065918
    10. '<|end|>' → logprob: -8.307978630065918

Token 153: ' l' (ID: 305)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22608701884746552
    2. ' N' → logprob: -1.601086974143982
    3. ' ' → logprob: -7.6010870933532715
    4. ' ' → logprob: -10.226086616516113
    5. 'indice' → logprob: -10.476086616516113
    6. '	N' → logprob: -11.226086616516113
    7. ' index' → logprob: -11.351086616516113
    8. 'index' → logprob: -11.476086616516113
    9. 'S' → logprob: -11.476086616516113
    10. 'l' → logprob: -11.601086616516113

Token 154: ''ind' (ID: 82245)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.022442085668444633
    2. 'a' → logprob: -4.272441864013672
    3. 'indice' → logprob: -6.272441864013672
    4. ' N' → logprob: -7.022441864013672
    5. 'index' → logprob: -7.022441864013672
    6. 'e' → logprob: -7.522441864013672
    7. 'es' → logprob: -8.147441864013672
    8. 'i' → logprob: -8.272441864013672
    9. ''' → logprob: -8.272441864013672
    10. ' ' → logprob: -8.397441864013672

Token 155: 'ice' (ID: 603)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.43319442868232727
    2. 'ex' → logprob: -1.3081943988800049
    3. 'ice' → logprob: -2.558194398880005
    4. 'c' → logprob: -7.308194637298584
    5. 'ces' → logprob: -7.308194637298584
    6. 'e' → logprob: -7.308194637298584
    7. 'i' → logprob: -7.808194637298584
    8. '```' → logprob: -8.058194160461426
    9. 'exe' → logprob: -8.683194160461426
    10. 'x' → logprob: -8.933194160461426

Token 156: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.38804003596305847
    2. 'N' → logprob: -1.1380400657653809
    3. ' ' → logprob: -6.763040065765381
    4. ' ' → logprob: -12.138039588928223
    5. ' `' → logprob: -13.513039588928223
    6. '	N' → logprob: -13.763039588928223
    7. '1' → logprob: -13.888039588928223
    8. '  ' → logprob: -14.013039588928223
    9. '`' → logprob: -14.638039588928223
    10. '0' → logprob: -14.763039588928223

Token 157: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011321903206408024
    2. 'N' → logprob: -5.261322021484375
    3. ' )' → logprob: -5.386322021484375
    4. ' ' → logprob: -7.511322021484375
    5. ' N' → logprob: -7.761322021484375
    6. '])' → logprob: -9.511322021484375
    7. ')]' → logprob: -9.636322021484375
    8. '0' → logprob: -9.636322021484375
    9. 'None' → logprob: -9.636322021484375
    10. ']' → logprob: -9.761322021484375

Token 159: 'cl' (ID: 565)
  Prédit: 'clus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clus' → logprob: -0.16391532123088837
    2. 'cl' → logprob: -1.9139152765274048
    3. 'lus' → logprob: -6.538915157318115
    4. 'clusive' → logprob: -7.413915157318115
    5. 'clude' → logprob: -7.913915157318115
    6. ')' → logprob: -7.913915157318115
    7. 'lu' → logprob: -8.288915634155273
    8. '```' → logprob: -9.038915634155273
    9. 'clud' → logprob: -9.163915634155273
    10. 'c' → logprob: -9.288915634155273

Token 160: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.008269752375781536
    2. ')' → logprob: -4.883269786834717
    3. '```' → logprob: -8.258269309997559
    4. 'lu' → logprob: -9.758269309997559
    5. 'ut' → logprob: -10.133269309997559
    6. 'us' → logprob: -10.258269309997559
    7. 'l' → logprob: -10.383269309997559
    8. 'ué' → logprob: -10.508269309997559
    9. 'ù' → logprob: -10.758269309997559
    10. '}' → logprob: -11.008269309997559

Token 161: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00344552262686193
    2. 'n' → logprob: -6.003445625305176
    3. '])' → logprob: -7.878445625305176
    4. 'e' → logprob: -9.253445625305176
    5. 't' → logprob: -9.503445625305176
    6. ']' → logprob: -9.503445625305176
    7. 'N' → logprob: -10.003445625305176
    8. ' )' → logprob: -10.253445625305176
    9. ')]' → logprob: -10.253445625305176
    10. 's' → logprob: -10.378445625305176

Token 162: ' Cela' (ID: 44403)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5745957493782043
    2. 'default' → logprob: -2.1995956897735596
    3. ' 
' → logprob: -2.6995956897735596
    4. '[' → logprob: -2.8245956897735596
    5. 's' → logprob: -3.6995956897735596
    6. '  
' → logprob: -3.8245956897735596
    7. '_' → logprob: -3.9495956897735596
    8. '#' → logprob: -3.9495956897735596
    9. ' ' → logprob: -4.074595928192139
    10. 'd' → logprob: -4.324595928192139

Token 163: ' donne' (ID: 30004)
  Prédit: ' correspond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.3914432227611542
    2. ' crée' → logprob: -2.6414432525634766
    3. ' représente' → logprob: -3.1414432525634766
    4. ' est' → logprob: -3.1414432525634766
    5. ' permet' → logprob: -3.6414432525634766
    6. ' ' → logprob: -3.7664432525634766
    7. ' contient' → logprob: -4.141443252563477
    8. ' donne' → logprob: -4.641443252563477
    9. ' corresponds' → logprob: -4.891443252563477
    10. 's' → logprob: -5.016443252563477

Token 164: ' les' (ID: 1341)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8851770162582397
    2. ' ' → logprob: -1.3851770162582397
    3. ' la' → logprob: -1.7601770162582397
    4. 'une' → logprob: -3.0101771354675293
    5. 'S' → logprob: -3.5101771354675293
    6. ' S' → logprob: -3.7601771354675293
    7. ' un' → logprob: -4.010177135467529
    8. 'la' → logprob: -4.510177135467529
    9. 'a' → logprob: -5.135177135467529
    10. ' a' → logprob: -5.385177135467529

Token 165: ' N' (ID: 478)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -1.230568289756775
    2. ' N' → logprob: -1.605568289756775
    3. 'N' → logprob: -1.980568289756775
    4. 'prem' → logprob: -2.4805684089660645
    5. ' premiers' → logprob: -2.6055684089660645
    6. 'car' → logprob: -3.1055684089660645
    7. ' même' → logprob: -3.3555684089660645
    8. ' mêmes' → logprob: -3.3555684089660645
    9. ' premier' → logprob: -3.4805684089660645
    10. ' premières' → logprob: -4.6055684089660645

Token 166: ' premiers' (ID: 59140)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.8268217444419861
    2. ' ' → logprob: -0.9518217444419861
    3. ' premiers' → logprob: -2.076821804046631
    4. 'prem' → logprob: -4.701821804046631
    5. '<|end|>' → logprob: -4.701821804046631
    6. 'car' → logprob: -4.951821804046631
    7. ' premières' → logprob: -5.076821804046631
    8. ' caracteres' → logprob: -5.826821804046631
    9. ' caract' → logprob: -5.826821804046631
    10. ' premier' → logprob: -6.326821804046631

Token 167: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.07663866877555847
    2. 'car' → logprob: -2.701638698577881
    3. ' caract' → logprob: -6.201638698577881
    4. ' caracteres' → logprob: -6.451638698577881
    5. ' ' → logprob: -6.701638698577881
    6. ' car' → logprob: -7.076638698577881
    7. ' caractère' → logprob: -7.701638698577881
    8. 'élé' → logprob: -8.701638221740723
    9. '_car' → logprob: -9.201638221740723
    10. ' espaces' → logprob: -9.326638221740723

Token 168: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5722296237945557
    2. '<|end|>' → logprob: -1.5722296237945557
    3. ')' → logprob: -1.6972296237945557
    4. ']' → logprob: -2.1972296237945557
    5. 's' → logprob: -2.5722296237945557
    6. '+' → logprob: -3.3222296237945557
    7. ' ' → logprob: -3.5722296237945557
    8. '#' → logprob: -4.197229385375977
    9. 'de' → logprob: -4.197229385375977
    10. 'S' → logprob: -4.197229385375977

Token 169: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.575951874256134
    2. 'S' → logprob: -0.825951874256134
    3. ' ' → logprob: -11.82595157623291
    4. 's' → logprob: -12.95095157623291
    5. ' la' → logprob: -13.07595157623291
    6. ' ' → logprob: -15.32595157623291
    7. 'la' → logprob: -16.325952529907227
    8. ' the' → logprob: -17.075952529907227
    9. 'l' → logprob: -17.200952529907227
    10. '_S' → logprob: -17.200952529907227

Token 170: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2883496284484863
    2. 'default' → logprob: -1.4133496284484863
    3. '#' → logprob: -2.2883496284484863
    4. ' 
' → logprob: -2.4133496284484863
    5. 's' → logprob: -2.4133496284484863
    6. '  
' → logprob: -3.2883496284484863
    7. ')' → logprob: -3.5383496284484863
    8. ']' → logprob: -4.038349628448486
    9. '[' → logprob: -4.413349628448486
    10. ' defaultdict' → logprob: -4.538349628448486

Token 171: ' On' (ID: 2160)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04848232865333557
    2. 'default' → logprob: -3.7984824180603027
    3. ' 
' → logprob: -4.673482418060303
    4. '  
' → logprob: -5.173482418060303
    5. '
' → logprob: -6.048482418060303
    6. 'd' → logprob: -6.173482418060303
    7. 's' → logprob: -6.673482418060303
    8. '_' → logprob: -6.673482418060303
    9. '' → logprob: -7.423482418060303
    10. '#' → logprob: -7.673482418060303

Token 172: ' la' (ID: 557)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5046960115432739
    2. ' ' → logprob: -2.5046958923339844
    3. '_' → logprob: -2.8796958923339844
    4. '=' → logprob: -3.6296958923339844
    5. 's' → logprob: -3.6296958923339844
    6. '.count' → logprob: -3.8796958923339844
    7. 'count' → logprob: -4.004695892333984
    8. '1' → logprob: -4.129695892333984
    9. ' .' → logprob: -4.254695892333984
    10. '.' → logprob: -4.254695892333984

Token 173: ' stock' (ID: 6546)
  Prédit: ' copie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' copie' → logprob: -0.37939614057540894
    2. ' =' → logprob: -3.0043962001800537
    3. '_' → logprob: -3.1293962001800537
    4. ' stock' → logprob: -3.6293962001800537
    5. ' crée' → logprob: -4.379395961761475
    6. 's' → logprob: -4.504395961761475
    7. ' copy' → logprob: -4.629395961761475
    8. ' ' → logprob: -4.629395961761475
    9. ' compte' → logprob: -4.941895961761475
    10. '=' → logprob: -4.941895961761475

Token 174: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0008137972326949239
    2. 'ée' → logprob: -7.875813961029053
    3. 'er' → logprob: -8.500813484191895
    4. 'é' → logprob: -8.625813484191895
    5. 'ue' → logprob: -10.375813484191895
    6. 'ee' → logprob: -12.750813484191895
    7. 'е' → logprob: -12.875813484191895
    8. 'ant' → logprob: -12.875813484191895
    9. 'ent' → logprob: -13.000813484191895
    10. ' e' → logprob: -13.750813484191895

Token 175: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2523774802684784
    2. '_' → logprob: -2.377377510070801
    3. ' dans' → logprob: -2.752377510070801
    4. ' à' → logprob: -3.752377510070801
    5. 'dans' → logprob: -4.377377510070801
    6. ')' → logprob: -4.502377510070801
    7. ' =' → logprob: -4.877377510070801
    8. '.' → logprob: -6.002377510070801
    9. '=' → logprob: -6.502377510070801
    10. ' )' → logprob: -6.752377510070801

Token 176: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10059698671102524
    2. ' S' → logprob: -2.3505969047546387
    3. ' ' → logprob: -8.600597381591797
    4. '_S' → logprob: -9.850597381591797
    5. 's' → logprob: -9.975597381591797
    6. '_' → logprob: -10.475597381591797
    7. ' la' → logprob: -10.725597381591797
    8. 'a' → logprob: -10.975597381591797
    9. ' a' → logprob: -11.475597381591797
    10. ' une' → logprob: -12.475597381591797

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23938149213790894
    2. '2' → logprob: -1.6143815517425537
    3. 'S' → logprob: -5.739381313323975
    4. '[:' → logprob: -5.739381313323975
    5. 'N' → logprob: -5.989381313323975
    6. '[' → logprob: -7.114381313323975
    7. '.' → logprob: -7.364381313323975
    8. ']' → logprob: -7.364381313323975
    9. ':' → logprob: -7.489381313323975
    10. '[:]' → logprob: -7.864381313323975

Token 178: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10656564682722092
    2. ' 
' → logprob: -3.8565657138824463
    3. '  
' → logprob: -3.9815657138824463
    4. 'default' → logprob: -4.106565475463867
    5. '#' → logprob: -4.231565475463867
    6. 's' → logprob: -4.481565475463867
    7. '[' → logprob: -5.606565475463867
    8. '
' → logprob: -6.231565475463867
    9. 'S' → logprob: -6.356565475463867
    10. 'def' → logprob: -6.356565475463867

Token 179: 'S' (ID: 50)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2537597119808197
    2. ' 
' → logprob: -2.6287596225738525
    3. '  
' → logprob: -3.2537596225738525
    4. 's' → logprob: -3.3787596225738525
    5. '#' → logprob: -3.6287596225738525
    6. '[' → logprob: -4.253759860992432
    7. '' → logprob: -5.378759860992432
    8. '\' → logprob: -5.503759860992432
    9. '.' → logprob: -5.503759860992432
    10. '\n' → logprob: -6.003759860992432

Token 180: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6173657178878784
    2. '1' → logprob: -1.1173657178878784
    3. '[N' → logprob: -2.242365837097168
    4. '[:' → logprob: -3.992365837097168
    5. '[:]' → logprob: -5.867365837097168
    6. '[S' → logprob: -6.492365837097168
    7. '#' → logprob: -7.367365837097168
    8. '<|end|>' → logprob: -7.492365837097168
    9. 'S' → logprob: -7.742365837097168
    10. '[::-' → logprob: -7.742365837097168

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023945808410645
    2. '=' → logprob: -1.9102394580841064
    3. '=S' → logprob: -11.160239219665527
    4. ' ' → logprob: -14.160239219665527
    5. ' =
' → logprob: -16.785240173339844
    6. '=s' → logprob: -16.785240173339844
    7. 's' → logprob: -16.910240173339844
    8. '＝' → logprob: -16.910240173339844
    9. '=
' → logprob: -17.660240173339844
    10. 'S' → logprob: -17.910240173339844

Token 182: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.1602294147014618
    2. 'S' → logprob: -1.9102294445037842
    3. ' ' → logprob: -12.660229682922363
    4. ' ' → logprob: -13.535229682922363
    5. 's' → logprob: -14.410229682922363
    6. ' s' → logprob: -16.910228729248047
    7. ' 
' → logprob: -17.035228729248047
    8. '_S' → logprob: -18.160228729248047
    9. '​' → logprob: -18.285228729248047
    10. ' ‌' → logprob: -18.535228729248047

Token 183: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.0007551893359050155
    2. '[:' → logprob: -7.375755310058594
    3. '[' → logprob: -9.750755310058594
    4. '[:]' → logprob: -10.250755310058594
    5. '[S' → logprob: -10.875755310058594
    6. '[-' → logprob: -11.625755310058594
    7. ' [' → logprob: -12.625755310058594
    8. '[n' → logprob: -13.500755310058594
    9. ' [:' → logprob: -14.500755310058594
    10. 'N' → logprob: -14.625755310058594

Token 184: ':' (ID: 25)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0009315869538113475
    2. ':' → logprob: -7.000931739807129
    3. ' :]' → logprob: -11.500931739807129
    4. ']' → logprob: -11.875931739807129
    5. ':].' → logprob: -13.125931739807129
    6. ':]
' → logprob: -15.375931739807129
    7. ':],' → logprob: -15.500931739807129
    8. ':N' → logprob: -15.625931739807129
    9. '*' → logprob: -15.750931739807129
    10. ':]

' → logprob: -16.625930786132812

Token 185: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001540569355711341
    2. '2' → logprob: -6.751540660858154
    3. 'len' → logprob: -8.626540184020996
    4. 'N' → logprob: -9.251540184020996
    5. ' ]' → logprob: -9.626540184020996
    6. 'None' → logprob: -11.126540184020996
    7. ':]' → logprob: -12.751540184020996
    8. ']
' → logprob: -12.876540184020996
    9. ']

' → logprob: -13.501540184020996
    10. ' ' → logprob: -13.626540184020996

Token 186: '::-' (ID: 96612)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.1971203237771988
    2. ':' → logprob: -2.197120428085327
    3. ']' → logprob: -3.322120428085327
    4. ':N' → logprob: -3.697120428085327
    5. ':].' → logprob: -5.947120189666748
    6. ' :]' → logprob: -7.072120189666748
    7. '0' → logprob: -7.197120189666748
    8. ' :' → logprob: -7.697120189666748
    9. 'N' → logprob: -7.822120189666748
    10. '::-' → logprob: -7.822120189666748

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011054071597754955
    2. '-' → logprob: -4.511054039001465
    3. ']' → logprob: -12.761054039001465
    4. '１' → logprob: -14.261054039001465
    5. '``' → logprob: -14.761054039001465
    6. ' ' → logprob: -14.886054039001465
    7. '```' → logprob: -15.011054039001465
    8. 'None' → logprob: -15.011054039001465
    9. ' -' → logprob: -15.636054039001465
    10. '−' → logprob: -15.761054039001465

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.9623810658231378e-05
    2. ' ]' → logprob: -10.875020027160645
    3. ']
' → logprob: -15.625020027160645
    4. ')' → logprob: -15.625020027160645
    5. '#' → logprob: -16.125019073486328
    6. '']' → logprob: -16.125019073486328
    7. ']

' → logprob: -16.500019073486328
    8. '()]' → logprob: -16.625019073486328
    9. '])' → logprob: -17.250019073486328
    10. '"]' → logprob: -17.625019073486328

Token 189: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3161158561706543
    2. '<|end|>' → logprob: -1.4411158561706543
    3. '#' → logprob: -4.191115856170654
    4. '  
' → logprob: -5.191115856170654
    5. '  ' → logprob: -5.441115856170654
    6. ')' → logprob: -5.941115856170654
    7. ' 
' → logprob: -6.191115856170654
    8. ' #' → logprob: -7.566115856170654
    9. '<|end|>' → logprob: -7.566115856170654
    10. ' for' → logprob: -7.691115856170654

Token 190: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: ' Pr' (ID: 2284)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -1.136067271232605
    2. ' ' → logprob: -1.511067271232605
    3. 'reverse' → logprob: -2.5110673904418945
    4. 'Reverse' → logprob: -2.5110673904418945
    5. '<|end|>' → logprob: -2.6360673904418945
    6. ' #' → logprob: -3.1360673904418945
    7. '#' → logprob: -3.6360673904418945
    8. 'strip' → logprob: -3.8860673904418945
    9. 'R' → logprob: -3.8860673904418945
    10. 'rstrip' → logprob: -3.8860673904418945

Token 192: 'end' (ID: 419)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.17717528343200684
    2. 'S' → logprob: -2.177175283432007
    3. 'Pr' → logprob: -3.927175283432007
    4. 'end' → logprob: -4.302175521850586
    5. 'rend' → logprob: -4.552175521850586
    6. 'int' → logprob: -6.552175521850586
    7. 'len' → logprob: -7.427175521850586
    8. 'a' → logprob: -7.427175521850586
    9. 'ends' → logprob: -8.052175521850586
    10. 'pr' → logprob: -8.427175521850586

Token 193: ' la' (ID: 557)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.38675305247306824
    2. 'S' → logprob: -1.6367530822753906
    3. ' la' → logprob: -2.7617530822753906
    4. ' ' → logprob: -3.6367530822753906
    5. ' une' → logprob: -3.6367530822753906
    6. 'une' → logprob: -6.386753082275391
    7. 'a' → logprob: -6.886753082275391
    8. 'la' → logprob: -7.011753082275391
    9. ' ' → logprob: -7.136753082275391
    10. ' l' → logprob: -7.261753082275391

Token 194: ' sous' (ID: 14487)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.3234331011772156
    2. 'cha' → logprob: -2.6984331607818604
    3. 'suite' → logprob: -2.8234331607818604
    4. ' chaîne' → logprob: -3.3234331607818604
    5. 's' → logprob: -3.4484331607818604
    6. 'S' → logprob: -3.5734331607818604
    7. 'portion' → logprob: -4.323432922363281
    8. 'rest' → logprob: -4.823432922363281
    9. 'part' → logprob: -4.823432922363281
    10. 'reste' → logprob: -5.323432922363281

Token 195: '-cha' (ID: 163177)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24835844337940216
    2. 'chaine' → logprob: -2.4983584880828857
    3. '-' → logprob: -2.8733584880828857
    4. '_s' → logprob: -3.4983584880828857
    5. 'S' → logprob: -4.123358249664307
    6. ' chaîne' → logprob: -4.123358249664307
    7. 's' → logprob: -4.623358249664307
    8. '_string' → logprob: -6.123358249664307
    9. '-cha' → logprob: -6.373358249664307
    10. '_S' → logprob: -7.248358249664307

Token 196: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.03871031478047371
    2. '_' → logprob: -3.663710355758667
    3. 'î' → logprob: -5.538710117340088
    4. 'ïne' → logprob: -6.163710117340088
    5. ' chaîne' → logprob: -7.163710117340088
    6. '-' → logprob: -7.288710117340088
    7. '_string' → logprob: -7.413710117340088
    8. '#' → logprob: -7.788710117340088
    9. '```' → logprob: -7.788710117340088
    10. 'ç' → logprob: -7.913710117340088

Token 197: ' commenc' (ID: 53342)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6282285451889038
    2. 'de' → logprob: -1.0032285451889038
    3. 'S' → logprob: -2.8782286643981934
    4. '<|end|>' → logprob: -3.6282286643981934
    5. ' S' → logprob: -5.378228664398193
    6. ' restante' → logprob: -5.753228664398193
    7. ' ' → logprob: -5.878228664398193
    8. 'rest' → logprob: -6.128228664398193
    9. '(S' → logprob: -6.628228664398193
    10. 's' → logprob: -7.503228664398193

Token 198: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.2903127670288086
    2. 'e' → logprob: -1.9153127670288086
    3. 'à' → logprob: -3.9153127670288086
    4. 'çant' → logprob: -3.9153127670288086
    5. 'enant' → logprob: -4.665312767028809
    6. ' à' → logprob: -4.790312767028809
    7. 'ante' → logprob: -5.165312767028809
    8. ''à' → logprob: -5.290312767028809
    9. 'iant' → logprob: -5.665312767028809
    10. 'a' → logprob: -5.790312767028809

Token 199: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' l' (ID: 305)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007465000730007887
    2. '<|end|>' → logprob: -5.38246488571167
    3. ' N' → logprob: -6.25746488571167
    4. ' ' → logprob: -8.382465362548828
    5. '0' → logprob: -8.632465362548828
    6. 'index' → logprob: -9.007465362548828
    7. '[N' → logprob: -9.757465362548828
    8. '
' → logprob: -10.007465362548828
    9. 'len' → logprob: -10.257465362548828
    10. '<|end|>' → logprob: -10.382465362548828

Token 201: ''ind' (ID: 82245)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.024671487510204315
    2. 'indice' → logprob: -4.02467155456543
    3. 'index' → logprob: -5.64967155456543
    4. '[N' → logprob: -6.89967155456543
    5. ' N' → logprob: -7.89967155456543
    6. ' indice' → logprob: -8.02467155456543
    7. 'n' → logprob: -8.39967155456543
    8. '<N' → logprob: -9.52467155456543
    9. ' index' → logprob: -9.64967155456543
    10. ' ' → logprob: -9.64967155456543

Token 202: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.5791109800338745
    2. 'ex' → logprob: -0.8291109800338745
    3. 'e' → logprob: -6.079111099243164
    4. 'i' → logprob: -7.204111099243164
    5. 'ic' → logprob: -10.204111099243164
    6. 'ce' → logprob: -10.954111099243164
    7. 'exe' → logprob: -11.079111099243164
    8. 'index' → logprob: -11.579111099243164
    9. 'é' → logprob: -11.954111099243164
    10. '```' → logprob: -12.329111099243164

Token 203: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015181921189650893
    2. ' N' → logprob: -6.501518249511719
    3. ' ' → logprob: -12.376518249511719
    4. '0' → logprob: -12.501518249511719
    5. '[N' → logprob: -13.376518249511719
    6. '(N' → logprob: -13.626518249511719
    7. '2' → logprob: -13.876518249511719
    8. 'S' → logprob: -14.126518249511719
    9. '	N' → logprob: -14.751518249511719
    10. 'n' → logprob: -14.876518249511719

Token 204: ' jusqu' (ID: 21961)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7519550919532776
    2. '<|end|>' → logprob: -0.7519550919532776
    3. ')' → logprob: -4.251955032348633
    4. 'N' → logprob: -4.501955032348633
    5. ' ' → logprob: -4.876955032348633
    6. '(N' → logprob: -5.001955032348633
    7. 'S' → logprob: -5.626955032348633
    8. '<|end|>' → logprob: -6.126955032348633
    9. '[' → logprob: -6.376955032348633
    10. ',' → logprob: -6.501955032348633

Token 205: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.3907730281352997
    2. 'à' → logprob: -1.265773057937622
    3. 'a' → logprob: -4.265772819519043
    4. '’à' → logprob: -4.515772819519043
    5. 'la' → logprob: -4.890772819519043
    6. ' à' → logprob: -5.765772819519043
    7. 'len' → logprob: -6.265772819519043
    8. ''au' → logprob: -6.515772819519043
    9. 'au' → logprob: -6.640772819519043
    10. 'None' → logprob: -8.265772819519043

Token 206: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1162126436829567
    2. 'len' → logprob: -2.2412126064300537
    3. 'None' → logprob: -6.116212844848633
    4. ' la' → logprob: -7.741212844848633
    5. 'fin' → logprob: -7.866212844848633
    6. 'l' → logprob: -9.491212844848633
    7. 'f' → logprob: -9.991212844848633
    8. '#' → logprob: -10.241212844848633
    9. 'N' → logprob: -10.741212844848633
    10. 'a' → logprob: -10.866212844848633

Token 207: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.11393484473228455
    2. 'len' → logprob: -2.2389347553253174
    3. 'None' → logprob: -7.1139349937438965
    4. ' fin' → logprob: -9.113934516906738
    5. 'a' → logprob: -10.238934516906738
    6. ' None' → logprob: -10.363934516906738
    7. 'f' → logprob: -10.488934516906738
    8. 'fi' → logprob: -10.863934516906738
    9. 'la' → logprob: -11.238934516906738
    10. '```' → logprob: -11.738934516906738

Token 208: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.003746048314496875
    2. ' S' → logprob: -6.128746032714844
    3. 'la' → logprob: -7.003746032714844
    4. ' la' → logprob: -7.628746032714844
    5. 'l' → logprob: -9.253746032714844
    6. 's' → logprob: -10.503746032714844
    7. ' ' → logprob: -10.753746032714844
    8. ')' → logprob: -12.878746032714844
    9. ' ' → logprob: -13.003746032714844
    10. 'chaine' → logprob: -13.003746032714844

Token 210: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: 'cela' (ID: 109559)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003555408213287592
    2. ' )' → logprob: -6.1285552978515625
    3. '<|end|>' → logprob: -7.1285552978515625
    4. ')
' → logprob: -9.628555297851562
    5. ' ' → logprob: -9.628555297851562
    6. 's' → logprob: -10.128555297851562
    7. 'S' → logprob: -10.128555297851562
    8. 'len' → logprob: -10.128555297851562
    9. '),' → logprob: -10.253555297851562
    10. ')#' → logprob: -10.378555297851562

Token 212: ' représente' (ID: 88912)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21576350927352905
    2. ' )' → logprob: -2.340763568878174
    3. ']' → logprob: -2.715763568878174
    4. ' ]' → logprob: -4.340763568878174
    5. ' ' → logprob: -5.965763568878174
    6. '])' → logprob: -6.340763568878174
    7. ').' → logprob: -6.340763568878174
    8. '),' → logprob: -6.590763568878174
    9. ' ),' → logprob: -6.715763568878174
    10. ' est' → logprob: -6.840763568878174

Token 213: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7800619602203369
    2. 'le' → logprob: -1.780061960220337
    3. ' la' → logprob: -1.780061960220337
    4. 'len' → logprob: -2.905061960220337
    5. ' toute' → logprob: -3.280061960220337
    6. 'S' → logprob: -3.405061960220337
    7. 'les' → logprob: -3.905061960220337
    8. 'une' → logprob: -4.280061721801758
    9. 'tout' → logprob: -4.530061721801758
    10. ' le' → logprob: -4.905061721801758

Token 214: ' "' (ID: 392)
  Prédit: ' fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fin' → logprob: -1.2135069370269775
    2. 'chaine' → logprob: -1.4635069370269775
    3. 'fin' → logprob: -1.5885069370269775
    4. 'cha' → logprob: -2.2135069370269775
    5. ' chaîne' → logprob: -2.5885069370269775
    6. 's' → logprob: -3.9635069370269775
    7. 'long' → logprob: -4.088506698608398
    8. ' longueur' → logprob: -4.338506698608398
    9. 'rest' → logprob: -5.088506698608398
    10. 'tail' → logprob: -5.338506698608398

Token 215: 'se' (ID: 344)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.065609097480774
    2. 'len' → logprob: -1.190609097480774
    3. 'long' → logprob: -1.940609097480774
    4. 'fin' → logprob: -2.4406089782714844
    5. 'cha' → logprob: -2.5656089782714844
    6. 'tail' → logprob: -4.315608978271484
    7. ')' → logprob: -5.065608978271484
    8. ' chaîne' → logprob: -5.565608978271484
    9. ' longueur' → logprob: -5.940608978271484
    10. 's' → logprob: -5.940608978271484

Token 216: 'conde' (ID: 50435)
  Prédit: 'conde'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conde' → logprob: -0.6450251936912537
    2. 'quence' → logprob: -0.8950251936912537
    3. 'ction' → logprob: -3.5200252532958984
    4. 'cond' → logprob: -4.395025253295898
    5. 'rie' → logprob: -5.270025253295898
    6. 'q' → logprob: -5.520025253295898
    7. 'que' → logprob: -6.020025253295898
    8. '```' → logprob: -6.395025253295898
    9. 'lection' → logprob: -7.270025253295898
    10. ']' → logprob: -7.332525253295898

Token 217: ' moitié' (ID: 93216)
  Prédit: ' partie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partie' → logprob: -0.09438856691122055
    2. 'part' → logprob: -2.969388484954834
    3. ' moitié' → logprob: -3.719388484954834
    4. ' part' → logprob: -4.844388484954834
    5. ' mo' → logprob: -5.594388484954834
    6. ' ' → logprob: -6.844388484954834
    7. 'mo' → logprob: -7.969388484954834
    8. ' portion' → logprob: -8.344388961791992
    9. ' chaîne' → logprob: -8.344388961791992
    10. ' parti' → logprob: -8.719388961791992

Token 218: '"' (ID: 1)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6299746036529541
    2. ']' → logprob: -1.504974603652954
    3. ')' → logprob: -1.754974603652954
    4. '")' → logprob: -3.629974603652954
    5. 'de' → logprob: -3.879974603652954
    6. '"' → logprob: -4.254974365234375
    7. ' )' → logprob: -5.879974365234375
    8. '"]' → logprob: -6.379974365234375
    9. 's' → logprob: -6.629974365234375
    10. ' ]' → logprob: -6.879974365234375

Token 219: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033962175250053406
    2. ']' → logprob: -3.6589622497558594
    3. 'S' → logprob: -5.783962249755859
    4. '<|end|>' → logprob: -6.908962249755859
    5. '[::-' → logprob: -6.908962249755859
    6. '])' → logprob: -7.408962249755859
    7. ' )' → logprob: -7.658962249755859
    8. 'de' → logprob: -8.03396224975586
    9. '(S' → logprob: -8.40896224975586
    10. 's' → logprob: -8.78396224975586

Token 220: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.02639702521264553
    2. ' S' → logprob: -3.6513969898223877
    3. ' la' → logprob: -9.776396751403809
    4. 's' → logprob: -11.276396751403809
    5. ')' → logprob: -11.526396751403809
    6. ' ' → logprob: -11.651396751403809
    7. 'la' → logprob: -12.401396751403809
    8. ' ' → logprob: -13.401396751403809
    9. 'l' → logprob: -13.651396751403809
    10. ' )' → logprob: -14.776396751403809

Token 221: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06422688812017441
    2. ']' → logprob: -2.8142268657684326
    3. '[::-' → logprob: -7.189227104187012
    4. '])' → logprob: -7.814227104187012
    5. ' )' → logprob: -8.064227104187012
    6. '<|end|>' → logprob: -8.939227104187012
    7. '#' → logprob: -9.064227104187012
    8. 'S' → logprob: -9.189227104187012
    9. 's' → logprob: -9.439227104187012
    10. '[' → logprob: -9.939227104187012

Token 222: ' S' (ID: 336)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2135612666606903
    2. ' len' → logprob: -2.5885612964630127
    3. 'S' → logprob: -2.9635612964630127
    4. 'N' → logprob: -3.5885612964630127
    5. ')' → logprob: -4.588561058044434
    6. ' S' → logprob: -4.713561058044434
    7. ' la' → logprob: -5.088561058044434
    8. 'la' → logprob: -5.838561058044434
    9. ' ' → logprob: -6.213561058044434
    10. 'l' → logprob: -6.838561058044434

Token 223: ' fait' (ID: 7473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0805705189704895
    2. 'est' → logprob: -4.205570697784424
    3. 'len' → logprob: -4.205570697784424
    4. ' est' → logprob: -4.330570697784424
    5. ']' → logprob: -5.080570697784424
    6. ').' → logprob: -5.455570697784424
    7. ' )' → logprob: -5.580570697784424
    8. '.' → logprob: -6.205570697784424
    9. '[:' → logprob: -6.205570697784424
    10. '#' → logprob: -6.455570697784424

Token 224: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.33780422806739807
    2. ' ' → logprob: -2.5878043174743652
    3. 'tail' → logprob: -2.8378043174743652
    4. '2' → logprob: -3.2128043174743652
    5. ' la' → logprob: -3.9628043174743652
    6. 'la' → logprob: -4.212804317474365
    7. 'length' → logprob: -4.587804317474365
    8. 'le' → logprob: -4.837804317474365
    9. ' len' → logprob: -4.837804317474365
    10. 'une' → logprob: -5.337804317474365

Token 225: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.017886634916067123
    2. '2' → logprob: -4.267886638641357
    3. '(len' → logprob: -6.267886638641357
    4. ' len' → logprob: -7.267886638641357
    5. 'le' → logprob: -7.642886638641357
    6. 'la' → logprob: -8.5178861618042
    7. ' ' → logprob: -8.5178861618042
    8. 'l' → logprob: -10.0178861618042
    9. '(' → logprob: -10.2678861618042
    10. '100' → logprob: -10.3928861618042

Token 226: 'N' (ID: 45)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5946401357650757
    2. '*N' → logprob: -0.8446401357650757
    3. ' *' → logprob: -4.719640254974365
    4. 'len' → logprob: -5.344640254974365
    5. 'N' → logprob: -5.469640254974365
    6. '*n' → logprob: -8.344639778137207
    7. '*(' → logprob: -9.094639778137207
    8. '*l' → logprob: -9.719639778137207
    9. '(len' → logprob: -10.219639778137207
    10. '*M' → logprob: -10.844639778137207

Token 227: ' caractères' (ID: 183106)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036203854251652956
    2. ')]' → logprob: -6.128620147705078
    3. ')])' → logprob: -7.628620147705078
    4. ']' → logprob: -7.628620147705078
    5. ' )' → logprob: -8.878620147705078
    6. '])' → logprob: -8.878620147705078
    7. '])]' → logprob: -9.503620147705078
    8. '_chars' → logprob: -11.003620147705078
    9. 'chars' → logprob: -11.253620147705078
    10. ')],' → logprob: -11.378620147705078

Token 228: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6937554478645325
    2. ']' → logprob: -0.6937554478645325
    3. '])' → logprob: -9.068755149841309
    4. '#' → logprob: -9.318755149841309
    5. '<|end|>' → logprob: -9.568755149841309
    6. 'S' → logprob: -9.818755149841309
    7. ')]' → logprob: -9.943755149841309
    8. '}' → logprob: -10.443755149841309
    9. '[::-' → logprob: -10.568755149841309
    10. '[' → logprob: -10.693755149841309

Token 229: ' Ensuite' (ID: 113884)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: ',' (ID: 11)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.7443132400512695
    2. ' on' → logprob: -1.7443132400512695
    3. ',' → logprob: -2.2443132400512695
    4. 'S' → logprob: -2.3693132400512695
    5. ' S' → logprob: -2.6193132400512695
    6. '[' → logprob: -3.1193132400512695
    7. '#' → logprob: -4.3693132400512695
    8. '<|end|>' → logprob: -5.6193132400512695
    9. 'on' → logprob: -5.8693132400512695
    10. ' ' → logprob: -5.9943132400512695

Token 231: ' [' (ID: 723)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.25456979870796204
    2. ' ' → logprob: -2.6295697689056396
    3. '<|end|>' → logprob: -3.0045697689056396
    4. ' on' → logprob: -3.2545697689056396
    5. 's' → logprob: -3.6295697689056396
    6. 'S' → logprob: -4.504570007324219
    7. ' S' → logprob: -4.629570007324219
    8. ')' → logprob: -5.379570007324219
    9. '[' → logprob: -6.879570007324219
    10. '#' → logprob: -7.129570007324219

Token 232: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.06346718221902847
    2. '::' → logprob: -3.313467264175415
    3. ':' → logprob: -3.813467264175415
    4. ']' → logprob: -6.188467025756836
    5. '[::-' → logprob: -7.688467025756836
    6. ':]' → logprob: -8.188467025756836
    7. '-' → logprob: -10.063467025756836
    8. ':::' → logprob: -10.313467025756836
    9. ' :' → logprob: -10.438467025756836
    10. '::
' → logprob: -10.563467025756836

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016175836324691772
    2. '-' → logprob: -4.141175746917725
    3. ']' → logprob: -8.891176223754883
    4. ' -' → logprob: -13.766176223754883
    5. ' ' → logprob: -14.391176223754883
    6. '::-' → logprob: -14.391176223754883
    7. '-N' → logprob: -14.641176223754883
    8. 'S' → logprob: -15.016176223754883
    9. '])' → logprob: -15.766176223754883
    10. '[::-' → logprob: -15.891176223754883

Token 234: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002719449403230101
    2. ' ]' → logprob: -8.250271797180176
    3. ' ' → logprob: -12.000271797180176
    4. '[::-' → logprob: -13.375271797180176
    5. ']
' → logprob: -14.125271797180176
    6. '].' → logprob: -15.375271797180176
    7. ']

' → logprob: -15.500271797180176
    8. ' ' → logprob: -15.625271797180176
    9. ',' → logprob: -15.750271797180176
    10. ']==' → logprob: -16.000272750854492

Token 235: ' inverse' (ID: 53743)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5208393335342407
    2. 'S' → logprob: -1.3958393335342407
    3. 'la' → logprob: -2.645839214324951
    4. '<|end|>' → logprob: -3.395839214324951
    5. 'the' → logprob: -4.020839214324951
    6. ' cette' → logprob: -5.395839214324951
    7. ' ' → logprob: -5.395839214324951
    8. ' S' → logprob: -5.770839214324951
    9. 'l' → logprob: -6.020839214324951
    10. 's' → logprob: -6.020839214324951

Token 237: ' sous' (ID: 14487)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.31401029229164124
    2. ' chaîne' → logprob: -1.4390102624893188
    3. 'cha' → logprob: -3.6890103816986084
    4. 's' → logprob: -5.564010143280029
    5. ' chaine' → logprob: -6.189010143280029
    6. 'ligne' → logprob: -8.439010620117188
    7. 'part' → logprob: -8.689010620117188
    8. 'chain' → logprob: -8.939010620117188
    9. ' ' → logprob: -8.939010620117188
    10. 'string' → logprob: -9.064010620117188

Token 238: '-cha' (ID: 163177)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7809005975723267
    2. 'chaine' → logprob: -0.7809005975723267
    3. '-chain' → logprob: -3.780900478363037
    4. 's' → logprob: -4.655900478363037
    5. '-' → logprob: -4.905900478363037
    6. ' chaîne' → logprob: -5.280900478363037
    7. '#' → logprob: -5.405900478363037
    8. '-cha' → logprob: -5.530900478363037
    9. '-S' → logprob: -5.655900478363037
    10. '.S' → logprob: -5.905900478363037

Token 239: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.000651197915431112
    2. 'ine' → logprob: -7.8756513595581055
    3. 'ïne' → logprob: -8.625651359558105
    4. 'î' → logprob: -9.875651359558105
    5. 'ne' → logprob: -10.625651359558105
    6. 'íne' → logprob: -11.750651359558105
    7. 'în' → logprob: -13.000651359558105
    8. 'înes' → logprob: -13.625651359558105
    9. 'Î' → logprob: -14.000651359558105
    10. '```' → logprob: -14.250651359558105

Token 240: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.699385166168213
    2. ')' → logprob: -1.949385166168213
    3. '<|end|>' → logprob: -2.074385166168213
    4. 'd' → logprob: -2.199385166168213
    5. 'default' → logprob: -2.574385166168213
    6. 's' → logprob: -2.699385166168213
    7. 'S' → logprob: -2.699385166168213
    8. '#' → logprob: -2.699385166168213
    9. 'print' → logprob: -3.574385166168213
    10. 'counts' → logprob: -3.949385166168213

Token 241: ' donc' (ID: 14206)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.697731077671051
    2. ')' → logprob: -1.3227310180664062
    3. ' 
' → logprob: -2.6977310180664062
    4. '#' → logprob: -3.3227310180664062
    5. '
' → logprob: -3.5727310180664062
    6. 'default' → logprob: -4.322731018066406
    7. ''' → logprob: -4.572731018066406
    8. '<|end|>' → logprob: -4.572731018066406
    9. '"' → logprob: -4.697731018066406
    10. ' )' → logprob: -4.822731018066406

Token 242: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9997843503952026
    2. ' on' → logprob: -1.1247843503952026
    3. 'la' → logprob: -2.249784469604492
    4. 'on' → logprob: -2.749784469604492
    5. ' la' → logprob: -2.999784469604492
    6. ' S' → logprob: -3.499784469604492
    7. 's' → logprob: -4.374784469604492
    8. ' elle' → logprob: -4.499784469604492
    9. 'une' → logprob: -5.124784469604492
    10. 'cela' → logprob: -5.249784469604492

Token 243: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010623415000736713
    2. '[N' → logprob: -5.010623455047607
    3. '1' → logprob: -6.385623455047607
    4. 'S' → logprob: -7.010623455047607
    5. 'N' → logprob: -7.760623455047607
    6. 'de' → logprob: -9.26062297821045
    7. '[n' → logprob: -9.26062297821045
    8. '[' → logprob: -9.38562297821045
    9. '[::-' → logprob: -9.51062297821045
    10. ':' → logprob: -9.82312297821045

Token 244: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3159332573413849
    2. ' =' → logprob: -1.3159332275390625
    3. '<|end|>' → logprob: -6.5659332275390625
    4. 's' → logprob: -7.5659332275390625
    5. '[' → logprob: -8.440933227539062
    6. '#' → logprob: -8.940933227539062
    7. ')' → logprob: -9.315933227539062
    8. ' ' → logprob: -9.690933227539062
    9. 'S' → logprob: -10.815933227539062
    10. '.' → logprob: -10.815933227539062

Token 245: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9335464835166931
    2. 'la' → logprob: -1.058546543121338
    3. 'le' → logprob: -2.558546543121338
    4. 'l' → logprob: -2.683546543121338
    5. 'une' → logprob: -2.933546543121338
    6. ' la' → logprob: -3.058546543121338
    7. ' une' → logprob: -5.683546543121338
    8. ' S' → logprob: -5.683546543121338
    9. ' le' → logprob: -6.308546543121338
    10. 'égal' → logprob: -6.558546543121338

Token 246: ' seconde' (ID: 66204)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -1.373397707939148
    2. 'inverse' → logprob: -1.873397707939148
    3. 'chaine' → logprob: -2.6233978271484375
    4. 'ré' → logprob: -2.9983978271484375
    5. ' deuxième' → logprob: -3.1233978271484375
    6. 's' → logprob: -3.2483978271484375
    7. ' seconde' → logprob: -3.2483978271484375
    8. 're' → logprob: -3.2483978271484375
    9. 'version' → logprob: -3.4983978271484375
    10. ' chaîne' → logprob: -3.6233978271484375

Token 247: ' moitié' (ID: 93216)
  Prédit: ' moitié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moitié' → logprob: -0.3748578131198883
    2. 'mo' → logprob: -1.874857783317566
    3. ' mo' → logprob: -2.1248579025268555
    4. 'part' → logprob: -4.2498579025268555
    5. '_' → logprob: -4.4998579025268555
    6. ' partie' → logprob: -5.1248579025268555
    7. ' part' → logprob: -6.1248579025268555
    8. ' ' → logprob: -6.4998579025268555
    9. '_half' → logprob: -6.6248579025268555
    10. 'half' → logprob: -7.1248579025268555

Token 248: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5477980971336365
    2. '<|end|>' → logprob: -1.6727981567382812
    3. 'de' → logprob: -1.9227981567382812
    4. 'S' → logprob: -3.7977981567382812
    5. '[::-' → logprob: -4.172798156738281
    6. ' of' → logprob: -4.672798156738281
    7. 's' → logprob: -5.047798156738281
    8. ' du' → logprob: -5.422798156738281
    9. ' des' → logprob: -5.547798156738281
    10. ' S' → logprob: -5.672798156738281

Token 249: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.11296968162059784
    2. ' S' → logprob: -2.2379696369171143
    3. ' la' → logprob: -9.362969398498535
    4. 's' → logprob: -10.612969398498535
    5. 'la' → logprob: -10.862969398498535
    6. 'l' → logprob: -11.487969398498535
    7. ' ' → logprob: -12.612969398498535
    8. ' ' → logprob: -13.862969398498535
    9. ' l' → logprob: -14.612969398498535
    10. 'a' → logprob: -15.112969398498535

Token 250: ' ren' (ID: 5427)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.04187298193573952
    2. 'v' → logprob: -3.916872978210449
    3. 'ver' → logprob: -4.666872978210449
    4. ']' → logprob: -6.041872978210449
    5. 'verse' → logprob: -6.541872978210449
    6. 'vert' → logprob: -6.541872978210449
    7. 'versed' → logprob: -6.541872978210449
    8. '```' → logprob: -7.041872978210449
    9. '**' → logprob: -7.791872978210449
    10. '...' → logprob: -8.04187297821045

Token 252: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0051913014613091946
    2. 'é' → logprob: -5.630191326141357
    3. 'e' → logprob: -6.505191326141357
    4. 'ee' → logprob: -10.3801908493042
    5. 'cée' → logprob: -11.0051908493042
    6. 's' → logprob: -11.3801908493042
    7. 'ées' → logprob: -11.5051908493042
    8. 'rée' → logprob: -12.5051908493042
    9. 'es' → logprob: -12.5051908493042
    10. '[' → logprob: -12.6301908493042

Token 253: '.

' (ID: 364)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.814534068107605
    2. '
' → logprob: -1.814534068107605
    3. 'counts' → logprob: -1.814534068107605
    4. 'freq' → logprob: -2.1895341873168945
    5. 'count' → logprob: -2.8145341873168945
    6. 'counter' → logprob: -3.9395341873168945
    7. 'frequency' → logprob: -4.4395341873168945
    8. 'char' → logprob: -4.5645341873168945
    9. 'default' → logprob: -5.4395341873168945
    10. 'fre' → logprob: -6.5645341873168945

Token 254: 'D' (ID: 35)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.26058802008628845
    2. 'count' → logprob: -2.3855879306793213
    3. 'counts' → logprob: -2.7605879306793213
    4. 'd' → logprob: -3.3855879306793213
    5. 'counter' → logprob: -3.6355879306793213
    6. 'char' → logprob: -5.0105881690979
    7. 'frequency' → logprob: -5.8855881690979
    8. 'cnt' → logprob: -6.3855881690979
    9. 'comp' → logprob: -7.6355881690979
    10. 'D' → logprob: -7.8855881690979

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5305997133255005
    2. '=' → logprob: -1.0305997133255005
    3. 'ef' → logprob: -2.905599594116211
    4. 'f' → logprob: -10.155599594116211
    5. 'eft' → logprob: -10.155599594116211
    6. 'efs' → logprob: -10.280599594116211
    7. 'e' → logprob: -10.405599594116211
    8. 'default' → logprob: -10.905599594116211
    9. ' defaultdict' → logprob: -11.155599594116211
    10. ' ' → logprob: -11.655599594116211

Token 256: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.20147649943828583
    2. 'default' → logprob: -1.7014764547348022
    3. ' default' → logprob: -9.701476097106934
    4. '(default' → logprob: -14.201476097106934
    5. '"default' → logprob: -14.451476097106934
    6. '.default' → logprob: -14.451476097106934
    7. ''default' → logprob: -15.951476097106934
    8. '_default' → logprob: -16.70147705078125
    9. '	default' → logprob: -17.45147705078125
    10. 'def' → logprob: -17.82647705078125

Token 257: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015409269835799932
    2. '(list' → logprob: -6.7515411376953125
    3. '(lambda' → logprob: -8.251541137695312
    4. '(' → logprob: -9.376541137695312
    5. 'int' → logprob: -11.251541137695312
    6. '(
' → logprob: -12.251541137695312
    7. '(in' → logprob: -12.876541137695312
    8. '(<' → logprob: -13.501541137695312
    9. ' (' → logprob: -13.626541137695312
    10. 'list' → logprob: -14.251541137695312

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. '())' → logprob: -12.12501049041748
    3. '()' → logprob: -12.25001049041748
    4. ' )' → logprob: -15.50001049041748
    5. ')
' → logprob: -16.000011444091797
    6. ')`' → logprob: -16.375011444091797
    7. ')

' → logprob: -18.250011444091797
    8. '))' → logprob: -19.000011444091797
    9. '),' → logprob: -19.125011444091797
    10. '[' → logprob: -19.750011444091797

Token 259: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8865994215011597
    2. ' 
' → logprob: -1.6365994215011597
    3. '
' → logprob: -2.136599540710449
    4. ' ' → logprob: -2.511599540710449
    5. '(' → logprob: -3.011599540710449
    6. '[' → logprob: -3.136599540710449
    7. ' for' → logprob: -3.636599540710449
    8. 'S' → logprob: -4.511599540710449
    9. '#' → logprob: -4.636599540710449
    10. '  
' → logprob: -4.636599540710449

Token 260: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38666287064552307
    2. '
' → logprob: -1.8866628408432007
    3. '(' → logprob: -3.1366629600524902
    4. '[' → logprob: -3.5116629600524902
    5. ' ' → logprob: -4.13666296005249
    6. '(S' → logprob: -4.26166296005249
    7. 'S' → logprob: -4.38666296005249
    8. ' for' → logprob: -4.38666296005249
    9. ' 
' → logprob: -4.51166296005249
    10. ')' → logprob: -5.01166296005249

Token 261: ' Cr' (ID: 5790)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6906045079231262
    2. '#' → logprob: -1.3156044483184814
    3. 'for' → logprob: -2.3156044483184814
    4. ' D' → logprob: -3.5656044483184814
    5. ' defaultdict' → logprob: -3.6906044483184814
    6. 'default' → logprob: -4.1906046867370605
    7. 'd' → logprob: -4.1906046867370605
    8. '<|end|>' → logprob: -4.5656046867370605
    9. ' for' → logprob: -4.8156046867370605
    10. ')' → logprob: -5.6906046867370605

Token 262: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.35150888562202454
    2. 'éer' → logprob: -1.6015088558197021
    3. 'e' → logprob: -2.976508855819702
    4. 'é' → logprob: -3.351508855819702
    5. 'rée' → logprob: -5.351509094238281
    6. 'ré' → logprob: -7.226509094238281
    7. 'eer' → logprob: -7.351509094238281
    8. 'eert' → logprob: -7.351509094238281
    9. 'ee' → logprob: -8.226509094238281
    10. 'eat' → logprob: -8.351509094238281

Token 263: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6938624382019043
    2. '()' → logprob: -0.6938624382019043
    3. '(default' → logprob: -8.318862915039062
    4. '(D' → logprob: -9.068862915039062
    5. 'D' → logprob: -9.443862915039062
    6. 'default' → logprob: -9.443862915039062
    7. '(S' → logprob: -9.693862915039062
    8. '(lambda' → logprob: -10.068862915039062
    9. '({' → logprob: -10.568862915039062
    10. ' ()' → logprob: -11.068862915039062

Token 264: ' nouveau' (ID: 23184)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.2825709283351898
    2. 'd' → logprob: -1.5325709581375122
    3. ' diction' → logprob: -3.7825708389282227
    4. ' defaultdict' → logprob: -5.407570838928223
    5. 'dictionary' → logprob: -6.532570838928223
    6. 'dict' → logprob: -6.907570838928223
    7. 'objet' → logprob: -9.657570838928223
    8. 'dic' → logprob: -9.657570838928223
    9. ' default' → logprob: -9.907570838928223
    10. ' d' → logprob: -10.157570838928223

Token 265: ' diction' (ID: 155259)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.15197761356830597
    2. 'd' → logprob: -2.1519775390625
    3. ' defaultdict' → logprob: -4.0269775390625
    4. ' diction' → logprob: -5.9019775390625
    5. 'dict' → logprob: -7.1519775390625
    6. ' ' → logprob: -7.1519775390625
    7. ')' → logprob: -7.7769775390625
    8. 'objet' → logprob: -7.9019775390625
    9. 'dictionary' → logprob: -7.9019775390625
    10. '(default' → logprob: -8.2769775390625

Token 266: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.02973926067352295
    2. 'aire' → logprob: -4.1547393798828125
    3. 'ary' → logprob: -4.4047393798828125
    4. 'ion' → logprob: -7.5297393798828125
    5. 'ar' → logprob: -8.404739379882812
    6. 'er' → logprob: -8.779739379882812
    7. 'oire' → logprob: -8.904739379882812
    8. 'ort' → logprob: -10.279739379882812
    9. 'onna' → logprob: -10.404739379882812
    10. 'a' → logprob: -10.404739379882812

Token 267: ' dont' (ID: 11562)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4765470027923584
    2. '(' → logprob: -0.9765470027923584
    3. '[' → logprob: -6.7265472412109375
    4. 'D' → logprob: -8.101547241210938
    5. '()
' → logprob: -8.476547241210938
    6. '(D' → logprob: -8.976547241210938
    7. ' ()' → logprob: -9.226547241210938
    8. '([' → logprob: -9.351547241210938
    9. '(
' → logprob: -9.351547241210938
    10. 's' → logprob: -9.726547241210938

Token 268: ' les' (ID: 1341)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1988276243209839
    2. 'la' → logprob: -1.1988276243209839
    3. 'D' → logprob: -2.0738277435302734
    4. 'l' → logprob: -2.5738277435302734
    5. 'def' → logprob: -2.8238277435302734
    6. 'default' → logprob: -3.0738277435302734
    7. ')' → logprob: -3.6988277435302734
    8. 'lambda' → logprob: -4.323827743530273
    9. ' la' → logprob: -4.448827743530273
    10. ' D' → logprob: -4.823827743530273

Token 269: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.18148884177207947
    2. ' valeurs' → logprob: -1.8064888715744019
    3. 'values' → logprob: -7.681488990783691
    4. ' clés' → logprob: -7.681488990783691
    5. 'cles' → logprob: -7.806488990783691
    6. ' val' → logprob: -8.431488990783691
    7. ' values' → logprob: -10.181488990783691
    8. 'vals' → logprob: -10.431488990783691
    9. 'def' → logprob: -10.556488990783691
    10. ' défaut' → logprob: -11.056488990783691

Token 270: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.24002178013324738
    2. 's' → logprob: -2.1150217056274414
    3. 'par' → logprob: -3.1150217056274414
    4. ' sont' → logprob: -3.8650217056274414
    5. '<|end|>' → logprob: -4.615021705627441
    6. ' seront' → logprob: -5.240021705627441
    7. 'ont' → logprob: -5.615021705627441
    8. ' ' → logprob: -5.615021705627441
    9. ' ont' → logprob: -6.365021705627441
    10. 'd' → logprob: -7.615021705627441

Token 271: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.003337291069328785
    2. 'default' → logprob: -6.753337383270264
    3. ' défaut' → logprob: -6.878337383270264
    4. 'def' → logprob: -7.128337383270264
    5. '
' → logprob: -8.253336906433105
    6. 'd' → logprob: -10.378336906433105
    7. ' ' → logprob: -12.003336906433105
    8. 'f' → logprob: -12.378336906433105
    9. '

' → logprob: -12.378336906433105
    10. 'éf' → logprob: -12.378336906433105

Token 272: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36388880014419556
    2. ' sont' → logprob: -1.6138887405395508
    3. ')' → logprob: -3.738888740539551
    4. 'int' → logprob: -4.238888740539551
    5. '=' → logprob: -4.363888740539551
    6. '()' → logprob: -4.363888740539551
    7. ' seront' → logprob: -4.488888740539551
    8. ' =' → logprob: -4.738888740539551
    9. ' ' → logprob: -4.988888740539551
    10. '<|end|>' → logprob: -5.988888740539551

Token 273: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021292066667228937
    2. ' ' → logprob: -6.502129077911377
    3. ' des' → logprob: -7.502129077911377
    4. 'des' → logprob: -9.627129554748535
    5. 'int' → logprob: -12.252129554748535
    6. ' zéro' → logprob: -12.877129554748535
    7. ' int' → logprob: -15.002129554748535
    8. ' de' → logprob: -15.627129554748535
    9. 'ent' → logprob: -15.752129554748535
    10. ' zero' → logprob: -15.877129554748535

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.0948158382670954e-05
    2. 'int' → logprob: -10.625030517578125
    3. ' ' → logprob: -12.625030517578125
    4. 'des' → logprob: -12.875030517578125
    5. 'z' → logprob: -15.000030517578125
    6. ' des' → logprob: -16.000030517578125
    7. 'l' → logprob: -16.500030517578125
    8. ' zéro' → logprob: -17.375030517578125
    9. 'zero' → logprob: -17.375030517578125
    10. 'ent' → logprob: -17.500030517578125

Token 275: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8292707204818726
    2. ')' → logprob: -1.0792707204818726
    3. '()' → logprob: -2.204270839691162
    4. '(S' → logprob: -3.329270839691162
    5. '(' → logprob: -3.829270839691162
    6. 'D' → logprob: -4.079270839691162
    7. ' ' → logprob: -4.204270839691162
    8. ' for' → logprob: -4.829270839691162
    9. 'S' → logprob: -5.704270839691162
    10. '
' → logprob: -5.829270839691162

Token 276: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005642342148348689
    2. ' )' → logprob: -7.500564098358154
    3. ').' → logprob: -11.625564575195312
    4. ')
' → logprob: -14.250564575195312
    5. ' ' → logprob: -14.500564575195312
    6. '()' → logprob: -15.375564575195312
    7. ')...' → logprob: -15.500564575195312
    8. ')

' → logprob: -15.625564575195312
    9. '),' → logprob: -15.875564575195312
    10. ' ' → logprob: -16.125564575195312

Token 277: ''est' (ID: 6616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02308054268360138
    2. 'on' → logprob: -4.773080348968506
    3. ' )' → logprob: -5.398080348968506
    4. 'es' → logprob: -6.023080348968506
    5. 'ont' → logprob: -6.398080348968506
    6. 'onc' → logprob: -7.273080348968506
    7. 'e' → logprob: -7.523080348968506
    8. '))' → logprob: -8.023080825805664
    9. 'for' → logprob: -8.273080825805664
    10. 'ar' → logprob: -8.523080825805664

Token 278: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7999732494354248
    2. 'la' → logprob: -2.299973249435425
    3. ' une' → logprob: -2.424973249435425
    4. 'des' → logprob: -2.674973249435425
    5. ' la' → logprob: -2.799973249435425
    6. 'un' → logprob: -3.049973249435425
    7. ' des' → logprob: -3.049973249435425
    8. 'int' → logprob: -3.299973249435425
    9. 'une' → logprob: -3.299973249435425
    10. ')' → logprob: -3.924973249435425

Token 279: ' comportement' (ID: 98649)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20349183678627014
    2. 'type' → logprob: -2.3284919261932373
    3. ')' → logprob: -3.0784919261932373
    4. ' int' → logprob: -3.9534919261932373
    5. ' type' → logprob: -4.328491687774658
    6. 'ent' → logprob: -5.453491687774658
    7. 'default' → logprob: -6.953491687774658
    8. 'class' → logprob: -7.078491687774658
    9. ' )' → logprob: -7.328491687774658
    10. ']int' → logprob: -8.328492164611816

Token 280: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.105476975440979
    2. ' des' → logprob: -3.8554768562316895
    3. ' de' → logprob: -3.9804768562316895
    4. 'de' → logprob: -3.9804768562316895
    5. 'des' → logprob: -4.2304768562316895
    6. ' )' → logprob: -4.8554768562316895
    7. ' du' → logprob: -4.9804768562316895
    8. 'd' → logprob: -6.2304768562316895
    9. 'du' → logprob: -6.3554768562316895
    10. ' pour' → logprob: -6.3554768562316895

Token 281: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002072586677968502
    2. ' int' → logprob: -6.627072811126709
    3. 'default' → logprob: -7.502072811126709
    4. ')' → logprob: -9.00207233428955
    5. ' defaultdict' → logprob: -10.75207233428955
    6. 'list' → logprob: -11.00207233428955
    7. 'dict' → logprob: -11.62707233428955
    8. '(int' → logprob: -12.37707233428955
    9. '<int' → logprob: -12.62707233428955
    10. '
' → logprob: -12.87707233428955

Token 282: '()).' (ID: 9503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00354816229082644
    2. '()' → logprob: -5.8785481452941895
    3. '())' → logprob: -7.2535481452941895
    4. ' )' → logprob: -10.628548622131348
    5. ').' → logprob: -11.753548622131348
    6. ')
' → logprob: -13.503548622131348
    7. '(' → logprob: -14.003548622131348
    8. ')

' → logprob: -15.128548622131348
    9. '))' → logprob: -15.503548622131348
    10. '),' → logprob: -15.628548622131348

Token 283: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015455135144293308
    2. ' for' → logprob: -8.875154495239258
    3. '
' → logprob: -11.375154495239258
    4. 'i' → logprob: -13.875154495239258
    5. '#' → logprob: -15.125154495239258
    6. 'f' → logprob: -15.500154495239258
    7. 'd' → logprob: -15.625154495239258
    8. ')' → logprob: -15.750154495239258
    9. 'F' → logprob: -15.750154495239258
    10. '

' → logprob: -15.750154495239258

Token 284: ' utilise' (ID: 70283)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1050306111574173
    2. ' for' → logprob: -3.8550305366516113
    3. '[' → logprob: -4.105030536651611
    4. 'pour' → logprob: -4.480030536651611
    5. 'continue' → logprob: -4.605030536651611
    6. 's' → logprob: -4.605030536651611
    7. '[]' → logprob: -4.980030536651611
    8. '=' → logprob: -5.230030536651611
    9. ' =' → logprob: -5.355030536651611
    10. 'aj' → logprob: -6.105030536651611

Token 285: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.974632203578949
    2. ' ' → logprob: -1.0996322631835938
    3. 'D' → logprob: -1.4746322631835938
    4. 'S' → logprob: -4.224632263183594
    5. ' S' → logprob: -4.474632263183594
    6. ' defaultdict' → logprob: -4.724632263183594
    7. ' for' → logprob: -5.349632263183594
    8. 'for' → logprob: -5.474632263183594
    9. ')' → logprob: -5.599632263183594
    10. '  ' → logprob: -5.849632263183594

Token 286: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21071529388427734
    2. '[S' → logprob: -2.3357152938842773
    3. 'for' → logprob: -2.7107152938842773
    4. ' for' → logprob: -4.460715293884277
    5. '[]' → logprob: -5.710715293884277
    6. 'S' → logprob: -5.710715293884277
    7. '[
' → logprob: -6.960715293884277
    8. ' pour' → logprob: -6.960715293884277
    9. ' ' → logprob: -7.210715293884277
    10. '=' → logprob: -7.210715293884277

Token 287: ' compter' (ID: 81694)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.313973993062973
    2. ' compter' → logprob: -1.8139740228652954
    3. 'com' → logprob: -2.438973903656006
    4. ' compt' → logprob: -5.063973903656006
    5. 'stock' → logprob: -5.313973903656006
    6. ' stock' → logprob: -5.938973903656006
    7. 'count' → logprob: -6.188973903656006
    8. 's' → logprob: -8.313974380493164
    9. 'dé' → logprob: -8.438974380493164
    10. 'st' → logprob: -8.563974380493164

Token 288: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6708070635795593
    2. '_' → logprob: -1.670807123184204
    3. '()' → logprob: -2.170807123184204
    4. 's' → logprob: -2.920807123184204
    5. '(S' → logprob: -3.295807123184204
    6. ')' → logprob: -3.670807123184204
    7. ' ' → logprob: -4.045806884765625
    8. 'S' → logprob: -4.545806884765625
    9. 'les' → logprob: -4.670806884765625
    10. '[' → logprob: -5.295806884765625

Token 289: ' occurrences' (ID: 108073)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.13792784512043
    2. 'car' → logprob: -2.512927770614624
    3. ' espaces' → logprob: -4.012928009033203
    4. ' occurrences' → logprob: -4.387928009033203
    5. 'élé' → logprob: -5.387928009033203
    6. ' caracteres' → logprob: -5.637928009033203
    7. ' caract' → logprob: -6.137928009033203
    8. ' car' → logprob: -6.387928009033203
    9. ' lettres' → logprob: -6.387928009033203
    10. ' éléments' → logprob: -6.512928009033203

Token 290: ' avec' (ID: 3937)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3871060311794281
    2. 'for' → logprob: -2.012105941772461
    3. '[' → logprob: -2.762105941772461
    4. ')' → logprob: -3.012105941772461
    5. '(S' → logprob: -3.387105941772461
    6. '(
' → logprob: -4.512105941772461
    7. 's' → logprob: -5.137105941772461
    8. ' ' → logprob: -5.262105941772461
    9. ']' → logprob: -5.387105941772461
    10. ',' → logprob: -5.887105941772461

Token 291: ' des' (ID: 731)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6937553286552429
    2. 'for' → logprob: -1.5687553882598877
    3. ' S' → logprob: -2.3187553882598877
    4. ')' → logprob: -2.4437553882598877
    5. 'les' → logprob: -3.9437553882598877
    6. ' les' → logprob: -4.318755149841309
    7. 'range' → logprob: -4.318755149841309
    8. ' for' → logprob: -4.693755149841309
    9. ' )' → logprob: -5.068755149841309
    10. ' la' → logprob: -5.193755149841309

Token 292: ' clés' (ID: 96616)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.35363441705703735
    2. ' caractères' → logprob: -2.2286343574523926
    3. ' espaces' → logprob: -2.4786343574523926
    4. 'S' → logprob: -3.3536343574523926
    5. 'élé' → logprob: -3.9786343574523926
    6. ' S' → logprob: -4.978634357452393
    7. 'esp' → logprob: -5.103634357452393
    8. ' clés' → logprob: -5.228634357452393
    9. 'indices' → logprob: -5.228634357452393
    10. '_' → logprob: -5.728634357452393

Token 293: ' particuli' (ID: 33812)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22941911220550537
    2. ' ' → logprob: -2.354419231414795
    3. '[' → logprob: -3.229419231414795
    4. ')' → logprob: -3.354419231414795
    5. ' for' → logprob: -4.479419231414795
    6. ',' → logprob: -5.854419231414795
    7. ']' → logprob: -5.854419231414795
    8. 's' → logprob: -5.979419231414795
    9. '(' → logprob: -5.979419231414795
    10. '_' → logprob: -6.104419231414795

Token 294: 'ères' (ID: 12614)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13940726220607758
    2. 'es' → logprob: -2.389407157897949
    3. 's' → logprob: -4.889407157897949
    4. 'é' → logprob: -5.389407157897949
    5. ']' → logprob: -5.889407157897949
    6. '_' → logprob: -5.889407157897949
    7. '[' → logprob: -6.014407157897949
    8. 'és' → logprob: -6.389407157897949
    9. 'e' → logprob: -6.639407157897949
    10. '=' → logprob: -6.639407157897949

Token 295: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7216765284538269
    2. '
' → logprob: -0.8466765284538269
    3. ')' → logprob: -3.9716765880584717
    4. '[' → logprob: -4.221676349639893
    5. ' 
' → logprob: -4.471676349639893
    6. ' ' → logprob: -5.096676349639893
    7. '#' → logprob: -5.221676349639893
    8. ' for' → logprob: -5.221676349639893
    9. 's' → logprob: -5.471676349639893
    10. '  
' → logprob: -5.471676349639893

Token 296: ' vont' (ID: 29772)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7692432403564453
    2. ' sont' → logprob: -1.2692432403564453
    3. ' représentent' → logprob: -2.8942432403564453
    4. ' seront' → logprob: -3.1442432403564453
    5. ' '' → logprob: -4.144243240356445
    6. ' S' → logprob: -4.269243240356445
    7. 'ont' → logprob: -4.519243240356445
    8. ')' → logprob: -4.769243240356445
    9. '[' → logprob: -4.894243240356445
    10. ''' → logprob: -4.894243240356445

Token 297: ' être' (ID: 9104)
  Prédit: ' représ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représ' → logprob: -1.3766921758651733
    2. 'être' → logprob: -1.5016921758651733
    3. ' être' → logprob: -1.8766921758651733
    4. 'car' → logprob: -2.501692295074463
    5. 'des' → logprob: -3.001692295074463
    6. 'represent' → logprob: -3.001692295074463
    7. 's' → logprob: -3.626692295074463
    8. ' des' → logprob: -3.876692295074463
    9. ''être' → logprob: -4.876692295074463
    10. ' ' → logprob: -4.876692295074463

Token 298: ' des' (ID: 731)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7991129159927368
    2. 'des' → logprob: -0.9241129159927368
    3. ' des' → logprob: -3.1741127967834473
    4. 'car' → logprob: -3.5491127967834473
    5. ' les' → logprob: -3.6741127967834473
    6. 'S' → logprob: -4.174112796783447
    7. 'l' → logprob: -5.299112796783447
    8. 'la' → logprob: -5.549112796783447
    9. '...' → logprob: -5.549112796783447
    10. 'com' → logprob: -5.799112796783447

Token 299: ' tuples' (ID: 112464)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.010977198369801044
    2. ' caractères' → logprob: -4.885977268218994
    3. 'élé' → logprob: -6.760977268218994
    4. 'str' → logprob: -7.260977268218994
    5. 'char' → logprob: -7.885977268218994
    6. 'chars' → logprob: -8.385976791381836
    7. 'cha' → logprob: -8.885976791381836
    8. 'strings' → logprob: -8.885976791381836
    9. 'c' → logprob: -8.885976791381836
    10. 'characters' → logprob: -9.260976791381836

Token 300: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24452775716781616
    2. 'for' → logprob: -2.619527816772461
    3. ')' → logprob: -2.869527816772461
    4. '[' → logprob: -3.119527816772461
    5. '(S' → logprob: -4.744527816772461
    6. '(
' → logprob: -4.869527816772461
    7. ',' → logprob: -5.119527816772461
    8. '()' → logprob: -5.494527816772461
    9. ']' → logprob: -5.994527816772461
    10. 's' → logprob: -5.994527816772461

Token 301: ' chaînes' (ID: 179904)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.31049644947052
    2. 'de' → logprob: -1.93549644947052
    3. 'chars' → logprob: -3.8104963302612305
    4. 'str' → logprob: -3.8104963302612305
    5. ' caractères' → logprob: -4.0604963302612305
    6. 'char' → logprob: -4.1854963302612305
    7. 'characters' → logprob: -4.8104963302612305
    8. '(int' → logprob: -4.9354963302612305
    9. '(str' → logprob: -5.0604963302612305
    10. '(char' → logprob: -5.3104963302612305

Token 302: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10691621154546738
    2. '(' → logprob: -2.9819161891937256
    3. ')' → logprob: -3.8569161891937256
    4. '[' → logprob: -5.731916427612305
    5. '
' → logprob: -5.731916427612305
    6. ' for' → logprob: -5.856916427612305
    7. '  
' → logprob: -5.856916427612305
    8. '#' → logprob: -5.981916427612305
    9. '(
' → logprob: -5.981916427612305
    10. '()' → logprob: -6.356916427612305

Token 303: ' sans' (ID: 9828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7633965611457825
    2. ')' → logprob: -1.0133965015411377
    3. 'for' → logprob: -3.0133965015411377
    4. 'S' → logprob: -4.013396739959717
    5. ' ' → logprob: -4.138396739959717
    6. ' (' → logprob: -4.638396739959717
    7. '()' → logprob: -4.763396739959717
    8. '[' → logprob: -5.013396739959717
    9. '(S' → logprob: -5.263396739959717
    10. '('' → logprob: -5.763396739959717

Token 304: ' avoir' (ID: 16595)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0750950276851654
    2. 'esp' → logprob: -3.4500949382781982
    3. ' espace' → logprob: -4.075095176696777
    4. ' espaces' → logprob: -5.075095176696777
    5. '_' → logprob: -5.950095176696777
    6. ' ' → logprob: -6.450095176696777
    7. '   
' → logprob: -6.825095176696777
    8. ' 
' → logprob: -6.950095176696777
    9. ')' → logprob: -7.075095176696777
    10. 'space' → logprob: -7.325095176696777

Token 305: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.1153059005737305
    2. 'avoir' → logprob: -1.8653059005737305
    3. ' avoir' → logprob: -1.9903059005737305
    4. ' à' → logprob: -2.3653059005737305
    5. ' jamais' → logprob: -3.1153059005737305
    6. 'auc' → logprob: -3.4903059005737305
    7. 's' → logprob: -3.7403059005737305
    8. 'esp' → logprob: -4.1153059005737305
    9. 'import' → logprob: -4.1153059005737305
    10. 'bes' → logprob: -4.2403059005737305

Token 306: ' vérifier' (ID: 93671)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.456250548362732
    2. ' vérifier' → logprob: -1.456250548362732
    3. 's' → logprob: -1.581250548362732
    4. ' initial' → logprob: -2.8312506675720215
    5. 'faire' → logprob: -3.2062506675720215
    6. ' cra' → logprob: -3.3312506675720215
    7. ' écrire' → logprob: -3.9562506675720215
    8. ' faire' → logprob: -4.0812506675720215
    9. 'mettre' → logprob: -4.3312506675720215
    10. '```' → logprob: -4.3312506675720215

Token 307: ' si' (ID: 1784)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.3700515031814575
    2. 'les' → logprob: -1.8700515031814575
    3. '[' → logprob: -1.9950515031814575
    4. '_' → logprob: -1.9950515031814575
    5. 'l' → logprob: -2.995051383972168
    6. 'si' → logprob: -3.120051383972168
    7. 'le' → logprob: -3.245051383972168
    8. ' la' → logprob: -3.620051383972168
    9. 's' → logprob: -3.745051383972168
    10. ' ' → logprob: -3.745051383972168

Token 308: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5147923231124878
    2. ' la' → logprob: -1.3897923231124878
    3. 'les' → logprob: -3.0147924423217773
    4. 'ces' → logprob: -3.2647924423217773
    5. ' elles' → logprob: -3.3897924423217773
    6. 'une' → logprob: -4.889792442321777
    7. 'elles' → logprob: -5.014792442321777
    8. ' une' → logprob: -5.514792442321777
    9. ''elles' → logprob: -5.889792442321777
    10. ' ' → logprob: -6.514792442321777

Token 309: ' clé' (ID: 83188)
  Prédit: 'clé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clé' → logprob: -1.0949530601501465
    2. ' clé' → logprob: -1.4699530601501465
    3. ' ' → logprob: -1.8449530601501465
    4. ' clés' → logprob: -2.0949530601501465
    5. 'cl' → logprob: -3.7199530601501465
    6. ' cle' → logprob: -4.0949530601501465
    7. 'key' → logprob: -4.3449530601501465
    8. ' cl' → logprob: -4.8449530601501465
    9. ' tuple' → logprob: -4.9699530601501465
    10. 'tuple' → logprob: -4.9699530601501465

Token 310: ' existe' (ID: 19498)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.771819531917572
    2. ' existe' → logprob: -1.2718195915222168
    3. 'exist' → logprob: -2.521819591522217
    4. ' est' → logprob: -3.021819591522217
    5. ')' → logprob: -3.271819591522217
    6. ' ' → logprob: -3.896819591522217
    7. ' in' → logprob: -4.646819591522217
    8. ' exist' → logprob: -4.771819591522217
    9. ' )' → logprob: -4.771819591522217
    10. ' exists' → logprob: -5.021819591522217

Token 311: ' avant' (ID: 13339)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0532565638422966
    2. '()' → logprob: -3.8032565116882324
    3. 'for' → logprob: -4.428256511688232
    4. '(' → logprob: -5.178256511688232
    5. ']' → logprob: -5.678256511688232
    6. '(S' → logprob: -6.053256511688232
    7. '[' → logprob: -6.428256511688232
    8. 'S' → logprob: -7.303256511688232
    9. '#' → logprob: -7.428256511688232
    10. '
' → logprob: -7.553256511688232

Token 312: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18525955080986023
    2. '):' → logprob: -1.9352595806121826
    3. ' )' → logprob: -4.6852593421936035
    4. ').' → logprob: -5.4352593421936035
    5. ':' → logprob: -5.9352593421936035
    6. ']' → logprob: -6.5602593421936035
    7. 'def' → logprob: -6.9352593421936035
    8. 'S' → logprob: -7.0602593421936035
    9. 'for' → logprob: -7.1852593421936035
    10. ' ):' → logprob: -7.1852593421936035

Token 313: ''in' (ID: 17942)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -1.6996840238571167
    2. 'ex' → logprob: -1.8246840238571167
    3. 'D' → logprob: -2.0746841430664062
    4. 'S' → logprob: -2.4496841430664062
    5. 'in' → logprob: -2.4496841430664062
    6. ''aj' → logprob: -2.6996841430664062
    7. ']' → logprob: -3.1996841430664062
    8. 'avoir' → logprob: -3.6996841430664062
    9. ' S' → logprob: -3.8246841430664062
    10. ' D' → logprob: -3.9496841430664062

Token 314: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.02567911334335804
    2. 'crement' → logprob: -4.400679111480713
    3. 'cré' → logprob: -4.400679111480713
    4. 'c' → logprob: -8.275679588317871
    5. 'cer' → logprob: -8.650679588317871
    6. 'itial' → logprob: -8.775679588317871
    7. 'cre' → logprob: -8.775679588317871
    8. 'ter' → logprob: -11.900679588317871
    9. 'CREMENT' → logprob: -11.900679588317871
    10. '[' → logprob: -12.025679588317871

Token 315: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.0027145228814333677
    2. 'é' → logprob: -6.12771463394165
    3. 'ement' → logprob: -8.127714157104492
    4. 'ment' → logprob: -8.752714157104492
    5. 'éments' → logprob: -10.502714157104492
    6. 'ém' → logprob: -11.127714157104492
    7. '   ' → logprob: -11.377714157104492
    8. 'è' → logprob: -12.627714157104492
    9. '```' → logprob: -12.877714157104492
    10. 'éter' → logprob: -13.002714157104492

Token 316: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.000215457082958892
    2. 'ent' → logprob: -8.625215530395508
    3. 'ant' → logprob: -11.125215530395508
    4. 'e' → logprob: -11.875215530395508
    5. 'é' → logprob: -12.250215530395508
    6. 'ment' → logprob: -12.875215530395508
    7. '```' → logprob: -13.375215530395508
    8. ')' → logprob: -14.125215530395508
    9. '}' → logprob: -14.250215530395508
    10. ']' → logprob: -14.500215530395508

Token 317: '.

' (ID: 364)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7588707804679871
    2. 'for' → logprob: -0.8838707804679871
    3. '(
' → logprob: -3.508870840072632
    4. ')' → logprob: -3.633870840072632
    5. '
' → logprob: -4.008870601654053
    6. '[' → logprob: -4.633870601654053
    7. '()' → logprob: -4.758870601654053
    8. '[
' → logprob: -6.008870601654053
    9. '(S' → logprob: -6.008870601654053
    10. '#' → logprob: -6.133870601654053

Token 318: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028086788952350616
    2. '
' → logprob: -6.377808570861816
    3. ' for' → logprob: -7.002808570861816
    4. 'i' → logprob: -9.627808570861816
    5. ' 
' → logprob: -10.127808570861816
    6. '  
' → logprob: -10.877808570861816
    7. '#' → logprob: -11.377808570861816
    8. '' → logprob: -11.752808570861816
    9. '\n' → logprob: -12.002808570861816
    10. 'n' → logprob: -12.377808570861816

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39544907212257385
    2. '=' → logprob: -1.1454490423202515
    3. '_' → logprob: -5.145449161529541
    4. '[' → logprob: -6.020449161529541
    5. 's' → logprob: -9.020448684692383
    6. ' ' → logprob: -9.770448684692383
    7. ',' → logprob: -10.395448684692383
    8. '[]' → logprob: -10.770448684692383
    9. ')' → logprob: -11.395448684692383
    10. '_=' → logprob: -11.520448684692383

Token 320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002172385808080435
    2. ' ' → logprob: -6.252172470092773
    3. '[]' → logprob: -8.877172470092773
    4. 'True' → logprob: -10.752172470092773
    5. 'False' → logprob: -10.877172470092773
    6. '{}' → logprob: -11.252172470092773
    7. 'default' → logprob: -11.502172470092773
    8. '[' → logprob: -11.877172470092773
    9. '""' → logprob: -12.252172470092773
    10. '"' → logprob: -12.752172470092773

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024870390188880265
    2. 'default' → logprob: -8.750248908996582
    3. '{}' → logprob: -10.125248908996582
    4. '[]' → logprob: -10.250248908996582
    5. 'int' → logprob: -13.000248908996582
    6. ' ' → logprob: -13.000248908996582
    7. 'S' → logprob: -13.375248908996582
    8. '{' → logprob: -13.500248908996582
    9. '[' → logprob: -13.500248908996582
    10. '1' → logprob: -13.500248908996582

Token 322: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6533174514770508
    2. 'for' → logprob: -0.7783174514770508
    3. ' for' → logprob: -4.153317451477051
    4. '\n' → logprob: -6.278317451477051
    5. '' → logprob: -6.778317451477051
    6. ' 
' → logprob: -7.403317451477051
    7. '
' → logprob: -7.778317451477051
    8. ' ' → logprob: -8.65331745147705
    9. '<|end|>' → logprob: -8.65331745147705
    10. '  
' → logprob: -9.15331745147705

Token 323: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09887533634901047
    2. '
' → logprob: -2.9738752841949463
    3. ' for' → logprob: -3.4738752841949463
    4. '\n' → logprob: -4.473875522613525
    5. '' → logprob: -8.098875045776367
    6. '
' → logprob: -8.973875045776367
    7. '\' → logprob: -9.598875045776367
    8. ' 
' → logprob: -9.848875045776367
    9. '  
' → logprob: -11.348875045776367
    10. ':' → logprob: -11.723875045776367

Token 324: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010787796927616
    2. ' for' → logprob: -6.8760786056518555
    3. 'i' → logprob: -11.126078605651855
    4. '
' → logprob: -11.126078605651855
    5. 'For' → logprob: -12.501078605651855
    6. '#' → logprob: -12.626078605651855
    7. '' → logprob: -14.126078605651855
    8. ' 
' → logprob: -14.376078605651855
    9. 'count' → logprob: -14.376078605651855
    10. 'ans' → logprob: -14.501078605651855

Token 325: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001956348307430744
    2. ' ans' → logprob: -6.626956462860107
    3. '0' → logprob: -8.87695598602295
    4. '<|end|>' → logprob: -9.37695598602295
    5. 'ans' → logprob: -9.50195598602295
    6. '  ' → logprob: -9.87695598602295
    7. 'a' → logprob: -9.87695598602295
    8. ' a' → logprob: -10.12695598602295
    9. ' )' → logprob: -10.50195598602295
    10. ' =' → logprob: -10.62695598602295

Token 326: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.4674925208091736
    2. 'int' → logprob: -1.3424925804138184
    3. ' variable' → logprob: -3.5924925804138184
    4. 'counter' → logprob: -3.8424925804138184
    5. ' ' → logprob: -4.342492580413818
    6. '0' → logprob: -4.592492580413818
    7. 'val' → logprob: -4.592492580413818
    8. 'ent' → logprob: -5.342492580413818
    9. '
' → logprob: -5.842492580413818
    10. '=' → logprob: -5.842492580413818

Token 327: ' nom' (ID: 8080)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3497360348701477
    2. ' =' → logprob: -2.599735975265503
    3. ' ans' → logprob: -2.849735975265503
    4. '_' → logprob: -2.974735975265503
    5. '<|end|>' → logprob: -2.974735975265503
    6. '=' → logprob: -4.599736213684082
    7. '_s' → logprob: -4.724736213684082
    8. ' _' → logprob: -4.724736213684082
    9. 'ans' → logprob: -4.849736213684082
    10. '
' → logprob: -6.099736213684082

Token 328: 'm' (ID: 76)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5016182661056519
    2. '=' → logprob: -1.0016182661056519
    3. 'ée' → logprob: -3.8766183853149414
    4. 'e' → logprob: -7.126618385314941
    5. 'bre' → logprob: -7.126618385314941
    6. 'é' → logprob: -7.251618385314941
    7. 'inal' → logprob: -7.251618385314941
    8. ' ' → logprob: -7.376618385314941
    9. 'inale' → logprob: -7.751618385314941
    10. 's' → logprob: -8.376618385314941

Token 329: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.028466634452342987
    2. 'é' → logprob: -3.6534667015075684
    3. '=' → logprob: -6.903466701507568
    4. 'e' → logprob: -6.903466701507568
    5. 'ee' → logprob: -9.65346622467041
    6. ' =' → logprob: -10.52846622467041
    7. 'al' → logprob: -11.65346622467041
    8. 'ation' → logprob: -11.77846622467041
    9. 'def' → logprob: -12.27846622467041
    10. 'a' → logprob: -12.27846622467041

Token 330: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.030218087136745453
    2. ' ans' → logprob: -3.6552181243896484
    3. 'answer' → logprob: -6.530218124389648
    4. 'count' → logprob: -6.655218124389648
    5. '(ans' → logprob: -8.030218124389648
    6. 'counter' → logprob: -8.405218124389648
    7. '0' → logprob: -8.530218124389648
    8. ' ' → logprob: -9.030218124389648
    9. '	ans' → logprob: -10.280218124389648
    10. 's' → logprob: -10.655218124389648

Token 331: ' avec' (ID: 3937)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5086674094200134
    2. '=' → logprob: -1.5086674690246582
    3. ' =' → logprob: -2.633667469024658
    4. 'for' → logprob: -3.258667469024658
    5. ' ' → logprob: -3.383667469024658
    6. '<|end|>' → logprob: -4.508667469024658
    7. '+' → logprob: -5.633667469024658
    8. ' +=' → logprob: -5.758667469024658
    9. '0' → logprob: -6.008667469024658
    10. ')' → logprob: -6.133667469024658

Token 332: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. 'int' → logprob: -18.875804901123047
    4. '1' → logprob: -19.000804901123047
    5. '=' → logprob: -19.625804901123047
    6. ' ' → logprob: -19.875804901123047
    7. ' zero' → logprob: -20.625804901123047
    8. '  ' → logprob: -20.625804901123047
    9. ' =' → logprob: -21.125804901123047
    10. 'zero' → logprob: -21.125804901123047

Token 333: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004039785999339074
    2. ' ' → logprob: -7.875403881072998
    3. 'val' → logprob: -11.500404357910156
    4. 'value' → logprob: -12.125404357910156
    5. 'int' → logprob: -12.750404357910156
    6. '=' → logprob: -13.500404357910156
    7. ' value' → logprob: -14.000404357910156
    8. 'space' → logprob: -14.125404357910156
    9. 'z' → logprob: -14.250404357910156
    10. ' =' → logprob: -14.625404357910156

Token 334: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022118736524134874
    2. ' ' → logprob: -6.127212047576904
    3. '=' → logprob: -10.752211570739746
    4. ' =' → logprob: -12.377211570739746
    5. '(' → logprob: -13.877211570739746
    6. '1' → logprob: -16.377212524414062
    7. ' ' → logprob: -16.877212524414062
    8. ' 
' → logprob: -17.002212524414062
    9. ',' → logprob: -17.502212524414062
    10. '_' → logprob: -17.877212524414062

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '=' → logprob: -15.125009536743164
    4. '(' → logprob: -16.875009536743164
    5. ' =' → logprob: -18.375009536743164
    6. '1' → logprob: -19.125009536743164
    7. 'ans' → logprob: -20.000009536743164
    8. '
' → logprob: -20.312509536743164
    9. '`' → logprob: -20.437509536743164
    10. '00' → logprob: -20.437509536743164

Token 336: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10899660736322403
    2. 'for' → logprob: -2.358996629714966
    3. ' for' → logprob: -5.108996391296387
    4. '<|end|>' → logprob: -7.233996391296387
    5. '\n' → logprob: -7.358996391296387
    6. '' → logprob: -7.733996391296387
    7. '
' → logprob: -8.358996391296387
    8. ' ' → logprob: -8.733996391296387
    9. ' 
' → logprob: -9.108996391296387
    10. '

' → logprob: -9.608996391296387

Token 337: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002509687910787761
    2. ' for' → logprob: -8.500250816345215
    3. 'i' → logprob: -10.375250816345215
    4. '
' → logprob: -11.375250816345215
    5. '#' → logprob: -14.375250816345215
    6. ')' → logprob: -14.750250816345215
    7. 'from' → logprob: -14.875250816345215
    8. 't' → logprob: -15.125250816345215
    9. '' → logprob: -15.250250816345215
    10. 'f' → logprob: -15.375250816345215

Token 338: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10854250937700272
    2. ' =' → logprob: -3.2335424423217773
    3. '=' → logprob: -3.4835424423217773
    4. 'for' → logprob: -4.358542442321777
    5. 'space' → logprob: -5.358542442321777
    6. '_' → logprob: -5.608542442321777
    7. ' for' → logprob: -5.608542442321777
    8. ' space' → logprob: -6.233542442321777
    9. '.' → logprob: -6.858542442321777
    10. '
' → logprob: -7.733542442321777

Token 339: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48259592056274414
    2. ' =' → logprob: -0.9825959205627441
    3. ' ' → logprob: -4.982595920562744
    4. ' +=' → logprob: -7.232595920562744
    5. '+=' → logprob: -7.732595920562744
    6. ')' → logprob: -9.107595443725586
    7. ',' → logprob: -9.357595443725586
    8. '_' → logprob: -10.232595443725586
    9. '.' → logprob: -10.232595443725586
    10. ' 
' → logprob: -10.982595443725586

Token 340: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.26685619354248047
    2. 'e' → logprob: -2.3918561935424805
    3. 'i' → logprob: -2.6418561935424805
    4. 'era' → logprob: -3.6418561935424805
    5. 'ra' → logprob: -3.8918561935424805
    6. '=' → logprob: -5.1418561935424805
    7. 'u' → logprob: -5.1418561935424805
    8. 'a' → logprob: -5.2668561935424805
    9. 'int' → logprob: -6.5168561935424805
    10. '#' → logprob: -6.6418561935424805

Token 341: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6476112008094788
    2. ' ' → logprob: -0.7726112008094788
    3. ' =' → logprob: -4.772611141204834
    4. '  ' → logprob: -6.272611141204834
    5. ' a' → logprob: -6.647611141204834
    6. '=' → logprob: -7.022611141204834
    7. ' to' → logprob: -7.272611141204834
    8. ' pour' → logprob: -8.147611618041992
    9. ' ' → logprob: -8.397611618041992
    10. 'à' → logprob: -8.772611618041992

Token 342: ' accum' (ID: 23148)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.14414465427398682
    2. 'acc' → logprob: -2.2691445350646973
    3. '0' → logprob: -4.644144535064697
    4. ' compter' → logprob: -4.644144535064697
    5. 'stock' → logprob: -5.144144535064697
    6. 'com' → logprob: -5.769144535064697
    7. 'cont' → logprob: -7.144144535064697
    8. 'cum' → logprob: -7.644144535064697
    9. 'c' → logprob: -8.144145011901855
    10. 'calcul' → logprob: -8.394145011901855

Token 343: 'uler' (ID: 11802)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4039040207862854
    2. 'uler' → logprob: -1.9039039611816406
    3. 'ule' → logprob: -2.7789039611816406
    4. 'u' → logprob: -3.2789039611816406
    5. 'es' → logprob: -4.028903961181641
    6. 'ul' → logprob: -4.028903961181641
    7. 'uer' → logprob: -4.778903961181641
    8. 'ules' → logprob: -5.153903961181641
    9. 'ue' → logprob: -5.278903961181641
    10. 'é' → logprob: -5.403903961181641

Token 344: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8796381950378418
    2. '1' → logprob: -1.2546381950378418
    3. ' ' → logprob: -1.3796381950378418
    4. ' la' → logprob: -4.004638195037842
    5. 'le' → logprob: -4.879638195037842
    6. ' le' → logprob: -5.754638195037842
    7. 'l' → logprob: -5.754638195037842
    8. ' l' → logprob: -5.879638195037842
    9. 'es' → logprob: -6.254638195037842
    10. 's' → logprob: -6.504638195037842

Token 345: ' probablement' (ID: 87740)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3053266108036041
    2. ' ' → logprob: -2.0553267002105713
    3. '1' → logprob: -3.1803267002105713
    4. '\t' → logprob: -3.3053267002105713
    5. 'for' → logprob: -5.055326461791992
    6. '#' → logprob: -5.180326461791992
    7. '
' → logprob: -5.305326461791992
    8. '	' → logprob: -5.680326461791992
    9. 'tabs' → logprob: -5.930326461791992
    10. '=' → logprob: -6.055326461791992

Token 346: ' le' (ID: 505)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5567586421966553
    2. ' ' → logprob: -1.4317586421966553
    3. ' au' → logprob: -2.8067586421966553
    4. ' les' → logprob: -3.1817586421966553
    5. ' aux' → logprob: -4.056758880615234
    6. ' le' → logprob: -4.306758880615234
    7. ' des' → logprob: -4.556758880615234
    8. 'au' → logprob: -4.556758880615234
    9. ' une' → logprob: -4.931758880615234
    10. ' a' → logprob: -5.431758880615234

Token 347: ' résultat' (ID: 62556)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.2512878477573395
    2. 'nombre' → logprob: -1.751287817955017
    3. ' résultat' → logprob: -3.8762879371643066
    4. ' ' → logprob: -4.251287937164307
    5. ' total' → logprob: -5.751287937164307
    6. 's' → logprob: -5.876287937164307
    7. 'rés' → logprob: -6.626287937164307
    8. 'e' → logprob: -7.001287937164307
    9. ' compteur' → logprob: -7.001287937164307
    10. ' nombres' → logprob: -7.376287937164307

Token 348: ' final' (ID: 1721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4088178873062134
    2. '
' → logprob: -1.4088178873062134
    3. ' ' → logprob: -3.283817768096924
    4. ' for' → logprob: -3.908817768096924
    5. ',' → logprob: -4.908817768096924
    6. '' → logprob: -5.158817768096924
    7. ')' → logprob: -5.783817768096924
    8. '.' → logprob: -5.908817768096924
    9. '

' → logprob: -5.908817768096924
    10. '\n' → logprob: -6.283817768096924

Token 349: ' ou' (ID: 2031)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09945213794708252
    2. 'for' → logprob: -2.474452018737793
    3. '
' → logprob: -5.849452018737793
    4. ' for' → logprob: -5.974452018737793
    5. '

' → logprob: -6.474452018737793
    6. ' 
' → logprob: -6.849452018737793
    7. '\n' → logprob: -7.224452018737793
    8. '  
' → logprob: -7.474452018737793
    9. '' → logprob: -8.224452018737793
    10. ' ' → logprob: -8.349452018737793

Token 350: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4744056463241577
    2. ' le' → logprob: -2.0994057655334473
    3. ' un' → logprob: -2.0994057655334473
    4. ' ' → logprob: -2.2244057655334473
    5. '0' → logprob: -2.4744057655334473
    6. ' une' → logprob: -2.5994057655334473
    7. 'le' → logprob: -2.8494057655334473
    8. ' compter' → logprob: -2.9744057655334473
    9. ' l' → logprob: -3.8494057655334473
    10. 'un' → logprob: -4.099405765533447

Token 351: ' compt' (ID: 39238)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7431087493896484
    2. 'es' → logprob: -2.1181087493896484
    3. ' nombre' → logprob: -2.7431087493896484
    4. 's' → logprob: -2.9931087493896484
    5. '
' → logprob: -2.9931087493896484
    6. 'total' → logprob: -3.2431087493896484
    7. 'for' → logprob: -3.7431087493896484
    8. '\n' → logprob: -3.9931087493896484
    9. 'esp' → logprob: -3.9931087493896484
    10. 'count' → logprob: -4.243108749389648

Token 352: 'age' (ID: 477)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40740954875946045
    2. 'ateur' → logprob: -2.28240966796875
    3. '   ' → logprob: -2.78240966796875
    4. ' =' → logprob: -3.03240966796875
    5. 'u' → logprob: -3.78240966796875
    6. 'i' → logprob: -4.40740966796875
    7. ' ' → logprob: -4.90740966796875
    8. 'eur' → logprob: -5.03240966796875
    9. ' +=' → logprob: -5.28240966796875
    10. '+=' → logprob: -5.28240966796875

Token 353: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03903183713555336
    2. '
' → logprob: -3.539031744003296
    3. ' for' → logprob: -4.789031982421875
    4. ')' → logprob: -7.789031982421875
    5. ' ' → logprob: -9.664031982421875
    6. '  
' → logprob: -9.914031982421875
    7. ',' → logprob: -10.039031982421875
    8. ' 
' → logprob: -10.039031982421875
    9. '

' → logprob: -10.039031982421875
    10. '.' → logprob: -10.039031982421875

Token 354: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007970004808157682
    2. ' for' → logprob: -7.250796794891357
    3. '
' → logprob: -9.500797271728516
    4. ' 
' → logprob: -12.500797271728516
    5. 'i' → logprob: -12.625797271728516
    6. ')' → logprob: -13.500797271728516
    7. '  
' → logprob: -14.125797271728516
    8. '' → logprob: -14.250797271728516
    9. ' ' → logprob: -14.875797271728516
    10. 'range' → logprob: -15.500797271728516

Token 355: ' Première' (ID: 179764)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008615575497969985
    2. ' for' → logprob: -7.125861644744873
    3. 'i' → logprob: -10.500861167907715
    4. 'from' → logprob: -11.125861167907715
    5. 'range' → logprob: -12.500861167907715
    6. 'f' → logprob: -13.250861167907715
    7. 'd' → logprob: -13.875861167907715
    8. 'n' → logprob: -14.000861167907715
    9. 'b' → logprob: -14.250861167907715
    10. '```' → logprob: -14.250861167907715

Token 356: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022507352754473686
    2. ' for' → logprob: -3.897507429122925
    3. '_' → logprob: -7.522507190704346
    4. ' boucle' → logprob: -7.772507190704346
    5. 'range' → logprob: -7.897507190704346
    6. 'bou' → logprob: -9.022507667541504
    7. ')' → logprob: -9.397507667541504
    8. ' ' → logprob: -10.147507667541504
    9. '
' → logprob: -10.147507667541504
    10. ':' → logprob: -10.397507667541504

Token 357: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011415231710998341
    2. 'i' → logprob: -9.250114440917969
    3. ' for' → logprob: -11.000114440917969
    4. '
' → logprob: -13.625114440917969
    5. ':' → logprob: -17.12511444091797
    6. 'f' → logprob: -17.62511444091797
    7. 'range' → logprob: -17.87511444091797
    8. '```' → logprob: -18.00011444091797
    9. '_' → logprob: -18.75011444091797
    10. 'r' → logprob: -19.00011444091797

Token 358: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.2166411478538066e-05
    2. ' for' → logprob: -9.875052452087402
    3. 'range' → logprob: -14.875052452087402
    4. 'i' → logprob: -15.500052452087402
    5. '
' → logprob: -17.250051498413086
    6. 'f' → logprob: -18.000051498413086
    7. '```' → logprob: -19.000051498413086
    8. 'fo' → logprob: -19.125051498413086
    9. '_' → logprob: -19.250051498413086
    10. 'r' → logprob: -20.250051498413086

Token 359: ' considère' (ID: 176437)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010152203030884266
    2. ' for' → logprob: -4.635152339935303
    3. 'range' → logprob: -8.510151863098145
    4. 'or' → logprob: -10.010151863098145
    5. ' =' → logprob: -10.385151863098145
    6. 'r' → logprob: -10.635151863098145
    7. 'f' → logprob: -11.010151863098145
    8. '=' → logprob: -11.010151863098145
    9. 'n' → logprob: -11.260151863098145
    10. 'i' → logprob: -11.260151863098145

Token 360: ' toutes' (ID: 17502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01452485378831625
    2. ' i' → logprob: -4.514524936676025
    3. '_' → logprob: -5.889524936676025
    4. 'range' → logprob: -7.764524936676025
    5. 'N' → logprob: -9.889524459838867
    6. '_i' → logprob: -10.014524459838867
    7. ' range' → logprob: -10.264524459838867
    8. 'len' → logprob: -10.889524459838867
    9. 'a' → logprob: -11.014524459838867
    10. 'for' → logprob: -11.264524459838867

Token 361: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6781089901924133
    2. 'i' → logprob: -1.1781089305877686
    3. ' i' → logprob: -2.1781089305877686
    4. ' range' → logprob: -2.6781089305877686
    5. '_' → logprob: -6.428109169006348
    6. 'for' → logprob: -9.053109169006348
    7. '_range' → logprob: -9.053109169006348
    8. '_i' → logprob: -9.178109169006348
    9. ')' → logprob: -9.553109169006348
    10. 'r' → logprob: -9.803109169006348

Token 362: ' comb' (ID: 4134)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1009264662861824
    2. ' i' → logprob: -2.350926399230957
    3. 'range' → logprob: -8.600926399230957
    4. ' ' → logprob: -8.975926399230957
    5. ' range' → logprob: -9.600926399230957
    6. 'r' → logprob: -9.725926399230957
    7. '_' → logprob: -10.600926399230957
    8. 's' → logprob: -10.975926399230957
    9. 'k' → logprob: -10.975926399230957
    10. 'prefix' → logprob: -11.225926399230957

Token 363: 'inais' (ID: 42744)
  Prédit: 'ina'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ina' → logprob: -0.48975756764411926
    2. 'for' → logprob: -1.8647575378417969
    3. 'inations' → logprob: -2.989757537841797
    4. 'ination' → logprob: -3.114757537841797
    5. 'in' → logprob: -3.614757537841797
    6. 'e' → logprob: -3.739757537841797
    7. 'i' → logprob: -3.864757537841797
    8. 'inais' → logprob: -4.114757537841797
    9. 'es' → logprob: -4.864757537841797
    10. 'le' → logprob: -5.364757537841797

Token 364: 'ons' (ID: 1808)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20317420363426208
    2. 'r' → logprob: -2.953174114227295
    3. '#' → logprob: -3.453174114227295
    4. 's' → logprob: -3.953174114227295
    5. 'ts' → logprob: -4.078174114227295
    6. '```' → logprob: -4.578174114227295
    7. 'ais' → logprob: -5.078174114227295
    8. 'res' → logprob: -5.203174114227295
    9. 'ons' → logprob: -5.328174114227295
    10. 'sons' → logprob: -5.703174114227295

Token 365: ' possibles' (ID: 97753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.447674036026001
    2. ' for' → logprob: -1.322674036026001
    3. ' i' → logprob: -2.572674036026001
    4. 'i' → logprob: -4.197673797607422
    5. 'range' → logprob: -7.072673797607422
    6. ' de' → logprob: -7.447673797607422
    7. ',' → logprob: -8.197673797607422
    8. 'de' → logprob: -8.447673797607422
    9. '_' → logprob: -8.447673797607422
    10. ' range' → logprob: -8.447673797607422

Token 366: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08779924362897873
    2. ' for' → logprob: -3.087799310684204
    3. 'i' → logprob: -3.837799310684204
    4. ' i' → logprob: -4.337799072265625
    5. 'range' → logprob: -5.712799072265625
    6. ' range' → logprob: -9.087799072265625
    7. 'de' → logprob: -9.962799072265625
    8. '
' → logprob: -9.962799072265625
    9. 'd' → logprob: -10.087799072265625
    10. 'pour' → logprob: -10.337799072265625

Token 367: ' caractères' (ID: 183106)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09718790650367737
    2. ' i' → logprob: -2.4721879959106445
    3. 'range' → logprob: -5.2221879959106445
    4. 'r' → logprob: -6.9721879959106445
    5. ' range' → logprob: -7.5971879959106445
    6. 'length' → logprob: -7.9721879959106445
    7. 'k' → logprob: -8.347187995910645
    8. 'l' → logprob: -9.097187995910645
    9. 'prefix' → logprob: -9.847187995910645
    10. 'S' → logprob: -9.972187995910645

Token 368: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6719563007354736
    2. ' for' → logprob: -0.9219563007354736
    3. 'for' → logprob: -2.6719563007354736
    4. 'i' → logprob: -3.9219563007354736
    5. ' in' → logprob: -6.5469560623168945
    6. ' range' → logprob: -8.046956062316895
    7. 'range' → logprob: -8.296956062316895
    8. ' ' → logprob: -8.671956062316895
    9. ',' → logprob: -9.671956062316895
    10. ' de' → logprob: -10.046956062316895

Token 369: ' S' (ID: 336)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5126926302909851
    2. '0' → logprob: -1.7626926898956299
    3. 'S' → logprob: -2.63769268989563
    4. ' range' → logprob: -2.76269268989563
    5. 'i' → logprob: -3.01269268989563
    6. '1' → logprob: -4.262692451477051
    7. ' i' → logprob: -4.512692451477051
    8. ' S' → logprob: -4.887692451477051
    9. ' ' → logprob: -4.887692451477051
    10. 'r' → logprob: -6.137692451477051

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0415204763412476
    2. 'for' → logprob: -1.0415204763412476
    3. ' for' → logprob: -1.9165204763412476
    4. ' ' → logprob: -2.791520595550537
    5. ' i' → logprob: -4.041520595550537
    6. 'i' → logprob: -4.041520595550537
    7. 'range' → logprob: -4.041520595550537
    8. 'r' → logprob: -5.291520595550537
    9. ')' → logprob: -5.291520595550537
    10. '_' → logprob: -5.416520595550537

Token 371: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004001584369689226
    2. ' for' → logprob: -6.129001617431641
    3. ':' → logprob: -7.129001617431641
    4. '
' → logprob: -7.379001617431641
    5. 'i' → logprob: -8.75400161743164
    6. ':
' → logprob: -9.62900161743164
    7. 'r' → logprob: -10.00400161743164
    8. ' 
' → logprob: -10.12900161743164
    9. 'range' → logprob: -10.87900161743164
    10. '  
' → logprob: -11.00400161743164

Token 372: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.27978965640068054
    2. 'i' → logprob: -2.029789686203003
    3. 'for' → logprob: -3.029789686203003
    4. ' for' → logprob: -3.279789686203003
    5. 'range' → logprob: -4.654789447784424
    6. ' ' → logprob: -4.904789447784424
    7. ' range' → logprob: -6.029789447784424
    8. 'r' → logprob: -6.529789447784424
    9. ')' → logprob: -6.529789447784424
    10. ' 
' → logprob: -7.404789447784424

Token 373: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43176522850990295
    2. 'i' → logprob: -1.5567651987075806
    3. 'range' → logprob: -2.43176531791687
    4. ' for' → logprob: -3.55676531791687
    5. ' i' → logprob: -4.306765079498291
    6. 'r' → logprob: -5.556765079498291
    7. ' range' → logprob: -6.181765079498291
    8. ' ' → logprob: -6.306765079498291
    9. '   ' → logprob: -7.556765079498291
    10. ':' → logprob: -7.681765079498291

Token 374: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35458627343177795
    2. ' ' → logprob: -2.479586362838745
    3. ':' → logprob: -2.729586362838745
    4. ' for' → logprob: -3.229586362838745
    5. ' in' → logprob: -3.479586362838745
    6. ' range' → logprob: -3.979586362838745
    7. 'for' → logprob: -3.979586362838745
    8. 'range' → logprob: -4.604586124420166
    9. 'import' → logprob: -4.979586124420166
    10. ' ,' → logprob: -4.979586124420166

Token 375: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7838414311408997
    2. '1' → logprob: -1.6588413715362549
    3. ' N' → logprob: -1.6588413715362549
    4. ' i' → logprob: -2.658841371536255
    5. 'N' → logprob: -3.533841371536255
    6. 'i' → logprob: -3.658841371536255
    7. 'len' → logprob: -5.033841609954834
    8. ' à' → logprob: -5.283841609954834
    9. ' len' → logprob: -5.408841609954834
    10. 'à' → logprob: -5.783841609954834

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6006070971488953
    2. 'N' → logprob: -1.35060715675354
    3. 'i' → logprob: -1.97560715675354
    4. 'len' → logprob: -3.10060715675354
    5. ' N' → logprob: -5.850606918334961
    6. ' ' → logprob: -5.975606918334961
    7. ' i' → logprob: -6.600606918334961
    8. ' len' → logprob: -7.975606918334961
    9. '...' → logprob: -8.475606918334961
    10. 'un' → logprob: -8.600606918334961

Token 377: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5447700619697571
    2. ' for' → logprob: -1.0447700023651123
    3. 'for' → logprob: -3.0447700023651123
    4. ' i' → logprob: -5.669770240783691
    5. ',' → logprob: -5.794770240783691
    6. ' ,' → logprob: -6.169770240783691
    7. '1' → logprob: -6.544770240783691
    8. ' s' → logprob: -6.919770240783691
    9. '  ' → logprob: -6.919770240783691
    10. 'x' → logprob: -7.169770240783691

Token 378: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.536059558391571
    2. ' range' → logprob: -0.911059558391571
    3. ' la' → logprob: -5.411059379577637
    4. 'i' → logprob: -5.911059379577637
    5. ' i' → logprob: -6.161059379577637
    6. 'la' → logprob: -7.536059379577637
    7. ' ' → logprob: -8.161059379577637
    8. 'S' → logprob: -8.161059379577637
    9. 'r' → logprob: -8.286059379577637
    10. 're' → logprob: -8.536059379577637

Token 379: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18048784136772156
    2. ' range' → logprob: -2.180487871170044
    3. ' ' → logprob: -3.805487871170044
    4. 'range' → logprob: -4.430487632751465
    5. 'i' → logprob: -4.555487632751465
    6. ' for' → logprob: -5.305487632751465
    7. ' in' → logprob: -7.930487632751465
    8. 'for' → logprob: -7.930487632751465
    9. ' index' → logprob: -8.555487632751465
    10. '  ' → logprob: -8.680487632751465

Token 380: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6983572840690613
    2. 'for' → logprob: -0.6983572840690613
    3. ' i' → logprob: -6.823357105255127
    4. ' in' → logprob: -6.948357105255127
    5. 'range' → logprob: -7.698357105255127
    6. ' ' → logprob: -7.698357105255127
    7. ' range' → logprob: -7.823357105255127
    8. '
' → logprob: -8.073357582092285
    9. ':' → logprob: -8.073357582092285
    10. 'f' → logprob: -8.823357582092285

Token 381: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008164160535670817
    2. ' for' → logprob: -7.625816345214844
    3. 'from' → logprob: -8.125816345214844
    4. '
' → logprob: -10.500816345214844
    5. 'f' → logprob: -13.000816345214844
    6. 'fo' → logprob: -14.250816345214844
    7. 'import' → logprob: -14.500816345214844
    8. ' 
' → logprob: -14.625816345214844
    9. 'range' → logprob: -15.250816345214844
    10. '  
' → logprob: -15.625816345214844

Token 382: ' i' (ID: 575)
  Prédit: ' mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.8882685899734497
    2. ' i' → logprob: -1.6382685899734497
    3. 'mask' → logprob: -1.6382685899734497
    4. 'i' → logprob: -1.8882685899734497
    5. ' bit' → logprob: -3.88826847076416
    6. 'bit' → logprob: -4.76326847076416
    7. 'bits' → logprob: -5.38826847076416
    8. ' bits' → logprob: -5.38826847076416
    9. '_mask' → logprob: -5.88826847076416
    10. 'b' → logprob: -5.88826847076416

Token 383: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.037389203906059265
    2. 'in' → logprob: -3.7873892784118652
    3. ' ' → logprob: -4.287389278411865
    4. ',' → logprob: -8.787388801574707
    5. ' ,' → logprob: -10.537388801574707
    6. ' i' → logprob: -10.787388801574707
    7. '  ' → logprob: -10.787388801574707
    8. 'range' → logprob: -11.599888801574707
    9. 'space' → logprob: -11.599888801574707
    10. ' ' → logprob: -12.037388801574707

Token 384: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759743452072144
    2. 'range' → logprob: -0.8259743452072144
    3. ' ' → logprob: -10.450974464416504
    4. '   ' → logprob: -13.575974464416504
    5. 'r' → logprob: -13.700974464416504
    6. '  ' → logprob: -14.325974464416504
    7. '	range' → logprob: -14.450974464416504
    8. 'rang' → logprob: -14.575974464416504
    9. '(range' → logprob: -15.200974464416504
    10. '0' → logprob: -15.325974464416504

Token 385: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12866631150245667
    2. '(N' → logprob: -2.128666400909424
    3. '(len' → logprob: -6.378666400909424
    4. '((' → logprob: -10.628665924072266
    5. '(n' → logprob: -12.003665924072266
    6. '(M' → logprob: -12.753665924072266
    7. '(S' → logprob: -12.878665924072266
    8. ' (' → logprob: -14.128665924072266
    9. '(i' → logprob: -14.628665924072266
    10. '1' → logprob: -15.128665924072266

Token 386: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1432074010372162
    2. '1' → logprob: -2.518207311630249
    3. '2' → logprob: -3.268207311630249
    4. '(' → logprob: -5.143207550048828
    5. ' N' → logprob: -5.393207550048828
    6. '3' → logprob: -6.143207550048828
    7. ' ' → logprob: -6.893207550048828
    8. 'len' → logprob: -7.268207550048828
    9. '(N' → logprob: -8.518207550048828
    10. '0' → logprob: -9.393207550048828

Token 387: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4323756694793701
    2. ' **' → logprob: -1.0573756694793701
    3. ' ' → logprob: -5.932375907897949
    4. '*' → logprob: -7.932375907897949
    5. ' *' → logprob: -7.932375907897949
    6. '*N' → logprob: -8.43237590789795
    7. '0' → logprob: -10.30737590789795
    8. '^' → logprob: -11.30737590789795
    9. ')' → logprob: -11.68237590789795
    10. ' ' → logprob: -12.18237590789795

Token 388: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005382588133215904
    2. ' N' → logprob: -7.625538349151611
    3. 'len' → logprob: -10.375537872314453
    4. '(N' → logprob: -11.125537872314453
    5. ' ' → logprob: -13.875537872314453
    6. 'n' → logprob: -14.000537872314453
    7. ' len' → logprob: -14.250537872314453
    8. '(len' → logprob: -14.375537872314453
    9. '(' → logprob: -14.750537872314453
    10. ' (' → logprob: -15.750537872314453

Token 389: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005983081646263599
    2. ')' → logprob: -8.000597953796387
    3. ' ):' → logprob: -9.000597953796387
    4. '):
' → logprob: -9.250597953796387
    5. ':' → logprob: -10.125597953796387
    6. ',' → logprob: -14.500597953796387
    7. '):
' → logprob: -14.750597953796387
    8. '**' → logprob: -14.875597953796387
    9. '}:' → logprob: -14.875597953796387
    10. '+' → logprob: -15.500597953796387

Token 390: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06493876129388809
    2. '    
' → logprob: -3.31493878364563
    3. ' ' → logprob: -5.064938545227051
    4. '    ' → logprob: -5.564938545227051
    5. '\t' → logprob: -5.814938545227051
    6. ':' → logprob: -6.064938545227051
    7. '     
' → logprob: -6.439938545227051
    8. ' 
' → logprob: -6.939938545227051
    9. ' :' → logprob: -7.064938545227051
    10. '
' → logprob: -7.189938545227051

Token 391: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005484183318912983
    2. '    
' → logprob: -5.630484104156494
    3. ' ' → logprob: -7.505484104156494
    4. '\t' → logprob: -8.005484580993652
    5. '   ' → logprob: -8.505484580993652
    6. '
' → logprob: -9.255484580993652
    7. ' 
' → logprob: -9.505484580993652
    8. '  
' → logprob: -9.630484580993652
    9. ':' → logprob: -9.755484580993652
    10. '  ' → logprob: -10.005484580993652

Token 392: ' Va' (ID: 24527)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7679795026779175
    2. 'mask' → logprob: -1.5179795026779175
    3. ' mask' → logprob: -1.6429795026779175
    4. ' binary' → logprob: -3.642979621887207
    5. 'bin' → logprob: -3.767979621887207
    6. ' ' → logprob: -4.392979621887207
    7. 'binary' → logprob: -4.642979621887207
    8. ' bin' → logprob: -4.767979621887207
    9. '   ' → logprob: -5.517979621887207
    10. '	mask' → logprob: -5.517979621887207

Token 393: ' bou' (ID: 17573)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5988864302635193
    2. ' range' → logprob: -1.098886489868164
    3. ' i' → logprob: -3.348886489868164
    4. ' in' → logprob: -3.348886489868164
    5. ' de' → logprob: -4.348886489868164
    6. ' for' → logprob: -4.473886489868164
    7. '   ' → logprob: -5.473886489868164
    8. '  ' → logprob: -6.098886489868164
    9. ' from' → logprob: -6.473886489868164
    10. 'range' → logprob: -6.473886489868164

Token 394: 'cler' (ID: 55207)
  Prédit: 'cler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.0004249547782819718
    2. 'cle' → logprob: -7.875424861907959
    3. 'cl' → logprob: -10.500425338745117
    4. '
' → logprob: -12.625425338745117
    5. 'cter' → logprob: -12.625425338745117
    6. '   ' → logprob: -13.625425338745117
    7. '```' → logprob: -13.750425338745117
    8. '#' → logprob: -13.875425338745117
    9. 'c' → logprob: -13.875425338745117
    10. 'clé' → logprob: -14.375425338745117

Token 395: ' pour' (ID: 1930)
  Prédit: ' over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.15873143076896667
    2. ' ' → logprob: -2.658731460571289
    3. ' sur' → logprob: -2.783731460571289
    4. ' i' → logprob: -5.783731460571289
    5. 'over' → logprob: -5.783731460571289
    6. 'sur' → logprob: -6.408731460571289
    7. ' through' → logprob: -6.533731460571289
    8. ' N' → logprob: -6.658731460571289
    9. ' for' → logprob: -6.908731460571289
    10. ' de' → logprob: -7.158731460571289

Token 396: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008486210368573666
    2. ' ' → logprob: -5.008486270904541
    3. ' _' → logprob: -6.883486270904541
    4. 'i' → logprob: -7.633486270904541
    5. ' ' → logprob: -9.133485794067383
    6. ' N' → logprob: -9.883485794067383
    7. '_' → logprob: -11.383485794067383
    8. ' chaque' → logprob: -11.383485794067383
    9. ' S' → logprob: -11.508485794067383
    10. '0' → logprob: -11.508485794067383

Token 397: ' allant' (ID: 122150)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08671518415212631
    2. 'in' → logprob: -2.8367152214050293
    3. ' ' → logprob: -3.8367152214050293
    4. ',' → logprob: -6.836715221405029
    5. 'dans' → logprob: -7.836715221405029
    6. ' en' → logprob: -8.461714744567871
    7. ' dans' → logprob: -8.461714744567871
    8. ')' → logprob: -9.211714744567871
    9. ' :' → logprob: -9.211714744567871
    10. ' ,' → logprob: -9.211714744567871

Token 398: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.013632595539093018
    2. 'de' → logprob: -4.388632774353027
    3. ' ' → logprob: -7.388632774353027
    4. '0' → logprob: -8.263632774353027
    5. ' from' → logprob: -8.513632774353027
    6. 'from' → logprob: -10.763632774353027
    7. ' des' → logprob: -11.763632774353027
    8. ' jusqu' → logprob: -12.013632774353027
    9. ' à' → logprob: -13.513632774353027
    10. ' ' → logprob: -13.763632774353027

Token 399: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013265528250485659
    2. ' ' → logprob: -6.626326560974121
    3. 'N' → logprob: -15.376326560974121
    4. ' N' → logprob: -16.001325607299805
    5. '2' → logprob: -16.126325607299805
    6. '(' → logprob: -16.126325607299805
    7. 'range' → logprob: -18.126325607299805
    8. ' range' → logprob: -18.251325607299805
    9. '1' → logprob: -18.501325607299805
    10. ' ' → logprob: -18.626325607299805

Token 400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004897649050690234
    2. ' ' → logprob: -7.625489711761475
    3. 'N' → logprob: -14.250490188598633
    4. '(' → logprob: -14.625490188598633
    5. '2' → logprob: -15.625490188598633
    6. 'range' → logprob: -15.750490188598633
    7. ' N' → logprob: -16.250490188598633
    8. '1' → logprob: -17.250490188598633
    9. ' range' → logprob: -17.250490188598633
    10. '(N' → logprob: -18.375490188598633

Token 401: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2637856602668762
    2. ' à' → logprob: -1.6387856006622314
    3. ',' → logprob: -4.0137858390808105
    4. ' to' → logprob: -4.6387858390808105
    5. 'à' → logprob: -5.6387858390808105
    6. 'to' → logprob: -5.8887858390808105
    7. ' ,' → logprob: -6.3887858390808105
    8. ' jusqu' → logprob: -7.0137858390808105
    9. ' ' → logprob: -8.388785362243652
    10. '  ' → logprob: -8.513785362243652

Token 402: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35182467103004456
    2. '2' → logprob: -1.2268246412277222
    3. ' (' → logprob: -5.976824760437012
    4. '(' → logprob: -7.101824760437012
    5. '1' → logprob: -11.726824760437012
    6. ',' → logprob: -13.476824760437012
    7. ' ' → logprob: -14.351824760437012
    8. '```' → logprob: -14.351824760437012
    9. '10' → logprob: -14.976824760437012
    10. '  ' → logprob: -14.976824760437012

Token 403: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5791295766830444
    2. ' ' → logprob: -0.8291295766830444
    3. ' (' → logprob: -6.454129695892334
    4. '(' → logprob: -6.454129695892334
    5. '1' → logprob: -10.454129219055176
    6. ')' → logprob: -12.704129219055176
    7. '  ' → logprob: -14.079129219055176
    8. ' )' → logprob: -14.079129219055176
    9. ',' → logprob: -14.329129219055176
    10. '   ' → logprob: -14.829129219055176

Token 404: ' puissance' (ID: 63494)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0059415982104837894
    2. ' **' → logprob: -5.130941390991211
    3. '^' → logprob: -12.005941390991211
    4. '*' → logprob: -12.755941390991211
    5. '*N' → logprob: -13.005941390991211
    6. ' ' → logprob: -13.505941390991211
    7. ' *' → logprob: -16.50594139099121
    8. '```' → logprob: -16.63094139099121
    9. ' -' → logprob: -17.00594139099121
    10. '**
' → logprob: -17.25594139099121

Token 405: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.043016429990530014
    2. ' N' → logprob: -3.1680164337158203
    3. ' ' → logprob: -11.66801643371582
    4. '*N' → logprob: -12.41801643371582
    5. '(N' → logprob: -14.16801643371582
    6. '	N' → logprob: -14.41801643371582
    7. ' ' → logprob: -14.66801643371582
    8. ' 
' → logprob: -14.91801643371582
    9. '```' → logprob: -14.91801643371582
    10. 'n' → logprob: -15.04301643371582

Token 406: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1730433851480484
    2. '):' → logprob: -2.1730434894561768
    3. ')-' → logprob: -3.9230434894561768
    4. '-' → logprob: -4.048043251037598
    5. ' )' → logprob: -5.673043251037598
    6. ' -' → logprob: -5.923043251037598
    7. ' ):' → logprob: -6.798043251037598
    8. ' ' → logprob: -8.173043251037598
    9. '):
' → logprob: -9.048043251037598
    10. ' ' → logprob: -9.548043251037598

Token 407: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04506421089172363
    2. '):' → logprob: -3.4200642108917236
    3. ' :' → logprob: -4.5450639724731445
    4. ':
' → logprob: -7.9200639724731445
    5. '():' → logprob: -8.920063972473145
    6. '+:' → logprob: -9.920063972473145
    7. '):
' → logprob: -9.920063972473145
    8. ' ):' → logprob: -10.045063972473145
    9. ' ' → logprob: -11.170063972473145
    10. ':**' → logprob: -11.170063972473145

Token 408: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '```' → logprob: -17.631715774536133
    4. ' ' → logprob: -17.756715774536133
    5. '  ' → logprob: -18.006715774536133
    6. '2' → logprob: -19.381715774536133
    7. ')' → logprob: -20.131715774536133
    8. '<|end|>' → logprob: -20.256715774536133
    9. '-' → logprob: -20.381715774536133
    10. '۱' → logprob: -20.694215774536133

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '```' → logprob: -17.250123977661133
    4. '2' → logprob: -17.750123977661133
    5. ' ' → logprob: -18.500123977661133
    6. '
' → logprob: -18.750123977661133
    7. '  ' → logprob: -19.000123977661133
    8. '-' → logprob: -19.500123977661133
    9. '.' → logprob: -20.000123977661133
    10. ')' → logprob: -20.187623977661133

Token 410: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0064184702932834625
    2. ' :' → logprob: -5.131418704986572
    3. ':
' → logprob: -8.006418228149414
    4. '   ' → logprob: -9.381418228149414
    5. '):' → logprob: -10.506418228149414
    6. ' ' → logprob: -11.381418228149414
    7. ' :
' → logprob: -11.631418228149414
    8. ')' → logprob: -11.756418228149414
    9. ',' → logprob: -12.131418228149414
    10. '[' → logprob: -13.881418228149414

Token 411: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014886883087456226
    2. '   ' → logprob: -4.764886856079102
    3. ' :' → logprob: -5.264886856079102
    4. ':
' → logprob: -7.014886856079102
    5. '):' → logprob: -9.139886856079102
    6. ',' → logprob: -10.889886856079102
    7. ' :
' → logprob: -11.139886856079102
    8. ' ' → logprob: -11.514886856079102
    9. ')' → logprob: -12.014886856079102
    10. '  ' → logprob: -12.389886856079102

Token 412: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1777208298444748
    2. '    ' → logprob: -2.802720785140991
    3. ' :' → logprob: -3.177720785140991
    4. ':' → logprob: -3.302720785140991
    5. ' ' → logprob: -4.17772102355957
    6. '    
' → logprob: -6.05272102355957
    7. '):' → logprob: -6.17772102355957
    8. ')' → logprob: -7.30272102355957
    9. '  ' → logprob: -7.67772102355957
    10. '     
' → logprob: -7.67772102355957

Token 413: ' qui' (ID: 2780)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.14762064814567566
    2. ':' → logprob: -2.272620677947998
    3. ' ' → logprob: -3.397620677947998
    4. ' :
' → logprob: -8.89762020111084
    5. ' "' → logprob: -9.14762020111084
    6. '   ' → logprob: -9.89762020111084
    7. ''' → logprob: -9.89762020111084
    8. ' '' → logprob: -10.02262020111084
    9. ' ):' → logprob: -10.02262020111084
    10. ')' → logprob: -10.14762020111084

Token 414: ' fait' (ID: 7473)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.21480566263198853
    2. ':' → logprob: -2.2148056030273438
    3. ' correspond' → logprob: -3.7148056030273438
    4. ' ' → logprob: -4.339805603027344
    5. ' signifie' → logprob: -4.464805603027344
    6. ' corresponds' → logprob: -4.589805603027344
    7. ' représente' → logprob: -5.089805603027344
    8. ' permet' → logprob: -5.589805603027344
    9. ' ):' → logprob: -6.339805603027344
    10. ' =' → logprob: -6.464805603027344

Token 415: ' toutes' (ID: 17502)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5965865254402161
    2. ' N' → logprob: -1.0965864658355713
    3. 'N' → logprob: -2.9715864658355713
    4. ' range' → logprob: -3.8465864658355713
    5. 'range' → logprob: -4.84658670425415
    6. '   ' → logprob: -5.34658670425415
    7. '2' → logprob: -5.47158670425415
    8. '  ' → logprob: -5.72158670425415
    9. ' une' → logprob: -5.72158670425415
    10. ' la' → logprob: -5.72158670425415

Token 416: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.039790742099285126
    2. ' les' → logprob: -4.664790630340576
    3. '  ' → logprob: -4.914790630340576
    4. ' l' → logprob: -5.664790630340576
    5. ' (' → logprob: -6.164790630340576
    6. '<|end|>' → logprob: -6.289790630340576
    7. '(' → logprob: -6.414790630340576
    8. 's' → logprob: -6.664790630340576
    9. ' possible' → logprob: -6.664790630340576
    10. 'es' → logprob: -6.789790630340576

Token 417: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.15202993154525757
    2. 'comb' → logprob: -2.2770299911499023
    3. 'poss' → logprob: -4.527029991149902
    4. ' ' → logprob: -4.777029991149902
    5. ' combinations' → logprob: -5.152029991149902
    6. ' possible' → logprob: -5.652029991149902
    7. 'com' → logprob: -6.152029991149902
    8. ' possibilités' → logprob: -6.527029991149902
    9. ' combin' → logprob: -7.027029991149902
    10. ' possibles' → logprob: -7.152029991149902

Token 418: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.2432875633239746
    2. 'inations' → logprob: -1.6182875633239746
    3. 'ina' → logprob: -5.368287563323975
    4. 'ination' → logprob: -5.618287563323975
    5. '):' → logprob: -5.868287563323975
    6. 'binations' → logprob: -5.993287563323975
    7. 'i' → logprob: -6.743287563323975
    8. 'in' → logprob: -7.243287563323975
    9. 'os' → logprob: -7.368287563323975
    10. 's' → logprob: -7.743287563323975

Token 419: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0048071108758449554
    2. 's' → logprob: -5.629806995391846
    3. 'sons' → logprob: -7.379806995391846
    4. 'on' → logprob: -8.629807472229004
    5. '#' → logprob: -8.629807472229004
    6. 'ions' → logprob: -10.004807472229004
    7. '```' → logprob: -10.004807472229004
    8. 'ais' → logprob: -10.754807472229004
    9. 'es' → logprob: -10.754807472229004
    10. 't' → logprob: -10.879807472229004

Token 420: ' bin' (ID: 6958)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9831356406211853
    2. ' ' → logprob: -1.10813570022583
    3. '   ' → logprob: -2.10813570022583
    4. ' en' → logprob: -3.10813570022583
    5. ' :' → logprob: -3.73313570022583
    6. ' N' → logprob: -3.73313570022583
    7. ' range' → logprob: -4.48313570022583
    8. ',' → logprob: -4.85813570022583
    9. ' dans' → logprob: -5.23313570022583
    10. ' des' → logprob: -5.23313570022583

Token 421: 'aires' (ID: 8507)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.6478575468063354
    2. 'aires' → logprob: -0.8978575468063354
    3. 'a' → logprob: -3.772857666015625
    4. '```' → logprob: -4.772857666015625
    5. 'naire' → logprob: -4.772857666015625
    6. ' ' → logprob: -5.397857666015625
    7. '   ' → logprob: -6.022857666015625
    8. 'é' → logprob: -6.147857666015625
    9. '1' → logprob: -6.272857666015625
    10. '0' → logprob: -6.397857666015625

Token 422: ' possibles' (ID: 97753)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4304928481578827
    2. ' :' → logprob: -1.180492877960205
    3. ' ' → logprob: -4.180492877960205
    4. '(' → logprob: -4.555492877960205
    5. '   ' → logprob: -5.805492877960205
    6. ' (' → logprob: -6.055492877960205
    7. '):' → logprob: -6.055492877960205
    8. ' for' → logprob: -6.305492877960205
    9. ',' → logprob: -6.305492877960205
    10. '(N' → logprob: -6.930492877960205

Token 423: ' sur' (ID: 1512)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13695137202739716
    2. ' :' → logprob: -2.136951446533203
    3. ' ' → logprob: -5.761951446533203
    4. '   ' → logprob: -6.136951446533203
    5. '):' → logprob: -6.261951446533203
    6. ':
' → logprob: -6.761951446533203
    7. ',' → logprob: -8.136951446533203
    8. ' :
' → logprob: -8.261951446533203
    9. ' for' → logprob: -8.511951446533203
    10. ')' → logprob: -9.136951446533203

Token 424: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.4321877956390381
    2. 'N' → logprob: -1.057187795639038
    3. ' range' → logprob: -5.807188034057617
    4. 'range' → logprob: -7.807188034057617
    5. ' ' → logprob: -9.932188034057617
    6. ' ' → logprob: -11.557188034057617
    7. 'n' → logprob: -13.182188034057617
    8. ' S' → logprob: -13.682188034057617
    9. '<N' → logprob: -13.932188034057617
    10. '	N' → logprob: -14.119688034057617

Token 425: ' bits' (ID: 18189)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10328765213489532
    2. ':' → logprob: -2.728287696838379
    3. ' :' → logprob: -3.853287696838379
    4. ' ):' → logprob: -4.853287696838379
    5. '):
' → logprob: -6.603287696838379
    6. ' ' → logprob: -7.353287696838379
    7. '   ' → logprob: -7.728287696838379
    8. ')' → logprob: -7.978287696838379
    9. '():' → logprob: -8.353287696838379
    10. 'range' → logprob: -8.603287696838379

Token 426: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008432189002633095
    2. ' :' → logprob: -5.758432388305664
    3. '   ' → logprob: -5.758432388305664
    4. ':
' → logprob: -6.383432388305664
    5. '):' → logprob: -8.133432388305664
    6. ',' → logprob: -10.883432388305664
    7. ')' → logprob: -11.008432388305664
    8. '):
' → logprob: -11.258432388305664
    9. ' :
' → logprob: -11.258432388305664
    10. ' ' → logprob: -11.508432388305664

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013102695345878601
    2. 'key' → logprob: -6.1381025314331055
    3. ' key' → logprob: -6.7631025314331055
    4. 'mask' → logprob: -6.7631025314331055
    5. ' parts' → logprob: -6.8881025314331055
    6. 'for' → logprob: -7.2631025314331055
    7. ' mask' → logprob: -7.6381025314331055
    8. ' for' → logprob: -7.7631025314331055
    9. '	mask' → logprob: -7.7631025314331055
    10. ' ' → logprob: -7.8881025314331055

Token 428: ' #' (ID: 1069)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.8693051934242249
    2. 'sub' → logprob: -2.11930513381958
    3. '   ' → logprob: -2.49430513381958
    4. 'mask' → logprob: -2.99430513381958
    5. 'A' → logprob: -3.24430513381958
    6. 'a' → logprob: -3.49430513381958
    7. 'pattern' → logprob: -3.61930513381958
    8. 'subset' → logprob: -3.86930513381958
    9. 'x' → logprob: -4.11930513381958
    10. 'p' → logprob: -4.24430513381958

Token 429: ' Convert' (ID: 15629)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.9178680181503296
    2. 'mask' → logprob: -2.042868137359619
    3. 'sub' → logprob: -2.042868137359619
    4. 'tmp' → logprob: -2.667868137359619
    5. 'pattern' → logprob: -2.792868137359619
    6. 'subset' → logprob: -3.042868137359619
    7. 'A' → logprob: -3.417868137359619
    8. 'comb' → logprob: -3.667868137359619
    9. 'T' → logprob: -3.917868137359619
    10. 'c' → logprob: -3.917868137359619

Token 430: 'it' (ID: 278)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.10796492546796799
    2. 'er' → logprob: -2.7329649925231934
    3. '_bin' → logprob: -3.9829649925231934
    4. 'bin' → logprob: -4.607964992523193
    5. 'ate' → logprob: -6.357964992523193
    6. 'ion' → logprob: -6.732964992523193
    7. 'binary' → logprob: -6.732964992523193
    8. '   ' → logprob: -7.482964992523193
    9. 'ed' → logprob: -7.482964992523193
    10. 'e' → logprob: -7.482964992523193

Token 431: ' l' (ID: 305)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.10201459378004074
    2. ' bin' → logprob: -3.2270145416259766
    3. 'i' → logprob: -3.7270145416259766
    4. '   ' → logprob: -4.227014541625977
    5. 'format' → logprob: -5.352014541625977
    6. 'b' → logprob: -5.477014541625977
    7. 'S' → logprob: -5.477014541625977
    8. ' i' → logprob: -6.102014541625977
    9. ' format' → logprob: -6.227014541625977
    10. 's' → logprob: -8.602014541625977

Token 432: ''ent' (ID: 53422)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.160505771636963
    2. ' bin' → logprob: -1.410505771636963
    3. ''' → logprob: -2.035505771636963
    4. 'bin' → logprob: -2.410505771636963
    5. ' '' → logprob: -2.910505771636963
    6. '   ' → logprob: -3.160505771636963
    7. 'i' → logprob: -3.535505771636963
    8. ' ' → logprob: -3.785505771636963
    9. ' S' → logprob: -4.285505771636963
    10. 'e' → logprob: -4.410505771636963

Token 433: 'ier' (ID: 905)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.2808223068714142
    2. 'range' → logprob: -2.655822277069092
    3. 'umer' → logprob: -3.030822277069092
    4. 'i' → logprob: -3.905822277069092
    5. 'bin' → logprob: -4.030822277069092
    6. 'r' → logprob: -4.280822277069092
    7. 'er' → logprob: -4.280822277069092
    8. '   ' → logprob: -5.280822277069092
    9. '[i' → logprob: -5.405822277069092
    10. 'umerator' → logprob: -5.530822277069092

Token 434: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09089911729097366
    2. ' i' → logprob: -2.4658992290496826
    3. 'bin' → logprob: -6.7158989906311035
    4. '(i' → logprob: -7.7158989906311035
    5. ' bin' → logprob: -8.715899467468262
    6. '(' → logprob: -10.465899467468262
    7. '   ' → logprob: -10.590899467468262
    8. '_i' → logprob: -10.840899467468262
    9. 'b' → logprob: -11.090899467468262
    10. '_bin' → logprob: -11.215899467468262

Token 435: ' en' (ID: 469)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.39897117018699646
    2. 'b' → logprob: -1.7739711999893188
    3. '_bin' → logprob: -2.3989710807800293
    4. 'to' → logprob: -3.5239710807800293
    5. ' bin' → logprob: -4.648971080780029
    6. ' to' → logprob: -4.773971080780029
    7. ' into' → logprob: -5.523971080780029
    8. ',' → logprob: -5.773971080780029
    9. '_to' → logprob: -6.023971080780029
    10. ' ' → logprob: -6.148971080780029

Token 436: ' une' (ID: 2463)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.497513085603714
    2. ' bin' → logprob: -1.1225130558013916
    3. 'format' → logprob: -3.6225130558013916
    4. ' format' → logprob: -3.6225130558013916
    5. 'range' → logprob: -4.747513294219971
    6. ' range' → logprob: -5.872513294219971
    7. 'f' → logprob: -7.747513294219971
    8. '   ' → logprob: -7.747513294219971
    9. 'b' → logprob: -8.622512817382812
    10. ' f' → logprob: -8.997512817382812

Token 437: ' chaîne' (ID: 89288)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.6235142946243286
    2. ' bin' → logprob: -1.2485142946243286
    3. 'b' → logprob: -2.498514175415039
    4. ' format' → logprob: -2.998514175415039
    5. 'format' → logprob: -3.873514175415039
    6. ' b' → logprob: -5.123514175415039
    7. ' :' → logprob: -5.248514175415039
    8. '   ' → logprob: -6.498514175415039
    9. ' ' → logprob: -6.623514175415039
    10. ' binary' → logprob: -6.623514175415039

Token 438: ' b' (ID: 287)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.45397886633872986
    2. ' bin' → logprob: -1.4539788961410522
    3. 'b' → logprob: -2.7039787769317627
    4. '   ' → logprob: -3.8289787769317627
    5. '(bin' → logprob: -4.078979015350342
    6. '_bin' → logprob: -4.828979015350342
    7. ' format' → logprob: -5.328979015350342
    8. 'format' → logprob: -5.578979015350342
    9. ' b' → logprob: -5.953979015350342
    10. ' binary' → logprob: -6.328979015350342

Token 439: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3210015594959259
    2. 'inaire' → logprob: -1.4460015296936035
    3. 'inary' → logprob: -3.6960015296936035
    4. ' =' → logprob: -5.3210015296936035
    5. ''' → logprob: -5.4460015296936035
    6. '=' → logprob: -6.1960015296936035
    7. 'inar' → logprob: -6.8210015296936035
    8. '   ' → logprob: -8.196002006530762
    9. '"' → logprob: -8.321002006530762
    10. '`' → logprob: -8.321002006530762

Token 440: ' de' (ID: 334)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6818003058433533
    2. 'bin' → logprob: -1.181800365447998
    3. ' bin' → logprob: -2.931800365447998
    4. ' format' → logprob: -3.056800365447998
    5. 'format' → logprob: -3.556800365447998
    6. '_bin' → logprob: -4.181800365447998
    7. '   ' → logprob: -4.431800365447998
    8. ' b' → logprob: -4.556800365447998
    9. '(bin' → logprob: -4.806800365447998
    10. ' ' → logprob: -5.931800365447998

Token 441: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8348599672317505
    2. 'bin' → logprob: -1.0848599672317505
    3. ' bin' → logprob: -2.709859848022461
    4. ' N' → logprob: -2.834859848022461
    5. ' format' → logprob: -2.959859848022461
    6. 'format' → logprob: -3.209859848022461
    7. 'b' → logprob: -5.584859848022461
    8. 'f' → logprob: -5.709859848022461
    9. ''N' → logprob: -6.209859848022461
    10. ' ' → logprob: -7.584859848022461

Token 442: ' chiffres' (ID: 105565)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.163788914680481
    2. 's' → logprob: -2.0387887954711914
    3. ' bits' → logprob: -2.1637887954711914
    4. 'bin' → logprob: -2.9137887954711914
    5. 'bits' → logprob: -2.9137887954711914
    6. 'b' → logprob: -3.0387887954711914
    7. ':' → logprob: -3.1637887954711914
    8. ',' → logprob: -3.2887887954711914
    9. '>' → logprob: -3.9137887954711914
    10. '.' → logprob: -3.9137887954711914

Token 443: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7733772993087769
    2. ',' → logprob: -1.3983772993087769
    3. 'bin' → logprob: -2.2733774185180664
    4. '   ' → logprob: -2.8983774185180664
    5. ' format' → logprob: -3.1483774185180664
    6. ' b' → logprob: -3.5233774185180664
    7. 'format' → logprob: -3.6483774185180664
    8. ' bin' → logprob: -3.7733774185180664
    9. ' ' → logprob: -6.023377418518066
    10. ',b' → logprob: -7.023377418518066

Token 444: ' en' (ID: 469)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5942693948745728
    2. ' b' → logprob: -1.3442693948745728
    3. '   ' → logprob: -2.469269275665283
    4. 'mask' → logprob: -3.219269275665283
    5. ' mask' → logprob: -3.469269275665283
    6. 'bin' → logprob: -4.719269275665283
    7. ' bin' → logprob: -4.719269275665283
    8. ' bit' → logprob: -6.094269275665283
    9. 'bit' → logprob: -6.094269275665283
    10. ' s' → logprob: -6.094269275665283

Token 445: ' tru' (ID: 64933)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.9623910784721375
    2. 'bin' → logprob: -1.0873911380767822
    3. ' rem' → logprob: -1.9623911380767822
    4. ' bin' → logprob: -2.4623911380767822
    5. 'format' → logprob: -3.9623911380767822
    6. ' rempl' → logprob: -4.462390899658203
    7. 'b' → logprob: -4.587390899658203
    8. ' format' → logprob: -5.962390899658203
    9. 'padding' → logprob: -6.212390899658203
    10. 'f' → logprob: -6.587390899658203

Token 446: 'quant' (ID: 39719)
  Prédit: 'rn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rn' → logprob: -0.9916324019432068
    2. 'r' → logprob: -1.2416324615478516
    3. 'ck' → logprob: -1.9916324615478516
    4. 'format' → logprob: -2.9916324615478516
    5. 'f' → logprob: -3.2416324615478516
    6. 'ning' → logprob: -4.491632461547852
    7. 'ing' → logprob: -4.491632461547852
    8. 'form' → logprob: -4.491632461547852
    9. 'cing' → logprob: -4.616632461547852
    10. ' format' → logprob: -4.741632461547852

Token 447: ' :' (ID: 712)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -1.624351978302002
    2. ' =' → logprob: -1.874351978302002
    3. ' bin' → logprob: -2.374351978302002
    4. ' ' → logprob: -2.374351978302002
    5. ' i' → logprob: -2.499351978302002
    6. 'b' → logprob: -2.624351978302002
    7. 'le' → logprob: -2.999351978302002
    8. 's' → logprob: -2.999351978302002
    9. '=' → logprob: -3.499351978302002
    10. ' S' → logprob: -4.249351978302002

Token 448: ' on' (ID: 402)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7764542698860168
    2. ' bin' → logprob: -1.901454210281372
    3. 'bin' → logprob: -2.026454210281372
    4. ' b' → logprob: -2.276454210281372
    5. ' format' → logprob: -2.776454210281372
    6. ' mask' → logprob: -4.151454448699951
    7. 'mask' → logprob: -4.151454448699951
    8. ' f' → logprob: -4.276454448699951
    9. 'format' → logprob: -4.526454448699951
    10. 'f' → logprob: -4.526454448699951

Token 449: ' ajoute' (ID: 91611)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6983107328414917
    2. 'bin' → logprob: -1.5733107328414917
    3. ' =' → logprob: -2.1983108520507812
    4. '=' → logprob: -2.9483108520507812
    5. '_bin' → logprob: -3.1983108520507812
    6. ' bin' → logprob: -3.4483108520507812
    7. 's' → logprob: -3.8233108520507812
    8. 'z' → logprob: -5.448310852050781
    9. 'format' → logprob: -6.073310852050781
    10. 'f' → logprob: -6.323310852050781

Token 450: ' ' (ID: 220)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.8212728500366211
    2. ''' → logprob: -1.321272850036621
    3. '('' → logprob: -2.696272850036621
    4. 'bin' → logprob: -2.696272850036621
    5. '   ' → logprob: -3.071272850036621
    6. '"' → logprob: -3.696272850036621
    7. ' bin' → logprob: -3.821272850036621
    8. ' f' → logprob: -4.321272850036621
    9. '(' → logprob: -4.321272850036621
    10. 'f' → logprob: -4.946272850036621

Token 451: '2' (ID: 17)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10941087454557419
    2. '"' → logprob: -2.6094107627868652
    3. ' '' → logprob: -3.8594107627868652
    4. '1' → logprob: -5.484410762786865
    5. ' "' → logprob: -6.484410762786865
    6. 'bin' → logprob: -6.984410762786865
    7. ' ' → logprob: -7.734410762786865
    8. ''b' → logprob: -7.984410762786865
    9. 'b' → logprob: -8.109411239624023
    10. '   ' → logprob: -8.484411239624023

Token 452: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0019627707079052925
    2. ' **' → logprob: -6.251962661743164
    3. '*' → logprob: -10.751962661743164
    4. '*N' → logprob: -12.251962661743164
    5. '0' → logprob: -13.251962661743164
    6. '^' → logprob: -13.626962661743164
    7. ' *' → logprob: -13.626962661743164
    8. ' ' → logprob: -13.876962661743164
    9. '**
' → logprob: -14.001962661743164
    10. '```' → logprob: -15.251962661743164

Token 453: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.404745439183898e-05
    2. '(N' → logprob: -11.12503433227539
    3. ' N' → logprob: -11.37503433227539
    4. '(' → logprob: -13.25003433227539
    5. '```' → logprob: -13.75003433227539
    6. '{' → logprob: -14.25003433227539
    7. '*N' → logprob: -14.37503433227539
    8. '	N' → logprob: -14.50003433227539
    9. '[N' → logprob: -15.00003433227539
    10. '_N' → logprob: -15.00003433227539

Token 454: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4840000569820404
    2. ' +' → logprob: -1.1090000867843628
    3. ',' → logprob: -4.234000205993652
    4. ')' → logprob: -4.234000205993652
    5. '+i' → logprob: -4.234000205993652
    6. '|' → logprob: -6.734000205993652
    7. ' ' → logprob: -6.859000205993652
    8. 'bin' → logprob: -6.859000205993652
    9. ')+' → logprob: -7.234000205993652
    10. 'b' → logprob: -7.234000205993652

Token 455: 'so' (ID: 786)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22223296761512756
    2. '+' → logprob: -2.5972330570220947
    3. ')+' → logprob: -2.8472330570220947
    4. '+i' → logprob: -2.9722330570220947
    5. ' +' → logprob: -4.722232818603516
    6. 'i' → logprob: -6.222232818603516
    7. ' i' → logprob: -6.347232818603516
    8. ' )' → logprob: -7.472232818603516
    9. ')i' → logprob: -7.722232818603516
    10. ' ' → logprob: -7.972232818603516

Token 456: 'it' (ID: 278)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10109726339578629
    2. ' +' → logprob: -3.226097345352173
    3. ')' → logprob: -3.601097345352173
    4. 'b' → logprob: -4.726097106933594
    5. ' ' → logprob: -5.476097106933594
    6. 'x' → logprob: -5.976097106933594
    7. 'r' → logprob: -6.101097106933594
    8. '+)' → logprob: -6.101097106933594
    9. '|' → logprob: -6.351097106933594
    10. ' )' → logprob: -6.851097106933594

Token 457: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8377920985221863
    2. '1' → logprob: -0.8377920985221863
    3. 'N' → logprob: -2.962792158126831
    4. ')' → logprob: -3.337792158126831
    5. '2' → logprob: -3.712792158126831
    6. ' (' → logprob: -4.587791919708252
    7. ' ' → logprob: -4.712791919708252
    8. 'bin' → logprob: -6.462791919708252
    9. '(N' → logprob: -7.837791919708252
    10. ' N' → logprob: -7.962791919708252

Token 458: ' "' (ID: 392)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39744576811790466
    2. 'bin' → logprob: -1.897445797920227
    3. ')' → logprob: -2.8974456787109375
    4. 'b' → logprob: -3.1474456787109375
    5. '(' → logprob: -3.5224456787109375
    6. ' ' → logprob: -4.1474456787109375
    7. '0' → logprob: -4.6474456787109375
    8. ' bin' → logprob: -5.6474456787109375
    9. ' (' → logprob: -5.6474456787109375
    10. ' )' → logprob: -6.0224456787109375

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033058829605579376
    2. 'b' → logprob: -4.4080586433410645
    3. 'bin' → logprob: -4.5330586433410645
    4. '{' → logprob: -5.5330586433410645
    5. ''' → logprob: -5.7830586433410645
    6. ' ' → logprob: -7.9080586433410645
    7. ')' → logprob: -8.033059120178223
    8. '"' → logprob: -8.283059120178223
    9. ' bin' → logprob: -8.533059120178223
    10. '0' → logprob: -8.658059120178223

Token 460: '"' (ID: 1)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.013914190232753754
    2. ' <<' → logprob: -4.763914108276367
    3. '0' → logprob: -6.013914108276367
    4. '<<(' → logprob: -6.763914108276367
    5. '000' → logprob: -7.388914108276367
    6. ')' → logprob: -7.388914108276367
    7. '<' → logprob: -8.763914108276367
    8. '00' → logprob: -9.388914108276367
    9. ')<<' → logprob: -10.138914108276367
    10. '+' → logprob: -10.763914108276367

Token 461: ' devant' (ID: 37522)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.039373088628053665
    2. '+' → logprob: -4.16437292098999
    3. ' <<' → logprob: -4.41437292098999
    4. ',' → logprob: -5.91437292098999
    5. '0' → logprob: -6.16437292098999
    6. '<<(' → logprob: -6.16437292098999
    7. ')' → logprob: -6.41437292098999
    8. ' +' → logprob: -6.66437292098999
    9. '<' → logprob: -8.039373397827148
    10. '+)' → logprob: -8.914373397827148

Token 462: ' N' (ID: 478)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.25122952461242676
    2. ')' → logprob: -1.6262295246124268
    3. 'b' → logprob: -4.626229286193848
    4. '(bin' → logprob: -4.626229286193848
    5. ' bin' → logprob: -6.501229286193848
    6. '")' → logprob: -7.001229286193848
    7. '')' → logprob: -7.126229286193848
    8. '{' → logprob: -7.376229286193848
    9. '`)' → logprob: -8.251229286193848
    10. '),' → logprob: -8.251229286193848

Token 463: ' z' (ID: 579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17234459519386292
    2. '{' → logprob: -2.54734468460083
    3. ')+' → logprob: -3.92234468460083
    4. 'bin' → logprob: -4.42234468460083
    5. ')[' → logprob: -4.79734468460083
    6. 'b' → logprob: -4.79734468460083
    7. '+' → logprob: -5.29734468460083
    8. ' )' → logprob: -5.92234468460083
    9. '){' → logprob: -5.92234468460083
    10. '[' → logprob: -5.92234468460083

Token 464: 'éros' (ID: 120888)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.36214330792427063
    2. '```' → logprob: -2.6121432781219482
    3. 'fill' → logprob: -2.8621432781219482
    4. 'z' → logprob: -3.1121432781219482
    5. 'éros' → logprob: -3.6121432781219482
    6. 'ero' → logprob: -3.8621432781219482
    7. '{' → logprob: -4.487143516540527
    8. '#' → logprob: -4.487143516540527
    9. '`' → logprob: -4.612143516540527
    10. '0' → logprob: -4.987143516540527

Token 465: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05155755952000618
    2. ')+' → logprob: -3.4265575408935547
    3. 'bin' → logprob: -4.801557540893555
    4. ' )' → logprob: -5.426557540893555
    5. ')[' → logprob: -6.426557540893555
    6. '")' → logprob: -6.926557540893555
    7. '),' → logprob: -7.926557540893555
    8. 'b' → logprob: -7.926557540893555
    9. ',' → logprob: -8.051557540893555
    10. '`)' → logprob: -8.301557540893555

Token 466: ' b' (ID: 287)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.7264790534973145
    2. ' bin' → logprob: -1.2264790534973145
    3. 'b' → logprob: -1.7264790534973145
    4. 'binary' → logprob: -3.7264790534973145
    5. ' binary' → logprob: -4.2264790534973145
    6. 'format' → logprob: -6.2264790534973145
    7. ' b' → logprob: -6.7264790534973145
    8. '{' → logprob: -6.7264790534973145
    9. ' format' → logprob: -6.8514790534973145
    10. 'f' → logprob: -8.601478576660156

Token 467: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08287539333105087
    2. 'inary' → logprob: -3.0828754901885986
    3. 'f' → logprob: -4.5828752517700195
    4. 'format' → logprob: -5.0828752517700195
    5. 'inaire' → logprob: -5.2078752517700195
    6. '```' → logprob: -5.7078752517700195
    7. 'ina' → logprob: -6.3328752517700195
    8. '{' → logprob: -6.8328752517700195
    9. 'inal' → logprob: -6.9578752517700195
    10. 'b' → logprob: -7.2078752517700195

Token 468: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17864973843097687
    2. ')+' → logprob: -3.053649663925171
    3. '")' → logprob: -3.053649663925171
    4. 'bin' → logprob: -3.428649663925171
    5. ' +' → logprob: -4.17864990234375
    6. ' )' → logprob: -5.42864990234375
    7. '+' → logprob: -5.42864990234375
    8. ',' → logprob: -5.67864990234375
    9. '(bin' → logprob: -6.42864990234375
    10. ')[' → logprob: -6.55364990234375

Token 469: ' ce' (ID: 2357)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.07455436140298843
    2. ' bin' → logprob: -3.074554443359375
    3. ')[' → logprob: -4.699554443359375
    4. ')' → logprob: -4.949554443359375
    5. 'b' → logprob: -5.449554443359375
    6. '[' → logprob: -7.074554443359375
    7. ' puis' → logprob: -7.199554443359375
    8. 'format' → logprob: -7.449554443359375
    9. '(bin' → logprob: -7.824554443359375
    10. '),' → logprob: -8.324554443359375

Token 470: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2824757695198059
    2. '+' → logprob: -1.5324757099151611
    3. ' )' → logprob: -4.15747594833374
    4. ' +' → logprob: -5.28247594833374
    5. ',' → logprob: -6.15747594833374
    6. 's' → logprob: -6.53247594833374
    7. '=' → logprob: -7.15747594833374
    8. '>' → logprob: -7.53247594833374
    9. ')+' → logprob: -7.53247594833374
    10. '+)' → logprob: -7.65747594833374

Token 471: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.2748429775238037
    2. ' garantit' → logprob: -2.1498429775238037
    3. ')' → logprob: -2.7748429775238037
    4. ' assure' → logprob: -4.024843215942383
    5. ' donne' → logprob: -4.149843215942383
    6. ' )' → logprob: -5.274843215942383
    7. ')[' → logprob: -5.649843215942383
    8. 'b' → logprob: -6.274843215942383
    9. '>' → logprob: -6.399843215942383
    10. '+' → logprob: -6.524843215942383

Token 472: ' de' (ID: 334)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.144010066986084
    2. '=' → logprob: -1.769010066986084
    3. ' de' → logprob: -2.269010066986084
    4. '   ' → logprob: -2.394010066986084
    5. ' d' → logprob: -2.644010066986084
    6. 'bin' → logprob: -2.769010066986084
    7. 'b' → logprob: -3.769010066986084
    8. ')[' → logprob: -3.894010066986084
    9. '()[' → logprob: -4.144010066986084
    10. 'de' → logprob: -4.144010066986084

Token 473: ' garantir' (ID: 48328)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.7240259647369385
    2. 'b' → logprob: -0.8490259647369385
    3. ' bin' → logprob: -2.8490259647369385
    4. 'ob' → logprob: -4.349025726318359
    5. ' obtenir' → logprob: -5.349025726318359
    6. 'format' → logprob: -5.474025726318359
    7. 's' → logprob: -6.099025726318359
    8. 'slice' → logprob: -6.474025726318359
    9. '{' → logprob: -7.724025726318359
    10. ' format' → logprob: -7.974025726318359

Token 474: ' que' (ID: 661)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.7084709405899048
    2. '[' → logprob: -1.9584709405899048
    3. 'bin' → logprob: -2.0834708213806152
    4. 'le' → logprob: -2.4584708213806152
    5. 'de' → logprob: -2.4584708213806152
    6. 'format' → logprob: -2.9584708213806152
    7. 'b' → logprob: -3.0834708213806152
    8. ' que' → logprob: -3.0834708213806152
    9. '[N' → logprob: -3.0834708213806152
    10. '[i' → logprob: -3.4584708213806152

Token 475: ' tous' (ID: 10688)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.20943716168403625
    2. ' bin' → logprob: -1.7094371318817139
    3. '(bin' → logprob: -5.584437370300293
    4. 'b' → logprob: -6.334437370300293
    5. 'format' → logprob: -6.959437370300293
    6. ' format' → logprob: -7.209437370300293
    7. '   ' → logprob: -8.584437370300293
    8. ')' → logprob: -8.584437370300293
    9. '1' → logprob: -9.209437370300293
    10. ' ' → logprob: -9.709437370300293

Token 476: ' les' (ID: 1341)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.13820883631706238
    2. 'format' → logprob: -2.8882088661193848
    3. '(bin' → logprob: -3.2632088661193848
    4. 'b' → logprob: -4.638208866119385
    5. '(format' → logprob: -5.513208866119385
    6. '   ' → logprob: -5.638208866119385
    7. '{' → logprob: -5.638208866119385
    8. ')' → logprob: -6.013208866119385
    9. ' bin' → logprob: -6.013208866119385
    10. 'f' → logprob: -6.513208866119385

Token 477: ' bits' (ID: 18189)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.26253366470336914
    2. 'bin' → logprob: -1.6375336647033691
    3. ' bin' → logprob: -4.262533664703369
    4. 'N' → logprob: -4.887533664703369
    5. '0' → logprob: -5.137533664703369
    6. 'format' → logprob: -5.762533664703369
    7. ' format' → logprob: -6.762533664703369
    8. 'bits' → logprob: -6.762533664703369
    9. ' b' → logprob: -7.012533664703369
    10. '{' → logprob: -7.262533664703369

Token 478: ' soient' (ID: 59497)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.710856020450592
    2. 'format' → logprob: -1.9608559608459473
    3. ' format' → logprob: -2.0858559608459473
    4. ' bin' → logprob: -2.7108559608459473
    5. 's' → logprob: -3.4608559608459473
    6. '[N' → logprob: -3.7108559608459473
    7. '[i' → logprob: -3.8358559608459473
    8. '(bin' → logprob: -3.9608559608459473
    9. '[' → logprob: -4.835855960845947
    10. '{' → logprob: -5.085855960845947

Token 479: ' présents' (ID: 108718)
  Prédit: ' affich'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affich' → logprob: -0.19731861352920532
    2. 'prés' → logprob: -2.6973185539245605
    3. ' visibles' → logprob: -3.1973185539245605
    4. ' représent' → logprob: -3.6973185539245605
    5. ' présents' → logprob: -4.0723185539245605
    6. ' bien' → logprob: -4.9473185539245605
    7. ' pris' → logprob: -5.4473185539245605
    8. 'ex' → logprob: -5.8223185539245605
    9. 'repr' → logprob: -5.9473185539245605
    10. 'bien' → logprob: -6.0723185539245605

Token 480: ' même' (ID: 9679)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -1.6065276861190796
    2. ')[' → logprob: -1.6065276861190796
    3. '[i' → logprob: -1.7315276861190796
    4. '[' → logprob: -2.106527805328369
    5. '[N' → logprob: -2.481527805328369
    6. ',' → logprob: -2.981527805328369
    7. '(bin' → logprob: -3.731527805328369
    8. '")[' → logprob: -3.856527805328369
    9. ')' → logprob: -3.981527805328369
    10. 'format' → logprob: -4.481527805328369

Token 481: ' avec' (ID: 3937)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.7644641399383545
    2. 'pour' → logprob: -1.0144641399383545
    3. 's' → logprob: -2.8894641399383545
    4. 'si' → logprob: -3.5144641399383545
    5. ' si' → logprob: -3.6394641399383545
    6. 'avec' → logprob: -4.639464378356934
    7. ' ' → logprob: -4.889464378356934
    8. 'for' → logprob: -5.014464378356934
    9. 'S' → logprob: -5.264464378356934
    10. ' avec' → logprob: -5.514464378356934

Token 482: ' des' (ID: 731)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.060916826128959656
    2. 'b' → logprob: -3.1859169006347656
    3. ' bin' → logprob: -5.060916900634766
    4. 'format' → logprob: -5.685916900634766
    5. 'l' → logprob: -6.185916900634766
    6. 'N' → logprob: -6.810916900634766
    7. 'la' → logprob: -7.185916900634766
    8. '0' → logprob: -7.310916900634766
    9. 'z' → logprob: -7.685916900634766
    10. 'le' → logprob: -7.810916900634766

Token 483: ' z' (ID: 579)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0020653009414673
    2. '0' → logprob: -1.3770653009414673
    3. 'bin' → logprob: -1.3770653009414673
    4. 'N' → logprob: -2.3770651817321777
    5. 'leading' → logprob: -4.752065181732178
    6. 'z' → logprob: -4.877065181732178
    7. 'zeros' → logprob: -5.502065181732178
    8. 'format' → logprob: -5.877065181732178
    9. ' leading' → logprob: -6.002065181732178
    10. 'l' → logprob: -6.252065181732178

Token 484: 'éros' (ID: 120888)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.062403999269008636
    2. 'ero' → logprob: -3.187403917312622
    3. 'f' → logprob: -4.437404155731201
    4. 'eros' → logprob: -5.437404155731201
    5. '0' → logprob: -7.062404155731201
    6. 'er' → logprob: -7.687404155731201
    7. 'éros' → logprob: -7.937404155731201
    8. 'pad' → logprob: -8.562403678894043
    9. 'filled' → logprob: -8.687403678894043
    10. 'e' → logprob: -8.687403678894043

Token 485: ' init' (ID: 6327)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.14359110593795776
    2. 'format' → logprob: -3.3935911655426025
    3. ' =' → logprob: -4.018590927124023
    4. '{' → logprob: -4.393590927124023
    5. 'b' → logprob: -4.518590927124023
    6. '=' → logprob: -4.518590927124023
    7. ':' → logprob: -5.143590927124023
    8. ' bin' → logprob: -5.393590927124023
    9. 's' → logprob: -5.518590927124023
    10. ' format' → logprob: -5.518590927124023

Token 486: 'iaux' (ID: 35231)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6687920093536377
    2. ':' → logprob: -2.5437920093536377
    3. 'format' → logprob: -2.5437920093536377
    4. '0' → logprob: -2.6687920093536377
    5. 'fill' → logprob: -3.0437920093536377
    6. 'z' → logprob: -3.4187920093536377
    7. 'bin' → logprob: -3.6687920093536377
    8. 'f' → logprob: -3.6687920093536377
    9. '{' → logprob: -4.043791770935059
    10. ':b' → logprob: -4.043791770935059

Token 487: ' en' (ID: 469)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.5333302617073059
    2. ')' → logprob: -1.6583302021026611
    3. 'bin' → logprob: -2.783330202102661
    4. ',' → logprob: -3.158330202102661
    5. '")' → logprob: -3.408330202102661
    6. ')+' → logprob: -3.783330202102661
    7. '")[' → logprob: -4.03333044052124
    8. '),' → logprob: -4.65833044052124
    9. 'b' → logprob: -5.03333044052124
    10. ' )' → logprob: -5.90833044052124

Token 488: ' b' (ID: 287)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.09909473359584808
    2. 'b' → logprob: -2.4740946292877197
    3. 'format' → logprob: -5.724094867706299
    4. 'binary' → logprob: -5.724094867706299
    5. 'face' → logprob: -6.474094867706299
    6. 'front' → logprob: -6.974094867706299
    7. ' bin' → logprob: -7.724094867706299
    8. 'base' → logprob: -9.47409439086914
    9. '0' → logprob: -9.47409439086914
    10. 'bit' → logprob: -9.72409439086914

Token 489: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06836042553186417
    2. 'inaire' → logprob: -3.4433603286743164
    3. 'inary' → logprob: -4.318360328674316
    4. 'b' → logprob: -5.318360328674316
    5. 'bin' → logprob: -5.693360328674316
    6. 'i' → logprob: -5.818360328674316
    7. '{' → logprob: -6.193360328674316
    8. 'inal' → logprob: -6.818360328674316
    9. '```' → logprob: -7.068360328674316
    10. 'inar' → logprob: -7.193360328674316

Token 490: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1575225591659546
    2. ')[' → logprob: -1.1575225591659546
    3. 'bin' → logprob: -2.157522678375244
    4. ',' → logprob: -2.657522678375244
    5. '
' → logprob: -3.907522678375244
    6. '(bin' → logprob: -3.907522678375244
    7. ' +' → logprob: -3.907522678375244
    8. '   ' → logprob: -4.407522678375244
    9. '[i' → logprob: -4.657522678375244
    10. '[' → logprob: -4.657522678375244

Token 491: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07423488050699234
    2. ' b' → logprob: -3.199234962463379
    3. 'b' → logprob: -4.074234962463379
    4. ' mask' → logprob: -5.074234962463379
    5. ' bin' → logprob: -6.199234962463379
    6. '    ' → logprob: -6.324234962463379
    7. 'mask' → logprob: -6.324234962463379
    8. '	b' → logprob: -8.074234962463379
    9. 'bin' → logprob: -8.074234962463379
    10. ' s' → logprob: -8.449234962463379

Token 492: ' on' (ID: 402)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.2103860080242157
    2. ' bin' → logprob: -1.710386037826538
    3. 'format' → logprob: -5.085385799407959
    4. ' format' → logprob: -6.960385799407959
    5. 'b' → logprob: -7.085385799407959
    6. '(bin' → logprob: -7.585385799407959
    7. '[' → logprob: -9.335386276245117
    8. ' ' → logprob: -9.710386276245117
    9. '   ' → logprob: -9.835386276245117
    10. '(format' → logprob: -10.460386276245117

Token 493: ' décou' (ID: 68302)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.599161684513092
    2. ' bin' → logprob: -0.849161684513092
    3. 'b' → logprob: -4.099161624908447
    4. '[' → logprob: -5.349161624908447
    5. '_bin' → logprob: -7.349161624908447
    6. '(bin' → logprob: -8.224162101745605
    7. '.bin' → logprob: -8.599162101745605
    8. 'Bin' → logprob: -9.349162101745605
    9. 'format' → logprob: -9.474162101745605
    10. ' format' → logprob: -10.224162101745605

Token 494: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.23173533380031586
    2. 'page' → logprob: -1.856735348701477
    3. 'p' → logprob: -3.4817352294921875
    4. 'per' → logprob: -4.1067352294921875
    5. 'te' → logprob: -6.7317352294921875
    6. 'pte' → logprob: -7.1067352294921875
    7. 'pé' → logprob: -8.481735229492188
    8. '```' → logprob: -8.606735229492188
    9. 'pent' → logprob: -8.981735229492188
    10. 'e' → logprob: -9.606735229492188

Token 495: ' la' (ID: 557)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.2264319360256195
    2. '(' → logprob: -2.4764318466186523
    3. '(bin' → logprob: -2.4764318466186523
    4. '[' → logprob: -3.8514318466186523
    5. ' bin' → logprob: -4.726431846618652
    6. '1' → logprob: -6.476431846618652
    7. 'b' → logprob: -6.851431846618652
    8. 'str' → logprob: -8.101431846618652
    9. '()[' → logprob: -8.101431846618652
    10. '   ' → logprob: -8.226431846618652

Token 496: ' chaîne' (ID: 89288)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.21815480291843414
    2. '[' → logprob: -1.968154788017273
    3. ' bin' → logprob: -3.5931549072265625
    4. '1' → logprob: -4.3431549072265625
    5. 'b' → logprob: -4.4681549072265625
    6. '[-' → logprob: -6.7181549072265625
    7. '(' → logprob: -7.2181549072265625
    8. '(bin' → logprob: -7.3431549072265625
    9. 'format' → logprob: -7.8431549072265625
    10. 'str' → logprob: -7.9681549072265625

Token 497: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0712995529174805
    2. '[-' → logprob: -1.1962995529174805
    3. 'bin' → logprob: -2.0712995529174805
    4. '(bin' → logprob: -2.0712995529174805
    5. '(' → logprob: -2.9462995529174805
    6. ' bin' → logprob: -3.8212995529174805
    7. 'b' → logprob: -4.8212995529174805
    8. '(-' → logprob: -5.1962995529174805
    9. '[i' → logprob: -5.9462995529174805
    10. 's' → logprob: -6.6962995529174805

Token 498: ' saut' (ID: 111480)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01690291054546833
    2. '1' → logprob: -4.641902923583984
    3. '[-' → logprob: -5.141902923583984
    4. '```' → logprob: -7.266902923583984
    5. 'tail' → logprob: -8.516902923583984
    6. 'slice' → logprob: -9.516902923583984
    7. 'b' → logprob: -10.016902923583984
    8. 's' → logprob: -10.391902923583984
    9. '(' → logprob: -10.516902923583984
    10. 'chaine' → logprob: -10.641902923583984

Token 499: 'ant' (ID: 493)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2361205667257309
    2. '1' → logprob: -2.7361204624176025
    3. 'ant' → logprob: -3.3611204624176025
    4. '[-' → logprob: -4.111120700836182
    5. '   ' → logprob: -4.361120700836182
    6. 'e' → logprob: -4.361120700836182
    7. '[i' → logprob: -4.736120700836182
    8. 'ing' → logprob: -5.111120700836182
    9. 'er' → logprob: -5.111120700836182
    10. '[N' → logprob: -5.236120700836182

Token 500: ' les' (ID: 1341)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001239196863025427
    2. ' ' → logprob: -9.125123977661133
    3. ' -' → logprob: -12.875123977661133
    4. '[' → logprob: -12.875123977661133
    5. ' la' → logprob: -13.375123977661133
    6. ' le' → logprob: -13.625123977661133
    7. '(' → logprob: -13.625123977661133
    8. '-' → logprob: -14.000123977661133
    9. 'l' → logprob: -14.000123977661133
    10. 'le' → logprob: -14.125123977661133

Token 501: ' trois' (ID: 25564)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025322602596133947
    2. ' ' → logprob: -6.127532482147217
    3. '2' → logprob: -8.127532005310059
    4. 'de' → logprob: -11.752532005310059
    5. 'prem' → logprob: -12.127532005310059
    6. '3' → logprob: -12.252532005310059
    7. 'b' → logprob: -12.377532005310059
    8. 'le' → logprob: -12.627532005310059
    9. 'l' → logprob: -12.752532005310059
    10. 'c' → logprob: -12.877532005310059

Token 502: ' premiers' (ID: 59140)
  Prédit: ' derniers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' derniers' → logprob: -0.9808927178382874
    2. ' caractères' → logprob: -1.2308926582336426
    3. ' premiers' → logprob: -2.1058926582336426
    4. '[' → logprob: -2.6058926582336426
    5. '[-' → logprob: -3.1058926582336426
    6. ' characters' → logprob: -3.6058926582336426
    7. 'car' → logprob: -4.105892658233643
    8. ' [' → logprob: -4.980892658233643
    9. ' caracteres' → logprob: -5.355892658233643
    10. ' dernières' → logprob: -5.355892658233643

Token 503: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.6314705610275269
    2. 'car' → logprob: -0.8814705610275269
    3. '[' → logprob: -3.3814706802368164
    4. ' caracteres' → logprob: -4.756470680236816
    5. 'chars' → logprob: -5.381470680236816
    6. 'characters' → logprob: -6.631470680236816
    7. ' caract' → logprob: -7.006470680236816
    8. ')' → logprob: -7.006470680236816
    9. 'bits' → logprob: -7.256470680236816
    10. '```' → logprob: -7.256470680236816

Token 504: ' ('' (ID: 9906)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3191150426864624
    2. 'bin' → logprob: -2.069115161895752
    3. '[-' → logprob: -3.319115161895752
    4. '(bin' → logprob: -3.444115161895752
    5. ' bin' → logprob: -3.944115161895752
    6. '(' → logprob: -4.194115161895752
    7. '   ' → logprob: -4.319115161895752
    8. ' [' → logprob: -4.944115161895752
    9. 'b' → logprob: -5.319115161895752
    10. '('' → logprob: -5.694115161895752

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09357544034719467
    2. 'b' → logprob: -3.0935754776000977
    3. 'bin' → logprob: -3.2185754776000977
    4. 'ob' → logprob: -6.593575477600098
    5. 'bi' → logprob: -7.093575477600098
    6. '1' → logprob: -7.468575477600098
    7. '10' → logprob: -7.718575477600098
    8. '01' → logprob: -7.843575477600098
    9. '00' → logprob: -9.468575477600098
    10. ''' → logprob: -9.593575477600098

Token 506: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.73183855926618e-05
    2. ':b' → logprob: -9.625077247619629
    3. 'bx' → logprob: -12.750077247619629
    4. 'x' → logprob: -13.125077247619629
    5. '[b' → logprob: -13.750077247619629
    6. ''b' → logprob: -14.250077247619629
    7. ':' → logprob: -14.250077247619629
    8. ''' → logprob: -14.500077247619629
    9. '1' → logprob: -14.750077247619629
    10. 'xb' → logprob: -14.875077247619629

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14808407425880432
    2. ''[' → logprob: -3.2730841636657715
    3. '')[' → logprob: -3.3980841636657715
    4. ''' → logprob: -4.0230841636657715
    5. '')' → logprob: -4.1480841636657715
    6. '[' → logprob: -4.2730841636657715
    7. ''),' → logprob: -5.0230841636657715
    8. '+' → logprob: -5.2730841636657715
    9. ''+' → logprob: -6.3980841636657715
    10. '',' → logprob: -6.6480841636657715

Token 508: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5688410401344299
    2. '')[' → logprob: -1.9438409805297852
    3. ''),' → logprob: -2.818840980529785
    4. ')' → logprob: -2.943840980529785
    5. ''))' → logprob: -3.068840980529785
    6. ''' → logprob: -3.068840980529785
    7. '1' → logprob: -3.443840980529785
    8. '0' → logprob: -5.068840980529785
    9. '').' → logprob: -5.068840980529785
    10. ''):' → logprob: -5.443840980529785

Token 509: ' pour' (ID: 1930)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.16249717772006989
    2. 'b' → logprob: -2.9124972820281982
    3. ' +' → logprob: -4.037497043609619
    4. '   ' → logprob: -4.162497043609619
    5. 'format' → logprob: -4.162497043609619
    6. '[' → logprob: -4.287497043609619
    7. ',' → logprob: -4.787497043609619
    8. ' bin' → logprob: -5.412497043609619
    9. ' format' → logprob: -5.912497043609619
    10. 'mask' → logprob: -5.912497043609619

Token 510: ' n' (ID: 297)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.4208889901638031
    2. ' bin' → logprob: -1.7958890199661255
    3. ' format' → logprob: -3.295888900756836
    4. 'mask' → logprob: -3.545888900756836
    5. 'format' → logprob: -3.920888900756836
    6. '   ' → logprob: -4.045888900756836
    7. 'b' → logprob: -4.420888900756836
    8. ' mask' → logprob: -4.795888900756836
    9. ' b' → logprob: -5.045888900756836
    10. ' comb' → logprob: -5.420888900756836

Token 511: ''avoir' (ID: 55863)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8257161378860474
    2. '   ' → logprob: -1.9507161378860474
    3. '[' → logprob: -2.450716018676758
    4. 'e' → logprob: -2.575716018676758
    5. '=' → logprob: -2.700716018676758
    6. ' =' → logprob: -2.825716018676758
    7. '+' → logprob: -2.825716018676758
    8. 'ex' → logprob: -2.950716018676758
    9. '[-' → logprob: -3.075716018676758
    10. 'ext' → logprob: -3.200716018676758

Token 512: ' que' (ID: 661)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.9823476076126099
    2. 'S' → logprob: -2.2323474884033203
    3. '[' → logprob: -2.2323474884033203
    4. 'N' → logprob: -3.1073474884033203
    5. 'le' → logprob: -3.4823474884033203
    6. 'bin' → logprob: -3.6073474884033203
    7. ' N' → logprob: -3.7323474884033203
    8. ' =' → logprob: -3.9823474884033203
    9. ' i' → logprob: -3.9823474884033203
    10. ' ' → logprob: -4.10734748840332

Token 513: ' N' (ID: 478)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.4029042720794678
    2. 'le' → logprob: -1.6529042720794678
    3. 'S' → logprob: -2.1529042720794678
    4. 'N' → logprob: -2.1529042720794678
    5. ' la' → logprob: -2.1529042720794678
    6. 'bin' → logprob: -2.5279042720794678
    7. 'les' → logprob: -3.0279042720794678
    8. 'format' → logprob: -4.277904510498047
    9. 'l' → logprob: -4.277904510498047
    10. ' S' → logprob: -4.402904510498047

Token 514: ' caractères' (ID: 183106)
  Prédit: ' bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -1.3567463159561157
    2. 'bits' → logprob: -1.6067463159561157
    3. ' characters' → logprob: -2.231746196746826
    4. ' digits' → logprob: -2.356746196746826
    5. 'digits' → logprob: -2.356746196746826
    6. 's' → logprob: -2.606746196746826
    7. ')' → logprob: -3.231746196746826
    8. 'chars' → logprob: -3.606746196746826
    9. ' caractères' → logprob: -3.981746196746826
    10. 'characters' → logprob: -3.981746196746826

Token 515: '.
' (ID: 558)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.19796143472194672
    2. '(bin' → logprob: -2.8229613304138184
    3. ' bin' → logprob: -3.1979613304138184
    4. ',' → logprob: -4.072961330413818
    5. '[' → logprob: -4.322961330413818
    6. 'format' → logprob: -4.447961330413818
    7. '   ' → logprob: -4.947961330413818
    8. '[i' → logprob: -5.322961330413818
    9. ' format' → logprob: -5.322961330413818
    10. 'b' → logprob: -5.822961330413818

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6061080694198608
    2. 'mask' → logprob: -2.1061081886291504
    3. ' mask' → logprob: -2.2311081886291504
    4. 'b' → logprob: -2.2311081886291504
    5. ' b' → logprob: -3.2311081886291504
    6. 'bits' → logprob: -4.23110818862915
    7. 'bin' → logprob: -4.73110818862915
    8. 'bit' → logprob: -4.98110818862915
    9. 's' → logprob: -5.23110818862915
    10. ' s' → logprob: -5.48110818862915

Token 517: ' bit' (ID: 3546)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8161323666572571
    2. 'mask' → logprob: -1.5661323070526123
    3. 'bits' → logprob: -1.5661323070526123
    4. 'bit' (adapté à ' bit') → logprob: -2.6911323070526123
    5. 'bin' → logprob: -3.8161323070526123
    6. '   ' → logprob: -4.441132545471191
    7. 's' → logprob: -4.691132545471191
    8. 'bs' → logprob: -5.316132545471191
    9. 'x' → logprob: -5.316132545471191
    10. 'pattern' → logprob: -5.566132545471191

Token 518: ' =' (ID: 314)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.4898480772972107
    2. 's' → logprob: -0.9898480772972107
    3. '_mask' → logprob: -4.9898481369018555
    4. 'string' → logprob: -5.1148481369018555
    5. '_str' → logprob: -7.1148481369018555
    6. '_string' → logprob: -7.3648481369018555
    7. '_s' → logprob: -7.9898481369018555
    8. '_repr' → logprob: -8.114848136901855
    9. '_pattern' → logprob: -8.364848136901855
    10. 'pattern' → logprob: -8.614848136901855

Token 519: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.00683057913556695
    2. ' bin' → logprob: -5.00683069229126
    3. 'format' → logprob: -9.256830215454102
    4. ' format' → logprob: -11.756830215454102
    5. '(bin' → logprob: -12.131830215454102
    6. '   ' → logprob: -12.756830215454102
    7. ' ' → logprob: -13.006830215454102
    8. 'b' → logprob: -14.506830215454102
    9. '  ' → logprob: -14.881830215454102
    10. 'f' → logprob: -15.631830215454102

Token 520: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5761801600456238
    2. '(i' → logprob: -0.8261801600456238
    3. '((' → logprob: -8.701180458068848
    4. ' (' → logprob: -9.576180458068848
    5. '(
' → logprob: -13.326180458068848
    6. '(N' → logprob: -13.701180458068848
    7. '(I' → logprob: -14.076180458068848
    8. 'i' → logprob: -15.326180458068848
    9. '1' → logprob: -15.326180458068848
    10. '(int' → logprob: -15.451180458068848

Token 521: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027999019250273705
    2. '(' → logprob: -4.402998924255371
    3. ' i' → logprob: -5.152998924255371
    4. '2' → logprob: -5.277998924255371
    5. '(i' → logprob: -5.652998924255371
    6. '1' → logprob: -7.527998924255371
    7. ' (' → logprob: -8.777998924255371
    8. ')' → logprob: -8.777998924255371
    9. '   ' → logprob: -9.902998924255371
    10. ' ' → logprob: -9.902998924255371

Token 522: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00014251544780563563
    2. ' **' → logprob: -8.875142097473145
    3. '*' → logprob: -13.125142097473145
    4. '*N' → logprob: -14.750142097473145
    5. '^' → logprob: -16.00014305114746
    6. '**)' → logprob: -16.25014305114746
    7. '```' → logprob: -18.12514305114746
    8. ' ' → logprob: -18.12514305114746
    9. '**
' → logprob: -18.87514305114746
    10. ' *' → logprob: -19.25014305114746

Token 523: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.008129963040119e-06
    2. ' N' → logprob: -12.500003814697266
    3. '(N' → logprob: -16.500003814697266
    4. ' ' → logprob: -17.250003814697266
    5. '>N' → logprob: -17.250003814697266
    6. '	N' → logprob: -17.375003814697266
    7. '<|end|>' → logprob: -17.500003814697266
    8. ')' → logprob: -18.000003814697266
    9. '[N' → logprob: -18.125003814697266
    10. ',N' → logprob: -18.250003814697266

Token 524: '+i' (ID: 49691)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1455099731683731
    2. ' +' → logprob: -2.020509958267212
    3. '+i' → logprob: -6.770510196685791
    4. ')[' → logprob: -7.020510196685791
    5. '|' → logprob: -8.145509719848633
    6. ')' → logprob: -8.395509719848633
    7. ')+' → logprob: -9.770509719848633
    8. ' |' → logprob: -9.770509719848633
    9. '[' → logprob: -9.895509719848633
    10. ' ' → logprob: -10.395509719848633

Token 525: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.00012558852904476225
    2. ' )[' → logprob: -9.125125885009766
    3. '[' → logprob: -11.625125885009766
    4. ')' → logprob: -12.000125885009766
    5. '-' → logprob: -14.750125885009766
    6. '")[' → logprob: -15.250125885009766
    7. '())[' → logprob: -15.625125885009766
    8. '')[' → logprob: -15.750125885009766
    9. '))[' → logprob: -15.750125885009766
    10. '```' → logprob: -16.000125885009766

Token 526: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.008979473263025284
    2. '-' → logprob: -4.883979320526123
    3. '2' → logprob: -6.633979320526123
    4. '1' → logprob: -10.883979797363281
    5. ':' → logprob: -11.383979797363281
    6. ' -' → logprob: -12.008979797363281
    7. ' ' → logprob: -12.258979797363281
    8. '][' → logprob: -12.633979797363281
    9. '```' → logprob: -12.633979797363281
    10. ')[' → logprob: -13.508979797363281

Token 527: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.003186743939295411
    2. ':' → logprob: -5.8781867027282715
    3. ' :]' → logprob: -8.62818717956543
    4. ':].' → logprob: -9.12818717956543
    5. ':N' → logprob: -10.37818717956543
    6. ']' → logprob: -10.50318717956543
    7. ':]
' → logprob: -11.12818717956543
    8. ' :' → logprob: -12.00318717956543
    9. ':],' → logprob: -12.00318717956543
    10. ']:' → logprob: -12.62818717956543

Token 528: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07180633395910263
    2. '    
' → logprob: -2.6968064308166504
    3. '   
' → logprob: -7.32180643081665
    4. '
' → logprob: -8.571805953979492
    5. '    ' → logprob: -8.571805953979492
    6. '  
' → logprob: -8.696805953979492
    7. '  ' → logprob: -9.196805953979492
    8. '     
' → logprob: -9.196805953979492
    9. '    
' → logprob: -9.446805953979492
    10. '        
' → logprob: -9.821805953979492

Token 529: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8528794050216675
    2. 'key' → logprob: -1.2278794050216675
    3. 'sub' → logprob: -2.602879524230957
    4. 'tmp' → logprob: -3.477879524230957
    5. 't' → logprob: -3.852879524230957
    6. 'p' → logprob: -3.977879524230957
    7. 'c' → logprob: -4.102879524230957
    8. 'x' → logprob: -4.102879524230957
    9. 'a' → logprob: -4.227879524230957
    10. 'k' → logprob: -4.977879524230957

Token 530: ' Ici' (ID: 145754)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6698571443557739
    2. 'tmp' → logprob: -1.794857144355774
    3. 'sub' → logprob: -2.4198570251464844
    4. 'x' → logprob: -3.7948570251464844
    5. 'a' → logprob: -3.9198570251464844
    6. 't' → logprob: -3.9198570251464844
    7. 'temp' → logprob: -4.044857025146484
    8. 'c' → logprob: -4.169857025146484
    9. 's' → logprob: -4.669857025146484
    10. 'A' → logprob: -4.794857025146484

Token 531: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3423367738723755
    2. 'key' → logprob: -1.4673367738723755
    3. ' key' → logprob: -3.467336654663086
    4. 'sub' → logprob: -5.342336654663086
    5. 't' → logprob: -6.092336654663086
    6. 'c' → logprob: -6.217336654663086
    7. 'k' → logprob: -6.217336654663086
    8. 'x' → logprob: -6.592336654663086
    9. 'a' → logprob: -6.592336654663086
    10. 'pattern' → logprob: -6.717336654663086

Token 532: ' on' (ID: 402)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.5919003486633301
    2. 'sub' → logprob: -2.34190034866333
    3. ' key' → logprob: -2.34190034866333
    4. 'subset' → logprob: -3.46690034866333
    5. 'tmp' → logprob: -3.59190034866333
    6. 'for' → logprob: -4.21690034866333
    7. 'A' → logprob: -4.34190034866333
    8. 't' → logprob: -4.46690034866333
    9. 'a' → logprob: -4.46690034866333
    10. 'c' → logprob: -4.59190034866333

Token 533: ' crée' (ID: 102256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.605545699596405
    2. 'key' → logprob: -1.8555457592010498
    3. ' key' → logprob: -2.85554575920105
    4. ' for' → logprob: -3.10554575920105
    5. 't' → logprob: -3.48054575920105
    6. 'sub' → logprob: -3.85554575920105
    7. 'c' → logprob: -4.230545520782471
    8. 'count' → logprob: -4.355545520782471
    9. 'tmp' → logprob: -4.480545520782471
    10. 'keys' → logprob: -4.480545520782471

Token 534: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9666736721992493
    2. ' un' → logprob: -1.0916736125946045
    3. 'un' → logprob: -2.7166736125946045
    4. 'a' → logprob: -3.0916736125946045
    5. ' a' → logprob: -3.4666736125946045
    6. ' key' → logprob: -3.4666736125946045
    7. ' ' → logprob: -3.4666736125946045
    8. '   ' → logprob: -4.466673851013184
    9. 'key' → logprob: -4.466673851013184
    10. 'une' → logprob: -4.966673851013184

Token 535: ' chaîne' (ID: 89288)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.18797634541988373
    2. 'sub' → logprob: -3.437976360321045
    3. 'mask' → logprob: -4.312976360321045
    4. 'tmp' → logprob: -4.312976360321045
    5. 'clé' → logprob: -4.312976360321045
    6. 'pattern' → logprob: -4.437976360321045
    7. 'cle' → logprob: -4.437976360321045
    8. 'c' → logprob: -4.562976360321045
    9. 'subset' → logprob: -4.812976360321045
    10. 't' → logprob: -4.812976360321045

Token 536: ' red' (ID: 3592)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.7335211038589478
    2. 'a' → logprob: -2.233520984649658
    3. ' key' → logprob: -2.233520984649658
    4. 'sub' → logprob: -2.858520984649658
    5. ' res' → logprob: -2.983520984649658
    6. 's' → logprob: -3.358520984649658
    7. '   ' → logprob: -3.483520984649658
    8. ' =' → logprob: -3.483520984649658
    9. 'tmp' → logprob: -3.483520984649658
    10. 'key' → logprob: -3.733520984649658

Token 537: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3374621570110321
    2. '=' → logprob: -1.8374621868133545
    3. '=""' → logprob: -2.9624621868133545
    4. 'u' → logprob: -4.087461948394775
    5. 'uct' → logprob: -4.212461948394775
    6. '=''' → logprob: -4.462461948394775
    7. 'uced' → logprob: -5.212461948394775
    8. '="' → logprob: -5.337461948394775
    9. 'es' → logprob: -5.712461948394775
    10. '='' → logprob: -6.087461948394775

Token 538: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.050636544823646545
    2. '=' → logprob: -3.0506365299224854
    3. '=""' → logprob: -7.0506367683410645
    4. ' ' → logprob: -7.6756367683410645
    5. '=''' → logprob: -8.050636291503906
    6. '   ' → logprob: -9.300636291503906
    7. '=""
' → logprob: -9.675636291503906
    8. 'red' → logprob: -9.800636291503906
    9. '=''
' → logprob: -10.800636291503906
    10. '""' → logprob: -11.050636291503906

Token 539: ' parcour' (ID: 130642)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.7895628213882446
    2. '"' → logprob: -1.2895628213882446
    3. '''' → logprob: -1.7895628213882446
    4. '''.' → logprob: -2.289562702178955
    5. ''' → logprob: -7.289562702178955
    6. '''
' → logprob: -7.414562702178955
    7. ' ''.' → logprob: -7.539562702178955
    8. ' ""' → logprob: -8.914563179016113
    9. ' "".' → logprob: -9.539563179016113
    10. '[]' → logprob: -9.789563179016113

Token 540: 'ant' (ID: 493)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.8280806541442871
    2. 'ant' → logprob: -1.703080654144287
    3. 'ge' → logprob: -1.828080654144287
    4. 'range' → logprob: -1.953080654144287
    5. 'ange' → logprob: -3.078080654144287
    6. '(S' → logprob: -4.578080654144287
    7. '(' → logprob: -5.578080654144287
    8. 'ue' → logprob: -5.703080654144287
    9. 'S' → logprob: -6.078080654144287
    10. 'e' → logprob: -6.578080654144287

Token 541: ' simult' (ID: 27260)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08978191763162613
    2. ' range' → logprob: -2.4647819995880127
    3. 'S' → logprob: -7.839781761169434
    4. '[' → logprob: -8.714781761169434
    5. '[S' → logprob: -9.339781761169434
    6. ' S' → logprob: -9.464781761169434
    7. '(range' → logprob: -9.589781761169434
    8. ' ' → logprob: -10.839781761169434
    9. '[
' → logprob: -11.714781761169434
    10. '[i' → logprob: -12.089781761169434

Token 542: 'anément' (ID: 193192)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.2309151291847229
    2. 'zip' → logprob: -2.980915069580078
    3. '(S' → logprob: -3.355915069580078
    4. 'enumer' → logprob: -3.605915069580078
    5. 'ue' → logprob: -3.980915069580078
    6. 'S' → logprob: -4.230915069580078
    7. '(zip' → logprob: -4.230915069580078
    8. 'ée' → logprob: -4.605915069580078
    9. 'ate' → logprob: -5.980915069580078
    10. '(' → logprob: -5.980915069580078

Token 543: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.20929376780986786
    2. 'zip' → logprob: -2.459293842315674
    3. ' S' → logprob: -3.209293842315674
    4. 'range' → logprob: -3.584293842315674
    5. ' zip' → logprob: -3.584293842315674
    6. ' range' → logprob: -5.834293842315674
    7. 'bit' → logprob: -6.334293842315674
    8. 'enumer' → logprob: -6.584293842315674
    9. ' bit' → logprob: -7.959293842315674
    10. ' ' → logprob: -8.709293365478516

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. 'for' → logprob: -15.000001907348633
    3. ',' → logprob: -15.125001907348633
    4. '[' → logprob: -15.250001907348633
    5. ' ' → logprob: -15.625001907348633
    6. '[:' → logprob: -15.875001907348633
    7. '   ' → logprob: -16.750001907348633
    8. 'S' → logprob: -16.875001907348633
    9. '(S' → logprob: -17.125001907348633
    10. 'range' → logprob: -17.312501907348633

Token 545: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26116621494293213
    2. ' et' → logprob: -1.7611662149429321
    3. ',S' → logprob: -3.1361660957336426
    4. ' ,' → logprob: -5.011166095733643
    5. 'et' → logprob: -5.386166095733643
    6. ' and' → logprob: -7.011166095733643
    7. ' ' → logprob: -7.761166095733643
    8. '(S' → logprob: -8.3861665725708
    9. ' S' → logprob: -8.5111665725708
    10. ')' → logprob: -8.8861665725708

Token 546: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.28119444847106934
    2. ' bit' → logprob: -1.4061944484710693
    3. 'zip' → logprob: -10.656194686889648
    4. ' zip' → logprob: -12.031194686889648
    5. '(bit' → logprob: -12.656194686889648
    6. 'bitr' → logprob: -13.281194686889648
    7. ' ' → logprob: -13.406194686889648
    8. 'range' → logprob: -13.406194686889648
    9. 'enumer' → logprob: -13.656194686889648
    10. '[' → logprob: -13.656194686889648

Token 547: ' lettre' (ID: 68013)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9263632893562317
    2. ',' → logprob: -1.176363229751587
    3. ')' → logprob: -2.551363229751587
    4. ' if' → logprob: -3.051363229751587
    5. '   ' → logprob: -3.551363229751587
    6. 'if' → logprob: -3.801363229751587
    7. 'for' → logprob: -3.926363229751587
    8. ']' → logprob: -4.426363468170166
    9. ':
' → logprob: -4.551363468170166
    10. ' :' → logprob: -4.801363468170166

Token 548: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11306177824735641
    2. 'for' → logprob: -3.3630616664886475
    3. ' in' → logprob: -3.4880616664886475
    4. 's' → logprob: -4.113061904907227
    5. ' for' → logprob: -5.238061904907227
    6. 'in' → logprob: -5.363061904907227
    7. ' ' → logprob: -5.738061904907227
    8. ' ,' → logprob: -5.863061904907227
    9. 'zip' → logprob: -6.988061904907227
    10. 'S' → logprob: -6.988061904907227

Token 549: ' lettre' (ID: 68013)
  Prédit: 'lett'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lett' → logprob: -0.06936770677566528
    2. ' lettre' → logprob: -3.3193676471710205
    3. 'letter' → logprob: -4.0693678855896
    4. 'l' → logprob: -5.6943678855896
    5. 'le' → logprob: -5.6943678855896
    6. 'let' → logprob: -6.6943678855896
    7. 'bit' → logprob: -7.0693678855896
    8. 'i' → logprob: -7.1943678855896
    9. 'lecture' → logprob: -7.4443678855896
    10. 'lette' → logprob: -7.8193678855896

Token 550: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8879550099372864
    2. '   ' → logprob: -1.0129549503326416
    3. 'red' → logprob: -2.1379549503326416
    4. ':' → logprob: -3.6379549503326416
    5. ' for' → logprob: -4.012955188751221
    6. 'for' → logprob: -4.262955188751221
    7. ' red' → logprob: -4.762955188751221
    8. ':
' → logprob: -4.762955188751221
    9. ')' → logprob: -5.262955188751221
    10. ' if' → logprob: -5.762955188751221

Token 551: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.04879753664135933
    2. ' zip' → logprob: -3.048797607421875
    3. '(zip' → logprob: -8.548797607421875
    4. 'enumer' → logprob: -11.673797607421875
    5. '[' → logprob: -13.048797607421875
    6. '.zip' → logprob: -13.798797607421875
    7. 's' → logprob: -13.923797607421875
    8. '_zip' → logprob: -14.298797607421875
    9. 'a' → logprob: -14.673797607421875
    10. 'c' → logprob: -15.048797607421875

Token 552: '().
' (ID: 58434)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6178882122039795
    2. ',' → logprob: -1.7428882122039795
    3. 'red' → logprob: -1.7428882122039795
    4. '(S' → logprob: -1.7428882122039795
    5. ':' → logprob: -2.2428882122039795
    6. 'for' → logprob: -2.8678882122039795
    7. '(red' → logprob: -3.2428882122039795
    8. ')' → logprob: -4.492888450622559
    9. ' for' → logprob: -4.617888450622559
    10. ' red' → logprob: -4.867888450622559

Token 553: '   ' (ID: 271)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.07421662658452988
    2. ' red' → logprob: -2.824216604232788
    3. '   ' → logprob: -4.449216842651367
    4. '_red' → logprob: -8.949216842651367
    5. ' ' → logprob: -9.324216842651367
    6. '[' → logprob: -9.949216842651367
    7. '
' → logprob: -10.574216842651367
    8. 'S' → logprob: -10.949216842651367
    9. 'Red' → logprob: -10.949216842651367
    10. ' S' → logprob: -11.324216842651367

Token 554: ' #' (ID: 1069)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.05733710154891014
    2. ' red' → logprob: -2.9323370456695557
    3. '   ' → logprob: -6.057337284088135
    4. ' ' → logprob: -10.432336807250977
    5. '_red' → logprob: -11.182336807250977
    6. '
' → logprob: -11.307336807250977
    7. ' S' → logprob: -11.807336807250977
    8. '    
' → logprob: -11.807336807250977
    9. 'S' → logprob: -12.057336807250977
    10. '  ' → logprob: -12.307336807250977

Token 555: ' Pour' (ID: 13931)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.10396154969930649
    2. ' red' → logprob: -2.47896146774292
    3. '   ' → logprob: -4.22896146774292
    4. ' ' → logprob: -8.978961944580078
    5. '  ' → logprob: -9.603961944580078
    6. 'S' → logprob: -9.978961944580078
    7. ' S' → logprob: -10.728961944580078
    8. '
' → logprob: -10.853961944580078
    9. '    ' → logprob: -12.166461944580078
    10. '    
' → logprob: -12.228961944580078

Token 556: ' chaque' (ID: 21194)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8755107522010803
    2. ' c' → logprob: -0.8755107522010803
    3. ' j' → logprob: -2.6255106925964355
    4. 'j' → logprob: -3.8755106925964355
    5. 'ch' → logprob: -4.7505106925964355
    6. 'red' → logprob: -4.7505106925964355
    7. ' red' → logprob: -4.8755106925964355
    8. ' k' → logprob: -4.8755106925964355
    9. 'k' → logprob: -5.2505106925964355
    10. 'a' → logprob: -5.5005106925964355

Token 557: ' paire' (ID: 148856)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1039772033691406
    2. 's' → logprob: -1.1039772033691406
    3. ' s' → logprob: -2.4789772033691406
    4. 'j' → logprob: -2.8539772033691406
    5. 'x' → logprob: -3.2289772033691406
    6. ' c' → logprob: -3.2289772033691406
    7. 'a' → logprob: -3.7289772033691406
    8. ' j' → logprob: -3.8539772033691406
    9. 'k' → logprob: -4.228977203369141
    10. 'i' → logprob: -4.228977203369141

Token 558: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.9440863728523254
    2. '(S' → logprob: -1.3190863132476807
    3. ' (' → logprob: -2.1940863132476807
    4. ',' → logprob: -2.6940863132476807
    5. '(c' → logprob: -3.3190863132476807
    6. '   ' → logprob: -3.8190863132476807
    7. 'red' → logprob: -3.9440863132476807
    8. '(' → logprob: -4.06908655166626
    9. ' ' → logprob: -4.44408655166626
    10. '(car' → logprob: -5.19408655166626

Token 559: 'd' (ID: 67)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.42766228318214417
    2. 's' → logprob: -1.5526622533798218
    3. 'lett' → logprob: -3.3026623725891113
    4. 'a' → logprob: -3.9276623725891113
    5. 'ch' → logprob: -4.552662372589111
    6. 'x' → logprob: -4.552662372589111
    7. '(c' → logprob: -4.677662372589111
    8. 'car' → logprob: -4.677662372589111
    9. 'l' → logprob: -4.802662372589111
    10. ' c' → logprob: -5.427662372589111

Token 560: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1729896068572998
    2. ',' → logprob: -1.4229896068572998
    3. 'S' → logprob: -2.6729896068573
    4. 'c' → logprob: -2.7979896068573
    5. 's' → logprob: -2.7979896068573
    6. 'i' → logprob: -3.1729896068573
    7. '_' → logprob: -3.2979896068573
    8. 'e' → logprob: -3.7979896068573
    9. 'r' → logprob: -3.7979896068573
    10. '_s' → logprob: -3.9229896068573

Token 561: ' s' (ID: 265)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12437451630830765
    2. ' b' → logprob: -2.2493746280670166
    3. 'm' → logprob: -5.6243743896484375
    4. 'k' → logprob: -6.4993743896484375
    5. 'v' → logprob: -6.8743743896484375
    6. 'r' → logprob: -7.1243743896484375
    7. 'c' → logprob: -7.3743743896484375
    8. 'j' → logprob: -7.7493743896484375
    9. 's' → logprob: -7.8743743896484375
    10. 't' → logprob: -8.124374389648438

Token 562: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8797296285629272
    2. '),' → logprob: -0.8797296285629272
    3. '1' → logprob: -1.8797296285629272
    4. 'd' → logprob: -5.129729747772217
    5. 'char' → logprob: -5.504729747772217
    6. 'car' → logprob: -6.129729747772217
    7. 'lett' → logprob: -6.379729747772217
    8. 'S' → logprob: -7.504729747772217
    9. '_char' → logprob: -7.754729747772217
    10. 's' → logprob: -7.754729747772217

Token 563: ' où' (ID: 15113)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13953325152397156
    2. ' in' → logprob: -2.639533281326294
    3. ',' → logprob: -3.389533281326294
    4. 'in' → logprob: -4.389533042907715
    5. ' if' → logprob: -5.639533042907715
    6. 'if' → logprob: -5.764533042907715
    7. '   ' → logprob: -6.514533042907715
    8. ' :' → logprob: -6.889533042907715
    9. ' ' → logprob: -7.139533042907715
    10. ')' → logprob: -7.639533042907715

Token 564: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09643887728452682
    2. ' d' → logprob: -2.8464388847351074
    3. '(d' → logprob: -3.4714388847351074
    4. ' (' → logprob: -6.721438884735107
    5. 's' → logprob: -7.471438884735107
    6. '(s' → logprob: -8.59643840789795
    7. 'S' → logprob: -8.59643840789795
    8. ' s' → logprob: -8.59643840789795
    9. '	d' → logprob: -9.09643840789795
    10. ' ' → logprob: -9.22143840789795

Token 565: ' vient' (ID: 40370)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016967952251434326
    2. ',d' → logprob: -5.1419677734375
    3. ' in' → logprob: -5.6419677734375
    4. ' ,' → logprob: -6.0169677734375
    5. 's' → logprob: -6.3919677734375
    6. ',s' → logprob: -7.1419677734375
    7. 'in' → logprob: -7.3919677734375
    8. ',_' → logprob: -7.7669677734375
    9. '_,' → logprob: -8.6419677734375
    10. ',S' → logprob: -8.6419677734375

Token 566: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7067974805831909
    2. 'from' → logprob: -1.206797480583191
    3. 'de' → logprob: -2.4567975997924805
    4. ' from' → logprob: -2.9567975997924805
    5. ',' → logprob: -3.3317975997924805
    6. ' du' → logprob: -3.9567975997924805
    7. 'd' → logprob: -5.8317975997924805
    8. ' d' → logprob: -6.0817975997924805
    9. 'du' → logprob: -6.2067975997924805
    10. ' ,' → logprob: -6.7067975997924805

Token 567: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07194157689809799
    2. 'd' → logprob: -3.446941614151001
    3. 'zip' → logprob: -3.946941614151001
    4. ' S' → logprob: -4.696941375732422
    5. ' zip' → logprob: -5.071941375732422
    6. 'bit' → logprob: -6.196941375732422
    7. ' d' → logprob: -7.946941375732422
    8. ' bit' → logprob: -8.696941375732422
    9. ' ' → logprob: -8.946941375732422
    10. '(zip' → logprob: -10.446941375732422

Token 568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.159660890465602e-05
    2. ',' → logprob: -10.00007152557373
    3. '2' → logprob: -11.50007152557373
    4. ' ,' → logprob: -12.81257152557373
    5. ')' → logprob: -13.06257152557373
    6. 'd' → logprob: -13.43757152557373
    7. ' ' → logprob: -13.75007152557373
    8. 'for' → logprob: -13.81257152557373
    9. '   ' → logprob: -14.18757152557373
    10. '_' → logprob: -14.50007152557373

Token 569: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29833945631980896
    2. ' if' → logprob: -1.7983394861221313
    3. 'if' → logprob: -3.173339366912842
    4. '   ' → logprob: -4.298339366912842
    5. ')' → logprob: -4.548339366912842
    6. 'd' → logprob: -5.173339366912842
    7. ' and' → logprob: -5.298339366912842
    8. ' et' → logprob: -5.923339366912842
    9. '),' → logprob: -6.048339366912842
    10. ' ,' → logprob: -6.173339366912842

Token 570: ' s' (ID: 265)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.5299239754676819
    2. 'bit' → logprob: -0.9049239754676819
    3. ' s' → logprob: -5.654923915863037
    4. 's' → logprob: -6.404923915863037
    5. 'b' → logprob: -7.029923915863037
    6. ' b' → logprob: -8.279924392700195
    7. ' ' → logprob: -8.529924392700195
    8. ' d' → logprob: -10.029924392700195
    9. '    ' → logprob: -10.154924392700195
    10. '  ' → logprob: -10.529924392700195

Token 571: ' du' (ID: 1462)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5442787408828735
    2. ',' → logprob: -1.0442787408828735
    3. 'in' → logprob: -3.419278621673584
    4. ')' → logprob: -3.544278621673584
    5. '),' → logprob: -5.669278621673584
    6. ' ,' → logprob: -6.794278621673584
    7. ' en' → logprob: -8.294279098510742
    8. 's' → logprob: -8.294279098510742
    9. ' )' → logprob: -9.106779098510742
    10. ' ),' → logprob: -9.544279098510742

Token 572: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.029753385111689568
    2. ' bit' → logprob: -3.5297534465789795
    3. 'bitr' → logprob: -13.779753684997559
    4. '(bit' → logprob: -14.404753684997559
    5. 'b' → logprob: -15.029753684997559
    6. '_bit' → logprob: -15.654753684997559
    7. '.bit' → logprob: -16.029752731323242
    8. 'bits' → logprob: -16.029752731323242
    9. ' ' → logprob: -16.029752731323242
    10. 'Bit' → logprob: -16.154752731323242

Token 573: '-string' (ID: 73286)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1359979808330536
    2. ',' → logprob: -3.260998010635376
    3. ':
' → logprob: -3.635998010635376
    4. '),' → logprob: -3.885998010635376
    5. '):' → logprob: -4.010997772216797
    6. 'if' → logprob: -4.885997772216797
    7. ' if' → logprob: -5.260997772216797
    8. ')' → logprob: -5.510997772216797
    9. '):
' → logprob: -6.385997772216797
    10. ' ' → logprob: -6.635997772216797

Token 574: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4366588890552521
    2. ',' → logprob: -1.5616588592529297
    3. '):' → logprob: -3.3116588592529297
    4. ':
' → logprob: -3.9366588592529297
    5. '),' → logprob: -4.06165885925293
    6. ' if' → logprob: -4.18665885925293
    7. '):
' → logprob: -4.31165885925293
    8. ')' → logprob: -4.43665885925293
    9. '   ' → logprob: -4.43665885925293
    10. ' :' → logprob: -5.18665885925293

Token 575: 'cha' (ID: 3836)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.64341139793396
    2. ' bit' → logprob: -1.14341139793396
    3. '),' → logprob: -2.76841139793396
    4. '   ' → logprob: -3.51841139793396
    5. ')' → logprob: -3.89341139793396
    6. ',' → logprob: -4.518411636352539
    7. '):
' → logprob: -5.268411636352539
    8. ' ' → logprob: -5.393411636352539
    9. 'd' → logprob: -5.768411636352539
    10. ' d' → logprob: -6.018411636352539

Token 576: 'îne' (ID: 55188)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018316633999347687
    2. 'ar' → logprob: -4.643316745758057
    3. 'z' → logprob: -6.143316745758057
    4. 'car' → logprob: -6.893316745758057
    5. 'rs' → logprob: -7.393316745758057
    6. 've' → logprob: -7.768316745758057
    7. 'in' → logprob: -7.893316745758057
    8. 's' → logprob: -8.143316268920898
    9. 'ne' → logprob: -8.143316268920898
    10. 'p' → logprob: -8.143316268920898

Token 577: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.9102437496185303
    2. '):' → logprob: -1.9102437496185303
    3. '):
' → logprob: -2.0352437496185303
    4. '1' → logprob: -2.0352437496185303
    5. '),' → logprob: -2.0352437496185303
    6. ' in' → logprob: -2.7852437496185303
    7. '   ' → logprob: -3.2852437496185303
    8. ')' → logprob: -3.4102437496185303
    9. 'bit' → logprob: -3.4102437496185303
    10. '(bit' → logprob: -3.6602437496185303

Token 578: ' '' (ID: 461)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.12441439926624298
    2. ' bit' → logprob: -3.2494144439697266
    3. 'bits' → logprob: -3.6244144439697266
    4. '1' → logprob: -3.7494144439697266
    5. 'S' → logprob: -4.249414443969727
    6. ')' → logprob: -6.249414443969727
    7. ' S' → logprob: -6.249414443969727
    8. ' bits' → logprob: -6.374414443969727
    9. 'd' → logprob: -6.499414443969727
    10. 'i' → logprob: -6.624414443969727

Token 579: '0' (ID: 15)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.10315067321062088
    2. '0' → logprob: -2.3531506061553955
    3. '10' → logprob: -6.603150844573975
    4. ''' → logprob: -6.728150844573975
    5. '1' → logprob: -8.353150367736816
    6. '010' → logprob: -9.478150367736816
    7. ' ' → logprob: -10.103150367736816
    8. '012' → logprob: -11.228150367736816
    9. '')' → logprob: -11.728150367736816
    10. 'd' → logprob: -12.978150367736816

Token 580: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009422066621482372
    2. '',' → logprob: -5.509422302246094
    3. ''),' → logprob: -6.759422302246094
    4. ' ou' → logprob: -7.009422302246094
    5. ''or' → logprob: -7.509422302246094
    6. ' or' → logprob: -7.884422302246094
    7. ','' → logprob: -8.009422302246094
    8. '')' → logprob: -8.009422302246094
    9. ',' → logprob: -8.134422302246094
    10. 'et' → logprob: -8.384422302246094

Token 581: ' et' (ID: 859)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007941020652651787
    2. ''or' → logprob: -5.382941246032715
    3. ' ou' → logprob: -6.882941246032715
    4. 'ou' → logprob: -7.007941246032715
    5. ''ou' → logprob: -8.507941246032715
    6. ''et' → logprob: -8.507941246032715
    7. 's' → logprob: -8.507941246032715
    8. 'et' → logprob: -8.757941246032715
    9. '')' → logprob: -8.882941246032715
    10. '',' → logprob: -9.007941246032715

Token 582: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5232947468757629
    2. '1' → logprob: -0.8982947468757629
    3. ' '' → logprob: -9.648294448852539
    4. ' ' → logprob: -10.398294448852539
    5. ''un' → logprob: -11.398294448852539
    6. 's' → logprob: -11.523294448852539
    7. ' et' → logprob: -11.648294448852539
    8. ',' → logprob: -12.148294448852539
    9. 'et' → logprob: -12.273294448852539
    10. '')' → logprob: -12.648294448852539

Token 583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013411965919658542
    2. ''' → logprob: -6.626341342926025
    3. '')' → logprob: -11.626340866088867
    4. '','' → logprob: -13.501340866088867
    5. '',' → logprob: -13.876340866088867
    6. ''),' → logprob: -13.876340866088867
    7. ' ' → logprob: -14.751340866088867
    8. ''''' → logprob: -15.001340866088867
    9. '').' → logprob: -15.126340866088867
    10. 's' → logprob: -15.126340866088867

Token 584: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.017841201275587082
    2. ''' → logprob: -4.892841339111328
    3. ''):' → logprob: -5.517841339111328
    4. ''):
' → logprob: -5.892841339111328
    5. '')' → logprob: -6.392841339111328
    6. '),' → logprob: -7.017841339111328
    7. 's' → logprob: -8.392841339111328
    8. '"),' → logprob: -9.517841339111328
    9. ''),
' → logprob: -9.767841339111328
    10. '').' → logprob: -10.017841339111328

Token 585: ' on' (ID: 402)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.5102370977401733
    2. ' red' → logprob: -1.1352370977401733
    3. ' d' → logprob: -3.635237216949463
    4. 'd' → logprob: -4.010237216949463
    5. '   ' → logprob: -4.385237216949463
    6. ''' → logprob: -4.635237216949463
    7. ' '' → logprob: -5.760237216949463
    8. '    ' → logprob: -5.885237216949463
    9. '"' → logprob: -6.885237216949463
    10. '    
' → logprob: -7.260237216949463

Token 586: ' sélection' (ID: 43472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.7806830406188965
    2. '+' → logprob: -1.9056830406188965
    3. ' d' → logprob: -2.0306830406188965
    4. ' +=' → logprob: -2.1556830406188965
    5. ''' → logprob: -2.2806830406188965
    6. 'd' → logprob: -2.9056830406188965
    7. '"' → logprob: -3.0306830406188965
    8. ' +' → logprob: -3.5306830406188965
    9. ' concatenate' → logprob: -3.6556830406188965
    10. '[' → logprob: -3.7806830406188965

Token 587: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.6885255575180054
    2. 'e' → logprob: -1.8135255575180054
    3. 'er' → logprob: -2.188525676727295
    4. 'ect' → logprob: -2.563525676727295
    5. 's' → logprob: -3.563525676727295
    6. 'd' → logprob: -3.813525676727295
    7. 're' → logprob: -4.188525676727295
    8. 'ct' → logprob: -4.313525676727295
    9. 'ue' → logprob: -4.438525676727295
    10. 'ects' → logprob: -4.438525676727295

Token 588: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4767712354660034
    2. 'd' → logprob: -0.9767712354660034
    3. ' s' → logprob: -6.976771354675293
    4. 's' → logprob: -7.601771354675293
    5. ' ' → logprob: -7.976771354675293
    6. 'S' → logprob: -8.851771354675293
    7. ' S' → logprob: -8.976771354675293
    8. ' '' → logprob: -9.351771354675293
    9. '   ' → logprob: -9.726771354675293
    10. '(d' → logprob: -9.851771354675293

Token 589: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03974354267120361
    2. 'if' → logprob: -3.289743423461914
    3. ' ' → logprob: -7.664743423461914
    4. 'd' → logprob: -8.664743423461914
    5. ' for' → logprob: -8.664743423461914
    6. '+' → logprob: -8.789743423461914
    7. '[::-' → logprob: -8.914743423461914
    8. '.lower' → logprob: -9.539743423461914
    9. ' si' → logprob: -9.664743423461914
    10. '.upper' → logprob: -9.664743423461914

Token 590: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.00408884696662426
    2. 's' → logprob: -5.504088878631592
    3. ' ' → logprob: -12.004088401794434
    4. ' not' → logprob: -12.754088401794434
    5. ' ' → logprob: -13.879088401794434
    6. '	s' → logprob: -15.879088401794434
    7. '_s' → logprob: -16.00408935546875
    8. ' ' → logprob: -16.37908935546875
    9. 'not' → logprob: -16.37908935546875
    10. '  ' → logprob: -17.12908935546875

Token 591: ' vaut' (ID: 83004)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.5653458833694458
    2. ' ==' → logprob: -1.0653458833694458
    3. '==' → logprob: -2.6903457641601562
    4. '=="' → logprob: -4.065345764160156
    5. '=' → logprob: -7.065345764160156
    6. ' =='' → logprob: -7.065345764160156
    7. '='' → logprob: -8.440345764160156
    8. ' =' → logprob: -9.315345764160156
    9. '[' → logprob: -9.940345764160156
    10. '==='' → logprob: -10.440345764160156

Token 592: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03968970105051994
    2. ' '' → logprob: -3.414689779281616
    3. '"' → logprob: -5.164689540863037
    4. ' "' → logprob: -8.914690017700195
    5. ' ' → logprob: -9.164690017700195
    6. '0' → logprob: -10.789690017700195
    7. '`' → logprob: -11.539690017700195
    8. ''un' → logprob: -11.914690017700195
    9. '1' → logprob: -12.039690017700195
    10. ''a' → logprob: -12.414690017700195

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07978504151105881
    2. '0' → logprob: -2.579785108566284
    3. ' ' → logprob: -7.454784870147705
    4. ''' → logprob: -8.079785346984863
    5. ' '' → logprob: -12.954785346984863
    6. ''''' → logprob: -13.954785346984863
    7. '"' → logprob: -14.142285346984863
    8. '[' → logprob: -15.517285346984863
    9. '' → logprob: -16.017284393310547
    10. '''' → logprob: -16.204784393310547

Token 594: ''.
' (ID: 49980)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20142191648483276
    2. ' else' → logprob: -1.7014219760894775
    3. ' ' → logprob: -13.326421737670898
    4. 'el' → logprob: -14.076421737670898
    5. '	else' → logprob: -14.326421737670898
    6. ' sinon' → logprob: -14.326421737670898
    7. 'elif' → logprob: -14.451421737670898
    8. '```' → logprob: -14.701421737670898
    9. '   ' → logprob: -14.826421737670898
    10. ',' → logprob: -14.951421737670898

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3493142127990723
    2. 'd' → logprob: -2.3493142127990723
    3. 'for' → logprob: -2.3493142127990723
    4. 'red' → logprob: -2.4743142127990723
    5. '[' → logprob: -2.5993142127990723
    6. 'else' → logprob: -2.7243142127990723
    7. 'if' → logprob: -2.9743142127990723
    8. ' if' → logprob: -3.0993142127990723
    9. ' ' → logprob: -3.3493142127990723
    10. ' else' → logprob: -3.3493142127990723

Token 596: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.13142499327659607
    2. ' red' → logprob: -2.256424903869629
    3. '   ' → logprob: -4.006424903869629
    4. '
' → logprob: -9.381424903869629
    5. ' ' → logprob: -9.506424903869629
    6. '  ' → logprob: -11.006424903869629
    7. '    
' → logprob: -11.131424903869629
    8. '_red' → logprob: -11.756424903869629
    9. '    ' → logprob: -12.006424903869629
    10. '       ' → logprob: -12.756424903869629

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031866179779171944
    2. ' =' → logprob: -8.25031852722168
    3. '=' → logprob: -10.00031852722168
    4. '_' → logprob: -11.87531852722168
    5. ' ' → logprob: -13.25031852722168
    6. '１' → logprob: -15.12531852722168
    7. 'uct' → logprob: -15.12531852722168
    8. '```' → logprob: -15.25031852722168
    9. 'string' → logprob: -15.62531852722168
    10. 's' → logprob: -15.81281852722168

Token 598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3935457468032837
    2. '=' → logprob: -1.1435457468032837
    3. ' +=' → logprob: -5.268545627593994
    4. '+=' → logprob: -6.518545627593994
    5. ' ' → logprob: -11.768546104431152
    6. '+' → logprob: -12.393546104431152
    7. '.append' → logprob: -12.768546104431152
    8. 's' → logprob: -13.268546104431152
    9. '   ' → logprob: -13.643546104431152
    10. '	' → logprob: -13.643546104431152

Token 599: ' "".' (ID: 94734)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.39013317227363586
    2. '"' → logprob: -1.1401331424713135
    3. ' ''.' → logprob: -6.640133380889893
    4. '''' → logprob: -7.015133380889893
    5. '""' → logprob: -7.515133380889893
    6. ' "".' → logprob: -7.890133380889893
    7. ''' → logprob: -9.390132904052734
    8. '''
' → logprob: -10.515132904052734
    9. '"",' → logprob: -11.640132904052734
    10. ''',' → logprob: -12.015132904052734

Token 600: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. 'j' → logprob: -16.375
    3. ' join' → logprob: -16.5
    4. 'jo' → logprob: -17.0
    5. '.join' → logprob: -18.0
    6. '.' → logprob: -19.75
    7. ' ' → logprob: -19.875
    8. '```' → logprob: -20.125
    9. '".' → logprob: -20.25
    10. '"' → logprob: -20.75

Token 601: '([' (ID: 5194)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.002525722375139594
    2. '([' → logprob: -6.252525806427002
    3. 'd' → logprob: -8.127525329589844
    4. '(' → logprob: -8.877525329589844
    5. '(
' → logprob: -9.002525329589844
    6. '[d' → logprob: -10.502525329589844
    7. '((' → logprob: -11.502525329589844
    8. '([
' → logprob: -14.877525329589844
    9. '([(' → logprob: -15.127525329589844
    10. ' (' → logprob: -15.627525329589844

Token 602: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0008308322867378592
    2. ' d' → logprob: -7.12583065032959
    3. '(d' → logprob: -11.50083065032959
    4. '   ' → logprob: -12.37583065032959
    5. '	d' → logprob: -12.37583065032959
    6. ' ' → logprob: -12.50083065032959
    7. 's' → logprob: -13.37583065032959
    8. '[d' → logprob: -14.25083065032959
    9. 'c' → logprob: -14.62583065032959
    10. '  ' → logprob: -15.12583065032959

Token 603: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5249382853507996
    2. ' for' → logprob: -1.2749383449554443
    3. 'if' → logprob: -2.5249383449554443
    4. ' if' → logprob: -3.0249383449554443
    5. ' ' → logprob: -8.024938583374023
    6. 'd' → logprob: -12.524938583374023
    7. '   ' → logprob: -13.274938583374023
    8. '  ' → logprob: -13.524938583374023
    9. '	for' → logprob: -14.524938583374023
    10. '    ' → logprob: -14.774938583374023

Token 604: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01969611831009388
    2. ' d' → logprob: -4.269696235656738
    3. '(d' → logprob: -5.394696235656738
    4. 's' → logprob: -7.269696235656738
    5. ' (' → logprob: -9.019696235656738
    6. '(s' → logprob: -9.394696235656738
    7. ' s' → logprob: -10.019696235656738
    8. ',' → logprob: -11.769696235656738
    9. ' ' → logprob: -12.144696235656738
    10. '	d' → logprob: -12.144696235656738

Token 605: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00423059705644846
    2. ',' → logprob: -6.504230499267578
    3. '(d' → logprob: -6.629230499267578
    4. 's' → logprob: -7.379230499267578
    5. ' d' → logprob: -8.004230499267578
    6. ',d' → logprob: -8.129230499267578
    7. 'S' → logprob: -9.754230499267578
    8. '(s' → logprob: -10.504230499267578
    9. ' (' → logprob: -11.004230499267578
    10. '(' → logprob: -11.129230499267578

Token 606: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.5107177862082608e-05
    2. ' s' → logprob: -10.625024795532227
    3. '_s' → logprob: -14.750024795532227
    4. 'b' → logprob: -15.500024795532227
    5. '	s' → logprob: -16.750024795532227
    6. '_' → logprob: -17.000024795532227
    7. '(s' → logprob: -17.000024795532227
    8. ' ' → logprob: -17.875024795532227
    9. 'd' → logprob: -18.250024795532227
    10. 't' → logprob: -18.250024795532227

Token 607: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.23061396181583405
    2. ' in' → logprob: -1.7306139469146729
    3. ',' → logprob: -3.605613946914673
    4. ',d' → logprob: -7.230614185333252
    5. 'd' → logprob: -7.480614185333252
    6. 'zip' → logprob: -8.980613708496094
    7. ' ' → logprob: -9.855613708496094
    8. ' zip' → logprob: -10.105613708496094
    9. ' ,' → logprob: -10.355613708496094
    10. 's' → logprob: -10.980613708496094

Token 608: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.0007105246186256409
    2. ' zip' → logprob: -7.250710487365723
    3. 'z' → logprob: -15.375710487365723
    4. ' ' → logprob: -15.875710487365723
    5. '(zip' → logprob: -16.00071144104004
    6. '
' → logprob: -17.00071144104004
    7. '.zip' → logprob: -17.62571144104004
    8. '   ' → logprob: -17.62571144104004
    9. 'pair' → logprob: -18.12571144104004
    10. '  ' → logprob: -18.50071144104004

Token 609: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.125
    3. '((' → logprob: -17.75
    4. '(s' → logprob: -17.75
    5. 'S' → logprob: -18.0
    6. ' (' → logprob: -20.0
    7. '(
' → logprob: -20.0
    8. 's' → logprob: -21.75
    9. '(range' → logprob: -23.0
    10. ' ' → logprob: -23.25

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. 'S' → logprob: -11.375012397766113
    3. '(S' → logprob: -15.000012397766113
    4. ',' → logprob: -16.125011444091797
    5. '[' → logprob: -16.500011444091797
    6. '(' → logprob: -16.625011444091797
    7. ' ' → logprob: -16.750011444091797
    8. ')' → logprob: -17.750011444091797
    9. '   ' → logprob: -17.812511444091797
    10. ' S' → logprob: -17.937511444091797

Token 611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010638902895152569
    2. ' ,' → logprob: -7.501063823699951
    3. ',S' → logprob: -8.25106430053711
    4. ',b' → logprob: -9.50106430053711
    5. '(bit' → logprob: -9.62606430053711
    6. ',s' → logprob: -10.62606430053711
    7. 's' → logprob: -11.25106430053711
    8. ',d' → logprob: -11.25106430053711
    9. 'S' → logprob: -11.25106430053711
    10. ',",' → logprob: -11.62606430053711

Token 612: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.001502717612311244
    2. ' bit' → logprob: -6.501502513885498
    3. '(bit' → logprob: -16.001502990722656
    4. '   ' → logprob: -16.376502990722656
    5. 'bin' → logprob: -16.751502990722656
    6. ' ' → logprob: -17.376502990722656
    7. 'b' → logprob: -18.751502990722656
    8. '    ' → logprob: -19.001502990722656
    9. 'bitr' → logprob: -19.126502990722656
    10. '-bit' → logprob: -19.376502990722656

Token 613: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.564896285533905
    2. 'if' → logprob: -1.1898963451385498
    3. ' if' → logprob: -2.06489634513855
    4. ' ' → logprob: -8.564896583557129
    5. ']' → logprob: -8.689896583557129
    6. '()' → logprob: -9.064896583557129
    7. ' )' → logprob: -11.689896583557129
    8. '	if' → logprob: -13.189896583557129
    9. '}' → logprob: -13.314896583557129
    10. '   ' → logprob: -13.314896583557129

Token 614: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47412577271461487
    2. ' if' → logprob: -0.9741257429122925
    3. ' ' → logprob: -9.974125862121582
    4. '	if' → logprob: -13.724125862121582
    5. 'If' → logprob: -15.224125862121582
    6. 's' → logprob: -15.599125862121582
    7. 'i' → logprob: -15.849125862121582
    8. '   ' → logprob: -16.099124908447266
    9. '()' → logprob: -16.474124908447266
    10. ' i' → logprob: -16.724124908447266

Token 615: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11282379925251007
    2. ' s' → logprob: -2.237823724746704
    3. '(s' → logprob: -14.862823486328125
    4. '	s' → logprob: -14.987823486328125
    5. ' ' → logprob: -15.112823486328125
    6. ' ' → logprob: -15.112823486328125
    7. '  ' → logprob: -16.612823486328125
    8. '   ' → logprob: -16.612823486328125
    9. ''s' → logprob: -17.612823486328125
    10. '_s' → logprob: -17.612823486328125

Token 616: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.43361687660217285
    2. ' ==' → logprob: -1.0586168766021729
    3. '=' → logprob: -5.808616638183594
    4. '=='' → logprob: -6.558616638183594
    5. '=="' → logprob: -8.058616638183594
    6. ' ' → logprob: -9.308616638183594
    7. ']==' → logprob: -11.183616638183594
    8. ' =='' → logprob: -11.183616638183594
    9. ' =' → logprob: -11.308616638183594
    10. '==
' → logprob: -11.558616638183594

Token 617: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007828421890735626
    2. ' '' → logprob: -4.882828235626221
    3. '"' → logprob: -8.507828712463379
    4. '1' → logprob: -11.132828712463379
    5. ' ' → logprob: -12.382828712463379
    6. ' "' → logprob: -14.132828712463379
    7. ' 
' → logprob: -15.257828712463379
    8. ' ' → logprob: -15.507828712463379
    9. '`' → logprob: -16.632827758789062
    10. '
' → logprob: -17.382827758789062

Token 618: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ''' → logprob: -11.87501049041748
    3. '"' → logprob: -13.00001049041748
    4. ' ' → logprob: -13.87501049041748
    5. '")' → logprob: -19.250009536743164
    6. '0' → logprob: -19.250009536743164
    7. ''"' → logprob: -19.875009536743164
    8. '' → logprob: -20.375009536743164
    9. ''s' → logprob: -20.375009536743164
    10. '2' → logprob: -20.750009536743164

Token 619: '"])
' (ID: 30883)
  Prédit: '"])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"])' → logprob: -0.000789259618613869
    2. '"]' → logprob: -7.750789165496826
    3. '])' → logprob: -8.750789642333984
    4. '")' → logprob: -9.250789642333984
    5. '"])
' → logprob: -10.000789642333984
    6. ''])' → logprob: -11.250789642333984
    7. '"]);' → logprob: -11.750789642333984
    8. '"' → logprob: -11.875789642333984
    9. '"]).' → logprob: -12.000789642333984
    10. '"]))' → logprob: -12.250789642333984

Token 620: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 621: ' #' (ID: 1069)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5924531817436218
    2. '   ' → logprob: -0.8424531817436218
    3. 'for' → logprob: -4.5924530029296875
    4. 'red' → logprob: -5.4674530029296875
    5. ' D' → logprob: -7.7174530029296875
    6. '    
' → logprob: -7.7174530029296875
    7. ' ' → logprob: -7.9674530029296875
    8. '  ' → logprob: -8.592453002929688
    9. ' for' → logprob: -8.592453002929688
    10. 'bit' → logprob: -9.217453002929688

Token 622: ' De' (ID: 1516)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0011159272398799658
    2. 'for' → logprob: -7.251115798950195
    3. '   ' → logprob: -8.626115798950195
    4. 'red' → logprob: -9.001115798950195
    5. 'if' → logprob: -10.126115798950195
    6. ' D' → logprob: -10.376115798950195
    7. '
' → logprob: -11.251115798950195
    8. 'ans' → logprob: -12.376115798950195
    9. '    
' → logprob: -12.501115798950195
    10. ' ' → logprob: -13.001115798950195

Token 623: ' même' (ID: 9679)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.370121717453003
    2. 'l' → logprob: -1.620121717453003
    3. 'f' → logprob: -1.745121717453003
    4. 'for' → logprob: -2.245121717453003
    5. 'red' → logprob: -2.745121717453003
    6. 'r' → logprob: -3.120121717453003
    7. ' red' → logprob: -3.370121717453003
    8. ' D' → logprob: -3.495121717453003
    9. ' la' → logprob: -4.370121955871582
    10. ' for' → logprob: -4.620121955871582

Token 624: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8728229999542236
    2. ' for' → logprob: -1.2478229999542236
    3. 'for' → logprob: -1.6228229999542236
    4. 'bit' → logprob: -2.7478229999542236
    5. ' bit' → logprob: -4.1228227615356445
    6. 'red' → logprob: -4.3728227615356445
    7. ',' → logprob: -6.3728227615356445
    8. ' ' → logprob: -7.2478227615356445
    9. ' red' → logprob: -7.3728227615356445
    10. '  ' → logprob: -7.4978227615356445

Token 625: ' on' (ID: 402)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.10248036682605743
    2. 'bit' → logprob: -2.977480411529541
    3. 'D' → logprob: -3.227480411529541
    4. 'for' → logprob: -5.727480411529541
    5. '   ' → logprob: -5.852480411529541
    6. ' red' → logprob: -8.477479934692383
    7. ' D' → logprob: -9.352479934692383
    8. 'd' → logprob: -9.352479934692383
    9. ' ' → logprob: -9.852479934692383
    10. ' bit' → logprob: -10.102479934692383

Token 626: ' crée' (ID: 102256)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.6563689112663269
    2. 'for' → logprob: -1.2813689708709717
    3. 'in' → logprob: -2.5313689708709717
    4. 'continue' → logprob: -3.0313689708709717
    5. 'increment' → logprob: -3.4063689708709717
    6. 'aj' → logprob: -4.531368732452393
    7. ' red' → logprob: -5.156368732452393
    8. ' for' → logprob: -5.281368732452393
    9. 'combine' → logprob: -6.281368732452393
    10. ' ' → logprob: -6.281368732452393

Token 627: ' blue' (ID: 9861)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.005273361224681139
    2. ' red' → logprob: -5.255273342132568
    3. '"' → logprob: -11.255273818969727
    4. '   ' → logprob: -12.255273818969727
    5. '
' → logprob: -12.505273818969727
    6. '[' → logprob: -12.880273818969727
    7. ' ' → logprob: -13.005273818969727
    8. 'redi' → logprob: -13.505273818969727
    9. '""' → logprob: -13.630273818969727
    10. '(red' → logprob: -13.755273818969727

Token 628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08237874507904053
    2. ' =' → logprob: -2.70737886428833
    3. '=' → logprob: -4.45737886428833
    4. '2' → logprob: -7.45737886428833
    5. ' ' → logprob: -9.457378387451172
    6. 's' → logprob: -10.457378387451172
    7. 'red' → logprob: -10.582378387451172
    8. 'r' → logprob: -11.457378387451172
    9. '="' → logprob: -12.394878387451172
    10. '"' → logprob: -12.707378387451172

Token 629: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282432079315186
    2. '=' → logprob: -2.2378244400024414
    3. ' ' → logprob: -14.612824440002441
    4. '="' → logprob: -14.737824440002441
    5. ' ="' → logprob: -15.237824440002441
    6. ' ' → logprob: -15.362824440002441
    7. ',' → logprob: -16.112823486328125
    8. '=""' → logprob: -16.237823486328125
    9. '#' → logprob: -16.862823486328125
    10. '"' → logprob: -16.862823486328125

Token 630: ' prenant' (ID: 140375)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6949339509010315
    2. ' "".' → logprob: -0.6949339509010315
    3. '''.' → logprob: -6.944933891296387
    4. '""' → logprob: -7.694933891296387
    5. ' ' → logprob: -8.319933891296387
    6. '"d' → logprob: -9.694933891296387
    7. ' ''.' → logprob: -10.694933891296387
    8. '"S' → logprob: -12.069933891296387
    9. '[' → logprob: -12.194933891296387
    10. 'd' → logprob: -12.444933891296387

Token 631: ' d' (ID: 272)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.21221603453159332
    2. '[d' → logprob: -1.8372160196304321
    3. '"d' → logprob: -4.087215900421143
    4. 'd' → logprob: -5.212215900421143
    5. ' "".' → logprob: -5.212215900421143
    6. '""' → logprob: -5.837215900421143
    7. '[' → logprob: -7.837215900421143
    8. '''.' → logprob: -7.837215900421143
    9. '[c' → logprob: -9.5872163772583
    10. '[s' → logprob: -9.7122163772583

Token 632: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34962931275367737
    2. 'for' → logprob: -1.224629282951355
    3. ' if' → logprob: -7.2246294021606445
    4. 'if' → logprob: -8.224629402160645
    5. ' ' → logprob: -9.849629402160645
    6. '	for' → logprob: -9.974629402160645
    7. '[' → logprob: -11.599629402160645
    8. '  ' → logprob: -11.724629402160645
    9. ' in' → logprob: -12.224629402160645
    10. 'd' → logprob: -12.412129402160645

Token 633: 'car' (ID: 6830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47463086247444153
    2. ' for' → logprob: -0.9746308326721191
    3. 'd' → logprob: -7.849630832672119
    4. ')' → logprob: -10.099631309509277
    5. ' d' → logprob: -10.349631309509277
    6. ' ' → logprob: -10.724631309509277
    7. '```' → logprob: -11.349631309509277
    8. '[d' → logprob: -11.599631309509277
    9. '  ' → logprob: -11.849631309509277
    10. '	for' → logprob: -11.974631309509277

Token 634: 'act' (ID: 588)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21170692145824432
    2. ' s' → logprob: -2.4617068767547607
    3. ' for' → logprob: -2.9617068767547607
    4. 'for' → logprob: -3.2117068767547607
    5. ' if' → logprob: -5.21170711517334
    6. '   ' → logprob: -6.08670711517334
    7. 'if' → logprob: -6.08670711517334
    8. ' pour' → logprob: -7.08670711517334
    9. ',' → logprob: -7.46170711517334
    10. 'pour' → logprob: -7.71170711517334

Token 635: 'ère' (ID: 4346)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5795304179191589
    2. 'for' → logprob: -0.8295304179191589
    3. 'if' → logprob: -6.204530239105225
    4. ' ' → logprob: -7.454530239105225
    5. ' if' → logprob: -7.579530239105225
    6. '   ' → logprob: -9.579530715942383
    7. '  ' → logprob: -9.704530715942383
    8. 'e' → logprob: -9.954530715942383
    9. '	for' → logprob: -9.954530715942383
    10. '```' → logprob: -10.079530715942383

Token 636: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10078366100788116
    2. 'for' → logprob: -2.350783586502075
    3. ',' → logprob: -8.350783348083496
    4. ' if' → logprob: -9.225783348083496
    5. ' pour' → logprob: -9.225783348083496
    6. 'pour' → logprob: -9.600783348083496
    7. ' ' → logprob: -11.100783348083496
    8. '	for' → logprob: -11.225783348083496
    9. ' in' → logprob: -11.600783348083496
    10. 'if' → logprob: -11.600783348083496

Token 637: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.027286214753985405
    2. ' S' → logprob: -3.6522862911224365
    3. ' ' → logprob: -7.402286052703857
    4. ',' → logprob: -8.777286529541016
    5. 'red' → logprob: -9.777286529541016
    6. '  ' → logprob: -10.277286529541016
    7. 'D' → logprob: -10.402286529541016
    8. '   ' → logprob: -11.152286529541016
    9. ' red' → logprob: -11.402286529541016
    10. ',S' → logprob: -11.402286529541016

Token 638: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5850102305412292
    2. 'for' → logprob: -1.085010290145874
    3. '2' → logprob: -2.960010290145874
    4. ' for' → logprob: -3.210010290145874
    5. '1' → logprob: -5.335010051727295
    6. 'pour' → logprob: -6.085010051727295
    7. ')' → logprob: -6.460010051727295
    8. ' pour' → logprob: -6.835010051727295
    9. 'or' → logprob: -7.210010051727295
    10. ' ,' → logprob: -7.585010051727295

Token 639: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.395576536655426
    2. 'for' → logprob: -1.6455764770507812
    3. ')' → logprob: -2.6455764770507812
    4. ' if' → logprob: -2.8955764770507812
    5. 'if' → logprob: -5.270576477050781
    6. ',' → logprob: -6.645576477050781
    7. ' pour' → logprob: -7.645576477050781
    8. 'pour' → logprob: -8.520576477050781
    9. ' ' → logprob: -8.895576477050781
    10. '),' → logprob: -9.520576477050781

Token 640: ' chaque' (ID: 21194)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5771172046661377
    2. 'for' → logprob: -0.8271172046661377
    3. ' if' → logprob: -7.827116966247559
    4. '	for' → logprob: -8.327116966247559
    5. 'if' → logprob: -8.452116966247559
    6. ' ' → logprob: -8.952116966247559
    7. '   ' → logprob: -9.702116966247559
    8. '
' → logprob: -10.827116966247559
    9. '  ' → logprob: -10.952116966247559
    10. ' pour' → logprob: -11.077116966247559

Token 641: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.6787678003311157
    2. ' time' → logprob: -1.5537678003311157
    3. ' s' → logprob: -2.053767681121826
    4. 'time' → logprob: -3.178767681121826
    5. ' if' → logprob: -3.553767681121826
    6. ' ' → logprob: -3.553767681121826
    7. ' d' → logprob: -3.678767681121826
    8. 's' → logprob: -4.928767681121826
    9. 'd' → logprob: -5.053767681121826
    10. 'if' → logprob: -5.303767681121826

Token 642: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.9207563400268555
    2. 'que' → logprob: -1.1707563400268555
    3. 'où' → logprob: -1.4207563400268555
    4. 'qu' → logprob: -3.5457563400268555
    5. ' où' → logprob: -5.2957563400268555
    6. 'pour' → logprob: -5.4207563400268555
    7. ' qu' → logprob: -6.1707563400268555
    8. ',' → logprob: -6.2957563400268555
    9. 'where' → logprob: -6.4207563400268555
    10. 's' → logprob: -6.6707563400268555

Token 643: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6931495666503906
    2. ' s' → logprob: -0.6931495666503906
    3. ' ' → logprob: -13.31814956665039
    4. '(s' → logprob: -15.56814956665039
    5. 'd' → logprob: -15.94314956665039
    6. '   ' → logprob: -16.31814956665039
    7. '	s' → logprob: -16.69314956665039
    8. '_s' → logprob: -16.94314956665039
    9. ' ' → logprob: -16.94314956665039
    10. '  ' → logprob: -17.31814956665039

Token 644: ' (' (ID: 350)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6933615207672119
    2. ' ==' → logprob: -0.6933615207672119
    3. '=="' → logprob: -9.193361282348633
    4. '!=' → logprob: -10.318361282348633
    5. ' !=' → logprob: -10.443361282348633
    6. '=' → logprob: -10.568361282348633
    7. '=='' → logprob: -11.443361282348633
    8. ' ' → logprob: -12.318361282348633
    9. '==
' → logprob: -12.818361282348633
    10. ' =' → logprob: -13.818361282348633

Token 645: 'le' (ID: 282)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11036218702793121
    2. '==' → logprob: -2.9853622913360596
    3. ' s' → logprob: -3.3603622913360596
    4. ' ==' → logprob: -3.9853622913360596
    5. '=="' → logprob: -7.8603620529174805
    6. '=='' → logprob: -8.98536205291748
    7. ')' → logprob: -9.86036205291748
    8. '!=' → logprob: -10.73536205291748
    9. ' ' → logprob: -10.73536205291748
    10. '=' → logprob: -10.98536205291748

Token 646: ' caractère' (ID: 80509)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12149655818939209
    2. ' s' → logprob: -2.6214966773986816
    3. 'bit' → logprob: -4.121496677398682
    4. 'car' → logprob: -4.621496677398682
    5. ' ' → logprob: -5.121496677398682
    6. ' bit' → logprob: -6.246496677398682
    7. ' ==' → logprob: -6.246496677398682
    8. '==' → logprob: -6.371496677398682
    9. '=' → logprob: -6.996496677398682
    10. ')' → logprob: -7.496496677398682

Token 647: ' dans' (ID: 2671)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15284234285354614
    2. '==' → logprob: -2.0278422832489014
    3. '=="' → logprob: -4.7778425216674805
    4. '=='' → logprob: -6.6528425216674805
    5. ' est' → logprob: -9.65284252166748
    6. ' !=' → logprob: -9.90284252166748
    7. ' ' → logprob: -9.90284252166748
    8. ')' → logprob: -10.02784252166748
    9. 'de' → logprob: -10.40284252166748
    10. ' =="' → logprob: -10.40284252166748

Token 648: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.01842488907277584
    2. ' bit' → logprob: -4.018424987792969
    3. '"' → logprob: -9.018424987792969
    4. 'le' → logprob: -10.393424987792969
    5. 'red' → logprob: -10.893424987792969
    6. 'la' → logprob: -10.893424987792969
    7. '(bit' → logprob: -10.893424987792969
    8. ' le' → logprob: -11.018424987792969
    9. 'blue' → logprob: -11.393424987792969
    10. ' la' → logprob: -11.518424987792969

Token 649: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6157339811325073
    2. ')' → logprob: -1.3657339811325073
    3. ' ==' → logprob: -1.6157339811325073
    4. '=="' → logprob: -5.865734100341797
    5. ')==' → logprob: -6.365734100341797
    6. '=='' → logprob: -7.115734100341797
    7. ' est' → logprob: -8.615734100341797
    8. 'est' → logprob: -9.615734100341797
    9. '=' → logprob: -10.115734100341797
    10. ' )' → logprob: -10.240734100341797

Token 650: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5768885016441345
    2. ' ==' → logprob: -0.8268885016441345
    3. '=="' → logprob: -7.076888561248779
    4. '!=' → logprob: -10.201888084411621
    5. '=' → logprob: -10.951888084411621
    6. '=='' → logprob: -10.951888084411621
    7. ' !=' → logprob: -11.076888084411621
    8. '==
' → logprob: -12.076888084411621
    9. 'd' → logprob: -12.451888084411621
    10. ' ' → logprob: -13.076888084411621

Token 651: ' égal' (ID: 15059)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08400913327932358
    2. ''' → logprob: -2.5840091705322266
    3. ' "' → logprob: -6.209009170532227
    4. ' '' → logprob: -6.834009170532227
    5. '=' → logprob: -7.334009170532227
    6. '0' → logprob: -7.959009170532227
    7. 'not' → logprob: -8.084009170532227
    8. ' ' → logprob: -8.834009170532227
    9. '==' → logprob: -9.084009170532227
    10. ' ==' → logprob: -9.459009170532227

Token 652: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6595141887664795
    2. 'à' → logprob: -1.0345141887664795
    3. ' a' → logprob: -2.5345141887664795
    4. 'a' → logprob: -3.9095141887664795
    5. '=' → logprob: -4.409514427185059
    6. ''à' → logprob: -4.909514427185059
    7. '"' → logprob: -5.284514427185059
    8. '"a' → logprob: -6.659514427185059
    9. ' ' → logprob: -7.284514427185059
    10. ' =' → logprob: -8.034514427185059

Token 653: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.600581705570221
    2. ''' → logprob: -0.850581705570221
    3. '0' → logprob: -3.850581645965576
    4. ' '' → logprob: -6.350581645965576
    5. ' "' → logprob: -6.975581645965576
    6. ' ' → logprob: -7.850581645965576
    7. '1' → logprob: -13.100582122802734
    8. '`' → logprob: -14.600582122802734
    9. ' ' → logprob: -14.725582122802734
    10. '">' → logprob: -15.850582122802734

Token 654: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ''' → logprob: -10.875027656555176
    3. '1' → logprob: -11.875027656555176
    4. ' ' → logprob: -14.000027656555176
    5. '"' → logprob: -14.125027656555176
    6. '۰' → logprob: -17.62502670288086
    7. '`' → logprob: -18.00002670288086
    8. '```' → logprob: -18.31252670288086
    9. '"""' → logprob: -19.06252670288086
    10. '.' → logprob: -19.12502670288086

Token 655: ''.
' (ID: 49980)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05446343123912811
    2. '   ' → logprob: -3.6794633865356445
    3. ' if' → logprob: -4.0544633865356445
    4. '])
' → logprob: -5.6794633865356445
    5. 'if' → logprob: -6.0544633865356445
    6. ' ])' → logprob: -6.5544633865356445
    7. '"])' → logprob: -7.0544633865356445
    8. ')' → logprob: -7.1794633865356445
    9. ']' → logprob: -7.1794633865356445
    10. '")' → logprob: -8.804463386535645

Token 656: '   ' (ID: 271)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.02363349311053753
    2. ' blue' → logprob: -4.3986334800720215
    3. '   ' → logprob: -4.5236334800720215
    4. 'red' → logprob: -8.89863395690918
    5. '  ' → logprob: -10.89863395690918
    6. ' ' → logprob: -11.02363395690918
    7. '.blue' → logprob: -11.52363395690918
    8. '    
' → logprob: -11.77363395690918
    9. '_blue' → logprob: -12.39863395690918
    10. 'blu' → logprob: -12.39863395690918

Token 657: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.032202474772930145
    2. '   ' → logprob: -3.5322024822235107
    3. ' blue' → logprob: -6.032202243804932
    4. 'red' → logprob: -10.65720272064209
    5. ' ' → logprob: -11.53220272064209
    6. '  ' → logprob: -11.90720272064209
    7. '    
' → logprob: -12.65720272064209
    8. '
' → logprob: -13.03220272064209
    9. '```' → logprob: -14.40720272064209
    10. '	' → logprob: -14.53220272064209

Token 658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -13.12500286102295
    3. ' =' → logprob: -14.75000286102295
    4. '=' → logprob: -15.62500286102295
    5. ' ' → logprob: -15.62500286102295
    6. '
' → logprob: -17.375003814697266
    7. '

' → logprob: -17.937503814697266
    8. '１' → logprob: -17.937503814697266
    9. '```' → logprob: -18.125003814697266
    10. '   ' → logprob: -18.375003814697266

Token 659: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931481957435608
    2. ' =' → logprob: -0.6931481957435608
    3. '+=' → logprob: -14.818148612976074
    4. ' +=' → logprob: -15.193148612976074
    5. ' ' → logprob: -15.693148612976074
    6. ' ="' → logprob: -17.443147659301758
    7. '="' → logprob: -17.818147659301758
    8. '＝' → logprob: -17.943147659301758
    9. '.=' → logprob: -17.943147659301758
    10. '.append' → logprob: -18.318147659301758

Token 660: ' "".' (ID: 94734)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20195956528186798
    2. ' "".' → logprob: -1.7019596099853516
    3. '"d' → logprob: -8.451959609985352
    4. '''.' → logprob: -8.701959609985352
    5. '""' → logprob: -8.826959609985352
    6. 'd' → logprob: -11.326959609985352
    7. ' ' → logprob: -13.576959609985352
    8. '"",' → logprob: -13.576959609985352
    9. ' ''.' → logprob: -13.576959609985352
    10. '   ' → logprob: -13.951959609985352

Token 661: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.531315314830863e-06
    2. '"' → logprob: -13.500003814697266
    3. ' join' → logprob: -13.500003814697266
    4. '.join' → logprob: -15.500003814697266
    5. '".' → logprob: -15.875003814697266
    6. '''.' → logprob: -16.250003814697266
    7. ' "".' → logprob: -16.500003814697266
    8. 'jo' → logprob: -17.125003814697266
    9. '(join' → logprob: -17.875003814697266
    10. '""' → logprob: -18.000003814697266

Token 662: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.000264315924141556
    2. '[d' → logprob: -8.250264167785645
    3. '(d' → logprob: -12.750264167785645
    4. '[' → logprob: -16.37526512145996
    5. '(' → logprob: -17.00026512145996
    6. 'd' → logprob: -18.75026512145996
    7. '[b' → logprob: -19.62526512145996
    8. '([
' → logprob: -20.12526512145996
    9. '(['' → logprob: -20.37526512145996
    10. ' ([' → logprob: -20.50026512145996

Token 663: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.176947600673884e-05
    2. ' d' → logprob: -10.875021934509277
    3. '	d' → logprob: -14.375021934509277
    4. ''d' → logprob: -14.625021934509277
    5. '(d' → logprob: -14.750021934509277
    6. ' ' → logprob: -14.875021934509277
    7. '"d' → logprob: -15.625021934509277
    8. '   ' → logprob: -16.25002098083496
    9. ')d' → logprob: -16.68752098083496
    10. '_d' → logprob: -16.68752098083496

Token 664: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3135184943675995
    2. 'for' → logprob: -1.3135185241699219
    3. ',' → logprob: -8.313518524169922
    4. ' ' → logprob: -11.438518524169922
    5. ' ,' → logprob: -14.938518524169922
    6. 'd' → logprob: -15.313518524169922
    7. '	for' → logprob: -16.188518524169922
    8. ' 
' → logprob: -16.563518524169922
    9. '
' → logprob: -17.563518524169922
    10. ' d' → logprob: -17.938518524169922

Token 665: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.000835716025903821
    2. ' d' → logprob: -7.25083589553833
    3. '(d' → logprob: -9.250835418701172
    4. 's' → logprob: -10.875835418701172
    5. '	d' → logprob: -12.625835418701172
    6. ',' → logprob: -13.125835418701172
    7. 'S' → logprob: -13.250835418701172
    8. '[d' → logprob: -13.500835418701172
    9. ',d' → logprob: -14.250835418701172
    10. ' ' → logprob: -15.125835418701172

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016761312261223793
    2. 'd' → logprob: -4.141761302947998
    3. ',d' → logprob: -7.391761302947998
    4. 's' → logprob: -9.266761779785156
    5. ' d' → logprob: -12.141761779785156
    6. ' ,' → logprob: -12.391761779785156
    7. 'S' → logprob: -13.016761779785156
    8. ',s' → logprob: -14.141761779785156
    9. '_,' → logprob: -14.391761779785156
    10. ' ' → logprob: -14.891761779785156

Token 667: ' s' (ID: 265)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.40448668599128723
    2. ' zip' → logprob: -1.1544866561889648
    3. 's' → logprob: -4.154486656188965
    4. ' s' → logprob: -6.529486656188965
    5. 'bit' → logprob: -8.404486656188965
    6. ' bit' → logprob: -10.779486656188965
    7. '(zip' → logprob: -10.779486656188965
    8. ',' → logprob: -10.779486656188965
    9. ' ' → logprob: -12.154486656188965
    10. 'blue' → logprob: -12.779486656188965

Token 668: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35905420780181885
    2. 'in' → logprob: -1.3590542078018188
    3. ' in' → logprob: -3.1090540885925293
    4. ' ,' → logprob: -9.734054565429688
    5. 'zip' → logprob: -10.359054565429688
    6. 'import' → logprob: -11.484054565429688
    7. ' zip' → logprob: -12.234054565429688
    8. ' ' → logprob: -12.859054565429688
    9. '(zip' → logprob: -13.234054565429688
    10. '[' → logprob: -14.359054565429688

Token 669: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.014171851798892021
    2. ' zip' → logprob: -4.264172077178955
    3. '(zip' → logprob: -12.014171600341797
    4. '.zip' → logprob: -13.514171600341797
    5. ' ' → logprob: -15.139171600341797
    6. '```' → logprob: -16.264171600341797
    7. '
' → logprob: -16.326671600341797
    8. 'z' → logprob: -17.076671600341797
    9. '_zip' → logprob: -17.076671600341797
    10. 'zoom' → logprob: -17.514171600341797

Token 670: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. ' (' → logprob: -17.5
    4. 'S' → logprob: -18.375
    5. '(
' → logprob: -18.625
    6. '(s' → logprob: -18.625
    7. 's' → logprob: -18.875
    8. ' ' → logprob: -21.0
    9. '<|end|>' → logprob: -21.25
    10. '((' → logprob: -21.375

Token 671: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04407644271850586
    2. 'S' → logprob: -3.669076442718506
    3. '(S' → logprob: -4.044076442718506
    4. ',S' → logprob: -10.169076919555664
    5. ',' → logprob: -10.294076919555664
    6. '[S' → logprob: -12.919076919555664
    7. ' S' → logprob: -13.169076919555664
    8. '(' → logprob: -13.169076919555664
    9. ')' → logprob: -13.294076919555664
    10. '=S' → logprob: -13.669076919555664

Token 672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001295222609769553
    2. ' ,' → logprob: -9.250129699707031
    3. '(bit' → logprob: -10.500129699707031
    4. '(' → logprob: -12.500129699707031
    5. '   ' → logprob: -14.125129699707031
    6. 'bit' → logprob: -14.875129699707031
    7. ' ' → logprob: -14.875129699707031
    8. ' bit' → logprob: -15.125129699707031
    9. ' (' → logprob: -16.37512969970703
    10. ',
' → logprob: -16.50012969970703

Token 673: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0015029559144750237
    2. ' bit' → logprob: -6.501502990722656
    3. 'blue' → logprob: -15.126502990722656
    4. ' ' → logprob: -15.751502990722656
    5. '(bit' → logprob: -16.376502990722656
    6. 'bin' → logprob: -17.876502990722656
    7. 'red' → logprob: -18.126502990722656
    8. 'b' → logprob: -18.626502990722656
    9. '.bit' → logprob: -19.001502990722656
    10. '   ' → logprob: -19.001502990722656

Token 674: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010866894444916397
    2. 'if' → logprob: -9.75010871887207
    3. ' )' → logprob: -10.50010871887207
    4. ' if' → logprob: -10.75010871887207
    5. ' ' → logprob: -14.75010871887207
    6. ')
' → logprob: -15.37510871887207
    7. '0' → logprob: -15.75010871887207
    8. ',' → logprob: -16.25010871887207
    9. '   ' → logprob: -16.25010871887207
    10. '）' → logprob: -16.62510871887207

Token 675: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011048170737922192
    2. 'if' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.761048316955566
    4. '	if' → logprob: -18.76104736328125
    5. ' not' → logprob: -19.76104736328125
    6. ' for' → logprob: -20.01104736328125
    7. ',' → logprob: -20.01104736328125
    8. ' ' → logprob: -20.01104736328125
    9. 'If' → logprob: -20.26104736328125
    10. ' in' → logprob: -20.76104736328125

Token 676: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31326544284820557
    2. ' s' → logprob: -1.3132654428482056
    3. ' ' → logprob: -13.313265800476074
    4. '(s' → logprob: -14.438265800476074
    5. '	s' → logprob: -14.563265800476074
    6. ' ' → logprob: -14.563265800476074
    7. '0' → logprob: -16.625764846801758
    8. '  ' → logprob: -16.688264846801758
    9. ' not' → logprob: -16.938264846801758
    10. 'not' → logprob: -16.938264846801758

Token 677: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4307747781276703
    2. '==' → logprob: -1.0557748079299927
    3. ' ' → logprob: -6.305774688720703
    4. ' !=' → logprob: -9.055774688720703
    5. '!=' → logprob: -9.805774688720703
    6. '=' → logprob: -9.930774688720703
    7. '==
' → logprob: -12.305774688720703
    8. '[' → logprob: -12.680774688720703
    9. '=="' → logprob: -12.680774688720703
    10. ' ' → logprob: -13.180774688720703

Token 678: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.015743641182780266
    2. ''' → logprob: -4.265743732452393
    3. '0' → logprob: -6.640743732452393
    4. ' "' → logprob: -8.390743255615234
    5. ' ' → logprob: -10.515743255615234
    6. ' '' → logprob: -11.015743255615234
    7. '
' → logprob: -14.640743255615234
    8. '">' → logprob: -15.265743255615234
    9. ' ' → logprob: -15.515743255615234
    10. '`' → logprob: -15.890743255615234

Token 679: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005421888781711459
    2. '"' → logprob: -7.625542163848877
    3. ''' → logprob: -9.875542640686035
    4. ' ' → logprob: -13.000542640686035
    5. '1' → logprob: -14.875542640686035
    6. ' "' → logprob: -17.00054168701172
    7. ''"' → logprob: -17.87554168701172
    8. '">' → logprob: -18.62554168701172
    9. '```' → logprob: -18.87554168701172
    10. '01' → logprob: -19.00054168701172

Token 680: '"])
' (ID: 30883)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002919234102591872
    2. '"])' → logprob: -6.3779191970825195
    3. ')])' → logprob: -6.8779191970825195
    4. ')' → logprob: -9.62791919708252
    5. ''])' → logprob: -9.75291919708252
    6. ' ])' → logprob: -10.25291919708252
    7. '")' → logprob: -11.75291919708252
    8. ')]' → logprob: -12.12791919708252
    9. '])]' → logprob: -12.25291919708252
    10. '])
' → logprob: -12.50291919708252

Token 681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02297755889594555
    2. '    
' → logprob: -4.147977352142334
    3. 'D' → logprob: -5.647977352142334
    4. '
' → logprob: -6.272977352142334
    5. '  
' → logprob: -7.647977352142334
    6. '<|end|>' → logprob: -8.772977828979492
    7. 'red' → logprob: -9.022977828979492
    8. 'for' → logprob: -9.147977828979492
    9. '   
' → logprob: -9.272977828979492
    10. ' D' → logprob: -9.397977828979492

Token 682: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2842881977558136
    2. 'D' → logprob: -1.4092881679534912
    3. '    
' → logprob: -6.40928840637207
    4. ' D' → logprob: -7.15928840637207
    5. '
' → logprob: -9.15928840637207
    6. ' ' → logprob: -9.28428840637207
    7. '	D' → logprob: -9.28428840637207
    8. 'red' → logprob: -9.40928840637207
    9. '  
' → logprob: -9.53428840637207
    10. 'if' → logprob: -9.65928840637207

Token 683: ' On' (ID: 2160)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0005958048277534544
    2. '   ' → logprob: -7.875595569610596
    3. 'for' → logprob: -8.875596046447754
    4. 'if' → logprob: -10.125596046447754
    5. ' D' → logprob: -11.125596046447754
    6. 'red' → logprob: -11.375596046447754
    7. ' ' → logprob: -13.125596046447754
    8. 'key' → logprob: -13.625596046447754
    9. '    
' → logprob: -13.750596046447754
    10. '
' → logprob: -14.000596046447754

Token 684: ' utilise' (ID: 70283)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0630362406373024
    2. '[' → logprob: -3.4380362033843994
    3. ' D' → logprob: -4.0630364418029785
    4. '[D' → logprob: -4.6880364418029785
    5. '[
' → logprob: -6.4380364418029785
    6. ']' → logprob: -8.31303596496582
    7. ' ' → logprob: -8.43803596496582
    8. '   ' → logprob: -8.93803596496582
    9. 'for' → logprob: -9.43803596496582
    10. '  ' → logprob: -10.43803596496582

Token 685: ' le' (ID: 505)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.007589587476104498
    2. ' D' → logprob: -5.007589817047119
    3. 'red' → logprob: -7.632589817047119
    4. '(D' → logprob: -9.257589340209961
    5. ' red' → logprob: -9.382589340209961
    6. '   ' → logprob: -9.507589340209961
    7. '(
' → logprob: -10.257589340209961
    8. '(' → logprob: -10.507589340209961
    9. ' ' → logprob: -10.632589340209961
    10. 'blue' → logprob: -12.132589340209961

Token 686: ' tuple' (ID: 31311)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.34672805666923523
    2. '[' → logprob: -2.4717280864715576
    3. 'for' → logprob: -3.4717280864715576
    4. ' D' → logprob: -3.5967280864715576
    5. ']' → logprob: -3.7217280864715576
    6. 'red' → logprob: -3.7217280864715576
    7. '[
' → logprob: -3.9717280864715576
    8. ' ' → logprob: -4.3467278480529785
    9. '[]' → logprob: -4.5967278480529785
    10. ' red' → logprob: -4.8467278480529785

Token 687: ' (' (ID: 350)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.05462689325213432
    2. '(' → logprob: -3.054626941680908
    3. '[(' → logprob: -5.929626941680908
    4. '   ' → logprob: -6.679626941680908
    5. 'red' → logprob: -7.054626941680908
    6. '(ans' → logprob: -8.30462646484375
    7. 'key' → logprob: -9.05462646484375
    8. ' (' → logprob: -9.05462646484375
    9. '((' → logprob: -9.05462646484375
    10. '[' → logprob: -9.05462646484375

Token 688: 'red' (ID: 1291)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.0661177784204483
    2. 'red' → logprob: -2.816117763519287
    3. '(' → logprob: -5.566117763519287
    4. 'blue' → logprob: -9.191118240356445
    5. ' red' → logprob: -9.316118240356445
    6. ' (' → logprob: -9.441118240356445
    7. ')' → logprob: -11.316118240356445
    8. '   ' → logprob: -11.941118240356445
    9. '
' → logprob: -12.441118240356445
    10. '(
' → logprob: -12.566118240356445

Token 689: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '(red' → logprob: -13.875000953674316
    3. '(' → logprob: -14.875000953674316
    4. '(
' → logprob: -18.000001907348633
    5. 'red' → logprob: -18.375001907348633
    6. ',' → logprob: -18.875001907348633
    7. ' (' → logprob: -19.625001907348633
    8. ' ' → logprob: -20.000001907348633
    9. '(s' → logprob: -20.125001907348633
    10. ')' → logprob: -20.500001907348633

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. ',
' → logprob: -11.00002384185791
    3. ' ,' → logprob: -12.00002384185791
    4. '‌,' → logprob: -15.75002384185791
    5. '
' → logprob: -16.500022888183594
    6. ',\
' → logprob: -16.875022888183594
    7. ',"' → logprob: -17.000022888183594
    8. ')' → logprob: -17.125022888183594
    9. ',b' → logprob: -17.250022888183594
    10. ' ' → logprob: -17.250022888183594

Token 691: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.12697461247444153
    2. ' blue' → logprob: -2.126974582672119
    3. 'ble' → logprob: -10.876975059509277
    4. ' ' → logprob: -11.501975059509277
    5. ' bleu' → logprob: -11.876975059509277
    6. '(' → logprob: -12.626975059509277
    7. ')' → logprob: -13.751975059509277
    8. '  ' → logprob: -14.001975059509277
    9. 'blu' → logprob: -14.001975059509277
    10. '   ' → logprob: -14.439475059509277

Token 692: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -15.000000953674316
    3. ',' → logprob: -16.375
    4. ' ' → logprob: -18.375
    5. 'red' → logprob: -18.875
    6. '),' → logprob: -19.1875
    7. '_' → logprob: -19.1875
    8. '
' → logprob: -19.25
    9. '[' → logprob: -19.5
    10. 'blue' → logprob: -19.625

Token 693: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27511072158813477
    2. ']' → logprob: -2.1501107215881348
    3. ']+=' → logprob: -2.6501107215881348
    4. ')]' → logprob: -3.0251107215881348
    5. '])' → logprob: -5.650110721588135
    6. ')+' → logprob: -7.525110721588135
    7. ')])' → logprob: -8.150110244750977
    8. ']+' → logprob: -8.275110244750977
    9. ' )' → logprob: -9.525110244750977
    10. ')
' → logprob: -10.275110244750977

Token 694: ' comme' (ID: 7971)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03947371244430542
    2. 'D' → logprob: -4.539473533630371
    3. ')' → logprob: -4.914473533630371
    4. '[D' → logprob: -4.914473533630371
    5. '   ' → logprob: -6.039473533630371
    6. '
' → logprob: -6.414473533630371
    7. '][' → logprob: -6.414473533630371
    8. '[' → logprob: -6.539473533630371
    9. ']
' → logprob: -6.664473533630371
    10. ' D' → logprob: -6.664473533630371

Token 695: ' clé' (ID: 83188)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.6578904390335083
    2. 'clé' → logprob: -1.5328904390335083
    3. ' clé' → logprob: -1.9078904390335083
    4. 'key' → logprob: -2.1578903198242188
    5. 'cle' → logprob: -6.532890319824219
    6. ' ' → logprob: -8.907890319824219
    7. ' ключ' → logprob: -9.032890319824219
    8. 'cl' → logprob: -9.532890319824219
    9. 'cles' → logprob: -9.782890319824219
    10. ' cle' → logprob: -9.907890319824219

Token 696: ' dans' (ID: 2671)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03641572594642639
    2. '   ' → logprob: -3.7864158153533936
    3. ')' → logprob: -4.7864155769348145
    4. 'D' → logprob: -6.6614155769348145
    5. ']
' → logprob: -6.6614155769348145
    6. '][' → logprob: -7.7864155769348145
    7. '[D' → logprob: -8.036416053771973
    8. ')
' → logprob: -8.536416053771973
    9. ' in' → logprob: -8.786416053771973
    10. ' D' → logprob: -8.911416053771973

Token 697: ' le' (ID: 505)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.547789674485102e-05
    2. ' D' → logprob: -10.250035285949707
    3. ')' → logprob: -19.750036239624023
    4. '   ' → logprob: -20.125036239624023
    5. ' ' → logprob: -20.250036239624023
    6. '```' → logprob: -20.750036239624023
    7. '[D' → logprob: -20.875036239624023
    8. '	D' → logprob: -20.875036239624023
    9. '
' → logprob: -21.125036239624023
    10. '`' → logprob: -21.250036239624023

Token 698: ' diction' (ID: 155259)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -9.968312951968983e-06
    2. ' D' → logprob: -11.875009536743164
    3. ' diction' → logprob: -13.250009536743164
    4. 'd' → logprob: -14.000009536743164
    5. ')' → logprob: -16.000009536743164
    6. '[D' → logprob: -16.375009536743164
    7. '[
' → logprob: -17.125009536743164
    8. ']' → logprob: -17.500009536743164
    9. 'dictionary' → logprob: -17.500009536743164
    10. '
' → logprob: -17.875009536743164

Token 699: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.1532408744096756
    2. 'aire' → logprob: -2.153240919113159
    3. 'ary' → logprob: -3.653240919113159
    4. 'n' → logprob: -10.278241157531738
    5. 'na' → logprob: -11.903241157531738
    6. '```' → logprob: -12.653241157531738
    7. 'a' → logprob: -12.778241157531738
    8. 'D' → logprob: -12.903241157531738
    9. '[' → logprob: -13.028241157531738
    10. '{' → logprob: -13.028241157531738

Token 700: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00256757577881217
    2. '[D' → logprob: -6.502567768096924
    3. '[(' → logprob: -7.502567768096924
    4. ']' → logprob: -8.502567291259766
    5. '(D' → logprob: -8.752567291259766
    6. ')' → logprob: -9.377567291259766
    7. ' D' → logprob: -10.502567291259766
    8. '][' → logprob: -11.627567291259766
    9. '[' → logprob: -11.627567291259766
    10. '[
' → logprob: -12.627567291259766

Token 701: '.' (ID: 13)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5360268354415894
    2. '[D' → logprob: -1.0360268354415894
    3. 'D' → logprob: -3.411026954650879
    4. '   ' → logprob: -4.911026954650879
    5. '[' → logprob: -5.161026954650879
    6. ']+=' → logprob: -5.786026954650879
    7. '[(' → logprob: -6.036026954650879
    8. ')' → logprob: -6.161026954650879
    9. '][' → logprob: -6.286026954650879
    10. ' D' → logprob: -6.411026954650879

Token 702: ' On' (ID: 2160)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.7389307618141174
    2. '   ' → logprob: -0.7389307618141174
    3. ' D' → logprob: -3.1139307022094727
    4. '	D' → logprob: -8.863930702209473
    5. ' ' → logprob: -9.238930702209473
    6. '
' → logprob: -10.988930702209473
    7. '    
' → logprob: -10.988930702209473
    8. ')' → logprob: -10.988930702209473
    9. '[D' → logprob: -11.363930702209473
    10. '  ' → logprob: -11.863930702209473

Token 703: ' ajoute' (ID: 91611)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6939751505851746
    2. '[' → logprob: -0.8189751505851746
    3. '[D' → logprob: -3.4439752101898193
    4. '[
' → logprob: -4.44397497177124
    5. ' D' → logprob: -5.19397497177124
    6. '[i' → logprob: -5.31897497177124
    7. ']' → logprob: -5.69397497177124
    8. ']+=' → logprob: -7.69397497177124
    9. 'increment' → logprob: -8.193975448608398
    10. ' [' → logprob: -8.443975448608398

Token 704: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03004424273967743
    2. ' ' → logprob: -3.5300443172454834
    3. '+' → logprob: -8.780044555664062
    4. ' +' → logprob: -8.905044555664062
    5. ' +=' → logprob: -13.030044555664062
    6. '   ' → logprob: -14.280044555664062
    7. '  ' → logprob: -14.905044555664062
    8. ')' → logprob: -15.155044555664062
    9. ' plus' → logprob: -15.655044555664062
    10. '    ' → logprob: -15.780044555664062

Token 705: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001063536386936903
    2. ' ' → logprob: -6.876063346862793
    3. '+' → logprob: -10.501063346862793
    4. ' +' → logprob: -12.751063346862793
    5. '   ' → logprob: -15.626063346862793
    6. '+=' → logprob: -17.25106430053711
    7. ' +=' → logprob: -17.37606430053711
    8. '  ' → logprob: -17.50106430053711
    9. ')' → logprob: -18.62606430053711
    10. '
' → logprob: -19.00106430053711

Token 706: ' à' (ID: 1221)
  Prédit: '[D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.22408391535282135
    2. ']' → logprob: -2.34908390045166
    3. 'D' → logprob: -2.97408390045166
    4. '[' → logprob: -3.22408390045166
    5. '(D' → logprob: -5.09908390045166
    6. ')' → logprob: -5.47408390045166
    7. '   ' → logprob: -6.72408390045166
    8. ' D' → logprob: -6.84908390045166
    9. '[(' → logprob: -7.09908390045166
    10. '][' → logprob: -8.72408390045166

Token 707: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.000694919959641993
    2. ' D' → logprob: -7.375694751739502
    3. ']' → logprob: -10.37569522857666
    4. '[D' → logprob: -10.87569522857666
    5. ')' → logprob: -11.25069522857666
    6. 'la' → logprob: -13.12569522857666
    7. ' ' → logprob: -14.25069522857666
    8. '[' → logprob: -14.37569522857666
    9. '`' → logprob: -14.75069522857666
    10. ' la' → logprob: -15.25069522857666

Token 708: ' valeur' (ID: 41664)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0009083642507903278
    2. ' D' → logprob: -7.875908374786377
    3. ']' → logprob: -8.750907897949219
    4. '[' → logprob: -9.125907897949219
    5. '[D' → logprob: -9.375907897949219
    6. ')' → logprob: -9.875907897949219
    7. '[key' → logprob: -10.000907897949219
    8. 'value' → logprob: -10.250907897949219
    9. ' value' → logprob: -11.875907897949219
    10. '[
' → logprob: -11.875907897949219

Token 709: ' associ' (ID: 5516)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0005356363253667951
    2. '[D' → logprob: -7.625535488128662
    3. '[' → logprob: -10.87553596496582
    4. '(D' → logprob: -11.00053596496582
    5. 'D' → logprob: -11.87553596496582
    6. ' [(' → logprob: -13.25053596496582
    7. '[
' → logprob: -13.50053596496582
    8. ' (' → logprob: -14.37553596496582
    9. '(' → logprob: -14.62553596496582
    10. '((' → logprob: -14.87553596496582

Token 710: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.11619056761264801
    2. '[(' → logprob: -2.4911906719207764
    3. '[' → logprob: -3.7411906719207764
    4. 'é' → logprob: -6.116190433502197
    5. '(' → logprob: -8.241190910339355
    6. '   ' → logprob: -8.991190910339355
    7. 'à' → logprob: -9.241190910339355
    8. ']' → logprob: -9.741190910339355
    9. ')' → logprob: -9.866190910339355
    10. '["' → logprob: -9.991190910339355

Token 711: ' à' (ID: 1221)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.03910773620009422
    2. '(D' → logprob: -3.4141077995300293
    3. '((' → logprob: -6.539107799530029
    4. '   ' → logprob: -6.664107799530029
    5. ' (' → logprob: -6.789107799530029
    6. '(red' → logprob: -6.914107799530029
    7. '(' → logprob: -7.789107799530029
    8. '[' → logprob: -9.539107322692871
    9. '[D' → logprob: -10.539107322692871
    10. ' ' → logprob: -10.914107322692871

Token 712: ' cette' (ID: 7696)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.39681410789489746
    2. '(' → logprob: -1.6468141078948975
    3. '(red' → logprob: -2.0218141078948975
    4. '[(' → logprob: -7.521814346313477
    5. '(key' → logprob: -8.396814346313477
    6. ' ' → logprob: -8.646814346313477
    7. 'D' → logprob: -8.646814346313477
    8. '(D' → logprob: -8.896814346313477
    9. '(b' → logprob: -9.021814346313477
    10. '(re' → logprob: -9.021814346313477

Token 713: ' clé' (ID: 83188)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.029184844344854355
    2. '(' → logprob: -3.9041848182678223
    3. ' (' → logprob: -5.404184818267822
    4. '[' → logprob: -5.779184818267822
    5. '[(' → logprob: -7.529184818267822
    6. 'tuple' → logprob: -8.27918529510498
    7. '(tuple' → logprob: -10.27918529510498
    8. ')' → logprob: -10.65418529510498
    9. ' tuple' → logprob: -10.90418529510498
    10. 'tu' → logprob: -10.90418529510498

Token 714: '.
' (ID: 558)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.3029422163963318
    2. '[D' → logprob: -2.1779422760009766
    3. '   ' → logprob: -3.0529422760009766
    4. ']' → logprob: -3.1779422760009766
    5. 'D' → logprob: -3.3029422760009766
    6. ' D' → logprob: -4.927942276000977
    7. '[(' → logprob: -5.427942276000977
    8. '[' → logprob: -5.802942276000977
    9. ' (' → logprob: -5.927942276000977
    10. ')' → logprob: -6.427942276000977

Token 715: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07905711978673935
    2. 'D' → logprob: -2.579057216644287
    3. ' D' → logprob: -9.579056739807129
    4. '    
' → logprob: -10.204056739807129
    5. '	D' → logprob: -10.329056739807129
    6. '
' → logprob: -11.704056739807129
    7. '[D' → logprob: -11.954056739807129
    8. '[' → logprob: -12.829056739807129
    9. '(D' → logprob: -13.079056739807129
    10. ' ' → logprob: -13.204056739807129

Token 716: ' #' (ID: 1069)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.08208382874727249
    2. '   ' → logprob: -2.5820839405059814
    3. ' D' → logprob: -5.832083702087402
    4. '	D' → logprob: -8.457083702087402
    5. ' ' → logprob: -10.332083702087402
    6. '  ' → logprob: -12.332083702087402
    7. '
' → logprob: -12.457083702087402
    8. '    
' → logprob: -13.332083702087402
    9. '  
' → logprob: -14.582083702087402
    10. '[D' → logprob: -15.082083702087402

Token 717: ' Si' (ID: 7832)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.025848736986517906
    2. '   ' → logprob: -3.900848627090454
    3. ' D' → logprob: -5.275848865509033
    4. '	D' → logprob: -9.275848388671875
    5. ' ' → logprob: -9.525848388671875
    6. '    
' → logprob: -12.400848388671875
    7. '  ' → logprob: -12.525848388671875
    8. '
' → logprob: -13.650848388671875
    9. '  
' → logprob: -13.775848388671875
    10. ' 
' → logprob: -14.025848388671875

Token 718: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5807886719703674
    2. '(bit' → logprob: -1.5807886123657227
    3. '(red' → logprob: -1.8307886123657227
    4. '(' → logprob: -2.8307886123657227
    5. '(s' → logprob: -5.205788612365723
    6. ' ' → logprob: -6.080788612365723
    7. '(key' → logprob: -6.580788612365723
    8. '(d' → logprob: -6.955788612365723
    9. '(not' → logprob: -6.955788612365723
    10. 'bit' → logprob: -7.580788612365723

Token 719: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0031256675720214844
    2. '(red' → logprob: -6.2531256675720215
    3. ' red' → logprob: -6.7531256675720215
    4. ' (' → logprob: -10.75312614440918
    5. ')' → logprob: -12.87812614440918
    6. '   ' → logprob: -13.62812614440918
    7. ' ' → logprob: -14.12812614440918
    8. 're' → logprob: -14.25312614440918
    9. 'r' → logprob: -14.50312614440918
    10. '(
' → logprob: -14.75312614440918

Token 720: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. '(red' → logprob: -11.75001335144043
    3. 'red' → logprob: -13.25001335144043
    4. ')' → logprob: -13.50001335144043
    5. '_red' → logprob: -14.62501335144043
    6. '_' → logprob: -14.62501335144043
    7. ',' → logprob: -15.25001335144043
    8. '(' → logprob: -15.87501335144043
    9. ' ' → logprob: -16.00001335144043
    10. ' (' → logprob: -16.43751335144043

Token 721: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ',
' → logprob: -14.37501049041748
    4. 'red' → logprob: -16.500009536743164
    5. ',

' → logprob: -16.750009536743164
    6. ',)' → logprob: -16.750009536743164
    7. '‌,' → logprob: -17.625009536743164
    8. ',
' → logprob: -17.750009536743164
    9. ',",' → logprob: -17.875009536743164
    10. ',user' → logprob: -18.000009536743164

Token 722: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.42955517768859863
    2. 'blue' → logprob: -1.0545551776885986
    3. 'red' → logprob: -7.9295549392700195
    4. ' ' → logprob: -8.67955493927002
    5. ' red' → logprob: -8.67955493927002
    6. ',' → logprob: -10.05455493927002
    7. ' bleu' → logprob: -10.05455493927002
    8. ')' → logprob: -10.30455493927002
    9. '  ' → logprob: -12.05455493927002
    10. '"' → logprob: -12.05455493927002

Token 723: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ',' → logprob: -12.25001049041748
    3. 'red' → logprob: -12.87501049041748
    4. ')' → logprob: -13.87501049041748
    5. '
' → logprob: -14.62501049041748
    6. ' ' → logprob: -14.62501049041748
    7. '_' → logprob: -14.87501049041748
    8. '(red' → logprob: -15.87501049041748
    9. '_red' → logprob: -15.93751049041748
    10. ' red' → logprob: -16.250011444091797

Token 724: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012738043442368507
    2. ')]' → logprob: -7.1262736320495605
    3. ']' → logprob: -8.126274108886719
    4. '])' → logprob: -9.001274108886719
    5. ')])' → logprob: -11.126274108886719
    6. ' )' → logprob: -11.376274108886719
    7. '))' → logprob: -12.126274108886719
    8. 'not' → logprob: -13.001274108886719
    9. ')
' → logprob: -13.126274108886719
    10. ')`' → logprob: -13.376274108886719

Token 725: ' n' (ID: 297)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20351478457450867
    2. ']+=' → logprob: -1.703514814376831
    3. ' in' → logprob: -6.453514575958252
    4. '[' → logprob: -8.82851505279541
    5. ']+' → logprob: -9.07851505279541
    6. 'in' → logprob: -9.20351505279541
    7. ')' → logprob: -10.07851505279541
    8. ' ]' → logprob: -10.45351505279541
    9. ']!=' → logprob: -10.95351505279541
    10. ']>=' → logprob: -11.20351505279541

Token 726: ''était' (ID: 40609)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.150788813829422
    2. ']' → logprob: -3.0257887840270996
    3. 'not' → logprob: -3.0257887840270996
    4. ')' → logprob: -4.1507887840271
    5. '[(' → logprob: -5.0257887840271
    6. ' (' → logprob: -5.5257887840271
    7. ' in' → logprob: -5.6507887840271
    8. '[' → logprob: -5.7757887840271
    9. '(' → logprob: -6.2757887840271
    10. ' pas' → logprob: -6.4007887840271

Token 727: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.37244999408721924
    2. ' not' → logprob: -1.7474499940872192
    3. 'pas' → logprob: -2.2474498748779297
    4. 'not' → logprob: -3.4974498748779297
    5. ')' → logprob: -8.24744987487793
    6. '_pas' → logprob: -8.62244987487793
    7. ']' → logprob: -9.37244987487793
    8. ' jamais' → logprob: -9.74744987487793
    9. ' in' → logprob: -10.37244987487793
    10. 'abs' → logprob: -10.49744987487793

Token 728: ' encore' (ID: 14043)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.163321614265442
    2. 'dans' → logprob: -1.288321614265442
    3. ' in' → logprob: -1.913321614265442
    4. ' encore' → logprob: -2.1633214950561523
    5. ' dans' → logprob: -2.9133214950561523
    6. 'prés' → logprob: -3.1633214950561523
    7. ' présent' → logprob: -4.038321495056152
    8. 'present' → logprob: -4.788321495056152
    9. 'enc' → logprob: -4.788321495056152
    10. 'D' → logprob: -5.038321495056152

Token 729: ' présent' (ID: 24129)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7140712141990662
    2. ' in' → logprob: -1.089071273803711
    3. 'dans' → logprob: -2.339071273803711
    4. ' dans' → logprob: -3.214071273803711
    5. ' présent' → logprob: -4.714071273803711
    6. 'present' → logprob: -4.839071273803711
    7. 'D' → logprob: -5.339071273803711
    8. ' en' → logprob: -5.589071273803711
    9. ' present' → logprob: -5.839071273803711
    10. 'prés' → logprob: -5.839071273803711

Token 730: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8077062964439392
    2. 'D' → logprob: -1.557706356048584
    3. ']' → logprob: -2.182706356048584
    4. 'in' → logprob: -2.557706356048584
    5. ',' → logprob: -2.682706356048584
    6. ':' → logprob: -3.932706356048584
    7. '[D' → logprob: -4.307706356048584
    8. '   ' → logprob: -4.432706356048584
    9. ')' → logprob: -4.432706356048584
    10. ' dans' → logprob: -4.932706356048584

Token 731: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0007110013975761831
    2. ' D' → logprob: -7.250710964202881
    3. ')' → logprob: -13.875711441040039
    4. ' ' → logprob: -17.12571144104004
    5. '
' → logprob: -18.50071144104004
    6. ']' → logprob: -18.62571144104004
    7. '   ' → logprob: -19.00071144104004
    8. '`' → logprob: -19.25071144104004
    9. '(D' → logprob: -19.75071144104004
    10. 'd' → logprob: -19.87571144104004

Token 732: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017607200890779495
    2. ']+=' → logprob: -4.26760721206665
    3. ']:' → logprob: -6.39260721206665
    4. ':' → logprob: -7.14260721206665
    5. '[' → logprob: -8.142606735229492
    6. '[(' → logprob: -8.517606735229492
    7. ']+' → logprob: -8.517606735229492
    8. ')' → logprob: -9.392606735229492
    9. '   ' → logprob: -9.767606735229492
    10. '[D' → logprob: -10.017606735229492

Token 733: ' il' (ID: 1793)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.014316527172923088
    2. ' D' → logprob: -4.264316558837891
    3. ')' → logprob: -9.51431655883789
    4. '   ' → logprob: -10.76431655883789
    5. ']' → logprob: -11.01431655883789
    6. '1' → logprob: -11.38931655883789
    7. '[D' → logprob: -11.63931655883789
    8. ' ' → logprob: -12.38931655883789
    9. '[' → logprob: -12.76431655883789
    10. '0' → logprob: -13.38931655883789

Token 734: ' est' (ID: 893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2690099775791168
    2. 'va' → logprob: -2.519010066986084
    3. 's' → logprob: -2.894010066986084
    4. 'D' → logprob: -3.019010066986084
    5. ' va' → logprob: -4.519010066986084
    6. ' D' → logprob: -5.144010066986084
    7. ' ' → logprob: -5.269010066986084
    8. 'd' → logprob: -5.769010066986084
    9. '   ' → logprob: -6.269010066986084
    10. ' vaut' → logprob: -6.269010066986084

Token 735: ' créé' (ID: 78761)
  Prédit: 'autom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'autom' → logprob: -0.7321000099182129
    2. 'cré' → logprob: -1.107100009918213
    3. '0' → logprob: -3.107100009918213
    4. ' automatiquement' → logprob: -3.232100009918213
    5. 'cr' → logprob: -3.732100009918213
    6. ' ' → logprob: -3.982100009918213
    7. 'aj' → logprob: -4.482100009918213
    8. ' créé' → logprob: -4.857100009918213
    9. 'initial' → logprob: -4.857100009918213
    10. 'default' → logprob: -4.982100009918213

Token 736: ' automatiquement' (ID: 123202)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.12573018670082092
    2. '[' → logprob: -2.500730276107788
    3. ')' → logprob: -4.500730037689209
    4. '(' → logprob: -4.625730037689209
    5. ']' → logprob: -4.750730037689209
    6. ' (' → logprob: -5.750730037689209
    7. '(red' → logprob: -7.375730037689209
    8. '((' → logprob: -7.500730037689209
    9. '[key' → logprob: -7.875730037689209
    10. '+=' → logprob: -8.250730514526367

Token 737: ' avec' (ID: 3937)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.015478971414268017
    2. '[' → logprob: -4.64047908782959
    3. '(' → logprob: -5.64047908782959
    4. ')' → logprob: -7.64047908782959
    5. ' (' → logprob: -7.64047908782959
    6. '(D' → logprob: -8.26547908782959
    7. '((' → logprob: -8.64047908782959
    8. ']' → logprob: -8.89047908782959
    9. '+=' → logprob: -9.14047908782959
    10. '
' → logprob: -9.26547908782959

Token 738: ' une' (ID: 2463)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040801819413900375
    2. ' ' → logprob: -5.504080295562744
    3. '1' → logprob: -14.004079818725586
    4. 'value' → logprob: -15.254079818725586
    5. '<|end|>' → logprob: -15.254079818725586
    6. ' la' → logprob: -16.754079818725586
    7. ' zero' → logprob: -16.879079818725586
    8. ' value' → logprob: -17.254079818725586
    9. '```' → logprob: -17.504079818725586
    10. 'default' → logprob: -17.629079818725586

Token 739: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042414598166942596
    2. 'val' → logprob: -3.292414665222168
    3. 'value' → logprob: -6.167414665222168
    4. ' ' → logprob: -6.667414665222168
    5. 'default' → logprob: -7.167414665222168
    6. ' valeur' → logprob: -9.292414665222168
    7. ' value' → logprob: -10.417414665222168
    8. ' val' → logprob: -10.917414665222168
    9. 'dé' → logprob: -11.167414665222168
    10. '1' → logprob: -11.167414665222168

Token 740: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07513649016618729
    2. '=' → logprob: -3.575136423110962
    3. ' =' → logprob: -4.450136661529541
    4. ' ' → logprob: -4.575136661529541
    5. ' de' → logprob: -4.700136661529541
    6. 'de' → logprob: -5.575136661529541
    7. ' par' → logprob: -5.950136661529541
    8. ' initial' → logprob: -6.075136661529541
    9. 'par' → logprob: -6.325136661529541
    10. 'initial' → logprob: -6.450136661529541

Token 741: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06321520358324051
    2. ' ' → logprob: -2.8132152557373047
    3. '1' → logprob: -6.688215255737305
    4. '```' → logprob: -14.813215255737305
    5. '  
' → logprob: -15.688215255737305
    6. '  ' → logprob: -16.125715255737305
    7. ' 
' → logprob: -16.250715255737305
    8. ' ' → logprob: -16.375715255737305
    9. '`' → logprob: -16.563215255737305
    10. '   ' → logprob: -16.750715255737305

Token 742: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4894986785948277e-05
    2. ' ' → logprob: -10.125044822692871
    3. '1' → logprob: -12.250044822692871
    4. '```' → logprob: -18.875045776367188
    5. '۰' → logprob: -21.375045776367188
    6. '  ' → logprob: -21.750045776367188
    7. ' ' → logprob: -22.125045776367188
    8. '   ' → logprob: -22.125045776367188
    9. 'zero' → logprob: -22.375045776367188
    10. '`' → logprob: -22.375045776367188

Token 743: ' grâce' (ID: 31589)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20211756229400635
    2. 'D' → logprob: -2.452117443084717
    3. '[D' → logprob: -3.077117443084717
    4. '(D' → logprob: -3.577117443084717
    5. ')' → logprob: -4.327117443084717
    6. ']+=' → logprob: -5.702117443084717
    7. '   ' → logprob: -5.952117443084717
    8. ' D' → logprob: -6.077117443084717
    9. '[' → logprob: -8.452117919921875
    10. '()' → logprob: -8.577117919921875

Token 744: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0262965839356184
    2. 'à' → logprob: -3.901296615600586
    3. ' a' → logprob: -5.901296615600586
    4. ' defaultdict' → logprob: -6.901296615600586
    5. ')' → logprob: -7.276296615600586
    6. ' ' → logprob: -7.901296615600586
    7. ''à' → logprob: -8.651296615600586
    8. 'int' → logprob: -8.776296615600586
    9. '’à' → logprob: -9.026296615600586
    10. 'default' → logprob: -9.276296615600586

Token 745: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.32821205258369446
    2. 'int' → logprob: -2.203212022781372
    3. ' defaultdict' → logprob: -2.203212022781372
    4. 'D' → logprob: -2.953212022781372
    5. ' int' → logprob: -5.953212261199951
    6. ' D' → logprob: -6.453212261199951
    7. ' default' → logprob: -6.578212261199951
    8. 'd' → logprob: -7.328212261199951
    9. ' ' → logprob: -9.203211784362793
    10. 'Default' → logprob: -9.328211784362793

Token 746: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7415525913238525
    2. '[D' → logprob: -1.3665525913238525
    3. 'D' → logprob: -1.6165525913238525
    4. '[' → logprob: -3.2415525913238525
    5. ')' → logprob: -4.116552352905273
    6. '][' → logprob: -4.991552352905273
    7. '(D' → logprob: -5.866552352905273
    8. '[(' → logprob: -6.741552352905273
    9. '
' → logprob: -7.491552352905273
    10. ']
' → logprob: -7.866552352905273

Token 747: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06210515275597572
    2. 'D' → logprob: -2.812105178833008
    3. ' D' → logprob: -9.562105178833008
    4. '	D' → logprob: -10.562105178833008
    5. '    
' → logprob: -11.187105178833008
    6. ')' → logprob: -11.937105178833008
    7. '(D' → logprob: -12.062105178833008
    8. '```' → logprob: -12.187105178833008
    9. '[D' → logprob: -13.187105178833008
    10. '
' → logprob: -13.312105178833008

Token 748: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.2541484534740448
    2. '   ' → logprob: -1.5041484832763672
    3. ' D' → logprob: -6.379148483276367
    4. '	D' → logprob: -7.879148483276367
    5. ' ' → logprob: -9.504148483276367
    6. '
' → logprob: -9.879148483276367
    7. '    
' → logprob: -11.879148483276367
    8. '  ' → logprob: -12.379148483276367
    9. '       ' → logprob: -13.254148483276367
    10. ' 
' → logprob: -14.754148483276367

Token 749: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.005254864692687988
    2. '[' → logprob: -5.255254745483398
    3. '(red' → logprob: -11.005254745483398
    4. '(' → logprob: -13.505254745483398
    5. '[
' → logprob: -13.630254745483398
    6. '[key' → logprob: -14.255254745483398
    7. '[...]' → logprob: -15.130254745483398
    8. '```' → logprob: -15.630254745483398
    9. '[D' → logprob: -15.755254745483398
    10. '[((' → logprob: -16.0052547454834

Token 750: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -1.0564331205387134e-05
    2. ' red' → logprob: -11.50001049041748
    3. '(red' → logprob: -14.75001049041748
    4. 'redi' → logprob: -17.875011444091797
    5. ' ' → logprob: -18.375011444091797
    6. ')' → logprob: -19.000011444091797
    7. '   ' → logprob: -19.000011444091797
    8. 'redd' → logprob: -19.500011444091797
    9. 'redir' → logprob: -19.625011444091797
    10. 'reds' → logprob: -19.750011444091797

Token 751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. ',' → logprob: -17.5
    4. '_' → logprob: -17.75
    5. 'red' → logprob: -17.875
    6. '[' → logprob: -18.875
    7. '```' → logprob: -18.875
    8. ')' → logprob: -19.1875
    9. '(red' → logprob: -19.1875
    10. '(' → logprob: -20.0625

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.176947600673884e-05
    2. ',
' → logprob: -11.375021934509277
    3. ' ,' → logprob: -11.625021934509277
    4. ',

' → logprob: -14.875021934509277
    5. '<|end|>' → logprob: -15.000021934509277
    6. '‌,' → logprob: -15.500021934509277
    7. ')' → logprob: -15.750021934509277
    8. '),' → logprob: -16.25002098083496
    9. ',)' → logprob: -16.50002098083496
    10. ',),' → logprob: -17.50002098083496

Token 753: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.014171971939504147
    2. ' blue' → logprob: -4.264172077178955
    3. ' ' → logprob: -12.639171600341797
    4. ')' → logprob: -13.389171600341797
    5. 'ble' → logprob: -13.639171600341797
    6. 'blu' → logprob: -13.764171600341797
    7. ' bleu' → logprob: -15.014171600341797
    8. '_blue' → logprob: -16.076671600341797
    9. '.blue' → logprob: -16.264171600341797
    10. 'b' → logprob: -16.326671600341797

Token 754: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000972325331531465
    2. 'blue' → logprob: -7.000972270965576
    3. ')]' → logprob: -11.375972747802734
    4. ')' → logprob: -11.500972747802734
    5. ' ' → logprob: -11.500972747802734
    6. ' blue' → logprob: -11.750972747802734
    7. '_blue' → logprob: -12.000972747802734
    8. '_' → logprob: -12.125972747802734
    9. '0' → logprob: -13.250972747802734
    10. '```' → logprob: -13.375972747802734

Token 755: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013262155698612332
    2. ')' → logprob: -9.25013256072998
    3. ']' → logprob: -10.25013256072998
    4. ']]' → logprob: -14.87513256072998
    5. '])' → logprob: -15.00013256072998
    6. ' )' → logprob: -15.37513256072998
    7. '")]' → logprob: -16.000133514404297
    8. ']+=' → logprob: -16.500133514404297
    9. '')]' → logprob: -17.500133514404297
    10. ')]
' → logprob: -17.875133514404297

Token 756: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005259610712528229
    2. ' +=' → logprob: -5.2552595138549805
    3. ']+=' → logprob: -10.63025951385498
    4. '+' → logprob: -13.63025951385498
    5. '=' → logprob: -15.25525951385498
    6. ')' → logprob: -17.005260467529297
    7. '   ' → logprob: -17.005260467529297
    8. '```' → logprob: -17.755260467529297
    9. ']' → logprob: -18.130260467529297
    10. '+=(' → logprob: -18.380260467529297

Token 757: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.62502098083496
    4. '```' → logprob: -21.25002098083496
    5. '  ' → logprob: -21.50002098083496
    6. ' ' → logprob: -22.37502098083496
    7. '`' → logprob: -23.50002098083496
    8. '0' → logprob: -23.75002098083496
    9. '１' → logprob: -23.75002098083496
    10. '۱' → logprob: -23.87502098083496

Token 758: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -21.000001907348633
    4. '```' → logprob: -21.250001907348633
    5. '  ' → logprob: -22.875001907348633
    6. '0' → logprob: -22.875001907348633
    7. '`' → logprob: -22.875001907348633
    8. '
' → logprob: -23.500001907348633
    9. '۱' → logprob: -23.500001907348633
    10. '１' → logprob: -24.000001907348633

Token 759: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004523042589426041
    2. '
' → logprob: -5.504523277282715
    3. ' for' → logprob: -7.754523277282715
    4. '    
' → logprob: -12.129523277282715
    5. '  
' → logprob: -12.379523277282715
    6. ' 
' → logprob: -12.754523277282715
    7. '

' → logprob: -13.379523277282715
    8. '#' → logprob: -14.754523277282715
    9. ')' → logprob: -14.754523277282715
    10. '   ' → logprob: -15.754523277282715

Token 760: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001733855315251276
    2. '
' → logprob: -9.125173568725586
    3. '#' → logprob: -9.750173568725586
    4. ' for' → logprob: -12.125173568725586
    5. '    
' → logprob: -15.125173568725586
    6. '```' → logprob: -15.375173568725586
    7. '  
' → logprob: -16.000173568725586
    8. '

' → logprob: -16.750173568725586
    9. 'from' → logprob: -17.375173568725586
    10. ' 
' → logprob: -18.500173568725586

Token 761: ' Deux' (ID: 92086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00043353010551072657
    2. '#' → logprob: -7.750433444976807
    3. '
' → logprob: -13.500433921813965
    4. ' for' → logprob: -13.625433921813965
    5. 'from' → logprob: -16.25043296813965
    6. '```' → logprob: -16.50043296813965
    7. 'def' → logprob: -17.00043296813965
    8. '

' → logprob: -17.37543296813965
    9. 'For' → logprob: -18.37543296813965
    10. '	for' → logprob: -18.75043296813965

Token 762: 'ième' (ID: 41126)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6873264908790588
    2. 'ième' → logprob: -0.8123264908790588
    3. ' for' → logprob: -3.812326431274414
    4. 'ème' → logprob: -4.187326431274414
    5. '#' → logprob: -4.937326431274414
    6. 'e' → logprob: -5.187326431274414
    7. 'ême' → logprob: -6.687326431274414
    8. 'ieme' → logprob: -7.562326431274414
    9. '번째' → logprob: -7.812326431274414
    10. '```' → logprob: -8.437326431274414

Token 763: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7999849319458008
    2. ' boucle' → logprob: -0.9249849319458008
    3. ' for' → logprob: -2.049984931945801
    4. ' loop' → logprob: -4.174984931945801
    5. 'loop' → logprob: -5.299984931945801
    6. 'bou' → logprob: -5.549984931945801
    7. ' bou' → logprob: -7.799984931945801
    8. '
' → logprob: -8.0499849319458
    9. ' 
' → logprob: -9.1749849319458
    10. '#' → logprob: -9.2999849319458

Token 764: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0067161982879042625
    2. ' for' → logprob: -5.006716251373291
    3. '
' → logprob: -14.131715774536133
    4. ':' → logprob: -15.881715774536133
    5. '```' → logprob: -19.256715774536133
    6. ':
' → logprob: -19.631715774536133
    7. '  
' → logprob: -19.881715774536133
    8. '=' → logprob: -19.881715774536133
    9. '    
' → logprob: -20.506715774536133
    10. '	for' → logprob: -20.506715774536133

Token 765: ' cette' (ID: 7696)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8624639324116288e-06
    2. ' for' → logprob: -13.375001907348633
    3. '
' → logprob: -15.250001907348633
    4. 'from' → logprob: -17.375001907348633
    5. 'import' → logprob: -18.125001907348633
    6. 'ans' → logprob: -20.000001907348633
    7. ')' → logprob: -20.375001907348633
    8. '#' → logprob: -20.500001907348633
    9. '```' → logprob: -21.125001907348633
    10. '

' → logprob: -21.250001907348633

Token 766: ' fois' (ID: 14697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.033673245459795
    2. ' for' → logprob: -3.4086732864379883
    3. '
' → logprob: -11.658673286437988
    4. ' fois' → logprob: -11.908673286437988
    5. ' ' → logprob: -12.908673286437988
    6. 'fois' → logprob: -12.908673286437988
    7. '#' → logprob: -13.533673286437988
    8. 'f' → logprob: -13.783673286437988
    9. 'pour' → logprob: -14.158673286437988
    10. ')' → logprob: -14.408673286437988

Token 767: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17990335822105408
    2. 'for' → logprob: -1.8049033880233765
    3. '#' → logprob: -9.804903030395508
    4. ':' → logprob: -9.929903030395508
    5. ' pour' → logprob: -10.054903030395508
    6. 'pour' → logprob: -12.554903030395508
    7. ' i' → logprob: -13.679903030395508
    8. ' #' → logprob: -13.804903030395508
    9. ' :' → logprob: -13.929903030395508
    10. ' =' → logprob: -14.179903030395508

Token 768: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.292095299111679e-05
    2. ' for' → logprob: -9.500082969665527
    3. '
' → logprob: -11.750082969665527
    4. ')' → logprob: -16.62508201599121
    5. ' 
' → logprob: -18.37508201599121
    6. '#' → logprob: -18.75008201599121
    7. '

' → logprob: -19.12508201599121
    8. '```' → logprob: -19.12508201599121
    9. '  
' → logprob: -19.12508201599121
    10. 'import' → logprob: -19.37508201599121

Token 769: ' it' (ID: 480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07889727503061295
    2. ' for' → logprob: -2.57889723777771
    3. 'range' → logprob: -12.703897476196289
    4. 'pour' → logprob: -13.453897476196289
    5. 'continue' → logprob: -14.078897476196289
    6. ' continue' → logprob: -14.328897476196289
    7. ' range' → logprob: -14.828897476196289
    8. 'fait' → logprob: -14.828897476196289
    9. ' pour' → logprob: -15.453897476196289
    10. '
' → logprob: -15.828897476196289

Token 770: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.005176120437681675
    2. 'range' → logprob: -5.630176067352295
    3. 'ére' → logprob: -6.755176067352295
    4. 'ere' → logprob: -8.380176544189453
    5. 'er' → logprob: -9.880176544189453
    6. 're' → logprob: -10.255176544189453
    7. 'e' → logprob: -11.255176544189453
    8. '   ' → logprob: -11.380176544189453
    9. 'ération' → logprob: -11.630176544189453
    10. 'for' → logprob: -11.880176544189453

Token 771: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39457932114601135
    2. ' for' → logprob: -1.144579291343689
    3. ' over' → logprob: -5.2695794105529785
    4. ' sur' → logprob: -6.6445794105529785
    5. 'sur' → logprob: -7.1445794105529785
    6. 'over' → logprob: -8.26957893371582
    7. 'pour' → logprob: -9.76957893371582
    8. ' ' → logprob: -10.01957893371582
    9. ' pour' → logprob: -10.26957893371582
    10. '(' → logprob: -11.14457893371582

Token 772: ' nouveau' (ID: 23184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017599097918719053
    2. 'for' → logprob: -6.876760005950928
    3. ' range' → logprob: -7.251760005950928
    4. ' nouveau' → logprob: -12.00175952911377
    5. 'new' → logprob: -12.25175952911377
    6. ' for' → logprob: -13.00175952911377
    7. '(range' → logprob: -13.25175952911377
    8. 'reverse' → logprob: -14.25175952911377
    9. 'rang' → logprob: -14.37675952911377
    10. 'la' → logprob: -14.87675952911377

Token 773: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11339219659566879
    2. ' for' → logprob: -2.2383921146392822
    3. ' over' → logprob: -8.613391876220703
    4. ' in' → logprob: -8.988391876220703
    5. 'over' → logprob: -9.113391876220703
    6. 'range' → logprob: -9.238391876220703
    7. 'in' → logprob: -10.488391876220703
    8. ' range' → logprob: -10.988391876220703
    9. 'i' → logprob: -12.863391876220703
    10. ' ' → logprob: -13.113391876220703

Token 774: ' toutes' (ID: 17502)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4996827244758606
    2. ' range' → logprob: -0.9996827244758606
    3. 'for' → logprob: -3.749682664871216
    4. ' for' → logprob: -7.124682903289795
    5. 'i' → logprob: -7.374682903289795
    6. '(range' → logprob: -8.749682426452637
    7. ' i' → logprob: -8.874682426452637
    8. ' ' → logprob: -11.999682426452637
    9. '(' → logprob: -12.124682426452637
    10. '2' → logprob: -12.249682426452637

Token 775: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35982581973075867
    2. ' i' → logprob: -1.359825849533081
    3. ' for' → logprob: -4.484825611114502
    4. 'for' → logprob: -4.609825611114502
    5. 'range' → logprob: -4.609825611114502
    6. ' ' → logprob: -4.984825611114502
    7. ' range' → logprob: -5.484825611114502
    8. '  ' → logprob: -6.859825611114502
    9. '(' → logprob: -7.859825611114502
    10. '(range' → logprob: -7.859825611114502

Token 776: ' possibilités' (ID: 119756)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016956819221377373
    2. ' range' → logprob: -4.141956806182861
    3. '2' → logprob: -7.391956806182861
    4. 'for' → logprob: -8.14195728302002
    5. ' ' → logprob: -11.89195728302002
    6. ' for' → logprob: -12.89195728302002
    7. 'i' → logprob: -13.14195728302002
    8. '(range' → logprob: -13.51695728302002
    9. '
' → logprob: -13.89195728302002
    10. '```' → logprob: -15.51695728302002

Token 777: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003086486831307411
    2. ' for' → logprob: -8.125308990478516
    3. 'range' → logprob: -11.375308990478516
    4. 'pour' → logprob: -14.875308990478516
    5. ' range' → logprob: -15.875308990478516
    6. 'i' → logprob: -16.000308990478516
    7. '(range' → logprob: -16.000308990478516
    8. '
' → logprob: -16.125308990478516
    9. '```' → logprob: -16.375308990478516
    10. '`' → logprob: -16.875308990478516

Token 778: ' comb' (ID: 4134)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5402317047119141
    2. '2' → logprob: -1.790231704711914
    3. 'i' → logprob: -2.040231704711914
    4. ' range' → logprob: -2.165231704711914
    5. ' i' → logprob: -5.415231704711914
    6. ' ' → logprob: -7.665231704711914
    7. 'for' → logprob: -7.665231704711914
    8. '(range' → logprob: -9.165231704711914
    9. '1' → logprob: -9.540231704711914
    10. ' for' → logprob: -9.915231704711914

Token 779: 'inais' (ID: 42744)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.15870173275470734
    2. 'i' → logprob: -2.9087016582489014
    3. 'range' → logprob: -3.2837016582489014
    4. 'ination' → logprob: -3.4087016582489014
    5. 'inations' → logprob: -4.9087018966674805
    6. '2' → logprob: -5.1587018966674805
    7. 'N' → logprob: -5.7837018966674805
    8. ' range' → logprob: -6.4087018966674805
    9. 'ine' → logprob: -7.0337018966674805
    10. 'for' → logprob: -7.0337018966674805

Token 780: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.23430337011814117
    2. 'on' → logprob: -1.85930335521698
    3. 'range' → logprob: -3.6093034744262695
    4. 'ations' → logprob: -4.8593034744262695
    5. 'e' → logprob: -4.8593034744262695
    6. 'n' → logprob: -6.2343034744262695
    7. 'ation' → logprob: -6.2343034744262695
    8. 'ais' → logprob: -6.8593034744262695
    9. 'a' → logprob: -6.8593034744262695
    10. 't' → logprob: -6.9843034744262695

Token 781: ' bin' (ID: 6958)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031818747520446777
    2. ' for' → logprob: -5.7531819343566895
    3. 'pour' → logprob: -12.628181457519531
    4. 'range' → logprob: -15.003181457519531
    5. 'i' → logprob: -15.753181457519531
    6. ' pour' → logprob: -15.753181457519531
    7. '
' → logprob: -16.87818145751953
    8. ':' → logprob: -17.25318145751953
    9. 'de' → logprob: -17.37818145751953
    10. '```' → logprob: -17.62818145751953

Token 782: 'aires' (ID: 8507)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5240306854248047
    2. 'aire' → logprob: -2.1490306854248047
    3. 'for' → logprob: -2.2740306854248047
    4. 'ar' → logprob: -2.3990306854248047
    5. 'age' → logprob: -4.274030685424805
    6. 'ière' → logprob: -4.399030685424805
    7. 'aires' → logprob: -4.649030685424805
    8. '`' → logprob: -5.024030685424805
    9. 'ère' → logprob: -5.149030685424805
    10. 'i' → logprob: -5.274030685424805

Token 783: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003180094063282013
    2. ' for' → logprob: -5.753180027008057
    3. 'range' → logprob: -13.378180503845215
    4. ' range' → logprob: -15.128180503845215
    5. '(range' → logprob: -15.753180503845215
    6. 'in' → logprob: -16.0031795501709
    7. 'pour' → logprob: -16.0031795501709
    8. '
' → logprob: -16.2531795501709
    9. '```' → logprob: -17.1281795501709
    10. ':' → logprob: -17.8781795501709

Token 784: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06147602200508118
    2. 'range' → logprob: -2.936475992202759
    3. ' range' → logprob: -5.436476230621338
    4. '2' → logprob: -6.186476230621338
    5. '(N' → logprob: -10.18647575378418
    6. '(range' → logprob: -10.31147575378418
    7. '
' → logprob: -10.68647575378418
    8. ' N' → logprob: -10.93647575378418
    9. '[N' → logprob: -10.93647575378418
    10. ' ' → logprob: -11.68647575378418

Token 785: ' bits' (ID: 18189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3160170316696167
    2. ':' → logprob: -1.3160170316696167
    3. ' for' → logprob: -6.316017150878906
    4. '```' → logprob: -7.316017150878906
    5. ':
' → logprob: -9.066017150878906
    6. ')' → logprob: -9.816017150878906
    7. '**' → logprob: -10.191017150878906
    8. '):' → logprob: -10.441017150878906
    9. 'i' → logprob: -12.066017150878906
    10. '(N' → logprob: -12.441017150878906

Token 786: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005279772914946079
    2. ' for' → logprob: -5.255279541015625
    3. '
' → logprob: -10.005279541015625
    4. ':' → logprob: -15.005279541015625
    5. ':
' → logprob: -15.880279541015625
    6. '```' → logprob: -16.005279541015625
    7. '    
' → logprob: -16.630279541015625
    8. '  
' → logprob: -17.505279541015625
    9. '   ' → logprob: -17.505279541015625
    10. ' 
' → logprob: -17.630279541015625

Token 787: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03811080381274223
    2. ' for' → logprob: -3.2881107330322266
    3. 'pour' → logprob: -10.163110733032227
    4. ' pour' → logprob: -11.038110733032227
    5. ' 
' → logprob: -12.913110733032227
    6. '
' → logprob: -13.163110733032227
    7. '  
' → logprob: -13.413110733032227
    8. '   ' → logprob: -13.663110733032227
    9. 'range' → logprob: -13.663110733032227
    10. ',' → logprob: -13.913110733032227

Token 788: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07922728359699249
    2. ' for' → logprob: -2.5792272090911865
    3. '   ' → logprob: -8.079227447509766
    4. 'pour' → logprob: -10.954227447509766
    5. ' ' → logprob: -12.954227447509766
    6. '#' → logprob: -13.079227447509766
    7. ' pour' → logprob: -13.454227447509766
    8. '
' → logprob: -13.579227447509766
    9. '	for' → logprob: -14.329227447509766
    10. '```' → logprob: -14.579227447509766

Token 789: ' utilisant' (ID: 92474)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002648786408826709
    2. 'for' → logprob: -6.127648830413818
    3. ' range' → logprob: -7.752648830413818
    4. 'reverse' → logprob: -10.50264835357666
    5. 're' → logprob: -13.50264835357666
    6. '(range' → logprob: -13.50264835357666
    7. ' for' → logprob: -13.87764835357666
    8. 'enumer' → logprob: -14.00264835357666
    9. '#' → logprob: -14.12764835357666
    10. 'r' → logprob: -15.50264835357666

Token 790: ' S' (ID: 336)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002934675430878997
    2. 'for' → logprob: -6.377934455871582
    3. ' range' → logprob: -6.752934455871582
    4. '(range' → logprob: -10.377934455871582
    5. '
' → logprob: -10.752934455871582
    6. 'S' → logprob: -12.002934455871582
    7. ' for' → logprob: -13.377934455871582
    8. 'N' → logprob: -14.377934455871582
    9. '`' → logprob: -14.627934455871582
    10. 'i' → logprob: -14.627934455871582

Token 791: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.25000286102295
    3. '```' → logprob: -15.25000286102295
    4. '
' → logprob: -15.37500286102295
    5. '₂' → logprob: -15.62500286102295
    6. '۲' → logprob: -16.125001907348633
    7. '_' → logprob: -17.062501907348633
    8. '   ' → logprob: -17.250001907348633
    9. '２' → logprob: -17.437501907348633
    10. 'S' → logprob: -17.625001907348633

Token 792: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001684981834841892
    2. ' for' → logprob: -8.750168800354004
    3. '
' → logprob: -11.625168800354004
    4. ':' → logprob: -14.625168800354004
    5. '    
' → logprob: -15.750168800354004
    6. '```' → logprob: -15.750168800354004
    7. '<|end|>' → logprob: -16.125167846679688
    8. '  
' → logprob: -16.375167846679688
    9. ':
' → logprob: -17.750167846679688
    10. ' 
' → logprob: -17.750167846679688

Token 793: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. ' for' → logprob: -19.875
    4. '
' → logprob: -21.0
    5. '``' → logprob: -24.375
    6. '    
' → logprob: -24.625
    7. ' 
' → logprob: -24.75
    8. '  
' → logprob: -24.875
    9. '	for' → logprob: -25.75
    10. '

' → logprob: -27.0

Token 794: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47421932220458984
    2. ' i' → logprob: -0.9742193222045898
    3. 'j' → logprob: -8.97421932220459
    4. ' j' → logprob: -11.09921932220459
    5. ' ' → logprob: -15.34921932220459
    6. '	i' → logprob: -15.34921932220459
    7. 'I' → logprob: -16.474220275878906
    8. '_i' → logprob: -18.099220275878906
    9. '   ' → logprob: -18.099220275878906
    10. ' ' → logprob: -18.349220275878906

Token 795: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00761136319488287
    2. 'in' → logprob: -4.882611274719238
    3. ' ' → logprob: -12.882611274719238
    4. 'range' → logprob: -13.007611274719238
    5. 'n' → logprob: -16.007612228393555
    6. 'space' → logprob: -16.257612228393555
    7. ' ' → logprob: -16.382612228393555
    8. '	in' → logprob: -16.882612228393555
    9. ' range' → logprob: -17.007612228393555
    10. 'import' → logprob: -17.007612228393555

Token 796: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0788901224732399
    2. ' range' → logprob: -2.578890085220337
    3. '(range' → logprob: -16.328889846801758
    4. ' ' → logprob: -16.703889846801758
    5. 'rang' → logprob: -16.828889846801758
    6. 'in' → logprob: -17.203889846801758
    7. ' in' → logprob: -17.578889846801758
    8. '	range' → logprob: -18.078889846801758
    9. 'r' → logprob: -18.453889846801758
    10. '0' → logprob: -18.953889846801758

Token 797: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.988221684878226e-06
    2. ' (' → logprob: -11.875006675720215
    3. ' ' → logprob: -17.62500762939453
    4. '(
' → logprob: -17.87500762939453
    5. '2' → logprob: -18.87500762939453
    6. '((' → logprob: -20.12500762939453
    7. '(range' → logprob: -20.12500762939453
    8. ')' → logprob: -21.12500762939453
    9. 'range' → logprob: -21.87500762939453
    10. '1' → logprob: -22.00000762939453

Token 798: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.750001907348633
    3. ' ' → logprob: -13.750001907348633
    4. '0' → logprob: -15.750001907348633
    5. '1' → logprob: -17.750001907348633
    6. '   ' → logprob: -18.375001907348633
    7. ')' → logprob: -19.500001907348633
    8. '```' → logprob: -19.500001907348633
    9. '`' → logprob: -19.750001907348633
    10. '-' → logprob: -20.375001907348633

Token 799: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -4.36574100604048e-06
    2. '*' → logprob: -13.750004768371582
    3. 'N' → logprob: -13.750004768371582
    4. '*N' → logprob: -14.625004768371582
    5. '2' → logprob: -14.750004768371582
    6. '
' → logprob: -14.875004768371582
    7. ' **' → logprob: -15.000004768371582
    8. '**
' → logprob: -15.125004768371582
    9. '```' → logprob: -15.125004768371582
    10. '^' → logprob: -17.250003814697266

Token 800: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9361264946837764e-07
    2. ' N' → logprob: -15.625
    3. '(N' → logprob: -18.625
    4. '(' → logprob: -20.375
    5. '
' → logprob: -20.625
    6. ' ' → logprob: -21.625
    7. '```' → logprob: -21.625
    8. '   ' → logprob: -22.5
    9. 'n' → logprob: -22.875
    10. '	N' → logprob: -23.125

Token 801: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00031055594445206225
    2. '):
' → logprob: -8.125310897827148
    3. ' ):' → logprob: -11.750310897827148
    4. ':' → logprob: -12.375310897827148
    5. '):
' → logprob: -13.500310897827148
    6. ')' → logprob: -14.625310897827148
    7. '   ' → logprob: -15.625310897827148
    8. '}:' → logprob: -15.750310897827148
    9. ']:' → logprob: -15.875310897827148
    10. '+' → logprob: -16.62531089782715

Token 802: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021772195759695023
    2. ' bit' → logprob: -9.50021743774414
    3. '   ' → logprob: -9.75021743774414
    4. 'bit' → logprob: -10.00021743774414
    5. '#' → logprob: -11.37521743774414
    6. '    ' → logprob: -12.25021743774414
    7. '	' → logprob: -12.50021743774414
    8. '	b' → logprob: -12.50021743774414
    9. '    
' → logprob: -12.87521743774414
    10. ' ' → logprob: -13.00021743774414

Token 803: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002543678041547537
    2. '#' → logprob: -6.1275434494018555
    3. 'bit' → logprob: -8.127543449401855
    4. ' bit' → logprob: -10.377543449401855
    5. ' #' → logprob: -11.627543449401855
    6. '       ' → logprob: -12.377543449401855
    7. '```' → logprob: -12.377543449401855
    8. '
' → logprob: -12.502543449401855
    9. ' ' → logprob: -12.627543449401855
    10. '   ' → logprob: -12.752543449401855

Token 804: ' Bou' (ID: 33816)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01450441312044859
    2. 'bit' → logprob: -5.014504432678223
    3. '#' → logprob: -5.139504432678223
    4. ' bit' → logprob: -6.514504432678223
    5. ' #' → logprob: -8.639504432678223
    6. ' ' → logprob: -9.389504432678223
    7. '
' → logprob: -10.389504432678223
    8. '       ' → logprob: -10.764504432678223
    9. '    ' → logprob: -10.889504432678223
    10. '   ' → logprob: -10.889504432678223

Token 805: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.056467607617378235
    2. 'clé' → logprob: -3.3064675331115723
    3. 'cl' → logprob: -4.306467533111572
    4. '   ' → logprob: -5.806467533111572
    5. 'gle' → logprob: -7.556467533111572
    6. 'cles' → logprob: -7.556467533111572
    7. 'for' → logprob: -8.43146800994873
    8. 'g' → logprob: -9.18146800994873
    9. 'cler' → logprob: -9.30646800994873
    10. 'c' → logprob: -10.05646800994873

Token 806: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2818104922771454
    2. ':' → logprob: -1.4068105220794678
    3. ' :' → logprob: -8.156810760498047
    4. ':
' → logprob: -8.281810760498047
    5. '=' → logprob: -10.156810760498047
    6. ' =' → logprob: -11.156810760498047
    7. '  ' → logprob: -11.406810760498047
    8. 's' → logprob: -11.531810760498047
    9. '    ' → logprob: -11.531810760498047
    10. '    
' → logprob: -12.156810760498047

Token 807: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07845784723758698
    2. '2' → logprob: -3.078457832336426
    3. '(' → logprob: -4.453457832336426
    4. 'N' → logprob: -4.953457832336426
    5. 'i' → logprob: -4.953457832336426
    6. 'range' → logprob: -6.203457832336426
    7. ' ' → logprob: -6.828457832336426
    8. ' range' → logprob: -8.703457832336426
    9. ' i' → logprob: -9.328457832336426
    10. '(i' → logprob: -9.578457832336426

Token 808: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016119997948408127
    2. '2' → logprob: -4.516119956970215
    3. 'for' → logprob: -6.641119956970215
    4. '(' → logprob: -6.891119956970215
    5. 'N' → logprob: -7.016119956970215
    6. 'range' → logprob: -7.016119956970215
    7. 'i' → logprob: -7.266119956970215
    8. ' ' → logprob: -9.016119956970215
    9. ')' → logprob: -10.266119956970215
    10. ' range' → logprob: -11.016119956970215

Token 809: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8289182186126709
    2. ' to' → logprob: -1.453918218612671
    3. ' à' → logprob: -1.703918218612671
    4. 'to' → logprob: -2.953918218612671
    5. '   ' → logprob: -3.078918218612671
    6. ',' → logprob: -3.828918218612671
    7. 'à' → logprob: -4.45391845703125
    8. 'in' → logprob: -5.70391845703125
    9. 'dans' → logprob: -5.70391845703125
    10. ' ' → logprob: -5.95391845703125

Token 810: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11724483966827393
    2. '2' → logprob: -2.4922447204589844
    3. ' (' → logprob: -3.6172447204589844
    4. ' ' → logprob: -6.867244720458984
    5. '((' → logprob: -13.117244720458984
    6. '   ' → logprob: -13.242244720458984
    7. '0' → logprob: -13.742244720458984
    8. 'range' → logprob: -13.992244720458984
    9. '`' → logprob: -14.367244720458984
    10. '```' → logprob: -14.804744720458984

Token 811: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16063879430294037
    2. '2' → logprob: -1.9106388092041016
    3. ' (' → logprob: -7.910638809204102
    4. ' ' → logprob: -10.035638809204102
    5. '0' → logprob: -13.660638809204102
    6. '((' → logprob: -14.160638809204102
    7. '   ' → logprob: -14.785638809204102
    8. '`' → logprob: -14.910638809204102
    9. '
' → logprob: -15.410638809204102
    10. 'range' → logprob: -15.785638809204102

Token 812: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -4.215330409351736e-05
    2. ' **' → logprob: -10.125041961669922
    3. '*' → logprob: -13.125041961669922
    4. '*N' → logprob: -17.125041961669922
    5. '^' → logprob: -17.250041961669922
    6. '**
' → logprob: -17.500041961669922
    7. '```' → logprob: -17.500041961669922
    8. '
' → logprob: -17.875041961669922
    9. ' *' → logprob: -19.125041961669922
    10. ' ' → logprob: -20.375041961669922

Token 813: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002765902318060398
    2. '**' → logprob: -8.375276565551758
    3. ' N' → logprob: -10.750276565551758
    4. '```' → logprob: -11.000276565551758
    5. '*N' → logprob: -12.875276565551758
    6. '
' → logprob: -13.125276565551758
    7. ' ' → logprob: -13.625276565551758
    8. '(N' → logprob: -14.375276565551758
    9. '	N' → logprob: -14.625276565551758
    10. '2' → logprob: -15.875276565551758

Token 814: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033540434669703245
    2. '):' → logprob: -5.878354072570801
    3. ':
' → logprob: -8.0033540725708
    4. ' :' → logprob: -9.0033540725708
    5. '   ' → logprob: -9.7533540725708
    6. '):
' → logprob: -11.7533540725708
    7. '+:' → logprob: -12.1283540725708
    8. '-' → logprob: -12.3783540725708
    9. ')' → logprob: -12.8783540725708
    10. ':i' → logprob: -12.8783540725708

Token 815: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006635877070948482
    2. 'N' → logprob: -7.500663757324219
    3. ' ' → logprob: -9.250663757324219
    4. ' N' → logprob: -11.250663757324219
    5. '```' → logprob: -14.250663757324219
    6. '   ' → logprob: -15.250663757324219
    7. ' -' → logprob: -15.375663757324219
    8. '-' → logprob: -15.625663757324219
    9. '2' → logprob: -16.37566375732422
    10. ')' → logprob: -16.50066375732422

Token 816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -10.500028610229492
    3. 'N' → logprob: -15.125028610229492
    4. '2' → logprob: -15.500028610229492
    5. '-' → logprob: -15.625028610229492
    6. '
' → logprob: -15.625028610229492
    7. '```' → logprob: -15.625028610229492
    8. '   ' → logprob: -16.375028610229492
    9. ')' → logprob: -17.250028610229492
    10. '`' → logprob: -17.625028610229492

Token 817: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001345946453511715
    2. '   ' → logprob: -7.251346111297607
    3. ':
' → logprob: -7.626346111297607
    4. '):' → logprob: -9.12634563446045
    5. ' :' → logprob: -10.37634563446045
    6. '):
' → logprob: -13.25134563446045
    7. ' bit' → logprob: -13.87634563446045
    8. '=' → logprob: -14.00134563446045
    9. ',' → logprob: -14.12634563446045
    10. ')' → logprob: -14.25134563446045

Token 818: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22687497735023499
    2. ':' → logprob: -1.6018749475479126
    3. ':
' → logprob: -7.101874828338623
    4. '):' → logprob: -8.101875305175781
    5. ' bit' → logprob: -9.101875305175781
    6. ' :' → logprob: -9.351875305175781
    7. 'bit' → logprob: -10.476875305175781
    8. '):
' → logprob: -10.851875305175781
    9. ')' → logprob: -10.851875305175781
    10. '[' → logprob: -11.601875305175781

Token 819: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016277639952022582
    2. 'bit' → logprob: -9.625163078308105
    3. ' bit' → logprob: -10.000163078308105
    4. '```' → logprob: -10.875163078308105
    5. '#' → logprob: -11.125163078308105
    6. '   ' → logprob: -11.250163078308105
    7. '       ' → logprob: -13.875163078308105
    8. ' ' → logprob: -14.000163078308105
    9. '    ' → logprob: -14.500163078308105
    10. '    
' → logprob: -14.750163078308105

Token 820: ' #' (ID: 1069)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.03395756334066391
    2. '   ' → logprob: -3.5339574813842773
    3. '#' (adapté à ' #') → logprob: -5.658957481384277
    4. ' bit' → logprob: -7.283957481384277
    5. ' ' → logprob: -11.283957481384277
    6. ' #' → logprob: -11.783957481384277
    7. '  ' → logprob: -13.783957481384277
    8. 'bin' → logprob: -13.783957481384277
    9. '       ' → logprob: -14.158957481384277
    10. '```' → logprob: -14.283957481384277

Token 821: ' Comme' (ID: 53252)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00038991993642412126
    2. ' bit' → logprob: -8.50039005279541
    3. '#' → logprob: -9.37539005279541
    4. '   ' → logprob: -9.37539005279541
    5. 'bin' → logprob: -11.12539005279541
    6. ' ' → logprob: -13.37539005279541
    7. '
' → logprob: -15.87539005279541
    8. '  ' → logprob: -16.125389099121094
    9. ' #' → logprob: -16.125389099121094
    10. '```' → logprob: -16.500389099121094

Token 822: ' ci' (ID: 7405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8969739675521851
    2. 'pr' → logprob: -1.396973967552185
    3. ' précéd' → logprob: -2.5219740867614746
    4. 'bit' → logprob: -2.7719740867614746
    5. ' bit' → logprob: -3.1469740867614746
    6. 'preced' → logprob: -3.2719740867614746
    7. 'plus' → logprob: -3.5219740867614746
    8. ' for' → logprob: -3.6469740867614746
    9. ' plus' → logprob: -3.7719740867614746
    10. ' pour' → logprob: -5.021974086761475

Token 823: '-dessus' (ID: 74812)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.15183106064796448
    2. '=' → logprob: -2.5268311500549316
    3. 'n' → logprob: -3.6518311500549316
    4. '#' → logprob: -4.651831150054932
    5. '   ' → logprob: -4.901831150054932
    6. '```' → logprob: -5.651831150054932
    7. '-' → logprob: -5.901831150054932
    8. ' =' → logprob: -5.901831150054932
    9. 'ont' → logprob: -6.651831150054932
    10. '_' → logprob: -6.901831150054932

Token 824: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40448394417762756
    2. ' bit' → logprob: -1.2794839143753052
    3. 'bit' → logprob: -3.2794840335845947
    4. ':' → logprob: -4.154483795166016
    5. ',' → logprob: -8.279483795166016
    6. ' ' → logprob: -8.404483795166016
    7. '  ' → logprob: -8.779483795166016
    8. ' :' → logprob: -9.154483795166016
    9. '    
' → logprob: -9.404483795166016
    10. ':
' → logprob: -9.404483795166016

Token 825: ' prépare' (ID: 150142)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5250357389450073
    2. ' bit' → logprob: -0.9000357389450073
    3. '   ' → logprob: -6.275035858154297
    4. ' ' → logprob: -11.025035858154297
    5. 'bin' → logprob: -12.525035858154297
    6. ' bin' → logprob: -13.400035858154297
    7. 'bits' → logprob: -13.525035858154297
    8. '  ' → logprob: -13.775035858154297
    9. '    ' → logprob: -14.150035858154297
    10. 'bitr' → logprob: -14.650035858154297

Token 826: ' le' (ID: 505)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.7347421646118164
    2. ' le' → logprob: -1.2347421646118164
    3. 'bit' → logprob: -1.4847421646118164
    4. 'le' → logprob: -6.609742164611816
    5. '   ' → logprob: -7.609742164611816
    6. '(bit' → logprob: -8.359742164611816
    7. ' ' → logprob: -8.484742164611816
    8. ' la' → logprob: -8.859742164611816
    9. '_bit' → logprob: -8.859742164611816
    10. 'b' → logprob: -9.109742164611816

Token 827: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.014633753336966038
    2. ' bit' → logprob: -4.514633655548096
    3. 'bin' → logprob: -5.639633655548096
    4. ' bin' → logprob: -10.764634132385254
    5. 'b' → logprob: -12.764634132385254
    6. 'bi' → logprob: -14.764634132385254
    7. 'bits' → logprob: -14.764634132385254
    8. ' ' → logprob: -15.014634132385254
    9. 'bitr' → logprob: -16.014633178710938
    10. 'bid' → logprob: -17.014633178710938

Token 828: 'string' (ID: 1655)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14685723185539246
    2. '=' → logprob: -2.396857261657715
    3. 's' → logprob: -3.146857261657715
    4. 'string' → logprob: -6.646857261657715
    5. '_string' → logprob: -7.396857261657715
    6. 'e' → logprob: -8.521857261657715
    7. '_str' → logprob: -8.646857261657715
    8. '_' → logprob: -9.271857261657715
    9. ' ' → logprob: -9.646857261657715
    10. 'str' → logprob: -10.896857261657715

Token 829: ' correspondant' (ID: 146058)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008721878752112389
    2. '=' → logprob: -4.758721828460693
    3. '   ' → logprob: -9.508722305297852
    4. ' bit' → logprob: -11.008722305297852
    5. 'bit' → logprob: -11.258722305297852
    6. ',' → logprob: -14.008722305297852
    7. ' ' → logprob: -14.133722305297852
    8. '    ' → logprob: -14.633722305297852
    9. '(bit' → logprob: -14.633722305297852
    10. 'b' → logprob: -15.133722305297852

Token 830: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.603606641292572
    2. 'bit' → logprob: -1.7286067008972168
    3. '=' → logprob: -1.9786067008972168
    4. ' bit' → logprob: -2.103606700897217
    5. '   ' → logprob: -4.228606700897217
    6. ',' → logprob: -7.978606700897217
    7. 'b' → logprob: -9.353606224060059
    8. 'bin' → logprob: -9.853606224060059
    9. '(bit' → logprob: -10.103606224060059
    10. ':' → logprob: -10.353606224060059

Token 831: 'cha' (ID: 3836)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5919269919395447
    2. ' bit' → logprob: -0.8419269919395447
    3. 'bin' → logprob: -4.5919270515441895
    4. ' bin' → logprob: -5.2169270515441895
    5. '   ' → logprob: -8.341926574707031
    6. 'b' → logprob: -10.841926574707031
    7. 'bits' → logprob: -11.341926574707031
    8. ' ' → logprob: -11.466926574707031
    9. '       ' → logprob: -12.591926574707031
    10. '           ' → logprob: -12.841926574707031

Token 832: 'îne' (ID: 55188)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2198544144630432
    2. 'îne' → logprob: -2.3448543548583984
    3. 'in' → logprob: -2.9698543548583984
    4. 'n' → logprob: -3.7198543548583984
    5. 'bin' → logprob: -4.594854354858398
    6. '   ' → logprob: -5.594854354858398
    7. 'ine' → logprob: -5.969854354858398
    8. 'î' → logprob: -6.469854354858398
    9. 'în' → logprob: -6.719854354858398
    10. '```' → logprob: -6.844854354858398

Token 833: ' b' (ID: 287)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02637891098856926
    2. '=' → logprob: -3.651378870010376
    3. '   ' → logprob: -9.776378631591797
    4. '    ' → logprob: -12.151378631591797
    5. ')' → logprob: -12.651378631591797
    6. ' ' → logprob: -13.151378631591797
    7. '(' → logprob: -13.401378631591797
    8. '```' → logprob: -13.526378631591797
    9. '  ' → logprob: -13.776378631591797
    10. '=b' → logprob: -13.776378631591797

Token 834: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.034546904265880585
    2. 'inaire' → logprob: -3.7845468521118164
    3. ''' → logprob: -5.659546852111816
    4. '=' → logprob: -6.034546852111816
    5. 'inary' → logprob: -6.534546852111816
    6. 'i' → logprob: -7.159546852111816
    7. 'ina' → logprob: -7.409546852111816
    8. '`' → logprob: -7.534546852111816
    9. 'inar' → logprob: -7.534546852111816
    10. '"' → logprob: -7.659546852111816

Token 835: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19439619779586792
    2. '(' → logprob: -2.0693962574005127
    3. '=' → logprob: -3.0693962574005127
    4. ')' → logprob: -6.444396018981934
    5. '   ' → logprob: -6.819396018981934
    6. 'bin' → logprob: -7.319396018981934
    7. ',' → logprob: -8.944396018981934
    8. 'bit' → logprob: -9.319396018981934
    9. '```' → logprob: -9.694396018981934
    10. ']' → logprob: -9.944396018981934

Token 836: ' N' (ID: 478)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.3860119581222534
    2. '(' → logprob: -1.8860119581222534
    3. '2' → logprob: -2.011012077331543
    4. 'N' → logprob: -3.886012077331543
    5. ' bin' → logprob: -4.511012077331543
    6. ' ' → logprob: -6.636012077331543
    7. '(bin' → logprob: -7.261012077331543
    8. ' (' → logprob: -8.386012077331543
    9. ' N' → logprob: -8.511012077331543
    10. 'b' → logprob: -9.261012077331543

Token 837: ' caractères' (ID: 183106)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -1.1264081001281738
    2. '+' → logprob: -1.7514081001281738
    3. 'bits' → logprob: -1.8764081001281738
    4. ' bits' → logprob: -2.501408100128174
    5. ' digits' → logprob: -2.626408100128174
    6. 'car' → logprob: -3.001408100128174
    7. ' caractères' → logprob: -3.126408100128174
    8. '```' → logprob: -3.751408100128174
    9. ' chiffres' → logprob: -3.876408100128174
    10. '_bits' → logprob: -4.751408100128174

Token 838: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6261213421821594
    2. ' =' → logprob: -1.3761212825775146
    3. ')' → logprob: -1.8761212825775146
    4. '=' → logprob: -3.1261212825775146
    5. ',' → logprob: -5.001121520996094
    6. '):' → logprob: -5.501121520996094
    7. '):
' → logprob: -7.126121520996094
    8. ' bit' → logprob: -7.251121520996094
    9. 'bit' → logprob: -7.376121520996094
    10. ').' → logprob: -7.751121520996094

Token 839: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3865501880645752
    2. 'bin' → logprob: -1.2615501880645752
    3. 'i' → logprob: -4.136549949645996
    4. ' bin' → logprob: -4.886549949645996
    5. '(' → logprob: -5.386549949645996
    6. ' ' → logprob: -5.761549949645996
    7. 'S' → logprob: -6.261549949645996
    8. ' i' → logprob: -7.011549949645996
    9. 'str' → logprob: -8.386549949645996
    10. 'bit' → logprob: -8.386549949645996

Token 840: ' combinaison' (ID: 165933)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22124320268630981
    2. 'bin' → logprob: -1.971243143081665
    3. 'i' → logprob: -3.846243143081665
    4. 'bit' → logprob: -3.971243143081665
    5. ' ' → logprob: -5.221243381500244
    6. 'S' → logprob: -5.721243381500244
    7. ' bin' → logprob: -5.846243381500244
    8. 'b' → logprob: -6.096243381500244
    9. '(' → logprob: -6.846243381500244
    10. 'N' → logprob: -6.971243381500244

Token 841: ' cour' (ID: 2871)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21811820566654205
    2. '):' → logprob: -2.593118190765381
    3. ')' → logprob: -2.718118190765381
    4. ',' → logprob: -4.218118190765381
    5. '   ' → logprob: -4.718118190765381
    6. ' (' → logprob: -4.968118190765381
    7. ' =' → logprob: -5.093118190765381
    8. '):
' → logprob: -5.843118190765381
    9. ').' → logprob: -6.218118190765381
    10. '.' → logprob: -6.468118190765381

Token 842: 'ante' (ID: 2116)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.16381452977657318
    2. 'ine' → logprob: -3.0388145446777344
    3. 'bine' → logprob: -3.5388145446777344
    4. 'que' → logprob: -4.663814544677734
    5. 'i' → logprob: -4.788814544677734
    6. 'ée' → logprob: -5.288814544677734
    7. 'iné' → logprob: -5.288814544677734
    8. 'rée' → logprob: -5.288814544677734
    9. 'e' → logprob: -5.538814544677734
    10. 'onne' → logprob: -5.538814544677734

Token 843: ').
' (ID: 6294)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14296090602874756
    2. ')' → logprob: -2.642961025238037
    3. '):' → logprob: -3.142961025238037
    4. '):
' → logprob: -4.892961025238037
    5. ' =' → logprob: -5.642961025238037
    6. '(' → logprob: -6.017961025238037
    7. ',' → logprob: -6.767961025238037
    8. '=' → logprob: -7.142961025238037
    9. ').' → logprob: -7.392961025238037
    10. '(bit' → logprob: -7.642961025238037

Token 844: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9305097460746765
    2. ' bit' → logprob: -0.9305097460746765
    3. 'bit' → logprob: -1.5555098056793213
    4. '    
' → logprob: -9.555509567260742
    5. '    ' → logprob: -9.930509567260742
    6. '	b' → logprob: -10.930509567260742
    7. '  ' → logprob: -11.430509567260742
    8. 'b' → logprob: -11.555509567260742
    9. '```' → logprob: -11.680509567260742
    10. ' 
' → logprob: -11.930509567260742

Token 845: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.0011760591296479106
    2. ' bit' → logprob: -7.001175880432129
    3. 'bin' → logprob: -8.876175880432129
    4. '   ' → logprob: -9.001175880432129
    5. 'b' → logprob: -14.751175880432129
    6. 'bits' → logprob: -14.751175880432129
    7. 'bitr' → logprob: -15.001175880432129
    8. ' bin' → logprob: -16.001176834106445
    9. 'bi' → logprob: -16.501176834106445
    10. 'bid' → logprob: -17.001176834106445

Token 846: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519298195838928
    2. '=' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.126930236816406
    4. ' ' → logprob: -16.501930236816406
    5. '＝' → logprob: -16.876930236816406
    6. 'bit' → logprob: -17.376930236816406
    7. '=
' → logprob: -17.376930236816406
    8. ' =
' → logprob: -17.501930236816406
    9. ',' → logprob: -17.626930236816406
    10. 's' → logprob: -17.626930236816406

Token 847: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.16022635996341705
    2. ' bin' → logprob: -1.9102263450622559
    3. '(bin' → logprob: -13.785226821899414
    4. 'b' → logprob: -14.285226821899414
    5. ' ' → logprob: -15.160226821899414
    6. '/bin' → logprob: -16.285226821899414
    7. '.bin' → logprob: -17.285226821899414
    8. 'str' → logprob: -17.535226821899414
    9. 'bit' → logprob: -17.660226821899414
    10. '   ' → logprob: -17.910226821899414

Token 848: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5048530030981055e-06
    2. '2' → logprob: -13.875001907348633
    3. ' (' → logprob: -15.500001907348633
    4. '(
' → logprob: -16.250001907348633
    5. '((' → logprob: -16.500001907348633
    6. '1' → logprob: -18.375001907348633
    7. '<|end|>' → logprob: -18.625001907348633
    8. ' ' → logprob: -19.000001907348633
    9. '(int' → logprob: -19.375001907348633
    10. '3' → logprob: -19.875001907348633

Token 849: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004625222180038691
    2. '(' → logprob: -5.37962532043457
    3. ' ' → logprob: -12.25462532043457
    4. '1' → logprob: -15.87962532043457
    5. ' (' → logprob: -17.37962532043457
    6. '256' → logprob: -17.50462532043457
    7. '   ' → logprob: -18.37962532043457
    8. '```' → logprob: -18.37962532043457
    9. '<|end|>' → logprob: -18.87962532043457
    10. '[' → logprob: -19.00462532043457

Token 850: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -2.5776860184123507e-06
    2. ' **' → logprob: -13.37500286102295
    3. '*' → logprob: -13.87500286102295
    4. '^' → logprob: -17.625001907348633
    5. '```' → logprob: -17.750001907348633
    6. '***' → logprob: -18.875001907348633
    7. '*N' → logprob: -18.875001907348633
    8. '**)' → logprob: -19.375001907348633
    9. '**
' → logprob: -19.625001907348633
    10. '
' → logprob: -20.875001907348633

Token 851: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.320199877838604e-07
    2. ' N' → logprob: -15.25
    3. '(N' → logprob: -16.125
    4. '(' → logprob: -17.5
    5. ' ' → logprob: -19.0
    6. '```' → logprob: -20.0
    7. '	N' → logprob: -20.5
    8. 'Nth' → logprob: -20.625
    9. '[N' → logprob: -20.75
    10. '
' → logprob: -20.75

Token 852: ' +' (ID: 659)
  Prédit: '+i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.5780648589134216
    2. '+' → logprob: -0.8280648589134216
    3. ' +' → logprob: -6.203064918518066
    4. '+
' → logprob: -9.578064918518066
    5. 'i' → logprob: -11.578064918518066
    6. ' i' → logprob: -11.828064918518066
    7. '[i' → logprob: -12.703064918518066
    8. ' ' → logprob: -13.453064918518066
    9. '   ' → logprob: -13.578064918518066
    10. ')' → logprob: -13.953064918518066

Token 853: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.130576806142926e-05
    2. ' i' → logprob: -10.375031471252441
    3. ' ' → logprob: -17.000030517578125
    4. '	i' → logprob: -18.375030517578125
    5. '(i' → logprob: -18.750030517578125
    6. ')i' → logprob: -19.750030517578125
    7. '  ' → logprob: -20.000030517578125
    8. '   ' → logprob: -20.000030517578125
    9. '_i' → logprob: -20.000030517578125
    10. '[i' → logprob: -20.125030517578125

Token 854: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -7.3458322731312364e-06
    2. ' )[' → logprob: -12.500007629394531
    3. '[' → logprob: -12.750007629394531
    4. '")[' → logprob: -15.250007629394531
    5. ')' → logprob: -15.500007629394531
    6. '')[' → logprob: -16.00000762939453
    7. '][' → logprob: -16.50000762939453
    8. '   ' → logprob: -16.87500762939453
    9. '}[' → logprob: -17.62500762939453
    10. '>[' → logprob: -17.87500762939453

Token 855: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.625012397766113
    4. '(' → logprob: -16.250011444091797
    5. '```' → logprob: -17.375011444091797
    6. '  ' → logprob: -17.500011444091797
    7. '-' → logprob: -17.750011444091797
    8. ')' → logprob: -18.000011444091797
    9. '
' → logprob: -18.812511444091797
    10. '۳' → logprob: -18.937511444091797

Token 856: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.003213245654478669
    2. ':' → logprob: -6.128213405609131
    3. ']' → logprob: -7.128213405609131
    4. ':]
' → logprob: -8.878212928771973
    5. '()]' → logprob: -10.003212928771973
    6. ':].' → logprob: -10.628212928771973
    7. ' :]' → logprob: -11.878212928771973
    8. ':)' → logprob: -13.003212928771973
    9. ':])
' → logprob: -13.503212928771973
    10. '])' → logprob: -13.628212928771973

Token 857: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016476524993777275
    2. 'red' → logprob: -4.141476631164551
    3. ' red' → logprob: -7.891476631164551
    4. '    
' → logprob: -10.51647663116455
    5. '#' → logprob: -11.26647663116455
    6. '```' → logprob: -11.89147663116455
    7. '
' → logprob: -12.01647663116455
    8. '  ' → logprob: -12.01647663116455
    9. '_red' → logprob: -12.89147663116455
    10. '(red' → logprob: -13.01647663116455

Token 858: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933814287185669
    2. 'red' → logprob: -0.6933814287185669
    3. '#' (adapté à ' #') → logprob: -9.068381309509277
    4. ' red' → logprob: -9.443381309509277
    5. '```' → logprob: -11.193381309509277
    6. '    
' → logprob: -11.943381309509277
    7. '  ' → logprob: -12.318381309509277
    8. '[' → logprob: -12.943381309509277
    9. '(red' → logprob: -13.068381309509277
    10. 'blue' → logprob: -13.193381309509277

Token 859: ' On' (ID: 2160)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.003012649482116103
    2. '#' → logprob: -5.878012657165527
    3. '   ' → logprob: -8.628012657165527
    4. 'blue' → logprob: -10.753012657165527
    5. ' red' → logprob: -12.878012657165527
    6. 'rev' → logprob: -14.253012657165527
    7. '    
' → logprob: -14.378012657165527
    8. 'reverse' → logprob: -14.753012657165527
    9. ' ' → logprob: -15.128012657165527
    10. 're' → logprob: -15.128012657165527

Token 860: ' construit' (ID: 119882)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.06773119419813156
    2. ' red' → logprob: -3.0677311420440674
    3. '#' → logprob: -4.0677313804626465
    4. 'r' → logprob: -8.067730903625488
    5. ' #' → logprob: -8.067730903625488
    6. 'reverse' → logprob: -8.442730903625488
    7. 'create' → logprob: -8.567730903625488
    8. 'cr' → logprob: -8.942730903625488
    9. 'blue' → logprob: -9.067730903625488
    10. 're' → logprob: -9.067730903625488

Token 861: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.005071398802101612
    2. ' red' → logprob: -5.50507116317749
    3. 'blue' → logprob: -7.13007116317749
    4. '"' → logprob: -10.130071640014648
    5. '   ' → logprob: -10.130071640014648
    6. '[' → logprob: -10.755071640014648
    7. ' ' → logprob: -10.755071640014648
    8. ' blue' → logprob: -10.880071640014648
    9. 're' → logprob: -11.380071640014648
    10. ' "".' → logprob: -12.255071640014648

Token 862: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0038961567915976048
    2. '1' → logprob: -6.003896236419678
    3. ' =' → logprob: -6.628896236419678
    4. '=' → logprob: -9.50389575958252
    5. '"' → logprob: -11.12889575958252
    6. ' ' → logprob: -13.00389575958252
    7. '```' → logprob: -13.25389575958252
    8. '=[' → logprob: -14.25389575958252
    9. '="' → logprob: -14.37889575958252
    10. '   ' → logprob: -14.37889575958252

Token 863: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016035424545407295
    2. '=' → logprob: -4.141035556793213
    3. ' ' → logprob: -14.391035079956055
    4. ' ="' → logprob: -15.641035079956055
    5. '="' → logprob: -16.266035079956055
    6. '   ' → logprob: -16.516035079956055
    7. '"' → logprob: -17.141035079956055
    8. ',' → logprob: -17.266035079956055
    9. '[' → logprob: -18.016035079956055
    10. '  ' → logprob: -18.016035079956055

Token 864: ' prenant' (ID: 140375)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.013800746761262417
    2. '"d' → logprob: -4.638800621032715
    3. '[d' → logprob: -5.888800621032715
    4. ' "".' → logprob: -7.263800621032715
    5. '''.' → logprob: -7.888800621032715
    6. 'd' → logprob: -9.138800621032715
    7. '[' → logprob: -10.138800621032715
    8. '""' → logprob: -10.388800621032715
    9. '"D' → logprob: -12.138800621032715
    10. '(d' → logprob: -13.513800621032715

Token 865: ' les' (ID: 1341)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.33150923252105713
    2. '"' → logprob: -1.9565092325210571
    3. 'd' → logprob: -2.0815091133117676
    4. '"d' → logprob: -4.456509113311768
    5. '[c' → logprob: -6.831509113311768
    6. ' "".' → logprob: -6.831509113311768
    7. '[' → logprob: -7.331509113311768
    8. '''.' → logprob: -7.831509113311768
    9. '[s' → logprob: -8.081509590148926
    10. ' d' → logprob: -8.206509590148926

Token 866: ' caractères' (ID: 183106)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.021473649889230728
    2. '[d' → logprob: -3.8964736461639404
    3. '"d' → logprob: -7.5214738845825195
    4. '"' → logprob: -9.14647388458252
    5. ' d' → logprob: -9.14647388458252
    6. '""' → logprob: -9.89647388458252
    7. '[' → logprob: -10.89647388458252
    8. 'c' → logprob: -10.89647388458252
    9. ' "".' → logprob: -11.02147388458252
    10. '[
' → logprob: -11.27147388458252

Token 867: ' de' (ID: 334)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.08860547095537186
    2. '(d' → logprob: -2.9636054039001465
    3. 'd' → logprob: -4.3386054039001465
    4. ' for' → logprob: -4.8386054039001465
    5. '([' → logprob: -5.4636054039001465
    6. '[' → logprob: -6.2136054039001465
    7. 'for' → logprob: -6.3386054039001465
    8. 'S' → logprob: -6.9636054039001465
    9. ' d' → logprob: -7.4636054039001465
    10. '[S' → logprob: -7.5886054039001465

Token 868: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0007629302563145757
    2. ' S' → logprob: -7.625762939453125
    3. '[S' → logprob: -9.125762939453125
    4. '[d' → logprob: -9.375762939453125
    5. 'd' → logprob: -9.750762939453125
    6. 'zip' → logprob: -12.000762939453125
    7. '(S' → logprob: -12.125762939453125
    8. ' ' → logprob: -12.500762939453125
    9. '[i' → logprob: -13.625762939453125
    10. ' [' → logprob: -13.750762939453125

Token 869: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.031157969729975e-05
    2. '1' → logprob: -9.750090599060059
    3. 'for' → logprob: -10.500090599060059
    4. 'S' → logprob: -13.250090599060059
    5. ' for' → logprob: -14.375090599060059
    6. 'zip' → logprob: -14.500090599060059
    7. '(S' → logprob: -14.750090599060059
    8. '
' → logprob: -15.000090599060059
    9. 'if' → logprob: -15.750090599060059
    10. '```' → logprob: -15.750090599060059

Token 870: ' pour' (ID: 1930)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36080434918403625
    2. 'if' → logprob: -1.2358043193817139
    3. ' for' → logprob: -5.110804557800293
    4. 'for' → logprob: -5.735804557800293
    5. 'd' → logprob: -7.610804557800293
    6. '[d' → logprob: -7.610804557800293
    7. '=' → logprob: -7.735804557800293
    8. '[' → logprob: -7.985804557800293
    9. '[i' → logprob: -8.110804557800293
    10. ' ' → logprob: -8.610804557800293

Token 871: ' lesquels' (ID: 106476)
  Prédit: ' lesquels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lesquels' → logprob: -0.6939210295677185
    2. 's' → logprob: -0.9439210295677185
    3. ' lesquelles' → logprob: -3.3189210891723633
    4. 'les' → logprob: -3.9439210891723633
    5. 'which' → logprob: -3.9439210891723633
    6. '```' → logprob: -4.818921089172363
    7. 'd' → logprob: -4.943921089172363
    8. 'qui' → logprob: -6.193921089172363
    9. 'que' → logprob: -6.318921089172363
    10. '(s' → logprob: -6.443921089172363

Token 872: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6067481637001038
    2. ' s' → logprob: -1.356748104095459
    3. 'bit' → logprob: -2.106748104095459
    4. ' bit' → logprob: -2.606748104095459
    5. '(s' → logprob: -7.731748104095459
    6. 'b' → logprob: -7.981748104095459
    7. '(bit' → logprob: -7.981748104095459
    8. 'd' → logprob: -8.731748580932617
    9. 'zip' → logprob: -8.856748580932617
    10. ' d' → logprob: -9.106748580932617

Token 873: ' bit' (ID: 3546)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.046764057129621506
    2. 'bit' → logprob: -3.4217641353607178
    3. ' s' → logprob: -4.546763896942139
    4. ' bit' → logprob: -6.171763896942139
    5. 'b' → logprob: -9.296764373779297
    6. '(s' → logprob: -10.046764373779297
    7. 'd' → logprob: -10.171764373779297
    8. '[s' → logprob: -10.296764373779297
    9. 'i' → logprob: -10.546764373779297
    10. 'x' → logprob: -10.921764373779297

Token 874: ' correspondant' (ID: 146058)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06318465620279312
    2. '==' → logprob: -2.8131847381591797
    3. 's' → logprob: -7.31318473815918
    4. '=' → logprob: -8.68818473815918
    5. '=="' → logprob: -9.06318473815918
    6. ' s' → logprob: -9.43818473815918
    7. '[i' → logprob: -9.68818473815918
    8. '=='' → logprob: -10.43818473815918
    9. '[' → logprob: -10.81318473815918
    10. ' ' → logprob: -10.81318473815918

Token 875: ' vaut' (ID: 83004)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31904104351997375
    2. '==' → logprob: -1.5690410137176514
    3. '=="' → logprob: -2.9440410137176514
    4. 's' → logprob: -4.8190412521362305
    5. '=='' → logprob: -6.5690412521362305
    6. ' s' → logprob: -7.0690412521362305
    7. 'd' → logprob: -7.5690412521362305
    8. ' est' → logprob: -8.19404125213623
    9. 'est' → logprob: -8.44404125213623
    10. '```' → logprob: -8.81904125213623

Token 876: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38733145594596863
    2. ''' → logprob: -1.137331485748291
    3. ' '' → logprob: -8.512331008911133
    4. ' "' → logprob: -8.637331008911133
    5. '1' → logprob: -9.637331008911133
    6. ' ' → logprob: -11.762331008911133
    7. ''"' → logprob: -13.012331008911133
    8. ' ' → logprob: -14.137331008911133
    9. '`' → logprob: -14.512331008911133
    10. ''un' → logprob: -14.512331008911133

Token 877: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. '0' → logprob: -10.875020980834961
    3. ''' → logprob: -13.500020980834961
    4. ' ' → logprob: -15.000020980834961
    5. '"' → logprob: -16.12502098083496
    6. '```' → logprob: -20.62502098083496
    7. '   ' → logprob: -20.87502098083496
    8. '`' → logprob: -21.00002098083496
    9. '１' → logprob: -21.75002098083496
    10. '' → logprob: -21.87502098083496

Token 878: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07372631132602692
    2. ']' → logprob: -3.1987264156341553
    3. '])' → logprob: -4.573726177215576
    4. '   ' → logprob: -4.823726177215576
    5. '")' → logprob: -6.073726177215576
    6. 'if' → logprob: -6.323726177215576
    7. ' if' → logprob: -6.448726177215576
    8. ')]' → logprob: -6.698726177215576
    9. ')
' → logprob: -6.823726177215576
    10. ' )' → logprob: -6.823726177215576

Token 879: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1384179592132568
    2. ' =' → logprob: -1.1384179592132568
    3. '   ' → logprob: -1.3884179592132568
    4. 'red' → logprob: -2.888417959213257
    5. ' red' → logprob: -3.388417959213257
    6. '"' → logprob: -4.388418197631836
    7. ')' → logprob: -6.513418197631836
    8. ' ' → logprob: -7.138418197631836
    9. '```' → logprob: -7.138418197631836
    10. '="' → logprob: -7.388418197631836

Token 880: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.0019491063430905342
    2. ' red' → logprob: -6.251949310302734
    3. '"' → logprob: -11.626949310302734
    4. 'd' → logprob: -12.001949310302734
    5. '   ' → logprob: -13.001949310302734
    6. ' "".' → logprob: -13.751949310302734
    7. '```' → logprob: -15.001949310302734
    8. '".' → logprob: -15.251949310302734
    9. '.red' → logprob: -15.376949310302734
    10. 'r' → logprob: -15.376949310302734

Token 881: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' =' → logprob: -14.500000953674316
    3. '=' → logprob: -15.250000953674316
    4. ' ' → logprob: -15.875000953674316
    5. '"' → logprob: -17.125001907348633
    6. '_' → logprob: -17.125001907348633
    7. '```' → logprob: -17.500001907348633
    8. '1' → logprob: -18.125001907348633
    9. '
' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.375001907348633

Token 882: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132629096508026
    2. '=' → logprob: -1.313262939453125
    3. ' ' → logprob: -13.813262939453125
    4. '="' → logprob: -17.188262939453125
    5. '   ' → logprob: -17.563262939453125
    6. ' ="' → logprob: -17.688262939453125
    7. '	' → logprob: -17.813262939453125
    8. 's' → logprob: -17.813262939453125
    9. '  ' → logprob: -18.188262939453125
    10. ' =
' → logprob: -18.563262939453125

Token 883: ' "".' (ID: 94734)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00870060920715332
    2. ' "".' → logprob: -4.758700370788574
    3. '""' → logprob: -10.008700370788574
    4. '''.' → logprob: -10.133700370788574
    5. '"",' → logprob: -14.008700370788574
    6. ' ' → logprob: -15.633700370788574
    7. ' ''.' → logprob: -16.25870132446289
    8. '   ' → logprob: -17.00870132446289
    9. '"os' → logprob: -17.13370132446289
    10. '"s' → logprob: -17.25870132446289

Token 884: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0004702338483184576
    2. '"' → logprob: -8.000470161437988
    3. '".' → logprob: -9.000470161437988
    4. 'oin' → logprob: -12.000470161437988
    5. ' "".' → logprob: -13.625470161437988
    6. '..' → logprob: -14.250470161437988
    7. '''.' → logprob: -14.250470161437988
    8. '.' → logprob: -14.625470161437988
    9. '.join' → logprob: -14.875470161437988
    10. '""' → logprob: -15.125470161437988

Token 885: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0002943479048553854
    2. '(d' → logprob: -8.25029468536377
    3. '[d' → logprob: -10.50029468536377
    4. '(' → logprob: -12.12529468536377
    5. '(
' → logprob: -16.750293731689453
    6. '([
' → logprob: -17.250293731689453
    7. '([(' → logprob: -18.000293731689453
    8. '[' → logprob: -18.375293731689453
    9. '((' → logprob: -19.000293731689453
    10. '([...' → logprob: -19.250293731689453

Token 886: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.696889623621246e-06
    2. ' d' → logprob: -13.25000286102295
    3. 'c' → logprob: -14.62500286102295
    4. '[d' → logprob: -14.87500286102295
    5. '	d' → logprob: -16.875001907348633
    6. 'e' → logprob: -17.000001907348633
    7. '(d' → logprob: -17.875001907348633
    8. 's' → logprob: -18.250001907348633
    9. ' ' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.500001907348633

Token 887: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03806237503886223
    2. 'for' → logprob: -3.288062334060669
    3. ',' → logprob: -10.78806209564209
    4. ' ' → logprob: -15.28806209564209
    5. '	for' → logprob: -17.288063049316406
    6. ' ,' → logprob: -17.413063049316406
    7. 'd' → logprob: -17.413063049316406
    8. ' fo' → logprob: -17.913063049316406
    9. ' f' → logprob: -18.538063049316406
    10. ' ' → logprob: -18.663063049316406

Token 888: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10021582990884781
    2. ' d' → logprob: -2.3502159118652344
    3. ',' → logprob: -11.850215911865234
    4. ',d' → logprob: -14.100215911865234
    5. ' ' → logprob: -14.350215911865234
    6. '	d' → logprob: -14.475215911865234
    7. '(d' → logprob: -15.850215911865234
    8. ' ,' → logprob: -16.725215911865234
    9. '  ' → logprob: -16.975215911865234
    10. ' ' → logprob: -17.100215911865234

Token 889: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20349298417568207
    2. 'd' → logprob: -1.7034929990768433
    3. ',d' → logprob: -6.203493118286133
    4. ' d' → logprob: -10.328493118286133
    5. 's' → logprob: -11.203493118286133
    6. ' ,' → logprob: -11.828493118286133
    7. '_,' → logprob: -14.328493118286133
    8. 'S' → logprob: -15.328493118286133
    9. ',s' → logprob: -15.578493118286133
    10. '(d' → logprob: -15.703493118286133

Token 890: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12693357467651367
    2. ' s' → logprob: -2.1269335746765137
    3. '(s' → logprob: -12.751934051513672
    4. ' ' → logprob: -13.501934051513672
    5. ' ' → logprob: -14.876934051513672
    6. '	s' → logprob: -15.251934051513672
    7. ',' → logprob: -15.876934051513672
    8. '  ' → logprob: -15.876934051513672
    9. 'd' → logprob: -16.126934051513672
    10. ' (' → logprob: -16.501934051513672

Token 891: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11822616308927536
    2. ',' → logprob: -2.2432260513305664
    3. 'in' → logprob: -5.243226051330566
    4. ' ,' → logprob: -9.243226051330566
    5. ' zip' → logprob: -12.868226051330566
    6. ' ' → logprob: -13.618226051330566
    7. 'd' → logprob: -14.243226051330566
    8. 'zip' → logprob: -14.493226051330566
    9. ' в' → logprob: -14.743226051330566
    10. 'import' → logprob: -14.743226051330566

Token 892: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.3132631182670593
    2. ' zip' → logprob: -1.313263177871704
    3. '(zip' → logprob: -13.688262939453125
    4. ' ' → logprob: -16.563262939453125
    5. 'z' → logprob: -16.938262939453125
    6. '.zip' → logprob: -16.938262939453125
    7. ' ' → logprob: -18.188262939453125
    8. 'ip' → logprob: -18.938262939453125
    9. '
' → logprob: -19.063262939453125
    10. 'zi' → logprob: -19.063262939453125

Token 893: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0001443035143893212
    2. 'S' → logprob: -8.875144004821777
    3. ' (' → logprob: -12.375144004821777
    4. '(' → logprob: -16.125144958496094
    5. ' S' → logprob: -16.250144958496094
    6. 's' → logprob: -18.375144958496094
    7. ',' → logprob: -18.500144958496094
    8. '[S' → logprob: -18.875144958496094
    9. '((' → logprob: -19.250144958496094
    10. '(
' → logprob: -19.750144958496094

Token 894: '2' (ID: 17)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.25216591358184814
    2. '(S' → logprob: -1.5021659135818481
    3. '2' → logprob: -8.377165794372559
    4. ' S' → logprob: -12.377165794372559
    5. ',S' → logprob: -14.002165794372559
    6. 's' → logprob: -15.127165794372559
    7. '[S' → logprob: -15.252165794372559
    8. ' (' → logprob: -15.502165794372559
    9. '.S' → logprob: -15.502165794372559
    10. '=S' → logprob: -15.502165794372559

Token 895: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038038729690015316
    2. ' ,' → logprob: -7.875380516052246
    3. ' ' → logprob: -16.12537956237793
    4. '(bit' → logprob: -16.25037956237793
    5. 's' → logprob: -17.12537956237793
    6. ',
' → logprob: -17.37537956237793
    7. 'bit' → logprob: -18.25037956237793
    8. '(),' → logprob: -18.50037956237793
    9. 'S' → logprob: -18.75037956237793
    10. ' bit' → logprob: -18.75037956237793

Token 896: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.20141372084617615
    2. ' bit' → logprob: -1.7014137506484985
    3. '(bit' → logprob: -15.451414108276367
    4. ' ' → logprob: -15.576414108276367
    5. 'b' → logprob: -18.576414108276367
    6. '.bit' → logprob: -18.826414108276367
    7. '-bit' → logprob: -18.951414108276367
    8. '   ' → logprob: -19.201414108276367
    9. '    ' → logprob: -19.326414108276367
    10. 'bitr' → logprob: -19.326414108276367

Token 897: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1926964819431305
    2. 'if' → logprob: -2.3176965713500977
    3. ' if' → logprob: -2.5676965713500977
    4. ' )' → logprob: -10.317696571350098
    5. '   ' → logprob: -11.442696571350098
    6. ']' → logprob: -12.817696571350098
    7. ' ' → logprob: -13.067696571350098
    8. '    ' → logprob: -13.692696571350098
    9. ',' → logprob: -13.817696571350098
    10. '()' → logprob: -14.567696571350098

Token 898: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014163628220558167
    2. 'if' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.514163970947266
    4. '	if' → logprob: -17.139163970947266
    5. '        ' → logprob: -18.264163970947266
    6. 'If' → logprob: -18.389163970947266
    7. '    ' → logprob: -19.389163970947266
    8. ' ' → logprob: -19.889163970947266
    9. 'f' → logprob: -20.014163970947266
    10. '       ' → logprob: -20.264163970947266

Token 899: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5231242179870605
    2. 's' → logprob: -0.8981242179870605
    3. ' ' → logprob: -14.898124694824219
    4. '(s' → logprob: -15.148124694824219
    5. ' ' → logprob: -16.02312469482422
    6. '	s' → logprob: -16.64812469482422
    7. '{s' → logprob: -18.02312469482422
    8. '#' → logprob: -18.08562469482422
    9. ''s' → logprob: -18.14812469482422
    10. 'd' → logprob: -18.21062469482422

Token 900: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3871050179004669
    2. '==' → logprob: -1.1371049880981445
    3. '=' → logprob: -8.512104988098145
    4. ' ' → logprob: -11.887104988098145
    5. '==
' → logprob: -11.887104988098145
    6. ' =' → logprob: -12.137104988098145
    7. '=='' → logprob: -12.262104988098145
    8. '=="' → logprob: -12.512104988098145
    9. ']==' → logprob: -13.262104988098145
    10. ' ==
' → logprob: -14.137104988098145

Token 901: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0036604066845029593
    2. ''' → logprob: -6.253660202026367
    3. ' "' → logprob: -6.378660202026367
    4. ' '' → logprob: -10.628660202026367
    5. '1' → logprob: -11.878660202026367
    6. ''"' → logprob: -14.128660202026367
    7. ' ' → logprob: -14.253660202026367
    8. ' ' → logprob: -15.753660202026367
    9. '("' → logprob: -16.753660202026367
    10. '="' → logprob: -17.003660202026367

Token 902: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015860318671911955
    2. '"' → logprob: -6.876585960388184
    3. ''' → logprob: -7.501585960388184
    4. ' ' → logprob: -14.376585960388184
    5. ''"' → logprob: -16.2515869140625
    6. '0' → logprob: -16.8765869140625
    7. '```' → logprob: -16.8765869140625
    8. '")' → logprob: -17.0015869140625
    9. '">' → logprob: -18.1265869140625
    10. '"""' → logprob: -18.1265869140625

Token 903: '"])
' (ID: 30883)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00033320096554234624
    2. '])
' → logprob: -8.750332832336426
    3. '"])' → logprob: -8.750332832336426
    4. ' ])' → logprob: -11.625332832336426
    5. ')])' → logprob: -13.125332832336426
    6. ')' → logprob: -13.250332832336426
    7. ''])' → logprob: -13.500332832336426
    8. '   ' → logprob: -14.500332832336426
    9. ')]' → logprob: -14.625332832336426
    10. '])
' → logprob: -14.625332832336426

Token 904: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2653108537197113
    2. 'blue' → logprob: -2.265310764312744
    3. ' blue' → logprob: -2.640310764312744
    4. 'red' → logprob: -3.015310764312744
    5. ' red' → logprob: -5.140310764312744
    6. '[' → logprob: -7.015310764312744
    7. '```' → logprob: -7.015310764312744
    8. ' bleu' → logprob: -8.515311241149902
    9. ' ' → logprob: -8.640311241149902
    10. '<|end|>' → logprob: -9.015311241149902

Token 905: ' #' (ID: 1069)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.005334674380719662
    2. ' blue' → logprob: -5.380334854125977
    3. '   ' → logprob: -7.255334854125977
    4. ' ' → logprob: -13.005334854125977
    5. '```' → logprob: -13.505334854125977
    6. '
' → logprob: -14.130334854125977
    7. '.blue' → logprob: -14.255334854125977
    8. '    
' → logprob: -14.380334854125977
    9. 'red' → logprob: -14.755334854125977
    10. '  ' → logprob: -15.005334854125977

Token 906: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.00026288547087460756
    2. ' blue' → logprob: -8.250263214111328
    3. '   ' → logprob: -14.375263214111328
    4. ' ' → logprob: -14.625263214111328
    5. 'ble' → logprob: -15.875263214111328
    6. ' bleu' → logprob: -16.000263214111328
    7. '
' → logprob: -16.750263214111328
    8. 'blu' → logprob: -16.750263214111328
    9. '```' → logprob: -16.750263214111328
    10. '.blue' → logprob: -17.375263214111328

Token 907: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4021237802808173e-05
    2. '1' → logprob: -11.625014305114746
    3. ' =' → logprob: -13.500014305114746
    4. '=' → logprob: -13.625014305114746
    5. '```' → logprob: -13.875014305114746
    6. '_' → logprob: -14.250014305114746
    7. 'blue' → logprob: -14.500014305114746
    8. '0' → logprob: -16.00001335144043
    9. ' ' → logprob: -16.00001335144043
    10. '[' → logprob: -16.37501335144043

Token 908: ' prend' (ID: 37463)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. ' ' → logprob: -16.693147659301758
    4. ')' → logprob: -19.568147659301758
    5. 's' → logprob: -20.068147659301758
    6. '＝' → logprob: -20.068147659301758
    7. '.=' → logprob: -20.693147659301758
    8. ',' → logprob: -20.943147659301758
    9. ' ="' → logprob: -20.943147659301758
    10. ' ' → logprob: -21.068147659301758

Token 909: ' les' (ID: 1341)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.04072099179029465
    2. '"' → logprob: -3.5407209396362305
    3. '"d' → logprob: -4.6657209396362305
    4. ' "".' → logprob: -7.7907209396362305
    5. 'd' → logprob: -7.9157209396362305
    6. '[' → logprob: -8.16572093963623
    7. '(d' → logprob: -8.41572093963623
    8. '([' → logprob: -9.91572093963623
    9. '[c' → logprob: -9.91572093963623
    10. '''.' → logprob: -10.29072093963623

Token 910: ' caractères' (ID: 183106)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3498448431491852
    2. '[d' → logprob: -1.2248448133468628
    3. '"d' → logprob: -7.474844932556152
    4. '[' → logprob: -7.974844932556152
    5. ' d' → logprob: -8.849844932556152
    6. ' [' → logprob: -9.099844932556152
    7. '"' → logprob: -9.349844932556152
    8. '[
' → logprob: -10.849844932556152
    9. '".' → logprob: -11.099844932556152
    10. 'car' → logprob: -11.099844932556152

Token 911: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44640594720840454
    2. ' for' → logprob: -1.0714058876037598
    3. '=' → logprob: -4.57140588760376
    4. ' =' → logprob: -5.94640588760376
    5. '[d' → logprob: -5.94640588760376
    6. '=[' → logprob: -7.19640588760376
    7. '[' → logprob: -7.82140588760376
    8. 'pour' → logprob: -8.071406364440918
    9. ' ' → logprob: -9.071406364440918
    10. '```' → logprob: -9.321406364440918

Token 912: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.003770151175558567
    2. ' S' → logprob: -6.253770351409912
    3. '[d' → logprob: -6.628770351409912
    4. '[S' → logprob: -8.128769874572754
    5. 'd' → logprob: -9.003769874572754
    6. 's' → logprob: -9.878769874572754
    7. '[s' → logprob: -10.503769874572754
    8. '[' → logprob: -11.253769874572754
    9. ' [' → logprob: -12.253769874572754
    10. ' d' → logprob: -13.753769874572754

Token 913: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011534435179783031
    2. 'for' → logprob: -9.375115394592285
    3. '"' → logprob: -11.875115394592285
    4. '1' → logprob: -12.250115394592285
    5. ',' → logprob: -12.375115394592285
    6. ' for' → logprob: -12.750115394592285
    7. '```' → logprob: -12.875115394592285
    8. 'blue' → logprob: -13.125115394592285
    9. 'S' → logprob: -13.250115394592285
    10. '[' → logprob: -14.000115394592285

Token 914: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5709459781646729
    2. 'for' → logprob: -1.0709459781646729
    3. ' =' → logprob: -2.820945978164673
    4. '=' → logprob: -3.445945978164673
    5. ' ' → logprob: -8.695945739746094
    6. '	for' → logprob: -8.820945739746094
    7. ' pour' → logprob: -9.070945739746094
    8. ' in' → logprob: -9.320945739746094
    9. '[' → logprob: -9.570945739746094
    10. '=[' → logprob: -9.695945739746094

Token 915: ' lesquels' (ID: 106476)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10443264991044998
    2. ' d' → logprob: -2.4794325828552246
    3. '[d' → logprob: -4.729432582855225
    4. 's' → logprob: -6.104432582855225
    5. 'zip' → logprob: -6.229432582855225
    6. ' zip' → logprob: -6.729432582855225
    7. '```' → logprob: -8.229433059692383
    8. ' ' → logprob: -8.479433059692383
    9. ',' → logprob: -9.104433059692383
    10. '(d' → logprob: -9.354433059692383

Token 916: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28128090500831604
    2. ' s' → logprob: -1.4062808752059937
    3. 'd' → logprob: -9.156280517578125
    4. ' ' → logprob: -11.531280517578125
    5. ' d' → logprob: -11.656280517578125
    6. '(s' → logprob: -13.156280517578125
    7. '  ' → logprob: -14.156280517578125
    8. '<s' → logprob: -14.281280517578125
    9. '	s' → logprob: -14.406280517578125
    10. '_s' → logprob: -14.656280517578125

Token 917: ' bit' (ID: 3546)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14399603009223938
    2. ' s' → logprob: -2.018996000289917
    3. ' bit' → logprob: -7.018996238708496
    4. 'bit' → logprob: -8.768996238708496
    5. 'd' → logprob: -9.143996238708496
    6. '```' → logprob: -10.143996238708496
    7. ' ' → logprob: -10.768996238708496
    8. '=' → logprob: -10.893996238708496
    9. '>' → logprob: -11.393996238708496
    10. '(s' → logprob: -12.018996238708496

Token 918: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12875624001026154
    2. '==' → logprob: -2.128756284713745
    3. '=' → logprob: -7.128756046295166
    4. ' ' → logprob: -7.628756046295166
    5. ' =' → logprob: -8.378756523132324
    6. ' s' → logprob: -9.503756523132324
    7. 's' → logprob: -9.628756523132324
    8. '```' → logprob: -10.878756523132324
    9. '[' → logprob: -11.003756523132324
    10. ')' → logprob: -11.253756523132324

Token 919: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22772334516048431
    2. '"' → logprob: -1.6027233600616455
    3. ' '' → logprob: -6.852723121643066
    4. '0' → logprob: -7.852723121643066
    5. ' "' → logprob: -8.477723121643066
    6. '==' → logprob: -8.977723121643066
    7. ' ' → logprob: -9.102723121643066
    8. '=' → logprob: -9.227723121643066
    9. '=='' → logprob: -9.352723121643066
    10. ' ==' → logprob: -9.477723121643066

Token 920: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001643165247514844
    2. ''' → logprob: -6.501643180847168
    3. '"' → logprob: -8.876643180847168
    4. ' ' → logprob: -13.751643180847168
    5. '`' → logprob: -16.62664222717285
    6. '```' → logprob: -17.00164222717285
    7. '[' → logprob: -18.12664222717285
    8. '')' → logprob: -18.62664222717285
    9. '=' → logprob: -19.25164222717285
    10. ' '' → logprob: -19.75164222717285

Token 921: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5340628027915955
    2. ']' → logprob: -1.9090628623962402
    3. ' =' → logprob: -2.2840628623962402
    4. ')' → logprob: -2.2840628623962402
    5. '=' → logprob: -3.6590628623962402
    6. 'blue' → logprob: -4.15906286239624
    7. '])' → logprob: -5.03406286239624
    8. '")' → logprob: -5.53406286239624
    9. '])
' → logprob: -6.40906286239624
    10. '"]' → logprob: -6.65906286239624

Token 922: '   ' (ID: 271)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.009946736507117748
    2. ' blue' → logprob: -4.634946823120117
    3. '   ' → logprob: -8.759946823120117
    4. ' bleu' → logprob: -11.384946823120117
    5. '.blue' → logprob: -11.884946823120117
    6. '_blue' → logprob: -12.134946823120117
    7. ' ' → logprob: -12.384946823120117
    8. 'ble' → logprob: -13.759946823120117
    9. '=' → logprob: -14.009946823120117
    10. ' =' → logprob: -14.009946823120117

Token 923: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -2.451116051815916e-05
    2. ' blue' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.000024795532227
    4. '```' → logprob: -16.625024795532227
    5. ' ' → logprob: -17.500024795532227
    6. '.blue' → logprob: -18.500024795532227
    7. 'blu' → logprob: -18.500024795532227
    8. '    
' → logprob: -18.625024795532227
    9. '
' → logprob: -18.750024795532227
    10. '  
' → logprob: -19.875024795532227

Token 924: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.62500286102295
    3. ' ' → logprob: -14.62500286102295
    4. '₂' → logprob: -14.87500286102295
    5. '```' → logprob: -15.62500286102295
    6. '۲' → logprob: -16.375001907348633
    7. '২' → logprob: -17.250001907348633
    8. ' =' → logprob: -17.375001907348633
    9. '=' → logprob: -17.500001907348633
    10. '٢' → logprob: -17.750001907348633

Token 925: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868711292743683
    2. ' =' → logprob: -1.136871099472046
    3. ' ' → logprob: -16.011871337890625
    4. '＝' → logprob: -18.761871337890625
    5. '	' → logprob: -18.886871337890625
    6. '="' → logprob: -19.011871337890625
    7. ' ' → logprob: -19.261871337890625
    8. '="""' → logprob: -19.261871337890625
    9. '=
' → logprob: -19.636871337890625
    10. ' ="' → logprob: -19.636871337890625

Token 926: ' "".' (ID: 94734)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004320929758250713
    2. ' "".' → logprob: -5.504321098327637
    3. '''.' → logprob: -8.379321098327637
    4. '""' → logprob: -12.129321098327637
    5. '"d' → logprob: -12.629321098327637
    6. '"os' → logprob: -13.254321098327637
    7. '"",' → logprob: -14.379321098327637
    8. '".' → logprob: -15.129321098327637
    9. '",".' → logprob: -15.504321098327637
    10. '"user' → logprob: -16.25432014465332

Token 927: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.747814349073451e-05
    2. '"' → logprob: -11.375017166137695
    3. '".' → logprob: -12.250017166137695
    4. '""' → logprob: -14.000017166137695
    5. '.join' → logprob: -15.875017166137695
    6. ' join' → logprob: -17.250017166137695
    7. 'jo' → logprob: -17.375017166137695
    8. '''.' → logprob: -17.375017166137695
    9. '(join' → logprob: -17.625017166137695
    10. '```' → logprob: -17.875017166137695

Token 928: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -9.088346359931165e-07
    2. '[d' → logprob: -14.500000953674316
    3. '(d' → logprob: -15.625000953674316
    4. '(' → logprob: -15.875000953674316
    5. '([(' → logprob: -16.5
    6. '[' → logprob: -18.375
    7. ' ([' → logprob: -19.75
    8. '=[' → logprob: -20.125
    9. '((' → logprob: -20.375
    10. '```' → logprob: -20.5

Token 929: 'd' (ID: 67)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.04859623312950134
    2. 'd' → logprob: -3.048596143722534
    3. '[' → logprob: -12.173596382141113
    4. ' d' → logprob: -13.548596382141113
    5. ' [' → logprob: -13.548596382141113
    6. '(d' → logprob: -14.423596382141113
    7. '	d' → logprob: -15.673596382141113
    8. '[
' → logprob: -16.298595428466797
    9. '{' → logprob: -16.673595428466797
    10. ''d' → logprob: -16.798595428466797

Token 930: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023291829973459244
    2. ' for' → logprob: -3.773291826248169
    3. '[d' → logprob: -10.27329158782959
    4. 'd' → logprob: -12.14829158782959
    5. '(d' → logprob: -12.64829158782959
    6. 's' → logprob: -14.02329158782959
    7. '	for' → logprob: -14.27329158782959
    8. '
' → logprob: -14.64829158782959
    9. '[' → logprob: -14.77329158782959
    10. '```' → logprob: -15.14829158782959

Token 931: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007269152440130711
    2. ' d' → logprob: -5.007269382476807
    3. '[d' → logprob: -7.507269382476807
    4. '(d' → logprob: -13.382268905639648
    5. '	d' → logprob: -13.882268905639648
    6. ' [' → logprob: -13.882268905639648
    7. '
' → logprob: -14.757268905639648
    8. ' ' → logprob: -15.257268905639648
    9. 's' → logprob: -15.632268905639648
    10. '[' → logprob: -15.882268905639648

Token 932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045438710367307067
    2. 's' → logprob: -8.00045394897461
    3. ' ,' → logprob: -9.87545394897461
    4. 'd' → logprob: -10.87545394897461
    5. '_,' → logprob: -10.87545394897461
    6. ',d' → logprob: -11.50045394897461
    7. ' s' → logprob: -11.62545394897461
    8. '0' → logprob: -12.25045394897461
    9. ',s' → logprob: -12.37545394897461
    10. ' ' → logprob: -14.62545394897461

Token 933: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3717641234397888
    2. ' s' → logprob: -1.2467641830444336
    3. ' zip' → logprob: -4.246764183044434
    4. 'zip' → logprob: -4.746764183044434
    5. ',' → logprob: -10.121764183044434
    6. ' ' → logprob: -11.996764183044434
    7. ',s' → logprob: -12.996764183044434
    8. '_s' → logprob: -13.121764183044434
    9. '	s' → logprob: -13.496764183044434
    10. ' in' → logprob: -13.621764183044434

Token 934: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008651299867779016
    2. ' in' → logprob: -7.1258649826049805
    3. 'in' → logprob: -10.00086498260498
    4. ' ,' → logprob: -11.12586498260498
    5. ',in' → logprob: -15.75086498260498
    6. ',
' → logprob: -16.125865936279297
    7. 'import' → logprob: -17.375865936279297
    8. '<|end|>' → logprob: -17.625865936279297
    9. 'for' → logprob: -17.750865936279297
    10. ',s' → logprob: -17.750865936279297

Token 935: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.20141801238059998
    2. ' zip' → logprob: -1.7014180421829224
    3. '(zip' → logprob: -12.326417922973633
    4. '.zip' → logprob: -15.701417922973633
    5. '
' → logprob: -15.951417922973633
    6. ' ' → logprob: -17.826417922973633
    7. '
' → logprob: -18.826417922973633
    8. '```' → logprob: -19.201417922973633
    9. '...' → logprob: -19.576417922973633
    10. '[' → logprob: -19.701417922973633

Token 936: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.9361264946837764e-07
    2. 'S' → logprob: -16.125
    3. '(' → logprob: -17.625
    4. ' (' → logprob: -17.75
    5. '((' → logprob: -18.5
    6. 's' → logprob: -19.0
    7. '(s' → logprob: -19.25
    8. '   ' → logprob: -20.5
    9. '[S' → logprob: -20.625
    10. '([' → logprob: -21.25

Token 937: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016444525681436062
    2. '(S' → logprob: -8.750164031982422
    3. 'S' → logprob: -12.625164031982422
    4. '(' → logprob: -13.125164031982422
    5. '1' → logprob: -14.500164031982422
    6. '=' → logprob: -17.625164031982422
    7. '[' → logprob: -17.750164031982422
    8. '۲' → logprob: -17.750164031982422
    9. ',' → logprob: -18.000164031982422
    10. '```' → logprob: -18.125164031982422

Token 938: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ',S' → logprob: -13.250004768371582
    3. 'S' → logprob: -13.875004768371582
    4. '(S' → logprob: -14.125004768371582
    5. ' ,' → logprob: -14.750004768371582
    6. '(bit' → logprob: -15.125004768371582
    7. '(' → logprob: -15.750004768371582
    8. 's' → logprob: -16.500003814697266
    9. 'bit' → logprob: -17.000003814697266
    10. '[' → logprob: -17.750003814697266

Token 939: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.029753385111689568
    2. ' bit' → logprob: -3.5297534465789795
    3. 'blue' → logprob: -13.029753684997559
    4. ' ' → logprob: -15.404753684997559
    5. ' blue' → logprob: -15.404753684997559
    6. '(bit' → logprob: -15.779753684997559
    7. 'bitr' → logprob: -18.404752731323242
    8. '   ' → logprob: -18.654752731323242
    9. '-bit' → logprob: -18.654752731323242
    10. '  ' → logprob: -18.654752731323242

Token 940: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12325404584407806
    2. 'if' → logprob: -2.4982540607452393
    3. ' if' → logprob: -3.7482540607452393
    4. ',' → logprob: -4.62325382232666
    5. ' ,' → logprob: -8.87325382232666
    6. '   ' → logprob: -9.49825382232666
    7. ' )' → logprob: -9.74825382232666
    8. ' ' → logprob: -9.99825382232666
    9. 's' → logprob: -12.24825382232666
    10. '  ' → logprob: -12.24825382232666

Token 941: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12692810595035553
    2. 'if' → logprob: -2.1269280910491943
    3. '	if' → logprob: -19.001928329467773
    4. ' ' → logprob: -19.251928329467773
    5. ' for' → logprob: -20.001928329467773
    6. 'for' → logprob: -20.501928329467773
    7. 'ift' → logprob: -20.751928329467773
    8. 'f' → logprob: -21.126928329467773
    9. ',' → logprob: -21.251928329467773
    10. '[' → logprob: -21.501928329467773

Token 942: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07889264822006226
    2. 's' → logprob: -2.578892707824707
    3. ' ' → logprob: -13.578892707824707
    4. '"' → logprob: -14.578892707824707
    5. '"s' → logprob: -14.828892707824707
    6. ' ' → logprob: -15.328892707824707
    7. ''s' → logprob: -16.32889175415039
    8. '	s' → logprob: -16.57889175415039
    9. '0' → logprob: -16.70389175415039
    10. '(s' → logprob: -16.82889175415039

Token 943: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2520108222961426
    2. ' ==' → logprob: -1.5020108222961426
    3. '=' → logprob: -9.502010345458984
    4. ' ' → logprob: -12.627010345458984
    5. '==
' → logprob: -13.377010345458984
    6. '=='' → logprob: -14.377010345458984
    7. '=="' → logprob: -14.877010345458984
    8. '[' → logprob: -15.252010345458984
    9. ' =' → logprob: -15.252010345458984
    10. ']==' → logprob: -15.752010345458984

Token 944: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005801755469292402
    2. ''' → logprob: -5.505801677703857
    3. ' "' → logprob: -6.380801677703857
    4. ' '' → logprob: -11.130802154541016
    5. '0' → logprob: -12.005802154541016
    6. ' ' → logprob: -12.005802154541016
    7. '="' → logprob: -15.005802154541016
    8. ' ' → logprob: -15.255802154541016
    9. ''"' → logprob: -15.755802154541016
    10. '("' → logprob: -16.005802154541016

Token 945: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031840058509260416
    2. ''' → logprob: -5.878183841705322
    3. '"' → logprob: -7.878183841705322
    4. ' ' → logprob: -16.628183364868164
    5. '1' → logprob: -16.878183364868164
    6. ' '' → logprob: -18.628183364868164
    7. '`' → logprob: -19.003183364868164
    8. '[' → logprob: -19.503183364868164
    9. '00' → logprob: -19.503183364868164
    10. '```' → logprob: -19.628183364868164

Token 946: '"])
' (ID: 30883)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02091168612241745
    2. '])
' → logprob: -4.645911693572998
    3. '"])' → logprob: -4.645911693572998
    4. ')' → logprob: -7.270911693572998
    5. '   ' → logprob: -8.39591121673584
    6. '"])
' → logprob: -8.64591121673584
    7. '")' → logprob: -9.02091121673584
    8. ')]' → logprob: -9.52091121673584
    9. ')])' → logprob: -9.52091121673584
    10. ''])' → logprob: -9.64591121673584

Token 947: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07905116677284241
    2. ' if' → logprob: -2.9540512561798096
    3. 'if' → logprob: -3.8290512561798096
    4. 'ans' → logprob: -6.7040510177612305
    5. '
' → logprob: -8.32905101776123
    6. ' ans' → logprob: -8.70405101776123
    7. '<|end|>' → logprob: -8.82905101776123
    8. '    
' → logprob: -9.45405101776123
    9. '(ans' → logprob: -9.57905101776123
    10. ' for' → logprob: -9.57905101776123

Token 948: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14497098326683044
    2. '   ' → logprob: -2.6449708938598633
    3. ' if' → logprob: -2.7699708938598633
    4. 'ans' → logprob: -7.019970893859863
    5. '(ans' → logprob: -8.894970893859863
    6. 'for' → logprob: -9.769970893859863
    7. '(' → logprob: -10.269970893859863
    8. '```' → logprob: -10.644970893859863
    9. 'answer' → logprob: -10.894970893859863
    10. ')' → logprob: -11.144970893859863

Token 949: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10125488042831421
    2. 'if' → logprob: -2.351254940032959
    3. 'key' → logprob: -6.976254940032959
    4. 't' → logprob: -10.8512544631958
    5. 'rev' → logprob: -10.8512544631958
    6. 'red' → logprob: -11.6012544631958
    7. 'answer' → logprob: -11.7262544631958
    8. ' ans' → logprob: -11.9762544631958
    9. '   ' → logprob: -12.3512544631958
    10. 'try' → logprob: -12.6012544631958

Token 950: ' chaque' (ID: 21194)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.3498636484146118
    2. '(' → logprob: -1.7248636484146118
    3. '(red' → logprob: -2.4748635292053223
    4. 'key' → logprob: -3.7248635292053223
    5. 'blue' → logprob: -5.724863529205322
    6. '(key' → logprob: -6.474863529205322
    7. '(r' → logprob: -6.849863529205322
    8. ' red' → logprob: -7.349863529205322
    9. ' (' → logprob: -7.599863529205322
    10. 'r' → logprob: -8.59986400604248

Token 951: ' combinaison' (ID: 165933)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.38766127824783325
    2. 'red' → logprob: -1.2626612186431885
    3. '(' → logprob: -4.262661457061768
    4. 'key' → logprob: -4.512661457061768
    5. '(key' → logprob: -5.512661457061768
    6. ' red' → logprob: -5.637661457061768
    7. ' (' → logprob: -5.762661457061768
    8. '(r' → logprob: -7.137661457061768
    9. '(re' → logprob: -7.387661457061768
    10. ' key' → logprob: -7.762661457061768

Token 952: ' dans' (ID: 2671)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8776687383651733
    2. ' if' → logprob: -1.5026687383651733
    3. ':' → logprob: -1.7526687383651733
    4. ' in' → logprob: -2.252668857574463
    5. 'in' → logprob: -3.877668857574463
    6. ':
' → logprob: -4.127668857574463
    7. ',' → logprob: -4.252668857574463
    8. '   ' → logprob: -4.627668857574463
    9. '_key' → logprob: -5.377668857574463
    10. ' =' → logprob: -6.377668857574463

Token 953: ' S' (ID: 336)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.004707207437604666
    2. 'red' → logprob: -5.629707336425781
    3. '[(' → logprob: -7.629707336425781
    4. '(D' → logprob: -9.004707336425781
    5. ' D' → logprob: -9.129707336425781
    6. 'S' → logprob: -9.254707336425781
    7. '(' → logprob: -9.504707336425781
    8. '(red' → logprob: -9.754707336425781
    9. '((' → logprob: -10.004707336425781
    10. 'd' → logprob: -10.254707336425781

Token 954: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1800886392593384
    2. '2' → logprob: -1.1800886392593384
    3. '   ' → logprob: -2.805088520050049
    4. '(' → logprob: -2.930088520050049
    5. 'key' → logprob: -2.930088520050049
    6. '(red' → logprob: -3.055088520050049
    7. '(key' → logprob: -3.430088520050049
    8. ' (' → logprob: -3.555088520050049
    9. 'red' → logprob: -3.555088520050049
    10. '_key' → logprob: -4.305088520050049

Token 955: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029422501102089882
    2. ',' → logprob: -3.6544225215911865
    3. ':
' → logprob: -6.154422283172607
    4. '):' → logprob: -7.779422283172607
    5. '   ' → logprob: -8.529422760009766
    6. ' if' → logprob: -8.654422760009766
    7. ' :' → logprob: -9.904422760009766
    8. 'if' → logprob: -10.154422760009766
    9. '):
' → logprob: -10.529422760009766
    10. '():' → logprob: -11.154422760009766

Token 956: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20938755571842194
    2. 'if' → logprob: -1.8343875408172607
    3. '   ' → logprob: -4.20938777923584
    4. 'key' → logprob: -5.08438777923584
    5. ' ans' → logprob: -5.70938777923584
    6. 'rev' → logprob: -6.08438777923584
    7. ' if' → logprob: -7.33438777923584
    8. 'inv' → logprob: -7.45938777923584
    9. '
' → logprob: -8.45938777923584
    10. '    
' → logprob: -8.58438777923584

Token 957: ' regarde' (ID: 115760)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20644642412662506
    2. '+=' → logprob: -2.456446409225464
    3. 'ans' → logprob: -2.706446409225464
    4. '[' → logprob: -3.706446409225464
    5. ' if' → logprob: -5.831446647644043
    6. ':' → logprob: -5.956446647644043
    7. ' +=' → logprob: -6.831446647644043
    8. 'for' → logprob: -7.206446647644043
    9. ']+=' → logprob: -7.456446647644043
    10. '[
' → logprob: -8.706446647644043

Token 958: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9250428080558777
    2. 'if' → logprob: -1.3000428676605225
    3. '(ans' → logprob: -2.1750428676605225
    4. '(' → logprob: -2.6750428676605225
    5. ' (' → logprob: -3.3000428676605225
    6. 'ans' → logprob: -3.6750428676605225
    7. 'for' → logprob: -3.9250428676605225
    8. ' for' → logprob: -4.050042629241943
    9. '   ' → logprob: -4.175042629241943
    10. '
' → logprob: -5.175042629241943

Token 959: ' la' (ID: 557)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.3314824402332306
    2. '(' → logprob: -1.3314824104309082
    3. 'D' → logprob: -4.581482410430908
    4. ' (' → logprob: -5.081482410430908
    5. '(D' → logprob: -6.706482410430908
    6. '(ans' → logprob: -8.706482887268066
    7. ' D' → logprob: -9.706482887268066
    8. '(reverse' → logprob: -10.706482887268066
    9. '   ' → logprob: -11.081482887268066
    10. ' ' → logprob: -11.331482887268066

Token 960: ' paire' (ID: 148856)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.20867452025413513
    2. '(' → logprob: -1.7086745500564575
    3. ' (' → logprob: -5.333674430847168
    4. '(reverse' → logprob: -6.708674430847168
    5. '(ans' → logprob: -7.083674430847168
    6. 'red' → logprob: -9.583674430847168
    7. '(re' → logprob: -10.333674430847168
    8. '(r' → logprob: -10.458674430847168
    9. ' red' → logprob: -10.583674430847168
    10. '(R' → logprob: -10.833674430847168

Token 961: ' (' (ID: 350)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.47650080919265747
    2. '(' → logprob: -0.9765008091926575
    3. ' (' → logprob: -6.851500988006592
    4. 'red' → logprob: -7.726500988006592
    5. '(reverse' → logprob: -8.101500511169434
    6. '   ' → logprob: -8.726500511169434
    7. ' red' → logprob: -9.351500511169434
    8. '(re' → logprob: -9.851500511169434
    9. ',' → logprob: -10.101500511169434
    10. ' =' → logprob: -10.226500511169434

Token 962: 'blue' (ID: 18789)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25470876693725586
    2. 'blue' → logprob: -1.5047087669372559
    3. ' blue' → logprob: -6.379708766937256
    4. ' (' → logprob: -7.879708766937256
    5. 'red' → logprob: -8.004709243774414
    6. '(red' → logprob: -8.629709243774414
    7. ')' → logprob: -9.629709243774414
    8. 'ble' → logprob: -10.504709243774414
    9. '   ' → logprob: -10.754709243774414
    10. '_blue' → logprob: -10.879709243774414

Token 963: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07003635168075562
    2. '1' → logprob: -2.6950364112854004
    3. ',' → logprob: -9.445035934448242
    4. 'red' → logprob: -11.570035934448242
    5. '(red' → logprob: -12.570035934448242
    6. '```' → logprob: -13.320035934448242
    7. ')' → logprob: -13.632535934448242
    8. ' red' → logprob: -13.945035934448242
    9. ' ,' → logprob: -14.195035934448242
    10. '_red' → logprob: -14.195035934448242

Token 964: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.704065213445574e-05
    2. ' ,' → logprob: -10.125046730041504
    3. ',
' → logprob: -12.500046730041504
    4. 'red' → logprob: -14.125046730041504
    5. ' ' → logprob: -14.250046730041504
    6. '[::-' → logprob: -14.500046730041504
    7. '   ' → logprob: -15.000046730041504
    8. '
' → logprob: -15.375046730041504
    9. '[' → logprob: -15.875046730041504
    10. '  ' → logprob: -16.12504768371582

Token 965: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.002211516024544835
    2. ' red' → logprob: -6.127211570739746
    3. '(red' → logprob: -10.877211570739746
    4. 'blue' → logprob: -11.877211570739746
    5. ',' → logprob: -15.627211570739746
    6. 'reds' → logprob: -15.877211570739746
    7. 'green' → logprob: -16.12721061706543
    8. ' blue' → logprob: -17.12721061706543
    9. '
' → logprob: -17.12721061706543
    10. 'redd' → logprob: -17.75221061706543

Token 966: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014193711802363396
    2. '2' → logprob: -4.264193534851074
    3. ')' → logprob: -10.639193534851074
    4. '(' → logprob: -12.514193534851074
    5. '
' → logprob: -14.264193534851074
    6. ',' → logprob: -14.764193534851074
    7. ')]' → logprob: -15.139193534851074
    8. '),' → logprob: -15.389193534851074
    9. '

' → logprob: -15.639193534851074
    10. '```' → logprob: -15.639193534851074

Token 967: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009805283043533564
    2. ' )' → logprob: -7.250980377197266
    3. '])' → logprob: -8.500980377197266
    4. ']' → logprob: -10.000980377197266
    5. ')]' → logprob: -12.000980377197266
    6. ' in' → logprob: -12.250980377197266
    7. ')
' → logprob: -12.500980377197266
    8. '）' → logprob: -13.250980377197266
    9. '   ' → logprob: -13.750980377197266
    10. '`)' → logprob: -14.250980377197266

Token 968: ' existe' (ID: 19498)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13384442031383514
    2. 'in' → logprob: -2.7588443756103516
    3. ']' → logprob: -3.0088443756103516
    4. ')' → logprob: -5.383844375610352
    5. ']+=' → logprob: -5.383844375610352
    6. '<|end|>' → logprob: -7.633844375610352
    7. ' ]' → logprob: -8.133844375610352
    8. ',' → logprob: -8.133844375610352
    9. ' is' → logprob: -8.383844375610352
    10. ' dans' → logprob: -8.508844375610352

Token 969: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14875678718090057
    2. 'in' → logprob: -2.023756742477417
    3. ']' → logprob: -6.148756980895996
    4. '   ' → logprob: -6.773756980895996
    5. ' dans' → logprob: -7.148756980895996
    6. '[' → logprob: -7.648756980895996
    7. ')' → logprob: -7.773756980895996
    8. 'dans' → logprob: -8.148756980895996
    9. ',' → logprob: -8.273756980895996
    10. ' ' → logprob: -9.398756980895996

Token 970: ' le' (ID: 505)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0002613358374219388
    2. ' D' → logprob: -8.250261306762695
    3. '
' → logprob: -19.750261306762695
    4. '[D' → logprob: -20.125261306762695
    5. ' ' → logprob: -20.375261306762695
    6. '`' → logprob: -21.000261306762695
    7. ')' → logprob: -21.125261306762695
    8. '(D' → logprob: -21.125261306762695
    9. '>D' → logprob: -21.125261306762695
    10. '```' → logprob: -21.125261306762695

Token 971: ' diction' (ID: 155259)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -4.0722858102526516e-05
    2. ' D' → logprob: -10.125041007995605
    3. ')' → logprob: -14.875041007995605
    4. 'd' → logprob: -15.875041007995605
    5. ']' → logprob: -17.12504005432129
    6. '[D' → logprob: -17.12504005432129
    7. 'for' → logprob: -17.62504005432129
    8. ' ' → logprob: -17.87504005432129
    9. '(D' → logprob: -18.50004005432129
    10. '`' → logprob: -18.75004005432129

Token 972: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.08324675261974335
    2. 'ary' → logprob: -2.5832467079162598
    3. 'aire' → logprob: -5.45824670791626
    4. 'n' → logprob: -9.958247184753418
    5. '```' → logprob: -11.333247184753418
    6. 'ar' → logprob: -12.083247184753418
    7. 'air' → logprob: -12.583247184753418
    8. 'na' → logprob: -12.833247184753418
    9. '   ' → logprob: -12.958247184753418
    10. 'a' → logprob: -12.958247184753418

Token 973: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.15897977352142334
    2. ' and' → logprob: -3.283979892730713
    3. ' D' → logprob: -3.533979892730713
    4. ')' → logprob: -4.158979892730713
    5. '   ' → logprob: -4.408979892730713
    6. ' in' → logprob: -4.533979892730713
    7. ':' → logprob: -4.533979892730713
    8. 'and' → logprob: -5.408979892730713
    9. '.keys' → logprob: -5.658979892730713
    10. ':
' → logprob: -5.783979892730713

Token 974: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5436080694198608
    2. ':' → logprob: -1.4186080694198608
    3. ':
' → logprob: -3.1686081886291504
    4. 'if' → logprob: -3.2936081886291504
    5. ' if' → logprob: -3.4186081886291504
    6. ' ans' → logprob: -4.54360818862915
    7. '
' → logprob: -4.66860818862915
    8. ' and' → logprob: -5.04360818862915
    9. ' for' → logprob: -5.16860818862915
    10. ']' → logprob: -5.16860818862915

Token 975: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04388399422168732
    2. ' ans' → logprob: -3.293884038925171
    3. '   ' → logprob: -5.543883800506592
    4. '
' → logprob: -7.293883800506592
    5. '	ans' → logprob: -7.418883800506592
    6. '(ans' → logprob: -8.29388427734375
    7. 'if' → logprob: -9.16888427734375
    8. ':' → logprob: -9.41888427734375
    9. '       ' → logprob: -10.04388427734375
    10. ':
' → logprob: -10.29388427734375

Token 976: ' addition' (ID: 5856)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.17721760272979736
    2. ' ans' → logprob: -2.802217483520508
    3. '+=' → logprob: -2.802217483520508
    4. ' +=' → logprob: -4.052217483520508
    5. 'if' → logprob: -4.427217483520508
    6. ']+=' → logprob: -5.177217483520508
    7. 'in' → logprob: -6.302217483520508
    8. '
' → logprob: -7.177217483520508
    9. '	ans' → logprob: -7.427217483520508
    10. ' in' → logprob: -7.927217483520508

Token 977: 'ne' (ID: 611)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16218027472496033
    2. ' +=' → logprob: -2.537180185317993
    3. 'e' → logprob: -3.162180185317993
    4. 'ne' → logprob: -4.787180423736572
    5. '   ' → logprob: -4.912180423736572
    6. '=' → logprob: -5.287180423736572
    7. 'ans' → logprob: -5.787180423736572
    8. 'D' → logprob: -6.662180423736572
    9. ' ans' → logprob: -6.787180423736572
    10. '+=(' → logprob: -6.912180423736572

Token 978: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.014871256425976753
    2. ' D' → logprob: -4.389871120452881
    3. 'ans' → logprob: -6.514871120452881
    4. '   ' → logprob: -7.764871120452881
    5. '[D' → logprob: -8.139871597290039
    6. ' ans' → logprob: -9.139871597290039
    7. '(D' → logprob: -10.389871597290039
    8. '=D' → logprob: -12.264871597290039
    9. '
' → logprob: -12.389871597290039
    10. '(ans' → logprob: -13.139871597290039

Token 979: ' valeur' (ID: 41664)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0042414008639752865
    2. 'ans' → logprob: -6.004241466522217
    3. ' D' → logprob: -6.379241466522217
    4. ' ans' → logprob: -9.629240989685059
    5. '
' → logprob: -14.754240989685059
    6. 'answer' → logprob: -14.754240989685059
    7. '   ' → logprob: -15.129240989685059
    8. '(ans' → logprob: -15.129240989685059
    9. 'd' → logprob: -15.879240989685059
    10. 'count' → logprob: -16.379241943359375

Token 980: ' associ' (ID: 5516)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6589614748954773
    2. 'ans' → logprob: -2.033961534500122
    3. ' +=' → logprob: -2.158961534500122
    4. '[D' → logprob: -2.908961534500122
    5. '[' → logprob: -3.033961534500122
    6. ' D' → logprob: -3.283961534500122
    7. '   ' → logprob: -3.533961534500122
    8. '+=' → logprob: -3.533961534500122
    9. ' ans' → logprob: -4.783961296081543
    10. ' à' → logprob: -5.158961296081543

Token 981: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -6.468279752880335e-05
    2. 'é' → logprob: -10.000064849853516
    3. '[' → logprob: -12.125064849853516
    4. '   ' → logprob: -12.500064849853516
    5. 'à' → logprob: -13.500064849853516
    6. 'D' → logprob: -13.750064849853516
    7. 'uée' → logprob: -13.750064849853516
    8. 'rée' → logprob: -14.000064849853516
    9. 'ées' → logprob: -14.250064849853516
    10. 'ee' → logprob: -14.375064849853516

Token 982: ' à' (ID: 1221)
  Prédit: '[D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.41486236453056335
    2. 'D' → logprob: -1.2898623943328857
    3. '   ' → logprob: -3.1648623943328857
    4. '(D' → logprob: -4.414862155914307
    5. ' D' → logprob: -5.289862155914307
    6. '[(' → logprob: -5.789862155914307
    7. '[' → logprob: -6.914862155914307
    8. '[
' → logprob: -8.164862632751465
    9. '       ' → logprob: -8.664862632751465
    10. '           ' → logprob: -9.164862632751465

Token 983: ' ans' (ID: 3345)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.14252784848213196
    2. ' D' → logprob: -2.2675278186798096
    3. '(' → logprob: -3.8925278186798096
    4. ' (' → logprob: -5.142528057098389
    5. '(D' → logprob: -6.642528057098389
    6. ')' → logprob: -7.267528057098389
    7. ' ' → logprob: -7.767528057098389
    8. '[' → logprob: -8.76752758026123
    9. 'blue' → logprob: -9.89252758026123
    10. '   ' → logprob: -10.01752758026123

Token 984: '.
' (ID: 558)
  Prédit: '[D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.03183476999402046
    2. '[' → logprob: -4.281834602355957
    3. 'D' → logprob: -4.531834602355957
    4. '[
' → logprob: -5.656834602355957
    5. '   ' → logprob: -6.031834602355957
    6. '(D' → logprob: -8.031834602355957
    7. '[(' → logprob: -8.531834602355957
    8. ' D' → logprob: -8.656834602355957
    9. ' +=' → logprob: -10.156834602355957
    10. '+D' → logprob: -10.531834602355957

Token 985: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1937386691570282
    2. '   ' → logprob: -2.0687386989593506
    3. 'D' → logprob: -3.9437386989593506
    4. '(ans' → logprob: -4.4437384605407715
    5. '```' → logprob: -5.0687384605407715
    6. ' ans' → logprob: -5.1937384605407715
    7. '
' → logprob: -6.5687384605407715
    8. '``' → logprob: -6.8187384605407715
    9. '`' → logprob: -7.1937384605407715
    10. '	ans' → logprob: -7.4437384605407715

Token 986: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007098094210959971
    2. '   ' → logprob: -8.000709533691406
    3. ' ans' → logprob: -8.250709533691406
    4. '
' → logprob: -10.000709533691406
    5. '(ans' → logprob: -10.000709533691406
    6. 'if' → logprob: -11.000709533691406
    7. '	ans' → logprob: -12.375709533691406
    8. '_ans' → logprob: -14.875709533691406
    9. 'for' → logprob: -15.250709533691406
    10. '    
' → logprob: -15.750709533691406

Token 987: ' Cela' (ID: 44403)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0004839385801460594
    2. '   ' → logprob: -8.125483512878418
    3. ' ans' → logprob: -8.750483512878418
    4. '
' → logprob: -11.250483512878418
    5. '(ans' → logprob: -12.125483512878418
    6. 'if' → logprob: -12.375483512878418
    7. 'for' → logprob: -13.250483512878418
    8. '	ans' → logprob: -13.375483512878418
    9. '```' → logprob: -13.375483512878418
    10. '_ans' → logprob: -15.000483512878418

Token 988: ' signifie' (ID: 81149)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7206103801727295
    2. '+=' → logprob: -0.8456103801727295
    3. ')' → logprob: -3.2206103801727295
    4. '=' → logprob: -3.9706103801727295
    5. '   ' → logprob: -4.720610618591309
    6. '.' → logprob: -5.470610618591309
    7. ']+=' → logprob: -5.970610618591309
    8. '[' → logprob: -6.220610618591309
    9. ' ' → logprob: -6.345610618591309
    10. '
' → logprob: -6.970610618591309

Token 989: ' qu' (ID: 474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009269355796277523
    2. 'ans' → logprob: -5.2592692375183105
    3. ' que' → logprob: -6.1342692375183105
    4. ' ans' → logprob: -7.1342692375183105
    5. '
' → logprob: -8.384269714355469
    6. '    
' → logprob: -8.759269714355469
    7. '       ' → logprob: -9.009269714355469
    8. '    ' → logprob: -9.009269714355469
    9. '(ans' → logprob: -9.259269714355469
    10. '  ' → logprob: -9.384269714355469

Token 990: ''on' (ID: 25812)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5846641063690186
    2. '   ' → logprob: -1.5846641063690186
    3. ' on' → logprob: -1.7096641063690186
    4. 'ans' → logprob: -3.0846641063690186
    5. 'on' → logprob: -5.959664344787598
    6. ' ' → logprob: -6.209664344787598
    7. '(ans' → logprob: -6.334664344787598
    8. ' if' → logprob: -6.834664344787598
    9. ' D' → logprob: -7.084664344787598
    10. '  ' → logprob: -7.709664344787598

Token 991: ' recherche' (ID: 24975)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8743526339530945
    2. '   ' → logprob: -1.1243526935577393
    3. ' ans' → logprob: -1.3743526935577393
    4. ')' → logprob: -6.62435245513916
    5. '	ans' → logprob: -6.99935245513916
    6. '(ans' → logprob: -7.87435245513916
    7. '
' → logprob: -8.12435245513916
    8. 'if' → logprob: -8.12435245513916
    9. '  ' → logprob: -8.24935245513916
    10. '[' → logprob: -8.24935245513916

Token 992: ' dans' (ID: 2671)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.29927703738212585
    2. '(' → logprob: -1.6742770671844482
    3. ' (' → logprob: -3.1742770671844482
    4. ' D' → logprob: -3.9242770671844482
    5. '(D' → logprob: -4.924276828765869
    6. '   ' → logprob: -6.549276828765869
    7. ' ' → logprob: -7.549276828765869
    8. '((' → logprob: -8.924277305603027
    9. '(
' → logprob: -9.674277305603027
    10. '  ' → logprob: -10.049277305603027

Token 993: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -6.2729995988775045e-06
    2. ' D' → logprob: -12.000006675720215
    3. ')' → logprob: -18.0000057220459
    4. '`' → logprob: -18.1250057220459
    5. '```' → logprob: -18.8750057220459
    6. ' ' → logprob: -19.1250057220459
    7. 'd' → logprob: -19.3750057220459
    8. '   ' → logprob: -19.8750057220459
    9. '(D' → logprob: -20.0000057220459
    10. 'the' → logprob: -20.1250057220459

Token 994: ' le' (ID: 505)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -8.602024900028482e-05
    2. '[' → logprob: -9.625085830688477
    3. '.get' → logprob: -11.750085830688477
    4. '[
' → logprob: -12.875085830688477
    5. ' [(' → logprob: -12.875085830688477
    6. '[((' → logprob: -12.875085830688477
    7. '   ' → logprob: -13.625085830688477
    8. ',' → logprob: -13.750085830688477
    9. '((' → logprob: -14.625085830688477
    10. ' ' → logprob: -14.750085830688477

Token 995: ' nombre' (ID: 9733)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009627926629036665
    2. ' (' → logprob: -7.125962734222412
    3. '(red' → logprob: -9.12596321105957
    4. '(B' → logprob: -10.75096321105957
    5. '(D' → logprob: -11.12596321105957
    6. '((' → logprob: -13.25096321105957
    7. ' ' → logprob: -13.50096321105957
    8. '(b' → logprob: -13.50096321105957
    9. '(S' → logprob: -13.62596321105957
    10. '[(' → logprob: -13.62596321105957

Token 996: ' d' (ID: 272)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3895655572414398
    2. 'D' → logprob: -1.3895655870437622
    3. ' de' → logprob: -4.139565467834473
    4. 'de' → logprob: -4.264565467834473
    5. '(D' → logprob: -4.389565467834473
    6. ' D' → logprob: -5.139565467834473
    7. '[' → logprob: -5.264565467834473
    8. '   ' → logprob: -5.389565467834473
    9. '[D' → logprob: -5.514565467834473
    10. '(' → logprob: -5.639565467834473

Token 997: ''occ' (ID: 158932)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.15659880638122559
    2. '(' → logprob: -2.1565988063812256
    3. '((' → logprob: -4.156599044799805
    4. '[' → logprob: -4.781599044799805
    5. ' (' → logprob: -6.406599044799805
    6. '[
' → logprob: -7.406599044799805
    7. ' [(' → logprob: -7.656599044799805
    8. 'D' → logprob: -7.781599044799805
    9. '(
' → logprob: -7.906599044799805
    10. ')' → logprob: -7.906599044799805

Token 998: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.0004979863297194242
    2. 'urr' → logprob: -8.125497817993164
    3. 'ur' → logprob: -9.750497817993164
    4. 'urrence' → logprob: -10.375497817993164
    5. 'curr' → logprob: -11.000497817993164
    6. 'u' → logprob: -11.250497817993164
    7. 'urrencies' → logprob: -11.250497817993164
    8. 'urrent' → logprob: -11.625497817993164
    9. 'orr' → logprob: -11.625497817993164
    10. 'URRENC' → logprob: -11.750497817993164

Token 999: ' où' (ID: 15113)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0014772482682019472
    2. '[' → logprob: -7.126477241516113
    3. '[
' → logprob: -7.376477241516113
    4. 'D' → logprob: -11.376477241516113
    5. '(' → logprob: -11.501477241516113
    6. ' [(' → logprob: -11.876477241516113
    7. ' de' → logprob: -12.001477241516113
    8. '((' → logprob: -12.876477241516113
    9. '[D' → logprob: -13.126477241516113
    10. '[((' → logprob: -13.501477241516113

Token 1000: ' le' (ID: 505)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.4355832636356354
    2. '(' → logprob: -1.060583233833313
    3. ' (' → logprob: -5.060583114624023
    4. 'red' → logprob: -8.560583114624023
    5. ' red' → logprob: -8.810583114624023
    6. 'blue' → logprob: -9.685583114624023
    7. ' blue' → logprob: -11.185583114624023
    8. ' ' → logprob: -11.310583114624023
    9. '   ' → logprob: -11.310583114624023
    10. '(S' → logprob: -11.310583114624023

Token 1001: ' red' (ID: 3592)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17091307044029236
    2. '(red' → logprob: -1.9209131002426147
    3. 'red' → logprob: -4.795913219451904
    4. 'blue' → logprob: -6.670913219451904
    5. ' (' → logprob: -7.170913219451904
    6. 'key' → logprob: -9.545912742614746
    7. ' red' → logprob: -9.670912742614746
    8. '(key' → logprob: -9.920912742614746
    9. ' blue' → logprob: -11.045912742614746
    10. 'ble' → logprob: -11.420912742614746

Token 1002: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.257267564535141
    2. '2' → logprob: -1.6322675943374634
    3. ',' → logprob: -4.632267475128174
    4. '[(' → logprob: -4.882267475128174
    5. '[' → logprob: -5.132267475128174
    6. ')' → logprob: -5.507267475128174
    7. ' ,' → logprob: -7.257267475128174
    8. ']' → logprob: -7.382267475128174
    9. '
' → logprob: -7.507267475128174
    10. ',(' → logprob: -7.882267475128174

Token 1003: ' la' (ID: 557)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.9271847605705261
    2. 'blue' → logprob: -1.052184820175171
    3. 'S' → logprob: -1.677184820175171
    4. '(red' → logprob: -3.802184820175171
    5. ' blue' → logprob: -3.927184820175171
    6. ' red' → logprob: -4.552184581756592
    7. '(S' → logprob: -4.677184581756592
    8. 'ble' → logprob: -6.052184581756592
    9. ' S' → logprob: -6.552184581756592
    10. ' bleu' → logprob: -7.177184581756592

Token 1004: ' deuxième' (ID: 51664)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3458733558654785
    2. '1' → logprob: -1.8458733558654785
    3. 'red' → logprob: -2.4708733558654785
    4. 'prem' → logprob: -4.4708733558654785
    5. 'blue' → logprob: -4.7208733558654785
    6. '(S' → logprob: -5.3458733558654785
    7. '2' → logprob: -5.4708733558654785
    8. 'first' → logprob: -5.4708733558654785
    9. 'de' → logprob: -5.8458733558654785
    10. ')' → logprob: -5.8458733558654785

Token 1005: ' moitié' (ID: 93216)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9421747922897339
    2. '1' → logprob: -0.9421747922897339
    3. '2' → logprob: -1.9421747922897339
    4. ')' → logprob: -3.6921749114990234
    5. ' ,' → logprob: -3.8171749114990234
    6. ',
' → logprob: -5.317174911499023
    7. '),' → logprob: -5.317174911499023
    8. ' ' → logprob: -5.942174911499023
    9. 'tuple' → logprob: -5.942174911499023
    10. ' (' → logprob: -6.067174911499023

Token 1006: ' correspond' (ID: 11095)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.1720083951950073
    2. ' correspond' → logprob: -2.172008514404297
    3. 'est' → logprob: -2.172008514404297
    4. 'et' → logprob: -2.422008514404297
    5. ' est' → logprob: -2.422008514404297
    6. ' de' → logprob: -2.547008514404297
    7. ',' → logprob: -2.797008514404297
    8. 'ex' → logprob: -3.422008514404297
    9. '```' → logprob: -4.172008514404297
    10. 'cor' → logprob: -4.422008514404297

Token 1007: ' exactement' (ID: 108701)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.9117626547813416
    2. ')' → logprob: -1.5367627143859863
    3. ' à' → logprob: -1.5367627143859863
    4. '(' → logprob: -2.0367627143859863
    5. '   ' → logprob: -4.036762714385986
    6. 'au' → logprob: -5.536762714385986
    7. ' aux' → logprob: -5.911762714385986
    8. ' au' → logprob: -6.036762714385986
    9. ''à' → logprob: -6.411762714385986
    10. ',' → logprob: -6.536762714385986

Token 1008: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2477497011423111
    2. 'à' → logprob: -1.74774968624115
    3. ' aux' → logprob: -3.8727498054504395
    4. ')' → logprob: -4.2477498054504395
    5. ' au' → logprob: -5.3727498054504395
    6. ',' → logprob: -5.9977498054504395
    7. 'au' → logprob: -6.7477498054504395
    8. '(' → logprob: -7.3727498054504395
    9. 'aux' → logprob: -8.497749328613281
    10. '   ' → logprob: -8.747749328613281

Token 1009: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.5126850605010986
    2. 'red' → logprob: -1.1376850605010986
    3. '(' → logprob: -3.0126850605010986
    4. '(red' → logprob: -4.1376848220825195
    5. ' red' → logprob: -5.1376848220825195
    6. ' blue' → logprob: -5.2626848220825195
    7. 'ble' → logprob: -5.8876848220825195
    8. ' bleu' → logprob: -7.2626848220825195
    9. ' (' → logprob: -7.3876848220825195
    10. 'green' → logprob: -9.51268482208252

Token 1010: ' de' (ID: 334)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026706745848059654
    2. '1' → logprob: -3.7767066955566406
    3. ',' → logprob: -6.276706695556641
    4. ')' → logprob: -7.651706695556641
    5. ' ,' → logprob: -7.901706695556641
    6. '
' → logprob: -8.02670669555664
    7. '```' → logprob: -9.02670669555664
    8. '   ' → logprob: -9.77670669555664
    9. '),' → logprob: -10.02670669555664
    10. '

' → logprob: -10.15170669555664

Token 1011: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.058978959918022156
    2. '(S' → logprob: -3.558979034423828
    3. 'red' → logprob: -4.058979034423828
    4. ' S' → logprob: -4.808979034423828
    5. ' red' → logprob: -6.683979034423828
    6. 'blue' → logprob: -7.183979034423828
    7. '(red' → logprob: -7.308979034423828
    8. '(' → logprob: -8.808979034423828
    9. '1' → logprob: -9.058979034423828
    10. ' (' → logprob: -9.308979034423828

Token 1012: ' première' (ID: 23423)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.3822000026702881
    2. 'S' → logprob: -1.382200002670288
    3. '1' → logprob: -2.757200002670288
    4. 'first' → logprob: -6.257200241088867
    5. ' premier' → logprob: -8.257200241088867
    6. ' première' → logprob: -8.507200241088867
    7. '(S' → logprob: -9.132200241088867
    8. 'de' → logprob: -9.257200241088867
    9. 's' → logprob: -9.382200241088867
    10. ' S' → logprob: -9.382200241088867

Token 1013: ',' (ID: 11)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.27268779277801514
    2. ')' → logprob: -2.7726879119873047
    3. ']' → logprob: -2.8976879119873047
    4. '[(' → logprob: -3.0226879119873047
    5. '1' → logprob: -3.7726879119873047
    6. '[' → logprob: -4.272687911987305
    7. '   ' → logprob: -4.272687911987305
    8. '(' → logprob: -4.772687911987305
    9. ')]' → logprob: -6.522687911987305
    10. '):' → logprob: -6.647687911987305

Token 1014: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0332955121994019
    2. ' red' → logprob: -1.2832955121994019
    3. 'et' → logprob: -1.9082955121994019
    4. 'red' → logprob: -2.4082956314086914
    5. ' et' → logprob: -2.9082956314086914
    6. ')' → logprob: -3.4082956314086914
    7. '(red' → logprob: -4.533295631408691
    8. '(' → logprob: -4.658295631408691
    9. 'and' → logprob: -4.658295631408691
    10. '#' → logprob: -5.908295631408691

Token 1015: ' inverse' (ID: 53743)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.4684528410434723
    2. 'red' → logprob: -1.71845281124115
    3. ' blue' → logprob: -2.4684529304504395
    4. 'blue' → logprob: -2.8434529304504395
    5. 'le' → logprob: -3.9684529304504395
    6. ' le' → logprob: -4.2184529304504395
    7. '#' → logprob: -5.7184529304504395
    8. '   ' → logprob: -5.7184529304504395
    9. ' ' → logprob: -5.8434529304504395
    10. ' que' → logprob: -6.3434529304504395

Token 1016: 'ment' (ID: 508)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4936312437057495
    2. 'ment' → logprob: -1.3686312437057495
    3. 'red' → logprob: -3.368631362915039
    4. '_' → logprob: -4.118631362915039
    5. ')' → logprob: -4.243631362915039
    6. '1' → logprob: -4.368631362915039
    7. 'e' → logprob: -4.868631362915039
    8. 'ly' → logprob: -4.868631362915039
    9. 'ément' → logprob: -4.993631362915039
    10. 'le' → logprob: -5.243631362915039

Token 1017: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000649529043585062
    2. '
' → logprob: -7.625649452209473
    3. 'ans' → logprob: -9.875649452209473
    4. '(ans' → logprob: -10.625649452209473
    5. '```' → logprob: -10.750649452209473
    6. ' ans' → logprob: -10.750649452209473
    7. '    
' → logprob: -11.250649452209473
    8. '.' → logprob: -12.000649452209473
    9. '.
' → logprob: -12.125649452209473
    10. ',' → logprob: -13.000649452209473

Token 1018: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16411857306957245
    2. '   ' → logprob: -1.9141185283660889
    3. ' ans' → logprob: -5.914118766784668
    4. '(ans' → logprob: -7.539118766784668
    5. '```' → logprob: -7.664118766784668
    6. '
' → logprob: -10.039118766784668
    7. '	ans' → logprob: -10.164118766784668
    8. '``' → logprob: -10.414118766784668
    9. 'for' → logprob: -10.539118766784668
    10. ' ' → logprob: -10.914118766784668

Token 1019: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.2529732882976532
    2. '   ' → logprob: -1.5029733180999756
    3. ' ans' → logprob: -7.2529730796813965
    4. '
' → logprob: -8.877973556518555
    5. '```' → logprob: -9.252973556518555
    6. '	ans' → logprob: -10.127973556518555
    7. '(ans' → logprob: -10.752973556518555
    8. 'if' → logprob: -11.252973556518555
    9. 'for' → logprob: -12.127973556518555
    10. '    
' → logprob: -12.127973556518555

Token 1020: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10022791475057602
    2. ' +=' → logprob: -2.3502278327941895
    3. ']+=' → logprob: -11.350228309631348
    4. '+' → logprob: -11.975228309631348
    5. '+=(' → logprob: -13.725228309631348
    6. '```' → logprob: -14.475228309631348
    7. '   ' → logprob: -14.475228309631348
    8. '	' → logprob: -14.725228309631348
    9. '=' → logprob: -15.475228309631348
    10. '+="' → logprob: -15.725228309631348

Token 1021: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.8624639324116288e-06
    2. ' D' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '	D' → logprob: -19.125001907348633
    5. ' ' → logprob: -20.500001907348633
    6. '  ' → logprob: -20.875001907348633
    7. '[D' → logprob: -22.750001907348633
    8. '`' → logprob: -22.875001907348633
    9. '       ' → logprob: -23.000001907348633
    10. '(D' → logprob: -23.125001907348633

Token 1022: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0006314247148111463
    2. '(' → logprob: -7.500631332397461
    3. '[' → logprob: -9.875631332397461
    4. '.get' → logprob: -10.750631332397461
    5. '((' → logprob: -13.125631332397461
    6. ' (' → logprob: -13.375631332397461
    7. '   ' → logprob: -14.625631332397461
    8. '```' → logprob: -14.875631332397461
    9. '.setdefault' → logprob: -15.250631332397461
    10. '.' → logprob: -15.375631332397461

Token 1023: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -2.3319124011322856e-05
    2. ' blue' → logprob: -10.875022888183594
    3. '(' → logprob: -12.500022888183594
    4. 'blu' → logprob: -15.625022888183594
    5. 'red' → logprob: -15.750022888183594
    6. '   ' → logprob: -16.000022888183594
    7. 'ble' → logprob: -16.625022888183594
    8. ' ' → logprob: -17.625022888183594
    9. 'Blue' → logprob: -18.000022888183594
    10. 'b' → logprob: -18.000022888183594

Token 1024: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'red' → logprob: -17.0
    3. ' ' → logprob: -17.125
    4. ',' → logprob: -17.25
    5. '
' → logprob: -17.875
    6. '₂' → logprob: -18.125
    7. '```' → logprob: -18.25
    8. '1' → logprob: -18.375
    9. '۲' → logprob: -18.5
    10. '(red' → logprob: -18.625

Token 1025: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',
' → logprob: -14.250003814697266
    4. ' red' → logprob: -16.500003814697266
    5. '‌,' → logprob: -17.375003814697266
    6. '<|end|>' → logprob: -17.500003814697266
    7. '
' → logprob: -18.000003814697266
    8. '(red' → logprob: -18.000003814697266
    9. ',y' → logprob: -18.375003814697266
    10. ' ' → logprob: -19.000003814697266

Token 1026: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -1.4855663721391466e-05
    2. ' red' → logprob: -11.125015258789062
    3. 'blue' → logprob: -18.250015258789062
    4. 're' → logprob: -19.625015258789062
    5. ' ' → logprob: -19.750015258789062
    6. '
' → logprob: -20.125015258789062
    7. '(red' → logprob: -20.125015258789062
    8. 'reds' → logprob: -20.375015258789062
    9. 'r' → logprob: -20.750015258789062
    10. '_red' → logprob: -21.250015258789062

Token 1027: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029601677670143545
    2. '1' → logprob: -8.125295639038086
    3. ' ' → logprob: -18.125295639038086
    4. 'red' → logprob: -18.125295639038086
    5. ')' → logprob: -19.000295639038086
    6. '```' → logprob: -19.250295639038086
    7. ')]' → logprob: -19.750295639038086
    8. '۲' → logprob: -19.750295639038086
    9. '₂' → logprob: -20.125295639038086
    10. ' red' → logprob: -20.500295639038086

Token 1028: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.988221684878226e-06
    2. ')]
' → logprob: -12.125006675720215
    3. ')' → logprob: -14.375006675720215
    4. ' )' → logprob: -14.625006675720215
    5. ']' → logprob: -16.00000762939453
    6. ')])' → logprob: -16.00000762939453
    7. ')]
' → logprob: -16.37500762939453
    8. ')]

' → logprob: -16.62500762939453
    9. '])' → logprob: -16.75000762939453
    10. '])]' → logprob: -17.75000762939453

Token 1029: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001997273648157716
    2. '
' → logprob: -7.001997470855713
    3. '```' → logprob: -7.001997470855713
    4. ' print' → logprob: -9.626996994018555
    5. '<|end|>' → logprob: -9.876996994018555
    6. ')' → logprob: -10.751996994018555
    7. '#' → logprob: -11.501996994018555
    8. '``' → logprob: -11.751996994018555
    9. '#print' → logprob: -12.126996994018555
    10. '(print' → logprob: -12.501996994018555

Token 1030: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.3133425712585449
    2. '(' → logprob: -1.313342571258545
    3. '('' → logprob: -9.813343048095703
    4. '("("' → logprob: -11.188343048095703
    5. '()' → logprob: -12.938343048095703
    6. '(f' → logprob: -13.188343048095703
    7. '(
' → logprob: -13.563343048095703
    8. '(len' → logprob: -13.813343048095703
    9. '(ord' → logprob: -13.938343048095703
    10. 'ans' → logprob: -13.938343048095703

Token 1031: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. '())' → logprob: -12.250008583068848
    3. '()' → logprob: -13.125008583068848
    4. ')`' → logprob: -14.125008583068848
    5. '))' → logprob: -15.000008583068848
    6. ' )' → logprob: -15.250008583068848
    7. '(' → logprob: -15.875008583068848
    8. ')}' → logprob: -18.12500762939453
    9. ')")' → logprob: -18.25000762939453
    10. '`)' → logprob: -18.50000762939453

Token 1032: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1033: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1034: ' Aff' (ID: 13741)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1035: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.4735720455646515
    2. 'iche' → logprob: -1.598572015762329
    3. 'ich' → logprob: -2.348572015762329
    4. 'ichage' → logprob: -3.098572015762329
    5. 'print' → logprob: -4.348572254180908
    6. 'ic' → logprob: -4.723572254180908
    7. 'er' → logprob: -5.848572254180908
    8. '#' → logprob: -5.973572254180908
    9. ')' → logprob: -6.348572254180908
    10. '()' → logprob: -6.473572254180908

Token 1036: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0002614550176076591
    2. '(' → logprob: -8.250261306762695
    3. 'ans' → logprob: -15.875261306762695
    4. '(
' → logprob: -16.500261306762695
    5. '()' → logprob: -16.875261306762695
    6. '(answer' → logprob: -18.250261306762695
    7. ' (' → logprob: -19.375261306762695
    8. '(`' → logprob: -20.125261306762695
    9. '(an' → logprob: -20.375261306762695
    10. '	ans' → logprob: -20.625261306762695

Token 1037: 'é' (ID: 377)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014222510159015656
    2. '(ans' → logprob: -4.264222621917725
    3. ')' → logprob: -9.764222145080566
    4. ' ans' → logprob: -13.514222145080566
    5. '	ans' → logprob: -16.264223098754883
    6. 'ANS' → logprob: -18.389223098754883
    7. '_ans' → logprob: -18.389223098754883
    8. 'anst' → logprob: -18.514223098754883
    9. 'answer' → logprob: -19.139223098754883
    10. '0' → logprob: -19.764223098754883

Token 1038: 'crit' (ID: 15345)
  Prédit: 'inal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inal' → logprob: -0.07962532341480255
    2. 'nal' → logprob: -3.704625368118286
    3. 'nale' → logprob: -4.079625129699707
    4. 'f' → logprob: -4.579625129699707
    5. 'n' → logprob: -4.829625129699707
    6. 'inale' → logprob: -5.204625129699707
    7. '0' → logprob: -6.204625129699707
    8. 'ffective' → logprob: -6.204625129699707
    9. 'gal' → logprob: -6.704625129699707
    10. 'ff' → logprob: -7.204625129699707

Token 1039: ' sur' (ID: 1512)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.16031743586063385
    2. '(' → logprob: -1.9103174209594727
    3. '()' → logprob: -9.785317420959473
    4. '(
' → logprob: -11.035317420959473
    5. ')' → logprob: -11.535317420959473
    6. 'ans' → logprob: -12.285317420959473
    7. '(answer' → logprob: -13.410317420959473
    8. ' (' → logprob: -13.535317420959473
    9. '(final' → logprob: -14.410317420959473
    10. '(`' → logprob: -14.660317420959473

Token 1040: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.2300065755844116
    2. '()' → logprob: -1.3550065755844116
    3. '("")' → logprob: -1.3550065755844116
    4. '(ans' → logprob: -2.730006694793701
    5. 'ans' → logprob: -3.355006694793701
    6. 'l' → logprob: -3.980006694793701
    7. '""' → logprob: -4.105006694793701
    8. ')' → logprob: -4.230006694793701
    9. '(""' → logprob: -4.605006694793701
    10. '(' → logprob: -5.105006694793701

Token 1041: ' sortie' (ID: 52761)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.07945390045642853
    2. 'standard' → logprob: -3.954453945159912
    3. ')' → logprob: -4.454453945159912
    4. 'stdin' → logprob: -4.829453945159912
    5. '
' → logprob: -4.954453945159912
    6. '"\' → logprob: -5.329453945159912
    7. ' standard' → logprob: -5.704453945159912
    8. 'output' → logprob: -5.829453945159912
    9. ' stdout' → logprob: -6.079453945159912
    10. '\n' → logprob: -6.204453945159912

Token 1042: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00433979881927371
    2. '("")' → logprob: -5.754339694976807
    3. '("\' → logprob: -7.129339694976807
    4. '())' → logprob: -8.629340171813965
    5. '(' → logprob: -9.379340171813965
    6. '('\' → logprob: -10.254340171813965
    7. '()\' → logprob: -10.879340171813965
    8. ')' → logprob: -11.129340171813965
    9. '(ans' → logprob: -11.504340171813965
    10. '()
' → logprob: -12.504340171813965

Token 1043: ')' (ID: 8)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00046546570956707
    2. '()' → logprob: -7.875465393066406
    3. '(' → logprob: -9.500465393066406
    4. ')' → logprob: -11.875465393066406
    5. '(answer' → logprob: -13.625465393066406
    6. '())' → logprob: -13.750465393066406
    7. 'ans' → logprob: -14.750465393066406
    8. '(`' → logprob: -16.000465393066406
    9. '((' → logprob: -16.125465393066406
    10. '(len' → logprob: -16.125465393066406

Token 1044: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1045: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2984754145145416
    2. '(ans' → logprob: -1.4234753847122192
    3. 'result' → logprob: -4.17347526550293
    4. 'answer' → logprob: -7.04847526550293
    5. 'final' → logprob: -7.67347526550293
    6. '(' → logprob: -8.67347526550293
    7. ' ans' → logprob: -9.04847526550293
    8. ' result' → logprob: -10.29847526550293
    9. '(answer' → logprob: -11.04847526550293
    10. 'value' → logprob: -11.17347526550293

Token 1046: ' entière' (ID: 61583)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.15149138867855072
    2. '(' → logprob: -2.276491403579712
    3. '()' → logprob: -3.276491403579712
    4. '(
' → logprob: -9.401491165161133
    5. '("")' → logprob: -10.401491165161133
    6. '('' → logprob: -11.276491165161133
    7. '(`' → logprob: -11.276491165161133
    8. '("' → logprob: -12.276491165161133
    9. '("\' → logprob: -12.401491165161133
    10. 'ans' → logprob: -12.651491165161133

Token 1047: ' conten' (ID: 23523)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003668367862701416
    2. '(' → logprob: -6.003668308258057
    3. '(ans' → logprob: -6.753668308258057
    4. '("")' → logprob: -12.003668785095215
    5. '()
' → logprob: -12.378668785095215
    6. '()\' → logprob: -12.753668785095215
    7. '())' → logprob: -12.878668785095215
    8. '```' → logprob: -13.003668785095215
    9. ' ()' → logprob: -13.378668785095215
    10. '(
' → logprob: -13.503668785095215

Token 1048: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0019395847339183092
    2. 'u' → logprob: -6.25193977355957
    3. 'e' → logprob: -11.50193977355957
    4. 'enue' → logprob: -14.37693977355957
    5. '#' → logprob: -16.87693977355957
    6. 'uée' → logprob: -17.37693977355957
    7. 't' → logprob: -17.62693977355957
    8. 'n' → logprob: -17.62693977355957
    9. 'ur' → logprob: -17.75193977355957
    10. '"' → logprob: -18.12693977355957

Token 1049: ' dans' (ID: 2671)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0022481500636786222
    2. '()' → logprob: -6.502248287200928
    3. '(' → logprob: -7.502248287200928
    4. 'ans' → logprob: -8.75224781036377
    5. '(
' → logprob: -10.37724781036377
    6. '```' → logprob: -13.37724781036377
    7. '(answer' → logprob: -14.00224781036377
    8. '0' → logprob: -14.75224781036377
    9. ')' → logprob: -15.75224781036377
    10. '("' → logprob: -15.75224781036377

Token 1050: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014164921827614307
    2. '(ans' → logprob: -4.264164924621582
    3. ' ans' → logprob: -13.639164924621582
    4. 'answer' → logprob: -16.639163970947266
    5. '	ans' → logprob: -16.889163970947266
    6. '(' → logprob: -17.764163970947266
    7. 'print' → logprob: -18.639163970947266
    8. '```' → logprob: -19.514163970947266
    9. 'a' → logprob: -19.639163970947266
    10. '(
' → logprob: -19.764163970947266

Token 1051: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1052: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015380148775875568
    2. '```' → logprob: -4.765380382537842
    3. '\n' → logprob: -6.015380382537842
    4. '``' → logprob: -6.640380382537842
    5. '()' → logprob: -6.890380382537842
    6. '<|end|>' → logprob: -7.265380382537842
    7. '
' → logprob: -8.390379905700684
    8. ')
' → logprob: -8.390379905700684
    9. '  
' → logprob: -8.765379905700684
    10. '\' → logprob: -9.015379905700684

Token 1053: ' est' (ID: 893)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -1.3206281661987305
    2. '```' → logprob: -1.4456281661987305
    3. ' represents' → logprob: -1.9456281661987305
    4. ')' → logprob: -2.1956281661987305
    5. ' représente' → logprob: -2.4456281661987305
    6. 'est' → logprob: -2.5706281661987305
    7. 'repr' → logprob: -4.3206281661987305
    8. ' est' → logprob: -4.6956281661987305
    9. '()' → logprob: -5.1956281661987305
    10. 'constit' → logprob: -5.3206281661987305

Token 1054: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.42057347297668457
    2. 'ans' → logprob: -1.6705734729766846
    3. '()' → logprob: -2.2955734729766846
    4. '\n' → logprob: -4.0455732345581055
    5. '0' → logprob: -4.1705732345581055
    6. ')' → logprob: -4.9205732345581055
    7. '```' → logprob: -5.2955732345581055
    8. '\' → logprob: -5.6705732345581055
    9. 'end' → logprob: -6.2955732345581055
    10. '
' → logprob: -7.2955732345581055

Token 1055: ' réponse' (ID: 50332)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.69407719373703
    2. 'solution' → logprob: -1.6940772533416748
    3. 'number' → logprob: -2.444077253341675
    4. 'result' → logprob: -2.944077253341675
    5. 'total' → logprob: -3.194077253341675
    6. 'ré' → logprob: -3.694077253341675
    7. 'final' → logprob: -3.944077253341675
    8. 'count' → logprob: -4.069077014923096
    9. 's' → logprob: -4.319077014923096
    10. 'sum' → logprob: -4.694077014923096

Token 1056: ' finale' (ID: 37759)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1057: ' calcul' (ID: 7559)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1058: 'ée' (ID: 2894)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4047745168209076
    2. ')' → logprob: -1.40477454662323
    3. '(' → logprob: -2.5297744274139404
    4. '```' → logprob: -6.1547746658325195
    5. '#' → logprob: -6.5297746658325195
    6. '())' → logprob: -7.0297746658325195
    7. 'e' → logprob: -7.0297746658325195
    8. '("")' → logprob: -7.6547746658325195
    9. '(
' → logprob: -8.02977466583252
    10. '=' → logprob: -8.02977466583252

Token 1059: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1057
Tokens correctement prédits (1ère position, stricte): 248
Tokens correctement prédits (1ère position, avec adaptation): 255
Tokens correctement prédits (top 10): 572
Précision stricte (1ère position): 23.46%
Précision adaptée (1ère position): 24.12%
Précision (top 10): 54.12%
================================================================================
