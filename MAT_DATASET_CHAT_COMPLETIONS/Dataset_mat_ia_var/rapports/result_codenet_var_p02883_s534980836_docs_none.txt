================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline
readlines = sys.stdin.buffer.readlines

import numpy as np

N,K = map(int,readline().split())
A = np.array(readline().split(),np.int64)
F = np.array(readline().split(),np.int64)

A.sort(); F.sort(); F=F[::-1]

def test(x):
    return np.maximum(0,A-x//F).sum() <= K

left = -1
right = 10**13
while left+1 < right:
    mid = (left+right)//2
    if test(mid):
        right = mid
    else:
        left = mid
answer = right
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'read' (ID: 1293)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5464874505996704
    2. 'line' → logprob: -1.1714874505996704
    3. '()' → logprob: -2.796487331390381
    4. '_line' → logprob: -3.796487331390381
    5. '_' → logprob: -4.671487331390381
    6. 'er' → logprob: -5.546487331390381
    7. '.' → logprob: -5.671487331390381
    8. 'ing' → logprob: -6.046487331390381
    9. ' (' → logprob: -6.921487331390381
    10. '_data' → logprob: -7.296487331390381

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16038091480731964
    2. 'sys' → logprob: -1.9103809595108032
    3. '=sys' → logprob: -9.910381317138672
    4. '(sys' → logprob: -10.285381317138672
    5. '	sys' → logprob: -10.535381317138672
    6. ' input' → logprob: -11.035381317138672
    7. 'input' → logprob: -11.035381317138672
    8. ' ' → logprob: -12.035381317138672
    9. ' lambda' → logprob: -12.785381317138672
    10. ' open' → logprob: -13.160381317138672

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005067602731287479
    2. '.stdin' → logprob: -5.755067825317383
    3. '.readline' → logprob: -6.880067825317383
    4. '.stdout' → logprob: -8.005067825317383
    5. '.read' → logprob: -8.130067825317383
    6. '.argv' → logprob: -9.380067825317383
    7. '.import' → logprob: -10.380067825317383
    8. '.exit' → logprob: -11.380067825317383
    9. '.path' → logprob: -11.505067825317383
    10. ' .' → logprob: -11.505067825317383

Token 7: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2086726874113083
    2. '.read' → logprob: -1.7086726427078247
    3. '.' → logprob: -4.958672523498535
    4. '.readlines' → logprob: -9.083672523498535
    5. '.Read' → logprob: -9.583672523498535
    6. 'read' → logprob: -11.333672523498535
    7. '.buffer' → logprob: -12.458672523498535
    8. '.READ' → logprob: -12.583672523498535
    9. '.write' → logprob: -13.458672523498535
    10. 'Read' → logprob: -13.708672523498535

Token 8: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2018745243549347
    2. '.read' → logprob: -1.7018744945526123
    3. 'read' → logprob: -7.951874732971191
    4. '.' → logprob: -9.326874732971191
    5. '.readlines' → logprob: -11.451874732971191
    6. ' readline' → logprob: -11.951874732971191
    7. '_read' → logprob: -13.826874732971191
    8. '.re' → logprob: -14.201874732971191
    9. '.write' → logprob: -14.451874732971191
    10. '.raw' → logprob: -15.701874732971191

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0803699940443039
    2. '()' → logprob: -2.5803699493408203
    3. '(
' → logprob: -6.70536994934082
    4. '(

' → logprob: -9.20536994934082
    5. '```' → logprob: -10.08036994934082
    6. '40' → logprob: -10.83036994934082
    7. '(\' → logprob: -10.95536994934082
    8. '()
' → logprob: -11.33036994934082
    9. '\n' → logprob: -11.45536994934082
    10. '(
' → logprob: -12.33036994934082

Token 10: 'read' (ID: 1293)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43343591690063477
    2. '(' → logprob: -1.0584359169006348
    3. '(
' → logprob: -6.058435916900635
    4. '\n' → logprob: -7.683435916900635
    5. '_' → logprob: -7.933435916900635
    6. ',' → logprob: -8.058435440063477
    7. '()
' → logprob: -8.183435440063477
    8. '(

' → logprob: -8.808435440063477
    9. '```' → logprob: -9.058435440063477
    10. '\' → logprob: -9.183435440063477

Token 11: 'line' (ID: 1137)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6934213638305664
    2. '()' → logprob: -0.6934213638305664
    3. '(
' → logprob: -8.693421363830566
    4. '(

' → logprob: -10.568421363830566
    5. ' ()' → logprob: -11.068421363830566
    6. '()
' → logprob: -11.568421363830566
    7. '```' → logprob: -11.568421363830566
    8. ')' → logprob: -11.693421363830566
    9. '.' → logprob: -11.943421363830566
    10. ' (' → logprob: -12.068421363830566

Token 12: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2957358956336975
    2. '()' → logprob: -2.0457358360290527
    3. '=' → logprob: -2.4207358360290527
    4. ' =' → logprob: -3.5457358360290527
    5. 's' → logprob: -5.045735836029053
    6. '_' → logprob: -7.295735836029053
    7. ' (' → logprob: -7.420735836029053
    8. ')' → logprob: -8.170736312866211
    9. '(
' → logprob: -8.170736312866211
    10. ''s' → logprob: -8.795736312866211

Token 13: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10022338479757309
    2. ' sys' → logprob: -2.3502233028411865
    3. '=sys' → logprob: -11.350223541259766
    4. '	sys' → logprob: -12.475223541259766
    5. '(sys' → logprob: -14.225223541259766
    6. '/sys' → logprob: -15.850223541259766
    7. '_sys' → logprob: -16.100223541259766
    8. 's' → logprob: -16.100223541259766
    9. '.sys' → logprob: -16.475223541259766
    10. 'read' → logprob: -16.975223541259766

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.04169783368706703
    2. '.readline' → logprob: -3.4166977405548096
    3. '.stdout' → logprob: -5.041697978973389
    4. '.' → logprob: -6.541697978973389
    5. '.stderr' → logprob: -9.91669750213623
    6. ' .' → logprob: -10.54169750213623
    7. 'stdin' → logprob: -11.04169750213623
    8. '.argv' → logprob: -11.91669750213623
    9. '.buffer' → logprob: -13.04169750213623
    10. '.read' → logprob: -13.16669750213623

Token 15: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04876812919974327
    2. '.buffer' → logprob: -3.0487680435180664
    3. '.' → logprob: -9.048768043518066
    4. 'buffer' → logprob: -10.548768043518066
    5. '.stdin' → logprob: -11.048768043518066
    6. '.read' → logprob: -12.048768043518066
    7. '.readlines' → logprob: -12.173768043518066
    8. ' .' → logprob: -12.673768043518066
    9. '.Buffer' → logprob: -13.798768043518066
    10. '.stdout' → logprob: -13.798768043518066

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002779014757834375
    2. 'read' → logprob: -8.375277519226074
    3. ' readline' → logprob: -10.000277519226074
    4. '.read' → logprob: -13.625277519226074
    5. '.' → logprob: -15.125277519226074
    6. 'line' → logprob: -15.375277519226074
    7. 'getline' → logprob: -15.750277519226074
    8. '.readlines' → logprob: -16.37527847290039
    9. '_read' → logprob: -17.00027847290039
    10. '```' → logprob: -17.12527847290039

Token 17: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3424038887023926
    2. '
' → logprob: -1.3424038887023926
    3. '()' → logprob: -1.3424038887023926
    4. '\n' → logprob: -2.5924038887023926
    5. 'def' → logprob: -2.7174038887023926
    6. '(
' → logprob: -3.3424038887023926
    7. '\' → logprob: -4.842403888702393
    8. 'import' → logprob: -4.842403888702393
    9. '#' → logprob: -4.967403888702393
    10. '

' → logprob: -5.967403888702393

Token 18: 'read' (ID: 1293)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.03326687216758728
    2. 'def' → logprob: -4.033267021179199
    3. '\n' → logprob: -5.408267021179199
    4. '#' → logprob: -6.033267021179199
    5. 'input' → logprob: -6.408267021179199
    6. 'n' → logprob: -6.408267021179199
    7. 'd' → logprob: -7.158267021179199
    8. '```' → logprob: -7.408267021179199
    9. '\' → logprob: -7.658267021179199
    10. 'class' → logprob: -7.908267021179199

Token 19: 'lines' (ID: 10105)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20235885679721832
    2. '()' → logprob: -1.7023588418960571
    3. '(
' → logprob: -7.327358722686768
    4. ')' → logprob: -9.827359199523926
    5. '(

' → logprob: -10.077359199523926
    6. '```' → logprob: -10.077359199523926
    7. '(\' → logprob: -10.577359199523926
    8. '()
' → logprob: -10.702359199523926
    9. ' (' → logprob: -11.077359199523926
    10. ' ()' → logprob: -11.202359199523926

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23993812501430511
    2. ' =' → logprob: -1.6149381399154663
    3. '()' → logprob: -4.989938259124756
    4. '(' → logprob: -5.114938259124756
    5. ')' → logprob: -7.489938259124756
    6. '.' → logprob: -7.864938259124756
    7. ' ' → logprob: -9.114937782287598
    8. '```' → logprob: -9.239937782287598
    9. '[:]' → logprob: -9.989937782287598
    10. ' (' → logprob: -10.239937782287598

Token 21: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.17976056039333344
    2. 'sys' → logprob: -1.8047605752944946
    3. '=sys' → logprob: -12.054760932922363
    4. '(sys' → logprob: -12.554760932922363
    5. '	sys' → logprob: -12.929760932922363
    6. 'read' → logprob: -13.429760932922363
    7. 's' → logprob: -13.554760932922363
    8. '.sys' → logprob: -15.054760932922363
    9. '/sys' → logprob: -15.054760932922363
    10. ' read' → logprob: -15.679760932922363

Token 22: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03367682173848152
    2. '.' → logprob: -3.908676862716675
    3. '.readline' → logprob: -5.033676624298096
    4. '.stdout' → logprob: -5.533676624298096
    5. ' .' → logprob: -6.658676624298096
    6. '.readlines' → logprob: -7.908676624298096
    7. '.argv' → logprob: -8.033677101135254
    8. '.stderr' → logprob: -8.658677101135254
    9. '​.' → logprob: -9.783677101135254
    10. '.py' → logprob: -9.908677101135254

Token 23: '.buffer' (ID: 48964)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32994118332862854
    2. '.buffer' → logprob: -1.9549411535263062
    3. '.readline' → logprob: -2.2049412727355957
    4. '.readlines' → logprob: -3.8299412727355957
    5. '<|end|>' → logprob: -5.829941272735596
    6. 'buffer' → logprob: -6.079941272735596
    7. ' .' → logprob: -7.454941272735596
    8. '.Buffer' → logprob: -7.579941272735596
    9. '.read' → logprob: -7.829941272735596
    10. '<|end|>' → logprob: -9.204940795898438

Token 24: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.3944995403289795
    2. '.readline' → logprob: -1.1444995403289795
    3. '.read' → logprob: -4.894499778747559
    4. 'read' → logprob: -9.269499778747559
    5. '.' → logprob: -11.144499778747559
    6. 'lines' → logprob: -13.894499778747559
    7. ' readline' → logprob: -14.269499778747559
    8. '```' → logprob: -15.019499778747559
    9. '.rstrip' → logprob: -15.269499778747559
    10. 's' → logprob: -16.019498825073242

Token 25: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6419849395751953
    2. 'def' → logprob: -1.3919849395751953
    3. '\n' → logprob: -2.7669849395751953
    4. '(' → logprob: -3.0169849395751953
    5. '()' → logprob: -3.2669849395751953
    6. '

' → logprob: -3.3919849395751953
    7. '' → logprob: -4.891984939575195
    8. '#' → logprob: -5.141984939575195
    9. '\' → logprob: -5.141984939575195
    10. 'import' → logprob: -5.266984939575195

Token 26: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08844977617263794
    2. 'data' → logprob: -3.213449716567993
    3. '#' → logprob: -4.088449954986572
    4. 'd' → logprob: -5.213449954986572
    5. '\n' → logprob: -5.838449954986572
    6. '\' → logprob: -6.088449954986572
    7. '
' → logprob: -6.088449954986572
    8. '(' → logprob: -6.213449954986572
    9. 'class' → logprob: -6.213449954986572
    10. 'n' → logprob: -6.463449954986572

Token 27: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0021962907630950212
    2. ' io' → logprob: -6.377196311950684
    3. ' collections' → logprob: -8.502196311950684
    4. ' math' → logprob: -9.127196311950684
    5. ' itertools' → logprob: -9.752196311950684
    6. 'os' → logprob: -10.002196311950684
    7. ' re' → logprob: -10.127196311950684
    8. ' sys' → logprob: -11.252196311950684
    9. ' ' → logprob: -11.502196311950684
    10. ' ' → logprob: -12.252196311950684

Token 28: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.006582385394722223
    2. '<|end|>' → logprob: -5.256582260131836
    3. 'as' → logprob: -6.756582260131836
    4. ' ' → logprob: -9.381582260131836
    5. '<|end|>' → logprob: -9.756582260131836
    6. '.' → logprob: -11.006582260131836
    7. '.ndarray' → logprob: -11.381582260131836
    8. 'import' → logprob: -12.881582260131836
    9. '.as' → logprob: -12.881582260131836
    10. '[' → logprob: -14.006582260131836

Token 29: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.004154499154537916
    2. 'np' → logprob: -5.504154682159424
    3. ' ' → logprob: -10.879154205322266
    4. ' ' → logprob: -11.004154205322266
    5. ' numpy' → logprob: -11.004154205322266
    6. ''' → logprob: -11.504154205322266
    7. ' as' → logprob: -12.504154205322266
    8. '"' → logprob: -13.254154205322266
    9. ' '' → logprob: -13.379154205322266
    10. '_np' → logprob: -13.379154205322266

Token 30: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6593763828277588
    2. 'import' → logprob: -1.1593763828277588
    3. '\n' → logprob: -2.659376382827759
    4. 'data' → logprob: -4.15937614440918
    5. '' → logprob: -4.28437614440918
    6. 'def' → logprob: -4.53437614440918
    7. '\' → logprob: -4.53437614440918
    8. 'n' → logprob: -4.78437614440918
    9. 'newline' → logprob: -4.90937614440918
    10. 'x' → logprob: -5.28437614440918

Token 31: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.652886152267456
    2. 'data' → logprob: -1.027886152267456
    3. 'n' → logprob: -3.027886152267456
    4. 'array' → logprob: -3.777886152267456
    5. 'N' → logprob: -4.027886390686035
    6. 'arr' → logprob: -4.902886390686035
    7. 'a' → logprob: -5.152886390686035
    8. 'np' → logprob: -5.652886390686035
    9. 'class' → logprob: -5.777886390686035
    10. 'A' → logprob: -5.777886390686035

Token 32: ',K' (ID: 107147)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5073370337486267
    2. ',' → logprob: -1.6323370933532715
    3. '=' → logprob: -1.6323370933532715
    4. ' ' → logprob: -5.5073370933532715
    5. ' ,' → logprob: -5.8823370933532715
    6. '=int' → logprob: -10.757336616516113
    7. '.' → logprob: -10.882336616516113
    8. '_' → logprob: -11.507336616516113
    9. '<|end|>' → logprob: -11.507336616516113
    10. '  ' → logprob: -11.632336616516113

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4758387804031372
    2. '=' → logprob: -0.9758387804031372
    3. ',' → logprob: -6.350838661193848
    4. '=int' → logprob: -11.475838661193848
    5. ' ,' → logprob: -13.100838661193848
    6. ' ' → logprob: -14.350838661193848
    7. '=input' → logprob: -14.850838661193848
    8. ' =
' → logprob: -15.225838661193848
    9. '=

' → logprob: -15.225838661193848
    10. '=np' → logprob: -15.725838661193848

Token 34: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.23991458117961884
    2. 'map' → logprob: -2.239914655685425
    3. ' np' → logprob: -2.864914655685425
    4. ' read' → logprob: -3.239914655685425
    5. ' ' → logprob: -5.364914417266846
    6. 'read' → logprob: -5.864914417266846
    7. 'np' → logprob: -5.989914417266846
    8. '0' → logprob: -8.614914894104004
    9. ' list' → logprob: -9.114914894104004
    10. ' readline' → logprob: -9.489914894104004

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009560934267938137
    2. '(' → logprob: -5.009561061859131
    3. '(lambda' → logprob: -6.009561061859131
    4. '(str' → logprob: -8.009560585021973
    5. 'int' → logprob: -10.259560585021973
    6. 'lambda' → logprob: -12.759560585021973
    7. '(
' → logprob: -12.884560585021973
    8. '()' → logprob: -13.134560585021973
    9. '```' → logprob: -13.259560585021973
    10. '[int' → logprob: -13.384560585021973

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023557874374091625
    2. ',input' → logprob: -7.002355575561523
    3. '(read' → logprob: -7.752355575561523
    4. ' ,' → logprob: -7.752355575561523
    5. ',int' → logprob: -8.127355575561523
    6. '(' → logprob: -8.627355575561523
    7. ',(' → logprob: -10.502355575561523
    8. ',line' → logprob: -10.502355575561523
    9. 'read' → logprob: -11.877355575561523
    10. '(),' → logprob: -12.127355575561523

Token 37: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0559210367500782
    2. ' read' → logprob: -3.1809210777282715
    3. 'input' → logprob: -5.3059210777282715
    4. ' readline' → logprob: -5.4309210777282715
    5. ' input' → logprob: -5.8059210777282715
    6. ')' → logprob: -7.9309210777282715
    7. '(read' → logprob: -9.680920600891113
    8. ' ' → logprob: -10.805920600891113
    9. '	read' → logprob: -11.180920600891113
    10. ' )' → logprob: -11.680920600891113

Token 38: 'line' (ID: 1137)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006217082031071186
    2. '()' → logprob: -5.506217002868652
    3. '())' → logprob: -6.506217002868652
    4. '(' → logprob: -7.631217002868652
    5. ' ().' → logprob: -9.506217002868652
    6. ' ()' → logprob: -9.881217002868652
    7. ' ())' → logprob: -11.381217002868652
    8. ')' → logprob: -11.631217002868652
    9. '()[' → logprob: -13.131217002868652
    10. 'line' → logprob: -13.506217002868652

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10103508830070496
    2. '())' → logprob: -2.9760351181030273
    3. '()' → logprob: -3.1010351181030273
    4. '(' → logprob: -10.476035118103027
    5. '()[' → logprob: -10.976035118103027
    6. '();)' → logprob: -12.101035118103027
    7. '()]' → logprob: -12.351035118103027
    8. ' ()' → logprob: -12.351035118103027
    9. '()).' → logprob: -12.476035118103027
    10. ' ())' → logprob: -12.476035118103027

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08676972985267639
    2. 'strip' → logprob: -2.8367698192596436
    3. 'decode' → logprob: -3.8367698192596436
    4. 'rstrip' → logprob: -5.8367695808410645
    5. ')' → logprob: -11.711770057678223
    6. ' split' → logprob: -12.836770057678223
    7. '(split' → logprob: -13.836770057678223
    8. '```' → logprob: -13.836770057678223
    9. '().' → logprob: -14.086770057678223
    10. 'read' → logprob: -14.711770057678223

Token 41: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.400693416595459
    2. ')' → logprob: -1.150693416595459
    3. '()' → logprob: -5.150693416595459
    4. '(' → logprob: -5.525693416595459
    5. '('' → logprob: -5.650693416595459
    6. '))' → logprob: -9.525693893432617
    7. '(','' → logprob: -9.525693893432617
    8. '(()' → logprob: -9.775693893432617
    9. '((' → logprob: -10.150693893432617
    10. 'b' → logprob: -10.525693893432617

Token 42: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5088312029838562
    2. ')' → logprob: -2.133831262588501
    3. 'a' → logprob: -2.258831262588501
    4. 'data' → logprob: -2.508831262588501
    5. 'array' → logprob: -2.883831262588501
    6. 'arr' → logprob: -3.883831262588501
    7. 'x' → logprob: -5.758831024169922
    8. ' A' → logprob: -5.883831024169922
    9. 'X' → logprob: -6.508831024169922
    10. ' array' → logprob: -6.758831024169922

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283433437347412
    2. '=' → logprob: -2.2378344535827637
    3. '=np' → logprob: -12.112833976745605
    4. ',' → logprob: -12.987833976745605
    5. '_' → logprob: -13.862833976745605
    6. ')' → logprob: -14.112833976745605
    7. ' ' → logprob: -14.362833976745605
    8. '[' → logprob: -14.987833976745605
    9. '=int' → logprob: -15.362833976745605
    10. '.' → logprob: -15.612833976745605

Token 44: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.5763314962387085
    2. ' np' → logprob: -0.8263314962387085
    3. ' list' → logprob: -8.32633113861084
    4. 'list' → logprob: -8.82633113861084
    5. '(np' → logprob: -14.07633113861084
    6. '[np' → logprob: -14.07633113861084
    7. 'numpy' → logprob: -14.70133113861084
    8. ' numpy' → logprob: -14.70133113861084
    9. '=np' → logprob: -15.45133113861084
    10. 'map' → logprob: -16.826332092285156

Token 45: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.37399235367774963
    2. '.from' → logprob: -1.4989923238754272
    3. '.' → logprob: -2.998992443084717
    4. '.arange' → logprob: -3.623992443084717
    5. '.empty' → logprob: -5.123992443084717
    6. '.zeros' → logprob: -6.248992443084717
    7. '.ndarray' → logprob: -6.248992443084717
    8. '.full' → logprob: -7.123992443084717
    9. ' .' → logprob: -7.498992443084717
    10. '.asarray' → logprob: -7.498992443084717

Token 46: '(read' (ID: 45738)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.014295135624706745
    2. '(' → logprob: -4.6392951011657715
    3. '(read' → logprob: -5.5142951011657715
    4. '(tuple' → logprob: -8.01429557800293
    5. '(np' → logprob: -9.63929557800293
    6. '([' → logprob: -10.01429557800293
    7. 'list' → logprob: -10.38929557800293
    8. '(int' → logprob: -12.01429557800293
    9. '(map' → logprob: -12.38929557800293
    10. '([]' → logprob: -12.63929557800293

Token 47: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.11967381089925766
    2. '().' → logprob: -2.494673728942871
    3. '())' → logprob: -3.619673728942871
    4. 'lines' → logprob: -6.244673728942871
    5. '()' → logprob: -7.119673728942871
    6. '(' → logprob: -7.494673728942871
    7. '(N' → logprob: -10.244673728942871
    8. '(int' → logprob: -10.619673728942871
    9. 'int' → logprob: -10.744673728942871
    10. '()[' → logprob: -10.744673728942871

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.049131713807582855
    2. '(),' → logprob: -3.0491316318511963
    3. '()' → logprob: -7.674131870269775
    4. ' (),' → logprob: -9.924131393432617
    5. ' ().' → logprob: -11.549131393432617
    6. '())' → logprob: -12.549131393432617
    7. '()),' → logprob: -12.674131393432617
    8. '(),'' → logprob: -12.674131393432617
    9. '()).' → logprob: -12.799131393432617
    10. '(),"' → logprob: -13.049131393432617

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005396680440753698
    2. 'strip' → logprob: -5.380396842956543
    3. 'rstrip' → logprob: -7.380396842956543
    4. ' split' → logprob: -9.380396842956543
    5. 'decode' → logprob: -9.755396842956543
    6. 'astype' → logprob: -12.255396842956543
    7. 'spl' → logprob: -12.630396842956543
    8. '(split' → logprob: -13.755396842956543
    9. ' strip' → logprob: -15.255396842956543
    10. 's' → logprob: -15.630396842956543

Token 50: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0008484598365612328
    2. '(dtype' → logprob: -7.375848293304443
    3. ',' → logprob: -9.375848770141602
    4. '()' → logprob: -10.125848770141602
    5. ',d' → logprob: -10.375848770141602
    6. '(' → logprob: -11.000848770141602
    7. '())' → logprob: -11.375848770141602
    8. '(int' → logprob: -11.500848770141602
    9. 'dtype' → logprob: -11.625848770141602
    10. '(),'' → logprob: -11.875848770141602

Token 51: 'np' (ID: 12766)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.5234761834144592
    2. 'int' → logprob: -1.0234761238098145
    3. ' dtype' → logprob: -3.1484761238098145
    4. ' int' → logprob: -5.6484761238098145
    5. 'np' → logprob: -6.6484761238098145
    6. ' np' → logprob: -9.023476600646973
    7. ''int' → logprob: -9.273476600646973
    8. ',int' → logprob: -9.898476600646973
    9. 'd' → logprob: -9.898476600646973
    10. ' ' → logprob: -10.273476600646973

Token 52: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.008814050815999508
    2. '.uint' → logprob: -4.758813858032227
    3. '.' → logprob: -8.633813858032227
    4. '.ndarray' → logprob: -11.133813858032227
    5. '.float' → logprob: -12.383813858032227
    6. '.integer' → logprob: -14.133813858032227
    7. '.i' → logprob: -14.133813858032227
    8. '.dtype' → logprob: -14.883813858032227
    9. '.randint' → logprob: -15.258813858032227
    10. '.Int' → logprob: -15.508813858032227

Token 53: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -0.008615754544734955
    2. '32' → logprob: -4.758615970611572
    3. '8' → logprob: -14.133615493774414
    4. ')' → logprob: -15.883615493774414
    5. '16' → logprob: -16.008615493774414
    6. 'c' → logprob: -16.258615493774414
    7. '_' → logprob: -16.383615493774414
    8. '_)' → logprob: -16.508615493774414
    9. '6' → logprob: -18.383615493774414
    10. 'p' → logprob: -18.758615493774414

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. '))' → logprob: -13.125008583068848
    3. '()' → logprob: -13.625008583068848
    4. ',' → logprob: -14.125008583068848
    5. ' )' → logprob: -14.125008583068848
    6. '())' → logprob: -14.125008583068848
    7. ')
' → logprob: -14.250008583068848
    8. '),' → logprob: -14.375008583068848
    9. ',)' → logprob: -15.625008583068848
    10. ')`' → logprob: -15.625008583068848

Token 55: 'F' (ID: 37)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.086881399154663
    2. '.' → logprob: -1.836881399154663
    3. '#' → logprob: -2.336881399154663
    4. 'A' → logprob: -2.586881399154663
    5. '<|end|>' → logprob: -2.586881399154663
    6. '%' → logprob: -3.336881399154663
    7. ' ' → logprob: -3.586881399154663
    8. ')' → logprob: -3.711881399154663
    9. '
' → logprob: -3.836881399154663
    10. '*' → logprob: -3.836881399154663

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326239109039307
    2. ' =' → logprob: -0.7576239109039307
    3. '=np' → logprob: -11.382623672485352
    4. '＝' → logprob: -12.882623672485352
    5. 'requencies' → logprob: -13.507623672485352
    6. 'A' → logprob: -14.007623672485352
    7. '=require' → logprob: -14.257623672485352
    8. '=int' → logprob: -14.257623672485352
    9. '.' → logprob: -14.507623672485352
    10. 'a' → logprob: -14.882623672485352

Token 57: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.38690292835235596
    2. 'np' → logprob: -1.136902928352356
    3. '=np' → logprob: -10.761902809143066
    4. 'numpy' → logprob: -12.511902809143066
    5. ' numpy' → logprob: -12.636902809143066
    6. '[np' → logprob: -13.136902809143066
    7. '(np' → logprob: -13.761902809143066
    8. 'n' → logprob: -16.011903762817383
    9. 'array' → logprob: -16.511903762817383
    10. 's' → logprob: -16.636903762817383

Token 58: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.00010020548506872728
    2. 'array' → logprob: -10.000100135803223
    3. '.' → logprob: -10.125100135803223
    4. '.ndarray' → logprob: -11.375100135803223
    5. '.arr' → logprob: -13.750100135803223
    6. '.asarray' → logprob: -14.375100135803223
    7. '.arange' → logprob: -14.875100135803223
    8. ' .' → logprob: -15.000100135803223
    9. '.zeros' → logprob: -15.500100135803223
    10. '.Array' → logprob: -15.625100135803223

Token 59: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -4.203409844194539e-05
    2. '(' → logprob: -10.125041961669922
    3. '(line' → logprob: -14.250041961669922
    4. 'read' → logprob: -14.500041961669922
    5. '(list' → logprob: -14.500041961669922
    6. ' (' → logprob: -16.625041961669922
    7. ' readline' → logprob: -16.750041961669922
    8. '.readline' → logprob: -17.000041961669922
    9. '(
' → logprob: -17.125041961669922
    10. '(write' → logprob: -17.375041961669922

Token 60: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00017302791820839047
    2. '().' → logprob: -9.00017261505127
    3. '.readline' → logprob: -10.62517261505127
    4. 'lines' → logprob: -10.75017261505127
    5. '()' → logprob: -14.50017261505127
    6. 'Line' → logprob: -14.62517261505127
    7. '(line' → logprob: -14.87517261505127
    8. 'ine' → logprob: -14.87517261505127
    9. ' line' → logprob: -15.12517261505127
    10. 'read' → logprob: -15.25017261505127

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.875000953674316
    3. ' ().' → logprob: -15.375000953674316
    4. '.' → logprob: -18.625001907348633
    5. '(' → logprob: -19.125001907348633
    6. '(),' → logprob: -20.875001907348633
    7. '(.' → logprob: -20.875001907348633
    8. '()).' → logprob: -21.125001907348633
    9. ').' → logprob: -21.125001907348633
    10. '()[' → logprob: -21.250001907348633

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.253090865968261e-06
    2. 'int' → logprob: -11.875009536743164
    3. 'spl' → logprob: -14.000009536743164
    4. ' split' → logprob: -14.375009536743164
    5. '64' → logprob: -14.875009536743164
    6. 'dtype' → logprob: -15.875009536743164
    7. 'plit' → logprob: -16.500009536743164
    8. '(split' → logprob: -16.875009536743164
    9. '```' → logprob: -16.875009536743164
    10. '.split' → logprob: -16.875009536743164

Token 63: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.004347159992903471
    2. ',' → logprob: -5.754347324371338
    3. ',np' → logprob: -7.629347324371338
    4. '(np' → logprob: -7.754347324371338
    5. '(' → logprob: -9.25434684753418
    6. ',int' → logprob: -10.25434684753418
    7. ' (),' → logprob: -10.50434684753418
    8. '(int' → logprob: -10.62934684753418
    9. '()' → logprob: -10.75434684753418
    10. ' ,' → logprob: -11.00434684753418

Token 64: 'np' (ID: 12766)
  Prédit: 'np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.000735177774913609
    2. ' np' → logprob: -7.250735282897949
    3. ',np' → logprob: -10.75073528289795
    4. '[np' → logprob: -13.62573528289795
    5. '=np' → logprob: -13.75073528289795
    6. '(np' → logprob: -14.00073528289795
    7. 'int' → logprob: -14.62573528289795
    8. 'n' → logprob: -16.625734329223633
    9. '*np' → logprob: -17.000734329223633
    10. 'numpy' → logprob: -17.125734329223633

Token 65: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -3.8219583075260743e-05
    2. 'int' → logprob: -11.000038146972656
    3. '.uint' → logprob: -11.625038146972656
    4. '.' → logprob: -12.500038146972656
    5. '.ndarray' → logprob: -12.750038146972656
    6. '=int' → logprob: -13.125038146972656
    7. '[int' → logprob: -14.375038146972656
    8. ',int' → logprob: -14.625038146972656
    9. '.Int' → logprob: -14.750038146972656
    10. ' .' → logprob: -14.875038146972656

Token 66: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -0.00023226479243021458
    2. '32' → logprob: -8.375232696533203
    3. '8' → logprob: -13.500232696533203
    4. '16' → logprob: -16.375232696533203
    5. '6' → logprob: -16.750232696533203
    6. 'int' → logprob: -17.250232696533203
    7. ' ' → logprob: -17.500232696533203
    8. 'c' → logprob: -19.250232696533203
    9. '<|end|>' → logprob: -19.250232696533203
    10. ')' → logprob: -19.312732696533203

Token 67: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '))' → logprob: -14.750001907348633
    5. '()' → logprob: -15.500001907348633
    6. '),' → logprob: -16.750001907348633
    7. '())' → logprob: -16.875001907348633
    8. ')

' → logprob: -17.250001907348633
    9. ').' → logprob: -17.250001907348633
    10. ')#' → logprob: -17.250001907348633

Token 68: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.050066471099853516
    2. '.sort' → logprob: -3.8000664710998535
    3. 'F' → logprob: -3.9250664710998535
    4. '#' → logprob: -6.4250664710998535
    5. ',' → logprob: -6.6750664710998535
    6. '*' → logprob: -6.9250664710998535
    7. '.' → logprob: -7.4250664710998535
    8. '[np' → logprob: -8.425065994262695
    9. '[::-' → logprob: -8.550065994262695
    10. '*A' → logprob: -8.550065994262695

Token 69: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2739090025424957
    2. '.sort' → logprob: -1.5239089727401733
    3. '*' → logprob: -4.898909091949463
    4. '.reshape' → logprob: -6.148909091949463
    5. ')' → logprob: -6.398909091949463
    6. '+' → logprob: -6.398909091949463
    7. '**' → logprob: -6.523909091949463
    8. '.clip' → logprob: -6.648909091949463
    9. '-' → logprob: -7.023909091949463
    10. 'sort' → logprob: -7.023909091949463

Token 70: '();' (ID: 4177)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4744581878185272
    2. '()
' → logprob: -0.9744582176208496
    3. 'F' → logprob: -8.849457740783691
    4. '()

' → logprob: -9.349457740783691
    5. '(reverse' → logprob: -9.599457740783691
    6. '()
' → logprob: -10.099457740783691
    7. '(' → logprob: -11.474457740783691
    8. 'A' → logprob: -11.599457740783691
    9. 'reverse' → logprob: -12.724457740783691
    10. '()\' → logprob: -12.849457740783691

Token 71: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.02630389854311943
    2. ' F' → logprob: -3.651304006576538
    3. '<|end|>' → logprob: -13.651304244995117
    4. ' ' → logprob: -14.151304244995117
    5. 'f' → logprob: -15.026304244995117
    6. ' 
' → logprob: -15.151304244995117
    7. '	F' → logprob: -15.838804244995117
    8. ' 

' → logprob: -16.088804244995117
    9. '_F' → logprob: -16.213804244995117
    10. 'import' → logprob: -16.276304244995117

Token 72: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.004608845803886652
    2. '.' → logprob: -6.129608631134033
    3. '[::-' → logprob: -6.129608631134033
    4. 'sort' → logprob: -8.629609107971191
    5. '=' → logprob: -11.129609107971191
    6. '.flip' → logprob: -11.254609107971191
    7. '.reverse' → logprob: -11.879609107971191
    8. '.Sort' → logprob: -12.004609107971191
    9. '.args' → logprob: -12.379609107971191
    10. ' sort' → logprob: -12.379609107971191

Token 73: '();' (ID: 4177)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016182278341148049
    2. '();' → logprob: -9.500162124633789
    3. '()
' → logprob: -10.250162124633789
    4. '(' → logprob: -10.500162124633789
    5. '()`' → logprob: -11.250162124633789
    6. ' ()' → logprob: -13.500162124633789
    7. '(reverse' → logprob: -13.500162124633789
    8. '()

' → logprob: -13.750162124633789
    9. '(True' → logprob: -13.875162124633789
    10. '()]' → logprob: -14.125162124633789

Token 74: ' F' (ID: 454)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.012222238816320896
    2. 'F' → logprob: -5.3872222900390625
    3. '[' → logprob: -5.6372222900390625
    4. 'A' → logprob: -6.3872222900390625
    5. '()[' → logprob: -6.7622222900390625
    6. '[
' → logprob: -8.762222290039062
    7. '
' → logprob: -9.012222290039062
    8. ' F' → logprob: -9.262222290039062
    9. '#' → logprob: -9.512222290039062
    10. '[:]' → logprob: -9.512222290039062

Token 75: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22339408099651337
    2. '[::-' → logprob: -1.9733940362930298
    3. ' =' → logprob: -2.8483941555023193
    4. '[:]' → logprob: -6.09839391708374
    5. '=np' → logprob: -7.34839391708374
    6. '[:' → logprob: -8.973394393920898
    7. '[' → logprob: -9.473394393920898
    8. '=[' → logprob: -10.348394393920898
    9. '=re' → logprob: -10.848394393920898
    10. '=
' → logprob: -11.098394393920898

Token 76: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0030637492891401052
    2. '[::-' → logprob: -5.878063678741455
    3. ' F' → logprob: -9.128064155578613
    4. 'f' → logprob: -9.878064155578613
    5. '::-' → logprob: -10.378064155578613
    6. 'np' → logprob: -10.503064155578613
    7. '-' → logprob: -11.128064155578613
    8. '[' → logprob: -12.253064155578613
    9. '-F' → logprob: -12.628064155578613
    10. '<F' → logprob: -13.003064155578613

Token 77: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.000181372175575234
    2. '[' → logprob: -8.625181198120117
    3. '[:' → logprob: -14.500181198120117
    4. '[-' → logprob: -15.125181198120117
    5. '::-' → logprob: -15.375181198120117
    6. '[:]' → logprob: -15.625181198120117
    7. ' [' → logprob: -16.250181198120117
    8. '[
' → logprob: -16.375181198120117
    9. '[...,' → logprob: -16.375181198120117
    10. '[np' → logprob: -16.625181198120117

Token 78: '1' (ID: 16)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.10719641298055649
    2. 'sort' → logprob: -2.98219633102417
    3. '1' → logprob: -3.48219633102417
    4. '_args' → logprob: -4.10719633102417
    5. '0' → logprob: -6.60719633102417
    6. 'arg' → logprob: -7.35719633102417
    7. '.args' → logprob: -8.107196807861328
    8. 'int' → logprob: -8.607196807861328
    9. '_sort' → logprob: -8.607196807861328
    10. 'order' → logprob: -9.107196807861328

Token 79: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. '()' → logprob: -14.50000286102295
    3. ')
' → logprob: -14.62500286102295
    4. ']' → logprob: -14.75000286102295
    5. ' )' → logprob: -15.37500286102295
    6. '<|end|>' → logprob: -15.37500286102295
    7. '#' → logprob: -16.125001907348633
    8. '）' → logprob: -16.250001907348633
    9. '`)' → logprob: -16.625001907348633
    10. '))' → logprob: -16.750001907348633

Token 80: 'def' (ID: 1314)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9261609315872192
    2. 'l' → logprob: -1.3011609315872192
    3. 'low' → logprob: -1.4261609315872192
    4. 'def' → logprob: -2.6761608123779297
    5. 'lo' → logprob: -4.92616081237793
    6. 'ok' → logprob: -5.05116081237793
    7. 'ng' → logprob: -5.92616081237793
    8. 'L' → logprob: -6.42616081237793
    9. 'import' → logprob: -6.42616081237793
    10. '<|end|>' → logprob: -6.92616081237793

Token 81: ' test' (ID: 1746)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.718354344367981
    2. ' can' → logprob: -1.343354344367981
    3. ' possible' → logprob: -1.593354344367981
    4. ' is' → logprob: -4.468354225158691
    5. 'possible' → logprob: -4.593354225158691
    6. ' feasible' → logprob: -5.093354225158691
    7. 'check' → logprob: -5.343354225158691
    8. ' valid' → logprob: -5.343354225158691
    9. ' ok' → logprob: -5.593354225158691
    10. ' solve' → logprob: -6.093354225158691

Token 82: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013599788770079613
    2. '(x' → logprob: -4.513599872589111
    3. '(k' → logprob: -7.388599872589111
    4. '(A' → logprob: -8.263599395751953
    5. '(a' → logprob: -8.388599395751953
    6. '(T' → logprob: -8.513599395751953
    7. '(n' → logprob: -8.763599395751953
    8. '((' → logprob: -9.013599395751953
    9. '(i' → logprob: -9.138599395751953
    10. '(max' → logprob: -9.263599395751953

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030542423482984304
    2. ')' → logprob: -6.878054141998291
    3. '):
' → logprob: -7.003054141998291
    4. ' ):' → logprob: -7.253054141998291
    5. ',' → logprob: -8.00305461883545
    6. ':' → logprob: -10.00305461883545
    7. ',x' → logprob: -12.50305461883545
    8. '):
' → logprob: -12.75305461883545
    9. ' )' → logprob: -13.37805461883545
    10. ' ):
' → logprob: -13.37805461883545

Token 84: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2784433364868164
    2. '   ' → logprob: -1.4034433364868164
    3. ' s' → logprob: -2.2784433364868164
    4. ' cnt' → logprob: -2.7784433364868164
    5. ' left' → logprob: -2.7784433364868164
    6. ' ' → logprob: -3.1534433364868164
    7. ' low' → logprob: -3.2784433364868164
    8. ' return' → logprob: -3.9034433364868164
    9. ' count' → logprob: -4.028443336486816
    10. ' l' → logprob: -4.028443336486816

Token 85: ' return' (ID: 622)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2350622415542603
    2. 'cnt' → logprob: -1.2350622415542603
    3. 'total' → logprob: -2.6100621223449707
    4. 'left' → logprob: -2.8600621223449707
    5. 'tmp' → logprob: -3.2350621223449707
    6. ' s' → logprob: -3.4850621223449707
    7. 'time' → logprob: -3.6100621223449707
    8. 'l' → logprob: -3.8600621223449707
    9. 'count' → logprob: -3.9850621223449707
    10. 'return' (adapté à ' return') → logprob: -4.360062122344971

Token 86: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.3296656608581543
    2. '(np' → logprob: -1.4546656608581543
    3. ' np' → logprob: -3.3296656608581543
    4. ' (' → logprob: -5.204665660858154
    5. '(A' → logprob: -5.329665660858154
    6. '((' → logprob: -7.829665660858154
    7. 'all' → logprob: -8.954666137695312
    8. '(sum' → logprob: -9.079666137695312
    9. '(all' → logprob: -9.204666137695312
    10. 'sum' → logprob: -9.454666137695312

Token 87: '.maximum' (ID: 128678)
  Prédit: '.all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.all' → logprob: -0.17210887372493744
    2. '.sum' → logprob: -3.2971088886260986
    3. '.any' → logprob: -3.4221088886260986
    4. '.maximum' → logprob: -3.9221088886260986
    5. '.max' → logprob: -4.0471086502075195
    6. '.less' → logprob: -4.2971086502075195
    7. '.min' → logprob: -4.5471086502075195
    8. '.minimum' → logprob: -4.6721086502075195
    9. '.dot' → logprob: -5.4221086502075195
    10. '.count' → logprob: -5.6721086502075195

Token 88: '(' (ID: 7)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.49391257762908936
    2. '(' → logprob: -0.9939125776290894
    3. '0' → logprob: -4.118912696838379
    4. '(K' → logprob: -6.868912696838379
    5. '((' → logprob: -6.993912696838379
    6. '(np' → logprob: -7.118912696838379
    7. 'A' → logprob: -8.368912696838379
    8. '(F' → logprob: -8.493912696838379
    9. '(x' → logprob: -9.243912696838379
    10. '(a' → logprob: -11.243912696838379

Token 89: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05994337424635887
    2. '0' → logprob: -3.059943437576294
    3. '(A' → logprob: -5.184943199157715
    4. ' A' → logprob: -5.309943199157715
    5. '(' → logprob: -8.309943199157715
    6. ' ' → logprob: -8.934943199157715
    7. 'np' → logprob: -9.059943199157715
    8. 'F' → logprob: -9.559943199157715
    9. ' (' → logprob: -9.559943199157715
    10. 'K' → logprob: -9.684943199157715

Token 90: ',A' (ID: 59196)
  Prédit: ',A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.14493583142757416
    2. ',' → logprob: -2.2699358463287354
    3. ',(' → logprob: -3.5199358463287354
    4. ',F' → logprob: -6.894935607910156
    5. ' ,' → logprob: -7.644935607910156
    6. ',np' → logprob: -8.644935607910156
    7. ',K' → logprob: -9.144935607910156
    8. 'A' → logprob: -9.644935607910156
    9. ',x' → logprob: -10.144935607910156
    10. '(A' → logprob: -10.144935607910156

Token 91: '-x' (ID: 12651)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.29033803939819336
    2. '-' → logprob: -2.0403380393981934
    3. '-F' → logprob: -2.5403380393981934
    4. '-x' → logprob: -3.1653380393981934
    5. '-f' → logprob: -8.040338516235352
    6. '-K' → logprob: -8.540338516235352
    7. '-n' → logprob: -8.915338516235352
    8. '-A' → logprob: -9.415338516235352
    9. '-T' → logprob: -9.540338516235352
    10. '-N' → logprob: -9.665338516235352

Token 92: '//' (ID: 393)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.021905388683080673
    2. ')' → logprob: -4.521905422210693
    3. '*K' → logprob: -4.896905422210693
    4. 'K' → logprob: -6.271905422210693
    5. '//' → logprob: -7.271905422210693
    6. '*(' → logprob: -9.271904945373535
    7. ')**' → logprob: -9.396904945373535
    8. '*np' → logprob: -9.896904945373535
    9. '*A' → logprob: -10.021904945373535
    10. ' ).' → logprob: -10.021904945373535

Token 93: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.04914192482829094
    2. 'K' → logprob: -3.0491418838500977
    3. '(F' → logprob: -8.424141883850098
    4. '2' → logprob: -9.049141883850098
    5. ' F' → logprob: -9.549141883850098
    6. '(' → logprob: -10.049141883850098
    7. '(K' → logprob: -10.424141883850098
    8. '1' → logprob: -11.174141883850098
    9. '  ' → logprob: -11.549141883850098
    10. 'B' → logprob: -11.549141883850098

Token 94: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0013857127632945776
    2. ' ).' → logprob: -7.376385688781738
    3. ')' → logprob: -7.626385688781738
    4. ')).' → logprob: -8.751385688781738
    5. ')**' → logprob: -10.501385688781738
    6. '))' → logprob: -11.126385688781738
    7. '*' → logprob: -11.376385688781738
    8. '.clip' → logprob: -11.626385688781738
    9. '**' → logprob: -11.751385688781738
    10. ',' → logprob: -11.876385688781738

Token 95: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.014834849163889885
    2. 'clip' → logprob: -4.264834880828857
    3. 'astype' → logprob: -7.514834880828857
    4. 'dot' → logprob: -9.0148344039917
    5. 'max' → logprob: -13.2648344039917
    6. ' sum' → logprob: -14.0148344039917
    7. 'maximum' → logprob: -14.2648344039917
    8. 'prod' → logprob: -15.1398344039917
    9. ' clip' → logprob: -15.2648344039917
    10. 'tolist' → logprob: -15.2648344039917

Token 96: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003329925937578082
    2. '()>' → logprob: -5.753329753875732
    3. '()<' → logprob: -9.37833023071289
    4. '()
' → logprob: -11.25333023071289
    5. '()*' → logprob: -11.50333023071289
    6. '()==' → logprob: -11.87833023071289
    7. '>()' → logprob: -12.00333023071289
    8. '()

' → logprob: -12.00333023071289
    9. ' ()' → logprob: -12.25333023071289
    10. '()(' → logprob: -12.50333023071289

Token 97: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.021873075515031815
    2. '<=' → logprob: -3.8968729972839355
    3. ' ' → logprob: -7.0218729972839355
    4. '()' → logprob: -9.146873474121094
    5. '<|end|>' → logprob: -9.646873474121094
    6. '
' → logprob: -10.146873474121094
    7. ' (' → logprob: -10.271873474121094
    8. '(' → logprob: -10.271873474121094
    9. ')<=' → logprob: -10.271873474121094
    10. '0' → logprob: -11.021873474121094

Token 98: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00010795372509164736
    2. ' K' → logprob: -9.250107765197754
    3. '   ' → logprob: -11.625107765197754
    4. '	K' → logprob: -13.125107765197754
    5. ' ' → logprob: -14.125107765197754
    6. '  ' → logprob: -15.750107765197754
    7. '    ' → logprob: -17.00010871887207
    8. 'k' → logprob: -17.25010871887207
    9. '>K' → logprob: -18.62510871887207
    10. '       ' → logprob: -18.87510871887207

Token 99: '

' (ID: 279)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22323265671730042
    2. 'left' → logprob: -1.973232626914978
    3. 'lo' → logprob: -3.8482327461242676
    4. 'ok' → logprob: -3.9732327461242676
    5. 'low' → logprob: -4.348232746124268
    6. 'ng' → logprob: -5.098232746124268
    7. ' l' → logprob: -6.973232746124268
    8. 'lb' → logprob: -8.09823226928711
    9. ' lo' → logprob: -8.47323226928711
    10. '#' → logprob: -9.34823226928711

Token 100: 'left' (ID: 4530)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1872168481349945
    2. 'lo' → logprob: -2.3122167587280273
    3. '10' → logprob: -3.3122167587280273
    4. 'left' → logprob: -3.9372167587280273
    5. 'ok' → logprob: -5.187216758728027
    6. 'hi' → logprob: -5.937216758728027
    7. 'L' → logprob: -6.562216758728027
    8. 'ng' → logprob: -6.687216758728027
    9. '100' → logprob: -7.062216758728027
    10. ' l' → logprob: -7.687216758728027

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08165325224399567
    2. '=' → logprob: -2.581653356552124
    3. ',' → logprob: -5.956653118133545
    4. ' ,' → logprob: -8.831653594970703
    5. ' ' → logprob: -11.081653594970703
    6. '0' → logprob: -11.831653594970703
    7. '<|end|>' → logprob: -13.831653594970703
    8. ' =
' → logprob: -14.956653594970703
    9. '```' → logprob: -15.081653594970703
    10. '=int' → logprob: -15.331653594970703

Token 102: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20145446062088013
    2. '0' → logprob: -1.7014544010162354
    3. ' -' → logprob: -10.326454162597656
    4. ' ' → logprob: -12.701454162597656
    5. '-min' → logprob: -13.076454162597656
    6. 'np' → logprob: -14.201454162597656
    7. 'min' → logprob: -14.326454162597656
    8. '-f' → logprob: -14.701454162597656
    9. '-n' → logprob: -15.076454162597656
    10. 'max' → logprob: -15.201454162597656

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '10' → logprob: -12.000011444091797
    3. ' ' → logprob: -12.375011444091797
    4. '-' → logprob: -14.625011444091797
    5. '2' → logprob: -16.125011444091797
    6. '100' → logprob: -16.250011444091797
    7. '１' → logprob: -16.875011444091797
    8. 'np' → logprob: -17.000011444091797
    9. '(' → logprob: -17.312511444091797
    10. 'int' → logprob: -18.000011444091797

Token 104: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.030806198716163635
    2. ' right' → logprob: -3.780806303024292
    3. '
' → logprob: -5.030806064605713
    4. '```' → logprob: -7.905806064605713
    5. ',' → logprob: -8.405806541442871
    6. '[right' → logprob: -9.530806541442871
    7. '<|end|>' → logprob: -9.530806541442871
    8. ',right' → logprob: -9.655806541442871
    9. '+' → logprob: -10.155806541442871
    10. '1' → logprob: -10.280806541442871

Token 105: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.003939125686883926
    2. ' right' → logprob: -5.628939151763916
    3. '10' → logprob: -8.128938674926758
    4. '100' → logprob: -10.503938674926758
    5. 'max' → logprob: -11.378938674926758
    6. 'int' → logprob: -13.628938674926758
    7. 'left' → logprob: -14.253938674926758
    8. 'print' → logprob: -14.503938674926758
    9. ',right' → logprob: -14.753938674926758
    10. '```' → logprob: -15.003938674926758

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858759790658951
    2. '=' → logprob: -3.0485875606536865
    3. '=int' → logprob: -15.798587799072266
    4. ' ' → logprob: -17.173587799072266
    5. '=max' → logprob: -18.048587799072266
    6. '＝' → logprob: -18.298587799072266
    7. ',' → logprob: -18.923587799072266
    8. '=np' → logprob: -19.048587799072266
    9. '_=' → logprob: -19.798587799072266
    10. '=sum' → logprob: -20.298587799072266

Token 107: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.036838989704847336
    2. 'max' → logprob: -3.411839008331299
    3. 'int' → logprob: -6.786839008331299
    4. ' ' → logprob: -7.536839008331299
    5. 'A' → logprob: -7.661839008331299
    6. 'np' → logprob: -7.786839008331299
    7. '(' → logprob: -8.28683853149414
    8. '1' → logprob: -8.41183853149414
    9. ' max' → logprob: -9.53683853149414
    10. '(A' → logprob: -10.16183853149414

Token 108: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.051105938851833344
    2. 'max' → logprob: -3.0511059761047363
    3. 'int' → logprob: -6.301105976104736
    4. 'np' → logprob: -8.176105499267578
    5. 'A' → logprob: -8.801105499267578
    6. '1' → logprob: -9.176105499267578
    7. '(' → logprob: -9.551105499267578
    8. '(A' → logprob: -11.176105499267578
    9. '(max' → logprob: -11.176105499267578
    10. ' ' → logprob: -11.426105499267578

Token 109: '**' (ID: 410)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.08850879967212677
    2. '18' → logprob: -2.9635088443756104
    3. '16' → logprob: -3.5885088443756104
    4. '12' → logprob: -5.463508605957031
    5. '13' → logprob: -7.588508605957031
    6. '14' → logprob: -8.213508605957031
    7. '11' → logprob: -8.963508605957031
    8. '19' → logprob: -9.213508605957031
    9. '17' → logprob: -9.213508605957031
    10. '20' → logprob: -9.838508605957031

Token 110: '13' (ID: 1311)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.7119762897491455
    2. '18' → logprob: -1.0869762897491455
    3. '13' → logprob: -2.4619762897491455
    4. '15' → logprob: -2.5869762897491455
    5. '14' → logprob: -5.336976051330566
    6. '16' → logprob: -5.461976051330566
    7. '20' → logprob: -6.711976051330566
    8. '1' → logprob: -7.461976051330566
    9. '19' → logprob: -7.961976051330566
    10. '17' → logprob: -8.711976051330566

Token 111: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00011415231710998341
    2. '
' → logprob: -9.250114440917969
    3. ' while' → logprob: -11.125114440917969
    4. '<|end|>' → logprob: -13.375114440917969
    5. 'While' → logprob: -14.250114440917969
    6. '```' → logprob: -14.375114440917969
    7. '+' → logprob: -16.12511444091797
    8. 'print' → logprob: -16.87511444091797
    9. '``' → logprob: -16.87511444091797
    10. '

' → logprob: -17.37511444091797

Token 112: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -8.895480277715251e-06
    2. ' while' → logprob: -12.375008583068848
    3. 'mid' → logprob: -12.875008583068848
    4. '
' → logprob: -13.625008583068848
    5. 'While' → logprob: -14.250008583068848
    6. '<|end|>' → logprob: -15.500008583068848
    7. '```' → logprob: -16.250009536743164
    8. 'middle' → logprob: -16.875009536743164
    9. 'for' → logprob: -18.250009536743164
    10. '>>>' → logprob: -18.625009536743164

Token 113: ' left' (ID: 3561)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6974735260009766
    2. ' left' → logprob: -0.6974735260009766
    3. 'right' → logprob: -5.697473526000977
    4. 'left' → logprob: -6.947473526000977
    5. '(left' → logprob: -14.072473526000977
    6. '(right' → logprob: -14.822473526000977
    7. '	left' → logprob: -16.197473526000977
    8. '	right' → logprob: -16.197473526000977
    9. ' (' → logprob: -16.822473526000977
    10. '右' → logprob: -17.197473526000977

Token 114: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008397906087338924
    2. ' +' → logprob: -5.133398056030273
    3. '<' → logprob: -6.008398056030273
    4. ' <' → logprob: -12.383398056030273
    5. '<len' → logprob: -14.008398056030273
    6. '<int' → logprob: -14.258398056030273
    7. '<m' → logprob: -14.508398056030273
    8. '+m' → logprob: -15.008398056030273
    9. '＋' → logprob: -15.133398056030273
    10. '<data' → logprob: -15.883398056030273

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6776029699249193e-05
    2. ' ' → logprob: -11.37502670288086
    3. '<' → logprob: -11.50002670288086
    4. ' <' → logprob: -12.25002670288086
    5. 'right' → logprob: -15.87502670288086
    6. '<|end|>' → logprob: -16.12502670288086
    7. '```' → logprob: -17.12502670288086
    8. '+' → logprob: -18.12502670288086
    9. '<body' → logprob: -18.37502670288086
    10. '<th' → logprob: -18.50002670288086

Token 116: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.001516768941655755
    2. ' <' → logprob: -6.501516819000244
    3. '<th' → logprob: -11.501516342163086
    4. '<n' → logprob: -13.376516342163086
    5. '<int' → logprob: -14.376516342163086
    6. '<len' → logprob: -14.626516342163086
    7. '<data' → logprob: -15.001516342163086
    8. '<m' → logprob: -15.001516342163086
    9. '<size' → logprob: -16.126516342163086
    10. '<num' → logprob: -16.126516342163086

Token 117: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0007099286303855479
    2. ' right' → logprob: -7.2507100105285645
    3. '	right' → logprob: -17.375709533691406
    4. '[right' → logprob: -18.250709533691406
    5. ' ' → logprob: -18.500709533691406
    6. '(right' → logprob: -19.750709533691406
    7. 'rightness' → logprob: -19.875709533691406
    8. 'Right' → logprob: -20.000709533691406
    9. ':right' → logprob: -20.000709533691406
    10. '=' → logprob: -20.500709533691406

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02055368572473526
    2. ':
' → logprob: -3.8955535888671875
    3. '   ' → logprob: -12.395553588867188
    4. ' :' → logprob: -12.395553588867188
    5. ':

' → logprob: -13.770553588867188
    6. ' :
' → logprob: -13.895553588867188
    7. '):
' → logprob: -14.395553588867188
    8. '):' → logprob: -15.645553588867188
    9. ':
' → logprob: -15.645553588867188
    10. '<|end|>' → logprob: -15.895553588867188

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5709074139595032
    2. ' mid' → logprob: -0.9459074139595032
    3. 'mid' → logprob: -3.0709073543548584
    4. ' ' → logprob: -9.445907592773438
    5. 'm' → logprob: -9.695907592773438
    6. '  ' → logprob: -10.070907592773438
    7. ' middle' → logprob: -11.195907592773438
    8. ' midpoint' → logprob: -11.320907592773438
    9. '_mid' → logprob: -11.445907592773438
    10. '    ' → logprob: -11.445907592773438

Token 120: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.015712542459368706
    2. ' mid' → logprob: -4.265712738037109
    3. '   ' → logprob: -6.515712738037109
    4. 'm' → logprob: -10.51571273803711
    5. 'middle' → logprob: -10.64071273803711
    6. ' ' → logprob: -11.26571273803711
    7. '[mid' → logprob: -14.26571273803711
    8. 'med' → logprob: -14.26571273803711
    9. 'mi' → logprob: -14.64071273803711
    10. '    
' → logprob: -15.14071273803711

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890751957893372
    2. '=' → logprob: -2.5789074897766113
    3. '=(' → logprob: -11.45390796661377
    4. ' =(' → logprob: -12.07890796661377
    5. '=int' → logprob: -14.07890796661377
    6. ' ' → logprob: -15.32890796661377
    7. '<|end|>' → logprob: -16.328907012939453
    8. ')' → logprob: -16.453907012939453
    9. '＝' → logprob: -16.703907012939453
    10. '=((' → logprob: -16.828907012939453

Token 122: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.16042853891849518
    2. ' (' → logprob: -1.910428524017334
    3. '(right' → logprob: -8.535429000854492
    4. ' ' → logprob: -12.410429000854492
    5. '(mid' → logprob: -13.285429000854492
    6. '   ' → logprob: -14.160429000854492
    7. '[left' → logprob: -14.785429000854492
    8. '(last' → logprob: -15.035429000854492
    9. '(lhs' → logprob: -15.785429000854492
    10. '(next' → logprob: -15.910429000854492

Token 123: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -2.2961512513575144e-05
    2. ' left' → logprob: -11.000022888183594
    3. 'right' → logprob: -12.000022888183594
    4. '(left' → logprob: -19.875022888183594
    5. '	left' → logprob: -20.250022888183594
    6. 'lef' → logprob: -21.625022888183594
    7. ' ' → logprob: -21.750022888183594
    8. '_left' → logprob: -22.000022888183594
    9. ' lef' → logprob: -22.125022888183594
    10. '[left' → logprob: -22.125022888183594

Token 124: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1002068892121315
    2. ' +' → logprob: -2.3502068519592285
    3. '＋' → logprob: -16.35020637512207
    4. ' +
' → logprob: -16.85020637512207
    5. '+
' → logprob: -17.22520637512207
    6. '+self' → logprob: -18.85020637512207
    7. ' ' → logprob: -18.97520637512207
    8. ' plus' → logprob: -19.10020637512207
    9. '```' → logprob: -19.35020637512207
    10. '
' → logprob: -19.47520637512207

Token 125: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.015644945204257965
    2. '1' → logprob: -4.5156450271606445
    3. ' right' → logprob: -5.3906450271606445
    4. ' ' → logprob: -11.515645027160645
    5. '+' → logprob: -11.640645027160645
    6. ')' → logprob: -12.890645027160645
    7. '[right' → logprob: -13.015645027160645
    8. '```' → logprob: -13.640645027160645
    9. '
' → logprob: -14.265645027160645
    10. '	right' → logprob: -14.265645027160645

Token 126: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5768737196922302
    2. ')//' → logprob: -0.8268737196922302
    3. ')>>' → logprob: -7.076873779296875
    4. ' )' → logprob: -9.326873779296875
    5. '//' → logprob: -15.326873779296875
    6. ')#' → logprob: -16.201873779296875
    7. ')
' → logprob: -16.451873779296875
    8. '）' → logprob: -18.076873779296875
    9. '>>' → logprob: -18.701873779296875
    10. ' ' → logprob: -19.201873779296875

Token 127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.625001907348633
    4. '۲' → logprob: -19.375001907348633
    5. '２' → logprob: -20.000001907348633
    6. '२' → logprob: -20.875001907348633
    7. '২' → logprob: -21.000001907348633
    8. '   ' → logprob: -21.250001907348633
    9. '<|end|>' → logprob: -21.500001907348633
    10. '٢' → logprob: -21.562501907348633

Token 128: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013142932206392288
    2. ' if' → logprob: -5.013143062591553
    3. 'if' → logprob: -5.513143062591553
    4. '<|end|>' → logprob: -7.388143062591553
    5. '
' → logprob: -8.013142585754395
    6. '   ' → logprob: -8.013142585754395
    7. ' 
' → logprob: -8.138142585754395
    8. '  
' → logprob: -8.263142585754395
    9. '    
' → logprob: -8.388142585754395
    10. ' ' → logprob: -8.638142585754395

Token 129: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6949134469032288
    2. '   ' → logprob: -0.8199134469032288
    3. ' if' → logprob: -2.819913387298584
    4. '	if' → logprob: -7.819913387298584
    5. '<|end|>' → logprob: -8.819913864135742
    6. '
' → logprob: -9.194913864135742
    7. '       ' → logprob: -10.069913864135742
    8. '    
' → logprob: -10.444913864135742
    9. '```' → logprob: -10.694913864135742
    10. ' ' → logprob: -10.944913864135742

Token 130: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.049272552132606506
    2. ' if' → logprob: -3.0492725372314453
    3. '   ' → logprob: -7.299272537231445
    4. '
' → logprob: -12.299272537231445
    5. '	if' → logprob: -12.674272537231445
    6. '    
' → logprob: -14.424272537231445
    7. '    ' → logprob: -15.049272537231445
    8. ' ' → logprob: -15.549272537231445
    9. 'If' → logprob: -15.799272537231445
    10. '  ' → logprob: -17.174272537231445

Token 131: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.25192990899086
    2. ' test' → logprob: -1.5019298791885376
    3. '(test' → logprob: -14.751930236816406
    4. '   ' → logprob: -15.751930236816406
    5. '	test' → logprob: -16.001930236816406
    6. ' ' → logprob: -16.876930236816406
    7. ')test' → logprob: -17.376930236816406
    8. '[test' → logprob: -18.251930236816406
    9. ' not' → logprob: -18.376930236816406
    10. ':test' → logprob: -18.376930236816406

Token 132: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -3.128163257315464e-07
    2. '[mid' → logprob: -15.875
    3. '(' → logprob: -16.0
    4. ' (' → logprob: -17.125
    5. 'mid' → logprob: -18.375
    6. '(m' → logprob: -19.0
    7. ')' → logprob: -20.625
    8. '(min' → logprob: -20.625
    9. '(mi' → logprob: -20.625
    10. ' mid' → logprob: -20.875

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029770394787192345
    2. '):
' → logprob: -3.5297703742980957
    3. ')' → logprob: -11.279770851135254
    4. ' ):' → logprob: -12.404770851135254
    5. ':' → logprob: -13.279770851135254
    6. '):
' → logprob: -13.904770851135254
    7. '):

' → logprob: -14.779770851135254
    8. ' ):
' → logprob: -16.404769897460938
    9. '=' → logprob: -18.529769897460938
    10. ':
' → logprob: -18.654769897460938

Token 134: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006796844303607941
    2. ' right' → logprob: -5.006796836853027
    3. '   ' → logprob: -9.631796836853027
    4. '	right' → logprob: -11.506796836853027
    5. '
' → logprob: -12.256796836853027
    6. '[right' → logprob: -15.131796836853027
    7. 'left' → logprob: -15.506796836853027
    8. '    
' → logprob: -15.506796836853027
    9. ':right' → logprob: -15.881796836853027
    10. '.right' → logprob: -16.506797790527344

Token 135: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.00015908108616713434
    2. ' right' → logprob: -8.75015926361084
    3. '	right' → logprob: -15.25015926361084
    4. '
' → logprob: -15.62515926361084
    5. '   ' → logprob: -15.62515926361084
    6. 'r' → logprob: -17.750158309936523
    7. '[right' → logprob: -18.625158309936523
    8. ':right' → logprob: -19.625158309936523
    9. 'rightness' → logprob: -19.750158309936523
    10. '    
' → logprob: -19.750158309936523

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575939416885376
    2. '=' → logprob: -0.825939416885376
    3. ' =
' → logprob: -18.325939178466797
    4. '＝' → logprob: -18.575939178466797
    5. '=
' → logprob: -19.450939178466797
    6. '<|end|>' → logprob: -19.700939178466797
    7. '=end' → logprob: -20.450939178466797
    8. ' ' → logprob: -20.450939178466797
    9. ' =)' → logprob: -20.825939178466797
    10. '.=' → logprob: -21.200939178466797

Token 137: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.005233763717114925
    2. ' mid' → logprob: -5.2552337646484375
    3. '(mid' → logprob: -17.505233764648438
    4. '[mid' → logprob: -18.380233764648438
    5. '_mid' → logprob: -22.505233764648438
    6. '
' → logprob: -22.755233764648438
    7. 'middle' → logprob: -22.755233764648438
    8. 'm' → logprob: -22.755233764648438
    9. '   ' → logprob: -22.755233764648438
    10. 'midt' → logprob: -22.880233764648438

Token 138: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5046530961990356
    2. '   ' → logprob: -1.0046530961990356
    3. ' else' → logprob: -3.504652976989746
    4. '	else' → logprob: -9.879652976989746
    5. '
' → logprob: -13.129652976989746
    6. '  ' → logprob: -13.629652976989746
    7. '_else' → logprob: -14.004652976989746
    8. '```' → logprob: -14.879652976989746
    9. '    
' → logprob: -15.879652976989746
    10. ' ' → logprob: -16.254653930664062

Token 139: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20300151407718658
    2. '   ' → logprob: -1.7030014991760254
    3. ' else' → logprob: -6.453001499176025
    4. '	else' → logprob: -11.453001976013184
    5. '```' → logprob: -14.953001976013184
    6. '  ' → logprob: -16.578001022338867
    7. '
' → logprob: -17.078001022338867
    8. ' ' → logprob: -17.328001022338867
    9. '_else' → logprob: -17.328001022338867
    10. '       ' → logprob: -17.828001022338867

Token 140: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.008631584234535694
    2. '   ' → logprob: -5.008631706237793
    3. ' else' → logprob: -6.258631706237793
    4. '	else' → logprob: -14.633631706237793
    5. '```' → logprob: -16.508630752563477
    6. '
' → logprob: -17.883630752563477
    7. '       ' → logprob: -19.508630752563477
    8. ' ' → logprob: -19.508630752563477
    9. '_else' → logprob: -19.758630752563477
    10. '  ' → logprob: -19.883630752563477

Token 141: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039430730044841766
    2. 'left' → logprob: -3.289430618286133
    3. ' left' → logprob: -7.039430618286133
    4. '   ' → logprob: -8.039430618286133
    5. ':
' → logprob: -10.039430618286133
    6. ':left' → logprob: -10.164430618286133
    7. ':' → logprob: -10.414430618286133
    8. '[left' → logprob: -10.539430618286133
    9. '	left' → logprob: -10.539430618286133
    10. '(left' → logprob: -11.914430618286133

Token 142: '       ' (ID: 309)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.06861290335655212
    2. '       ' → logprob: -3.318612813949585
    3. '   ' → logprob: -3.818612813949585
    4. ' left' → logprob: -4.818613052368164
    5. '	left' → logprob: -9.693613052368164
    6. '[left' → logprob: -12.068613052368164
    7. ',left' → logprob: -13.068613052368164
    8. '.left' → logprob: -13.943613052368164
    9. ' ' → logprob: -14.818613052368164
    10. '(left' → logprob: -15.068613052368164

Token 143: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -2.176947600673884e-05
    2. ' left' → logprob: -10.750021934509277
    3. '	left' → logprob: -15.750021934509277
    4. '   ' → logprob: -16.37502098083496
    5. '[left' → logprob: -18.12502098083496
    6. '       ' → logprob: -20.25002098083496
    7. ':left' → logprob: -20.62502098083496
    8. '_left' → logprob: -21.37502098083496
    9. '  ' → logprob: -21.62502098083496
    10. '.left' → logprob: -21.75002098083496

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132617771625519
    2. ' =' → logprob: -1.3132617473602295
    3. '＝' → logprob: -17.438261032104492
    4. '=
' → logprob: -20.188261032104492
    5. ' =
' → logprob: -20.313261032104492
    6. '.=' → logprob: -20.438261032104492
    7. '=end' → logprob: -20.938261032104492
    8. ' =)' → logprob: -21.313261032104492
    9. '=int' → logprob: -21.438261032104492
    10. '=m' → logprob: -21.563261032104492

Token 145: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00861456897109747
    2. ' mid' → logprob: -4.758614540100098
    3. '[mid' → logprob: -17.258615493774414
    4. '(mid' → logprob: -19.008615493774414
    5. ' ' → logprob: -19.508615493774414
    6. 'm' → logprob: -21.008615493774414
    7. '
' → logprob: -21.383615493774414
    8. '_mid' → logprob: -21.633615493774414
    9. 'middle' → logprob: -21.758615493774414
    10. 'midt' → logprob: -22.008615493774414

Token 146: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02328193560242653
    2. '
' → logprob: -3.773282051086426
    3. '

' → logprob: -10.648282051086426
    4. '
' → logprob: -11.648282051086426
    5. ' print' → logprob: -13.273282051086426
    6. ' 
' → logprob: -14.148282051086426
    7. ')
' → logprob: -14.648282051086426
    8. '  
' → logprob: -15.398282051086426
    9. '    
' → logprob: -15.648282051086426
    10. ')' → logprob: -15.648282051086426

Token 147: 'answer' (ID: 17021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.868328920158092e-05
    2. '
' → logprob: -11.375028610229492
    3. ' print' → logprob: -11.875028610229492
    4. 'right' → logprob: -11.875028610229492
    5. 'else' → logprob: -12.750028610229492
    6. '```' → logprob: -15.875028610229492
    7. '#print' → logprob: -16.750028610229492
    8. 'continue' → logprob: -17.250028610229492
    9. '+' → logprob: -17.375028610229492
    10. '

' → logprob: -17.875028610229492

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.538042068481445
    4. '=int' → logprob: -17.038042068481445
    5. ' =
' → logprob: -17.413042068481445
    6. ' ' → logprob: -17.913042068481445
    7. '=end' → logprob: -17.913042068481445
    8. '＝' → logprob: -17.913042068481445
    9. ' =)' → logprob: -18.413042068481445
    10. ')' → logprob: -18.913042068481445

Token 149: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3868727385997772
    2. ' right' → logprob: -1.1368727684020996
    3. 'str' → logprob: -13.636872291564941
    4. ' str' → logprob: -14.636872291564941
    5. 'int' → logprob: -17.011873245239258
    6. '(right' → logprob: -17.761873245239258
    7. '	right' → logprob: -17.886873245239258
    8. ' ' → logprob: -18.511873245239258
    9. '[right' → logprob: -18.886873245239258
    10. ',right' → logprob: -19.011873245239258

Token 150: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031899516470730305
    2. '
' → logprob: -5.753190040588379
    3. ' print' → logprob: -12.003190040588379
    4. '```' → logprob: -12.503190040588379
    5. '\n' → logprob: -14.253190040588379
    6. '
' → logprob: -14.378190040588379
    7. ' 
' → logprob: -14.878190040588379
    8. 'import' → logprob: -15.503190040588379
    9. '#print' → logprob: -15.628190040588379
    10. '

' → logprob: -15.878190040588379

Token 151: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.054500666621607e-06
    2. '
' → logprob: -12.75000286102295
    3. '
' → logprob: -16.750003814697266
    4. '```' → logprob: -16.875003814697266
    5. ' print' → logprob: -17.875003814697266
    6. '#print' → logprob: -19.125003814697266
    7. 'import' → logprob: -20.375003814697266
    8. '

' → logprob: -21.125003814697266
    9. '\n' → logprob: -21.125003814697266
    10. 'printf' → logprob: -21.875003814697266

Token 152: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -1.7120533811976202e-05
    2. '(' → logprob: -11.250017166137695
    3. 'answer' → logprob: -12.500017166137695
    4. '(ans' → logprob: -15.125017166137695
    5. ' (' → logprob: -16.750017166137695
    6. '(right' → logprob: -17.250017166137695
    7. '(question' → logprob: -18.375017166137695
    8. '(
' → logprob: -19.000017166137695
    9. '(f' → logprob: -19.125017166137695
    10. '()' → logprob: -19.750017166137695

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.375
    3. ')
' → logprob: -16.375
    4. ')`' → logprob: -17.125
    5. '`)' → logprob: -17.5
    6. '))' → logprob: -18.375
    7. '）' → logprob: -19.875
    8. '')' → logprob: -19.875
    9. '```' → logprob: -20.0
    10. '}' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 151
Tokens correctement prédits (1ère position, stricte): 66
Tokens correctement prédits (1ère position, avec adaptation): 71
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 43.71%
Précision adaptée (1ère position): 47.02%
Précision (top 10): 86.75%
================================================================================
