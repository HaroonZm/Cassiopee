================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import lru_cache

MOD = 10**9 + 7
N = int(input())

@lru_cache(maxsize=None)
def dp(n, a, b, c, d):
    if n == 3:
        if a == 0:
            # Remove forbidden patterns at initialization
            if (b, c, d) in [(0, 1, 2), (1, 0, 2), (0, 2, 1)]:
                return 0
            return 1
        return 0
    total = 0
    # Prune forbidden substrings early
    s1 = (b, c, d)
    s2 = (a, c, d)
    s3 = (a, b, d)
    if s1 in [(0, 1, 2), (1, 0, 2), (0, 2, 1)] or \
       s2 == (0, 1, 2) or s3 == (0, 1, 2):
        return 0
    for x in range(4):
        total = (total + dp(n-1, x, a, b, c)) % MOD
    return total

result = sum(dp(N, i, j, k, l) for i in range(4) for j in range(4) for k in range(4) for l in range(4)) % MOD
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' l' (ID: 305)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.001011015148833394
    2. 'r' → logprob: -7.626010894775391
    3. 'z' → logprob: -8.62601089477539
    4. 'partial' → logprob: -8.87601089477539
    5. 'ruz' → logprob: -9.62601089477539
    6. 'wrap' → logprob: -9.62601089477539
    7. 'reduce' → logprob: -10.25101089477539
    8. 'ambda' → logprob: -12.37601089477539
    9. 'a' → logprob: -12.50101089477539
    10. '```' → logprob: -12.50101089477539

Token 5: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.006116371601819992
    2. 'cache' → logprob: -5.1311163902282715
    3. '_c' → logprob: -9.256115913391113
    4. 'c' → logprob: -9.881115913391113
    5. 'ca' → logprob: -11.756115913391113
    6. '_' → logprob: -12.256115913391113
    7. '_ca' → logprob: -12.256115913391113
    8. 'ch' → logprob: -12.506115913391113
    9. '_cached' → logprob: -12.631115913391113
    10. '\' → logprob: -12.881115913391113

Token 6: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006366224493831396
    2. '\(' → logprob: -5.75636625289917
    3. '```' → logprob: -6.88136625289917
    4. '@' → logprob: -7.25636625289917
    5. 'def' → logprob: -7.50636625289917
    6. '\' → logprob: -7.88136625289917
    7. '(
' → logprob: -7.88136625289917
    8. 'd' → logprob: -10.506365776062012
    9. '`' → logprob: -10.756365776062012
    10. '\n' → logprob: -11.131365776062012

Token 7: 'MOD' (ID: 52135)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.03697146102786064
    2. 'def' → logprob: -4.036971569061279
    3. '(' → logprob: -4.161971569061279
    4. '\' → logprob: -6.786971569061279
    5. '```' → logprob: -6.786971569061279
    6. '\(' → logprob: -8.786971092224121
    7. '@
' → logprob: -8.911971092224121
    8. 'd' → logprob: -8.911971092224121
    9. '#' → logprob: -9.411971092224121
    10. '(
' → logprob: -9.661971092224121

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020488515496253967
    2. '_' → logprob: -4.020488739013672
    3. ' =' → logprob: -6.270488739013672
    4. '_=' → logprob: -8.145488739013672
    5. '`' → logprob: -10.020488739013672
    6. '```' → logprob: -10.020488739013672
    7. '=

' → logprob: -11.270488739013672
    8. '=_' → logprob: -11.270488739013672
    9. ')' → logprob: -12.395488739013672
    10. ',' → logprob: -12.520488739013672

Token 9: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1632961630821228
    2. '10' → logprob: -1.9132962226867676
    3. '100' → logprob: -5.788296222686768
    4. '1' → logprob: -13.03829574584961
    5. '```' → logprob: -13.78829574584961
    6. 'int' → logprob: -14.78829574584961
    7. '`' → logprob: -15.66329574584961
    8. '_' → logprob: -16.91329574584961
    9. ' ' → logprob: -16.91329574584961
    10. ' int' → logprob: -17.16329574584961

Token 10: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023257825523614883
    2. '100' → logprob: -3.7732577323913574
    3. '1' → logprob: -11.523258209228516
    4. ' ' → logprob: -13.523258209228516
    5. '998' → logprob: -14.273258209228516
    6. '```' → logprob: -15.023258209228516
    7. 'int' → logprob: -16.398258209228516
    8. '`' → logprob: -17.898258209228516
    9. '123' → logprob: -19.273258209228516
    10. '999' → logprob: -19.273258209228516

Token 11: '**' (ID: 410)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.901414692401886
    2. '```' → logprob: -1.6514146327972412
    3. '\' → logprob: -1.7764146327972412
    4. '*' → logprob: -3.026414632797241
    5. '%' → logprob: -3.151414632797241
    6. '#' → logprob: -3.651414632797241
    7. '`' → logprob: -3.901414632797241
    8. '**' → logprob: -4.02641487121582
    9. '\n' → logprob: -4.27641487121582
    10. ':' → logprob: -4.52641487121582

Token 12: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '```' → logprob: -16.75
    3. '09' → logprob: -18.5
    4. ' ' → logprob: -20.125
    5. '``' → logprob: -21.25
    6. '+' → logprob: -22.125
    7. '   ' → logprob: -22.25
    8. '10' → logprob: -23.125
    9. ' ' → logprob: -23.375
    10. '**' → logprob: -23.75

Token 13: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.370294846012257e-05
    2. ' +' → logprob: -10.250043869018555
    3. '7' → logprob: -11.875043869018555
    4. '+

' → logprob: -14.375043869018555
    5. '+
' → logprob: -14.875043869018555
    6. '```' → logprob: -15.250043869018555
    7. '＋' → logprob: -16.125043869018555
    8. '+</' → logprob: -17.875043869018555
    9. ' ' → logprob: -18.875043869018555
    10. ' +
' → logprob: -19.000043869018555

Token 14: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '+' → logprob: -15.250003814697266
    4. '```' → logprob: -16.750003814697266
    5. '07' → logprob: -17.625003814697266
    6. '9' → logprob: -17.750003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '37' → logprob: -19.250003814697266
    9. ' ' → logprob: -19.625003814697266
    10. '``' → logprob: -20.000003814697266

Token 15: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -16.875
    3. ' ' → logprob: -17.75
    4. '```' → logprob: -18.25
    5. '07' → logprob: -18.75
    6. '9' → logprob: -19.75
    7. '   ' → logprob: -20.125
    8. '37' → logprob: -20.375
    9. '``' → logprob: -21.3125
    10. '87' → logprob: -21.9375

Token 16: '
' (ID: 198)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.4703630805015564
    2. '
' → logprob: -1.7203631401062012
    3. '```' → logprob: -2.220363140106201
    4. '

' → logprob: -2.720363140106201
    5. '\' → logprob: -4.720363140106201
    6. 'def' → logprob: -5.095363140106201
    7. '
' → logprob: -5.470363140106201
    8. '' → logprob: -7.095363140106201
    9. '``' → logprob: -7.220363140106201
    10. '\n' → logprob: -7.470363140106201

Token 17: 'N' (ID: 45)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.6671489477157593
    2. '

' → logprob: -1.5421489477157593
    3. '
' → logprob: -1.7921489477157593
    4. '```' → logprob: -2.292149066925049
    5. '
' → logprob: -5.917149066925049
    6. '``' → logprob: -7.042149066925049
    7. 'def' → logprob: -7.292149066925049
    8. '\' → logprob: -7.792149066925049
    9. '\n' → logprob: -8.79214859008789
    10. '`' → logprob: -9.04214859008789

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13278590142726898
    2. '=' → logprob: -2.2577857971191406
    3. '_' → logprob: -4.757785797119141
    4. ' ' → logprob: -4.882785797119141
    5. ',' → logprob: -6.757785797119141
    6. '.' → logprob: -6.882785797119141
    7. ':' → logprob: -8.00778579711914
    8. ')' → logprob: -8.50778579711914
    9. '[' → logprob: -8.63278579711914
    10. '+' → logprob: -9.50778579711914

Token 19: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02230767160654068
    2. '10' → logprob: -4.147307872772217
    3. '100' → logprob: -5.147307872772217
    4. ' int' → logprob: -8.522307395935059
    5. 'int' → logprob: -9.147307395935059
    6. '20' → logprob: -10.397307395935059
    7. '50' → logprob: -10.522307395935059
    8. '1' → logprob: -11.022307395935059
    9. '200' → logprob: -11.022307395935059
    10. '5' → logprob: -11.147307395935059

Token 20: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.18118564784526825
    2. '(' → logprob: -1.8061856031417847
    3. 'input' → logprob: -6.806185722351074
    4. '('' → logprob: -8.556185722351074
    5. '()' → logprob: -9.306185722351074
    6. '(
' → logprob: -11.181185722351074
    7. '("' → logprob: -11.306185722351074
    8. '(N' → logprob: -12.056185722351074
    9. ' (' → logprob: -13.181185722351074
    10. '=input' → logprob: -13.181185722351074

Token 21: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13452602922916412
    2. '())' → logprob: -2.259526014328003
    3. '()' → logprob: -3.884526014328003
    4. '(' → logprob: -7.259526252746582
    5. '))' → logprob: -8.884526252746582
    6. '`)' → logprob: -10.134526252746582
    7. '")' → logprob: -12.009526252746582
    8. ' )' → logprob: -12.384526252746582
    9. '')' → logprob: -12.509526252746582
    10. ' ())' → logprob: -12.884526252746582

Token 22: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.003058403730392456
    2. 'dp' → logprob: -5.878058433532715
    3. '```' → logprob: -8.503058433532715
    4. 'DP' → logprob: -10.628058433532715
    5. 'def' → logprob: -12.628058433532715
    6. 'for' → logprob: -12.753058433532715
    7. 'cache' → logprob: -12.878058433532715
    8. '@
' → logprob: -13.128058433532715
    9. '``' → logprob: -13.253058433532715
    10. 'result' → logprob: -13.253058433532715

Token 23: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. '```' → logprob: -18.75
    3. ' l' → logprob: -20.0
    4. '@' → logprob: -20.25
    5. '	l' → logprob: -21.125
    6. '`' → logprob: -21.125
    7. 'lr' → logprob: -21.25
    8. 'staticmethod' → logprob: -21.375
    9. ''l' → logprob: -21.875
    10. '1' → logprob: -22.0

Token 24: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006070063100196421
    2. 'ru' → logprob: -7.625607013702393
    3. '_r' → logprob: -9.625606536865234
    4. '@' → logprob: -11.000606536865234
    5. '```' → logprob: -11.875606536865234
    6. '_' → logprob: -12.125606536865234
    7. '	r' → logprob: -12.938106536865234
    8. '_ru' → logprob: -13.188106536865234
    9. '`' → logprob: -13.438106536865234
    10. '_cache' → logprob: -13.875606536865234

Token 25: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -7.862962229410186e-05
    2. '_cached' → logprob: -9.750078201293945
    3. '_c' → logprob: -11.750078201293945
    4. 'cache' → logprob: -12.375078201293945
    5. '_' → logprob: -12.500078201293945
    6. 'Cache' → logprob: -14.000078201293945
    7. '@' → logprob: -14.000078201293945
    8. ' _' → logprob: -14.500078201293945
    9. '```' → logprob: -14.500078201293945
    10. '_CACHE' → logprob: -15.000078201293945

Token 26: '(max' (ID: 17178)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.045818835496902466
    2. '(None' → logprob: -3.54581880569458
    3. '()' → logprob: -5.29581880569458
    4. '()
' → logprob: -5.67081880569458
    5. '
' → logprob: -6.04581880569458
    6. '(' → logprob: -6.04581880569458
    7. '(max' → logprob: -6.67081880569458
    8. ' def' → logprob: -7.79581880569458
    9. 'None' → logprob: -7.92081880569458
    10. '(def' → logprob: -8.670819282531738

Token 27: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.09540432691574097
    2. '_size' → logprob: -2.4704043865203857
    3. '=' → logprob: -5.845404148101807
    4. '_cache' → logprob: -6.470404148101807
    5. '=None' → logprob: -6.720404148101807
    6. ')' → logprob: -7.845404148101807
    7. '=_' → logprob: -9.345404624938965
    8. '_=' → logprob: -10.095404624938965
    9. '_SIZE' → logprob: -10.220404624938965
    10. '_' → logprob: -10.220404624938965

Token 28: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.25196772813796997
    2. '=' → logprob: -1.5019676685333252
    3. 'None' → logprob: -10.251967430114746
    4. '=

' → logprob: -13.626967430114746
    5. '=
' → logprob: -14.751967430114746
    6. '=`' → logprob: -15.001967430114746
    7. '(None' → logprob: -15.501967430114746
    8. ')=' → logprob: -15.626967430114746
    9. '=}' → logprob: -15.876967430114746
    10. ')' → logprob: -16.001968383789062

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31390002369880676
    2. ')
' → logprob: -1.3138999938964844
    3. 'def' → logprob: -7.438899993896484
    4. ')
' → logprob: -10.188899993896484
    5. ')`
' → logprob: -12.938899993896484
    6. ')`' → logprob: -13.063899993896484
    7. '`)' → logprob: -13.563899993896484
    8. ')\' → logprob: -13.938899993896484
    9. '```' → logprob: -13.938899993896484
    10. '
' → logprob: -14.188899993896484

Token 30: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014478032244369388
    2. '
' → logprob: -8.875144958496094
    3. ' def' → logprob: -12.375144958496094
    4. '```' → logprob: -15.750144958496094
    5. '\' → logprob: -16.000144958496094
    6. '0' → logprob: -16.000144958496094
    7. '(def' → logprob: -16.125144958496094
    8. 'de' → logprob: -16.875144958496094
    9. '1' → logprob: -17.250144958496094
    10. '
' → logprob: -17.500144958496094

Token 31: ' dp' (ID: 21546)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.37631916999816895
    2. ' factorial' → logprob: -2.376319169998169
    3. ' f' → logprob: -2.626319169998169
    4. ' fib' → logprob: -3.001319169998169
    5. ' fibonacci' → logprob: -3.876319169998169
    6. ' ways' → logprob: -4.25131893157959
    7. ' dp' → logprob: -4.62631893157959
    8. 'f' → logprob: -4.62631893157959
    9. 'count' → logprob: -4.87631893157959
    10. ' dfs' → logprob: -4.87631893157959

Token 32: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0242555141448975
    2. '(i' → logprob: -1.0242555141448975
    3. '(' → logprob: -1.2742555141448975
    4. '(k' → logprob: -6.899255752563477
    5. '(index' → logprob: -7.774255752563477
    6. ' (' → logprob: -8.899255752563477
    7. '(pos' → logprob: -9.024255752563477
    8. '(num' → logprob: -9.149255752563477
    9. '(idx' → logprob: -9.149255752563477
    10. '(x' → logprob: -9.649255752563477

Token 33: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025957536417990923
    2. ')' → logprob: -6.002595901489258
    3. ':' → logprob: -9.877595901489258
    4. '):
' → logprob: -10.252595901489258
    5. ',' → logprob: -10.877595901489258
    6. ' ):' → logprob: -11.377595901489258
    7. '+' → logprob: -14.627595901489258
    8. '):
' → logprob: -14.752595901489258
    9. '}:' → logprob: -15.002595901489258
    10. ' ' → logprob: -15.127595901489258

Token 34: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10516957938671112
    2. 'm' → logprob: -2.6051695346832275
    3. ')' → logprob: -4.730169773101807
    4. ' k' → logprob: -4.730169773101807
    5. 'r' → logprob: -6.105169773101807
    6. 'x' → logprob: -6.730169773101807
    7. ' m' → logprob: -7.105169773101807
    8. ' )' → logprob: -7.230169773101807
    9. 'mask' → logprob: -7.605169773101807
    10. 'a' → logprob: -7.730169773101807

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019569287076592445
    2. '):' → logprob: -4.269569396972656
    3. ',b' → logprob: -5.644569396972656
    4. ')' → logprob: -8.144569396972656
    5. 's' → logprob: -8.644569396972656
    6. 'm' → logprob: -8.769569396972656
    7. ',v' → logprob: -8.894569396972656
    8. ' ,' → logprob: -9.019569396972656
    9. ',k' → logprob: -9.144569396972656
    10. 'd' → logprob: -9.519569396972656

Token 36: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0442819744348526
    2. ' b' → logprob: -3.1692819595336914
    3. 'k' → logprob: -7.794281959533691
    4. 'm' → logprob: -8.794281959533691
    5. 'p' → logprob: -8.919281959533691
    6. 'c' → logprob: -8.919281959533691
    7. 'd' → logprob: -9.669281959533691
    8. 'l' → logprob: -9.919281959533691
    9. ' k' → logprob: -10.169281959533691
    10. 's' → logprob: -10.169281959533691

Token 37: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017004783148877323
    2. ')' → logprob: -9.00016975402832
    3. ',' → logprob: -10.50016975402832
    4. ':' → logprob: -11.62516975402832
    5. '):
' → logprob: -12.12516975402832
    6. ' ):' → logprob: -12.50016975402832
    7. ''):' → logprob: -15.37516975402832
    8. ')):' → logprob: -15.62516975402832
    9. '**' → logprob: -16.75016975402832
    10. ' ' → logprob: -16.87516975402832

Token 38: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.013199171051383018
    2. ' c' → logprob: -4.388199329376221
    3. 'k' → logprob: -8.263198852539062
    4. 'p' → logprob: -10.388198852539062
    5. 'is' → logprob: -10.388198852539062
    6. ')' → logprob: -10.450698852539062
    7. 't' → logprob: -10.638198852539062
    8. 'd' → logprob: -10.638198852539062
    9. 'mask' → logprob: -10.825698852539062
    10. ')c' → logprob: -10.825698852539062

Token 39: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005300374468788505
    2. ')' → logprob: -7.625530242919922
    3. ':' → logprob: -11.125530242919922
    4. ',' → logprob: -11.500530242919922
    5. '):
' → logprob: -11.750530242919922
    6. ' ):' → logprob: -11.875530242919922
    7. ''):' → logprob: -14.000530242919922
    8. ')):' → logprob: -15.750530242919922
    9. '"):' → logprob: -15.875530242919922
    10. '}:' → logprob: -16.125530242919922

Token 40: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4357565641403198
    2. ' d' → logprob: -1.0607565641403198
    3. '):' → logprob: -6.560756683349609
    4. 'k' → logprob: -6.810756683349609
    5. ')' → logprob: -7.060756683349609
    6. ' k' → logprob: -7.435756683349609
    7. ' )' → logprob: -8.18575668334961
    8. ' ):' → logprob: -8.31075668334961
    9. ')d' → logprob: -8.43575668334961
    10. 's' → logprob: -8.68575668334961

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006136707379482687
    2. ')' → logprob: -7.500613689422607
    3. ':' → logprob: -10.00061321258545
    4. ' ):' → logprob: -11.62561321258545
    5. '):
' → logprob: -12.50061321258545
    6. ''):' → logprob: -13.62561321258545
    7. ',' → logprob: -14.50061321258545
    8. '"):' → logprob: -15.87561321258545
    9. '**' → logprob: -16.625614166259766
    10. '}:' → logprob: -16.625614166259766

Token 42: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021839486435055733
    2. '):' → logprob: -4.521839618682861
    3. '   ' → logprob: -4.646839618682861
    4. ' :' → logprob: -7.896839618682861
    5. ')' → logprob: -8.146839141845703
    6. ' if' → logprob: -8.771839141845703
    7. ':return' → logprob: -9.771839141845703
    8. ':
' → logprob: -10.021839141845703
    9. ' ' → logprob: -10.146839141845703
    10. 'if' → logprob: -10.396839141845703

Token 43: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.612005889415741
    2. 'if' (adapté à ' if') → logprob: -0.862005889415741
    3. ' ' → logprob: -4.362005710601807
    4. ')' → logprob: -4.862005710601807
    5. '   ' → logprob: -4.987005710601807
    6. '    ' → logprob: -6.237005710601807
    7. '0' → logprob: -6.237005710601807
    8. ' 
' → logprob: -6.987005710601807
    9. ':' → logprob: -7.237005710601807
    10. 'i' → logprob: -7.487005710601807

Token 44: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10020806640386581
    2. 'n' → logprob: -2.350208044052124
    3. ' not' → logprob: -13.600208282470703
    4. '	n' → logprob: -15.850208282470703
    5. ' ' → logprob: -17.225208282470703
    6. 'not' → logprob: -17.600208282470703
    7. ' ' → logprob: -17.725208282470703
    8. '(n' → logprob: -18.100208282470703
    9. '_n' → logprob: -18.225208282470703
    10. ' н' → logprob: -18.225208282470703

Token 45: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1427682638168335
    2. '==' → logprob: -2.017768383026123
    3. '0' → logprob: -10.017767906188965
    4. ' <=' → logprob: -10.642767906188965
    5. '<=' → logprob: -11.267767906188965
    6. '=' → logprob: -12.642767906188965
    7. ')' → logprob: -13.142767906188965
    8. ' ' → logprob: -13.267767906188965
    9. ')==' → logprob: -13.767767906188965
    10. ' <' → logprob: -14.142767906188965

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010330495424568653
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.126033782958984
    4. '1' → logprob: -16.376033782958984
    5. ' ' → logprob: -18.251033782958984
    6. '  ' → logprob: -18.376033782958984
    7. '۰' → logprob: -18.876033782958984
    8. '```' → logprob: -19.188533782958984
    9. ')' → logprob: -19.438533782958984
    10. '    ' → logprob: -19.563533782958984

Token 47: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013595925702247769
    2. 'N' → logprob: -9.000136375427246
    3. ' ' → logprob: -11.750136375427246
    4. '1' → logprob: -13.000136375427246
    5. '4' → logprob: -14.500136375427246
    6. '10' → logprob: -15.000136375427246
    7. '2' → logprob: -15.250136375427246
    8. '5' → logprob: -15.625136375427246
    9. '3' → logprob: -15.625136375427246
    10. ' N' → logprob: -16.00013542175293

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012727351859211922
    2. ' :' → logprob: -7.126272678375244
    3. ':return' → logprob: -8.376273155212402
    4. ':
' → logprob: -8.501273155212402
    5. ' and' → logprob: -10.626273155212402
    6. '0' → logprob: -12.501273155212402
    7. '   ' → logprob: -13.251273155212402
    8. '):' → logprob: -13.876273155212402
    9. ':
' → logprob: -14.376273155212402
    10. ' or' → logprob: -14.376273155212402

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020966786891222
    2. '   ' → logprob: -4.39596700668335
    3. ' return' → logprob: -5.02096700668335
    4. 'return' → logprob: -6.52096700668335
    5. ':return' → logprob: -9.645966529846191
    6. ':' → logprob: -9.770966529846191
    7. ' if' → logprob: -10.020966529846191
    8. ' ' → logprob: -10.395966529846191
    9. '      ' → logprob: -10.645966529846191
    10. '0' → logprob: -10.645966529846191

Token 50: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24829082190990448
    2. '       ' → logprob: -1.748290777206421
    3. ' return' → logprob: -3.373290777206421
    4. 'if' (adapté à ' if') → logprob: -4.998291015625
    5. ' if' → logprob: -6.123291015625
    6. '   ' → logprob: -6.248291015625
    7. 'result' → logprob: -8.748291015625
    8. ' ' → logprob: -9.123291015625
    9. '#' → logprob: -9.748291015625
    10. 'count' → logprob: -9.873291015625

Token 51: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21584495902061462
    2. ' a' → logprob: -1.840844988822937
    3. '(a' → logprob: -3.9658448696136475
    4. ' (' → logprob: -4.215845108032227
    5. ' ' → logprob: -8.090845108032227
    6. '(' → logprob: -8.340845108032227
    7. ' all' → logprob: -8.965845108032227
    8. '{' → logprob: -9.215845108032227
    9. ' len' → logprob: -9.215845108032227
    10. ' n' → logprob: -9.215845108032227

Token 52: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3064507246017456
    2. '+' → logprob: -2.056450843811035
    3. ' ==' → logprob: -2.806450843811035
    4. 'and' → logprob: -3.931450843811035
    5. ' +' → logprob: -3.931450843811035
    6. ' and' → logprob: -4.056450843811035
    7. '!=' → logprob: -4.806450843811035
    8. '>' → logprob: -5.681450843811035
    9. '<=' → logprob: -6.431450843811035
    10. '%' → logprob: -6.431450843811035

Token 53: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9091070294380188
    2. '0' → logprob: -1.034106969833374
    3. '1' → logprob: -1.659106969833374
    4. ' ' → logprob: -3.784106969833374
    5. '3' → logprob: -5.159107208251953
    6. 'd' → logprob: -5.409107208251953
    7. '2' → logprob: -5.784107208251953
    8. ' b' → logprob: -6.034107208251953
    9. '7' → logprob: -6.284107208251953
    10. '4' → logprob: -6.284107208251953

Token 54: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8944079875946045
    2. '0' → logprob: -1.0194079875946045
    3. '1' → logprob: -1.6444079875946045
    4. 'N' → logprob: -4.644408226013184
    5. 'd' → logprob: -5.144408226013184
    6. '3' → logprob: -5.394408226013184
    7. '2' → logprob: -5.644408226013184
    8. ''' → logprob: -6.019408226013184
    9. 'c' → logprob: -6.269408226013184
    10. '7' → logprob: -6.394408226013184

Token 55: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07254209369421005
    2. 'and' → logprob: -2.697542190551758
    3. ' or' → logprob: -6.197542190551758
    4. ' ' → logprob: -7.822542190551758
    5. ':' → logprob: -9.197542190551758
    6. 'or' → logprob: -10.947542190551758
    7. 'b' → logprob: -11.572542190551758
    8. 'a' → logprob: -11.822542190551758
    9. '0' → logprob: -12.072542190551758
    10. '   ' → logprob: -12.072542190551758

Token 56: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2395787090063095
    2. 'and' → logprob: -1.6145787239074707
    3. '0' → logprob: -4.739578723907471
    4. 'return' → logprob: -6.489578723907471
    5. '1' → logprob: -6.739578723907471
    6. '   ' → logprob: -7.114578723907471
    7. '       ' → logprob: -7.739578723907471
    8. '           ' → logprob: -7.739578723907471
    9. ' or' → logprob: -8.114578247070312
    10. 'b' → logprob: -8.739578247070312

Token 57: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.027754517272114754
    2. ' return' → logprob: -3.652754545211792
    3. '1' → logprob: -7.527754306793213
    4. 'if' → logprob: -7.777754306793213
    5. '0' → logprob: -8.902754783630371
    6. ' if' → logprob: -9.527754783630371
    7. '   ' → logprob: -9.652754783630371
    8. '       ' → logprob: -9.777754783630371
    9. '           ' → logprob: -10.152754783630371
    10. '3' → logprob: -10.652754783630371

Token 58: ' Remove' (ID: 18141)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20257627964019775
    2. ' return' → logprob: -1.7025762796401978
    3. ' if' → logprob: -7.952576160430908
    4. ' ' → logprob: -8.202576637268066
    5. 'if' → logprob: -8.452576637268066
    6. 'r' → logprob: -9.452576637268066
    7. '   ' → logprob: -10.577576637268066
    8. '#' → logprob: -10.827576637268066
    9. 'Return' → logprob: -10.827576637268066
    10. '0' → logprob: -11.327576637268066

Token 59: ' forbidden' (ID: 74435)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4905239939689636
    2. ' return' → logprob: -1.4905240535736084
    3. ' if' → logprob: -2.9905240535736084
    4. 'if' → logprob: -3.3655240535736084
    5. 'b' → logprob: -3.6155240535736084
    6. '0' → logprob: -4.490523815155029
    7. 'd' → logprob: -4.490523815155029
    8. ' ' → logprob: -5.365523815155029
    9. '1' → logprob: -6.240523815155029
    10. 'pass' → logprob: -6.365523815155029

Token 60: ' patterns' (ID: 18587)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.514872670173645
    2. 'sequence' → logprob: -2.7648725509643555
    3. ' trip' → logprob: -3.3898725509643555
    4. 'trip' → logprob: -3.5148725509643555
    5. 'token' → logprob: -3.6398725509643555
    6. ' sequence' → logprob: -3.8898725509643555
    7. 'return' → logprob: -4.0148725509643555
    8. ' combinations' → logprob: -4.0148725509643555
    9. ' if' → logprob: -4.3898725509643555
    10. '0' → logprob: -4.3898725509643555

Token 61: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0655308961868286
    2. '           ' → logprob: -1.0655308961868286
    3. '               ' → logprob: -2.315530776977539
    4. 'return' → logprob: -2.565530776977539
    5. ' return' → logprob: -3.065530776977539
    6. ' and' → logprob: -3.440530776977539
    7. ':return' → logprob: -4.190530776977539
    8. '   ' → logprob: -4.440530776977539
    9. ' ' → logprob: -4.815530776977539
    10. ':' → logprob: -5.815530776977539

Token 62: ' initialization' (ID: 41684)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8266826272010803
    2. 'the' → logprob: -1.0766825675964355
    3. 'start' → logprob: -2.7016825675964355
    4. ' start' → logprob: -3.5766825675964355
    5. 'positions' → logprob: -4.2016825675964355
    6. ' this' → logprob: -4.2016825675964355
    7. 'n' → logprob: -4.4516825675964355
    8. ' positions' → logprob: -4.4516825675964355
    9. 'this' → logprob: -4.8266825675964355
    10. ' position' → logprob: -5.0766825675964355

Token 63: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.937120258808136
    2. '           ' → logprob: -1.0621201992034912
    3. '               ' → logprob: -2.187120199203491
    4. ' and' → logprob: -2.937120199203491
    5. ' return' → logprob: -3.812120199203491
    6. 'return' → logprob: -3.937120199203491
    7. '   ' → logprob: -4.18712043762207
    8. ' ' → logprob: -4.81212043762207
    9. ':return' → logprob: -4.93712043762207
    10. ':' → logprob: -5.56212043762207

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7954933643341064
    2. 'return' → logprob: -1.5454933643341064
    3. '       ' → logprob: -1.6704933643341064
    4. ' return' → logprob: -2.5454933643341064
    5. '               ' → logprob: -2.7954933643341064
    6. '   ' → logprob: -5.295493125915527
    7. ' ' → logprob: -7.045493125915527
    8. ':return' → logprob: -7.670493125915527
    9. ' if' → logprob: -7.920493125915527
    10. ' and' → logprob: -8.295493125915527

Token 65: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04568392410874367
    2. ' return' → logprob: -3.2956838607788086
    3. '           ' → logprob: -5.295683860778809
    4. '       ' → logprob: -6.545683860778809
    5. '               ' → logprob: -7.545683860778809
    6. '   ' → logprob: -8.420683860778809
    7. 'if' (adapté à ' if') → logprob: -8.670683860778809
    8. ' ' → logprob: -9.420683860778809
    9. ' if' → logprob: -9.670683860778809
    10. '                   ' → logprob: -10.420683860778809

Token 66: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8155835866928101
    2. 'a' → logprob: -1.56558358669281
    3. ' b' → logprob: -1.56558358669281
    4. ' a' → logprob: -2.8155837059020996
    5. ' (' → logprob: -3.8155837059020996
    6. '(a' → logprob: -3.8155837059020996
    7. '(b' → logprob: -3.8155837059020996
    8. ' not' → logprob: -5.0655837059021
    9. ' c' → logprob: -6.9405837059021
    10. ' ' → logprob: -6.9405837059021

Token 67: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5831687450408936
    2. 'a' → logprob: -0.8331687450408936
    3. '(a' → logprob: -6.208168983459473
    4. '(b' → logprob: -6.333168983459473
    5. ' b' → logprob: -6.833168983459473
    6. 'c' → logprob: -7.208168983459473
    7. ' a' → logprob: -7.583168983459473
    8. '0' → logprob: -8.458168983459473
    9. 'not' → logprob: -8.833168983459473
    10. 'd' → logprob: -9.083168983459473

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8322314620018005
    2. '==' → logprob: -0.8322314620018005
    3. ' ==' → logprob: -2.0822315216064453
    4. ' ,' → logprob: -6.207231521606445
    5. ',a' → logprob: -7.082231521606445
    6. '!=' → logprob: -7.832231521606445
    7. ',b' → logprob: -8.207231521606445
    8. ' !=' → logprob: -8.207231521606445
    9. 'a' → logprob: -8.332231521606445
    10. ',d' → logprob: -8.582231521606445

Token 69: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07915855944156647
    2. ' c' → logprob: -2.5791585445404053
    3. ' ' → logprob: -9.204158782958984
    4. ',c' → logprob: -9.829158782958984
    5. '0' → logprob: -10.204158782958984
    6. ')' → logprob: -10.579158782958984
    7. ')c' → logprob: -10.954158782958984
    8. ',' → logprob: -10.954158782958984
    9. 'a' → logprob: -12.454158782958984
    10. '  ' → logprob: -12.579158782958984

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.205361470580101
    2. ')' → logprob: -1.7053614854812622
    3. ',d' → logprob: -5.830361366271973
    4. 'd' → logprob: -7.580361366271973
    5. ')==' → logprob: -8.205361366271973
    6. ' ,' → logprob: -10.080361366271973
    7. '==' → logprob: -10.205361366271973
    8. ' in' → logprob: -10.330361366271973
    9. ',)' → logprob: -11.080361366271973
    10. 'in' → logprob: -11.205361366271973

Token 71: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11592234671115875
    2. ' d' → logprob: -2.240922451019287
    3. '0' → logprob: -6.490922451019287
    4. ' ' → logprob: -6.740922451019287
    5. 'a' → logprob: -8.990921974182129
    6. '1' → logprob: -8.990921974182129
    7. ')' → logprob: -10.240921974182129
    8. ' a' → logprob: -10.615921974182129
    9. '  ' → logprob: -11.303421974182129
    10. '3' → logprob: -11.365921974182129

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009870808571577072
    2. ')==' → logprob: -7.3759870529174805
    3. ' )' → logprob: -8.50098705291748
    4. '==' → logprob: -9.00098705291748
    5. ')!=' → logprob: -12.25098705291748
    6. ' ==' → logprob: -12.25098705291748
    7. 'in' → logprob: -12.87598705291748
    8. '')' → logprob: -12.87598705291748
    9. '[' → logprob: -12.87598705291748
    10. ',)' → logprob: -13.12598705291748

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04213164746761322
    2. ')' → logprob: -4.417131423950195
    3. 'in' → logprob: -4.417131423950195
    4. '==' → logprob: -4.542131423950195
    5. ' not' → logprob: -5.542131423950195
    6. ' ==' → logprob: -6.167131423950195
    7. ' )' → logprob: -8.917131423950195
    8. 'not' → logprob: -9.292131423950195
    9. ' ' → logprob: -9.417131423950195
    10. '==(' → logprob: -10.667131423950195

Token 74: ' [(' (ID: 43900)
  Prédit: ' {('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {(' → logprob: -0.254370778799057
    2. ' [(' → logprob: -1.5043708086013794
    3. '[(' → logprob: -6.87937068939209
    4. '{' → logprob: -7.37937068939209
    5. ' ' → logprob: -8.12937068939209
    6. ' {' → logprob: -8.62937068939209
    7. ' [' → logprob: -9.00437068939209
    8. ' [
' → logprob: -9.75437068939209
    9. ' ((' → logprob: -9.87937068939209
    10. ' {
' → logprob: -10.75437068939209

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44090306758880615
    2. '1' → logprob: -1.1909030675888062
    3. ''' → logprob: -3.8159031867980957
    4. ')' → logprob: -4.815903186798096
    5. '2' → logprob: -5.565903186798096
    6. ' ' → logprob: -5.565903186798096
    7. '(' → logprob: -6.065903186798096
    8. '4' → logprob: -6.440903186798096
    9. ''a' → logprob: -6.440903186798096
    10. '3' → logprob: -6.690903186798096

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042090186616405845
    2. ' ,' → logprob: -8.500420570373535
    3. '),' → logprob: -9.125420570373535
    4. '0' → logprob: -10.375420570373535
    5. ',),' → logprob: -10.625420570373535
    6. ',)' → logprob: -11.125420570373535
    7. ')' → logprob: -11.375420570373535
    8. '1' → logprob: -11.625420570373535
    9. ' ' → logprob: -12.625420570373535
    10. ',

' → logprob: -12.875420570373535

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3669529855251312
    2. ' ' → logprob: -1.6169530153274536
    3. '1' → logprob: -2.241952896118164
    4. '2' → logprob: -6.241952896118164
    5. ')' → logprob: -8.491952896118164
    6. '3' → logprob: -8.991952896118164
    7. '4' → logprob: -10.491952896118164
    8. '),' → logprob: -10.804452896118164
    9. ')]' → logprob: -11.116952896118164
    10. ',' → logprob: -11.304452896118164

Token 78: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31645071506500244
    2. '1' → logprob: -1.3164507150650024
    3. ' ' → logprob: -6.566450595855713
    4. '2' → logprob: -6.691450595855713
    5. ')' → logprob: -7.941450595855713
    6. '-' → logprob: -9.816451072692871
    7. '3' → logprob: -10.378951072692871
    8. '),' → logprob: -10.503951072692871
    9. '

' → logprob: -11.316451072692871
    10. ')]' → logprob: -11.378951072692871

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09686658531427383
    2. '),' → logprob: -2.4718666076660156
    3. '0' → logprob: -5.596866607666016
    4. ' ,' → logprob: -6.596866607666016
    5. ')' → logprob: -6.721866607666016
    6. '2' → logprob: -6.971866607666016
    7. ' ),' → logprob: -8.346866607666016
    8. '1' → logprob: -8.846866607666016
    9. ' ' → logprob: -9.596866607666016
    10. '3' → logprob: -10.096866607666016

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.413274347782135
    2. ' ' → logprob: -1.4132742881774902
    3. '2' → logprob: -2.5382742881774902
    4. '1' → logprob: -4.16327428817749
    5. '3' → logprob: -7.78827428817749
    6. ')' → logprob: -9.350774765014648
    7. '7' → logprob: -10.850774765014648
    8. '   ' → logprob: -11.038274765014648
    9. '  ' → logprob: -11.100774765014648
    10. '4' → logprob: -11.913274765014648

Token 81: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24418629705905914
    2. '2' → logprob: -1.744186282157898
    3. '1' → logprob: -3.4941864013671875
    4. ' ' → logprob: -4.6191864013671875
    5. '3' → logprob: -6.8691864013671875
    6. ')' → logprob: -8.056686401367188
    7. '7' → logprob: -10.369186401367188
    8. '   ' → logprob: -10.556686401367188
    9. '-' → logprob: -10.744186401367188
    10. ']' → logprob: -10.806686401367188

Token 82: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004031618591398001
    2. ' ),' → logprob: -6.129031658172607
    3. '),(' → logprob: -7.004031658172607
    4. ')' → logprob: -7.379031658172607
    5. ',' → logprob: -8.62903118133545
    6. ')]' → logprob: -9.37903118133545
    7. '):' → logprob: -10.87903118133545
    8. '),
' → logprob: -11.37903118133545
    9. ')],' → logprob: -12.37903118133545
    10. ',),' → logprob: -12.62903118133545

Token 83: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04866015538573265
    2. '(' → logprob: -3.0486600399017334
    3. ' ' → logprob: -10.048660278320312
    4. '   ' → logprob: -11.048660278320312
    5. '  ' → logprob: -12.298660278320312
    6. '    ' → logprob: -12.423660278320312
    7. '        ' → logprob: -13.673660278320312
    8. ',' → logprob: -14.298660278320312
    9. '       ' → logprob: -14.298660278320312
    10. ' or' → logprob: -14.298660278320312

Token 84: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10693560540676117
    2. '1' → logprob: -2.981935501098633
    3. ' ' → logprob: -3.106935501098633
    4. '2' → logprob: -5.231935501098633
    5. '3' → logprob: -7.856935501098633
    6. '(' → logprob: -9.606935501098633
    7. ')' → logprob: -10.044435501098633
    8. '   ' → logprob: -10.669435501098633
    9. '  ' → logprob: -10.669435501098633
    10. '4' → logprob: -10.731935501098633

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008620307198725641
    2. ' ,' → logprob: -7.125862121582031
    3. '0' → logprob: -10.500862121582031
    4. ' ' → logprob: -11.000862121582031
    5. ')' → logprob: -12.375862121582031
    6. '),' → logprob: -13.375862121582031
    7. '2' → logprob: -13.500862121582031
    8. '3' → logprob: -13.500862121582031
    9. '<|end|>' → logprob: -13.500862121582031
    10. '   ' → logprob: -14.000862121582031

Token 86: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7801598310470581
    2. ' ' → logprob: -0.7801598310470581
    3. '2' → logprob: -2.5301599502563477
    4. '3' → logprob: -5.655159950256348
    5. '1' → logprob: -9.030159950256348
    6. ')' → logprob: -11.092659950256348
    7. '  ' → logprob: -11.155159950256348
    8. '4' → logprob: -11.342659950256348
    9. '   ' → logprob: -12.342659950256348
    10. '7' → logprob: -13.030159950256348

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12261730432510376
    2. '2' → logprob: -2.247617244720459
    3. ' ' → logprob: -4.997617244720459
    4. '3' → logprob: -5.872617244720459
    5. '1' → logprob: -8.747617721557617
    6. '   ' → logprob: -12.560117721557617
    7. '  ' → logprob: -12.935117721557617
    8. '-' → logprob: -12.997617721557617
    9. '4' → logprob: -13.372617721557617
    10. '```' → logprob: -13.685117721557617

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025924232322722673
    2. ' ,' → logprob: -6.00259256362915
    3. '),' → logprob: -9.377592086791992
    4. '3' → logprob: -11.127592086791992
    5. '2' → logprob: -12.002592086791992
    6. ')' → logprob: -12.127592086791992
    7. ' ),' → logprob: -13.127592086791992
    8. ' ' → logprob: -13.252592086791992
    9. ')]' → logprob: -14.627592086791992
    10. '1' → logprob: -15.002592086791992

Token 89: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1439034342765808
    2. ' ' → logprob: -2.0189034938812256
    3. '0' → logprob: -6.7689032554626465
    4. '3' → logprob: -9.643903732299805
    5. '1' → logprob: -11.393903732299805
    6. '  ' → logprob: -14.018903732299805
    7. '   ' → logprob: -14.268903732299805
    8. '```' → logprob: -15.143903732299805
    9. '    ' → logprob: -15.956403732299805
    10. '

' → logprob: -16.206403732299805

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003159201005473733
    2. ' ' → logprob: -8.50031566619873
    3. '0' → logprob: -9.37531566619873
    4. '1' → logprob: -10.62531566619873
    5. '3' → logprob: -13.00031566619873
    6. '   ' → logprob: -15.31281566619873
    7. '```' → logprob: -15.37531566619873
    8. '  ' → logprob: -15.81281566619873
    9. '-' → logprob: -16.437816619873047
    10. '

' → logprob: -16.750316619873047

Token 91: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06706700474023819
    2. ',' → logprob: -3.6920669078826904
    3. ')' → logprob: -3.9420669078826904
    4. ')]' → logprob: -4.4420671463012695
    5. ' ),' → logprob: -5.0670671463012695
    6. '):' → logprob: -6.5670671463012695
    7. '),(' → logprob: -7.9420671463012695
    8. ' )' → logprob: -7.9420671463012695
    9. '],' → logprob: -9.44206714630127
    10. ' ,' → logprob: -9.81706714630127

Token 92: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.030092699453234673
    2. '(' → logprob: -3.530092716217041
    3. '   ' → logprob: -9.405092239379883
    4. '           ' → logprob: -9.780092239379883
    5. ' ' → logprob: -9.905092239379883
    6. '       ' → logprob: -10.155092239379883
    7. '    ' → logprob: -10.905092239379883
    8. '               ' → logprob: -11.155092239379883
    9. '          ' → logprob: -11.155092239379883
    10. '  ' → logprob: -11.280092239379883

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5850411057472229
    2. '2' → logprob: -0.9600411057472229
    3. '1' → logprob: -2.835041046142578
    4. ' ' → logprob: -7.210041046142578
    5. '3' → logprob: -7.585041046142578
    6. ')' → logprob: -10.960041046142578
    7. '   ' → logprob: -11.710041046142578
    8. '-' → logprob: -11.960041046142578
    9. '```' → logprob: -12.147541046142578
    10. '(' → logprob: -12.147541046142578

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010418595047667623
    2. ' ,' → logprob: -7.251041889190674
    3. '1' → logprob: -8.251041412353516
    4. '2' → logprob: -10.001041412353516
    5. '<|end|>' → logprob: -11.876041412353516
    6. ')' → logprob: -12.126041412353516
    7. '3' → logprob: -12.626041412353516
    8. ' ' → logprob: -12.876041412353516
    9. '   ' → logprob: -13.626041412353516
    10. '),' → logprob: -13.751041412353516

Token 95: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18243847787380219
    2. ' ' → logprob: -2.057438373565674
    3. '1' → logprob: -3.307438373565674
    4. '0' → logprob: -6.057438373565674
    5. '  ' → logprob: -11.869938850402832
    6. '   ' → logprob: -12.432438850402832
    7. ')' → logprob: -12.494938850402832
    8. '3' → logprob: -12.744938850402832
    9. '-' → logprob: -12.807438850402832
    10. '<|end|>' → logprob: -12.994938850402832

Token 96: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.037906061857938766
    2. '1' → logprob: -3.4129061698913574
    3. '0' → logprob: -5.537906169891357
    4. ' ' → logprob: -8.1629056930542
    5. '-' → logprob: -11.1629056930542
    6. '[' → logprob: -13.0379056930542
    7. '   ' → logprob: -13.4754056930542
    8. '  ' → logprob: -13.7879056930542
    9. '3' → logprob: -13.9129056930542
    10. '```' → logprob: -13.9754056930542

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005323885474354029
    2. ' ,' → logprob: -5.755323886871338
    3. '1' → logprob: -7.005323886871338
    4. '3' → logprob: -7.130323886871338
    5. '),' → logprob: -8.75532341003418
    6. '0' → logprob: -9.13032341003418
    7. ')' → logprob: -9.25532341003418
    8. ' ' → logprob: -10.00532341003418
    9. ')]' → logprob: -11.50532341003418
    10. '   ' → logprob: -12.63032341003418

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014211231842637062
    2. ' ' → logprob: -4.264211177825928
    3. '0' → logprob: -10.264211654663086
    4. '3' → logprob: -11.514211654663086
    5. '   ' → logprob: -14.139211654663086
    6. '  ' → logprob: -14.139211654663086
    7. '2' → logprob: -14.264211654663086
    8. ')' → logprob: -14.639211654663086
    9. '```' → logprob: -16.576711654663086
    10. '۱' → logprob: -17.576711654663086

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001126026691053994
    2. '0' → logprob: -9.375112533569336
    3. ' ' → logprob: -10.750112533569336
    4. '3' → logprob: -12.250112533569336
    5. ')' → logprob: -15.312612533569336
    6. '2' → logprob: -15.437612533569336
    7. '۱' → logprob: -15.750112533569336
    8. '```' → logprob: -15.750112533569336
    9. '１' → logprob: -16.562612533569336
    10. '   ' → logprob: -16.937612533569336

Token 100: ')]' (ID: 15710)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7734335660934448
    2. '):' → logprob: -1.5234335660934448
    3. ',' → logprob: -2.1484336853027344
    4. ')]' → logprob: -2.1484336853027344
    5. ')' → logprob: -2.5234336853027344
    6. ' ):
' → logprob: -7.023433685302734
    7. ']):
' → logprob: -7.148433685302734
    8. '       ' → logprob: -7.148433685302734
    9. ']):' → logprob: -7.273433685302734
    10. '   ' → logprob: -7.398433685302734

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6000894904136658
    2. ':
' → logprob: -1.1000895500183105
    3. '       ' → logprob: -2.3500895500183105
    4. ':return' → logprob: -4.1000895500183105
    5. '           ' → logprob: -5.9750895500183105
    6. '):
' → logprob: -6.3500895500183105
    7. '):' → logprob: -6.6000895500183105
    8. ':
' → logprob: -8.100089073181152
    9. '   ' → logprob: -8.600089073181152
    10. ' :' → logprob: -9.725089073181152

Token 102: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2834216356277466
    2. '               ' → logprob: -2.283421516418457
    3. 'return' → logprob: -2.408421516418457
    4. '       ' → logprob: -3.908421516418457
    5. ' return' → logprob: -4.408421516418457
    6. ':
' → logprob: -4.783421516418457
    7. '
' → logprob: -5.408421516418457
    8. ':return' → logprob: -5.408421516418457
    9. '):
' → logprob: -6.158421516418457
    10. ':' → logprob: -6.408421516418457

Token 103: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02240140177309513
    2. ' return' → logprob: -4.022401332855225
    3. '                   ' → logprob: -5.522401332855225
    4. '               ' → logprob: -9.147401809692383
    5. '           ' → logprob: -9.397401809692383
    6. '                       ' → logprob: -10.522401809692383
    7. '
' → logprob: -11.272401809692383
    8. '   ' → logprob: -11.397401809692383
    9. '       ' → logprob: -13.647401809692383
    10. '	return' → logprob: -13.772401809692383

Token 104: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606270257383585
    2. ' ' → logprob: -4.882606506347656
    3. '  ' → logprob: -17.507606506347656
    4. '1' → logprob: -17.507606506347656
    5. '   ' → logprob: -17.507606506347656
    6. '000' → logprob: -18.632606506347656
    7. 'False' → logprob: -18.757606506347656
    8. '00' → logprob: -19.007606506347656
    9. '    ' → logprob: -19.382606506347656
    10. '

' → logprob: -19.757606506347656

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'False' → logprob: -16.125015258789062
    4. '   ' → logprob: -16.250015258789062
    5. '  ' → logprob: -17.187515258789062
    6. '-' → logprob: -17.250015258789062
    7. '    ' → logprob: -17.687515258789062
    8. '000' → logprob: -17.937515258789062
    9. '۰' → logprob: -18.187515258789062
    10. '(' → logprob: -18.250015258789062

Token 106: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45198649168014526
    2. '       ' → logprob: -1.07698655128479
    3. '
' → logprob: -3.95198655128479
    4. '               ' → logprob: -6.451986312866211
    5. '   ' → logprob: -6.826986312866211
    6. 'return' → logprob: -7.326986312866211
    7. '\n' → logprob: -9.201986312866211
    8. '        
' → logprob: -9.951986312866211
    9. '
' → logprob: -10.201986312866211
    10. ' return' → logprob: -10.451986312866211

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5065196752548218
    2. '       ' → logprob: -1.0065196752548218
    3. '
' → logprob: -3.7565197944641113
    4. '               ' → logprob: -5.256519794464111
    5. '   ' → logprob: -6.506519794464111
    6. 'return' → logprob: -6.631519794464111
    7. ' return' → logprob: -9.756519317626953
    8. '<|end|>' → logprob: -9.881519317626953
    9. '        
' → logprob: -10.006519317626953
    10. 'else' → logprob: -10.131519317626953

Token 108: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17772620916366577
    2. 'return' (adapté à ' return') → logprob: -2.0527262687683105
    3. '           ' → logprob: -3.4277262687683105
    4. '               ' → logprob: -7.3027262687683105
    5. ' return' → logprob: -7.3027262687683105
    6. '   ' → logprob: -7.9277262687683105
    7. 'else' → logprob: -8.427725791931152
    8. '
' → logprob: -10.552725791931152
    9. ' else' → logprob: -12.427725791931152
    10. ' ' → logprob: -12.552725791931152

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003839597338810563
    2. ' ' → logprob: -7.8753838539123535
    3. '   ' → logprob: -12.875384330749512
    4. '       ' → logprob: -15.375384330749512
    5. '0' → logprob: -15.500384330749512
    6. '(' → logprob: -15.500384330749512
    7. 'pow' → logprob: -15.500384330749512
    8. '  ' → logprob: -15.625384330749512
    9. '           ' → logprob: -15.875384330749512
    10. 'int' → logprob: -16.562883377075195

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -11.500021934509277
    3. 'pow' → logprob: -11.750021934509277
    4. '0' → logprob: -13.875021934509277
    5. '(' → logprob: -14.125021934509277
    6. '6' → logprob: -14.750021934509277
    7. '3' → logprob: -14.875021934509277
    8. '   ' → logprob: -15.125021934509277
    9. 'int' → logprob: -15.125021934509277
    10. '2' → logprob: -15.375021934509277

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7268407940864563
    2. '       ' → logprob: -0.7268407940864563
    3. '<|end|>' → logprob: -4.226840972900391
    4. '
' → logprob: -4.851840972900391
    5. ')' → logprob: -5.226840972900391
    6. '\n' → logprob: -6.476840972900391
    7. '    
' → logprob: -7.226840972900391
    8. 'return' → logprob: -7.476840972900391
    9. 'n' → logprob: -7.851840972900391
    10. '        
' → logprob: -8.47684097290039

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42977163195610046
    2. '   ' → logprob: -1.0547716617584229
    3. '<|end|>' → logprob: -7.679771423339844
    4. 'return' → logprob: -8.679771423339844
    5. ')' → logprob: -9.179771423339844
    6. '
' → logprob: -9.679771423339844
    7. ' return' → logprob: -10.054771423339844
    8. ' ' → logprob: -10.554771423339844
    9. '  ' → logprob: -10.679771423339844
    10. '.' → logprob: -10.804771423339844

Token 113: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4692869186401367
    2. '   ' → logprob: -1.3442869186401367
    3. 'return' (adapté à ' return') → logprob: -2.4692869186401367
    4. 'else' → logprob: -3.8442869186401367
    5. ' return' → logprob: -6.594286918640137
    6. 'if' → logprob: -6.719286918640137
    7. '
' → logprob: -6.844286918640137
    8. ' else' → logprob: -6.969286918640137
    9. '    ' → logprob: -7.344286918640137
    10. '           ' → logprob: -7.719286918640137

Token 114: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011099346913397312
    2. ' ' → logprob: -4.511099338531494
    3. '1' → logprob: -10.886099815368652
    4. 'dp' → logprob: -10.886099815368652
    5. ' dp' → logprob: -12.136099815368652
    6. '(' → logprob: -13.511099815368652
    7. 'None' → logprob: -13.636099815368652
    8. '   ' → logprob: -14.073599815368652
    9. '  ' → logprob: -14.448599815368652
    10. '    ' → logprob: -14.511099815368652

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002820736262947321
    2. '1' → logprob: -9.125282287597656
    3. 'dp' → logprob: -9.125282287597656
    4. ' ' → logprob: -10.500282287597656
    5. '(' → logprob: -10.625282287597656
    6. 'int' → logprob: -12.625282287597656
    7. '(dp' → logprob: -12.625282287597656
    8. 'False' → logprob: -13.750282287597656
    9. '   ' → logprob: -14.375282287597656
    10. '(int' → logprob: -14.500282287597656

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022344745229929686
    2. '<|end|>' → logprob: -7.00223445892334
    3. '    
' → logprob: -7.50223445892334
    4. '
' → logprob: -7.75223445892334
    5. ')' → logprob: -8.50223445892334
    6. 'return' → logprob: -10.50223445892334
    7. '```' → logprob: -10.75223445892334
    8. '<|end|>' → logprob: -11.37723445892334
    9. '...' → logprob: -11.62723445892334
    10. 'if' → logprob: -11.87723445892334

Token 117: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' total' (ID: 3609)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.14059722423553467
    2. 'result' → logprob: -2.640597343444824
    3. 'count' → logprob: -4.015597343444824
    4. 'x' → logprob: -4.765597343444824
    5. 'ans' → logprob: -4.765597343444824
    6. 'total' (adapté à ' total') → logprob: -4.765597343444824
    7. ' res' → logprob: -5.140597343444824
    8. '   ' → logprob: -5.640597343444824
    9. 'val' → logprob: -6.390597343444824
    10. 'v' → logprob: -6.765597343444824

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018488438799977303
    2. '=' → logprob: -4.01848840713501
    3. ' +=' → logprob: -8.018488883972168
    4. ' ' → logprob: -12.018488883972168
    5. '_' → logprob: -13.768488883972168
    6. '+=' → logprob: -14.143488883972168
    7. ')' → logprob: -14.768488883972168
    8. ',' → logprob: -15.643488883972168
    9. ' *=' → logprob: -15.893488883972168
    10. '  ' → logprob: -15.893488883972168

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020916825160384178
    2. ' ' → logprob: -4.895916938781738
    3. '(' → logprob: -5.145916938781738
    4. '(dp' → logprob: -5.145916938781738
    5. ' (' → logprob: -6.895916938781738
    6. '(
' → logprob: -8.395916938781738
    7. 'dp' → logprob: -9.395916938781738
    8. 'sum' → logprob: -9.520916938781738
    9. '(sum' → logprob: -9.645916938781738
    10. ' dp' → logprob: -9.895916938781738

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10895106941461563
    2. '(dp' → logprob: -2.7339510917663574
    3. '(' → logprob: -3.4839510917663574
    4. 'dp' → logprob: -4.983951091766357
    5. '(
' → logprob: -7.608951091766357
    6. ' ' → logprob: -9.1089506149292
    7. ' (' → logprob: -10.3589506149292
    8. 'sum' → logprob: -10.3589506149292
    9. ' dp' → logprob: -10.6089506149292
    10. '(sum' → logprob: -11.2339506149292

Token 122: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33924591541290283
    2. '
' → logprob: -2.0892457962036133
    3. ' for' → logprob: -2.4642457962036133
    4. 'for' → logprob: -3.2142457962036133
    5. '    
' → logprob: -3.8392457962036133
    6. ' 
' → logprob: -5.214245796203613
    7. ' total' → logprob: -5.964245796203613
    8. 'total' → logprob: -6.089245796203613
    9. '  
' → logprob: -6.214245796203613
    10. '   
' → logprob: -6.964245796203613

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7932367920875549
    2. ' for' → logprob: -1.0432367324829102
    3. 'for' → logprob: -1.7932367324829102
    4. '<|end|>' → logprob: -4.29323673248291
    5. '
' → logprob: -4.91823673248291
    6. ' 
' → logprob: -6.04323673248291
    7. '    
' → logprob: -6.16823673248291
    8. ' ' → logprob: -6.54323673248291
    9. '	for' → logprob: -7.16823673248291
    10. ')' → logprob: -7.91823673248291

Token 124: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004472348664421588
    2. ' for' → logprob: -8.000447273254395
    3. 'total' → logprob: -9.500447273254395
    4. '   ' → logprob: -10.500447273254395
    5. 'if' → logprob: -12.000447273254395
    6. 'next' → logprob: -13.250447273254395
    7. 'return' → logprob: -14.375447273254395
    8. '	for' → logprob: -16.000446319580078
    9. ' ' → logprob: -16.250446319580078
    10. '    
' → logprob: -16.250446319580078

Token 125: ' Pr' (ID: 2284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012104723136872053
    2. ' for' → logprob: -6.751210689544678
    3. '   ' → logprob: -10.12621021270752
    4. ' ' → logprob: -16.126211166381836
    5. '	for' → logprob: -16.376211166381836
    6. '    
' → logprob: -17.126211166381836
    7. '  ' → logprob: -18.126211166381836
    8. '    ' → logprob: -18.251211166381836
    9. 'For' → logprob: -18.501211166381836
    10. '
' → logprob: -19.126211166381836

Token 126: 'une' (ID: 2561)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.7929257154464722
    2. 'e' → logprob: -0.9179257154464722
    3. 'ef' → logprob: -2.5429258346557617
    4. 'edict' → logprob: -2.9179258346557617
    5. 'o' → logprob: -6.042925834655762
    6. 'edef' → logprob: -6.167925834655762
    7. 'int' → logprob: -6.292925834655762
    8. '   ' → logprob: -6.792925834655762
    9. 'esent' → logprob: -6.792925834655762
    10. 'def' → logprob: -7.417925834655762

Token 127: ' forbidden' (ID: 74435)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5430575609207153
    2. '<|end|>' → logprob: -1.9180575609207153
    3. '   ' → logprob: -2.043057441711426
    4. 'for' → logprob: -2.418057441711426
    5. ' if' → logprob: -3.543057441711426
    6. ' ' → logprob: -5.043057441711426
    7. '<|end|>' → logprob: -5.168057441711426
    8. '    ' → logprob: -5.668057441711426
    9. '  ' → logprob: -7.043057441711426
    10. '
' → logprob: -7.168057441711426

Token 128: ' substr' (ID: 29234)
  Prédit: ' patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -0.6597093939781189
    2. 'patterns' → logprob: -0.9097093939781189
    3. '_patterns' → logprob: -3.0347094535827637
    4. ' sequences' → logprob: -4.159709453582764
    5. '   ' → logprob: -4.909709453582764
    6. ' if' → logprob: -5.659709453582764
    7. '_sequences' → logprob: -6.409709453582764
    8. 'pattern' → logprob: -7.034709453582764
    9. 'if' → logprob: -7.034709453582764
    10. ' states' → logprob: -7.284709453582764

Token 129: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.001414996455423534
    2. 'ing' → logprob: -6.626414775848389
    3. '   ' → logprob: -10.001415252685547
    4. 's' → logprob: -11.251415252685547
    5. 'strings' → logprob: -11.626415252685547
    6. 'total' → logprob: -12.126415252685547
    7. 'ections' → logprob: -13.251415252685547
    8. 'ingss' → logprob: -13.376415252685547
    9. 'ects' → logprob: -13.501415252685547
    10. '       ' → logprob: -13.751415252685547

Token 130: ' early' (ID: 6047)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0946483239531517
    2. ' for' → logprob: -3.5946483612060547
    3. '<|end|>' → logprob: -3.5946483612060547
    4. '    
' → logprob: -4.594648361206055
    5. 'for' → logprob: -4.969648361206055
    6. '
' → logprob: -5.594648361206055
    7. '  
' → logprob: -5.844648361206055
    8. ' if' → logprob: -6.094648361206055
    9. ')' → logprob: -6.344648361206055
    10. ',' → logprob: -6.594648361206055

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8820640444755554
    2. '
' → logprob: -1.3820641040802002
    3. '    
' → logprob: -2.0070641040802
    4. '<|end|>' → logprob: -2.8820641040802
    5. ' 
' → logprob: -3.2570641040802
    6. ' for' → logprob: -3.2570641040802
    7. '  
' → logprob: -3.6320641040802
    8. 'for' → logprob: -4.257063865661621
    9. ')' → logprob: -4.507063865661621
    10. '   
' → logprob: -5.132063865661621

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07200890779495239
    2. '    
' → logprob: -3.3220088481903076
    3. '<|end|>' → logprob: -4.572009086608887
    4. ' 
' → logprob: -4.822009086608887
    5. '  
' → logprob: -5.322009086608887
    6. ')' → logprob: -5.947009086608887
    7. ' for' → logprob: -6.197009086608887
    8. 'for' → logprob: -6.572009086608887
    9. '   
' → logprob: -6.947009086608887
    10. '
' → logprob: -7.072009086608887

Token 133: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35697099566459656
    2. 'if' → logprob: -1.231971025466919
    3. ' if' → logprob: -5.73197078704834
    4. ' for' → logprob: -5.73197078704834
    5. 'trip' → logprob: -7.23197078704834
    6. 'sub' → logprob: -8.23197078704834
    7. 'prev' → logprob: -8.23197078704834
    8. 'total' → logprob: -8.35697078704834
    9. 'substr' → logprob: -9.48197078704834
    10. ' forbidden' → logprob: -9.60697078704834

Token 134: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01910613849759102
    2. '=' → logprob: -4.644105911254883
    3. '_' → logprob: -6.269105911254883
    4. 't' → logprob: -6.644105911254883
    5. 'for' → logprob: -7.144105911254883
    6. ' ' → logprob: -7.269105911254883
    7. 'um' → logprob: -7.394105911254883
    8. 'et' → logprob: -7.394105911254883
    9. 'e' → logprob: -7.644105911254883
    10. '   ' → logprob: -7.644105911254883

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3140498101711273
    2. '=' → logprob: -1.3140498399734497
    3. '   ' → logprob: -8.68904972076416
    4. ',' → logprob: -8.68904972076416
    5. '=(' → logprob: -8.81404972076416
    6. 'if' → logprob: -9.43904972076416
    7. ' ' → logprob: -10.06404972076416
    8. ' =(' → logprob: -10.93904972076416
    9. ' if' → logprob: -11.31404972076416
    10. '_' → logprob: -11.31404972076416

Token 136: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5542133450508118
    2. '(b' → logprob: -0.9292133450508118
    3. ' (' → logprob: -3.929213285446167
    4. '[a' → logprob: -5.554213523864746
    5. 'a' → logprob: -5.804213523864746
    6. '[b' → logprob: -6.054213523864746
    7. 'b' → logprob: -7.679213523864746
    8. '   ' → logprob: -7.929213523864746
    9. '(' → logprob: -8.054213523864746
    10. ' ' → logprob: -8.429213523864746

Token 137: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07904952019453049
    2. 'b' → logprob: -2.579049587249756
    3. ' a' → logprob: -9.204049110412598
    4. ' b' → logprob: -10.704049110412598
    5. '   ' → logprob: -11.204049110412598
    6. 'c' → logprob: -11.829049110412598
    7. 'd' → logprob: -12.829049110412598
    8. ' ' → logprob: -13.204049110412598
    9. ')' → logprob: -13.454049110412598
    10. 'n' → logprob: -13.454049110412598

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010178061202168465
    2. ' ,' → logprob: -7.2510175704956055
    3. ',c' → logprob: -8.376017570495605
    4. 'c' → logprob: -10.626017570495605
    5. '==' → logprob: -11.001017570495605
    6. ' ==' → logprob: -11.626017570495605
    7. ',d' → logprob: -12.001017570495605
    8. 'd' → logprob: -12.251017570495605
    9. 'a' → logprob: -12.376017570495605
    10. ' c' → logprob: -13.001017570495605

Token 139: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.45848218582978e-06
    2. 'a' → logprob: -13.62500286102295
    3. ' c' → logprob: -13.87500286102295
    4. '   ' → logprob: -16.375001907348633
    5. ' ' → logprob: -17.000001907348633
    6. ')c' → logprob: -17.500001907348633
    7. '
' → logprob: -18.750001907348633
    8. '	c' → logprob: -19.125001907348633
    9. ',c' → logprob: -19.125001907348633
    10. ')' → logprob: -19.375001907348633

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005670914542861283
    2. ',d' → logprob: -8.500567436218262
    3. ' ,' → logprob: -8.625567436218262
    4. 'd' → logprob: -8.625567436218262
    5. ' ' → logprob: -13.625567436218262
    6. ')' → logprob: -13.875567436218262
    7. ' d' → logprob: -14.125567436218262
    8. ',
' → logprob: -14.250567436218262
    9. '),' → logprob: -14.625567436218262
    10. '1' → logprob: -15.750567436218262

Token 141: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012346376897767186
    2. 'a' → logprob: -6.751234531402588
    3. ' d' → logprob: -9.876235008239746
    4. 'n' → logprob: -12.126235008239746
    5. ' ' → logprob: -13.126235008239746
    6. ')' → logprob: -13.751235008239746
    7. '   ' → logprob: -13.751235008239746
    8. '
' → logprob: -13.876235008239746
    9. '0' → logprob: -14.376235008239746
    10. '	d' → logprob: -14.501235008239746

Token 142: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01598920300602913
    2. ')' → logprob: -4.515989303588867
    3. ',' → logprob: -5.390989303588867
    4. ' )
' → logprob: -8.515989303588867
    5. '   ' → logprob: -8.890989303588867
    6. ' ,' → logprob: -11.765989303588867
    7. ')

' → logprob: -12.265989303588867
    8. ' ' → logprob: -12.390989303588867
    9. ')
' → logprob: -12.640989303588867
    10. ',)
' → logprob: -12.890989303588867

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12059078365564346
    2. '
' → logprob: -2.8705906867980957
    3. ')' → logprob: -3.8705906867980957
    4. ' if' → logprob: -4.745590686798096
    5. '<|end|>' → logprob: -4.870590686798096
    6. '    
' → logprob: -5.245590686798096
    7. '+' → logprob: -5.745590686798096
    8. ' s' → logprob: -6.245590686798096
    9. ')
' → logprob: -6.370590686798096
    10. ' +' → logprob: -6.495590686798096

Token 144: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33649909496307373
    2. 's' (adapté à ' s') → logprob: -1.8364990949630737
    3. ' if' → logprob: -2.3364992141723633
    4. ' s' → logprob: -4.086499214172363
    5. '   ' → logprob: -4.961499214172363
    6. '
' → logprob: -5.961499214172363
    7. 'and' → logprob: -6.711499214172363
    8. ' +' → logprob: -7.086499214172363
    9. '+' → logprob: -7.586499214172363
    10. ' and' → logprob: -8.086499214172363

Token 145: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19025975465774536
    2. ' =' → logprob: -2.3152596950531006
    3. '1' → logprob: -2.9402596950531006
    4. '2' → logprob: -3.9402596950531006
    5. '+=' → logprob: -6.81525993347168
    6. '_next' → logprob: -7.81525993347168
    7. '_' → logprob: -8.44025993347168
    8. '=
' → logprob: -8.94025993347168
    9. '_new' → logprob: -9.81525993347168
    10. ' +=' → logprob: -9.81525993347168

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519353926181793
    2. '=' → logprob: -1.501935362815857
    3. '   ' → logprob: -12.376935005187988
    4. ',' → logprob: -14.626935005187988
    5. ' ' → logprob: -14.876935005187988
    6. ' =(' → logprob: -14.876935005187988
    7. 's' → logprob: -15.126935005187988
    8. '=(' → logprob: -15.751935005187988
    9. ')' → logprob: -15.876935005187988
    10. '=
' → logprob: -16.001935958862305

Token 147: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.0062674283981323
    2. '(a' → logprob: -1.0062674283981323
    3. '(b' → logprob: -1.6312674283981323
    4. ' (' → logprob: -2.631267547607422
    5. '   ' → logprob: -7.006267547607422
    6. '(d' → logprob: -8.631267547607422
    7. ' ' → logprob: -10.506267547607422
    8. '  ' → logprob: -10.631267547607422
    9. '(s' → logprob: -11.256267547607422
    10. '(' → logprob: -11.506267547607422

Token 148: 'a' (ID: 64)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007648374885320663
    2. ' c' → logprob: -7.500764846801758
    3. 'a' → logprob: -8.500764846801758
    4. '   ' → logprob: -12.000764846801758
    5. ' ' → logprob: -13.875764846801758
    6. '	c' → logprob: -14.250764846801758
    7. '(c' → logprob: -15.625764846801758
    8. ' a' → logprob: -15.750764846801758
    9. '  ' → logprob: -16.250764846801758
    10. '0' → logprob: -16.375764846801758

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005749551928602159
    2. ',c' → logprob: -8.125575065612793
    3. ' ,' → logprob: -8.875575065612793
    4. 'c' → logprob: -9.000575065612793
    5. ',b' → logprob: -11.750575065612793
    6. 'b' → logprob: -12.000575065612793
    7. ' c' → logprob: -14.125575065612793
    8. ',
' → logprob: -14.875575065612793
    9. '   ' → logprob: -15.500575065612793
    10. ',d' → logprob: -16.375574111938477

Token 150: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004514969885349274
    2. 'c' → logprob: -5.504515171051025
    3. ' b' → logprob: -7.754515171051025
    4. ' c' → logprob: -11.879514694213867
    5. ' ' → logprob: -14.504514694213867
    6. ',b' → logprob: -16.254514694213867
    7. '   ' → logprob: -17.004514694213867
    8. ',' → logprob: -17.129514694213867
    9. ')' → logprob: -17.379514694213867
    10. '0' → logprob: -18.129514694213867

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000493937055580318
    2. ',d' → logprob: -8.125494003295898
    3. ' ,' → logprob: -8.750494003295898
    4. 'd' → logprob: -10.250494003295898
    5. ')' → logprob: -13.375494003295898
    6. ',b' → logprob: -14.375494003295898
    7. ' d' → logprob: -14.625494003295898
    8. ',
' → logprob: -14.875494003295898
    9. '),' → logprob: -15.250494003295898
    10. 'b' → logprob: -15.250494003295898

Token 152: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6042371988296509
    2. 'n' → logprob: -1.1042371988296509
    3. 'b' → logprob: -2.1042370796203613
    4. ' d' → logprob: -10.22923755645752
    5. ' n' → logprob: -10.35423755645752
    6. ')' → logprob: -10.60423755645752
    7. ' b' → logprob: -12.22923755645752
    8. ' ' → logprob: -12.72923755645752
    9. 's' → logprob: -13.22923755645752
    10. '   ' → logprob: -13.97923755645752

Token 153: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5236505270004272
    2. ')' → logprob: -0.8986505270004272
    3. '   ' → logprob: -7.898650646209717
    4. ',' → logprob: -9.773650169372559
    5. ' )
' → logprob: -9.898650169372559
    6. ' )' → logprob: -11.023650169372559
    7. ')
' → logprob: -11.898650169372559
    8. ')

' → logprob: -11.898650169372559
    9. ' ' → logprob: -12.023650169372559
    10. ',)
' → logprob: -12.523650169372559

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004402463324368
    2. '<|end|>' → logprob: -6.2544026374816895
    3. '    
' → logprob: -6.8794026374816895
    4. ')' → logprob: -7.6294026374816895
    5. '
' → logprob: -8.129402160644531
    6. ' if' → logprob: -9.129402160644531
    7. '  
' → logprob: -9.254402160644531
    8. ' 
' → logprob: -9.254402160644531
    9. '  ' → logprob: -9.754402160644531
    10. ',' → logprob: -10.004402160644531

Token 155: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6998498439788818
    2. '   ' → logprob: -0.8248498439788818
    3. 's' (adapté à ' s') → logprob: -3.074849843978882
    4. ' if' → logprob: -4.074850082397461
    5. 'if' → logprob: -6.699850082397461
    6. ' for' → logprob: -8.199850082397461
    7. '
' → logprob: -9.699850082397461
    8. '<|end|>' → logprob: -9.699850082397461
    9. ' ' → logprob: -9.824850082397461
    10. '    
' → logprob: -9.949850082397461

Token 156: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03716869652271271
    2. '2' → logprob: -3.7871687412261963
    3. ' =' → logprob: -4.912168502807617
    4. '1' → logprob: -5.287168502807617
    5. '=' → logprob: -6.787168502807617
    6. ',' → logprob: -9.412168502807617
    7. 'h' → logprob: -9.787168502807617
    8. ' ' → logprob: -9.912168502807617
    9. ')' → logprob: -11.037168502807617
    10. '=(' → logprob: -11.287168502807617

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367036581039429
    2. '=' → logprob: -3.408670425415039
    3. '   ' → logprob: -11.283670425415039
    4. ',' → logprob: -12.408670425415039
    5. ')' → logprob: -13.033670425415039
    6. 's' → logprob: -13.033670425415039
    7. ' =(' → logprob: -13.533670425415039
    8. ' s' → logprob: -14.283670425415039
    9. ' ' → logprob: -15.033670425415039
    10. ' (' → logprob: -15.283670425415039

Token 158: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.2759853005409241
    2. ' (' → logprob: -1.9009852409362793
    3. '(a' → logprob: -3.0259852409362793
    4. '(c' → logprob: -3.1509852409362793
    5. '(d' → logprob: -7.900985240936279
    6. '(' → logprob: -10.025985717773438
    7. '   ' → logprob: -11.400985717773438
    8. ' ' → logprob: -12.525985717773438
    9. '(s' → logprob: -13.275985717773438
    10. '  ' → logprob: -14.650985717773438

Token 159: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6343967914581299
    2. 'b' → logprob: -0.7593967914581299
    3. 'c' → logprob: -6.634396553039551
    4. ' b' → logprob: -8.38439655303955
    5. ' a' → logprob: -8.88439655303955
    6. '(b' → logprob: -10.00939655303955
    7. '(a' → logprob: -10.38439655303955
    8. '   ' → logprob: -11.13439655303955
    9. ')' → logprob: -12.25939655303955
    10. ' ' → logprob: -12.50939655303955

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017541198758408427
    2. ' ,' → logprob: -8.750175476074219
    3. ',b' → logprob: -11.500175476074219
    4. ',
' → logprob: -13.125175476074219
    5. 'b' → logprob: -13.375175476074219
    6. ',c' → logprob: -13.500175476074219
    7. ' ' → logprob: -14.125175476074219
    8. 'c' → logprob: -14.375175476074219
    9. ')' → logprob: -15.375175476074219
    10. '`,' → logprob: -16.37517547607422

Token 161: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0017507458105683327
    2. ' b' → logprob: -6.376750946044922
    3. 'c' → logprob: -10.001750946044922
    4. ' ' → logprob: -13.626750946044922
    5. ' c' → logprob: -13.626750946044922
    6. 'a' → logprob: -14.126750946044922
    7. '   ' → logprob: -16.501750946044922
    8. 'd' → logprob: -16.626750946044922
    9. ',b' → logprob: -17.376750946044922
    10. '  ' → logprob: -17.376750946044922

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007318547577597201
    2. ' ,' → logprob: -7.250731945037842
    3. ',d' → logprob: -11.250731468200684
    4. ',c' → logprob: -12.125731468200684
    5. ',
' → logprob: -13.125731468200684
    6. 'c' → logprob: -14.875731468200684
    7. ' ' → logprob: -15.000731468200684
    8. 'd' → logprob: -15.375731468200684
    9. ')' → logprob: -15.500731468200684
    10. '   ' → logprob: -15.625731468200684

Token 163: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5333978533744812
    2. 'd' → logprob: -1.033397912979126
    3. ' d' → logprob: -3.283397912979126
    4. ' c' → logprob: -3.908397912979126
    5. ' ' → logprob: -10.908397674560547
    6. ')' → logprob: -13.658397674560547
    7. '   ' → logprob: -13.908397674560547
    8. '	c' → logprob: -14.533397674560547
    9. '  ' → logprob: -14.908397674560547
    10. ')c' → logprob: -15.033397674560547

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.523705780506134
    2. ')
' → logprob: -0.898705780506134
    3. '   ' → logprob: -7.648705959320068
    4. ')
' → logprob: -9.77370548248291
    5. ')

' → logprob: -11.27370548248291
    6. ' )
' → logprob: -11.52370548248291
    7. '):
' → logprob: -11.89870548248291
    8. ' )' → logprob: -12.14870548248291
    9. ')`
' → logprob: -12.27370548248291
    10. ')`' → logprob: -13.64870548248291

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018689583986997604
    2. ' for' → logprob: -4.6436896324157715
    3. 'for' → logprob: -5.1436896324157715
    4. ' if' → logprob: -7.3936896324157715
    5. '    
' → logprob: -7.6436896324157715
    6. '<|end|>' → logprob: -8.143689155578613
    7. 'if' → logprob: -8.268689155578613
    8. ')' → logprob: -8.393689155578613
    9. '```' → logprob: -8.518689155578613
    10. '
' → logprob: -8.643689155578613

Token 166: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0375990867614746
    2. 'for' → logprob: -1.0375990867614746
    3. '   ' → logprob: -1.6625990867614746
    4. ' if' → logprob: -2.9125990867614746
    5. ' for' → logprob: -3.1625990867614746
    6. 's' → logprob: -5.412599086761475
    7. ' s' → logprob: -8.662599563598633
    8. '
' → logprob: -9.287599563598633
    9. 'tokens' → logprob: -9.412599563598633
    10. ' ' → logprob: -9.662599563598633

Token 167: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47281140089035034
    2. ' s' → logprob: -1.2228114604949951
    3. '0' → logprob: -3.222811460494995
    4. '(' → logprob: -4.097811222076416
    5. ' ' → logprob: -4.347811222076416
    6. ' (' → logprob: -4.847811222076416
    7. 'a' → logprob: -6.847811222076416
    8. 'len' → logprob: -6.847811222076416
    9. ' any' → logprob: -7.097811222076416
    10. 'b' → logprob: -7.472811222076416

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8789383830153383e-05
    2. '2' → logprob: -12.000019073486328
    3. ' in' → logprob: -12.125019073486328
    4. 's' → logprob: -12.875019073486328
    5. ' ' → logprob: -14.000019073486328
    6. '
' → logprob: -14.312519073486328
    7. '==' → logprob: -14.437519073486328
    8. 'in' → logprob: -14.625019073486328
    9. '3' → logprob: -14.687519073486328
    10. ' s' → logprob: -14.937519073486328

Token 169: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.537789523601532
    2. ' in' → logprob: -1.0377895832061768
    3. 'in' → logprob: -3.2877895832061768
    4. ' ==' → logprob: -3.7877895832061768
    5. ')' → logprob: -7.162789344787598
    6. '[' → logprob: -7.662789344787598
    7. '==(' → logprob: -8.412789344787598
    8. ')==' → logprob: -9.162789344787598
    9. ' ' → logprob: -9.662789344787598
    10. '   ' → logprob: -10.412789344787598

Token 170: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0001923352392623201
    2. '{' → logprob: -8.750192642211914
    3. ' [(' → logprob: -11.250192642211914
    4. '[{' → logprob: -11.250192642211914
    5. ' {(' → logprob: -12.375192642211914
    6. '[
' → logprob: -13.125192642211914
    7. '[((' → logprob: -13.625192642211914
    8. '{
' → logprob: -16.125192642211914
    9. '[' → logprob: -16.250192642211914
    10. '((' → logprob: -16.500192642211914

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001446611131541431
    2. '1' → logprob: -9.500144958496094
    3. ' ' → logprob: -10.000144958496094
    4. '2' → logprob: -11.375144958496094
    5. '(' → logprob: -11.875144958496094
    6. '3' → logprob: -13.625144958496094
    7. '   ' → logprob: -13.750144958496094
    8. '[' → logprob: -14.812644958496094
    9. '
' → logprob: -15.062644958496094
    10. '  ' → logprob: -15.062644958496094

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006806228775531054
    2. ' ,' → logprob: -7.875680446624756
    3. '1' → logprob: -8.125680923461914
    4. ' ' → logprob: -13.375680923461914
    5. '<|end|>' → logprob: -14.125680923461914
    6. '   ' → logprob: -14.625680923461914
    7. '),' → logprob: -14.750680923461914
    8. '‌,' → logprob: -14.875680923461914
    9. ')' → logprob: -15.250680923461914
    10. ',),' → logprob: -15.500680923461914

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010565068805590272
    2. ' ' → logprob: -6.876056671142578
    3. '2' → logprob: -10.876056671142578
    4. '0' → logprob: -13.001056671142578
    5. '  ' → logprob: -13.876056671142578
    6. '   ' → logprob: -14.626056671142578
    7. '3' → logprob: -14.751056671142578
    8. ')' → logprob: -15.938556671142578
    9. '    ' → logprob: -16.501056671142578
    10. ',' → logprob: -16.751056671142578

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6789137084269896e-05
    2. ' ' → logprob: -10.50003719329834
    3. '2' → logprob: -11.75003719329834
    4. '0' → logprob: -14.00003719329834
    5. '   ' → logprob: -16.062536239624023
    6. '  ' → logprob: -16.312536239624023
    7. '
' → logprob: -16.750036239624023
    8. ',' → logprob: -17.125036239624023
    9. ')' → logprob: -17.187536239624023
    10. '3' → logprob: -17.187536239624023

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00081963452976197
    2. '2' → logprob: -7.250819683074951
    3. ' ,' → logprob: -9.125819206237793
    4. '0' → logprob: -15.375819206237793
    5. ' ' → logprob: -15.375819206237793
    6. '),' → logprob: -15.875819206237793
    7. ')' → logprob: -16.75082015991211
    8. ',
' → logprob: -16.87582015991211
    9. '<|end|>' → logprob: -17.00082015991211
    10. '```' → logprob: -17.75082015991211

Token 176: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.660315895918757e-05
    2. ' ' → logprob: -9.500076293945312
    3. '0' → logprob: -14.250076293945312
    4. '1' → logprob: -14.937576293945312
    5. '   ' → logprob: -15.125076293945312
    6. '
' → logprob: -15.687576293945312
    7. '

' → logprob: -16.625076293945312
    8. '```' → logprob: -16.812576293945312
    9. '  ' → logprob: -16.937576293945312
    10. '۲' → logprob: -17.562576293945312

Token 177: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.750005722045898
    3. '0' → logprob: -13.250005722045898
    4. '1' → logprob: -15.937505722045898
    5. '
' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.5000057220459
    7. '```' → logprob: -16.6875057220459
    8. '

' → logprob: -16.8750057220459
    9. '۲' → logprob: -17.0000057220459
    10. '  ' → logprob: -18.1250057220459

Token 178: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002647359622642398
    2. '),(' → logprob: -6.752647399902344
    3. ' ),' → logprob: -7.127647399902344
    4. ',' → logprob: -7.502647399902344
    5. '],' → logprob: -10.377647399902344
    6. '),
' → logprob: -10.502647399902344
    7. ',),' → logprob: -10.752647399902344
    8. ')]' → logprob: -11.252647399902344
    9. '   ' → logprob: -12.002647399902344
    10. ')' → logprob: -12.127647399902344

Token 179: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5759656429290771
    2. '(' → logprob: -0.8259656429290771
    3. '   ' → logprob: -11.075965881347656
    4. ' ' → logprob: -12.825965881347656
    5. '    ' → logprob: -13.700965881347656
    6. '           ' → logprob: -13.950965881347656
    7. '       ' → logprob: -14.075965881347656
    8. '  ' → logprob: -14.325965881347656
    9. '1' → logprob: -14.450965881347656
    10. '        ' → logprob: -14.450965881347656

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028096288442611694
    2. '0' → logprob: -6.002809524536133
    3. ' ' → logprob: -8.377809524536133
    4. '2' → logprob: -9.252809524536133
    5. '   ' → logprob: -13.002809524536133
    6. '
' → logprob: -13.440309524536133
    7. '  ' → logprob: -14.502809524536133
    8. ')' → logprob: -14.502809524536133
    9. '(' → logprob: -15.002809524536133
    10. '3' → logprob: -15.065309524536133

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014025020645931363
    2. ' ,' → logprob: -6.876402378082275
    3. ' ' → logprob: -8.501402854919434
    4. '0' → logprob: -8.751402854919434
    5. '<|end|>' → logprob: -12.001402854919434
    6. ',
' → logprob: -14.501402854919434
    7. ')' → logprob: -14.876402854919434
    8. '   ' → logprob: -15.126402854919434
    9. '```' → logprob: -15.751402854919434
    10. '[' → logprob: -15.876402854919434

Token 182: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005929863080382347
    2. ' ' → logprob: -5.130929946899414
    3. '<|end|>' → logprob: -13.755929946899414
    4. '```' → logprob: -16.630929946899414
    5. '  ' → logprob: -16.880929946899414
    6. ')' → logprob: -17.380929946899414
    7. ',' → logprob: -17.380929946899414
    8. '   ' → logprob: -17.630929946899414
    9. '[' → logprob: -17.755929946899414
    10. 'user' → logprob: -18.380929946899414

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00280558317899704
    2. ' ' → logprob: -5.877805709838867
    3. '2' → logprob: -15.627805709838867
    4. '
' → logprob: -16.127805709838867
    5. ',' → logprob: -16.627805709838867
    6. '```' → logprob: -16.752805709838867
    7. '  ' → logprob: -17.002805709838867
    8. '   ' → logprob: -17.315305709838867
    9. ')' → logprob: -17.877805709838867
    10. '[' → logprob: -18.127805709838867

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004803545773029327
    2. '2' → logprob: -5.379803657531738
    3. ' ,' → logprob: -8.629803657531738
    4. ' ' → logprob: -13.504803657531738
    5. '```' → logprob: -13.754803657531738
    6. '(' → logprob: -14.254803657531738
    7. ')' → logprob: -14.504803657531738
    8. '),' → logprob: -14.504803657531738
    9. '0' → logprob: -15.504803657531738
    10. '[' → logprob: -16.254802703857422

Token 185: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '```' → logprob: -16.501502990722656
    4. '  ' → logprob: -17.501502990722656
    5. '   ' → logprob: -18.751502990722656
    6. '[' → logprob: -18.751502990722656
    7. '(' → logprob: -19.376502990722656
    8. '    ' → logprob: -19.626502990722656
    9. ',' → logprob: -19.626502990722656
    10. ')' → logprob: -20.126502990722656

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '0' → logprob: -18.625003814697266
    4. '  ' → logprob: -19.375003814697266
    5. '۲' → logprob: -19.375003814697266
    6. '```' → logprob: -19.500003814697266
    7. '   ' → logprob: -20.000003814697266
    8. '２' → logprob: -20.750003814697266
    9. '(' → logprob: -21.375003814697266
    10. '
' → logprob: -21.500003814697266

Token 187: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7031296491622925
    2. '),' → logprob: -0.7031296491622925
    3. ')' → logprob: -5.328129768371582
    4. ')]' → logprob: -6.703129768371582
    5. ' ,' → logprob: -6.953129768371582
    6. '):' → logprob: -7.203129768371582
    7. '   ' → logprob: -7.578129768371582
    8. ')],' → logprob: -7.703129768371582
    9. '],' → logprob: -7.953129768371582
    10. ' ),' → logprob: -8.578129768371582

Token 188: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868741989135742
    2. ' (' → logprob: -1.1368741989135742
    3. '0' → logprob: -13.386874198913574
    4. '   ' → logprob: -14.761874198913574
    5. '           ' → logprob: -14.886874198913574
    6. ' ' → logprob: -15.011874198913574
    7. ',' → logprob: -16.26187515258789
    8. '               ' → logprob: -16.38687515258789
    9. '            ' → logprob: -16.51187515258789
    10. '    ' → logprob: -17.01187515258789

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.9424725148128346e-05
    2. ' ' → logprob: -10.625049591064453
    3. '1' → logprob: -11.250049591064453
    4. '(' → logprob: -11.625049591064453
    5. '2' → logprob: -13.125049591064453
    6. '   ' → logprob: -15.250049591064453
    7. '  ' → logprob: -15.875049591064453
    8. ' (' → logprob: -15.937549591064453
    9. '
' → logprob: -16.000049591064453
    10. ')' → logprob: -16.187549591064453

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044890373828820884
    2. ' ,' → logprob: -7.750448703765869
    3. '2' → logprob: -11.000449180603027
    4. ' ' → logprob: -14.125449180603027
    5. ',
' → logprob: -14.625449180603027
    6. '1' → logprob: -15.500449180603027
    7. '   ' → logprob: -16.75044822692871
    8. '0' → logprob: -17.37544822692871
    9. '‌,' → logprob: -18.00044822692871
    10. ',\
' → logprob: -18.00044822692871

Token 191: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015029559144750237
    2. ' ' → logprob: -6.501502990722656
    3. '1' → logprob: -15.251502990722656
    4. '0' → logprob: -15.876502990722656
    5. '<|end|>' → logprob: -16.376502990722656
    6. '  ' → logprob: -16.501502990722656
    7. '```' → logprob: -16.876502990722656
    8. '   ' → logprob: -17.314002990722656
    9. '۲' → logprob: -17.501502990722656
    10. '...' → logprob: -17.876502990722656

Token 192: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '1' → logprob: -15.375027656555176
    4. '۲' → logprob: -16.750028610229492
    5. '```' → logprob: -18.312528610229492
    6. '  ' → logprob: -18.312528610229492
    7. '   ' → logprob: -18.437528610229492
    8. '0' → logprob: -18.562528610229492
    9. '２' → logprob: -18.625028610229492
    10. '
' → logprob: -18.687528610229492

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004484269011300057
    2. '1' → logprob: -7.875448226928711
    3. ' ,' → logprob: -9.625448226928711
    4. ',
' → logprob: -14.000448226928711
    5. ' ' → logprob: -14.625448226928711
    6. ')' → logprob: -14.875448226928711
    7. '```' → logprob: -15.000448226928711
    8. '(' → logprob: -16.62544822692871
    9. '),' → logprob: -16.87544822692871
    10. '   ' → logprob: -17.00044822692871

Token 194: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '```' → logprob: -17.750431060791016
    4. ')' → logprob: -18.500431060791016
    5. '   ' → logprob: -18.875431060791016
    6. '0' → logprob: -19.125431060791016
    7. '(' → logprob: -19.875431060791016
    8. '  ' → logprob: -19.875431060791016
    9. '[' → logprob: -20.125431060791016
    10. ' ' → logprob: -20.625431060791016

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -18.500001907348633
    4. '   ' → logprob: -20.375001907348633
    5. '  ' → logprob: -20.750001907348633
    6. ')' → logprob: -20.875001907348633
    7. '１' → logprob: -21.062501907348633
    8. '۱' → logprob: -21.187501907348633
    9. '[' → logprob: -21.687501907348633
    10. '0' → logprob: -21.937501907348633

Token 196: ')]' (ID: 15710)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3072015941143036
    2. '):
' → logprob: -2.307201623916626
    3. ']:' → logprob: -2.307201623916626
    4. ')]' → logprob: -3.807201623916626
    5. '):' → logprob: -4.057201385498047
    6. ',' → logprob: -4.557201385498047
    7. ']' → logprob: -4.807201385498047
    8. '   ' → logprob: -6.057201385498047
    9. ')' → logprob: -6.307201385498047
    10. ']):
' → logprob: -6.557201385498047

Token 197: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7855223417282104
    2. '       ' → logprob: -0.9105223417282104
    3. ':' → logprob: -2.1605224609375
    4. '   ' → logprob: -4.4105224609375
    5. ' or' → logprob: -4.5355224609375
    6. ':return' → logprob: -5.7855224609375
    7. '):
' → logprob: -8.2855224609375
    8. ' and' → logprob: -9.1605224609375
    9. ' :
' → logprob: -9.4105224609375
    10. 'or' → logprob: -10.5355224609375

Token 198: ' \
' (ID: 6814)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.28160685300827026
    2. 's' → logprob: -1.406606912612915
    3. '   ' → logprob: -7.906606674194336
    4. '    ' → logprob: -10.531606674194336
    5. ' (' → logprob: -10.531606674194336
    6. '(s' → logprob: -12.031606674194336
    7. ' ' → logprob: -12.031606674194336
    8. '  ' → logprob: -12.656606674194336
    9. ' \
' → logprob: -12.781606674194336
    10. '\
' → logprob: -12.781606674194336

Token 199: '      ' (ID: 1699)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.05901525542140007
    2. 's' → logprob: -2.9340152740478516
    3. ' (' → logprob: -6.059015274047852
    4. ' d' → logprob: -7.434015274047852
    5. '   ' → logprob: -7.684015274047852
    6. '(s' → logprob: -8.809015274047852
    7. '(a' → logprob: -9.059015274047852
    8. ' dp' → logprob: -9.309015274047852
    9. 'd' → logprob: -9.559015274047852
    10. ' not' → logprob: -9.684015274047852

Token 200: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2839833199977875
    2. 's' (adapté à ' s') → logprob: -1.4089833498001099
    3. ' (' → logprob: -6.15898323059082
    4. '   ' → logprob: -8.78398323059082
    5. '(a' → logprob: -8.90898323059082
    6. '(b' → logprob: -8.90898323059082
    7. '(s' → logprob: -9.40898323059082
    8. '(' → logprob: -9.53398323059082
    9. '      ' → logprob: -10.53398323059082
    10. ' ' → logprob: -10.65898323059082

Token 201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15794672071933746
    2. '1' → logprob: -2.032946825027466
    3. '3' → logprob: -4.407946586608887
    4. '(' → logprob: -6.032946586608887
    5. ' in' → logprob: -8.032946586608887
    6. ' (' → logprob: -9.032946586608887
    7. '(a' → logprob: -10.282946586608887
    8. 'in' → logprob: -10.407946586608887
    9. 's' → logprob: -11.407946586608887
    10. '((' → logprob: -11.907946586608887

Token 202: ' ==' (ID: 951)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001941130612976849
    2. 'in' → logprob: -6.251941204071045
    3. ' ' → logprob: -12.001940727233887
    4. ' ==' → logprob: -12.501940727233887
    5. '==' → logprob: -13.001940727233887
    6. '   ' → logprob: -16.376941680908203
    7. '```' → logprob: -16.501941680908203
    8. ' ' → logprob: -16.751941680908203
    9. 'In' → logprob: -17.251941680908203
    10. ')' → logprob: -17.251941680908203

Token 203: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02975083328783512
    2. ' (' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.52975082397461
    4. '  ' → logprob: -16.15475082397461
    5. '   ' → logprob: -17.27975082397461
    6. '      ' → logprob: -18.27975082397461
    7. '    ' → logprob: -18.77975082397461
    8. '((' → logprob: -19.27975082397461
    9. '     ' → logprob: -19.65475082397461
    10. '        ' → logprob: -20.77975082397461

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16993974149227142
    2. '1' → logprob: -1.9199397563934326
    3. '(' → logprob: -4.6699395179748535
    4. '2' → logprob: -8.794939994812012
    5. ' ' → logprob: -9.169939994812012
    6. ' (' → logprob: -10.919939994812012
    7. '   ' → logprob: -11.419939994812012
    8. '
' → logprob: -13.419939994812012
    9. '    ' → logprob: -13.482439994812012
    10. '  ' → logprob: -13.669939994812012

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000680265249684453
    2. ' ,' → logprob: -7.375680446624756
    3. '1' → logprob: -9.875679969787598
    4. '   ' → logprob: -14.375679969787598
    5. ' ' → logprob: -14.500679969787598
    6. ',
' → logprob: -14.625679969787598
    7. '3' → logprob: -15.875679969787598
    8. ')' → logprob: -16.000680923461914
    9. '  ' → logprob: -16.000680923461914
    10. '2' → logprob: -16.125680923461914

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06048918887972832
    2. ' ' → logprob: -3.3104891777038574
    3. '2' → logprob: -3.8104891777038574
    4. '0' → logprob: -10.185489654541016
    5. ',' → logprob: -11.185489654541016
    6. '  ' → logprob: -12.185489654541016
    7. '   ' → logprob: -13.935489654541016
    8. '3' → logprob: -14.310489654541016
    9. ')' → logprob: -14.747989654541016
    10. '    ' → logprob: -15.372989654541016

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031174797913990915
    2. '0' → logprob: -9.125311851501465
    3. '2' → logprob: -9.250311851501465
    4. ' ' → logprob: -9.250311851501465
    5. ',' → logprob: -11.625311851501465
    6. '   ' → logprob: -14.562811851501465
    7. '  ' → logprob: -15.000311851501465
    8. '-' → logprob: -15.312811851501465
    9. '```' → logprob: -16.12531089782715
    10. ')' → logprob: -16.18781089782715

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033729493618011475
    2. '2' → logprob: -3.4087295532226562
    3. ' ,' → logprob: -9.783729553222656
    4. '      ' → logprob: -11.033729553222656
    5. ' ' → logprob: -11.658729553222656
    6. '3' → logprob: -13.908729553222656
    7. '     ' → logprob: -14.533729553222656
    8. '  ' → logprob: -14.533729553222656
    9. ')' → logprob: -15.408729553222656
    10. '   ' → logprob: -16.158729553222656

Token 209: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002338144404347986
    2. ' ' → logprob: -8.37523365020752
    3. ')' → logprob: -14.06273365020752
    4. '0' → logprob: -14.93773365020752
    5. '  ' → logprob: -14.93773365020752
    6. '۲' → logprob: -15.06273365020752
    7. '   ' → logprob: -15.37523365020752
    8. '
' → logprob: -15.62523365020752
    9. '```' → logprob: -15.93773365020752
    10. '

' → logprob: -16.000234603881836

Token 210: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '0' → logprob: -16.562515258789062
    4. '```' → logprob: -17.000015258789062
    5. '   ' → logprob: -17.062515258789062
    6. '۲' → logprob: -17.250015258789062
    7. '  ' → logprob: -17.375015258789062
    8. '3' → logprob: -17.625015258789062
    9. ')' → logprob: -18.187515258789062
    10. '1' → logprob: -18.312515258789062

Token 211: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003542926860973239
    2. ' or' → logprob: -8.625354766845703
    3. ' )' → logprob: -9.500354766845703
    4. ',' → logprob: -9.875354766845703
    5. 'or' → logprob: -10.750354766845703
    6. '):' → logprob: -11.250354766845703
    7. '):
' → logprob: -12.375354766845703
    8. ',)' → logprob: -12.750354766845703
    9. '   ' → logprob: -13.375354766845703
    10. '),' → logprob: -13.625354766845703

Token 212: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02335064485669136
    2. 'or' → logprob: -3.773350715637207
    3. '      ' → logprob: -10.023350715637207
    4. ':' → logprob: -11.273350715637207
    5. ' ' → logprob: -11.398350715637207
    6. '   ' → logprob: -11.898350715637207
    7. ':
' → logprob: -11.898350715637207
    8. '  ' → logprob: -12.023350715637207
    9. ')' → logprob: -12.523350715637207
    10. '       ' → logprob: -12.648350715637207

Token 213: ' s' (ID: 265)
  Prédit: '      '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '      ' → logprob: -0.016225913539528847
    2. 's' → logprob: -4.766225814819336
    3. ' s' → logprob: -4.891225814819336
    4. '       ' → logprob: -10.891225814819336
    5. '  ' → logprob: -11.016225814819336
    6. '     ' → logprob: -11.141225814819336
    7. '   ' → logprob: -12.266225814819336
    8. '    ' → logprob: -12.516225814819336
    9. '          ' → logprob: -12.641225814819336
    10. '
' → logprob: -12.891225814819336

Token 214: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.014260820113122463
    2. '2' → logprob: -4.264260768890381
    3. '_' → logprob: -9.764261245727539
    4. '1' → logprob: -11.514261245727539
    5. '==' → logprob: -11.889261245727539
    6. '```' → logprob: -12.139261245727539
    7. '=' → logprob: -13.014261245727539
    8. '``' → logprob: -13.139261245727539
    9. '(' → logprob: -13.389261245727539
    10. ' ==' → logprob: -13.639261245727539

Token 215: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16051290929317474
    2. '==' → logprob: -1.910512924194336
    3. ' in' → logprob: -9.035512924194336
    4. '==(' → logprob: -9.160512924194336
    5. ' ' → logprob: -10.285512924194336
    6. ')==' → logprob: -11.660512924194336
    7. ')' → logprob: -11.785512924194336
    8. 'in' → logprob: -12.035512924194336
    9. '   ' → logprob: -12.910512924194336
    10. '  ' → logprob: -13.410512924194336

Token 216: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005235529970377684
    2. ' (' → logprob: -5.25523567199707
    3. '  ' → logprob: -13.75523567199707
    4. ' ' → logprob: -14.63023567199707
    5. '0' → logprob: -15.88023567199707
    6. '   ' → logprob: -16.25523567199707
    7. '      ' → logprob: -18.25523567199707
    8. '    ' → logprob: -18.50523567199707
    9. '          ' → logprob: -20.13023567199707
    10. '((' → logprob: -20.25523567199707

Token 217: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005823421524837613
    2. '0' → logprob: -8.250582695007324
    3. ' (' → logprob: -8.375582695007324
    4. '1' → logprob: -9.625582695007324
    5. ' ' → logprob: -11.000582695007324
    6. '   ' → logprob: -12.250582695007324
    7. '  ' → logprob: -13.000582695007324
    8. '    ' → logprob: -15.750582695007324
    9. '((' → logprob: -15.875582695007324
    10. '     ' → logprob: -16.125581741333008

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011292597046121955
    2. ' ,' → logprob: -7.001129150390625
    3. '1' → logprob: -8.626129150390625
    4. '   ' → logprob: -10.626129150390625
    5. ' ' → logprob: -12.376129150390625
    6. ',
' → logprob: -12.626129150390625
    7. '  ' → logprob: -13.001129150390625
    8. '2' → logprob: -14.626129150390625
    9. '```' → logprob: -14.626129150390625
    10. '    ' → logprob: -14.876129150390625

Token 219: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3496595621109009
    2. '1' → logprob: -1.2246595621109009
    3. ' ' → logprob: -6.724659442901611
    4. '0' → logprob: -12.09965991973877
    5. '```' → logprob: -13.22465991973877
    6. '   ' → logprob: -13.34965991973877
    7. '  ' → logprob: -13.53715991973877
    8. '(' → logprob: -14.72465991973877
    9. '-' → logprob: -14.97465991973877
    10. '
' → logprob: -15.22465991973877

Token 220: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009896567091345787
    2. '1' → logprob: -4.634896755218506
    3. ' ' → logprob: -8.884896278381348
    4. '```' → logprob: -14.259896278381348
    5. '0' → logprob: -15.072396278381348
    6. '-' → logprob: -15.259896278381348
    7. '   ' → logprob: -15.509896278381348
    8. '
' → logprob: -15.947396278381348
    9. '(' → logprob: -16.009897232055664
    10. '  ' → logprob: -16.072397232055664

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019126241386402398
    2. '2' → logprob: -8.625191688537598
    3. ' ,' → logprob: -11.750191688537598
    4. ' ' → logprob: -13.500191688537598
    5. '3' → logprob: -14.375191688537598
    6. ')' → logprob: -14.625191688537598
    7. ',
' → logprob: -15.375191688537598
    8. '```' → logprob: -15.500191688537598
    9. '(' → logprob: -15.625191688537598
    10. '0' → logprob: -15.625191688537598

Token 222: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007171963807195425
    2. ' ' → logprob: -7.2507171630859375
    3. '```' → logprob: -13.250717163085938
    4. '[' → logprob: -13.750717163085938
    5. '  ' → logprob: -13.875717163085938
    6. '   ' → logprob: -13.875717163085938
    7. '0' → logprob: -14.000717163085938
    8. ')' → logprob: -14.500717163085938
    9. ',' → logprob: -15.750717163085938
    10. '-' → logprob: -15.938217163085938

Token 223: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001637300301808864
    2. ' ' → logprob: -8.750164031982422
    3. '```' → logprob: -13.250164031982422
    4. '   ' → logprob: -13.500164031982422
    5. '  ' → logprob: -14.000164031982422
    6. '0' → logprob: -15.000164031982422
    7. '[' → logprob: -15.437664031982422
    8. '1' → logprob: -15.625164031982422
    9. ',' → logprob: -16.375164031982422
    10. '      ' → logprob: -16.562664031982422

Token 224: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20692187547683716
    2. '):' → logprob: -1.7069218158721924
    3. ')' → logprob: -5.4569220542907715
    4. '   ' → logprob: -7.4569220542907715
    5. ':' → logprob: -7.8319220542907715
    6. ':
' → logprob: -8.956921577453613
    7. '):
' → logprob: -10.331921577453613
    8. ' or' → logprob: -11.081921577453613
    9. '):

' → logprob: -11.331921577453613
    10. ' ):
' → logprob: -11.331921577453613

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02677382342517376
    2. '   ' → logprob: -4.776773929595947
    3. ' return' → logprob: -4.901773929595947
    4. '
' → logprob: -5.151773929595947
    5. 'return' → logprob: -5.526773929595947
    6. ' 
' → logprob: -8.526773452758789
    7. '    
' → logprob: -8.776773452758789
    8. '\n' → logprob: -9.276773452758789
    9. '        
' → logprob: -9.401773452758789
    10. '  
' → logprob: -10.151773452758789

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3308379650115967
    2. '       ' → logprob: -1.3308379650115967
    3. ' return' → logprob: -4.080838203430176
    4. '   ' → logprob: -7.580838203430176
    5. '
' → logprob: -11.580838203430176
    6. '	return' → logprob: -12.080838203430176
    7. '           ' → logprob: -13.455838203430176
    8. ' ' → logprob: -13.955838203430176
    9. ':return' → logprob: -14.705838203430176
    10. '{return' → logprob: -15.205838203430176

Token 227: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -20.37501335144043
    4. '  ' → logprob: -21.12501335144043
    5. '000' → logprob: -21.62501335144043
    6. '۰' → logprob: -21.75001335144043
    7. '
' → logprob: -22.12501335144043
    8. '```' → logprob: -22.37501335144043
    9. '00' → logprob: -23.12501335144043
    10. '    ' → logprob: -23.87501335144043

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '000' → logprob: -22.5
    4. '۰' → logprob: -22.5
    5. '```' → logprob: -22.625
    6. '   ' → logprob: -23.75
    7. '
' → logprob: -23.75
    8. '00' → logprob: -23.75
    9. '０' → logprob: -24.125
    10. '  ' → logprob: -24.5

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04739091545343399
    2. ' for' → logprob: -3.672390937805176
    3. 'for' → logprob: -4.547390937805176
    4. '    
' → logprob: -4.922390937805176
    5. '
' → logprob: -6.797390937805176
    6. ' 
' → logprob: -7.422390937805176
    7. '  
' → logprob: -7.547390937805176
    8. '   
' → logprob: -8.172390937805176
    9. '<|end|>' → logprob: -8.422390937805176
    10. '  ' → logprob: -9.547390937805176

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3363512456417084
    2. ' for' → logprob: -1.5863512754440308
    3. 'for' → logprob: -2.586351156234741
    4. '    
' → logprob: -5.83635139465332
    5. '  
' → logprob: -6.96135139465332
    6. '   
' → logprob: -7.46135139465332
    7. ' 
' → logprob: -7.58635139465332
    8. '  ' → logprob: -8.46135139465332
    9. ' total' → logprob: -9.08635139465332
    10. '```' → logprob: -9.21135139465332

Token 231: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.330765962600708
    2. ' for' → logprob: -1.580765962600708
    3. '   ' → logprob: -2.580765962600708
    4. '    
' → logprob: -9.705765724182129
    5. '	for' → logprob: -10.830765724182129
    6. '  ' → logprob: -12.080765724182129
    7. ' ' → logprob: -13.205765724182129
    8. '<|end|>' → logprob: -13.830765724182129
    9. '  
' → logprob: -13.955765724182129
    10. '   
' → logprob: -14.205765724182129

Token 232: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6307113766670227
    2. 'e' → logprob: -1.005711317062378
    3. 'i' → logprob: -3.380711317062378
    4. ' nxt' → logprob: -4.130711555480957
    5. 'next' → logprob: -4.505711555480957
    6. ' x' → logprob: -4.755711555480957
    7. ' e' → logprob: -4.880711555480957
    8. 'new' → logprob: -5.380711555480957
    9. 'n' → logprob: -5.755711555480957
    10. ' next' → logprob: -5.755711555480957

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08896411210298538
    2. 'in' → logprob: -2.4639642238616943
    3. ' ' → logprob: -10.963964462280273
    4. '  ' → logprob: -12.963964462280273
    5. ')' → logprob: -13.963964462280273
    6. '	in' → logprob: -14.088964462280273
    7. '   ' → logprob: -14.463964462280273
    8. ',' → logprob: -14.713964462280273
    9. '_in' → logprob: -14.713964462280273
    10. '<|end|>' → logprob: -14.963964462280273

Token 234: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03854711353778839
    2. ' range' → logprob: -3.2885470390319824
    3. '[' → logprob: -8.03854751586914
    4. '(' → logprob: -8.66354751586914
    5. '(range' → logprob: -12.03854751586914
    6. '0' → logprob: -12.66354751586914
    7. '	range' → logprob: -14.78854751586914
    8. ' [' → logprob: -15.91354751586914
    9. ' ' → logprob: -16.03854751586914
    10. '   ' → logprob: -16.16354751586914

Token 235: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08439595252275467
    2. '3' → logprob: -2.5843958854675293
    3. '4' → logprob: -5.209395885467529
    4. '   ' → logprob: -11.709396362304688
    5. ' ' → logprob: -12.334396362304688
    6. '```' → logprob: -12.959396362304688
    7. '5' → logprob: -13.334396362304688
    8. ' (' → logprob: -13.459396362304688
    9. '(
' → logprob: -13.709396362304688
    10. '6' → logprob: -13.834396362304688

Token 236: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07891832292079926
    2. '4' → logprob: -2.578918218612671
    3. '5' → logprob: -11.07891845703125
    4. ' ' → logprob: -12.20391845703125
    5. '   ' → logprob: -12.95391845703125
    6. '0' → logprob: -13.20391845703125
    7. ')' → logprob: -13.82891845703125
    8. '6' → logprob: -13.82891845703125
    9. '```' → logprob: -14.45391845703125
    10. '7' → logprob: -15.32891845703125

Token 237: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026332810521125793
    2. '):
' → logprob: -3.6513328552246094
    3. ' ):' → logprob: -11.40133285522461
    4. '   ' → logprob: -11.77633285522461
    5. ':' → logprob: -11.90133285522461
    6. ')' → logprob: -12.27633285522461
    7. '):
' → logprob: -13.77633285522461
    8. '}:' → logprob: -15.15133285522461
    9. '):

' → logprob: -15.40133285522461
    10. ' ):
' → logprob: -15.77633285522461

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005982242990285158
    2. ' total' → logprob: -5.505982398986816
    3. '(total' → logprob: -7.255982398986816
    4. 'total' → logprob: -7.755982398986816
    5. '        
' → logprob: -8.505982398986816
    6. '<|end|>' → logprob: -8.630982398986816
    7. '   ' → logprob: -9.130982398986816
    8. ' ' → logprob: -9.755982398986816
    9. '    ' → logprob: -10.380982398986816
    10. ',' → logprob: -10.505982398986816

Token 239: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.34894779324531555
    2. '       ' → logprob: -1.9739477634429932
    3. 'total' (adapté à ' total') → logprob: -1.9739477634429932
    4. ' if' → logprob: -4.348948001861572
    5. '
' → logprob: -6.348948001861572
    6. '           ' → logprob: -7.348948001861572
    7. '   ' → logprob: -7.848948001861572
    8. '(total' → logprob: -7.848948001861572
    9. '        
' → logprob: -8.723947525024414
    10. 'if' → logprob: -8.723947525024414

Token 240: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.055382054299116135
    2. '+=' → logprob: -2.930382013320923
    3. '   ' → logprob: -8.180381774902344
    4. ' =' → logprob: -9.055381774902344
    5. '=' → logprob: -9.680381774902344
    6. '+' → logprob: -10.680381774902344
    7. '+=(' → logprob: -12.055381774902344
    8. ']+=' → logprob: -12.680381774902344
    9. '    ' → logprob: -12.930381774902344
    10. '       ' → logprob: -13.180381774902344

Token 241: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6931976675987244
    2. '(total' → logprob: -0.6931976675987244
    3. '   ' → logprob: -10.943197250366211
    4. '(next' → logprob: -11.068197250366211
    5. '(t' → logprob: -11.943197250366211
    6. '(root' → logprob: -13.193197250366211
    7. '(mod' → logprob: -14.068197250366211
    8. '  ' → logprob: -14.193197250366211
    9. '(max' → logprob: -14.318197250366211
    10. ' ' → logprob: -14.443197250366211

Token 242: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00034845535992644727
    2. ' total' → logprob: -8.000348091125488
    3. '(total' → logprob: -11.250348091125488
    4. '	total' → logprob: -20.125349044799805
    5. '
' → logprob: -20.500349044799805
    6. ',total' → logprob: -20.500349044799805
    7. '$total' → logprob: -21.375349044799805
    8. '   ' → logprob: -21.375349044799805
    9. '.total' → logprob: -21.500349044799805
    10. ')' → logprob: -21.750349044799805

Token 243: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759396553039551
    2. '+' → logprob: -0.8259396553039551
    3. ')' → logprob: -16.700939178466797
    4. '＋' → logprob: -16.700939178466797
    5. ' +
' → logprob: -17.075939178466797
    6. '+
' → logprob: -17.700939178466797
    7. '*' → logprob: -18.075939178466797
    8. '+x' → logprob: -18.700939178466797
    9. '+)' → logprob: -19.075939178466797
    10. '=' → logprob: -19.325939178466797

Token 244: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3868750035762787
    2. ' dp' → logprob: -1.136875033378601
    3. '	dp' → logprob: -13.63687515258789
    4. ')' → logprob: -13.76187515258789
    5. '(dp' → logprob: -13.88687515258789
    6. '
' → logprob: -14.38687515258789
    7. '_dp' → logprob: -15.88687515258789
    8. 'dfs' → logprob: -17.01187515258789
    9. '.dp' → logprob: -17.13687515258789
    10. ' ' → logprob: -17.76187515258789

Token 245: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00030316898482851684
    2. 'n' → logprob: -8.125303268432617
    3. '(' → logprob: -12.125303268432617
    4. '(
' → logprob: -13.625303268432617
    5. ')n' → logprob: -15.375303268432617
    6. ' n' → logprob: -16.250303268432617
    7. '```' → logprob: -16.500303268432617
    8. '<n' → logprob: -17.125303268432617
    9. '_n' → logprob: -17.750303268432617
    10. '	n' → logprob: -18.125303268432617

Token 246: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.027550313621759415
    2. '(n' → logprob: -4.027550220489502
    3. '+' → logprob: -5.152550220489502
    4. ' -' → logprob: -5.652550220489502
    5. 'n' → logprob: -10.77755069732666
    6. '(' → logprob: -11.52755069732666
    7. ' +' → logprob: -12.02755069732666
    8. '1' → logprob: -12.15255069732666
    9. '-n' → logprob: -12.40255069732666
    10. ',' → logprob: -12.90255069732666

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -17.875
    4. '```' → logprob: -17.875
    5. 'from' → logprob: -18.625
    6. '
' → logprob: -19.25
    7. 'x' → logprob: -19.625
    8. '       ' → logprob: -20.375
    9. ')' → logprob: -20.875
    10. ',' → logprob: -20.875

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5552179217338562
    2. ',b' → logprob: -1.055217981338501
    3. ',x' → logprob: -3.430217981338501
    4. '(b' → logprob: -4.555217742919922
    5. 'b' → logprob: -4.680217742919922
    6. ' ,' → logprob: -4.930217742919922
    7. 'a' → logprob: -5.430217742919922
    8. 'x' → logprob: -5.430217742919922
    9. ',a' → logprob: -5.805217742919922
    10. ' b' → logprob: -5.930217742919922

Token 249: ' x' (ID: 1215)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0016326900804415345
    2. 'x' → logprob: -6.5016326904296875
    3. ' b' → logprob: -9.001632690429688
    4. 'a' → logprob: -12.251632690429688
    5. '   ' → logprob: -13.751632690429688
    6. ' x' → logprob: -14.001632690429688
    7. 'c' → logprob: -15.751632690429688
    8. ' ' → logprob: -16.376632690429688
    9. '	b' → logprob: -16.626632690429688
    10. '(b' → logprob: -17.626632690429688

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0687851756811142
    2. ',b' → logprob: -3.0687851905822754
    3. ',a' → logprob: -4.193785190582275
    4. 'a' → logprob: -6.068785190582275
    5. 'b' → logprob: -6.443785190582275
    6. ' ,' → logprob: -7.193785190582275
    7. ',c' → logprob: -8.443784713745117
    8. 'c' → logprob: -11.693784713745117
    9. ' a' → logprob: -11.818784713745117
    10. ',d' → logprob: -12.068784713745117

Token 251: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5213274309644476e-05
    2. 'b' → logprob: -11.625015258789062
    3. ' a' → logprob: -12.000015258789062
    4. '   ' → logprob: -17.250015258789062
    5. '	a' → logprob: -19.000015258789062
    6. ')a' → logprob: -20.000015258789062
    7. '    ' → logprob: -20.250015258789062
    8. ',a' → logprob: -20.250015258789062
    9. ' ' → logprob: -20.750015258789062
    10. '  ' → logprob: -21.000015258789062

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06635117530822754
    2. 'b' → logprob: -3.4413511753082275
    3. ',b' → logprob: -3.4413511753082275
    4. ' ,' → logprob: -8.816350936889648
    5. ' b' → logprob: -12.316350936889648
    6. ')' → logprob: -14.316350936889648
    7. ',
' → logprob: -14.441350936889648
    8. '<|end|>' → logprob: -15.191350936889648
    9. '  ' → logprob: -15.316350936889648
    10. '   ' → logprob: -15.816350936889648

Token 253: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.4121114822482923e-06
    2. ' b' → logprob: -12.625003814697266
    3. ')b' → logprob: -20.625003814697266
    4. '	b' → logprob: -21.125003814697266
    5. 'c' → logprob: -22.000003814697266
    6. '   ' → logprob: -22.625003814697266
    7. '$b' → logprob: -22.875003814697266
    8. ' ' → logprob: -23.250003814697266
    9. '>b' → logprob: -23.500003814697266
    10. ',b' → logprob: -24.000003814697266

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007643607095815241
    2. ',c' → logprob: -7.3757643699646
    3. ' ,' → logprob: -9.125763893127441
    4. 'c' → logprob: -11.000763893127441
    5. ',d' → logprob: -11.625763893127441
    6. ',
' → logprob: -13.375763893127441
    7. '))' → logprob: -14.000763893127441
    8. ')' → logprob: -14.625763893127441
    9. '),' → logprob: -15.625763893127441
    10. 'd' → logprob: -16.000764846801758

Token 255: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010223194840364158
    2. ' c' → logprob: -9.250102043151855
    3. ')c' → logprob: -12.125102043151855
    4. ')' → logprob: -15.000102043151855
    5. '	c' → logprob: -16.375102996826172
    6. '$c' → logprob: -17.250102996826172
    7. '<|end|>' → logprob: -17.500102996826172
    8. '   ' → logprob: -17.625102996826172
    9. ' ' → logprob: -17.875102996826172
    10. '_c' → logprob: -18.000102996826172

Token 256: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000204851632588543
    2. ')' → logprob: -8.750205039978027
    3. ')))' → logprob: -10.625205039978027
    4. '   ' → logprob: -11.375205039978027
    5. ' ))' → logprob: -12.000205039978027
    6. '       ' → logprob: -13.500205039978027
    7. ')
' → logprob: -13.500205039978027
    8. ' ' → logprob: -14.125205039978027
    9. '  ' → logprob: -15.750205039978027
    10. '))
' → logprob: -15.750205039978027

Token 257: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4206750690937042
    2. '%' → logprob: -1.5456750392913818
    3. ')' → logprob: -2.045675039291382
    4. ')%' → logprob: -7.045675277709961
    5. ' ' → logprob: -11.170675277709961
    6. ' )' → logprob: -11.420675277709961
    7. '
' → logprob: -11.670675277709961
    8. ' total' → logprob: -12.045675277709961
    9. '```' → logprob: -12.295675277709961
    10. '%)' → logprob: -12.420675277709961

Token 258: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.935296834039036e-06
    2. ' MOD' → logprob: -12.75000286102295
    3. '_MOD' → logprob: -21.250003814697266
    4. '.MOD' → logprob: -23.375003814697266
    5. '```' → logprob: -24.000003814697266
    6. 'Mod' → logprob: -24.750003814697266
    7. 'MO' → logprob: -25.000003814697266
    8. '
' → logprob: -25.000003814697266
    9. '   ' → logprob: -25.000003814697266
    10. 'MD' → logprob: -25.500003814697266

Token 259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012721302919089794
    2. '
' → logprob: -4.637721538543701
    3. '    
' → logprob: -6.137721538543701
    4. 'return' → logprob: -8.387721061706543
    5. ' return' → logprob: -8.512721061706543
    6. '  
' → logprob: -8.887721061706543
    7. ')' → logprob: -9.637721061706543
    8. '<|end|>' → logprob: -9.637721061706543
    9. ' 
' → logprob: -10.512721061706543
    10. '   
' → logprob: -10.762721061706543

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01093545462936163
    2. 'return' → logprob: -4.635935306549072
    3. ' return' → logprob: -7.260935306549072
    4. '```' → logprob: -8.01093578338623
    5. '	return' → logprob: -9.38593578338623
    6. '    
' → logprob: -10.63593578338623
    7. '
' → logprob: -11.01093578338623
    8. ':return' → logprob: -12.01093578338623
    9. ')return' → logprob: -12.13593578338623
    10. '       ' → logprob: -12.51093578338623

Token 261: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015402207151055336
    2. '   ' → logprob: -4.390402317047119
    3. ' return' → logprob: -6.265402317047119
    4. '```' → logprob: -7.640402317047119
    5. '	return' → logprob: -7.890402317047119
    6. ':return' → logprob: -9.765401840209961
    7. '
' → logprob: -10.265401840209961
    8. '    
' → logprob: -11.015401840209961
    9. ')return' → logprob: -12.265401840209961
    10. 'eturn' → logprob: -12.390401840209961

Token 262: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.014164448715746403
    2. ' total' → logprob: -4.264164447784424
    3. '(total' → logprob: -14.014164924621582
    4. 'tot' → logprob: -17.139163970947266
    5. '   ' → logprob: -18.514163970947266
    6. '	total' → logprob: -18.639163970947266
    7. 'to' → logprob: -19.264163970947266
    8. '
' → logprob: -19.514163970947266
    9. '$total' → logprob: -19.514163970947266
    10. ' ' → logprob: -19.639163970947266

Token 263: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6986930966377258
    2. '<|end|>' → logprob: -0.6986930966377258
    3. '```' → logprob: -6.07369327545166
    4. '
' → logprob: -6.94869327545166
    5. '\n' → logprob: -7.69869327545166
    6. '#' → logprob: -7.94869327545166
    7. '<|end|>' → logprob: -8.07369327545166
    8. 'total' → logprob: -8.32369327545166
    9. ')
' → logprob: -8.57369327545166
    10. '(' → logprob: -8.94869327545166

Token 264: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011821311200037599
    2. 'result' → logprob: -6.7511820793151855
    3. 'for' → logprob: -11.751182556152344
    4. 'answer' → logprob: -12.751182556152344
    5. '```' → logprob: -14.501182556152344
    6. 'res' → logprob: -14.751182556152344
    7. ' print' → logprob: -16.876182556152344
    8. 'if' → logprob: -17.001182556152344
    9. 'ans' → logprob: -17.001182556152344
    10. 'pr' → logprob: -18.126182556152344

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08932841569185257
    2. '=' → logprob: -2.4643285274505615
    3. '<|end|>' → logprob: -8.46432876586914
    4. ')' → logprob: -10.08932876586914
    5. '(' → logprob: -10.08932876586914
    6. '<|end|>' → logprob: -11.08932876586914
    7. ' ' → logprob: -11.33932876586914
    8. '("="' → logprob: -11.46432876586914
    9. ' =)' → logprob: -11.46432876586914
    10. '   ' → logprob: -11.58932876586914

Token 266: ' sum' (ID: 4215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0068669249303638935
    2. '(dp' → logprob: -5.381866931915283
    3. ' dp' → logprob: -6.131866931915283
    4. '0' → logprob: -10.131866455078125
    5. 'sum' → logprob: -11.131866455078125
    6. '(' → logprob: -11.256866455078125
    7. ' (' → logprob: -13.006866455078125
    8. ' ' → logprob: -14.131866455078125
    9. '(sum' → logprob: -14.756866455078125
    10. ' sum' → logprob: -15.506866455078125

Token 267: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0012041617883369327
    2. '(' → logprob: -6.751204013824463
    3. '(range' → logprob: -11.126204490661621
    4. '([' → logprob: -12.001204490661621
    5. 'dp' → logprob: -12.126204490661621
    6. '((' → logprob: -12.501204490661621
    7. '(
' → logprob: -13.251204490661621
    8. '(result' → logprob: -14.376204490661621
    9. '(df' → logprob: -14.501204490661621
    10. '(d' → logprob: -15.751204490661621

Token 268: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.4894986785948277e-05
    2. 'N' → logprob: -10.125044822692871
    3. '(' → logprob: -12.500044822692871
    4. '(n' → logprob: -14.250044822692871
    5. '(
' → logprob: -16.375045776367188
    6. ')' → logprob: -16.500045776367188
    7. 's' → logprob: -17.125045776367188
    8. '(M' → logprob: -17.250045776367188
    9. '```' → logprob: -17.250045776367188
    10. '   ' → logprob: -17.500045776367188

Token 269: ',' (ID: 11)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0022050936240702868
    2. '(' → logprob: -6.377204895019531
    3. '(n' → logprob: -8.377204895019531
    4. ',' → logprob: -8.377204895019531
    5. ')' → logprob: -11.377204895019531
    6. ' (' → logprob: -11.502204895019531
    7. ',N' → logprob: -12.127204895019531
    8. '(
' → logprob: -12.252204895019531
    9. '```' → logprob: -12.502204895019531
    10. '),' → logprob: -14.002204895019531

Token 270: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.054272741079330444
    2. 'i' → logprob: -3.0542726516723633
    3. '0' → logprob: -5.304272651672363
    4. '-' → logprob: -7.929272651672363
    5. ' x' → logprob: -8.679272651672363
    6. '4' → logprob: -9.679272651672363
    7. 'a' → logprob: -9.804272651672363
    8. ' i' → logprob: -10.679272651672363
    9. ' -' → logprob: -11.554272651672363
    10. '   ' → logprob: -12.429272651672363

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004830007441341877
    2. '0' → logprob: -6.2548298835754395
    3. ',i' → logprob: -6.3798298835754395
    4. 'for' → logprob: -7.5048298835754395
    5. '(' → logprob: -8.129830360412598
    6. ' ,' → logprob: -8.754830360412598
    7. '(i' → logprob: -9.504830360412598
    8. ')' → logprob: -10.129830360412598
    9. 'i' → logprob: -10.504830360412598
    10. ' for' → logprob: -11.004830360412598

Token 272: ' j' (ID: 441)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9848284721374512
    2. '0' → logprob: -0.9848284721374512
    3. 'j' → logprob: -1.7348284721374512
    4. 'i' → logprob: -2.609828472137451
    5. '4' → logprob: -6.359828472137451
    6. '3' → logprob: -7.359828472137451
    7. ' -' → logprob: -7.734828472137451
    8. '-j' → logprob: -9.98482894897461
    9. '-i' → logprob: -10.23482894897461
    10. ' ' → logprob: -10.73482894897461

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11198193579912186
    2. ',k' → logprob: -2.3619818687438965
    3. 'k' → logprob: -4.4869818687438965
    4. ' ,' → logprob: -7.7369818687438965
    5. ' k' → logprob: -11.611982345581055
    6. '0' → logprob: -12.236982345581055
    7. ',
' → logprob: -14.986982345581055
    8. '(k' → logprob: -15.361982345581055
    9. 'for' → logprob: -15.486982345581055
    10. ',i' → logprob: -15.736982345581055

Token 274: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.259079363080673e-05
    2. ' k' → logprob: -11.375012397766113
    3. '0' → logprob: -13.750012397766113
    4. 'x' → logprob: -17.25001335144043
    5. ' ' → logprob: -18.62501335144043
    6. ',' → logprob: -19.12501335144043
    7. 'j' → logprob: -19.25001335144043
    8. 'i' → logprob: -19.37501335144043
    9. ',k' → logprob: -19.75001335144043
    10. '  ' → logprob: -20.12501335144043

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00113176298327744
    2. ',l' → logprob: -7.001131534576416
    3. ')' → logprob: -9.626132011413574
    4. 'l' → logprob: -9.751132011413574
    5. 'for' → logprob: -9.876132011413574
    6. ' ,' → logprob: -10.501132011413574
    7. ' for' → logprob: -11.126132011413574
    8. ' l' → logprob: -14.126132011413574
    9. '   ' → logprob: -14.376132011413574
    10. ' ' → logprob: -14.876132011413574

Token 276: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.2524021157296374e-05
    2. 'm' → logprob: -10.375052452087402
    3. '0' → logprob: -11.000052452087402
    4. ' l' → logprob: -12.375052452087402
    5. 'h' → logprob: -15.750052452087402
    6. '1' → logprob: -17.25005340576172
    7. ' ' → logprob: -17.25005340576172
    8. '   ' → logprob: -18.25005340576172
    9. 'x' → logprob: -18.25005340576172
    10. 'k' → logprob: -19.00005340576172

Token 277: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1239391416311264
    2. 'for' → logprob: -2.623939037322998
    3. ')' → logprob: -3.123939037322998
    4. '()' → logprob: -9.998939514160156
    5. '   ' → logprob: -11.998939514160156
    6. ' in' → logprob: -12.373939514160156
    7. '(' → logprob: -12.998939514160156
    8. '	for' → logprob: -12.998939514160156
    9. ' )' → logprob: -13.623939514160156
    10. ' ' → logprob: -13.623939514160156

Token 278: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07891755551099777
    2. 'for' → logprob: -2.5789175033569336
    3. '	for' → logprob: -11.328917503356934
    4. ')' → logprob: -11.953917503356934
    5. ' in' → logprob: -12.578917503356934
    6. '(' → logprob: -12.828917503356934
    7. '   ' → logprob: -12.953917503356934
    8. '
' → logprob: -15.828917503356934
    9. '```' → logprob: -16.07891845703125
    10. ',' → logprob: -16.57891845703125

Token 279: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004621303640305996
    2. ' i' → logprob: -5.379621505737305
    3. 'l' → logprob: -15.129621505737305
    4. ' ' → logprob: -15.754621505737305
    5. '   ' → logprob: -15.754621505737305
    6. '	i' → logprob: -16.129621505737305
    7. '
' → logprob: -16.379621505737305
    8. '0' → logprob: -16.754621505737305
    9. '(i' → logprob: -17.504621505737305
    10. '_i' → logprob: -17.629621505737305

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47593095898628235
    2. 'in' → logprob: -0.97593092918396
    3. ',' → logprob: -6.350931167602539
    4. ',j' → logprob: -9.975931167602539
    5. ' ' → logprob: -10.725931167602539
    6. ' ,' → logprob: -10.975931167602539
    7. '=' → logprob: -11.225931167602539
    8. '  ' → logprob: -12.975931167602539
    9. '```' → logprob: -13.725931167602539
    10. ')' → logprob: -13.850931167602539

Token 281: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015908108616713434
    2. ' range' → logprob: -8.75015926361084
    3. '0' → logprob: -14.87515926361084
    4. '(' → logprob: -16.500158309936523
    5. '(range' → logprob: -16.625158309936523
    6. '[' → logprob: -18.000158309936523
    7. '	range' → logprob: -19.750158309936523
    8. '   ' → logprob: -20.875158309936523
    9. ' ' → logprob: -21.000158309936523
    10. '
' → logprob: -21.250158309936523

Token 282: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5231402516365051
    2. '4' → logprob: -0.8981402516365051
    3. ' ' → logprob: -11.773139953613281
    4. '(
' → logprob: -12.648139953613281
    5. '=' → logprob: -13.273139953613281
    6. '```' → logprob: -13.273139953613281
    7. ')' → logprob: -13.898139953613281
    8. ' (' → logprob: -14.898139953613281
    9. '{' → logprob: -15.398139953613281
    10. '   ' → logprob: -15.398139953613281

Token 283: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -17.125
    4. ')' → logprob: -18.875
    5. '' → logprob: -19.0
    6. '   ' → logprob: -19.0
    7. '5' → logprob: -19.75
    8. '=' → logprob: -20.25
    9. '(' → logprob: -20.375
    10. '
' → logprob: -20.5

Token 284: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20181024074554443
    2. 'for' → logprob: -1.7018102407455444
    3. ')' → logprob: -8.076809883117676
    4. ',' → logprob: -9.951809883117676
    5. '   ' → logprob: -10.451809883117676
    6. '	for' → logprob: -12.451809883117676
    7. ' ' → logprob: -12.451809883117676
    8. '```' → logprob: -14.576809883117676
    9. ' in' → logprob: -15.076809883117676
    10. '  ' → logprob: -15.826809883117676

Token 285: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38687434792518616
    2. ' for' → logprob: -1.1368743181228638
    3. ')' → logprob: -13.636874198913574
    4. '	for' → logprob: -13.886874198913574
    5. '   ' → logprob: -14.636874198913574
    6. ',' → logprob: -15.386874198913574
    7. ' ' → logprob: -15.636874198913574
    8. '```' → logprob: -15.886874198913574
    9. ' in' → logprob: -16.01187515258789
    10. ' range' → logprob: -17.51187515258789

Token 286: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029751643538475037
    2. ' j' → logprob: -3.5297515392303467
    3. 'k' → logprob: -13.654751777648926
    4. '   ' → logprob: -17.40475082397461
    5. '	j' → logprob: -17.77975082397461
    6. ' k' → logprob: -17.77975082397461
    7. ' ' → logprob: -17.77975082397461
    8. ' ' → logprob: -18.77975082397461
    9. 'l' → logprob: -19.02975082397461
    10. '$j' → logprob: -19.52975082397461

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132866322994232
    2. 'in' → logprob: -1.3132866621017456
    3. 'range' → logprob: -10.813286781311035
    4. ' range' → logprob: -12.438286781311035
    5. ' ' → logprob: -14.313286781311035
    6. '(range' → logprob: -16.43828582763672
    7. '<|end|>' → logprob: -17.06328582763672
    8. '4' → logprob: -17.81328582763672
    9. '```' → logprob: -18.06328582763672
    10. ')' → logprob: -18.43828582763672

Token 288: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012356207298580557
    2. ' range' → logprob: -9.000123977661133
    3. '4' → logprob: -15.625123977661133
    4. '(range' → logprob: -16.875123977661133
    5. '```' → logprob: -20.625123977661133
    6. '	range' → logprob: -20.625123977661133
    7. '(' → logprob: -21.625123977661133
    8. ' ' → logprob: -22.375123977661133
    9. '
' → logprob: -23.125123977661133
    10. '   ' → logprob: -23.375123977661133

Token 289: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.392202976712724e-06
    2. '4' → logprob: -12.250006675720215
    3. 'range' → logprob: -13.375006675720215
    4. '(range' → logprob: -17.3750057220459
    5. ' range' → logprob: -18.7500057220459
    6. '```' → logprob: -18.8750057220459
    7. ' (' → logprob: -19.5000057220459
    8. 'for' → logprob: -20.0000057220459
    9. '(
' → logprob: -21.1250057220459
    10. 'in' → logprob: -21.5000057220459

Token 290: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -13.000004768371582
    3. 'range' → logprob: -13.750004768371582
    4. '```' → logprob: -14.750004768371582
    5. '<|end|>' → logprob: -15.375004768371582
    6. ')' → logprob: -15.875004768371582
    7. '   ' → logprob: -17.250003814697266
    8. '৪' → logprob: -17.375003814697266
    9. '' → logprob: -17.375003814697266
    10. ' range' → logprob: -17.687503814697266

Token 291: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018150413408875465
    2. 'for' → logprob: -4.018150329589844
    3. '	for' → logprob: -15.143150329589844
    4. ' ' → logprob: -15.768150329589844
    5. ' in' → logprob: -16.768150329589844
    6. ')' → logprob: -17.268150329589844
    7. ' range' → logprob: -18.268150329589844
    8. ' ' → logprob: -19.518150329589844
    9. '   ' → logprob: -19.768150329589844
    10. '```' → logprob: -20.268150329589844

Token 292: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2519291639328003
    2. 'for' → logprob: -1.5019291639328003
    3. '	for' → logprob: -16.376928329467773
    4. ' ' → logprob: -17.626928329467773
    5. '```' → logprob: -17.626928329467773
    6. ' in' → logprob: -18.376928329467773
    7. '(for' → logprob: -18.751928329467773
    8. '   ' → logprob: -18.876928329467773
    9. ' range' → logprob: -19.501928329467773
    10. '.for' → logprob: -20.376928329467773

Token 293: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07888978719711304
    2. ' k' → logprob: -2.578889846801758
    3. '```' → logprob: -18.828889846801758
    4. '	k' → logprob: -19.078889846801758
    5. ' ' → logprob: -19.328889846801758
    6. '{k' → logprob: -19.828889846801758
    7. 'l' → logprob: -20.078889846801758
    8. ' l' → logprob: -20.453889846801758
    9. '[k' → logprob: -20.953889846801758
    10. '  ' → logprob: -21.078889846801758

Token 294: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38810306787490845
    2. ' in' → logprob: -1.1381030082702637
    3. 'range' → logprob: -6.763103008270264
    4. '(range' → logprob: -10.388103485107422
    5. ' range' → logprob: -10.513103485107422
    6. 'for' → logprob: -12.013103485107422
    7. '```' → logprob: -12.138103485107422
    8. '4' → logprob: -12.513103485107422
    9. '(' → logprob: -13.388103485107422
    10. ' ' → logprob: -14.888103485107422

Token 295: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001249925117008388
    2. ' range' → logprob: -9.00012493133545
    3. '4' → logprob: -13.50012493133545
    4. '(range' → logprob: -16.375125885009766
    5. '```' → logprob: -19.500125885009766
    6. '	range' → logprob: -19.500125885009766
    7. '[' → logprob: -21.750125885009766
    8. ' ' → logprob: -21.875125885009766
    9. '
' → logprob: -22.000125885009766
    10. '   ' → logprob: -23.000125885009766

Token 296: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038145645521581173
    2. '4' → logprob: -7.8753814697265625
    3. 'range' → logprob: -13.750381469726562
    4. '(range' → logprob: -16.125381469726562
    5. 'for' → logprob: -16.500381469726562
    6. '```' → logprob: -16.875381469726562
    7. ' range' → logprob: -17.500381469726562
    8. ' (' → logprob: -17.875381469726562
    9. '(
' → logprob: -18.000381469726562
    10. '<|end|>' → logprob: -18.250381469726562

Token 297: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.375
    4. '<|end|>' → logprob: -17.75
    5. '৪' → logprob: -18.25
    6. '۴' → logprob: -18.625
    7. '(' → logprob: -18.875
    8. '४' → logprob: -18.9375
    9. '' → logprob: -19.0
    10. 'range' → logprob: -19.0

Token 298: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0380416102707386
    2. 'for' → logprob: -3.288041591644287
    3. ')' → logprob: -16.163042068481445
    4. ' ' → logprob: -17.038042068481445
    5. '	for' → logprob: -17.288042068481445
    6. ' in' → logprob: -17.788042068481445
    7. '   ' → logprob: -19.413042068481445
    8. '(for' → logprob: -19.413042068481445
    9. ' ' → logprob: -19.538042068481445
    10. '```' → logprob: -19.788042068481445

Token 299: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023245595395565033
    2. 'for' → logprob: -3.7732455730438232
    3. '	for' → logprob: -16.023244857788086
    4. ' ' → logprob: -17.523244857788086
    5. '   ' → logprob: -19.398244857788086
    6. ' in' → logprob: -19.773244857788086
    7. '    ' → logprob: -20.023244857788086
    8. '```' → logprob: -20.148244857788086
    9. ' ' → logprob: -20.523244857788086
    10. '
' → logprob: -20.773244857788086

Token 300: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0024756586644798517
    2. ' l' → logprob: -6.002475738525391
    3. '	l' → logprob: -18.37747573852539
    4. ' ' → logprob: -18.87747573852539
    5. '```' → logprob: -19.12747573852539
    6. '   ' → logprob: -19.37747573852539
    7. '  ' → logprob: -20.75247573852539
    8. '_l' → logprob: -20.87747573852539
    9. ')' → logprob: -21.25247573852539
    10. '`' → logprob: -21.37747573852539

Token 301: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10137207806110382
    2. ' in' → logprob: -2.351372003555298
    3. 'range' → logprob: -6.976372241973877
    4. '(' → logprob: -8.976371765136719
    5. ' range' → logprob: -9.726371765136719
    6. '(range' → logprob: -10.226371765136719
    7. '4' → logprob: -12.226371765136719
    8. ')' → logprob: -12.726371765136719
    9. ' (' → logprob: -14.851371765136719
    10. ' ' → logprob: -15.226371765136719

Token 302: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003391574718989432
    2. '4' → logprob: -8.25033950805664
    3. ' range' → logprob: -9.50033950805664
    4. '(range' → logprob: -12.87533950805664
    5. '(' → logprob: -14.37533950805664
    6. '```' → logprob: -20.00033950805664
    7. '	range' → logprob: -20.12533950805664
    8. '[' → logprob: -21.00033950805664
    9. ')' → logprob: -21.12533950805664
    10. 'Range' → logprob: -21.37533950805664

Token 303: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '4' → logprob: -15.75
    3. ' (' → logprob: -18.125
    4. '(
' → logprob: -18.5
    5. '((' → logprob: -21.625
    6. '```' → logprob: -22.125
    7. '   ' → logprob: -22.5
    8. 'range' → logprob: -22.875
    9. '<|end|>' → logprob: -23.0
    10. '[](' → logprob: -23.25

Token 304: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.250005722045898
    3. ')' → logprob: -14.625005722045898
    4. '```' → logprob: -15.875005722045898
    5. '0' → logprob: -16.2500057220459
    6. '(' → logprob: -16.5000057220459
    7. '<|end|>' → logprob: -16.8125057220459
    8. '   ' → logprob: -17.4375057220459
    9. '' → logprob: -17.5000057220459
    10. '৪' → logprob: -18.3125057220459

Token 305: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. '))' → logprob: -12.750012397766113
    3. ')**' → logprob: -12.875012397766113
    4. ' )' → logprob: -13.875012397766113
    5. ')>' → logprob: -14.000012397766113
    6. ')%' → logprob: -14.000012397766113
    7. ')+' → logprob: -14.125012397766113
    8. ')#' → logprob: -14.500012397766113
    9. ')==' → logprob: -14.750012397766113
    10. ')}' → logprob: -14.750012397766113

Token 306: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.023304643109440804
    2. ' %' → logprob: -4.148304462432861
    3. 'print' → logprob: -5.523304462432861
    4. '
' → logprob: -5.898304462432861
    5. ')' → logprob: -8.27330493927002
    6. '```' → logprob: -8.89830493927002
    7. '%\' → logprob: -10.52330493927002
    8. ' print' → logprob: -10.64830493927002
    9. ')%' → logprob: -11.27330493927002
    10. '
' → logprob: -11.64830493927002

Token 307: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0067154900170862675
    2. ' MOD' → logprob: -5.006715297698975
    3. '_MOD' → logprob: -16.256715774536133
    4. '```' → logprob: -18.881715774536133
    5. '.MOD' → logprob: -19.131715774536133
    6. ' ' → logprob: -19.631715774536133
    7. '10' → logprob: -20.756715774536133
    8. '100' → logprob: -21.256715774536133
    9. '(M' → logprob: -21.506715774536133
    10. 'Mod' → logprob: -21.881715774536133

Token 308: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013882013445254415
    2. '
' → logprob: -9.250139236450195
    3. '```' → logprob: -10.125139236450195
    4. '``' → logprob: -13.500139236450195
    5. ' print' → logprob: -14.625139236450195
    6. '<|end|>' → logprob: -15.375139236450195
    7. '
' → logprob: -16.000139236450195
    8. '#print' → logprob: -16.125139236450195
    9. '(print' → logprob: -16.375139236450195
    10. '  
' → logprob: -16.500139236450195

Token 309: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.941850526549388e-06
    2. '```' → logprob: -12.000007629394531
    3. '
' → logprob: -13.625007629394531
    4. ' print' → logprob: -14.750007629394531
    5. '``' → logprob: -15.625007629394531
    6. '#print' → logprob: -17.12500762939453
    7. '<|end|>' → logprob: -17.62500762939453
    8. '(print' → logprob: -17.75000762939453
    9. '  
' → logprob: -18.25000762939453
    10. '.print' → logprob: -19.25000762939453

Token 310: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.01417080033570528
    2. '(' → logprob: -4.2641706466674805
    3. 'result' → logprob: -12.38917064666748
    4. '(total' → logprob: -13.51417064666748
    5. '(
' → logprob: -15.13917064666748
    6. '()' → logprob: -15.26417064666748
    7. ' (' → logprob: -15.76417064666748
    8. '(results' → logprob: -15.76417064666748
    9. '(sum' → logprob: -15.88917064666748
    10. '(`' → logprob: -15.88917064666748

Token 311: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. '))' → logprob: -13.625003814697266
    3. ')`' → logprob: -14.250003814697266
    4. ')
' → logprob: -14.625003814697266
    5. '`)' → logprob: -14.750003814697266
    6. ' )' → logprob: -15.000003814697266
    7. '()' → logprob: -15.625003814697266
    8. '())' → logprob: -16.250003814697266
    9. '(' → logprob: -16.500003814697266
    10. ')**' → logprob: -17.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 309
Tokens correctement prédits (1ère position, stricte): 144
Tokens correctement prédits (1ère position, avec adaptation): 149
Tokens correctement prédits (top 10): 283
Précision stricte (1ère position): 46.60%
Précision adaptée (1ère position): 48.22%
Précision (top 10): 91.59%
================================================================================
