================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
original_string = input()

step_width = int(input())

result_string = ""

for character_index in range(len(original_string)):

    if character_index % step_width == 0:

        result_string += original_string[character_index]

print(result_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'original' (ID: 22155)
  → Token d'amorce (pas de prédiction)

Token 1: '_string' (ID: 8609)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.013586263172328472
    2. ''' → logprob: -4.638586044311523
    3. ' "' → logprob: -5.638586044311523
    4. ' ' → logprob: -9.638586044311523
    5. ' '' → logprob: -9.888586044311523
    6. '"user' → logprob: -10.013586044311523
    7. '""' → logprob: -10.263586044311523
    8. '"a' → logprob: -11.138586044311523
    9. '"""' → logprob: -11.513586044311523
    10. '"value' → logprob: -11.763586044311523

Token 4: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003260654164478183
    2. ''' → logprob: -6.503260612487793
    3. '('' → logprob: -7.253260612487793
    4. '"' → logprob: -8.628260612487793
    5. '()' → logprob: -8.878260612487793
    6. '[' → logprob: -8.878260612487793
    7. '```' → logprob: -9.128260612487793
    8. '.' → logprob: -9.253260612487793
    9. '(
' → logprob: -9.378260612487793
    10. '`' → logprob: -9.503260612487793

Token 5: 'step' (ID: 17509)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026378216221928596
    2. '.strip' → logprob: -3.7763781547546387
    3. '.replace' → logprob: -6.776378154754639
    4. '.lower' → logprob: -7.151378154754639
    5. '[::-' → logprob: -7.901378154754639
    6. '.upper' → logprob: -8.026378631591797
    7. '.split' → logprob: -8.526378631591797
    8. '=' → logprob: -9.401378631591797
    9. '.
' → logprob: -10.026378631591797
    10. '[' → logprob: -10.151378631591797

Token 6: '_width' (ID: 17595)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24466083943843842
    2. '_' → logprob: -1.8696608543395996
    3. ' =' → logprob: -2.9946608543395996
    4. '=' → logprob: -5.3696608543396
    5. '.' → logprob: -5.8696608543396
    6. '1' → logprob: -5.9946608543396
    7. '_size' → logprob: -6.8696608543396
    8. '_s' → logprob: -7.6196608543396
    9. ' ' → logprob: -7.8696608543396
    10. '()' → logprob: -8.744660377502441

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13411496579647064
    2. ' =' → logprob: -2.259114980697632
    3. ')' → logprob: -4.759114742279053
    4. ' ' → logprob: -4.884114742279053
    5. '_' → logprob: -5.509114742279053
    6. 's' → logprob: -8.884115219116211
    7. '+' → logprob: -9.009115219116211
    8. '[' → logprob: -9.384115219116211
    9. ']' → logprob: -9.509115219116211
    10. '.' → logprob: -9.759115219116211

Token 8: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7006550431251526
    2. ' ' → logprob: -0.7006550431251526
    3. '0' → logprob: -6.075654983520508
    4. '4' → logprob: -6.450654983520508
    5. ' int' → logprob: -6.950654983520508
    6. '2' → logprob: -6.950654983520508
    7. ' len' → logprob: -7.200654983520508
    8. 'int' → logprob: -7.700654983520508
    9. 'len' → logprob: -8.450654983520508
    10. '5' → logprob: -9.575654983520508

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3147774934768677
    2. '(original' → logprob: -1.3147774934768677
    3. '('' → logprob: -7.314777374267578
    4. '(input' → logprob: -8.439777374267578
    5. '(step' → logprob: -8.564777374267578
    6. '(user' → logprob: -8.939777374267578
    7. ' (' → logprob: -9.189777374267578
    8. 'original' → logprob: -9.689777374267578
    9. '(`' → logprob: -10.189777374267578
    10. ' ' → logprob: -10.564777374267578

Token 10: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12646915018558502
    2. '())' → logprob: -2.251469135284424
    3. '()' → logprob: -4.501469135284424
    4. '(' → logprob: -6.126469135284424
    5. '('' → logprob: -10.001469612121582
    6. '))' → logprob: -10.001469612121582
    7. ' )' → logprob: -10.001469612121582
    8. '')' → logprob: -10.126469612121582
    9. '`)' → logprob: -10.376469612121582
    10. '")' → logprob: -10.876469612121582

Token 11: 'result' (ID: 2521)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0052965879440308
    2. 's' → logprob: -1.5052965879440308
    3. 'result' → logprob: -2.0052967071533203
    4. 'new' → logprob: -2.3802967071533203
    5. 'r' → logprob: -2.6302967071533203
    6. 'i' → logprob: -4.25529670715332
    7. 'output' → logprob: -4.38029670715332
    8. 'for' → logprob: -5.25529670715332
    9. 't' → logprob: -5.38029670715332
    10. '[' → logprob: -5.38029670715332

Token 12: '_string' (ID: 8609)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8457590937614441
    2. '=' → logprob: -1.3457591533660889
    3. ' =' → logprob: -2.095759153366089
    4. '_' → logprob: -2.220759153366089
    5. '(' → logprob: -2.845759153366089
    6. '[:]' → logprob: -4.34575891494751
    7. '[]' → logprob: -6.34575891494751
    8. 's' → logprob: -7.22075891494751
    9. '_space' → logprob: -7.34575891494751
    10. '```' → logprob: -7.34575891494751

Token 13: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7094571590423584
    2. ' =' → logprob: -1.0844571590423584
    3. '+' → logprob: -2.7094571590423584
    4. '[' → logprob: -2.8344571590423584
    5. ' +=' → logprob: -3.4594571590423584
    6. '+=' → logprob: -5.3344573974609375
    7. '[:]' → logprob: -5.5844573974609375
    8. ' +' → logprob: -6.8344573974609375
    9. ' ' → logprob: -7.2094573974609375
    10. '_' → logprob: -7.2094573974609375

Token 14: ' ""

' (ID: 86057)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.17252588272094727
    2. 'original' → logprob: -2.6725258827209473
    3. '"' → logprob: -3.2975258827209473
    4. ' ""' → logprob: -3.4225258827209473
    5. ' "' → logprob: -4.922525882720947
    6. ' ' → logprob: -5.422525882720947
    7. ''' → logprob: -5.672525882720947
    8. '""' → logprob: -6.172525882720947
    9. ' ''' → logprob: -6.422525882720947
    10. ' '' → logprob: -7.547525882720947

Token 15: 'for' (ID: 1938)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10395080596208572
    2. 'for' → logprob: -2.3539507389068604
    3. 'i' → logprob: -5.6039509773254395
    4. 'fo' → logprob: -11.478950500488281
    5. ' for' → logprob: -11.478950500488281
    6. '```' → logprob: -11.728950500488281
    7. '=' → logprob: -11.853950500488281
    8. 'n' → logprob: -11.978950500488281
    9. '#' → logprob: -12.728950500488281
    10. 'F' → logprob: -13.228950500488281

Token 16: ' character' (ID: 5855)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07974079996347427
    2. ' i' → logprob: -2.5797407627105713
    3. '  ' → logprob: -8.454740524291992
    4. ' token' → logprob: -8.954740524291992
    5. ' _' → logprob: -9.079740524291992
    6. ' element' → logprob: -9.204740524291992
    7. ' char' → logprob: -9.829740524291992
    8. ' word' → logprob: -10.079740524291992
    9. '_' → logprob: -10.204740524291992
    10. ' c' → logprob: -10.579740524291992

Token 17: '_index' (ID: 7748)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7444939613342285
    2. ' in' → logprob: -0.7444939613342285
    3. 'in' → logprob: -3.6194939613342285
    4. '<|end|>' → logprob: -3.9944939613342285
    5. '  ' → logprob: -6.6194939613342285
    6. '[' → logprob: -6.7444939613342285
    7. 's' → logprob: -6.8694939613342285
    8. ' "' → logprob: -8.61949348449707
    9. '<|end|>' → logprob: -8.61949348449707
    10. ',' → logprob: -8.99449348449707

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06679195910692215
    2. 'in' → logprob: -2.8167920112609863
    3. ' ' → logprob: -5.691792011260986
    4. '<|end|>' → logprob: -7.191792011260986
    5. '[' → logprob: -7.941792011260986
    6. '  ' → logprob: -9.816791534423828
    7. '[in' → logprob: -9.816791534423828
    8. ')' → logprob: -10.316791534423828
    9. '+' → logprob: -10.566791534423828
    10. '```' → logprob: -10.941791534423828

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004658672492951155
    2. 'range' → logprob: -5.3796586990356445
    3. ' ' → logprob: -10.504658699035645
    4. '	range' → logprob: -12.004658699035645
    5. ' original' → logprob: -12.504658699035645
    6. ' xrange' → logprob: -15.129658699035645
    7. '(range' → logprob: -15.254658699035645
    8. '  ' → logprob: -15.379658699035645
    9. 'original' → logprob: -15.754658699035645
    10. '   ' → logprob: -16.254657745361328

Token 20: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.5767512917518616
    2. '(' → logprob: -0.8267512917518616
    3. '(step' → logprob: -7.451751232147217
    4. '(original' → logprob: -9.201751708984375
    5. ' (' → logprob: -9.701751708984375
    6. '(length' → logprob: -10.076751708984375
    7. '(start' → logprob: -11.826751708984375
    8. '(character' → logprob: -11.826751708984375
    9. '(range' → logprob: -12.826751708984375
    10. '(
' → logprob: -12.951751708984375

Token 21: '(original' (ID: 73254)
  Prédit: '(original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(original' → logprob: -0.04859304800629616
    2. '(' → logprob: -3.048593044281006
    3. 'original' → logprob: -13.298593521118164
    4. '(
' → logprob: -13.298593521118164
    5. '(initial' → logprob: -14.548593521118164
    6. '(

' → logprob: -15.048593521118164
    7. ' original' → logprob: -15.173593521118164
    8. '(result' → logprob: -15.298593521118164
    9. ' (' → logprob: -15.548593521118164
    10. '(origin' → logprob: -16.173593521118164

Token 22: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -7.24310302757658e-05
    2. '_' → logprob: -9.875072479248047
    3. '(' → logprob: -11.250072479248047
    4. 'string' → logprob: -13.125072479248047
    5. '(_' → logprob: -13.500072479248047
    6. '_original' → logprob: -13.750072479248047
    7. '_strings' → logprob: -14.125072479248047
    8. '_String' → logprob: -14.375072479248047
    9. 'String' → logprob: -14.750072479248047
    10. '_character' → logprob: -14.750072479248047

Token 23: '))' (ID: 915)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.14219462871551514
    2. ')' → logprob: -3.0171947479248047
    3. '))' → logprob: -3.0171947479248047
    4. '):' → logprob: -3.5171947479248047
    5. '+' → logprob: -5.892194747924805
    6. ')+' → logprob: -6.892194747924805
    7. ')):
' → logprob: -8.392194747924805
    8. '[' → logprob: -8.642194747924805
    9. ' ))' → logprob: -8.642194747924805
    10. '-' → logprob: -9.267194747924805

Token 24: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008840723894536495
    2. '[' → logprob: -8.000884056091309
    3. ' :' → logprob: -8.000884056091309
    4. ':
' → logprob: -9.375884056091309
    5. '   ' → logprob: -10.500884056091309
    6. '{' → logprob: -10.500884056091309
    7. '<|end|>' → logprob: -10.750884056091309
    8. ' if' → logprob: -11.750884056091309
    9. ',' → logprob: -11.875884056091309
    10. '+' → logprob: -12.375884056091309

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04600374773144722
    2. ' if' → logprob: -3.796003818511963
    3. '   ' → logprob: -4.546003818511963
    4. ' 
' → logprob: -5.546003818511963
    5. '    ' → logprob: -5.671003818511963
    6. ' ```' → logprob: -6.921003818511963
    7. 'result' → logprob: -7.546003818511963
    8. '<|end|>' → logprob: -7.671003818511963
    9. '     
' → logprob: -7.796003818511963
    10. '```' → logprob: -8.046003341674805

Token 26: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4389631450176239
    2. ' if' → logprob: -1.4389631748199463
    3. 'if' (adapté à ' if') → logprob: -2.9389631748199463
    4. '   ' → logprob: -3.4389631748199463
    5. 'result' → logprob: -4.438962936401367
    6. '    ' → logprob: -4.688962936401367
    7. ' result' → logprob: -5.813962936401367
    8. 'i' → logprob: -6.063962936401367
    9. '  ' → logprob: -6.563962936401367
    10. ' i' → logprob: -6.688962936401367

Token 27: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.009285066276788712
    2. 'character' → logprob: -4.759284973144531
    3. ' (' → logprob: -8.009284973144531
    4. '(character' → logprob: -8.384284973144531
    5. ' original' → logprob: -9.634284973144531
    6. ' step' → logprob: -10.259284973144531
    7. 'original' → logprob: -13.009284973144531
    8. ' ' → logprob: -13.009284973144531
    9. 'abs' → logprob: -13.884284973144531
    10. '_character' → logprob: -14.384284973144531

Token 28: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00010199354437645525
    2. '_' → logprob: -9.500102043151855
    3. ' _' → logprob: -10.625102043151855
    4. '%' → logprob: -14.250102043151855
    5. ' ' → logprob: -14.625102043151855
    6. 'index' → logprob: -15.125102043151855
    7. '```' → logprob: -15.500102043151855
    8. '_in' → logprob: -16.00010108947754
    9. '_ind' → logprob: -16.12510108947754
    10. '_idx' → logprob: -16.12510108947754

Token 29: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01778007298707962
    2. '%' → logprob: -4.142780303955078
    3. ' ' → logprob: -6.517780303955078
    4. ' >=' → logprob: -8.767780303955078
    5. '+' → logprob: -9.392780303955078
    6. '   ' → logprob: -11.892780303955078
    7. '>=' → logprob: -12.017780303955078
    8. '%s' → logprob: -12.642780303955078
    9. '<|end|>' → logprob: -12.642780303955078
    10. ' +' → logprob: -13.142780303955078

Token 30: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.048619385808706284
    2. ' step' → logprob: -3.048619270324707
    3. '(step' → logprob: -10.423619270324707
    4. ' ' → logprob: -13.548619270324707
    5. '	step' → logprob: -15.298619270324707
    6. '```' → logprob: -15.423619270324707
    7. '2' → logprob: -15.923619270324707
    8. '_step' → logprob: -16.173620223999023
    9. 'steps' → logprob: -16.423620223999023
    10. 'Step' → logprob: -16.798620223999023

Token 31: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.0003622793301474303
    2. '_' → logprob: -8.750362396240234
    3. '_w' → logprob: -9.000362396240234
    4. '==' → logprob: -9.875362396240234
    5. ' _' → logprob: -11.000362396240234
    6. ' ==' → logprob: -12.375362396240234
    7. '```' → logprob: -13.750362396240234
    8. '_height' → logprob: -13.875362396240234
    9. ')_' → logprob: -13.875362396240234
    10. '=_' → logprob: -14.250362396240234

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1456599086523056
    2. '==' → logprob: -2.020659923553467
    3. ' !=' → logprob: -5.895659923553467
    4. '!=' → logprob: -8.770659446716309
    5. '=' → logprob: -10.395659446716309
    6. ' ' → logprob: -10.645659446716309
    7. ' =' → logprob: -12.270659446716309
    8. ':' → logprob: -12.520659446716309
    9. '0' → logprob: -13.270659446716309
    10. '<|end|>' → logprob: -13.520659446716309

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868733048439026
    2. ' ' → logprob: -1.1368732452392578
    3. '1' → logprob: -14.011873245239258
    4. '=' → logprob: -14.136873245239258
    5. ' ' → logprob: -14.636873245239258
    6. '```' → logprob: -16.886873245239258
    7. '==' → logprob: -17.136873245239258
    8. ' =' → logprob: -17.636873245239258
    9. '2' → logprob: -17.761873245239258
    10. 'space' → logprob: -18.511873245239258

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '1' → logprob: -19.750011444091797
    4. '=' → logprob: -19.875011444091797
    5. '```' → logprob: -20.375011444091797
    6. '<|end|>' → logprob: -20.750011444091797
    7. '==' → logprob: -21.000011444091797
    8. '۰' → logprob: -21.000011444091797
    9. '०' → logprob: -22.125011444091797
    10. 'zero' → logprob: -22.375011444091797

Token 35: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.939851037808694e-05
    2. ':
' → logprob: -10.750029563903809
    3. '):' → logprob: -12.375029563903809
    4. ' :' → logprob: -13.375029563903809
    5. ':

' → logprob: -14.375029563903809
    6. ':**' → logprob: -15.250029563903809
    7. ',' → logprob: -15.375029563903809
    8. ':return' → logprob: -15.500029563903809
    9. ' and' → logprob: -15.625029563903809
    10. '   ' → logprob: -15.750029563903809

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10574104636907578
    2. 'result' → logprob: -2.855741024017334
    3. ' result' → logprob: -3.355741024017334
    4. '   ' → logprob: -5.480741024017334
    5. '<|end|>' → logprob: -6.355741024017334
    6. '        
' → logprob: -7.605741024017334
    7. ' ' → logprob: -7.730741024017334
    8. '    ' → logprob: -8.105741500854492
    9. ' 
' → logprob: -8.480741500854492
    10. '```' → logprob: -8.855741500854492

Token 37: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0002993544621858746
    2. ' result' → logprob: -8.125299453735352
    3. '   ' → logprob: -12.875299453735352
    4. '       ' → logprob: -15.000299453735352
    5. '	result' → logprob: -15.875299453735352
    6. ' ' → logprob: -16.12529945373535
    7. '  ' → logprob: -17.37529945373535
    8. '           ' → logprob: -17.87529945373535
    9. '    ' → logprob: -17.87529945373535
    10. '[result' → logprob: -18.00029945373535

Token 38: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.009801188483834267
    2. '_' → logprob: -4.634801387786865
    3. '+' → logprob: -11.134800910949707
    4. '+=' → logprob: -11.509800910949707
    5. '_String' → logprob: -12.509800910949707
    6. 'string' → logprob: -12.634800910949707
    7. ' +=' → logprob: -12.884800910949707
    8. '_s' → logprob: -13.259800910949707
    9. 'String' → logprob: -13.384800910949707
    10. '_append' → logprob: -13.509800910949707

Token 39: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5050801634788513
    2. ' +=' → logprob: -1.005080223083496
    3. '+' → logprob: -3.505080223083496
    4. '+='' → logprob: -8.005080223083496
    5. '+="' → logprob: -9.380080223083496
    6. '.append' → logprob: -10.630080223083496
    7. ' +' → logprob: -10.630080223083496
    8. ']+=' → logprob: -11.755080223083496
    9. '+=(' → logprob: -12.755080223083496
    10. '<|end|>' → logprob: -12.880080223083496

Token 40: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.38689061999320984
    2. ' original' → logprob: -1.1368906497955322
    3. 'character' → logprob: -11.011890411376953
    4. ' character' → logprob: -13.886890411376953
    5. '   ' → logprob: -14.011890411376953
    6. '(original' → logprob: -14.261890411376953
    7. ' ' → logprob: -14.636890411376953
    8. '  ' → logprob: -16.636890411376953
    9. 'Original' → logprob: -16.761890411376953
    10. '.original' → logprob: -17.261890411376953

Token 41: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.005429762415587902
    2. '_' → logprob: -5.255429744720459
    3. '_character' → logprob: -9.380430221557617
    4. '_s' → logprob: -9.505430221557617
    5. ' _' → logprob: -11.130430221557617
    6. 'string' → logprob: -11.880430221557617
    7. '_str' → logprob: -12.255430221557617
    8. '```' → logprob: -12.630430221557617
    9. '_char' → logprob: -13.005430221557617
    10. '__' → logprob: -13.880430221557617

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.9160102712921798e-05
    2. 'character' → logprob: -10.750029563903809
    3. '[
' → logprob: -13.125029563903809
    4. '```' → logprob: -13.625029563903809
    5. '   ' → logprob: -13.875029563903809
    6. ' [' → logprob: -14.000029563903809
    7. '_character' → logprob: -14.000029563903809
    8. ' character' → logprob: -14.875029563903809
    9. '[current' → logprob: -15.625029563903809
    10. '[result' → logprob: -15.625029563903809

Token 43: 'character' (ID: 38245)
  Prédit: 'character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.00010926496179308742
    2. ' character' → logprob: -9.125109672546387
    3. '_character' → logprob: -15.250109672546387
    4. '(character' → logprob: -16.50010871887207
    5. 'char' → logprob: -17.87510871887207
    6. '.character' → logprob: -18.25010871887207
    7. '   ' → logprob: -18.37510871887207
    8. ' ' → logprob: -19.12510871887207
    9. 'Character' → logprob: -19.75010871887207
    10. 'characters' → logprob: -19.87510871887207

Token 44: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.000495605927426368
    2. 'index' → logprob: -8.500495910644531
    3. 'x' → logprob: -8.875495910644531
    4. 'ex' → logprob: -9.000495910644531
    5. 'nd' → logprob: -11.500495910644531
    6. 'dex' → logprob: -11.500495910644531
    7. '_x' → logprob: -12.125495910644531
    8. 'Index' → logprob: -14.000495910644531
    9. '_idx' → logprob: -14.250495910644531
    10. '_' → logprob: -14.625495910644531

Token 45: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016139589250087738
    2. ')' → logprob: -4.141139507293701
    3. '}' → logprob: -9.76613998413086
    4. '])' → logprob: -10.76613998413086
    5. ' ]' → logprob: -11.26613998413086
    6. ']
' → logprob: -12.64113998413086
    7. '']' → logprob: -12.64113998413086
    8. '+' → logprob: -13.39113998413086
    9. ')]' → logprob: -13.39113998413086
    10. '<|end|>' → logprob: -14.14113998413086

Token 46: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.170270353322849e-05
    2. ')' → logprob: -10.750061988830566
    3. '<|end|>' → logprob: -11.000061988830566
    4. ' print' → logprob: -11.375061988830566
    5. '```' → logprob: -12.625061988830566
    6. '
' → logprob: -13.000061988830566
    7. '#print' → logprob: -13.125061988830566
    8. '\n' → logprob: -13.500061988830566
    9. '#' → logprob: -13.750061988830566
    10. '(print' → logprob: -14.875061988830566

Token 47: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006094808224588633
    2. '(result' → logprob: -5.131094932556152
    3. '('' → logprob: -9.381094932556152
    4. '("("' → logprob: -9.506094932556152
    5. '(original' → logprob: -13.006094932556152
    6. '()' → logprob: -14.131094932556152
    7. 'result' → logprob: -14.256094932556152
    8. ' (' → logprob: -14.381094932556152
    9. '(`' → logprob: -14.506094932556152
    10. '((' → logprob: -14.506094932556152

Token 48: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0011106859892606735
    2. '_' → logprob: -7.251110553741455
    3. '_s' → logprob: -9.001111030578613
    4. '_str' → logprob: -9.751111030578613
    5. 't' → logprob: -9.876111030578613
    6. '_result' → logprob: -9.876111030578613
    7. '_t' → logprob: -10.251111030578613
    8. '_strings' → logprob: -10.251111030578613
    9. ' _' → logprob: -11.251111030578613
    10. '```' → logprob: -11.626111030578613

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.250000953674316
    3. '))' → logprob: -16.125
    4. '')' → logprob: -17.875
    5. ')`' → logprob: -18.5
    6. ')
' → logprob: -18.625
    7. '")' → logprob: -18.75
    8. '`)' → logprob: -19.125
    9. ')}' → logprob: -20.25
    10. '()' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 47
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 42.55%
Précision adaptée (1ère position): 44.68%
Précision (top 10): 76.60%
================================================================================
