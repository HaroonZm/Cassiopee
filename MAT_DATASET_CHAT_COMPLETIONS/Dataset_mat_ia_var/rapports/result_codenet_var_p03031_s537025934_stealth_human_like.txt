================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def slove():
    import sys
    import itertools  # Je n'ai pas vraiment besoin de tous ces imports, mais on a parfois tendance à trop en mettre
    input = sys.stdin.readline

    # On lit n et m
    parts = input().strip().split()
    n = int(parts[0])
    m = int(parts[1])

    # Je récupère les ks (chaque interrupteur? J'ai galéré un peu pour comprendre)
    ks = []
    for _ in range(m):
        arr = list(map(int, input().strip().split()))
        ks.append(arr)

    # Liste p, je suppose que c'est la parité voulue
    p = list(map(int, input().strip().split()))

    a_cnt = 0  # nombre de solutions

    # Pour toutes les combinaisons
    for v in itertools.product([1, 0], repeat=n):  # J'utilise 1 et 0 pour bouger un peu des booléens
        ok = True
        for j in range(m):
            k = ks[j]
            nb = 0
            # Ici je compte le nb d'interrupteurs "on". pas hyper optimisé
            for x in k[1:]:
                if v[x-1]:
                    nb += 1
            if nb % 2 != p[j]:
                ok = False
                break
        if ok:
            a_cnt += 1

    print(a_cnt)
    
# bon, normalement ça marche...
if __name__ == "__main__":
    slove()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' sl' (ID: 1925)
  → Token d'amorce (pas de prédiction)

Token 2: 'ove' (ID: 1048)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12113533914089203
    2. 'r' → logprob: -2.2461352348327637
    3. '_' → logprob: -5.121135234832764
    4. '(r' → logprob: -7.621135234832764
    5. '(:' → logprob: -7.871135234832764
    6. 'n' → logprob: -8.621135711669922
    7. 'p' → logprob: -8.871135711669922
    8. '():' → logprob: -8.996135711669922
    9. 'u' → logprob: -9.121135711669922
    10. 'a' → logprob: -9.246135711669922

Token 4: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38618212938308716
    2. ' ' → logprob: -2.0111820697784424
    3. '(' → logprob: -2.1361820697784424
    4. ':' → logprob: -3.3861820697784424
    5. ''' → logprob: -4.1361823081970215
    6. '_' → logprob: -5.1361823081970215
    7. '\' → logprob: -5.8861823081970215
    8. ' :' → logprob: -6.3861823081970215
    9. '    ' → logprob: -6.5111823081970215
    10. '  ' → logprob: -6.6361823081970215

Token 5: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8442960977554321
    2. ' ' → logprob: -1.9692960977554321
    3. 'pass' → logprob: -1.9692960977554321
    4. 'r' → logprob: -2.2192959785461426
    5. ' pass' → logprob: -3.2192959785461426
    6. 'p' → logprob: -3.3442959785461426
    7. '    ' → logprob: -3.5942959785461426
    8. 'n' → logprob: -3.8442959785461426
    9. 's' → logprob: -3.8442959785461426
    10. '\' → logprob: -4.844295978546143

Token 6: ' sys' (ID: 12228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1950875222682953
    2. ' math' → logprob: -2.195087432861328
    3. ' os' → logprob: -3.070087432861328
    4. ' numpy' → logprob: -4.570087432861328
    5. ' json' → logprob: -6.070087432861328
    6. '_' → logprob: -6.570087432861328
    7. ' pandas' → logprob: -6.945087432861328
    8. '  ' → logprob: -6.945087432861328
    9. ' tensorflow' → logprob: -7.070087432861328
    10. ' sys' → logprob: -7.445087432861328

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026233188807964325
    2. '.readline' → logprob: -4.276233196258545
    3. '.stdout' → logprob: -5.151233196258545
    4. '.stdin' → logprob: -6.276233196258545
    5. '.exit' → logprob: -7.276233196258545
    6. 'newline' → logprob: -7.526233196258545
    7. '.write' → logprob: -7.776233196258545
    8. '.setdefault' → logprob: -8.151232719421387
    9. '```' → logprob: -8.401232719421387
    10. '\n' → logprob: -8.526232719421387

Token 8: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014830382540822029
    2. '.stdout' → logprob: -5.264830589294434
    3. '.readline' → logprob: -5.514830589294434
    4. '.stdin' → logprob: -6.139830589294434
    5. '.write' → logprob: -7.139830589294434
    6. '   ' → logprob: -7.889830589294434
    7. '.exit' → logprob: -8.014830589294434
    8. ',' → logprob: -8.889830589294434
    9. 'newline' → logprob: -8.889830589294434
    10. '.stderr' → logprob: -9.014830589294434

Token 9: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08869613707065582
    2. '.stdout' → logprob: -3.088696241378784
    3. '.stdin' → logprob: -3.838696241378784
    4. '   ' → logprob: -5.088696002960205
    5. '.readline' → logprob: -5.338696002960205
    6. '.argv' → logprob: -6.588696002960205
    7. ' ' → logprob: -7.463696002960205
    8. '.exit' → logprob: -7.588696002960205
    9. 'sys' → logprob: -7.713696002960205
    10. '.system' → logprob: -8.088696479797363

Token 10: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01696162298321724
    2. ' math' → logprob: -4.141961574554443
    3. ' sys' → logprob: -8.141962051391602
    4. ' re' → logprob: -8.641962051391602
    5. ' ' → logprob: -9.266962051391602
    6. ' io' → logprob: -9.391962051391602
    7. ' numpy' → logprob: -9.516962051391602
    8. 'os' → logprob: -9.891962051391602
    9. ' json' → logprob: -10.266962051391602
    10. ' itertools' → logprob: -10.766962051391602

Token 11: ' ' (ID: 220)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011928617022931576
    2. '\' → logprob: -4.886928558349609
    3. '<|end|>' → logprob: -6.761928558349609
    4. '
' → logprob: -7.136928558349609
    5. '<|end|>' → logprob: -8.01192855834961
    6. ',' → logprob: -8.13692855834961
    7. '\n' → logprob: -8.38692855834961
    8. 'newline' → logprob: -8.38692855834961
    9. ' ' → logprob: -8.63692855834961
    10. '(' → logprob: -8.76192855834961

Token 12: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38453933596611023
    2. '\' → logprob: -2.5095393657684326
    3. ' ' → logprob: -2.7595393657684326
    4. '   ' → logprob: -3.0095393657684326
    5. '\n' → logprob: -3.8845393657684326
    6. '```' → logprob: -4.3845391273498535
    7. '
' → logprob: -4.5095391273498535
    8. '    ' → logprob: -4.5095391273498535
    9. 'newline' → logprob: -4.6345391273498535
    10. ',' → logprob: -4.6345391273498535

Token 13: ' Je' (ID: 4678)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14377696812152863
    2. '<|end|>' → logprob: -2.8937768936157227
    3. '.' → logprob: -3.3937768936157227
    4. '    ' → logprob: -4.268776893615723
    5. '<|end|>' → logprob: -4.393776893615723
    6. '  ' → logprob: -6.018776893615723
    7. ' 
' → logprob: -6.268776893615723
    8. '   ' → logprob: -6.518776893615723
    9. 'n' → logprob: -6.518776893615723
    10. 'import' → logprob: -6.643776893615723

Token 14: ' n' (ID: 297)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0028148628771305084
    2. ' t' → logprob: -6.252814769744873
    3. 'ts' → logprob: -9.127815246582031
    4. '   ' → logprob: -9.252815246582031
    5. 'ct' → logprob: -9.502815246582031
    6. '```' → logprob: -9.627815246582031
    7. 'to' → logprob: -9.752815246582031
    8. '  ' → logprob: -9.940315246582031
    9. '	t' → logprob: -10.127815246582031
    10. '    ' → logprob: -10.190315246582031

Token 15: ''ai' (ID: 12480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01051300298422575
    2. 'a' → logprob: -5.635512828826904
    3. ''a' → logprob: -5.885512828826904
    4. ''' → logprob: -6.135512828826904
    5. ''aime' → logprob: -8.260513305664062
    6. ''e' → logprob: -8.385513305664062
    7. ''ai' → logprob: -8.760513305664062
    8. 's' → logprob: -8.760513305664062
    9. '```' → logprob: -9.010513305664062
    10. '')' → logprob: -9.135513305664062

Token 16: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5101315379142761
    2. ' ' → logprob: -1.635131597518921
    3. ' pas' → logprob: -2.760131597518921
    4. 's' → logprob: -3.260131597518921
    5. 'p' → logprob: -3.385131597518921
    6. 'r' → logprob: -3.635131597518921
    7. ' jamais' → logprob: -5.010131359100342
    8. 'd' → logprob: -5.260131359100342
    9. ' rien' → logprob: -5.385131359100342
    10. '  ' → logprob: -5.510131359100342

Token 17: ' vraiment' (ID: 26637)
  Prédit: 'termin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'termin' → logprob: -0.8550385236740112
    2. 'd' → logprob: -1.8550385236740112
    3. 'f' → logprob: -2.230038642883301
    4. 'com' → logprob: -2.355038642883301
    5. 'import' → logprob: -3.355038642883301
    6. ' compris' → logprob: -3.730038642883301
    7. 'tr' → logprob: -3.980038642883301
    8. 'pu' → logprob: -3.980038642883301
    9. 'oub' → logprob: -4.480038642883301
    10. 'compr' → logprob: -4.605038642883301

Token 18: ' besoin' (ID: 27703)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8847126364707947
    2. 'util' → logprob: -1.8847126960754395
    3. 'd' → logprob: -2.0097126960754395
    4. ' compris' → logprob: -2.3847126960754395
    5. 'import' → logprob: -2.7597126960754395
    6. 'compr' → logprob: -3.5097126960754395
    7. 's' → logprob: -4.0097126960754395
    8. 'l' → logprob: -4.3847126960754395
    9. 'termin' → logprob: -4.5097126960754395
    10. 'fait' → logprob: -5.0097126960754395

Token 19: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6164027452468872
    2. ' ' → logprob: -0.9914027452468872
    3. ' de' → logprob: -3.8664026260375977
    4. ')' → logprob: -3.9914026260375977
    5. '   ' → logprob: -4.366402626037598
    6. '  ' → logprob: -4.991402626037598
    7. '<|end|>' → logprob: -5.241402626037598
    8. '.' → logprob: -5.366402626037598
    9. ',' → logprob: -5.491402626037598
    10. 's' → logprob: -5.741402626037598

Token 20: ' tous' (ID: 10688)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.48262619972229
    2. 'tout' → logprob: -1.73262619972229
    3. ' itertools' → logprob: -1.98262619972229
    4. 'cela' → logprob: -2.85762619972229
    5. 'import' → logprob: -2.98262619972229
    6. ' ce' → logprob: -3.10762619972229
    7. 'ce' → logprob: -3.23262619972229
    8. 't' → logprob: -3.60762619972229
    9. 'ces' → logprob: -3.85762619972229
    10. 'it' → logprob: -3.85762619972229

Token 21: ' ces' (ID: 10532)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.20275333523750305
    2. 'les' → logprob: -1.7027533054351807
    3. 'ces' → logprob: -8.202753067016602
    4. ':' → logprob: -8.702753067016602
    5. ' the' → logprob: -9.077753067016602
    6. ' ces' → logprob: -9.202753067016602
    7. ' ls' → logprob: -9.202753067016602
    8. 's' → logprob: -9.577753067016602
    9. 'ls' → logprob: -9.702753067016602
    10. ' le' → logprob: -9.952753067016602

Token 22: ' imports' (ID: 32048)
  Prédit: ' modules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modules' → logprob: -0.2906852662563324
    2. ' imports' → logprob: -2.9156851768493652
    3. ' outils' → logprob: -3.1656851768493652
    4. 'import' → logprob: -3.4156851768493652
    5. ' éléments' → logprob: -3.6656851768493652
    6. 'modules' → logprob: -3.7906851768493652
    7. ' packages' → logprob: -4.290685176849365
    8. ' espaces' → logprob: -4.540685176849365
    9. ' import' → logprob: -4.915685176849365
    10. 'imports' → logprob: -5.165685176849365

Token 23: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6167960166931152
    2. '   ' → logprob: -2.1167960166931152
    3. '    
' → logprob: -2.2417960166931152
    4. ' ' → logprob: -2.9917960166931152
    5. '    ' → logprob: -3.6167960166931152
    6. '<|end|>' → logprob: -3.6167960166931152
    7. '\' → logprob: -3.7417960166931152
    8. '\n' → logprob: -3.8667960166931152
    9. ' 
' → logprob: -3.9917960166931152
    10. '  
' → logprob: -4.241796016693115

Token 24: ' mais' (ID: 2899)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.804732620716095
    2. ' ' → logprob: -1.5547325611114502
    3. '   ' → logprob: -1.9297325611114502
    4. ' but' → logprob: -2.42973256111145
    5. '     
' → logprob: -4.054732799530029
    6. '    
' → logprob: -4.429732799530029
    7. ',' → logprob: -4.679732799530029
    8. 'but' → logprob: -4.804732799530029
    9. '\' → logprob: -5.304732799530029
    10. '```' → logprob: -5.304732799530029

Token 25: ' on' (ID: 402)
  Prédit: ' je'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' je' → logprob: -0.19364085793495178
    2. ' ils' → logprob: -2.193640947341919
    3. ' j' → logprob: -3.443640947341919
    4. ' c' → logprob: -4.06864070892334
    5. ' ça' → logprob: -5.56864070892334
    6. ' bon' → logprob: -6.44364070892334
    7. ' eux' → logprob: -7.19364070892334
    8. ' cela' → logprob: -7.19364070892334
    9. 'ils' → logprob: -7.44364070892334
    10. ' ce' → logprob: -7.44364070892334

Token 26: ' a' (ID: 261)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5050825476646423
    2. ' continue' → logprob: -1.505082607269287
    3. ' vais' → logprob: -3.130082607269287
    4. ' peux' → logprob: -3.255082607269287
    5. ' pense' → logprob: -4.005082607269287
    6. ' va' → logprob: -4.505082607269287
    7. ' aime' → logprob: -4.755082607269287
    8. ' veux' → logprob: -4.755082607269287
    9. ' continuer' → logprob: -5.630082607269287
    10. ' n' → logprob: -5.880082607269287

Token 27: ' parfois' (ID: 44575)
  Prédit: ' juste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' juste' → logprob: -1.4105778932571411
    2. ' toujours' → logprob: -1.6605778932571411
    3. ' les' → logprob: -2.2855777740478516
    4. ' l' → logprob: -2.5355777740478516
    5. ' besoin' → logprob: -2.5355777740478516
    6. 'l' → logprob: -3.0355777740478516
    7. ' ' → logprob: -3.1605777740478516
    8. ' tous' → logprob: -3.9105777740478516
    9. ' le' → logprob: -4.160577774047852
    10. ' souvent' → logprob: -4.410577774047852

Token 28: ' tendance' (ID: 74231)
  Prédit: ' besoin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' besoin' → logprob: -0.8517441153526306
    2. 'l' → logprob: -1.8517441749572754
    3. ' des' → logprob: -2.3517441749572754
    4. 'des' → logprob: -2.3517441749572754
    5. '```' → logprob: -3.7267441749572754
    6. 'import' → logprob: -3.7267441749572754
    7. ' du' → logprob: -3.9767441749572754
    8. ' l' → logprob: -3.9767441749572754
    9. ' ' → logprob: -4.476744174957275
    10. ' tendance' → logprob: -4.476744174957275

Token 29: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' trop' (ID: 14765)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.5351336002349854
    2. ' les' → logprob: -2.0351336002349854
    3. ' copier' → logprob: -2.4101336002349854
    4. 's' → logprob: -2.7851336002349854
    5. 'penser' → logprob: -2.9101336002349854
    6. ' rester' → logprob: -3.4101336002349854
    7. 'prendre' → logprob: -3.4101336002349854
    8. ' continuer' → logprob: -3.5351336002349854
    9. 'tout' → logprob: -3.5351336002349854
    10. '```' → logprob: -3.6601336002349854

Token 31: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.613152265548706
    2. 'import' → logprob: -2.113152265548706
    3. ' utiliser' → logprob: -2.238152265548706
    4. ' itertools' → logprob: -2.738152265548706
    5. ' _' → logprob: -3.113152265548706
    6. ' import' → logprob: -3.738152265548706
    7. 's' → logprob: -4.238152503967285
    8. ' ' → logprob: -4.613152503967285
    9. '  ' → logprob: -4.988152503967285
    10. ' t' → logprob: -5.113152503967285

Token 32: ' mettre' (ID: 25339)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.054245974868535995
    2. 'mettre' → logprob: -4.554245948791504
    3. 'importe' → logprob: -4.804245948791504
    4. 'faire' → logprob: -5.179245948791504
    5. 'penser' → logprob: -5.179245948791504
    6. '```' → logprob: -5.554245948791504
    7. 'prendre' → logprob: -6.054245948791504
    8. 'f' → logprob: -6.054245948791504
    9. 'per' → logprob: -6.304245948791504
    10. ''import' → logprob: -6.929245948791504

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0023428201675415
    2. '   ' → logprob: -1.7523428201675415
    3. '    
' → logprob: -2.127342700958252
    4. '    ' → logprob: -2.127342700958252
    5. ' ' → logprob: -2.502342700958252
    6. '\' → logprob: -3.377342700958252
    7. '\n' → logprob: -3.752342700958252
    8. '' → logprob: -4.002342700958252
    9. '_' → logprob: -4.627342700958252
    10. '     
' → logprob: -4.627342700958252

Token 34: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12159430980682373
    2. '   ' → logprob: -3.4965944290161133
    3. '\n' → logprob: -3.9965944290161133
    4. '\' → logprob: -3.9965944290161133
    5. 'n' → logprob: -4.121594429016113
    6. '    
' → logprob: -4.246594429016113
    7. '    ' → logprob: -5.746594429016113
    8. 'newline' → logprob: -5.996594429016113
    9. '```' → logprob: -5.996594429016113
    10. '

' → logprob: -6.371594429016113

Token 35: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7133740186691284
    2. '\n' → logprob: -1.9633740186691284
    3. '
' → logprob: -2.213374137878418
    4. '\' → logprob: -2.338374137878418
    5. '    ' → logprob: -2.838374137878418
    6. '    
' → logprob: -3.463374137878418
    7. 'n' → logprob: -3.463374137878418
    8. ' ' → logprob: -4.838374137878418
    9. '[' → logprob: -5.088374137878418
    10. '```' → logprob: -5.088374137878418

Token 36: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.037554383277893
    2. '(' → logprob: -1.412554383277893
    3. '=' → logprob: -1.537554383277893
    4. ' =' → logprob: -2.2875542640686035
    5. '_data' → logprob: -3.0375542640686035
    6. '_' → logprob: -3.9125542640686035
    7. '.' → logprob: -5.1625542640686035
    8. 'data' → logprob: -5.4125542640686035
    9. '_line' → logprob: -6.0375542640686035
    10. '().' → logprob: -7.1625542640686035

Token 37: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.000286364956991747
    2. 'sys' → logprob: -8.250286102294922
    3. ' ' → logprob: -11.250286102294922
    4. '	sys' → logprob: -12.250286102294922
    5. ' input' → logprob: -12.625286102294922
    6. '(sys' → logprob: -13.000286102294922
    7. '=sys' → logprob: -13.375286102294922
    8. 'input' → logprob: -16.250286102294922
    9. ' system' → logprob: -17.000286102294922
    10. ' raw' → logprob: -17.375286102294922

Token 38: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5273271799087524
    2. '.stdin' → logprob: -0.9023271799087524
    3. '.readline' → logprob: -6.027327060699463
    4. '.stdout' → logprob: -6.652327060699463
    5. ' .' → logprob: -8.277327537536621
    6. '.std' → logprob: -9.777327537536621
    7. '.argv' → logprob: -10.402327537536621
    8. '.setdefault' → logprob: -10.652327537536621
    9. 'stdin' → logprob: -10.652327537536621
    10. '.stderr' → logprob: -11.152327537536621

Token 39: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.025705376639962196
    2. '.read' → logprob: -3.900705337524414
    3. '.' → logprob: -5.275705337524414
    4. '.readlines' → logprob: -11.025705337524414
    5. '.Read' → logprob: -12.025705337524414
    6. 'read' → logprob: -12.150705337524414
    7. ' .' → logprob: -12.275705337524414
    8. '.buffer' → logprob: -13.900705337524414
    9. '.re' → logprob: -14.525705337524414
    10. '.write' → logprob: -14.900705337524414

Token 40: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19854296743869781
    2. '
' → logprob: -2.698543071746826
    3. '()
' → logprob: -3.073543071746826
    4. '(' → logprob: -3.198543071746826
    5. '   ' → logprob: -4.823543071746826
    6. '    
' → logprob: -5.323543071746826
    7. '(
' → logprob: -5.448543071746826
    8. '()

' → logprob: -6.198543071746826
    9. '\n' → logprob: -6.448543071746826
    10. '<|end|>' → logprob: -6.698543071746826

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0235318411141634
    2. '(' → logprob: -4.273531913757324
    3. '()' → logprob: -5.523531913757324
    4. '    
' → logprob: -6.023531913757324
    5. ' ' → logprob: -6.898531913757324
    6. '    ' → logprob: -7.273531913757324
    7. '(n' → logprob: -8.648531913757324
    8. 'n' → logprob: -8.773531913757324
    9. '  ' → logprob: -8.773531913757324
    10. ')' → logprob: -9.023531913757324

Token 42: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5017443299293518
    2. '   ' → logprob: -1.001744270324707
    3. ' ' → logprob: -4.626744270324707
    4. 't' → logprob: -5.501744270324707
    5. 'x' → logprob: -6.001744270324707
    6. 'a' → logprob: -6.001744270324707
    7. 's' → logprob: -6.376744270324707
    8. 'N' → logprob: -7.001744270324707
    9. 'd' → logprob: -7.001744270324707
    10. '    ' → logprob: -7.376744270324707

Token 43: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26960062980651855
    2. '   ' → logprob: -1.6446006298065186
    3. 'n' → logprob: -4.644600868225098
    4. '    ' → logprob: -4.644600868225098
    5. '#' → logprob: -5.144600868225098
    6. 's' → logprob: -5.269600868225098
    7. '  ' → logprob: -5.769600868225098
    8. ' #' → logprob: -6.394600868225098
    9. 'a' → logprob: -6.769600868225098
    10. '    
' → logprob: -7.019600868225098

Token 44: ' lit' (ID: 11980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18229839205741882
    2. 'def' → logprob: -2.182298421859741
    3. 'n' → logprob: -3.807298421859741
    4. 'r' → logprob: -5.057298183441162
    5. 's' → logprob: -5.432298183441162
    6. 'range' → logprob: -5.432298183441162
    7. ' a' → logprob: -6.057298183441162
    8. ' def' → logprob: -6.682298183441162
    9. ' =' → logprob: -6.682298183441162
    10. ' n' → logprob: -6.932298183441162

Token 45: ' n' (ID: 297)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02571466937661171
    2. '(' → logprob: -4.275714874267578
    3. 's' → logprob: -5.525714874267578
    4. ' ' → logprob: -6.525714874267578
    5. '   ' → logprob: -6.525714874267578
    6. ' la' → logprob: -7.275714874267578
    7. '<|end|>' → logprob: -7.275714874267578
    8. ' ()' → logprob: -7.525714874267578
    9. '<|end|>' → logprob: -7.650714874267578
    10. 'le' → logprob: -7.775714874267578

Token 46: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7295820116996765
    2. ' =' → logprob: -1.1045820713043213
    3. ',' → logprob: -2.8545820713043213
    4. '(' → logprob: -2.9795820713043213
    5. '=' → logprob: -3.1045820713043213
    6. 's' → logprob: -4.479581832885742
    7. ')' → logprob: -5.229581832885742
    8. '   ' → logprob: -5.479581832885742
    9. 'n' → logprob: -5.854581832885742
    10. ' ' → logprob: -5.979581832885742

Token 47: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.42902812361717224
    2. 'k' → logprob: -1.5540281534194946
    3. ' m' → logprob: -2.429028034210205
    4. ' k' → logprob: -3.179028034210205
    5. ' ' → logprob: -5.679028034210205
    6. 'l' → logprob: -7.179028034210205
    7. 's' → logprob: -8.054028511047363
    8. 'd' → logprob: -8.054028511047363
    9. '   ' → logprob: -8.179028511047363
    10. 't' → logprob: -8.179028511047363

Token 48: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.044631004333496
    2. '(n' → logprob: -2.169631004333496
    3. 'n' → logprob: -2.294631004333496
    4. '<|end|>' → logprob: -2.294631004333496
    5. '   ' → logprob: -2.419631004333496
    6. '(' → logprob: -2.419631004333496
    7. '
' → logprob: -2.544631004333496
    8. ' ' → logprob: -2.544631004333496
    9. '()' → logprob: -3.044631004333496
    10. '\n' → logprob: -3.169631004333496

Token 49: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2641259729862213
    2. '   ' → logprob: -1.514125943183899
    3. ',' → logprob: -6.139125823974609
    4. '```' → logprob: -6.514125823974609
    5. '(n' → logprob: -6.889125823974609
    6. '
' → logprob: -6.889125823974609
    7. '    
' → logprob: -7.264125823974609
    8. ' ' → logprob: -7.264125823974609
    9. '\n' → logprob: -7.514125823974609
    10. 's' → logprob: -7.514125823974609

Token 50: ' parts' (ID: 7881)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.042291875928640366
    2. '   ' → logprob: -3.4172918796539307
    3. ' n' → logprob: -6.167291641235352
    4. '(' → logprob: -6.667291641235352
    5. ' ' → logprob: -6.667291641235352
    6. ' =' → logprob: -7.042291641235352
    7. ',' → logprob: -7.167291641235352
    8. '(n' → logprob: -7.417291641235352
    9. '  ' → logprob: -8.417291641235352
    10. 's' → logprob: -8.417291641235352

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14451591670513153
    2. '=' → logprob: -2.0195159912109375
    3. '[' → logprob: -7.2695159912109375
    4. ')' → logprob: -8.144515991210938
    5. '   ' → logprob: -8.644515991210938
    6. ' ' → logprob: -8.769515991210938
    7. 's' → logprob: -8.769515991210938
    8. ',' → logprob: -9.019515991210938
    9. ']' → logprob: -9.644515991210938
    10. '(' → logprob: -10.144515991210938

Token 52: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.14779280126094818
    2. 'input' → logprob: -2.0227928161621094
    3. ' list' → logprob: -5.397792816162109
    4. 'list' → logprob: -8.02279281616211
    5. ' ' → logprob: -8.89779281616211
    6. ' []' → logprob: -10.64779281616211
    7. '[]' → logprob: -10.77279281616211
    8. '   ' → logprob: -11.64779281616211
    9. ' tuple' → logprob: -11.89779281616211
    10. '(input' → logprob: -11.89779281616211

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005490229465067387
    2. '()' → logprob: -5.255490303039551
    3. '(' → logprob: -8.38049030303955
    4. ' ().' → logprob: -10.63049030303955
    5. ' ()' → logprob: -13.75549030303955
    6. '(.' → logprob: -14.38049030303955
    7. '('' → logprob: -14.50549030303955
    8. '（）' → logprob: -16.130489349365234
    9. '('').' → logprob: -16.630489349365234
    10. '().'' → logprob: -16.630489349365234

Token 54: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3878925144672394
    2. 'strip' → logprob: -1.137892484664917
    3. 'rstrip' → logprob: -6.887892723083496
    4. 'spl' → logprob: -14.637892723083496
    5. ' split' → logprob: -15.012892723083496
    6. ' strip' → logprob: -17.01289176940918
    7. '(split' → logprob: -17.26289176940918
    8. '```' → logprob: -17.51289176940918
    9. 'str' → logprob: -18.13789176940918
    10. 's' → logprob: -18.26289176940918

Token 55: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003253527218475938
    2. '()' → logprob: -5.75325345993042
    3. '(' → logprob: -9.628253936767578
    4. '('' → logprob: -11.878253936767578
    5. 'split' → logprob: -13.878253936767578
    6. '().'' → logprob: -14.253253936767578
    7. ' ().' → logprob: -14.628253936767578
    8. '(.' → logprob: -15.628253936767578
    9. '("' → logprob: -16.378253936767578
    10. '(()' → logprob: -16.503253936767578

Token 56: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7954958821064793e-05
    2. 'spl' → logprob: -11.000018119812012
    3. 'sp' → logprob: -14.625018119812012
    4. 's' → logprob: -15.250018119812012
    5. 'rstrip' → logprob: -15.250018119812012
    6. ' split' → logprob: -16.125017166137695
    7. '(split' → logprob: -16.625017166137695
    8. 'plit' → logprob: -17.125017166137695
    9. 'strip' → logprob: -17.250017166137695
    10. '```' → logprob: -17.750017166137695

Token 57: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11796600371599197
    2. '('' → logprob: -2.2429659366607666
    3. '()' → logprob: -5.617966175079346
    4. '("("' → logprob: -6.617966175079346
    5. '(
' → logprob: -9.492965698242188
    6. '(`' → logprob: -10.492965698242188
    7. '(

' → logprob: -11.117965698242188
    8. '("' → logprob: -11.367965698242188
    9. '(',' → logprob: -11.742965698242188
    10. '(\' → logprob: -12.242965698242188

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4666619598865509
    2. '<|end|>' → logprob: -1.5916619300842285
    3. 'n' → logprob: -2.5916619300842285
    4. ' ' → logprob: -4.3416619300842285
    5. '    
' → logprob: -4.5916619300842285
    6. '[' → logprob: -4.7166619300842285
    7. '\n' → logprob: -4.8416619300842285
    8. '[n' → logprob: -4.9666619300842285
    9. '
' → logprob: -5.0916619300842285
    10. ')' → logprob: -5.0916619300842285

Token 59: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.019859619438648224
    2. ' n' → logprob: -4.644859790802002
    3. '   ' → logprob: -5.394859790802002
    4. ' ' → logprob: -6.394859790802002
    5. '\n' → logprob: -7.269859790802002
    6. '0' → logprob: -7.394859790802002
    7. '	n' → logprob: -7.519859790802002
    8. '(n' → logprob: -8.019859313964844
    9. '[' → logprob: -8.019859313964844
    10. '    
' → logprob: -8.394859313964844

Token 60: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0051949783228337765
    2. ' ,' → logprob: -5.380195140838623
    3. ' =' → logprob: -7.755195140838623
    4. '=' → logprob: -9.505194664001465
    5. ',n' → logprob: -10.755194664001465
    6. ',int' → logprob: -11.505194664001465
    7. ',m' → logprob: -11.880194664001465
    8. '<|end|>' → logprob: -11.880194664001465
    9. ',num' → logprob: -12.130194664001465
    10. ' ' → logprob: -12.380194664001465

Token 61: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3868812620639801
    2. 'int' → logprob: -1.1368812322616577
    3. '  ' → logprob: -12.261880874633789
    4. ' ' → logprob: -12.636880874633789
    5. ' parts' → logprob: -13.761880874633789
    6. '=int' → logprob: -14.886880874633789
    7. '   ' → logprob: -15.511880874633789
    8. '	int' → logprob: -16.01188087463379
    9. '[int' → logprob: -16.13688087463379
    10. '(int' → logprob: -16.26188087463379

Token 62: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0007100477814674377
    2. '(' → logprob: -7.2507100105285645
    3. '(part' → logprob: -16.250709533691406
    4. 'parts' → logprob: -17.000709533691406
    5. ' (' → logprob: -17.250709533691406
    6. ' parts' → logprob: -18.375709533691406
    7. '(p' → logprob: -18.875709533691406
    8. '(
' → logprob: -19.125709533691406
    9. '(par' → logprob: -19.250709533691406
    10. '(

' → logprob: -20.000709533691406

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.630610641877865e-06
    2. '0' → logprob: -12.750006675720215
    3. ')' → logprob: -13.375006675720215
    4. '(' → logprob: -13.875006675720215
    5. ' [' → logprob: -14.125006675720215
    6. ' ' → logprob: -15.250006675720215
    7. '   ' → logprob: -15.500006675720215
    8. '[
' → logprob: -18.8750057220459
    9. '()[' → logprob: -19.1250057220459
    10. '  ' → logprob: -19.3750057220459

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '1' → logprob: -15.500000953674316
    5. '])' → logprob: -15.500000953674316
    6. ']' → logprob: -18.500001907348633
    7. '[' → logprob: -18.500001907348633
    8. '-' → logprob: -19.500001907348633
    9. '2' → logprob: -20.500001907348633
    10. '   ' → logprob: -20.500001907348633

Token 65: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0921942703134846e-05
    2. ')
' → logprob: -11.75001049041748
    3. ' )' → logprob: -13.50001049041748
    4. '])' → logprob: -15.00001049041748
    5. '<|end|>' → logprob: -15.12501049041748
    6. '}' → logprob: -15.37501049041748
    7. '})' → logprob: -15.62501049041748
    8. '))' → logprob: -15.75001049041748
    9. '),' → logprob: -15.75001049041748
    10. ')

' → logprob: -16.625011444091797

Token 66: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.00791085883975029
    2. ' m' → logprob: -4.88291072845459
    3. '   ' → logprob: -8.50791072845459
    4. ' ' → logprob: -9.63291072845459
    5. '    ' → logprob: -11.38291072845459
    6. '  ' → logprob: -11.63291072845459
    7. ' ' → logprob: -12.88291072845459
    8. ' 
' → logprob: -12.88291072845459
    9. '	m' → logprob: -13.00791072845459
    10. 'n' → logprob: -13.75791072845459

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806134685873985
    2. '=' → logprob: -3.2880613803863525
    3. '=int' → logprob: -11.913061141967773
    4. ')' → logprob: -12.288061141967773
    5. ' ' → logprob: -12.538061141967773
    6. '  ' → logprob: -13.663061141967773
    7. '.' → logprob: -14.038061141967773
    8. ',' → logprob: -14.163061141967773
    9. ' =)' → logprob: -14.538061141967773
    10. '<|end|>' → logprob: -14.663061141967773

Token 69: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.474078506231308
    2. ' int' → logprob: -0.9740785360336304
    3. '=int' → logprob: -14.599078178405762
    4. '(int' → logprob: -15.099078178405762
    5. '[int' → logprob: -15.224078178405762
    6. '<int' → logprob: -16.224079132080078
    7. ' ' → logprob: -16.474079132080078
    8. 'ints' → logprob: -16.474079132080078
    9. '	int' → logprob: -16.724079132080078
    10. ' n' → logprob: -16.849079132080078

Token 70: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -2.927930654550437e-05
    2. '(' → logprob: -10.500029563903809
    3. 'parts' → logprob: -13.750029563903809
    4. ' parts' → logprob: -15.250029563903809
    5. ' (' → logprob: -15.625029563903809
    6. '(tokens' → logprob: -15.875029563903809
    7. '(part' → logprob: -16.625028610229492
    8. '(int' → logprob: -17.875028610229492
    9. '("("' → logprob: -18.375028610229492
    10. '```' → logprob: -18.500028610229492

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004560899920761585
    2. '(' → logprob: -5.754560947418213
    3. ')' → logprob: -7.004560947418213
    4. ']' → logprob: -8.629560470581055
    5. '])' → logprob: -9.379560470581055
    6. 's' → logprob: -9.629560470581055
    7. '][' → logprob: -10.379560470581055
    8. ' ' → logprob: -10.754560470581055
    9. '   ' → logprob: -11.004560470581055
    10. '0' → logprob: -11.504560470581055

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010292853228747845
    2. '0' → logprob: -4.635293006896973
    3. ' ' → logprob: -7.885293006896973
    4. '])' → logprob: -9.385293006896973
    5. ')' → logprob: -9.635293006896973
    6. '   ' → logprob: -12.635293006896973
    7. ']' → logprob: -13.260293006896973
    8. '  ' → logprob: -13.885293006896973
    9. '[' → logprob: -14.010293006896973
    10. ' )' → logprob: -14.385293006896973

Token 73: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.87500286102295
    3. ' )' → logprob: -14.37500286102295
    4. '}' → logprob: -15.37500286102295
    5. ']' → logprob: -15.75000286102295
    6. '))' → logprob: -15.87500286102295
    7. '   ' → logprob: -16.125001907348633
    8. ')n' → logprob: -16.375001907348633
    9. '）' → logprob: -16.625001907348633
    10. '')' → logprob: -17.375001907348633

Token 74: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2340092957019806
    2. '   ' → logprob: -1.9840092658996582
    3. '<|end|>' → logprob: -3.609009265899658
    4. '    
' → logprob: -4.359009265899658
    5. '\n' → logprob: -5.234009265899658
    6. ' ' → logprob: -5.234009265899658
    7. '\' → logprob: -5.359009265899658
    8. ' 
' → logprob: -5.609009265899658
    9. '  
' → logprob: -5.859009265899658
    10. 'n' → logprob: -6.609009265899658

Token 75: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04660160094499588
    2. '    
' → logprob: -4.17160177230835
    3. '
' → logprob: -4.42160177230835
    4. 'n' → logprob: -4.92160177230835
    5. 's' → logprob: -5.92160177230835
    6. '#' (adapté à ' #') → logprob: -7.17160177230835
    7. '   
' → logprob: -7.17160177230835
    8. 'for' → logprob: -7.29660177230835
    9. '  ' → logprob: -7.29660177230835
    10. '    ' → logprob: -7.54660177230835

Token 76: ' Je' (ID: 4678)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6303406953811646
    2. '#' → logprob: -1.7553406953811646
    3. 'a' → logprob: -1.8803406953811646
    4. 'r' → logprob: -2.630340576171875
    5. ' #' → logprob: -2.630340576171875
    6. 's' → logprob: -2.755340576171875
    7. 'd' → logprob: -3.130340576171875
    8. '   ' → logprob: -3.380340576171875
    9. 'for' → logprob: -3.630340576171875
    10. ' for' → logprob: -3.755340576171875

Token 77: ' récup' (ID: 62856)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17739292979240417
    2. '.' → logprob: -2.6773929595947266
    3. 's' → logprob: -3.6773929595947266
    4. ' n' → logprob: -4.177392959594727
    5. ' a' → logprob: -5.177392959594727
    6. '   ' → logprob: -5.427392959594727
    7. 'n' → logprob: -5.427392959594727
    8. '  ' → logprob: -5.427392959594727
    9. ' ' → logprob: -5.552392959594727
    10. ' continue' → logprob: -5.677392959594727

Token 78: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.11578048765659332
    2. 'è' → logprob: -2.2407805919647217
    3. 'èr' → logprob: -6.990780353546143
    4. 'e' → logprob: -7.240780353546143
    5. '\' → logprob: -7.365780353546143
    6. '`' → logprob: -8.6157808303833
    7. 'ére' → logprob: -9.6157808303833
    8. 'érer' → logprob: -9.7407808303833
    9. 'er' → logprob: -10.3657808303833
    10. 'é' → logprob: -10.6157808303833

Token 79: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48368334770202637
    2. ' la' → logprob: -1.9836833477020264
    3. ' l' → logprob: -2.9836833477020264
    4. 's' → logprob: -3.1086833477020264
    5. ' le' → logprob: -3.3586833477020264
    6. ' les' → logprob: -3.4836833477020264
    7. '_' → logprob: -4.2336835861206055
    8. '  ' → logprob: -4.6086835861206055
    9. ' ' → logprob: -4.7336835861206055
    10. 'le' → logprob: -4.8586835861206055

Token 80: ' ks' (ID: 81387)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.8390738368034363
    2. ' data' → logprob: -2.089073896408081
    3. 'd' → logprob: -2.839073896408081
    4. '_' → logprob: -3.214073896408081
    5. 'élé' → logprob: -3.714073896408081
    6. ' a' → logprob: -4.089073657989502
    7. ' nombres' → logprob: -4.089073657989502
    8. ' parts' → logprob: -4.214073657989502
    9. ' lignes' → logprob: -4.214073657989502
    10. 'positions' → logprob: -4.339073657989502

Token 81: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: 'cha' (ID: 3836)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.4863870143890381
    2. ')' → logprob: -1.111387014389038
    3. '   ' → logprob: -4.236387252807617
    4. '[' → logprob: -4.361387252807617
    5. 's' → logprob: -4.861387252807617
    6. ' ' → logprob: -5.111387252807617
    7. '  ' → logprob: -6.361387252807617
    8. '[]' → logprob: -6.361387252807617
    9. ' ' → logprob: -6.611387252807617
    10. ',' → logprob: -6.736387252807617

Token 83: 'que' (ID: 1126)
  Prédit: 'înes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.02167886309325695
    2. 'î' → logprob: -4.146678924560547
    3. '   ' → logprob: -6.521678924560547
    4. 'îne' → logprob: -7.146678924560547
    5. 'Î' → logprob: -7.271678924560547
    6. 'ı' → logprob: -7.771678924560547
    7. 'ques' → logprob: -7.771678924560547
    8. 'ines' → logprob: -8.021678924560547
    9. '```' → logprob: -8.021678924560547
    10. 'r' → logprob: -8.646678924560547

Token 84: ' interrup' (ID: 149215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41492173075675964
    2. '_k' → logprob: -2.539921760559082
    3. ' k' → logprob: -2.664921760559082
    4. ')' → logprob: -2.664921760559082
    5. 'k' → logprob: -3.414921760559082
    6. 'élé' → logprob: -3.664921760559082
    7. ' )' → logprob: -4.164921760559082
    8. ' _' → logprob: -4.414921760559082
    9. ' éléments' → logprob: -5.289921760559082
    10. 'parts' → logprob: -6.289921760559082

Token 85: 'teur' (ID: 45262)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2698589563369751
    2. 'teur' → logprob: -1.769858956336975
    3. '```' → logprob: -4.0198588371276855
    4. 'teurs' → logprob: -4.2698588371276855
    5. 'p' → logprob: -4.5198588371276855
    6. 'up' → logprob: -4.8948588371276855
    7. 'pt' → logprob: -6.0198588371276855
    8. 'u' → logprob: -6.2698588371276855
    9. 'ption' → logprob: -6.7698588371276855
    10. 'tion' → logprob: -6.7698588371276855

Token 86: '?' (ID: 30)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4156082570552826
    2. ' )' → logprob: -2.1656081676483154
    3. 's' → logprob: -3.0406081676483154
    4. ' est' → logprob: -3.1656081676483154
    5. ' s' → logprob: -3.9156081676483154
    6. ' a' → logprob: -4.2906084060668945
    7. ' is' → logprob: -4.6656084060668945
    8. ' all' → logprob: -4.7906084060668945
    9. ' activ' → logprob: -4.9156084060668945
    10. ' togg' → logprob: -4.9156084060668945

Token 87: ' J' (ID: 643)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09576565027236938
    2. 's' → logprob: -3.2207655906677246
    3. ' )' → logprob: -3.2207655906677246
    4. ' =' → logprob: -5.095765590667725
    5. ',' → logprob: -6.970765590667725
    6. '<|end|>' → logprob: -7.095765590667725
    7. ' ' → logprob: -7.595765590667725
    8. '')' → logprob: -7.720765590667725
    9. ')s' → logprob: -7.720765590667725
    10. '):' → logprob: -8.095766067504883

Token 88: ''ai' (ID: 12480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2663726508617401
    2. ''' → logprob: -2.6413726806640625
    3. 'a' → logprob: -2.6413726806640625
    4. '')' → logprob: -3.0163726806640625
    5. ''ai' → logprob: -4.3913726806640625
    6. ')' → logprob: -5.0163726806640625
    7. 'u' → logprob: -5.1413726806640625
    8. 's' → logprob: -5.6413726806640625
    9. ''a' → logprob: -6.3913726806640625
    10. ''aime' → logprob: -6.6413726806640625

Token 89: ' gal' (ID: 11091)
  Prédit: 'bes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bes' → logprob: -1.223495602607727
    2. 'des' → logprob: -1.598495602607727
    3. ' besoin' → logprob: -2.4734954833984375
    4. 'une' → logprob: -2.7234954833984375
    5. 'pas' → logprob: -2.8484954833984375
    6. 's' → logprob: -2.8484954833984375
    7. ' ' → logprob: -3.7234954833984375
    8. ' des' → logprob: -4.0984954833984375
    9. 'n' → logprob: -4.3484954833984375
    10. '```' → logprob: -4.3484954833984375

Token 90: 'éré' (ID: 33338)
  Prédit: 'ère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.24626943469047546
    2. 'r' → logprob: -2.621269464492798
    3. 'lé' → logprob: -3.246269464492798
    4. 'ré' → logprob: -3.871269464492798
    5. 'éré' → logprob: -3.996269464492798
    6. 'l' → logprob: -3.996269464492798
    7. 'è' → logprob: -4.746269226074219
    8. 're' → logprob: -5.121269226074219
    9. 'e' → logprob: -5.496269226074219
    10. 'érer' → logprob: -5.996269226074219

Token 91: ' un' (ID: 537)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5471940636634827
    2. ' à' → logprob: -1.172194004058838
    3. 'à' → logprob: -3.172194004058838
    4. ' )' → logprob: -3.547194004058838
    5. ' a' → logprob: -4.172194004058838
    6. ' ' → logprob: -4.297194004058838
    7. 'a' → logprob: -5.297194004058838
    8. 'pour' → logprob: -7.047194004058838
    9. '  ' → logprob: -7.172194004058838
    10. ',' → logprob: -7.172194004058838

Token 92: ' peu' (ID: 9235)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.2541554868221283
    2. ' peu' → logprob: -1.5041555166244507
    3. 'e' → logprob: -7.62915563583374
    4. ' pe' → logprob: -7.75415563583374
    5. '_pe' → logprob: -7.75415563583374
    6. ' peut' → logprob: -8.129155158996582
    7. ' peux' → logprob: -8.629155158996582
    8. ' ' → logprob: -10.004155158996582
    9. '_' → logprob: -10.254155158996582
    10. ' Peu' → logprob: -10.504155158996582

Token 93: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01699385792016983
    2. ' )' → logprob: -4.891993999481201
    3. ' à' → logprob: -5.141993999481201
    4. ',' → logprob: -6.641993999481201
    5. 'à' → logprob: -7.016993999481201
    6. '),' → logprob: -8.141993522644043
    7. ' ' → logprob: -8.391993522644043
    8. ' a' → logprob: -8.766993522644043
    9. 'a' → logprob: -9.141993522644043
    10. ').' → logprob: -9.891993522644043

Token 94: ' comprendre' (ID: 48877)
  Prédit: ' comprendre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comprendre' → logprob: -0.006635440047830343
    2. ' les' → logprob: -6.256635665893555
    3. ' trouver' → logprob: -7.381635665893555
    4. 'l' → logprob: -7.506635665893555
    5. ' ' → logprob: -7.506635665893555
    6. ' le' → logprob: -8.131635665893555
    7. 'compr' → logprob: -8.256635665893555
    8. ' saisir' → logprob: -8.256635665893555
    9. ' compris' → logprob: -8.506635665893555
    10. ' la' → logprob: -8.506635665893555

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09452728927135468
    2. ' )' → logprob: -2.844527244567871
    3. ',' → logprob: -4.594527244567871
    4. ' la' → logprob: -5.219527244567871
    5. ' ' → logprob: -5.594527244567871
    6. 'les' → logprob: -6.094527244567871
    7. 'le' → logprob: -6.469527244567871
    8. ' ' → logprob: -6.969527244567871
    9. ' les' → logprob: -6.969527244567871
    10. ' comment' → logprob: -6.969527244567871

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025060687214136124
    2. 's' → logprob: -3.9000606536865234
    3. '<|end|>' → logprob: -6.275060653686523
    4. '    
' → logprob: -6.775060653686523
    5. '    ' → logprob: -8.275060653686523
    6. 'n' → logprob: -8.400060653686523
    7. '<|end|>' → logprob: -8.525060653686523
    8. '  ' → logprob: -8.525060653686523
    9. ',' → logprob: -9.275060653686523
    10. '  
' → logprob: -9.400060653686523

Token 97: ' ks' (ID: 81387)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45325833559036255
    2. 's' → logprob: -1.2032582759857178
    3. 'switch' → logprob: -3.5782582759857178
    4. 'k' → logprob: -4.203258514404297
    5. ' switches' → logprob: -5.328258514404297
    6. '    
' → logprob: -5.828258514404297
    7. 'ks' (adapté à ' ks') → logprob: -6.078258514404297
    8. ' switch' → logprob: -6.828258514404297
    9. ' s' → logprob: -6.953258514404297
    10. 'n' → logprob: -7.078258514404297

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020744383335113525
    2. '=' → logprob: -3.8957443237304688
    3. 's' → logprob: -8.895744323730469
    4. '_' → logprob: -10.645744323730469
    5. '=[]' → logprob: -11.270744323730469
    6. '[]' → logprob: -11.645744323730469
    7. '[' → logprob: -12.520744323730469
    8. ' =[' → logprob: -12.770744323730469
    9. '_list' → logprob: -13.145744323730469
    10. ',' → logprob: -13.270744323730469

Token 99: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.0312132835388184
    2. ' [' → logprob: -1.1562132835388184
    3. 'list' → logprob: -2.0312132835388184
    4. ' []' → logprob: -2.1562132835388184
    5. '[]' → logprob: -3.5312132835388184
    6. '[' → logprob: -3.6562132835388184
    7. '[list' → logprob: -4.406213283538818
    8. '[input' → logprob: -4.781213283538818
    9. '[int' → logprob: -5.531213283538818
    10. ' input' → logprob: -7.156213283538818

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5004945993423462
    2. 'for' → logprob: -1.6254945993423462
    3. ' for' → logprob: -1.8754945993423462
    4. '<|end|>' → logprob: -3.7504944801330566
    5. '	for' → logprob: -5.625494480133057
    6. ' =' → logprob: -6.000494480133057
    7. '=' → logprob: -6.000494480133057
    8. ' ' → logprob: -6.125494480133057
    9. '<|end|>' → logprob: -6.500494480133057
    10. '    
' → logprob: -6.500494480133057

Token 101: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12846674025058746
    2. ' for' → logprob: -2.128466844558716
    3. '   ' → logprob: -6.503466606140137
    4. '	for' → logprob: -10.503466606140137
    5. '[' → logprob: -12.128466606140137
    6. '    
' → logprob: -13.503466606140137
    7. '    ' → logprob: -14.128466606140137
    8. ' ' → logprob: -14.253466606140137
    9. ' 
' → logprob: -14.378466606140137
    10. '_' → logprob: -14.628466606140137

Token 102: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0018198858015239239
    2. '_' → logprob: -6.626820087432861
    3. ' i' → logprob: -7.626820087432861
    4. ' ' → logprob: -12.251819610595703
    5. '_i' → logprob: -14.001819610595703
    6. 'i' → logprob: -14.501819610595703
    7. ' ' → logprob: -14.751819610595703
    8. ' ‌' → logprob: -16.751819610595703
    9. ' __' → logprob: -18.001819610595703
    10. ' ▁' → logprob: -18.251819610595703

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06268642097711563
    2. 'in' → logprob: -2.8126864433288574
    3. ' ' → logprob: -7.687686443328857
    4. '  ' → logprob: -9.3126859664917
    5. 'i' → logprob: -10.1876859664917
    6. ' i' → logprob: -10.3126859664917
    7. 'n' → logprob: -10.5626859664917
    8. 'import' → logprob: -11.1876859664917
    9. 'range' → logprob: -11.5626859664917
    10. '	in' → logprob: -11.5626859664917

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010792528046295047
    2. ' range' → logprob: -6.876079082489014
    3. '(range' → logprob: -10.126079559326172
    4. 'input' → logprob: -13.501079559326172
    5. '	range' → logprob: -13.751079559326172
    6. 'm' → logprob: -13.876079559326172
    7. 'parts' → logprob: -14.501079559326172
    8. 'n' → logprob: -15.001079559326172
    9. 'iter' → logprob: -15.126079559326172
    10. '(' → logprob: -15.251079559326172

Token 105: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.35449397563934326
    2. '(n' → logprob: -1.3544939756393433
    3. '(' → logprob: -3.229494094848633
    4. ' (' → logprob: -7.229494094848633
    5. '(range' → logprob: -9.604494094848633
    6. ' m' → logprob: -11.604494094848633
    7. ' n' → logprob: -12.479494094848633
    8. '(s' → logprob: -12.604494094848633
    9. '(
' → logprob: -13.604494094848633
    10. ' ' → logprob: -13.729494094848633

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001971457852050662
    2. '):
' → logprob: -6.626971244812012
    3. ' ):' → logprob: -7.626971244812012
    4. ')' → logprob: -9.376971244812012
    5. ':' → logprob: -9.751971244812012
    6. '   ' → logprob: -11.751971244812012
    7. '():' → logprob: -12.876971244812012
    8. ' ):
' → logprob: -13.876971244812012
    9. '):
' → logprob: -14.126971244812012
    10. ' :' → logprob: -14.126971244812012

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052386898547410965
    2. '   ' → logprob: -3.052386999130249
    3. '<|end|>' → logprob: -5.92738676071167
    4. ':' → logprob: -7.92738676071167
    5. '    ' → logprob: -8.802387237548828
    6. '<|end|>' → logprob: -9.302387237548828
    7. ' ' → logprob: -9.427387237548828
    8. '    
' → logprob: -9.427387237548828
    9. 's' → logprob: -9.677387237548828
    10. ',' → logprob: -9.677387237548828

Token 108: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.825360894203186
    2. ' ks' → logprob: -1.075360894203186
    3. ' parts' → logprob: -2.3253607749938965
    4. 'ks' → logprob: -2.7003607749938965
    5. ' k' → logprob: -3.8253607749938965
    6. 'k' → logprob: -3.9503607749938965
    7. 'parts' → logprob: -4.8253607749938965
    8. '       ' → logprob: -5.3253607749938965
    9. 's' → logprob: -7.8253607749938965
    10. 'Ks' → logprob: -8.450361251831055

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12721629440784454
    2. '=' → logprob: -2.127216339111328
    3. 'angement' → logprob: -9.127216339111328
    4. 'ay' → logprob: -9.502216339111328
    5. '   ' → logprob: -10.627216339111328
    6. 's' → logprob: -11.002216339111328
    7. 'anged' → logprob: -11.127216339111328
    8. 'ays' → logprob: -11.252216339111328
    9. 'ivals' → logprob: -12.002216339111328
    10. '=[]' → logprob: -12.127216339111328

Token 110: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.009899282827973366
    2. ' list' → logprob: -4.634899139404297
    3. 'input' → logprob: -8.884899139404297
    4. '   ' → logprob: -13.259899139404297
    5. ' input' → logprob: -13.259899139404297
    6. 'tuple' → logprob: -14.759899139404297
    7. '[list' → logprob: -15.634899139404297
    8. '[' → logprob: -15.884899139404297
    9. '	list' → logprob: -16.259899139404297
    10. 'map' → logprob: -16.259899139404297

Token 111: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0024819616228342056
    2. '(' → logprob: -6.002481937408447
    3. '()' → logprob: -13.127482414245605
    4. '(int' → logprob: -13.377482414245605
    5. '(
' → logprob: -13.752482414245605
    6. '(input' → logprob: -14.002482414245605
    7. 'map' → logprob: -14.877482414245605
    8. '(range' → logprob: -15.877482414245605
    9. '(

' → logprob: -16.37748146057129
    10. ' map' → logprob: -16.37748146057129

Token 112: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012301115784794092
    2. '(' → logprob: -6.751230239868164
    3. 'int' → logprob: -10.501230239868164
    4. '<int' → logprob: -11.376230239868164
    5. '[int' → logprob: -12.001230239868164
    6. '(str' → logprob: -12.501230239868164
    7. ',int' → logprob: -13.001230239868164
    8. ')' → logprob: -13.001230239868164
    9. '=int' → logprob: -13.376230239868164
    10. '(lambda' → logprob: -13.751230239868164

Token 113: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.46136796474456787
    2. '(input' → logprob: -1.0863679647445679
    3. ',' → logprob: -3.4613680839538574
    4. '(' → logprob: -7.711368083953857
    5. 'input' → logprob: -8.5863676071167
    6. ')' → logprob: -9.7113676071167
    7. '(),' → logprob: -10.9613676071167
    8. ' ,' → logprob: -11.0863676071167
    9. ' input' → logprob: -12.5863676071167
    10. '   ' → logprob: -12.5863676071167

Token 114: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889749854803085
    2. ' input' → logprob: -2.578897476196289
    3. ')' → logprob: -13.078897476196289
    4. ',input' → logprob: -13.453897476196289
    5. '   ' → logprob: -13.828897476196289
    6. 'lambda' → logprob: -13.953897476196289
    7. ' ' → logprob: -14.078897476196289
    8. '(input' → logprob: -14.578897476196289
    9. '	input' → logprob: -15.203897476196289
    10. '=input' → logprob: -15.703897476196289

Token 115: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.911954500945285e-05
    2. '()' → logprob: -9.375088691711426
    3. '.readline' → logprob: -14.000088691711426
    4. ')' → logprob: -14.125088691711426
    5. '   ' → logprob: -14.125088691711426
    6. ' ().' → logprob: -14.625088691711426
    7. '().__' → logprob: -14.875088691711426
    8. '(' → logprob: -15.000088691711426
    9. ' ' → logprob: -15.250088691711426
    10. '()
' → logprob: -15.500088691711426

Token 116: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0019373197574168444
    2. 'split' → logprob: -6.251937389373779
    3. 'rstrip' → logprob: -11.876936912536621
    4. ' strip' → logprob: -14.251936912536621
    5. 'read' → logprob: -14.376936912536621
    6. '(strip' → logprob: -14.876936912536621
    7. ')' → logprob: -16.001937866210938
    8. '.strip' → logprob: -16.126937866210938
    9. 'str' → logprob: -18.376937866210938
    10. '-strip' → logprob: -18.501937866210938

Token 117: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0445127372804563e-05
    2. '()' → logprob: -11.50001049041748
    3. ' ().' → logprob: -15.75001049041748
    4. '   ' → logprob: -17.750009536743164
    5. ')' → logprob: -18.375009536743164
    6. '()
' → logprob: -18.625009536743164
    7. '(' → logprob: -19.000009536743164
    8. '.split' → logprob: -19.375009536743164
    9. 'split' → logprob: -19.750009536743164
    10. '.' → logprob: -20.000009536743164

Token 118: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1008713702030946e-06
    2. ' split' → logprob: -13.250001907348633
    3. '(split' → logprob: -15.625001907348633
    4. 'spl' → logprob: -17.000001907348633
    5. ')' → logprob: -17.750001907348633
    6. 'rstrip' → logprob: -18.375001907348633
    7. '.split' → logprob: -20.250001907348633
    8. ' ' → logprob: -20.500001907348633
    9. 'read' → logprob: -21.625001907348633
    10. 'strip' → logprob: -21.750001907348633

Token 119: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06447279453277588
    2. '))' → logprob: -3.4394726753234863
    3. '()' → logprob: -3.5644726753234863
    4. '())' → logprob: -6.564472675323486
    5. '()))
' → logprob: -8.189473152160645
    6. '(' → logprob: -8.689473152160645
    7. ')' → logprob: -8.939473152160645
    8. '()));' → logprob: -11.064473152160645
    9. '())))' → logprob: -11.939473152160645
    10. '()
' → logprob: -12.314473152160645

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.361550897359848
    2. ')' → logprob: -1.2365509271621704
    3. '()' → logprob: -5.486550807952881
    4. '(' → logprob: -5.986550807952881
    5. ')
' → logprob: -6.111550807952881
    6. '   ' → logprob: -6.611550807952881
    7. '[' → logprob: -7.111550807952881
    8. ',' → logprob: -7.736550807952881
    9. '<|end|>' → logprob: -7.986550807952881
    10. '()
' → logprob: -8.611551284790039

Token 121: ' ks' (ID: 81387)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31959444284439087
    2. 'k' → logprob: -2.069594383239746
    3. 'ks' (adapté à ' ks') → logprob: -2.444594383239746
    4. '       ' → logprob: -3.694594383239746
    5. ' ks' → logprob: -3.819594383239746
    6. ' k' → logprob: -4.319594383239746
    7. '	k' → logprob: -8.944594383239746
    8. 's' → logprob: -9.819594383239746
    9. ',k' → logprob: -10.444594383239746
    10. '    ' → logprob: -10.569594383239746

Token 122: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005672106635756791
    2. '.' → logprob: -7.625567436218262
    3. '.extend' → logprob: -9.625567436218262
    4. '.ap' → logprob: -11.750567436218262
    5. '.app' → logprob: -12.250567436218262
    6. ' .' → logprob: -15.000567436218262
    7. 'append' → logprob: -17.750566482543945
    8. '.a' → logprob: -18.000566482543945
    9. ' ' → logprob: -18.125566482543945
    10. '.add' → logprob: -18.250566482543945

Token 123: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -2.6776029699249193e-05
    2. '(' → logprob: -10.87502670288086
    3. '((' → logprob: -12.00002670288086
    4. '(tuple' → logprob: -14.25002670288086
    5. 'arr' → logprob: -14.87502670288086
    6. '(len' → logprob: -15.50002670288086
    7. '(list' → logprob: -15.87502670288086
    8. '([' → logprob: -16.12502670288086
    9. '(array' → logprob: -17.37502670288086
    10. '	arr' → logprob: -17.37502670288086

Token 124: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008838039822876453
    2. '[' → logprob: -4.758838176727295
    3. '))' → logprob: -8.758837699890137
    4. ' )' → logprob: -10.508837699890137
    5. '   ' → logprob: -11.133837699890137
    6. '[:-' → logprob: -11.633837699890137
    7. ')
' → logprob: -12.258837699890137
    8. '[:' → logprob: -12.633837699890137
    9. ' ' → logprob: -13.758837699890137
    10. ')))' → logprob: -13.883837699890137

Token 125: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4099152386188507
    2. '<|end|>' → logprob: -1.6599152088165283
    3. '   ' → logprob: -2.0349152088165283
    4. '    
' → logprob: -5.034915447235107
    5. '\n' → logprob: -5.909915447235107
    6. ')' → logprob: -6.159915447235107
    7. '  
' → logprob: -7.034915447235107
    8. '#' → logprob: -7.284915447235107
    9. '<|end|>' → logprob: -8.15991497039795
    10. 'n' → logprob: -8.15991497039795

Token 126: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.410409152507782
    2. '
' → logprob: -2.2854092121124268
    3. '#' (adapté à ' #') → logprob: -2.7854092121124268
    4. 's' → logprob: -2.9104092121124268
    5. '<|end|>' → logprob: -3.2854092121124268
    6. 'for' → logprob: -4.035408973693848
    7. '    
' → logprob: -4.910408973693848
    8. 'n' → logprob: -5.160408973693848
    9. 'result' → logprob: -5.410408973693848
    10. 'states' → logprob: -5.410408973693848

Token 127: ' Liste' (ID: 61030)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48354262113571167
    2. 'result' → logprob: -3.3585426807403564
    3. 's' → logprob: -3.4835426807403564
    4. 'target' → logprob: -3.6085426807403564
    5. 'for' → logprob: -3.7335426807403564
    6. 'state' → logprob: -3.8585426807403564
    7. 'def' → logprob: -3.8585426807403564
    8. 'desired' → logprob: -3.8585426807403564
    9. ' #' → logprob: -4.233542442321777
    10. 'k' → logprob: -4.358542442321777

Token 128: ' p' (ID: 275)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.421357125043869
    2. 's' → logprob: -2.0463571548461914
    3. ' des' → logprob: -3.4213571548461914
    4. 'des' → logprob: -3.4213571548461914
    5. '_states' → logprob: -3.6713571548461914
    6. '[]' → logprob: -3.9213571548461914
    7. '_' → logprob: -4.046357154846191
    8. '_s' → logprob: -4.421357154846191
    9. '_des' → logprob: -4.546357154846191
    10. '=' → logprob: -5.171357154846191

Token 129: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6569929718971252
    2. '_' → logprob: -1.7819929122924805
    3. '=' → logprob: -2.0319929122924805
    4. 's' → logprob: -2.6569929122924805
    5. '(' → logprob: -3.7819929122924805
    6. 'r' → logprob: -4.9069929122924805
    7. ')' → logprob: -5.0319929122924805
    8. 'ar' → logprob: -5.1569929122924805
    9. '=[]' → logprob: -5.1569929122924805
    10. 'layers' → logprob: -5.2819929122924805

Token 130: ' je' (ID: 1264)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.29347625374794006
    2. 'p' → logprob: -1.5434762239456177
    3. '[]' → logprob: -3.7934763431549072
    4. ' []' → logprob: -5.543476104736328
    5. ' ' → logprob: -5.918476104736328
    6. '[' → logprob: -5.918476104736328
    7. '<|end|>' → logprob: -6.668476104736328
    8. ' =' → logprob: -7.043476104736328
    9. '#' → logprob: -7.293476104736328
    10. ' [' → logprob: -7.918476104736328

Token 131: ' suppose' (ID: 35968)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7102106213569641
    2. '=' → logprob: -1.3352105617523193
    3. 's' → logprob: -2.5852105617523193
    4. 'n' → logprob: -3.2102105617523193
    5. ' continue' → logprob: -3.7102105617523193
    6. 'm' → logprob: -4.085210800170898
    7. '[]' → logprob: -4.585210800170898
    8. '.append' → logprob: -4.710210800170898
    9. '_' → logprob: -4.710210800170898
    10. '.' → logprob: -5.085210800170898

Token 132: ' que' (ID: 661)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4407745897769928
    2. 'p' → logprob: -1.4407745599746704
    3. '=' → logprob: -2.69077467918396
    4. ' p' → logprob: -3.19077467918396
    5. '   ' → logprob: -5.065774440765381
    6. '(' → logprob: -6.565774440765381
    7. '=[]' → logprob: -6.940774440765381
    8. '[]' → logprob: -7.815774440765381
    9. '(p' → logprob: -7.815774440765381
    10. '[' → logprob: -8.440774917602539

Token 133: ' c' (ID: 274)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.32790061831474304
    2. ' p' → logprob: -2.2029006481170654
    3. 'c' → logprob: -4.077900409698486
    4. '#' → logprob: -4.202900409698486
    5. 'la' → logprob: -4.202900409698486
    6. 'je' → logprob: -4.327900409698486
    7. 's' → logprob: -4.452900409698486
    8. ' la' → logprob: -4.577900409698486
    9. 'for' → logprob: -4.577900409698486
    10. ' je' → logprob: -4.952900409698486

Token 134: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.10279805213212967
    2. 'e' → logprob: -3.4777979850769043
    3. 'a' → logprob: -3.9777979850769043
    4. ' =' → logprob: -5.102797985076904
    5. 'es' → logprob: -5.477797985076904
    6. 'p' → logprob: -5.477797985076904
    7. ''ai' → logprob: -5.602797985076904
    8. 'est' → logprob: -5.852797985076904
    9. 'ont' → logprob: -5.852797985076904
    10. 'eci' → logprob: -5.852797985076904

Token 135: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9279379844665527
    2. '[]' → logprob: -1.3029379844665527
    3. 'la' → logprob: -2.3029379844665527
    4. 'les' → logprob: -3.1779379844665527
    5. ' p' → logprob: -3.3029379844665527
    6. 'le' → logprob: -3.3029379844665527
    7. 'p' → logprob: -3.8029379844665527
    8. ' une' → logprob: -4.052937984466553
    9. 'une' → logprob: -4.052937984466553
    10. '[' → logprob: -4.427937984466553

Token 136: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.9329501390457153
    2. 'p' → logprob: -1.9329501390457153
    3. 'liste' → logprob: -2.057950019836426
    4. 'position' → logprob: -2.432950019836426
    5. 's' → logprob: -3.307950019836426
    6. ' liste' → logprob: -3.807950019836426
    7. 'positions' → logprob: -4.182950019836426
    8. 'list' → logprob: -4.307950019836426
    9. 'part' → logprob: -4.557950019836426
    10. ' parity' → logprob: -4.557950019836426

Token 137: 'ité' (ID: 3761)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7335050702095032
    2. 'ité' → logprob: -0.8585050702095032
    3. 'ite' → logprob: -3.4835050106048584
    4. 'e' → logprob: -3.7335050106048584
    5. 'am' → logprob: -4.8585052490234375
    6. 'ity' → logprob: -4.9835052490234375
    7. 't' → logprob: -4.9835052490234375
    8. 'ents' → logprob: -5.3585052490234375
    9. 'r' → logprob: -5.4835052490234375
    10. 'it' → logprob: -6.1085052490234375

Token 138: ' voul' (ID: 68300)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4347565472126007
    2. ' =' → logprob: -1.4347565174102783
    3. 'p' → logprob: -3.4347565174102783
    4. '   ' → logprob: -3.5597565174102783
    5. ',' → logprob: -3.9347565174102783
    6. '=' → logprob: -4.434756755828857
    7. ' p' → logprob: -5.309756755828857
    8. '[]' → logprob: -5.309756755828857
    9. '_' → logprob: -5.684756755828857
    10. ')' → logprob: -6.559756755828857

Token 139: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.033424943685531616
    2. 'ée' → logprob: -3.9084248542785645
    3. 'ee' → logprob: -4.7834248542785645
    4. 'e' → logprob: -5.9084248542785645
    5. 'u' → logprob: -7.1584248542785645
    6. 'ie' → logprob: -7.2834248542785645
    7. '   ' → logprob: -10.158425331115723
    8. 'ues' → logprob: -10.283425331115723
    9. '#' → logprob: -10.908425331115723
    10. '{' → logprob: -11.033425331115723

Token 140: '
' (ID: 198)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023520203307271004
    2. ' p' → logprob: -4.773519992828369
    3. '   ' → logprob: -5.023519992828369
    4. 's' → logprob: -5.273519992828369
    5. ' =' → logprob: -6.773519992828369
    6. '=' → logprob: -7.023519992828369
    7. '()' → logprob: -8.023520469665527
    8. '(' → logprob: -8.273520469665527
    9. '(p' → logprob: -8.773520469665527
    10. '_p' → logprob: -9.773520469665527

Token 141: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.41901710629463196
    2. '   ' → logprob: -1.7940170764923096
    3. ' p' → logprob: -2.0440170764923096
    4. ' =' → logprob: -3.2940170764923096
    5. 's' → logprob: -5.544017314910889
    6. '=' → logprob: -5.544017314910889
    7. '(p' → logprob: -7.794017314910889
    8. '()' → logprob: -8.41901683807373
    9. '[]' → logprob: -9.16901683807373
    10. '(' → logprob: -9.54401683807373

Token 142: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0006969464011490345
    2. ' p' → logprob: -7.750697135925293
    3. '   ' → logprob: -8.625697135925293
    4. 's' → logprob: -10.500697135925293
    5. '=' → logprob: -11.000697135925293
    6. ' =' → logprob: -11.250697135925293
    7. 'b' → logprob: -12.125697135925293
    8. 'par' → logprob: -12.625697135925293
    9. '#' → logprob: -13.125697135925293
    10. 'P' → logprob: -13.250697135925293

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426927149295807
    2. '=' → logprob: -2.017692804336548
    3. ')' → logprob: -12.642692565917969
    4. 's' → logprob: -12.892692565917969
    5. '=[]' → logprob: -12.892692565917969
    6. ' ' → logprob: -13.017692565917969
    7. '[' → logprob: -13.392692565917969
    8. ',' → logprob: -13.642692565917969
    9. '.' → logprob: -14.017692565917969
    10. '[]' → logprob: -14.392692565917969

Token 144: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12693776190280914
    2. ' list' → logprob: -2.1269378662109375
    3. '[]' → logprob: -11.876937866210938
    4. '[list' → logprob: -13.626937866210938
    5. ' []' → logprob: -14.876937866210938
    6. '[' → logprob: -14.876937866210938
    7. ' [' → logprob: -15.126937866210938
    8. '	list' → logprob: -15.751937866210938
    9. '=list' → logprob: -16.501937866210938
    10. ' ' → logprob: -16.626937866210938

Token 145: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00017302791820839047
    2. '(' → logprob: -8.87517261505127
    3. 'map' → logprob: -10.37517261505127
    4. '(int' → logprob: -14.50017261505127
    5. '()' → logprob: -14.62517261505127
    6. '(
' → logprob: -15.00017261505127
    7. '(m' → logprob: -15.37517261505127
    8. ' (' → logprob: -15.62517261505127
    9. ' map' → logprob: -16.250173568725586
    10. '.map' → logprob: -17.000173568725586

Token 146: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004534334584604949
    2. '(' → logprob: -7.750453472137451
    3. 'int' → logprob: -11.750452995300293
    4. '<int' → logprob: -12.125452995300293
    5. ',int' → logprob: -12.625452995300293
    6. '[int' → logprob: -12.750452995300293
    7. ']int' → logprob: -13.500452995300293
    8. '=int' → logprob: -14.375452995300293
    9. ')' → logprob: -14.625452995300293
    10. ')(' → logprob: -15.250452995300293

Token 147: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.029639162123203278
    2. '(' → logprob: -4.02963924407959
    3. ',input' → logprob: -4.65463924407959
    4. ',' → logprob: -6.40463924407959
    5. ' (' → logprob: -8.77963924407959
    6. ')' → logprob: -9.90463924407959
    7. ' ,' → logprob: -11.40463924407959
    8. '(),' → logprob: -12.27963924407959
    9. 'input' → logprob: -12.27963924407959
    10. ' input' → logprob: -12.52963924407959

Token 148: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5760164260864258
    2. ' input' → logprob: -0.8260164260864258
    3. '(input' → logprob: -9.576016426086426
    4. ' ' → logprob: -13.326016426086426
    5. '_input' → logprob: -13.451016426086426
    6. '	input' → logprob: -13.826016426086426
    7. ',input' → logprob: -13.826016426086426
    8. ')' → logprob: -14.576016426086426
    9. '=input' → logprob: -15.076016426086426
    10. '[input' → logprob: -15.076016426086426

Token 149: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.727905979962088e-05
    2. '()' → logprob: -10.00004768371582
    3. ' ().' → logprob: -13.25004768371582
    4. '(' → logprob: -16.62504768371582
    5. '()
' → logprob: -18.75004768371582
    6. ' ()' → logprob: -18.87504768371582
    7. '.' → logprob: -19.25004768371582
    8. '()[' → logprob: -19.37504768371582
    9. '()).' → logprob: -20.00004768371582
    10. '().__' → logprob: -20.37504768371582

Token 150: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.000719222822226584
    2. 'split' → logprob: -7.25071907043457
    3. '.strip' → logprob: -12.50071907043457
    4. '(strip' → logprob: -13.00071907043457
    5. ' strip' → logprob: -13.50071907043457
    6. '().' → logprob: -14.00071907043457
    7. 'rstrip' → logprob: -14.25071907043457
    8. ')' → logprob: -16.25071907043457
    9. '-strip' → logprob: -17.00071907043457
    10. 'read' → logprob: -17.62571907043457

Token 151: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.1888679839321412e-05
    2. '()' → logprob: -10.750021934509277
    3. ' ().' → logprob: -16.00002098083496
    4. '()
' → logprob: -16.12502098083496
    5. '   ' → logprob: -17.25002098083496
    6. '()))' → logprob: -17.37502098083496
    7. '(' → logprob: -17.87502098083496
    8. ')' → logprob: -17.87502098083496
    9. '())' → logprob: -18.25002098083496
    10. '()[' → logprob: -18.25002098083496

Token 152: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. ' split' → logprob: -13.750000953674316
    3. '(split' → logprob: -20.000001907348633
    4. 'spl' → logprob: -20.000001907348633
    5. '.split' → logprob: -20.375001907348633
    6. ')' → logprob: -20.875001907348633
    7. 'read' → logprob: -21.250001907348633
    8. 's' → logprob: -21.875001907348633
    9. 'decode' → logprob: -22.625001907348633
    10. 'rstrip' → logprob: -22.625001907348633

Token 153: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.17883050441741943
    2. '))' → logprob: -2.303830623626709
    3. '()' → logprob: -3.053830623626709
    4. '())' → logprob: -4.178830623626709
    5. ')' → logprob: -6.678830623626709
    6. '(' → logprob: -9.42883014678955
    7. '()))
' → logprob: -10.55383014678955
    8. '()));' → logprob: -12.05383014678955
    9. '(),' → logprob: -12.55383014678955
    10. ' ))' → logprob: -13.42883014678955

Token 154: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12609869241714478
    2. '<|end|>' → logprob: -2.3760986328125
    3. '   ' → logprob: -3.7510986328125
    4. '    
' → logprob: -7.0010986328125
    5. 'for' → logprob: -7.8760986328125
    6. '<|end|>' → logprob: -8.1260986328125
    7. ' for' → logprob: -8.8760986328125
    8. '\n' → logprob: -8.8760986328125
    9. '  
' → logprob: -9.8760986328125
    10. '

' → logprob: -10.2510986328125

Token 155: ' a' (ID: 261)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1418410539627075
    2. 'for' → logprob: -1.3918410539627075
    3. 'answer' → logprob: -1.5168410539627075
    4. 'result' → logprob: -2.016840934753418
    5. 'res' → logprob: -3.266840934753418
    6. 'ans' → logprob: -4.516840934753418
    7. 'cnt' → logprob: -5.266840934753418
    8. 'all' → logprob: -5.266840934753418
    9. 'on' → logprob: -5.766840934753418
    10. '#' → logprob: -6.516840934753418

Token 156: '_cnt' (ID: 35412)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.6091374754905701
    2. ' =' → logprob: -1.4841375350952148
    3. 'll' → logprob: -2.109137535095215
    4. '=' → logprob: -2.484137535095215
    5. 'ct' → logprob: -4.984137535095215
    6. 'ss' → logprob: -5.234137535095215
    7. 'rr' → logprob: -5.359137535095215
    8. 'rray' → logprob: -5.609137535095215
    9. '=[]' → logprob: -6.984137535095215
    10. 'def' → logprob: -7.359137535095215

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5783928632736206
    2. '=' → logprob: -0.8283928632736206
    3. 's' → logprob: -6.20339298248291
    4. '_' → logprob: -8.70339298248291
    5. ',' → logprob: -8.95339298248291
    6. '=[]' → logprob: -10.57839298248291
    7. '   ' → logprob: -11.07839298248291
    8. ')' → logprob: -11.57839298248291
    9. ' ' → logprob: -11.57839298248291
    10. '[' → logprob: -11.70339298248291

Token 158: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11727198213338852
    2. ' ' → logprob: -2.242271900177002
    3. 'm' → logprob: -6.242271900177002
    4. ' m' → logprob: -6.742271900177002
    5. '[' → logprob: -7.242271900177002
    6. '[]' → logprob: -8.11727237701416
    7. ' [' → logprob: -8.74227237701416
    8. '[m' → logprob: -9.86727237701416
    9. ' []' → logprob: -10.24227237701416
    10. '(' → logprob: -11.74227237701416

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007827830500900745
    2. '[' → logprob: -5.7578277587890625
    3. 'm' → logprob: -5.8828277587890625
    4. '[]' → logprob: -6.6328277587890625
    5. '[m' → logprob: -8.132827758789062
    6. 'sum' → logprob: -9.257827758789062
    7. 'len' → logprob: -9.632827758789062
    8. ' ' → logprob: -10.632827758789062
    9. '[len' → logprob: -11.007827758789062
    10. 'n' → logprob: -11.882827758789062

Token 160: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5608106851577759
    2. '<|end|>' → logprob: -1.0608106851577759
    3. 'for' → logprob: -3.4358105659484863
    4. ' for' → logprob: -3.9358105659484863
    5. '   ' → logprob: -4.560810565948486
    6. '<|end|>' → logprob: -4.935810565948486
    7. '    
' → logprob: -6.060810565948486
    8. ' ' → logprob: -6.310810565948486
    9. ' 
' → logprob: -6.310810565948486
    10. '\n' → logprob: -6.310810565948486

Token 161: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.051049523055553436
    2. '
' → logprob: -3.9260494709014893
    3. '   ' → logprob: -4.051049709320068
    4. ' for' → logprob: -4.551049709320068
    5. ' ' → logprob: -7.551049709320068
    6. '(' → logprob: -7.551049709320068
    7. '<|end|>' → logprob: -8.42604923248291
    8. 'a' → logprob: -8.92604923248291
    9. '0' → logprob: -8.92604923248291
    10. '    
' → logprob: -9.05104923248291

Token 162: ' nombre' (ID: 9733)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5447971820831299
    2. 'for' → logprob: -0.9197971820831299
    3. '0' → logprob: -4.419796943664551
    4. 'a' → logprob: -5.794796943664551
    5. '   ' → logprob: -6.919796943664551
    6. 'def' → logprob: -7.419796943664551
    7. 'range' → logprob: -7.544796943664551
    8. ' ' → logprob: -7.669796943664551
    9. ' a' → logprob: -7.669796943664551
    10. ' ans' → logprob: -7.794796943664551

Token 163: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.067340612411499
    2. '(' → logprob: -1.692340612411499
    3. ' of' → logprob: -1.942340612411499
    4. '=' → logprob: -2.192340612411499
    5. '<|end|>' → logprob: -3.442340612411499
    6. ' ' → logprob: -3.567340612411499
    7. ' de' → logprob: -3.692340612411499
    8. '    ' → logprob: -4.067340850830078
    9. '_' → logprob: -4.317340850830078
    10. ')' → logprob: -4.567340850830078

Token 164: ' solutions' (ID: 9368)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.8070608377456665
    2. 'all' → logprob: -1.1820608377456665
    3. 'app' → logprob: -2.807060718536377
    4. 'a' → logprob: -2.807060718536377
    5. ' interrup' → logprob: -4.182060718536377
    6. 'switch' → logprob: -4.557060718536377
    7. 'bout' → logprob: -4.682060718536377
    8. 'interrupt' → logprob: -4.807060718536377
    9. ' all' → logprob: -4.807060718536377
    10. 'com' → logprob: -4.932060718536377

Token 165: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24288436770439148
    2. ' for' → logprob: -2.367884397506714
    3. '   ' → logprob: -2.617884397506714
    4. 'for' → logprob: -3.867884397506714
    5. '    
' → logprob: -4.992884159088135
    6. '<|end|>' → logprob: -4.992884159088135
    7. ' 
' → logprob: -5.117884159088135
    8. '  
' → logprob: -5.742884159088135
    9. ' ' → logprob: -5.992884159088135
    10. '<|end|>' → logprob: -6.992884159088135

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6104649901390076
    2. 'for' → logprob: -1.4854650497436523
    3. ' for' → logprob: -1.6104650497436523
    4. '
' → logprob: -3.8604650497436523
    5. '    
' → logprob: -5.110465049743652
    6. ' 
' → logprob: -6.360465049743652
    7. '  
' → logprob: -7.485465049743652
    8. ' ' → logprob: -8.110465049743652
    9. 'n' → logprob: -8.360465049743652
    10. '   
' → logprob: -8.485465049743652

Token 167: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007741016801446676
    2. ' for' → logprob: -4.8827409744262695
    3. '   ' → logprob: -9.00774097442627
    4. 'from' → logprob: -12.25774097442627
    5. '
' → logprob: -13.25774097442627
    6. 'f' → logprob: -14.00774097442627
    7. 'def' → logprob: -14.13274097442627
    8. 'import' → logprob: -14.25774097442627
    9. 'all' → logprob: -14.50774097442627
    10. 'a' → logprob: -14.63274097442627

Token 168: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002532379236072302
    2. ' for' → logprob: -6.752532482147217
    3. 'from' → logprob: -7.502532482147217
    4. '#' → logprob: -7.627532482147217
    5. 'all' → logprob: -8.752532005310059
    6. 'import' → logprob: -9.627532005310059
    7. 'def' → logprob: -10.877532005310059
    8. '   ' → logprob: -10.877532005310059
    9. 'bits' → logprob: -11.752532005310059
    10. 'fo' → logprob: -11.877532005310059

Token 169: ' toutes' (ID: 17502)
  Prédit: ' mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mask' → logprob: -1.0256675481796265
    2. 'mask' → logprob: -1.6506675481796265
    3. 'state' → logprob: -2.650667667388916
    4. ' subset' → logprob: -2.775667667388916
    5. ' state' → logprob: -2.900667667388916
    6. 'subset' → logprob: -3.400667667388916
    7. 's' → logprob: -3.650667667388916
    8. 'bits' → logprob: -4.025667667388916
    9. 'switch' → logprob: -4.025667667388916
    10. ' s' → logprob: -4.025667667388916

Token 170: ' les' (ID: 1341)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'switch' → logprob: -1.900925636291504
    2. ' switches' → logprob: -1.900925636291504
    3. ' comb' → logprob: -2.400925636291504
    4. ' switch' → logprob: -2.775925636291504
    5. 'bits' → logprob: -2.775925636291504
    6. ' bits' → logprob: -2.900925636291504
    7. 's' → logprob: -2.900925636291504
    8. 'comb' → logprob: -3.275925636291504
    9. ' on' → logprob: -3.400925636291504
    10. ' b' → logprob: -3.650925636291504

Token 171: ' comb' (ID: 4134)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.7245111465454102
    2. 'switch' → logprob: -1.8495111465454102
    3. 'comb' → logprob: -2.34951114654541
    4. 'mask' → logprob: -3.34951114654541
    5. 'bit' → logprob: -3.72451114654541
    6. 'b' → logprob: -3.84951114654541
    7. 's' → logprob: -3.84951114654541
    8. 'states' → logprob: -3.97451114654541
    9. ' switches' → logprob: -3.97451114654541
    10. ' bits' → logprob: -4.09951114654541

Token 172: 'inais' (ID: 42744)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.10571648180484772
    2. 'ations' → logprob: -3.1057164669036865
    3. ' itertools' → logprob: -3.9807164669036865
    4. 'in' → logprob: -4.355716705322266
    5. 'inais' → logprob: -4.980716705322266
    6. ' in' → logprob: -5.355716705322266
    7. 'binations' → logprob: -6.230716705322266
    8. 's' → logprob: -6.605716705322266
    9. '```' → logprob: -6.980716705322266
    10. 'int' → logprob: -7.105716705322266

Token 173: 'ons' (ID: 1808)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3016746938228607
    2. 'ons' → logprob: -1.426674723625183
    3. 's' → logprob: -4.301674842834473
    4. 'sons' → logprob: -5.051674842834473
    5. 'tons' → logprob: -8.301674842834473
    6. 'ions' → logprob: -10.301674842834473
    7. 'ts' → logprob: -10.676674842834473
    8. '#' → logprob: -11.676674842834473
    9. '_' → logprob: -12.051674842834473
    10. 'on' → logprob: -12.426674842834473

Token 174: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3590855300426483
    2. '(range' → logprob: -2.1090855598449707
    3. ' (' → logprob: -2.6090855598449707
    4. ' range' → logprob: -2.6090855598449707
    5. 'range' → logprob: -3.8590855598449707
    6. '   ' → logprob: -5.359085559844971
    7. ' in' → logprob: -6.109085559844971
    8. ' of' → logprob: -6.484085559844971
    9. ' ' → logprob: -7.109085559844971
    10. '    ' → logprob: -7.359085559844971

Token 175: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11757842451334
    2. '(range' → logprob: -2.8675785064697266
    3. ' range' → logprob: -3.8675785064697266
    4. ' (' → logprob: -3.9925785064697266
    5. '   ' → logprob: -4.742578506469727
    6. 'range' → logprob: -5.742578506469727
    7. '    ' → logprob: -6.867578506469727
    8. '(n' → logprob: -7.492578506469727
    9. ' for' → logprob: -7.617578506469727
    10. ' in' → logprob: -8.742578506469727

Token 176: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6945477724075317
    2. 'for' (adapté à ' for') → logprob: -0.9445477724075317
    3. ' range' → logprob: -2.819547653198242
    4. 'range' → logprob: -3.694547653198242
    5. '(' → logprob: -4.319547653198242
    6. '   ' → logprob: -4.569547653198242
    7. '(range' → logprob: -7.319547653198242
    8. ' (' → logprob: -7.319547653198242
    9. '1' → logprob: -7.569547653198242
    10. ' in' → logprob: -7.944547653198242

Token 177: ' v' (ID: 323)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -2.0126335620880127
    2. ' switches' → logprob: -2.0126335620880127
    3. ' combination' → logprob: -2.3876335620880127
    4. ' switch' → logprob: -2.3876335620880127
    5. ' bits' → logprob: -2.3876335620880127
    6. ' state' → logprob: -2.5126335620880127
    7. ' b' → logprob: -2.5126335620880127
    8. ' s' → logprob: -3.0126335620880127
    9. ' mask' → logprob: -3.1376335620880127
    10. ' combo' → logprob: -3.1376335620880127

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011557143181562424
    2. 'al' → logprob: -5.136557102203369
    3. 'in' → logprob: -5.386557102203369
    4. '   ' → logprob: -7.511557102203369
    5. ' ' → logprob: -9.511557579040527
    6. '  ' → logprob: -9.761557579040527
    7. 'als' → logprob: -10.011557579040527
    8. 'alue' → logprob: -10.136557579040527
    9. 'ar' → logprob: -10.261557579040527
    10. 'er' → logprob: -10.761557579040527

Token 179: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.3225727379322052
    2. ' range' → logprob: -1.3225727081298828
    3. 'range' → logprob: -4.697572708129883
    4. 'it' → logprob: -9.072572708129883
    5. '(range' → logprob: -11.072572708129883
    6. '(' → logprob: -12.197572708129883
    7. ' xrange' → logprob: -12.697572708129883
    8. ' ' → logprob: -12.947572708129883
    9. '(it' → logprob: -13.197572708129883
    10. '[' → logprob: -13.572572708129883

Token 180: '.product' (ID: 21166)
  Prédit: '.product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.product' → logprob: -0.0007204149151220918
    2. '.com' → logprob: -8.250720024108887
    3. '.' → logprob: -8.375720024108887
    4. ' .' → logprob: -8.625720024108887
    5. ' product' → logprob: -11.375720024108887
    6. '.products' → logprob: -12.000720024108887
    7. 'product' → logprob: -12.000720024108887
    8. '.prod' → logprob: -12.250720024108887
    9. '.c' → logprob: -12.375720024108887
    10. 'import' → logprob: -12.625720024108887

Token 181: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.38689693808555603
    2. '(range' → logprob: -1.1368969678878784
    3. '((' → logprob: -11.136897087097168
    4. '(' → logprob: -12.261897087097168
    5. '[' → logprob: -12.886897087097168
    6. '(['' → logprob: -13.011897087097168
    7. '('' → logprob: -14.136897087097168
    8. ' ([' → logprob: -14.511897087097168
    9. 'range' → logprob: -15.261897087097168
    10. '(([' → logprob: -15.636897087097168

Token 182: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.125017166137695
    3. 'False' → logprob: -13.250017166137695
    4. '   ' → logprob: -14.125017166137695
    5. 'True' → logprob: -17.375017166137695
    6. '  ' → logprob: -18.250017166137695
    7. ' False' → logprob: -18.375017166137695
    8. '    ' → logprob: -18.500017166137695
    9. '(' → logprob: -19.000017166137695
    10. '۰' → logprob: -19.625017166137695

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029414402320981026
    2. '0' → logprob: -3.904414415359497
    3. ' ,' → logprob: -4.779414176940918
    4. ' ' → logprob: -8.029414176940918
    5. '2' → logprob: -10.404414176940918
    6. '(' → logprob: -11.279414176940918
    7. '
' → logprob: -11.779414176940918
    8. '6' → logprob: -11.841914176940918
    9. '   ' → logprob: -12.529414176940918
    10. '  ' → logprob: -12.654414176940918

Token 184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0549127534031868
    2. ' ' → logprob: -2.929912805557251
    3. '2' → logprob: -11.304912567138672
    4. '-' → logprob: -12.554912567138672
    5. '  ' → logprob: -12.554912567138672
    6. '   ' → logprob: -12.804912567138672
    7. ' -' → logprob: -12.929912567138672
    8. '    ' → logprob: -13.742412567138672
    9. '
' → logprob: -14.304912567138672
    10. '1' → logprob: -14.554912567138672

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008628644980490208
    2. ' ' → logprob: -4.758628845214844
    3. '2' → logprob: -12.258628845214844
    4. '-' → logprob: -12.758628845214844
    5. '   ' → logprob: -13.508628845214844
    6. '  ' → logprob: -13.633628845214844
    7. ' -' → logprob: -13.883628845214844
    8. '
' → logprob: -14.633628845214844
    9. '    ' → logprob: -14.883628845214844
    10. '1' → logprob: -15.071128845214844

Token 186: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.000561373308300972
    2. ']' → logprob: -7.875561237335205
    3. '],[' → logprob: -9.125561714172363
    4. '),' → logprob: -10.500561714172363
    5. ' ],' → logprob: -10.750561714172363
    6. ',' → logprob: -11.750561714172363
    7. '()],' → logprob: -12.375561714172363
    8. '],
' → logprob: -13.250561714172363
    9. '])' → logprob: -13.250561714172363
    10. ''],' → logprob: -13.375561714172363

Token 187: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.16023559868335724
    2. ' repeat' → logprob: -1.9102356433868408
    3. '   ' → logprob: -12.410235404968262
    4. ' ' → logprob: -13.285235404968262
    5. 'r' → logprob: -13.410235404968262
    6. 're' → logprob: -13.910235404968262
    7. '  ' → logprob: -13.910235404968262
    8. 'reverse' → logprob: -14.035235404968262
    9. 'range' → logprob: -14.785235404968262
    10. '    ' → logprob: -14.910235404968262

Token 188: '=n' (ID: 47985)
  Prédit: '=n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=n' → logprob: -0.07080797106027603
    2. '(n' → logprob: -2.695807933807373
    3. '=' → logprob: -8.320808410644531
    4. 'n' → logprob: -8.445808410644531
    5. '(' → logprob: -8.820808410644531
    6. ' n' → logprob: -9.320808410644531
    7. '=m' → logprob: -9.570808410644531
    8. ')n' → logprob: -9.695808410644531
    9. ' =' → logprob: -10.570808410644531
    10. ' (' → logprob: -11.820808410644531

Token 189: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.857719275401905e-05
    2. '):
' → logprob: -10.500038146972656
    3. ':' → logprob: -12.125038146972656
    4. ')' → logprob: -12.875038146972656
    5. ' ):' → logprob: -12.875038146972656
    6. '   ' → logprob: -15.625038146972656
    7. '():' → logprob: -16.125038146972656
    8. '):
' → logprob: -16.500038146972656
    9. ']:' → logprob: -18.000038146972656
    10. '}:' → logprob: -18.000038146972656

Token 190: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6184656023979187
    2. '
' → logprob: -1.1184656620025635
    3. '<|end|>' → logprob: -2.4934656620025635
    4. '   ' → logprob: -3.8684656620025635
    5. ' 
' → logprob: -4.868465423583984
    6. '  
' → logprob: -5.368465423583984
    7. ' ' → logprob: -5.618465423583984
    8. '        
' → logprob: -5.743465423583984
    9. ')' → logprob: -6.118465423583984
    10. ':' → logprob: -6.243465423583984

Token 191: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.461971640586853
    2. '
' → logprob: -1.336971640586853
    3. '   ' → logprob: -2.7119717597961426
    4. ' 
' → logprob: -4.711971759796143
    5. '        
' → logprob: -5.086971759796143
    6. '    
' → logprob: -5.086971759796143
    7. '\n' → logprob: -5.211971759796143
    8. '<|end|>' → logprob: -5.336971759796143
    9. '  
' → logprob: -6.336971759796143
    10. '\' → logprob: -6.586971759796143

Token 192: ' J' (ID: 643)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7251361608505249
    2. ')' → logprob: -1.225136160850525
    3. ':' → logprob: -2.4751362800598145
    4. '):' → logprob: -3.2251362800598145
    5. '<|end|>' → logprob: -3.8501362800598145
    6. '       ' → logprob: -4.2251362800598145
    7. '   ' → logprob: -4.3501362800598145
    8. ' :' → logprob: -4.3501362800598145
    9. ' )' → logprob: -4.7251362800598145
    10. '  ' → logprob: -5.3501362800598145

Token 193: ''util' (ID: 37761)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5731651782989502
    2. ''ai' → logprob: -2.32316517829895
    3. '   ' → logprob: -3.07316517829895
    4. ''' → logprob: -3.07316517829895
    5. 'a' → logprob: -3.19816517829895
    6. ')' → logprob: -3.44816517829895
    7. 'u' → logprob: -3.57316517829895
    8. '')' → logprob: -3.69816517829895
    9. 'uste' → logprob: -4.198164939880371
    10. 's' → logprob: -4.448164939880371

Token 194: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.012875007465481758
    2. 's' → logprob: -5.137875080108643
    3. 'ser' → logprob: -5.262875080108643
    4. '```' → logprob: -7.387875080108643
    5. 'ses' → logprob: -8.637874603271484
    6. 'set' → logprob: -8.762874603271484
    7. 'sers' → logprob: -9.262874603271484
    8. '   ' → logprob: -9.887874603271484
    9. 'e' → logprob: -9.887874603271484
    10. 'sans' → logprob: -10.200374603271484

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7146937847137451
    2. 'v' → logprob: -1.8396937847137451
    3. 'range' → logprob: -1.8396937847137451
    4. ' range' → logprob: -2.464693784713745
    5. ' ' → logprob: -2.464693784713745
    6. '1' → logprob: -2.589693784713745
    7. ' v' → logprob: -2.714693784713745
    8. ' n' → logprob: -2.839693784713745
    9. ')' → logprob: -3.214693784713745
    10. 'n' → logprob: -3.464693784713745

Token 196: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.057553425431251526
    2. 'range' → logprob: -3.05755352973938
    3. 'n' → logprob: -5.682553291320801
    4. '1' → logprob: -5.682553291320801
    5. '2' → logprob: -7.557553291320801
    6. ' ' → logprob: -8.0575532913208
    7. ' range' → logprob: -8.0575532913208
    8. 'v' → logprob: -8.1825532913208
    9. 'm' → logprob: -9.0575532913208
    10. ')' → logprob: -9.0575532913208

Token 197: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16389214992523193
    2. ' ,' → logprob: -1.913892149925232
    3. ' -' → logprob: -7.2888922691345215
    4. '-' → logprob: -7.4138922691345215
    5. ')' → logprob: -7.6638922691345215
    6. ' and' → logprob: -7.6638922691345215
    7. '<|end|>' → logprob: -8.413891792297363
    8. ' ' → logprob: -8.663891792297363
    9. '),' → logprob: -8.663891792297363
    10. '   ' → logprob: -8.913891792297363

Token 198: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16031987965106964
    2. ' ' → logprob: -1.9103199243545532
    3. ',' → logprob: -9.910320281982422
    4. '<|end|>' → logprob: -10.660320281982422
    5. ' ,' → logprob: -12.160320281982422
    6. '   ' → logprob: -12.285320281982422
    7. '  ' → logprob: -12.535320281982422
    8. ')' → logprob: -12.785320281982422
    9. '```' → logprob: -14.035320281982422
    10. ' ' → logprob: -14.160320281982422

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032187069300562143
    2. ' ' → logprob: -5.753218650817871
    3. '<|end|>' → logprob: -11.128218650817871
    4. '1' → logprob: -11.628218650817871
    5. ')' → logprob: -11.753218650817871
    6. '   ' → logprob: -12.878218650817871
    7. '  ' → logprob: -13.378218650817871
    8. '```' → logprob: -13.753218650817871
    9. '
' → logprob: -14.253218650817871
    10. ']' → logprob: -14.503218650817871

Token 200: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03481391817331314
    2. '):' → logprob: -3.90981388092041
    3. ' :' → logprob: -4.78481388092041
    4. '   ' → logprob: -6.03481388092041
    5. ':
' → logprob: -6.78481388092041
    6. ',' → logprob: -6.90981388092041
    7. ')' → logprob: -7.28481388092041
    8. '):
' → logprob: -8.53481388092041
    9. '       ' → logprob: -8.78481388092041
    10. ' :
' → logprob: -9.28481388092041

Token 201: ' bou' (ID: 17573)
  Prédit: ' représ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représ' → logprob: -0.8060048222541809
    2. ' represent' → logprob: -1.4310047626495361
    3. 'represent' → logprob: -1.6810047626495361
    4. ' off' → logprob: -3.806004762649536
    5. ' sim' → logprob: -4.181005001068115
    6. 'off' → logprob: -4.431005001068115
    7. ' les' → logprob: -4.806005001068115
    8. 'les' → logprob: -5.056005001068115
    9. 'repr' → logprob: -5.306005001068115
    10. 'ind' → logprob: -5.306005001068115

Token 202: 'ger' (ID: 1281)
  Prédit: 'cler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cler' → logprob: -0.0011393846943974495
    2. 'ger' → logprob: -7.501139163970947
    3. 'cle' → logprob: -8.126139640808105
    4. 'g' → logprob: -8.751139640808105
    5. '   ' → logprob: -10.376139640808105
    6. 'cl' → logprob: -11.126139640808105
    7. 'ter' → logprob: -11.751139640808105
    8. 'cles' → logprob: -11.876139640808105
    9. 'c' → logprob: -12.251139640808105
    10. '**' → logprob: -12.376139640808105

Token 203: ' un' (ID: 537)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4594963490962982
    2. '):' → logprob: -1.7094963788986206
    3. ' :' → logprob: -2.334496259689331
    4. '   ' → logprob: -2.834496259689331
    5. ',' → logprob: -4.45949649810791
    6. '):
' → logprob: -5.20949649810791
    7. ':
' → logprob: -5.95949649810791
    8. ')' → logprob: -6.20949649810791
    9. ' ' → logprob: -6.20949649810791
    10. '       ' → logprob: -6.20949649810791

Token 204: ' peu' (ID: 9235)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.3597607612609863
    2. 't' → logprob: -1.4847607612609863
    3. ' peu' → logprob: -1.8597607612609863
    4. 'it' → logprob: -2.2347607612609863
    5. 'bit' → logprob: -2.2347607612609863
    6. 'v' → logprob: -3.9847607612609863
    7. 'bout' → logprob: -4.109760761260986
    8. 'pas' → logprob: -4.484760761260986
    9. 'lement' → logprob: -4.609760761260986
    10. '```' → logprob: -4.984760761260986

Token 205: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3592202961444855
    2. '       ' → logprob: -1.484220266342163
    3. ':
' → logprob: -3.359220266342163
    4. '   ' → logprob: -3.609220266342163
    5. '):' → logprob: -5.359220504760742
    6. '):
' → logprob: -6.359220504760742
    7. ' :' → logprob: -6.359220504760742
    8. '
' → logprob: -6.609220504760742
    9. ',' → logprob: -6.984220504760742
    10. '<|end|>' → logprob: -6.984220504760742

Token 206: ' bool' (ID: 3792)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5223516225814819
    2. 'range' → logprob: -1.522351622581482
    3. 'False' → logprob: -2.5223517417907715
    4. '(' → logprob: -3.8973517417907715
    5. '(range' → logprob: -3.8973517417907715
    6. ' range' → logprob: -4.1473517417907715
    7. 'True' → logprob: -4.3973517417907715
    8. '(True' → logprob: -4.5223517417907715
    9. '(False' → logprob: -4.7723517417907715
    10. '0' → logprob: -5.7723517417907715

Token 207: 'é' (ID: 377)
  Prédit: 'ean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ean' → logprob: -0.024101542308926582
    2. 'éan' → logprob: -5.149101734161377
    3. '[' → logprob: -5.524101734161377
    4. ',' → logprob: -5.649101734161377
    5. 'é' → logprob: -5.899101734161377
    6. ')' → logprob: -6.024101734161377
    7. 'eens' → logprob: -7.399101734161377
    8. '<|end|>' → logprob: -7.524101734161377
    9. '])' → logprob: -8.024101257324219
    10. 'e' → logprob: -8.024101257324219

Token 208: 'ens' (ID: 696)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2606496810913086
    2. 'ens' → logprob: -1.5106496810913086
    3. 'an' → logprob: -5.260649681091309
    4. 'en' → logprob: -6.760649681091309
    5. 'ns' → logprob: -7.510649681091309
    6. 'n' → logprob: -8.010649681091309
    7. ' ans' → logprob: -8.135649681091309
    8. 's' → logprob: -9.010649681091309
    9. 'eens' → logprob: -9.010649681091309
    10. ')' → logprob: -9.135649681091309

Token 209: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17151173949241638
    2. ':
' → logprob: -2.796511650085449
    3. '   ' → logprob: -3.046511650085449
    4. '       ' → logprob: -3.171511650085449
    5. '):' → logprob: -5.796511650085449
    6. '):
' → logprob: -6.796511650085449
    7. ' :' → logprob: -7.296511650085449
    8. ' :
' → logprob: -7.796511650085449
    9. '
' → logprob: -7.921511650085449
    10. ',' → logprob: -8.04651165008545

Token 210: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6342945098876953
    2. '       ' → logprob: -0.8842945098876953
    3. ':
' → logprob: -3.7592945098876953
    4. '   ' → logprob: -3.8842945098876953
    5. '):' → logprob: -5.259294509887695
    6. ' :' → logprob: -6.509294509887695
    7. '<|end|>' → logprob: -6.759294509887695
    8. '):
' → logprob: -6.884294509887695
    9. ')' → logprob: -6.884294509887695
    10. '
' → logprob: -7.009294509887695

Token 211: ' ok' (ID: 4763)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.7768723368644714
    2. '       ' → logprob: -1.6518723964691162
    3. 'valid' → logprob: -1.7768723964691162
    4. ' ok' → logprob: -3.026872396469116
    5. '   ' → logprob: -3.526872396469116
    6. 's' → logprob: -3.526872396469116
    7. 'ok' (adapté à ' ok') → logprob: -3.901872396469116
    8. '           ' → logprob: -4.276872158050537
    9. ' s' → logprob: -5.026872158050537
    10. ' good' → logprob: -5.651872158050537

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16028982400894165
    2. '=' → logprob: -1.9102897644042969
    3. '=True' → logprob: -9.785289764404297
    4. ' ' → logprob: -12.035289764404297
    5. ':' → logprob: -13.535289764404297
    6. 'ay' → logprob: -14.285289764404297
    7. '=False' → logprob: -15.160289764404297
    8. ',' → logprob: -15.285289764404297
    9. '   ' → logprob: -15.535289764404297
    10. '_' → logprob: -15.535289764404297

Token 213: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03805021569132805
    2. ' True' → logprob: -3.2880501747131348
    3. '   ' → logprob: -12.663050651550293
    4. '(True' → logprob: -12.913050651550293
    5. '1' → logprob: -13.288050651550293
    6. ' ' → logprob: -14.163050651550293
    7. '=True' → logprob: -14.913050651550293
    8. 'False' → logprob: -15.413050651550293
    9. '  ' → logprob: -16.038049697875977
    10. 'Tr' → logprob: -16.538049697875977

Token 214: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0480952151119709
    2. '<|end|>' → logprob: -3.173095226287842
    3. '
' → logprob: -5.548095226287842
    4. '        
' → logprob: -8.173094749450684
    5. ')' → logprob: -8.423094749450684
    6. '<|end|>' → logprob: -8.673094749450684
    7. '   ' → logprob: -8.798094749450684
    8. ',' → logprob: -9.923094749450684
    9. ' for' → logprob: -9.923094749450684
    10. '	' → logprob: -9.923094749450684

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0063149393536150455
    2. '<|end|>' → logprob: -5.256314754486084
    3. '   ' → logprob: -8.006315231323242
    4. '
' → logprob: -8.131315231323242
    5. ' for' → logprob: -8.506315231323242
    6. '        
' → logprob: -9.631315231323242
    7. ')' → logprob: -10.006315231323242
    8. '	' → logprob: -10.256315231323242
    9. '<|end|>' → logprob: -11.006315231323242
    10. 'for' → logprob: -11.381315231323242

Token 216: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6164721250534058
    2. ' for' → logprob: -0.8664721250534058
    3. '       ' → logprob: -3.4914722442626953
    4. '   ' → logprob: -4.866472244262695
    5. '	for' → logprob: -6.616472244262695
    6. ' ' → logprob: -9.491472244262695
    7. '	' → logprob: -9.866472244262695
    8. '        
' → logprob: -10.366472244262695
    9. '    
' → logprob: -10.616472244262695
    10. '	   ' → logprob: -10.991472244262695

Token 217: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7288129925727844
    2. ' j' → logprob: -1.2288129329681396
    3. 'i' → logprob: -1.8538129329681396
    4. 'j' → logprob: -2.7288129329681396
    5. ' k' → logprob: -7.228813171386719
    6. ' idx' → logprob: -7.228813171386719
    7. 'k' → logprob: -7.478813171386719
    8. 'idx' → logprob: -9.228813171386719
    9. ' ' → logprob: -9.478813171386719
    10. '_i' → logprob: -9.603813171386719

Token 218: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014280329458415508
    2. 'in' → logprob: -4.264280319213867
    3. ',' → logprob: -9.389280319213867
    4. ' ' → logprob: -11.139280319213867
    5. ' ,' → logprob: -11.764280319213867
    6. 'range' → logprob: -12.639280319213867
    7. ')' → logprob: -12.764280319213867
    8. '	in' → logprob: -14.139280319213867
    9. '    ' → logprob: -14.514280319213867
    10. '<|end|>' → logprob: -14.639280319213867

Token 219: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048882268369198
    2. ' range' → logprob: -4.511048793792725
    3. 'm' → logprob: -14.886049270629883
    4. ' ' → logprob: -15.261049270629883
    5. '(range' → logprob: -15.261049270629883
    6. '   ' → logprob: -16.136049270629883
    7. '	range' → logprob: -16.511049270629883
    8. '  ' → logprob: -17.636049270629883
    9. '    ' → logprob: -19.136049270629883
    10. ' xrange' → logprob: -19.261049270629883

Token 220: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0032435471657663584
    2. 'm' → logprob: -5.753243446350098
    3. ' m' → logprob: -10.503243446350098
    4. '(' → logprob: -11.003243446350098
    5. ' (' → logprob: -11.253243446350098
    6. '   ' → logprob: -12.628243446350098
    7. '(len' → logprob: -13.003243446350098
    8. '       ' → logprob: -13.878243446350098
    9. '	m' → logprob: -14.128243446350098
    10. ',m' → logprob: -14.253243446350098

Token 221: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47420063614845276
    2. '):
' → logprob: -0.9742006063461304
    3. '       ' → logprob: -9.849200248718262
    4. '   ' → logprob: -10.099200248718262
    5. '):
' → logprob: -11.724200248718262
    6. ':' → logprob: -11.849200248718262
    7. ' ):' → logprob: -12.224200248718262
    8. ')' → logprob: -12.349200248718262
    9. ' ):
' → logprob: -12.974200248718262
    10. '):

' → logprob: -13.349200248718262

Token 222: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028214367106556892
    2. '       ' → logprob: -4.778214454650879
    3. ' if' → logprob: -4.903214454650879
    4. ':' → logprob: -4.903214454650879
    5. '(' → logprob: -7.528214454650879
    6. '            ' → logprob: -7.528214454650879
    7. ' (' → logprob: -7.653214454650879
    8. ':
' → logprob: -7.778214454650879
    9. '               ' → logprob: -7.903214454650879
    10. ' :' → logprob: -7.903214454650879

Token 223: ' k' (ID: 372)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1454832553863525
    2. ' s' → logprob: -1.1454832553863525
    3. '           ' → logprob: -2.2704832553863525
    4. 'sum' → logprob: -2.2704832553863525
    5. ' sum' → logprob: -3.2704832553863525
    6. 'count' → logprob: -3.3954832553863525
    7. ' parity' → logprob: -4.020483016967773
    8. 'total' → logprob: -4.395483016967773
    9. ' total' → logprob: -4.645483016967773
    10. ' count' → logprob: -4.895483016967773

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07909930497407913
    2. '=' → logprob: -3.454099416732788
    3. '   ' → logprob: -4.829099178314209
    4. '_sum' → logprob: -4.829099178314209
    5. '_len' → logprob: -5.204099178314209
    6. '_val' → logprob: -5.704099178314209
    7. 's' → logprob: -5.704099178314209
    8. '_cnt' → logprob: -5.954099178314209
    9. '_count' → logprob: -6.329099178314209
    10. '       ' → logprob: -6.579099178314209

Token 225: ' ks' (ID: 81387)
  Prédit: 'ks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -0.02735627442598343
    2. 'len' → logprob: -3.9023563861846924
    3. '1' → logprob: -5.652356147766113
    4. ' ks' → logprob: -6.027356147766113
    5. '0' → logprob: -7.652356147766113
    6. '   ' → logprob: -9.152356147766113
    7. ' len' → logprob: -9.402356147766113
    8. ' ' → logprob: -9.527356147766113
    9. 'range' → logprob: -10.402356147766113
    10. 'k' → logprob: -10.527356147766113

Token 226: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.750005722045898
    3. 'j' → logprob: -13.500005722045898
    4. '][' → logprob: -14.250005722045898
    5. '[m' → logprob: -14.750005722045898
    6. ' [' → logprob: -15.000005722045898
    7. '   ' → logprob: -16.1250057220459
    8. '[i' → logprob: -16.6250057220459
    9. ')[' → logprob: -16.7500057220459
    10. '```' → logprob: -17.0000057220459

Token 227: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.28670746088027954
    2. ']
' → logprob: -1.6617074012756348
    3. ']' → logprob: -2.9117074012756348
    4. '[' → logprob: -5.411707401275635
    5. '   ' → logprob: -8.786707878112793
    6. ']
' → logprob: -9.161707878112793
    7. ']

' → logprob: -9.286707878112793
    8. '
' → logprob: -9.661707878112793
    9. '0' → logprob: -10.661707878112793
    10. '+' → logprob: -10.661707878112793

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29953357577323914
    2. '
' → logprob: -2.1745336055755615
    3. '[' → logprob: -2.4245336055755615
    4. '       ' → logprob: -3.4245336055755615
    5. '   ' → logprob: -5.174533367156982
    6. '            
' → logprob: -5.924533367156982
    7. '        
' → logprob: -5.924533367156982
    8. '  
' → logprob: -6.424533367156982
    9. ' 
' → logprob: -6.549533367156982
    10. ' #' → logprob: -6.799533367156982

Token 229: ' nb' (ID: 28791)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3577622175216675
    2. '           ' → logprob: -1.3577622175216675
    3. 'sum' → logprob: -1.8577622175216675
    4. ' s' → logprob: -2.107762336730957
    5. 'count' → logprob: -3.357762336730957
    6. ' sum' → logprob: -3.607762336730957
    7. '       ' → logprob: -3.607762336730957
    8. 'cnt' → logprob: -3.857762336730957
    9. ' parity' → logprob: -4.232762336730957
    10. '   ' → logprob: -4.357762336730957

Token 230: ' =' (ID: 314)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.6194218993186951
    2. ' =' → logprob: -1.1194219589233398
    3. '=' → logprob: -2.11942195892334
    4. 'on' → logprob: -5.11942195892334
    5. '_pressed' → logprob: -5.49442195892334
    6. '_' → logprob: -6.99442195892334
    7. '_ON' → logprob: -7.24442195892334
    8. '_active' → logprob: -7.49442195892334
    9. 'pressed' → logprob: -7.61942195892334
    10. '   ' → logprob: -7.99442195892334

Token 231: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019867798313498497
    2. 'sum' → logprob: -4.394867897033691
    3. ' ' → logprob: -5.394867897033691
    4. ' sum' → logprob: -5.894867897033691
    5. '   ' → logprob: -10.519867897033691
    6. 'v' → logprob: -12.644867897033691
    7. '           ' → logprob: -13.019867897033691
    8. '       ' → logprob: -13.394867897033691
    9. '    ' → logprob: -14.144867897033691
    10. '  ' → logprob: -14.269867897033691

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004082554951310158
    2. 'sum' → logprob: -5.504082679748535
    3. ' ' → logprob: -12.629082679748535
    4. ' sum' → logprob: -14.129082679748535
    5. '   ' → logprob: -16.12908172607422
    6. 'v' → logprob: -17.12908172607422
    7. '	sum' → logprob: -19.25408172607422
    8. '1' → logprob: -19.75408172607422
    9. 's' → logprob: -19.75408172607422
    10. '  ' → logprob: -20.00408172607422

Token 233: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08980981260538101
    2. '
' → logprob: -2.4648098945617676
    3. '            
' → logprob: -8.21480941772461
    4. '  
' → logprob: -9.08980941772461
    5. ' 
' → logprob: -9.21480941772461
    6. '       ' → logprob: -9.33980941772461
    7. '    
' → logprob: -9.46480941772461
    8. ' for' → logprob: -9.71480941772461
    9. '        
' → logprob: -10.21480941772461
    10. '   ' → logprob: -10.33980941772461

Token 234: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6443822979927063
    2. '           ' → logprob: -0.8943822979927063
    3. 'for' → logprob: -2.8943822383880615
    4. ' 
' → logprob: -6.394382476806641
    5. ' ' → logprob: -6.519382476806641
    6. '
' → logprob: -6.644382476806641
    7. ')' → logprob: -6.894382476806641
    8. '   ' → logprob: -7.144382476806641
    9. '[' → logprob: -7.269382476806641
    10. '       ' → logprob: -7.394382476806641

Token 235: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2817191183567047
    2. ' for' → logprob: -1.4067190885543823
    3. '           ' → logprob: -7.656719207763672
    4. '       ' → logprob: -10.281719207763672
    5. '   ' → logprob: -10.406719207763672
    6. '	for' → logprob: -11.406719207763672
    7. '
' → logprob: -12.031719207763672
    8. ' ' → logprob: -12.531719207763672
    9. '    ' → logprob: -12.906719207763672
    10. ' 
' → logprob: -13.406719207763672

Token 236: ' Ici' (ID: 145754)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.576715350151062
    2. ' for' → logprob: -0.826715350151062
    3. '           ' → logprob: -7.201715469360352
    4. '   ' → logprob: -11.076715469360352
    5. '       ' → logprob: -11.451715469360352
    6. '	for' → logprob: -13.701715469360352
    7. ' ' → logprob: -13.951715469360352
    8. '            
' → logprob: -14.701715469360352
    9. '               ' → logprob: -14.951715469360352
    10. '
' → logprob: -14.951715469360352

Token 237: ' je' (ID: 1264)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1445707082748413
    2. '           ' → logprob: -2.394570827484131
    3. 'for' → logprob: -3.144570827484131
    4. '       ' → logprob: -8.894570350646973
    5. '   ' → logprob: -9.769570350646973
    6. '               ' → logprob: -11.144570350646973
    7. ' ' → logprob: -11.269570350646973
    8. '          ' → logprob: -11.394570350646973
    9. ' ' → logprob: -11.519570350646973
    10. '	for' → logprob: -11.644570350646973

Token 238: ' compte' (ID: 19657)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35150131583213806
    2. 'for' → logprob: -1.2265013456344604
    3. '           ' → logprob: -6.10150146484375
    4. ' ' → logprob: -8.47650146484375
    5. ' continue' → logprob: -8.72650146484375
    6. '            ' → logprob: -9.22650146484375
    7. '               ' → logprob: -9.85150146484375
    8. ' in' → logprob: -10.22650146484375
    9. ' ' → logprob: -10.60150146484375
    10. '          ' → logprob: -10.97650146484375

Token 239: ' le' (ID: 505)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48145535588264465
    2. 'for' → logprob: -1.7314553260803223
    3. ' if' → logprob: -2.2314553260803223
    4. 'if' → logprob: -3.3564553260803223
    5. '           ' → logprob: -3.8564553260803223
    6. '               ' → logprob: -5.231455326080322
    7. 'v' → logprob: -5.481455326080322
    8. '   ' → logprob: -5.606455326080322
    9. ' v' → logprob: -5.856455326080322
    10. '(' → logprob: -5.856455326080322

Token 240: ' nb' (ID: 28791)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6608651876449585
    2. 'for' → logprob: -0.9108651876449585
    3. ' v' → logprob: -3.910865306854248
    4. 'v' → logprob: -4.160865306854248
    5. 'sum' → logprob: -4.910865306854248
    6. ' sum' → logprob: -5.035865306854248
    7. 'len' → logprob: -5.160865306854248
    8. '1' → logprob: -5.160865306854248
    9. 'k' → logprob: -5.285865306854248
    10. 'if' → logprob: -5.785865306854248

Token 241: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.129935622215271
    2. ' +=' → logprob: -2.0049357414245605
    3. ' for' → logprob: -2.6299357414245605
    4. ' if' → logprob: -2.7549357414245605
    5. ' de' → logprob: -2.8799357414245605
    6. 'for' → logprob: -3.1299357414245605
    7. ' =' → logprob: -3.1299357414245605
    8. ' of' → logprob: -3.3799357414245605
    9. '               ' → logprob: -3.5049357414245605
    10. 'if' → logprob: -3.5049357414245605

Token 242: ''inter' (ID: 55731)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.6145243644714355
    2. '1' → logprob: -2.1145243644714355
    3. 'on' → logprob: -2.2395243644714355
    4. 'v' → logprob: -2.4895243644714355
    5. 'for' → logprob: -2.7395243644714355
    6. 'a' → logprob: -2.9895243644714355
    7. ' for' → logprob: -3.1145243644714355
    8. ' on' → logprob: -3.3645243644714355
    9. 'inter' → logprob: -3.3645243644714355
    10. ' ' → logprob: -3.3645243644714355

Token 243: 'rup' (ID: 55570)
  Prédit: 'rup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rup' → logprob: -0.10886425524950027
    2. 'r' → logprob: -3.6088643074035645
    3. 'rupt' → logprob: -3.7338643074035645
    4. 'ter' → logprob: -3.8588643074035645
    5. 'err' → logprob: -5.4838643074035645
    6. 'up' → logprob: -5.6088643074035645
    7. '   ' → logprob: -5.7338643074035645
    8. 'rr' → logprob: -6.1088643074035645
    9. 'ru' → logprob: -6.6088643074035645
    10. 'arr' → logprob: -6.9838643074035645

Token 244: 'teurs' (ID: 77729)
  Prédit: 'teurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teurs' → logprob: -0.12354159355163574
    2. 'r' → logprob: -3.2485415935516357
    3. 's' → logprob: -3.4985415935516357
    4. 'up' → logprob: -3.6235415935516357
    5. 'uteurs' → logprob: -4.748541831970215
    6. 't' → logprob: -5.373541831970215
    7. 'tte' → logprob: -6.623541831970215
    8. 'te' → logprob: -6.873541831970215
    9. 'u' → logprob: -7.248541831970215
    10. 'teur' → logprob: -7.623541831970215

Token 245: ' "' (ID: 392)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.651399552822113
    2. ' in' → logprob: -2.151399612426758
    3. ' togg' → logprob: -2.901399612426758
    4. ' dans' → logprob: -3.276399612426758
    5. 'all' → logprob: -3.276399612426758
    6. ' all' → logprob: -3.776399612426758
    7. '   ' → logprob: -3.901399612426758
    8. 'on' → logprob: -4.276399612426758
    9. ' on' → logprob: -4.401399612426758
    10. 'in' → logprob: -4.526399612426758

Token 246: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.0285727977752686
    2. 'app' → logprob: -1.4035727977752686
    3. ' app' → logprob: -2.2785727977752686
    4. '           ' → logprob: -3.0285727977752686
    5. '   ' → logprob: -3.4035727977752686
    6. 'all' → logprob: -3.5285727977752686
    7. '       ' → logprob: -4.028573036193848
    8. 'en' → logprob: -4.153573036193848
    9. ' on' → logprob: -4.403573036193848
    10. 'for' → logprob: -4.528573036193848

Token 247: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.32170823216438293
    2. ' "' → logprob: -1.9467082023620605
    3. '   ' → logprob: -3.4467082023620605
    4. ' if' → logprob: -4.1967082023620605
    5. 's' → logprob: -4.8217082023620605
    6. ' ' → logprob: -4.9467082023620605
    7. ' dans' → logprob: -5.1967082023620605
    8. ' j' → logprob: -5.3217082023620605
    9. ' for' → logprob: -5.4467082023620605
    10. ')' → logprob: -5.5717082023620605

Token 248: ' pas' (ID: 2173)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11472807079553604
    2. ' for' → logprob: -2.3647279739379883
    3. 'for' → logprob: -4.614727973937988
    4. ' 
' → logprob: -6.739727973937988
    5. '       ' → logprob: -7.364727973937988
    6. '            
' → logprob: -7.864727973937988
    7. '               ' → logprob: -7.989727973937988
    8. '   ' → logprob: -7.989727973937988
    9. '
' → logprob: -7.989727973937988
    10. '  
' → logprob: -8.114727973937988

Token 249: ' hyper' (ID: 22725)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1084789037704468
    2. 'if' → logprob: -2.3584790229797363
    3. ' in' → logprob: -2.7334790229797363
    4. ' for' → logprob: -2.8584790229797363
    5. 'in' → logprob: -3.1084790229797363
    6. 'k' → logprob: -3.2334790229797363
    7. ' +=' → logprob: -3.4834790229797363
    8. '   ' → logprob: -3.4834790229797363
    9. ' k' → logprob: -3.6084790229797363
    10. ' if' → logprob: -3.7334790229797363

Token 250: ' optim' (ID: 9367)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6956862807273865
    2. '   ' → logprob: -2.1956863403320312
    3. ' for' → logprob: -2.4456863403320312
    4. '    ' → logprob: -2.8206863403320312
    5. '       ' → logprob: -3.3206863403320312
    6. '           ' → logprob: -3.3206863403320312
    7. 'for' → logprob: -3.8206863403320312
    8. '               ' → logprob: -4.195686340332031
    9. ' (' → logprob: -4.195686340332031
    10. '(' → logprob: -4.195686340332031

Token 251: 'isé' (ID: 30065)
  Prédit: 'isés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isés' → logprob: -0.22083275020122528
    2. 'isé' → logprob: -2.2208328247070312
    3. 'aux' → logprob: -2.7208328247070312
    4. 'al' → logprob: -4.470832824707031
    5. 'is' → logprob: -4.970832824707031
    6. 'isées' → logprob: -6.345832824707031
    7. 'es' → logprob: -6.470832824707031
    8. 'ized' → logprob: -7.720832824707031
    9. 'ales' → logprob: -7.720832824707031
    10. '```' → logprob: -8.220832824707031

Token 252: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02329159528017044
    2. ' for' → logprob: -4.39829158782959
    3. '            ' → logprob: -5.77329158782959
    4. '            
' → logprob: -6.27329158782959
    5. '               ' → logprob: -6.89829158782959
    6. ' 
' → logprob: -7.02329158782959
    7. ' ' → logprob: -7.02329158782959
    8. ',' → logprob: -7.52329158782959
    9. '<|end|>' → logprob: -7.77329158782959
    10. 'for' → logprob: -8.14829158782959

Token 253: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8232927322387695
    2. '   ' → logprob: -1.5732927322387695
    3. '[' → logprob: -2.0732927322387695
    4. ')' → logprob: -3.1982927322387695
    5. '       ' → logprob: -3.3232927322387695
    6. ' in' → logprob: -3.6982927322387695
    7. 'for' → logprob: -3.9482927322387695
    8. ' ' → logprob: -4.3232927322387695
    9. '    ' → logprob: -4.3232927322387695
    10. '           ' → logprob: -4.6982927322387695

Token 254: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06637883931398392
    2. 'for' (adapté à ' for') → logprob: -2.9413788318634033
    3. '           ' → logprob: -4.941379070281982
    4. ' 
' → logprob: -5.941379070281982
    5. ' ' → logprob: -7.691379070281982
    6. '            ' → logprob: -8.441378593444824
    7. '               ' → logprob: -8.691378593444824
    8. '            
' → logprob: -8.816378593444824
    9. '       ' → logprob: -9.066378593444824
    10. '    ' → logprob: -9.191378593444824

Token 255: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2681589722633362
    2. 'i' → logprob: -2.0181589126586914
    3. 'idx' → logprob: -3.1431589126586914
    4. ' x' → logprob: -3.5181589126586914
    5. ' idx' → logprob: -4.893158912658691
    6. ' i' → logprob: -5.268158912658691
    7. 's' → logprob: -5.768158912658691
    8. 'l' → logprob: -5.768158912658691
    9. 'e' → logprob: -6.268158912658691
    10. 'switch' → logprob: -6.393158912658691

Token 256: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04867343604564667
    2. 'in' → logprob: -3.048673391342163
    3. ' ' → logprob: -11.048673629760742
    4. 's' → logprob: -11.298673629760742
    5. 'x' → logprob: -11.548673629760742
    6. '_in' → logprob: -11.548673629760742
    7. '	in' → logprob: -11.548673629760742
    8. '   ' → logprob: -11.673673629760742
    9. '  ' → logprob: -12.298673629760742
    10. 'n' → logprob: -12.548673629760742

Token 257: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10025735199451447
    2. ' k' → logprob: -2.350257396697998
    3. 'ks' → logprob: -11.10025691986084
    4. ' ' → logprob: -11.60025691986084
    5. ' range' → logprob: -12.22525691986084
    6. 'range' → logprob: -12.22525691986084
    7. '   ' → logprob: -12.47525691986084
    8. '[k' → logprob: -12.85025691986084
    9. ' ks' → logprob: -12.85025691986084
    10. '	k' → logprob: -13.35025691986084

Token 258: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013008092530071735
    2. ':' → logprob: -4.388008117675781
    3. '   ' → logprob: -8.263008117675781
    4. ':
' → logprob: -9.138008117675781
    5. '           ' → logprob: -9.763008117675781
    6. '       ' → logprob: -10.513008117675781
    7. '1' → logprob: -11.763008117675781
    8. '[:-' → logprob: -11.888008117675781
    9. ' in' → logprob: -12.138008117675781
    10. '               ' → logprob: -12.263008117675781

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005692371050827205
    2. ' ' → logprob: -8.000569343566895
    3. '   ' → logprob: -9.125569343566895
    4. ':' → logprob: -9.375569343566895
    5. ' :' → logprob: -11.750569343566895
    6. '0' → logprob: -12.375569343566895
    7. ':-' → logprob: -12.375569343566895
    8. ':]' → logprob: -12.375569343566895
    9. '
' → logprob: -12.500569343566895
    10. '(' → logprob: -12.750569343566895

Token 260: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021524035837501287
    2. ']:' → logprob: -6.627152442932129
    3. ' :' → logprob: -7.502152442932129
    4. ':]' → logprob: -8.377152442932129
    5. ':],' → logprob: -10.252152442932129
    6. '():' → logprob: -13.252152442932129
    7. ':].' → logprob: -13.377152442932129
    8. ':j' → logprob: -14.502152442932129
    9. ' :]' → logprob: -14.502152442932129
    10. '：' → logprob: -14.502152442932129

Token 261: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.14463816583156586
    2. ']:' → logprob: -2.0196380615234375
    3. ']' → logprob: -6.8946380615234375
    4. ']:
' → logprob: -7.2696380615234375
    5. ' ]' → logprob: -9.144638061523438
    6. '           ' → logprob: -10.144638061523438
    7. '       ' → logprob: -10.269638061523438
    8. '   ' → logprob: -10.269638061523438
    9. ']:

' → logprob: -10.894638061523438
    10. '               ' → logprob: -11.769638061523438

Token 262: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6201388239860535
    2. '           ' → logprob: -0.8701388239860535
    3. ' if' → logprob: -3.2451388835906982
    4. 'if' → logprob: -5.745138645172119
    5. '       ' → logprob: -8.245139122009277
    6. '            
' → logprob: -8.620139122009277
    7. '            ' → logprob: -8.745139122009277
    8. '   ' → logprob: -8.745139122009277
    9. ' 
' → logprob: -9.995139122009277
    10. '                
' → logprob: -10.245139122009277

Token 263: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5515553951263428
    2. '           ' → logprob: -1.3015553951263428
    3. 'if' (adapté à ' if') → logprob: -2.4265553951263428
    4. '               ' → logprob: -3.1765553951263428
    5. ' nb' → logprob: -4.051555633544922
    6. '            ' → logprob: -6.426555633544922
    7. 'nb' → logprob: -6.676555633544922
    8. '                   ' → logprob: -7.676555633544922
    9. '       ' → logprob: -7.926555633544922
    10. '   ' → logprob: -9.301555633544922

Token 264: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.11284030228853226
    2. 'v' → logprob: -2.237840414047241
    3. '	v' → logprob: -12.11284065246582
    4. '(v' → logprob: -12.48784065246582
    5. ' ' → logprob: -12.86284065246582
    6. '   ' → logprob: -13.23784065246582
    7. ')v' → logprob: -13.48784065246582
    8. '  ' → logprob: -13.86284065246582
    9. '_v' → logprob: -14.23784065246582
    10. '    ' → logprob: -15.55034065246582

Token 265: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00913990382105112
    2. 'x' → logprob: -5.1341400146484375
    3. '[' → logprob: -6.0091400146484375
    4. ' [' → logprob: -7.6341400146484375
    5. '   ' → logprob: -9.009140014648438
    6. ' x' → logprob: -10.009140014648438
    7. '][' → logprob: -10.509140014648438
    8. '(x' → logprob: -11.259140014648438
    9. '[v' → logprob: -11.759140014648438
    10. '[
' → logprob: -11.884140014648438

Token 266: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8477860689163208
    2. ']' → logprob: -0.8477860689163208
    3. ']==' → logprob: -2.0977859497070312
    4. ' -' → logprob: -4.097785949707031
    5. ' ]' → logprob: -6.222785949707031
    6. '1' → logprob: -7.222785949707031
    7. ']:
' → logprob: -8.222785949707031
    8. ']:' → logprob: -8.347785949707031
    9. '==' → logprob: -8.472785949707031
    10. ' ==' → logprob: -9.222785949707031

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3120038501219824e-05
    2. ' ' → logprob: -9.875053405761719
    3. ']' → logprob: -14.625053405761719
    4. '0' → logprob: -14.875053405761719
    5. '   ' → logprob: -15.250053405761719
    6. '```' → logprob: -15.937553405761719
    7. '  ' → logprob: -16.43755340576172
    8. ')' → logprob: -17.06255340576172
    9. '2' → logprob: -17.25005340576172
    10. '

' → logprob: -17.75005340576172

Token 268: ']:
' (ID: 22152)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.48874378204345703
    2. ']' → logprob: -0.988743782043457
    3. ']:' → logprob: -4.363743782043457
    4. ']:
' → logprob: -7.113743782043457
    5. ' ]' → logprob: -7.238743782043457
    6. '==' → logprob: -8.238743782043457
    7. ' ==' → logprob: -11.363743782043457
    8. '']==' → logprob: -12.488743782043457
    9. ']=='' → logprob: -12.738743782043457
    10. ']:

' → logprob: -12.988743782043457

Token 269: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22201655805110931
    2. ':
' → logprob: -2.5970165729522705
    3. '==' → logprob: -2.8470165729522705
    4. ':' → logprob: -3.0970165729522705
    5. '               ' → logprob: -4.722016334533691
    6. ' ==' → logprob: -5.722016334533691
    7. '                  ' → logprob: -5.722016334533691
    8. '                       ' → logprob: -6.222016334533691
    9. '                    ' → logprob: -7.472016334533691
    10. '+' → logprob: -7.472016334533691

Token 270: ' nb' (ID: 28791)
  Prédit: 'nb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' (adapté à ' nb') → logprob: -0.5820557475090027
    2. ' nb' → logprob: -0.8320557475090027
    3. '                   ' → logprob: -5.207055568695068
    4. '               ' → logprob: -8.332056045532227
    5. '	nb' → logprob: -8.957056045532227
    6. '_nb' → logprob: -9.832056045532227
    7. '(nb' → logprob: -9.832056045532227
    8. '                       ' → logprob: -9.957056045532227
    9. '1' → logprob: -10.207056045532227
    10. '
' → logprob: -11.207056045532227

Token 271: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2519468665122986
    2. ' +=' → logprob: -1.5019469261169434
    3. '+' → logprob: -11.501946449279785
    4. ' ^=' → logprob: -12.626946449279785
    5. '=' → logprob: -12.751946449279785
    6. ']+=' → logprob: -14.751946449279785
    7. '    ' → logprob: -15.126946449279785
    8. '   ' → logprob: -15.251946449279785
    9. ' =' → logprob: -15.376946449279785
    10. '+=(' → logprob: -16.2519474029541

Token 272: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059287971816957
    2. ' ' → logprob: -5.130928993225098
    3. '   ' → logprob: -15.630928993225098
    4. '           ' → logprob: -17.25592803955078
    5. '               ' → logprob: -18.00592803955078
    6. '  ' → logprob: -18.25592803955078
    7. ' ' → logprob: -18.50592803955078
    8. '       ' → logprob: -18.88092803955078
    9. '                   ' → logprob: -19.00592803955078
    10. '    ' → logprob: -19.00592803955078

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.875001907348633
    4. 'v' → logprob: -19.875001907348633
    5. '           ' → logprob: -20.250001907348633
    6. '```' → logprob: -20.375001907348633
    7. '  ' → logprob: -20.625001907348633
    8. '       ' → logprob: -21.000001907348633
    9. '0' → logprob: -21.312501907348633
    10. '2' → logprob: -21.437501907348633

Token 274: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25948265194892883
    2. '       ' → logprob: -2.1344826221466064
    3. '
' → logprob: -2.2594826221466064
    4. '        
' → logprob: -6.0094828605651855
    5. '<|end|>' → logprob: -6.6344828605651855
    6. '            
' → logprob: -7.2594828605651855
    7. '    
' → logprob: -8.134482383728027
    8. '  
' → logprob: -8.259482383728027
    9. ' 
' → logprob: -8.884482383728027
    10. '   ' → logprob: -9.259482383728027

Token 275: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08333604037761688
    2. '
' → logprob: -2.583336114883423
    3. '            
' → logprob: -6.583335876464844
    4. '<|end|>' → logprob: -7.458335876464844
    5. '       ' → logprob: -7.583335876464844
    6. '  
' → logprob: -8.333335876464844
    7. ' 
' → logprob: -8.333335876464844
    8. '    
' → logprob: -8.458335876464844
    9. '        
' → logprob: -8.458335876464844
    10. '               ' → logprob: -8.833335876464844

Token 276: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2861948013305664
    2. '       ' → logprob: -2.1611948013305664
    3. ' if' → logprob: -2.1611948013305664
    4. 'if' (adapté à ' if') → logprob: -4.536194801330566
    5. '
' → logprob: -5.411194801330566
    6. '   ' → logprob: -6.411194801330566
    7. '               ' → logprob: -8.036194801330566
    8. ' ' → logprob: -8.536194801330566
    9. '            
' → logprob: -8.786194801330566
    10. '        
' → logprob: -9.161194801330566

Token 277: ' nb' (ID: 28791)
  Prédit: ' nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nb' → logprob: -0.015953898429870605
    2. 'nb' → logprob: -4.89095401763916
    3. '(nb' → logprob: -5.01595401763916
    4. ' (' → logprob: -6.89095401763916
    5. ' p' → logprob: -7.64095401763916
    6. 'p' → logprob: -9.89095401763916
    7. '(p' → logprob: -9.89095401763916
    8. '(' → logprob: -10.14095401763916
    9. '	nb' → logprob: -11.01595401763916
    10. ' ' → logprob: -11.51595401763916

Token 278: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2014196664094925
    2. '%' → logprob: -1.701419711112976
    3. ' ' → logprob: -12.576419830322266
    4. ' ' → logprob: -13.201419830322266
    5. ' %=' → logprob: -15.326419830322266
    6. '%e' → logprob: -15.701419830322266
    7. '%c' → logprob: -15.826419830322266
    8. '%x' → logprob: -16.326419830322266
    9. '()%' → logprob: -16.451419830322266
    10. '%d' → logprob: -16.701419830322266

Token 279: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021855919621884823
    2. ' ' → logprob: -6.127185821533203
    3. '
' → logprob: -15.877185821533203
    4. '   ' → logprob: -15.877185821533203
    5. '  ' → logprob: -15.877185821533203
    6. 'p' → logprob: -17.002185821533203
    7. '           ' → logprob: -17.377185821533203
    8. '```' → logprob: -17.752185821533203
    9. '

' → logprob: -18.127185821533203
    10. ' p' → logprob: -18.252185821533203

Token 280: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.375031471252441
    4. '  ' → logprob: -16.875032424926758
    5. 'p' → logprob: -16.875032424926758
    6. '           ' → logprob: -17.187532424926758
    7. '```' → logprob: -17.312532424926758
    8. '=' → logprob: -17.625032424926758
    9. '       ' → logprob: -18.250032424926758
    10. '２' → logprob: -18.625032424926758

Token 281: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4741767346858978
    2. '!=' → logprob: -0.9741767644882202
    3. '()!=' → logprob: -10.224176406860352
    4. '==' → logprob: -10.724176406860352
    5. ')!=' → logprob: -10.724176406860352
    6. ']!=' → logprob: -11.974176406860352
    7. ' ==' → logprob: -12.099176406860352
    8. '```' → logprob: -13.474176406860352
    9. '!==' → logprob: -13.849176406860352
    10. ' ' → logprob: -14.099176406860352

Token 282: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4740828275680542
    2. ' p' → logprob: -0.9740828275680542
    3. ' ' → logprob: -13.099082946777344
    4. '   ' → logprob: -13.599082946777344
    5. '	p' → logprob: -14.349082946777344
    6. ' ' → logprob: -14.599082946777344
    7. '  ' → logprob: -14.599082946777344
    8. '(p' → logprob: -14.849082946777344
    9. '    ' → logprob: -16.099082946777344
    10. '=' → logprob: -16.224082946777344

Token 283: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.339278580620885e-06
    2. 'j' → logprob: -13.750001907348633
    3. '[' → logprob: -14.250001907348633
    4. ' [' → logprob: -14.875001907348633
    5. '[m' → logprob: -16.250001907348633
    6. '[
' → logprob: -16.375001907348633
    7. ' j' → logprob: -17.875001907348633
    8. '```' → logprob: -18.375001907348633
    9. '[i' → logprob: -18.750001907348633
    10. '(j' → logprob: -19.000001907348633

Token 284: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.7749057412147522
    2. ']:
' → logprob: -0.7749057412147522
    3. ':' → logprob: -3.0249056816101074
    4. ':
' → logprob: -3.8999056816101074
    5. '):
' → logprob: -5.399905681610107
    6. '):' → logprob: -6.274905681610107
    7. ']' → logprob: -7.149905681610107
    8. '       ' → logprob: -7.274905681610107
    9. '[' → logprob: -7.774905681610107
    10. '   ' → logprob: -8.149906158447266

Token 285: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09215284138917923
    2. '           ' → logprob: -2.4671528339385986
    3. ' ok' → logprob: -6.467153072357178
    4. 'ok' → logprob: -6.592153072357178
    5. '0' → logprob: -9.59215259552002
    6. 'break' → logprob: -9.71715259552002
    7. ' break' → logprob: -10.09215259552002
    8. '              ' → logprob: -10.34215259552002
    9. '
' → logprob: -10.59215259552002
    10. '                   ' → logprob: -10.96715259552002

Token 286: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.3684331178665161
    2. 'ok' (adapté à ' ok') → logprob: -1.3684331178665161
    3. '               ' → logprob: -3.2434329986572266
    4. '                   ' → logprob: -4.368432998657227
    5. '           ' → logprob: -6.743432998657227
    6. '
' → logprob: -8.368432998657227
    7. '	ok' → logprob: -8.368432998657227
    8. '   ' → logprob: -8.493432998657227
    9. ' okay' → logprob: -9.993432998657227
    10. ' ' → logprob: -10.868432998657227

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4761500358581543
    2. ' =' → logprob: -0.9761500358581543
    3. '=False' → logprob: -6.226150035858154
    4. '               ' → logprob: -9.976150512695312
    5. '           ' → logprob: -10.976150512695312
    6. '                   ' → logprob: -11.726150512695312
    7. '=True' → logprob: -11.976150512695312
    8. '==' → logprob: -12.101150512695312
    9. '   ' → logprob: -13.101150512695312
    10. ' ' → logprob: -13.226150512695312

Token 288: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03804149478673935
    2. ' False' → logprob: -3.288041591644287
    3. '(False' → logprob: -17.288042068481445
    4. '=False' → logprob: -18.538042068481445
    5. 'F' → logprob: -19.663042068481445
    6. '   ' → logprob: -20.413042068481445
    7. '_false' → logprob: -21.663042068481445
    8. '.False' → logprob: -21.913042068481445
    9. 'True' → logprob: -22.413042068481445
    10. '0' → logprob: -22.538042068481445

Token 289: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.537180211627856e-05
    2. '                   ' → logprob: -10.750045776367188
    3. '                ' → logprob: -11.500045776367188
    4. '           ' → logprob: -12.375045776367188
    5. '                
' → logprob: -13.000045776367188
    6. '       ' → logprob: -13.125045776367188
    7. '<|end|>' → logprob: -13.625045776367188
    8. '              ' → logprob: -13.750045776367188
    9. '                       ' → logprob: -14.125045776367188
    10. '			' → logprob: -14.625045776367188

Token 290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.727905979962088e-05
    2. '                   ' → logprob: -10.50004768371582
    3. '                
' → logprob: -12.25004768371582
    4. '                ' → logprob: -12.75004768371582
    5. '<|end|>' → logprob: -12.87504768371582
    6. '           ' → logprob: -13.50004768371582
    7. '       ' → logprob: -13.50004768371582
    8. '                       ' → logprob: -13.62504768371582
    9. '			' → logprob: -13.75004768371582
    10. '              ' → logprob: -14.00004768371582

Token 291: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2469245046377182
    2. 'break' (adapté à ' break') → logprob: -1.7469245195388794
    3. ' break' → logprob: -3.12192440032959
    4. '	break' → logprob: -8.87192440032959
    5. '                   ' → logprob: -8.99692440032959
    6. '           ' → logprob: -9.74692440032959
    7. '       ' → logprob: -10.49692440032959
    8. '   ' → logprob: -10.49692440032959
    9. '			' → logprob: -11.49692440032959
    10. '
' → logprob: -11.62192440032959

Token 292: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016010295366868377
    2. '
' → logprob: -7.376601219177246
    3. '   ' → logprob: -7.376601219177246
    4. '        
' → logprob: -8.501601219177246
    5. '    
' → logprob: -9.751601219177246
    6. '	' → logprob: -10.751601219177246
    7. '            
' → logprob: -11.251601219177246
    8. '<|end|>' → logprob: -11.751601219177246
    9. ' 
' → logprob: -11.876601219177246
    10. '           ' → logprob: -12.126601219177246

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1343120336532593
    2. ' 
' → logprob: -1.3843120336532593
    3. '
' → logprob: -1.6343120336532593
    4. '   ' → logprob: -2.884312152862549
    5. '    
' → logprob: -2.884312152862549
    6. '        
' → logprob: -3.009312152862549
    7. '  
' → logprob: -3.759312152862549
    8. '<|end|>' → logprob: -4.009312152862549
    9. '\n' → logprob: -4.259312152862549
    10. '   
' → logprob: -5.634312152862549

Token 294: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05172533914446831
    2. '       ' → logprob: -3.176725387573242
    3. ' if' → logprob: -5.176725387573242
    4. '    
' → logprob: -6.676725387573242
    5. '        
' → logprob: -6.801725387573242
    6. '
' → logprob: -8.551725387573242
    7. 'if' (adapté à ' if') → logprob: -8.801725387573242
    8. ' 
' → logprob: -9.676725387573242
    9. '            
' → logprob: -9.801725387573242
    10. '    ' → logprob: -9.801725387573242

Token 295: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.00015121731848921627
    2. ' not' → logprob: -9.500151634216309
    3. 'ok' → logprob: -9.625151634216309
    4. ' okay' → logprob: -12.125151634216309
    5. ' ' → logprob: -12.750151634216309
    6. ' ' → logprob: -14.125151634216309
    7. '	ok' → logprob: -14.375151634216309
    8. ' o' → logprob: -15.000151634216309
    9. 'not' → logprob: -16.250150680541992
    10. '  ' → logprob: -16.500150680541992

Token 296: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015414406545460224
    2. ':
' → logprob: -4.390414237976074
    3. '           ' → logprob: -5.890414237976074
    4. '       ' → logprob: -9.140414237976074
    5. '=' → logprob: -12.140414237976074
    6. '               ' → logprob: -12.265414237976074
    7. ' :' → logprob: -12.640414237976074
    8. '   ' → logprob: -12.890414237976074
    9. '==' → logprob: -12.890414237976074
    10. ' +=' → logprob: -13.765414237976074

Token 297: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12630023062229156
    2. '           ' → logprob: -2.87630033493042
    3. ' a' → logprob: -3.12630033493042
    4. 'a' → logprob: -4.12630033493042
    5. '        
' → logprob: -7.12630033493042
    6. ' 
' → logprob: -7.87630033493042
    7. '
' → logprob: -7.87630033493042
    8. '   ' → logprob: -8.126299858093262
    9. '	       ' → logprob: -9.751299858093262
    10. '	a' → logprob: -9.876299858093262

Token 298: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.20788253843784332
    2. ' a' → logprob: -1.7078825235366821
    3. '       ' → logprob: -5.332882404327393
    4. '   ' → logprob: -6.832882404327393
    5. '           ' → logprob: -7.707882404327393
    6. '	a' → logprob: -9.58288288116455
    7. ' ' → logprob: -11.58288288116455
    8. '               ' → logprob: -12.45788288116455
    9. '
' → logprob: -12.83288288116455
    10. '  ' → logprob: -13.70788288116455

Token 299: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -4.1080467781284824e-05
    2. '_' → logprob: -10.375041007995605
    3. '_ct' → logprob: -12.625041007995605
    4. ' _' → logprob: -12.750041007995605
    5. '_c' → logprob: -13.625041007995605
    6. '_count' → logprob: -14.000041007995605
    7. 'cnt' → logprob: -14.375041007995605
    8. '_CNT' → logprob: -14.875041007995605
    9. '_cn' → logprob: -15.500041007995605
    10. 'a' → logprob: -16.250041961669922

Token 300: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.575951099395752
    2. '+=' → logprob: -0.825951099395752
    3. '+' → logprob: -11.825950622558594
    4. ']+=' → logprob: -12.575950622558594
    5. '   ' → logprob: -14.200950622558594
    6. '=' → logprob: -16.950950622558594
    7. ' +' → logprob: -17.200950622558594
    8. '+="' → logprob: -17.325950622558594
    9. '+='' → logprob: -17.325950622558594
    10. '    ' → logprob: -17.450950622558594

Token 301: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.750001907348633
    4. '１' → logprob: -22.125001907348633
    5. '۱' → logprob: -22.750001907348633
    6. '```' → logprob: -22.750001907348633
    7. '  ' → logprob: -23.250001907348633
    8. '
' → logprob: -23.625001907348633
    9. '<|end|>' → logprob: -24.000001907348633
    10. '111' → logprob: -24.312501907348633

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -20.5
    4. '１' → logprob: -21.25
    5. 'a' → logprob: -21.5
    6. '۱' → logprob: -21.875
    7. '```' → logprob: -22.25
    8. '<|end|>' → logprob: -22.5
    9. '  ' → logprob: -22.9375
    10. '१' → logprob: -23.125

Token 303: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11607509106397629
    2. '   ' → logprob: -2.241075038909912
    3. '    
' → logprob: -5.991075038909912
    4. '<|end|>' → logprob: -7.741075038909912
    5. '  
' → logprob: -9.11607551574707
    6. 'return' → logprob: -9.74107551574707
    7. '
' → logprob: -10.24107551574707
    8. '\n' → logprob: -10.61607551574707
    9. ' return' → logprob: -10.74107551574707
    10. ' 
' → logprob: -10.86607551574707

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01607777364552021
    2. '
' → logprob: -4.266077995300293
    3. 'print' → logprob: -7.016077995300293
    4. '    
' → logprob: -7.391077995300293
    5. 'return' → logprob: -8.766077995300293
    6. '<|end|>' → logprob: -9.266077995300293
    7. ')' → logprob: -9.766077995300293
    8. ' return' → logprob: -11.016077995300293
    9. '  
' → logprob: -11.266077995300293
    10. '\n' → logprob: -11.641077995300293

Token 305: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5761706829071045
    2. '   ' → logprob: -0.8261706829071045
    3. ' print' → logprob: -8.826170921325684
    4. 'return' → logprob: -9.451170921325684
    5. '	print' → logprob: -12.826170921325684
    6. '```' → logprob: -13.576170921325684
    7. '    
' → logprob: -14.201170921325684
    8. '       ' → logprob: -15.201170921325684
    9. '#print' → logprob: -15.326170921325684
    10. '
' → logprob: -15.326170921325684

Token 306: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0005544631858356297
    2. '(' → logprob: -7.50055456161499
    3. 'a' → logprob: -13.875554084777832
    4. '()' → logprob: -15.625554084777832
    5. '('' → logprob: -15.875554084777832
    6. '(
' → logprob: -16.37555503845215
    7. '(A' → logprob: -17.12555503845215
    8. ' (' → logprob: -18.00055503845215
    9. '((' → logprob: -18.50055503845215
    10. '(ans' → logprob: -18.75055503845215

Token 307: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -6.8497312895488e-05
    2. '_' → logprob: -9.750068664550781
    3. ' _' → logprob: -12.250068664550781
    4. '_ct' → logprob: -12.875068664550781
    5. ')_' → logprob: -14.125068664550781
    6. 'cnt' → logprob: -14.625068664550781
    7. '_)' → logprob: -14.750068664550781
    8. ')' → logprob: -14.750068664550781
    9. '_c' → logprob: -15.875068664550781
    10. '_cn' → logprob: -16.00006866455078

Token 308: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. '()' → logprob: -13.87500286102295
    3. '())' → logprob: -13.87500286102295
    4. ' )' → logprob: -15.12500286102295
    5. ')
' → logprob: -15.25000286102295
    6. ')`' → logprob: -17.125001907348633
    7. '(' → logprob: -18.125001907348633
    8. '')' → logprob: -18.125001907348633
    9. '`)' → logprob: -18.500001907348633
    10. '）' → logprob: -18.500001907348633

Token 309: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4700038433074951
    2. '<|end|>' → logprob: -2.470003843307495
    3. '
' → logprob: -2.845003843307495
    4. '\' → logprob: -2.970003843307495
    5. '\n' → logprob: -2.970003843307495
    6. 'sl' → logprob: -2.970003843307495
    7. '(' → logprob: -3.345003843307495
    8. '(
' → logprob: -4.345004081726074
    9. ')' → logprob: -4.845004081726074
    10. '()' → logprob: -4.970004081726074

Token 311: ' bon' (ID: 4846)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37780919671058655
    2. 'sl' → logprob: -2.5028092861175537
    3. '
' → logprob: -2.7528092861175537
    4. '(' → logprob: -3.0028092861175537
    5. '<|end|>' → logprob: -3.3778092861175537
    6. '\' → logprob: -3.5028092861175537
    7. '\n' → logprob: -3.7528092861175537
    8. '()' → logprob: -4.877809047698975
    9. '#' → logprob: -5.127809047698975
    10. '(
' → logprob: -6.127809047698975

Token 312: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: ' normalement' (ID: 164432)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: ' ça' (ID: 13590)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43101197481155396
    2. '<|end|>' → logprob: -1.4310119152069092
    3. '()' → logprob: -3.306011915206909
    4. '\n' → logprob: -3.931011915206909
    5. '(
' → logprob: -4.056012153625488
    6. 'sl' → logprob: -4.556012153625488
    7. '(' → logprob: -4.806012153625488
    8. '(sl' → logprob: -5.556012153625488
    9. '\' → logprob: -5.556012153625488
    10. '#' → logprob: -6.431012153625488

Token 315: ' marche' (ID: 58191)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: '...
' (ID: 4908)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6422926783561707
    2. '<|end|>' → logprob: -1.6422927379608154
    3. '(' → logprob: -2.8922927379608154
    4. 's' → logprob: -3.1422927379608154
    5. '\' → logprob: -3.1422927379608154
    6. '(
' → logprob: -3.2672927379608154
    7. '()' → logprob: -3.6422927379608154
    8. 'sl' → logprob: -3.7672927379608154
    9. '\n' → logprob: -4.017292499542236
    10. ')' → logprob: -5.267292499542236

Token 317: 'if' (ID: 366)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.613713264465332
    2. '
' → logprob: -1.363713264465332
    3. '<|end|>' → logprob: -2.363713264465332
    4. '\' → logprob: -3.113713264465332
    5. '(' → logprob: -4.363713264465332
    6. '(
' → logprob: -4.613713264465332
    7. '\n' → logprob: -5.113713264465332
    8. '#' → logprob: -5.113713264465332
    9. '```' → logprob: -5.488713264465332
    10. 'sl' → logprob: -5.738713264465332

Token 318: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10031784325838089
    2. '__' → logprob: -2.35031795501709
    3. ' True' → logprob: -9.22531795501709
    4. 'True' → logprob: -11.72531795501709
    5. ' ' → logprob: -13.60031795501709
    6. '___' → logprob: -13.97531795501709
    7. '_' → logprob: -14.10031795501709
    8. 'name' → logprob: -14.60031795501709
    9. ' ' → logprob: -14.85031795501709
    10. '_name' → logprob: -15.10031795501709

Token 319: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0018059646245092154
    2. ' __' → logprob: -6.876805782318115
    3. ' ==' → logprob: -7.376805782318115
    4. '==' → logprob: -9.251806259155273
    5. '_' → logprob: -10.751806259155273
    6. '__.' → logprob: -11.626806259155273
    7. '__.__' → logprob: -12.126806259155273
    8. '____' → logprob: -12.376806259155273
    9. '___' → logprob: -12.626806259155273
    10. '=="' → logprob: -13.001806259155273

Token 320: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '==' → logprob: -15.500000953674316
    3. '___' → logprob: -16.5
    4. '__.__' → logprob: -16.5
    5. '____' → logprob: -17.0
    6. ' __' → logprob: -17.625
    7. '_' → logprob: -17.875
    8. ' ==' → logprob: -18.375
    9. '__
' → logprob: -18.625
    10. '__('' → logprob: -19.0

Token 321: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10005341470241547
    2. ' ==' → logprob: -2.725053310394287
    3. '==' → logprob: -3.600053310394287
    4. '=="' → logprob: -6.100053310394287
    5. '=='' → logprob: -10.350053787231445
    6. '_' → logprob: -10.725053787231445
    7. ' =="' → logprob: -11.225053787231445
    8. '___' → logprob: -11.600053787231445
    9. ' __' → logprob: -11.600053787231445
    10. '=' → logprob: -12.100053787231445

Token 322: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018407681956887245
    2. ''' → logprob: -4.018407821655273
    3. ' "__' → logprob: -8.643407821655273
    4. '__' → logprob: -9.518407821655273
    5. ' '__' → logprob: -11.893407821655273
    6. '"user' → logprob: -14.643407821655273
    7. '"name' → logprob: -16.268407821655273
    8. '"class' → logprob: -16.518407821655273
    9. '("__' → logprob: -16.643407821655273
    10. '"is' → logprob: -17.143407821655273

Token 323: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.7530574849806726e-05
    2. 'name' → logprob: -10.125057220458984
    3. '__' → logprob: -11.125057220458984
    4. '"' → logprob: -13.125057220458984
    5. ' main' → logprob: -14.750057220458984
    6. '_main' → logprob: -16.125057220458984
    7. 'ma' → logprob: -17.250057220458984
    8. '(main' → logprob: -17.625057220458984
    9. '	main' → logprob: -17.625057220458984
    10. 'built' → logprob: -17.750057220458984

Token 324: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6933341026306152
    2. '__":
' → logprob: -0.6933341026306152
    3. '__':
' → logprob: -8.693334579467773
    4. '__:' → logprob: -11.318334579467773
    5. '_' → logprob: -12.318334579467773
    6. '__["' → logprob: -13.818334579467773
    7. '__.' → logprob: -14.193334579467773
    8. '__.__' → logprob: -14.693334579467773
    9. '__
' → logprob: -16.068334579467773
    10. '__",' → logprob: -16.068334579467773

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14825738966464996
    2. '	sl' → logprob: -2.2732574939727783
    3. ' sl' → logprob: -4.023257255554199
    4. '	s' → logprob: -4.273257255554199
    5. 'sl' → logprob: -7.148257255554199
    6. '    
' → logprob: -7.523257255554199
    7. '(sl' → logprob: -7.648257255554199
    8. ' solve' → logprob: -7.898257255554199
    9. '<|end|>' → logprob: -8.1482572555542
    10. '(s' → logprob: -8.7732572555542

Token 326: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' (adapté à ' sl') → logprob: -0.0015396231319755316
    2. ' sl' → logprob: -6.501539707183838
    3. 'solve' → logprob: -10.62653923034668
    4. '	sl' → logprob: -12.00153923034668
    5. 'sol' → logprob: -12.62653923034668
    6. 's' → logprob: -14.00153923034668
    7. '_sl' → logprob: -14.12653923034668
    8. '   ' → logprob: -15.12653923034668
    9. 'sal' → logprob: -15.50153923034668
    10. ' solve' → logprob: -15.62653923034668

Token 327: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -3.333223139634356e-05
    2. 'olve' → logprob: -10.750033378601074
    3. 've' → logprob: -11.500033378601074
    4. 'ov' → logprob: -13.500033378601074
    5. 'o' → logprob: -16.625032424926758
    6. 'ovej' → logprob: -17.125032424926758
    7. ' ove' → logprob: -17.375032424926758
    8. 'ovel' → logprob: -17.500032424926758
    9. 'ovo' → logprob: -17.625032424926758
    10. 'ave' → logprob: -17.625032424926758

Token 328: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00022713904036208987
    2. '(' → logprob: -8.500226974487305
    3. '()
' → logprob: -12.125226974487305
    4. '();' → logprob: -12.750226974487305
    5. '()">' → logprob: -12.750226974487305
    6. '())' → logprob: -13.125226974487305
    7. '()]' → logprob: -13.500226974487305
    8. ' ()' → logprob: -13.500226974487305
    9. '()>' → logprob: -13.750226974487305
    10. '()`' → logprob: -13.750226974487305


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 326
Tokens correctement prédits (1ère position, stricte): 111
Tokens correctement prédits (1ère position, avec adaptation): 120
Tokens correctement prédits (top 10): 216
Précision stricte (1ère position): 34.05%
Précision adaptée (1ère position): 36.81%
Précision (top 10): 66.26%
================================================================================
