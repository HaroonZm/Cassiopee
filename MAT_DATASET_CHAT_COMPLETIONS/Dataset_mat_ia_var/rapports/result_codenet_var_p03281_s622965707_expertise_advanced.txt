================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import isqrt

def count_odd_with_8_divisors(n):
    def num_divisors(x):
        count = 1
        exp = 0
        i = 2
        y = x
        while i * i <= y:
            exp = 0
            while x % i == 0:
                x //= i
                exp += 1
            if exp:
                count *= (exp + 1)
            i += 1
        if x > 1:
            count *= 2
        return count

    return sum(
        num_divisors(i) == 8
        for i in range(1, n + 1, 2)
    )

print(count_odd_with_8_divisors(int(input())))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' is' (ID: 382)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.22550995647907257
    2. ' sqrt' → logprob: -1.8505100011825562
    3. 'pow' → logprob: -4.100510120391846
    4. 'pi' → logprob: -4.850510120391846
    5. 'sin' → logprob: -4.850510120391846
    6. ' pi' → logprob: -5.100510120391846
    7. 'import' → logprob: -6.350510120391846
    8. 'ceil' → logprob: -7.100510120391846
    9. ' sin' → logprob: -7.225510120391846
    10. 'log' → logprob: -7.725510120391846

Token 4: 'qrt' (ID: 17629)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0510526895523071
    2. 'qrt' → logprob: -1.6760526895523071
    3. 'a' → logprob: -2.1760525703430176
    4. 'p' → logprob: -2.3010525703430176
    5. 'q' → logprob: -2.3010525703430176
    6. '_' → logprob: -3.0510525703430176
    7. 'l' → logprob: -3.6760525703430176
    8. 'n' → logprob: -4.051052570343018
    9. '```' → logprob: -4.926052570343018
    10. 's' → logprob: -5.051052570343018

Token 5: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001410708879120648
    2. '\(' → logprob: -7.251410484313965
    3. '(
' → logprob: -7.376410484313965
    4. '\n' → logprob: -11.001410484313965
    5. ',' → logprob: -11.376410484313965
    6. '```' → logprob: -12.001410484313965
    7. ' (' → logprob: -12.001410484313965
    8. '\' → logprob: -12.126410484313965
    9. '.' → logprob: -12.126410484313965
    10. '#' → logprob: -12.626410484313965

Token 6: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014106499031186104
    2. '(
' → logprob: -4.389106273651123
    3. '\(' → logprob: -7.764106273651123
    4. '
' → logprob: -8.014106750488281
    5. '\n' → logprob: -8.389106750488281
    6. '```' → logprob: -8.764106750488281
    7. '\' → logprob: -9.014106750488281
    8. '(

' → logprob: -9.889106750488281
    9. ',' → logprob: -9.889106750488281
    10. '`' → logprob: -10.389106750488281

Token 7: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0019373197574168444
    2. ' calculate' → logprob: -7.626937389373779
    3. ' ' → logprob: -7.626937389373779
    4. ' factorial' → logprob: -8.126936912536621
    5. '_' → logprob: -8.751936912536621
    6. ' factor' → logprob: -9.626936912536621
    7. ' f' → logprob: -9.751936912536621
    8. ' space' → logprob: -9.876936912536621
    9. ' def' → logprob: -9.876936912536621
    10. ' add' → logprob: -10.251936912536621

Token 8: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1998380720615387
    2. '_div' → logprob: -3.324838161468506
    3. '_words' → logprob: -3.574838161468506
    4. '_elements' → logprob: -4.199838161468506
    5. '_s' → logprob: -4.324838161468506
    6. '_occ' → logprob: -4.324838161468506
    7. '_pairs' → logprob: -4.449838161468506
    8. '_digits' → logprob: -4.824838161468506
    9. '_f' → logprob: -4.949838161468506
    10. '_numbers' → logprob: -4.949838161468506

Token 9: 'odd' (ID: 18303)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.26395383477211
    2. 'perfect' → logprob: -2.638953924179077
    3. 'pr' → logprob: -3.138953924179077
    4. 'square' → logprob: -3.263953924179077
    5. 's' → logprob: -3.513953924179077
    6. '_div' → logprob: -4.263953685760498
    7. 'f' → logprob: -4.513953685760498
    8. 'digits' → logprob: -5.513953685760498
    9. 'pairs' → logprob: -5.638953685760498
    10. 'sub' → logprob: -5.638953685760498

Token 10: '_with' (ID: 14161)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5369651913642883
    2. '_numbers' → logprob: -1.7869651317596436
    3. '(' → logprob: -2.5369651317596436
    4. '_s' → logprob: -2.7869651317596436
    5. '_digits' → logprob: -2.9119651317596436
    6. 's' → logprob: -3.4119651317596436
    7. '_parent' → logprob: -5.661965370178223
    8. '_bits' → logprob: -5.786965370178223
    9. '_chars' → logprob: -6.161965370178223
    10. '_parts' → logprob: -6.411965370178223

Token 11: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07859274744987488
    2. '_factor' → logprob: -3.2035927772521973
    3. '_digits' → logprob: -4.703592777252197
    4. 'out' → logprob: -5.453592777252197
    5. '_div' → logprob: -5.578592777252197
    6. '_s' → logprob: -5.953592777252197
    7. '_f' → logprob: -5.953592777252197
    8. 'in' → logprob: -6.203592777252197
    9. '_digit' → logprob: -6.328592777252197
    10. '_sum' → logprob: -6.703592777252197

Token 12: '8' (ID: 23)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.9300177097320557
    2. 'is' → logprob: -1.5550177097320557
    3. 'f' → logprob: -2.0550177097320557
    4. 'sqrt' → logprob: -2.4300177097320557
    5. 'factor' → logprob: -3.5550177097320557
    6. 'digits' → logprob: -3.5550177097320557
    7. 'odd' → logprob: -3.6800177097320557
    8. 'perfect' → logprob: -4.055017471313477
    9. 'square' → logprob: -4.180017471313477
    10. 'out' → logprob: -4.680017471313477

Token 13: '_div' (ID: 36926)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31855207681655884
    2. '_digits' → logprob: -1.693552017211914
    3. '_s' → logprob: -3.068552017211914
    4. '_chars' → logprob: -3.943552017211914
    5. '_' → logprob: -4.943552017211914
    6. '(' → logprob: -5.943552017211914
    7. 'es' → logprob: -6.318552017211914
    8. '_numbers' → logprob: -6.318552017211914
    9. '_digit' → logprob: -6.568552017211914
    10. '_bits' → logprob: -6.818552017211914

Token 14: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0002892258344218135
    2. 's' → logprob: -8.750288963317871
    3. 'idors' → logprob: -10.500288963317871
    4. 'iors' → logprob: -10.750288963317871
    5. '```' → logprob: -11.125288963317871
    6. 'isible' → logprob: -11.625288963317871
    7. 'ors' → logprob: -11.625288963317871
    8. 'isor' → logprob: -11.750288963317871
    9. 'iders' → logprob: -11.750288963317871
    10. 'ectors' → logprob: -12.000288963317871

Token 15: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0002547832846175879
    2. 'or' → logprob: -8.87525463104248
    3. 'ons' → logprob: -10.37525463104248
    4. 'on' → logprob: -10.62525463104248
    5. '```' → logprob: -10.62525463104248
    6. 'os' → logprob: -10.87525463104248
    7. 's' → logprob: -12.37525463104248
    8. 'iors' → logprob: -13.12525463104248
    9. 'tors' → logprob: -13.37525463104248
    10. 'def' → logprob: -13.87525463104248

Token 16: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002714681322686374
    2. '_' → logprob: -8.750271797180176
    3. '(_' → logprob: -10.500271797180176
    4. '(:' → logprob: -10.625271797180176
    5. ' (' → logprob: -12.000271797180176
    6. '():' → logprob: -12.000271797180176
    7. '(_:' → logprob: -12.250271797180176
    8. '(a' → logprob: -12.375271797180176
    9. '("("' → logprob: -12.375271797180176
    10. '(n' → logprob: -12.625271797180176

Token 17: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6333045363426208
    2. '):' → logprob: -0.7583045363426208
    3. '_' → logprob: -7.633304595947266
    4. ':' → logprob: -8.883304595947266
    5. '):
' → logprob: -10.758304595947266
    6. '```' → logprob: -11.133304595947266
    7. '**' → logprob: -12.258304595947266
    8. ')_' → logprob: -12.508304595947266
    9. ')：' → logprob: -12.508304595947266
    10. '=' → logprob: -12.633304595947266

Token 18: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4691762626171112
    2. ':' → logprob: -1.2191762924194336
    3. '   ' → logprob: -3.3441762924194336
    4. ':
' → logprob: -4.844176292419434
    5. '```' → logprob: -4.844176292419434
    6. '(:' → logprob: -5.344176292419434
    7. '():' → logprob: -5.344176292419434
    8. '_' → logprob: -5.469176292419434
    9. '(n' → logprob: -5.844176292419434
    10. ' :' → logprob: -6.344176292419434

Token 19: ' def' (ID: 1056)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.06782499700784683
    2. 'count' → logprob: -3.4428250789642334
    3. ' result' → logprob: -3.8178250789642334
    4. '   ' → logprob: -5.192824840545654
    5. ' cnt' → logprob: -6.567824840545654
    6. ' total' → logprob: -6.692824840545654
    7. '```' → logprob: -6.942824840545654
    8. 'result' → logprob: -6.942824840545654
    9. ' 
' → logprob: -8.317825317382812
    10. ' ' → logprob: -8.567825317382812

Token 20: ' num' (ID: 2269)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.23597952723503113
    2. ' divis' → logprob: -2.1109795570373535
    3. ' divisor' → logprob: -2.7359795570373535
    4. 'div' → logprob: -4.3609795570373535
    5. 'count' → logprob: -5.2359795570373535
    6. ' is' → logprob: -6.3609795570373535
    7. ' num' → logprob: -6.6109795570373535
    8. ' number' → logprob: -7.3609795570373535
    9. ' get' → logprob: -7.6109795570373535
    10. ' div' → logprob: -7.9859795570373535

Token 21: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.31340861320495605
    2. 'ber' → logprob: -1.313408613204956
    3. 'div' → logprob: -9.938408851623535
    4. '_' → logprob: -10.188408851623535
    5. 'bers' → logprob: -10.688408851623535
    6. ' _' → logprob: -11.813408851623535
    7. '_prime' → logprob: -12.188408851623535
    8. '_of' → logprob: -12.813408851623535
    9. '   ' → logprob: -13.063408851623535
    10. 'er' → logprob: -13.188408851623535

Token 22: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -3.35706390615087e-05
    2. 's' → logprob: -11.500033378601074
    3. '```' → logprob: -11.500033378601074
    4. '_' → logprob: -12.625033378601074
    5. '   ' → logprob: -13.000033378601074
    6. 'idors' → logprob: -13.500033378601074
    7. '()' → logprob: -13.750033378601074
    8. 'isible' → logprob: -13.750033378601074
    9. '_count' → logprob: -14.750033378601074
    10. '_is' → logprob: -15.125033378601074

Token 23: 'ors' (ID: 914)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006815657950937748
    2. 'ors' → logprob: -5.256815433502197
    3. 'tors' → logprob: -7.131815433502197
    4. 'rs' → logprob: -7.631815433502197
    5. '   ' → logprob: -9.131815910339355
    6. 'is' → logprob: -9.631815910339355
    7. 'ators' → logprob: -10.506815910339355
    8. 'os' → logprob: -10.631815910339355
    9. 'def' → logprob: -11.506815910339355
    10. '=' → logprob: -12.381815910339355

Token 24: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08601243793964386
    2. '(n' → logprob: -2.586012363433838
    3. '(x' → logprob: -5.336012363433838
    4. '(num' → logprob: -7.086012363433838
    5. ' (' → logprob: -7.336012363433838
    6. '(token' → logprob: -8.461012840270996
    7. '(k' → logprob: -8.711012840270996
    8. '(number' → logprob: -9.836012840270996
    9. 's' → logprob: -10.086012840270996
    10. '(m' → logprob: -10.211012840270996

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010615098290145397
    2. '):
' → logprob: -7.25106143951416
    3. ' ):' → logprob: -8.37606143951416
    4. ')' → logprob: -9.62606143951416
    5. '   ' → logprob: -10.12606143951416
    6. ':' → logprob: -12.12606143951416
    7. '):
' → logprob: -12.62606143951416
    8. ' ' → logprob: -12.75106143951416
    9. '**' → logprob: -14.75106143951416
    10. ' ):
' → logprob: -14.87606143951416

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019197124987840652
    2. '   ' → logprob: -4.8941969871521
    3. ':' → logprob: -5.3941969871521
    4. '```' → logprob: -6.7691969871521
    5. '():' → logprob: -6.7691969871521
    6. '1' → logprob: -7.0191969871521
    7. '\' → logprob: -7.7691969871521
    8. '**' → logprob: -7.7691969871521
    9. '    ' → logprob: -8.144197463989258
    10. '    
' → logprob: -8.269197463989258

Token 27: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41147366166114807
    2. '   ' → logprob: -2.1614737510681152
    3. ' ' → logprob: -2.4114737510681152
    4. '    ' → logprob: -3.1614737510681152
    5. 'count' (adapté à ' count') → logprob: -3.4114737510681152
    6. ':' → logprob: -4.286473751068115
    7. ' :' → logprob: -4.411473751068115
    8. '        ' → logprob: -4.661473751068115
    9. ' count' → logprob: -5.161473751068115
    10. '     ' → logprob: -6.286473751068115

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04823744297027588
    2. '=' → logprob: -3.1732373237609863
    3. ' ' → logprob: -5.548237323760986
    4. '_' → logprob: -6.923237323760986
    5. 's' → logprob: -8.798237800598145
    6. ',' → logprob: -9.298237800598145
    7. '  ' → logprob: -9.923237800598145
    8. ' +=' → logprob: -11.548237800598145
    9. '(' → logprob: -11.673237800598145
    10. '   ' → logprob: -11.673237800598145

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12935471534729004
    2. '0' → logprob: -2.12935471534729
    3. '1' → logprob: -6.504354476928711
    4. '2' → logprob: -7.004354476928711
    5. '  ' → logprob: -12.004354476928711
    6. '   ' → logprob: -12.379354476928711
    7. ' x' → logprob: -13.254354476928711
    8. '    ' → logprob: -13.629354476928711
    9. '=' → logprob: -13.691854476928711
    10. ' ' → logprob: -13.879354476928711

Token 30: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009755381383001804
    2. '2' → logprob: -4.759755611419678
    3. ' ' → logprob: -7.134755611419678
    4. '1' → logprob: -8.00975513458252
    5. '   ' → logprob: -12.38475513458252
    6. 'div' → logprob: -13.50975513458252
    7. '  ' → logprob: -13.88475513458252
    8. '3' → logprob: -14.25975513458252
    9. 'x' → logprob: -14.44725513458252
    10. '    ' → logprob: -14.57225513458252

Token 31: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28412526845932007
    2. ' 
' → logprob: -2.034125328063965
    3. '<|end|>' → logprob: -2.784125328063965
    4. ',' → logprob: -3.784125328063965
    5. '0' → logprob: -4.534125328063965
    6. ' ,' → logprob: -5.284125328063965
    7. ' *' → logprob: -6.159125328063965
    8. '  
' → logprob: -6.284125328063965
    9. '
' → logprob: -6.284125328063965
    10. '2' → logprob: -6.534125328063965

Token 33: ' exp' (ID: 2794)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5747487545013428
    2. ' i' → logprob: -1.1997487545013428
    3. ' for' → logprob: -3.3247487545013428
    4. 'd' → logprob: -3.8247487545013428
    5. 'p' → logprob: -4.324748992919922
    6. ' p' → logprob: -4.449748992919922
    7. '   ' → logprob: -4.449748992919922
    8. 'for' → logprob: -4.574748992919922
    9. '       ' → logprob: -4.574748992919922
    10. '2' → logprob: -4.699748992919922

Token 34: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6211994290351868
    2. 'onent' → logprob: -1.496199369430542
    3. 'ONENT' → logprob: -2.996199369430542
    4. ' =' → logprob: -2.996199369430542
    5. 'ansion' → logprob: -3.621199369430542
    6. 's' → logprob: -3.871199369430542
    7. 'l' → logprob: -4.371199607849121
    8. '_' → logprob: -4.621199607849121
    9. ' ' → logprob: -4.621199607849121
    10. '   ' → logprob: -4.746199607849121

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3229076862335205
    2. ' ' → logprob: -1.3229076862335205
    3. '2' → logprob: -4.947907447814941
    4. '1' → logprob: -6.072907447814941
    5. 'x' → logprob: -9.697907447814941
    6. '{}' → logprob: -10.197907447814941
    7. ' x' → logprob: -11.010407447814941
    8. '   ' → logprob: -11.322907447814941
    9. '=' → logprob: -11.385407447814941
    10. '  ' → logprob: -11.385407447814941

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038681987673044205
    2. '2' → logprob: -3.538681983947754
    3. '1' → logprob: -4.913681983947754
    4. ' ' → logprob: -6.663681983947754
    5. 'x' → logprob: -8.913681983947754
    6. '{}' → logprob: -9.538681983947754
    7. '-' → logprob: -11.538681983947754
    8. '[]' → logprob: -11.851181983947754
    9. '   ' → logprob: -12.163681983947754
    10. 'is' → logprob: -12.413681983947754

Token 37: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7150847315788269
    2. '<|end|>' → logprob: -0.9650847315788269
    3. ' 
' → logprob: -2.2150847911834717
    4. '<|end|>' → logprob: -4.715084552764893
    5. '
' → logprob: -5.215084552764893
    6. '       ' → logprob: -6.215084552764893
    7. '        ' → logprob: -7.715084552764893
    8. ' while' → logprob: -7.715084552764893
    9. '   ' → logprob: -7.840084552764893
    10. '  ' → logprob: -7.840084552764893

Token 38: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08192567527294159
    2. '+' → logprob: -4.081925868988037
    3. '<|end|>' → logprob: -4.581925868988037
    4. ' 
' → logprob: -4.706925868988037
    5. '       ' → logprob: -4.956925868988037
    6. '        ' → logprob: -5.206925868988037
    7. '0' → logprob: -5.456925868988037
    8. ' +' → logprob: -6.206925868988037
    9. '   ' → logprob: -6.206925868988037
    10. '=' → logprob: -6.456925868988037

Token 39: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10654550045728683
    2. 'x' → logprob: -3.2315454483032227
    3. 'p' → logprob: -4.481545448303223
    4. '<|end|>' → logprob: -4.981545448303223
    5. '   ' → logprob: -5.106545448303223
    6. '    ' → logprob: -5.481545448303223
    7. 'n' → logprob: -5.856545448303223
    8. ' for' → logprob: -5.856545448303223
    9. '       ' → logprob: -5.856545448303223
    10. 'i' (adapté à ' i') → logprob: -5.856545448303223

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4443356394767761
    2. '=' → logprob: -1.069335699081421
    3. ' ' → logprob: -4.194335460662842
    4. ' +=' → logprob: -8.5693359375
    5. 'n' → logprob: -10.1943359375
    6. ',' → logprob: -10.1943359375
    7. '<|end|>' → logprob: -10.1943359375
    8. 's' → logprob: -10.3193359375
    9. '  ' → logprob: -10.8193359375
    10. '+' → logprob: -11.3193359375

Token 41: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6326547861099243
    2. ' ' → logprob: -0.7576547861099243
    3. '3' → logprob: -10.632655143737793
    4. '1' → logprob: -11.257655143737793
    5. '  ' → logprob: -12.195155143737793
    6. '0' → logprob: -13.195155143737793
    7. '   ' → logprob: -13.507655143737793
    8. 'x' → logprob: -13.570155143737793
    9. ' i' → logprob: -13.882655143737793
    10. '5' → logprob: -13.945155143737793

Token 42: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001939938636496663
    2. ' ' → logprob: -6.25193977355957
    3. '3' → logprob: -12.37693977355957
    4. '1' → logprob: -13.00193977355957
    5. '   ' → logprob: -13.75193977355957
    6. '0' → logprob: -14.43943977355957
    7. 'i' → logprob: -14.62693977355957
    8. '  ' → logprob: -14.75193977355957
    9. 'is' → logprob: -14.75193977355957
    10. 'x' → logprob: -14.93943977355957

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3842274248600006
    2. ' while' → logprob: -1.5092273950576782
    3. 'while' → logprob: -2.5092275142669678
    4. 'i' → logprob: -5.384227275848389
    5. '    ' → logprob: -6.134227275848389
    6. '   ' → logprob: -6.634227275848389
    7. ' 
' → logprob: -6.759227275848389
    8. 'x' → logprob: -7.009227275848389
    9. ' i' → logprob: -7.134227275848389
    10. '  ' → logprob: -7.134227275848389

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002453863620758
    2. '=' → logprob: -2.350245475769043
    3. ' ' → logprob: -10.350245475769043
    4. ',' → logprob: -12.100245475769043
    5. ')' → logprob: -15.600245475769043
    6. '  ' → logprob: -15.850245475769043
    7. '   ' → logprob: -16.100244522094727
    8. ' ,' → logprob: -16.100244522094727
    9. ' =
' → logprob: -16.225244522094727
    10. 's' → logprob: -16.350244522094727

Token 47: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2014141082763672
    2. ' x' → logprob: -1.7014141082763672
    3. '	x' → logprob: -14.826414108276367
    4. ' ' → logprob: -15.576414108276367
    5. '1' → logprob: -16.201414108276367
    6. '    ' → logprob: -16.576414108276367
    7. 'n' → logprob: -17.076414108276367
    8. ')x' → logprob: -17.201414108276367
    9. '   ' → logprob: -17.951414108276367
    10. '2' → logprob: -18.076414108276367

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9678441882133484
    2. 'while' → logprob: -1.7178442478179932
    3. ' while' → logprob: -1.8428442478179932
    4. '<|end|>' → logprob: -2.092844247817993
    5. ' 
' → logprob: -2.592844247817993
    6. ' ' → logprob: -3.967844247817993
    7. '  
' → logprob: -4.467844009399414
    8. '	while' → logprob: -4.592844009399414
    9. '<|end|>' → logprob: -4.842844009399414
    10. '   ' → logprob: -4.967844009399414

Token 49: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6776300668716431
    2. ' while' → logprob: -1.177630066871643
    3. '<|end|>' → logprob: -2.4276299476623535
    4. 'while' (adapté à ' while') → logprob: -2.9276299476623535
    5. ' 
' → logprob: -3.6776299476623535
    6. '<|end|>' → logprob: -5.5526299476623535
    7. '    ' → logprob: -5.6776299476623535
    8. '  ' → logprob: -6.5526299476623535
    9. '	while' → logprob: -6.6776299476623535
    10. '   ' → logprob: -7.0526299476623535

Token 51: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5659314393997192
    2. 'i' → logprob: -1.1909314393997192
    3. ' y' → logprob: -2.3159313201904297
    4. 'y' → logprob: -3.5659313201904297
    5. '(i' → logprob: -7.31593132019043
    6. ' (' → logprob: -7.69093132019043
    7. ' ' → logprob: -10.06593132019043
    8. '(' → logprob: -10.31593132019043
    9. '(y' → logprob: -10.81593132019043
    10. '	i' → logprob: -11.31593132019043

Token 52: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38628363609313965
    2. ' <=' → logprob: -1.6362836360931396
    3. '*i' → logprob: -2.3862836360931396
    4. '*' → logprob: -3.8862836360931396
    5. '<=' → logprob: -4.386283874511719
    6. '*y' → logprob: -8.511283874511719
    7. '**' → logprob: -8.636283874511719
    8. '=' → logprob: -8.636283874511719
    9. ' =' → logprob: -10.011283874511719
    10. ' *=' → logprob: -10.011283874511719

Token 53: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001673061487963423
    2. ' i' → logprob: -8.875166893005371
    3. '*i' → logprob: -11.000166893005371
    4. '*' → logprob: -12.625166893005371
    5. '2' → logprob: -13.250166893005371
    6. 'is' → logprob: -13.375166893005371
    7. 'y' → logprob: -13.500166893005371
    8. ' ' → logprob: -13.875166893005371
    9. '<=' → logprob: -15.000166893005371
    10. ' *' → logprob: -15.625166893005371

Token 54: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03395906090736389
    2. '<=' → logprob: -3.408959150314331
    3. '<|end|>' → logprob: -8.15895938873291
    4. ' ' → logprob: -11.15895938873291
    5. ')<=' → logprob: -12.90895938873291
    6. '<|end|>' → logprob: -13.15895938873291
    7. ']<=' → logprob: -13.28395938873291
    8. '[' → logprob: -13.40895938873291
    9. '=' → logprob: -13.65895938873291
    10. ' ≤' → logprob: -14.28395938873291

Token 55: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004628296010196209
    2. ' y' → logprob: -5.3796281814575195
    3. 'x' → logprob: -11.87962818145752
    4. '	y' → logprob: -13.87962818145752
    5. ' ' → logprob: -16.754629135131836
    6. '   ' → logprob: -17.754629135131836
    7. 'y's' → logprob: -17.754629135131836
    8. ')y' → logprob: -17.754629135131836
    9. '```' → logprob: -18.129629135131836
    10. '‘y' → logprob: -18.254629135131836

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02968338131904602
    2. ' and' → logprob: -3.7796833515167236
    3. ' :' → logprob: -5.279683589935303
    4. 'and' → logprob: -7.154683589935303
    5. ':
' → logprob: -7.654683589935303
    6. '<|end|>' → logprob: -10.404683113098145
    7. ' :
' → logprob: -11.404683113098145
    8. '<|end|>' → logprob: -11.529683113098145
    9. ':**' → logprob: -12.404683113098145
    10. ':

' → logprob: -12.529683113098145

Token 57: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6202719211578369
    2. ' :' → logprob: -1.245271921157837
    3. '<|end|>' → logprob: -2.370271921157837
    4. ' ' → logprob: -3.245271921157837
    5. '       ' → logprob: -4.495271682739258
    6. '    ' → logprob: -5.120271682739258
    7. '<|end|>' → logprob: -5.120271682739258
    8. '   ' → logprob: -5.495271682739258
    9. ' :
' → logprob: -5.745271682739258
    10. ':
' → logprob: -5.870271682739258

Token 58: ' exp' (ID: 2794)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4831477403640747
    2. ' if' → logprob: -1.6081477403640747
    3. '<|end|>' → logprob: -3.108147621154785
    4. '0' → logprob: -3.233147621154785
    5. 'if' → logprob: -3.358147621154785
    6. ' while' → logprob: -3.858147621154785
    7. '        ' → logprob: -4.608147621154785
    8. 'while' → logprob: -4.983147621154785
    9. '    ' → logprob: -5.108147621154785
    10. '       ' → logprob: -5.608147621154785

Token 59: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0685446634888649
    2. ' =' → logprob: -2.943544626235962
    3. '=' → logprob: -4.943544864654541
    4. '+=' → logprob: -5.693544864654541
    5. ' ' → logprob: -5.818544864654541
    6. '<|end|>' → logprob: -9.818544387817383
    7. '+' → logprob: -11.193544387817383
    8. ' +' → logprob: -11.568544387817383
    9. '  ' → logprob: -12.693544387817383
    10. '<|end|>' → logprob: -12.943544387817383

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993988156318665
    2. ' ' → logprob: -2.6949398517608643
    3. '1' → logprob: -13.444939613342285
    4. ' y' → logprob: -14.194939613342285
    5. 'y' → logprob: -14.757439613342285
    6. '   ' → logprob: -15.569939613342285
    7. '<|end|>' → logprob: -15.757439613342285
    8. 'x' → logprob: -15.882439613342285
    9. '  ' → logprob: -16.0699405670166
    10. 'count' → logprob: -16.1324405670166

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009484992478974164
    2. ' ' → logprob: -7.000948429107666
    3. 'y' → logprob: -11.000948905944824
    4. 'x' → logprob: -11.375948905944824
    5. '1' → logprob: -12.500948905944824
    6. ' y' → logprob: -12.875948905944824
    7. 'count' → logprob: -14.813448905944824
    8. ' x' → logprob: -15.063448905944824
    9. '2' → logprob: -15.688448905944824
    10. '<|end|>' → logprob: -15.813448905944824

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' x' (ID: 1215)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10026200115680695
    2. 'y' → logprob: -2.350261926651001
    3. ' x' → logprob: -10.225261688232422
    4. 'x' → logprob: -11.225261688232422
    5. '(y' → logprob: -12.975261688232422
    6. '	y' → logprob: -13.350261688232422
    7. ' (' → logprob: -14.100261688232422
    8. ' ' → logprob: -14.725261688232422
    9. ''y' → logprob: -15.725261688232422
    10. ')y' → logprob: -15.850261688232422

Token 66: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011140725575387478
    2. '%' → logprob: -4.511140823364258
    3. '%i' → logprob: -9.636140823364258
    4. ' ' → logprob: -10.761140823364258
    5. '%x' → logprob: -12.761140823364258
    6. '%e' → logprob: -13.886140823364258
    7. '%s' → logprob: -14.511140823364258
    8. '<|end|>' → logprob: -14.636140823364258
    9. '%d' → logprob: -14.761140823364258
    10. ' %=' → logprob: -15.136140823364258

Token 67: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007608278188854456
    2. ' i' → logprob: -4.882608413696289
    3. '<|end|>' → logprob: -13.757608413696289
    4. ' ' → logprob: -14.757608413696289
    5. '2' → logprob: -15.132608413696289
    6. '  ' → logprob: -15.882608413696289
    7. '	i' → logprob: -15.882608413696289
    8. '   ' → logprob: -16.25760841369629
    9. '<|end|>' → logprob: -16.75760841369629
    10. '_i' → logprob: -17.63260841369629

Token 68: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1616547852754593
    2. ' ==' → logprob: -1.9116548299789429
    3. '=' → logprob: -6.786654949188232
    4. ')==' → logprob: -9.161654472351074
    5. ' ' → logprob: -9.661654472351074
    6. '===' → logprob: -9.661654472351074
    7. '<|end|>' → logprob: -10.411654472351074
    8. ']==' → logprob: -11.036654472351074
    9. '**' → logprob: -12.036654472351074
    10. ')' → logprob: -12.411654472351074

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020699352025986
    2. ' ' → logprob: -2.3502070903778076
    3. '<|end|>' → logprob: -15.850207328796387
    4. '  ' → logprob: -16.22520637512207
    5. '   ' → logprob: -17.35020637512207
    6. '```' → logprob: -17.72520637512207
    7. '۰' → logprob: -18.47520637512207
    8. '<|end|>' → logprob: -18.60020637512207
    9. '

' → logprob: -18.85020637512207
    10. ' 
' → logprob: -19.22520637512207

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '  ' → logprob: -19.250261306762695
    4. '   ' → logprob: -19.750261306762695
    5. '<|end|>' → logprob: -20.125261306762695
    6. '۰' → logprob: -21.250261306762695
    7. '    ' → logprob: -21.375261306762695
    8. '     ' → logprob: -21.875261306762695
    9. '```' → logprob: -21.875261306762695
    10. 'i' → logprob: -22.375261306762695

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2355881780385971
    2. ' and' → logprob: -2.3605880737304688
    3. ':
' → logprob: -2.9855880737304688
    4. '               ' → logprob: -3.2355880737304688
    5. '<|end|>' → logprob: -4.485588073730469
    6. 'and' → logprob: -4.985588073730469
    7. '<|end|>' → logprob: -5.860588073730469
    8. '           ' → logprob: -6.360588073730469
    9. '):
' → logprob: -7.235588073730469
    10. '                               ' → logprob: -8.110588073730469

Token 72: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09338533878326416
    2. ' ' → logprob: -2.8433852195739746
    3. '                ' → logprob: -4.468385219573975
    4. '<|end|>' → logprob: -4.718385219573975
    5. '            ' → logprob: -4.968385219573975
    6. ' exp' → logprob: -7.093385219573975
    7. '           ' → logprob: -7.593385219573975
    8. ' ' → logprob: -8.093385696411133
    9. '```' → logprob: -8.218385696411133
    10. '<|end|>' → logprob: -8.468385696411133

Token 73: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39591291546821594
    2. '                ' → logprob: -2.2709128856658936
    3. ' exp' → logprob: -2.6459128856658936
    4. ' x' → logprob: -2.7709128856658936
    5. 'x' (adapté à ' x') → logprob: -2.8959128856658936
    6. 'exp' → logprob: -3.8959128856658936
    7. ' ' → logprob: -5.145913124084473
    8. '            ' → logprob: -6.520913124084473
    9. 'count' → logprob: -6.895913124084473
    10. '```' → logprob: -7.145913124084473

Token 74: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4942496418952942
    2. ' ' → logprob: -1.3692495822906494
    3. '//=' → logprob: -2.4942495822906494
    4. '=' → logprob: -4.1192498207092285
    5. ' /=' → logprob: -4.2442498207092285
    6. '<|end|>' → logprob: -4.4942498207092285
    7. ' ' → logprob: -5.8692498207092285
    8. '//' → logprob: -6.1192498207092285
    9. ' >>=' → logprob: -6.4942498207092285
    10. '<|end|>' → logprob: -7.2442498207092285

Token 75: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.5822400857578032e-05
    2. '=i' → logprob: -10.750025749206543
    3. '=}' → logprob: -13.375025749206543
    4. ' =' → logprob: -14.250025749206543
    5. 'i' → logprob: -14.625025749206543
    6. '=_' → logprob: -15.000025749206543
    7. ' ' → logprob: -15.250025749206543
    8. '_=' → logprob: -15.875025749206543
    9. ' i' → logprob: -16.00002670288086
    10. '=int' → logprob: -16.25002670288086

Token 76: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759398937225342
    2. ' i' → logprob: -0.8259398937225342
    3. ' ' → logprob: -15.700940132141113
    4. '	i' → logprob: -15.825940132141113
    5. '2' → logprob: -16.575939178466797
    6. '<|end|>' → logprob: -17.075939178466797
    7. ' 
' → logprob: -19.200939178466797
    8. '
' → logprob: -19.325939178466797
    9. '```' → logprob: -19.450939178466797
    10. ')i' → logprob: -19.700939178466797

Token 77: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1673978865146637
    2. '1' → logprob: -1.9173978567123413
    3. '<|end|>' → logprob: -6.417397975921631
    4. ' i' → logprob: -6.542397975921631
    5. '2' → logprob: -7.292397975921631
    6. '           ' → logprob: -7.792397975921631
    7. '```' → logprob: -8.042397499084473
    8. '               ' → logprob: -8.042397499084473
    9. '                ' → logprob: -8.167397499084473
    10. '            ' → logprob: -8.167397499084473

Token 78: '               ' (ID: 506)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4752623438835144
    2. ' ' → logprob: -0.9752623438835144
    3. '<|end|>' → logprob: -7.47526216506958
    4. ' i' → logprob: -8.225262641906738
    5. '```' → logprob: -9.600262641906738
    6. '           ' → logprob: -9.600262641906738
    7. 'i' → logprob: -9.725262641906738
    8. '               ' → logprob: -10.600262641906738
    9. '            ' → logprob: -10.975262641906738
    10. '2' → logprob: -11.100262641906738

Token 79: ' exp' (ID: 2794)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11379792541265488
    2. ' ' → logprob: -2.488797903060913
    3. ' exp' → logprob: -4.238798141479492
    4. 'exp' (adapté à ' exp') → logprob: -4.613798141479492
    5. '```' → logprob: -9.613798141479492
    6. '                ' → logprob: -10.738798141479492
    7. '            ' → logprob: -11.113798141479492
    8. '               ' → logprob: -11.363798141479492
    9. '    ' → logprob: -11.363798141479492
    10. '           ' → logprob: -11.363798141479492

Token 80: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02067139558494091
    2. '+=' → logprob: -3.8956713676452637
    3. ' =' → logprob: -9.645671844482422
    4. '=' → logprob: -10.145671844482422
    5. '<|end|>' → logprob: -11.270671844482422
    6. ' ' → logprob: -12.145671844482422
    7. '+' → logprob: -12.270671844482422
    8. ' +' → logprob: -13.645671844482422
    9. ']+=' → logprob: -14.770671844482422
    10. '<|end|>' → logprob: -15.020671844482422

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '<|end|>' → logprob: -16.629077911376953
    4. '   ' → logprob: -18.879077911376953
    5. ' ' → logprob: -19.879077911376953
    6. '۱' → logprob: -19.879077911376953
    7. '  ' → logprob: -20.504077911376953
    8. '    ' → logprob: -20.504077911376953
    9. '```' → logprob: -20.504077911376953
    10. '<|end|>' → logprob: -20.504077911376953

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '<|end|>' → logprob: -16.125011444091797
    4. '```' → logprob: -18.625011444091797
    5. '0' → logprob: -20.000011444091797
    6. '۱' → logprob: -20.562511444091797
    7. '   ' → logprob: -20.562511444091797
    8. '>' → logprob: -20.812511444091797
    9. ')' → logprob: -21.250011444091797
    10. '১' → logprob: -21.250011444091797

Token 83: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04607011377811432
    2. ' ' → logprob: -4.671070098876953
    3. '               ' → logprob: -4.671070098876953
    4. '       ' → logprob: -4.671070098876953
    5. '<|end|>' → logprob: -4.921070098876953
    6. '
' → logprob: -6.046070098876953
    7. ' 
' → logprob: -6.296070098876953
    8. '   ' → logprob: -6.421070098876953
    9. '<|end|>' → logprob: -7.171070098876953
    10. '            
' → logprob: -7.796070098876953

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006788347964175045
    2. ' ' → logprob: -8.500679016113281
    3. '       ' → logprob: -8.625679016113281
    4. '               ' → logprob: -9.500679016113281
    5. ' 
' → logprob: -10.375679016113281
    6. ' ' → logprob: -10.500679016113281
    7. '<|end|>' → logprob: -10.500679016113281
    8. '   ' → logprob: -10.875679016113281
    9. '            
' → logprob: -11.125679016113281
    10. ' i' → logprob: -11.125679016113281

Token 85: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26080194115638733
    2. ' i' → logprob: -2.3858020305633545
    3. '       ' → logprob: -2.7608020305633545
    4. ' ' → logprob: -2.8858020305633545
    5. '   ' → logprob: -5.260801792144775
    6. '    ' → logprob: -5.635801792144775
    7. '        ' → logprob: -5.885801792144775
    8. 'i' → logprob: -6.260801792144775
    9. ' if' → logprob: -7.010801792144775
    10. '<|end|>' → logprob: -7.010801792144775

Token 86: ' exp' (ID: 2794)
  Prédit: ' exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exp' → logprob: -0.005929393693804741
    2. 'exp' → logprob: -5.130929470062256
    3. '	exp' → logprob: -15.255928993225098
    4. ' ' → logprob: -15.380928993225098
    5. '(exp' → logprob: -15.380928993225098
    6. '    ' → logprob: -17.005929946899414
    7. ' ' → logprob: -17.255929946899414
    8. '.exp' → logprob: -17.880929946899414
    9. ''exp' → logprob: -18.630929946899414
    10. '  ' → logprob: -18.755929946899414

Token 87: ':
' (ID: 734)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.042049258947372437
    2. '>' → logprob: -3.4170491695404053
    3. '<|end|>' → logprob: -4.917049407958984
    4. ' ' → logprob: -8.167049407958984
    5. '<|end|>' → logprob: -8.417049407958984
    6. '+' → logprob: -8.792049407958984
    7. ':' → logprob: -8.917049407958984
    8. ' +' → logprob: -9.542049407958984
    9. '   ' → logprob: -10.042049407958984
    10. ' !=' → logprob: -10.792049407958984

Token 88: '               ' (ID: 506)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.14042754471302032
    2. '               ' → logprob: -2.390427589416504
    3. 'count' → logprob: -4.265427589416504
    4. '<|end|>' → logprob: -4.640427589416504
    5. '       ' → logprob: -5.140427589416504
    6. '           ' → logprob: -5.515427589416504
    7. ',' → logprob: -6.640427589416504
    8. '_count' → logprob: -7.390427589416504
    9. '(count' → logprob: -7.390427589416504
    10. '[count' → logprob: -7.640427589416504

Token 89: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.2254912108182907
    2. 'count' (adapté à ' count') → logprob: -1.6004911661148071
    3. '               ' → logprob: -11.100491523742676
    4. '       ' → logprob: -11.600491523742676
    5. '           ' → logprob: -11.725491523742676
    6. '[count' → logprob: -11.725491523742676
    7. ' ' → logprob: -11.725491523742676
    8. '	count' → logprob: -11.850491523742676
    9. '
' → logprob: -12.225491523742676
    10. '$count' → logprob: -12.725491523742676

Token 90: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.4577033221721649
    2. ' *=' → logprob: -1.0827033519744873
    3. '*' → logprob: -3.5827033519744873
    4. ' *' → logprob: -7.832703113555908
    5. '=' → logprob: -8.082703590393066
    6. '   ' → logprob: -10.457703590393066
    7. '```' → logprob: -10.582703590393066
    8. '    ' → logprob: -11.832703590393066
    9. ' =' → logprob: -11.957703590393066
    10. ' ' → logprob: -12.207703590393066

Token 91: ' (' (ID: 350)
  Prédit: '(exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exp' → logprob: -0.20406579971313477
    2. ' (' → logprob: -1.7040657997131348
    3. '(' → logprob: -6.329065799713135
    4. 'exp' → logprob: -7.079065799713135
    5. ' exp' → logprob: -10.954065322875977
    6. '(e' → logprob: -13.204065322875977
    7. '(ex' → logprob: -14.454065322875977
    8. '(i' → logprob: -14.454065322875977
    9. ' ' → logprob: -14.954065322875977
    10. '(op' → logprob: -15.204065322875977

Token 92: 'exp' (ID: 8067)
  Prédit: 'exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.10180015116930008
    2. '(exp' → logprob: -2.6018002033233643
    3. ' exp' → logprob: -3.9768002033233643
    4. ' (' → logprob: -5.726799964904785
    5. '(' → logprob: -7.351799964904785
    6. ' ' → logprob: -13.101799964904785
    7. '	exp' → logprob: -13.351799964904785
    8. '<|end|>' → logprob: -14.976799964904785
    9. '```' → logprob: -15.226799964904785
    10. 'ex' → logprob: -15.351799964904785

Token 93: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01816023886203766
    2. '+' → logprob: -4.018160343170166
    3. ' ' → logprob: -12.268159866333008
    4. ' plus' → logprob: -13.268159866333008
    5. 's' → logprob: -13.393159866333008
    6. ' +
' → logprob: -14.768159866333008
    7. '<|end|>' → logprob: -14.768159866333008
    8. '1' → logprob: -14.893159866333008
    9. ' ' → logprob: -15.643159866333008
    10. '   ' → logprob: -15.768159866333008

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05488363653421402
    2. ' ' → logprob: -2.9298837184906006
    3. '<|end|>' → logprob: -13.80488395690918
    4. '```' → logprob: -15.67988395690918
    5. ')' → logprob: -16.05488395690918
    6. '  ' → logprob: -17.30488395690918
    7. ' ' → logprob: -17.92988395690918
    8. '   ' → logprob: -18.05488395690918
    9. '<|end|>' → logprob: -18.30488395690918
    10. '2' → logprob: -18.55488395690918

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. ')' → logprob: -16.500097274780273
    4. '```' → logprob: -16.625097274780273
    5. '<|end|>' → logprob: -16.750097274780273
    6. '   ' → logprob: -18.937597274780273
    7. '0' → logprob: -19.062597274780273
    8. '  ' → logprob: -19.125097274780273
    9. '2' → logprob: -19.375097274780273
    10. '

' → logprob: -19.937597274780273

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.440506407059729e-05
    2. ')
' → logprob: -10.62503433227539
    3. ' )' → logprob: -12.87503433227539
    4. '<|end|>' → logprob: -13.00003433227539
    5. '       ' → logprob: -13.37503433227539
    6. '           ' → logprob: -13.37503433227539
    7. '),' → logprob: -14.87503433227539
    8. ')#' → logprob: -15.12503433227539
    9. ')
' → logprob: -15.25003433227539
    10. '<|end|>' → logprob: -15.62503433227539

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18256917595863342
    2. '       ' → logprob: -1.807569146156311
    3. '   ' → logprob: -6.9325690269470215
    4. ' i' → logprob: -7.1825690269470215
    5. ',' → logprob: -7.9325690269470215
    6. '<|end|>' → logprob: -8.18256950378418
    7. '```' → logprob: -9.05756950378418
    8. '
' → logprob: -9.80756950378418
    9. '<|end|>' → logprob: -9.80756950378418
    10. ' ' → logprob: -9.93256950378418

Token 98: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3074166178703308
    2. 'i' (adapté à ' i') → logprob: -2.1824166774749756
    3. '       ' → logprob: -2.4324166774749756
    4. ' i' → logprob: -2.8074166774749756
    5. '   ' → logprob: -5.8074164390563965
    6. ' ' → logprob: -8.307416915893555
    7. '```' → logprob: -8.807416915893555
    8. '<|end|>' → logprob: -9.432416915893555
    9. '<|end|>' → logprob: -9.807416915893555
    10. '	i' → logprob: -10.557416915893555

Token 99: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3139798045158386
    2. ' +=' → logprob: -1.3139798641204834
    3. '=' → logprob: -7.813979625701904
    4. '+' → logprob: -8.188980102539062
    5. ' =' → logprob: -11.313980102539062
    6. '++' → logprob: -11.563980102539062
    7. ' ' → logprob: -11.688980102539062
    8. '<|end|>' → logprob: -13.313980102539062
    9. ' +' → logprob: -13.688980102539062
    10. '+='' → logprob: -13.938980102539062

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '  ' → logprob: -16.937761306762695
    4. '2' → logprob: -17.000261306762695
    5. '<|end|>' → logprob: -17.187761306762695
    6. '```' → logprob: -17.250261306762695
    7. '   ' → logprob: -18.250261306762695
    8. '(' → logprob: -19.375261306762695
    9. '१' → logprob: -19.500261306762695
    10. '۱' → logprob: -19.562761306762695

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '2' → logprob: -17.81250762939453
    4. '```' → logprob: -18.00000762939453
    5. '  ' → logprob: -18.62500762939453
    6. '१' → logprob: -18.75000762939453
    7. '<|end|>' → logprob: -18.81250762939453
    8. '１' → logprob: -19.06250762939453
    9. '۱' → logprob: -19.12500762939453
    10. '১' → logprob: -19.25000762939453

Token 102: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0859137624502182
    2. '<|end|>' → logprob: -3.21091365814209
    3. '       ' → logprob: -3.83591365814209
    4. ' ' → logprob: -4.08591365814209
    5. '  ' → logprob: -7.58591365814209
    6. '
' → logprob: -7.83591365814209
    7. '```' → logprob: -7.83591365814209
    8. '  
' → logprob: -7.96091365814209
    9. ' 
' → logprob: -8.33591365814209
    10. ' if' → logprob: -8.46091365814209

Token 104: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47103655338287354
    2. '   ' → logprob: -1.0960365533828735
    3. ' if' → logprob: -3.346036434173584
    4. '       ' → logprob: -5.721036434173584
    5. ' ' → logprob: -6.846036434173584
    6. '#' → logprob: -7.096036434173584
    7. 'return' → logprob: -8.346036911010742
    8. ' 
' → logprob: -9.096036911010742
    9. '    
' → logprob: -9.221036911010742
    10. '```' → logprob: -9.346036911010742

Token 105: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1002078503370285
    2. 'x' → logprob: -2.350207805633545
    3. '	x' → logprob: -14.100208282470703
    4. ' ' → logprob: -15.350208282470703
    5. '   ' → logprob: -16.350208282470703
    6. '(x' → logprob: -16.725208282470703
    7. ' is' → logprob: -17.600208282470703
    8. '>x' → logprob: -17.600208282470703
    9. ')x' → logprob: -18.225208282470703
    10. '"x' → logprob: -18.225208282470703

Token 106: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.018175223842263222
    2. ' >' → logprob: -4.01817512512207
    3. '">' → logprob: -11.51817512512207
    4. ' ' → logprob: -12.01817512512207
    5. ' ' → logprob: -12.39317512512207
    6. ')>' → logprob: -13.64317512512207
    7. '<|end|>' → logprob: -13.64317512512207
    8. '()>' → logprob: -14.89317512512207
    9. '<|end|>' → logprob: -14.89317512512207
    10. '!=' → logprob: -15.26817512512207

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.87501335144043
    4. '>' → logprob: -20.50001335144043
    5. '<|end|>' → logprob: -20.62501335144043
    6. '```' → logprob: -21.25001335144043
    7. '۱' → logprob: -21.75001335144043
    8. '  ' → logprob: -22.12501335144043
    9. '１' → logprob: -22.12501335144043
    10. '2' → logprob: -22.12501335144043

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.250001907348633
    4. '2' → logprob: -21.250001907348633
    5. '۱' → logprob: -21.375001907348633
    6. '１' → logprob: -21.500001907348633
    7. '>' → logprob: -21.875001907348633
    8. '  ' → logprob: -22.250001907348633
    9. '```' → logprob: -22.250001907348633
    10. '9' → logprob: -22.437501907348633

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07895863801240921
    2. ':
' → logprob: -2.578958749771118
    3. '       ' → logprob: -9.953958511352539
    4. '           ' → logprob: -11.453958511352539
    5. '   ' → logprob: -12.578958511352539
    6. ':

' → logprob: -13.453958511352539
    7. 'count' → logprob: -13.703958511352539
    8. ':
' → logprob: -13.703958511352539
    9. ' :' → logprob: -13.828958511352539
    10. ' count' → logprob: -14.328958511352539

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7070243954658508
    2. 'count' → logprob: -1.082024335861206
    3. ' count' → logprob: -1.832024335861206
    4. '       ' → logprob: -4.957024574279785
    5. '	count' → logprob: -8.082024574279785
    6. '   ' → logprob: -8.457024574279785
    7. '[count' → logprob: -9.207024574279785
    8. '(count' → logprob: -9.957024574279785
    9. '.count' → logprob: -9.957024574279785
    10. ',count' → logprob: -10.207024574279785

Token 111: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -5.836499985889532e-05
    2. ' count' → logprob: -9.7500581741333
    3. '       ' → logprob: -20.375059127807617
    4. '	count' → logprob: -20.375059127807617
    5. '   ' → logprob: -21.500059127807617
    6. '[count' → logprob: -21.625059127807617
    7. '
' → logprob: -22.000059127807617
    8. '```' → logprob: -22.250059127807617
    9. '.count' → logprob: -22.625059127807617
    10. ' ' → logprob: -22.750059127807617

Token 112: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0021965294145047665
    2. ' *=' → logprob: -6.377196311950684
    3. '*' → logprob: -7.627196311950684
    4. '   ' → logprob: -13.002196311950684
    5. '```' → logprob: -13.002196311950684
    6. '=' → logprob: -13.502196311950684
    7. '**' → logprob: -14.252196311950684
    8. ' ' → logprob: -15.627196311950684
    9. '  ' → logprob: -15.752196311950684
    10. ' ' → logprob: -15.752196311950684

Token 113: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '２' → logprob: -20.750158309936523
    4. '۲' → logprob: -21.125158309936523
    5. '```' → logprob: -22.250158309936523
    6. '(' → logprob: -22.375158309936523
    7. '٢' → logprob: -22.500158309936523
    8. '₂' → logprob: -22.500158309936523
    9. '1' → logprob: -23.000158309936523
    10. '   ' → logprob: -23.250158309936523

Token 114: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۲' → logprob: -21.625
    4. '1' → logprob: -21.875
    5. '２' → logprob: -21.875
    6. '(' → logprob: -22.875
    7. '```' → logprob: -23.0
    8. '٢' → logprob: -23.125
    9. '₂' → logprob: -23.5
    10. '२' → logprob: -24.375

Token 115: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033237699419260025
    2. '
' → logprob: -4.533237934112549
    3. '   ' → logprob: -4.658237934112549
    4. '<|end|>' → logprob: -4.658237934112549
    5. ' return' → logprob: -7.033237934112549
    6. '	return' → logprob: -7.033237934112549
    7. 'return' → logprob: -7.533237934112549
    8. '
' → logprob: -8.15823745727539
    9. '<|end|>' → logprob: -8.53323745727539
    10. '	' → logprob: -10.53323745727539

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017469348385930061
    2. '   ' → logprob: -7.001747131347656
    3. '<|end|>' → logprob: -7.751747131347656
    4. 'return' → logprob: -8.626747131347656
    5. ' return' → logprob: -8.876747131347656
    6. '	return' → logprob: -10.126747131347656
    7. '
' → logprob: -11.001747131347656
    8. '           ' → logprob: -11.251747131347656
    9. '```' → logprob: -12.376747131347656
    10. '<|end|>' → logprob: -12.376747131347656

Token 117: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025509348139166832
    2. '   ' → logprob: -3.9005093574523926
    3. 'return' (adapté à ' return') → logprob: -5.400509357452393
    4. ' return' → logprob: -7.775509357452393
    5. '           ' → logprob: -11.525508880615234
    6. '	return' → logprob: -12.775508880615234
    7. '```' → logprob: -13.275508880615234
    8. '
' → logprob: -13.400508880615234
    9. '     ' → logprob: -13.525508880615234
    10. 'def' → logprob: -13.775508880615234

Token 118: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00033546582562848926
    2. ' count' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.250335693359375
    4. '(count' → logprob: -17.500335693359375
    5. ' ' → logprob: -17.750335693359375
    6. '	count' → logprob: -18.875335693359375
    7. '[count' → logprob: -19.125335693359375
    8. '  ' → logprob: -19.750335693359375
    9. 'counts' → logprob: -20.250335693359375
    10. '$count' → logprob: -20.750335693359375

Token 119: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016413677483797073
    2. '   ' → logprob: -4.266413688659668
    3. '<|end|>' → logprob: -6.641413688659668
    4. '
' → logprob: -7.891413688659668
    5. '    
' → logprob: -8.141413688659668
    6. '  
' → logprob: -9.016413688659668
    7. ' ' → logprob: -10.391413688659668
    8. '' → logprob: -10.516413688659668
    9. '<|end|>' → logprob: -11.016413688659668
    10. '\n' → logprob: -11.266413688659668

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007518842350691557
    2. '
' → logprob: -5.132518768310547
    3. '    
' → logprob: -7.507518768310547
    4. 'result' → logprob: -8.382518768310547
    5. 'def' → logprob: -8.507518768310547
    6. 'count' → logprob: -8.507518768310547
    7. 'n' → logprob: -9.132518768310547
    8. 'odd' → logprob: -9.382518768310547
    9. 'return' → logprob: -10.507518768310547
    10. '```' → logprob: -10.632518768310547

Token 121: ' return' (ID: 622)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5648991465568542
    2. 'odd' → logprob: -1.689899206161499
    3. 'result' → logprob: -1.689899206161499
    4. '   ' → logprob: -2.939899206161499
    5. 'answer' → logprob: -5.93989896774292
    6. 'ans' → logprob: -6.18989896774292
    7. 'total' → logprob: -6.31489896774292
    8. 'def' → logprob: -6.93989896774292
    9. 'return' (adapté à ' return') → logprob: -7.31489896774292
    10. ' count' → logprob: -7.43989896774292

Token 122: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.10098885744810104
    2. ' sum' → logprob: -2.4759888648986816
    3. 'len' → logprob: -4.600988864898682
    4. ' len' → logprob: -6.725988864898682
    5. '1' → logprob: -7.600988864898682
    6. '   ' → logprob: -8.850988388061523
    7. ' ' → logprob: -9.975988388061523
    8. '[len' → logprob: -11.225988388061523
    9. '(sum' → logprob: -11.475988388061523
    10. 'n' → logprob: -11.975988388061523

Token 123: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015061709564179182
    2. '(x' → logprob: -6.626506328582764
    3. '(
' → logprob: -9.626505851745605
    4. '((' → logprob: -9.626505851745605
    5. '(i' → logprob: -10.501505851745605
    6. '(n' → logprob: -11.501505851745605
    7. '(num' → logprob: -12.501505851745605
    8. '1' → logprob: -13.251505851745605
    9. '(lambda' → logprob: -13.751505851745605
    10. '(filter' → logprob: -14.251505851745605

Token 124: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016618473455309868
    2. '   ' → logprob: -7.001661777496338
    3. 'num' → logprob: -8.126662254333496
    4. 'x' → logprob: -8.376662254333496
    5. '       ' → logprob: -9.376662254333496
    6. '(' → logprob: -9.626662254333496
    7. ' ' → logprob: -10.126662254333496
    8. '           ' → logprob: -11.376662254333496
    9. 'count' → logprob: -12.251662254333496
    10. 'n' → logprob: -12.251662254333496

Token 125: ' num' (ID: 2269)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.160971628967673e-05
    2. 'x' → logprob: -10.375082015991211
    3. 'num' (adapté à ' num') → logprob: -10.625082015991211
    4. 'count' → logprob: -11.625082015991211
    5. '   ' → logprob: -11.750082015991211
    6. ' ' → logprob: -13.250082015991211
    7. '           ' → logprob: -13.250082015991211
    8. 'i' → logprob: -13.500082015991211
    9. '(' → logprob: -13.750082015991211
    10. '       ' → logprob: -13.750082015991211

Token 126: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.003748298389837146
    2. '_' → logprob: -5.878748416900635
    3. '(' → logprob: -7.878748416900635
    4. '(num' → logprob: -8.253747940063477
    5. 'div' → logprob: -8.753747940063477
    6. '(x' → logprob: -9.503747940063477
    7. '(div' → logprob: -11.253747940063477
    8. '_num' → logprob: -11.628747940063477
    9. '(n' → logprob: -11.878747940063477
    10. '((' → logprob: -12.378747940063477

Token 127: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0032650534994900227
    2. 'ors' → logprob: -6.253264904022217
    3. 's' → logprob: -8.003265380859375
    4. '(x' → logprob: -8.378265380859375
    5. '_' → logprob: -8.503265380859375
    6. '(' → logprob: -9.503265380859375
    7. 'os' → logprob: -9.503265380859375
    8. '(is' → logprob: -9.753265380859375
    9. '_count' → logprob: -9.753265380859375
    10. '_div' → logprob: -10.378265380859375

Token 128: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0005698331515304744
    2. 'is' → logprob: -8.000570297241211
    3. 's' → logprob: -9.125570297241211
    4. '(x' → logprob: -10.375570297241211
    5. 'rs' → logprob: -11.250570297241211
    6. 'x' → logprob: -11.500570297241211
    7. '   ' → logprob: -11.625570297241211
    8. 'tors' → logprob: -11.750570297241211
    9. 'orsi' → logprob: -11.875570297241211
    10. '[' → logprob: -11.875570297241211

Token 129: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04995829612016678
    2. '(x' → logprob: -3.0499582290649414
    3. '(' → logprob: -6.799958229064941
    4. '(k' → logprob: -8.424958229064941
    5. '(
' → logprob: -11.674958229064941
    6. '(num' → logprob: -11.674958229064941
    7. '(o' → logprob: -11.924958229064941
    8. '(n' → logprob: -12.674958229064941
    9. '   ' → logprob: -13.549958229064941
    10. '(e' → logprob: -13.674958229064941

Token 130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035676422994583845
    2. ' )' → logprob: -6.128567695617676
    3. ' for' → logprob: -6.878567695617676
    4. 'for' → logprob: -8.878567695617676
    5. ')==' → logprob: -9.128567695617676
    6. '   ' → logprob: -10.253567695617676
    7. '==' → logprob: -11.253567695617676
    8. ' ' → logprob: -11.378567695617676
    9. ' ==' → logprob: -11.378567695617676
    10. '```' → logprob: -12.128567695617676

Token 131: ' ==' (ID: 951)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2959619462490082
    2. 'for' → logprob: -1.7959619760513306
    3. ' ==' → logprob: -3.045961856842041
    4. '==' → logprob: -3.170961856842041
    5. '   ' → logprob: -7.920961856842041
    6. ' ' → logprob: -9.0459623336792
    7. '       ' → logprob: -9.7959623336792
    8. '=' → logprob: -10.0459623336792
    9. '%' → logprob: -10.5459623336792
    10. ')' → logprob: -10.7959623336792

Token 132: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.023250719532370567
    2. ' ' → logprob: -3.7732508182525635
    3. '   ' → logprob: -12.523250579833984
    4. '    ' → logprob: -14.773250579833984
    5. '  ' → logprob: -14.773250579833984
    6. '       ' → logprob: -15.773250579833984
    7. '```' → logprob: -15.773250579833984
    8. ' ' → logprob: -16.523250579833984
    9. '٨' → logprob: -16.835750579833984
    10. '۸' → logprob: -17.085750579833984

Token 133: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -16.875001907348633
    4. '۸' → logprob: -17.625001907348633
    5. '٨' → logprob: -17.750001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '८' → logprob: -18.250001907348633
    8. '4' → logprob: -18.375001907348633
    9. '  ' → logprob: -18.750001907348633
    10. '৮' → logprob: -18.937501907348633

Token 134: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04751608520746231
    2. '       ' → logprob: -3.422516107559204
    3. 'for' → logprob: -4.297515869140625
    4. '   ' → logprob: -9.047515869140625
    5. ' ' → logprob: -10.922515869140625
    6. ' ' → logprob: -11.797515869140625
    7. '	for' → logprob: -11.922515869140625
    8. ' and' → logprob: -12.172515869140625
    9. '        ' → logprob: -12.547515869140625
    10. '    ' → logprob: -12.797515869140625

Token 135: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005037236958742142
    2. 'for' → logprob: -5.380037307739258
    3. '   ' → logprob: -8.005037307739258
    4. '       ' → logprob: -9.755037307739258
    5. ' ' → logprob: -11.380037307739258
    6. '	for' → logprob: -12.130037307739258
    7. '
' → logprob: -12.880037307739258
    8. ' and' → logprob: -13.005037307739258
    9. '    ' → logprob: -13.255037307739258
    10. '  ' → logprob: -14.005037307739258

Token 136: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.062013059854507446
    2. 'for' (adapté à ' for') → logprob: -2.8120131492614746
    3. '   ' → logprob: -10.187012672424316
    4. '       ' → logprob: -12.312012672424316
    5. ' ' → logprob: -13.312012672424316
    6. '    ' → logprob: -14.312012672424316
    7. '
' → logprob: -14.812012672424316
    8. '	for' → logprob: -15.687012672424316
    9. '  ' → logprob: -15.937012672424316
    10. ' and' → logprob: -16.187013626098633

Token 137: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10031729936599731
    2. 'i' → logprob: -2.3503172397613525
    3. 'range' → logprob: -10.100317001342773
    4. ' ' → logprob: -10.600317001342773
    5. '	i' → logprob: -10.850317001342773
    6. ' range' → logprob: -10.850317001342773
    7. '   ' → logprob: -12.975317001342773
    8. '  ' → logprob: -13.350317001342773
    9. ' ' → logprob: -13.725317001342773
    10. '```' → logprob: -15.475317001342773

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003207300091162324
    2. 'in' → logprob: -5.753207206726074
    3. ' ' → logprob: -11.503207206726074
    4. 'range' → logprob: -12.003207206726074
    5. '<|end|>' → logprob: -12.003207206726074
    6. ' range' → logprob: -12.753207206726074
    7. '	in' → logprob: -13.378207206726074
    8. ' i' → logprob: -14.128207206726074
    9. '  ' → logprob: -14.503207206726074
    10. '   ' → logprob: -15.503207206726074

Token 139: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.061975862830877304
    2. 'range' → logprob: -2.8119759559631348
    3. '	range' → logprob: -11.811975479125977
    4. ' ' → logprob: -15.061975479125977
    5. '(range' → logprob: -15.561975479125977
    6. '   ' → logprob: -15.811975479125977
    7. '  ' → logprob: -17.436975479125977
    8. '```' → logprob: -17.561975479125977
    9. 'Range' → logprob: -17.686975479125977
    10. '_range' → logprob: -17.811975479125977

Token 140: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.392202976712724e-06
    2. '(n' → logprob: -12.625006675720215
    3. '(
' → logprob: -13.250006675720215
    4. ' (' → logprob: -13.875006675720215
    5. '1' → logprob: -15.125006675720215
    6. ')' → logprob: -18.0000057220459
    7. '<|end|>' → logprob: -18.3750057220459
    8. ')(' → logprob: -18.6250057220459
    9. '(

' → logprob: -18.8750057220459
    10. '   ' → logprob: -19.2500057220459

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. '3' → logprob: -15.125003814697266
    4. 'n' → logprob: -16.375003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '(' → logprob: -17.375003814697266
    7. 'odd' → logprob: -17.875003814697266
    8. '2' → logprob: -18.750003814697266
    9. '11' → logprob: -19.125003814697266
    10. ')' → logprob: -19.375003814697266

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002876080572605133
    2. ',n' → logprob: -6.002876281738281
    3. ' ,' → logprob: -7.877876281738281
    4. 'n' → logprob: -11.627876281738281
    5. '   ' → logprob: -11.627876281738281
    6. ',
' → logprob: -13.127876281738281
    7. '       ' → logprob: -14.627876281738281
    8. '(n' → logprob: -15.002876281738281
    9. '1' → logprob: -15.502876281738281
    10. '    ' → logprob: -16.25287628173828

Token 143: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3132627606391907
    2. ' n' → logprob: -1.313262701034546
    3. '   ' → logprob: -14.563262939453125
    4. '	n' → logprob: -14.938262939453125
    5. '(n' → logprob: -16.563262939453125
    6. ')n' → logprob: -16.563262939453125
    7. ' ' → logprob: -17.063262939453125
    8. ' ' → logprob: -17.438262939453125
    9. '    ' → logprob: -17.563262939453125
    10. '_n' → logprob: -18.063262939453125

Token 144: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20148271322250366
    2. ' +' → logprob: -1.7014827728271484
    3. ')' → logprob: -10.826482772827148
    4. '   ' → logprob: -10.951482772827148
    5. '1' → logprob: -11.451482772827148
    6. ',' → logprob: -12.201482772827148
    7. '+
' → logprob: -12.201482772827148
    8. ' ' → logprob: -12.326482772827148
    9. '    ' → logprob: -13.201482772827148
    10. ' +
' → logprob: -13.451482772827148

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013261953135952353
    2. ' ' → logprob: -6.626326084136963
    3. '```' → logprob: -15.501326560974121
    4. '   ' → logprob: -16.251325607299805
    5. ')' → logprob: -17.251325607299805
    6. '2' → logprob: -18.376325607299805
    7. '۱' → logprob: -19.126325607299805
    8. ' ' → logprob: -19.313825607299805
    9. '       ' → logprob: -19.688825607299805
    10. '0' → logprob: -19.751325607299805

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. ')' → logprob: -18.00002098083496
    4. '   ' → logprob: -19.00002098083496
    5. '```' → logprob: -19.00002098083496
    6. '2' → logprob: -20.50002098083496
    7. '0' → logprob: -20.75002098083496
    8. 'n' → logprob: -21.50002098083496
    9. '
' → logprob: -21.75002098083496
    10. '  ' → logprob: -22.00002098083496

Token 147: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007392307161353528
    2. '))' → logprob: -7.375739097595215
    3. '   ' → logprob: -9.375739097595215
    4. ')
' → logprob: -10.750739097595215
    5. ')))' → logprob: -12.250739097595215
    6. '       ' → logprob: -14.125739097595215
    7. ' )' → logprob: -15.125739097595215
    8. ')}' → logprob: -16.50074005126953
    9. '<|end|>' → logprob: -16.50074005126953
    10. '
' → logprob: -16.62574005126953

Token 148: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000488811288960278
    2. ' ' → logprob: -7.625488758087158
    3. '1' → logprob: -14.750489234924316
    4. '   ' → logprob: -15.125489234924316
    5. ')' → logprob: -15.875489234924316
    6. '```' → logprob: -16.12548828125
    7. '  ' → logprob: -18.75048828125
    8. '
' → logprob: -19.12548828125
    9. '):
' → logprob: -19.37548828125
    10. '    ' → logprob: -19.81298828125

Token 149: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. '1' → logprob: -16.375
    4. '
' → logprob: -17.375
    5. '```' → logprob: -18.0
    6. '   ' → logprob: -18.5
    7. ')' → logprob: -19.625
    8. '

' → logprob: -20.5
    9. '  ' → logprob: -21.375
    10. '۲' → logprob: -21.375

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.141186450899113e-05
    2. '))' → logprob: -10.875020980834961
    3. ')
' → logprob: -13.500020980834961
    4. '   ' → logprob: -13.875020980834961
    5. ')))' → logprob: -16.12502098083496
    6. ' )' → logprob: -16.62502098083496
    7. ')

' → logprob: -17.50002098083496
    8. '),' → logprob: -19.00002098083496
    9. '):' → logprob: -19.25002098083496
    10. ')#' → logprob: -19.37502098083496

Token 151: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004920298233628273
    2. '   ' → logprob: -7.625492095947266
    3. ')
' → logprob: -12.750492095947266
    4. ' )' → logprob: -14.500492095947266
    5. ')return' → logprob: -16.375492095947266
    6. '`)' → logprob: -16.375492095947266
    7. ')`' → logprob: -16.875492095947266
    8. '#' → logprob: -17.000492095947266
    9. ' ' → logprob: -17.125492095947266
    10. '))' → logprob: -17.250492095947266

Token 152: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. '   ' → logprob: -13.37500286102295
    3. ')
' → logprob: -13.75000286102295
    4. ' )' → logprob: -15.87500286102295
    5. ')`' → logprob: -16.375003814697266
    6. ')return' → logprob: -16.750003814697266
    7. '))' → logprob: -17.000003814697266
    8. ')#' → logprob: -17.500003814697266
    9. '`)' → logprob: -18.500003814697266
    10. '),' → logprob: -18.500003814697266

Token 153: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07285844534635544
    2. ':' → logprob: -3.3228583335876465
    3. '(' → logprob: -4.3228583335876465
    4. '#' → logprob: -4.3228583335876465
    5. 'n' → logprob: -6.0728583335876465
    6. '_' → logprob: -6.3228583335876465
    7. '```' → logprob: -6.9478583335876465
    8. '<|end|>' → logprob: -7.5728583335876465
    9. '0' → logprob: -8.447858810424805
    10. ' ' → logprob: -8.447858810424805

Token 154: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10023816674947739
    2. '(count' → logprob: -2.350238084793091
    3. '(print' → logprob: -10.725237846374512
    4. '(
' → logprob: -12.975237846374512
    5. ' (' → logprob: -13.225237846374512
    6. '('' → logprob: -13.600237846374512
    7. 'count' → logprob: -14.100237846374512
    8. '(sum' → logprob: -14.350237846374512
    9. '(len' → logprob: -15.100237846374512
    10. '()' → logprob: -15.100237846374512

Token 155: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00013488641707226634
    2. '_with' → logprob: -9.375134468078613
    3. '_)' → logprob: -10.250134468078613
    4. '(' → logprob: -12.500134468078613
    5. '_(' → logprob: -12.750134468078613
    6. '_o' → logprob: -13.125134468078613
    7. ')_' → logprob: -13.500134468078613
    8. ')' → logprob: -13.750134468078613
    9. '_od' → logprob: -14.250134468078613
    10. '(_' → logprob: -14.625134468078613

Token 156: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -3.128163257315464e-07
    2. 'od' → logprob: -16.625
    3. ' odd' → logprob: -16.75
    4. '8' → logprob: -17.0
    5. 'ood' → logprob: -17.25
    6. 'oddi' → logprob: -17.5
    7. '```' → logprob: -17.5
    8. 'old' → logprob: -17.875
    9. 'Odd' → logprob: -18.0
    10. 'o' → logprob: -18.5

Token 157: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -6.813969957875088e-05
    2. '_w' → logprob: -9.625067710876465
    3. ')_' → logprob: -14.125067710876465
    4. '_' → logprob: -14.375067710876465
    5. 'with' → logprob: -15.125067710876465
    6. ')' → logprob: -15.750067710876465
    7. ' _' → logprob: -16.25006866455078
    8. ' with' → logprob: -17.12506866455078
    9. '_WITH' → logprob: -17.25006866455078
    10. '_)' → logprob: -17.62506866455078

Token 158: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002187022240832448
    2. '8' → logprob: -6.127187252044678
    3. '(' → logprob: -13.87718677520752
    4. ' ' → logprob: -14.12718677520752
    5. '__' → logprob: -16.752187728881836
    6. ' _' → logprob: -17.627187728881836
    7. '_)' → logprob: -17.627187728881836
    8. '_n' → logprob: -17.752187728881836
    9. '```' → logprob: -17.877187728881836
    10. ')' → logprob: -18.127187728881836

Token 159: '8' (ID: 23)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.34786152839660645
    2. '8' → logprob: -1.5978615283966064
    3. '10' → logprob: -2.7228615283966064
    4. '20' → logprob: -4.347861289978027
    5. '50' → logprob: -5.222861289978027
    6. '999' → logprob: -5.722861289978027
    7. '99' → logprob: -6.347861289978027
    8. '15' → logprob: -7.097861289978027
    9. '9' → logprob: -7.347861289978027
    10. '1' → logprob: -8.472861289978027

Token 160: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -3.643152740551159e-05
    2. 'div' → logprob: -10.500036239624023
    3. '_' → logprob: -12.625036239624023
    4. '8' → logprob: -13.125036239624023
    5. ' _' → logprob: -13.750036239624023
    6. '_di' → logprob: -14.500036239624023
    7. ')_' → logprob: -14.500036239624023
    8. '<div' → logprob: -15.125036239624023
    9. ')' → logprob: -15.375036239624023
    10. '_d' → logprob: -15.375036239624023

Token 161: 'is' (ID: 276)
  Prédit: 'ors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0386711023747921
    2. 'is' → logprob: -3.2886710166931152
    3. 'tors' → logprob: -8.788671493530273
    4. '8' → logprob: -9.288671493530273
    5. 'iors' → logprob: -9.663671493530273
    6. 'or' → logprob: -9.788671493530273
    7. 'itors' → logprob: -10.038671493530273
    8. 'orsi' → logprob: -10.163671493530273
    9. 's' → logprob: -10.913671493530273
    10. '_' → logprob: -10.913671493530273

Token 162: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.03041538968682289
    2. 'tors' → logprob: -3.5304152965545654
    3. 'ators' → logprob: -9.030415534973145
    4. '8' → logprob: -9.030415534973145
    5. '   ' → logprob: -9.530415534973145
    6. 'rors' → logprob: -9.780415534973145
    7. '```' → logprob: -10.405415534973145
    8. '[' → logprob: -10.655415534973145
    9. 'bors' → logprob: -10.780415534973145
    10. '{' → logprob: -10.905415534973145

Token 163: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2948405128554441e-05
    2. '((' → logprob: -12.00001335144043
    3. '(n' → logprob: -12.62501335144043
    4. ')' → logprob: -13.00001335144043
    5. '(
' → logprob: -14.87501335144043
    6. '(

' → logprob: -15.37501335144043
    7. '())' → logprob: -15.75001335144043
    8. ')(' → logprob: -15.87501335144043
    9. '(len' → logprob: -16.50001335144043
    10. '(`' → logprob: -16.62501335144043

Token 164: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004331253003329039
    2. '(' → logprob: -5.879331111907959
    3. 'input' → logprob: -6.504331111907959
    4. '()' → logprob: -11.129331588745117
    5. ' input' → logprob: -12.504331588745117
    6. '(
' → logprob: -12.629331588745117
    7. '())' → logprob: -12.754331588745117
    8. '('' → logprob: -13.879331588745117
    9. '()))' → logprob: -14.004331588745117
    10. ' ' → logprob: -14.254331588745117

Token 165: '())))' (ID: 168342)
  Prédit: '())))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.36268186569213867
    2. '()' → logprob: -1.8626818656921387
    3. '())' → logprob: -2.6126818656921387
    4. '()))' → logprob: -2.6126818656921387
    5. '(' → logprob: -6.487681865692139
    6. '()>' → logprob: -8.612682342529297
    7. '("' → logprob: -8.987682342529297
    8. '()));' → logprob: -9.362682342529297
    9. '('' → logprob: -9.487682342529297
    10. '())))
' → logprob: -9.987682342529297


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 163
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 133
Précision stricte (1ère position): 38.04%
Précision adaptée (1ère position): 39.26%
Précision (top 10): 81.60%
================================================================================
