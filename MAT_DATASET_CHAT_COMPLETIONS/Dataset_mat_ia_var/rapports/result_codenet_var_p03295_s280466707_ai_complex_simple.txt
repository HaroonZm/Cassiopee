================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import itemgetter

n, m = map(int, input().split())
l = list(map(lambda _: 200000, range(n-1)))

for _ in range(m):
    a, b = map(int, input().split())
    l[a-1] = reduce(min, [l[a-1], b-2])

right, count = -1, 0

def chooser(acc, tup):
    i, val = tup
    right, count = acc
    if i > right and val != 200000:
        return (val, count+1)
    elif i <= right and val != 200000:
        return (min(val, right), count)
    else:
        return (right, count)

final = reduce(chooser, enumerate(l), (-1,0))
print(itemgetter(1)(final))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6121391654014587
    2. 'wrap' → logprob: -0.8621391654014587
    3. 'reduce' → logprob: -3.4871392250061035
    4. 'l' → logprob: -6.1121392250061035
    5. ' wraps' → logprob: -6.4871392250061035
    6. 'cached' → logprob: -7.6121392250061035
    7. 'cache' → logprob: -7.9871392250061035
    8. 'cmp' → logprob: -9.112138748168945
    9. '```' → logprob: -9.237138748168945
    10. ' partial' → logprob: -9.612138748168945

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0092075876891613
    2. '(lambda' → logprob: -4.884207725524902
    3. ' (' → logprob: -7.509207725524902
    4. ',' → logprob: -7.884207725524902
    5. 'def' → logprob: -8.134207725524902
    6. '.' → logprob: -8.759207725524902
    7. '```' → logprob: -10.259207725524902
    8. '(
' → logprob: -10.509207725524902
    9. 'lambda' → logprob: -10.634207725524902
    10. 'a' → logprob: -10.759207725524902

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01442087721079588
    2. '(
' → logprob: -5.139420986175537
    3. '(lambda' → logprob: -5.389420986175537
    4. 'def' → logprob: -6.639420986175537
    5. ',' → logprob: -7.139420986175537
    6. '\' → logprob: -8.139420509338379
    7. ' ' → logprob: -8.264420509338379
    8. ' (' → logprob: -8.389420509338379
    9. '' → logprob: -9.139420509338379
    10. '
' → logprob: -9.139420509338379

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.40235817432403564
    2. ' operator' → logprob: -2.027358055114746
    3. ' itertools' → logprob: -2.277358055114746
    4. ' collections' → logprob: -2.527358055114746
    5. ' os' → logprob: -4.152358055114746
    6. 'operator' → logprob: -7.277358055114746
    7. 'math' → logprob: -8.027358055114746
    8. ' sys' → logprob: -8.902358055114746
    9. 'collections' → logprob: -9.027358055114746
    10. ' ' → logprob: -9.527358055114746

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.044668834656476974
    2. 'import' → logprob: -3.6696689128875732
    3. '.' → logprob: -4.169668674468994
    4. ' ' → logprob: -6.044668674468994
    5. ' .' → logprob: -8.419669151306152
    6. '.import' → logprob: -9.169669151306152
    7. '	import' → logprob: -11.419669151306152
    8. '_import' → logprob: -11.544669151306152
    9. '<|end|>' → logprob: -11.794669151306152
    10. ' Import' → logprob: -13.169669151306152

Token 8: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.22591231763362885
    2. ' import' → logprob: -1.97591233253479
    3. ' mul' → logprob: -3.60091233253479
    4. 'add' → logprob: -3.97591233253479
    5. ' ' → logprob: -4.350912094116211
    6. 'import' → logprob: -5.975912094116211
    7. 'mul' → logprob: -6.600912094116211
    8. ' item' → logprob: -8.100912094116211
    9. ' icon' → logprob: -9.475912094116211
    10. ' ad' → logprob: -10.100912094116211

Token 9: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.008991529233753681
    2. 'get' → logprob: -4.758991718292236
    3. 'getitem' → logprob: -8.008991241455078
    4. 'gett' → logprob: -10.258991241455078
    5. 'item' → logprob: -12.258991241455078
    6. 'g' → logprob: -12.883991241455078
    7. 'ge' → logprob: -14.133991241455078
    8. 'gt' → logprob: -15.758991241455078
    9. 'attr' → logprob: -15.758991241455078
    10. 'got' → logprob: -15.758991241455078

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5537190437316895
    2. ',' → logprob: -1.8037190437316895
    3. '\n' → logprob: -2.0537190437316895
    4. '\' → logprob: -2.9287190437316895
    5. '(
' → logprob: -3.0537190437316895
    6. ',
' → logprob: -5.1787190437316895
    7. '.' → logprob: -5.3037190437316895
    8. '
' → logprob: -5.8037190437316895
    9. '()' → logprob: -5.8037190437316895
    10. 'newline' → logprob: -6.1787190437316895

Token 11: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11299502849578857
    2. '\' → logprob: -3.862995147705078
    3. '.' → logprob: -3.987995147705078
    4. ',' → logprob: -4.112995147705078
    5. '(
' → logprob: -4.112995147705078
    6. 'def' → logprob: -4.362995147705078
    7. '\n' → logprob: -5.487995147705078
    8. '=' → logprob: -5.862995147705078
    9. '[' → logprob: -6.112995147705078
    10. '`' → logprob: -6.237995147705078

Token 12: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4685434401035309
    2. ' ' → logprob: -1.9685434103012085
    3. '=' → logprob: -2.343543529510498
    4. '_' → logprob: -3.093543529510498
    5. 'a' → logprob: -3.593543529510498
    6. 'umber' → logprob: -3.843543529510498
    7. 'um' → logprob: -4.843543529510498
    8. '.' → logprob: -5.218543529510498
    9. '  ' → logprob: -5.218543529510498
    10. ',' → logprob: -5.218543529510498

Token 13: ' m' (ID: 284)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6684654355049133
    2. ' ' → logprob: -1.2934653759002686
    3. ' m' → logprob: -2.5434653759002686
    4. 'm' → logprob: -2.5434653759002686
    5. 'k' → logprob: -3.0434653759002686
    6. ' =' → logprob: -5.918465614318848
    7. '=' → logprob: -7.043465614318848
    8. 'data' → logprob: -7.293465614318848
    9. ' data' → logprob: -7.793465614318848
    10. ''' → logprob: -8.168465614318848

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02637333609163761
    2. '=' → logprob: -3.6513733863830566
    3. ',' → logprob: -9.776372909545898
    4. ' ' → logprob: -12.026372909545898
    5. '<|end|>' → logprob: -12.651372909545898
    6. ' ,' → logprob: -12.901372909545898
    7. ' =
' → logprob: -13.276372909545898
    8. ')' → logprob: -13.401372909545898
    9. ' =",' → logprob: -15.651372909545898
    10. ' =)' → logprob: -15.776372909545898

Token 15: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03028193488717079
    2. 'map' → logprob: -3.6552820205688477
    3. ' input' → logprob: -6.030282020568848
    4. ' ' → logprob: -6.780282020568848
    5. 'input' → logprob: -8.405282020568848
    6. '0' → logprob: -8.780282020568848
    7. '10' → logprob: -10.780282020568848
    8. ' list' → logprob: -11.280282020568848
    9. ' int' → logprob: -12.030282020568848
    10. 'int' → logprob: -12.280282020568848

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.17620161175727844
    2. '(' → logprob: -1.926201581954956
    3. '(str' → logprob: -4.676201820373535
    4. '(lambda' → logprob: -5.301201820373535
    5. 'int' → logprob: -7.176201820373535
    6. '(input' → logprob: -7.676201820373535
    7. '<|end|>' → logprob: -9.551201820373535
    8. '<int' → logprob: -10.176201820373535
    9. '()' → logprob: -10.301201820373535
    10. '[int' → logprob: -10.676201820373535

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04209895804524422
    2. '(input' → logprob: -4.1670989990234375
    3. ',input' → logprob: -4.1670989990234375
    4. '(' → logprob: -5.1670989990234375
    5. 'input' → logprob: -5.7920989990234375
    6. ')' → logprob: -6.9170989990234375
    7. '(),' → logprob: -9.167098999023438
    8. '),' → logprob: -9.292098999023438
    9. ' input' → logprob: -9.667098999023438
    10. ' ,' → logprob: -9.792098999023438

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47408607602119446
    2. 'input' → logprob: -0.9740860462188721
    3. '(input' → logprob: -11.849085807800293
    4. ' ' → logprob: -14.224085807800293
    5. ')' → logprob: -14.349085807800293
    6. '=input' → logprob: -15.224085807800293
    7. ' )' → logprob: -15.474085807800293
    8. ',input' → logprob: -15.849085807800293
    9. '	input' → logprob: -17.34908676147461
    10. '```' → logprob: -17.84908676147461

Token 19: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3893451690673828
    2. '()' → logprob: -1.8893451690673828
    3. '().' → logprob: -1.8893451690673828
    4. ')' → logprob: -4.014345169067383
    5. '(' → logprob: -6.764345169067383
    6. '());' → logprob: -8.014345169067383
    7. '()))' → logprob: -9.639345169067383
    8. '(),' → logprob: -9.764345169067383
    9. '();)' → logprob: -9.764345169067383
    10. '()>' → logprob: -9.889345169067383

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003010233340319246
    2. 'strip' → logprob: -8.125301361083984
    3. 'rstrip' → logprob: -12.625301361083984
    4. 'read' → logprob: -14.250301361083984
    5. ' split' → logprob: -14.625301361083984
    6. '(split' → logprob: -15.250301361083984
    7. 'spl' → logprob: -15.250301361083984
    8. ')' → logprob: -16.000301361083984
    9. '```' → logprob: -18.375301361083984
    10. 'sp' → logprob: -19.375301361083984

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062403786927461624
    2. '))' → logprob: -2.812403678894043
    3. '())' → logprob: -8.312403678894043
    4. '),' → logprob: -9.062403678894043
    5. '()' → logprob: -10.812403678894043
    6. ')))' → logprob: -10.937403678894043
    7. '')' → logprob: -11.687403678894043
    8. '()))' → logprob: -12.687403678894043
    9. ')`' → logprob: -12.687403678894043
    10. '`)' → logprob: -12.687403678894043

Token 22: 'l' (ID: 75)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.12064909934997559
    2. '[' → logprob: -3.9956490993499756
    3. '\n' → logprob: -3.9956490993499756
    4. 'a' → logprob: -4.870649337768555
    5. 'array' → logprob: -5.245649337768555
    6. 'for' → logprob: -5.370649337768555
    7. '
' → logprob: -5.370649337768555
    8. 'matrix' → logprob: -5.495649337768555
    9. 'n' → logprob: -5.620649337768555
    10. 'd' → logprob: -5.620649337768555

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6623134613037109
    2. 'ist' → logprob: -1.412313461303711
    3. '=' → logprob: -2.537313461303711
    4. 's' → logprob: -2.787313461303711
    5. 'i' → logprob: -3.537313461303711
    6. 'is' → logprob: -3.912313461303711
    7. 'st' → logprob: -4.037313461303711
    8. 'ists' → logprob: -4.412313461303711
    9. '_' → logprob: -4.662313461303711
    10. '=[]' → logprob: -6.037313461303711

Token 24: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.28969043493270874
    2. 'list' → logprob: -2.1646904945373535
    3. '[' → logprob: -2.4146904945373535
    4. ' [' → logprob: -3.6646904945373535
    5. '[input' → logprob: -4.7896904945373535
    6. ' list' → logprob: -5.2896904945373535
    7. '[int' → logprob: -5.5396904945373535
    8. '[]' → logprob: -6.1646904945373535
    9. '[item' → logprob: -7.2896904945373535
    10. '[len' → logprob: -8.289690017700195

Token 25: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.47497880458831787
    2. '(' → logprob: -1.0999788045883179
    3. '(range' → logprob: -3.2249789237976074
    4. '(filter' → logprob: -6.349978923797607
    5. '(input' → logprob: -6.474978923797607
    6. '()' → logprob: -6.974978923797607
    7. '(int' → logprob: -7.099978923797607
    8. '(item' → logprob: -9.59997844696045
    9. '(re' → logprob: -10.34997844696045
    10. '(chain' → logprob: -10.47497844696045

Token 26: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00982066709548235
    2. '(' → logprob: -4.634820461273193
    3. ')' → logprob: -10.884820938110352
    4. 'int' → logprob: -11.134820938110352
    5. '<int' → logprob: -12.009820938110352
    6. '[int' → logprob: -12.009820938110352
    7. '=int' → logprob: -12.259820938110352
    8. '(lambda' → logprob: -12.884820938110352
    9. '(
' → logprob: -13.009820938110352
    10. ',int' → logprob: -13.134820938110352

Token 27: ' _:' (ID: 133568)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10049046576023102
    2. ' x' → logprob: -2.3504905700683594
    3. 'int' → logprob: -8.35049057006836
    4. ' int' → logprob: -10.35049057006836
    5. 'a' → logprob: -12.10049057006836
    6. 's' → logprob: -13.35049057006836
    7. ' a' → logprob: -13.47549057006836
    8. '_' → logprob: -13.72549057006836
    9. 'i' → logprob: -14.10049057006836
    10. ' ' → logprob: -14.10049057006836

Token 28: ' ' (ID: 220)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03464696556329727
    2. ' int' → logprob: -3.534646987915039
    3. 'input' → logprob: -5.409646987915039
    4. ' input' → logprob: -8.034646987915039
    5. '_' → logprob: -10.409646987915039
    6. 'list' → logprob: -10.784646987915039
    7. '[int' → logprob: -12.034646987915039
    8. '(int' → logprob: -12.284646987915039
    9. '<int' → logprob: -12.909646987915039
    10. ' ' → logprob: -12.909646987915039

Token 29: '200' (ID: 1179)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03385096415877342
    2. 'input' → logprob: -3.408850908279419
    3. ' int' → logprob: -9.40885066986084
    4. '_' → logprob: -9.90885066986084
    5. 'list' → logprob: -10.53385066986084
    6. 'tuple' → logprob: -11.78385066986084
    7. '[int' → logprob: -12.03385066986084
    8. ' input' → logprob: -12.03385066986084
    9. '0' → logprob: -12.53385066986084
    10. '(int' → logprob: -12.65885066986084

Token 30: '000' (ID: 1302)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.186034917831421
    2. '*' → logprob: -1.311034917831421
    3. ',' → logprob: -1.561034917831421
    4. '0' → logprob: -2.436034917831421
    5. ' +' → logprob: -2.936034917831421
    6. ' ,' → logprob: -4.18603515625
    7. '+' → logprob: -4.43603515625
    8. '000' → logprob: -4.56103515625
    9. ' -' → logprob: -4.81103515625
    10. '00' → logprob: -5.06103515625

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7769520878791809
    2. '000' → logprob: -1.5269520282745361
    3. '+' → logprob: -2.026952028274536
    4. '-' → logprob: -2.651952028274536
    5. ' -' → logprob: -2.776952028274536
    6. ' +' → logprob: -3.901952028274536
    7. '00' → logprob: -4.401952266693115
    8. '0' → logprob: -4.526952266693115
    9. ' ,' → logprob: -5.026952266693115
    10. '*' → logprob: -6.901952266693115

Token 32: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013501148205250502
    2. ' range' → logprob: -6.751349925994873
    3. '[' → logprob: -8.751350402832031
    4. 'input' → logprob: -11.626350402832031
    5. ' [' → logprob: -12.626350402832031
    6. '(range' → logprob: -12.876350402832031
    7. '   ' → logprob: -13.001350402832031
    8. ' ' → logprob: -14.001350402832031
    9. '	range' → logprob: -14.251350402832031
    10. ')' → logprob: -14.251350402832031

Token 33: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2538846731185913
    2. '(n' → logprob: -1.5038846731185913
    3. '(' → logprob: -6.253884792327881
    4. 'm' → logprob: -10.503884315490723
    5. 'n' → logprob: -13.503884315490723
    6. '(l' → logprob: -14.503884315490723
    7. '(
' → logprob: -14.503884315490723
    8. ')m' → logprob: -15.253884315490723
    9. ' (' → logprob: -15.628884315490723
    10. '((' → logprob: -16.12888526916504

Token 34: '-' (ID: 12)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.03394511714577675
    2. ')' → logprob: -3.408945083618164
    3. '))' → logprob: -8.158945083618164
    4. ')));' → logprob: -12.408945083618164
    5. '),' → logprob: -12.533945083618164
    6. ')))
' → logprob: -12.908945083618164
    7. ')))

' → logprob: -14.283945083618164
    8. '))))' → logprob: -14.408945083618164
    9. '')))' → logprob: -14.408945083618164
    10. ' ' → logprob: -14.783945083618164

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006338625680655241
    2. 'm' → logprob: -5.756338596343994
    3. ' ' → logprob: -6.506338596343994
    4. '2' → logprob: -6.881338596343994
    5. ')' → logprob: -8.506339073181152
    6. '0' → logprob: -8.631339073181152
    7. ' m' → logprob: -9.006339073181152
    8. 'n' → logprob: -10.256339073181152
    9. '))' → logprob: -10.631339073181152
    10. '3' → logprob: -10.881339073181152

Token 36: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.02893078327178955
    2. ')' → logprob: -3.6539306640625
    3. '))' → logprob: -6.0289306640625
    4. '+' → logprob: -8.9039306640625
    5. ')));' → logprob: -10.5289306640625
    6. '),' → logprob: -11.1539306640625
    7. '')))' → logprob: -11.5289306640625
    8. ')))
' → logprob: -11.7789306640625
    9. ',' → logprob: -12.1539306640625
    10. '))))' → logprob: -12.5289306640625

Token 37: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46474725008010864
    2. '
' → logprob: -1.0897471904754639
    3. 'for' → logprob: -4.589747428894043
    4. '<|end|>' → logprob: -4.714747428894043
    5. ')
' → logprob: -5.714747428894043
    6. 'n' → logprob: -6.214747428894043
    7. ' 
' → logprob: -6.339747428894043
    8. '\n' → logprob: -6.589747428894043
    9. ' ' → logprob: -6.964747428894043
    10. ' for' → logprob: -7.089747428894043

Token 38: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39024609327316284
    2. ' _' → logprob: -1.8902461528778076
    3. ' i' → logprob: -1.8902461528778076
    4. '_' → logprob: -3.8902461528778076
    5. 'i' → logprob: -7.8902459144592285
    6. '  ' → logprob: -8.890246391296387
    7. ' ' → logprob: -10.390246391296387
    8. '_i' → logprob: -11.015246391296387
    9. ' ‌' → logprob: -11.140246391296387
    10. ')' → logprob: -12.640246391296387

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14311154186725616
    2. 'in' → logprob: -2.01811146736145
    3. '_' → logprob: -8.643111228942871
    4. ' ' → logprob: -8.643111228942871
    5. '  ' → logprob: -10.768111228942871
    6. ' _' → logprob: -10.893111228942871
    7. 'n' → logprob: -11.643111228942871
    8. 'range' → logprob: -12.393111228942871
    9. 'i' → logprob: -12.518111228942871
    10. ',' → logprob: -12.518111228942871

Token 40: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740908145904541
    2. 'range' → logprob: -0.9740908145904541
    3. '(range' → logprob: -13.099090576171875
    4. '	range' → logprob: -13.099090576171875
    5. ' ' → logprob: -13.224090576171875
    6. ' xrange' → logprob: -13.474090576171875
    7. '_' → logprob: -13.849090576171875
    8. '```' → logprob: -14.224090576171875
    9. 'l' → logprob: -14.349090576171875
    10. ' l' → logprob: -14.474090576171875

Token 41: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.011198482476174831
    2. '(n' → logprob: -5.1361985206604
    3. '(' → logprob: -5.2611985206604
    4. ' (' → logprob: -9.761198043823242
    5. 'm' → logprob: -12.261198043823242
    6. ' m' → logprob: -13.136198043823242
    7. '(s' → logprob: -13.386198043823242
    8. '(int' → logprob: -14.511198043823242
    9. '(
' → logprob: -16.386198043823242
    10. '(M' → logprob: -16.511198043823242

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019742166623473167
    2. ')' → logprob: -4.019742012023926
    3. ' ):' → logprob: -6.519742012023926
    4. '):
' → logprob: -9.644742012023926
    5. ' )' → logprob: -10.769742012023926
    6. ',' → logprob: -11.394742012023926
    7. ':' → logprob: -11.894742012023926
    8. '),' → logprob: -13.019742012023926
    9. ')):' → logprob: -13.019742012023926
    10. '():' → logprob: -13.519742012023926

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14915601909160614
    2. ' ' → logprob: -2.774156093597412
    3. '<|end|>' → logprob: -3.649156093597412
    4. ' 
' → logprob: -4.649156093597412
    5. '    
' → logprob: -4.649156093597412
    6. ' n' → logprob: -5.149156093597412
    7. '    ' → logprob: -5.274156093597412
    8. ',' → logprob: -5.399156093597412
    9. ':' → logprob: -6.399156093597412
    10. '  
' → logprob: -6.524156093597412

Token 44: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0909109115600586
    2. '
' → logprob: -1.8409109115600586
    3. ' 
' → logprob: -2.3409109115600586
    4. '    
' → logprob: -2.7159109115600586
    5. ' ' → logprob: -2.8409109115600586
    6. 'n' → logprob: -3.4659109115600586
    7. '<|end|>' → logprob: -3.5909109115600586
    8. '```' → logprob: -3.8409109115600586
    9. '_' → logprob: -3.9659109115600586
    10. 'x' → logprob: -4.090910911560059

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019221339374780655
    2. ',b' → logprob: -4.019221305847168
    3. ' ,' → logprob: -7.269221305847168
    4. 'b' → logprob: -8.019221305847168
    5. ' ' → logprob: -11.769221305847168
    6. ' b' → logprob: -11.894221305847168
    7. ',p' → logprob: -12.519221305847168
    8. ',a' → logprob: -12.644221305847168
    9. ',input' → logprob: -12.769221305847168
    10. ',i' → logprob: -13.019221305847168

Token 46: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0059885201044380665
    2. ' b' → logprob: -5.130988597869873
    3. ' ' → logprob: -10.130988121032715
    4. '<|end|>' → logprob: -11.005988121032715
    5. '  ' → logprob: -13.505988121032715
    6. 'c' → logprob: -15.005988121032715
    7. 'space' → logprob: -15.130988121032715
    8. '>b' → logprob: -15.380988121032715
    9. '    ' → logprob: -15.505988121032715
    10. '<|end|>' → logprob: -15.630988121032715

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2782508134841919
    2. ' =' → logprob: -1.528250813484192
    3. ',' → logprob: -3.6532506942749023
    4. ' ,' → logprob: -10.028250694274902
    5. '   ' → logprob: -11.903250694274902
    6. ' ' → logprob: -12.278250694274902
    7. '  ' → logprob: -12.278250694274902
    8. ')' → logprob: -12.778250694274902
    9. '    ' → logprob: -13.028250694274902
    10. '=input' → logprob: -13.403250694274902

Token 48: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006750305183231831
    2. 'map' → logprob: -5.006750106811523
    3. ' ' → logprob: -10.756750106811523
    4. ' input' → logprob: -12.381750106811523
    5. ' list' → logprob: -12.756750106811523
    6. '	map' → logprob: -13.256750106811523
    7. ',map' → logprob: -13.881750106811523
    8. ' mapa' → logprob: -14.006750106811523
    9. ' ' → logprob: -14.131750106811523
    10. '  ' → logprob: -14.256750106811523

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10195624828338623
    2. '(' → logprob: -2.351956367492676
    3. '(lambda' → logprob: -6.476956367492676
    4. '(input' → logprob: -9.601956367492676
    5. '<|end|>' → logprob: -10.226956367492676
    6. '<int' → logprob: -10.476956367492676
    7. '(str' → logprob: -11.601956367492676
    8. ' (' → logprob: -11.726956367492676
    9. '(eval' → logprob: -12.101956367492676
    10. '[int' → logprob: -12.101956367492676

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041355108842253685
    2. ',input' → logprob: -5.504135608673096
    3. 'input' → logprob: -10.629135131835938
    4. '(),' → logprob: -11.004135131835938
    5. ' ,' → logprob: -11.879135131835938
    6. ')' → logprob: -13.129135131835938
    7. '(' → logprob: -13.629135131835938
    8. '()' → logprob: -14.004135131835938
    9. ' input' → logprob: -14.004135131835938
    10. ',int' → logprob: -14.129135131835938

Token 51: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25193166732788086
    2. 'input' → logprob: -1.5019316673278809
    3. ')' → logprob: -13.501932144165039
    4. '=input' → logprob: -14.876932144165039
    5. '	input' → logprob: -15.501932144165039
    6. ' ' → logprob: -15.626932144165039
    7. '(input' → logprob: -15.751932144165039
    8. ' )' → logprob: -16.12693214416504
    9. ',input' → logprob: -16.25193214416504
    10. '[input' → logprob: -17.00193214416504

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.9875325708417222e-05
    2. '()' → logprob: -10.625029563903809
    3. ')' → logprob: -12.500029563903809
    4. ' ().' → logprob: -14.375029563903809
    5. '.' → logprob: -15.000029563903809
    6. '   ' → logprob: -15.125029563903809
    7. '(' → logprob: -15.625029563903809
    8. '())' → logprob: -16.500030517578125
    9. 'split' → logprob: -16.750030517578125
    10. ' .' → logprob: -16.750030517578125

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. 'strip' → logprob: -14.125001907348633
    3. ' split' → logprob: -15.250001907348633
    4. 'spl' → logprob: -15.750001907348633
    5. 'rstrip' → logprob: -16.375001907348633
    6. '(split' → logprob: -16.375001907348633
    7. 'plit' → logprob: -16.500001907348633
    8. 's' → logprob: -18.625001907348633
    9. ')' → logprob: -19.000001907348633
    10. 'startswith' → logprob: -20.375001907348633

Token 54: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.036524842376821e-05
    2. ')
' → logprob: -10.750040054321289
    3. '()' → logprob: -11.625040054321289
    4. '))' → logprob: -12.125040054321289
    5. '())' → logprob: -13.250040054321289
    6. ')a' → logprob: -14.125040054321289
    7. '),' → logprob: -15.000040054321289
    8. '`)' → logprob: -15.125040054321289
    9. ' )' → logprob: -15.125040054321289
    10. ')`' → logprob: -15.500040054321289

Token 55: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.7564350366592407
    2. 'if' → logprob: -1.7564350366592407
    3. 'a' → logprob: -2.006434917449951
    4. ')' → logprob: -2.381434917449951
    5. '[' → logprob: -2.381434917449951
    6. 'l' (adapté à ' l') → logprob: -2.506434917449951
    7. ' if' → logprob: -2.756434917449951
    8. ' ' → logprob: -3.256434917449951
    9. '
' → logprob: -3.506434917449951
    10. '-' → logprob: -3.881434917449951

Token 57: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0991138443350792
    2. '[' → logprob: -2.599113941192627
    3. '[min' → logprob: -3.974113941192627
    4. '[max' → logprob: -7.349113941192627
    5. '[b' → logprob: -7.849113941192627
    6. '[item' → logprob: -9.724113464355469
    7. 'a' → logprob: -10.474113464355469
    8. '[l' → logprob: -10.849113464355469
    9. ' [' → logprob: -10.974113464355469
    10. '[int' → logprob: -11.224113464355469

Token 58: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01761329174041748
    2. ']' → logprob: -4.892613410949707
    3. ')' → logprob: -5.517613410949707
    4. ' -' → logprob: -6.017613410949707
    5. '-)' → logprob: -6.767613410949707
    6. '])' → logprob: -7.017613410949707
    7. '1' → logprob: -7.517613410949707
    8. ')]' → logprob: -8.017613410949707
    9. '[' → logprob: -8.767613410949707
    10. 'a' → logprob: -9.642613410949707

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28130918741226196
    2. '2' → logprob: -1.4063091278076172
    3. ' ' → logprob: -8.906309127807617
    4. '0' → logprob: -12.531309127807617
    5. '3' → logprob: -12.531309127807617
    6. ']' → logprob: -12.843809127807617
    7. '```' → logprob: -13.281309127807617
    8. '-' → logprob: -13.718809127807617
    9. ':' → logprob: -14.031309127807617
    10. ')' → logprob: -14.218809127807617

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07433603703975677
    2. ']=' → logprob: -2.699336051940918
    3. ')' → logprob: -6.199336051940918
    4. '=' → logprob: -6.699336051940918
    5. '],' → logprob: -8.199336051940918
    6. '])' → logprob: -8.324336051940918
    7. ']+=' → logprob: -8.699336051940918
    8. ' ]' → logprob: -8.949336051940918
    9. ')=' → logprob: -8.949336051940918
    10. ',' → logprob: -10.199336051940918

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06214066222310066
    2. ' =' → logprob: -2.812140703201294
    3. '=min' → logprob: -9.312140464782715
    4. '+=' → logprob: -10.187140464782715
    5. ',' → logprob: -10.437140464782715
    6. '=max' → logprob: -12.687140464782715
    7. '-=' → logprob: -12.937140464782715
    8. '>' → logprob: -13.437140464782715
    9. '<' → logprob: -13.562140464782715
    10. ' +=' → logprob: -13.562140464782715

Token 62: ' reduce' (ID: 10389)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5217564702033997
    2. 'min' → logprob: -1.0217564105987549
    3. 'max' → logprob: -4.021756649017334
    4. '1' → logprob: -4.396756649017334
    5. '0' → logprob: -5.146756649017334
    6. '200' → logprob: -5.896756649017334
    7. ' min' → logprob: -6.021756649017334
    8. '199' → logprob: -6.396756649017334
    9. 'm' → logprob: -6.896756649017334
    10. '100' → logprob: -7.146756649017334

Token 63: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.13553214073181152
    2. '(lambda' → logprob: -2.2605321407318115
    3. '(' → logprob: -3.8855321407318115
    4. '(max' → logprob: -6.385532379150391
    5. 'min' → logprob: -9.01053237915039
    6. '(int' → logprob: -10.63553237915039
    7. '((' → logprob: -10.76053237915039
    8. '(
' → logprob: -11.01053237915039
    9. '(operator' → logprob: -11.26053237915039
    10. '(item' → logprob: -11.76053237915039

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008458194322884083
    2. '(' → logprob: -6.133458137512207
    3. ')' → logprob: -6.508458137512207
    4. '(lambda' → logprob: -6.758458137512207
    5. ',[' → logprob: -7.133458137512207
    6. ',l' → logprob: -7.383458137512207
    7. 'l' → logprob: -7.633458137512207
    8. ' ,' → logprob: -8.133458137512207
    9. '),' → logprob: -8.133458137512207
    10. '[' → logprob: -8.383458137512207

Token 65: ' [' (ID: 723)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.08706347644329071
    2. '(l' → logprob: -3.3370635509490967
    3. '[' → logprob: -3.4620635509490967
    4. '([' → logprob: -5.587063312530518
    5. 'l' → logprob: -5.587063312530518
    6. '[b' → logprob: -5.712063312530518
    7. '(' → logprob: -6.337063312530518
    8. ' [' → logprob: -6.962063312530518
    9. '[a' → logprob: -7.337063312530518
    10. '[
' → logprob: -7.587063312530518

Token 66: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014059022068977356
    2. '(l' → logprob: -4.514059066772461
    3. ' l' → logprob: -6.264059066772461
    4. ',' → logprob: -8.139059066772461
    5. '(' → logprob: -8.514059066772461
    6. 'b' → logprob: -8.889059066772461
    7. '   ' → logprob: -9.264059066772461
    8. ' (' → logprob: -9.514059066772461
    9. '[l' → logprob: -9.514059066772461
    10. ',l' → logprob: -9.764059066772461

Token 67: '[a' (ID: 32035)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.008537273854017258
    2. '[a' → logprob: -5.258537292480469
    3. 'b' → logprob: -6.258537292480469
    4. ',' → logprob: -7.508537292480469
    5. ',b' → logprob: -8.008537292480469
    6. '[' → logprob: -8.133537292480469
    7. '[l' → logprob: -9.633537292480469
    8. 'a' → logprob: -10.008537292480469
    9. ',[' → logprob: -11.633537292480469
    10. ' ' → logprob: -11.883537292480469

Token 68: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.513339445111342e-05
    2. 'b' → logprob: -10.875044822692871
    3. ' -' → logprob: -11.125044822692871
    4. '[' → logprob: -12.625044822692871
    5. '1' → logprob: -12.875044822692871
    6. ']' → logprob: -13.750044822692871
    7. '[b' → logprob: -13.750044822692871
    8. 'a' → logprob: -14.375044822692871
    9. '   ' → logprob: -15.000044822692871
    10. '-b' → logprob: -15.250044822692871

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008398807840421796
    2. 'b' → logprob: -7.500839710235596
    3. '2' → logprob: -8.375840187072754
    4. ' ' → logprob: -10.500840187072754
    5. ' b' → logprob: -12.188340187072754
    6. 'i' → logprob: -12.188340187072754
    7. '   ' → logprob: -12.500840187072754
    8. 'l' → logprob: -12.938340187072754
    9. '-' → logprob: -13.063340187072754
    10. 'a' → logprob: -13.125840187072754

Token 70: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056029245257377625
    2. ',b' → logprob: -2.9310293197631836
    3. ' ,' → logprob: -7.056029319763184
    4. ',l' → logprob: -8.556029319763184
    5. 'b' → logprob: -10.431029319763184
    6. '   ' → logprob: -10.556029319763184
    7. 'l' → logprob: -12.181029319763184
    8. ',
' → logprob: -12.306029319763184
    9. ',a' → logprob: -12.806029319763184
    10. ',m' → logprob: -13.306029319763184

Token 71: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018234925344586372
    2. ' b' → logprob: -4.143234729766846
    3. 'l' → logprob: -6.518234729766846
    4. '200' → logprob: -8.643235206604004
    5. '   ' → logprob: -8.893235206604004
    6. ' ' → logprob: -9.143235206604004
    7. ' l' → logprob: -9.518235206604004
    8. 'a' → logprob: -10.268235206604004
    9. '(b' → logprob: -10.393235206604004
    10. 'int' → logprob: -10.518235206604004

Token 72: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2472093254327774
    2. ' -' → logprob: -1.9972093105316162
    3. '])' → logprob: -2.497209310531616
    4. ')])' → logprob: -8.247209548950195
    5. ' ])' → logprob: -8.747209548950195
    6. '])]' → logprob: -8.747209548950195
    7. ')' → logprob: -9.497209548950195
    8. ']' → logprob: -9.872209548950195
    9. '])-' → logprob: -9.872209548950195
    10. ' ' → logprob: -10.372209548950195

Token 73: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007437567692250013
    2. ' ' → logprob: -7.375743865966797
    3. '2' → logprob: -9.875743865966797
    4. 'a' → logprob: -10.500743865966797
    5. '])' → logprob: -11.125743865966797
    6. 'b' → logprob: -11.375743865966797
    7. '-' → logprob: -12.625743865966797
    8. ')' → logprob: -13.125743865966797
    9. ' a' → logprob: -13.625743865966797
    10. ']' → logprob: -13.750743865966797

Token 74: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0015746140852570534
    2. ' ])' → logprob: -6.751574516296387
    3. ')' → logprob: -8.501574516296387
    4. '])
' → logprob: -9.501574516296387
    5. ')])' → logprob: -10.376574516296387
    6. ',' → logprob: -10.626574516296387
    7. ']' → logprob: -10.626574516296387
    8. ' )' → logprob: -11.376574516296387
    9. '+' → logprob: -11.626574516296387
    10. '])

' → logprob: -12.251574516296387

Token 75: 'right' (ID: 2460)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3725055158138275
    2. '<|end|>' → logprob: -1.24750554561615
    3. '\n' → logprob: -4.9975056648254395
    4. '```' → logprob: -5.7475056648254395
    5. 'n' → logprob: -6.1225056648254395
    6. 'print' → logprob: -6.2475056648254395
    7. ']' → logprob: -6.6225056648254395
    8. 'a' → logprob: -7.1225056648254395
    9. ' l' → logprob: -7.1225056648254395
    10. '
' → logprob: -7.1225056648254395

Token 76: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9226661324501038
    2. '=' → logprob: -1.797666072845459
    3. '_m' → logprob: -2.047666072845459
    4. '_bound' → logprob: -2.047666072845459
    5. ' =' → logprob: -2.672666072845459
    6. 's' → logprob: -3.672666072845459
    7. 'most' → logprob: -4.047666072845459
    8. '_boundary' → logprob: -4.172666072845459
    9. '[' → logprob: -5.047666072845459
    10. '_limit' → logprob: -5.422666072845459

Token 77: ' count' (ID: 3605)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.29778605699539185
    2. ' left' → logprob: -1.797785997390747
    3. 'ans' → logprob: -3.422785997390747
    4. 'answer' → logprob: -4.422786235809326
    5. ' =' → logprob: -5.297786235809326
    6. '0' → logprob: -5.422786235809326
    7. ' ' → logprob: -5.422786235809326
    8. 'res' → logprob: -5.797786235809326
    9. ' ans' → logprob: -5.922786235809326
    10. 'max' → logprob: -6.047786235809326

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42877307534217834
    2. '=' → logprob: -1.053773045539856
    3. ',' → logprob: -10.053772926330566
    4. '_' → logprob: -10.928772926330566
    5. 's' → logprob: -12.053772926330566
    6. ')' → logprob: -13.928772926330566
    7. '_=' → logprob: -14.553772926330566
    8. ' ' → logprob: -14.553772926330566
    9. '[' → logprob: -14.678772926330566
    10. '```' → logprob: -14.678772926330566

Token 79: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013105873949825764
    2. '-' → logprob: -4.513105869293213
    3. ' ' → logprob: -7.138105869293213
    4. 'n' → logprob: -7.263105869293213
    5. '[' → logprob: -8.638106346130371
    6. ' -' → logprob: -8.888106346130371
    7. '1' → logprob: -9.013106346130371
    8. '[n' → logprob: -10.263106346130371
    9. '[]' → logprob: -10.763106346130371
    10. '[-' → logprob: -11.263106346130371

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.106736039626412e-05
    2. '-' → logprob: -11.250031471252441
    3. ' ' → logprob: -12.125031471252441
    4. '2' → logprob: -12.250031471252441
    5. '10' → logprob: -12.875031471252441
    6. '~' → logprob: -13.375031471252441
    7. '１' → logprob: -14.625031471252441
    8. '[-' → logprob: -14.750031471252441
    9. ' -' → logprob: -15.000031471252441
    10. 'sum' → logprob: -15.125031471252441

Token 81: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062083642929792404
    2. ' ' → logprob: -2.8120837211608887
    3. '1' → logprob: -10.06208324432373
    4. 'n' → logprob: -10.43708324432373
    5. ' n' → logprob: -10.43708324432373
    6. '-' → logprob: -12.93708324432373
    7. ' -' → logprob: -13.31208324432373
    8. '  ' → logprob: -13.74958324432373
    9. '<|end|>' → logprob: -13.87458324432373
    10. '000' → logprob: -14.18708324432373

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003015001420862973
    2. ' ' → logprob: -8.500301361083984
    3. '1' → logprob: -9.625301361083984
    4. 'n' → logprob: -10.500301361083984
    5. '-' → logprob: -13.375301361083984
    6. ' n' → logprob: -14.875301361083984
    7. '=' → logprob: -15.250301361083984
    8. '2' → logprob: -15.312801361083984
    9. '000' → logprob: -15.750301361083984
    10. 'ans' → logprob: -16.250301361083984

Token 84: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001473079901188612
    2. ' for' → logprob: -6.6264729499816895
    3. '<|end|>' → logprob: -9.001473426818848
    4. '```' → logprob: -11.376473426818848
    5. '
' → logprob: -12.001473426818848
    6. 'n' → logprob: -13.501473426818848
    7. 'i' → logprob: -13.626473426818848
    8. ')' → logprob: -14.751473426818848
    9. '<|end|>' → logprob: -14.751473426818848
    10. 'f' → logprob: -14.876473426818848

Token 85: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0325924449716695e-05
    2. ' for' → logprob: -11.62501049041748
    3. '
' → logprob: -14.87501049041748
    4. 'range' → logprob: -15.50001049041748
    5. '```' → logprob: -15.62501049041748
    6. 'i' → logprob: -16.000009536743164
    7. 'fo' → logprob: -16.375009536743164
    8. 'f' → logprob: -16.500009536743164
    9. 'n' → logprob: -17.000009536743164
    10. 'print' → logprob: -17.000009536743164

Token 86: ' chooser' (ID: 192073)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.2022373229265213
    2. 'can' → logprob: -2.952237367630005
    3. ' main' → logprob: -3.702237367630005
    4. ' is' → logprob: -3.702237367630005
    5. ' valid' → logprob: -3.702237367630005
    6. ' check' → logprob: -4.077237129211426
    7. ' possible' → logprob: -4.452237129211426
    8. 'possible' → logprob: -5.577237129211426
    9. 'check' → logprob: -5.702237129211426
    10. ' max' → logprob: -6.077237129211426

Token 87: '(acc' (ID: 82668)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.355155348777771
    2. '(i' → logprob: -2.2301554679870605
    3. '(a' → logprob: -2.9801554679870605
    4. '(right' → logprob: -3.6051554679870605
    5. '(left' → logprob: -3.7301554679870605
    6. '(x' → logprob: -3.7301554679870605
    7. '(pos' → logprob: -4.4801554679870605
    8. '(k' → logprob: -4.8551554679870605
    9. '(r' → logprob: -5.1051554679870605
    10. '(index' → logprob: -5.2301554679870605

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007040244061499834
    2. 'umulator' → logprob: -5.382040023803711
    3. 'um' → logprob: -6.882040023803711
    4. '):' → logprob: -8.257040023803711
    5. ',item' → logprob: -8.257040023803711
    6. 'umulate' → logprob: -9.007040023803711
    7. ' ,' → logprob: -9.132040023803711
    8. 'u' → logprob: -9.632040023803711
    9. ',val' → logprob: -9.632040023803711
    10. 'umul' → logprob: -9.882040023803711

Token 89: ' tup' (ID: 84170)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06856046617031097
    2. 'i' → logprob: -3.6935603618621826
    3. 'cur' → logprob: -3.9435603618621826
    4. 'curr' → logprob: -5.568560600280762
    5. 'v' → logprob: -5.818560600280762
    6. 'c' → logprob: -5.818560600280762
    7. 'e' → logprob: -6.443560600280762
    8. ' x' → logprob: -6.693560600280762
    9. 'el' → logprob: -6.693560600280762
    10. 'idx' → logprob: -6.818560600280762

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05264490470290184
    2. '):
' → logprob: -3.052644968032837
    3. '):
' → logprob: -6.302644729614258
    4. 'le' → logprob: -6.802644729614258
    5. 'er' → logprob: -7.802644729614258
    6. ':' → logprob: -8.177644729614258
    7. '):

' → logprob: -9.177644729614258
    8. ')' → logprob: -9.677644729614258
    9. 'el' → logprob: -10.427644729614258
    10. '**' → logprob: -10.677644729614258

Token 91: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1168111562728882
    2. '   ' → logprob: -1.7418111562728882
    3. 'acc' → logprob: -2.2418112754821777
    4. 'i' → logprob: -2.4918112754821777
    5. 'x' → logprob: -2.6168112754821777
    6. 'left' → logprob: -2.7418112754821777
    7. ' acc' → logprob: -3.2418112754821777
    8. ' l' → logprob: -3.7418112754821777
    9. 'right' → logprob: -3.7418112754821777
    10. 'a' → logprob: -4.366811275482178

Token 92: ' i' (ID: 575)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.8580286502838135
    2. 'l' → logprob: -1.4830286502838135
    3. 'x' → logprob: -2.3580286502838135
    4. 'right' → logprob: -2.6080286502838135
    5. 'i' (adapté à ' i') → logprob: -2.8580286502838135
    6. 'a' → logprob: -3.6080286502838135
    7. 'r' → logprob: -3.9830286502838135
    8. 'left' → logprob: -4.233028411865234
    9. 'idx' → logprob: -4.608028411865234
    10. '(acc' → logprob: -4.733028411865234

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006722352933138609
    2. 'x' → logprob: -6.006722450256348
    3. '=' → logprob: -6.381722450256348
    4. 'f' → logprob: -7.256722450256348
    5. 'dx' → logprob: -7.381722450256348
    6. ' =' → logprob: -7.631722450256348
    7. 's' → logprob: -9.006722450256348
    8. ' ,' → logprob: -9.256722450256348
    9. 'nt' → logprob: -9.756722450256348
    10. 't' → logprob: -9.756722450256348

Token 94: ' val' (ID: 1459)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7738058567047119
    2. 'x' → logprob: -1.273805856704712
    3. 'val' → logprob: -2.648805856704712
    4. 'v' → logprob: -2.648805856704712
    5. ' r' → logprob: -4.148805618286133
    6. 'ri' → logprob: -5.023805618286133
    7. 'c' → logprob: -5.023805618286133
    8. 'd' → logprob: -5.023805618286133
    9. 'j' → logprob: -5.148805618286133
    10. ' x' → logprob: -5.273805618286133

Token 95: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931700110435486
    2. ' =' → logprob: -0.6931700110435486
    3. ',' → logprob: -11.318169593811035
    4. ' ' → logprob: -11.693169593811035
    5. '   ' → logprob: -13.443169593811035
    6. ')' → logprob: -15.693169593811035
    7. '  ' → logprob: -15.943169593811035
    8. 't' → logprob: -16.56817054748535
    9. '＝' → logprob: -16.81817054748535
    10. '=i' → logprob: -16.94317054748535

Token 96: ' tup' (ID: 84170)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12697744369506836
    2. ' tup' → logprob: -2.1269774436950684
    3. '	t' → logprob: -10.626977920532227
    4. ' ' → logprob: -12.251977920532227
    5. ' t' → logprob: -12.376977920532227
    6. ' tu' → logprob: -12.376977920532227
    7. '   ' → logprob: -12.751977920532227
    8. '  ' → logprob: -13.501977920532227
    9. 'tu' → logprob: -13.626977920532227
    10. '_t' → logprob: -14.001977920532227

Token 97: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03262948617339134
    2. ':' → logprob: -4.532629489898682
    3. '<|end|>' → logprob: -4.532629489898682
    4. '
' → logprob: -6.032629489898682
    5. '<|end|>' → logprob: -6.282629489898682
    6. '   ' → logprob: -6.657629489898682
    7. ',' → logprob: -6.782629489898682
    8. '    
' → logprob: -7.157629489898682
    9. '  
' → logprob: -7.282629489898682
    10. ':
' → logprob: -7.282629489898682

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6593706607818604
    2. ' if' → logprob: -1.2843706607818604
    3. '
' → logprob: -2.1593706607818604
    4. ',' → logprob: -3.7843706607818604
    5. 'if' → logprob: -3.9093706607818604
    6. '):' → logprob: -4.284370422363281
    7. ':' → logprob: -4.409370422363281
    8. '):
' → logprob: -4.909370422363281
    9. ')' → logprob: -5.659370422363281
    10. '    
' → logprob: -5.909370422363281

Token 99: ' right' (ID: 1849)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4167628884315491
    2. 'if' → logprob: -1.5417628288269043
    3. ' acc' → logprob: -3.4167628288269043
    4. '
' → logprob: -3.9167628288269043
    5. '   ' → logprob: -3.9167628288269043
    6. 'acc' → logprob: -4.166762828826904
    7. ' max' → logprob: -4.916762828826904
    8. 'max' → logprob: -5.416762828826904
    9. '    ' → logprob: -5.916762828826904
    10. ' ' → logprob: -5.916762828826904

Token 100: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20854496955871582
    2. '=' → logprob: -1.7085449695587158
    3. ',' → logprob: -5.083544731140137
    4. '=max' → logprob: -7.333544731140137
    5. ' ' → logprob: -9.958544731140137
    6. 'max' → logprob: -10.458544731140137
    7. '   ' → logprob: -10.583544731140137
    8. '>' → logprob: -10.833544731140137
    9. 's' → logprob: -11.083544731140137
    10. '2' → logprob: -11.583544731140137

Token 101: ' count' (ID: 3605)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.7675303220748901
    2. 'acc' → logprob: -1.0175303220748901
    3. 'count' → logprob: -2.7675304412841797
    4. ' count' → logprob: -3.2675304412841797
    5. '_' → logprob: -4.14253044128418
    6. ' =' → logprob: -4.14253044128418
    7. '_=' → logprob: -4.76753044128418
    8. 'max' → logprob: -4.89253044128418
    9. ' ' → logprob: -5.26753044128418
    10. ' max' → logprob: -5.89253044128418

Token 102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25226232409477234
    2. ' =' → logprob: -1.5022623538970947
    3. ',' → logprob: -8.127262115478516
    4. 'if' → logprob: -11.127262115478516
    5. ' ' → logprob: -11.877262115478516
    6. ' if' → logprob: -13.502262115478516
    7. '
' → logprob: -13.502262115478516
    8. '

' → logprob: -13.627262115478516
    9. '+=' → logprob: -13.752262115478516
    10. '=
' → logprob: -14.002262115478516

Token 103: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.021264534443616867
    2. ' acc' → logprob: -3.8962645530700684
    3. '   ' → logprob: -7.396264553070068
    4. ' ' → logprob: -10.14626407623291
    5. '  ' → logprob: -11.02126407623291
    6. '(acc' → logprob: -11.27126407623291
    7. '	acc' → logprob: -11.52126407623291
    8. '    ' → logprob: -11.64626407623291
    9. 'max' → logprob: -12.27126407623291
    10. 'val' → logprob: -12.52126407623291

Token 104: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010879444889724255
    2. '
' → logprob: -5.7608795166015625
    3. '    
' → logprob: -5.8858795166015625
    4. '   ' → logprob: -6.5108795166015625
    5. '

' → logprob: -6.7608795166015625
    6. 'if' → logprob: -7.2608795166015625
    7. ' if' → logprob: -7.5108795166015625
    8. ',' → logprob: -8.260879516601562
    9. ' 
' → logprob: -8.385879516601562
    10. '  
' → logprob: -9.010879516601562

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04816336929798126
    2. '
' → logprob: -4.423163414001465
    3. 'if' → logprob: -4.548163414001465
    4. ' if' → logprob: -4.798163414001465
    5. '    
' → logprob: -5.048163414001465
    6. 'None' → logprob: -6.298163414001465
    7. '    ' → logprob: -6.423163414001465
    8. ',' → logprob: -6.423163414001465
    9. '<|end|>' → logprob: -7.298163414001465
    10. ' ' → logprob: -7.298163414001465

Token 106: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07141483575105667
    2. ' if' → logprob: -2.9464149475097656
    3. '   ' → logprob: -4.821414947509766
    4. 'right' → logprob: -6.321414947509766
    5. 'max' → logprob: -6.321414947509766
    6. 'i' → logprob: -6.946414947509766
    7. '0' → logprob: -7.071414947509766
    8. '(' → logprob: -7.321414947509766
    9. ' (' → logprob: -7.946414947509766
    10. ' right' → logprob: -8.196414947509766

Token 107: ' i' (ID: 575)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6846655607223511
    2. ' val' → logprob: -0.9346655607223511
    3. ' right' → logprob: -3.4346656799316406
    4. 'right' → logprob: -3.5596656799316406
    5. ' i' → logprob: -3.6846656799316406
    6. 'i' → logprob: -4.184665679931641
    7. ' ' → logprob: -7.059665679931641
    8. '   ' → logprob: -7.684665679931641
    9. '  ' → logprob: -8.99716567993164
    10. '(val' → logprob: -9.18466567993164

Token 108: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.391828328371048
    2. '<=' → logprob: -2.0168282985687256
    3. ' >' → logprob: -2.1418282985687256
    4. '>' → logprob: -2.6418282985687256
    5. ' <' → logprob: -7.516828536987305
    6. ' >=' → logprob: -7.641828536987305
    7. '>=' → logprob: -8.016828536987305
    8. ' ' → logprob: -8.141828536987305
    9. ' ==' → logprob: -8.266828536987305
    10. '==' → logprob: -8.266828536987305

Token 109: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.002809275174513459
    2. ' right' → logprob: -5.877809047698975
    3. '	right' → logprob: -13.127809524536133
    4. 'val' → logprob: -13.877809524536133
    5. ' ' → logprob: -14.502809524536133
    6. 'l' → logprob: -15.377809524536133
    7. '[right' → logprob: -15.502809524536133
    8. 'r' → logprob: -15.877809524536133
    9. 'rights' → logprob: -15.877809524536133
    10. 'left' → logprob: -15.877809524536133

Token 110: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.032359566539525986
    2. ':' → logprob: -3.7823596000671387
    3. 'and' → logprob: -5.157359600067139
    4. ' or' → logprob: -6.157359600067139
    5. '   ' → logprob: -7.657359600067139
    6. ':
' → logprob: -7.782359600067139
    7. '       ' → logprob: -8.65735912322998
    8. ' ' → logprob: -10.03235912322998
    9. ' :' → logprob: -10.40735912322998
    10. '    ' → logprob: -11.28235912322998

Token 111: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.06119002029299736
    2. ' val' → logprob: -3.186190128326416
    3. '   ' → logprob: -5.311190128326416
    4. 'l' → logprob: -5.686190128326416
    5. 'i' → logprob: -5.811190128326416
    6. 'right' → logprob: -5.936190128326416
    7. 'count' → logprob: -6.186190128326416
    8. ' i' → logprob: -7.311190128326416
    9. ' right' → logprob: -8.061189651489258
    10. ' ' → logprob: -8.311189651489258

Token 112: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5772619247436523
    2. ' >=' → logprob: -1.5772619247436523
    3. '>' → logprob: -2.2022619247436523
    4. ' <' → logprob: -3.2022619247436523
    5. '>=' → logprob: -3.5772619247436523
    6. ' <=' → logprob: -4.077261924743652
    7. ' ==' → logprob: -4.952261924743652
    8. ' ' → logprob: -4.952261924743652
    9. '<' → logprob: -5.077261924743652
    10. '   ' → logprob: -5.327261924743652

Token 113: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.12824781239032745
    2. ' ' → logprob: -2.1282477378845215
    3. '-' → logprob: -8.12824821472168
    4. '   ' → logprob: -8.37824821472168
    5. '2' → logprob: -8.37824821472168
    6. '0' → logprob: -9.12824821472168
    7. '  ' → logprob: -9.37824821472168
    8. '100' → logprob: -9.50324821472168
    9. ' -' → logprob: -9.75324821472168
    10. '1' → logprob: -9.87824821472168

Token 114: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.005768565461039543
    2. '-' → logprob: -5.880768775939941
    3. ' ' → logprob: -6.005768775939941
    4. '2' → logprob: -9.380768775939941
    5. 'float' → logprob: -9.505768775939941
    6. '   ' → logprob: -9.880768775939941
    7. '0' → logprob: -9.880768775939941
    8. '100' → logprob: -10.130768775939941
    9. '199' → logprob: -10.380768775939941
    10. '  ' → logprob: -10.380768775939941

Token 115: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -2.696889623621246e-06
    2. '00' → logprob: -13.50000286102295
    3. '0' → logprob: -15.00000286102295
    4. ' ' → logprob: -15.12500286102295
    5. '```' → logprob: -15.50000286102295
    6. '   ' → logprob: -16.125001907348633
    7. '001' → logprob: -16.375001907348633
    8. '_' → logprob: -16.687501907348633
    9. '  ' → logprob: -17.875001907348633
    10. '{' → logprob: -17.937501907348633

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012532021850347519
    2. ':
' → logprob: -4.5125322341918945
    3. '       ' → logprob: -7.0125322341918945
    4. '   ' → logprob: -8.512532234191895
    5. '):' → logprob: -8.762532234191895
    6. ' and' → logprob: -9.637532234191895
    7. ',' → logprob: -9.762532234191895
    8. ':return' → logprob: -9.887532234191895
    9. '):
' → logprob: -10.887532234191895
    10. ')' → logprob: -12.012532234191895

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022223956882953644
    2. ':' → logprob: -3.897223949432373
    3. ' right' → logprob: -7.397223949432373
    4. 'right' → logprob: -8.147224426269531
    5. '   ' → logprob: -8.397224426269531
    6. '    ' → logprob: -9.022224426269531
    7. '):' → logprob: -9.647224426269531
    8. ':
' → logprob: -9.772224426269531
    9. ',' → logprob: -9.897224426269531
    10. '        
' → logprob: -10.022224426269531

Token 118: ' return' (ID: 622)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -1.062835931777954
    2. '       ' → logprob: -1.312835931777954
    3. '           ' → logprob: -2.062835931777954
    4. 'right' → logprob: -2.187835931777954
    5. 'count' → logprob: -2.187835931777954
    6. ' count' → logprob: -3.812835931777954
    7. ' return' → logprob: -5.187835693359375
    8. 'return' (adapté à ' return') → logprob: -5.562835693359375
    9. '        ' → logprob: -6.937835693359375
    10. '   ' → logprob: -8.312835693359375

Token 119: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04233232140541077
    2. '(val' → logprob: -3.792332410812378
    3. 'i' → logprob: -4.667332172393799
    4. '(right' → logprob: -5.417332172393799
    5. 'val' → logprob: -6.167332172393799
    6. ' (' → logprob: -7.167332172393799
    7. 'right' → logprob: -7.292332172393799
    8. '(' → logprob: -7.667332172393799
    9. '(True' → logprob: -8.167332649230957
    10. '((' → logprob: -8.917332649230957

Token 120: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.015342921949923038
    2. 'i' → logprob: -4.890342712402344
    3. 'right' → logprob: -5.140342712402344
    4. 'max' → logprob: -7.765342712402344
    5. ' val' → logprob: -7.890342712402344
    6. 'b' → logprob: -8.515342712402344
    7. '(val' → logprob: -8.640342712402344
    8. '(i' → logprob: -9.140342712402344
    9. '   ' → logprob: -9.265342712402344
    10. '200' → logprob: -9.640342712402344

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016469687689095736
    2. ' ,' → logprob: -7.126646995544434
    3. '),' → logprob: -7.751646995544434
    4. ',count' → logprob: -8.876646995544434
    5. '+' → logprob: -9.251646995544434
    6. ' +' → logprob: -10.001646995544434
    7. 'count' → logprob: -10.501646995544434
    8. '   ' → logprob: -10.626646995544434
    9. ')' → logprob: -11.626646995544434
    10. '```' → logprob: -12.001646995544434

Token 122: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.029827317222952843
    2. ' count' → logprob: -3.529827356338501
    3. '   ' → logprob: -10.279827117919922
    4. '       ' → logprob: -10.529827117919922
    5. ' ' → logprob: -12.404827117919922
    6. '	count' → logprob: -12.904827117919922
    7. '
' → logprob: -13.279827117919922
    8. '1' → logprob: -13.654827117919922
    9. '0' → logprob: -13.654827117919922
    10. '(count' → logprob: -13.904827117919922

Token 123: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47717633843421936
    2. ' +' → logprob: -0.977176308631897
    3. '),' → logprob: -6.102176189422607
    4. ')' → logprob: -7.352176189422607
    5. '   ' → logprob: -9.102176666259766
    6. ',' → logprob: -9.602176666259766
    7. ')
' → logprob: -10.852176666259766
    8. '       ' → logprob: -12.977176666259766
    9. ' ' → logprob: -13.227176666259766
    10. '+
' → logprob: -13.227176666259766

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002067588793579489
    2. ' ' → logprob: -8.50020694732666
    3. '   ' → logprob: -12.87520694732666
    4. '  ' → logprob: -15.12520694732666
    5. ')' → logprob: -16.250205993652344
    6. '
' → logprob: -16.500205993652344
    7. '```' → logprob: -16.750205993652344
    8. '-' → logprob: -17.500205993652344
    9. '    ' → logprob: -17.625205993652344
    10. '<|end|>' → logprob: -17.687705993652344

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13556024432182312
    2. ')
' → logprob: -2.1355602741241455
    3. '   ' → logprob: -4.760560035705566
    4. ' )' → logprob: -11.260560035705566
    5. ' )
' → logprob: -12.010560035705566
    6. ')
' → logprob: -12.135560035705566
    7. '),' → logprob: -12.385560035705566
    8. ')

' → logprob: -12.760560035705566
    9. '       ' → logprob: -13.385560035705566
    10. ',' → logprob: -15.010560035705566

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004218554822728038
    2. 'return' → logprob: -7.87542200088501
    3. '    
' → logprob: -10.750421524047852
    4. 'else' → logprob: -11.000421524047852
    5. '
' → logprob: -13.125421524047852
    6. 'elif' → logprob: -14.625421524047852
    7. ' return' → logprob: -15.250421524047852
    8. '        
' → logprob: -15.250421524047852
    9. ' else' → logprob: -15.750421524047852
    10. '```' → logprob: -15.750421524047852

Token 127: ' elif' (ID: 9497)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16989578306674957
    2. 'else' → logprob: -2.044895887374878
    3. '   ' → logprob: -3.669895887374878
    4. ' else' → logprob: -7.669895648956299
    5. 'elif' (adapté à ' elif') → logprob: -7.794895648956299
    6. ' return' → logprob: -8.044896125793457
    7. 'if' → logprob: -8.794896125793457
    8. '(' → logprob: -11.544896125793457
    9. '    
' → logprob: -12.669896125793457
    10. ' ' → logprob: -12.919896125793457

Token 128: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4896012246608734
    2. 'val' → logprob: -1.2396012544631958
    3. ' i' → logprob: -2.7396011352539062
    4. ' val' → logprob: -3.6146011352539062
    5. 'right' → logprob: -5.989601135253906
    6. '   ' → logprob: -6.364601135253906
    7. ' ' → logprob: -7.364601135253906
    8. ' right' → logprob: -7.614601135253906
    9. '0' → logprob: -7.989601135253906
    10. '  ' → logprob: -9.802101135253906

Token 129: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04458983987569809
    2. '<=' → logprob: -3.2945897579193115
    3. ' >' → logprob: -5.169589996337891
    4. '>' → logprob: -7.294589996337891
    5. ' ' → logprob: -9.79458999633789
    6. ' ==' → logprob: -9.91958999633789
    7. '==' → logprob: -10.79458999633789
    8. ' >=' → logprob: -10.79458999633789
    9. ' <' → logprob: -12.16958999633789
    10. '>=' → logprob: -12.66958999633789

Token 130: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014164221473038197
    2. ' right' → logprob: -4.264164447784424
    3. '	right' → logprob: -14.764163970947266
    4. ' ' → logprob: -16.014163970947266
    5. '   ' → logprob: -16.639163970947266
    6. '
' → logprob: -17.139163970947266
    7. '[right' → logprob: -17.514163970947266
    8. '200' → logprob: -17.764163970947266
    9. 'r' → logprob: -17.889163970947266
    10. '(right' → logprob: -18.139163970947266

Token 131: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4885692298412323
    2. ' and' → logprob: -1.6135692596435547
    3. ':
' → logprob: -2.4885692596435547
    4. ':' → logprob: -2.6135692596435547
    5. '   ' → logprob: -3.9885692596435547
    6. 'and' → logprob: -5.238569259643555
    7. ' or' → logprob: -5.738569259643555
    8. '       ' → logprob: -6.113569259643555
    9. ' ,' → logprob: -7.488569259643555
    10. '):
' → logprob: -7.613569259643555

Token 132: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.12249075621366501
    2. ' val' → logprob: -2.247490644454956
    3. 'right' → logprob: -5.997490882873535
    4. 'i' → logprob: -6.122490882873535
    5. '   ' → logprob: -6.122490882873535
    6. 'l' → logprob: -7.372490882873535
    7. ' i' → logprob: -7.372490882873535
    8. ' right' → logprob: -7.747490882873535
    9. ' ' → logprob: -8.247490882873535
    10. '	val' → logprob: -8.497490882873535

Token 133: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.08338703215122223
    2. '!=' → logprob: -2.7083871364593506
    3. ' <' → logprob: -4.7083868980407715
    4. '<' → logprob: -5.9583868980407715
    5. ' ' → logprob: -7.5833868980407715
    6. ' ==' → logprob: -7.9583868980407715
    7. ' <=' → logprob: -8.45838737487793
    8. '   ' → logprob: -8.58338737487793
    9. '==' → logprob: -9.08338737487793
    10. ',' → logprob: -9.83338737487793

Token 134: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.05489085614681244
    2. ' ' → logprob: -2.9298908710479736
    3. '   ' → logprob: -12.679890632629395
    4. '  ' → logprob: -13.429890632629395
    5. 'right' → logprob: -13.929890632629395
    6. '199' → logprob: -14.554890632629395
    7. '0' → logprob: -14.804890632629395
    8. 'val' → logprob: -14.929890632629395
    9. '-' → logprob: -14.929890632629395
    10. '100' → logprob: -15.054890632629395

Token 135: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.0004903609515167773
    2. ' ' → logprob: -7.625490188598633
    3. '   ' → logprob: -14.250490188598633
    4. 'right' → logprob: -15.000490188598633
    5. '0' → logprob: -15.250490188598633
    6. '199' → logprob: -15.250490188598633
    7. '100' → logprob: -15.500490188598633
    8. '-' → logprob: -15.750490188598633
    9. '  ' → logprob: -15.875490188598633
    10. '20' → logprob: -16.875490188598633

Token 136: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -7.421908958349377e-05
    2. '00' → logprob: -10.12507438659668
    3. ' ' → logprob: -11.00007438659668
    4. '0' → logprob: -11.50007438659668
    5. '200' → logprob: -13.50007438659668
    6. '   ' → logprob: -13.87507438659668
    7. '```' → logprob: -13.87507438659668
    8. ',' → logprob: -14.00007438659668
    9. '
' → logprob: -14.56257438659668
    10. '{' → logprob: -14.62507438659668

Token 137: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17225298285484314
    2. ':' → logprob: -1.9222530126571655
    3. '       ' → logprob: -5.172253131866455
    4. '):
' → logprob: -5.672253131866455
    5. ',' → logprob: -6.547253131866455
    6. '   ' → logprob: -7.172253131866455
    7. ':return' → logprob: -8.047252655029297
    8. ' and' → logprob: -9.797252655029297
    9. ':
' → logprob: -9.797252655029297
    10. ':

' → logprob: -9.922252655029297

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5009419918060303
    2. '   ' → logprob: -1.1259419918060303
    3. ' (' → logprob: -2.8759419918060303
    4. '(' → logprob: -5.375942230224609
    5. ':
' → logprob: -5.375942230224609
    6. 'return' → logprob: -6.500942230224609
    7. ' return' → logprob: -6.625942230224609
    8. ',' → logprob: -8.00094223022461
    9. '
' → logprob: -8.50094223022461
    10. '           ' → logprob: -8.87594223022461

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21156616508960724
    2. '   ' → logprob: -2.086566209793091
    3. ' return' → logprob: -2.711566209793091
    4. '       ' → logprob: -9.711565971374512
    5. '(' → logprob: -10.461565971374512
    6. ' (' → logprob: -11.211565971374512
    7. 'right' → logprob: -11.711565971374512
    8. '
' → logprob: -12.086565971374512
    9. '(return' → logprob: -12.086565971374512
    10. '	return' → logprob: -12.211565971374512

Token 140: ' (' (ID: 350)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.08922144770622253
    2. ' (' → logprob: -2.464221477508545
    3. '   ' → logprob: -8.714221000671387
    4. 'right' → logprob: -9.589221000671387
    5. ' ' → logprob: -11.339221000671387
    6. '[right' → logprob: -11.464221000671387
    7. ' right' → logprob: -11.589221000671387
    8. '(acc' → logprob: -12.214221000671387
    9. '  ' → logprob: -13.089221000671387
    10. '(' → logprob: -13.214221000671387

Token 141: 'min' (ID: 1493)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.013717379420995712
    2. '(right' → logprob: -4.638717174530029
    3. ' right' → logprob: -6.138717174530029
    4. 'max' → logprob: -6.513717174530029
    5. '(max' → logprob: -9.388717651367188
    6. 'val' → logprob: -9.388717651367188
    7. 'min' → logprob: -9.638717651367188
    8. ' max' → logprob: -10.513717651367188
    9. '   ' → logprob: -11.513717651367188
    10. '(min' → logprob: -11.763717651367188

Token 142: '(val' (ID: 17391)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -4.7994282795116305e-05
    2. 'right' → logprob: -10.12504768371582
    3. '(' → logprob: -13.00004768371582
    4. '(val' → logprob: -13.00004768371582
    5. ')' → logprob: -14.12504768371582
    6. '(left' → logprob: -14.37504768371582
    7. '((' → logprob: -15.00004768371582
    8. '[right' → logprob: -15.00004768371582
    9. ',right' → logprob: -15.37504768371582
    10. '	right' → logprob: -15.62504768371582

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08139020204544067
    2. 'right' → logprob: -2.831390142440796
    3. ',right' → logprob: -4.206390380859375
    4. ' right' → logprob: -6.206390380859375
    5. '(right' → logprob: -6.581390380859375
    6. ' ,' → logprob: -7.956390380859375
    7. '[right' → logprob: -8.706390380859375
    8. ',
' → logprob: -9.206390380859375
    9. 'r' → logprob: -9.206390380859375
    10. '),' → logprob: -10.206390380859375

Token 144: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0031784253660589457
    2. ' right' → logprob: -5.753178596496582
    3. ' ' → logprob: -15.503178596496582
    4. '   ' → logprob: -15.628178596496582
    5. '
' → logprob: -16.003177642822266
    6. '	right' → logprob: -16.503177642822266
    7. ')' → logprob: -16.753177642822266
    8. '[right' → logprob: -17.128177642822266
    9. '(right' → logprob: -17.253177642822266
    10. 'r' → logprob: -17.378177642822266

Token 145: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -2.7729658540920354e-05
    2. ')' → logprob: -11.250027656555176
    3. ' ),' → logprob: -11.250027656555176
    4. ',' → logprob: -13.875027656555176
    5. '   ' → logprob: -15.375027656555176
    6. ' ' → logprob: -15.750027656555176
    7. '))' → logprob: -16.250028610229492
    8. '),
' → logprob: -16.500028610229492
    9. '​' → logprob: -17.250028610229492
    10. ' ' → logprob: -17.500028610229492

Token 146: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.018152866512537003
    2. ' count' → logprob: -4.018152713775635
    3. '   ' → logprob: -13.143153190612793
    4. '       ' → logprob: -14.768153190612793
    5. '	count' → logprob: -15.393153190612793
    6. '(count' → logprob: -15.768153190612793
    7. ' ' → logprob: -16.393152236938477
    8. '           ' → logprob: -16.393152236938477
    9. '
' → logprob: -16.643152236938477
    10. '    ' → logprob: -17.893152236938477

Token 147: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08902475237846375
    2. ')' → logprob: -2.464024782180786
    3. ' +' → logprob: -10.089024543762207
    4. ')
' → logprob: -10.964024543762207
    5. '),' → logprob: -11.589024543762207
    6. '+)' → logprob: -12.089024543762207
    7. ' )' → logprob: -13.089024543762207
    8. '   ' → logprob: -13.214024543762207
    9. ')

' → logprob: -13.339024543762207
    10. '
' → logprob: -13.964024543762207

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08467694371938705
    2. 'else' → logprob: -2.58467698097229
    3. 'return' → logprob: -5.209676742553711
    4. ' else' → logprob: -8.334676742553711
    5. '    
' → logprob: -10.084676742553711
    6. '(' → logprob: -11.459676742553711
    7. ' return' → logprob: -11.959676742553711
    8. '
' → logprob: -12.834676742553711
    9. '       ' → logprob: -13.584676742553711
    10. '        
' → logprob: -13.709676742553711

Token 149: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08340951800346375
    2. 'return' → logprob: -3.208409547805786
    3. '   ' → logprob: -3.333409547805786
    4. ' else' → logprob: -5.583409309387207
    5. 'elif' → logprob: -9.708409309387207
    6. ' return' → logprob: -9.833409309387207
    7. '    
' → logprob: -9.958409309387207
    8. '
' → logprob: -12.583409309387207
    9. '	else' → logprob: -13.083409309387207
    10. '       ' → logprob: -13.458409309387207

Token 150: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040922634303569794
    2. '       ' → logprob: -3.6659226417541504
    3. ':
' → logprob: -4.79092264175415
    4. ':' → logprob: -5.66592264175415
    5. ' (' → logprob: -6.54092264175415
    6. ' return' → logprob: -7.04092264175415
    7. 'return' → logprob: -8.540922164916992
    8. '(' → logprob: -9.665922164916992
    9. ' ' → logprob: -10.415922164916992
    10. ':return' → logprob: -10.665922164916992

Token 151: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0700713396072388
    2. '   ' → logprob: -1.4450713396072388
    3. 'return' → logprob: -1.6950713396072388
    4. '(acc' → logprob: -1.9450713396072388
    5. 'acc' → logprob: -3.195071220397949
    6. ' (' → logprob: -3.320071220397949
    7. ' acc' → logprob: -4.195071220397949
    8. '(' → logprob: -6.445071220397949
    9. '       ' → logprob: -7.820071220397949
    10. '(return' → logprob: -8.07007122039795

Token 152: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1143697053194046
    2. 'acc' → logprob: -3.1143696308135986
    3. '(acc' → logprob: -3.2393696308135986
    4. ' return' → logprob: -3.9893696308135986
    5. '   ' → logprob: -6.239369869232178
    6. ' (' → logprob: -6.614369869232178
    7. '(right' → logprob: -6.989369869232178
    8. 'right' → logprob: -7.614369869232178
    9. '(' → logprob: -7.614369869232178
    10. ' acc' → logprob: -7.739369869232178

Token 153: ' (' (ID: 350)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.7070164084434509
    2. '(acc' → logprob: -1.0820164680480957
    3. ' (' → logprob: -2.4570164680480957
    4. 'acc' → logprob: -2.5820164680480957
    5. ' acc' → logprob: -5.582016468048096
    6. '(r' → logprob: -6.832016468048096
    7. 'right' → logprob: -6.957016468048096
    8. ' right' → logprob: -8.207015991210938
    9. '   ' → logprob: -8.332015991210938
    10. '(' → logprob: -9.582015991210938

Token 154: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.04109266772866249
    2. '(right' → logprob: -3.66609263420105
    3. 'acc' → logprob: -4.541092872619629
    4. ' right' → logprob: -6.041092872619629
    5. '(acc' → logprob: -6.916092872619629
    6. '(' → logprob: -7.916092872619629
    7. '(-' → logprob: -9.166092872619629
    8. '   ' → logprob: -10.291092872619629
    9. ' acc' → logprob: -10.291092872619629
    10. 'val' → logprob: -10.791092872619629

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010473522706888616
    2. ',count' → logprob: -9.250104904174805
    3. ' ,' → logprob: -12.125104904174805
    4. 'count' → logprob: -12.750104904174805
    5. ',
' → logprob: -16.125104904174805
    6. '   ' → logprob: -16.875104904174805
    7. ' count' → logprob: -18.375104904174805
    8. ',

' → logprob: -18.500104904174805
    9. ',int' → logprob: -18.500104904174805
    10. ',n' → logprob: -18.750104904174805

Token 156: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.008615042082965374
    2. ' count' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.383615493774414
    4. '       ' → logprob: -16.008615493774414
    5. ' ' → logprob: -16.133615493774414
    6. '	count' → logprob: -17.508615493774414
    7. '    ' → logprob: -18.258615493774414
    8. '     ' → logprob: -18.508615493774414
    9. '
' → logprob: -19.008615493774414
    10. '0' → logprob: -19.133615493774414

Token 157: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2762428822461516e-05
    2. ')
' → logprob: -10.375052452087402
    3. '   ' → logprob: -11.125052452087402
    4. ')return' → logprob: -12.500052452087402
    5. ' )' → logprob: -13.500052452087402
    6. ')

' → logprob: -14.750052452087402
    7. ')}' → logprob: -15.250052452087402
    8. '}' → logprob: -15.500052452087402
    9. '))' → logprob: -16.00005340576172
    10. '<|end|>' → logprob: -16.12505340576172

Token 158: 'final' (ID: 17196)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14928796887397766
    2. 'reduce' → logprob: -2.0242879390716553
    3. 'from' → logprob: -5.399288177490234
    4. ')' → logprob: -6.649288177490234
    5. ' for' → logprob: -8.024288177490234
    6. 'enumer' → logprob: -8.649288177490234
    7. 'result' → logprob: -9.149288177490234
    8. '```' → logprob: -10.274288177490234
    9. 'print' → logprob: -10.649288177490234
    10. ' reduce' → logprob: -10.649288177490234

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06903153657913208
    2. '_' → logprob: -3.6940314769744873
    3. '_result' → logprob: -4.069031715393066
    4. '=' → logprob: -4.444031715393066
    5. '_count' → logprob: -4.569031715393066
    6. '_acc' → logprob: -6.444031715393066
    7. 'result' → logprob: -8.444031715393066
    8. 'count' → logprob: -8.444031715393066
    9. '_val' → logprob: -9.319031715393066
    10. '_right' → logprob: -9.569031715393066

Token 160: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0015907963970676064
    2. ' reduce' → logprob: -6.501590728759766
    3. 'list' → logprob: -9.376590728759766
    4. ' list' → logprob: -13.501590728759766
    5. ' ' → logprob: -14.126590728759766
    6. 're' → logprob: -14.251590728759766
    7. '   ' → logprob: -14.626590728759766
    8. 'redu' → logprob: -15.501590728759766
    9. '(re' → logprob: -16.501590728759766
    10. 'fold' → logprob: -17.001590728759766

Token 161: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.014684110297821e-06
    2. 'chooser' → logprob: -11.875008583068848
    3. '(lambda' → logprob: -13.375008583068848
    4. '   ' → logprob: -15.875008583068848
    5. ' chooser' → logprob: -16.375009536743164
    6. '(
' → logprob: -16.625009536743164
    7. ' (' → logprob: -17.125009536743164
    8. '```' → logprob: -17.250009536743164
    9. 'Chooser' → logprob: -17.750009536743164
    10. '((' → logprob: -17.875009536743164

Token 162: 'chooser' (ID: 140811)
  Prédit: 'chooser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chooser' → logprob: -6.432518421206623e-05
    2. ' chooser' → logprob: -10.2500638961792
    3. 'cho' → logprob: -10.5000638961792
    4. '   ' → logprob: -13.8750638961792
    5. 'Chooser' → logprob: -15.6250638961792
    6. 'choose' → logprob: -17.000064849853516
    7. 'changer' → logprob: -17.500064849853516
    8. '```' → logprob: -17.625064849853516
    9. '
' → logprob: -18.000064849853516
    10. 'chos' → logprob: -18.125064849853516

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011188744247192517
    2. ' ,' → logprob: -9.25011157989502
    3. 'enumer' → logprob: -11.12511157989502
    4. ',en' → logprob: -14.00011157989502
    5. '(en' → logprob: -16.250112533569336
    6. ',l' → logprob: -17.125112533569336
    7. ',list' → logprob: -17.875112533569336
    8. ',
' → logprob: -18.000112533569336
    9. '```' → logprob: -18.125112533569336
    10. 'en' → logprob: -18.375112533569336

Token 164: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.07001357525587082
    2. ' enumerate' → logprob: -2.6950135231018066
    3. 'list' → logprob: -9.570013999938965
    4. ' list' → logprob: -12.195013999938965
    5. 'en' → logprob: -14.195013999938965
    6. '(en' → logprob: -14.320013999938965
    7. ' ' → logprob: -14.695013999938965
    8. ' enumer' → logprob: -15.820013999938965
    9. 'enum' → logprob: -15.820013999938965
    10. 'Enumer' → logprob: -15.945013999938965

Token 165: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.0280383548888494e-06
    2. '(n' → logprob: -14.500000953674316
    3. '(' → logprob: -15.500000953674316
    4. 'l' → logprob: -15.750000953674316
    5. '(s' → logprob: -18.250001907348633
    6. '(range' → logprob: -18.250001907348633
    7. ',l' → logprob: -18.375001907348633
    8. ')' → logprob: -19.000001907348633
    9. '((' → logprob: -19.000001907348633
    10. '	l' → logprob: -19.250001907348633

Token 166: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.003623000578954816
    2. ',' → logprob: -5.628623008728027
    3. ')' → logprob: -11.753623008728027
    4. ',),' → logprob: -12.253623008728027
    5. '),(' → logprob: -12.253623008728027
    6. ' ),' → logprob: -12.378623008728027
    7. ',l' → logprob: -14.878623008728027
    8. ' ,' → logprob: -15.253623008728027
    9. '   ' → logprob: -16.00362205505371
    10. ' ' → logprob: -16.00362205505371

Token 167: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0036743057426065207
    2. '(' → logprob: -5.753674507141113
    3. '(right' → logprob: -7.628674507141113
    4. ' (-' → logprob: -12.253674507141113
    5. 'right' → logprob: -12.628674507141113
    6. '   ' → logprob: -14.003674507141113
    7. ' ' → logprob: -15.253674507141113
    8. ' (' → logprob: -15.253674507141113
    9. '((-' → logprob: -15.253674507141113
    10. '[-' → logprob: -16.253673553466797

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. '2' → logprob: -12.375008583068848
    3. '200' → logprob: -13.125008583068848
    4. ' ' → logprob: -13.375008583068848
    5. '   ' → logprob: -16.06250762939453
    6. 'right' → logprob: -16.50000762939453
    7. '100' → logprob: -16.81250762939453
    8. '  ' → logprob: -17.25000762939453
    9. '10' → logprob: -17.43750762939453
    10. '-' → logprob: -17.50000762939453

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004927450208924711
    2. '0' → logprob: -7.625492572784424
    3. ' ,' → logprob: -12.500493049621582
    4. ',
' → logprob: -14.375493049621582
    5. ' ' → logprob: -15.500493049621582
    6. '```' → logprob: -17.125492095947266
    7. '<|end|>' → logprob: -18.125492095947266
    8. '00' → logprob: -18.500492095947266
    9. ')' → logprob: -18.687992095947266
    10. '1' → logprob: -18.687992095947266

Token 170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009118211455643177
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.625911712646484
    4. '  ' → logprob: -16.625911712646484
    5. ')' → logprob: -17.875911712646484
    6. '۰' → logprob: -18.250911712646484
    7. '00' → logprob: -18.500911712646484
    8. '    ' → logprob: -18.625911712646484
    9. '1' → logprob: -19.000911712646484
    10. '000' → logprob: -19.125911712646484

Token 171: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20141586661338806
    2. ')' → logprob: -1.7014158964157104
    3. ')
' → logprob: -13.951416015625
    4. ')))' → logprob: -14.201416015625
    5. '))
' → logprob: -14.326416015625
    6. '),' → logprob: -15.701416015625
    7. '));' → logprob: -16.201416015625
    8. ' )' → logprob: -17.201416015625
    9. ' ))' → logprob: -17.201416015625
    10. ').' → logprob: -17.576416015625

Token 172: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. 'final' → logprob: -14.250001907348633
    3. '```' → logprob: -14.500001907348633
    4. '
' → logprob: -14.750001907348633
    5. ' print' → logprob: -16.750001907348633
    6. 'count' → logprob: -16.750001907348633
    7. 'for' → logprob: -17.125001907348633
    8. ')' → logprob: -18.125001907348633
    9. '#print' → logprob: -18.500001907348633
    10. 'result' → logprob: -19.000001907348633

Token 173: '(item' (ID: 10016)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(final' → logprob: -9.090760431718081e-05
    2. '(' → logprob: -10.000090599060059
    3. 'final' → logprob: -10.000090599060059
    4. '(
' → logprob: -17.750091552734375
    5. ' final' → logprob: -18.750091552734375
    6. '((' → logprob: -18.875091552734375
    7. '(f' → logprob: -19.000091552734375
    8. '(`' → logprob: -19.250091552734375
    9. ' (' → logprob: -19.375091552734375
    10. '(*' → logprob: -19.875091552734375

Token 174: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -1.2664456789934775e-06
    2. 'get' → logprob: -13.625000953674316
    3. 'final' → logprob: -18.625001907348633
    4. 'Getter' → logprob: -18.625001907348633
    5. 'got' → logprob: -18.750001907348633
    6. 'getitem' → logprob: -18.750001907348633
    7. '  ' → logprob: -19.625001907348633
    8. ' getter' → logprob: -20.625001907348633
    9. 'setter' → logprob: -20.625001907348633
    10. ' ' → logprob: -20.750001907348633

Token 175: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007051491178572178
    2. '1' → logprob: -5.007051467895508
    3. '(-' → logprob: -8.007051467895508
    4. '```' → logprob: -14.257051467895508
    5. '
' → logprob: -14.382051467895508
    6. '-' → logprob: -15.382051467895508
    7. 'final' → logprob: -15.507051467895508
    8. '

' → logprob: -15.507051467895508
    9. '(
' → logprob: -15.507051467895508
    10. '`' → logprob: -15.757051467895508

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.747814349073451e-05
    2. '-' → logprob: -11.500017166137695
    3. '0' → logprob: -12.875017166137695
    4. '(' → logprob: -13.500017166137695
    5. '```' → logprob: -13.750017166137695
    6. '
' → logprob: -13.875017166137695
    7. '

' → logprob: -15.000017166137695
    8. '``' → logprob: -15.250017166137695
    9. '[' → logprob: -16.000017166137695
    10. '
' → logprob: -16.125017166137695

Token 177: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.007834573276340961
    2. ')' → logprob: -4.882834434509277
    3. '(final' → logprob: -8.632834434509277
    4. 'final' → logprob: -11.007834434509277
    5. '))' → logprob: -11.507834434509277
    6. ')((' → logprob: -11.507834434509277
    7. ')(
' → logprob: -12.382834434509277
    8. '))(' → logprob: -13.507834434509277
    9. ' )(' → logprob: -13.632834434509277
    10. ' final' → logprob: -13.632834434509277

Token 178: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -5.200166469876422e-06
    2. ' final' → logprob: -12.250004768371582
    3. '(final' → logprob: -14.750004768371582
    4. ')' → logprob: -22.0000057220459
    5. '.final' → logprob: -22.1250057220459
    6. '))' → logprob: -22.5000057220459
    7. '
' → logprob: -22.7500057220459
    8. '	final' → logprob: -23.2500057220459
    9. '_final' → logprob: -23.5000057220459
    10. 'Final' → logprob: -23.7500057220459

Token 179: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0052386182360351086
    2. ')' → logprob: -5.2552385330200195
    3. ')))' → logprob: -12.50523853302002
    4. '))
' → logprob: -14.00523853302002
    5. '),' → logprob: -15.88023853302002
    6. ' ))' → logprob: -16.755239486694336
    7. '()))' → logprob: -16.755239486694336
    8. ')
' → logprob: -17.755239486694336
    9. '})' → logprob: -18.005239486694336
    10. '])' → logprob: -18.130239486694336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 177
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 147
Précision stricte (1ère position): 44.63%
Précision adaptée (1ère position): 46.89%
Précision (top 10): 83.05%
================================================================================
