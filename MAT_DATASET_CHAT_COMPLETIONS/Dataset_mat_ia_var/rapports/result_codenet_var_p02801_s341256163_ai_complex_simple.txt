================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

c = __import__('functools').reduce(lambda a, _: a, iter([input()]), None)
code = list(map(ord, c))
inc = list(map(lambda x: x+1, code))
ans = reduce(add, map(chr, inc))
print(''.join([*ans]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.1991090178489685
    2. 'partial' → logprob: -1.9491090774536133
    3. 'reduce' → logprob: -3.4491090774536133
    4. 'l' → logprob: -5.699109077453613
    5. ' wraps' → logprob: -6.199109077453613
    6. 'cached' → logprob: -7.574109077453613
    7. 'cache' → logprob: -8.824109077453613
    8. 'cmp' → logprob: -9.074109077453613
    9. '```' → logprob: -9.449109077453613
    10. '`' → logprob: -9.824109077453613

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020809410139918327
    2. '.' → logprob: -4.520809173583984
    3. '(lambda' → logprob: -4.895809173583984
    4. ' (' → logprob: -7.020809173583984
    5. ',' → logprob: -7.770809173583984
    6. '```' → logprob: -8.020809173583984
    7. '\' → logprob: -9.020809173583984
    8. ''' → logprob: -9.645809173583984
    9. '(
' → logprob: -9.895809173583984
    10. '`' → logprob: -10.020809173583984

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.40235817432403564
    2. ' operator' → logprob: -2.027358055114746
    3. ' itertools' → logprob: -2.277358055114746
    4. ' collections' → logprob: -2.527358055114746
    5. ' os' → logprob: -4.152358055114746
    6. 'operator' → logprob: -7.277358055114746
    7. 'math' → logprob: -8.027358055114746
    8. ' sys' → logprob: -8.902358055114746
    9. 'collections' → logprob: -9.027358055114746
    10. ' ' → logprob: -9.527358055114746

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.018911276012659073
    2. 'import' → logprob: -4.143911361694336
    3. ' ' → logprob: -6.393911361694336
    4. '.' → logprob: -6.768911361694336
    5. ' .' → logprob: -10.768911361694336
    6. '	import' → logprob: -11.393911361694336
    7. '.import' → logprob: -12.268911361694336
    8. '<|end|>' → logprob: -12.393911361694336
    9. ' ' → logprob: -13.393911361694336
    10. '_import' → logprob: -13.768911361694336

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.11154454201459885
    2. ' import' → logprob: -2.486544609069824
    3. 'add' → logprob: -4.486544609069824
    4. ' mul' → logprob: -4.861544609069824
    5. ' ' → logprob: -6.361544609069824
    6. 'import' → logprob: -7.111544609069824
    7. ' item' → logprob: -7.986544609069824
    8. 'mul' → logprob: -8.111544609069824
    9. ' icon' → logprob: -10.611544609069824
    10. 'item' → logprob: -10.736544609069824

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0797559842467308
    2. '(
' → logprob: -3.204756021499634
    3. '\' → logprob: -3.954756021499634
    4. '\n' → logprob: -4.579755783081055
    5. ',' → logprob: -6.579755783081055
    6. '\(' → logprob: -7.204755783081055
    7. '(

' → logprob: -7.329755783081055
    8. '
' → logprob: -7.704755783081055
    9. 'def' → logprob: -7.704755783081055
    10. '#' → logprob: -7.954755783081055

Token 10: 'c' (ID: 66)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03677820786833763
    2. '(
' → logprob: -4.161777973175049
    3. '#' → logprob: -5.161777973175049
    4. ',' → logprob: -5.411777973175049
    5. '\' → logprob: -5.536777973175049
    6. 'def' → logprob: -6.161777973175049
    7. 'print' → logprob: -7.411777973175049
    8. 'result' → logprob: -7.536777973175049
    9. '\n' → logprob: -7.536777973175049
    10. '(

' → logprob: -8.036778450012207

Token 11: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.5418187975883484
    2. 'ounter' → logprob: -1.1668188571929932
    3. 'a' → logprob: -3.166818857192993
    4. 'ount' → logprob: -3.541818857192993
    5. 'ol' → logprob: -4.666818618774414
    6. 'u' → logprob: -5.041818618774414
    7. 'l' → logprob: -5.291818618774414
    8. 'c' → logprob: -5.791818618774414
    9. 'ou' → logprob: -6.541818618774414
    10. '```' → logprob: -6.791818618774414

Token 12: ' __' (ID: 2516)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.23753640055656433
    2. '[' → logprob: -1.7375364303588867
    3. ' []' → logprob: -3.8625364303588867
    4. '[]' → logprob: -5.487536430358887
    5. '0' → logprob: -6.112536430358887
    6. ' ' → logprob: -6.112536430358887
    7. ' ['' → logprob: -7.362536430358887
    8. ' map' → logprob: -7.737536430358887
    9. ' Counter' → logprob: -7.862536430358887
    10. '['' → logprob: -7.987536430358887

Token 13: 'import' (ID: 561)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.202039361000061
    2. '[]' → logprob: -1.702039361000061
    3. 'list' → logprob: -2.0770392417907715
    4. 'range' → logprob: -2.7020392417907715
    5. 'c' → logprob: -2.9520392417907715
    6. '1' → logprob: -3.4520392417907715
    7. '0' → logprob: -3.5770392417907715
    8. 'map' → logprob: -3.7020392417907715
    9. 'reduce' → logprob: -3.7020392417907715
    10. 'sum' → logprob: -3.7020392417907715

Token 14: '__('' (ID: 54460)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004507138859480619
    2. '('' → logprob: -5.754507064819336
    3. '__('' → logprob: -7.879507064819336
    4. '("("' → logprob: -8.504507064819336
    5. '("' → logprob: -8.754507064819336
    6. '__(' → logprob: -8.879507064819336
    7. ' (' → logprob: -9.004507064819336
    8. '_' → logprob: -9.629507064819336
    9. '_(' → logprob: -9.629507064819336
    10. '__("' → logprob: -9.879507064819336

Token 15: 'fun' (ID: 18142)
  Prédit: 'fun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.16519533097743988
    2. 'operator' → logprob: -2.5401952266693115
    3. 'it' → logprob: -3.1651952266693115
    4. 'collections' → logprob: -4.165195465087891
    5. 'math' → logprob: -4.415195465087891
    6. 'built' → logprob: -5.915195465087891
    7. 'os' → logprob: -8.41519546508789
    8. 'string' → logprob: -9.04019546508789
    9. '__' → logprob: -9.54019546508789
    10. 'cmath' → logprob: -9.66519546508789

Token 16: 'ct' (ID: 308)
  Prédit: 'ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0033017699606716633
    2. 'cts' → logprob: -5.878301620483398
    3. 'tools' → logprob: -8.128301620483398
    4. 'ctors' → logprob: -9.128301620483398
    5. 'ctions' → logprob: -10.128301620483398
    6. 'cto' → logprob: -10.628301620483398
    7. 'c' → logprob: -11.753301620483398
    8. '_ct' → logprob: -11.753301620483398
    9. 'cta' → logprob: -12.253301620483398
    10. 'ctl' → logprob: -13.003301620483398

Token 17: 'ools' (ID: 10710)
  Prédit: 'ools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ools' → logprob: -0.006571126636117697
    2. 'ols' → logprob: -5.881571292877197
    3. 'ool' → logprob: -6.006571292877197
    4. 'o' → logprob: -8.006570816040039
    5. 'ls' → logprob: -8.506570816040039
    6. 'uls' → logprob: -8.506570816040039
    7. '__' → logprob: -9.256570816040039
    8. '```' → logprob: -9.381570816040039
    9. '_' → logprob: -10.506570816040039
    10. '

' → logprob: -10.631570816040039

Token 18: '').' (ID: 3426)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03574041277170181
    2. '').' → logprob: -3.535740375518799
    3. '.')' → logprob: -5.660740375518799
    4. ')' → logprob: -7.160740375518799
    5. '.' → logprob: -7.285740375518799
    6. 'import' → logprob: -8.410740852355957
    7. ').' → logprob: -8.410740852355957
    8. '',' → logprob: -8.785740852355957
    9. '.import' → logprob: -9.285740852355957
    10. ',' → logprob: -10.035740852355957

Token 19: 'reduce' (ID: 49119)
  Prédit: 'reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0015836624661460519
    2. 'partial' → logprob: -6.501583576202393
    3. 'wrap' → logprob: -10.12658405303955
    4. '_reduce' → logprob: -11.25158405303955
    5. 'redu' → logprob: -11.25158405303955
    6. '.reduce' → logprob: -12.12658405303955
    7. ' reduce' → logprob: -12.37658405303955
    8. 'l' → logprob: -13.75158405303955
    9. 'cache' → logprob: -14.00158405303955
    10. 'cached' → logprob: -14.00158405303955

Token 20: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004335410427302122
    2. '.' → logprob: -5.504335403442383
    3. '(
' → logprob: -9.629335403442383
    4. '```' → logprob: -10.129335403442383
    5. '(

' → logprob: -10.629335403442383
    6. '<|end|>' → logprob: -10.754335403442383
    7. ' (' → logprob: -10.754335403442383
    8. ')' → logprob: -10.754335403442383
    9. '(lambda' → logprob: -11.629335403442383
    10. ',' → logprob: -12.129335403442383

Token 21: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07938486337661743
    2. ' x' → logprob: -2.7043848037719727
    3. '<|end|>' → logprob: -5.079384803771973
    4. 'x' → logprob: -6.954384803771973
    5. ' )' → logprob: -7.204384803771973
    6. ' a' → logprob: -7.579384803771973
    7. ')' → logprob: -8.454384803771973
    8. ' ,' → logprob: -8.579384803771973
    9. ' lambda' → logprob: -8.954384803771973
    10. ' i' → logprob: -9.329384803771973

Token 22: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.7581654191017151
    2. ' ' → logprob: -1.0081653594970703
    3. ',' → logprob: -2.6331653594970703
    4. ' a' → logprob: -2.8831653594970703
    5. '<|end|>' → logprob: -4.00816535949707
    6. ' lambda' → logprob: -4.63316535949707
    7. ' x' → logprob: -5.25816535949707
    8. ' c' → logprob: -6.50816535949707
    9. ' b' → logprob: -6.50816535949707
    10. 'a' → logprob: -7.25816535949707

Token 23: ' _:' (ID: 133568)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12089409679174423
    2. 'b' → logprob: -2.245894193649292
    3. ' ' → logprob: -4.870893955230713
    4. ' x' → logprob: -8.995894432067871
    5. '<|end|>' → logprob: -9.120894432067871
    6. ' ' → logprob: -9.745894432067871
    7. 'x' → logprob: -10.870894432067871
    8. ' c' → logprob: -11.370894432067871
    9. ' a' → logprob: -11.370894432067871
    10. 'c' → logprob: -11.995894432067871

Token 24: ' a' (ID: 261)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.037546057254076004
    2. 'add' → logprob: -3.412546157836914
    3. ' a' → logprob: -5.787546157836914
    4. 'a' → logprob: -7.287546157836914
    5. ' ' → logprob: -9.537546157836914
    6. ')add' → logprob: -10.787546157836914
    7. '<|end|>' → logprob: -11.850046157836914
    8. ' ad' → logprob: -11.850046157836914
    9. ')' → logprob: -12.100046157836914
    10. '(add' → logprob: -12.100046157836914

Token 25: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5762171745300293
    2. '+' → logprob: -0.8262171745300293
    3. 'add' → logprob: -8.701217651367188
    4. ' add' → logprob: -9.451217651367188
    5. ' plus' → logprob: -11.576217651367188
    6. '+a' → logprob: -13.076217651367188
    7. ' ' → logprob: -13.201217651367188
    8. 'plus' → logprob: -13.326217651367188
    9. '+,' → logprob: -13.326217651367188
    10. ',' → logprob: -13.326217651367188

Token 26: ' iter' (ID: 10621)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3346312344074249
    2. '[' → logprob: -1.9596312046051025
    3. ' range' → logprob: -2.2096312046051025
    4. 'range' → logprob: -4.334631443023682
    5. ' ' → logprob: -4.459631443023682
    6. ' c' → logprob: -6.209631443023682
    7. '0' → logprob: -6.709631443023682
    8. '1' → logprob: -7.459631443023682
    9. ' [])' → logprob: -7.709631443023682
    10. ' ['' → logprob: -7.709631443023682

Token 27: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05280062556266785
    2. '('' → logprob: -4.30280065536499
    3. '(c' → logprob: -4.67780065536499
    4. '(a' → logprob: -4.92780065536499
    5. '(lambda' → logprob: -5.30280065536499
    6. '(s' → logprob: -5.92780065536499
    7. '((' → logprob: -6.30280065536499
    8. '([' → logprob: -6.42780065536499
    9. ')' → logprob: -6.80280065536499
    10. '(()' → logprob: -6.92780065536499

Token 28: 'input' (ID: 2586)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17024846374988556
    2. '0' → logprob: -2.420248508453369
    3. ' ' → logprob: -2.920248508453369
    4. '10' → logprob: -6.045248508453369
    5. '3' → logprob: -6.295248508453369
    6. '2' → logprob: -6.420248508453369
    7. '5' → logprob: -6.670248508453369
    8. ''' → logprob: -6.920248508453369
    9. '42' → logprob: -7.045248508453369
    10. ''s' → logprob: -7.545248508453369

Token 29: '()' (ID: 416)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.6536989212036133
    2. '(' → logprob: -1.7786989212036133
    3. '('' → logprob: -2.2786989212036133
    4. ',' → logprob: -2.6536989212036133
    5. '()' → logprob: -3.0286989212036133
    6. '()]' → logprob: -3.5286989212036133
    7. '(',' → logprob: -4.028698921203613
    8. '()),' → logprob: -4.153698921203613
    9. '(()' → logprob: -4.903698921203613
    10. '()],' → logprob: -5.278698921203613

Token 30: ']),' (ID: 19560)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34322941303253174
    2. '(),' → logprob: -1.5932294130325317
    3. '),' → logprob: -3.718229293823242
    4. '()),' → logprob: -3.968229293823242
    5. '()' → logprob: -4.093229293823242
    6. '',' → logprob: -5.593229293823242
    7. ']),' → logprob: -5.593229293823242
    8. '()]' → logprob: -5.718229293823242
    9. '())' → logprob: -6.093229293823242
    10. '(',' → logprob: -6.093229293823242

Token 31: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9081812500953674
    2. ' ' → logprob: -0.9081812500953674
    3. ' None' → logprob: -2.1581811904907227
    4. ' lambda' → logprob: -3.6581811904907227
    5. 'None' → logprob: -4.158181190490723
    6. '1' → logprob: -5.158181190490723
    7. 'lambda' → logprob: -5.658181190490723
    8. ')' → logprob: -5.783181190490723
    9. ' int' → logprob: -5.908181190490723
    10. ' add' → logprob: -5.908181190490723

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012659442145377398
    2. ',' → logprob: -7.251266002655029
    3. ' )' → logprob: -7.751266002655029
    4. '))' → logprob: -9.501265525817871
    5. ')
' → logprob: -11.126265525817871
    6. '),' → logprob: -11.501265525817871
    7. ' ' → logprob: -12.376265525817871
    8. ',)' → logprob: -12.751265525817871
    9. '`)' → logprob: -13.126265525817871
    10. ')))' → logprob: -13.626265525817871

Token 33: 'code' (ID: 3056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016893882304430008
    2. ')' → logprob: -4.8918938636779785
    3. '(
' → logprob: -5.5168938636779785
    4. ',' → logprob: -6.0168938636779785
    5. '(lambda' → logprob: -7.5168938636779785
    6. ' ' → logprob: -8.141894340515137
    7. '.' → logprob: -8.141894340515137
    8. ' (' → logprob: -8.141894340515137
    9. '('' → logprob: -8.266894340515137
    10. '[' → logprob: -8.516894340515137

Token 34: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16241520643234253
    2. ')' → logprob: -2.5374152660369873
    3. '.' → logprob: -3.1624152660369873
    4. ' ' → logprob: -5.037415027618408
    5. ' (' → logprob: -5.287415027618408
    6. '('' → logprob: -5.912415027618408
    7. '(
' → logprob: -6.037415027618408
    8. 'c' → logprob: -6.037415027618408
    9. '[' → logprob: -6.412415027618408
    10. '_' → logprob: -6.412415027618408

Token 35: ' list' (ID: 1562)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.787559986114502
    2. ' input' → logprob: -2.037559986114502
    3. ' []' → logprob: -2.912559986114502
    4. ' '' → logprob: -3.037559986114502
    5. 'input' → logprob: -3.037559986114502
    6. ''' → logprob: -3.287559986114502
    7. 'c' → logprob: -3.537559986114502
    8. '"' → logprob: -3.537559986114502
    9. ' __' → logprob: -3.537559986114502
    10. ' "' → logprob: -3.537559986114502

Token 36: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005038894712924957
    2. '(code' → logprob: -6.005038738250732
    3. '('' → logprob: -6.255038738250732
    4. '(
' → logprob: -9.25503921508789
    5. ' (' → logprob: -9.50503921508789
    6. '(range' → logprob: -9.63003921508789
    7. '<|end|>' → logprob: -10.38003921508789
    8. '((' → logprob: -10.50503921508789
    9. '("("' → logprob: -10.50503921508789
    10. '(open' → logprob: -10.88003921508789

Token 37: '(ord' (ID: 199585)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6141954660415649
    2. '(str' → logprob: -1.614195466041565
    3. '(lambda' → logprob: -1.864195466041565
    4. '(' → logprob: -3.3641953468322754
    5. '(input' → logprob: -3.4891953468322754
    6. '(add' → logprob: -4.614195346832275
    7. '(ord' → logprob: -4.864195346832275
    8. '(eval' → logprob: -5.114195346832275
    9. 'str' → logprob: -5.239195346832275
    10. 'int' → logprob: -5.489195346832275

Token 38: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5958256125450134
    2. '(' → logprob: -0.8458256125450134
    3. '(code' → logprob: -5.720825672149658
    4. ')' → logprob: -5.970825672149658
    5. ',' → logprob: -6.470825672149658
    6. '))' → logprob: -6.595825672149658
    7. '(c' → logprob: -6.720825672149658
    8. ',input' → logprob: -6.845825672149658
    9. '('' → logprob: -6.970825672149658
    10. '(s' → logprob: -7.095825672149658

Token 39: ' c' (ID: 274)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7262012362480164
    2. 'input' → logprob: -0.8512012362480164
    3. ' c' → logprob: -3.601201295852661
    4. ' '' → logprob: -4.476201057434082
    5. 'c' → logprob: -4.476201057434082
    6. ''' → logprob: -4.726201057434082
    7. '"' → logprob: -4.976201057434082
    8. '(input' → logprob: -5.351201057434082
    9. ')' → logprob: -5.476201057434082
    10. ''s' → logprob: -5.976201057434082

Token 40: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004069259390234947
    2. ')' → logprob: -5.6290693283081055
    3. '[' → logprob: -8.504069328308105
    4. ' ))' → logprob: -9.254069328308105
    5. ')))' → logprob: -9.504069328308105
    6. '))
' → logprob: -10.379069328308105
    7. '),' → logprob: -11.129069328308105
    8. '()))' → logprob: -11.379069328308105
    9. ''))' → logprob: -11.379069328308105
    10. ' ' → logprob: -13.004069328308105

Token 41: 'inc' (ID: 2768)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2905305325984955
    2. '(' → logprob: -1.7905305624008179
    3. '[' → logprob: -2.5405304431915283
    4. '(
' → logprob: -6.165530681610107
    5. ')
' → logprob: -7.415530681610107
    6. ' ' → logprob: -7.790530681610107
    7. '('' → logprob: -7.915530681610107
    8. ' )' → logprob: -8.29053020477295
    9. '[
' → logprob: -8.29053020477295
    10. '())' → logprob: -8.41553020477295

Token 42: ' =' (ID: 314)
  Prédit: 'rement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rement' → logprob: -0.03024723008275032
    2. '_' → logprob: -4.905247211456299
    3. ' =' → logprob: -4.905247211456299
    4. '=' → logprob: -5.780247211456299
    5. 'lude' → logprob: -6.155247211456299
    6. 're' → logprob: -6.155247211456299
    7. 'r' → logprob: -6.280247211456299
    8. '(' → logprob: -7.280247211456299
    9. '_val' → logprob: -8.030247688293457
    10. '```' → logprob: -8.030247688293457

Token 43: ' list' (ID: 1562)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.40648242831230164
    2. 'lambda' → logprob: -2.156482458114624
    3. '[' → logprob: -2.406482458114624
    4. ' ' → logprob: -3.031482458114624
    5. ' lambda' → logprob: -3.406482458114624
    6. 'list' → logprob: -4.656482219696045
    7. '0' → logprob: -4.906482219696045
    8. 'code' → logprob: -5.031482219696045
    9. ' [' → logprob: -5.156482219696045
    10. '(lambda' → logprob: -5.656482219696045

Token 44: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8539788722991943
    2. '(map' → logprob: -0.8539788722991943
    3. '(range' → logprob: -2.6039788722991943
    4. '(lambda' → logprob: -2.7289788722991943
    5. '(add' → logprob: -5.478979110717773
    6. '(filter' → logprob: -6.978979110717773
    7. '(+' → logprob: -6.978979110717773
    8. '((' → logprob: -7.353979110717773
    9. '(operator' → logprob: -7.478979110717773
    10. '(int' → logprob: -7.853979110717773

Token 45: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.08215959370136261
    2. '(add' → logprob: -2.5821595191955566
    3. '(' → logprob: -6.082159519195557
    4. 'add' → logprob: -7.707159519195557
    5. '(operator' → logprob: -8.207159996032715
    6. 'lambda' → logprob: -9.082159996032715
    7. '(ord' → logprob: -9.457159996032715
    8. '(int' → logprob: -10.082159996032715
    9. '(abs' → logprob: -11.707159996032715
    10. 'operator' → logprob: -12.957159996032715

Token 46: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.40321868658065796
    2. 'x' → logprob: -1.1532187461853027
    3. 'a' → logprob: -5.528218746185303
    4. ' n' → logprob: -5.653218746185303
    5. ' a' → logprob: -6.028218746185303
    6. 'n' → logprob: -6.153218746185303
    7. ' i' → logprob: -6.403218746185303
    8. ' lambda' → logprob: -7.278218746185303
    9. 'lambda' → logprob: -7.653218746185303
    10. 'i' → logprob: -8.528218269348145

Token 47: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006123721599578857
    2. ' :' → logprob: -5.2561235427856445
    3. ':x' → logprob: -7.3811235427856445
    4. 'x' → logprob: -8.506123542785645
    5. ' x' → logprob: -10.256123542785645
    6. ',' → logprob: -11.756123542785645
    7. 's' → logprob: -12.506123542785645
    8. '+' → logprob: -12.756123542785645
    9. ':
' → logprob: -13.131123542785645
    10. 'd' → logprob: -13.631123542785645

Token 48: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3231252431869507
    2. ' x' → logprob: -1.3231252431869507
    3. 'lambda' → logprob: -5.44812536239624
    4. ' lambda' → logprob: -5.94812536239624
    5. '(lambda' → logprob: -6.32312536239624
    6. ' (' → logprob: -7.82312536239624
    7. 'add' → logprob: -8.573124885559082
    8. '(x' → logprob: -8.573124885559082
    9. '(' → logprob: -9.073124885559082
    10. ' add' → logprob: -9.323124885559082

Token 49: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18495365977287292
    2. ' +' → logprob: -1.8099536895751953
    3. ':' → logprob: -5.559953689575195
    4. '+x' → logprob: -7.059953689575195
    5. ' :' → logprob: -8.934953689575195
    6. 'x' → logprob: -9.559953689575195
    7. ' plus' → logprob: -10.059953689575195
    8. 'plus' → logprob: -10.309953689575195
    9. ' x' → logprob: -10.434953689575195
    10. ',' → logprob: -10.559953689575195

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0308424960821867
    2. ' ' → logprob: -3.5308425426483154
    3. '32' → logprob: -7.780842304229736
    4. '2' → logprob: -8.405842781066895
    5. '3' → logprob: -9.280842781066895
    6. '4' → logprob: -10.155842781066895
    7. '5' → logprob: -10.280842781066895
    8. '0' → logprob: -10.405842781066895
    9. '7' → logprob: -10.655842781066895
    10. '  ' → logprob: -10.780842781066895

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001514557225164026
    2. ' ,' → logprob: -9.875151634216309
    3. '(code' → logprob: -10.125151634216309
    4. 'code' → logprob: -10.375151634216309
    5. ',c' → logprob: -11.500151634216309
    6. ')' → logprob: -11.875151634216309
    7. '),' → logprob: -12.750151634216309
    8. ' code' → logprob: -13.375151634216309
    9. '<|end|>' → logprob: -13.625151634216309
    10. '))' → logprob: -13.750151634216309

Token 52: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.07904874533414841
    2. ' code' → logprob: -2.5790486335754395
    3. 'c' → logprob: -10.079049110412598
    4. ' ' → logprob: -10.079049110412598
    5. '[' → logprob: -10.829049110412598
    6. '  ' → logprob: -11.204049110412598
    7. 'range' → logprob: -11.954049110412598
    8. ' c' → logprob: -12.329049110412598
    9. '	code' → logprob: -12.329049110412598
    10. 'cod' → logprob: -12.454049110412598

Token 53: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009619582560844719
    2. ')' → logprob: -7.000961780548096
    3. ')))' → logprob: -10.625962257385254
    4. '))
' → logprob: -11.000962257385254
    5. ' ))' → logprob: -12.000962257385254
    6. '),' → logprob: -13.125962257385254
    7. ' ' → logprob: -15.000962257385254
    8. '()))' → logprob: -15.875962257385254
    9. '));' → logprob: -15.875962257385254
    10. '))

' → logprob: -16.125961303710938

Token 54: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4628448188304901
    2. '<|end|>' → logprob: -1.0878448486328125
    3. '
' → logprob: -3.8378448486328125
    4. '[' → logprob: -5.3378448486328125
    5. 'print' → logprob: -6.3378448486328125
    6. '#' → logprob: -6.3378448486328125
    7. ']' → logprob: -7.0878448486328125
    8. '<|end|>' → logprob: -7.4628448486328125
    9. ' ' → logprob: -7.9628448486328125
    10. '```' → logprob: -8.087844848632812

Token 55: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25240033864974976
    2. ' =' → logprob: -1.5024003982543945
    3. ')' → logprob: -8.502400398254395
    4. 's' → logprob: -9.002400398254395
    5. '_' → logprob: -10.127400398254395
    6. '=[]' → logprob: -11.002400398254395
    7. ' ' → logprob: -11.252400398254395
    8. 'o' → logprob: -11.627400398254395
    9. ',' → logprob: -11.627400398254395
    10. ' ' → logprob: -11.877400398254395

Token 56: ' reduce' (ID: 10389)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7563185691833496
    2. ' list' → logprob: -0.8813185691833496
    3. '''.' → logprob: -3.6313185691833496
    4. ' inc' → logprob: -4.00631856918335
    5. ' ''.' → logprob: -4.00631856918335
    6. 'inc' → logprob: -4.13131856918335
    7. '[' → logprob: -4.25631856918335
    8. ' [' → logprob: -4.75631856918335
    9. 'bytes' → logprob: -5.25631856918335
    10. 'chr' → logprob: -5.75631856918335

Token 57: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.0015597355086356401
    2. '(' → logprob: -7.126559734344482
    3. '(lambda' → logprob: -7.501559734344482
    4. '(operator' → logprob: -8.75156021118164
    5. 'add' → logprob: -10.12656021118164
    6. ' (' → logprob: -13.12656021118164
    7. ' add' → logprob: -14.50156021118164
    8. '```' → logprob: -14.87656021118164
    9. '(+' → logprob: -15.25156021118164
    10. '((' → logprob: -15.37656021118164

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012248503044247627
    2. 'inc' → logprob: -4.887248516082764
    3. ' ,' → logprob: -5.512248516082764
    4. '(' → logprob: -7.762248516082764
    5. ' inc' → logprob: -9.137248039245605
    6. ')' → logprob: -10.762248039245605
    7. ' (' → logprob: -11.262248039245605
    8. ')(' → logprob: -13.012248039245605
    9. ',(' → logprob: -13.137248039245605
    10. '),' → logprob: -13.262248039245605

Token 59: ' map' (ID: 4014)
  Prédit: ' inc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inc' → logprob: -0.42893946170806885
    2. 'inc' → logprob: -1.0539394617080688
    3. ')' → logprob: -9.053939819335938
    4. '[' → logprob: -10.303939819335938
    5. '    ' → logprob: -11.053939819335938
    6. ' ' → logprob: -11.053939819335938
    7. 'inci' → logprob: -11.553939819335938
    8. '(' → logprob: -11.678939819335938
    9. ''inc' → logprob: -11.928939819335938
    10. '.inc' → logprob: -12.053939819335938

Token 60: '(chr' (ID: 185847)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.20040057599544525
    2. '(chr' → logprob: -1.8254005908966064
    3. '(str' → logprob: -4.075400352478027
    4. '(' → logprob: -5.950400352478027
    5. '(int' → logprob: -7.950400352478027
    6. '(ord' → logprob: -8.450400352478027
    7. '(list' → logprob: -9.325400352478027
    8. '(operator' → logprob: -9.325400352478027
    9. 'chr' → logprob: -10.325400352478027
    10. ')' → logprob: -10.950400352478027

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02905457839369774
    2. '(' → logprob: -3.779054641723633
    3. ' ,' → logprob: -5.404054641723633
    4. 'inc' → logprob: -6.904054641723633
    5. '),' → logprob: -9.404054641723633
    6. ' (' → logprob: -9.404054641723633
    7. ')' → logprob: -9.404054641723633
    8. ' inc' → logprob: -10.404054641723633
    9. '   ' → logprob: -13.779054641723633
    10. ',(' → logprob: -13.779054641723633

Token 62: ' inc' (ID: 4570)
  Prédit: 'inc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inc' → logprob: -0.06207691878080368
    2. ' inc' → logprob: -2.8120768070220947
    3. ')' → logprob: -9.937076568603516
    4. '(' → logprob: -10.062076568603516
    5. '_inc' → logprob: -12.562076568603516
    6. ''inc' → logprob: -12.937076568603516
    7. '.inc' → logprob: -13.062076568603516
    8. '-inc' → logprob: -13.687076568603516
    9. '[' → logprob: -13.937076568603516
    10. '/inc' → logprob: -13.937076568603516

Token 63: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010623442940413952
    2. ')))' → logprob: -7.251062393188477
    3. ')' → logprob: -8.751062393188477
    4. '),' → logprob: -9.001062393188477
    5. '))
' → logprob: -10.001062393188477
    6. ' ))' → logprob: -11.126062393188477
    7. '()))' → logprob: -12.376062393188477
    8. '))))' → logprob: -13.251062393188477
    9. '))

' → logprob: -14.001062393188477
    10. '(' → logprob: -14.501062393188477

Token 64: 'print' (ID: 1598)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9068184494972229
    2. ')' → logprob: -1.2818183898925781
    3. 'print' → logprob: -1.6568183898925781
    4. '(print' → logprob: -3.031818389892578
    5. '()' → logprob: -3.531818389892578
    6. '(
' → logprob: -4.406818389892578
    7. '(ans' → logprob: -4.781818389892578
    8. '(len' → logprob: -5.281818389892578
    9. '[' → logprob: -5.906818389892578
    10. '('' → logprob: -6.156818389892578

Token 65: '('' (ID: 706)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.12701429426670074
    2. '(' → logprob: -2.127014398574829
    3. '()' → logprob: -10.37701416015625
    4. 'ans' → logprob: -11.00201416015625
    5. '('' → logprob: -11.37701416015625
    6. '(`' → logprob: -12.00201416015625
    7. ' (' → logprob: -12.12701416015625
    8. '(answer' → logprob: -12.25201416015625
    9. '("("' → logprob: -13.25201416015625
    10. '(eval' → logprob: -13.62701416015625

Token 66: ''.' (ID: 6120)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05828726291656494
    2. '(ans' → logprob: -2.9332871437072754
    3. ')' → logprob: -6.933287143707275
    4. ''' → logprob: -7.183287143707275
    5. ' ans' → logprob: -7.808287143707275
    6. '')' → logprob: -8.058287620544434
    7. '{' → logprob: -9.183287620544434
    8. '	ans' → logprob: -9.683287620544434
    9. 'a' → logprob: -9.933287620544434
    10. '(' → logprob: -9.933287620544434

Token 67: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.006021822802722454
    2. 'format' → logprob: -6.131021976470947
    3. 'print' → logprob: -6.256021976470947
    4. 'encode' → logprob: -7.506021976470947
    5. 'strip' → logprob: -7.881021976470947
    6. 'decode' → logprob: -8.131021499633789
    7. ')' → logprob: -8.756021499633789
    8. 'write' → logprob: -9.256021499633789
    9. 'count' → logprob: -9.881021499633789
    10. 'concat' → logprob: -10.131021499633789

Token 68: '([' (ID: 5194)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.001383570721372962
    2. '(' → logprob: -6.6263837814331055
    3. 'ans' → logprob: -10.126383781433105
    4. '('' → logprob: -12.126383781433105
    5. '(answer' → logprob: -12.751383781433105
    6. ')' → logprob: -13.001383781433105
    7. '(code' → logprob: -13.626383781433105
    8. '	ans' → logprob: -14.001383781433105
    9. '((' → logprob: -14.126383781433105
    10. ' (' → logprob: -14.126383781433105

Token 69: '*' (ID: 9)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.012821227312088013
    2. ' ans' → logprob: -4.637821197509766
    3. 'a' → logprob: -6.762821197509766
    4. 'chr' → logprob: -7.387821197509766
    5. 'c' → logprob: -7.637821197509766
    6. '(ans' → logprob: -8.262821197509766
    7. 'list' → logprob: -9.262821197509766
    8. '	ans' → logprob: -10.137821197509766
    9. '[' → logprob: -10.387821197509766
    10. 'char' → logprob: -10.387821197509766

Token 70: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0006576312007382512
    2. ' ans' → logprob: -7.625657558441162
    3. 'a' → logprob: -9.00065803527832
    4. '(ans' → logprob: -10.50065803527832
    5. '	ans' → logprob: -12.62565803527832
    6. 'code' → logprob: -12.75065803527832
    7. 'answer' → logprob: -13.12565803527832
    8. 'c' → logprob: -13.12565803527832
    9. ' ' → logprob: -13.75065803527832
    10. ')' → logprob: -14.12565803527832

Token 71: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.002165009966120124
    2. '])' → logprob: -6.377164840698242
    3. ')])' → logprob: -8.752164840698242
    4. '))' → logprob: -8.877164840698242
    5. ']' → logprob: -9.627164840698242
    6. ')]' → logprob: -9.877164840698242
    7. ']))
' → logprob: -11.127164840698242
    8. '])))' → logprob: -11.377164840698242
    9. ')))' → logprob: -11.502164840698242
    10. ')' → logprob: -12.127164840698242


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 26.09%
Précision adaptée (1ère position): 26.09%
Précision (top 10): 66.67%
================================================================================
