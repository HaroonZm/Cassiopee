================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import cmath

N = int(input())
XY = []
for _ in range(N):
    x, y = map(int, input().split())
    XY.append(x + y * 1j)

XY2 = []
for z in XY:
    XY2.append(z)
ph = []
for z in XY2:
    ph.append(cmath.phase(z))
tmp = []
for i in range(len(XY2)):
    tmp.append((ph[i], XY2[i]))
tmp.sort()
XY3 = []
for p, z in tmp:
    XY3.append(z)

ans = 0
for i in range(N):
    for j in range(N):
        if i <= j:
            s = 0
            k = i
            while k <= j:
                s += XY3[k]
                k += 1
            if abs(s) > ans:
                ans = abs(s)
        else:
            s = 0
            for k in range(0, j+1):
                s += XY3[k]
            for k in range(i, N):
                s += XY3[k]
            if abs(s) > ans:
                ans = abs(s)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' cm' (ID: 9256)
  → Token d'amorce (pas de prédiction)

Token 2: 'ath' (ID: 725)
  → Token d'amorce (pas de prédiction)

Token 3: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01664806343615055
    2. '\n' → logprob: -5.016648292541504
    3. '\' → logprob: -5.516648292541504
    4. '```' → logprob: -6.266648292541504
    5. '<|end|>' → logprob: -6.266648292541504
    6. 'import' → logprob: -7.266648292541504
    7. 'newline' → logprob: -7.766648292541504
    8. '(' → logprob: -9.141648292541504
    9. '<|end|>' → logprob: -9.141648292541504
    10. 'cmath' → logprob: -9.641648292541504

Token 4: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.047121550887823105
    2. '```' → logprob: -3.672121524810791
    3. '(' → logprob: -5.297121524810791
    4. 'import' → logprob: -5.672121524810791
    5. '\' → logprob: -5.797121524810791
    6. '\n' → logprob: -5.922121524810791
    7. '<|end|>' → logprob: -6.422121524810791
    8. '(
' → logprob: -7.172121524810791
    9. 'def' → logprob: -7.422121524810791
    10. '\(' → logprob: -7.672121524810791

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6023454070091248
    2. '_' → logprob: -1.6023454666137695
    3. '.' → logprob: -2.3523454666137695
    4. ',' → logprob: -2.7273454666137695
    5. '[' → logprob: -3.3523454666137695
    6. '(' → logprob: -4.3523454666137695
    7. ')' → logprob: -4.7273454666137695
    8. 'u' → logprob: -5.3523454666137695
    9. ' =' → logprob: -5.4773454666137695
    10. 'umber' → logprob: -5.6023454666137695

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18949949741363525
    2. '10' → logprob: -2.0644993782043457
    3. '100' → logprob: -4.064499378204346
    4. '5' → logprob: -4.564499378204346
    5. ' int' → logprob: -5.439499378204346
    6. '4' → logprob: -5.564499378204346
    7. 'complex' → logprob: -5.939499378204346
    8. 'int' → logprob: -6.439499378204346
    9. '1' → logprob: -6.439499378204346
    10. '16' → logprob: -6.939499378204346

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -7.76759916334413e-05
    2. '('' → logprob: -10.500077247619629
    3. ' (' → logprob: -10.750077247619629
    4. '(`' → logprob: -11.875077247619629
    5. '```' → logprob: -12.125077247619629
    6. '(N' → logprob: -12.375077247619629
    7. '("("' → logprob: -13.000077247619629
    8. '`' → logprob: -13.250077247619629
    9. ''' → logprob: -13.375077247619629
    10. '()' → logprob: -13.625077247619629

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.039581991732120514
    2. ')' → logprob: -3.4145820140838623
    3. '()' → logprob: -5.289581775665283
    4. '(
' → logprob: -8.164582252502441
    5. '('' → logprob: -8.914582252502441
    6. '())' → logprob: -9.414582252502441
    7. '(

' → logprob: -9.664582252502441
    8. '("("' → logprob: -9.789582252502441
    9. '(""))' → logprob: -10.289582252502441
    10. '("")' → logprob: -10.289582252502441

Token 9: 'XY' (ID: 27825)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.610906720161438
    2. '`' → logprob: -1.985906720161438
    3. 'result' → logprob: -2.1109066009521484
    4. 'for' → logprob: -2.2359066009521484
    5. 'x' → logprob: -2.3609066009521484
    6. 's' → logprob: -2.8609066009521484
    7. 'a' → logprob: -2.9859066009521484
    8. '\n' → logprob: -3.1109066009521484
    9. ''' → logprob: -3.2359066009521484
    10. '\' → logprob: -3.6109066009521484

Token 10: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09238339960575104
    2. '[]' → logprob: -2.71738338470459
    3. '_' → logprob: -4.09238338470459
    4. '[i' → logprob: -6.84238338470459
    5. 's' → logprob: -6.96738338470459
    6. ')' → logprob: -7.59238338470459
    7. '[])' → logprob: -7.96738338470459
    8. '[_' → logprob: -8.09238338470459
    9. '[:]' → logprob: -8.21738338470459
    10. '[][]' → logprob: -8.21738338470459

Token 11: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.724972128868103
    2. ' []' → logprob: -1.349972128868103
    3. '[' → logprob: -1.724972128868103
    4. ' [' → logprob: -3.0999722480773926
    5. '[input' → logprob: -3.9749722480773926
    6. '[list' → logprob: -5.349972248077393
    7. 'list' → logprob: -5.474972248077393
    8. '[int' → logprob: -6.224972248077393
    9. 'input' → logprob: -6.974972248077393
    10. ' list' → logprob: -7.099972248077393

Token 12: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017662165919318795
    2. ' for' → logprob: -6.751766204833984
    3. '[' → logprob: -7.626766204833984
    4. '[]' → logprob: -9.751766204833984
    5. '.' → logprob: -11.001766204833984
    6. '.for' → logprob: -11.376766204833984
    7. '```' → logprob: -12.001766204833984
    8. '<|end|>' → logprob: -12.251766204833984
    9. '[
' → logprob: -13.126766204833984
    10. '	for' → logprob: -13.751766204833984

Token 13: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11409332603216171
    2. ' i' → logprob: -2.36409330368042
    3. '  ' → logprob: -4.86409330368042
    4. ' _' → logprob: -5.36409330368042
    5. '_' → logprob: -7.36409330368042
    6. 'i' → logprob: -7.98909330368042
    7. ' x' → logprob: -8.239093780517578
    8. ' ▁' → logprob: -10.739093780517578
    9. ' ‌' → logprob: -10.989093780517578
    10. ' ' → logprob: -11.114093780517578

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03048950619995594
    2. 'in' → logprob: -3.530489444732666
    3. ' ' → logprob: -7.530489444732666
    4. 'i' → logprob: -9.530489921569824
    5. 'x' → logprob: -10.530489921569824
    6. 'import' → logprob: -11.280489921569824
    7. ' i' → logprob: -11.405489921569824
    8. 'n' → logprob: -11.530489921569824
    9. '  ' → logprob: -11.530489921569824
    10. '	in' → logprob: -11.655489921569824

Token 15: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014173386618494987
    2. ' range' → logprob: -4.26417350769043
    3. '(range' → logprob: -13.01417350769043
    4. '	range' → logprob: -13.38917350769043
    5. 'rang' → logprob: -14.01417350769043
    6. '[' → logprob: -14.13917350769043
    7. ' xrange' → logprob: -14.38917350769043
    8. 'ran' → logprob: -14.38917350769043
    9. 'Range' → logprob: -14.88917350769043
    10. 'input' → logprob: -15.01417350769043

Token 16: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2256237268447876
    2. ' (' → logprob: -1.6006237268447876
    3. '(N' → logprob: -9.850624084472656
    4. '(int' → logprob: -10.100624084472656
    5. '(range' → logprob: -10.225624084472656
    6. '(
' → logprob: -10.975624084472656
    7. ' ' → logprob: -11.100624084472656
    8. '(n' → logprob: -11.100624084472656
    9. '(len' → logprob: -11.725624084472656
    10. ' (
' → logprob: -11.725624084472656

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12765611708164215
    2. ')' → logprob: -2.1276562213897705
    3. '):
' → logprob: -7.752655982971191
    4. ' ):' → logprob: -8.877655982971191
    5. '+' → logprob: -9.627655982971191
    6. ' )' → logprob: -10.127655982971191
    7. ':' → logprob: -10.502655982971191
    8. ' ' → logprob: -12.752655982971191
    9. ',' → logprob: -12.877655982971191
    10. ')**' → logprob: -13.127655982971191

Token 18: '   ' (ID: 271)
  Prédit: ' XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' XY' → logprob: -0.027480611577630043
    2. 'XY' → logprob: -3.9024806022644043
    3. '   ' → logprob: -5.027480602264404
    4. ' xy' → logprob: -9.027481079101562
    5. ' X' → logprob: -10.152481079101562
    6. 'xy' → logprob: -10.277481079101562
    7. ' ' → logprob: -10.402481079101562
    8. ' XYZ' → logprob: -10.402481079101562
    9. '```' → logprob: -10.652481079101562
    10. 'X' → logprob: -11.027481079101562

Token 19: ' x' (ID: 1215)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.15332545340061188
    2. ' XY' → logprob: -2.1533255577087402
    3. 'xy' → logprob: -4.40332555770874
    4. 'x' (adapté à ' x') → logprob: -5.02832555770874
    5. '   ' → logprob: -5.27832555770874
    6. 'X' → logprob: -7.02832555770874
    7. ' xy' → logprob: -7.52832555770874
    8. ' x' → logprob: -8.278325080871582
    9. '```' → logprob: -8.653325080871582
    10. 's' → logprob: -9.403325080871582

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001841060002334416
    2. ',y' → logprob: -6.376841068267822
    3. 'y' → logprob: -9.626840591430664
    4. ' ,' → logprob: -10.126840591430664
    5. ',Y' → logprob: -10.751840591430664
    6. '_,' → logprob: -11.751840591430664
    7. 'Y' → logprob: -14.501840591430664
    8. ',user' → logprob: -15.001840591430664
    9. '‌,' → logprob: -15.251840591430664
    10. ')' → logprob: -15.376840591430664

Token 21: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3871459662914276
    2. 'y' → logprob: -1.13714599609375
    3. '<|end|>' → logprob: -8.63714599609375
    4. ' ' → logprob: -9.38714599609375
    5. '	y' → logprob: -12.26214599609375
    6. '<|end|>' → logprob: -12.38714599609375
    7. '_y' → logprob: -13.51214599609375
    8. 'space' → logprob: -13.63714599609375
    9. ' ' → logprob: -14.51214599609375
    10. 's' → logprob: -15.26214599609375

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896400779485703
    2. '=' → logprob: -2.4639639854431152
    3. ',' → logprob: -11.713964462280273
    4. ' ' → logprob: -12.088964462280273
    5. ')' → logprob: -12.213964462280273
    6. '<|end|>' → logprob: -13.213964462280273
    7. '=input' → logprob: -14.213964462280273
    8. '<|end|>' → logprob: -14.463964462280273
    9. '   ' → logprob: -14.963964462280273
    10. '  ' → logprob: -14.963964462280273

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.012564745731651783
    2. 'map' → logprob: -4.387564659118652
    3. ' input' → logprob: -10.012564659118652
    4. 'input' → logprob: -12.262564659118652
    5. '	map' → logprob: -13.012564659118652
    6. ' list' → logprob: -14.137564659118652
    7. ' ' → logprob: -14.137564659118652
    8. '(map' → logprob: -14.262564659118652
    9. ' complex' → logprob: -15.262564659118652
    10. ' [' → logprob: -15.512564659118652

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0398259162902832
    2. '(' → logprob: -3.289825916290283
    3. '(lambda' → logprob: -7.164825916290283
    4. '(input' → logprob: -8.039825439453125
    5. '(float' → logprob: -8.289825439453125
    6. '<int' → logprob: -9.164825439453125
    7. '(str' → logprob: -9.164825439453125
    8. '<|end|>' → logprob: -9.539825439453125
    9. '[int' → logprob: -10.039825439453125
    10. 'int' → logprob: -10.039825439453125

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2842167913913727
    2. ',input' → logprob: -1.4092167615890503
    3. '(input' → logprob: -6.28421688079834
    4. 'input' → logprob: -7.28421688079834
    5. '(),' → logprob: -8.53421688079834
    6. '(' → logprob: -9.03421688079834
    7. ')' → logprob: -9.65921688079834
    8. '<|end|>' → logprob: -10.28421688079834
    9. ' input' → logprob: -10.65921688079834
    10. ' ,' → logprob: -11.03421688079834

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519439160823822
    2. ' input' → logprob: -1.5019439458847046
    3. ')' → logprob: -11.626943588256836
    4. '=input' → logprob: -13.501943588256836
    5. ',input' → logprob: -13.501943588256836
    6. '	input' → logprob: -13.626943588256836
    7. '(input' → logprob: -14.001943588256836
    8. ' ' → logprob: -15.001943588256836
    9. ' )' → logprob: -15.126943588256836
    10. '))' → logprob: -16.376943588256836

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.4849443838757e-06
    2. '()' → logprob: -12.750004768371582
    3. '.split' → logprob: -15.125004768371582
    4. ' ().' → logprob: -15.250004768371582
    5. 'split' → logprob: -15.375004768371582
    6. ')' → logprob: -15.375004768371582
    7. ').' → logprob: -15.875004768371582
    8. '.' → logprob: -16.375003814697266
    9. '('').' → logprob: -16.375003814697266
    10. ' .' → logprob: -16.750003814697266

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.8087270038668066e-05
    2. 'strip' → logprob: -10.750027656555176
    3. 'rstrip' → logprob: -12.500027656555176
    4. ' split' → logprob: -13.000027656555176
    5. '(split' → logprob: -15.125027656555176
    6. 'spl' → logprob: -15.750027656555176
    7. ')' → logprob: -16.125028610229492
    8. 's' → logprob: -17.375028610229492
    9. '.split' → logprob: -17.750028610229492
    10. '().' → logprob: -18.125028610229492

Token 29: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6334976553916931
    2. '))' → logprob: -1.633497714996338
    3. '()))' → logprob: -1.883497714996338
    4. ')' → logprob: -2.133497714996338
    5. '()' → logprob: -5.758497714996338
    6. '()))
' → logprob: -8.63349723815918
    7. '())
' → logprob: -8.88349723815918
    8. '))
' → logprob: -11.13349723815918
    9. ''))' → logprob: -11.13349723815918
    10. '(' → logprob: -11.38349723815918

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07077920436859131
    2. '    
' → logprob: -3.320779323577881
    3. 'XY' → logprob: -4.695779323577881
    4. ' XY' → logprob: -4.820779323577881
    5. ')' → logprob: -5.820779323577881
    6. '
' → logprob: -5.945779323577881
    7. ' 
' → logprob: -6.320779323577881
    8. '```' → logprob: -6.820779323577881
    9. '  
' → logprob: -6.945779323577881
    10. '\n' → logprob: -7.070779323577881

Token 31: ' XY' (ID: 71987)
  Prédit: ' XY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' XY' → logprob: -0.5773626565933228
    2. 'XY' (adapté à ' XY') → logprob: -0.8273626565933228
    3. ' ' → logprob: -7.827362537384033
    4. 'X' → logprob: -8.577363014221191
    5. 'xy' → logprob: -8.952363014221191
    6. '   ' → logprob: -9.577363014221191
    7. ' 
' → logprob: -9.702363014221191
    8. ' ' → logprob: -9.827363014221191
    9. '_xy' → logprob: -9.952363014221191
    10. ' xy' → logprob: -9.952363014221191

Token 32: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005004895501770079
    2. '.' → logprob: -7.625500679016113
    3. '.app' → logprob: -12.500500679016113
    4. '.setdefault' → logprob: -13.125500679016113
    5. '.py' → logprob: -13.250500679016113
    6. '.ap' → logprob: -13.375500679016113
    7. '.extend' → logprob: -14.250500679016113
    8. ').' → logprob: -14.500500679016113
    9. 'append' → logprob: -14.750500679016113
    10. '.Append' → logprob: -14.875500679016113

Token 33: '(x' (ID: 4061)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0018127481453120708
    2. '(' → logprob: -7.626812934875488
    3. '(c' → logprob: -7.626812934875488
    4. '((' → logprob: -8.001812934875488
    5. '(x' → logprob: -8.126812934875488
    6. 'complex' → logprob: -8.501812934875488
    7. '```' → logprob: -13.751812934875488
    8. ' complex' → logprob: -14.376812934875488
    9. '(
' → logprob: -14.751812934875488
    10. '(abs' → logprob: -15.876812934875488

Token 34: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4356940686702728
    2. ' +' → logprob: -1.1856940984725952
    3. ',' → logprob: -3.0606939792633057
    4. '+y' → logprob: -8.060693740844727
    5. '+j' → logprob: -8.810693740844727
    6. ' ,' → logprob: -9.060693740844727
    7. ' ' → logprob: -10.060693740844727
    8. '+,' → logprob: -10.185693740844727
    9. ',y' → logprob: -10.185693740844727
    10. ')' → logprob: -10.435693740844727

Token 35: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018232006579637527
    2. ' y' → logprob: -4.0182318687438965
    3. '1' → logprob: -9.893232345581055
    4. 'yj' → logprob: -10.893232345581055
    5. 'ym' → logprob: -12.518232345581055
    6. ' ' → logprob: -13.018232345581055
    7. '	y' → logprob: -13.518232345581055
    8. 'yme' → logprob: -14.393232345581055
    9. '   ' → logprob: -14.643232345581055
    10. 'yth' → logprob: -14.893232345581055

Token 36: ' *' (ID: 425)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0684952437877655
    2. 'j' → logprob: -3.068495273590088
    3. '*' → logprob: -4.068495273590088
    4. '*j' → logprob: -6.568495273590088
    5. ' ' → logprob: -7.068495273590088
    6. ')' → logprob: -8.44349479675293
    7. ' j' → logprob: -10.19349479675293
    8. '   ' → logprob: -10.56849479675293
    9. ' *' → logprob: -11.19349479675293
    10. '.j' → logprob: -11.56849479675293

Token 37: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.625004768371582
    3. 'cmath' → logprob: -13.375004768371582
    4. 'j' → logprob: -16.7500057220459
    5. '2' → logprob: -17.3750057220459
    6. '```' → logprob: -17.6250057220459
    7. '-' → logprob: -18.2500057220459
    8. '(' → logprob: -18.2500057220459
    9. '

' → logprob: -18.6250057220459
    10. '0' → logprob: -18.8750057220459

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. 'cmath' → logprob: -12.500003814697266
    3. ' ' → logprob: -16.250003814697266
    4. 'j' → logprob: -17.000003814697266
    5. '(' → logprob: -17.125003814697266
    6. '2' → logprob: -17.125003814697266
    7. '```' → logprob: -17.125003814697266
    8. 'complex' → logprob: -17.625003814697266
    9. '

' → logprob: -18.250003814697266
    10. '0' → logprob: -18.625003814697266

Token 39: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013522605877369642
    2. '1' → logprob: -6.626352310180664
    3. '.j' → logprob: -11.376352310180664
    4. '-' → logprob: -12.501352310180664
    5. '```' → logprob: -12.501352310180664
    6. ' j' → logprob: -13.376352310180664
    7. 'J' → logprob: -13.501352310180664
    8. '.' → logprob: -13.876352310180664
    9. 'im' → logprob: -14.501352310180664
    10. ' ' → logprob: -14.626352310180664

Token 40: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ' )' → logprob: -13.000004768371582
    3. '))' → logprob: -13.125004768371582
    4. ')
' → logprob: -14.875004768371582
    5. ')`' → logprob: -16.6250057220459
    6. '`)' → logprob: -16.8750057220459
    7. ')))' → logprob: -17.1250057220459
    8. '),' → logprob: -18.0000057220459
    9. '')' → logprob: -18.1250057220459
    10. ')**' → logprob: -18.3750057220459

Token 41: 'XY' (ID: 27825)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8600397109985352
    2. 'max' → logprob: -2.110039710998535
    3. 'd' → logprob: -2.360039710998535
    4. 'ans' → logprob: -2.735039710998535
    5. 'dist' → logprob: -3.360039710998535
    6. 'answer' → logprob: -3.360039710998535
    7. 'D' → logprob: -3.735039710998535
    8. 'result' → logprob: -4.110039710998535
    9. 'from' → logprob: -4.235039710998535
    10. 'min' → logprob: -4.235039710998535

Token 42: '2' (ID: 17)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15344294905662537
    2. '[' → logprob: -2.653442859649658
    3. ' =' → logprob: -3.653442859649658
    4. '=' → logprob: -4.403442859649658
    5. '<|end|>' → logprob: -4.528442859649658
    6. '**' → logprob: -4.903442859649658
    7. '.append' → logprob: -5.778442859649658
    8. '[:]' → logprob: -5.903442859649658
    9. '.sort' → logprob: -6.028442859649658
    10. ' .' → logprob: -7.153442859649658

Token 44: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6000691056251526
    2. ' [' → logprob: -1.8500690460205078
    3. '[]' → logprob: -1.8500690460205078
    4. ' []' → logprob: -3.475069046020508
    5. 'XY' → logprob: -3.475069046020508
    6. ' XY' → logprob: -3.850069046020508
    7. 'cmath' → logprob: -4.225069046020508
    8. '[X' → logprob: -5.100069046020508
    9. 'sorted' → logprob: -5.225069046020508
    10. 'complex' → logprob: -5.600069046020508

Token 45: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.758300438988954e-05
    2. ' for' → logprob: -9.250097274780273
    3. '<|end|>' → logprob: -14.625097274780273
    4. '```' → logprob: -15.000097274780273
    5. '[' → logprob: -15.625097274780273
    6. 'import' → logprob: -15.875097274780273
    7. 'from' → logprob: -16.375097274780273
    8. '   ' → logprob: -17.500097274780273
    9. 'x' → logprob: -17.625097274780273
    10. 'i' → logprob: -17.625097274780273

Token 46: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -1.047654628753662
    2. ' i' → logprob: -1.672654628753662
    3. ' xy' → logprob: -2.297654628753662
    4. 'z' → logprob: -2.797654628753662
    5. ' x' → logprob: -2.797654628753662
    6. ' p' → logprob: -3.172654628753662
    7. 'i' → logprob: -3.297654628753662
    8. ' point' → logprob: -3.672654628753662
    9. ' c' → logprob: -3.797654628753662
    10. 'x' → logprob: -4.047654628753662

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02410189062356949
    2. 'in' → logprob: -3.774101972579956
    3. ' ' → logprob: -7.274101734161377
    4. '  ' → logprob: -10.399102210998535
    5. 'n' → logprob: -10.774102210998535
    6. 'z' → logprob: -11.149102210998535
    7. '2' → logprob: -11.274102210998535
    8. '_' → logprob: -11.274102210998535
    9. 's' → logprob: -11.524102210998535
    10. 'i' → logprob: -11.649102210998535

Token 48: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.07009115070104599
    2. ' XY' → logprob: -2.6950912475585938
    3. ' range' → logprob: -9.570091247558594
    4. 'range' → logprob: -10.070091247558594
    5. ' ' → logprob: -11.070091247558594
    6. 'XYZ' → logprob: -12.445091247558594
    7. 'X' → logprob: -12.445091247558594
    8. '<|end|>' → logprob: -12.695091247558594
    9. ' xrange' → logprob: -13.070091247558594
    10. 'xy' → logprob: -13.320091247558594

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000387535837944597
    2. ' :' → logprob: -8.250387191772461
    3. ':
' → logprob: -10.125387191772461
    4. '):' → logprob: -10.750387191772461
    5. '+:' → logprob: -11.000387191772461
    6. ' in' → logprob: -11.500387191772461
    7. '+' → logprob: -11.750387191772461
    8. '2' → logprob: -12.125387191772461
    9. ':**' → logprob: -12.375387191772461
    10. ',' → logprob: -12.500387191772461

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013439498841762543
    2. ' XY' → logprob: -4.388439655303955
    3. 'XY' → logprob: -7.263439655303955
    4. '```' → logprob: -9.513439178466797
    5. '       ' → logprob: -10.138439178466797
    6. '    
' → logprob: -10.388439178466797
    7. '   ' → logprob: -10.513439178466797
    8. ' for' → logprob: -11.263439178466797
    9. '`' → logprob: -11.888439178466797
    10. '[' → logprob: -12.763439178466797

Token 51: ' XY' (ID: 71987)
  Prédit: ' XY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' XY' → logprob: -0.6256716847419739
    2. 'XY' (adapté à ' XY') → logprob: -1.125671625137329
    3. '   ' → logprob: -2.375671625137329
    4. 'z' → logprob: -3.250671625137329
    5. ' z' → logprob: -5.500671863555908
    6. 'xy' → logprob: -6.875671863555908
    7. ' for' → logprob: -6.875671863555908
    8. 'Z' → logprob: -7.875671863555908
    9. 'for' → logprob: -7.875671863555908
    10. ' ' → logprob: -8.31317138671875

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. '.append' → logprob: -13.50000286102295
    3. '.' → logprob: -14.00000286102295
    4. '²' → logprob: -15.75000286102295
    5. '[' → logprob: -17.250001907348633
    6. '```' → logprob: -17.562501907348633
    7. '۲' → logprob: -17.625001907348633
    8. 'import' → logprob: -18.125001907348633
    9. '**' → logprob: -18.312501907348633
    10. '.add' → logprob: -18.500001907348633

Token 53: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6946782469749451
    2. '.append' → logprob: -0.6946782469749451
    3. ' .' → logprob: -7.94467830657959
    4. '.=' → logprob: -7.94467830657959
    5. '.extend' → logprob: -8.31967830657959
    6. '+=' → logprob: -8.69467830657959
    7. '=' → logprob: -8.81967830657959
    8. '**' → logprob: -9.69467830657959
    9. ' +=' → logprob: -9.81967830657959
    10. ' ' → logprob: -11.06967830657959

Token 54: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.08418185263872147
    2. '(' → logprob: -3.459181785583496
    3. '(c' → logprob: -3.459181785583496
    4. '(-' → logprob: -5.209181785583496
    5. '(com' → logprob: -5.709181785583496
    6. '((' → logprob: -6.584181785583496
    7. ' (' → logprob: -6.584181785583496
    8. 'z' → logprob: -6.584181785583496
    9. ' z' → logprob: -6.584181785583496
    10. 'cmath' → logprob: -7.084181785583496

Token 55: ')
' (ID: 446)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6248303651809692
    2. '*' → logprob: -0.9998303651809692
    3. ' *' → logprob: -2.7498302459716797
    4. ' **' → logprob: -3.4998302459716797
    5. '*z' → logprob: -6.99983024597168
    6. ')' → logprob: -7.49983024597168
    7. ' +' → logprob: -8.99983024597168
    8. '**)' → logprob: -9.12483024597168
    9. '   ' → logprob: -9.24983024597168
    10. ')**' → logprob: -9.24983024597168

Token 56: 'ph' (ID: 961)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6844621300697327
    2. '*' → logprob: -1.309462070465088
    3. '+' → logprob: -2.059462070465088
    4. ' **' → logprob: -3.684462070465088
    5. ' *' → logprob: -3.809462070465088
    6. ' +' → logprob: -4.059462070465088
    7. '<|end|>' → logprob: -4.184462070465088
    8. '-' → logprob: -5.059462070465088
    9. '.' → logprob: -5.684462070465088
    10. ')' → logprob: -6.309462070465088

Token 57: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3340924382209778
    2. 'ase' → logprob: -1.334092378616333
    3. 'ases' → logprob: -5.084092617034912
    4. 'one' → logprob: -5.584092617034912
    5. 'I' → logprob: -5.959092617034912
    6. 'as' → logprob: -6.709092617034912
    7. 'XY' → logprob: -6.709092617034912
    8. 'ix' → logprob: -7.084092617034912
    9. '```' → logprob: -7.584092617034912
    10. '=' → logprob: -7.584092617034912

Token 58: ' []
' (ID: 8911)
  Prédit: 'cmath'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmath' → logprob: -0.19523610174655914
    2. '0' → logprob: -2.8202362060546875
    3. '[' → logprob: -2.9452362060546875
    4. ' cm' → logprob: -3.6952362060546875
    5. ' [' → logprob: -4.8202362060546875
    6. 'cm' → logprob: -5.0702362060546875
    7. 'XY' → logprob: -5.1952362060546875
    8. ' XY' → logprob: -5.3202362060546875
    9. ' ' → logprob: -5.5702362060546875
    10. '-' → logprob: -5.9452362060546875

Token 59: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010941579937934875
    2. 'angle' → logprob: -5.010941505432129
    3. ' for' → logprob: -5.885941505432129
    4. 'while' → logprob: -8.010941505432129
    5. 'p' → logprob: -8.385941505432129
    6. 'd' → logprob: -9.135941505432129
    7. 'ph' → logprob: -9.385941505432129
    8. 'i' → logprob: -9.635941505432129
    9. 'import' → logprob: -9.635941505432129
    10. 'theta' → logprob: -9.635941505432129

Token 60: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.21561427414417267
    2. ' i' → logprob: -2.0906143188476562
    3. 'z' → logprob: -3.2156143188476562
    4. ' _' → logprob: -4.215614318847656
    5. 'i' → logprob: -5.215614318847656
    6. '_' → logprob: -5.965614318847656
    7. ' xy' → logprob: -5.965614318847656
    8. ' x' → logprob: -7.215614318847656
    9. ' XY' → logprob: -7.215614318847656
    10. ' k' → logprob: -7.465614318847656

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06203053891658783
    2. 'in' → logprob: -2.812030553817749
    3. ' ' → logprob: -10.812030792236328
    4. '2' → logprob: -11.437030792236328
    5. '_in' → logprob: -12.187030792236328
    6. 'n' → logprob: -12.312030792236328
    7. 's' → logprob: -12.687030792236328
    8. ',' → logprob: -13.124530792236328
    9. '_' → logprob: -13.374530792236328
    10. 'to' → logprob: -13.562030792236328

Token 62: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.2548828423023224
    2. ' XY' → logprob: -1.5048828125
    3. ' range' → logprob: -6.2548828125
    4. 'range' → logprob: -7.0048828125
    5. ' ' → logprob: -10.3798828125
    6. '[' → logprob: -10.8798828125
    7. ' xrange' → logprob: -11.0048828125
    8. '(X' → logprob: -11.9423828125
    9. 'xy' → logprob: -12.0673828125
    10. '(' → logprob: -12.2548828125

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38726282119750977
    2. ':' → logprob: -1.1372628211975098
    3. ':
' → logprob: -9.387262344360352
    4. '[' → logprob: -9.512262344360352
    5. '):' → logprob: -9.762262344360352
    6. '<|end|>' → logprob: -10.887262344360352
    7. ':**' → logprob: -11.137262344360352
    8. '   ' → logprob: -11.137262344360352
    9. 'in' → logprob: -11.824762344360352
    10. '1' → logprob: -11.887262344360352

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013884471263736486
    2. ' in' → logprob: -6.8763885498046875
    3. ':
' → logprob: -9.126388549804688
    4. ',' → logprob: -9.751388549804688
    5. '[' → logprob: -9.876388549804688
    6. ' :' → logprob: -10.001388549804688
    7. 'in' → logprob: -10.126388549804688
    8. '.' → logprob: -11.126388549804688
    9. '=' → logprob: -12.376388549804688
    10. '+' → logprob: -12.501388549804688

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12180530279874802
    2. ' ph' → logprob: -2.246805191040039
    3. '       ' → logprob: -5.871805191040039
    4. ' for' → logprob: -5.996805191040039
    5. 'ph' → logprob: -5.996805191040039
    6. 'phas' → logprob: -8.496805191040039
    7. '
' → logprob: -8.996805191040039
    8. '    ' → logprob: -9.371805191040039
    9. '   ' → logprob: -9.496805191040039
    10. ' ' → logprob: -9.871805191040039

Token 66: ' ph' (ID: 1391)
  Prédit: ' ph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ph' → logprob: -0.038092900067567825
    2. 'ph' (adapté à ' ph') → logprob: -4.038093090057373
    3. ' for' → logprob: -4.163093090057373
    4. '   ' → logprob: -5.913093090057373
    5. '    ' → logprob: -7.663093090057373
    6. 'for' → logprob: -8.163092613220215
    7. ' if' → logprob: -8.413092613220215
    8. ' p' → logprob: -8.788092613220215
    9. ' print' → logprob: -9.850592613220215
    10. 'phas' → logprob: -9.913092613220215

Token 67: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08925983309745789
    2. '.append' → logprob: -2.4642598628997803
    3. ' .' → logprob: -8.83926010131836
    4. '.=' → logprob: -9.08926010131836
    5. '=' → logprob: -10.83926010131836
    6. ' =' → logprob: -11.08926010131836
    7. '.extend' → logprob: -11.21426010131836
    8. 'append' → logprob: -12.33926010131836
    9. ' .=' → logprob: -12.96426010131836
    10. ' ' → logprob: -13.58926010131836

Token 68: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0356939472258091
    2. '(' → logprob: -3.660693883895874
    3. '(z' → logprob: -5.285694122314453
    4. '(abs' → logprob: -6.160694122314453
    5. 'cmath' → logprob: -6.410694122314453
    6. '(cm' → logprob: -8.660694122314453
    7. '(-' → logprob: -9.285694122314453
    8. '((' → logprob: -9.410694122314453
    9. '(math' → logprob: -10.535694122314453
    10. '(angle' → logprob: -10.660694122314453

Token 69: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.00032592954812571406
    2. 'cmath' → logprob: -8.125326156616211
    3. 'Math' → logprob: -11.250326156616211
    4. ' math' → logprob: -12.250326156616211
    5. '_math' → logprob: -12.625326156616211
    6. '.math' → logprob: -12.750326156616211
    7. 'mat' → logprob: -13.125326156616211
    8. 'mp' → logprob: -13.750326156616211
    9. 'm' → logprob: -14.375326156616211
    10. 'mph' → logprob: -14.625326156616211

Token 70: '.phase' (ID: 146627)
  Prédit: '.phase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.phase' → logprob: -0.004259680863469839
    2. '.p' → logprob: -5.5042595863342285
    3. '.ph' → logprob: -9.129260063171387
    4. '.' → logprob: -9.754260063171387
    5. '.angle' → logprob: -11.754260063171387
    6. '.atan' → logprob: -12.629260063171387
    7. '.pi' → logprob: -13.754260063171387
    8. ' .' → logprob: -14.379260063171387
    9. ' phase' → logprob: -14.629260063171387
    10. '.Ph' → logprob: -15.004260063171387

Token 71: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -7.719917630311102e-05
    2. '(' → logprob: -9.500077247619629
    3. '(x' → logprob: -14.000077247619629
    4. ' (' → logprob: -14.000077247619629
    5. '(s' → logprob: -15.625077247619629
    6. '(
' → logprob: -16.250076293945312
    7. '(Z' → logprob: -16.500076293945312
    8. ')' → logprob: -16.500076293945312
    9. ')(' → logprob: -17.250076293945312
    10. '((' → logprob: -17.250076293945312

Token 72: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06204823777079582
    2. ')' → logprob: -2.8120481967926025
    3. ')))' → logprob: -10.562047958374023
    4. ' ))' → logprob: -10.687047958374023
    5. '))
' → logprob: -11.687047958374023
    6. ')+' → logprob: -11.937047958374023
    7. '),' → logprob: -12.062047958374023
    8. '+' → logprob: -12.562047958374023
    9. ' )' → logprob: -12.937047958374023
    10. '()))' → logprob: -13.312047958374023

Token 73: 'tmp' (ID: 11669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09199725091457367
    2. '_' → logprob: -3.2169971466064453
    3. '=' → logprob: -3.4669971466064453
    4. '2' → logprob: -5.466997146606445
    5. '_p' → logprob: -6.591997146606445
    6. 'p' → logprob: -6.716997146606445
    7. '_ph' → logprob: -6.716997146606445
    8. 's' → logprob: -7.091997146606445
    9. '_x' → logprob: -7.216997146606445
    10. 'X' → logprob: -7.341997146606445

Token 75: ' []
' (ID: 8911)
  Prédit: ' ph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ph' → logprob: -1.547986626625061
    2. ' sorted' → logprob: -1.797986626625061
    3. ' [' → logprob: -2.1729865074157715
    4. '[' → logprob: -2.6729865074157715
    5. 'sorted' → logprob: -2.6729865074157715
    6. '[]' → logprob: -2.7979865074157715
    7. 'ph' → logprob: -2.9229865074157715
    8. ' max' → logprob: -3.0479865074157715
    9. ' []' → logprob: -3.1729865074157715
    10. '0' → logprob: -3.6729865074157715

Token 76: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021268262062221766
    2. ' for' → logprob: -6.627126693725586
    3. 'import' → logprob: -8.502126693725586
    4. 'N' → logprob: -8.502126693725586
    5. '[' → logprob: -9.502126693725586
    6. 'i' → logprob: -9.877126693725586
    7. '```' → logprob: -10.002126693725586
    8. 'from' → logprob: -10.377126693725586
    9. 'n' → logprob: -11.002126693725586
    10. 'if' → logprob: -11.127126693725586

Token 77: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6500546932220459
    2. ' z' → logprob: -1.400054693222046
    3. 'i' → logprob: -2.525054693222046
    4. 'z' → logprob: -2.650054693222046
    5. ' x' → logprob: -3.900054693222046
    6. 'x' → logprob: -4.650054931640625
    7. ' xy' → logprob: -4.650054931640625
    8. ' ph' → logprob: -4.775054931640625
    9. ' p' → logprob: -4.900054931640625
    10. 'ph' → logprob: -5.275054931640625

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.113580122590065
    2. 'in' → logprob: -2.2385802268981934
    3. ' ' → logprob: -8.113579750061035
    4. ',' → logprob: -8.363579750061035
    5. 'n' → logprob: -8.613579750061035
    6. '  ' → logprob: -11.363579750061035
    7. '	in' → logprob: -11.488579750061035
    8. ' n' → logprob: -12.988579750061035
    9. '_' → logprob: -12.988579750061035
    10. ',n' → logprob: -13.113579750061035

Token 79: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07043140381574631
    2. ' range' → logprob: -2.6954314708709717
    3. 'ph' → logprob: -7.695431232452393
    4. ' ' → logprob: -11.44543170928955
    5. 'XY' → logprob: -11.82043170928955
    6. ' xrange' → logprob: -12.82043170928955
    7. ' ph' → logprob: -12.94543170928955
    8. '	range' → logprob: -13.19543170928955
    9. 'r' → logprob: -13.32043170928955
    10. 'ran' → logprob: -13.32043170928955

Token 80: '(len' (ID: 14990)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2901478111743927
    2. '(' → logprob: -1.4151477813720703
    3. '(len' → logprob: -4.79014778137207
    4. ' (' → logprob: -7.79014778137207
    5. '(n' → logprob: -8.79014778137207
    6. ' N' → logprob: -10.79014778137207
    7. ' ' → logprob: -11.16514778137207
    8. 'N' → logprob: -11.66514778137207
    9. '1' → logprob: -12.16514778137207
    10. '(
' → logprob: -12.16514778137207

Token 81: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.004749676678329706
    2. '(' → logprob: -5.754749774932861
    3. '(ph' → logprob: -6.754749774932861
    4. '(P' → logprob: -8.879749298095703
    5. '(N' → logprob: -9.254749298095703
    6. 'XY' → logprob: -10.379749298095703
    7. '(C' → logprob: -10.629749298095703
    8. '(S' → logprob: -11.254749298095703
    9. '(Y' → logprob: -11.254749298095703
    10. '(p' → logprob: -11.504749298095703

Token 82: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0029129309114068747
    2. '2' → logprob: -5.877912998199463
    3. '))' → logprob: -10.127912521362305
    4. ')):' → logprob: -10.627912521362305
    5. ')):
' → logprob: -11.377912521362305
    6. ')' → logprob: -11.502912521362305
    7. '1' → logprob: -12.502912521362305
    8. '(' → logprob: -12.877912521362305
    9. ')))' → logprob: -13.502912521362305
    10. '):' → logprob: -13.752912521362305

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03765156492590904
    2. ')):' → logprob: -3.787651538848877
    3. ')):
' → logprob: -5.537651538848877
    4. ')' → logprob: -5.537651538848877
    5. ')-' → logprob: -5.662651538848877
    6. '))' → logprob: -6.037651538848877
    7. ')):
' → logprob: -8.287652015686035
    8. ' ' → logprob: -9.912652015686035
    9. '):' → logprob: -10.162652015686035
    10. '))-' → logprob: -10.162652015686035

Token 84: ')):
' (ID: 22530)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7036519646644592
    2. ')):' → logprob: -1.2036519050598145
    3. ' -' → logprob: -2.8286519050598145
    4. ')):
' → logprob: -3.0786519050598145
    5. '):' → logprob: -3.2036519050598145
    6. ')' → logprob: -3.2036519050598145
    7. ' ' → logprob: -5.2036519050598145
    8. ')-' → logprob: -5.3286519050598145
    9. '):
' → logprob: -5.9536519050598145
    10. '))' → logprob: -5.9536519050598145

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08804672956466675
    2. ' for' → logprob: -2.8380467891693115
    3. ' tmp' → logprob: -4.338046550750732
    4. 'tmp' → logprob: -4.838046550750732
    5. 'for' → logprob: -5.713046550750732
    6. ' if' → logprob: -7.088046550750732
    7. '	tmp' → logprob: -8.71304702758789
    8. 'if' → logprob: -9.08804702758789
    9. ' ' → logprob: -9.33804702758789
    10. '   ' → logprob: -9.58804702758789

Token 86: ' tmp' (ID: 8919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45834213495254517
    2. 'tmp' (adapté à ' tmp') → logprob: -1.4583420753479004
    3. ' for' → logprob: -2.8333420753479004
    4. '   ' → logprob: -3.3333420753479004
    5. 'if' → logprob: -3.8333420753479004
    6. ' tmp' → logprob: -4.4583420753479
    7. 'j' → logprob: -6.2083420753479
    8. ' ' → logprob: -6.8333420753479
    9. ' if' → logprob: -7.2083420753479
    10. 'ph' → logprob: -8.270842552185059

Token 87: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.13158740103244781
    2. '.' → logprob: -2.381587505340576
    3. ' .' → logprob: -4.881587505340576
    4. '=' → logprob: -5.006587505340576
    5. ' +=' → logprob: -5.381587505340576
    6. ' =' → logprob: -5.506587505340576
    7. '.extend' → logprob: -5.506587505340576
    8. '+=' → logprob: -6.256587505340576
    9. '+' → logprob: -7.506587505340576
    10. ' ' → logprob: -7.631587505340576

Token 88: '((' (ID: 2054)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -1.1349685192108154
    2. '(X' → logprob: -1.2599685192108154
    3. '(c' → logprob: -1.5099685192108154
    4. '(' → logprob: -2.1349685192108154
    5. '((' → logprob: -3.2599685192108154
    6. 'abs' → logprob: -5.6349687576293945
    7. '(ph' → logprob: -5.7599687576293945
    8. '(p' → logprob: -6.1349687576293945
    9. '(i' → logprob: -6.8849687576293945
    10. '(-' → logprob: -6.8849687576293945

Token 89: 'ph' (ID: 961)
  Prédit: 'cmath'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmath' → logprob: -0.867624819278717
    2. 'ph' → logprob: -0.992624819278717
    3. 'XY' → logprob: -1.8676247596740723
    4. 'abs' → logprob: -3.7426247596740723
    5. ' ph' → logprob: -4.742624759674072
    6. 'cm' → logprob: -5.367624759674072
    7. ' XY' → logprob: -5.617624759674072
    8. '-' → logprob: -5.867624759674072
    9. '   ' → logprob: -6.555124759674072
    10. 'i' → logprob: -6.930124759674072

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00031818498973734677
    2. '[' → logprob: -8.50031852722168
    3. ')[' → logprob: -9.87531852722168
    4. ')' → logprob: -10.87531852722168
    5. ',i' → logprob: -11.12531852722168
    6. ',' → logprob: -11.50031852722168
    7. ' [' → logprob: -11.87531852722168
    8. '[j' → logprob: -13.00031852722168
    9. ',[' → logprob: -13.75031852722168
    10. '),' → logprob: -14.25031852722168

Token 91: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026223544031381607
    2. ' -' → logprob: -4.651223659515381
    3. ' ,' → logprob: -5.026223659515381
    4. '-' → logprob: -5.401223659515381
    5. '+' → logprob: -6.026223659515381
    6. ' ' → logprob: -7.151223659515381
    7. ' +' → logprob: -7.838723659515381
    8. ')' → logprob: -8.276223182678223
    9. '-,' → logprob: -8.526223182678223
    10. '+,' → logprob: -8.776223182678223

Token 92: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.7561790347099304
    2. 'i' → logprob: -1.0061790943145752
    3. ' XY' → logprob: -2.506179094314575
    4. ' i' → logprob: -2.506179094314575
    5. ' ' → logprob: -7.381178855895996
    6. '(i' → logprob: -8.631178855895996
    7. '0' → logprob: -9.381178855895996
    8. 'abs' → logprob: -9.506178855895996
    9. '   ' → logprob: -9.568678855895996
    10. '1' → logprob: -9.818678855895996

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00042149791261181235
    2. '[i' → logprob: -7.875421524047852
    3. '[' → logprob: -10.375421524047852
    4. ' ' → logprob: -12.687921524047852
    5. ')' → logprob: -14.125421524047852
    6. '```' → logprob: -14.875421524047852
    7. '２' → logprob: -14.937921524047852
    8. ' i' → logprob: -15.000421524047852
    9. '₂' → logprob: -15.062921524047852
    10. '   ' → logprob: -15.125421524047852

Token 94: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020182352513074875
    2. '2' → logprob: -4.020182132720947
    3. ')[' → logprob: -7.020182132720947
    4. '[' → logprob: -7.145182132720947
    5. ')' → logprob: -9.520182609558105
    6. '))' → logprob: -9.770182609558105
    7. '[
' → logprob: -10.770182609558105
    8. '```' → logprob: -10.770182609558105
    9. ' [' → logprob: -10.895182609558105
    10. '[X' → logprob: -11.145182609558105

Token 95: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014334438601508737
    2. ' ))' → logprob: -7.126433372497559
    3. ')' → logprob: -8.251433372497559
    4. '))
' → logprob: -8.376433372497559
    5. ',' → logprob: -10.001433372497559
    6. ')))' → logprob: -10.126433372497559
    7. '))

' → logprob: -11.126433372497559
    8. ' ' → logprob: -11.501433372497559
    9. '[i' → logprob: -11.626433372497559
    10. '),' → logprob: -12.501433372497559

Token 96: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0012618985492736101
    2. '<|end|>' → logprob: -7.6262617111206055
    3. '```' → logprob: -8.251261711120605
    4. '  
' → logprob: -8.751261711120605
    5. 'sorted' → logprob: -9.626261711120605
    6. '
' → logprob: -9.751261711120605
    7. '<|end|>' → logprob: -9.751261711120605
    8. '    
' → logprob: -10.126261711120605
    9. '[tmp' → logprob: -10.626261711120605
    10. ' tmp' → logprob: -10.751261711120605

Token 97: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008952532894909382
    2. '()
' → logprob: -4.758952617645264
    3. '()

' → logprob: -8.383952140808105
    4. '(' → logprob: -9.508952140808105
    5. '()\' → logprob: -11.633952140808105
    6. '()>' → logprob: -12.508952140808105
    7. '(
' → logprob: -12.508952140808105
    8. '(reverse' → logprob: -13.383952140808105
    9. '()


' → logprob: -13.508952140808105
    10. 'for' → logprob: -13.633952140808105

Token 99: 'XY' (ID: 27825)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9144667983055115
    2. 'XY' → logprob: -1.0394668579101562
    3. '<|end|>' → logprob: -2.6644668579101562
    4. 'print' → logprob: -2.6644668579101562
    5. ')' → logprob: -4.289466857910156
    6. 'tmp' → logprob: -4.539466857910156
    7. 'result' → logprob: -4.539466857910156
    8. 'import' → logprob: -4.789466857910156
    9. '```' → logprob: -4.789466857910156
    10. '[' → logprob: -5.039466857910156

Token 100: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004249547782819718
    2. '=' → logprob: -8.000425338745117
    3. '<|end|>' → logprob: -10.375425338745117
    4. ' =' → logprob: -10.625425338745117
    5. '[:]' → logprob: -11.375425338745117
    6. '[' → logprob: -11.625425338745117
    7. '=[]' → logprob: -13.000425338745117
    8. '```' → logprob: -13.125425338745117
    9. ' ' → logprob: -13.625425338745117
    10. '[tmp' → logprob: -13.750425338745117

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05494355410337448
    2. '=' → logprob: -2.929943561553955
    3. '<|end|>' → logprob: -10.304943084716797
    4. ' ' → logprob: -11.679943084716797
    5. '.extend' → logprob: -12.179943084716797
    6. '.' → logprob: -12.554943084716797
    7. ',' → logprob: -13.179943084716797
    8. '=[]' → logprob: -13.554943084716797
    9. '[:]' → logprob: -13.679943084716797
    10. ' =[' → logprob: -13.679943084716797

Token 102: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3698459565639496
    2. '[' → logprob: -1.369845986366272
    3. '[tmp' → logprob: -3.2448458671569824
    4. '[list' → logprob: -4.994845867156982
    5. '[]' → logprob: -5.119845867156982
    6. ' []' → logprob: -6.869845867156982
    7. '[t' → logprob: -7.244845867156982
    8. '[]
' → logprob: -7.744845867156982
    9. '[np' → logprob: -8.74484634399414
    10. '[int' → logprob: -8.86984634399414

Token 103: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -14.875000953674316
    3. '```' → logprob: -15.875000953674316
    4. 'prev' → logprob: -16.875
    5. 'last' → logprob: -18.25
    6. '	for' → logprob: -18.75
    7. 'from' → logprob: -19.875
    8. 'x' → logprob: -20.0
    9. 'i' → logprob: -20.25
    10. 'tmp' → logprob: -20.5

Token 104: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9577945470809937
    2. '_,' → logprob: -1.3327945470809937
    3. ' i' → logprob: -2.082794666290283
    4. ' _,' → logprob: -2.082794666290283
    5. 'ph' → logprob: -3.207794666290283
    6. ' ph' → logprob: -3.832794666290283
    7. 'p' → logprob: -4.207794666290283
    8. ' p' → logprob: -5.207794666290283
    9. 't' → logprob: -5.457794666290283
    10. ' _' → logprob: -5.707794666290283

Token 105: ',' (ID: 11)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01897619664669037
    2. ' in' → logprob: -4.143976211547852
    3. ',' → logprob: -5.893976211547852
    4. 'i' → logprob: -10.643976211547852
    5. '_' → logprob: -10.768976211547852
    6. '_,' → logprob: -11.018976211547852
    7. ',h' → logprob: -11.393976211547852
    8. ' h' → logprob: -11.393976211547852
    9. 'p' → logprob: -11.518976211547852
    10. '   ' → logprob: -11.518976211547852

Token 106: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2550247311592102
    2. ' z' → logprob: -1.5050246715545654
    3. 'xy' → logprob: -7.1300249099731445
    4. 'x' → logprob: -7.2550249099731445
    5. 'v' → logprob: -7.3800249099731445
    6. ' xy' → logprob: -7.7550249099731445
    7. ' v' → logprob: -8.630024909973145
    8. ' x' → logprob: -9.130024909973145
    9. ' ' → logprob: -9.880024909973145
    10. 'q' → logprob: -10.630024909973145

Token 107: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.693220317363739
    2. ' in' → logprob: -0.693220317363739
    3. ',' → logprob: -10.068220138549805
    4. ' ' → logprob: -11.693220138549805
    5. 'n' → logprob: -12.068220138549805
    6. 'tmp' → logprob: -12.568220138549805
    7. 'to' → logprob: -13.568220138549805
    8. '  ' → logprob: -13.693220138549805
    9. 'In' → logprob: -13.943220138549805
    10. 'on' → logprob: -14.068220138549805

Token 108: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.04861563816666603
    2. ' tmp' → logprob: -3.0486156940460205
    3. '(tmp' → logprob: -11.298615455627441
    4. '	tmp' → logprob: -12.423615455627441
    5. ' ' → logprob: -12.548615455627441
    6. '[tmp' → logprob: -12.798615455627441
    7. '/tmp' → logprob: -13.298615455627441
    8. '   ' → logprob: -14.173615455627441
    9. '_tmp' → logprob: -14.423615455627441
    10. 't' → logprob: -14.548615455627441

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14317475259304047
    2. ':
' → logprob: -2.018174648284912
    3. '   ' → logprob: -8.14317512512207
    4. ' in' → logprob: -9.01817512512207
    5. 'in' → logprob: -11.01817512512207
    6. '):
' → logprob: -11.51817512512207
    7. '=' → logprob: -11.51817512512207
    8. ',' → logprob: -11.51817512512207
    9. ':
' → logprob: -11.89317512512207
    10. ' :' → logprob: -11.89317512512207

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001839037286117673
    2. 'XY' → logprob: -7.0018391609191895
    3. ' XY' → logprob: -7.0018391609191895
    4. '```' → logprob: -12.001838684082031
    5. '   ' → logprob: -12.376838684082031
    6. '    
' → logprob: -13.126838684082031
    7. '  ' → logprob: -14.376838684082031
    8. '<|end|>' → logprob: -14.501838684082031
    9. ' ' → logprob: -14.626838684082031
    10. '       ' → logprob: -14.626838684082031

Token 111: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' (adapté à ' XY') → logprob: -0.0005604196921922266
    2. '   ' → logprob: -8.125560760498047
    3. ' XY' → logprob: -8.250560760498047
    4. 'if' → logprob: -14.000560760498047
    5. '  ' → logprob: -14.250560760498047
    6. ' ' → logprob: -14.375560760498047
    7. 'XYZ' → logprob: -14.500560760498047
    8. '```' → logprob: -15.625560760498047
    9. '       ' → logprob: -15.875560760498047
    10. '    ' → logprob: -16.625560760498047

Token 112: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.75
    3. '```' → logprob: -17.375
    4. '   ' → logprob: -17.875
    5. ' ' → logprob: -18.25
    6. '.' → logprob: -19.0
    7. '３' → logprob: -19.125
    8. '۳' → logprob: -19.25
    9. '2' → logprob: -20.25
    10. '  ' → logprob: -20.3125

Token 113: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12697219848632812
    2. '.' → logprob: -2.126972198486328
    3. '.app' → logprob: -11.001972198486328
    4. ' .' → logprob: -11.126972198486328
    5. '.ap' → logprob: -11.751972198486328
    6. 'append' → logprob: -13.251972198486328
    7. '.push' → logprob: -14.001972198486328
    8. '.Append' → logprob: -14.376972198486328
    9. '.extend' → logprob: -15.001972198486328
    10. '..' → logprob: -15.626972198486328

Token 114: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.08087599277496338
    2. 'z' → logprob: -2.580875873565674
    3. '(' → logprob: -6.830875873565674
    4. ' z' → logprob: -7.080875873565674
    5. '(
' → logprob: -10.330876350402832
    6. ' (' → logprob: -10.455876350402832
    7. '	z' → logprob: -14.330876350402832
    8. '(x' → logprob: -14.330876350402832
    9. '(p' → logprob: -16.330875396728516
    10. ',z' → logprob: -16.580875396728516

Token 115: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. ')
' → logprob: -11.250014305114746
    3. ' )' → logprob: -13.500014305114746
    4. ')return' → logprob: -16.500015258789062
    5. ')#' → logprob: -17.125015258789062
    6. '))' → logprob: -17.625015258789062
    7. ')`' → logprob: -17.750015258789062
    8. ')
' → logprob: -17.875015258789062
    9. ')

' → logprob: -18.000015258789062
    10. '）' → logprob: -19.000015258789062

Token 116: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9788710474967957
    2. 'XY' → logprob: -2.6038711071014404
    3. 'print' → logprob: -2.8538711071014404
    4. ',' → logprob: -2.9788711071014404
    5. 'import' → logprob: -3.1038711071014404
    6. ' for' → logprob: -3.2288711071014404
    7. 'i' → logprob: -3.3538711071014404
    8. '#' → logprob: -3.3538711071014404
    9. '<|end|>' → logprob: -3.3538711071014404
    10. '[' → logprob: -3.4788711071014404

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011897517368197441
    2. '=' → logprob: -4.636897563934326
    3. '_' → logprob: -6.386897563934326
    4. '.append' → logprob: -9.011897087097168
    5. '.' → logprob: -9.886897087097168
    6. '[:]' → logprob: -9.886897087097168
    7. '[' → logprob: -10.636897087097168
    8. '3' → logprob: -10.886897087097168
    9. '<|end|>' → logprob: -11.011897087097168
    10. '2' → logprob: -11.011897087097168

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7453616261482239
    2. 'XY' → logprob: -1.370361566543579
    3. ' XY' → logprob: -2.495361566543579
    4. ' ' → logprob: -3.245361566543579
    5. 'abs' → logprob: -3.370361566543579
    6. 'len' → logprob: -3.620361566543579
    7. 'max' → logprob: -4.245361804962158
    8. '1' → logprob: -4.370361804962158
    9. ' len' → logprob: -4.620361804962158
    10. '[]' → logprob: -4.745361804962158

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6862744092941284
    2. 'XY' → logprob: -1.1862744092941284
    3. 'abs' → logprob: -2.311274528503418
    4. 'max' → logprob: -3.686274528503418
    5. 'cmath' → logprob: -4.061274528503418
    6. 'len' → logprob: -4.561274528503418
    7. 'sum' → logprob: -4.811274528503418
    8. 'complex' → logprob: -5.311274528503418
    9. '1' → logprob: -5.436274528503418
    10. 'float' → logprob: -5.561274528503418

Token 120: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007843759376555681
    2. 'N' → logprob: -8.000783920288086
    3. ' for' → logprob: -8.000783920288086
    4. 'i' → logprob: -10.250783920288086
    5. 'n' → logprob: -11.000783920288086
    6. 'from' → logprob: -11.000783920288086
    7. 'L' → logprob: -11.000783920288086
    8. 'import' → logprob: -11.500783920288086
    9. 'M' → logprob: -12.375783920288086
    10. 'K' → logprob: -12.625783920288086

Token 121: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008995542302727699
    2. 'from' → logprob: -8.375899314880371
    3. 'N' → logprob: -8.875899314880371
    4. 'import' → logprob: -8.875899314880371
    5. 'M' → logprob: -9.000899314880371
    6. 'L' → logprob: -9.250899314880371
    7. 'i' → logprob: -9.875899314880371
    8. ' for' → logprob: -10.250899314880371
    9. 'n' → logprob: -10.375899314880371
    10. 'K' → logprob: -11.625899314880371

Token 122: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10093023627996445
    2. 'i' → logprob: -2.3509302139282227
    3. ' range' → logprob: -9.225930213928223
    4. ' j' → logprob: -9.225930213928223
    5. ' ' → logprob: -9.350930213928223
    6. ' z' → logprob: -9.850930213928223
    7. 'j' → logprob: -9.850930213928223
    8. '(i' → logprob: -10.225930213928223
    9. 'range' → logprob: -10.475930213928223
    10. '_i' → logprob: -10.600930213928223

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10041283071041107
    2. 'in' → logprob: -2.3504128456115723
    3. ' ' → logprob: -8.850412368774414
    4. ',' → logprob: -10.100412368774414
    5. '+' → logprob: -12.475412368774414
    6. '  ' → logprob: -12.725412368774414
    7. ')' → logprob: -12.850412368774414
    8. '	in' → logprob: -13.100412368774414
    9. '_' → logprob: -13.350412368774414
    10. ' ,' → logprob: -13.725412368774414

Token 124: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602362096309662
    2. ' range' → logprob: -1.9102362394332886
    3. ' ' → logprob: -12.410236358642578
    4. '(range' → logprob: -12.535236358642578
    5. ' xrange' → logprob: -13.535236358642578
    6. '	range' → logprob: -14.410236358642578
    7. 'in' → logprob: -14.910236358642578
    8. ' in' → logprob: -14.910236358642578
    9. '[' → logprob: -15.035236358642578
    10. ')' → logprob: -15.160236358642578

Token 125: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.6592764258384705
    2. '(len' → logprob: -0.9092764258384705
    3. '(' → logprob: -2.5342764854431152
    4. ' (' → logprob: -8.159276008605957
    5. '(n' → logprob: -8.659276008605957
    6. ' len' → logprob: -9.534276008605957
    7. 'len' → logprob: -10.159276008605957
    8. ' ' → logprob: -10.534276008605957
    9. '(range' → logprob: -11.534276008605957
    10. ' N' → logprob: -11.784276008605957

Token 126: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31603336334228516
    2. '):' → logprob: -1.6910333633422852
    3. '-' → logprob: -2.566033363342285
    4. ' -' → logprob: -4.691033363342285
    5. '):
' → logprob: -8.441033363342285
    6. '+' → logprob: -8.941033363342285
    7. '   ' → logprob: -9.566033363342285
    8. ')' → logprob: -9.941033363342285
    9. ' ' → logprob: -10.066033363342285
    10. ' ):
' → logprob: -10.566033363342285

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08030618727207184
    2. 'for' → logprob: -3.0803062915802
    3. ' for' → logprob: -3.8303062915802
    4. 'j' → logprob: -5.080306053161621
    5. ' j' → logprob: -6.580306053161621
    6. 'z' → logprob: -7.455306053161621
    7. 'dx' → logprob: -7.830306053161621
    8. 'a' → logprob: -8.830306053161621
    9. ' dx' → logprob: -9.205306053161621
    10. ' z' → logprob: -9.205306053161621

Token 128: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18068109452724457
    2. 'z' → logprob: -2.555680990219116
    3. 'ans' → logprob: -3.055680990219116
    4. 'j' → logprob: -3.680680990219116
    5. 'x' → logprob: -5.680681228637695
    6. 'a' → logprob: -5.680681228637695
    7. 'diff' → logprob: -6.680681228637695
    8. 'd' → logprob: -7.180681228637695
    9. 'p' → logprob: -7.180681228637695
    10. 'tmp' → logprob: -7.305681228637695

Token 129: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06234218552708626
    2. 'j' → logprob: -2.8123421669006348
    3. ' range' → logprob: -8.062342643737793
    4. 'range' → logprob: -10.062342643737793
    5. '_j' → logprob: -11.937342643737793
    6. ' ' → logprob: -12.812342643737793
    7. '	j' → logprob: -13.687342643737793
    8. '   ' → logprob: -13.937342643737793
    9. ' ' → logprob: -14.187342643737793
    10. '  ' → logprob: -14.562342643737793

Token 130: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02335681952536106
    2. 'in' → logprob: -3.7733569145202637
    3. ' ' → logprob: -9.898356437683105
    4. 'range' → logprob: -10.523356437683105
    5. ' i' → logprob: -11.398356437683105
    6. '   ' → logprob: -12.523356437683105
    7. ' range' → logprob: -12.773356437683105
    8. '=' → logprob: -12.898356437683105
    9. 'i' → logprob: -12.898356437683105
    10. '+' → logprob: -12.898356437683105

Token 131: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.34866470098495483
    2. 'range' → logprob: -1.2236647605895996
    3. '(range' → logprob: -8.598664283752441
    4. ' ' → logprob: -11.848664283752441
    5. ' i' → logprob: -11.973664283752441
    6. '   ' → logprob: -11.973664283752441
    7. 'i' → logprob: -12.223664283752441
    8. '(i' → logprob: -12.973664283752441
    9. '	range' → logprob: -13.098664283752441
    10. '[i' → logprob: -13.723664283752441

Token 132: '(N' (ID: 10564)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.21587763726711273
    2. '(range' → logprob: -1.965877652168274
    3. '(N' → logprob: -3.7158775329589844
    4. ' range' → logprob: -3.9658775329589844
    5. 'range' → logprob: -5.090877532958984
    6. ' (' → logprob: -5.465877532958984
    7. '(' → logprob: -7.965877532958984
    8. '   ' → logprob: -10.590877532958984
    9. ' i' → logprob: -11.090877532958984
    10. '(I' → logprob: -11.215877532958984

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04083040729165077
    2. '):
' → logprob: -3.290830373764038
    3. '+' → logprob: -6.040830612182617
    4. '   ' → logprob: -8.290830612182617
    5. ':' → logprob: -10.665830612182617
    6. ',' → logprob: -10.665830612182617
    7. '       ' → logprob: -11.040830612182617
    8. '[i' → logprob: -11.040830612182617
    9. '-' → logprob: -11.290830612182617
    10. '(i' → logprob: -11.790830612182617

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006319324020296335
    2. ' if' → logprob: -5.256319522857666
    3. '   ' → logprob: -7.256319522857666
    4. 'if' → logprob: -8.756319046020508
    5. ',' → logprob: -9.506319046020508
    6. '<|end|>' → logprob: -10.131319046020508
    7. ':
' → logprob: -10.381319046020508
    8. ' ' → logprob: -11.131319046020508
    9. '):
' → logprob: -11.631319046020508
    10. '[' → logprob: -11.881319046020508

Token 135: ' if' (ID: 538)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.303234577178955
    2. ' dx' → logprob: -1.678234577178955
    3. ' if' → logprob: -1.803234577178955
    4. 'dx' → logprob: -2.053234577178955
    5. '           ' → logprob: -2.678234577178955
    6. 'if' (adapté à ' if') → logprob: -2.928234577178955
    7. 'ans' → logprob: -3.303234577178955
    8. 'x' → logprob: -4.178234577178955
    9. ' x' → logprob: -4.303234577178955
    10. 'diff' → logprob: -4.428234577178955

Token 136: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39659401774406433
    2. ' i' → logprob: -1.3965940475463867
    3. 'XY' → logprob: -3.1465940475463867
    4. ' XY' → logprob: -3.8965940475463867
    5. '(i' → logprob: -5.396594047546387
    6. 'j' → logprob: -5.896594047546387
    7. 'abs' → logprob: -6.146594047546387
    8. 'X' → logprob: -6.271594047546387
    9. ' abs' → logprob: -6.646594047546387
    10. '   ' → logprob: -6.896594047546387

Token 137: ' <=' (ID: 5017)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5540770292282104
    2. ' <' → logprob: -2.0540771484375
    3. '!=' → logprob: -2.5540771484375
    4. ' >' → logprob: -2.6790771484375
    5. ' ==' → logprob: -3.0540771484375
    6. '<' → logprob: -3.1790771484375
    7. ' <=' → logprob: -3.9290771484375
    8. '==' → logprob: -4.1790771484375
    9. '>' → logprob: -4.5540771484375
    10. '+' → logprob: -4.9290771484375

Token 138: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013341709272935987
    2. ' j' → logprob: -6.626334190368652
    3. ' ' → logprob: -12.251334190368652
    4. 'i' → logprob: -13.876334190368652
    5. '   ' → logprob: -14.001334190368652
    6. '  ' → logprob: -15.001334190368652
    7. '1' → logprob: -15.001334190368652
    8. '	j' → logprob: -15.251334190368652
    9. '```' → logprob: -15.501334190368652
    10. '0' → logprob: -16.001333236694336

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22651612758636475
    2. ' and' → logprob: -2.3515162467956543
    3. ':
' → logprob: -2.6015162467956543
    4. '           ' → logprob: -3.6015162467956543
    5. ' or' → logprob: -5.726516246795654
    6. ' continue' → logprob: -6.851516246795654
    7. 'and' → logprob: -7.101516246795654
    8. 'continue' → logprob: -7.976516246795654
    9. '       ' → logprob: -8.726515769958496
    10. '<|end|>' → logprob: -9.351515769958496

Token 140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015751024708151817
    2. ':' → logprob: -5.015750885009766
    3. ':
' → logprob: -5.515750885009766
    4. ' continue' → logprob: -5.765750885009766
    5. 'continue' → logprob: -7.265750885009766
    6. ' and' → logprob: -7.390750885009766
    7. '       ' → logprob: -8.265750885009766
    8. '               ' → logprob: -8.890750885009766
    9. ',' → logprob: -10.515750885009766
    10. '          ' → logprob: -11.140750885009766

Token 141: ' s' (ID: 265)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5289589762687683
    2. ' continue' → logprob: -1.153959035873413
    3. '           ' → logprob: -2.778959035873413
    4. ' ans' → logprob: -4.528958797454834
    5. 'ans' → logprob: -4.778958797454834
    6. '               ' → logprob: -4.903958797454834
    7. ' break' → logprob: -6.028958797454834
    8. 'break' → logprob: -6.028958797454834
    9. '   ' → logprob: -8.278959274291992
    10. ' if' → logprob: -8.403959274291992

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18106111884117126
    2. '=' → logprob: -1.9310611486434937
    3. 'um' → logprob: -4.431061267852783
    4. '+=' → logprob: -5.306061267852783
    5. ' +=' → logprob: -5.931061267852783
    6. '=(' → logprob: -8.931060791015625
    7. ' ' → logprob: -9.181060791015625
    8. '   ' → logprob: -9.306060791015625
    9. '=sum' → logprob: -9.556060791015625
    10. '(ans' → logprob: -9.681060791015625

Token 143: ' ' (ID: 220)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.09433508664369583
    2. 'abs' → logprob: -3.0943350791931152
    3. ' XY' → logprob: -3.2193350791931152
    4. ' abs' → logprob: -5.969335079193115
    5. 'cmath' → logprob: -7.219335079193115
    6. '(abs' → logprob: -7.844335079193115
    7. '(' → logprob: -7.969335079193115
    8. '0' → logprob: -8.469335556030273
    9. '(X' → logprob: -8.594335556030273
    10. 'cm' → logprob: -9.594335556030273

Token 144: '0' (ID: 15)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.0057551683858036995
    2. 'abs' → logprob: -5.3807549476623535
    3. ' XY' → logprob: -7.2557549476623535
    4. 'cmath' → logprob: -8.630755424499512
    5. '(X' → logprob: -9.380755424499512
    6. '(abs' → logprob: -10.255755424499512
    7. '   ' → logprob: -10.255755424499512
    8. ' abs' → logprob: -11.005755424499512
    9. '(' → logprob: -11.005755424499512
    10. 'XYZ' → logprob: -11.130755424499512

Token 145: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0060629406943917274
    2. '<|end|>' → logprob: -5.256062984466553
    3. '       ' → logprob: -8.631062507629395
    4. '+' → logprob: -9.381062507629395
    5. '          ' → logprob: -9.506062507629395
    6. '               ' → logprob: -9.506062507629395
    7. '            ' → logprob: -9.631062507629395
    8. ' ' → logprob: -9.631062507629395
    9. '<|end|>' → logprob: -9.631062507629395
    10. '            
' → logprob: -10.381062507629395

Token 147: ' k' (ID: 372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39057838916778564
    2. ' for' → logprob: -1.1405783891677856
    3. 'k' (adapté à ' k') → logprob: -6.390578269958496
    4. ' k' → logprob: -6.765578269958496
    5. '           ' → logprob: -7.640578269958496
    6. ' s' → logprob: -9.765578269958496
    7. ' ' → logprob: -10.015578269958496
    8. 's' → logprob: -10.015578269958496
    9. 'XY' → logprob: -10.140578269958496
    10. 'continue' → logprob: -10.390578269958496

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18121618032455444
    2. '=' → logprob: -1.8062162399291992
    3. '=k' → logprob: -7.181216239929199
    4. '=i' → logprob: -7.931216239929199
    5. '=j' → logprob: -8.5562162399292
    6. '=s' → logprob: -9.9312162399292
    7. ' ' → logprob: -10.9312162399292
    8. 'for' → logprob: -11.3062162399292
    9. ' in' → logprob: -11.4312162399292
    10. '=int' → logprob: -11.8062162399292

Token 149: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2228771448135376
    2. 'j' → logprob: -1.9728771448135376
    3. '0' → logprob: -3.222877025604248
    4. ' i' → logprob: -4.472877025604248
    5. '(i' → logprob: -5.222877025604248
    6. ' j' → logprob: -6.597877025604248
    7. '1' → logprob: -6.972877025604248
    8. ' (' → logprob: -7.847877025604248
    9. ' ' → logprob: -7.972877025604248
    10. 'N' → logprob: -8.097877502441406

Token 150: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10357185453176498
    2. ' while' → logprob: -2.353571891784668
    3. '           ' → logprob: -5.728571891784668
    4. '<|end|>' → logprob: -9.478571891784668
    5. '	while' → logprob: -11.853571891784668
    6. 'While' → logprob: -12.353571891784668
    7. '
' → logprob: -12.603571891784668
    8. '```' → logprob: -12.978571891784668
    9. 'j' → logprob: -13.353571891784668
    10. ' ' → logprob: -13.478571891784668

Token 153: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013652000576257706
    2. 'True' → logprob: -4.5136518478393555
    3. ' k' → logprob: -6.7636518478393555
    4. '(k' → logprob: -7.3886518478393555
    5. '(True' → logprob: -7.7636518478393555
    6. ' True' → logprob: -8.138651847839355
    7. '1' → logprob: -10.513651847839355
    8. '(' → logprob: -10.513651847839355
    9. 's' → logprob: -11.013651847839355
    10. 'j' → logprob: -11.263651847839355

Token 154: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.36828386783599854
    2. ' <=' → logprob: -1.2432838678359985
    3. '!=' → logprob: -4.368283748626709
    4. ' !=' → logprob: -5.368283748626709
    5. '<' → logprob: -6.743283748626709
    6. ' <' → logprob: -6.868283748626709
    7. '<len' → logprob: -9.993284225463867
    8. '<N' → logprob: -11.243284225463867
    9. '<n' → logprob: -11.368284225463867
    10. 'j' → logprob: -12.868284225463867

Token 155: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000181372175575234
    2. ' j' → logprob: -8.625181198120117
    3. '	j' → logprob: -14.750181198120117
    4. 'N' → logprob: -15.125181198120117
    5. '=j' → logprob: -15.375181198120117
    6. '   ' → logprob: -15.500181198120117
    7. '           ' → logprob: -15.750181198120117
    8. '[j' → logprob: -16.125181198120117
    9. ':j' → logprob: -16.125181198120117
    10. '$j' → logprob: -16.375181198120117

Token 156: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0754847526550293
    2. ' and' → logprob: -3.2004847526550293
    3. '               ' → logprob: -4.200484752655029
    4. ':' → logprob: -4.200484752655029
    5. '           ' → logprob: -7.700484752655029
    6. 'and' → logprob: -7.825484752655029
    7. ' s' → logprob: -7.950484752655029
    8. 's' → logprob: -8.075485229492188
    9. ':

' → logprob: -9.325485229492188
    10. '):
' → logprob: -9.450485229492188

Token 157: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020992472767829895
    2. 's' → logprob: -4.520992279052734
    3. ' s' → logprob: -4.645992279052734
    4. '           ' → logprob: -9.270992279052734
    5. '                
' → logprob: -9.895992279052734
    6. '<|end|>' → logprob: -10.145992279052734
    7. '                   ' → logprob: -10.520992279052734
    8. '              ' → logprob: -11.020992279052734
    9. ' ' → logprob: -11.145992279052734
    10. '                ' → logprob: -11.395992279052734

Token 158: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5769515037536621
    2. 's' (adapté à ' s') → logprob: -0.8269515037536621
    3. '                   ' → logprob: -7.201951503753662
    4. '               ' → logprob: -8.82695198059082
    5. ' ' → logprob: -10.57695198059082
    6. '                       ' → logprob: -10.70195198059082
    7. '
' → logprob: -10.95195198059082
    8. '```' → logprob: -11.20195198059082
    9. '                               ' → logprob: -12.20195198059082
    10. ',' → logprob: -12.20195198059082

Token 159: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47617143392562866
    2. '+=' → logprob: -0.9761714339256287
    3. '+' → logprob: -6.351171493530273
    4. '=' → logprob: -8.851171493530273
    5. ' +' → logprob: -9.851171493530273
    6. ' =' → logprob: -10.101171493530273
    7. ']+=' → logprob: -10.101171493530273
    8. 's' → logprob: -11.476171493530273
    9. '```' → logprob: -11.851171493530273
    10. ' ' → logprob: -11.851171493530273

Token 160: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.06220026686787605
    2. 'abs' → logprob: -2.9372003078460693
    3. ' XY' → logprob: -6.06220006942749
    4. 'cmath' → logprob: -6.06220006942749
    5. '(abs' → logprob: -6.81220006942749
    6. ' abs' → logprob: -7.56220006942749
    7. '   ' → logprob: -8.062200546264648
    8. 'z' → logprob: -8.187200546264648
    9. '(X' → logprob: -9.062200546264648
    10. '(' → logprob: -9.187200546264648

Token 161: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004366294015198946
    2. '[k' → logprob: -8.375436782836914
    3. '2' → logprob: -8.500436782836914
    4. 'k' → logprob: -13.250436782836914
    5. '[' → logprob: -14.750436782836914
    6. '[
' → logprob: -16.125436782836914
    7. '```' → logprob: -16.375436782836914
    8. '[key' → logprob: -16.500436782836914
    9. ' ' → logprob: -16.687936782836914
    10. '{k' → logprob: -16.937936782836914

Token 162: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0004446124075911939
    2. '3' → logprob: -7.875444412231445
    3. '2' → logprob: -10.500444412231445
    4. 'k' → logprob: -10.750444412231445
    5. '[' → logprob: -11.375444412231445
    6. '```' → logprob: -13.625444412231445
    7. ' [' → logprob: -14.500444412231445
    8. '[i' → logprob: -14.625444412231445
    9. '{k' → logprob: -15.000444412231445
    10. '[j' → logprob: -15.250444412231445

Token 163: ']
' (ID: 1592)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.42401495575904846
    2. ']' → logprob: -1.174014925956726
    3. '])' → logprob: -4.174015045166016
    4. '.real' → logprob: -4.549015045166016
    5. ')' → logprob: -4.924015045166016
    6. ').' → logprob: -6.674015045166016
    7. '.imag' → logprob: -7.299015045166016
    8. '.' → logprob: -7.674015045166016
    9. ' ].' → logprob: -8.799015045166016
    10. ']).' → logprob: -9.549015045166016

Token 164: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005786343012005091
    2. '
' → logprob: -6.130786418914795
    3. '                   ' → logprob: -6.630786418914795
    4. '                
' → logprob: -6.755786418914795
    5. '           ' → logprob: -8.505785942077637
    6. ' k' → logprob: -8.505785942077637
    7. 'k' → logprob: -8.630785942077637
    8. '              ' → logprob: -9.255785942077637
    9. '<|end|>' → logprob: -9.255785942077637
    10. '                ' → logprob: -10.005785942077637

Token 165: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.0008077251841314137
    2. ' k' → logprob: -7.125807762145996
    3. '   ' → logprob: -13.625807762145996
    4. '               ' → logprob: -14.375807762145996
    5. '                   ' → logprob: -14.375807762145996
    6. '           ' → logprob: -14.750807762145996
    7. ' ' → logprob: -14.750807762145996
    8. '	k' → logprob: -17.00080680847168
    9. '```' → logprob: -17.12580680847168
    10. '
' → logprob: -17.25080680847168

Token 166: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.039555296301841736
    2. ' +=' → logprob: -3.289555311203003
    3. '+' → logprob: -6.539555072784424
    4. '=' → logprob: -11.039555549621582
    5. '++' → logprob: -11.414555549621582
    6. ']+=' → logprob: -11.539555549621582
    7. '<|end|>' → logprob: -11.789555549621582
    8. '```' → logprob: -12.414555549621582
    9. ' +' → logprob: -12.539555549621582
    10. ' ' → logprob: -13.039555549621582

Token 167: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -18.125045776367188
    4. '   ' → logprob: -18.250045776367188
    5. '  ' → logprob: -19.437545776367188
    6. '１' → logprob: -19.562545776367188
    7. '+' → logprob: -19.937545776367188
    8. ' ' → logprob: -20.187545776367188
    9. '۱' → logprob: -20.250045776367188
    10. '
' → logprob: -20.875045776367188

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '１' → logprob: -19.25000762939453
    4. '```' → logprob: -19.75000762939453
    5. '   ' → logprob: -20.37500762939453
    6. '  ' → logprob: -20.81250762939453
    7. '۱' → logprob: -20.87500762939453
    8. '+' → logprob: -21.25000762939453
    9. '2' → logprob: -21.50000762939453
    10. ' ' → logprob: -22.06250762939453

Token 169: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006260919850319624
    2. '           ' → logprob: -5.631260871887207
    3. '<|end|>' → logprob: -6.256260871887207
    4. '
' → logprob: -7.881260871887207
    5. '  
' → logprob: -9.256260871887207
    6. '<|end|>' → logprob: -9.381260871887207
    7. '            
' → logprob: -9.881260871887207
    8. ',
' → logprob: -10.381260871887207
    9. ' 
' → logprob: -10.756260871887207
    10. '\n' → logprob: -11.131260871887207

Token 170: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005342736374586821
    2. '           ' → logprob: -5.755342960357666
    3. '<|end|>' → logprob: -6.880342960357666
    4. '
' → logprob: -7.255342960357666
    5. '            
' → logprob: -9.005342483520508
    6. '

' → logprob: -9.630342483520508
    7. '<|end|>' → logprob: -10.255342483520508
    8. ' if' → logprob: -10.380342483520508
    9. ' 
' → logprob: -10.630342483520508
    10. '  
' → logprob: -10.630342483520508

Token 171: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18189072608947754
    2. '
' → logprob: -2.8068907260894775
    3. '           ' → logprob: -3.1818907260894775
    4. 'if' (adapté à ' if') → logprob: -3.3068907260894775
    5. ' s' → logprob: -4.556890487670898
    6. ' ans' → logprob: -4.931890487670898
    7. ' for' → logprob: -5.556890487670898
    8. 's' → logprob: -7.056890487670898
    9. '   ' → logprob: -7.431890487670898
    10. 'ans' → logprob: -7.806890487670898

Token 172: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.2801365256309509
    2. 'abs' → logprob: -1.6551365852355957
    3. ' s' → logprob: -3.2801365852355957
    4. 's' → logprob: -5.405136585235596
    5. '(abs' → logprob: -5.405136585235596
    6. 'cmath' → logprob: -5.655136585235596
    7. ' cm' → logprob: -6.155136585235596
    8. 'cm' → logprob: -8.530136108398438
    9. ' ' → logprob: -8.655136108398438
    10. ' c' → logprob: -9.405136108398438

Token 173: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.3199920178740285e-05
    2. '(' → logprob: -11.375022888183594
    3. 's' → logprob: -11.500022888183594
    4. '(ans' → logprob: -14.750022888183594
    5. ' (' → logprob: -14.875022888183594
    6. '(
' → logprob: -15.125022888183594
    7. '((' → logprob: -15.250022888183594
    8. '(abs' → logprob: -15.375022888183594
    9. '(round' → logprob: -17.750022888183594
    10. '(sum' → logprob: -17.875022888183594

Token 174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8195342421531677
    2. ' >' → logprob: -1.5695343017578125
    3. ' <=' → logprob: -1.8195343017578125
    4. ' <' → logprob: -1.9445343017578125
    5. '>' → logprob: -4.1945343017578125
    6. '<' → logprob: -4.5695343017578125
    7. '<=' → logprob: -4.8195343017578125
    8. ' ' → logprob: -5.4445343017578125
    9. ' )' → logprob: -6.0695343017578125
    10. ' >=' → logprob: -6.5695343017578125

Token 175: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8975178003311157
    2. ' >' → logprob: -0.8975178003311157
    3. ' <=' → logprob: -2.522517681121826
    4. '>' → logprob: -2.897517681121826
    5. '<' → logprob: -3.272517681121826
    6. '<=' → logprob: -5.272517681121826
    7. ' >=' → logprob: -5.522517681121826
    8. ' ' → logprob: -7.022517681121826
    9. ' ==' → logprob: -7.397517681121826
    10. '>=' → logprob: -7.647517681121826

Token 176: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.034281305968761444
    2. ' ans' → logprob: -3.4092812538146973
    3. 'abs' → logprob: -7.534281253814697
    4. '	ans' → logprob: -9.909281730651855
    5. ' abs' → logprob: -10.534281730651855
    6. ' ' → logprob: -11.909281730651855
    7. '(ans' → logprob: -12.284281730651855
    8. '   ' → logprob: -12.534281730651855
    9. 'answer' → logprob: -13.409281730651855
    10. '  ' → logprob: -13.784281730651855

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14410832524299622
    2. ':
' → logprob: -2.019108295440674
    3. ' :' → logprob: -7.269108295440674
    4. ' :
' → logprob: -8.144108772277832
    5. ':
' → logprob: -8.894108772277832
    6. '           ' → logprob: -9.019108772277832
    7. '=' → logprob: -9.269108772277832
    8. '               ' → logprob: -10.394108772277832
    9. ' =' → logprob: -10.769108772277832
    10. '       ' → logprob: -11.769108772277832

Token 178: '               ' (ID: 506)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.04997507855296135
    2. 'abs' → logprob: -3.1749751567840576
    3. ' s' → logprob: -5.6749749183654785
    4. '               ' → logprob: -6.0499749183654785
    5. '           ' → logprob: -7.9249749183654785
    6. 's' → logprob: -8.174975395202637
    7. ' int' → logprob: -8.299975395202637
    8. 'int' → logprob: -9.049975395202637
    9. '(abs' → logprob: -9.549975395202637
    10. ' ans' → logprob: -10.674975395202637

Token 179: ' ans' (ID: 3345)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.1356503814458847
    2. 'ans' (adapté à ' ans') → logprob: -2.135650396347046
    3. ' abs' → logprob: -5.135650157928467
    4. ' ans' → logprob: -5.885650157928467
    5. '               ' → logprob: -11.135650634765625
    6. 'int' → logprob: -12.635650634765625
    7. '           ' → logprob: -13.385650634765625
    8. 's' → logprob: -13.385650634765625
    9. '                   ' → logprob: -14.885650634765625
    10. ' s' → logprob: -15.260650634765625

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192973017692566
    2. '=' → logprob: -1.501929759979248
    3. 's' → logprob: -15.87692928314209
    4. ' ' → logprob: -16.126930236816406
    5. '=int' → logprob: -16.126930236816406
    6. '＝' → logprob: -16.376930236816406
    7. '.=' → logprob: -16.751930236816406
    8. ',' → logprob: -16.876930236816406
    9. '=s' → logprob: -17.376930236816406
    10. ' +=' → logprob: -18.251930236816406

Token 181: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.22544659674167633
    2. ' abs' → logprob: -1.6004465818405151
    3. 'int' → logprob: -11.100446701049805
    4. '(abs' → logprob: -11.225446701049805
    5. ' int' → logprob: -13.475446701049805
    6. 's' → logprob: -13.475446701049805
    7. ' s' → logprob: -14.350446701049805
    8. '.abs' → logprob: -14.600446701049805
    9. '   ' → logprob: -15.225446701049805
    10. ' ' → logprob: -15.287946701049805

Token 182: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006274910410866141
    2. '(' → logprob: -7.375627517700195
    3. 's' → logprob: -14.625627517700195
    4. ' (' → logprob: -15.000627517700195
    5. '(
' → logprob: -16.250627517700195
    6. '(k' → logprob: -17.250627517700195
    7. '(x' → logprob: -17.875627517700195
    8. '(S' → logprob: -18.375627517700195
    9. '(t' → logprob: -18.500627517700195
    10. '(i' → logprob: -19.375627517700195

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031413204851560295
    2. ')
' → logprob: -8.625313758850098
    3. ' )' → logprob: -9.375313758850098
    4. ')+' → logprob: -10.125313758850098
    5. ')return' → logprob: -13.375313758850098
    6. ')

' → logprob: -13.875313758850098
    7. '[' → logprob: -14.250313758850098
    8. '       ' → logprob: -14.250313758850098
    9. '<|end|>' → logprob: -14.375313758850098
    10. '))' → logprob: -14.500313758850098

Token 184: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000411011598771438
    2. '
' → logprob: -7.875411033630371
    3. ' print' → logprob: -10.875411033630371
    4. ')
' → logprob: -12.125411033630371
    5. '
' → logprob: -12.750411033630371
    6. ')' → logprob: -12.750411033630371
    7. ' 
' → logprob: -15.375411033630371
    8. '    
' → logprob: -16.750410079956055
    9. '  
' → logprob: -16.875410079956055
    10. '.print' → logprob: -16.875410079956055

Token 185: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020795092859771103
    2. ' print' → logprob: -9.500207901000977
    3. 'else' (adapté à ' else') → logprob: -9.625207901000977
    4. ')' → logprob: -10.250207901000977
    5. 'return' → logprob: -11.750207901000977
    6. '+' → logprob: -12.375207901000977
    7. ' else' → logprob: -12.625207901000977
    8. '0' → logprob: -12.750207901000977
    9. '<|end|>' → logprob: -13.375207901000977
    10. '```' → logprob: -13.375207901000977

Token 186: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6308682560920715
    2. ':
' → logprob: -1.2558681964874268
    3. ':' → logprob: -2.1308681964874268
    4. '0' → logprob: -3.2558681964874268
    5. '       ' → logprob: -4.005868434906006
    6. '   ' → logprob: -6.005868434906006
    7. '```' → logprob: -6.880868434906006
    8. ' s' → logprob: -7.005868434906006
    9. ' ' → logprob: -7.380868434906006
    10. 's' → logprob: -7.505868434906006

Token 187: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08472677320241928
    2. '           ' → logprob: -3.0847268104553223
    3. ' ' → logprob: -3.7097268104553223
    4. '       ' → logprob: -5.334726810455322
    5. 'for' → logprob: -6.459726810455322
    6. '   ' → logprob: -6.709726810455322
    7. 's' → logprob: -6.834726810455322
    8. ' for' → logprob: -7.209726810455322
    9. 'continue' → logprob: -8.084726333618164
    10. 'ans' → logprob: -8.209726333618164

Token 188: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0064670247957110405
    2. '0' → logprob: -5.381466865539551
    3. ' s' → logprob: -6.881466865539551
    4. 'ans' → logprob: -7.756466865539551
    5. 'for' → logprob: -9.00646686553955
    6. 'continue' → logprob: -9.25646686553955
    7. 'N' → logprob: -10.00646686553955
    8. 'pass' → logprob: -10.50646686553955
    9. 'abs' → logprob: -11.13146686553955
    10. '   ' → logprob: -11.25646686553955

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931691765785217
    2. ' =' → logprob: -0.6931691765785217
    3. '+=' → logprob: -11.568169593811035
    4. ' +=' → logprob: -11.568169593811035
    5. ' ' → logprob: -13.443169593811035
    6. 's' → logprob: -15.068169593811035
    7. '           ' → logprob: -15.943169593811035
    8. ',' → logprob: -16.19316864013672
    9. ' s' → logprob: -16.31816864013672
    10. '＝' → logprob: -16.31816864013672

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38718366622924805
    2. ' ' → logprob: -1.137183666229248
    3. ' XY' → logprob: -9.137184143066406
    4. 'XY' → logprob: -9.387184143066406
    5. ' abs' → logprob: -10.512184143066406
    6. 'sum' → logprob: -10.637184143066406
    7. 'abs' → logprob: -10.637184143066406
    8. ' sum' → logprob: -10.887184143066406
    9. 's' → logprob: -12.387184143066406
    10. ' s' → logprob: -12.574684143066406

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017590753268450499
    2. ' ' → logprob: -6.376759052276611
    3. 'XY' → logprob: -10.25175952911377
    4. 'sum' → logprob: -12.00175952911377
    5. ' XY' → logprob: -12.56425952911377
    6. 'complex' → logprob: -12.75175952911377
    7. 'abs' → logprob: -13.31425952911377
    8. 's' → logprob: -14.56425952911377
    9. ' sum' → logprob: -14.81425952911377
    10. '1' → logprob: -14.87675952911377

Token 192: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0073780277743935585
    2. 'k' → logprob: -6.132378101348877
    3. ' k' → logprob: -6.382378101348877
    4. '   ' → logprob: -6.632378101348877
    5. '<|end|>' → logprob: -6.757378101348877
    6. '       ' → logprob: -8.007377624511719
    7. ' ' → logprob: -8.382377624511719
    8. '		' → logprob: -9.382377624511719
    9. '<|end|>' → logprob: -9.757377624511719
    10. '
' → logprob: -9.757377624511719

Token 193: '           ' (ID: 352)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5450423359870911
    2. '           ' → logprob: -0.9200423359870911
    3. ' k' → logprob: -3.9200422763824463
    4. 'for' → logprob: -7.045042514801025
    5. ' for' → logprob: -7.295042514801025
    6. ' ' → logprob: -9.545042037963867
    7. '<|end|>' → logprob: -9.670042037963867
    8. '   ' → logprob: -9.795042037963867
    9. '       ' → logprob: -10.420042037963867
    10. '```' → logprob: -10.795042037963867

Token 194: ' for' (ID: 395)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00018113377154804766
    2. ' k' → logprob: -9.125181198120117
    3. '           ' → logprob: -10.375181198120117
    4. 'j' → logprob: -10.625181198120117
    5. 'for' (adapté à ' for') → logprob: -11.375181198120117
    6. 'l' → logprob: -12.875181198120117
    7. ' for' → logprob: -14.625181198120117
    8. '       ' → logprob: -14.750181198120117
    9. '               ' → logprob: -14.875181198120117
    10. '   ' → logprob: -15.000181198120117

Token 195: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004390001762658358
    2. ' k' → logprob: -5.504390239715576
    3. 'j' → logprob: -8.254389762878418
    4. 'i' → logprob: -10.504389762878418
    5. 'l' → logprob: -11.629389762878418
    6. ' j' → logprob: -12.379389762878418
    7. 'm' → logprob: -13.254389762878418
    8. 'z' → logprob: -13.254389762878418
    9. 'x' → logprob: -13.379389762878418
    10. 's' → logprob: -13.754389762878418

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132950961589813
    2. 'in' → logprob: -1.3132951259613037
    3. 'range' → logprob: -10.938295364379883
    4. 'k' → logprob: -11.938295364379883
    5. ' ' → logprob: -13.313295364379883
    6. '   ' → logprob: -13.438295364379883
    7. 'n' → logprob: -14.063295364379883
    8. '  ' → logprob: -14.188295364379883
    9. ' range' → logprob: -14.313295364379883
    10. '```' → logprob: -14.438295364379883

Token 197: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005179916508495808
    2. 'in' → logprob: -6.0051798820495605
    3. 'i' → logprob: -6.5051798820495605
    4. ' range' → logprob: -6.8801798820495605
    5. 'j' → logprob: -9.130180358886719
    6. 'list' → logprob: -10.505180358886719
    7. ' in' → logprob: -10.630180358886719
    8. '[i' → logprob: -12.505180358886719
    9. '(range' → logprob: -12.505180358886719
    10. ' i' → logprob: -12.630180358886719

Token 198: '(' (ID: 7)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.1979861855506897
    2. '(i' → logprob: -1.822986125946045
    3. '(N' → logprob: -4.072986125946045
    4. 'j' → logprob: -7.322986125946045
    5. '(' → logprob: -8.947986602783203
    6. '(len' → logprob: -9.197986602783203
    7. 'N' → logprob: -9.572986602783203
    8. 'i' → logprob: -9.822986602783203
    9. '(n' → logprob: -11.697986602783203
    10. '((' → logprob: -12.322986602783203

Token 199: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.14231890439987183
    2. 'i' → logprob: -2.2673189640045166
    3. 'N' → logprob: -4.0173187255859375
    4. '(j' → logprob: -5.0173187255859375
    5. '(i' → logprob: -5.6423187255859375
    6. '(N' → logprob: -7.3923187255859375
    7. '0' → logprob: -9.142318725585938
    8. ' j' → logprob: -9.892318725585938
    9. 'len' → logprob: -10.392318725585938
    10. '   ' → logprob: -11.267318725585938

Token 200: ',' (ID: 11)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02213686890900135
    2. 'N' → logprob: -4.647136688232422
    3. ' j' → logprob: -5.022136688232422
    4. 'i' → logprob: -5.522136688232422
    5. '   ' → logprob: -7.022136688232422
    6. ',j' → logprob: -8.772136688232422
    7. ' N' → logprob: -9.022136688232422
    8. '(j' → logprob: -9.022136688232422
    9. ',' → logprob: -9.022136688232422
    10. ' i' → logprob: -9.772136688232422

Token 201: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01634870655834675
    2. ' j' → logprob: -4.641348838806152
    3. 'i' → logprob: -5.141348838806152
    4. 'N' → logprob: -8.016348838806152
    5. ' i' → logprob: -8.766348838806152
    6. '   ' → logprob: -9.141348838806152
    7. ' N' → logprob: -10.891348838806152
    8. '       ' → logprob: -10.891348838806152
    9. '           ' → logprob: -11.266348838806152
    10. ')' → logprob: -11.516348838806152

Token 202: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013281404972076416
    2. ' +' → logprob: -4.388281345367432
    3. '):
' → logprob: -8.01328182220459
    4. '1' → logprob: -8.88828182220459
    5. '):' → logprob: -9.01328182220459
    6. '   ' → logprob: -9.51328182220459
    7. ',' → logprob: -10.63828182220459
    8. '       ' → logprob: -10.76328182220459
    9. ' ' → logprob: -11.51328182220459
    10. ')' → logprob: -11.63828182220459

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012287121266126633
    2. '+' → logprob: -5.637287139892578
    3. 'k' → logprob: -5.637287139892578
    4. 'N' → logprob: -5.762287139892578
    5. ' ' → logprob: -7.012287139892578
    6. 'i' → logprob: -8.137287139892578
    7. ' N' → logprob: -8.637287139892578
    8. 'len' → logprob: -9.012287139892578
    9. '   ' → logprob: -9.262287139892578
    10. ' k' → logprob: -9.762287139892578

Token 204: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11122364550828934
    2. '+' → logprob: -2.6112236976623535
    3. '           ' → logprob: -4.1112236976623535
    4. '):' → logprob: -4.8612236976623535
    5. '               ' → logprob: -5.8612236976623535
    6. ')' → logprob: -5.9862236976623535
    7. '+s' → logprob: -7.2362236976623535
    8. 's' → logprob: -8.361223220825195
    9. '```' → logprob: -8.611223220825195
    10. ' +' → logprob: -8.736223220825195

Token 205: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13540242612361908
    2. ' s' → logprob: -2.7604024410247803
    3. 's' → logprob: -3.0104024410247803
    4. '           ' → logprob: -4.385402202606201
    5. '<|end|>' → logprob: -7.260402202606201
    6. '```' → logprob: -8.76040267944336
    7. ' ' → logprob: -9.01040267944336
    8. '              ' → logprob: -9.26040267944336
    9. '       ' → logprob: -9.38540267944336
    10. '+' → logprob: -9.88540267944336

Token 206: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5760557055473328
    2. 's' (adapté à ' s') → logprob: -0.8260557055473328
    3. '               ' → logprob: -9.451055526733398
    4. '                   ' → logprob: -11.201055526733398
    5. ' ' → logprob: -11.701055526733398
    6. '   ' → logprob: -12.701055526733398
    7. '           ' → logprob: -12.826055526733398
    8. '                       ' → logprob: -12.826055526733398
    9. '	s' → logprob: -13.326055526733398
    10. '
' → logprob: -13.451055526733398

Token 207: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931643486022949
    2. '+=' → logprob: -0.6931643486022949
    3. ']+=' → logprob: -11.818164825439453
    4. '+' → logprob: -12.568164825439453
    5. '           ' → logprob: -13.443164825439453
    6. '+=(' → logprob: -13.568164825439453
    7. '=' → logprob: -14.068164825439453
    8. ' ' → logprob: -14.943164825439453
    9. ' =' → logprob: -14.943164825439453
    10. ' ' → logprob: -15.068164825439453

Token 208: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.004080420359969139
    2. ' XY' → logprob: -5.504080295562744
    3. 'XYZ' → logprob: -13.754080772399902
    4. ' ' → logprob: -14.629080772399902
    5. 'X' → logprob: -15.754080772399902
    6. '   ' → logprob: -15.879080772399902
    7. 'xy' → logprob: -16.629079818725586
    8. '           ' → logprob: -16.879079818725586
    9. '  ' → logprob: -17.754079818725586
    10. '(X' → logprob: -18.004079818725586

Token 209: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0022410124074667692
    2. '[k' → logprob: -6.127241134643555
    3. 'k' → logprob: -10.502241134643555
    4. 'XY' → logprob: -11.002241134643555
    5. '[' → logprob: -12.252241134643555
    6. '2' → logprob: -13.127241134643555
    7. '[N' → logprob: -13.502241134643555
    8. '```' → logprob: -14.252241134643555
    9. '[X' → logprob: -14.502241134643555
    10. 'X' → logprob: -15.127241134643555

Token 210: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.023249205201864243
    2. 'k' → logprob: -3.7732491493225098
    3. ' [' → logprob: -13.773249626159668
    4. ' k' → logprob: -13.898249626159668
    5. '{k' → logprob: -14.523249626159668
    6. '(k' → logprob: -14.648249626159668
    7. '[' → logprob: -14.773249626159668
    8. '   ' → logprob: -15.648249626159668
    9. '```' → logprob: -16.52324867248535
    10. '[
' → logprob: -16.89824867248535

Token 211: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6918292045593262
    2. ')' → logprob: -0.9418292045593262
    3. ']
' → logprob: -3.441829204559326
    4. '           ' → logprob: -3.691829204559326
    5. ']' → logprob: -3.941829204559326
    6. '+' → logprob: -4.191829204559326
    7. '       ' → logprob: -4.566829204559326
    8. '               ' → logprob: -6.441829204559326
    9. ']+' → logprob: -6.441829204559326
    10. ' +' → logprob: -6.691829204559326

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000526938121765852
    2. '       ' → logprob: -8.375527381896973
    3. '+' → logprob: -9.500527381896973
    4. '               ' → logprob: -9.750527381896973
    5. ' +' → logprob: -10.250527381896973
    6. ' ' → logprob: -10.625527381896973
    7. '
' → logprob: -10.750527381896973
    8. '   ' → logprob: -11.000527381896973
    9. ' for' → logprob: -11.000527381896973
    10. '<|end|>' → logprob: -11.500527381896973

Token 213: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00849271472543478
    2. ' for' → logprob: -5.008492946624756
    3. '           ' → logprob: -6.383492946624756
    4. '       ' → logprob: -10.258492469787598
    5. '   ' → logprob: -11.008492469787598
    6. ' ' → logprob: -11.383492469787598
    7. 'l' → logprob: -12.383492469787598
    8. 's' → logprob: -12.383492469787598
    9. '	for' → logprob: -12.383492469787598
    10. '```' → logprob: -12.508492469787598

Token 214: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011344297789037228
    2. ' k' → logprob: -4.5113444328308105
    3. ' range' → logprob: -8.761343955993652
    4. 'range' → logprob: -8.886343955993652
    5. ' in' → logprob: -13.636343955993652
    6. ' ' → logprob: -15.761343955993652
    7. '   ' → logprob: -16.63634490966797
    8. '  ' → logprob: -17.26134490966797
    9. 'in' → logprob: -17.51134490966797
    10. 'l' → logprob: -17.76134490966797

Token 215: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5785539746284485
    2. 'in' → logprob: -0.8285539746284485
    3. 'range' → logprob: -6.203554153442383
    4. ' range' → logprob: -8.078554153442383
    5. '(j' → logprob: -8.328554153442383
    6. '   ' → logprob: -11.328554153442383
    7. '(range' → logprob: -11.953554153442383
    8. '       ' → logprob: -12.453554153442383
    9. '[j' → logprob: -12.578554153442383
    10. '(in' → logprob: -12.828554153442383

Token 216: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005552975926548243
    2. ' range' → logprob: -7.500555515289307
    3. 'j' → logprob: -13.500555038452148
    4. '(range' → logprob: -14.375555038452148
    5. '(j' → logprob: -16.25055503845215
    6. 'in' → logprob: -16.37555503845215
    7. '   ' → logprob: -17.25055503845215
    8. 'rang' → logprob: -17.87555503845215
    9. ' j' → logprob: -18.50055503845215
    10. '[j' → logprob: -18.50055503845215

Token 217: '(i' (ID: 3649)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0001238004770129919
    2. 'j' → logprob: -9.375123977661133
    3. '(' → logprob: -10.375123977661133
    4. 'range' → logprob: -12.250123977661133
    5. '(range' → logprob: -13.625123977661133
    6. '[j' → logprob: -14.500123977661133
    7. ',j' → logprob: -15.375123977661133
    8. ' (' → logprob: -15.500123977661133
    9. '(i' → logprob: -15.500123977661133
    10. ' j' → logprob: -16.000123977661133

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06459551304578781
    2. ',N' → logprob: -2.8145954608917236
    3. 'N' → logprob: -6.064595699310303
    4. ',len' → logprob: -8.314595222473145
    5. ' ,' → logprob: -10.564595222473145
    6. ',n' → logprob: -11.314595222473145
    7. '           ' → logprob: -11.689595222473145
    8. 'len' → logprob: -12.939595222473145
    9. '       ' → logprob: -13.314595222473145
    10. '+' → logprob: -13.939595222473145

Token 219: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00018399098189547658
    2. 'len' → logprob: -8.625184059143066
    3. ' N' → logprob: -12.375184059143066
    4. ' len' → logprob: -16.75018310546875
    5. '   ' → logprob: -16.87518310546875
    6. 'n' → logprob: -17.62518310546875
    7. '	N' → logprob: -17.87518310546875
    8. '```' → logprob: -18.37518310546875
    9. '(N' → logprob: -19.00018310546875
    10. ',N' → logprob: -19.25018310546875

Token 220: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002690748078748584
    2. '):' → logprob: -6.75269079208374
    3. '           ' → logprob: -7.37769079208374
    4. 's' → logprob: -8.127690315246582
    5. '):
' → logprob: -8.127690315246582
    6. '):

' → logprob: -9.752690315246582
    7. '               ' → logprob: -10.252690315246582
    8. ':
' → logprob: -10.377690315246582
    9. ' s' → logprob: -10.502690315246582
    10. '       ' → logprob: -10.502690315246582

Token 221: '               ' (ID: 506)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7450982332229614
    2. '               ' → logprob: -0.7450982332229614
    3. ' s' → logprob: -2.995098114013672
    4. '           ' → logprob: -8.245098114013672
    5. '```' → logprob: -8.245098114013672
    6. ' ' → logprob: -10.245098114013672
    7. '<s' → logprob: -12.495098114013672
    8. '   ' → logprob: -12.495098114013672
    9. '       ' → logprob: -12.620098114013672
    10. '_s' → logprob: -13.245098114013672

Token 222: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.014173506759107113
    2. ' s' → logprob: -4.26417350769043
    3. '           ' → logprob: -12.63917350769043
    4. '               ' → logprob: -12.76417350769043
    5. '```' → logprob: -13.26417350769043
    6. ' ' → logprob: -13.63917350769043
    7. '       ' → logprob: -14.63917350769043
    8. '   ' → logprob: -16.01417350769043
    9. '`s' → logprob: -16.76417350769043
    10. '	s' → logprob: -16.76417350769043

Token 223: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038170937448740005
    2. ' +=' → logprob: -3.2881710529327393
    3. ']+=' → logprob: -9.53817081451416
    4. '           ' → logprob: -10.41317081451416
    5. '          ' → logprob: -11.16317081451416
    6. '        ' → logprob: -13.03817081451416
    7. '=' → logprob: -13.41317081451416
    8. '+' → logprob: -13.41317081451416
    9. '       ' → logprob: -13.53817081451416
    10. '>' → logprob: -13.78817081451416

Token 224: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.001709209755063057
    2. ' XY' → logprob: -6.376708984375
    3. 'XYZ' → logprob: -12.126708984375
    4. 'xy' → logprob: -14.001708984375
    5. ' ' → logprob: -15.626708984375
    6. '(X' → logprob: -16.001708984375
    7. '           ' → logprob: -16.251708984375
    8. '   ' → logprob: -16.626708984375
    9. 'X' → logprob: -16.876708984375
    10. '_xy' → logprob: -16.876708984375

Token 225: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0001475220051361248
    2. 'k' → logprob: -9.000147819519043
    3. '[k' → logprob: -10.750147819519043
    4. '```' → logprob: -14.125147819519043
    5. '2' → logprob: -14.250147819519043
    6. '{k' → logprob: -14.750147819519043
    7. ' ' → logprob: -15.750147819519043
    8. '
' → logprob: -16.125146865844727
    9. ' k' → logprob: -16.375146865844727
    10. '1' → logprob: -16.625146865844727

Token 226: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.005931758787482977
    2. 'k' → logprob: -5.130931854248047
    3. '```' → logprob: -13.130931854248047
    4. '{k' → logprob: -15.005931854248047
    5. '(k' → logprob: -15.880931854248047
    6. '[' → logprob: -15.880931854248047
    7. '[
' → logprob: -16.130931854248047
    8. '+k' → logprob: -16.630931854248047
    9. ' [' → logprob: -17.005931854248047
    10. ' k' → logprob: -17.005931854248047

Token 227: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001179512357339263
    2. ')' → logprob: -8.001179695129395
    3. ']
' → logprob: -8.376179695129395
    4. '])' → logprob: -8.376179695129395
    5. ']+' → logprob: -8.876179695129395
    6. '+' → logprob: -9.126179695129395
    7. ' ]' → logprob: -10.001179695129395
    8. ')]' → logprob: -10.251179695129395
    9. '+]' → logprob: -11.251179695129395
    10. '           ' → logprob: -11.376179695129395

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10557372123003006
    2. ' if' → logprob: -2.7305736541748047
    3. '               ' → logprob: -3.6055736541748047
    4. 'if' → logprob: -5.230573654174805
    5. '       ' → logprob: -6.605573654174805
    6. '   ' → logprob: -6.855573654174805
    7. '```' → logprob: -10.730573654174805
    8. '	if' → logprob: -11.730573654174805
    9. ' ' → logprob: -11.855573654174805
    10. '          ' → logprob: -11.980573654174805

Token 229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1044679805636406
    2. ' if' → logprob: -2.3544678688049316
    3. '           ' → logprob: -5.479467868804932
    4. '   ' → logprob: -10.47946834564209
    5. '       ' → logprob: -10.60446834564209
    6. '               ' → logprob: -11.60446834564209
    7. ' ' → logprob: -12.10446834564209
    8. '	if' → logprob: -12.72946834564209
    9. '```' → logprob: -12.85446834564209
    10. 'ans' → logprob: -12.97946834564209

Token 230: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.2519746720790863
    2. 'abs' → logprob: -1.5019747018814087
    3. '(abs' → logprob: -10.001975059509277
    4. '   ' → logprob: -16.50197410583496
    5. ' ans' → logprob: -17.12697410583496
    6. '.abs' → logprob: -17.12697410583496
    7. '_abs' → logprob: -17.12697410583496
    8. '```' → logprob: -17.37697410583496
    9. ' ' → logprob: -17.50197410583496
    10. ' ' → logprob: -17.62697410583496

Token 231: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.625
    3. ' (' → logprob: -16.5
    4. 's' → logprob: -17.0
    5. '(abs' → logprob: -19.875
    6. '(
' → logprob: -20.375
    7. '(max' → logprob: -21.125
    8. '```' → logprob: -21.875
    9. '(sum' → logprob: -22.0
    10. ')' → logprob: -22.0

Token 232: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3791985511779785
    2. ' >' → logprob: -1.3791985511779785
    3. ')' → logprob: -2.7541985511779785
    4. ')>' → logprob: -8.87919807434082
    5. ' )' → logprob: -12.00419807434082
    6. ' ' → logprob: -13.62919807434082
    7. '[' → logprob: -14.00419807434082
    8. '```' → logprob: -15.12919807434082
    9. '           ' → logprob: -15.37919807434082
    10. '()>' → logprob: -15.50419807434082

Token 233: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.47407984733581543
    2. ' >' → logprob: -0.9740798473358154
    3. ' ' → logprob: -13.349080085754395
    4. ' ' → logprob: -15.599080085754395
    5. '           ' → logprob: -15.599080085754395
    6. ')' → logprob: -15.849080085754395
    7. '```' → logprob: -16.099079132080078
    8. ')>' → logprob: -16.349079132080078
    9. '()>' → logprob: -16.349079132080078
    10. '＞' → logprob: -16.599079132080078

Token 234: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2014191895723343
    2. 'ans' → logprob: -1.7014192342758179
    3. '(ans' → logprob: -12.45141887664795
    4. '	ans' → logprob: -13.32641887664795
    5. '_ans' → logprob: -14.95141887664795
    6. 'Ans' → logprob: -17.326419830322266
    7. 'answer' → logprob: -17.576419830322266
    8. ' ' → logprob: -18.576419830322266
    9. ' ' → logprob: -18.701419830322266
    10. 'ANS' → logprob: -18.826419830322266

Token 235: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028991008177399635
    2. ':
' → logprob: -4.153991222381592
    3. '=' → logprob: -5.153991222381592
    4. '               ' → logprob: -5.278991222381592
    5. '           ' → logprob: -6.903991222381592
    6. ' =' → logprob: -7.278991222381592
    7. ' :' → logprob: -9.028990745544434
    8. '              ' → logprob: -10.528990745544434
    9. '):' → logprob: -10.653990745544434
    10. '>' → logprob: -10.903990745544434

Token 236: '               ' (ID: 506)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.0707000121474266
    2. 'abs' → logprob: -2.69569993019104
    3. ' ans' → logprob: -7.695700168609619
    4. '               ' → logprob: -8.445699691772461
    5. '           ' → logprob: -9.945699691772461
    6. 'ans' → logprob: -10.445699691772461
    7. ' s' → logprob: -11.320699691772461
    8. '(abs' → logprob: -12.945699691772461
    9. 's' → logprob: -14.445699691772461
    10. '=' → logprob: -14.570699691772461

Token 237: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.42226043343544006
    2. 'abs' → logprob: -1.1722604036331177
    3. ' ans' → logprob: -3.6722605228424072
    4. ' abs' → logprob: -4.672260284423828
    5. '	ans' → logprob: -15.547260284423828
    6. '           ' → logprob: -16.547260284423828
    7. '(ans' → logprob: -16.547260284423828
    8. 's' → logprob: -17.422260284423828
    9. ' s' → logprob: -17.547260284423828
    10. 'Ans' → logprob: -17.797260284423828

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931481957435608
    2. ' =' → logprob: -0.6931481957435608
    3. '＝' → logprob: -14.443148612976074
    4. '.=' → logprob: -16.068147659301758
    5. '<|end|>' → logprob: -16.693147659301758
    6. '+=' → logprob: -16.818147659301758
    7. ' ' → logprob: -17.068147659301758
    8. '=s' → logprob: -17.443147659301758
    9. 's' → logprob: -17.568147659301758
    10. ')' → logprob: -17.568147659301758

Token 239: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.014220509678125381
    2. ' abs' → logprob: -4.264220714569092
    3. 'ans' → logprob: -9.889220237731934
    4. 's' → logprob: -12.389220237731934
    5. '(abs' → logprob: -14.264220237731934
    6. 'int' → logprob: -14.389220237731934
    7. ' ans' → logprob: -14.639220237731934
    8. ' s' → logprob: -14.639220237731934
    9. '_abs' → logprob: -17.51422119140625
    10. '.abs' → logprob: -18.13922119140625

Token 240: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.8624639324116288e-06
    2. 's' → logprob: -13.875001907348633
    3. '(' → logprob: -14.250001907348633
    4. ' (' → logprob: -15.375001907348633
    5. '(
' → logprob: -18.125001907348633
    6. '(abs' → logprob: -18.875001907348633
    7. '(ans' → logprob: -19.250001907348633
    8. '```' → logprob: -19.625001907348633
    9. ' s' → logprob: -20.500001907348633
    10. '(max' → logprob: -21.875001907348633

Token 241: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001980570232262835
    2. ')
' → logprob: -9.250198364257812
    3. '+' → logprob: -9.875198364257812
    4. ')+' → logprob: -10.875198364257812
    5. ')return' → logprob: -12.000198364257812
    6. '<|end|>' → logprob: -12.125198364257812
    7. '):' → logprob: -12.250198364257812
    8. ' )' → logprob: -12.375198364257812
    9. '):
' → logprob: -13.000198364257812
    10. '+)' → logprob: -13.625198364257812

Token 242: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.919942486798391e-05
    2. ' print' → logprob: -10.125059127807617
    3. ')' → logprob: -11.375059127807617
    4. '+' → logprob: -12.000059127807617
    5. '\n' → logprob: -15.000059127807617
    6. '```' → logprob: -15.250059127807617
    7. '
' → logprob: -15.375059127807617
    8. ')
' → logprob: -16.125059127807617
    9. '  
' → logprob: -16.500059127807617
    10. ' 
' → logprob: -16.750059127807617

Token 243: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0013546408154070377
    2. '(abs' → logprob: -7.251354694366455
    3. '(max' → logprob: -7.751354694366455
    4. '(' → logprob: -9.126354217529297
    5. '()' → logprob: -9.376354217529297
    6. 'ans' → logprob: -11.876354217529297
    7. '(int' → logprob: -12.126354217529297
    8. '(round' → logprob: -12.126354217529297
    9. ' (' → logprob: -14.001354217529297
    10. 'max' → logprob: -14.251354217529297

Token 244: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -14.125001907348633
    3. ')`' → logprob: -14.625001907348633
    4. '+' → logprob: -15.000001907348633
    5. ')
' → logprob: -15.500001907348633
    6. '))' → logprob: -16.125001907348633
    7. '())' → logprob: -16.375001907348633
    8. '()' → logprob: -16.625001907348633
    9. '**' → logprob: -16.875001907348633
    10. '*' → logprob: -17.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 242
Tokens correctement prédits (1ère position, stricte): 106
Tokens correctement prédits (1ère position, avec adaptation): 115
Tokens correctement prédits (top 10): 209
Précision stricte (1ère position): 43.80%
Précision adaptée (1ère position): 47.52%
Précision (top 10): 86.36%
================================================================================
