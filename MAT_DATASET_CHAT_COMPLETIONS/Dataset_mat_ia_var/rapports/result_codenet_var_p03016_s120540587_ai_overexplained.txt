================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lecture de quatre entiers séparés par des espaces sur une seule ligne d'entrée utilisateur.
# Ces entiers sont affectés respectivement aux variables L, A, B, M.
L, A, B, M = map(int, input().split())

# Définition d'une fonction appelée 'partsum' qui prend 4 arguments nommés a, b, l, n.
def partsum(a, b, l, n):
    # Création d'une liste 'doublingconst' de taille 60 remplie d'entiers zéro.
    # Cette liste stocke des valeurs utilisées pour une technique appelée 'doublage' inspirée de l'exponentiation rapide.
    doublingconst = [0 for i in range(0, 60)]
    # On initialise le premier élément (indice 0) de la liste à 1.
    # Cela sert de base pour la technique du doublage ci-après.
    doublingconst[0] = 1

    # Création d'une autre liste 'doublingline' de taille 60 remplie d'entiers zéro.
    # Cette liste va stocker des contributions additionnelles liées à la progression linéaire dans la construction du nombre.
    doublingline = [0 for i in range(0, 60)]
    # On initialise le premier élément à 0.
    doublingline[0] = 0

    # Boucle for allant de 1 à 59 inclus, c'est-à-dire pour chaque puissance de 2 jusqu'à 2^59, utilisée pour la technique du doublage.
    for i in range(1, 60):
        # Calcul de nouvelles valeurs dans doublingconst (contribution constante du bloc) :
        # pow(10, l*2**(i-1), M) calcule le reste (modulo M) de 10 à la puissance l fois 2^(i-1).
        # On ajoute 1 à ce résultat, puis on multiplie par la valeur précédente de doublingconst, et on prend le modulo M.
        doublingconst[i] = (
            (pow(10, l * 2 ** (i - 1), M) + 1) * doublingconst[i - 1] % M
        )

        # Calcul de nouvelles valeurs dans doublingline (contribution linéaire du bloc) :
        # pow(2, i-1, M) calcule 2^(i-1) modulo M.
        # On multiplie par pow(10, l*2**(i-1), M) (c'est-à-dire un décalage de chiffres en base 10), 
        # puis on multiplie par doublingconst[i-1]. Ce terme est ajouté à la précédente valeur de doublingline multipliée par
        # (pow(10, l*2**(i-1), M) + 1), puis modulo M.
        doublingline[i] = (
            (pow(10, l * 2 ** (i - 1), M) + 1) * doublingline[i - 1]
            + pow(2, i - 1, M) * pow(10, l * 2 ** (i - 1), M) * doublingconst[i - 1]
        ) % M

    # Initialisation de la variable qui cumulera la contribution "constante" totale.
    ansconst = 0
    # Initialisation du décalage 'chousei' (qui veut dire "ajustement" en japonais).
    chousei = 0

    # On effectue la décomposition binaire du nombre n (nombre de blocs à traiter).
    # À chaque bit 'i' à 1 dans n, on empile la contribution du 2^i-ème bloc via le doublage.
    for i in range(0, 60):
        # Test pour savoir si le i-ème bit est à 1 dans n : (n>>i &1 == 1)
        # L'opérateur '>>' réalise un décalage binaire à droite ; '& 1' isole le bit de poids faible.
        if n >> i & 1 == 1:
            # Ajout de la contribution constante de ce bloc, ajustée d'un décalage de puissance de 10 (décalage en base 10).
            ansconst += doublingconst[i] * pow(10, chousei * l, M)
            # Réduction modulo M pour maintenir la taille du nombre raisonnable.
            ansconst %= M
            # On augmente 'chousei' de 2^i, car on vient de traiter 2^i blocs de longueur l.
            chousei += 2 ** i

    # On recommence le même processus pour la contribution "linéaire".
    ansline = 0
    chousei = 0
    for i in range(0, 60):
        if n >> i & 1 == 1:
            # Ajout de la contribution issue du doublage, plus un terme de correction dépendant du décalage.
            ansline += (
                (doublingline[i] + chousei * doublingconst[i]) * pow(10, chousei * l, M)
            )
            ansline %= M
            chousei += 2 ** i

    # Renvoie la combinaison linéaire des contributions (poids a et b), comme retour de la fonction.
    return ansline * a + ansconst * b

# Détermination de la longueur (en nombre de chiffres) du nombre de départ A.
start = len(str(A))
# Détermination de la longueur (en nombre de chiffres) du dernier nombre généré (B*L + A - B).
end = len(str(B * L + A - B))

# Création d'une liste vide pour stocker les informations sur les "parties" à traiter.
# Chaque partie correspond à une plage de nombres ayant le même nombre de chiffres.
part = []

# Boucle qui va itérer du nombre de chiffres minimal de départ (start-1) à celui de fin (end - 1) inclus.
for i in range(start - 1, end):
    # Calcul de l'indice l (premier numéro de bloc atteignant le nombre de chiffres i+1), basé sur les propriétés de la suite arithmétique générée.
    l = 1 + (10 ** i - A - 1) // B
    # Calcul de l'indice r (dernier numéro de bloc pour i+1 chiffres),
    r = (10 ** (i + 1) - A - 1) // B
    # Correction pour que l ne soit pas en dessous de 0, grâce à la fonction max.
    l = max(0, l)
    # Correction pour que r ne dépasse pas L-1, grâce à la fonction min.
    r = min(L - 1, r)
    # Ajout d'une sous-liste contenant (nombre de chiffres, borne gauche l, borne droite r).
    part.append([i + 1, l, r])

# Tri de la liste part en ordre décroissant selon la longueur du nombre (part[i][0]) pour traitement ultérieur.
part.sort(reverse=True)

# Initialisation du résultat final à 0.
ans = 0
# Initialisation d'une variable 'chousei', représentant le nombre total de chiffres déjà produits,
# pour ajuster le décalage en base 10 pour la prochaine portion.
chousei = 0

# Parcours de chaque intervalle stocké dans la liste 'part' traitée.
for i in range(0, len(part)):
    # Décomposition de chaque sous-liste en variables 'length' (nombre de chiffres des nombres concernés), l, r.
    length, l, r = part[i]
    # Calcul de la valeur de départ (const) pour la séquence correspondante (dernier nombre de l'intervalle).
    const = B * r + A
    # Le pas de la suite arithmétique (line), qui est B (constance de l'écart entre les termes consécutifs).
    line = B
    # Addition au résultat final, pour cette portion :
    # - appel à partsum() qui va calculer la contribution de cette portion (nombre, positions, etc.),
    # - pow(10, chousei, M) multiplie par la bonne puissance de 10 selon tous les chiffres déjà traités,
    # - prise du modulo M après chaque addition majeure pour garder la taille du nombre sous contrôle.
    ans += (partsum(-line, const, length, r - l + 1) * pow(10, chousei, M)) % M
    ans %= M
    # Incrémentation du décalage 'chousei' par le nombre de chiffres produits dans cette portion (nombre de nombres * longueur de chaque nombre).
    chousei += length * (r - l + 1)

# Après avoir traité toutes les portions, affichage du résultat final.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lecture' (ID: 106534)
  → Token d'amorce (pas de prédiction)

Token 2: ' de' (ID: 334)
  → Token d'amorce (pas de prédiction)

Token 3: ' quatre' (ID: 41209)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7489266395568848
    2. ' fichier' → logprob: -0.8739266395568848
    3. 'f' → logprob: -2.4989266395568848
    4. ' fichiers' → logprob: -4.248926639556885
    5. 's' → logprob: -4.873926639556885
    6. ' f' → logprob: -5.748926639556885
    7. 'l' → logprob: -6.998926639556885
    8. 'd' → logprob: -7.873926639556885
    9. ' données' → logprob: -8.123926162719727
    10. ' fich' → logprob: -9.123926162719727

Token 4: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07282786816358566
    2. ' espaces' → logprob: -3.1978278160095215
    3. '_' → logprob: -3.9478278160095215
    4. ' lignes' → logprob: -5.1978278160095215
    5. '_l' → logprob: -6.0728278160095215
    6. ' espace' → logprob: -8.07282829284668
    7. ' _' → logprob: -8.57282829284668
    8. ' ```' → logprob: -8.69782829284668
    9. ' bytes' → logprob: -8.82282829284668
    10. 'l' → logprob: -8.82282829284668

Token 5: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.015392814762890339
    2. 'r' → logprob: -4.640392780303955
    3. 'ières' → logprob: -6.640392780303955
    4. 't' → logprob: -7.140392780303955
    5. 'êtes' → logprob: -7.515392780303955
    6. '```' → logprob: -7.640392780303955
    7. 'ier' → logprob: -7.890392780303955
    8. 'ri' → logprob: -8.140393257141113
    9. 'ers' → logprob: -8.515393257141113
    10. '�' → logprob: -8.640393257141113

Token 6: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7220410704612732
    2. 'n' → logprob: -0.7220410704612732
    3. 'x' → logprob: -3.847041130065918
    4. 'ent' → logprob: -5.972041130065918
    5. 'i' → logprob: -6.347041130065918
    6. 'e' → logprob: -7.097041130065918
    7. '#' → logprob: -7.597041130065918
    8. 'v' → logprob: -7.722041130065918
    9. '```' → logprob: -7.847041130065918
    10. '`' → logprob: -9.097041130065918

Token 7: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0128972502425313
    2. 's' → logprob: -4.63789701461792
    3. 'par' → logprob: -6.38789701461792
    4. ' par' → logprob: -7.13789701461792
    5. 'es' → logprob: -8.512897491455078
    6. 'é' → logprob: -8.762897491455078
    7. 'ès' → logprob: -9.262897491455078
    8. ',' → logprob: -9.762897491455078
    9. '```' → logprob: -9.762897491455078
    10. '#' → logprob: -11.137897491455078

Token 8: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1385231465101242
    2. 'par' → logprob: -2.7635231018066406
    3. '(' → logprob: -3.3885231018066406
    4. ':' → logprob: -4.763523101806641
    5. ',' → logprob: -5.138523101806641
    6. 'es' → logprob: -5.513523101806641
    7. '```' → logprob: -5.513523101806641
    8. '_' → logprob: -5.888523101806641
    9. '()' → logprob: -7.138523101806641
    10. ')' → logprob: -7.138523101806641

Token 9: ' des' (ID: 731)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.1296648979187012
    2. ' des' → logprob: -1.2546648979187012
    3. 'des' → logprob: -1.2546648979187012
    4. ' un' → logprob: -3.504664897918701
    5. 'une' → logprob: -4.254664897918701
    6. 'es' → logprob: -4.254664897918701
    7. '_' → logprob: -4.504664897918701
    8. 'esp' → logprob: -4.754664897918701
    9. '_des' → logprob: -5.379664897918701
    10. ' espaces' → logprob: -5.504664897918701

Token 10: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.23872679471969604
    2. ' espaces' → logprob: -1.6137268543243408
    3. ''esp' → logprob: -5.238726615905762
    4. 'es' → logprob: -5.613726615905762
    5. 'spaces' → logprob: -5.988726615905762
    6. ''espace' → logprob: -7.738726615905762
    7. '_' → logprob: -7.988726615905762
    8. '#' → logprob: -8.488726615905762
    9. ' spaces' → logprob: -9.488726615905762
    10. ',' → logprob: -9.488726615905762

Token 11: ' sur' (ID: 1512)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8036699295043945
    2. 'x' → logprob: -1.3036699295043945
    3. 'a' → logprob: -1.6786699295043945
    4. 'e' → logprob: -3.1786699295043945
    5. 'i' → logprob: -3.3036699295043945
    6. '```' → logprob: -5.0536699295043945
    7. 'ent' → logprob: -5.1786699295043945
    8. 'v' → logprob: -6.5536699295043945
    9. '`' → logprob: -6.9286699295043945
    10. '#' → logprob: -7.9286699295043945

Token 12: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7320223450660706
    2. ' la' → logprob: -1.3570222854614258
    3. 'une' → logprob: -1.8570222854614258
    4. 'la' → logprob: -2.482022285461426
    5. 'l' → logprob: -4.357022285461426
    6. ' ' → logprob: -5.482022285461426
    7. ''une' → logprob: -6.857022285461426
    8. ' ' → logprob: -6.857022285461426
    9. '_' → logprob: -7.357022285461426
    10. '```' → logprob: -7.357022285461426

Token 13: ' seule' (ID: 41983)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.20294223725795746
    2. 'l' → logprob: -2.702942132949829
    3. ' ' → logprob: -2.952942132949829
    4. ' ligne' → logprob: -3.952942132949829
    5. 'm' → logprob: -4.077942371368408
    6. ' seule' → logprob: -4.327942371368408
    7. ' ' → logprob: -4.702942371368408
    8. ' même' → logprob: -6.702942371368408
    9. '\' → logprob: -7.452942371368408
    10. '\n' → logprob: -7.702942371368408

Token 14: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.2741572856903076
    2. ' ligne' → logprob: -1.5241572856903076
    3. 'l' → logprob: -3.8991572856903076
    4. 'line' → logprob: -7.024157524108887
    5. ' ' → logprob: -8.274157524108887
    6. ' line' → logprob: -8.399157524108887
    7. 'lig' → logprob: -9.649157524108887
    8. 'lin' → logprob: -10.274157524108887
    9. ' lign' → logprob: -10.274157524108887
    10. 'input' → logprob: -10.649157524108887

Token 15: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0346488952636719
    2. 'x' → logprob: -1.4096488952636719
    3. 'e' → logprob: -1.7846488952636719
    4. 'a' → logprob: -1.7846488952636719
    5. 'i' → logprob: -3.159648895263672
    6. 'ent' → logprob: -4.409648895263672
    7. 'v' → logprob: -5.409648895263672
    8. '```' → logprob: -5.784648895263672
    9. '`' → logprob: -7.534648895263672
    10. 'entr' → logprob: -7.784648895263672

Token 16: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00786296185106039
    2. 'u' → logprob: -5.6328630447387695
    3. ''e' → logprob: -5.8828630447387695
    4. ''entrée' → logprob: -7.7578630447387695
    5. ''ent' → logprob: -8.13286304473877
    6. ''' → logprob: -8.38286304473877
    7. ''u' → logprob: -9.13286304473877
    8. 'é' → logprob: -9.38286304473877
    9. ''espace' → logprob: -9.63286304473877
    10. 'es' → logprob: -10.13286304473877

Token 17: ' utilisateur' (ID: 115595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8140790462493896
    2. 'e' → logprob: -1.3140790462493896
    3. 'x' → logprob: -1.8140790462493896
    4. 'i' → logprob: -2.8140790462493896
    5. 'a' → logprob: -2.9390790462493896
    6. 'v' → logprob: -5.189079284667969
    7. 'ent' → logprob: -5.439079284667969
    8. '```' → logprob: -7.564079284667969
    9. '#' → logprob: -7.689079284667969
    10. '_' → logprob: -8.564079284667969

Token 18: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6673016548156738
    2. 'e' → logprob: -1.2923016548156738
    3. 'x' → logprob: -2.167301654815674
    4. 'a' → logprob: -3.292301654815674
    5. 'i' → logprob: -3.417301654815674
    6. 'ent' → logprob: -4.292301654815674
    7. 'v' → logprob: -5.292301654815674
    8. '```' → logprob: -5.792301654815674
    9. '`' → logprob: -7.167301654815674
    10. 'enter' → logprob: -7.667301654815674

Token 19: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6183395981788635
    2. 'x' → logprob: -1.6183395385742188
    3. 'a' → logprob: -1.9933395385742188
    4. 'e' → logprob: -2.7433395385742188
    5. 'i' → logprob: -3.3683395385742188
    6. 'v' → logprob: -4.243339538574219
    7. 'ent' → logprob: -4.868339538574219
    8. 'val' → logprob: -6.493339538574219
    9. '```' → logprob: -6.493339538574219
    10. '#' → logprob: -7.243339538574219

Token 20: ' Ces' (ID: 35720)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7048877477645874
    2. 'ent' → logprob: -1.4548877477645874
    3. 'a' → logprob: -1.7048877477645874
    4. 'x' → logprob: -3.454887866973877
    5. 'e' → logprob: -3.829887866973877
    6. 'i' → logprob: -4.204887866973877
    7. 'val' → logprob: -5.579887866973877
    8. 'l' → logprob: -5.829887866973877
    9. 'input' → logprob: -6.079887866973877
    10. 'values' → logprob: -6.079887866973877

Token 21: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.43605491518974304
    2. ' ent' → logprob: -1.8110549449920654
    3. ' ' → logprob: -3.1860549449920654
    4. ' ' → logprob: -3.4360549449920654
    5. ' quatre' → logprob: -3.4360549449920654
    6. 'n' → logprob: -4.436054706573486
    7. 'val' → logprob: -4.561054706573486
    8. 'qu' → logprob: -4.936054706573486
    9. '#' → logprob: -5.061054706573486
    10. '   ' → logprob: -5.186054706573486

Token 22: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001286544487811625
    2. 'ier' → logprob: -7.126286506652832
    3. 'i' → logprob: -7.751286506652832
    4. 'ers' → logprob: -11.126286506652832
    5. 'e' → logprob: -12.001286506652832
    6. '```' → logprob: -12.126286506652832
    7. 'ières' → logprob: -12.251286506652832
    8. '#' → logprob: -12.251286506652832
    9. 'ie' → logprob: -12.376286506652832
    10. 'a' → logprob: -13.126286506652832

Token 23: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0590740330517292
    2. ' sont' → logprob: -3.3090739250183105
    3. ' ' → logprob: -4.3090739250183105
    4. 'a' → logprob: -6.3090739250183105
    5. ' seront' → logprob: -6.3090739250183105
    6. ' s' → logprob: -6.9340739250183105
    7. ' =' → logprob: -7.4340739250183105
    8. ' ,' → logprob: -8.184074401855469
    9. 'n' → logprob: -8.184074401855469
    10. ' a' → logprob: -8.309074401855469

Token 24: ' affect' (ID: 7902)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.1750624179840088
    2. 'stock' → logprob: -2.925062417984009
    3. 's' → logprob: -4.05006217956543
    4. ' lus' → logprob: -4.05006217956543
    5. ' plac' → logprob: -4.42506217956543
    6. ' ensuite' → logprob: -5.05006217956543
    7. ' utilisés' → logprob: -5.30006217956543
    8. 'r' → logprob: -5.55006217956543
    9. ' four' → logprob: -5.55006217956543
    10. ' affect' → logprob: -5.55006217956543

Token 25: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.005950483493506908
    2. 'é' → logprob: -5.130950450897217
    3. 'es' → logprob: -11.880950927734375
    4. '#' → logprob: -12.005950927734375
    5. 'ées' → logprob: -12.380950927734375
    6. 's' → logprob: -13.630950927734375
    7. 'ès' → logprob: -14.005950927734375
    8. 'ée' → logprob: -14.380950927734375
    9. ' és' → logprob: -14.755950927734375
    10. '```' → logprob: -14.880950927734375

Token 26: ' respect' (ID: 5618)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.15159711241722107
    2. ' ' → logprob: -2.901597023010254
    3. ' aux' → logprob: -2.901597023010254
    4. ' a' → logprob: -3.901597023010254
    5. ' au' → logprob: -4.776597023010254
    6. 's' → logprob: -6.776597023010254
    7. 'à' → logprob: -8.026597023010254
    8. ' to' → logprob: -8.151597023010254
    9. '  ' → logprob: -9.401597023010254
    10. ' s' → logprob: -9.776597023010254

Token 27: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.0076728761196136475
    2. 'iv' → logprob: -6.0076727867126465
    3. 'i' → logprob: -6.6326727867126465
    4. '```' → logprob: -7.2576727867126465
    5. 's' → logprob: -7.5076727867126465
    6. 'ement' → logprob: -7.8826727867126465
    7. 'ent' → logprob: -8.007673263549805
    8. '#' → logprob: -8.132673263549805
    9. 'u' → logprob: -8.382673263549805
    10. 'ément' → logprob: -8.632673263549805

Token 28: ' aux' (ID: 5850)
  Prédit: ' aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.7809403538703918
    2. ' à' → logprob: -1.030940294265747
    3. ' a' → logprob: -2.405940294265747
    4. ' ' → logprob: -3.030940294265747
    5. 'à' → logprob: -3.780940294265747
    6. 'aux' → logprob: -4.655940532684326
    7. ' au' → logprob: -4.905940532684326
    8. 'a' → logprob: -5.280940532684326
    9. 'au' → logprob: -6.655940532684326
    10. ' =' → logprob: -8.030940055847168

Token 29: ' variables' (ID: 13955)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3412136733531952
    2. ' variables' → logprob: -2.3412137031555176
    3. 'variables' → logprob: -2.3412137031555176
    4. ' a' → logprob: -3.8412137031555176
    5. 'x' → logprob: -4.341213703155518
    6. 'var' → logprob: -4.591213703155518
    7. 'n' → logprob: -4.591213703155518
    8. 'qu' → logprob: -4.591213703155518
    9. 'ent' → logprob: -4.716213703155518
    10. 'val' → logprob: -4.966213703155518

Token 30: ' L' (ID: 451)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39187946915626526
    2. ' a' → logprob: -1.1418794393539429
    3. 'x' → logprob: -5.766879558563232
    4. ' x' → logprob: -6.641879558563232
    5. 'n' → logprob: -8.641879081726074
    6. 'ent' → logprob: -9.516879081726074
    7. '`' → logprob: -9.641879081726074
    8. ' n' → logprob: -9.641879081726074
    9. ' `' → logprob: -10.266879081726074
    10. 'nombre' → logprob: -10.266879081726074

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16939133405685425
    2. 'i' → logprob: -3.044391393661499
    3. ' ,' → logprob: -3.294391393661499
    4. '1' → logprob: -3.919391393661499
    5. 'e' → logprob: -4.04439115524292
    6. 'u' → logprob: -4.66939115524292
    7. 'a' → logprob: -5.16939115524292
    8. ' =' → logprob: -5.41939115524292
    9. ' ' → logprob: -5.79439115524292
    10. '_' → logprob: -6.41939115524292

Token 32: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.7485787868499756
    2. 'u' → logprob: -1.7485787868499756
    3. ' ' → logprob: -1.9985787868499756
    4. 'I' → logprob: -2.6235787868499756
    5. 'i' → logprob: -2.6235787868499756
    6. 'M' → logprob: -2.7485787868499756
    7. 'R' → logprob: -3.1235787868499756
    8. ' I' → logprob: -3.3735787868499756
    9. ' M' → logprob: -3.6235787868499756
    10. 'x' → logprob: -3.7485787868499756

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004848153796046972
    2. ' ,' → logprob: -5.379848003387451
    3. ' ' → logprob: -10.00484848022461
    4. 'e' → logprob: -10.37984848022461
    5. '_,' → logprob: -11.00484848022461
    6. 'u' → logprob: -11.50484848022461
    7. 'I' → logprob: -11.50484848022461
    8. 'B' → logprob: -11.50484848022461
    9. ' et' → logprob: -11.75484848022461
    10. 'M' → logprob: -12.00484848022461

Token 34: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -1.8305608034133911
    2. ' P' → logprob: -2.0805606842041016
    3. ' M' → logprob: -2.4555606842041016
    4. ' V' → logprob: -2.5805606842041016
    5. ' ' → logprob: -2.7055606842041016
    6. 'B' → logprob: -2.7055606842041016
    7. 'V' → logprob: -2.8305606842041016
    8. 'P' → logprob: -2.9555606842041016
    9. ' E' → logprob: -3.4555606842041016
    10. ' R' → logprob: -3.4555606842041016

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4016464054584503
    2. 'L' → logprob: -1.401646375656128
    3. ' =' → logprob: -2.901646375656128
    4. '=' → logprob: -4.026646614074707
    5. ' ,' → logprob: -6.151646614074707
    6. ' L' → logprob: -6.276646614074707
    7. 'input' → logprob: -6.526646614074707
    8. ',L' → logprob: -6.776646614074707
    9. 's' → logprob: -7.401646614074707
    10. 'a' → logprob: -7.401646614074707

Token 36: ' M' (ID: 391)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6062145829200745
    2. ' ' → logprob: -1.2312145233154297
    3. ' C' → logprob: -1.9812145233154297
    4. ',' → logprob: -4.60621452331543
    5. ' et' → logprob: -5.48121452331543
    6. ' ,' → logprob: -5.60621452331543
    7. 'et' → logprob: -6.35621452331543
    8. ' and' → logprob: -7.10621452331543
    9. 's' → logprob: -7.60621452331543
    10. 'e' → logprob: -7.85621452331543

Token 37: '.
' (ID: 558)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5007843375205994
    2. ',' → logprob: -1.1257843971252441
    3. ' =' → logprob: -3.625784397125244
    4. '=' → logprob: -4.000784397125244
    5. ' ' → logprob: -4.375784397125244
    6. '[' → logprob: -6.250784397125244
    7. ' L' → logprob: -6.375784397125244
    8. '#' → logprob: -6.750784397125244
    9. '_' → logprob: -7.125784397125244
    10. 's' → logprob: -7.250784397125244

Token 38: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.3425219549390022e-05
    2. ' L' → logprob: -12.00001335144043
    3. '```' → logprob: -12.37501335144043
    4. '#' → logprob: -13.62501335144043
    5. 'l' → logprob: -14.12501335144043
    6. 'n' → logprob: -14.87501335144043
    7. '`' → logprob: -15.25001335144043
    8. 'x' → logprob: -15.87501335144043
    9. 'I' → logprob: -16.50001335144043
    10. 'import' → logprob: -16.87501335144043

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2946144640445709
    2. ' =' → logprob: -1.4196144342422485
    3. '=' → logprob: -4.419614315032959
    4. ' ,' → logprob: -6.919614315032959
    5. ' ' → logprob: -8.794614791870117
    6. ')' → logprob: -9.919614791870117
    7. ' =
' → logprob: -9.919614791870117
    8. '.' → logprob: -10.044614791870117
    9. 's' → logprob: -11.169614791870117
    10. '[' → logprob: -11.544614791870117

Token 40: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.24287669360637665
    2. ' ' → logprob: -1.992876648902893
    3. 'A' → logprob: -2.6178767681121826
    4. '  ' → logprob: -5.3678765296936035
    5. ' ' → logprob: -6.8678765296936035
    6. '<|end|>' → logprob: -7.6178765296936035
    7. ' =' → logprob: -9.617877006530762
    8. ' ,' → logprob: -10.492877006530762
    9. ')' → logprob: -11.242877006530762
    10. ' )' → logprob: -11.617877006530762

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002060436672763899
    2. ' ,' → logprob: -9.250205993652344
    3. ' =' → logprob: -9.625205993652344
    4. '=' → logprob: -10.625205993652344
    5. ',B' → logprob: -11.125205993652344
    6. '<|end|>' → logprob: -13.875205993652344
    7. ',M' → logprob: -14.750205993652344
    8. 's' → logprob: -14.875205993652344
    9. ',A' → logprob: -15.187705993652344
    10. ',b' → logprob: -15.375205993652344

Token 42: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.12837697565555573
    2. ' ' → logprob: -2.5033769607543945
    3. 'B' → logprob: -3.2533769607543945
    4. ' ' → logprob: -11.878376960754395
    5. '<|end|>' → logprob: -12.128376960754395
    6. '  ' → logprob: -12.253376960754395
    7. ' ,' → logprob: -13.003376960754395
    8. ' 
' → logprob: -13.753376960754395
    9. ',' → logprob: -13.753376960754395
    10. ' =' → logprob: -14.003376960754395

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004836653359234333
    2. '=' → logprob: -5.879836559295654
    3. ' =' → logprob: -6.254836559295654
    4. ' ,' → logprob: -9.379837036132812
    5. '<|end|>' → logprob: -11.629837036132812
    6. 's' → logprob: -12.129837036132812
    7. ')' → logprob: -13.004837036132812
    8. ',
' → logprob: -14.004837036132812
    9. ' ' → logprob: -14.067337036132812
    10. ',

' → logprob: -14.567337036132812

Token 44: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.10059557855129242
    2. 'M' → logprob: -2.350595474243164
    3. ' ' → logprob: -7.975595474243164
    4. ' ' → logprob: -11.725595474243164
    5. ' =' → logprob: -11.850595474243164
    6. ',' → logprob: -11.975595474243164
    7. 's' → logprob: -12.225595474243164
    8. '=' → logprob: -12.975595474243164
    9. '  ' → logprob: -13.100595474243164
    10. ')' → logprob: -13.538095474243164

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520122826099396
    2. '=' → logprob: -1.5020122528076172
    3. ',' → logprob: -10.002012252807617
    4. '=input' → logprob: -10.377012252807617
    5. ')' → logprob: -13.502012252807617
    6. 's' → logprob: -13.627012252807617
    7. '=int' → logprob: -14.627012252807617
    8. ' ' → logprob: -14.752012252807617
    9. ' =
' → logprob: -14.752012252807617
    10. 'input' → logprob: -14.877012252807617

Token 46: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.012605957686901093
    2. 'map' → logprob: -4.512606143951416
    3. ' input' → logprob: -6.637606143951416
    4. ' [' → logprob: -9.012605667114258
    5. 'input' → logprob: -9.887605667114258
    6. ' list' → logprob: -9.887605667114258
    7. '[' → logprob: -11.512605667114258
    8. ' ' → logprob: -12.137605667114258
    9. ' ' → logprob: -12.762605667114258
    10. '(map' → logprob: -13.887605667114258

Token 47: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5814192295074463
    2. '(int' → logprob: -0.8314192295074463
    3. '(str' → logprob: -5.956418991088867
    4. '(input' → logprob: -6.206418991088867
    5. '(lambda' → logprob: -7.206418991088867
    6. '(
' → logprob: -9.581418991088867
    7. '<int' → logprob: -11.331418991088867
    8. '(list' → logprob: -11.331418991088867
    9. '(eval' → logprob: -12.331418991088867
    10. '[int' → logprob: -12.831418991088867

Token 48: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03211544454097748
    2. 'input' → logprob: -3.5321154594421387
    3. '(' → logprob: -6.782115459442139
    4. ')' → logprob: -7.657115459442139
    5. ' input' → logprob: -7.907115459442139
    6. ',input' → logprob: -8.03211498260498
    7. ' (' → logprob: -10.03211498260498
    8. '=input' → logprob: -12.03211498260498
    9. '[input' → logprob: -12.65711498260498
    10. ',' → logprob: -12.78211498260498

Token 49: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04862393066287041
    2. ' input' → logprob: -3.048624038696289
    3. ')' → logprob: -10.548624038696289
    4. '(input' → logprob: -11.673624038696289
    5. '=input' → logprob: -14.548624038696289
    6. '<input' → logprob: -14.673624038696289
    7. ',input' → logprob: -15.048624038696289
    8. '	input' → logprob: -15.923624038696289
    9. '[input' → logprob: -16.04862403869629
    10. ' ' → logprob: -16.17362403869629

Token 50: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2708145081996918
    2. '().' → logprob: -2.0208144187927246
    3. '())' → logprob: -2.2708144187927246
    4. '(' → logprob: -7.770814418792725
    5. ')' → logprob: -8.145814895629883
    6. '(()' → logprob: -9.270814895629883
    7. '()).' → logprob: -9.520814895629883
    8. '());' → logprob: -9.645814895629883
    9. '()`' → logprob: -9.645814895629883
    10. '()(' → logprob: -9.770814895629883

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015908108616713434
    2. 'strip' → logprob: -8.75015926361084
    3. 'rstrip' → logprob: -14.75015926361084
    4. ' split' → logprob: -16.000158309936523
    5. 'spl' → logprob: -18.125158309936523
    6. '(split' → logprob: -18.750158309936523
    7. ')' → logprob: -19.250158309936523
    8. '.split' → logprob: -19.375158309936523
    9. 's' → logprob: -20.250158309936523
    10. 'read' → logprob: -20.375158309936523

Token 52: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009181600995361805
    2. '()' → logprob: -5.384181499481201
    3. '()))' → logprob: -5.509181499481201
    4. '('' → logprob: -8.25918197631836
    5. ')' → logprob: -8.88418197631836
    6. '(' → logprob: -9.50918197631836
    7. ' ())' → logprob: -11.50918197631836
    8. '()),' → logprob: -12.75918197631836
    9. '))' → logprob: -13.00918197631836
    10. '(),' → logprob: -13.25918197631836

Token 53: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.342424213886261
    2. 'if' → logprob: -1.9674241542816162
    3. '#' → logprob: -2.842424154281616
    4. 'print' → logprob: -3.467424154281616
    5. ',' → logprob: -3.592424154281616
    6. '.' → logprob: -5.217424392700195
    7. ' if' → logprob: -5.467424392700195
    8. ':' → logprob: -5.717424392700195
    9. 'for' → logprob: -5.967424392700195
    10. 'i' → logprob: -6.217424392700195

Token 54: ' Dé' (ID: 27247)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7038717865943909
    2. '#' → logprob: -1.453871726989746
    3. 'result' → logprob: -2.453871726989746
    4. 'if' → logprob: -2.453871726989746
    5. 's' → logprob: -3.828871726989746
    6. ' if' → logprob: -4.078871726989746
    7. ' print' → logprob: -4.203871726989746
    8. 'p' → logprob: -4.578871726989746
    9. ' result' → logprob: -5.078871726989746
    10. ' #' → logprob: -5.203871726989746

Token 55: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.5142604112625122
    2. 'fi' → logprob: -1.2642604112625122
    3. 'f' → logprob: -2.2642602920532227
    4. 'claration' → logprob: -5.139260292053223
    5. '#' → logprob: -6.014260292053223
    6. 'termin' → logprob: -6.514260292053223
    7. 'clar' → logprob: -6.639260292053223
    8. 'termination' → logprob: -6.639260292053223
    9. 'term' → logprob: -7.889260292053223
    10. 'cla' → logprob: -8.389260292053223

Token 56: 'ition' (ID: 868)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5704351663589478
    2. 'ir' → logprob: -1.4454351663589478
    3. '#' → logprob: -2.195435047149658
    4. 'inition' → logprob: -3.445435047149658
    5. 'ition' → logprob: -4.070435047149658
    6. 'issant' → logprob: -4.195435047149658
    7. 'issage' → logprob: -4.570435047149658
    8. 'is' → logprob: -5.945435047149658
    9. '```' → logprob: -6.195435047149658
    10. 'issement' → logprob: -6.445435047149658

Token 57: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0456737279891968
    2. '(' → logprob: -1.1706737279891968
    3. ' d' → logprob: -1.4206737279891968
    4. ')' → logprob: -3.7956738471984863
    5. ' de' → logprob: -4.045673847198486
    6. ' des' → logprob: -4.170673847198486
    7. 'def' → logprob: -4.545673847198486
    8. '()' → logprob: -4.670673847198486
    9. ' (' → logprob: -5.670673847198486
    10. ' )' → logprob: -5.795673847198486

Token 58: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6661985516548157
    2. ''' → logprob: -0.9161985516548157
    3. ''une' → logprob: -3.166198492050171
    4. 'u' → logprob: -4.04119873046875
    5. ''un' → logprob: -4.04119873046875
    6. ' '' → logprob: -5.91619873046875
    7. ' e' → logprob: -5.91619873046875
    8. ' ' → logprob: -7.16619873046875
    9. ''u' → logprob: -7.16619873046875
    10. 'es' → logprob: -7.41619873046875

Token 59: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.799441933631897
    2. ' ' → logprob: -1.549441933631897
    3. ' fonction' → logprob: -1.799441933631897
    4. 'f' → logprob: -3.0494418144226074
    5. ' function' → logprob: -3.2994418144226074
    6. '_' → logprob: -3.6744418144226074
    7. ' liste' → logprob: -4.424441814422607
    8. 'def' → logprob: -4.799441814422607
    9. ' f' → logprob: -5.799441814422607
    10. ' ' → logprob: -5.924441814422607

Token 60: ' appelée' (ID: 179130)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.480512797832489
    2. ' def' → logprob: -1.7305128574371338
    3. '(' → logprob: -1.9805128574371338
    4. ')' → logprob: -4.230512619018555
    5. ' de' → logprob: -4.355512619018555
    6. '_' → logprob: -4.480512619018555
    7. ' ' → logprob: -4.605512619018555
    8. ' (' → logprob: -5.355512619018555
    9. ' )' → logprob: -5.980512619018555
    10. 'de' → logprob: -6.480512619018555

Token 61: ' '' (ID: 461)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.2236850261688232
    2. 'def' → logprob: -1.5986850261688232
    3. ' calcul' → logprob: -1.9736850261688232
    4. ' def' → logprob: -2.2236850261688232
    5. ' calculate' → logprob: -3.2236850261688232
    6. ' max' → logprob: -3.7236850261688232
    7. ' carre' → logprob: -3.8486850261688232
    8. 'calculate' → logprob: -3.9736850261688232
    9. 'f' → logprob: -4.098685264587402
    10. 'c' → logprob: -4.223685264587402

Token 62: 'part' (ID: 5815)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.5968530178070068
    2. 'surface' → logprob: -2.221853017807007
    3. 'per' → logprob: -3.471853017807007
    4. 'max' → logprob: -3.471853017807007
    5. 'cal' → logprob: -3.846853017807007
    6. 'est' → logprob: -3.846853017807007
    7. 'aire' → logprob: -4.096853256225586
    8. 'convert' → logprob: -4.221853256225586
    9. 'volume' → logprob: -4.346853256225586
    10. 'main' → logprob: -4.346853256225586

Token 63: 'sum' (ID: 12298)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.16865845024585724
    2. 'ition' → logprob: -2.668658494949341
    3. 'age' → logprob: -3.418658494949341
    4. 'i' → logprob: -4.168658256530762
    5. 'icip' → logprob: -4.668658256530762
    6. 'icipant' → logprob: -4.918658256530762
    7. 'e' → logprob: -5.168658256530762
    8. 'icipants' → logprob: -5.793658256530762
    9. 'ies' → logprob: -6.293658256530762
    10. '_ie' → logprob: -6.293658256530762

Token 64: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4853220582008362
    2. '_' → logprob: -1.2353219985961914
    3. ')' → logprob: -2.6103219985961914
    4. '('' → logprob: -4.735321998596191
    5. 's' → logprob: -4.985321998596191
    6. '('_' → logprob: -6.110321998596191
    7. ''' → logprob: -7.610321998596191
    8. 'es' → logprob: -8.735321998596191
    9. 'e' → logprob: -8.735321998596191
    10. '')' → logprob: -8.860321998596191

Token 65: ' qui' (ID: 2780)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007356609217822552
    2. 'def' → logprob: -5.382356643676758
    3. ':' → logprob: -6.007356643676758
    4. '(
' → logprob: -9.757356643676758
    5. ':def' → logprob: -10.507356643676758
    6. '(def' → logprob: -10.757356643676758
    7. '(p' → logprob: -10.882356643676758
    8. ' def' → logprob: -11.007356643676758
    9. '_' → logprob: -11.007356643676758
    10. ' (' → logprob: -11.007356643676758

Token 66: ' prend' (ID: 37463)
  Prédit: ' calculates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculates' → logprob: -0.8948524594306946
    2. ' calc' → logprob: -2.14485239982605
    3. 'calcul' → logprob: -2.14485239982605
    4. '<|end|>' → logprob: -2.51985239982605
    5. ' calculate' → logprob: -3.01985239982605
    6. ' prend' → logprob: -3.39485239982605
    7. '(' → logprob: -3.51985239982605
    8. 's' → logprob: -3.89485239982605
    9. 'calculate' → logprob: -4.019852638244629
    10. ' calcul' → logprob: -4.144852638244629

Token 67: ' ' (ID: 220)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8548214435577393
    2. ' un' → logprob: -2.1048214435577393
    3. '(n' → logprob: -2.6048214435577393
    4. '(' → logprob: -2.9798214435577393
    5. 'un' → logprob: -3.2298214435577393
    6. '(lst' → logprob: -3.2298214435577393
    7. ')' → logprob: -3.3548214435577393
    8. 'la' → logprob: -3.3548214435577393
    9. '(l' → logprob: -3.4798214435577393
    10. 'une' → logprob: -3.6048214435577393

Token 68: '4' (ID: 19)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6457469463348389
    2. 'un' → logprob: -2.020746946334839
    3. 'la' → logprob: -2.520746946334839
    4. 'n' → logprob: -2.645746946334839
    5. 'liste' → logprob: -3.270746946334839
    6. 'a' → logprob: -3.520746946334839
    7. ' une' → logprob: -3.520746946334839
    8. 'lst' → logprob: -3.895746946334839
    9. 'arr' → logprob: -4.270747184753418
    10. 'l' → logprob: -5.020747184753418

Token 69: ' arguments' (ID: 11917)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3071420192718506
    2. '(' → logprob: -2.4321420192718506
    3. ',' → logprob: -2.8071420192718506
    4. ' (' → logprob: -3.9321420192718506
    5. ')' → logprob: -4.18214225769043
    6. ' arguments' → logprob: -4.93214225769043
    7. 'ent' → logprob: -5.05714225769043
    8. 'a' → logprob: -5.30714225769043
    9. 'arguments' → logprob: -5.30714225769043
    10. '_ent' → logprob: -5.43214225769043

Token 70: ' nom' (ID: 8080)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014928570948541164
    2. '(L' → logprob: -4.764928340911865
    3. ':' → logprob: -5.764928340911865
    4. ',' → logprob: -6.639928340911865
    5. 'def' → logprob: -7.014928340911865
    6. 'L' → logprob: -8.139928817749023
    7. '(
' → logprob: -9.139928817749023
    8. '(l' → logprob: -9.139928817749023
    9. ' :' → logprob: -9.264928817749023
    10. ')' → logprob: -9.264928817749023

Token 71: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03532508760690689
    2. 'és' → logprob: -4.285325050354004
    3. 'mé' → logprob: -4.785325050354004
    4. '```' → logprob: -6.035325050354004
    5. 'é' → logprob: -6.660325050354004
    6. 'es' → logprob: -6.660325050354004
    7. 'e' → logprob: -6.910325050354004
    8. 'nées' → logprob: -7.410325050354004
    9. '=' → logprob: -7.785325050354004
    10. '#' → logprob: -7.785325050354004

Token 72: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0002944671141449362
    2. 'é' → logprob: -8.87529468536377
    3. 'es' → logprob: -9.00029468536377
    4. 'm' → logprob: -11.62529468536377
    5. 'ès' → logprob: -12.25029468536377
    6. ' és' → logprob: -12.37529468536377
    7. '```' → logprob: -12.37529468536377
    8. 'ées' → logprob: -13.12529468536377
    9. 'e' → logprob: -13.87529468536377
    10. 's' → logprob: -14.12529468536377

Token 73: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6110482811927795
    2. 'L' → logprob: -1.4860482215881348
    3. ' L' → logprob: -2.7360482215881348
    4. ' a' → logprob: -3.1110482215881348
    5. 'x' → logprob: -3.2360482215881348
    6. '(a' → logprob: -4.111048221588135
    7. ' (' → logprob: -4.486048221588135
    8. 'l' → logprob: -4.736048221588135
    9. ' x' → logprob: -5.236048221588135
    10. ')' → logprob: -5.361048221588135

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022232949268072844
    2. ' ,' → logprob: -7.127223491668701
    3. ',a' → logprob: -7.752223491668701
    4. 's' → logprob: -8.377223014831543
    5. ',b' → logprob: -8.877223014831543
    6. '1' → logprob: -8.877223014831543
    7. ',u' → logprob: -9.377223014831543
    8. ',s' → logprob: -9.502223014831543
    9. 'a' → logprob: -9.877223014831543
    10. ',L' → logprob: -10.002223014831543

Token 75: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14438055455684662
    2. ' b' → logprob: -2.019380569458008
    3. 'l' → logprob: -7.644380569458008
    4. 'i' → logprob: -7.894380569458008
    5. ' ' → logprob: -8.894380569458008
    6. 'n' → logprob: -9.019380569458008
    7. 'p' → logprob: -9.144380569458008
    8. ' l' → logprob: -9.519380569458008
    9. ' i' → logprob: -9.769380569458008
    10. 's' → logprob: -9.769380569458008

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003384422743692994
    2. ' ,' → logprob: -8.250338554382324
    3. 's' → logprob: -10.750338554382324
    4. ',a' → logprob: -11.250338554382324
    5. 'a' → logprob: -12.250338554382324
    6. ',L' → logprob: -12.500338554382324
    7. ',s' → logprob: -12.625338554382324
    8. '<|end|>' → logprob: -12.750338554382324
    9. ')' → logprob: -13.000338554382324
    10. ',c' → logprob: -13.125338554382324

Token 77: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0207720585167408
    2. ' c' → logprob: -3.8957719802856445
    3. ' ' → logprob: -10.270771980285645
    4. 'l' → logprob: -10.270771980285645
    5. 'x' → logprob: -10.395771980285645
    6. 's' → logprob: -10.645771980285645
    7. 'm' → logprob: -11.020771980285645
    8. ',' → logprob: -11.145771980285645
    9. 'p' → logprob: -11.270771980285645
    10. 'i' → logprob: -11.520771980285645

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06868668645620346
    2. 'e' → logprob: -3.4436867237091064
    3. 'a' → logprob: -3.4436867237091064
    4. 'ambda' → logprob: -7.193686485290527
    5. 'u' → logprob: -7.943686485290527
    6. ',e' → logprob: -8.193686485290527
    7. ',a' → logprob: -8.318686485290527
    8. ' ,' → logprob: -9.193686485290527
    9. '1' → logprob: -9.443686485290527
    10. '```' → logprob: -9.443686485290527

Token 79: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.32049286365509033
    2. 'r' → logprob: -1.5704928636550903
    3. ' m' → logprob: -3.695492744445801
    4. 'c' → logprob: -4.945492744445801
    5. ' r' → logprob: -4.945492744445801
    6. 's' → logprob: -5.195492744445801
    7. 'p' → logprob: -5.570492744445801
    8. 't' → logprob: -5.945492744445801
    9. 'i' → logprob: -6.195492744445801
    10. 'x' → logprob: -6.195492744445801

Token 80: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5942114591598511
    2. ':' → logprob: -0.9692114591598511
    3. ')' → logprob: -2.7192115783691406
    4. ',' → logprob: -6.719211578369141
    5. ' ):' → logprob: -7.344211578369141
    6. ' :' → logprob: -7.969211578369141
    7. '):
' → logprob: -8.46921157836914
    8. '():' → logprob: -9.34421157836914
    9. 'a' → logprob: -10.34421157836914
    10. 'def' → logprob: -10.46921157836914

Token 81: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003971543628722429
    2. ' :' → logprob: -6.503971576690674
    3. '):' → logprob: -6.628971576690674
    4. ':
' → logprob: -7.753971576690674
    5. '():' → logprob: -8.253971099853516
    6. ':def' → logprob: -8.378971099853516
    7. 'def' → logprob: -9.003971099853516
    8. ')' → logprob: -10.003971099853516
    9. ':**' → logprob: -11.753971099853516
    10. ',' → logprob: -11.753971099853516

Token 82: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.0014470219612121582
    2. '_parts' → logprob: -6.8764472007751465
    3. '(parts' → logprob: -8.626446723937988
    4. ' ' → logprob: -9.376446723937988
    5. ' ' → logprob: -10.251446723937988
    6. '.parts' → logprob: -10.626446723937988
    7. ' partes' → logprob: -10.751446723937988
    8. 'parts' → logprob: -10.876446723937988
    9. ' part' → logprob: -11.376446723937988
    10. ' partis' → logprob: -11.501446723937988

Token 83: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0013408389640972018
    2. 'u' → logprob: -6.626340866088867
    3. 'sum' → logprob: -11.626340866088867
    4. 'ум' → logprob: -12.501340866088867
    5. 'ums' → logprob: -14.251340866088867
    6. '_sum' → logprob: -15.001340866088867
    7. ' um' → logprob: -15.251340866088867
    8. '_um' → logprob: -15.376340866088867
    9. 'umsum' → logprob: -15.501340866088867
    10. 'un' → logprob: -15.626340866088867

Token 84: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04861121252179146
    2. '(' → logprob: -3.0486111640930176
    3. ' (' → logprob: -10.673611640930176
    4. '(
' → logprob: -15.673611640930176
    5. '((' → logprob: -15.798611640930176
    6. '(

' → logprob: -16.79861068725586
    7. '(A' → logprob: -17.04861068725586
    8. '(l' → logprob: -17.29861068725586
    9. '(_' → logprob: -17.42361068725586
    10. ' ' → logprob: -17.67361068725586

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009267069399356842
    2. ' ,' → logprob: -7.250926494598389
    3. ',b' → logprob: -8.625926971435547
    4. ',l' → logprob: -11.375926971435547
    5. ',a' → logprob: -12.375926971435547
    6. ',n' → logprob: -12.375926971435547
    7. ')' → logprob: -12.500926971435547
    8. ' ' → logprob: -13.250926971435547
    9. 'a' → logprob: -13.500926971435547
    10. '‌,' → logprob: -13.625926971435547

Token 86: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.030104735866189003
    2. ' b' → logprob: -3.530104637145996
    3. 'n' → logprob: -8.780104637145996
    4. 'l' → logprob: -8.905104637145996
    5. ' n' → logprob: -10.405104637145996
    6. ' l' → logprob: -11.155104637145996
    7. ' ' → logprob: -11.155104637145996
    8. ',' → logprob: -13.905104637145996
    9. 'a' → logprob: -14.030104637145996
    10. ',b' → logprob: -14.280104637145996

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044902291847392917
    2. ',l' → logprob: -8.125449180603027
    3. ' ,' → logprob: -8.875449180603027
    4. ',n' → logprob: -12.000449180603027
    5. 'l' → logprob: -13.125449180603027
    6. '‌,' → logprob: -14.125449180603027
    7. ' ' → logprob: -14.375449180603027
    8. ')' → logprob: -14.375449180603027
    9. ',,' → logprob: -14.500449180603027
    10. '`,' → logprob: -15.125449180603027

Token 88: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.31729021668434143
    2. ' l' → logprob: -1.317290186882019
    3. 'n' → logprob: -6.067290306091309
    4. ' n' → logprob: -6.442290306091309
    5. ' ' → logprob: -9.692290306091309
    6. ')' → logprob: -11.442290306091309
    7. ',' → logprob: -11.692290306091309
    8. ' )' → logprob: -12.317290306091309
    9. 'L' → logprob: -12.629790306091309
    10. ' L' → logprob: -13.129790306091309

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003048378275707364
    2. ',n' → logprob: -8.62530517578125
    3. ')' → logprob: -9.75030517578125
    4. ' ,' → logprob: -10.25030517578125
    5. 'n' → logprob: -11.00030517578125
    6. '):' → logprob: -11.75030517578125
    7. ' n' → logprob: -13.50030517578125
    8. ',
' → logprob: -13.75030517578125
    9. '),' → logprob: -13.75030517578125
    10. ' ' → logprob: -14.50030517578125

Token 90: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023304294794797897
    2. ' n' → logprob: -3.7733042240142822
    3. ')' → logprob: -10.273303985595703
    4. '):' → logprob: -11.898303985595703
    5. '):
' → logprob: -12.648303985595703
    6. '	n' → logprob: -13.023303985595703
    7. ')n' → logprob: -13.148303985595703
    8. 'M' → logprob: -13.148303985595703
    9. 'm' → logprob: -13.398303985595703
    10. ' ' → logprob: -13.398303985595703

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011106068268418312
    2. ')' → logprob: -4.511106014251709
    3. ':' → logprob: -10.261106491088867
    4. ',' → logprob: -11.136106491088867
    5. ' ):' → logprob: -12.261106491088867
    6. '=' → logprob: -13.511106491088867
    7. '):
' → logprob: -13.761106491088867
    8. '*' → logprob: -15.136106491088867
    9. '**' → logprob: -15.636106491088867
    10. ' :' → logprob: -15.761106491088867

Token 92: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008104927837848663
    2. ' :' → logprob: -5.1331048011779785
    3. '):' → logprob: -6.5081048011779785
    4. ',' → logprob: -8.383105278015137
    5. ':
' → logprob: -8.758105278015137
    6. ')' → logprob: -8.883105278015137
    7. '   ' → logprob: -10.508105278015137
    8. ':return' → logprob: -10.508105278015137
    9. ' ' → logprob: -10.633105278015137
    10. '=' → logprob: -10.883105278015137

Token 93: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36099278926849365
    2. ':' → logprob: -2.485992908477783
    3. 'if' → logprob: -2.860992908477783
    4. 's' → logprob: -3.110992908477783
    5. 'r' → logprob: -3.235992908477783
    6. 'return' → logprob: -3.985992908477783
    7. ' if' → logprob: -4.110992908477783
    8. ' return' → logprob: -4.985992908477783
    9. 'result' → logprob: -5.360992908477783
    10. ' ' → logprob: -5.485992908477783

Token 94: ' Cré' (ID: 109203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8682746291160583
    2. 'if' → logprob: -1.6182746887207031
    3. ' return' → logprob: -1.6182746887207031
    4. ' if' → logprob: -2.493274688720703
    5. '   ' → logprob: -3.243274688720703
    6. 'result' → logprob: -4.368274688720703
    7. 's' → logprob: -4.618274688720703
    8. 'total' → logprob: -4.868274688720703
    9. ' total' → logprob: -5.368274688720703
    10. 'r' → logprob: -5.368274688720703

Token 95: 'ation' (ID: 387)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.6891239285469055
    2. 'er' → logprob: -1.3141238689422607
    3. 'e' → logprob: -1.6891238689422607
    4. 'a' → logprob: -3.6891238689422607
    5. '#' → logprob: -5.06412410736084
    6. 'u' → logprob: -5.93912410736084
    7. 'ate' → logprob: -5.93912410736084
    8. 'd' → logprob: -6.68912410736084
    9. 'ér' → logprob: -6.93912410736084
    10. ')' → logprob: -7.31412410736084

Token 96: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1472761631011963
    2. '[]' → logprob: -3.1472761631011963
    3. 'd' → logprob: -3.3972761631011963
    4. ')' → logprob: -3.7722761631011963
    5. ' ' → logprob: -4.897275924682617
    6. '   ' → logprob: -5.022275924682617
    7. ' =' → logprob: -5.647275924682617
    8. ' de' → logprob: -5.647275924682617
    9. '    ' → logprob: -5.647275924682617
    10. '[' → logprob: -5.772275924682617

Token 97: ''une' (ID: 13337)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.89192795753479
    2. ' []' → logprob: -1.51692795753479
    3. ' un' → logprob: -2.76692795753479
    4. 'a' → logprob: -3.01692795753479
    5. ' une' → logprob: -3.01692795753479
    6. ' ' → logprob: -3.01692795753479
    7. ' a' → logprob: -3.51692795753479
    8. '[' → logprob: -3.64192795753479
    9. '   ' → logprob: -4.016927719116211
    10. ')' → logprob: -4.266927719116211

Token 98: ' liste' (ID: 31719)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.378117561340332
    2. ' somme' → logprob: -2.378117561340332
    3. ' liste' → logprob: -2.503117561340332
    4. '   ' → logprob: -2.503117561340332
    5. 'liste' → logprob: -2.503117561340332
    6. ' ' → logprob: -2.878117561340332
    7. ' =' → logprob: -3.128117561340332
    8. 'r' → logprob: -3.253117561340332
    9. 'result' → logprob: -3.378117561340332
    10. ')' → logprob: -3.378117561340332

Token 99: ' '' (ID: 461)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0640259981155396
    2. '[]' → logprob: -1.1890259981155396
    3. 's' → logprob: -2.43902587890625
    4. ' [' → logprob: -2.93902587890625
    5. '   ' → logprob: -3.06402587890625
    6. ' =' → logprob: -3.18902587890625
    7. '=[]' → logprob: -3.68902587890625
    8. ')' → logprob: -3.81402587890625
    9. '<|end|>' → logprob: -4.31402587890625
    10. ' []' → logprob: -4.31402587890625

Token 100: 'dou' (ID: 122443)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.536204993724823
    2. 'result' → logprob: -1.4112050533294678
    3. 's' → logprob: -2.9112050533294678
    4. 'part' → logprob: -3.6612050533294678
    5. ' res' → logprob: -3.7862050533294678
    6. 'lst' → logprob: -4.786204814910889
    7. 'parts' → logprob: -4.786204814910889
    8. 'dp' → logprob: -5.161204814910889
    9. 'c' → logprob: -5.536204814910889
    10. 'S' → logprob: -5.536204814910889

Token 101: 'bling' (ID: 11037)
  Prédit: 'bles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bles' → logprob: -0.6268326044082642
    2. 'bl' → logprob: -1.3768326044082642
    3. 'b' → logprob: -2.2518324851989746
    4. 'ble' → logprob: -2.3768324851989746
    5. 'bs' → logprob: -4.751832485198975
    6. 'blings' → logprob: -6.001832485198975
    7. 'bling' → logprob: -7.126832485198975
    8. 'z' → logprob: -7.501832485198975
    9. 'bla' → logprob: -7.501832485198975
    10. '```' → logprob: -7.751832485198975

Token 102: 'const' (ID: 1671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16575391590595245
    2. '_list' → logprob: -3.0407538414001465
    3. '_values' → logprob: -3.7907538414001465
    4. ' =' → logprob: -3.9157538414001465
    5. '=[]' → logprob: -4.0407538414001465
    6. ''' → logprob: -4.5407538414001465
    7. '=' → logprob: -4.9157538414001465
    8. '_s' → logprob: -5.6657538414001465
    9. '_steps' → logprob: -5.6657538414001465
    10. '_sequence' → logprob: -5.9157538414001465

Token 103: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4395880699157715
    2. ''' → logprob: -1.3145880699157715
    3. 'ants' → logprob: -2.6895880699157715
    4. 'ant' → logprob: -4.1895880699157715
    5. '']' → logprob: -6.5645880699157715
    6. '_list' → logprob: -7.0645880699157715
    7. 'es' → logprob: -7.6895880699157715
    8. 'e' → logprob: -8.43958854675293
    9. ']' → logprob: -8.56458854675293
    10. 'raints' → logprob: -9.31458854675293

Token 104: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07803409546613693
    2. '=[]' → logprob: -3.4530341625213623
    3. '=' → logprob: -3.8280341625213623
    4. '[]' → logprob: -4.703033924102783
    5. '   ' → logprob: -5.328033924102783
    6. 's' → logprob: -6.203033924102783
    7. '<|end|>' → logprob: -6.203033924102783
    8. '[' → logprob: -6.578033924102783
    9. ']' → logprob: -7.703033924102783
    10. ',' → logprob: -7.953033924102783

Token 105: ' taille' (ID: 41644)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.6492519378662109
    2. ' [' → logprob: -1.524251937866211
    3. ' size' → logprob: -2.774251937866211
    4. ' ' → logprob: -3.149251937866211
    5. ' n' → logprob: -3.149251937866211
    6. ' longueur' → logprob: -3.524251937866211
    7. '[' → logprob: -3.649251937866211
    8. 'length' → logprob: -4.149251937866211
    9. ' taille' → logprob: -4.399251937866211
    10. 'n' → logprob: -4.649251937866211

Token 106: ' ' (ID: 220)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2387532889842987
    2. '(' → logprob: -2.613753318786621
    3. 'n' → logprob: -2.613753318786621
    4. ' n' → logprob: -3.113753318786621
    5. ' (' → logprob: -4.613753318786621
    6. ' ' → logprob: -5.363753318786621
    7. 'l' → logprob: -6.488753318786621
    8. '(l' → logprob: -6.613753318786621
    9. '	n' → logprob: -7.113753318786621
    10. ' l' → logprob: -7.113753318786621

Token 107: '60' (ID: 1910)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22908860445022583
    2. '(n' → logprob: -2.854088544845581
    3. ' n' → logprob: -3.104088544845581
    4. '20' → logprob: -3.854088544845581
    5. '31' → logprob: -3.979088544845581
    6. '(' → logprob: -4.72908878326416
    7. '30' → logprob: -4.85408878326416
    8. '32' → logprob: -4.97908878326416
    9. ' ' → logprob: -5.10408878326416
    10. ' (' → logprob: -5.35408878326416

Token 108: ' rempl' (ID: 66326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08441907167434692
    2. ' =' → logprob: -3.209419012069702
    3. '[' → logprob: -4.084419250488281
    4. '=' → logprob: -4.959419250488281
    5. ' ,' → logprob: -5.209419250488281
    6. ']' → logprob: -5.459419250488281
    7. ' [' → logprob: -6.209419250488281
    8. '[]' → logprob: -6.959419250488281
    9. '=[]' → logprob: -7.084419250488281
    10. '=[' → logprob: -7.459419250488281

Token 109: 'ie' (ID: 396)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.8692836165428162
    2. 'with' → logprob: -1.119283676147461
    3. 'ée' → logprob: -1.744283676147461
    4. 'avec' → logprob: -3.619283676147461
    5. 'a' → logprob: -4.494283676147461
    6. ' avec' → logprob: -4.744283676147461
    7. 'e' → logprob: -4.869283676147461
    8. 'é' → logprob: -5.244283676147461
    9. 'er' → logprob: -5.744283676147461
    10. '   ' → logprob: -6.619283676147461

Token 110: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.02218443527817726
    2. ' avec' → logprob: -4.397184371948242
    3. 'de' → logprob: -5.522184371948242
    4. ' with' → logprob: -6.272184371948242
    5. ' par' → logprob: -6.647184371948242
    6. ' ' → logprob: -7.522184371948242
    7. ' d' → logprob: -7.772184371948242
    8. ' à' → logprob: -8.147184371948242
    9. 'd' → logprob: -8.897184371948242
    10. '<|end|>' → logprob: -9.022184371948242

Token 111: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16433516144752502
    2. 'es' → logprob: -2.039335250854492
    3. '0' → logprob: -4.789335250854492
    4. 'eux' → logprob: -4.789335250854492
    5. 'ef' → logprob: -7.039335250854492
    6. '-' → logprob: -7.039335250854492
    7. ' zeros' → logprob: -7.289335250854492
    8. ' ' → logprob: -8.039335250854492
    9. '```' → logprob: -8.539335250854492
    10. 'u' → logprob: -8.539335250854492

Token 112: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.012277702800929546
    2. 'ières' → logprob: -5.262277603149414
    3. 'ers' → logprob: -5.637277603149414
    4. 'i' → logprob: -6.137277603149414
    5. 'er' → logprob: -7.262277603149414
    6. '0' → logprob: -8.887277603149414
    7. 'e' → logprob: -9.637277603149414
    8. ' i' → logprob: -9.887277603149414
    9. '```' → logprob: -10.262277603149414
    10. 'ier' → logprob: -10.387277603149414

Token 113: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46261274814605713
    2. ' zeros' → logprob: -1.5876127481460571
    3. ' ' → logprob: -1.9626127481460571
    4. '[' → logprob: -5.087612628936768
    5. '(' → logprob: -5.212612628936768
    6. ' zero' → logprob: -6.337612628936768
    7. '1' → logprob: -6.462612628936768
    8. ' à' → logprob: -6.462612628936768
    9. '[]' → logprob: -6.712612628936768
    10. ' z' → logprob: -6.837612628936768

Token 114: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26931753754615784
    2. ']' → logprob: -2.644317626953125
    3. ' [' → logprob: -2.769317626953125
    4. ',' → logprob: -2.894317626953125
    5. ')' → logprob: -3.644317626953125
    6. '   ' → logprob: -5.519317626953125
    7. ' =' → logprob: -5.644317626953125
    8. '.' → logprob: -5.894317626953125
    9. '[:]' → logprob: -6.269317626953125
    10. ' ]' → logprob: -6.394317626953125

Token 115: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14310988783836365
    2. 'dou' → logprob: -2.7681097984313965
    3. 'd' → logprob: -3.5181097984313965
    4. ' [' → logprob: -4.0181097984313965
    5. '   ' → logprob: -4.7681097984313965
    6. ' ' → logprob: -4.8931097984313965
    7. '[d' → logprob: -6.2681097984313965
    8. ' ]' → logprob: -6.6431097984313965
    9. ']' → logprob: -7.0181097984313965
    10. '[:]' → logprob: -7.1431097984313965

Token 116: ' #' (ID: 1069)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0003932576219085604
    2. '   ' → logprob: -8.25039291381836
    3. 'd' → logprob: -9.12539291381836
    4. ' doubling' → logprob: -11.37539291381836
    5. '[' → logprob: -12.25039291381836
    6. '[d' → logprob: -13.12539291381836
    7. '	d' → logprob: -13.12539291381836
    8. ' ' → logprob: -14.37539291381836
    9. '```' → logprob: -14.37539291381836
    10. '  ' → logprob: -14.62539291381836

Token 117: ' Cette' (ID: 27383)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.03235090896487236
    2. ' doubling' → logprob: -3.907351016998291
    3. 'd' → logprob: -4.532351016998291
    4. '   ' → logprob: -7.282351016998291
    5. ' ' → logprob: -9.907350540161133
    6. '	d' → logprob: -10.157350540161133
    7. '```' → logprob: -10.282350540161133
    8. '[' → logprob: -10.532350540161133
    9. ' dou' → logprob: -10.657350540161133
    10. '  ' → logprob: -11.282350540161133

Token 118: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4288502633571625
    2. 'dou' → logprob: -2.0538501739501953
    3. '[' → logprob: -3.3038501739501953
    4. 'a' → logprob: -3.4288501739501953
    5. ')' → logprob: -3.4288501739501953
    6. '=' → logprob: -4.053850173950195
    7. 's' → logprob: -4.178850173950195
    8. 'l' → logprob: -4.428850173950195
    9. 'd' → logprob: -4.553850173950195
    10. '#' → logprob: -4.678850173950195

Token 119: ' stock' (ID: 6546)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05819043144583702
    2. '[' → logprob: -3.30819034576416
    3. '=' → logprob: -4.43319034576416
    4. '<|end|>' → logprob: -5.68319034576416
    5. '[:]' → logprob: -6.55819034576416
    6. '[]' → logprob: -7.05819034576416
    7. '=[]' → logprob: -7.18319034576416
    8. ' ' → logprob: -8.05819034576416
    9. '[i' → logprob: -8.18319034576416
    10. ' =[' → logprob: -8.93319034576416

Token 120: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0001329791557509452
    2. 'er' → logprob: -9.37513256072998
    3. 'ée' → logprob: -11.12513256072998
    4. 'era' → logprob: -11.50013256072998
    5. 'é' → logprob: -11.87513256072998
    6. 'ent' → logprob: -12.00013256072998
    7. 'a' → logprob: -13.12513256072998
    8. '#' → logprob: -13.25013256072998
    9. ' e' → logprob: -13.25013256072998
    10. '   ' → logprob: -14.25013256072998

Token 121: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2912423312664032
    2. ' ' → logprob: -2.7912423610687256
    3. '<|end|>' → logprob: -2.7912423610687256
    4. ' des' → logprob: -2.9162423610687256
    5. ' les' → logprob: -2.9162423610687256
    6. 'es' → logprob: -4.9162421226501465
    7. 'des' → logprob: -5.0412421226501465
    8. ',' → logprob: -6.5412421226501465
    9. '  ' → logprob: -6.6662421226501465
    10. '0' → logprob: -7.1662421226501465

Token 122: ' valeurs' (ID: 73668)
  Prédit: ' puiss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puiss' → logprob: -0.8541837930679321
    2. ' valeurs' → logprob: -1.3541837930679321
    3. ' coefficients' → logprob: -2.4791836738586426
    4. 's' → logprob: -2.8541836738586426
    5. ' résultats' → logprob: -2.9791836738586426
    6. ' constantes' → logprob: -3.4791836738586426
    7. ' nombres' → logprob: -4.104183673858643
    8. 'coeff' → logprob: -4.479183673858643
    9. ' facteurs' → logprob: -4.854183673858643
    10. ' éléments' → logprob: -4.979183673858643

Token 123: ' utilisées' (ID: 130009)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5494095683097839
    2. '<|end|>' → logprob: -1.2994096279144287
    3. '  ' → logprob: -2.7994096279144287
    4. 's' → logprob: -3.5494096279144287
    5. ' de' → logprob: -5.17440938949585
    6. ',' → logprob: -5.17440938949585
    7. '   ' → logprob: -5.54940938949585
    8. 'dou' → logprob: -5.67440938949585
    9. ' s' → logprob: -5.79940938949585
    10. '[]' → logprob: -5.79940938949585

Token 124: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.204179286956787
    2. ' pour' → logprob: -1.829179286956787
    3. 'pour' → logprob: -1.954179286956787
    4. 'for' → logprob: -2.079179286956787
    5. ' for' → logprob: -2.079179286956787
    6. '<|end|>' → logprob: -2.954179286956787
    7. 'dans' → logprob: -3.954179286956787
    8. '  ' → logprob: -4.079179286956787
    9. ' dans' → logprob: -4.579179286956787
    10. '=' → logprob: -4.954179286956787

Token 125: ' une' (ID: 2463)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -1.9086873531341553
    2. 'l' → logprob: -2.1586873531341553
    3. ' stock' → logprob: -2.1586873531341553
    4. ' l' → logprob: -2.1586873531341553
    5. ' mém' → logprob: -2.1586873531341553
    6. 'calcul' → logprob: -2.7836873531341553
    7. ' la' → logprob: -3.0336873531341553
    8. ' multiplier' → logprob: -3.2836873531341553
    9. 'pré' → logprob: -3.5336873531341553
    10. ' pré' → logprob: -3.6586873531341553

Token 126: ' technique' (ID: 16410)
  Prédit: ' puissance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puissance' → logprob: -1.6694209575653076
    2. 'pu' → logprob: -2.4194209575653076
    3. ' somme' → logprob: -2.4194209575653076
    4. ' pré' → logprob: -2.5444209575653076
    5. 's' → logprob: -2.6694209575653076
    6. ' puiss' → logprob: -2.9194209575653076
    7. ' logique' → logprob: -3.0444209575653076
    8. ' calcul' → logprob: -3.4194209575653076
    9. 'part' → logprob: -3.4194209575653076
    10. 'pre' → logprob: -4.294421195983887

Token 127: ' appelée' (ID: 179130)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2586182951927185
    2. ' d' → logprob: -2.0086183547973633
    3. 'de' → logprob: -2.6336183547973633
    4. 'd' → logprob: -4.508618354797363
    5. '<|end|>' → logprob: -4.633618354797363
    6. ' ' → logprob: -8.633618354797363
    7. '  ' → logprob: -8.883618354797363
    8. 's' → logprob: -9.258618354797363
    9. ',' → logprob: -9.633618354797363
    10. '_de' → logprob: -9.758618354797363

Token 128: ' '' (ID: 461)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -1.0770153999328613
    2. ' la' → logprob: -1.2020153999328613
    3. '"' → logprob: -1.8270153999328613
    4. ' le' → logprob: -2.2020153999328613
    5. 'dou' → logprob: -3.3270153999328613
    6. 'la' → logprob: -4.327015399932861
    7. 'le' → logprob: -4.577015399932861
    8. ' l' → logprob: -5.202015399932861
    9. ' doubling' → logprob: -5.202015399932861
    10. ' double' → logprob: -5.702015399932861

Token 129: 'dou' (ID: 122443)
  Prédit: 'dou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -1.0884101390838623
    2. ' doubling' → logprob: -1.5884101390838623
    3. ' double' → logprob: -1.7134101390838623
    4. '"' → logprob: -2.5884101390838623
    5. 'double' → logprob: -2.5884101390838623
    6. ' doubl' → logprob: -3.4634101390838623
    7. ' "' → logprob: -3.5884101390838623
    8. 's' → logprob: -4.088410377502441
    9. 'd' → logprob: -4.588410377502441
    10. ' binary' → logprob: -4.963410377502441

Token 130: 'bl' (ID: 1751)
  Prédit: 'bling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bling' → logprob: -0.0191354937851429
    2. 'bl' → logprob: -4.019135475158691
    3. 'ble' → logprob: -7.644135475158691
    4. 'b' → logprob: -9.019135475158691
    5. '
' → logprob: -9.644135475158691
    6. '```' → logprob: -9.769135475158691
    7. 'bler' → logprob: -10.019135475158691
    8. '   ' → logprob: -10.519135475158691
    9. '

' → logprob: -10.644135475158691
    10. 'bli' → logprob: -10.644135475158691

Token 131: 'age' (ID: 477)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0029609426856040955
    2. 'e' → logprob: -5.877961158752441
    3. 'ng' → logprob: -9.877961158752441
    4. 'i' → logprob: -11.002961158752441
    5. 'ingt' → logprob: -11.002961158752441
    6. 'eing' → logprob: -11.002961158752441
    7. 'inging' → logprob: -12.127961158752441
    8. 'ings' → logprob: -12.127961158752441
    9. 'ling' → logprob: -12.627961158752441
    10. 'in' → logprob: -12.627961158752441

Token 132: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029878808185458183
    2. ''.' → logprob: -4.904878616333008
    3. '')' → logprob: -5.279878616333008
    4. '',' → logprob: -5.404878616333008
    5. ' '' → logprob: -5.654878616333008
    6. '.' → logprob: -6.654878616333008
    7. ' ' → logprob: -6.779878616333008
    8. '']' → logprob: -6.904878616333008
    9. 's' → logprob: -7.404878616333008
    10. '<|end|>' → logprob: -7.404878616333008

Token 133: ' inspir' (ID: 21192)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6286830902099609
    2. '.' → logprob: -1.753683090209961
    3. '[' → logprob: -1.878683090209961
    4. '   ' → logprob: -2.753683090209961
    5. ',' → logprob: -3.628683090209961
    6. ']' → logprob: -4.003683090209961
    7. '[]' → logprob: -4.628683090209961
    8. ' ' → logprob: -5.253683090209961
    9. '[:]' → logprob: -5.753683090209961
    10. '<|end|>' → logprob: -5.753683090209961

Token 134: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0430198609828949
    2. 'é' → logprob: -3.1680197715759277
    3. 'ées' → logprob: -11.543020248413086
    4. '#' → logprob: -12.543020248413086
    5. 'ee' → logprob: -12.918020248413086
    6. 'e' → logprob: -13.668020248413086
    7. 'ä' → logprob: -14.418020248413086
    8. 'è' → logprob: -14.543020248413086
    9. ' é' → logprob: -14.543020248413086
    10. 'és' → logprob: -14.668020248413086

Token 135: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7103601694107056
    2. ' du' → logprob: -1.2103601694107056
    3. ' de' → logprob: -2.085360050201416
    4. 'e' → logprob: -3.710360050201416
    5. 'de' → logprob: -4.210360050201416
    6. 'des' → logprob: -4.460360050201416
    7. 'du' → logprob: -4.710360050201416
    8. '<|end|>' → logprob: -5.335360050201416
    9. ' by' → logprob: -5.460360050201416
    10. ' par' → logprob: -5.960360050201416

Token 136: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.29212990403175354
    2. 'l' → logprob: -3.0421299934387207
    3. ' l' → logprob: -3.1671299934387207
    4. ' programmation' → logprob: -3.2921299934387207
    5. ' Fibonacci' → logprob: -3.7921299934387207
    6. ' dynamic' → logprob: -3.7921299934387207
    7. 'F' → logprob: -4.667129993438721
    8. 'la' → logprob: -4.667129993438721
    9. 'a' → logprob: -4.792129993438721
    10. 's' → logprob: -4.917129993438721

Token 137: ''ex' (ID: 23472)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07978206872940063
    2. 'e' → logprob: -3.579782009124756
    3. ''' → logprob: -3.829782009124756
    4. ''
' → logprob: -5.579782009124756
    5. ''ex' → logprob: -5.579782009124756
    6. '```' → logprob: -6.329782009124756
    7. ''a' → logprob: -6.454782009124756
    8. '')' → logprob: -6.829782009124756
    9. ''idée' → logprob: -6.954782009124756
    10. 'es' → logprob: -6.954782009124756

Token 138: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.05851653590798378
    2. 'ponential' → logprob: -3.308516502380371
    3. 'pon' → logprob: -4.308516502380371
    4. 'p' → logprob: -5.808516502380371
    5. 'planation' → logprob: -6.558516502380371
    6. 'pone' → logprob: -7.808516502380371
    7. 'po' → logprob: -8.183516502380371
    8. 'pl' → logprob: -8.183516502380371
    9. 'plic' → logprob: -8.308516502380371
    10. 'pona' → logprob: -8.558516502380371

Token 139: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.002141932025551796
    2. 'ation' → logprob: -7.627141952514648
    3. 'entation' → logprob: -7.752141952514648
    4. 'ial' → logprob: -8.002141952514648
    5. 'ielle' → logprob: -8.002141952514648
    6. 'i' → logprob: -8.752141952514648
    7. '<|end|>' → logprob: -9.252141952514648
    8. 'atial' → logprob: -10.127141952514648
    9. 'iating' → logprob: -10.502141952514648
    10. 'iential' → logprob: -10.627141952514648

Token 140: ' rapide' (ID: 44887)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.33066970109939575
    2. '<|end|>' → logprob: -1.455669641494751
    3. 'par' → logprob: -3.955669641494751
    4. ' exponent' → logprob: -4.58066987991333
    5. ' rapide' → logprob: -5.83066987991333
    6. ' ' → logprob: -6.08066987991333
    7. 'rap' → logprob: -6.58066987991333
    8. '.' → logprob: -6.58066987991333
    9. ' by' → logprob: -6.58066987991333
    10. 'mod' → logprob: -6.58066987991333

Token 141: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9458057880401611
    2. '.' → logprob: -1.1958057880401611
    3. ')' → logprob: -1.9458057880401611
    4. ',' → logprob: -2.695805788040161
    5. ' ' → logprob: -3.820805788040161
    6. '   ' → logprob: -3.820805788040161
    7. '[]' → logprob: -4.070805549621582
    8. ']' → logprob: -4.070805549621582
    9. '[:]' → logprob: -5.695805549621582
    10. ' ,' → logprob: -5.820805549621582

Token 142: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4295200109481812
    2. ' ' → logprob: -1.4295200109481812
    3. '   ' → logprob: -1.8045200109481812
    4. ' ]' → logprob: -2.3045201301574707
    5. ']' → logprob: -2.4295201301574707
    6. 'd' → logprob: -2.9295201301574707
    7. ')' → logprob: -2.9295201301574707
    8. ' [' → logprob: -4.304520130157471
    9. 'dou' → logprob: -4.804520130157471
    10. ':' → logprob: -5.054520130157471

Token 143: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.15284602344036102
    2. ' doubling' → logprob: -2.152846097946167
    3. 'd' → logprob: -4.527845859527588
    4. '   ' → logprob: -5.027845859527588
    5. '[' → logprob: -5.527845859527588
    6. ' [' → logprob: -6.527845859527588
    7. '[d' → logprob: -7.152845859527588
    8. '	d' → logprob: -7.402845859527588
    9. ' ' → logprob: -8.527846336364746
    10. '[]' → logprob: -8.652846336364746

Token 144: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -9.233804303221405e-05
    2. '_const' → logprob: -9.375092506408691
    3. ' const' → logprob: -12.625092506408691
    4. ' =' → logprob: -13.250092506408691
    5. '_consts' → logprob: -14.125092506408691
    6. '=' → logprob: -14.875092506408691
    7. '```' → logprob: -15.125092506408691
    8. '_' → logprob: -15.875092506408691
    9. 'cost' → logprob: -16.000091552734375
    10. 'cons' → logprob: -16.125091552734375

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25201091170310974
    2. '=' → logprob: -1.5020109415054321
    3. '[' → logprob: -10.7520112991333
    4. ' ' → logprob: -10.8770112991333
    5. ' =[' → logprob: -11.6270112991333
    6. '=[' → logprob: -11.7520112991333
    7. 's' → logprob: -12.3770112991333
    8. ')' → logprob: -12.3770112991333
    9. '=[]' → logprob: -12.3770112991333
    10. '[:]' → logprob: -12.7520112991333

Token 146: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2014322429895401
    2. '[' → logprob: -1.701432228088379
    3. ' ' → logprob: -11.826432228088379
    4. '[int' → logprob: -11.951432228088379
    5. '   ' → logprob: -13.701432228088379
    6. '[n' → logprob: -13.826432228088379
    7. '[a' → logprob: -13.951432228088379
    8. '[l' → logprob: -15.201432228088379
    9. '  ' → logprob: -15.576432228088379
    10. '[m' → logprob: -15.701432228088379

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.500075340270996
    4. '00' → logprob: -16.87507438659668
    5. '  ' → logprob: -16.87507438659668
    6. '    ' → logprob: -17.37507438659668
    7. '۰' → logprob: -17.68757438659668
    8. '-' → logprob: -17.81257438659668
    9. 'int' → logprob: -18.12507438659668
    10. '000' → logprob: -18.31257438659668

Token 148: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01302445586770773
    2. ' ]' → logprob: -4.76302433013916
    3. ']*' → logprob: -5.63802433013916
    4. ' for' → logprob: -7.13802433013916
    5. ',' → logprob: -11.26302433013916
    6. 'for' → logprob: -11.38802433013916
    7. ')' → logprob: -12.26302433013916
    8. '   ' → logprob: -12.26302433013916
    9. ']*(' → logprob: -13.01302433013916
    10. ')]' → logprob: -13.13802433013916

Token 149: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47747865319252014
    2. ' _' → logprob: -0.9774786233901978
    3. ' ' → logprob: -6.102478504180908
    4. ' i' → logprob: -7.102478504180908
    5. '_i' → logprob: -9.227478981018066
    6. '()' → logprob: -9.352478981018066
    7. '(' → logprob: -10.102478981018066
    8. '  ' → logprob: -10.352478981018066
    9. 'i' → logprob: -10.727478981018066
    10. '_range' → logprob: -11.352478981018066

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03436734899878502
    2. 'in' → logprob: -3.409367322921753
    3. '<|end|>' → logprob: -8.159367561340332
    4. ' ' → logprob: -8.409367561340332
    5. 'range' → logprob: -9.534367561340332
    6. '_' → logprob: -10.409367561340332
    7. 's' → logprob: -10.534367561340332
    8. 'n' → logprob: -10.784367561340332
    9. '<|end|>' → logprob: -11.784367561340332
    10. ']' → logprob: -11.909367561340332

Token 151: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.251930296421051
    2. ' range' → logprob: -1.5019302368164062
    3. '	range' → logprob: -14.126930236816406
    4. ' ' → logprob: -15.376930236816406
    5. '(range' → logprob: -15.501930236816406
    6. 'rang' → logprob: -17.626930236816406
    7. '   ' → logprob: -17.751930236816406
    8. '  ' → logprob: -18.126930236816406
    9. '```' → logprob: -18.751930236816406
    10. ' xrange' → logprob: -18.751930236816406

Token 152: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '60' → logprob: -15.5
    3. ' (' → logprob: -16.875
    4. '(
' → logprob: -18.5
    5. '](' → logprob: -19.0
    6. ']' → logprob: -19.375
    7. '((' → logprob: -19.75
    8. '64' → logprob: -21.0
    9. '(

' → logprob: -21.5
    10. ' ' → logprob: -22.125

Token 153: '0' (ID: 15)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0008285674848593771
    2. ' ' → logprob: -7.125828742980957
    3. '(' → logprob: -11.125828742980957
    4. '   ' → logprob: -12.000828742980957
    5. '61' → logprob: -13.375828742980957
    6. '6' → logprob: -14.625828742980957
    7. '  ' → logprob: -15.000828742980957
    8. ')' → logprob: -15.500828742980957
    9. '0' → logprob: -15.625828742980957
    10. '    ' → logprob: -16.00082778930664

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.359386682510376
    2. '60' → logprob: -1.234386682510376
    3. '(' → logprob: -5.484386444091797
    4. ' ' → logprob: -6.484386444091797
    5. ' ,' → logprob: -6.609386444091797
    6. '6' → logprob: -7.234386444091797
    7. ')]' → logprob: -7.234386444091797
    8. '   ' → logprob: -7.359386444091797
    9. ')' → logprob: -7.734386444091797
    10. '0' → logprob: -7.859386444091797

Token 155: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.016037069261074066
    2. ' ' → logprob: -4.1410369873046875
    3. '   ' → logprob: -14.141036987304688
    4. '61' → logprob: -14.141036987304688
    5. '6' → logprob: -14.266036987304688
    6. '  ' → logprob: -14.766036987304688
    7. '64' → logprob: -16.016036987304688
    8. '59' → logprob: -16.266036987304688
    9. '62' → logprob: -17.766036987304688
    10. ' ' → logprob: -17.828536987304688

Token 156: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '6' → logprob: -16.00048828125
    4. '61' → logprob: -16.12548828125
    5. '   ' → logprob: -16.25048828125
    6. '  ' → logprob: -16.62548828125
    7. '59' → logprob: -18.87548828125
    8. '64' → logprob: -19.25048828125
    9. '600' → logprob: -19.37548828125
    10. '
' → logprob: -19.87548828125

Token 157: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00019614976190496236
    2. ' )' → logprob: -8.62519645690918
    3. ')' → logprob: -11.75019645690918
    4. ' ]' → logprob: -13.12519645690918
    5. ')]
' → logprob: -13.75019645690918
    6. '+' → logprob: -13.87519645690918
    7. ']' → logprob: -13.87519645690918
    8. ' ' → logprob: -13.87519645690918
    9. ')],' → logprob: -14.00019645690918
    10. '   ' → logprob: -14.25019645690918

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28641191124916077
    2. '<|end|>' → logprob: -2.161412000656128
    3. '    
' → logprob: -2.661412000656128
    4. '
' → logprob: -3.536412000656128
    5. '	d' → logprob: -4.661411762237549
    6. '	
' → logprob: -5.161411762237549
    7. 'dou' → logprob: -6.036411762237549
    8. ' ' → logprob: -6.161411762237549
    9. '    ' → logprob: -6.286411762237549
    10. '<|end|>' → logprob: -6.286411762237549

Token 159: ' #' (ID: 1069)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.49435916543006897
    2. '   ' → logprob: -1.7443591356277466
    3. 'd' → logprob: -1.9943591356277466
    4. ')' → logprob: -3.744359254837036
    5. ']' → logprob: -4.369359016418457
    6. '=' → logprob: -4.619359016418457
    7. ' ' → logprob: -5.119359016418457
    8. 'for' → logprob: -5.119359016418457
    9. ' for' → logprob: -5.619359016418457
    10. '	d' → logprob: -6.369359016418457

Token 160: ' On' (ID: 2160)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.01714995689690113
    2. 'd' → logprob: -4.517149925231934
    3. ' doubling' → logprob: -5.892149925231934
    4. 'for' → logprob: -6.267149925231934
    5. '   ' → logprob: -8.142149925231934
    6. ' for' → logprob: -8.892149925231934
    7. 'current' → logprob: -9.329649925231934
    8. 'def' → logprob: -9.392149925231934
    9. 'if' → logprob: -9.517149925231934
    10. '#' → logprob: -9.517149925231934

Token 161: ' initialise' (ID: 145250)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.5737134218215942
    2. ' =' → logprob: -1.9487134218215942
    3. '=' → logprob: -3.0737133026123047
    4. 'for' → logprob: -3.1987133026123047
    5. ' doubling' → logprob: -3.5737133026123047
    6. '[' → logprob: -3.8237133026123047
    7. ')' → logprob: -3.8237133026123047
    8. ' for' → logprob: -4.198713302612305
    9. 'd' → logprob: -4.323713302612305
    10. ' ' → logprob: -4.448713302612305

Token 162: ' le' (ID: 505)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.29803934693336487
    2. ' doubling' → logprob: -1.4230393171310425
    3. '	d' → logprob: -5.048039436340332
    4. ' ' → logprob: -5.673039436340332
    5. 'd' → logprob: -6.798039436340332
    6. ' a' → logprob: -7.298039436340332
    7. 'l' → logprob: -7.298039436340332
    8. ' l' → logprob: -7.423039436340332
    9. '   ' → logprob: -7.798039436340332
    10. 'a' → logprob: -7.923039436340332

Token 163: ' premier' (ID: 15506)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.11386837065219879
    2. 'prem' → logprob: -3.863868474960327
    3. ' premier' → logprob: -3.988868474960327
    4. 'i' → logprob: -4.238868236541748
    5. 'd' → logprob: -4.613868236541748
    6. 'a' → logprob: -5.238868236541748
    7. 's' → logprob: -5.363868236541748
    8. '=' → logprob: -5.363868236541748
    9. ' doubling' → logprob: -5.613868236541748
    10. '0' → logprob: -5.988868236541748

Token 164: ' élément' (ID: 99627)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.4001699984073639
    2. ' élément' → logprob: -1.9001699686050415
    3. 'element' → logprob: -2.775170087814331
    4. ' element' → logprob: -3.150170087814331
    5. 'élé' → logprob: -3.650170087814331
    6. '=' → logprob: -4.400169849395752
    7. ' ' → logprob: -4.900169849395752
    8. ' doubling' → logprob: -5.150169849395752
    9. 'd' → logprob: -5.400169849395752
    10. ' =' → logprob: -5.650169849395752

Token 165: ' (' (ID: 350)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.12849314510822296
    2. ' =' → logprob: -3.253493070602417
    3. ' doubling' → logprob: -3.378493070602417
    4. '[' → logprob: -4.628493309020996
    5. '   ' → logprob: -4.878493309020996
    6. '<|end|>' → logprob: -5.003493309020996
    7. 'd' → logprob: -5.503493309020996
    8. '=' → logprob: -5.628493309020996
    9. ' ' → logprob: -6.128493309020996
    10. ',' → logprob: -6.128493309020996

Token 166: 'indice' (ID: 176697)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.03939485922455788
    2. '0' → logprob: -4.289394855499268
    3. 'd' → logprob: -4.789394855499268
    4. ' doubling' → logprob: -4.914394855499268
    5. ')' → logprob: -5.039394855499268
    6. ' ' → logprob: -7.289394855499268
    7. '   ' → logprob: -7.789394855499268
    8. '[' → logprob: -8.164395332336426
    9. '1' → logprob: -8.664395332336426
    10. 'i' → logprob: -8.789395332336426

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46226415038108826
    2. ')' → logprob: -1.2122641801834106
    3. ' ' → logprob: -3.712264060974121
    4. 's' → logprob: -4.337264060974121
    5. '[' → logprob: -4.712264060974121
    6. '<|end|>' → logprob: -5.212264060974121
    7. ']' → logprob: -5.337264060974121
    8. 'dou' → logprob: -5.462264060974121
    9. '=' → logprob: -5.587264060974121
    10. ' =' → logprob: -6.462264060974121

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001519325451226905
    2. '[' → logprob: -9.500151634216309
    3. ' ' → logprob: -9.625151634216309
    4. '=' → logprob: -11.875151634216309
    5. '1' → logprob: -13.500151634216309
    6. ')' → logprob: -13.750151634216309
    7. 's' → logprob: -14.750151634216309
    8. '(' → logprob: -15.000151634216309
    9. '<|end|>' → logprob: -15.625151634216309
    10. 'd' → logprob: -16.250152587890625

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01929033361375332
    2. ']' → logprob: -4.019290447235107
    3. ' )' → logprob: -7.394290447235107
    4. '   ' → logprob: -8.39428997039795
    5. '])' → logprob: -9.76928997039795
    6. ' ' → logprob: -9.89428997039795
    7. ' ]' → logprob: -10.01928997039795
    8. ')]' → logprob: -10.14428997039795
    9. ',' → logprob: -10.39428997039795
    10. ':' → logprob: -11.14428997039795

Token 170: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.380402147769928
    2. ' =' → logprob: -1.7554020881652832
    3. ' à' → logprob: -2.755402088165283
    4. ']' → logprob: -3.505402088165283
    5. ' avec' → logprob: -4.630402088165283
    6. 'dou' → logprob: -4.630402088165283
    7. ')' → logprob: -4.755402088165283
    8. '<|end|>' → logprob: -5.755402088165283
    9. ' with' → logprob: -5.880402088165283
    10. ' to' → logprob: -6.005402088165283

Token 171: ' la' (ID: 557)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.47434619069099426
    2. ' doubling' → logprob: -0.9743461608886719
    3. 'd' → logprob: -9.474346160888672
    4. ' doubl' → logprob: -9.849346160888672
    5. 'the' → logprob: -10.474346160888672
    6. ' dou' → logprob: -10.474346160888672
    7. ' la' → logprob: -10.849346160888672
    8. ' the' → logprob: -10.974346160888672
    9. 'la' → logprob: -11.349346160888672
    10. 'l' → logprob: -12.286846160888672

Token 172: ' liste' (ID: 31719)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0002655079588294029
    2. ' doubling' → logprob: -8.250265121459961
    3. 'list' → logprob: -13.250265121459961
    4. 'd' → logprob: -13.375265121459961
    5. 'double' → logprob: -15.375265121459961
    6. 'liste' → logprob: -16.25026512145996
    7. 'array' → logprob: -16.62526512145996
    8. 'Dou' → logprob: -16.62526512145996
    9. '`' → logprob: -16.75026512145996
    10. ' list' → logprob: -17.00026512145996

Token 173: ' à' (ID: 1221)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.3987901210784912
    2. ' à' → logprob: -1.7737901210784912
    3. ' with' → logprob: -3.148790121078491
    4. ' avec' → logprob: -3.398790121078491
    5. '<|end|>' → logprob: -3.648790121078491
    6. '[' → logprob: -4.02379035949707
    7. ' ' → logprob: -4.77379035949707
    8. ' doubling' → logprob: -5.14879035949707
    9. ' to' → logprob: -5.27379035949707
    10. ']' → logprob: -5.89879035949707

Token 174: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8199111223220825
    2. 'l' → logprob: -1.0699111223220825
    3. ' a' → logprob: -2.569911003112793
    4. ' l' → logprob: -2.569911003112793
    5. 'b' → logprob: -3.069911003112793
    6. ' b' → logprob: -5.069911003112793
    7. '1' → logprob: -6.069911003112793
    8. 'M' → logprob: -6.194911003112793
    9. '0' → logprob: -6.569911003112793
    10. 'B' → logprob: -7.069911003112793

Token 175: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.35460200905799866
    2. 'a' → logprob: -1.3546019792556763
    3. 'b' → logprob: -3.354602098464966
    4. '1' → logprob: -5.979601860046387
    5. 'n' → logprob: -6.729601860046387
    6. ' l' → logprob: -7.604601860046387
    7. '0' → logprob: -7.729601860046387
    8. 'L' → logprob: -8.104601860046387
    9. 'M' → logprob: -8.604601860046387
    10. ' a' → logprob: -8.979601860046387

Token 176: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6684613227844238
    2. '<|end|>' → logprob: -1.6684613227844238
    3. 'dou' → logprob: -1.7934613227844238
    4. ' ' → logprob: -3.543461322784424
    5. 'd' → logprob: -3.668461322784424
    6. '.' → logprob: -3.918461322784424
    7. '   ' → logprob: -4.668461322784424
    8. '1' → logprob: -4.793461322784424
    9. '   
' → logprob: -5.168461322784424
    10. ' 
' → logprob: -5.293461322784424

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7370882034301758
    2. 'dou' → logprob: -0.7370882034301758
    3. '	d' → logprob: -3.362088203430176
    4. 'd' → logprob: -5.612088203430176
    5. ' doubling' → logprob: -6.862088203430176
    6. ' ' → logprob: -6.862088203430176
    7. '  ' → logprob: -7.362088203430176
    8. '    
' → logprob: -7.987088203430176
    9. '1' → logprob: -8.487088203430176
    10. '   
' → logprob: -8.487088203430176

Token 178: ' #' (ID: 1069)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.07693188637495041
    2. '   ' → logprob: -2.826931953430176
    3. 'd' → logprob: -4.451931953430176
    4. ' doubling' → logprob: -6.076931953430176
    5. '	d' → logprob: -8.076931953430176
    6. ' ' → logprob: -8.201931953430176
    7. '  ' → logprob: -9.201931953430176
    8. '1' → logprob: -9.576931953430176
    9. '    
' → logprob: -10.326931953430176
    10. '0' → logprob: -11.076931953430176

Token 179: ' Cela' (ID: 44403)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.012704470194876194
    2. ' doubling' → logprob: -4.512704372406006
    3. '   ' → logprob: -6.762704372406006
    4. 'd' → logprob: -8.262704849243164
    5. ' ' → logprob: -9.887704849243164
    6. '	d' → logprob: -10.700204849243164
    7. '1' → logprob: -10.762704849243164
    8. '  ' → logprob: -10.825204849243164
    9. 'double' → logprob: -11.137704849243164
    10. ' dou' → logprob: -11.450204849243164

Token 180: ' sert' (ID: 52405)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.04294461011886597
    2. ' ' → logprob: -4.167944431304932
    3. '   ' → logprob: -4.917944431304932
    4. ' doubling' → logprob: -5.667944431304932
    5. '.' → logprob: -6.042944431304932
    6. 'd' → logprob: -6.292944431304932
    7. '#' → logprob: -6.667944431304932
    8. 'for' → logprob: -7.042944431304932
    9. 'a' → logprob: -7.417944431304932
    10. ' dou' → logprob: -7.417944431304932

Token 181: ' de' (ID: 334)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07521842420101166
    2. ' a' → logprob: -3.325218439102173
    3. ' ' → logprob: -4.325218200683594
    4. 'à' → logprob: -4.825218200683594
    5. 'a' → logprob: -5.075218200683594
    6. ' for' → logprob: -5.950218200683594
    7. ' to' → logprob: -7.075218200683594
    8. '<|end|>' → logprob: -7.325218200683594
    9. ' au' → logprob: -7.575218200683594
    10. 'for' → logprob: -7.575218200683594

Token 182: ' base' (ID: 3611)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.4529731869697571
    2. '1' → logprob: -1.7029731273651123
    3. 'base' → logprob: -2.3279731273651123
    4. ' base' → logprob: -3.5779731273651123
    5. 'l' → logprob: -3.9529731273651123
    6. 'a' → logprob: -4.702973365783691
    7. 'point' → logprob: -5.077973365783691
    8. ' doubling' → logprob: -5.452973365783691
    9. 'b' → logprob: -5.827973365783691
    10. ' ' → logprob: -6.077973365783691

Token 183: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' la' (ID: 557)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -1.2828547954559326
    2. ' l' → logprob: -1.4078547954559326
    3. ' i' → logprob: -2.1578547954559326
    4. ' la' → logprob: -2.4078547954559326
    5. ' doubling' → logprob: -2.6578547954559326
    6. 'l' → logprob: -3.2828547954559326
    7. ' ' → logprob: -3.7828547954559326
    8. ' calcul' → logprob: -4.032855033874512
    9. ' the' → logprob: -4.032855033874512
    10. 'calcul' → logprob: -4.282855033874512

Token 185: ' technique' (ID: 16410)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.053377725183963776
    2. ' doubling' → logprob: -4.053377628326416
    3. 'calcul' → logprob: -4.428377628326416
    4. ' calcul' → logprob: -5.428377628326416
    5. '1' → logprob: -5.553377628326416
    6. 'for' → logprob: -5.553377628326416
    7. 'pow' → logprob: -6.053377628326416
    8. 'multip' → logprob: -6.678377628326416
    9. ' for' → logprob: -7.178377628326416
    10. 'i' → logprob: -7.428377628326416

Token 186: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4113880395889282
    2. ' d' → logprob: -1.7863880395889282
    3. '<|end|>' → logprob: -2.5363879203796387
    4. 'd' → logprob: -3.9113879203796387
    5. 'de' → logprob: -4.036387920379639
    6. ' exponent' → logprob: -4.161387920379639
    7. '=' → logprob: -5.411387920379639
    8. 'dou' → logprob: -5.411387920379639
    9. ' ' → logprob: -5.536387920379639
    10. ' of' → logprob: -5.786387920379639

Token 187: ' doubl' (ID: 127992)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.01809024065732956
    2. ' doubl' → logprob: -4.39309024810791
    3. ' doubling' → logprob: -5.64309024810791
    4. '1' → logprob: -7.51809024810791
    5. ' dou' → logprob: -8.01809024810791
    6. 'double' → logprob: -8.51809024810791
    7. '"' → logprob: -8.64309024810791
    8. 'd' → logprob: -8.76809024810791
    9. ' doub' → logprob: -9.83059024810791
    10. ' dobl' → logprob: -9.89309024810791

Token 188: 'age' (ID: 477)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.004290303681045771
    2. 'age' → logprob: -5.5042901039123535
    3. 'a' → logprob: -10.129290580749512
    4. 'aging' → logprob: -10.129290580749512
    5. 'ang' → logprob: -10.504290580749512
    6. 'e' → logprob: -11.129290580749512
    7. 'eing' → logprob: -11.254290580749512
    8. 'i' → logprob: -11.504290580749512
    9. 'in' → logprob: -12.004290580749512
    10. 'inge' → logprob: -12.129290580749512

Token 189: ' ci' (ID: 7405)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8816204071044922
    2. '   ' → logprob: -1.3816204071044922
    3. '<|end|>' → logprob: -2.381620407104492
    4. 'dou' → logprob: -3.006620407104492
    5. ' ' → logprob: -3.256620407104492
    6. ',' → logprob: -3.506620407104492
    7. ')' → logprob: -3.506620407104492
    8. '
' → logprob: -3.631620407104492
    9. '1' → logprob: -4.381620407104492
    10. '[' → logprob: -4.506620407104492

Token 190: '-ap' (ID: 49541)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5909960865974426
    2. '-' → logprob: -1.9659960269927979
    3. '#' → logprob: -2.590996026992798
    4. '-dessus' → logprob: -2.715996026992798
    5. '-dessous' → logprob: -2.715996026992798
    6. 'd' → logprob: -3.965996026992798
    7. 'qu' → logprob: -4.840996265411377
    8. 'u' → logprob: -5.340996265411377
    9. 'ns' → logprob: -5.340996265411377
    10. 'nd' → logprob: -5.340996265411377

Token 191: 'rès' (ID: 48817)
  Prédit: 'pel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pel' → logprob: -0.24367816746234894
    2. 'rès' → logprob: -1.7436782121658325
    3. 'ri' → logprob: -4.618678092956543
    4. 'r' → logprob: -5.118678092956543
    5. 'pli' → logprob: -5.118678092956543
    6. 's' → logprob: -5.493678092956543
    7. 'p' → logprob: -5.743678092956543
    8. 'prentissage' → logprob: -5.743678092956543
    9. 'rent' → logprob: -6.243678092956543
    10. 'plic' → logprob: -7.368678092956543

Token 192: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2745479643344879
    2. '.' → logprob: -2.149548053741455
    3. 'dou' → logprob: -2.274548053741455
    4. ' ' → logprob: -4.899548053741455
    5. ')' → logprob: -5.524548053741455
    6. ',' → logprob: -6.149548053741455
    7. ' doubling' → logprob: -6.649548053741455
    8. 'd' → logprob: -6.774548053741455
    9. '<|end|>' → logprob: -6.774548053741455
    10. '  ' → logprob: -7.399548053741455

Token 193: '   ' (ID: 271)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.07313161343336105
    2. '   ' → logprob: -2.823131561279297
    3. 'd' → logprob: -4.948131561279297
    4. ' doubling' → logprob: -5.948131561279297
    5. '1' → logprob: -7.198131561279297
    6. '	d' → logprob: -8.198131561279297
    7. ' ' → logprob: -8.948131561279297
    8. '```' → logprob: -10.198131561279297
    9. '    
' → logprob: -10.323131561279297
    10. '  ' → logprob: -10.448131561279297

Token 194: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.004979832097887993
    2. '   ' → logprob: -6.254979610443115
    3. 'd' → logprob: -6.504979610443115
    4. ' doubling' → logprob: -6.629979610443115
    5. '	d' → logprob: -9.254980087280273
    6. '1' → logprob: -9.629980087280273
    7. ' ' → logprob: -10.379980087280273
    8. ' dou' → logprob: -12.004980087280273
    9. '  ' → logprob: -12.254980087280273
    10. '    
' → logprob: -12.379980087280273

Token 195: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -1.9361264946837764e-07
    2. ' const' → logprob: -17.0
    3. 'cost' → logprob: -17.625
    4. '```' → logprob: -18.625
    5. '=' → logprob: -18.75
    6. '   ' → logprob: -18.875
    7. ' =' → logprob: -18.875
    8. '_const' → logprob: -19.75
    9. '-' → logprob: -19.875
    10. 'cons' → logprob: -20.125

Token 196: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.491498531133402e-06
    2. ' [' → logprob: -11.625009536743164
    3. ' ' → logprob: -15.875009536743164
    4. '[
' → logprob: -16.500009536743164
    5. '
' → logprob: -17.000009536743164
    6. '0' → logprob: -17.250009536743164
    7. '][' → logprob: -17.750009536743164
    8. '=' → logprob: -17.875009536743164
    9. '```' → logprob: -17.875009536743164
    10. ']' → logprob: -18.250009536743164

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '1' → logprob: -18.87502098083496
    4. '۰' → logprob: -19.62502098083496
    5. '   ' → logprob: -20.06252098083496
    6. '[' → logprob: -20.25002098083496
    7. ')' → logprob: -20.31252098083496
    8. '<|end|>' → logprob: -20.56252098083496
    9. '```' → logprob: -21.00002098083496
    10. '  ' → logprob: -21.12502098083496

Token 198: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008835955522954464
    2. ' ]' → logprob: -7.12588357925415
    3. ']=' → logprob: -9.500884056091309
    4. '=' → logprob: -12.500884056091309
    5. ' =' → logprob: -15.250884056091309
    6. ')' → logprob: -15.375884056091309
    7. ' ' → logprob: -16.250883102416992
    8. '1' → logprob: -16.500883102416992
    9. '   ' → logprob: -17.250883102416992
    10. ']
' → logprob: -17.500883102416992

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692968547344208
    2. ' =' → logprob: -2.126929759979248
    3. ' ' → logprob: -14.12692928314209
    4. '=

' → logprob: -15.62692928314209
    5. '=
' → logprob: -16.001930236816406
    6. ',' → logprob: -16.251930236816406
    7. ' =
' → logprob: -16.376930236816406
    8. '=int' → logprob: -16.376930236816406
    9. '<|end|>' → logprob: -16.376930236816406
    10. '1' → logprob: -16.751930236816406

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015580514445900917
    2. 'a' → logprob: -5.015580654144287
    3. 'l' → logprob: -5.390580654144287
    4. ' ' → logprob: -5.515580654144287
    5. 'n' → logprob: -9.765580177307129
    6. ' l' → logprob: -9.765580177307129
    7. ' a' → logprob: -10.140580177307129
    8. 'b' → logprob: -10.390580177307129
    9. 'M' → logprob: -11.140580177307129
    10. '0' → logprob: -11.703080177307129

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015261677326634526
    2. 'l' → logprob: -6.626526355743408
    3. 'a' → logprob: -8.75152587890625
    4. ' ' → logprob: -10.25152587890625
    5. '0' → logprob: -13.12652587890625
    6. 'n' → logprob: -13.75152587890625
    7. ' l' → logprob: -14.12652587890625
    8. 'b' → logprob: -14.62652587890625
    9. '(' → logprob: -14.87652587890625
    10. 'L' → logprob: -15.06402587890625

Token 202: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20621579885482788
    2. ' for' → logprob: -1.8312158584594727
    3. 'for' → logprob: -3.8312158584594727
    4. '	for' → logprob: -5.831215858459473
    5. '    
' → logprob: -7.081215858459473
    6. '    ' → logprob: -8.706215858459473
    7. '.' → logprob: -8.956215858459473
    8. '<|end|>' → logprob: -8.956215858459473
    9. '
' → logprob: -9.706215858459473
    10. ' ' → logprob: -10.081215858459473

Token 205: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03013908676803112
    2. ' for' → logprob: -3.5301389694213867
    3. 'i' → logprob: -8.530138969421387
    4. '   ' → logprob: -8.655138969421387
    5. ' i' → logprob: -11.155138969421387
    6. ' ' → logprob: -13.655138969421387
    7. '	for' → logprob: -14.655138969421387
    8. 'pour' → logprob: -14.655138969421387
    9. '  ' → logprob: -16.530139923095703
    10. 'def' → logprob: -17.280139923095703

Token 206: 'ation' (ID: 387)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017284000292420387
    2. ' for' → logprob: -4.142283916473389
    3. '   ' → logprob: -6.767283916473389
    4. '       ' → logprob: -9.892284393310547
    5. 'er' → logprob: -11.267284393310547
    6. 'def' → logprob: -11.392284393310547
    7. '	for' → logprob: -11.392284393310547
    8. '_for' → logprob: -13.142284393310547
    9. '
' → logprob: -13.392284393310547
    10. '    ' → logprob: -13.767284393310547

Token 207: ' d' (ID: 272)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2847415506839752
    2. 'for' → logprob: -2.1597416400909424
    3. '   ' → logprob: -2.7847416400909424
    4. '    ' → logprob: -3.6597416400909424
    5. '	for' → logprob: -3.7847416400909424
    6. ' ' → logprob: -4.409741401672363
    7. '	' → logprob: -6.409741401672363
    8. ',' → logprob: -6.784741401672363
    9. '    
' → logprob: -7.159741401672363
    10. '
' → logprob: -7.159741401672363

Token 208: ''une' (ID: 13337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45679137110710144
    2. '   ' → logprob: -2.581791400909424
    3. ''une' → logprob: -2.831791400909424
    4. ' a' → logprob: -3.081791400909424
    5. ''un' → logprob: -3.081791400909424
    6. 'for' → logprob: -3.456791400909424
    7. ' un' → logprob: -3.706791400909424
    8. '[' → logprob: -3.956791400909424
    9. 'e' → logprob: -4.081791400909424
    10. ' for' → logprob: -4.956791400909424

Token 209: ' autre' (ID: 20278)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008459140546619892
    2. ' for' → logprob: -5.383459091186523
    3. 'range' → logprob: -5.633459091186523
    4. 'bou' → logprob: -9.508459091186523
    5. 'b' → logprob: -10.633459091186523
    6. ' range' → logprob: -10.633459091186523
    7. 'liste' → logprob: -11.008459091186523
    8. 'variable' → logprob: -11.383459091186523
    9. 'list' → logprob: -11.508459091186523
    10. 'f' → logprob: -11.508459091186523

Token 210: ' liste' (ID: 31719)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08494755625724792
    2. ' for' → logprob: -2.9599475860595703
    3. 'range' → logprob: -4.45994758605957
    4. 'liste' → logprob: -5.33494758605957
    5. 'list' → logprob: -5.95994758605957
    6. 's' → logprob: -6.08494758605957
    7. ' ' → logprob: -6.58494758605957
    8. '_list' → logprob: -7.08494758605957
    9. '_' → logprob: -7.08494758605957
    10. ' liste' → logprob: -7.20994758605957

Token 211: ' '' (ID: 461)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9099763631820679
    2. 'for' → logprob: -1.0349763631820679
    3. '   ' → logprob: -2.0349764823913574
    4. '[' → logprob: -2.9099764823913574
    5. 'd' → logprob: -4.034976482391357
    6. '<|end|>' → logprob: -4.534976482391357
    7. 'dou' → logprob: -4.659976482391357
    8. ' =' → logprob: -5.159976482391357
    9. ' pour' → logprob: -6.409976482391357
    10. ' ' → logprob: -6.659976482391357

Token 212: 'dou' (ID: 122443)
  Prédit: 'dou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.10554487258195877
    2. 'dp' → logprob: -3.3555448055267334
    3. 'd' → logprob: -4.4805450439453125
    4. 'sum' → logprob: -4.8555450439453125
    5. 'powers' → logprob: -5.1055450439453125
    6. 'pow' → logprob: -5.6055450439453125
    7. 'double' → logprob: -5.7305450439453125
    8. 's' → logprob: -5.8555450439453125
    9. 'part' → logprob: -5.9805450439453125
    10. 'power' → logprob: -6.3555450439453125

Token 213: 'bling' (ID: 11037)
  Prédit: 'bling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bling' → logprob: -0.0008404768304899335
    2. 'bl' → logprob: -7.125840663909912
    3. 'ble' → logprob: -10.625840187072754
    4. 'pling' → logprob: -12.750840187072754
    5. 'blic' → logprob: -12.875840187072754
    6. 'bing' → logprob: -13.875840187072754
    7. '

' → logprob: -14.000840187072754
    8. '
' → logprob: -14.375840187072754
    9. 'b' → logprob: -14.500840187072754
    10. '   ' → logprob: -14.750840187072754

Token 214: 'line' (ID: 1137)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.31678831577301025
    2. 'sum' → logprob: -2.0667881965637207
    3. 's' → logprob: -3.1917881965637207
    4. ' =' → logprob: -4.066788196563721
    5. '=' → logprob: -4.566788196563721
    6. 'val' → logprob: -4.691788196563721
    7. 'values' → logprob: -5.066788196563721
    8. 'vals' → logprob: -5.316788196563721
    9. 'coeff' → logprob: -5.441788196563721
    10. 'a' → logprob: -5.691788196563721

Token 215: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33256158232688904
    2. ''' → logprob: -1.7075616121292114
    3. '=' → logprob: -2.332561492919922
    4. ']' → logprob: -6.582561492919922
    5. 's' → logprob: -6.582561492919922
    6. ' ' → logprob: -7.832561492919922
    7. '']' → logprob: -8.207561492919922
    8. '   ' → logprob: -8.332561492919922
    9. 'a' → logprob: -8.957561492919922
    10. '[' → logprob: -8.957561492919922

Token 216: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020530449226498604
    2. '   ' → logprob: -4.5205302238464355
    3. '=' → logprob: -4.8955302238464355
    4. '[' → logprob: -6.5205302238464355
    5. ' ' → logprob: -8.770530700683594
    6. ' for' → logprob: -8.895530700683594
    7. '<|end|>' → logprob: -9.645530700683594
    8. '  ' → logprob: -10.395530700683594
    9. '=[' → logprob: -10.770530700683594
    10. ' =[' → logprob: -11.145530700683594

Token 217: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010802560485899448
    2. '0' → logprob: -5.010802745819092
    3. ' [' → logprob: -6.760802745819092
    4. '[(' → logprob: -6.885802745819092
    5. '[a' → logprob: -7.260802745819092
    6. '60' → logprob: -7.885802745819092
    7. '[l' → logprob: -8.385802268981934
    8. '[[' → logprob: -8.760802268981934
    9. '[n' → logprob: -9.385802268981934
    10. '[int' → logprob: -9.760802268981934

Token 218: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.04994320869445801
    2. ' ' → logprob: -3.049943208694458
    3. '(' → logprob: -7.549942970275879
    4. '61' → logprob: -8.174942970275879
    5. '59' → logprob: -8.799942970275879
    6. 'n' → logprob: -9.174942970275879
    7. 'l' → logprob: -10.112442970275879
    8. '30' → logprob: -10.612442970275879
    9. '40' → logprob: -10.862442970275879
    10. '   ' → logprob: -10.987442970275879

Token 219: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0016560172662138939
    2. '(' → logprob: -6.5016560554504395
    3. ' ' → logprob: -9.501655578613281
    4. '61' → logprob: -10.376655578613281
    5. 'n' → logprob: -11.126655578613281
    6. '59' → logprob: -12.126655578613281
    7. '[' → logprob: -12.251655578613281
    8. '0' → logprob: -12.501655578613281
    9. '(n' → logprob: -13.251655578613281
    10. '4' → logprob: -13.439155578613281

Token 220: ' rempl' (ID: 66326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6149531006813049
    2. ' for' → logprob: -0.9899531006813049
    3. ' =' → logprob: -2.86495304107666
    4. ' [' → logprob: -3.98995304107666
    5. ',' → logprob: -5.36495304107666
    6. ' ' → logprob: -6.36495304107666
    7. 'for' → logprob: -6.36495304107666
    8. ' with' → logprob: -6.86495304107666
    9. '<|end|>' → logprob: -7.36495304107666
    10. '   ' → logprob: -7.36495304107666

Token 221: 'ie' (ID: 396)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.017829371616244316
    2. '[' → logprob: -4.767829418182373
    3. 'ie' → logprob: -5.017829418182373
    4. 'ple' → logprob: -7.017829418182373
    5. 'ise' → logprob: -7.517829418182373
    6. 'for' → logprob: -7.767829418182373
    7. '   ' → logprob: -8.767828941345215
    8. '[-' → logprob: -9.017828941345215
    9. 'plit' → logprob: -9.392828941345215
    10. 'lie' → logprob: -10.017828941345215

Token 222: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44590210914611816
    2. ' d' → logprob: -1.8209021091461182
    3. '([' → logprob: -2.695902109146118
    4. ' de' → logprob: -3.070902109146118
    5. '(' → logprob: -3.320902109146118
    6. 'd' → logprob: -4.445901870727539
    7. ' with' → logprob: -4.695901870727539
    8. ' avec' → logprob: -4.695901870727539
    9. ' [' → logprob: -5.320901870727539
    10. ',' → logprob: -6.070901870727539

Token 223: ''ent' (ID: 53422)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7939414978027344
    2. ''ent' → logprob: -1.0439414978027344
    3. '0' → logprob: -2.4189414978027344
    4. '[int' → logprob: -3.4189414978027344
    5. ''int' → logprob: -4.043941497802734
    6. '[]' → logprob: -4.418941497802734
    7. 'ent' → logprob: -4.793941497802734
    8. ''' → logprob: -4.918941497802734
    9. '(' → logprob: -4.918941497802734
    10. 'int' → logprob: -5.668941497802734

Token 224: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0005487450980581343
    2. 't' → logprob: -8.125548362731934
    3. 'ier' → logprob: -8.375548362731934
    4. 'tiers' → logprob: -11.000548362731934
    5. 'ers' → logprob: -13.750548362731934
    6. 'ti' → logprob: -14.000548362731934
    7. 'tiens' → logprob: -14.500548362731934
    8. 'i' → logprob: -14.500548362731934
    9. '0' → logprob: -14.625548362731934
    10. 'ents' → logprob: -14.625548362731934

Token 225: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3723399043083191
    2. '[' → logprob: -1.2473399639129639
    3. '(' → logprob: -4.122339725494385
    4. ',' → logprob: -6.622339725494385
    5. ' zeros' → logprob: -6.622339725494385
    6. ' ' → logprob: -6.747339725494385
    7. 'for' → logprob: -6.747339725494385
    8. ' for' → logprob: -6.872339725494385
    9. '   ' → logprob: -8.247340202331543
    10. '.' → logprob: -8.247340202331543

Token 226: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25203776359558105
    2. ' for' → logprob: -2.252037763595581
    3. ',' → logprob: -2.502037763595581
    4. 'for' → logprob: -4.37703800201416
    5. '<|end|>' → logprob: -4.87703800201416
    6. '[' → logprob: -5.37703800201416
    7. '.' → logprob: -5.62703800201416
    8. ')' → logprob: -5.87703800201416
    9. ']' → logprob: -6.50203800201416
    10. ' ' → logprob: -7.25203800201416

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08902518451213837
    2. 'dou' → logprob: -2.4640252590179443
    3. '	d' → logprob: -9.714025497436523
    4. '  ' → logprob: -12.089025497436523
    5. ' dou' → logprob: -12.089025497436523
    6. 'd' → logprob: -12.464025497436523
    7. ' ' → logprob: -12.714025497436523
    8. ' doubl' → logprob: -12.964025497436523
    9. ' doubling' → logprob: -13.464025497436523
    10. '    
' → logprob: -14.339025497436523

Token 228: ' #' (ID: 1069)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.07854976505041122
    2. '   ' → logprob: -2.703549861907959
    3. '[' → logprob: -5.453549861907959
    4. ' doubling' → logprob: -5.828549861907959
    5. '	d' → logprob: -7.578549861907959
    6. 'd' → logprob: -8.3285493850708
    7. ' ' → logprob: -8.5785493850708
    8. '    ' → logprob: -9.8285493850708
    9. '0' → logprob: -10.2035493850708
    10. '[d' → logprob: -10.3285493850708

Token 229: ' Cette' (ID: 27383)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0010735384421423078
    2. ' doubling' → logprob: -7.001073360443115
    3. 'd' → logprob: -9.251073837280273
    4. '   ' → logprob: -9.751073837280273
    5. 'for' → logprob: -12.751073837280273
    6. 'double' → logprob: -14.001073837280273
    7. ' doubl' → logprob: -14.251073837280273
    8. '```' → logprob: -14.501073837280273
    9. '
' → logprob: -14.626073837280273
    10. ' dou' → logprob: -14.876073837280273

Token 230: ' liste' (ID: 31719)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.7311288714408875
    2. 'for' → logprob: -1.8561289310455322
    3. '[' → logprob: -2.1061289310455322
    4. ' ' → logprob: -2.7311289310455322
    5. ' for' → logprob: -2.8561289310455322
    6. ' doubling' → logprob: -2.9811289310455322
    7. '#' → logprob: -3.8561289310455322
    8. ')' → logprob: -4.231128692626953
    9. ']' → logprob: -4.731128692626953
    10. ' line' → logprob: -4.981128692626953

Token 231: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37854209542274475
    2. '[' → logprob: -1.7535420656204224
    3. '=' → logprob: -2.003542184829712
    4. '   ' → logprob: -5.378541946411133
    5. ')' → logprob: -7.378541946411133
    6. 'for' → logprob: -7.753541946411133
    7. ']' → logprob: -8.003541946411133
    8. ',' → logprob: -8.378541946411133
    9. ' ' → logprob: -8.503541946411133
    10. ' for' → logprob: -8.753541946411133

Token 232: ' stock' (ID: 6546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009042083285748959
    2. ' =' → logprob: -5.009042263031006
    3. ' [' → logprob: -7.134042263031006
    4. '=' → logprob: -7.384042263031006
    5. ' ' → logprob: -8.259041786193848
    6. 'for' → logprob: -8.384041786193848
    7. ' for' → logprob: -9.509041786193848
    8. 'dou' → logprob: -9.509041786193848
    9. '[i' → logprob: -9.634041786193848
    10. '   ' → logprob: -9.759041786193848

Token 233: 'er' (ID: 259)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07191084325313568
    2. ' des' → logprob: -3.696910858154297
    3. '   ' → logprob: -4.446910858154297
    4. '(' → logprob: -4.571910858154297
    5. ' ' → logprob: -5.321910858154297
    6. '0' → logprob: -5.446910858154297
    7. ' =' → logprob: -6.196910858154297
    8. 'a' → logprob: -6.446910858154297
    9. 'er' → logprob: -6.821910858154297
    10. '=' → logprob: -6.821910858154297

Token 234: ' des' (ID: 731)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3036351501941681
    2. 'a' → logprob: -1.8036351203918457
    3. 'l' → logprob: -3.1786351203918457
    4. 'b' → logprob: -4.303635120391846
    5. ' a' → logprob: -4.428635120391846
    6. ' ' → logprob: -4.928635120391846
    7. ' des' → logprob: -5.178635120391846
    8. ' l' → logprob: -5.928635120391846
    9. 'des' → logprob: -6.303635120391846
    10. '[' → logprob: -6.428635120391846

Token 235: ' contributions' (ID: 29298)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012074905447661877
    2. ' ' → logprob: -4.637074947357178
    3. 'a' → logprob: -7.512074947357178
    4. '(' → logprob: -8.13707447052002
    5. '1' → logprob: -8.63707447052002
    6. 'b' → logprob: -8.76207447052002
    7. '[' → logprob: -8.76207447052002
    8. 'dou' → logprob: -8.76207447052002
    9. 'values' → logprob: -9.13707447052002
    10. 'val' → logprob: -9.51207447052002

Token 236: ' addition' (ID: 5856)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: 'nelles' (ID: 60254)
  Prédit: 'nelles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nelles' → logprob: -0.26250752806663513
    2. 'al' → logprob: -2.137507438659668
    3. 'ales' → logprob: -2.387507438659668
    4. 'aux' → logprob: -5.262507438659668
    5. 's' → logprob: -5.637507438659668
    6. 'n' → logprob: -5.887507438659668
    7. '+=' → logprob: -6.387507438659668
    8. '=' → logprob: -6.512507438659668
    9. 'a' → logprob: -6.637507438659668
    10. 'nées' → logprob: -6.762507438659668

Token 238: ' liées' (ID: 122433)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6777923107147217
    2. '   ' → logprob: -1.4277923107147217
    3. '<|end|>' → logprob: -2.4277923107147217
    4. '[' → logprob: -3.5527923107147217
    5. ',' → logprob: -3.5527923107147217
    6. 'for' → logprob: -3.8027923107147217
    7. ' for' → logprob: -4.052792549133301
    8. ')' → logprob: -4.177792549133301
    9. 's' → logprob: -4.677792549133301
    10. '    ' → logprob: -4.802792549133301

Token 239: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.1884524822235107
    2. '    ' → logprob: -1.6884524822235107
    3. '   ' → logprob: -1.8134524822235107
    4. ' aux' → logprob: -2.1884524822235107
    5. 'aux' → logprob: -3.0634524822235107
    6. '[' → logprob: -3.5634524822235107
    7. ' au' → logprob: -3.8134524822235107
    8. 'a' → logprob: -3.9384524822235107
    9. '  ' → logprob: -4.31345272064209
    10. 'au' → logprob: -4.31345272064209

Token 240: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9392510652542114
    2. 'a' → logprob: -1.4392510652542114
    3. '0' → logprob: -1.9392510652542114
    4. ' l' → logprob: -2.439250946044922
    5. 'b' → logprob: -2.939250946044922
    6. ' a' → logprob: -3.189250946044922
    7. ' la' → logprob: -4.314250946044922
    8. ' ' → logprob: -4.939250946044922
    9. ' b' → logprob: -5.064250946044922
    10. 'dou' → logprob: -5.564250946044922

Token 241: ' progression' (ID: 47729)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.8651957511901855
    2. ' ' → logprob: -1.7401957511901855
    3. 'b' → logprob: -2.7401957511901855
    4. 'a' → logprob: -2.7401957511901855
    5. ' doubling' → logprob: -2.7401957511901855
    6. '1' → logprob: -2.9901957511901855
    7. '0' → logprob: -3.2401957511901855
    8. 'l' → logprob: -3.3651957511901855
    9. ' doubl' → logprob: -3.9901957511901855
    10. 's' → logprob: -4.4901957511901855

Token 242: ' lin' (ID: 14432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3213027715682983
    2. ' des' → logprob: -1.5713027715682983
    3. '[' → logprob: -1.8213027715682983
    4. ' ' → logprob: -1.9463027715682983
    5. ' de' → logprob: -3.446302890777588
    6. 'des' → logprob: -3.571302890777588
    7. 's' → logprob: -3.696302890777588
    8. ' =' → logprob: -4.071302890777588
    9. '=' → logprob: -4.071302890777588
    10. '    ' → logprob: -4.071302890777588

Token 243: 'é' (ID: 377)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.436019629240036
    2. 'a' → logprob: -1.5610196590423584
    3. 'e' → logprob: -2.6860196590423584
    4. 'é' → logprob: -3.1860196590423584
    5. ' a' → logprob: -5.561019420623779
    6. ' ' → logprob: -5.686019420623779
    7. '0' → logprob: -5.936019420623779
    8. '1' → logprob: -6.186019420623779
    9. 'naire' → logprob: -6.623519420623779
    10. '+' → logprob: -6.686019420623779

Token 244: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.002292875200510025
    2. 'ale' → logprob: -6.752293109893799
    3. 'al' → logprob: -7.502293109893799
    4. 'a' → logprob: -8.25229263305664
    5. 'aires' → logprob: -9.75229263305664
    6. '   ' → logprob: -10.12729263305664
    7. ' ' → logprob: -10.50229263305664
    8. 'ire' → logprob: -10.62729263305664
    9. 'are' → logprob: -10.87729263305664
    10. 'naire' → logprob: -10.87729263305664

Token 245: ' dans' (ID: 2671)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2913641333580017
    2. ')' → logprob: -2.5413641929626465
    3. '.' → logprob: -2.6663641929626465
    4. ' ]' → logprob: -3.4163641929626465
    5. '   ' → logprob: -3.5413641929626465
    6. '<|end|>' → logprob: -4.1663641929626465
    7. '[' → logprob: -4.7913641929626465
    8. ',' → logprob: -4.9163641929626465
    9. 'for' → logprob: -6.6663641929626465
    10. 's' → logprob: -6.7913641929626465

Token 246: ' la' (ID: 557)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.9752705097198486
    2. 'l' → logprob: -1.4752705097198486
    3. 'a' → logprob: -2.2252705097198486
    4. ' l' → logprob: -2.7252705097198486
    5. ' la' → logprob: -2.7252705097198486
    6. 'la' → logprob: -3.7252705097198486
    7. 'b' → logprob: -4.2252702713012695
    8. ' the' → logprob: -4.2252702713012695
    9. ' a' → logprob: -4.3502702713012695
    10. ' le' → logprob: -4.4752702713012695

Token 247: ' construction' (ID: 9770)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.20678238570690155
    2. ' range' → logprob: -2.956782341003418
    3. '[' → logprob: -3.206782341003418
    4. 'range' → logprob: -3.456782341003418
    5. ' doubling' → logprob: -3.581782341003418
    6. 'for' → logprob: -4.081782341003418
    7. ' for' → logprob: -5.331782341003418
    8. ' doubl' → logprob: -6.081782341003418
    9. ' sequence' → logprob: -6.331782341003418
    10. ' code' → logprob: -7.206782341003418

Token 248: ' du' (ID: 1462)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.801000714302063
    2. ')' → logprob: -1.676000714302063
    3. '   ' → logprob: -2.1760005950927734
    4. ' ]' → logprob: -2.3010005950927734
    5. ' de' → logprob: -3.4260005950927734
    6. '[' → logprob: -3.4260005950927734
    7. ' of' → logprob: -4.051000595092773
    8. ' des' → logprob: -4.051000595092773
    9. '[]' → logprob: -4.801000595092773
    10. ' )' → logprob: -5.301000595092773

Token 249: ' nombre' (ID: 9733)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0754682794213295
    2. ' doubling' → logprob: -2.7004683017730713
    3. ' doubl' → logprob: -5.825468063354492
    4. 's' → logprob: -7.575468063354492
    5. 'a' → logprob: -8.200468063354492
    6. '[' → logprob: -8.325468063354492
    7. 'd' → logprob: -8.700468063354492
    8. ' dou' → logprob: -8.825468063354492
    9. 'result' → logprob: -8.950468063354492
    10. 'double' → logprob: -8.950468063354492

Token 250: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4070298671722412
    2. ' ' → logprob: -1.4070298671722412
    3. 'dou' → logprob: -2.907029867172241
    4. '[' → logprob: -4.65703010559082
    5. ' doubling' → logprob: -5.65703010559082
    6. '	d' → logprob: -5.65703010559082
    7. ')' → logprob: -5.78203010559082
    8. '	' → logprob: -5.90703010559082
    9. '    ' → logprob: -6.53203010559082
    10. 'd' → logprob: -6.65703010559082

Token 252: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0011481947731226683
    2. '   ' → logprob: -6.876148223876953
    3. 'd' → logprob: -9.626148223876953
    4. ' doubling' → logprob: -10.626148223876953
    5. '	d' → logprob: -12.126148223876953
    6. 'for' → logprob: -12.376148223876953
    7. 'def' → logprob: -12.751148223876953
    8. '0' → logprob: -13.001148223876953
    9. '[' → logprob: -13.251148223876953
    10. ' ' → logprob: -13.251148223876953

Token 253: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004610551695805043
    2. 'const' → logprob: -7.750461101531982
    3. 'ine' → logprob: -12.375460624694824
    4. 'lin' → logprob: -12.500460624694824
    5. 'linear' → logprob: -12.750460624694824
    6. 'ligne' → logprob: -12.750460624694824
    7. 'l' → logprob: -13.125460624694824
    8. ' line' → logprob: -13.125460624694824
    9. ' =' → logprob: -13.875460624694824
    10. '[' → logprob: -13.875460624694824

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2257886826992035
    2. '=' → logprob: -1.6007887125015259
    3. '[' → logprob: -7.975788593292236
    4. ' ' → logprob: -11.350789070129395
    5. ']' → logprob: -11.475789070129395
    6. '=[' → logprob: -12.100789070129395
    7. '   ' → logprob: -13.100789070129395
    8. ' =[' → logprob: -13.975789070129395
    9. ']=' → logprob: -14.225789070129395
    10. ')' → logprob: -15.225789070129395

Token 255: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17975705862045288
    2. ' [' → logprob: -1.8047571182250977
    3. ' ' → logprob: -11.429757118225098
    4. '   ' → logprob: -14.429757118225098
    5. '([' → logprob: -14.679757118225098
    6. '  ' → logprob: -15.429757118225098
    7. '0' → logprob: -16.05475616455078
    8. ' ' → logprob: -16.17975616455078
    9. '[-' → logprob: -17.17975616455078
    10. '    ' → logprob: -18.05475616455078

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029708960209973156
    2. ' ' → logprob: -8.125297546386719
    3. '[' → logprob: -14.000297546386719
    4. ' [' → logprob: -17.12529754638672
    5. '
' → logprob: -17.37529754638672
    6. '  ' → logprob: -17.37529754638672
    7. '(' → logprob: -17.56279754638672
    8. 'int' → logprob: -17.81279754638672
    9. '   ' → logprob: -17.81279754638672
    10. '1' → logprob: -17.93779754638672

Token 257: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014189710840582848
    2. 'for' → logprob: -4.264189720153809
    3. ' ' → logprob: -11.264189720153809
    4. '	for' → logprob: -11.764189720153809
    5. ']' → logprob: -12.264189720153809
    6. '[' → logprob: -14.639189720153809
    7. ')' → logprob: -15.514189720153809
    8. ' ' → logprob: -16.264188766479492
    9. ']*' → logprob: -16.514188766479492
    10. '   ' → logprob: -16.764188766479492

Token 258: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02256493642926216
    2. ' i' → logprob: -3.8975648880004883
    3. 'range' → logprob: -6.397564888000488
    4. ' range' → logprob: -8.147564888000488
    5. '_' → logprob: -10.397564888000488
    6. '(i' → logprob: -10.897564888000488
    7. '_i' → logprob: -12.522564888000488
    8. 'in' → logprob: -12.897564888000488
    9. 'int' → logprob: -12.897564888000488
    10. '(range' → logprob: -13.147564888000488

Token 259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11339262127876282
    2. 'in' → logprob: -2.2383925914764404
    3. '(' → logprob: -7.6133928298950195
    4. 'range' → logprob: -9.73839282989502
    5. '(range' → logprob: -12.11339282989502
    6. ' range' → logprob: -12.61339282989502
    7. ' (' → logprob: -12.98839282989502
    8. 'import' → logprob: -13.23839282989502
    9. ' ' → logprob: -13.86339282989502
    10. '(in' → logprob: -14.36339282989502

Token 260: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009758567437529564
    2. ' range' → logprob: -4.634758472442627
    3. '(range' → logprob: -13.134758949279785
    4. '(' → logprob: -14.634758949279785
    5. '	range' → logprob: -16.63475799560547
    6. '[' → logprob: -16.88475799560547
    7. ' ' → logprob: -17.13475799560547
    8. '0' → logprob: -18.38475799560547
    9. '   ' → logprob: -19.13475799560547
    10. '```' → logprob: -19.25975799560547

Token 261: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.034592388459714e-06
    2. 'range' → logprob: -12.375005722045898
    3. '0' → logprob: -13.750005722045898
    4. '60' → logprob: -14.750005722045898
    5. '(range' → logprob: -15.375005722045898
    6. ' (' → logprob: -16.8750057220459
    7. ' range' → logprob: -17.1250057220459
    8. ' ' → logprob: -17.5000057220459
    9. ',' → logprob: -18.1250057220459
    10. 'def' → logprob: -18.5000057220459

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003613497130572796
    2. '60' → logprob: -5.628613471984863
    3. ' ' → logprob: -12.128613471984863
    4. 'range' → logprob: -12.378613471984863
    5. ',' → logprob: -13.378613471984863
    6. '(' → logprob: -14.253613471984863
    7. '   ' → logprob: -14.378613471984863
    8. '1' → logprob: -14.503613471984863
    9. '61' → logprob: -15.378613471984863
    10. '  ' → logprob: -17.25361442565918

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09257043153047562
    2. '60' → logprob: -2.4675705432891846
    3. '(' → logprob: -6.5925703048706055
    4. 'range' → logprob: -6.9675703048706055
    5. ' ,' → logprob: -7.5925703048706055
    6. '   ' → logprob: -8.092570304870605
    7. ' ' → logprob: -8.217570304870605
    8. '0' → logprob: -9.092570304870605
    9. '1' → logprob: -10.217570304870605
    10. ' range' → logprob: -10.592570304870605

Token 264: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.014164801687002182
    2. ' ' → logprob: -4.264164924621582
    3. '   ' → logprob: -14.139164924621582
    4. '  ' → logprob: -16.014163970947266
    5. 'def' → logprob: -16.389163970947266
    6. '59' → logprob: -17.014163970947266
    7. '6' → logprob: -17.076663970947266
    8. '0' → logprob: -17.076663970947266
    9. '61' → logprob: -17.201663970947266
    10. '30' → logprob: -17.576663970947266

Token 265: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -3.774276774493046e-05
    2. ' ' → logprob: -10.250038146972656
    3. '   ' → logprob: -14.250038146972656
    4. '61' → logprob: -14.375038146972656
    5. '64' → logprob: -15.500038146972656
    6. '59' → logprob: -16.000038146972656
    7. '0' → logprob: -16.000038146972656
    8. '30' → logprob: -16.875038146972656
    9. ',' → logprob: -17.000038146972656
    10. '  ' → logprob: -17.125038146972656

Token 266: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.739826181321405e-05
    2. ']' → logprob: -10.75004768371582
    3. ')]
' → logprob: -11.00004768371582
    4. ')' → logprob: -12.00004768371582
    5. '   ' → logprob: -13.87504768371582
    6. '])' → logprob: -14.62504768371582
    7. ' )' → logprob: -14.62504768371582
    8. ')]
' → logprob: -15.50004768371582
    9. '])]' → logprob: -15.50004768371582
    10. ' ]' → logprob: -15.75004768371582

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09894250333309174
    2. ')' → logprob: -3.723942518234253
    3. '<|end|>' → logprob: -4.223942279815674
    4. ' ' → logprob: -4.348942279815674
    5. '    
' → logprob: -4.598942279815674
    6. ':' → logprob: -4.848942279815674
    7. ' 
' → logprob: -5.223942279815674
    8. '=' → logprob: -5.973942279815674
    9. '    ' → logprob: -6.348942279815674
    10. '_' → logprob: -6.473942279815674

Token 268: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.746960461139679
    2. '   ' → logprob: -0.871960461139679
    3. ')' → logprob: -3.996960401535034
    4. ' 
' → logprob: -4.121960639953613
    5. '    
' → logprob: -4.871960639953613
    6. ' for' → logprob: -4.996960639953613
    7. '[' → logprob: -4.996960639953613
    8. ':' → logprob: -5.246960639953613
    9. 'for' → logprob: -5.371960639953613
    10. ',' → logprob: -5.371960639953613

Token 269: ' On' (ID: 2160)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.10906386375427246
    2. 'for' → logprob: -2.3590638637542725
    3. ' for' → logprob: -5.609064102172852
    4. '   ' → logprob: -5.734064102172852
    5. 'd' → logprob: -6.984064102172852
    6. ' doubling' → logprob: -7.609064102172852
    7. 'i' → logprob: -9.984064102172852
    8. ' ' → logprob: -9.984064102172852
    9. 'line' → logprob: -10.046564102172852
    10. 'a' → logprob: -10.296564102172852

Token 270: ' initialise' (ID: 145250)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.026917725801467896
    2. ' doubling' → logprob: -4.651917934417725
    3. 'd' → logprob: -4.776917934417725
    4. '[' → logprob: -5.276917934417725
    5. '=' → logprob: -7.026917934417725
    6. ' =' → logprob: -7.151917934417725
    7. ' continue' → logprob: -8.401917457580566
    8. '#' → logprob: -8.526917457580566
    9. 'continue' → logprob: -8.901917457580566
    10. 'def' → logprob: -9.276917457580566

Token 271: ' le' (ID: 505)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0012713046744465828
    2. ' doubling' → logprob: -6.7512712478637695
    3. '[' → logprob: -10.50127124786377
    4. 'd' → logprob: -10.75127124786377
    5. '   ' → logprob: -11.00127124786377
    6. '	d' → logprob: -11.50127124786377
    7. 'le' → logprob: -12.12627124786377
    8. ' doubl' → logprob: -13.00127124786377
    9. '```' → logprob: -13.25127124786377
    10. '(d' → logprob: -13.50127124786377

Token 272: ' premier' (ID: 15506)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.5170915126800537
    2. '0' → logprob: -1.1420915126800537
    3. '[' → logprob: -3.0170915126800537
    4. 'prem' → logprob: -3.8920915126800537
    5. ' premier' → logprob: -5.267091751098633
    6. 'first' → logprob: -5.892091751098633
    7. ' ' → logprob: -6.267091751098633
    8. 'd' → logprob: -6.392091751098633
    9. 'line' → logprob: -7.267091751098633
    10. '1' → logprob: -7.642091751098633

Token 273: ' élément' (ID: 99627)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -1.0971606969833374
    2. ' élément' → logprob: -1.5971606969833374
    3. 'élé' → logprob: -1.9721606969833374
    4. '[' → logprob: -2.722160816192627
    5. '_' → logprob: -2.722160816192627
    6. 'dou' → logprob: -3.097160816192627
    7. ' ' → logprob: -3.347160816192627
    8. 'line' → logprob: -3.597160816192627
    9. ']' → logprob: -3.847160816192627
    10. ' element' → logprob: -4.097160816192627

Token 274: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5637843012809753
    2. '(' → logprob: -1.4387843608856201
    3. 'dou' → logprob: -1.9387843608856201
    4. '(d' → logprob: -3.68878436088562
    5. ' (' → logprob: -4.688784122467041
    6. 'd' → logprob: -5.563784122467041
    7. ' =' → logprob: -5.563784122467041
    8. '=' → logprob: -6.063784122467041
    9. '<|end|>' → logprob: -6.563784122467041
    10. '()' → logprob: -7.313784122467041

Token 275: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7180455327033997
    2. 'a' → logprob: -1.0930454730987549
    3. 'b' → logprob: -2.093045473098755
    4. ' l' → logprob: -4.343045711517334
    5. '1' → logprob: -4.593045711517334
    6. 'n' → logprob: -4.718045711517334
    7. '0' → logprob: -4.718045711517334
    8. ' a' → logprob: -4.843045711517334
    9. ' b' → logprob: -5.968045711517334
    10. ' n' → logprob: -7.718045711517334

Token 276: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4414716064929962
    2. 'l' → logprob: -1.4414715766906738
    3. 'b' → logprob: -2.566471576690674
    4. '1' → logprob: -3.566471576690674
    5. '0' → logprob: -4.941471576690674
    6. 'A' → logprob: -6.566471576690674
    7. '(a' → logprob: -6.816471576690674
    8. ' a' → logprob: -7.066471576690674
    9. 'n' → logprob: -7.066471576690674
    10. 'M' → logprob: -7.066471576690674

Token 277: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7214949131011963
    2. '<|end|>' → logprob: -0.9714949131011963
    3. '.' → logprob: -2.2214949131011963
    4. ')' → logprob: -4.721494674682617
    5. '<|end|>' → logprob: -5.096494674682617
    6. '
' → logprob: -5.471494674682617
    7. '    
' → logprob: -5.721494674682617
    8. '  
' → logprob: -7.346494674682617
    9. ',' → logprob: -7.346494674682617
    10. '   
' → logprob: -7.596494674682617

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04467054829001427
    2. '    
' → logprob: -3.794670581817627
    3. '\n' → logprob: -5.544670581817627
    4. ' 
' → logprob: -5.794670581817627
    5. '<|end|>' → logprob: -5.794670581817627
    6. ' ' → logprob: -6.044670581817627
    7. '\' → logprob: -6.544670581817627
    8. ')' → logprob: -6.669670581817627
    9. '   
' → logprob: -6.669670581817627
    10. '  ' → logprob: -7.044670581817627

Token 279: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.6454064846038818
    2. '   ' → logprob: -0.7704064846038818
    3. '    
' → logprob: -5.020406723022461
    4. '	d' → logprob: -5.895406723022461
    5. ' doubling' → logprob: -6.270406723022461
    6. '\t' → logprob: -8.770406723022461
    7. '   
' → logprob: -9.020406723022461
    8. 'd' → logprob: -9.145406723022461
    9. '  ' → logprob: -9.270406723022461
    10. ' 
' → logprob: -9.270406723022461

Token 280: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0029023548122495413
    2. '[' → logprob: -6.252902507781982
    3. 'const' → logprob: -7.502902507781982
    4. '[line' → logprob: -8.127902030944824
    5. '_line' → logprob: -9.877902030944824
    6. '[]' → logprob: -11.377902030944824
    7. 'ligne' → logprob: -11.377902030944824
    8. ' line' → logprob: -11.502902030944824
    9. '_' → logprob: -11.877902030944824
    10. ']' → logprob: -12.252902030944824

Token 281: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1398757123970427e-05
    2. '<|end|>' → logprob: -12.625011444091797
    3. ' =' → logprob: -12.750011444091797
    4. '=' → logprob: -13.125011444091797
    5. ' [' → logprob: -13.625011444091797
    6. '   ' → logprob: -14.500011444091797
    7. '<|end|>' → logprob: -15.750011444091797
    8. ')' → logprob: -15.875011444091797
    9. ']' → logprob: -15.875011444091797
    10. '[
' → logprob: -16.000011444091797

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. ']' → logprob: -15.000001907348633
    4. '[' → logprob: -17.250001907348633
    5. '=' → logprob: -18.750001907348633
    6. '#' → logprob: -19.375001907348633
    7. ']=' → logprob: -19.500001907348633
    8. '1' → logprob: -19.750001907348633
    9. '<|end|>' → logprob: -19.875001907348633
    10. ')' → logprob: -20.000001907348633

Token 283: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015586259542033076
    2. ' ]' → logprob: -8.875155448913574
    3. ']=' → logprob: -11.125155448913574
    4. '=' → logprob: -14.000155448913574
    5. '   ' → logprob: -15.875155448913574
    6. ')' → logprob: -16.00015640258789
    7. ']
' → logprob: -16.50015640258789
    8. ' ' → logprob: -16.87515640258789
    9. '],' → logprob: -17.62515640258789
    10. ',' → logprob: -17.87515640258789

Token 284: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246407508850098
    2. ' =' → logprob: -3.7732462882995605
    3. '=

' → logprob: -15.148246765136719
    4. '=
' → logprob: -15.398246765136719
    5. ')' → logprob: -15.648246765136719
    6. ',' → logprob: -15.773246765136719
    7. ' ' → logprob: -16.39824676513672
    8. ' =
' → logprob: -16.52324676513672
    9. ']' → logprob: -17.14824676513672
    10. ')=' → logprob: -17.77324676513672

Token 285: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007038947660475969
    2. 'l' → logprob: -5.7570390701293945
    3. 'b' → logprob: -6.3820390701293945
    4. ' ' → logprob: -6.5070390701293945
    5. 'a' → logprob: -7.7570390701293945
    6. ' l' → logprob: -8.882039070129395
    7. ' b' → logprob: -10.257039070129395
    8. '1' → logprob: -10.882039070129395
    9. 'B' → logprob: -11.257039070129395
    10. 'n' → logprob: -11.882039070129395

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.3226136767771095e-05
    2. ' ' → logprob: -10.625042915344238
    3. 'a' → logprob: -11.750042915344238
    4. 'b' → logprob: -12.250042915344238
    5. 'l' → logprob: -13.125042915344238
    6. 'B' → logprob: -13.625042915344238
    7. '(' → logprob: -13.875042915344238
    8. '1' → logprob: -14.750042915344238
    9. 'A' → logprob: -14.750042915344238
    10. '(a' → logprob: -15.937542915344238

Token 287: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4144870936870575
    2. ' ' → logprob: -2.16448712348938
    3. ' 
' → logprob: -2.41448712348938
    4. '    
' → logprob: -3.78948712348938
    5. '<|end|>' → logprob: -3.78948712348938
    6. '
' → logprob: -4.164486885070801
    7. '\t' → logprob: -4.289486885070801
    8. '\n' → logprob: -4.789486885070801
    9. ')' → logprob: -4.914486885070801
    10. ',' → logprob: -4.914486885070801

Token 289: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37451064586639404
    2. ' for' → logprob: -1.374510645866394
    3. '   ' → logprob: -2.8745107650756836
    4. '	for' → logprob: -6.124510765075684
    5. 'i' → logprob: -8.124510765075684
    6. ' ' → logprob: -8.249510765075684
    7. '\t' → logprob: -10.249510765075684
    8. ' i' → logprob: -10.499510765075684
    9. ')' → logprob: -10.749510765075684
    10. '    
' → logprob: -10.874510765075684

Token 290: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005344517063349485
    2. ' for' → logprob: -5.380344390869141
    3. 'i' → logprob: -7.255344390869141
    4. '   ' → logprob: -11.50534439086914
    5. ' i' → logprob: -12.13034439086914
    6. 'range' → logprob: -14.75534439086914
    7. 'from' → logprob: -15.00534439086914
    8. 'a' → logprob: -15.00534439086914
    9. 'j' → logprob: -15.63034439086914
    10. ' ' → logprob: -15.88034439086914

Token 291: 'cle' (ID: 3170)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4166087806224823
    2. '   ' → logprob: -1.1666088104248047
    3. 'n' → logprob: -4.291608810424805
    4. 'j' → logprob: -5.291608810424805
    5. 't' → logprob: -6.166608810424805
    6. 'for' → logprob: -6.166608810424805
    7. 'i' → logprob: -6.416608810424805
    8. 'c' → logprob: -6.916608810424805
    9. ' for' → logprob: -7.166608810424805
    10. 'k' → logprob: -7.166608810424805

Token 292: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009842737577855587
    2. 'for' → logprob: -5.259842872619629
    3. '   ' → logprob: -5.634842872619629
    4. ' i' → logprob: -7.009842872619629
    5. '	for' → logprob: -9.884842872619629
    6. ' ' → logprob: -10.509842872619629
    7. 'i' → logprob: -11.259842872619629
    8. ':' → logprob: -11.384842872619629
    9. '    
' → logprob: -11.884842872619629
    10. '
' → logprob: -12.884842872619629

Token 293: ' allant' (ID: 122150)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002576251979917288
    2. 'i' → logprob: -6.2525763511657715
    3. ' ' → logprob: -8.002575874328613
    4. ' for' → logprob: -9.127575874328613
    5. ' _' → logprob: -9.252575874328613
    6. ' j' → logprob: -11.002575874328613
    7. '_' → logprob: -11.127575874328613
    8. ' in' → logprob: -11.252575874328613
    9. ' ' → logprob: -11.377575874328613
    10. '	i' → logprob: -11.877575874328613

Token 294: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08009418100118637
    2. 'i' → logprob: -2.5800940990448
    3. '_' → logprob: -7.580094337463379
    4. ' ' → logprob: -8.080094337463379
    5. ' j' → logprob: -9.455094337463379
    6. '	i' → logprob: -9.830094337463379
    7. ' for' → logprob: -9.955094337463379
    8. ' range' → logprob: -10.830094337463379
    9. ' _' → logprob: -10.830094337463379
    10. ' t' → logprob: -11.330094337463379

Token 295: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7836002111434937
    2. '0' → logprob: -0.9086002111434937
    3. ' ' → logprob: -2.533600330352783
    4. 'i' → logprob: -3.158600330352783
    5. ' i' → logprob: -4.033600330352783
    6. 'range' → logprob: -9.033599853515625
    7. '_' → logprob: -9.283599853515625
    8. ' range' → logprob: -9.408599853515625
    9. 'x' → logprob: -10.158599853515625
    10. 'k' → logprob: -10.658599853515625

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009187744930386543
    2. '0' → logprob: -4.884187698364258
    3. 'i' → logprob: -6.634187698364258
    4. ' ' → logprob: -8.384187698364258
    5. ' i' → logprob: -10.384187698364258
    6. 'range' → logprob: -13.634187698364258
    7. 'j' → logprob: -14.009187698364258
    8. '2' → logprob: -14.571687698364258
    9. 'a' → logprob: -14.884187698364258
    10. 'l' → logprob: -15.071687698364258

Token 297: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.20467692613601685
    2. ' à' → logprob: -2.329676866531372
    3. 'to' → logprob: -2.704676866531372
    4. ' ' → logprob: -4.329677104949951
    5. ',' → logprob: -5.954677104949951
    6. '<|end|>' → logprob: -6.579677104949951
    7. 'à' → logprob: -6.704677104949951
    8. ' jusqu' → logprob: -6.704677104949951
    9. ' jusque' → logprob: -8.079676628112793
    10. ' up' → logprob: -8.204676628112793

Token 298: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.32365021109580994
    2. ' ' → logprob: -1.3236502408981323
    3. '59' → logprob: -4.573650360107422
    4. '61' → logprob: -11.948650360107422
    5. '56' → logprob: -12.698650360107422
    6. '58' → logprob: -13.448650360107422
    7. '57' → logprob: -14.073650360107422
    8. '6' → logprob: -14.323650360107422
    9. '55' → logprob: -14.698650360107422
    10. '
' → logprob: -15.511150360107422

Token 299: '59' (ID: 4621)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.16032050549983978
    2. '59' → logprob: -1.910320520401001
    3. ' ' → logprob: -9.535320281982422
    4. '58' → logprob: -11.785320281982422
    5. '1' → logprob: -12.410320281982422
    6. '6' → logprob: -12.785320281982422
    7. '56' → logprob: -12.785320281982422
    8. '57' → logprob: -12.910320281982422
    9. '61' → logprob: -13.660320281982422
    10. '55' → logprob: -14.535320281982422

Token 300: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013762176968157291
    2. ':
' → logprob: -5.0137619972229
    3. ' for' → logprob: -5.5137619972229
    4. 'for' → logprob: -6.5137619972229
    5. ' :' → logprob: -7.1387619972229
    6. ',' → logprob: -8.013762474060059
    7. '   ' → logprob: -9.013762474060059
    8. ' :
' → logprob: -9.138762474060059
    9. '(' → logprob: -10.263762474060059
    10. '.' → logprob: -10.513762474060059

Token 301: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8346253037452698
    2. '   ' → logprob: -1.084625244140625
    3. 'for' → logprob: -1.959625244140625
    4. ':' → logprob: -2.459625244140625
    5. '	for' → logprob: -7.459625244140625
    6. ':
' → logprob: -7.834625244140625
    7. '(' → logprob: -8.459625244140625
    8. ',' → logprob: -9.334625244140625
    9. '
' → logprob: -9.709625244140625
    10. 'in' → logprob: -10.334625244140625

Token 302: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12256372720003128
    2. '    ' → logprob: -2.3725638389587402
    3. 'for' → logprob: -4.62256383895874
    4. '   ' → logprob: -4.87256383895874
    5. ' i' → logprob: -5.74756383895874
    6. ' ' → logprob: -7.74756383895874
    7. '       ' → logprob: -8.247563362121582
    8. 'i' → logprob: -8.997563362121582
    9. '1' → logprob: -9.247563362121582
    10. ':' → logprob: -9.247563362121582

Token 303: ''est' (ID: 6616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2513590455055237
    2. 'on' → logprob: -2.501358985900879
    3. ' for' → logprob: -2.876358985900879
    4. 'ar' → logprob: -3.501358985900879
    5. 'range' → logprob: -4.001358985900879
    6. 'e' → logprob: -5.001358985900879
    7. 'ont' → logprob: -5.126358985900879
    8. 'omme' → logprob: -5.626358985900879
    9. '#' → logprob: -5.876358985900879
    10. '   ' → logprob: -6.126358985900879

Token 304: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -1.3218086957931519
    2. 'à' → logprob: -1.5718086957931519
    3. ' à' → logprob: -1.6968086957931519
    4. '   ' → logprob: -1.9468086957931519
    5. ' pour' → logprob: -3.0718088150024414
    6. ':' → logprob: -3.1968088150024414
    7. ' ' → logprob: -3.1968088150024414
    8. '#' → logprob: -4.071808815002441
    9. 'for' → logprob: -4.446808815002441
    10. 'pour' → logprob: -4.696808815002441

Token 305: '-dire' (ID: 76064)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759792923927307
    2. 'à' → logprob: -1.200979232788086
    3. ' range' → logprob: -2.700979232788086
    4. 'dire' → logprob: -3.450979232788086
    5. 'part' → logprob: -4.075979232788086
    6. '#' → logprob: -5.200979232788086
    7. 'a' → logprob: -5.575979232788086
    8. '-à' → logprob: -6.075979232788086
    9. '   ' → logprob: -6.325979232788086
    10. '1' → logprob: -6.950979232788086

Token 306: ' pour' (ID: 1930)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7525715827941895
    2. ' ' → logprob: -0.8775715827941895
    3. 'range' → logprob: -3.0025715827941895
    4. '1' → logprob: -3.3775715827941895
    5. '60' → logprob: -3.6275715827941895
    6. ' i' → logprob: -7.0025715827941895
    7. '   ' → logprob: -7.2525715827941895
    8. ' in' → logprob: -7.2525715827941895
    9. '61' → logprob: -9.502571105957031
    10. '  ' → logprob: -9.877571105957031

Token 307: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005057517904788256
    2. 'i' → logprob: -5.380057334899902
    3. ' range' → logprob: -8.005057334899902
    4. ' ' → logprob: -9.755057334899902
    5. ' _' → logprob: -11.630057334899902
    6. ' j' → logprob: -11.630057334899902
    7. 'range' → logprob: -12.005057334899902
    8. '_' → logprob: -12.130057334899902
    9. '	i' → logprob: -12.505057334899902
    10. ' k' → logprob: -13.005057334899902

Token 308: ' puissance' (ID: 63494)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06201406568288803
    2. 'i' → logprob: -2.812014102935791
    3. ' ' → logprob: -11.062013626098633
    4. '	i' → logprob: -11.687013626098633
    5. ' k' → logprob: -12.062013626098633
    6. ' j' → logprob: -12.562013626098633
    7. '   ' → logprob: -13.187013626098633
    8. '_' → logprob: -13.437013626098633
    9. 'k' → logprob: -13.687013626098633
    10. ' _' → logprob: -13.937013626098633

Token 309: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.26882404088974
    2. ' ' → logprob: -1.7688241004943848
    3. ' of' → logprob: -3.6438241004943848
    4. '(' → logprob: -4.393824100494385
    5. ' i' → logprob: -4.768824100494385
    6. '   ' → logprob: -5.268824100494385
    7. ' d' → logprob: -6.018824100494385
    8. ' (' → logprob: -6.268824100494385
    9. '_' → logprob: -6.393824100494385
    10. 'de' → logprob: -6.518824100494385

Token 310: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10025616735219955
    2. ' ' → logprob: -2.4752562046051025
    3. ' deux' → logprob: -5.225255966186523
    4. ' two' → logprob: -5.475255966186523
    5. '1' → logprob: -7.475255966186523
    6. 'de' → logprob: -7.850255966186523
    7. ' i' → logprob: -8.225255966186523
    8. ' range' → logprob: -8.600255966186523
    9. 'i' → logprob: -8.850255966186523
    10. 'range' → logprob: -10.100255966186523

Token 311: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03430560976266861
    2. 'de' → logprob: -3.4093055725097656
    3. ' ' → logprob: -7.534305572509766
    4. '1' → logprob: -9.284305572509766
    5. ' deux' → logprob: -10.909305572509766
    6. 'two' → logprob: -12.534305572509766
    7. ' two' → logprob: -12.909305572509766
    8. 'i' → logprob: -13.159305572509766
    9. 'dou' → logprob: -13.159305572509766
    10. 'range' → logprob: -14.409305572509766

Token 312: ' jusqu' (ID: 21961)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15544867515563965
    2. 'in' → logprob: -2.6554486751556396
    3. ' in' → logprob: -3.6554486751556396
    4. '   ' → logprob: -4.530448913574219
    5. 'for' → logprob: -4.655448913574219
    6. ' for' → logprob: -4.655448913574219
    7. ' :' → logprob: -4.780448913574219
    8. ',' → logprob: -5.780448913574219
    9. '(' → logprob: -6.030448913574219
    10. 'range' → logprob: -6.780448913574219

Token 313: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.03385050222277641
    2. ' à' → logprob: -4.28385066986084
    3. '’à' → logprob: -4.28385066986084
    4. 'à' → logprob: -5.90885066986084
    5. '   ' → logprob: -7.28385066986084
    6. 'a' → logprob: -7.28385066986084
    7. '(' → logprob: -7.40885066986084
    8. ''' → logprob: -8.40885066986084
    9. ''au' → logprob: -8.40885066986084
    10. ''en' → logprob: -8.78385066986084

Token 314: ' ' (ID: 220)
  Prédit: '59'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -0.6586597561836243
    2. '60' → logprob: -0.9086597561836243
    3. ' ' → logprob: -2.5336596965789795
    4. '1' → logprob: -11.783659934997559
    5. '   ' → logprob: -12.283659934997559
    6. '58' → logprob: -13.033659934997559
    7. '6' → logprob: -13.783659934997559
    8. '  ' → logprob: -14.158659934997559
    9. '54' → logprob: -14.408659934997559
    10. '56' → logprob: -14.471159934997559

Token 315: '2' (ID: 17)
  Prédit: '59'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '59' → logprob: -0.012715296819806099
    2. '60' → logprob: -4.3877153396606445
    3. ' ' → logprob: -8.512715339660645
    4. '58' → logprob: -13.137715339660645
    5. '55' → logprob: -14.512715339660645
    6. '50' → logprob: -14.887715339660645
    7. '56' → logprob: -15.262715339660645
    8. '57' → logprob: -15.387715339660645
    9. '=' → logprob: -15.637715339660645
    10. '   ' → logprob: -15.887715339660645

Token 316: '^' (ID: 61)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6851941347122192
    2. ':' → logprob: -1.6851941347122192
    3. ',' → logprob: -2.0601940155029297
    4. '1' → logprob: -3.1851940155029297
    5. ' ' → logprob: -3.3101940155029297
    6. '**' → logprob: -4.18519401550293
    7. ' à' → logprob: -4.81019401550293
    8. '60' → logprob: -4.81019401550293
    9. ' to' → logprob: -4.93519401550293
    10. '4' → logprob: -5.18519401550293

Token 317: '59' (ID: 4621)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.4988754987716675
    2. '59' → logprob: -1.1238754987716675
    3. ' ' → logprob: -3.123875617980957
    4. '0' → logprob: -3.873875617980957
    5. '1' → logprob: -6.748875617980957
    6. '6' → logprob: -6.873875617980957
    7. '5' → logprob: -8.373875617980957
    8. '56' → logprob: -8.623875617980957
    9. '(' → logprob: -9.748875617980957
    10. 'i' → logprob: -9.998875617980957

Token 318: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016483211889863014
    2. '   ' → logprob: -4.891483306884766
    3. ':
' → logprob: -5.016483306884766
    4. ' for' → logprob: -6.516483306884766
    5. ',' → logprob: -8.016483306884766
    6. 'for' → logprob: -8.516483306884766
    7. ' :' → logprob: -8.891483306884766
    8. ' :
' → logprob: -10.891483306884766
    9. ' in' → logprob: -11.891483306884766
    10. '.' → logprob: -11.891483306884766

Token 319: ' utilisée' (ID: 106548)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.821536123752594
    2. ' :' → logprob: -1.6965360641479492
    3. ':' → logprob: -2.321536064147949
    4. '    ' → logprob: -2.696536064147949
    5. ' 
' → logprob: -2.946536064147949
    6. ' i' → logprob: -3.321536064147949
    7. '\t' → logprob: -3.321536064147949
    8. '     
' → logprob: -3.446536064147949
    9. '    
' → logprob: -4.196536064147949
    10. ' ' → logprob: -5.071536064147949

Token 320: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.503568708896637
    2. '   ' → logprob: -1.2535686492919922
    3. 'for' → logprob: -2.503568649291992
    4. ':' → logprob: -4.628568649291992
    5. ' in' → logprob: -5.253568649291992
    6. 'in' → logprob: -5.378568649291992
    7. ' pour' → logprob: -6.253568649291992
    8. '    ' → logprob: -6.253568649291992
    9. ' to' → logprob: -6.628568649291992
    10. '	for' → logprob: -7.253568649291992

Token 321: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7480967044830322
    2. ' range' → logprob: -0.8730967044830322
    3. 'i' → logprob: -2.8730967044830322
    4. 'range' → logprob: -3.2480967044830322
    5. ' ' → logprob: -4.373096466064453
    6. '   ' → logprob: -7.873096466064453
    7. ' in' → logprob: -7.873096466064453
    8. '1' → logprob: -9.748096466064453
    9. '    ' → logprob: -9.748096466064453
    10. '  ' → logprob: -10.248096466064453

Token 322: ' technique' (ID: 16410)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23191893100738525
    2. ' range' → logprob: -2.2319188117980957
    3. ' ' → logprob: -3.1069188117980957
    4. 'range' → logprob: -3.2319188117980957
    5. ' i' → logprob: -4.731918811798096
    6. 'i' → logprob: -5.231918811798096
    7. '   ' → logprob: -8.106919288635254
    8. '2' → logprob: -8.731919288635254
    9. 'n' → logprob: -8.856919288635254
    10. '  ' → logprob: -9.106919288635254

Token 323: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0375795364379883
    2. ' in' → logprob: -1.4125795364379883
    3. ' for' → logprob: -1.6625795364379883
    4. '   ' → logprob: -2.4125795364379883
    5. 'for' → logprob: -3.1625795364379883
    6. 'in' → logprob: -3.9125795364379883
    7. 'de' → logprob: -4.037579536437988
    8. ' en' → logprob: -4.412579536437988
    9. ' range' → logprob: -4.537579536437988
    10. ' of' → logprob: -4.912579536437988

Token 324: ' doubl' (ID: 127992)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.36938464641571045
    2. 'for' → logprob: -1.9943846464157104
    3. ' for' → logprob: -2.369384765625
    4. ' range' → logprob: -3.619384765625
    5. 'range' → logprob: -3.744384765625
    6. ' doubl' → logprob: -4.369384765625
    7. ' doubling' → logprob: -4.494384765625
    8. 'i' → logprob: -6.619384765625
    9. 'd' → logprob: -7.119384765625
    10. ' ' → logprob: -7.369384765625

Token 325: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.023816030472517014
    2. 'e' → logprob: -3.7738161087036133
    3. 'ier' → logprob: -9.148816108703613
    4. 'lage' → logprob: -9.273816108703613
    5. 'rage' → logprob: -9.648816108703613
    6. 'ege' → logprob: -9.898816108703613
    7. 'ange' → logprob: -10.023816108703613
    8. 'er' → logprob: -10.398816108703613
    9. 'antage' → logprob: -10.648816108703613
    10. 'âge' → logprob: -10.773816108703613

Token 326: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44138625264167786
    2. ' for' → logprob: -1.9413862228393555
    3. '   ' → logprob: -2.0663862228393555
    4. 'for' → logprob: -2.5663862228393555
    5. ':
' → logprob: -5.5663862228393555
    6. ',' → logprob: -6.4413862228393555
    7. '	for' → logprob: -6.5663862228393555
    8. ' :' → logprob: -6.9413862228393555
    9. 'in' → logprob: -7.6913862228393555
    10. '.' → logprob: -8.941386222839355

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3973371982574463
    2. ' for' → logprob: -1.2723371982574463
    3. 'for' → logprob: -3.8973371982574463
    4. '
' → logprob: -4.522336959838867
    5. '	for' → logprob: -5.147336959838867
    6. ' 
' → logprob: -5.647336959838867
    7. '    
' → logprob: -5.772336959838867
    8. ':' → logprob: -6.272336959838867
    9. '  
' → logprob: -7.397336959838867
    10. '```' → logprob: -7.397336959838867

Token 328: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45321929454803467
    2. '   ' → logprob: -1.2032192945480347
    3. 'for' (adapté à ' for') → logprob: -2.828219413757324
    4. '	for' → logprob: -5.828219413757324
    5. '
' → logprob: -6.828219413757324
    6. ' 
' → logprob: -7.703219413757324
    7. '    
' → logprob: -8.078219413757324
    8. '\n' → logprob: -9.578219413757324
    9. '```' → logprob: -9.703219413757324
    10. '\t' → logprob: -10.703219413757324

Token 329: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03485018387436867
    2. 'i' → logprob: -3.4098501205444336
    3. ' j' → logprob: -7.784850120544434
    4. ' k' → logprob: -8.159850120544434
    5. ' x' → logprob: -9.034850120544434
    6. ' ' → logprob: -9.534850120544434
    7. ' d' → logprob: -9.909850120544434
    8. 'k' → logprob: -10.534850120544434
    9. 'j' → logprob: -10.722350120544434
    10. ' n' → logprob: -10.847350120544434

Token 330: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005389211233705282
    2. 'in' → logprob: -5.255389213562012
    3. ' ' → logprob: -8.880389213562012
    4. '	in' → logprob: -11.755389213562012
    5. '  ' → logprob: -12.755389213562012
    6. ' i' → logprob: -14.130389213562012
    7. 'In' → logprob: -14.380389213562012
    8. '1' → logprob: -14.505389213562012
    9. 's' → logprob: -14.630389213562012
    10. '<|end|>' → logprob: -14.880389213562012

Token 331: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0021905910689383745
    2. 'range' → logprob: -6.127190589904785
    3. ' ' → logprob: -12.502190589904785
    4. '(range' → logprob: -13.877190589904785
    5. '	range' → logprob: -14.252190589904785
    6. ' xrange' → logprob: -16.3771915435791
    7. ' in' → logprob: -17.2521915435791
    8. '1' → logprob: -18.1271915435791
    9. '  ' → logprob: -18.6271915435791
    10. '(' → logprob: -18.7521915435791

Token 332: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.226628895296017e-06
    2. '1' → logprob: -12.250007629394531
    3. ' (' → logprob: -13.125007629394531
    4. '(
' → logprob: -15.250007629394531
    5. '<|end|>' → logprob: -16.50000762939453
    6. ' ' → logprob: -16.75000762939453
    7. '  ' → logprob: -19.25000762939453
    8. '   ' → logprob: -19.87500762939453
    9. '<|end|>' → logprob: -20.25000762939453
    10. '[' → logprob: -20.50000762939453

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013310716021806002
    2. ' ' → logprob: -6.626330852508545
    3. '(' → logprob: -12.876331329345703
    4. '60' → logprob: -13.501331329345703
    5. '   ' → logprob: -14.001331329345703
    6. '
' → logprob: -16.376331329345703
    7. '

' → logprob: -16.876331329345703
    8. ',' → logprob: -17.001331329345703
    9. '  ' → logprob: -17.251331329345703
    10. ')' → logprob: -17.501331329345703

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07905932515859604
    2. ' ,' → logprob: -2.579059362411499
    3. '60' → logprob: -8.704059600830078
    4. '   ' → logprob: -13.704059600830078
    5. ' ' → logprob: -14.454059600830078
    6. '0' → logprob: -14.454059600830078
    7. '40' → logprob: -14.829059600830078
    8. '6' → logprob: -15.829059600830078
    9. ',
' → logprob: -15.829059600830078
    10. '  ' → logprob: -15.954059600830078

Token 335: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.12693451344966888
    2. ' ' → logprob: -2.12693452835083
    3. '   ' → logprob: -12.251934051513672
    4. '  ' → logprob: -14.251934051513672
    5. '6' → logprob: -14.751934051513672
    6. '61' → logprob: -15.001934051513672
    7. '    ' → logprob: -16.501934051513672
    8. ' ' → logprob: -17.126934051513672
    9. '59' → logprob: -17.439434051513672
    10. ' sixty' → logprob: -17.626934051513672

Token 336: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '6' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '59' → logprob: -19.500001907348633
    6. '61' → logprob: -19.500001907348633
    7. 'len' → logprob: -20.500001907348633
    8. 'l' → logprob: -20.625001907348633
    9. '
' → logprob: -20.875001907348633
    10. '40' → logprob: -21.125001907348633

Token 337: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31351178884506226
    2. '):
' → logprob: -1.313511848449707
    3. ' ):' → logprob: -8.938511848449707
    4. '):
' → logprob: -9.813511848449707
    5. ' ):
' → logprob: -10.188511848449707
    6. ':' → logprob: -11.438511848449707
    7. ')' → logprob: -11.688511848449707
    8. '   ' → logprob: -12.063511848449707
    9. '):

' → logprob: -13.938511848449707
    10. '():
' → logprob: -16.56351089477539

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001748246024362743
    2. '   ' → logprob: -6.501748085021973
    3. 'dou' → logprob: -8.626748085021973
    4. 'd' → logprob: -10.501748085021973
    5. ' doubling' → logprob: -11.751748085021973
    6. ':' → logprob: -11.876748085021973
    7. '      ' → logprob: -12.501748085021973
    8. '	d' → logprob: -12.501748085021973
    9. '
' → logprob: -12.626748085021973
    10. '    
' → logprob: -13.376748085021973

Token 339: ' #' (ID: 1069)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.39215055108070374
    2. '       ' → logprob: -1.2671505212783813
    3. '   ' → logprob: -3.517150640487671
    4. 'd' → logprob: -5.017150402069092
    5. ' doubling' → logprob: -5.267150402069092
    6. '	d' → logprob: -7.517150402069092
    7. ' ' → logprob: -9.64215087890625
    8. '
' → logprob: -9.64215087890625
    9. '```' → logprob: -9.64215087890625
    10. '           ' → logprob: -9.76715087890625

Token 340: ' Calcul' (ID: 57243)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0017709736712276936
    2. ' doubling' → logprob: -7.126770973205566
    3. '   ' → logprob: -7.251770973205566
    4. '       ' → logprob: -8.501770973205566
    5. '    ' → logprob: -11.251770973205566
    6. ' ' → logprob: -12.126770973205566
    7. '	d' → logprob: -12.376770973205566
    8. '  ' → logprob: -12.626770973205566
    9. 'd' → logprob: -12.626770973205566
    10. '        ' → logprob: -12.939270973205566

Token 341: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20909668505191803
    2. 'dou' → logprob: -2.459096670150757
    3. ' =' → logprob: -3.584096670150757
    4. '=' → logprob: -3.709096670150757
    5. ')' → logprob: -4.834096908569336
    6. 's' → logprob: -4.959096908569336
    7. '           ' → logprob: -4.959096908569336
    8. 'd' → logprob: -5.334096908569336
    9. ':' → logprob: -5.709096908569336
    10. '   ' → logprob: -5.709096908569336

Token 342: ' nouvelles' (ID: 37997)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.002040698891505599
    2. ' doubling' → logprob: -6.627040863037109
    3. '   ' → logprob: -7.627040863037109
    4. 'd' → logprob: -8.75204086303711
    5. '	d' → logprob: -11.25204086303711
    6. '    ' → logprob: -11.50204086303711
    7. ' ' → logprob: -11.75204086303711
    8. '       ' → logprob: -12.00204086303711
    9. '  ' → logprob: -12.50204086303711
    10. '(d' → logprob: -12.62704086303711

Token 343: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.670547366142273
    2. 'val' → logprob: -1.295547366142273
    3. 'dou' → logprob: -2.0455474853515625
    4. '_val' → logprob: -3.0455474853515625
    5. ' val' → logprob: -3.9205474853515625
    6. ' values' → logprob: -5.0455474853515625
    7. '   ' → logprob: -5.7955474853515625
    8. 'values' → logprob: -5.7955474853515625
    9. '=' → logprob: -7.0455474853515625
    10. ' doubling' → logprob: -7.2955474853515625

Token 344: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0750423669815063
    2. 'dou' → logprob: -1.2000423669815063
    3. ' =' → logprob: -1.7000423669815063
    4. '[' → logprob: -2.575042247772217
    5. '       ' → logprob: -2.825042247772217
    6. '   ' → logprob: -4.575042247772217
    7. '[i' → logprob: -4.575042247772217
    8. ']' → logprob: -5.450042247772217
    9. ')' → logprob: -5.700042247772217
    10. 'd' → logprob: -6.200042247772217

Token 345: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.014971553348004818
    2. ' doubling' → logprob: -4.264971733093262
    3. '   ' → logprob: -8.264971733093262
    4. ' ' → logprob: -8.764971733093262
    5. 'd' → logprob: -9.514971733093262
    6. 'l' → logprob: -10.264971733093262
    7. 'le' → logprob: -10.514971733093262
    8. 'la' → logprob: -10.514971733093262
    9. ' doubl' → logprob: -10.764971733093262
    10. 'the' → logprob: -10.889971733093262

Token 346: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -6.988221684878226e-06
    2. 'line' → logprob: -12.250006675720215
    3. ' const' → logprob: -14.000006675720215
    4. '   ' → logprob: -14.875006675720215
    5. 'dou' → logprob: -15.500006675720215
    6. '
' → logprob: -15.750006675720215
    7. '```' → logprob: -16.25000762939453
    8. '[' → logprob: -17.00000762939453
    9. '_const' → logprob: -17.12500762939453
    10. 'cost' → logprob: -17.12500762939453

Token 347: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00026169343618676066
    2. '[' → logprob: -9.000261306762695
    3. '   ' → logprob: -9.750261306762695
    4. '       ' → logprob: -10.250261306762695
    5. '
' → logprob: -11.500261306762695
    6. ' [' → logprob: -11.750261306762695
    7. ']' → logprob: -12.500261306762695
    8. '    
' → logprob: -12.750261306762695
    9. ' =' → logprob: -12.750261306762695
    10. '        
' → logprob: -12.750261306762695

Token 348: 'con' (ID: 542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7301847338676453
    2. '[i' → logprob: -1.10518479347229
    3. ')' → logprob: -2.60518479347229
    4. 'dou' → logprob: -2.85518479347229
    5. '       ' → logprob: -3.98018479347229
    6. '
' → logprob: -4.855184555053711
    7. ')
' → logprob: -5.355184555053711
    8. ' i' → logprob: -5.480184555053711
    9. '   ' → logprob: -5.480184555053711
    10. ')[' → logprob: -5.730184555053711

Token 349: 'tribution' (ID: 7090)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.4176732003688812
    2. '[i' → logprob: -1.5426732301712036
    3. '[' → logprob: -3.042673110961914
    4. 't' → logprob: -3.417673110961914
    5. 'stant' → logprob: -3.667673110961914
    6. 'cat' → logprob: -4.417673110961914
    7. '[j' → logprob: -5.542673110961914
    8. '[t' → logprob: -6.417673110961914
    9. '[b' → logprob: -7.542673110961914
    10. '=' → logprob: -7.792673110961914

Token 350: ' constante' (ID: 49652)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007165835704654455
    2. ')' → logprob: -6.632165908813477
    3. '[' → logprob: -6.632165908813477
    4. '   ' → logprob: -6.757165908813477
    5. '       ' → logprob: -6.757165908813477
    6. 's' → logprob: -7.132165908813477
    7. ' de' → logprob: -8.757165908813477
    8. ' i' → logprob: -8.882165908813477
    9. ' [' → logprob: -8.882165908813477
    10. 'i' → logprob: -9.132165908813477

Token 351: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.25743797421455383
    2. '   ' → logprob: -2.2574379444122314
    3. ')' → logprob: -2.5074379444122314
    4. '[' → logprob: -3.7574379444122314
    5. ' )' → logprob: -5.6324381828308105
    6. ' ' → logprob: -6.1324381828308105
    7. '*' → logprob: -6.2574381828308105
    8. ' et' → logprob: -6.3824381828308105
    9. '       ' → logprob: -6.7574381828308105
    10. ' pour' → logprob: -7.5074381828308105

Token 352: ' bloc' (ID: 51218)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.18444187939167023
    2. ' doubling' → logprob: -2.1844418048858643
    3. '2' → logprob: -3.3094418048858643
    4. 'a' → logprob: -5.434442043304443
    5. 'l' → logprob: -5.559442043304443
    6. ' l' → logprob: -6.059442043304443
    7. ' a' → logprob: -6.059442043304443
    8. ' doubl' → logprob: -6.184442043304443
    9. ' ' → logprob: -6.309442043304443
    10. 'b' → logprob: -7.684442043304443

Token 353: ')' (ID: 8)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1747534275054932
    2. ' *' → logprob: -1.5497534275054932
    3. '   ' → logprob: -2.049753427505493
    4. '*' → logprob: -2.549753427505493
    5. ')' → logprob: -2.799753427505493
    6. ' ' → logprob: -3.424753427505493
    7. ' précédent' → logprob: -3.424753427505493
    8. 'de' → logprob: -3.674753427505493
    9. ' doubl' → logprob: -4.549753189086914
    10. 's' → logprob: -4.799753189086914

Token 354: ' :
' (ID: 10039)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029260674491524696
    2. '   ' → logprob: -4.404260635375977
    3. '       ' → logprob: -4.904260635375977
    4. '[' → logprob: -5.529260635375977
    5. ' =' → logprob: -6.404260635375977
    6. ')' → logprob: -7.779260635375977
    7. '
' → logprob: -7.779260635375977
    8. ']' → logprob: -8.029260635375977
    9. '=' → logprob: -8.029260635375977
    10. ' ' → logprob: -8.029260635375977

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5922383666038513
    2. 'dou' → logprob: -1.342238426208496
    3. '   ' → logprob: -1.842238426208496
    4. ' doubling' → logprob: -4.092238426208496
    5. 'd' → logprob: -4.717238426208496
    6. '	d' → logprob: -8.092238426208496
    7. ' dou' → logprob: -8.217238426208496
    8. '           ' → logprob: -8.467238426208496
    9. ' doubl' → logprob: -8.717238426208496
    10. '    ' → logprob: -9.092238426208496

Token 356: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5240843296051025
    2. 'dou' → logprob: -1.0240843296051025
    3. '   ' → logprob: -3.1490843296051025
    4. 'd' → logprob: -5.399084091186523
    5. ' doubling' → logprob: -7.149084091186523
    6. '	d' → logprob: -8.024084091186523
    7. '           ' → logprob: -9.899084091186523
    8. ' dou' → logprob: -10.149084091186523
    9. ' ' → logprob: -10.149084091186523
    10. '    ' → logprob: -10.899084091186523

Token 357: ' pow' (ID: 9779)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.08609030395746231
    2. '       ' → logprob: -2.711090326309204
    3. ' doubling' → logprob: -4.336090087890625
    4. '   ' → logprob: -6.086090087890625
    5. 'd' → logprob: -7.836090087890625
    6. '           ' → logprob: -9.086090087890625
    7. ' ' → logprob: -10.711090087890625
    8. '	d' → logprob: -10.711090087890625
    9. ' dou' → logprob: -10.836090087890625
    10. ' doubl' → logprob: -11.523590087890625

Token 358: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06437712162733078
    2. '(d' → logprob: -3.0643770694732666
    3. 'er' → logprob: -4.314377307891846
    4. '(a' → logprob: -6.939377307891846
    5. 'dou' → logprob: -7.939377307891846
    6. '2' → logprob: -8.439376831054688
    7. '=' → logprob: -8.564376831054688
    8. 'ing' → logprob: -9.189376831054688
    9. '   ' → logprob: -9.689376831054688
    10. 'd' → logprob: -10.064376831054688

Token 359: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11489991843700409
    2. '(' → logprob: -2.9898998737335205
    3. 'a' → logprob: -2.9898998737335205
    4. '(a' → logprob: -5.3649001121521
    5. 'l' → logprob: -6.4899001121521
    6. 'L' → logprob: -7.8649001121521
    7. '10' → logprob: -8.614899635314941
    8. ' ' → logprob: -8.864899635314941
    9. '(l' → logprob: -9.114899635314941
    10. 'b' → logprob: -9.114899635314941

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3362862765789032
    2. '(' → logprob: -1.3362863063812256
    3. '(i' → logprob: -4.3362860679626465
    4. ' ,' → logprob: -5.7112860679626465
    5. '2' → logprob: -6.7112860679626465
    6. '   ' → logprob: -6.7112860679626465
    7. 'a' → logprob: -7.0862860679626465
    8. ',i' → logprob: -7.0862860679626465
    9. '       ' → logprob: -7.3362860679626465
    10. 'i' → logprob: -7.9612860679626465

Token 361: ' l' (ID: 305)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.09316174685955048
    2. '2' → logprob: -2.5931618213653564
    3. ' doubling' → logprob: -5.093161582946777
    4. 'i' → logprob: -5.843161582946777
    5. '(' → logprob: -6.343161582946777
    6. '1' → logprob: -6.468161582946777
    7. ' ' → logprob: -7.468161582946777
    8. '(i' → logprob: -8.093161582946777
    9. '   ' → logprob: -8.343161582946777
    10. 'pow' → logprob: -8.843161582946777

Token 362: '*' (ID: 9)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.9417102932929993
    2. ' *' → logprob: -1.4417102336883545
    3. ',' → logprob: -1.6917102336883545
    4. '*' → logprob: -2.3167102336883545
    5. ')' → logprob: -2.6917102336883545
    6. ' ,' → logprob: -4.441710472106934
    7. '   ' → logprob: -5.441710472106934
    8. '*l' → logprob: -6.191710472106934
    9. '*(' → logprob: -6.691710472106934
    10. ',i' → logprob: -6.941710472106934

Token 363: '2' (ID: 17)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.713182806968689
    2. '(' → logprob: -1.088182806968689
    3. 'i' → logprob: -2.4631829261779785
    4. '(i' → logprob: -2.8381829261779785
    5. '2' → logprob: -4.2131829261779785
    6. ' (' → logprob: -5.4631829261779785
    7. ' doubling' → logprob: -5.5881829261779785
    8. '(d' → logprob: -5.9631829261779785
    9. 'd' → logprob: -6.0881829261779785
    10. 'pow' → logprob: -7.7131829261779785

Token 364: '**' (ID: 410)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6367480754852295
    2. '*i' → logprob: -1.1367480754852295
    3. ')' → logprob: -2.5117480754852295
    4. '**' → logprob: -3.0117480754852295
    5. ',' → logprob: -4.511748313903809
    6. ',i' → logprob: -5.511748313903809
    7. ' i' → logprob: -6.511748313903809
    8. '[i' → logprob: -7.011748313903809
    9. '(i' → logprob: -7.261748313903809
    10. '*' → logprob: -8.011748313903809

Token 365: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.012667390517890453
    2. 'i' → logprob: -4.512667179107666
    3. '(' → logprob: -6.762667179107666
    4. ' (' → logprob: -7.762667179107666
    5. '
' → logprob: -11.762667655944824
    6. '(
' → logprob: -12.012667655944824
    7. '   ' → logprob: -12.137667655944824
    8. ')' → logprob: -12.387667655944824
    9. '[i' → logprob: -13.137667655944824
    10. '

' → logprob: -13.387667655944824

Token 366: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.144497349858284
    2. 'i' → logprob: -2.0194973945617676
    3. ' (' → logprob: -7.019497394561768
    4. '(' → logprob: -7.644497394561768
    5. '   ' → logprob: -8.01949691772461
    6. ' i' → logprob: -10.14449691772461
    7. '{i' → logprob: -10.64449691772461
    8. ')' → logprob: -10.89449691772461
    9. ' ' → logprob: -11.89449691772461
    10. '(
' → logprob: -12.01949691772461

Token 367: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8488029837608337
    2. ')' → logprob: -1.7238030433654785
    3. '))' → logprob: -1.8488030433654785
    4. 'i' → logprob: -2.0988030433654785
    5. '),' → logprob: -2.4738030433654785
    6. '(i' → logprob: -4.4738030433654785
    7. '   ' → logprob: -5.5988030433654785
    8. ' ' → logprob: -6.0988030433654785
    9. '(' → logprob: -6.4738030433654785
    10. ')))' → logprob: -6.5988030433654785

Token 368: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.08656509965658188
    2. '(' → logprob: -2.8365650177001953
    3. 'i' → logprob: -4.711565017700195
    4. '1' → logprob: -4.961565017700195
    5. ' (' → logprob: -5.586565017700195
    6. '0' → logprob: -6.211565017700195
    7. ')' → logprob: -6.586565017700195
    8. '   ' → logprob: -7.711565017700195
    9. '{' → logprob: -8.586565017700195
    10. ' ' → logprob: -9.336565017700195

Token 369: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10079983621835709
    2. ',' → logprob: -3.225799798965454
    3. '),' → logprob: -3.225799798965454
    4. ' )' → logprob: -4.975800037384033
    5. '))' → logprob: -5.225800037384033
    6. ' ,' → logprob: -5.975800037384033
    7. ')*' → logprob: -7.475800037384033
    8. ' ),' → logprob: -7.475800037384033
    9. '*' → logprob: -8.600799560546875
    10. '*)' → logprob: -9.725799560546875

Token 370: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0034162935335189104
    2. ' M' → logprob: -5.753416061401367
    3. 'm' → logprob: -9.253416061401367
    4. 'n' → logprob: -9.253416061401367
    5. 'B' → logprob: -11.378416061401367
    6. 'L' → logprob: -12.003416061401367
    7. '   ' → logprob: -12.253416061401367
    8. 'b' → logprob: -12.253416061401367
    9. '10' → logprob: -12.378416061401367
    10. ')' → logprob: -13.003416061401367

Token 371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015938883880153298
    2. ' )' → logprob: -7.251594066619873
    3. '),' → logprob: -7.376594066619873
    4. ')
' → logprob: -9.126593589782715
    5. ')+' → logprob: -10.626593589782715
    6. ',' → logprob: -10.751593589782715
    7. '))' → logprob: -10.751593589782715
    8. ')*' → logprob: -10.876593589782715
    9. '   ' → logprob: -11.376593589782715
    10. ')**' → logprob: -11.501593589782715

Token 372: ' calc' (ID: 25691)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027754174545407295
    2. ' )' → logprob: -4.527754306793213
    3. '),' → logprob: -5.652754306793213
    4. '**' → logprob: -5.652754306793213
    5. '))' → logprob: -6.527754306793213
    6. ')])' → logprob: -6.527754306793213
    7. ')
' → logprob: -6.652754306793213
    8. ')]' → logprob: -7.277754306793213
    9. ']' → logprob: -7.277754306793213
    10. '   ' → logprob: -7.402754306793213

Token 373: 'ule' (ID: 1601)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.6656245589256287
    2. '(' → logprob: -0.9156245589256287
    3. 'pow' → logprob: -3.9156246185302734
    4. 'ul' → logprob: -4.165624618530273
    5. '=' → logprob: -4.790624618530273
    6. '_pow' → logprob: -4.915624618530273
    7. 'ule' → logprob: -5.165624618530273
    8. ')' → logprob: -5.665624618530273
    9. '()' → logprob: -5.790624618530273
    10. '**' → logprob: -5.790624618530273

Token 374: ' le' (ID: 505)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.3602166473865509
    2. '(' → logprob: -1.7352166175842285
    3. 'pow' → logprob: -2.2352166175842285
    4. ')' → logprob: -5.1102166175842285
    5. ' (' → logprob: -5.4852166175842285
    6. '(d' → logprob: -5.8602166175842285
    7. '10' → logprob: -5.8602166175842285
    8. ' pow' → logprob: -6.4852166175842285
    9. '(p' → logprob: -7.1102166175842285
    10. '((' → logprob: -8.485217094421387

Token 375: ' reste' (ID: 26769)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.12542632222175598
    2. '(pow' → logprob: -2.6254262924194336
    3. '(' → logprob: -3.3754262924194336
    4. ')' → logprob: -5.750426292419434
    5. ' pow' → logprob: -6.125426292419434
    6. ' (' → logprob: -6.875426292419434
    7. 'dou' → logprob: -6.875426292419434
    8. '10' → logprob: -7.250426292419434
    9. '(
' → logprob: -8.125426292419434
    10. '((' → logprob: -8.250426292419434

Token 376: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1231180801987648
    2. '(pow' → logprob: -3.1231181621551514
    3. '(' → logprob: -3.3731181621551514
    4. ')' → logprob: -4.123117923736572
    5. ' =' → logprob: -4.748117923736572
    6. 'pow' → logprob: -5.498117923736572
    7. ' (' → logprob: -5.998117923736572
    8. '(
' → logprob: -5.998117923736572
    9. '=(' → logprob: -7.248117923736572
    10. '10' → logprob: -7.498117923736572

Token 377: 'mod' (ID: 4847)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8061235547065735
    2. 'pow' → logprob: -1.5561234951019287
    3. '10' → logprob: -2.0561234951019287
    4. '(pow' → logprob: -2.4311234951019287
    5. 'M' → logprob: -2.9311234951019287
    6. '(' → logprob: -3.3061234951019287
    7. ' pow' → logprob: -4.056123733520508
    8. ' ' → logprob: -5.181123733520508
    9. ' M' → logprob: -5.306123733520508
    10. ',' → logprob: -5.806123733520508

Token 378: 'ulo' (ID: 5953)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5818520188331604
    2. ')' → logprob: -0.9568520188331604
    3. ' M' → logprob: -3.7068519592285156
    4. '(M' → logprob: -3.8318519592285156
    5. '10' → logprob: -5.206851959228516
    6. '=' → logprob: -6.456851959228516
    7. '(' → logprob: -6.456851959228516
    8. '=M' → logprob: -6.581851959228516
    9. '(
' → logprob: -9.206851959228516
    10. ' ' → logprob: -9.581851959228516

Token 379: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.020961765199899673
    2. ')' → logprob: -4.020961761474609
    3. ' M' → logprob: -6.645961761474609
    4. '(' → logprob: -7.270961761474609
    5. '(M' → logprob: -7.895961761474609
    6. '10' → logprob: -8.52096176147461
    7. 'pow' → logprob: -9.14596176147461
    8. '(pow' → logprob: -9.89596176147461
    9. '=' → logprob: -11.14596176147461
    10. 'B' → logprob: -11.52096176147461

Token 380: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036047017201781273
    2. ' )' → logprob: -6.003604888916016
    3. ')
' → logprob: -7.128604888916016
    4. '),' → logprob: -9.128604888916016
    5. '   ' → logprob: -10.503604888916016
    6. 'pow' → logprob: -10.628604888916016
    7. '))' → logprob: -10.753604888916016
    8. ',' → logprob: -11.003604888916016
    9. ' )
' → logprob: -11.503604888916016
    10. '       ' → logprob: -11.628604888916016

Token 381: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8281322717666626
    2. ')' → logprob: -1.0781322717666626
    3. '(' → logprob: -2.703132152557373
    4. ' =' → logprob: -2.828132152557373
    5. '(pow' → logprob: -3.578132152557373
    6. '   ' → logprob: -4.203132152557373
    7. 'pow' → logprob: -4.328132152557373
    8. ',' → logprob: -4.828132152557373
    9. '       ' → logprob: -5.203132152557373
    10. '10' → logprob: -5.578132152557373

Token 382: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.1413857340812683
    2. '(' → logprob: -2.391385793685913
    3. '10' → logprob: -3.891385793685913
    4. '(pow' → logprob: -4.391385555267334
    5. ' pow' → logprob: -5.516385555267334
    6. ' (' → logprob: -5.766385555267334
    7. ' ' → logprob: -8.766386032104492
    8. '   ' → logprob: -9.391386032104492
    9. 'p' → logprob: -10.016386032104492
    10. '100' → logprob: -11.266386032104492

Token 383: '10' (ID: 702)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.4504091143608093
    2. '(' → logprob: -1.200409173965454
    3. '(pow' → logprob: -3.075409173965454
    4. '10' → logprob: -4.325408935546875
    5. ' pow' → logprob: -6.700408935546875
    6. ' (' → logprob: -7.325408935546875
    7. 'p' → logprob: -9.325408935546875
    8. '(p' → logprob: -9.575408935546875
    9. ' ' → logprob: -9.825408935546875
    10. ')' → logprob: -11.200408935546875

Token 384: ' à' (ID: 1221)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.011945223435759544
    2. ' **' → logprob: -5.1369452476501465
    3. ')' → logprob: -5.3869452476501465
    4. '**)' → logprob: -7.7619452476501465
    5. '(l' → logprob: -8.261944770812988
    6. 'pow' → logprob: -8.511944770812988
    7. ' ' → logprob: -9.636944770812988
    8. '   ' → logprob: -10.136944770812988
    9. '
' → logprob: -10.261944770812988
    10. 'l' → logprob: -10.261944770812988

Token 385: ' la' (ID: 557)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.035463400185108185
    2. '(L' → logprob: -4.285463333129883
    3. '((' → logprob: -4.785463333129883
    4. '(' → logprob: -4.910463333129883
    5. 'pow' → logprob: -6.035463333129883
    6. ' (' → logprob: -7.035463333129883
    7. '(pow' → logprob: -7.035463333129883
    8. '(d' → logprob: -7.785463333129883
    9. 'l' → logprob: -7.910463333129883
    10. '(a' → logprob: -9.160463333129883

Token 386: ' puissance' (ID: 63494)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.4151080548763275
    2. 'pow' → logprob: -1.41510808467865
    3. '(pow' → logprob: -3.1651079654693604
    4. '(' → logprob: -3.5401079654693604
    5. '(L' → logprob: -3.9151079654693604
    6. '((' → logprob: -6.1651082038879395
    7. ' (' → logprob: -6.9151082038879395
    8. 'power' → logprob: -7.9151082038879395
    9. ' puissance' → logprob: -8.040107727050781
    10. '(n' → logprob: -8.290107727050781

Token 387: ' l' (ID: 305)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.015098952688276768
    2. 'l' → logprob: -5.390099048614502
    3. '(L' → logprob: -5.390099048614502
    4. ' (' → logprob: -6.140099048614502
    5. '(' → logprob: -6.140099048614502
    6. '((' → logprob: -6.640099048614502
    7. '(a' → logprob: -9.140098571777344
    8. 'L' → logprob: -10.015098571777344
    9. '   ' → logprob: -10.765098571777344
    10. '(
' → logprob: -11.015098571777344

Token 388: ' fois' (ID: 14697)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13473495841026306
    2. '*(' → logprob: -2.134734869003296
    3. ' *' → logprob: -5.009735107421875
    4. '   ' → logprob: -7.759735107421875
    5. '       ' → logprob: -8.509735107421875
    6. '*((' → logprob: -8.884735107421875
    7. ' ' → logprob: -10.134735107421875
    8. '(' → logprob: -10.259735107421875
    9. '2' → logprob: -10.384735107421875
    10. '           ' → logprob: -10.634735107421875

Token 389: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10389117896556854
    2. '(' → logprob: -2.353891134262085
    3. ' ' → logprob: -6.103891372680664
    4. ' (' → logprob: -6.603891372680664
    5. '   ' → logprob: -9.853891372680664
    6. 'pow' → logprob: -10.978891372680664
    7. '10' → logprob: -11.603891372680664
    8. '(pow' → logprob: -12.728891372680664
    9. '       ' → logprob: -13.228891372680664
    10. 'dou' → logprob: -13.728891372680664

Token 390: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03809404745697975
    2. '(' → logprob: -3.2880940437316895
    3. ' ' → logprob: -10.413094520568848
    4. ' (' → logprob: -10.788094520568848
    5. 'pow' → logprob: -14.038094520568848
    6. '(pow' → logprob: -14.163094520568848
    7. 'dou' → logprob: -16.03809356689453
    8. '   ' → logprob: -16.78809356689453
    9. '(
' → logprob: -17.16309356689453
    10. '
' → logprob: -17.28809356689453

Token 391: '^(' (ID: 32612)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.2233183042553719e-05
    2. '*' → logprob: -11.625012397766113
    3. ' **' → logprob: -12.750012397766113
    4. '*(' → logprob: -15.500012397766113
    5. '**)' → logprob: -17.375011444091797
    6. '```' → logprob: -17.375011444091797
    7. '**
' → logprob: -18.000011444091797
    8. '   ' → logprob: -18.625011444091797
    9. '**,' → logprob: -18.625011444091797
    10. '^(' → logprob: -19.375011444091797

Token 392: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.029414869844913483
    2. 'i' → logprob: -3.9044148921966553
    3. ' (' → logprob: -4.904414653778076
    4. '(' → logprob: -6.779414653778076
    5. ' i' → logprob: -8.529415130615234
    6. '{i' → logprob: -10.654415130615234
    7. '(
' → logprob: -10.904415130615234
    8. ' ' → logprob: -11.154415130615234
    9. '
' → logprob: -11.529415130615234
    10. '2' → logprob: -12.529415130615234

Token 393: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0018046533223241568
    2. ' -' → logprob: -6.501804828643799
    3. '(i' → logprob: -9.00180435180664
    4. ')' → logprob: -9.75180435180664
    5. '   ' → logprob: -10.75180435180664
    6. ')-' → logprob: -11.37680435180664
    7. '
' → logprob: -11.37680435180664
    8. '-(' → logprob: -11.37680435180664
    9. '[i' → logprob: -11.50180435180664
    10. '(' → logprob: -11.75180435180664

Token 394: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.431831419467926
    2. '(' → logprob: -1.0568313598632812
    3. ' (' → logprob: -6.681831359863281
    4. '(
' → logprob: -7.681831359863281
    5. '(prev' → logprob: -7.681831359863281
    6. '1' → logprob: -8.056831359863281
    7. 'i' → logprob: -8.806831359863281
    8. '-' → logprob: -9.181831359863281
    9. '
' → logprob: -9.181831359863281
    10. '```' → logprob: -9.931831359863281

Token 395: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038083940744400024
    2. ' )' → logprob: -3.413084030151367
    3. '))' → logprob: -6.163084030151367
    4. '*' → logprob: -7.163084030151367
    5. '   ' → logprob: -7.538084030151367
    6. '),' → logprob: -8.413084030151367
    7. '*)' → logprob: -9.038084030151367
    8. ' ' → logprob: -9.038084030151367
    9. ')
' → logprob: -9.163084030151367
    10. ' *' → logprob: -9.663084030151367

Token 396: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8280391693115234
    2. ']' → logprob: -0.9530391693115234
    3. 'dou' → logprob: -2.5780391693115234
    4. '   ' → logprob: -3.2030391693115234
    5. ' ]' → logprob: -4.328039169311523
    6. ' )' → logprob: -5.203039169311523
    7. ' ' → logprob: -5.203039169311523
    8. '*' → logprob: -5.328039169311523
    9. ' doubling' → logprob: -5.578039169311523
    10. '**' → logprob: -5.578039169311523

Token 397: ' #' (ID: 1069)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.5032951235771179
    2. '       ' → logprob: -1.0032951831817627
    3. '   ' → logprob: -4.378294944763184
    4. 'd' → logprob: -4.878294944763184
    5. ' doubling' → logprob: -5.003294944763184
    6. ')' → logprob: -8.253294944763184
    7. '           ' → logprob: -8.253294944763184
    8. ' ' → logprob: -8.753294944763184
    9. '	d' → logprob: -8.878294944763184
    10. ' =' → logprob: -9.253294944763184

Token 398: ' On' (ID: 2160)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.04665439948439598
    2. ' doubling' → logprob: -3.421654462814331
    3. '       ' → logprob: -4.546654224395752
    4. '   ' → logprob: -6.421654224395752
    5. 'd' → logprob: -7.796654224395752
    6. 'double' → logprob: -10.29665470123291
    7. '           ' → logprob: -10.42165470123291
    8. '10' → logprob: -10.54665470123291
    9. 'for' → logprob: -10.92165470123291
    10. '
' → logprob: -10.92165470123291

Token 399: ' ajoute' (ID: 91611)
  Prédit: ' multipl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multipl' → logprob: -0.03850294649600983
    2. 'mult' → logprob: -3.6635029315948486
    3. 'multiply' → logprob: -6.038503170013428
    4. 'multip' → logprob: -6.663503170013428
    5. '#' → logprob: -6.788503170013428
    6. ' multiply' → logprob: -7.163503170013428
    7. '[' → logprob: -7.413503170013428
    8. 'mod' → logprob: -7.538503170013428
    9. ' ajoute' → logprob: -7.538503170013428
    10. '=' → logprob: -7.663503170013428

Token 400: ' ' (ID: 220)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.19887208938598633
    2. '(d' → logprob: -2.4488720893859863
    3. ' doubling' → logprob: -2.6988720893859863
    4. '(' → logprob: -4.323872089385986
    5. ' (' → logprob: -4.573872089385986
    6. 'd' → logprob: -6.698872089385986
    7. '   ' → logprob: -7.698872089385986
    8. '(
' → logprob: -8.198871612548828
    9. '((' → logprob: -8.448871612548828
    10. ' dou' → logprob: -8.948871612548828

Token 401: '1' (ID: 16)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.4035435616970062
    2. 'dou' → logprob: -1.1535435914993286
    3. ' doubling' → logprob: -4.903543472290039
    4. ' (' → logprob: -5.403543472290039
    5. 'd' → logprob: -6.278543472290039
    6. '(' → logprob: -6.653543472290039
    7. '((' → logprob: -7.653543472290039
    8. '(double' → logprob: -8.653543472290039
    9. '(
' → logprob: -9.028543472290039
    10. ' dou' → logprob: -9.278543472290039

Token 402: ' à' (ID: 1221)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8142548203468323
    2. ')' → logprob: -1.4392547607421875
    3. ' *' → logprob: -2.0642547607421875
    4. '+' → logprob: -2.3142547607421875
    5. '*' → logprob: -2.6892547607421875
    6. ',' → logprob: -4.6892547607421875
    7. ']' → logprob: -5.4392547607421875
    8. ' )' → logprob: -6.1892547607421875
    9. ' ' → logprob: -6.4392547607421875
    10. '   ' → logprob: -7.0642547607421875

Token 403: ' ce' (ID: 2357)
  Prédit: ' doubling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doubling' → logprob: -0.355254203081131
    2. 'dou' → logprob: -1.2302541732788086
    3. '(d' → logprob: -5.230254173278809
    4. ' (' → logprob: -7.355254173278809
    5. ' doubl' → logprob: -8.605254173278809
    6. ' multiplying' → logprob: -8.980254173278809
    7. 'd' → logprob: -9.230254173278809
    8. '(' → logprob: -9.355254173278809
    9. 'multip' → logprob: -9.980254173278809
    10. ' dou' → logprob: -10.105254173278809

Token 404: ' résultat' (ID: 62556)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11062466353178024
    2. '[' → logprob: -3.2356245517730713
    3. ']' → logprob: -3.9856245517730713
    4. 'dou' → logprob: -3.9856245517730713
    5. ' *' → logprob: -4.36062479019165
    6. ' doubling' → logprob: -4.98562479019165
    7. ')' → logprob: -5.73562479019165
    8. 'multip' → logprob: -6.48562479019165
    9. '[i' → logprob: -6.73562479019165
    10. ' multiplication' → logprob: -7.36062479019165

Token 405: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7454800605773926
    2. ')' → logprob: -1.1204800605773926
    3. ' *' → logprob: -2.9954800605773926
    4. ',' → logprob: -2.9954800605773926
    5. '*' → logprob: -3.1204800605773926
    6. '+' → logprob: -3.2454800605773926
    7. ' )' → logprob: -4.995480060577393
    8. ' ,' → logprob: -6.620480060577393
    9. ')*' → logprob: -6.745480060577393
    10. ']' → logprob: -6.745480060577393

Token 406: ' puis' (ID: 18766)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5594086050987244
    2. '*' → logprob: -1.1844086647033691
    3. ' *' → logprob: -2.434408664703369
    4. 'dou' → logprob: -4.184408664703369
    5. ' )' → logprob: -5.184408664703369
    6. ']' → logprob: -5.684408664703369
    7. ' doubling' → logprob: -6.059408664703369
    8. '    ' → logprob: -6.809408664703369
    9. '#' → logprob: -6.809408664703369
    10. ')*' → logprob: -6.809408664703369

Token 407: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.195535346865654
    2. 'dou' → logprob: -2.44553542137146
    3. ' doubling' → logprob: -3.07053542137146
    4. '*' → logprob: -3.82053542137146
    5. ']' → logprob: -4.945535182952881
    6. ')*' → logprob: -5.820535182952881
    7. ' multiplying' → logprob: -6.195535182952881
    8. 'multip' → logprob: -6.445535182952881
    9. ' *' → logprob: -6.570535182952881
    10. ' multipl' → logprob: -6.695535182952881

Token 408: ' multipl' (ID: 44269)
  Prédit: ' multipl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multipl' → logprob: -0.005065822042524815
    2. 'mult' → logprob: -6.63006591796875
    3. 'multiply' → logprob: -6.75506591796875
    4. '#' → logprob: -7.38006591796875
    5. ' multiply' → logprob: -7.88006591796875
    6. '%' → logprob: -7.88006591796875
    7. ' multip' → logprob: -8.50506591796875
    8. '*' → logprob: -9.00506591796875
    9. 'multip' → logprob: -9.00506591796875
    10. ']' → logprob: -9.00506591796875

Token 409: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.3266755938529968
    2. 'ipl' → logprob: -2.0766756534576416
    3. 'ique' → logprob: -2.7016756534576416
    4. 'e' → logprob: -3.7016756534576416
    5. 'ip' → logprob: -3.7016756534576416
    6. 'plique' → logprob: -4.0766754150390625
    7. 'ipe' → logprob: -4.8266754150390625
    8. ')' → logprob: -5.5766754150390625
    9. 'iple' → logprob: -6.9516754150390625
    10. 'ise' → logprob: -6.9516754150390625

Token 410: ' par' (ID: 686)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.022464696317911148
    2. ' doubling' → logprob: -4.522464752197266
    3. '   ' → logprob: -5.397464752197266
    4. '       ' → logprob: -5.522464752197266
    5. 'd' → logprob: -6.772464752197266
    6. '(d' → logprob: -7.397464752197266
    7. ' dou' → logprob: -9.147464752197266
    8. '	d' → logprob: -9.147464752197266
    9. ' doubl' → logprob: -9.147464752197266
    10. '(' → logprob: -9.272464752197266

Token 411: ' la' (ID: 557)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.08920836448669434
    2. ' doubling' → logprob: -2.4642083644866943
    3. 'd' → logprob: -9.339208602905273
    4. ' doubl' → logprob: -9.714208602905273
    5. 'double' → logprob: -10.339208602905273
    6. '(d' → logprob: -10.589208602905273
    7. '   ' → logprob: -10.964208602905273
    8. ' ' → logprob: -11.214208602905273
    9. ' dou' → logprob: -11.714208602905273
    10. '	d' → logprob: -12.339208602905273

Token 412: ' valeur' (ID: 41664)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.007776625920087099
    2. ' doubling' → logprob: -4.882776737213135
    3. 'd' → logprob: -9.257776260375977
    4. 'double' → logprob: -10.507776260375977
    5. '   ' → logprob: -11.632776260375977
    6. '[i' → logprob: -12.132776260375977
    7. ' doubl' → logprob: -12.257776260375977
    8. ' ' → logprob: -12.632776260375977
    9. '[' → logprob: -12.882776260375977
    10. ' dou' → logprob: -13.320276260375977

Token 413: ' précédente' (ID: 177319)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.01985681802034378
    2. ' doubling' → logprob: -4.269856929779053
    3. '[i' → logprob: -5.894856929779053
    4. '[' → logprob: -6.644856929779053
    5. 'previous' → logprob: -8.519856452941895
    6. '[d' → logprob: -8.519856452941895
    7. '   ' → logprob: -8.519856452941895
    8. ' previous' → logprob: -8.644856452941895
    9. ' doubl' → logprob: -8.769856452941895
    10. 'd' → logprob: -8.894856452941895

Token 414: ' de' (ID: 334)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.4288112223148346
    2. '   ' → logprob: -1.6788111925125122
    3. ']' → logprob: -3.3038113117218018
    4. '       ' → logprob: -3.5538113117218018
    5. '[' → logprob: -3.6788113117218018
    6. ' doubling' → logprob: -4.053811073303223
    7. ')' → logprob: -4.678811073303223
    8. ',' → logprob: -5.178811073303223
    9. '.' → logprob: -5.428811073303223
    10. 'd' → logprob: -5.428811073303223

Token 415: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.003195066237822175
    2. ' doubling' → logprob: -5.753195285797119
    3. 'd' → logprob: -11.753194808959961
    4. 'double' → logprob: -12.003194808959961
    5. 'dbl' → logprob: -14.378194808959961
    6. '(d' → logprob: -14.503194808959961
    7. ' ' → logprob: -14.753194808959961
    8. ' doubl' → logprob: -15.003194808959961
    9. '	d' → logprob: -15.378194808959961
    10. '`' → logprob: -15.503194808959961

Token 416: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -4.320199877838604e-07
    2. ' const' → logprob: -15.75
    3. 'line' → logprob: -16.5
    4. '```' → logprob: -16.75
    5. '
' → logprob: -17.875
    6. '   ' → logprob: -18.125
    7. '_const' → logprob: -18.25
    8. 'dou' → logprob: -18.5
    9. '.const' → logprob: -19.375
    10. ' ' → logprob: -19.375

Token 417: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015562419139314443
    2. '[' → logprob: -9.000155448913574
    3. ' [' → logprob: -11.250155448913574
    4. '   ' → logprob: -11.500155448913574
    5. 'i' → logprob: -13.250155448913574
    6. '[-' → logprob: -13.250155448913574
    7. '(i' → logprob: -13.500155448913574
    8. '       ' → logprob: -13.500155448913574
    9. '[
' → logprob: -14.875155448913574
    10. ' i' → logprob: -14.875155448913574

Token 418: ' et' (ID: 859)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.8534376621246338
    2. '       ' → logprob: -1.8534376621246338
    3. '   ' → logprob: -2.103437662124634
    4. '    ' → logprob: -2.728437662124634
    5. '     
' → logprob: -2.978437662124634
    6. '    
' → logprob: -3.103437662124634
    7. ' doubling' → logprob: -3.478437662124634
    8. '*' → logprob: -3.978437662124634
    9. ')' → logprob: -4.103437423706055
    10. '        
' → logprob: -4.603437423706055

Token 419: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2589753568172455
    2. ' )' → logprob: -2.1339752674102783
    3. ' %' → logprob: -3.5089752674102783
    4. ' ' → logprob: -3.8839752674102783
    5. '0' → logprob: -4.383975505828857
    6. '%' → logprob: -4.383975505828857
    7. '    ' → logprob: -4.758975505828857
    8. ']' → logprob: -5.383975505828857
    9. ' ]' → logprob: -5.383975505828857
    10. '"' → logprob: -5.758975505828857

Token 420: ' prend' (ID: 37463)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02572443336248398
    2. ')' → logprob: -4.650724411010742
    3. ' %' → logprob: -4.650724411010742
    4. ' %=' → logprob: -6.275724411010742
    5. '%
' → logprob: -6.525724411010742
    6. ')%' → logprob: -6.775724411010742
    7. '%=' → logprob: -7.650724411010742
    8. ']' → logprob: -8.025724411010742
    9. '%n' → logprob: -8.525724411010742
    10. '%i' → logprob: -8.525724411010742

Token 421: ' le' (ID: 505)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2127913534641266
    2. ' %' → logprob: -1.8377913236618042
    3. ')' → logprob: -3.5877914428710938
    4. '(' → logprob: -5.837791442871094
    5. ' %=' → logprob: -7.712791442871094
    6. ')%' → logprob: -7.962791442871094
    7. ' modulo' → logprob: -8.337791442871094
    8. '%d' → logprob: -8.587791442871094
    9. '()%' → logprob: -9.837791442871094
    10. 'mod' → logprob: -10.087791442871094

Token 422: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4980962574481964
    2. ' %' → logprob: -0.998096227645874
    3. ' modulo' → logprob: -3.873096227645874
    4. ' ' → logprob: -7.123096466064453
    5. ')' → logprob: -7.748096466064453
    6. 'mod' → logprob: -8.123096466064453
    7. ' %
' → logprob: -8.248096466064453
    8. ' space' → logprob: -8.748096466064453
    9. 'space' → logprob: -8.998096466064453
    10. '[' → logprob: -9.373096466064453

Token 423: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.43425577878952026
    2. ' M' → logprob: -1.309255838394165
    3. '(' → logprob: -3.059255838394165
    4. ' (' → logprob: -3.809255838394165
    5. '(M' → logprob: -4.684255599975586
    6. '(
' → logprob: -5.934255599975586
    7. ',' → logprob: -7.184255599975586
    8. ')' → logprob: -8.559255599975586
    9. ' ' → logprob: -9.059255599975586
    10. ' (
' → logprob: -9.934255599975586

Token 424: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12755684554576874
    2. '   ' → logprob: -3.002556800842285
    3. ',' → logprob: -3.502556800842285
    4. ':' → logprob: -4.377556800842285
    5. '(' → logprob: -5.627556800842285
    6. '.' → logprob: -5.752556800842285
    7. ']' → logprob: -5.877556800842285
    8. ' )' → logprob: -6.002556800842285
    9. '       ' → logprob: -6.252556800842285
    10. ')
' → logprob: -6.377556800842285

Token 425: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3850941061973572
    2. ')' → logprob: -1.885094165802002
    3. '=' → logprob: -2.635094165802002
    4. ' =' → logprob: -3.135094165802002
    5. '       ' → logprob: -4.010094165802002
    6. 'dou' → logprob: -4.885094165802002
    7. '):
' → logprob: -5.635094165802002
    8. ':' → logprob: -5.635094165802002
    9. ']' → logprob: -5.760094165802002
    10. ',' → logprob: -6.135094165802002

Token 426: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.014223090372979641
    2. '   ' → logprob: -4.764223098754883
    3. '       ' → logprob: -5.639223098754883
    4. ' doubling' → logprob: -6.514223098754883
    5. 'd' → logprob: -7.889223098754883
    6. '           ' → logprob: -10.389223098754883
    7. 'double' → logprob: -10.889223098754883
    8. ' ' → logprob: -11.389223098754883
    9. 'dbl' → logprob: -11.514223098754883
    10. '=' → logprob: -11.639223098754883

Token 427: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -4.127333340875339e-06
    2. ' const' → logprob: -14.000003814697266
    3. '_const' → logprob: -14.000003814697266
    4. '[' → logprob: -14.250003814697266
    5. '   ' → logprob: -15.000003814697266
    6. '=' → logprob: -15.625003814697266
    7. '_' → logprob: -15.750003814697266
    8. 'cons' → logprob: -15.750003814697266
    9. '```' → logprob: -15.875003814697266
    10. '
' → logprob: -15.875003814697266

Token 428: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002802855451591313
    2. '[' → logprob: -8.250280380249023
    3. ' [' → logprob: -11.875280380249023
    4. '   ' → logprob: -12.250280380249023
    5. '[(' → logprob: -13.000280380249023
    6. '=' → logprob: -13.375280380249023
    7. '=[' → logprob: -14.500280380249023
    8. '

' → logprob: -15.000280380249023
    9. '[I' → logprob: -15.000280380249023
    10. '\[' → logprob: -15.000280380249023

Token 429: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00030078491545282304
    2. ']=' → logprob: -8.625300407409668
    3. ' ]' → logprob: -9.125300407409668
    4. '=' → logprob: -11.500300407409668
    5. ']=(' → logprob: -13.750300407409668
    6. ' =' → logprob: -14.250300407409668
    7. '   ' → logprob: -15.750300407409668
    8. ')' → logprob: -16.250301361083984
    9. ']
' → logprob: -16.375301361083984
    10. '],' → logprob: -16.875301361083984

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132637143135071
    2. ' =' → logprob: -1.3132636547088623
    3. ' =(' → logprob: -14.313263893127441
    4. ']=' → logprob: -14.813263893127441
    5. '=(' → logprob: -15.313263893127441
    6. ']' → logprob: -15.438263893127441
    7. ',' → logprob: -16.563262939453125
    8. '=

' → logprob: -16.688262939453125
    9. ' =
' → logprob: -16.813262939453125
    10. '＝' → logprob: -16.813262939453125

Token 431: ' (
' (ID: 4112)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.052777111530303955
    2. ' (' → logprob: -3.802777051925659
    3. 'dou' → logprob: -4.052777290344238
    4. '((' → logprob: -4.552777290344238
    5. '(' → logprob: -7.802777290344238
    6. ' ((' → logprob: -8.427777290344238
    7. ' doubling' → logprob: -8.427777290344238
    8. '   ' → logprob: -9.427777290344238
    9. ' ' → logprob: -9.677777290344238
    10. '(((' → logprob: -9.802777290344238

Token 432: '           ' (ID: 352)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.04450443759560585
    2. '(d' → logprob: -3.169504404067993
    3. ' doubling' → logprob: -7.294504642486572
    4. '(' → logprob: -8.419504165649414
    5. 'double' → logprob: -8.919504165649414
    6. '   ' → logprob: -8.919504165649414
    7. ' (' → logprob: -9.794504165649414
    8. '((' → logprob: -9.794504165649414
    9. '(double' → logprob: -10.044504165649414
    10. 'd' → logprob: -10.169504165649414

Token 433: ' (' (ID: 350)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.3503607511520386
    2. '(d' → logprob: -1.2253607511520386
    3. '(' (adapté à ' (') → logprob: -7.600360870361328
    4. '((' → logprob: -8.100360870361328
    5. 'd' → logprob: -8.225360870361328
    6. 'double' → logprob: -8.350360870361328
    7. ' doubling' → logprob: -8.350360870361328
    8. '(double' → logprob: -8.850360870361328
    9. ' (' → logprob: -9.725360870361328
    10. '   ' → logprob: -9.850360870361328

Token 434: 'pow' (ID: 30304)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.07010871171951294
    2. '(d' → logprob: -3.070108652114868
    3. '(' → logprob: -4.570108890533447
    4. 'pow' → logprob: -5.195108890533447
    5. '(pow' → logprob: -5.820108890533447
    6. '1' → logprob: -7.070108890533447
    7. '10' → logprob: -7.570108890533447
    8. '   ' → logprob: -8.320108413696289
    9. '((' → logprob: -8.695108413696289
    10. ' doubling' → logprob: -8.820108413696289

Token 435: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14285601675510406
    2. '10' → logprob: -2.0178561210632324
    3. '(
' → logprob: -8.767855644226074
    4. '           ' → logprob: -11.767855644226074
    5. '   ' → logprob: -12.392855644226074
    6. '```' → logprob: -12.642855644226074
    7. ')' → logprob: -13.017855644226074
    8. ' ' → logprob: -13.767855644226074
    9. '               ' → logprob: -13.892855644226074
    10. '       ' → logprob: -13.892855644226074

Token 436: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.4868770196917467e-05
    2. '(' → logprob: -10.875024795532227
    3. '   ' → logprob: -13.000024795532227
    4. ' ' → logprob: -13.500024795532227
    5. ')' → logprob: -13.750024795532227
    6. '           ' → logprob: -14.750024795532227
    7. '       ' → logprob: -15.625024795532227
    8. '
' → logprob: -15.750024795532227
    9. '```' → logprob: -16.375024795532227
    10. '(
' → logprob: -16.500024795532227

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00373784895054996
    2. ',l' → logprob: -5.628737926483154
    3. ' ,' → logprob: -9.753737449645996
    4. ',
' → logprob: -10.503737449645996
    5. '           ' → logprob: -10.753737449645996
    6. ',(' → logprob: -11.753737449645996
    7. 'l' → logprob: -12.253737449645996
    8. '   ' → logprob: -12.503737449645996
    9. ',ll' → logprob: -12.503737449645996
    10. ',L' → logprob: -13.253737449645996

Token 438: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01842266134917736
    2. ' l' → logprob: -4.018422603607178
    3. '(l' → logprob: -8.893423080444336
    4. '   ' → logprob: -10.018423080444336
    5. ' (' → logprob: -11.143423080444336
    6. 'L' → logprob: -11.143423080444336
    7. ' ' → logprob: -11.518423080444336
    8. '	l' → logprob: -11.643423080444336
    9. '           ' → logprob: -11.893423080444336
    10. '       ' → logprob: -11.893423080444336

Token 439: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00884312205016613
    2. '*(' → logprob: -4.758842945098877
    3. ' *' → logprob: -8.633843421936035
    4. '   ' → logprob: -10.258843421936035
    5. '*((' → logprob: -12.258843421936035
    6. '       ' → logprob: -12.883843421936035
    7. '(' → logprob: -13.508843421936035
    8. '           ' → logprob: -13.508843421936035
    9. ' ' → logprob: -13.633843421936035
    10. '2' → logprob: -13.883843421936035

Token 440: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.474106103181839
    2. '(' → logprob: -0.9741060733795166
    3. 'pow' → logprob: -11.599105834960938
    4. ' (' → logprob: -11.974105834960938
    5. '   ' → logprob: -12.099105834960938
    6. ' ' → logprob: -12.099105834960938
    7. '(pow' → logprob: -13.974105834960938
    8. '
' → logprob: -14.474105834960938
    9. '(
' → logprob: -14.599105834960938
    10. '[' → logprob: -15.599105834960938

Token 441: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20142006874084473
    2. '2' → logprob: -1.7014200687408447
    3. ' (' → logprob: -12.951419830322266
    4. 'pow' → logprob: -12.951419830322266
    5. '   ' → logprob: -14.076419830322266
    6. ' ' → logprob: -14.451419830322266
    7. '(pow' → logprob: -15.701419830322266
    8. '((' → logprob: -15.701419830322266
    9. '(
' → logprob: -16.326419830322266
    10. '[' → logprob: -16.451419830322266

Token 442: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.010680858045816422
    2. '(i' → logprob: -4.635680675506592
    3. '(' → logprob: -7.510680675506592
    4. '[i' → logprob: -8.38568115234375
    5. '*(' → logprob: -9.26068115234375
    6. '```' → logprob: -11.51068115234375
    7. '[' → logprob: -11.63568115234375
    8. '*' → logprob: -11.88568115234375
    9. 'i' → logprob: -12.26068115234375
    10. '   ' → logprob: -12.51068115234375

Token 443: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.796184723294573e-06
    2. ' (' → logprob: -12.375005722045898
    3. '(' → logprob: -14.250005722045898
    4. '   ' → logprob: -14.500005722045898
    5. '       ' → logprob: -16.1250057220459
    6. '(I' → logprob: -16.2500057220459
    7. '           ' → logprob: -16.6250057220459
    8. '(ii' → logprob: -16.7500057220459
    9. '((' → logprob: -17.1250057220459
    10. '[i' → logprob: -17.5000057220459

Token 444: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.023345056921243668
    2. 'i' → logprob: -3.7733449935913086
    3. ' (' → logprob: -9.523344993591309
    4. '{i' → logprob: -11.523344993591309
    5. '   ' → logprob: -11.773344993591309
    6. '[i' → logprob: -12.898344993591309
    7. ' i' → logprob: -13.273344993591309
    8. '(' → logprob: -13.523344993591309
    9. '       ' → logprob: -13.773344993591309
    10. '           ' → logprob: -14.023344993591309

Token 445: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00018863992590922862
    2. ' -' → logprob: -8.875188827514648
    3. '   ' → logprob: -10.250188827514648
    4. ' ' → logprob: -12.000188827514648
    5. '(' → logprob: -13.250188827514648
    6. '  ' → logprob: -13.375188827514648
    7. '1' → logprob: -13.500188827514648
    8. '       ' → logprob: -13.875188827514648
    9. '           ' → logprob: -14.625188827514648
    10. '[' → logprob: -14.750188827514648

Token 446: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '  ' → logprob: -18.250001907348633
    5. '```' → logprob: -18.875001907348633
    6. '2' → logprob: -19.500001907348633
    7. '0' → logprob: -20.125001907348633
    8. '       ' → logprob: -20.250001907348633
    9. '    ' → logprob: -20.625001907348633
    10. '           ' → logprob: -20.875001907348633

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.500001907348633
    4. '```' → logprob: -16.750001907348633
    5. '2' → logprob: -17.500001907348633
    6. '  ' → logprob: -17.500001907348633
    7. '
' → logprob: -17.500001907348633
    8. 'i' → logprob: -18.125001907348633
    9. '       ' → logprob: -18.250001907348633
    10. '(' → logprob: -18.500001907348633

Token 448: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0006151011912152171
    2. ',' → logprob: -7.625615119934082
    3. '   ' → logprob: -9.875615119934082
    4. '},' → logprob: -10.750615119934082
    5. ' ),' → logprob: -11.000615119934082
    6. ',),' → logprob: -11.000615119934082
    7. ')' → logprob: -12.125615119934082
    8. '       ' → logprob: -12.375615119934082
    9. ' ' → logprob: -12.500615119934082
    10. '],' → logprob: -13.625615119934082

Token 449: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0002632430987432599
    2. ' M' → logprob: -8.250263214111328
    3. '   ' → logprob: -14.125263214111328
    4. '           ' → logprob: -14.375263214111328
    5. ')' → logprob: -15.000263214111328
    6. '       ' → logprob: -16.375263214111328
    7. ' ' → logprob: -16.625263214111328
    8. '    ' → logprob: -17.500263214111328
    9. '               ' → logprob: -17.750263214111328
    10. '  ' → logprob: -17.750263214111328

Token 450: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000156577822053805
    2. ')+' → logprob: -9.00015640258789
    3. ' )' → logprob: -11.12515640258789
    4. '   ' → logprob: -11.37515640258789
    5. ',' → logprob: -12.87515640258789
    6. ')*' → logprob: -13.25015640258789
    7. ')
' → logprob: -14.37515640258789
    8. '))' → logprob: -15.00015640258789
    9. '),' → logprob: -15.25015640258789
    10. ')+(' → logprob: -15.25015640258789

Token 451: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31027260422706604
    2. '+' → logprob: -2.435272693634033
    3. ' +' → logprob: -2.560272693634033
    4. '*' → logprob: -2.810272693634033
    5. ' *' → logprob: -3.810272693634033
    6. '   ' → logprob: -4.435272693634033
    7. ')*' → logprob: -5.560272693634033
    8. ' )' → logprob: -6.560272693634033
    9. ')+' → logprob: -6.685272693634033
    10. ' ' → logprob: -8.435272216796875

Token 452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002193908003391698
    2. ' ' → logprob: -8.500219345092773
    3. ')' → logprob: -12.250219345092773
    4. '           ' → logprob: -13.125219345092773
    5. '   ' → logprob: -13.250219345092773
    6. '
' → logprob: -14.062719345092773
    7. '    ' → logprob: -14.312719345092773
    8. '         ' → logprob: -14.375219345092773
    9. '       ' → logprob: -14.500219345092773
    10. '        ' → logprob: -14.687719345092773

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.375014305114746
    3. 'M' → logprob: -14.625014305114746
    4. '   ' → logprob: -14.625014305114746
    5. '
' → logprob: -15.375014305114746
    6. ')' → logprob: -15.687514305114746
    7. '(' → logprob: -15.687514305114746
    8. '           ' → logprob: -15.937514305114746
    9. '0' → logprob: -16.18751335144043
    10. '    ' → logprob: -16.56251335144043

Token 454: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023524489370174706
    2. ')
' → logprob: -9.250235557556152
    3. ')*' → logprob: -9.375235557556152
    4. ' )' → logprob: -10.375235557556152
    5. '           ' → logprob: -11.750235557556152
    6. '   ' → logprob: -12.250235557556152
    7. '*' → logprob: -12.625235557556152
    8. '       ' → logprob: -12.875235557556152
    9. ')

' → logprob: -14.125235557556152
    10. '         ' → logprob: -14.125235557556152

Token 455: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22559519112110138
    2. '*' → logprob: -1.600595235824585
    3. '           ' → logprob: -9.600595474243164
    4. '   ' → logprob: -10.225595474243164
    5. ' ' → logprob: -10.975595474243164
    6. ' *
' → logprob: -11.100595474243164
    7. ')' → logprob: -11.725595474243164
    8. ' ' → logprob: -11.725595474243164
    9. '*
' → logprob: -11.850595474243164
    10. '       ' → logprob: -11.850595474243164

Token 456: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0019305398454889655
    2. ' doubling' → logprob: -6.2519307136535645
    3. 'double' → logprob: -13.626930236816406
    4. 'd' → logprob: -15.876930236816406
    5. 'Dou' → logprob: -16.126930236816406
    6. '   ' → logprob: -16.126930236816406
    7. ' ' → logprob: -16.626930236816406
    8. ' dou' → logprob: -16.751930236816406
    9. ' doubl' → logprob: -16.876930236816406
    10. 'dbl' → logprob: -17.126930236816406

Token 457: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -1.9361264946837764e-07
    2. ' const' → logprob: -15.625
    3. 'cost' → logprob: -17.5
    4. '_const' → logprob: -17.5
    5. '   ' → logprob: -19.25
    6. '```' → logprob: -19.5
    7. '
' → logprob: -19.625
    8. '[' → logprob: -19.625
    9. ')' → logprob: -19.875
    10. ' ' → logprob: -20.0

Token 458: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.75
    3. '[
' → logprob: -18.0
    4. ' [' → logprob: -18.125
    5. '(i' → logprob: -18.25
    6. ')[' → logprob: -19.625
    7. 'i' → logprob: -20.125
    8. ')' → logprob: -20.125
    9. '   ' → logprob: -20.375
    10. '[I' → logprob: -20.75

Token 459: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6943573951721191
    2. '[i' → logprob: -0.6943573951721191
    3. 'i' → logprob: -6.819357395172119
    4. '(i' → logprob: -9.569356918334961
    5. ' -' → logprob: -10.819356918334961
    6. '[-' → logprob: -11.819356918334961
    7. ']' → logprob: -12.069356918334961
    8. '[' → logprob: -12.069356918334961
    9. '   ' → logprob: -12.819356918334961
    10. '{i' → logprob: -13.569356918334961

Token 460: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -18.5
    4. '   ' → logprob: -18.75
    5. ']' → logprob: -19.875
    6. ')' → logprob: -20.875
    7. '১' → logprob: -21.125
    8. '  ' → logprob: -21.5
    9. '<|end|>' → logprob: -21.5625
    10. 'i' → logprob: -21.5625

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -16.000001907348633
    4. '   ' → logprob: -17.312501907348633
    5. 'i' → logprob: -17.437501907348633
    6. ']' → logprob: -17.750001907348633
    7. '
' → logprob: -18.187501907348633
    8. ')' → logprob: -18.312501907348633
    9. '১' → logprob: -18.687501907348633
    10. '۱' → logprob: -18.875001907348633

Token 462: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004982246900908649
    2. ')%' → logprob: -7.750498294830322
    3. '%' → logprob: -10.250497817993164
    4. ' )' → logprob: -11.125497817993164
    5. ']' → logprob: -11.375497817993164
    6. '])' → logprob: -13.250497817993164
    7. '   ' → logprob: -13.250497817993164
    8. ')
' → logprob: -14.125497817993164
    9. '`)' → logprob: -14.875497817993164
    10. '))' → logprob: -15.375497817993164

Token 463: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004618814680725336
    2. '%' → logprob: -5.5046186447143555
    3. ')%' → logprob: -7.8796186447143555
    4. '   ' → logprob: -9.504618644714355
    5. ' %' → logprob: -10.129618644714355
    6. ' )' → logprob: -10.379618644714355
    7. '       ' → logprob: -11.754618644714355
    8. '           ' → logprob: -12.254618644714355
    9. '%d' → logprob: -14.504618644714355
    10. '```' → logprob: -14.754618644714355

Token 464: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0011703446507453918
    2. ' M' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.626171112060547
    4. ' ' → logprob: -17.126171112060547
    5. '(M' → logprob: -18.001171112060547
    6. ')' → logprob: -18.751171112060547
    7. '  ' → logprob: -19.001171112060547
    8. '	M' → logprob: -19.251171112060547
    9. '
' → logprob: -19.501171112060547
    10. ',' → logprob: -19.626171112060547

Token 465: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002210596576333046
    2. '   ' → logprob: -9.000221252441406
    3. '       ' → logprob: -9.625221252441406
    4. ' )' → logprob: -11.125221252441406
    5. ')
' → logprob: -11.500221252441406
    6. '	' → logprob: -13.000221252441406
    7. ');' → logprob: -14.000221252441406
    8. ')%' → logprob: -14.125221252441406
    9. '           ' → logprob: -15.000221252441406
    10. '<|end|>' → logprob: -15.125221252441406

Token 466: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00743494275957346
    2. '   ' → logprob: -5.507434844970703
    3. '       ' → logprob: -5.757434844970703
    4. ')
' → logprob: -8.882434844970703
    5. ' )' → logprob: -10.257434844970703
    6. ')

' → logprob: -12.132434844970703
    7. '           ' → logprob: -12.632434844970703
    8. '
' → logprob: -12.757434844970703
    9. '	' → logprob: -13.382434844970703
    10. ' ' → logprob: -14.257434844970703

Token 467: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020312999840825796
    2. '   ' → logprob: -6.377031326293945
    3. '       ' → logprob: -8.752031326293945
    4. ' )' → logprob: -9.002031326293945
    5. ')
' → logprob: -10.627031326293945
    6. '	' → logprob: -11.502031326293945
    7. ')%' → logprob: -12.127031326293945
    8. '  ' → logprob: -13.627031326293945
    9. '```' → logprob: -13.877031326293945
    10. ')

' (adapté à ' )

') → logprob: -13.877031326293945

Token 468: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18544891476631165
    2. ')' → logprob: -2.1854488849639893
    3. '<|end|>' → logprob: -3.6854488849639893
    4. '       ' → logprob: -4.435449123382568
    5. '    
' → logprob: -4.935449123382568
    6. '  ' → logprob: -5.810449123382568
    7. ',' → logprob: -5.810449123382568
    8. ' ' → logprob: -6.560449123382568
    9. '   
' → logprob: -6.810449123382568
    10. '.' → logprob: -7.560449123382568

Token 469: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8319056630134583
    2. '       ' → logprob: -1.2069056034088135
    3. ')' → logprob: -1.8319056034088135
    4. '    
' → logprob: -3.4569056034088135
    5. '        
' → logprob: -4.081905841827393
    6. '<|end|>' → logprob: -4.456905841827393
    7. ' ' → logprob: -5.206905841827393
    8. ',' → logprob: -5.206905841827393
    9. '   
' → logprob: -5.581905841827393
    10. '
' → logprob: -5.581905841827393

Token 470: ' Calcul' (ID: 57243)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0023217720445245504
    2. '       ' → logprob: -6.627321720123291
    3. '   ' → logprob: -7.252321720123291
    4. ' doubling' → logprob: -8.62732219696045
    5. '#' → logprob: -10.00232219696045
    6. '           ' → logprob: -11.12732219696045
    7. 'double' → logprob: -11.50232219696045
    8. '```' → logprob: -12.37732219696045
    9. 'd' → logprob: -12.87732219696045
    10. '
' → logprob: -13.00232219696045

Token 471: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8140330910682678
    2. '       ' → logprob: -0.9390330910682678
    3. '   ' → logprob: -2.814033031463623
    4. ' de' → logprob: -3.064033031463623
    5. 'de' → logprob: -3.439033031463623
    6. ' =' → logprob: -4.814033031463623
    7. '(
' → logprob: -5.189033031463623
    8. ' of' → logprob: -5.314033031463623
    9. '(' → logprob: -6.314033031463623
    10. 's' → logprob: -7.064033031463623

Token 472: ' nouvelles' (ID: 37997)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.7073915600776672
    2. 'dou' → logprob: -0.8323915600776672
    3. '(
' → logprob: -2.7073915004730225
    4. ' (' → logprob: -6.082391738891602
    5. ' doubling' → logprob: -6.832391738891602
    6. '(' → logprob: -7.207391738891602
    7. 'd' → logprob: -7.832391738891602
    8. '((' → logprob: -8.582391738891602
    9. ' (
' → logprob: -8.582391738891602
    10. '(double' → logprob: -8.957391738891602

Token 473: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.278730869293213
    2. 'values' → logprob: -1.278730869293213
    3. ' valeurs' → logprob: -1.778730869293213
    4. ' =' → logprob: -2.153730869293213
    5. ' values' → logprob: -2.903730869293213
    6. '=' → logprob: -3.153730869293213
    7. 'dou' → logprob: -3.528730869293213
    8. ' val' → logprob: -5.028730869293213
    9. 'line' → logprob: -5.278730869293213
    10. 'lines' → logprob: -5.653730869293213

Token 474: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7457185387611389
    2. ' =' → logprob: -0.7457185387611389
    3. '       ' → logprob: -3.870718479156494
    4. '   ' → logprob: -4.870718479156494
    5. ' dans' → logprob: -5.620718479156494
    6. 'dans' → logprob: -5.620718479156494
    7. ' de' → logprob: -5.870718479156494
    8. ' in' → logprob: -5.995718479156494
    9. 'dou' → logprob: -5.995718479156494
    10. 'for' → logprob: -6.870718479156494

Token 475: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.03396240994334221
    2. ' doubling' → logprob: -3.4089624881744385
    3. '(d' → logprob: -9.15896224975586
    4. 'double' → logprob: -9.65896224975586
    5. 'd' → logprob: -9.78396224975586
    6. '(
' → logprob: -10.53396224975586
    7. ' (' → logprob: -11.53396224975586
    8. '   ' → logprob: -11.84646224975586
    9. '(' → logprob: -11.90896224975586
    10. ' ' → logprob: -12.15896224975586

Token 476: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00014776040916331112
    2. 'const' → logprob: -8.875147819519043
    3. ' line' → logprob: -13.125147819519043
    4. '[i' → logprob: -13.625147819519043
    5. '[line' → logprob: -13.750147819519043
    6. '_line' → logprob: -14.125147819519043
    7. '   ' → logprob: -14.375147819519043
    8. '
' → logprob: -14.625147819519043
    9. '[' → logprob: -14.625147819519043
    10. '```' → logprob: -15.375147819519043

Token 477: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.537868779967539e-06
    2. '   ' → logprob: -12.250008583068848
    3. '[' → logprob: -13.500008583068848
    4. ' [' → logprob: -14.625008583068848
    5. ' =' → logprob: -14.750008583068848
    6. '=' → logprob: -15.000008583068848
    7. '[
' → logprob: -15.000008583068848
    8. '       ' → logprob: -15.250008583068848
    9. ')' → logprob: -16.00000762939453
    10. '
' → logprob: -16.12500762939453

Token 478: 'con' (ID: 542)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.13433116674423218
    2. '(
' → logprob: -2.509331226348877
    3. 'dou' → logprob: -3.509331226348877
    4. '(' → logprob: -5.259331226348877
    5. '(pow' → logprob: -5.884331226348877
    6. ' (' → logprob: -6.509331226348877
    7. '   ' → logprob: -6.634331226348877
    8. '((' → logprob: -6.759331226348877
    9. '
' → logprob: -8.009330749511719
    10. 'pow' → logprob: -8.134330749511719

Token 479: 'tribution' (ID: 7090)
  Prédit: 'tribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tribution' → logprob: -0.4709372818470001
    2. 'trib' → logprob: -1.2209372520446777
    3. 't' → logprob: -3.3459372520446777
    4. 'tributions' → logprob: -3.4709372520446777
    5. 'tin' → logprob: -4.595937252044678
    6. 'st' → logprob: -6.845937252044678
    7. 'stant' → logprob: -6.845937252044678
    8. '(' → logprob: -7.345937252044678
    9. ' trib' → logprob: -7.720937252044678
    10. 'tribut' → logprob: -8.720937728881836

Token 480: ' lin' (ID: 14432)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6856850385665894
    2. ' line' → logprob: -1.5606850385665894
    3. 'line' → logprob: -2.185685157775879
    4. '   ' → logprob: -2.560685157775879
    5. 'linear' → logprob: -3.185685157775879
    6. ' linear' → logprob: -4.560685157775879
    7. '[' → logprob: -4.560685157775879
    8. 'addition' → logprob: -5.060685157775879
    9. ' addition' → logprob: -5.185685157775879
    10. ')' → logprob: -5.185685157775879

Token 481: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.08784989267587662
    2. 'aire' → logprob: -2.8378498554229736
    3. 'e' → logprob: -3.8378498554229736
    4. '(' → logprob: -6.462850093841553
    5. 'ée' → logprob: -8.087849617004395
    6. '[' → logprob: -8.462849617004395
    7. 'a' → logprob: -8.462849617004395
    8. '   ' → logprob: -8.587849617004395
    9. 'ear' → logprob: -8.837849617004395
    10. ' (' → logprob: -9.087849617004395

Token 482: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.08915331959724426
    2. 'é' → logprob: -2.839153289794922
    3. 'a' → logprob: -4.714153289794922
    4. 'e' → logprob: -4.714153289794922
    5. 'ale' → logprob: -5.089153289794922
    6. 'ère' → logprob: -6.714153289794922
    7. 'ére' → logprob: -8.089153289794922
    8. 'ée' → logprob: -8.964153289794922
    9. 'al' → logprob: -9.214153289794922
    10. 'ære' → logprob: -9.339153289794922

Token 483: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.22527500987052917
    2. ')' → logprob: -2.4752750396728516
    3. ' +' → logprob: -3.3502750396728516
    4. ' *' → logprob: -3.4752750396728516
    5. '   ' → logprob: -3.7252750396728516
    6. '*' → logprob: -5.100275039672852
    7. '+' → logprob: -5.475275039672852
    8. ' ' → logprob: -5.850275039672852
    9. '):
' → logprob: -6.225275039672852
    10. '):' → logprob: -6.350275039672852

Token 484: ' bloc' (ID: 51218)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8261048793792725
    2. 'a' → logprob: -2.3261048793792725
    3. '(i' → logprob: -2.3261048793792725
    4. ' i' → logprob: -2.4511048793792725
    5. 'bloc' → logprob: -2.4511048793792725
    6. 'b' → logprob: -2.5761048793792725
    7. ' a' → logprob: -2.8261048793792725
    8. 'l' → logprob: -2.9511048793792725
    9. ' (' → logprob: -3.2011048793792725
    10. ' bloc' → logprob: -3.3261048793792725

Token 485: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.515125036239624
    2. '[i' → logprob: -2.140125036239624
    3. ' +' → logprob: -2.265125036239624
    4. '       ' → logprob: -2.515125036239624
    5. '+' → logprob: -3.265125036239624
    6. ' *' → logprob: -3.765125036239624
    7. '   ' → logprob: -4.265125274658203
    8. '*' → logprob: -5.015125274658203
    9. '[' → logprob: -5.515125274658203
    10. ' )' → logprob: -5.515125274658203

Token 486: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0389430969953537
    2. '=' → logprob: -3.53894305229187
    3. '   ' → logprob: -5.288943290710449
    4. '       ' → logprob: -6.038943290710449
    5. ')' → logprob: -6.788943290710449
    6. ' +=' → logprob: -8.28894329071045
    7. ' =
' → logprob: -9.28894329071045
    8. ':' → logprob: -10.53894329071045
    9. '[i' → logprob: -10.53894329071045
    10. '```' → logprob: -10.78894329071045

Token 487: '       ' (ID: 309)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.24805894494056702
    2. '       ' → logprob: -1.6230589151382446
    3. '   ' → logprob: -3.998059034347534
    4. '(d' → logprob: -6.873058795928955
    5. 'd' → logprob: -7.248058795928955
    6. '```' → logprob: -7.373058795928955
    7. ' doubling' → logprob: -7.748058795928955
    8. '           ' → logprob: -8.498059272766113
    9. '(
' → logprob: -8.498059272766113
    10. 'double' → logprob: -8.748059272766113

Token 488: ' #' (ID: 1069)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.012314081192016602
    2. '       ' → logprob: -4.5123138427734375
    3. '(d' → logprob: -7.8873138427734375
    4. ' doubling' → logprob: -8.137313842773438
    5. '   ' → logprob: -8.637313842773438
    6. '(
' → logprob: -9.137313842773438
    7. 'double' → logprob: -9.762313842773438
    8. 'd' → logprob: -10.137313842773438
    9. '(' → logprob: -10.262313842773438
    10. '```' → logprob: -10.387313842773438

Token 489: ' pow' (ID: 9779)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.030882490798830986
    2. ' doubling' → logprob: -3.7808825969696045
    3. 'd' → logprob: -6.155882358551025
    4. '(
' → logprob: -6.530882358551025
    5. '   ' → logprob: -7.030882358551025
    6. '       ' → logprob: -7.030882358551025
    7. '(' → logprob: -7.155882358551025
    8. '(d' → logprob: -7.530882358551025
    9. ' (' → logprob: -7.655882358551025
    10. '```' → logprob: -9.155882835388184

Token 490: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3425219549390022e-05
    2. '10' → logprob: -11.25001335144043
    3. '(
' → logprob: -15.62501335144043
    4. '<|end|>' → logprob: -16.37501335144043
    5. ' (' → logprob: -16.87501335144043
    6. '(pow' → logprob: -17.87501335144043
    7. 'pow' → logprob: -18.12501335144043
    8. '```' → logprob: -18.25001335144043
    9. 'a' → logprob: -18.75001335144043
    10. '((' → logprob: -18.87501335144043

Token 491: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17975956201553345
    2. '10' → logprob: -1.8047595024108887
    3. 'def' → logprob: -12.179759979248047
    4. '```' → logprob: -12.929759979248047
    5. 'pow' → logprob: -13.179759979248047
    6. '<|end|>' → logprob: -13.429759979248047
    7. '(
' → logprob: -14.179759979248047
    8. ')' → logprob: -14.179759979248047
    9. '(pow' → logprob: -14.429759979248047
    10. ' ' → logprob: -15.054759979248047

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09360051900148392
    2. '(' → logprob: -2.7186005115509033
    3. '(i' → logprob: -4.843600749969482
    4. '**' → logprob: -5.343600749969482
    5. ',l' → logprob: -5.593600749969482
    6. '**,' → logprob: -6.218600749969482
    7. '(l' → logprob: -6.593600749969482
    8. '10' → logprob: -6.593600749969482
    9. ')' → logprob: -6.968600749969482
    10. ',i' → logprob: -7.593600749969482

Token 493: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002446638885885477
    2. '(' → logprob: -6.50244665145874
    3. '(i' → logprob: -7.87744665145874
    4. ' i' → logprob: -8.627446174621582
    5. '60' → logprob: -8.877446174621582
    6. '59' → logprob: -9.502446174621582
    7. '   ' → logprob: -10.127446174621582
    8. '
' → logprob: -10.252446174621582
    9. '2' → logprob: -10.752446174621582
    10. '

' → logprob: -11.252446174621582

Token 494: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039997734129428864
    2. ')' → logprob: -3.2899978160858154
    3. '-' → logprob: -6.414997577667236
    4. ' ,' → logprob: -9.039998054504395
    5. '   ' → logprob: -9.914998054504395
    6. ' -' → logprob: -10.164998054504395
    7. '(' → logprob: -11.039998054504395
    8. '```' → logprob: -11.539998054504395
    9. '*' → logprob: -11.664998054504395
    10. '
' → logprob: -11.664998054504395

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24856959283351898
    2. ')' → logprob: -2.1235694885253906
    3. 'i' → logprob: -2.9985694885253906
    4. '(' → logprob: -3.6235694885253906
    5. '(i' → logprob: -4.998569488525391
    6. '-' → logprob: -5.873569488525391
    7. 'B' → logprob: -5.998569488525391
    8. 'b' → logprob: -6.373569488525391
    9. 'A' → logprob: -6.873569488525391
    10. 'M' → logprob: -6.998569488525391

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003227148437872529
    2. ')' → logprob: -5.753227233886719
    3. ' ,' → logprob: -10.503227233886719
    4. '```' → logprob: -12.253227233886719
    5. '(' → logprob: -12.503227233886719
    6. ',M' → logprob: -13.253227233886719
    7. '),' → logprob: -13.503227233886719
    8. '*' → logprob: -13.878227233886719
    9. ' ' → logprob: -13.878227233886719
    10. ',
' → logprob: -14.253227233886719

Token 497: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.000731377920601517
    2. ' M' → logprob: -7.250731468200684
    3. ')' → logprob: -11.000731468200684
    4. '   ' → logprob: -13.875731468200684
    5. ' ' → logprob: -14.000731468200684
    6. '100' → logprob: -14.375731468200684
    7. '       ' → logprob: -14.750731468200684
    8. ' ' → logprob: -14.875731468200684
    9. ',' → logprob: -15.000731468200684
    10. '10' → logprob: -15.125731468200684

Token 498: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028299614787101746
    2. ',' → logprob: -6.7528300285339355
    3. ')
' → logprob: -7.0028300285339355
    4. '       ' → logprob: -8.252829551696777
    5. '   ' → logprob: -8.627829551696777
    6. '),' → logprob: -9.127829551696777
    7. ' )' → logprob: -10.002829551696777
    8. '))' → logprob: -10.252829551696777
    9. '):
' → logprob: -10.252829551696777
    10. ')*' → logprob: -10.627829551696777

Token 499: ' calc' (ID: 25691)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8359290957450867
    2. '*' → logprob: -0.9609290957450867
    3. ')' → logprob: -1.7109291553497314
    4. ')*' → logprob: -6.835928916931152
    5. ' *
' → logprob: -7.085928916931152
    6. ',' → logprob: -8.210928916931152
    7. '   ' → logprob: -8.710928916931152
    8. '*
' → logprob: -8.960928916931152
    9. '       ' → logprob: -9.085928916931152
    10. ' )' → logprob: -9.210928916931152

Token 500: 'ule' (ID: 1601)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8431113362312317
    2. 'ule' → logprob: -1.468111276626587
    3. ')' → logprob: -1.593111276626587
    4. '=' → logprob: -2.718111276626587
    5. 'pow' → logprob: -3.718111276626587
    6. '(pow' → logprob: -3.968111276626587
    7. '**' → logprob: -4.968111515045166
    8. '((' → logprob: -5.968111515045166
    9. '(
' → logprob: -6.093111515045166
    10. 'ulate' → logprob: -6.218111515045166

Token 501: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6755674481391907
    2. '(' → logprob: -0.8005674481391907
    3. '(n' → logprob: -4.925567626953125
    4. '(a' → logprob: -5.550567626953125
    5. '(b' → logprob: -5.550567626953125
    6. '2' → logprob: -5.675567626953125
    7. 'b' → logprob: -5.800567626953125
    8. '(pow' → logprob: -5.800567626953125
    9. 'B' → logprob: -6.050567626953125
    10. ' b' → logprob: -6.175567626953125

Token 502: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16833381354808807
    2. ' (' → logprob: -2.1683337688446045
    3. '2' → logprob: -3.5433337688446045
    4. ')' → logprob: -6.418334007263184
    5. 'M' → logprob: -6.543334007263184
    6. 'B' → logprob: -6.793334007263184
    7. '(
' → logprob: -6.918334007263184
    8. 'pow' → logprob: -6.918334007263184
    9. ' ' → logprob: -7.293334007263184
    10. '10' → logprob: -7.418334007263184

Token 503: '^(' (ID: 32612)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.38029229640960693
    2. ',' → logprob: -1.380292296409607
    3. ' **' → logprob: -3.1302924156188965
    4. ')' → logprob: -4.2552924156188965
    5. '**,' → logprob: -5.5052924156188965
    6. ' ,' → logprob: -6.8802924156188965
    7. '(' → logprob: -8.005291938781738
    8. 'pow' → logprob: -8.130291938781738
    9. '(pow' → logprob: -8.255291938781738
    10. '),' → logprob: -8.630291938781738

Token 504: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009134937077760696
    2. ' i' → logprob: -4.884134769439697
    3. '(i' → logprob: -6.634134769439697
    4. ' (' → logprob: -9.009135246276855
    5. '   ' → logprob: -9.884135246276855
    6. ' ' → logprob: -10.759135246276855
    7. '(' → logprob: -11.884135246276855
    8. '  ' → logprob: -12.884135246276855
    9. '{i' → logprob: -13.009135246276855
    10. '
' → logprob: -13.634135246276855

Token 505: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013278567930683494
    2. ' -' → logprob: -6.626327991485596
    3. ')' → logprob: -14.376327514648438
    4. '(' → logprob: -15.126327514648438
    5. ' ' → logprob: -15.251327514648438
    6. '1' → logprob: -15.626327514648438
    7. ')-' → logprob: -15.876327514648438
    8. '-
' → logprob: -16.376327514648438
    9. '   ' → logprob: -16.376327514648438
    10. '[' → logprob: -16.626327514648438

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04464148357510567
    2. '-' → logprob: -3.4196414947509766
    3. '(' → logprob: -4.669641494750977
    4. '(i' → logprob: -7.419641494750977
    5. ' (' → logprob: -7.919641494750977
    6. ' ' → logprob: -8.294641494750977
    7. ')' → logprob: -8.919641494750977
    8. ' -' → logprob: -9.169641494750977
    9. 'i' → logprob: -10.169641494750977
    10. '   ' → logprob: -10.669641494750977

Token 507: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6352402567863464
    2. ')' → logprob: -0.7602402567863464
    3. ' ,' → logprob: -6.510240077972412
    4. '),' → logprob: -7.510240077972412
    5. ' )' → logprob: -8.76024055480957
    6. ')
' → logprob: -8.76024055480957
    7. '   ' → logprob: -9.26024055480957
    8. '       ' → logprob: -10.13524055480957
    9. ')%' → logprob: -10.13524055480957
    10. ')+' → logprob: -11.26024055480957

Token 508: ' modulo' (ID: 112372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2268737256526947
    2. ' *' → logprob: -1.726873755455017
    3. ',' → logprob: -4.726873874664307
    4. ' )' → logprob: -5.226873874664307
    5. '*' → logprob: -5.351873874664307
    6. ' ,' → logprob: -6.476873874664307
    7. '),' → logprob: -6.726873874664307
    8. '   ' → logprob: -6.976873874664307
    9. '       ' → logprob: -7.226873874664307
    10. '<|end|>' → logprob: -7.351873874664307

Token 509: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0007112398743629456
    2. ' M' → logprob: -7.250711441040039
    3. ')' → logprob: -14.875711441040039
    4. '(M' → logprob: -15.000711441040039
    5. '   ' → logprob: -16.12571144104004
    6. ' ' → logprob: -16.37571144104004
    7. '10' → logprob: -16.37571144104004
    8. '(' → logprob: -16.62571144104004
    9. '           ' → logprob: -17.12571144104004
    10. ' ' → logprob: -17.37571144104004

Token 510: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2462111860513687
    2. ' *' → logprob: -2.746211290359497
    3. '       ' → logprob: -2.871211290359497
    4. '   ' → logprob: -3.121211290359497
    5. '*' → logprob: -3.621211290359497
    6. ')
' → logprob: -4.246211051940918
    7. 'dou' → logprob: -5.746211051940918
    8. ')*' → logprob: -6.121211051940918
    9. ',' → logprob: -6.246211051940918
    10. ' )' → logprob: -7.246211051940918

Token 511: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4046573042869568
    2. 'dou' → logprob: -1.2796573638916016
    3. '       ' → logprob: -3.1546573638916016
    4. '```' → logprob: -5.154657363891602
    5. ')' → logprob: -6.404657363891602
    6. '*' → logprob: -7.279657363891602
    7. ' doubling' → logprob: -7.404657363891602
    8. ',' → logprob: -7.529657363891602
    9. ' *' → logprob: -8.279657363891602
    10. 'for' → logprob: -8.279657363891602

Token 512: ' #' (ID: 1069)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.2732653021812439
    2. '       ' → logprob: -1.7732653617858887
    3. '   ' → logprob: -2.7732653617858887
    4. 'd' → logprob: -6.023265361785889
    5. '```' → logprob: -7.023265361785889
    6. '(d' → logprob: -7.523265361785889
    7. 'for' → logprob: -7.523265361785889
    8. ')' → logprob: -7.773265361785889
    9. ' doubling' → logprob: -7.773265361785889
    10. '           ' → logprob: -7.898265361785889

Token 513: ' On' (ID: 2160)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.10047493875026703
    2. '   ' → logprob: -2.9754748344421387
    3. '       ' → logprob: -3.8504748344421387
    4. ' doubling' → logprob: -3.9754748344421387
    5. 'd' → logprob: -6.475474834442139
    6. '(d' → logprob: -6.850474834442139
    7. '```' → logprob: -8.225475311279297
    8. '           ' → logprob: -8.350475311279297
    9. ' (' → logprob: -8.850475311279297
    10. 'for' → logprob: -8.850475311279297

Token 514: ' multipl' (ID: 44269)
  Prédit: ' multipl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multipl' → logprob: -0.284950852394104
    2. ')' → logprob: -2.6599507331848145
    3. 'mult' → logprob: -3.0349507331848145
    4. ' +=' → logprob: -3.6599507331848145
    5. '*' → logprob: -4.4099507331848145
    6. ' continue' → logprob: -4.4099507331848145
    7. 'dou' → logprob: -4.6599507331848145
    8. 'multiply' → logprob: -4.6599507331848145
    9. 'multip' → logprob: -4.7849507331848145
    10. 'contin' → logprob: -4.9099507331848145

Token 515: 'ie' (ID: 396)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -1.0375044345855713
    2. 'ie' → logprob: -1.2875044345855713
    3. 'pow' → logprob: -2.0375044345855713
    4. 'e' → logprob: -2.2875044345855713
    5. '(' → logprob: -2.5375044345855713
    6. 'le' → logprob: -4.162504196166992
    7. 'ies' → logprob: -4.537504196166992
    8. '((' → logprob: -5.412504196166992
    9. '(p' → logprob: -5.912504196166992
    10. '   ' → logprob: -6.287504196166992

Token 516: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5497108697891235
    2. '(pow' → logprob: -1.6747108697891235
    3. '(b' → logprob: -2.049710750579834
    4. ' (' → logprob: -2.174710750579834
    5. '(a' → logprob: -2.799710750579834
    6. '(B' → logprob: -3.174710750579834
    7. '(d' → logprob: -3.299710750579834
    8. '       ' → logprob: -3.424710750579834
    9. '(line' → logprob: -3.799710750579834
    10. ' pow' → logprob: -4.049710750579834

Token 517: ' pow' (ID: 9779)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11635856330394745
    2. 'b' → logprob: -2.616358518600464
    3. '(a' → logprob: -3.866358518600464
    4. ' a' → logprob: -4.616358757019043
    5. 'A' → logprob: -6.616358757019043
    6. '(b' → logprob: -6.866358757019043
    7. ' b' → logprob: -6.866358757019043
    8. 'B' → logprob: -7.116358757019043
    9. '((' → logprob: -7.116358757019043
    10. '   ' → logprob: -8.616358757019043

Token 518: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00790423434227705
    2. '(a' → logprob: -5.132904052734375
    3. '(A' → logprob: -6.632904052734375
    4. '10' → logprob: -7.757904052734375
    5. '(B' → logprob: -9.382904052734375
    6. 'a' → logprob: -9.882904052734375
    7. '(pow' → logprob: -10.507904052734375
    8. '((' → logprob: -11.132904052734375
    9. '(L' → logprob: -11.382904052734375
    10. '(l' → logprob: -11.632904052734375

Token 519: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3832174837589264
    2. '(' → logprob: -1.258217453956604
    3. 'a' → logprob: -3.7582175731658936
    4. '(a' → logprob: -4.6332173347473145
    5. 'pow' → logprob: -7.6332173347473145
    6. 'A' → logprob: -8.883217811584473
    7. '(pow' → logprob: -8.883217811584473
    8. '((' → logprob: -9.508217811584473
    9. 'part' → logprob: -10.508217811584473
    10. '```' → logprob: -10.633217811584473

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29578718543052673
    2. ',l' → logprob: -1.4207872152328491
    3. '(l' → logprob: -4.295787334442139
    4. 'l' → logprob: -7.795787334442139
    5. '(' → logprob: -8.29578685760498
    6. ',(' → logprob: -9.42078685760498
    7. ' ,' → logprob: -10.29578685760498
    8. ',
' → logprob: -10.29578685760498
    9. ')' → logprob: -10.54578685760498
    10. ',a' → logprob: -11.42078685760498

Token 521: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07377436757087708
    2. '(l' → logprob: -2.8237743377685547
    3. ' l' → logprob: -5.698774337768555
    4. '(' → logprob: -5.948774337768555
    5. '(a' → logprob: -6.448774337768555
    6. ' (' → logprob: -6.448774337768555
    7. 'a' → logprob: -6.698774337768555
    8. '   ' → logprob: -8.198774337768555
    9. 'b' → logprob: -8.198774337768555
    10. '((' → logprob: -8.323774337768555

Token 522: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10680019110441208
    2. ' *' → logprob: -2.481800079345703
    3. '*(' → logprob: -4.231800079345703
    4. ',' → logprob: -6.231800079345703
    5. '*b' → logprob: -7.981800079345703
    6. '*,' → logprob: -8.481800079345703
    7. '   ' → logprob: -8.856800079345703
    8. ')' → logprob: -8.856800079345703
    9. '*n' → logprob: -9.606800079345703
    10. '*a' → logprob: -9.856800079345703

Token 523: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007508194539695978
    2. '2' → logprob: -5.757508277893066
    3. ' (' → logprob: -5.757508277893066
    4. '(i' → logprob: -6.882508277893066
    5. '((' → logprob: -10.007508277893066
    6. '   ' → logprob: -10.257508277893066
    7. ' ' → logprob: -11.632508277893066
    8. 'i' → logprob: -11.882508277893066
    9. 'pow' → logprob: -12.007508277893066
    10. '       ' → logprob: -12.257508277893066

Token 524: '**' (ID: 410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27972981333732605
    2. '(i' → logprob: -2.1547298431396484
    3. '**' → logprob: -2.5297298431396484
    4. ' (' → logprob: -3.5297298431396484
    5. ' *' → logprob: -5.154729843139648
    6. '*(' → logprob: -5.279729843139648
    7. '*' → logprob: -5.904729843139648
    8. ' **' → logprob: -6.404729843139648
    9. '           ' → logprob: -6.779729843139648
    10. '   ' → logprob: -6.904729843139648

Token 525: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.000250491953920573
    2. '(' → logprob: -8.750250816345215
    3. ' (' → logprob: -9.375250816345215
    4. '((' → logprob: -12.625250816345215
    5. 'i' → logprob: -13.125250816345215
    6. '   ' → logprob: -14.000250816345215
    7. '           ' → logprob: -15.500250816345215
    8. '       ' → logprob: -15.750250816345215
    9. '[i' → logprob: -15.875250816345215
    10. '(
' → logprob: -16.5002498626709

Token 526: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0004083891399204731
    2. 'i' → logprob: -8.250408172607422
    3. ' (' → logprob: -9.375408172607422
    4. '(' → logprob: -9.750408172607422
    5. '   ' → logprob: -13.625408172607422
    6. '(
' → logprob: -14.125408172607422
    7. '{i' → logprob: -14.875408172607422
    8. '[i' → logprob: -15.125408172607422
    9. '((' → logprob: -15.375408172607422
    10. '           ' → logprob: -15.750408172607422

Token 527: '-' (ID: 12)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07961123436689377
    2. '-' → logprob: -2.704611301422119
    3. '   ' → logprob: -5.954611301422119
    4. '(i' → logprob: -6.079611301422119
    5. ' (' → logprob: -6.329611301422119
    6. '       ' → logprob: -6.829611301422119
    7. '(-' → logprob: -7.454611301422119
    8. '           ' → logprob: -7.829611301422119
    9. '[' → logprob: -7.829611301422119
    10. ' -' → logprob: -8.954610824584961

Token 528: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.313396692276001
    2. '(' → logprob: -1.313396692276001
    3. ' (' → logprob: -9.563396453857422
    4. '
' → logprob: -11.313396453857422
    5. 'i' → logprob: -11.313396453857422
    6. '(
' → logprob: -11.563396453857422
    7. '(prev' → logprob: -11.938396453857422
    8. '   ' → logprob: -12.813396453857422
    9. '
' → logprob: -13.188396453857422
    10. '(n' → logprob: -13.313396453857422

Token 529: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2041144073009491
    2. '),' → logprob: -1.7041144371032715
    3. '(' → logprob: -6.8291144371032715
    4. '(i' → logprob: -7.2041144371032715
    5. ' ,' → logprob: -8.079113960266113
    6. ')' → logprob: -9.079113960266113
    7. '```' → logprob: -9.704113960266113
    8. '   ' → logprob: -9.829113960266113
    9. ',),' → logprob: -10.204113960266113
    10. ' ' → logprob: -10.204113960266113

Token 530: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0007728204363957047
    2. ' M' → logprob: -7.250772953033447
    3. '   ' → logprob: -10.750772476196289
    4. '(M' → logprob: -11.375772476196289
    5. 'l' → logprob: -12.000772476196289
    6. '       ' → logprob: -12.625772476196289
    7. '(' → logprob: -12.875772476196289
    8. '           ' → logprob: -12.875772476196289
    9. '10' → logprob: -13.000772476196289
    10. 'B' → logprob: -13.375772476196289

Token 531: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031648728996515274
    2. ')' → logprob: -3.906648635864258
    3. '),' → logprob: -4.656648635864258
    4. ' ,' → logprob: -7.406648635864258
    5. '       ' → logprob: -7.531648635864258
    6. '   ' → logprob: -8.531648635864258
    7. '           ' → logprob: -9.281648635864258
    8. ' ' → logprob: -10.906648635864258
    9. ')
' → logprob: -11.531648635864258
    10. '         ' → logprob: -11.531648635864258

Token 532: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07661062479019165
    2. ',' → logprob: -3.326610565185547
    3. '*' → logprob: -4.076610565185547
    4. '       ' → logprob: -4.451610565185547
    5. ')*' → logprob: -5.951610565185547
    6. '   ' → logprob: -6.076610565185547
    7. '),' → logprob: -6.451610565185547
    8. ' *' → logprob: -6.576610565185547
    9. ' )' → logprob: -7.826610565185547
    10. '           ' → logprob: -8.076610565185547

Token 533: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6576676964759827
    2. ',' → logprob: -0.7826676964759827
    3. '),' → logprob: -4.782667636871338
    4. 'B' → logprob: -5.657667636871338
    5. ')*' → logprob: -5.907667636871338
    6. ' ,' → logprob: -6.282667636871338
    7. '*' → logprob: -6.657667636871338
    8. ' )' → logprob: -6.782667636871338
    9. '))' → logprob: -6.907667636871338
    10. 'a' → logprob: -7.032667636871338

Token 534: ''est' (ID: 6616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025004297494888306
    2. '),' → logprob: -4.5250043869018555
    3. '*' → logprob: -4.6500043869018555
    4. ',' → logprob: -6.5250043869018555
    5. '%' → logprob: -6.6500043869018555
    6. '#' → logprob: -7.5250043869018555
    7. '(' → logprob: -8.525004386901855
    8. '**' → logprob: -8.775004386901855
    9. ')%' → logprob: -9.275004386901855
    10. ' )' → logprob: -9.400004386901855

Token 535: '-à' (ID: 56297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08935871720314026
    2. '(' → logprob: -2.7143588066101074
    3. 'a' → logprob: -5.714358806610107
    4. '           ' → logprob: -5.714358806610107
    5. '(a' → logprob: -5.964358806610107
    6. '),' → logprob: -6.464358806610107
    7. 'pow' → logprob: -6.714358806610107
    8. ')*' → logprob: -6.839358806610107
    9. ' )' → logprob: -7.214358806610107
    10. 'l' → logprob: -7.339358806610107

Token 536: '-dire' (ID: 76064)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.19595348834991455
    2. '10' → logprob: -2.945953369140625
    3. 'pow' → logprob: -3.445953369140625
    4. 'a' → logprob: -4.570953369140625
    5. 'part' → logprob: -4.570953369140625
    6. ')' → logprob: -4.570953369140625
    7. 'la' → logprob: -4.695953369140625
    8. '(' → logprob: -4.820953369140625
    9. '-à' → logprob: -4.820953369140625
    10. '-a' → logprob: -5.320953369140625

Token 537: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8556908369064331
    2. 'pow' → logprob: -1.355690836906433
    3. '(pow' → logprob: -2.1056909561157227
    4. ' (' → logprob: -2.9806909561157227
    5. 'b' → logprob: -3.8556909561157227
    6. ' pow' → logprob: -4.230690956115723
    7. '(a' → logprob: -4.230690956115723
    8. 'l' → logprob: -4.355690956115723
    9. 'a' → logprob: -4.355690956115723
    10. 'A' → logprob: -4.480690956115723

Token 538: ' dé' (ID: 2393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12559571862220764
    2. '(' → logprob: -2.625595808029175
    3. ' )' → logprob: -4.250595569610596
    4. 'pow' → logprob: -5.125595569610596
    5. '**' → logprob: -5.375595569610596
    6. '*' → logprob: -5.375595569610596
    7. ',' → logprob: -5.625595569610596
    8. '),' → logprob: -5.875595569610596
    9. ' ' → logprob: -6.875595569610596
    10. 'l' → logprob: -7.000595569610596

Token 539: 'cal' (ID: 5842)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9991294145584106
    2. '**' → logprob: -1.3741294145584106
    3. 'l' → logprob: -1.9991294145584106
    4. 'pow' → logprob: -2.499129295349121
    5. '   ' → logprob: -3.499129295349121
    6. 'éc' → logprob: -4.124129295349121
    7. ' )' → logprob: -4.124129295349121
    8. '(l' → logprob: -4.749129295349121
    9. '       ' → logprob: -4.999129295349121
    10. '^' → logprob: -4.999129295349121

Token 540: 'age' (ID: 477)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5783445835113525
    2. ')' → logprob: -1.5783445835113525
    3. '           ' → logprob: -2.5783445835113525
    4. '(' → logprob: -2.9533445835113525
    5. '       ' → logprob: -3.8283445835113525
    6. 'age' → logprob: -3.9533445835113525
    7. ' *' → logprob: -4.578344345092773
    8. '),' → logprob: -4.703344345092773
    9. '*(' → logprob: -4.703344345092773
    10. ' )' → logprob: -4.828344345092773

Token 541: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04952535778284073
    2. ')' → logprob: -3.299525260925293
    3. '   ' → logprob: -6.049525260925293
    4. '       ' → logprob: -6.424525260925293
    5. '=' → logprob: -6.799525260925293
    6. '           ' → logprob: -7.049525260925293
    7. '10' → logprob: -7.299525260925293
    8. '),' → logprob: -7.424525260925293
    9. '(
' → logprob: -7.424525260925293
    10. '    ' → logprob: -8.174525260925293

Token 542: ' chiffres' (ID: 105565)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29924821853637695
    2. '10' → logprob: -1.799248218536377
    3. 'pow' → logprob: -3.174248218536377
    4. 'a' → logprob: -4.174248218536377
    5. '(pow' → logprob: -4.299248218536377
    6. '(a' → logprob: -5.174248218536377
    7. 'l' → logprob: -5.424248218536377
    8. ' (' → logprob: -5.799248218536377
    9. 'b' → logprob: -5.924248218536377
    10. '1' → logprob: -6.299248218536377

Token 543: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007050548680126667
    2. '),' → logprob: -5.882050514221191
    3. '       ' → logprob: -6.632050514221191
    4. ' )' → logprob: -6.757050514221191
    5. '           ' → logprob: -7.132050514221191
    6. '   ' → logprob: -7.507050514221191
    7. '*' → logprob: -9.257050514221191
    8. ',' → logprob: -9.757050514221191
    9. '))' → logprob: -9.757050514221191
    10. '**' → logprob: -10.007050514221191

Token 544: ' base' (ID: 3611)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009897394105792046
    2. '(' → logprob: -5.259897232055664
    3. '(l' → logprob: -6.384897232055664
    4. ' l' → logprob: -6.759897232055664
    5. '10' → logprob: -7.009897232055664
    6. ')' → logprob: -8.134897232055664
    7. ' (' → logprob: -8.509897232055664
    8. '           ' → logprob: -9.384897232055664
    9. '(
' → logprob: -9.634897232055664
    10. '
' → logprob: -10.259897232055664

Token 545: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.805981972021982e-05
    2. ' ' → logprob: -9.62509822845459
    3. '```' → logprob: -11.12509822845459
    4. ')' → logprob: -11.87509822845459
    5. '(' → logprob: -12.62509822845459
    6. '   ' → logprob: -12.75009822845459
    7. 'M' → logprob: -13.25009822845459
    8. '1' → logprob: -14.00009822845459
    9. '``' → logprob: -14.87509822845459
    10. '`' → logprob: -15.12509822845459

Token 546: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00016587569552939385
    2. 'M' → logprob: -8.750165939331055
    3. '```' → logprob: -12.625165939331055
    4. '100' → logprob: -12.750165939331055
    5. ' ' → logprob: -14.750165939331055
    6. '1' → logprob: -15.625165939331055
    7. 'A' → logprob: -15.750165939331055
    8. ' M' → logprob: -16.125165939331055
    9. ')' → logprob: -16.125165939331055
    10. '
' → logprob: -16.500165939331055

Token 547: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02041984722018242
    2. '       ' → logprob: -4.020420074462891
    3. '),' → logprob: -6.895420074462891
    4. '   ' → logprob: -8.02042007446289
    5. ' )' → logprob: -8.52042007446289
    6. '))' → logprob: -8.52042007446289
    7. ')*' → logprob: -8.77042007446289
    8. '           ' → logprob: -9.14542007446289
    9. ')
' → logprob: -9.52042007446289
    10. ')+' → logprob: -9.77042007446289

Token 548: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1847955882549286
    2. ' *' → logprob: -3.184795618057251
    3. '           ' → logprob: -3.434795618057251
    4. ')' → logprob: -3.559795618057251
    5. ' doubling' → logprob: -4.309795379638672
    6. '*' → logprob: -4.434795379638672
    7. '        ' → logprob: -4.684795379638672
    8. '(' → logprob: -5.309795379638672
    9. ' +' → logprob: -5.434795379638672
    10. 'dou' → logprob: -5.684795379638672

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5515413880348206
    2. ' *' → logprob: -1.3015413284301758
    3. ')' → logprob: -2.551541328430176
    4. '*' → logprob: -3.176541328430176
    5. '           ' → logprob: -4.301541328430176
    6. '#' → logprob: -5.676541328430176
    7. ' #' → logprob: -6.051541328430176
    8. ' and' → logprob: -6.051541328430176
    9. ' +' → logprob: -6.176541328430176
    10. ',' → logprob: -6.301541328430176

Token 550: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6559441685676575
    2. ' *' → logprob: -1.5309441089630127
    3. '*' → logprob: -2.1559441089630127
    4. ' +' → logprob: -2.6559441089630127
    5. ')' → logprob: -2.9059441089630127
    6. '+' → logprob: -4.280944347381592
    7. '   ' → logprob: -5.405944347381592
    8. ' ' → logprob: -6.905944347381592
    9. '           ' → logprob: -7.030944347381592
    10. '        ' → logprob: -7.655944347381592

Token 551: ' puis' (ID: 18766)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17431776225566864
    2. '   ' → logprob: -3.2993178367614746
    3. '           ' → logprob: -3.9243178367614746
    4. ')' → logprob: -4.299317836761475
    5. ' a' → logprob: -4.299317836761475
    6. ' b' → logprob: -4.674317836761475
    7. '2' → logprob: -4.799317836761475
    8. 'a' → logprob: -5.049317836761475
    9. ' doubling' → logprob: -5.049317836761475
    10. 'b' → logprob: -5.299317836761475

Token 552: ' on' (ID: 402)
  Prédit: ' doubling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doubling' → logprob: -0.9815502762794495
    2. ' (' → logprob: -1.9815502166748047
    3. 'dou' → logprob: -1.9815502166748047
    4. '(' → logprob: -2.3565502166748047
    5. ' l' → logprob: -3.3565502166748047
    6. 'b' → logprob: -3.4815502166748047
    7. 'l' → logprob: -3.8565502166748047
    8. ' a' → logprob: -4.106550216674805
    9. ' b' → logprob: -4.231550216674805
    10. ' pow' → logprob: -4.356550216674805

Token 553: ' multipl' (ID: 44269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1840373277664185
    2. '*' → logprob: -2.059037208557129
    3. ' multipl' → logprob: -2.059037208557129
    4. '+=' → logprob: -2.309037208557129
    5. 'multiply' → logprob: -2.434037208557129
    6. '+' → logprob: -3.184037208557129
    7. 'mul' → logprob: -3.559037208557129
    8. '   ' → logprob: -3.809037208557129
    9. ' multiply' → logprob: -3.934037208557129
    10. '(' → logprob: -4.059037208557129

Token 554: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.14097820222377777
    2. 'ies' → logprob: -2.3909780979156494
    3. 'pow' → logprob: -4.5159783363342285
    4. 'le' → logprob: -5.1409783363342285
    5. 'e' → logprob: -5.2659783363342285
    6. '(' → logprob: -5.3909783363342285
    7. 'é' → logprob: -6.0159783363342285
    8. 'ue' → logprob: -6.1409783363342285
    9. 'ipl' → logprob: -6.5159783363342285
    10. 'ule' → logprob: -6.6409783363342285

Token 555: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.392173707485199
    2. ' by' → logprob: -2.5171737670898438
    3. '(pow' → logprob: -2.8921737670898438
    4. 'by' → logprob: -3.0171737670898438
    5. ' (' → logprob: -3.0171737670898438
    6. ')' → logprob: -3.6421737670898438
    7. 'dou' → logprob: -4.142173767089844
    8. ',' → logprob: -4.767173767089844
    9. 'pow' → logprob: -4.767173767089844
    10. '(
' → logprob: -5.017173767089844

Token 556: ' doubling' (ID: 122384)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38901486992836
    2. 'a' → logprob: -1.2640148401260376
    3. ' b' → logprob: -4.014014720916748
    4. ' a' → logprob: -4.889014720916748
    5. '(a' → logprob: -5.139014720916748
    6. '((' → logprob: -5.889014720916748
    7. '(b' → logprob: -6.139014720916748
    8. 'n' → logprob: -6.389014720916748
    9. '   ' → logprob: -7.889014720916748
    10. '(' → logprob: -8.264015197753906

Token 557: 'const' (ID: 1671)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0008073674980551004
    2. 'const' → logprob: -7.125807285308838
    3. ' line' → logprob: -14.250807762145996
    4. 'linear' → logprob: -14.500807762145996
    5. 'lin' → logprob: -15.125807762145996
    6. '
' → logprob: -15.500807762145996
    7. 'ligne' → logprob: -15.750807762145996
    8. '   ' → logprob: -15.875807762145996
    9. '(line' → logprob: -16.12580680847168
    10. '

' → logprob: -16.12580680847168

Token 558: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.625004768371582
    3. '   ' → logprob: -14.250004768371582
    4. '[j' → logprob: -15.125004768371582
    5. '[
' → logprob: -15.250004768371582
    6. ' [' → logprob: -15.875004768371582
    7. '```' → logprob: -15.875004768371582
    8. '(i' → logprob: -16.3750057220459
    9. '[(' → logprob: -16.6250057220459
    10. 'i' → logprob: -16.8750057220459

Token 559: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005519599071703851
    2. ' -' → logprob: -7.875552177429199
    3. '[' → logprob: -9.2505521774292
    4. '[i' → logprob: -9.7505521774292
    5. '   ' → logprob: -11.8755521774292
    6. ']' → logprob: -12.5005521774292
    7. '[-' → logprob: -12.6255521774292
    8. '```' → logprob: -13.6255521774292
    9. '       ' → logprob: -14.1255521774292
    10. 'i' → logprob: -14.3755521774292

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.435139898210764e-05
    2. '-' → logprob: -9.625083923339844
    3. '   ' → logprob: -11.875083923339844
    4. '```' → logprob: -12.000083923339844
    5. ' ' → logprob: -12.625083923339844
    6. 'i' → logprob: -14.500083923339844
    7. '  ' → logprob: -15.375083923339844
    8. '' → logprob: -15.750083923339844
    9. ']' → logprob: -15.937583923339844
    10. '(' → logprob: -16.062583923339844

Token 561: '].' (ID: 1651)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -1.0589925050735474
    2. ')' → logprob: -1.1839925050735474
    3. ']' → logprob: -1.1839925050735474
    4. '],' → logprob: -3.433992385864258
    5. '       ' → logprob: -5.808992385864258
    6. '   ' → logprob: -6.308992385864258
    7. '[i' → logprob: -6.558992385864258
    8. '),' → logprob: -6.683992385864258
    9. ' )' → logprob: -8.183992385864258
    10. ',' → logprob: -8.683992385864258

Token 562: ' Ce' (ID: 14228)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39537808299064636
    2. ')' → logprob: -2.0203781127929688
    3. '   ' → logprob: -2.0203781127929688
    4. '*' → logprob: -4.145378112792969
    5. 'dou' → logprob: -4.395378112792969
    6. '           ' → logprob: -5.020378112792969
    7. 'line' → logprob: -5.270378112792969
    8. ',' → logprob: -5.520378112792969
    9. '=' → logprob: -5.895378112792969
    10. ' *' → logprob: -6.020378112792969

Token 563: ' terme' (ID: 42959)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019831454381346703
    2. '%' → logprob: -4.269831657409668
    3. ' )' → logprob: -6.019831657409668
    4. '+' → logprob: -7.019831657409668
    5. '*' → logprob: -7.144831657409668
    6. ' %' → logprob: -8.394831657409668
    7. '[' → logprob: -8.519831657409668
    8. '),' → logprob: -8.769831657409668
    9. ',' → logprob: -8.769831657409668
    10. ')%' → logprob: -8.894831657409668

Token 564: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3107945919036865
    2. '       ' → logprob: -1.6857945919036865
    3. '+' → logprob: -3.6857945919036865
    4. ' +' → logprob: -4.685794830322266
    5. ' )' → logprob: -4.810794830322266
    6. ' *' → logprob: -4.935794830322266
    7. '*' → logprob: -5.060794830322266
    8. ')%' → logprob: -5.185794830322266
    9. '           ' → logprob: -5.685794830322266
    10. '   ' → logprob: -5.685794830322266

Token 565: ' ajouté' (ID: 127784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1306229680776596
    2. ')%' → logprob: -3.3806228637695312
    3. '%' → logprob: -3.5056228637695312
    4. '*' → logprob: -4.130622863769531
    5. ')*' → logprob: -4.380622863769531
    6. ' )' → logprob: -4.755622863769531
    7. '+' → logprob: -5.130622863769531
    8. '       ' → logprob: -6.130622863769531
    9. 'a' → logprob: -6.630622863769531
    10. ')+' → logprob: -6.755622863769531

Token 566: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4297833442687988
    2. '           ' → logprob: -1.5547833442687988
    3. '(' → logprob: -1.8047833442687988
    4. '       ' → logprob: -2.304783344268799
    5. '+=' → logprob: -2.554783344268799
    6. '+' → logprob: -2.804783344268799
    7. '(
' → logprob: -3.054783344268799
    8. ' +=' → logprob: -3.429783344268799
    9. ',' → logprob: -3.554783344268799
    10. '   ' → logprob: -4.304783344268799

Token 567: ' la' (ID: 557)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.17384198307991028
    2. 'dou' → logprob: -2.548841953277588
    3. '(
' → logprob: -2.673841953277588
    4. '(' → logprob: -5.048841953277588
    5. '((' → logprob: -6.298841953277588
    6. ' (' → logprob: -6.423841953277588
    7. '   ' → logprob: -7.423841953277588
    8. 'd' → logprob: -7.548841953277588
    9. '       ' → logprob: -7.673841953277588
    10. ' doubling' → logprob: -8.548842430114746

Token 568: ' précédente' (ID: 177319)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.024104801937937737
    2. '(' → logprob: -4.399104595184326
    3. 'dou' → logprob: -5.024104595184326
    4. '(
' → logprob: -5.524104595184326
    5. '((' → logprob: -7.274104595184326
    6. '(line' → logprob: -9.899105072021484
    7. 'd' → logprob: -10.024105072021484
    8. '(b' → logprob: -10.149105072021484
    9. ' (' → logprob: -10.274105072021484
    10. '(a' → logprob: -11.024105072021484

Token 569: ' valeur' (ID: 41664)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.028462346643209457
    2. 'line' → logprob: -4.2784624099731445
    3. '[' → logprob: -4.6534624099731445
    4. '[i' → logprob: -6.1534624099731445
    5. 'ligne' → logprob: -7.1534624099731445
    6. '[line' → logprob: -7.4034624099731445
    7. '[d' → logprob: -7.5284624099731445
    8. ' doubling' → logprob: -9.153462409973145
    9. 'value' → logprob: -9.278462409973145
    10. ']' → logprob: -9.403462409973145

Token 570: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7061754465103149
    2. '[d' → logprob: -1.706175446510315
    3. '       ' → logprob: -2.3311753273010254
    4. '[' → logprob: -2.3311753273010254
    5. 'dou' → logprob: -2.5811753273010254
    6. '(d' → logprob: -4.206175327301025
    7. 'de' → logprob: -4.331175327301025
    8. '[i' → logprob: -4.331175327301025
    9. '           ' → logprob: -5.581175327301025
    10. '[line' → logprob: -6.456175327301025

Token 571: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -1.7432603272027336e-06
    2. ' doubling' → logprob: -13.500001907348633
    3. 'double' → logprob: -17.000001907348633
    4. '(d' → logprob: -17.250001907348633
    5. 'Dou' → logprob: -17.500001907348633
    6. 'd' → logprob: -17.625001907348633
    7. '```' → logprob: -17.875001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '`' → logprob: -18.250001907348633
    10. '
' → logprob: -18.375001907348633

Token 572: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00013154871703591198
    2. 'const' → logprob: -9.000131607055664
    3. 'ligne' → logprob: -12.375131607055664
    4. ' line' → logprob: -13.375131607055664
    5. 'linear' → logprob: -14.000131607055664
    6. 'lin' → logprob: -14.875131607055664
    7. '```' → logprob: -15.875131607055664
    8. '
' → logprob: -15.875131607055664
    9. '(line' → logprob: -16.375131607055664
    10. '	line' → logprob: -16.500131607055664

Token 573: ' multip' (ID: 17524)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.73183855926618e-05
    2. '       ' → logprob: -9.750077247619629
    3. '[' → logprob: -11.500077247619629
    4. ' [' → logprob: -12.375077247619629
    5. '   ' → logprob: -12.750077247619629
    6. '           ' → logprob: -14.375077247619629
    7. '[
' → logprob: -15.000077247619629
    8. '	' → logprob: -16.000078201293945
    9. '[j' → logprob: -16.125078201293945
    10. ' ' → logprob: -16.625078201293945

Token 574: 'li' (ID: 1307)
  Prédit: 'li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.8914816379547119
    2. 'plied' → logprob: -1.266481637954712
    3. 'lié' → logprob: -1.766481637954712
    4. 'lying' → logprob: -3.516481637954712
    5. 'lic' → logprob: -3.766481637954712
    6. 'licated' → logprob: -4.141481399536133
    7. 'lied' → logprob: -4.391481399536133
    8. 'lication' → logprob: -4.641481399536133
    9. 'ipl' → logprob: -4.891481399536133
    10. '   ' → logprob: -5.266481399536133

Token 575: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.49232205748558044
    2. 'ed' → logprob: -0.9923220872879028
    3. 'é' → logprob: -4.617321968078613
    4. 'e' → logprob: -6.242321968078613
    5. 'ant' → logprob: -6.492321968078613
    6. 'dou' → logprob: -6.617321968078613
    7. 'ying' → logprob: -7.117321968078613
    8. 'c' → logprob: -7.742321968078613
    9. 'quée' → logprob: -8.617321968078613
    10. 'p' → logprob: -8.867321968078613

Token 576: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2291085720062256
    2. '(' → logprob: -1.6041085720062256
    3. 'dou' → logprob: -1.6041085720062256
    4. 'par' → logprob: -2.3541085720062256
    5. '(
' → logprob: -2.9791085720062256
    6. '       ' → logprob: -3.2291085720062256
    7. ' par' → logprob: -3.2291085720062256
    8. ')' → logprob: -4.229108810424805
    9. 'by' → logprob: -4.229108810424805
    10. 'import' → logprob: -4.604108810424805

Token 577: '
' (ID: 198)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.23223276436328888
    2. 'pow' → logprob: -1.7322328090667725
    3. ' doubling' → logprob: -4.232232570648193
    4. ' pow' → logprob: -4.982232570648193
    5. 'd' → logprob: -6.232232570648193
    6. '   ' → logprob: -6.482232570648193
    7. '(' → logprob: -6.732232570648193
    8. '(pow' → logprob: -6.732232570648193
    9. '           ' → logprob: -7.357232570648193
    10. '       ' → logprob: -7.482232570648193

Token 578: '       ' (ID: 309)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.3378848433494568
    2. '10' → logprob: -1.8378849029541016
    3. '(' → logprob: -2.9628849029541016
    4. 'pow' → logprob: -3.3378849029541016
    5. ' doubling' → logprob: -4.087884902954102
    6. ' (' → logprob: -4.462884902954102
    7. '   ' → logprob: -5.837884902954102
    8. ' pow' → logprob: -6.462884902954102
    9. ' ' → logprob: -6.462884902954102
    10. '2' → logprob: -6.837884902954102

Token 579: ' #' (ID: 1069)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.3819535970687866
    2. 'pow' → logprob: -1.2569535970687866
    3. '10' → logprob: -4.381953716278076
    4. '(' → logprob: -4.381953716278076
    5. '(pow' → logprob: -5.256953716278076
    6. '   ' → logprob: -7.006953716278076
    7. '(d' → logprob: -8.131953239440918
    8. ' pow' → logprob: -8.506953239440918
    9. 'd' → logprob: -8.506953239440918
    10. '((' → logprob: -8.631953239440918

Token 580: ' (' (ID: 350)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.02648015320301056
    2. 'pow' → logprob: -3.776480197906494
    3. ' doubling' → logprob: -6.401480197906494
    4. '(' → logprob: -7.776480197906494
    5. '(pow' → logprob: -7.776480197906494
    6. ' pow' → logprob: -8.651479721069336
    7. '   ' → logprob: -8.776479721069336
    8. '10' → logprob: -8.776479721069336
    9. '((' → logprob: -9.776479721069336
    10. '(d' → logprob: -9.776479721069336

Token 581: 'pow' (ID: 30304)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.009217155165970325
    2. 'pow' → logprob: -5.009217262268066
    3. ' doubling' → logprob: -7.009217262268066
    4. '(d' → logprob: -7.509217262268066
    5. 'd' → logprob: -8.384217262268066
    6. '(' → logprob: -8.384217262268066
    7. '   ' → logprob: -8.759217262268066
    8. '(pow' → logprob: -8.884217262268066
    9. 'double' → logprob: -9.384217262268066
    10. '((' → logprob: -10.134217262268066

Token 582: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18041788041591644
    2. '(d' → logprob: -1.8054178953170776
    3. '((' → logprob: -7.930418014526367
    4. 'dou' → logprob: -8.555418014526367
    5. '10' → logprob: -9.555418014526367
    6. '(pow' → logprob: -10.680418014526367
    7. 'd' → logprob: -10.805418014526367
    8. '(
' → logprob: -12.680418014526367
    9. 'pow' → logprob: -14.180418014526367
    10. ' (' → logprob: -14.805418014526367

Token 583: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8672366142272949
    2. 'dou' → logprob: -0.8672366142272949
    3. '(' → logprob: -1.992236614227295
    4. '(d' → logprob: -4.117236614227295
    5. 'd' → logprob: -4.992236614227295
    6. '2' → logprob: -9.242237091064453
    7. '   ' → logprob: -10.117237091064453
    8. '(
' → logprob: -10.492237091064453
    9. '((' → logprob: -10.742237091064453
    10. ' doubling' → logprob: -10.992237091064453

Token 584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01573096588253975
    2. '(l' → logprob: -4.640730857849121
    3. '(' → logprob: -5.890730857849121
    4. ',l' → logprob: -5.890730857849121
    5. 'l' → logprob: -8.515730857849121
    6. ',
' → logprob: -9.515730857849121
    7. ' ,' → logprob: -9.640730857849121
    8. '```' → logprob: -10.890730857849121
    9. ',(' → logprob: -11.265730857849121
    10. '
' → logprob: -11.640730857849121

Token 585: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0018527198117226362
    2. ' l' → logprob: -7.376852512359619
    3. '   ' → logprob: -7.751852512359619
    4. '(l' → logprob: -7.876852512359619
    5. ',' → logprob: -8.501852989196777
    6. ',l' → logprob: -9.751852989196777
    7. '       ' → logprob: -10.251852989196777
    8. '    ' → logprob: -10.626852989196777
    9. '2' → logprob: -10.876852989196777
    10. '```' → logprob: -11.376852989196777

Token 586: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005632131826132536
    2. ' *' → logprob: -5.380631923675537
    3. '*(' → logprob: -7.380631923675537
    4. ',' → logprob: -8.380632400512695
    5. '   ' → logprob: -10.130632400512695
    6. ' ' → logprob: -10.505632400512695
    7. '(' → logprob: -11.005632400512695
    8. ')' → logprob: -11.255632400512695
    9. '```' → logprob: -11.255632400512695
    10. '**' → logprob: -11.380632400512695

Token 587: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.055193912237882614
    2. '(' → logprob: -2.9301939010620117
    3. ' ' → logprob: -8.430193901062012
    4. ' (' → logprob: -9.930193901062012
    5. '```' → logprob: -11.055193901062012
    6. '   ' → logprob: -11.805193901062012
    7. '1' → logprob: -11.930193901062012
    8. 'pow' → logprob: -13.180193901062012
    9. ',' → logprob: -13.430193901062012
    10. '  ' → logprob: -13.680193901062012

Token 588: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4949847459793091
    2. '(' → logprob: -0.9949847459793091
    3. '*(' → logprob: -4.7449846267700195
    4. '*' → logprob: -4.8699846267700195
    5. ' (' → logprob: -6.9949846267700195
    6. ' *' → logprob: -6.9949846267700195
    7. ' **' → logprob: -7.1199846267700195
    8. '2' → logprob: -7.6199846267700195
    9. '[' → logprob: -7.6199846267700195
    10. '```' → logprob: -8.61998462677002

Token 589: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.031760863959789276
    2. '(' → logprob: -3.5317609310150146
    3. ' (' → logprob: -6.2817606925964355
    4. 'i' → logprob: -9.281761169433594
    5. '[i' → logprob: -11.406761169433594
    6. '60' → logprob: -11.781761169433594
    7. '(
' → logprob: -11.906761169433594
    8. '
' → logprob: -12.031761169433594
    9. '   ' → logprob: -12.531761169433594
    10. '```' → logprob: -13.656761169433594

Token 590: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003486866131424904
    2. '(' → logprob: -6.128486633300781
    3. ' (' → logprob: -7.378486633300781
    4. 'i' → logprob: -7.503486633300781
    5. '   ' → logprob: -9.878486633300781
    6. '[i' → logprob: -10.753486633300781
    7. '(
' → logprob: -11.253486633300781
    8. '{i' → logprob: -11.378486633300781
    9. '1' → logprob: -11.628486633300781
    10. '
' → logprob: -12.503486633300781

Token 591: '-' (ID: 12)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.533515453338623
    2. '-' → logprob: -1.033515453338623
    3. '(i' → logprob: -3.658515453338623
    4. ' (' → logprob: -4.033515453338623
    5. '   ' → logprob: -5.408515453338623
    6. '       ' → logprob: -5.658515453338623
    7. '[' → logprob: -6.158515453338623
    8. '           ' → logprob: -6.783515453338623
    9. ' -' → logprob: -6.908515453338623
    10. '[i' → logprob: -7.283515453338623

Token 592: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1608254760503769
    2. '(i' → logprob: -1.910825490951538
    3. ' (' → logprob: -8.535825729370117
    4. '1' → logprob: -9.035825729370117
    5. '   ' → logprob: -9.660825729370117
    6. '-' → logprob: -9.785825729370117
    7. '       ' → logprob: -10.035825729370117
    8. '           ' → logprob: -10.535825729370117
    9. '(
' → logprob: -10.660825729370117
    10. '
' → logprob: -10.910825729370117

Token 593: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.38944029808044434
    2. ',' → logprob: -1.1394402980804443
    3. '   ' → logprob: -6.639440536499023
    4. '       ' → logprob: -7.889440536499023
    5. '(i' → logprob: -8.389440536499023
    6. '[i' → logprob: -8.639440536499023
    7. ' ,' → logprob: -9.014440536499023
    8. ',),' → logprob: -9.014440536499023
    9. ')' → logprob: -10.139440536499023
    10. '           ' → logprob: -10.514440536499023

Token 594: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.10053713619709015
    2. ' M' → logprob: -2.350537061691284
    3. '   ' → logprob: -9.850537300109863
    4. 'i' → logprob: -9.975537300109863
    5. ',' → logprob: -10.225537300109863
    6. ')' → logprob: -10.475537300109863
    7. ' ' → logprob: -10.725537300109863
    8. '       ' → logprob: -11.100537300109863
    9. '(M' → logprob: -11.225537300109863
    10. '    ' → logprob: -11.225537300109863

Token 595: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003552789334207773
    2. ')+' → logprob: -5.7535529136657715
    3. ' )' → logprob: -8.878552436828613
    4. '   ' → logprob: -9.628552436828613
    5. '))' → logprob: -9.753552436828613
    6. ')*' → logprob: -10.253552436828613
    7. ')
' → logprob: -11.003552436828613
    8. '```' → logprob: -11.503552436828613
    9. '       ' → logprob: -11.628552436828613
    10. '),' → logprob: -11.878552436828613

Token 596: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5606139302253723
    2. ' +' → logprob: -1.6856138706207275
    3. '+' → logprob: -2.1856138706207275
    4. '       ' → logprob: -3.0606138706207275
    5. '   ' → logprob: -3.8106138706207275
    6. '*' → logprob: -3.9356138706207275
    7. ' *' → logprob: -4.310614109039307
    8. '[' → logprob: -4.935614109039307
    9. ')*' → logprob: -4.935614109039307
    10. '))' → logprob: -5.935614109039307

Token 597: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27113714814186096
    2. 'dou' → logprob: -1.5211371183395386
    3. ' doubling' → logprob: -4.896137237548828
    4. ' ' → logprob: -5.271137237548828
    5. '(' → logprob: -6.146137237548828
    6. ' (' → logprob: -6.646137237548828
    7. ')' → logprob: -7.396137237548828
    8. '```' → logprob: -7.646137237548828
    9. '0' → logprob: -7.896137237548828
    10. '(d' → logprob: -8.521137237548828

Token 598: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.179569077678025e-05
    2. ' ' → logprob: -10.625041961669922
    3. '0' → logprob: -11.750041961669922
    4. '(' → logprob: -13.250041961669922
    5. '10' → logprob: -13.875041961669922
    6. '```' → logprob: -13.875041961669922
    7. '   ' → logprob: -14.000041961669922
    8. '2' → logprob: -14.000041961669922
    9. 'a' → logprob: -14.250041961669922
    10. 'b' → logprob: -14.375041961669922

Token 599: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11734946817159653
    2. '))' → logprob: -2.49234938621521
    3. ' )' → logprob: -4.742349624633789
    4. '       ' → logprob: -5.242349624633789
    5. ')))' → logprob: -5.992349624633789
    6. ')
' → logprob: -6.117349624633789
    7. '   ' → logprob: -6.117349624633789
    8. '),' → logprob: -6.617349624633789
    9. ')),' → logprob: -6.617349624633789
    10. '+' → logprob: -6.742349624633789

Token 600: ' puis' (ID: 18766)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4238182008266449
    2. '   ' → logprob: -1.4238182306289673
    3. ')' → logprob: -3.2988181114196777
    4. '           ' → logprob: -3.9238181114196777
    5. 'dou' → logprob: -4.173818111419678
    6. ' doubling' → logprob: -4.673818111419678
    7. '    ' → logprob: -4.923818111419678
    8. '+' → logprob: -5.548818111419678
    9. '	' → logprob: -6.423818111419678
    10. '    
' → logprob: -6.548818111419678

Token 601: ' modulo' (ID: 112372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4434853792190552
    2. 'dou' → logprob: -2.9434852600097656
    3. ' doubling' → logprob: -3.3184852600097656
    4. '       ' → logprob: -3.3184852600097656
    5. ')
' → logprob: -3.4434852600097656
    6. '10' → logprob: -3.5684852600097656
    7. '   ' → logprob: -3.6934852600097656
    8. '\n' → logprob: -3.6934852600097656
    9. ' (' → logprob: -3.6934852600097656
    10. '0' → logprob: -3.8184852600097656

Token 602: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.28119462728500366
    2. ' M' → logprob: -1.4061946868896484
    3. '(M' → logprob: -10.906194686889648
    4. ')' → logprob: -12.156194686889648
    5. ' (' → logprob: -12.406194686889648
    6. '
' → logprob: -12.781194686889648
    7. '(
' → logprob: -13.031194686889648
    8. ',' → logprob: -13.031194686889648
    9. '(' → logprob: -13.156194686889648
    10. '   ' → logprob: -13.406194686889648

Token 603: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5259529948234558
    2. '   ' → logprob: -1.5259530544281006
    3. ')' → logprob: -2.2759530544281006
    4. ')
' → logprob: -3.0259530544281006
    5. 'dou' → logprob: -3.7759530544281006
    6. '=' → logprob: -5.0259528160095215
    7. ' =' → logprob: -6.5259528160095215
    8. '           ' → logprob: -6.9009528160095215
    9. ').' → logprob: -6.9009528160095215
    10. '.
' → logprob: -7.0259528160095215

Token 604: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.547541081905365
    2. '       ' → logprob: -1.0475411415100098
    3. 'dou' → logprob: -2.6725411415100098
    4. ' doubling' → logprob: -7.29754114151001
    5. '```' → logprob: -7.54754114151001
    6. '
' → logprob: -9.047540664672852
    7. '           ' → logprob: -9.047540664672852
    8. ' ' → logprob: -9.547540664672852
    9. ')' → logprob: -9.922540664672852
    10. '``' → logprob: -10.297540664672852

Token 605: ' doubling' (ID: 122384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6952413320541382
    2. 'dou' → logprob: -0.6952413320541382
    3. '       ' → logprob: -6.445241451263428
    4. ' doubling' → logprob: -8.44524097442627
    5. '```' → logprob: -8.94524097442627
    6. 'd' → logprob: -9.82024097442627
    7. '
' → logprob: -10.69524097442627
    8. '``' → logprob: -10.82024097442627
    9. ' ' → logprob: -11.44524097442627
    10. '    
' → logprob: -11.57024097442627

Token 606: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00044651966891251504
    2. 'const' → logprob: -7.750446319580078
    3. '_line' → logprob: -13.125446319580078
    4. 'ligne' → logprob: -13.375446319580078
    5. '   ' → logprob: -13.750446319580078
    6. '[line' → logprob: -14.000446319580078
    7. '
' → logprob: -14.000446319580078
    8. '```' → logprob: -14.125446319580078
    9. ' line' → logprob: -14.250446319580078
    10. '_' → logprob: -14.375446319580078

Token 607: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003374886582605541
    2. '[' → logprob: -8.000337600708008
    3. '=' → logprob: -14.250337600708008
    4. '[
' → logprob: -14.500337600708008
    5. ' [' → logprob: -14.750337600708008
    6. '   ' → logprob: -15.375337600708008
    7. '[I' → logprob: -16.375337600708008
    8. '[j' → logprob: -16.875337600708008
    9. '=[' → logprob: -17.125337600708008
    10. ' =' → logprob: -18.125337600708008

Token 608: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024442621506750584
    2. '=' → logprob: -6.502444267272949
    3. ']=' → logprob: -7.252444267272949
    4. ')' → logprob: -8.75244426727295
    5. ' =' → logprob: -10.12744426727295
    6. '   ' → logprob: -11.00244426727295
    7. ' ]' → logprob: -11.12744426727295
    8. ']=(' → logprob: -13.50244426727295
    9. ')=' → logprob: -14.12744426727295
    10. ']
' → logprob: -15.00244426727295

Token 609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889143377542496
    2. ' =' → logprob: -2.5788915157318115
    3. '=
' → logprob: -13.95389175415039
    4. ')' → logprob: -15.20389175415039
    5. '   ' → logprob: -15.45389175415039
    6. '=(' → logprob: -16.07889175415039
    7. '=

' → logprob: -16.82889175415039
    8. ' =
' → logprob: -16.95389175415039
    9. '=((' → logprob: -17.07889175415039
    10. '＝' → logprob: -17.32889175415039

Token 610: ' (
' (ID: 4112)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.7046123743057251
    2. '(
' → logprob: -1.204612374305725
    3. '       ' → logprob: -2.3296122550964355
    4. '(' → logprob: -2.4546122550964355
    5. '((' → logprob: -3.9546122550964355
    6. '           ' → logprob: -7.2046122550964355
    7. '(pow' → logprob: -7.3296122550964355
    8. '(int' → logprob: -7.4546122550964355
    9. '   ' → logprob: -7.4546122550964355
    10. ' (' → logprob: -8.579612731933594

Token 611: '           ' (ID: 352)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.040710002183914185
    2. '(pow' → logprob: -3.540709972381592
    3. '(' → logprob: -5.165709972381592
    4. '(
' → logprob: -5.915709972381592
    5. '           ' → logprob: -7.165709972381592
    6. '       ' → logprob: -7.290709972381592
    7. '((' → logprob: -7.415709972381592
    8. 'dou' → logprob: -8.79071044921875
    9. 'pow' → logprob: -9.16571044921875
    10. '(double' → logprob: -10.04071044921875

Token 612: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.16850970685482025
    2. '(pow' → logprob: -2.2935097217559814
    3. '(
' → logprob: -3.6685097217559814
    4. '(' (adapté à ' (') → logprob: -4.543509483337402
    5. 'dou' → logprob: -4.668509483337402
    6. 'pow' → logprob: -5.293509483337402
    7. '((' → logprob: -6.418509483337402
    8. '           ' → logprob: -7.543509483337402
    9. '(double' → logprob: -8.293509483337402
    10. '   ' → logprob: -8.418509483337402

Token 613: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.03173660859465599
    2. '(pow' → logprob: -3.6567366123199463
    3. 'dou' → logprob: -5.531736373901367
    4. '(' → logprob: -7.281736373901367
    5. '(d' → logprob: -8.031736373901367
    6. ' pow' → logprob: -8.406736373901367
    7. '   ' → logprob: -9.531736373901367
    8. '2' → logprob: -10.031736373901367
    9. 'd' → logprob: -10.656736373901367
    10. '((' → logprob: -11.156736373901367

Token 614: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.47495681833243e-05
    2. '10' → logprob: -10.625024795532227
    3. ' (' → logprob: -15.125024795532227
    4. '(
' → logprob: -15.500024795532227
    5. '```' → logprob: -19.500024795532227
    6. '(
' → logprob: -19.750024795532227
    7. 'a' → logprob: -20.000024795532227
    8. ')' → logprob: -20.250024795532227
    9. ' ' → logprob: -20.375024795532227
    10. '           ' → logprob: -20.875024795532227

Token 615: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002836015075445175
    2. '10' → logprob: -5.877836227416992
    3. '(' → logprob: -10.627836227416992
    4. ' ' → logprob: -12.002836227416992
    5. ')' → logprob: -15.377836227416992
    6. '   ' → logprob: -15.502836227416992
    7. '```' → logprob: -16.252836227416992
    8. '  ' → logprob: -16.502836227416992
    9. '1' → logprob: -17.252836227416992
    10. '    ' → logprob: -17.377836227416992

Token 616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013381359167397022
    2. ',l' → logprob: -9.000133514404297
    3. ' ,' → logprob: -11.750133514404297
    4. ',
' → logprob: -14.000133514404297
    5. 'l' → logprob: -14.500133514404297
    6. '(' → logprob: -15.000133514404297
    7. '[' → logprob: -15.750133514404297
    8. '   ' → logprob: -15.875133514404297
    9. '‌,' → logprob: -17.000133514404297
    10. ',

' → logprob: -17.000133514404297

Token 617: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018265826627612114
    2. ' l' → logprob: -4.018265724182129
    3. '   ' → logprob: -9.768265724182129
    4. '(l' → logprob: -10.643265724182129
    5. '	l' → logprob: -12.018265724182129
    6. ' ' → logprob: -12.268265724182129
    7. '    ' → logprob: -12.393265724182129
    8. '       ' → logprob: -12.643265724182129
    9. '2' → logprob: -13.018265724182129
    10. 'i' → logprob: -13.018265724182129

Token 618: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04864436760544777
    2. ' *' → logprob: -3.0486443042755127
    3. '*(' → logprob: -10.423644065856934
    4. '   ' → logprob: -11.298644065856934
    5. ' ' → logprob: -11.798644065856934
    6. ')' → logprob: -13.798644065856934
    7. '           ' → logprob: -13.923644065856934
    8. '    ' → logprob: -14.173644065856934
    9. '**' → logprob: -14.298644065856934
    10. '  ' → logprob: -14.423644065856934

Token 619: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01423226110637188
    2. '(' → logprob: -4.264232158660889
    3. ' ' → logprob: -9.639232635498047
    4. ' (' → logprob: -13.264232635498047
    5. '   ' → logprob: -13.639232635498047
    6. '[' → logprob: -15.139232635498047
    7. '((' → logprob: -16.014232635498047
    8. '  ' → logprob: -16.264232635498047
    9. '(
' → logprob: -16.764232635498047
    10. 'pow' → logprob: -17.014232635498047

Token 620: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741774797439575
    2. '2' → logprob: -0.9741774797439575
    3. ' ' → logprob: -9.724177360534668
    4. ' (' → logprob: -10.349177360534668
    5. '   ' → logprob: -12.599177360534668
    6. '[' → logprob: -12.974177360534668
    7. '((' → logprob: -14.099177360534668
    8. '
' → logprob: -14.474177360534668
    9. '(
' → logprob: -14.724177360534668
    10. '{' → logprob: -15.474177360534668

Token 621: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02994370274245739
    2. '(' → logprob: -3.7799437046051025
    3. '*(' → logprob: -5.529943466186523
    4. '*' → logprob: -7.154943466186523
    5. '(i' → logprob: -7.279943466186523
    6. ' **' → logprob: -7.529943466186523
    7. '           ' → logprob: -8.904943466186523
    8. '       ' → logprob: -8.904943466186523
    9. ' *' → logprob: -9.404943466186523
    10. ' (' → logprob: -9.654943466186523

Token 622: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003700165543705225
    2. ' (' → logprob: -8.125370025634766
    3. '(' → logprob: -9.750370025634766
    4. '   ' → logprob: -11.500370025634766
    5. '       ' → logprob: -13.250370025634766
    6. '[i' → logprob: -14.250370025634766
    7. '           ' → logprob: -14.500370025634766
    8. '((' → logprob: -14.875370025634766
    9. '  ' → logprob: -15.125370025634766
    10. ' ' → logprob: -15.125370025634766

Token 623: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.000227496653678827
    2. 'i' → logprob: -8.875227928161621
    3. ' (' → logprob: -9.625227928161621
    4. '(' → logprob: -11.625227928161621
    5. '[i' → logprob: -12.125227928161621
    6. '   ' → logprob: -12.250227928161621
    7. '(
' → logprob: -13.750227928161621
    8. '       ' → logprob: -14.875227928161621
    9. '{i' → logprob: -15.125227928161621
    10. '           ' → logprob: -15.625227928161621

Token 624: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007001297548413277
    2. '(' → logprob: -5.7570013999938965
    3. '       ' → logprob: -6.5070013999938965
    4. '   ' → logprob: -7.0070013999938965
    5. ' -' → logprob: -7.1320013999938965
    6. '           ' → logprob: -7.5070013999938965
    7. ' (' → logprob: -10.882000923156738
    8. '(i' → logprob: -11.382000923156738
    9. '  ' → logprob: -12.007000923156738
    10. ' ' → logprob: -12.007000923156738

Token 625: ' ' (ID: 220)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03820247948169708
    2. '(' → logprob: -3.2882025241851807
    3. ' (' → logprob: -9.288202285766602
    4. '       ' → logprob: -10.788202285766602
    5. '   ' → logprob: -10.788202285766602
    6. '(
' → logprob: -11.163202285766602
    7. '           ' → logprob: -12.288202285766602
    8. 'i' → logprob: -13.163202285766602
    9. '1' → logprob: -13.413202285766602
    10. '
' → logprob: -14.288202285766602

Token 626: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003768731839954853
    2. '(' → logprob: -6.1287689208984375
    3. '1' → logprob: -6.7537689208984375
    4. 'i' → logprob: -8.253768920898438
    5. ' (' → logprob: -9.253768920898438
    6. '   ' → logprob: -10.378768920898438
    7. '-' → logprob: -11.503768920898438
    8. '(
' → logprob: -11.878768920898438
    9. '       ' → logprob: -12.753768920898438
    10. ' ' → logprob: -13.628768920898438

Token 627: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0021010141354054213
    2. ',' → logprob: -6.377100944519043
    3. ')' → logprob: -8.127100944519043
    4. '   ' → logprob: -9.877100944519043
    5. ' ),' → logprob: -10.627100944519043
    6. ',),' → logprob: -11.627100944519043
    7. ' ' → logprob: -12.002100944519043
    8. '},' → logprob: -12.877100944519043
    9. '       ' → logprob: -13.002100944519043
    10. '],' → logprob: -14.002100944519043

Token 628: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0001601539261173457
    2. ' M' → logprob: -8.750160217285156
    3. '   ' → logprob: -14.250160217285156
    4. ')' → logprob: -14.875160217285156
    5. ' ' → logprob: -16.000160217285156
    6. ',' → logprob: -16.125160217285156
    7. '       ' → logprob: -16.250160217285156
    8. '           ' → logprob: -16.250160217285156
    9. '...' → logprob: -17.000160217285156
    10. '  ' → logprob: -17.125160217285156

Token 629: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003433296224102378
    2. ')+' → logprob: -8.000343322753906
    3. ' )' → logprob: -12.625343322753906
    4. '   ' → logprob: -13.125343322753906
    5. ')
' → logprob: -13.750343322753906
    6. ' ' → logprob: -15.250343322753906
    7. '```' → logprob: -15.375343322753906
    8. '）' → logprob: -15.375343322753906
    9. '))' → logprob: -16.250343322753906
    10. '`)' → logprob: -16.625343322753906

Token 630: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10722403228282928
    2. '*' → logprob: -2.7322239875793457
    3. ' +' → logprob: -3.4822239875793457
    4. ')' → logprob: -5.482223987579346
    5. ' *' → logprob: -6.732223987579346
    6. '   ' → logprob: -8.232224464416504
    7. ')*' → logprob: -9.607224464416504
    8. ' ' → logprob: -9.982224464416504
    9. ')+' → logprob: -10.732224464416504
    10. '       ' → logprob: -10.982224464416504

Token 631: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005545823951251805
    2. ' ' → logprob: -7.50055456161499
    3. ')' → logprob: -14.250555038452148
    4. '0' → logprob: -14.750555038452148
    5. '```' → logprob: -15.500555038452148
    6. '   ' → logprob: -15.750555038452148
    7. 'M' → logprob: -16.81305503845215
    8. '(' → logprob: -17.00055503845215
    9. '
' → logprob: -17.56305503845215
    10. '  ' → logprob: -17.62555503845215

Token 632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5954712075181305e-05
    2. ' ' → logprob: -11.250036239624023
    3. '0' → logprob: -11.875036239624023
    4. ')' → logprob: -12.250036239624023
    5. '(' → logprob: -12.625036239624023
    6. 'M' → logprob: -13.250036239624023
    7. '```' → logprob: -14.375036239624023
    8. '   ' → logprob: -14.687536239624023
    9. '((' → logprob: -14.750036239624023
    10. '           ' → logprob: -14.937536239624023

Token 633: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008898298256099224
    2. '*' → logprob: -4.7588982582092285
    3. ')*' → logprob: -8.383898735046387
    4. ')
' → logprob: -10.383898735046387
    5. ' *' → logprob: -11.383898735046387
    6. ' )' → logprob: -11.508898735046387
    7. '   ' → logprob: -14.008898735046387
    8. '*)' → logprob: -14.258898735046387
    9. '),' → logprob: -15.883898735046387
    10. '*
' → logprob: -16.00889778137207

Token 634: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005974538624286652
    2. ' *' → logprob: -5.130974769592285
    3. ')' → logprob: -10.380974769592285
    4. '*d' → logprob: -11.880974769592285
    5. '   ' → logprob: -12.380974769592285
    6. '
' → logprob: -14.005974769592285
    7. '           ' → logprob: -14.505974769592285
    8. ' ' → logprob: -15.005974769592285
    9. ' ' → logprob: -15.005974769592285
    10. ')*' → logprob: -15.130974769592285

Token 635: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0009236076730303466
    2. ' doubling' → logprob: -7.0009236335754395
    3. 'double' → logprob: -12.250923156738281
    4. '   ' → logprob: -12.625923156738281
    5. 'd' → logprob: -14.375923156738281
    6. '       ' → logprob: -15.000923156738281
    7. 'Dou' → logprob: -15.000923156738281
    8. 'dbl' → logprob: -15.125923156738281
    9. '	d' → logprob: -15.375923156738281
    10. '           ' → logprob: -15.500923156738281

Token 636: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00020652047533076257
    2. 'const' → logprob: -8.50020694732666
    3. '[line' → logprob: -13.87520694732666
    4. 'ine' → logprob: -14.50020694732666
    5. '_line' → logprob: -15.50020694732666
    6. '   ' → logprob: -15.62520694732666
    7. 'lin' → logprob: -15.75020694732666
    8. ' line' → logprob: -15.87520694732666
    9. '[' → logprob: -16.000205993652344
    10. '(line' → logprob: -16.500205993652344

Token 637: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[
' → logprob: -16.0
    3. 'i' → logprob: -17.125
    4. '```' → logprob: -18.0
    5. '[user' → logprob: -18.375
    6. '[' → logprob: -18.625
    7. '(i' → logprob: -18.75
    8. '[I' → logprob: -19.625
    9. '[int' → logprob: -20.0
    10. 'user' → logprob: -20.5

Token 638: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013796406565234065
    2. '[i' → logprob: -6.626379489898682
    3. '[-' → logprob: -10.87637996673584
    4. ' -' → logprob: -10.87637996673584
    5. '[' → logprob: -11.25137996673584
    6. 'i' → logprob: -13.12637996673584
    7. '   ' → logprob: -15.25137996673584
    8. '-i' → logprob: -15.37637996673584
    9. '(i' → logprob: -16.376379013061523
    10. ']' → logprob: -17.001379013061523

Token 639: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -14.625000953674316
    4. '   ' → logprob: -15.500000953674316
    5. '```' → logprob: -16.000001907348633
    6. '[' → logprob: -17.250001907348633
    7. '<|end|>' → logprob: -17.750001907348633
    8. '-' → logprob: -17.875001907348633
    9. '...' → logprob: -18.125001907348633
    10. '       ' → logprob: -18.312501907348633

Token 640: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -16.5
    4. '```' → logprob: -17.375
    5. '
' → logprob: -17.625
    6. '<|end|>' → logprob: -18.5
    7. '  ' → logprob: -19.125
    8. '-' → logprob: -19.6875
    9. '

' → logprob: -19.9375
    10. '       ' → logprob: -20.1875

Token 641: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14964213967323303
    2. ' +' → logprob: -2.0246422290802
    3. '%' → logprob: -5.399641990661621
    4. ')' → logprob: -6.524641990661621
    5. '           ' → logprob: -8.274641990661621
    6. '+
' → logprob: -8.774641990661621
    7. '       ' → logprob: -9.149641990661621
    8. '   ' → logprob: -9.274641990661621
    9. '+b' → logprob: -9.274641990661621
    10. ')%' → logprob: -10.024641990661621

Token 642: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8154118657112122
    2. ' +' → logprob: -0.8154118657112122
    3. '%' → logprob: -2.6904118061065674
    4. '           ' → logprob: -3.5654118061065674
    5. ' %' → logprob: -4.5654120445251465
    6. ')' → logprob: -5.1904120445251465
    7. '       ' → logprob: -7.0654120445251465
    8. ' +
' → logprob: -7.4404120445251465
    9. '+
' → logprob: -7.6904120445251465
    10. ' ' → logprob: -8.690411567687988

Token 643: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' (adapté à ' +') → logprob: -0.05575339123606682
    2. ' +' → logprob: -2.930753469467163
    3. '           ' → logprob: -7.180753231048584
    4. '+
' → logprob: -9.430753707885742
    5. ' +
' → logprob: -11.930753707885742
    6. '   ' → logprob: -12.055753707885742
    7. '       ' → logprob: -12.430753707885742
    8. '%' → logprob: -12.805753707885742
    9. '            ' → logprob: -13.430753707885742
    10. '          ' → logprob: -13.930753707885742

Token 644: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.015089801512658596
    2. '(pow' → logprob: -4.765089988708496
    3. '(' → logprob: -5.140089988708496
    4. '2' → logprob: -7.890089988708496
    5. ' pow' → logprob: -9.390089988708496
    6. 'b' → logprob: -10.015089988708496
    7. '(
' → logprob: -10.015089988708496
    8. '((' → logprob: -10.890089988708496
    9. '   ' → logprob: -11.640089988708496
    10. '(b' → logprob: -12.265089988708496

Token 645: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.259079363080673e-05
    2. '2' → logprob: -11.750012397766113
    3. '(
' → logprob: -12.500012397766113
    4. '<|end|>' → logprob: -14.750012397766113
    5. '(pow' → logprob: -15.375012397766113
    6. '```' → logprob: -16.37501335144043
    7. '10' → logprob: -16.37501335144043
    8. ' (' → logprob: -17.12501335144043
    9. ')' → logprob: -17.37501335144043
    10. '(

' → logprob: -18.00001335144043

Token 646: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014232734218239784
    2. '(' → logprob: -4.264232635498047
    3. '10' → logprob: -9.639232635498047
    4. '(
' → logprob: -13.514232635498047
    5. ' ' → logprob: -13.764232635498047
    6. ')' → logprob: -14.139232635498047
    7. '```' → logprob: -14.514232635498047
    8. ',' → logprob: -16.639232635498047
    9. '<|end|>' → logprob: -16.639232635498047
    10. '[' → logprob: -17.139232635498047

Token 647: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010607372038066387
    2. '(' → logprob: -5.1356072425842285
    3. ',i' → logprob: -5.7606072425842285
    4. '(i' → logprob: -7.1356072425842285
    5. ' ,' → logprob: -7.6356072425842285
    6. ' (' → logprob: -10.010607719421387
    7. ',(' → logprob: -10.260607719421387
    8. 'i' → logprob: -10.885607719421387
    9. ',k' → logprob: -10.885607719421387
    10. '```' → logprob: -11.135607719421387

Token 648: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01123904064297676
    2. '(i' → logprob: -5.136239051818848
    3. ' i' → logprob: -5.261239051818848
    4. ' (' → logprob: -9.261239051818848
    5. '(' → logprob: -12.511239051818848
    6. '{i' → logprob: -12.761239051818848
    7. '
' → logprob: -13.386239051818848
    8. '[i' → logprob: -13.511239051818848
    9. '   ' → logprob: -13.761239051818848
    10. '	i' → logprob: -14.511239051818848

Token 649: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03807271271944046
    2. ' -' → logprob: -3.2880728244781494
    3. '
' → logprob: -11.66307258605957
    4. ' ' → logprob: -12.03807258605957
    5. '   ' → logprob: -12.41307258605957
    6. '[' → logprob: -12.41307258605957
    7. ',' → logprob: -12.53807258605957
    8. ')' → logprob: -13.41307258605957
    9. '```' → logprob: -14.03807258605957
    10. '-
' → logprob: -14.28807258605957

Token 650: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -13.250004768371582
    3. ' ' → logprob: -13.625004768371582
    4. '   ' → logprob: -13.875004768371582
    5. '```' → logprob: -16.000003814697266
    6. '
' → logprob: -16.250003814697266
    7. '-' → logprob: -17.000003814697266
    8. '  ' → logprob: -18.500003814697266
    9. '<|end|>' → logprob: -18.500003814697266
    10. '           ' → logprob: -18.625003814697266

Token 651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -16.25
    4. '   ' → logprob: -16.625
    5. '```' → logprob: -16.875
    6. '(' → logprob: -17.0
    7. '       ' → logprob: -19.375
    8. '-' → logprob: -20.125
    9. '

' → logprob: -20.125
    10. '  ' → logprob: -20.125

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.264322317088954e-05
    2. ',M' → logprob: -10.375052452087402
    3. ' ,' → logprob: -10.875052452087402
    4. '   ' → logprob: -14.125052452087402
    5. '       ' → logprob: -14.500052452087402
    6. '           ' → logprob: -14.875052452087402
    7. ')' → logprob: -15.000052452087402
    8. '```' → logprob: -16.00005340576172
    9. ',
' → logprob: -17.00005340576172
    10. '(' → logprob: -17.12505340576172

Token 653: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.007609228603541851
    2. ' M' → logprob: -4.8826093673706055
    3. ')' → logprob: -13.257609367370605
    4. '           ' → logprob: -14.507609367370605
    5. '   ' → logprob: -15.007609367370605
    6. '       ' → logprob: -16.50760841369629
    7. '	M' → logprob: -16.50760841369629
    8. ' ' → logprob: -16.63260841369629
    9. '(M' → logprob: -17.00760841369629
    10. ',' → logprob: -17.00760841369629

Token 654: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39368513226509094
    2. ',' → logprob: -1.1436851024627686
    3. '*' → logprob: -5.143685340881348
    4. '           ' → logprob: -8.393685340881348
    5. ')
' → logprob: -8.643685340881348
    6. '   ' → logprob: -8.768685340881348
    7. ')*' → logprob: -8.893685340881348
    8. ',
' → logprob: -9.393685340881348
    9. ' *' → logprob: -10.143685340881348
    10. '```' → logprob: -10.518685340881348

Token 655: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.025265978649258614
    2. ' *' → logprob: -3.77526593208313
    3. '           ' → logprob: -6.900266170501709
    4. ')' → logprob: -7.275266170501709
    5. '*b' → logprob: -8.90026569366455
    6. '```' → logprob: -10.40026569366455
    7. '*
' → logprob: -10.65026569366455
    8. '*(' → logprob: -11.02526569366455
    9. ',' → logprob: -11.27526569366455
    10. '       ' → logprob: -11.27526569366455

Token 656: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0907374694943428
    2. '(pow' → logprob: -2.4657375812530518
    3. ' pow' → logprob: -6.465737342834473
    4. ' (' → logprob: -8.965737342834473
    5. '(' → logprob: -9.715737342834473
    6. '(
' → logprob: -10.840737342834473
    7. '(p' → logprob: -11.215737342834473
    8. '10' → logprob: -11.965737342834473
    9. '((' → logprob: -12.340737342834473
    10. 'A' → logprob: -13.340737342834473

Token 657: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.703443770878948e-06
    2. '10' → logprob: -12.000007629394531
    3. '<|end|>' → logprob: -14.000007629394531
    4. ' (' → logprob: -15.000007629394531
    5. '(
' → logprob: -15.000007629394531
    6. '(

' → logprob: -19.12500762939453
    7. '...' → logprob: -20.50000762939453
    8. '```' → logprob: -20.62500762939453
    9. '()' → logprob: -20.87500762939453
    10. 'Sorry' → logprob: -21.25000762939453

Token 658: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931536197662354
    2. '10' → logprob: -0.6931536197662354
    3. '<|end|>' → logprob: -12.318153381347656
    4. '```' → logprob: -14.443153381347656
    5. ')' → logprob: -14.568153381347656
    6. ' (' → logprob: -15.068153381347656
    7. ' ' → logprob: -15.568153381347656
    8. '(
' → logprob: -15.693153381347656
    9. '...' → logprob: -16.443153381347656
    10. ')(' → logprob: -17.693153381347656

Token 659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002639582962729037
    2. '(' → logprob: -8.875264167785645
    3. ',l' → logprob: -9.125264167785645
    4. '(l' → logprob: -11.625264167785645
    5. 'l' → logprob: -12.875264167785645
    6. ' ,' → logprob: -13.875264167785645
    7. '```' → logprob: -14.500264167785645
    8. ',(' → logprob: -14.500264167785645
    9. ',
' → logprob: -14.750264167785645
    10. 'a' → logprob: -15.250264167785645

Token 660: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0008354776655323803
    2. ' l' → logprob: -7.125835418701172
    3. '(l' → logprob: -10.500835418701172
    4. '   ' → logprob: -13.375835418701172
    5. '(' → logprob: -14.125835418701172
    6. ' ' → logprob: -15.250835418701172
    7. '	l' → logprob: -15.375835418701172
    8. '...' → logprob: -16.000835418701172
    9. ' (' → logprob: -16.000835418701172
    10. '    ' → logprob: -16.250835418701172

Token 661: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1426916867494583
    2. ' *' → logprob: -2.0176916122436523
    3. '*(' → logprob: -11.642691612243652
    4. ' ' → logprob: -12.767691612243652
    5. '   ' → logprob: -13.392691612243652
    6. '**' → logprob: -13.767691612243652
    7. ' ' → logprob: -14.142691612243652
    8. '  ' → logprob: -15.017691612243652
    9. '```' → logprob: -15.392691612243652
    10. '2' → logprob: -15.517691612243652

Token 662: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006068629212677479
    2. '(' → logprob: -5.131068706512451
    3. ' ' → logprob: -8.881068229675293
    4. ' (' → logprob: -14.506068229675293
    5. '[' → logprob: -15.131068229675293
    6. '((' → logprob: -16.63106918334961
    7. '   ' → logprob: -17.13106918334961
    8. '```' → logprob: -17.13106918334961
    9. '(
' → logprob: -17.63106918334961
    10. '  ' → logprob: -18.25606918334961

Token 663: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1003061980009079
    2. '(' → logprob: -2.350306272506714
    3. ' ' → logprob: -9.225306510925293
    4. ' (' → logprob: -14.100306510925293
    5. '   ' → logprob: -15.850306510925293
    6. '(
' → logprob: -16.600305557250977
    7. '((' → logprob: -17.225305557250977
    8. '\(' → logprob: -18.350305557250977
    9. '  ' → logprob: -18.475305557250977
    10. '```' → logprob: -18.725305557250977

Token 664: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.10002721101045609
    2. '(' → logprob: -2.850027322769165
    3. '(i' → logprob: -3.475027322769165
    4. ' (' → logprob: -5.850027084350586
    5. ' **' → logprob: -5.850027084350586
    6. '```' → logprob: -8.725027084350586
    7. '*' → logprob: -9.600027084350586
    8. '*(' → logprob: -9.600027084350586
    9. '   ' → logprob: -9.725027084350586
    10. '-' → logprob: -9.850027084350586

Token 665: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -11.750012397766113
    3. ' (' → logprob: -12.500012397766113
    4. 'i' → logprob: -15.500012397766113
    5. '((' → logprob: -15.500012397766113
    6. '(
' → logprob: -16.875011444091797
    7. '   ' → logprob: -17.500011444091797
    8. '{i' → logprob: -18.250011444091797
    9. '[i' → logprob: -18.375011444091797
    10. '(ii' → logprob: -19.750011444091797

Token 666: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.7014437364414334e-05
    2. 'i' → logprob: -10.75002670288086
    3. '(' → logprob: -12.75002670288086
    4. ' (' → logprob: -13.00002670288086
    5. '(
' → logprob: -15.87502670288086
    6. '{i' → logprob: -16.62502670288086
    7. '[i' → logprob: -16.75002670288086
    8. '   ' → logprob: -17.62502670288086
    9. '((' → logprob: -18.75002670288086
    10. ' i' → logprob: -18.75002670288086

Token 667: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3520999550819397
    2. '-' → logprob: -1.227099895477295
    3. '(i' → logprob: -5.977099895477295
    4. '   ' → logprob: -8.102100372314453
    5. '           ' → logprob: -8.227100372314453
    6. ' (' → logprob: -8.727100372314453
    7. '       ' → logprob: -9.102100372314453
    8. ' -' → logprob: -9.477100372314453
    9. '(-' → logprob: -9.977100372314453
    10. ' ' → logprob: -9.977100372314453

Token 668: ' ' (ID: 220)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.026459485292434692
    2. '(' → logprob: -3.6514594554901123
    3. 'i' → logprob: -9.401459693908691
    4. '1' → logprob: -9.901459693908691
    5. ' (' → logprob: -10.776459693908691
    6. '   ' → logprob: -13.901459693908691
    7. '{i' → logprob: -13.901459693908691
    8. '```' → logprob: -14.401459693908691
    9. '[i' → logprob: -14.526459693908691
    10. '(I' → logprob: -14.776459693908691

Token 669: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001513312105089426
    2. '(' → logprob: -6.501513481140137
    3. ' (' → logprob: -12.001513481140137
    4. 'i' → logprob: -13.251513481140137
    5. '[i' → logprob: -14.001513481140137
    6. '(
' → logprob: -14.251513481140137
    7. '   ' → logprob: -15.001513481140137
    8. '1' → logprob: -15.376513481140137
    9. '(prev' → logprob: -15.501513481140137
    10. '{i' → logprob: -15.501513481140137

Token 670: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006751431501470506
    2. '),' → logprob: -7.500675201416016
    3. ' ,' → logprob: -10.000675201416016
    4. '   ' → logprob: -10.500675201416016
    5. '       ' → logprob: -11.125675201416016
    6. ')' → logprob: -11.625675201416016
    7. '           ' → logprob: -11.875675201416016
    8. '```' → logprob: -12.750675201416016
    9. '},' → logprob: -13.000675201416016
    10. '-' → logprob: -13.375675201416016

Token 671: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.001502598519437015
    2. ' M' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.751502990722656
    4. ')' → logprob: -17.126502990722656
    5. 'B' → logprob: -17.251502990722656
    6. '(M' → logprob: -17.251502990722656
    7. ' ' → logprob: -17.626502990722656
    8. '```' → logprob: -17.751502990722656
    9. '       ' → logprob: -18.126502990722656
    10. '           ' → logprob: -18.251502990722656

Token 672: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014349536038935184
    2. ',' → logprob: -4.389349460601807
    3. '       ' → logprob: -7.139349460601807
    4. '           ' → logprob: -7.889349460601807
    5. '   ' → logprob: -8.139349937438965
    6. '*' → logprob: -8.639349937438965
    7. ')*' → logprob: -9.139349937438965
    8. '),' → logprob: -10.889349937438965
    9. ' )' → logprob: -11.264349937438965
    10. '...' → logprob: -11.639349937438965

Token 673: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8616731762886047
    2. '*' → logprob: -0.9866731762886047
    3. ')' → logprob: -1.61167311668396
    4. '%' → logprob: -6.736673355102539
    5. '           ' → logprob: -6.736673355102539
    6. '   ' → logprob: -6.986673355102539
    7. '*b' → logprob: -7.111673355102539
    8. ',' → logprob: -7.486673355102539
    9. '       ' → logprob: -9.361673355102539
    10. '),' → logprob: -10.111673355102539

Token 674: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -8.113290095934644e-05
    2. ' doubling' → logprob: -9.625081062316895
    3. '   ' → logprob: -11.875081062316895
    4. 'double' → logprob: -12.750081062316895
    5. 'a' → logprob: -13.875081062316895
    6. '(d' → logprob: -14.375081062316895
    7. '       ' → logprob: -14.625081062316895
    8. '(a' → logprob: -15.000081062316895
    9. ' ' → logprob: -15.000081062316895
    10. '
' → logprob: -15.000081062316895

Token 675: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.0015790171455591917
    2. 'line' → logprob: -6.5015788078308105
    3. ')' → logprob: -10.626579284667969
    4. 'a' → logprob: -11.876579284667969
    5. ' const' → logprob: -12.251579284667969
    6. '_const' → logprob: -12.376579284667969
    7. 'b' → logprob: -12.501579284667969
    8. '   ' → logprob: -12.501579284667969
    9. '```' → logprob: -12.751579284667969
    10. '-' → logprob: -12.876579284667969

Token 676: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '[
' → logprob: -13.375001907348633
    3. '[' → logprob: -14.875001907348633
    4. '[I' → logprob: -18.000001907348633
    5. 'i' → logprob: -18.625001907348633
    6. ' [' → logprob: -19.125001907348633
    7. '(i' → logprob: -19.375001907348633
    8. '```' → logprob: -19.500001907348633
    9. '
' → logprob: -19.750001907348633
    10. '[(' → logprob: -20.750001907348633

Token 677: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004408015520311892
    2. ' -' → logprob: -8.50044059753418
    3. '[' → logprob: -8.87544059753418
    4. '[-' → logprob: -9.62544059753418
    5. '[i' → logprob: -10.50044059753418
    6. 'i' → logprob: -13.87544059753418
    7. ']' → logprob: -13.87544059753418
    8. '   ' → logprob: -14.00044059753418
    9. '[
' → logprob: -15.50044059753418
    10. '```' → logprob: -15.50044059753418

Token 678: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.250004768371582
    4. '-' → logprob: -15.375004768371582
    5. '```' → logprob: -16.8750057220459
    6. '
' → logprob: -17.6250057220459
    7. '  ' → logprob: -19.1250057220459
    8. 'i' → logprob: -19.3750057220459
    9. '(' → logprob: -19.5000057220459
    10. '[' → logprob: -19.6250057220459

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.625000953674316
    3. '-' → logprob: -15.000000953674316
    4. ' ' → logprob: -15.625000953674316
    5. 'i' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.375001907348633
    7. '(i' → logprob: -17.625001907348633
    8. '
' → logprob: -17.875001907348633
    9. '[i' → logprob: -18.250001907348633
    10. '

' → logprob: -19.375001907348633

Token 680: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019136422779411077
    2. '       ' → logprob: -6.876913547515869
    3. ')%' → logprob: -7.501913547515869
    4. '           ' → logprob: -8.751914024353027
    5. ' )' → logprob: -9.501914024353027
    6. '%' → logprob: -9.751914024353027
    7. '   ' → logprob: -10.876914024353027
    8. '))' → logprob: -11.751914024353027
    9. ')
' → logprob: -12.376914024353027
    10. '[i' → logprob: -13.751914024353027

Token 681: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01990426331758499
    2. '%' → logprob: -4.144904136657715
    3. ')%' → logprob: -5.644904136657715
    4. ' %' → logprob: -8.269904136657715
    5. ' )' → logprob: -11.019904136657715
    6. ')
' → logprob: -11.144904136657715
    7. '           ' → logprob: -11.394904136657715
    8. '```' → logprob: -11.894904136657715
    9. '%n' → logprob: -12.644904136657715
    10. '       ' → logprob: -12.769904136657715

Token 682: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' (adapté à ' )') → logprob: -0.053420331329107285
    2. ' %' → logprob: -3.178420305252075
    3. '%' → logprob: -4.803420543670654
    4. ')%' → logprob: -6.303420543670654
    5. ' )' → logprob: -8.178420066833496
    6. '```' → logprob: -11.053420066833496
    7. '   ' → logprob: -11.553420066833496
    8. ' ' → logprob: -12.053420066833496
    9. '           ' → logprob: -12.553420066833496
    10. '       ' → logprob: -13.053420066833496

Token 683: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7108749747276306
    2. ' %' → logprob: -0.7108749747276306
    3. ')' → logprob: -4.085875034332275
    4. ')%' → logprob: -7.335875034332275
    5. '%B' → logprob: -10.710874557495117
    6. '       ' → logprob: -10.710874557495117
    7. '%A' → logprob: -11.210874557495117
    8. '   ' → logprob: -11.460874557495117
    9. ' %=' → logprob: -11.460874557495117
    10. '%)' → logprob: -11.960874557495117

Token 684: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.011047935113310814
    2. ' M' → logprob: -4.511047840118408
    3. '(M' → logprob: -15.886048316955566
    4. ' ' → logprob: -17.26104736328125
    5. '   ' → logprob: -18.26104736328125
    6. '	M' → logprob: -18.26104736328125
    7. ' ' → logprob: -18.76104736328125
    8. '(' → logprob: -19.26104736328125
    9. '```' → logprob: -19.26104736328125
    10. 'm' → logprob: -20.01104736328125

Token 685: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019066202221438289
    2. 'return' → logprob: -7.001906394958496
    3. '    
' → logprob: -7.376906394958496
    4. '
' → logprob: -9.251906394958496
    5. '<|end|>' → logprob: -9.376906394958496
    6. '	return' → logprob: -9.751906394958496
    7. ' return' → logprob: -10.126906394958496
    8. 'def' → logprob: -10.876906394958496
    9. '  
' → logprob: -11.126906394958496
    10. '   
' → logprob: -11.501906394958496

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007007609237916768
    2. 'return' → logprob: -8.250700950622559
    3. 'def' → logprob: -9.250700950622559
    4. 'result' → logprob: -9.375700950622559
    5. 'a' → logprob: -9.625700950622559
    6. '```' → logprob: -9.625700950622559
    7. '    
' → logprob: -10.375700950622559
    8. 'n' → logprob: -10.625700950622559
    9. 'for' → logprob: -11.250700950622559
    10. '       ' → logprob: -11.750700950622559

Token 687: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5628034472465515
    2. 'result' → logprob: -0.9378034472465515
    3. '   ' → logprob: -3.8128035068511963
    4. 'r' → logprob: -4.562803268432617
    5. 's' → logprob: -5.687803268432617
    6. 'answer' → logprob: -7.187803268432617
    7. 'ans' → logprob: -7.437803268432617
    8. ' res' → logprob: -7.812803268432617
    9. 'val' → logprob: -8.687803268432617
    10. 'x' → logprob: -8.687803268432617

Token 688: ' Initial' (ID: 9209)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.601498007774353
    2. 'res' → logprob: -1.101498007774353
    3. 'answer' → logprob: -3.3514981269836426
    4. 'ret' → logprob: -4.351498126983643
    5. 'ans' → logprob: -4.351498126983643
    6. 'if' → logprob: -4.476498126983643
    7. 'total' → logprob: -4.726498126983643
    8. 's' → logprob: -4.726498126983643
    9. 'val' → logprob: -5.226498126983643
    10. 'r' → logprob: -5.226498126983643

Token 689: 'isation' (ID: 6993)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.547312617301941
    2. 'result' → logprob: -1.922312617301941
    3. '_sum' → logprob: -2.1723127365112305
    4. '   ' → logprob: -2.4223127365112305
    5. '#' → logprob: -2.7973127365112305
    6. '_result' → logprob: -2.9223127365112305
    7. 'ization' → logprob: -3.0473127365112305
    8. 'res' → logprob: -3.4223127365112305
    9. 'answer' → logprob: -3.5473127365112305
    10. '_value' → logprob: -3.5473127365112305

Token 690: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3042977750301361
    2. 'res' → logprob: -2.179297685623169
    3. '   ' → logprob: -2.304297685623169
    4. ' result' → logprob: -4.304297924041748
    5. 'sum' → logprob: -4.554297924041748
    6. 's' → logprob: -5.554297924041748
    7. 'answer' → logprob: -5.679297924041748
    8. 'total' → logprob: -5.679297924041748
    9. '=' → logprob: -5.804297924041748
    10. 'val' → logprob: -6.179297924041748

Token 691: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4183572232723236
    2. 'res' → logprob: -1.543357253074646
    3. 'answer' → logprob: -2.9183571338653564
    4. 'ans' → logprob: -3.2933571338653564
    5. 'ret' → logprob: -3.7933571338653564
    6. 'total' → logprob: -5.9183573722839355
    7. 'val' → logprob: -6.0433573722839355
    8. 'r' → logprob: -6.1683573722839355
    9. 'sum' → logprob: -6.2933573722839355
    10. 's' → logprob: -6.6683573722839355

Token 692: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.26108020544052124
    2. 'res' → logprob: -1.636080265045166
    3. 'ret' → logprob: -4.511080265045166
    4. 'answer' → logprob: -4.511080265045166
    5. 'ans' → logprob: -5.261080265045166
    6. 'total' → logprob: -5.886080265045166
    7. 'sum' → logprob: -6.886080265045166
    8. 'r' → logprob: -7.136080265045166
    9. 's' → logprob: -7.386080265045166
    10. 'current' → logprob: -7.636080265045166

Token 693: ' qui' (ID: 2780)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3906402885913849
    2. 'res' → logprob: -1.5156402587890625
    3. 'answer' → logprob: -3.1406402587890625
    4. 'ans' → logprob: -3.5156402587890625
    5. 'ret' → logprob: -4.5156402587890625
    6. ' result' → logprob: -5.2656402587890625
    7. 'total' → logprob: -5.2656402587890625
    8. 'sum' → logprob: -5.5156402587890625
    9. ' res' → logprob: -6.7656402587890625
    10. 's' → logprob: -7.1406402587890625

Token 694: ' cumul' (ID: 163119)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6712819337844849
    2. 'rés' → logprob: -1.2962819337844849
    3. 'res' → logprob: -1.7962819337844849
    4. 'r' → logprob: -4.421281814575195
    5. 'reste' → logprob: -4.546281814575195
    6. 'val' → logprob: -5.171281814575195
    7. 'ret' → logprob: -5.296281814575195
    8. '#' → logprob: -5.921281814575195
    9. 'va' → logprob: -6.171281814575195
    10. 'ré' → logprob: -6.171281814575195

Token 695: 'era' (ID: 2060)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8105505704879761
    2. 'ateur' → logprob: -2.3105506896972656
    3. 'er' → logprob: -2.4355506896972656
    4. 'e' → logprob: -2.5605506896972656
    5. 'sum' → logprob: -2.5605506896972656
    6. 'ate' → logprob: -2.5605506896972656
    7. 'result' → logprob: -2.6855506896972656
    8. 'ated' → logprob: -3.9355506896972656
    9. 'res' → logprob: -4.435550689697266
    10. 'value' → logprob: -5.435550689697266

Token 696: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.33741194009780884
    2. 'res' → logprob: -1.337411880493164
    3. 'ans' → logprob: -4.587411880493164
    4. 'answer' → logprob: -5.462411880493164
    5. 'ret' → logprob: -5.962411880493164
    6. 'r' → logprob: -6.337411880493164
    7. 'total' → logprob: -6.462411880493164
    8. ' result' → logprob: -6.587411880493164
    9. 's' → logprob: -7.462411880493164
    10. 'le' → logprob: -8.462411880493164

Token 697: ' contribution' (ID: 26735)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3754022717475891
    2. 'res' → logprob: -1.2504022121429443
    3. 'answer' → logprob: -4.500402450561523
    4. 'ans' → logprob: -5.375402450561523
    5. 'ret' → logprob: -6.000402450561523
    6. 'r' → logprob: -6.250402450561523
    7. 's' → logprob: -6.375402450561523
    8. 'total' → logprob: -6.375402450561523
    9. 'sum' → logprob: -7.500402450561523
    10. 'val' → logprob: -7.750402450561523

Token 698: ' "' (ID: 392)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4697096049785614
    2. 'res' → logprob: -2.344709634780884
    3. ' =' → logprob: -2.719709634780884
    4. ' result' → logprob: -2.719709634780884
    5. 'total' → logprob: -3.219709634780884
    6. '=' → logprob: -3.594709634780884
    7. 'sum' → logprob: -4.219709396362305
    8. 's' → logprob: -4.594709396362305
    9. '_result' → logprob: -4.844709396362305
    10. 'answer' → logprob: -4.969709396362305

Token 699: 'const' (ID: 1671)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9583814740180969
    2. 'res' → logprob: -1.2083814144134521
    3. 'sum' → logprob: -2.458381414413452
    4. 'total' → logprob: -3.458381414413452
    5. 'part' → logprob: -3.583381414413452
    6. 'const' → logprob: -3.833381414413452
    7. 'cur' → logprob: -3.833381414413452
    8. 'tot' → logprob: -3.833381414413452
    9. ' result' → logprob: -3.958381414413452
    10. 'rés' → logprob: -4.083381652832031

Token 700: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0004019521293230355
    2. 'e' → logprob: -7.875401973724365
    3. 'ant' → logprob: -11.125401496887207
    4. '_' → logprob: -13.125401496887207
    5. 'nte' → logprob: -13.875401496887207
    6. ' ' → logprob: -14.500401496887207
    7. '   ' → logprob: -15.125401496887207
    8. 'a' → logprob: -15.250401496887207
    9. 'antes' → logprob: -15.250401496887207
    10. '#' → logprob: -15.375401496887207

Token 701: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5185572504997253
    2. ',' → logprob: -2.14355731010437
    3. '")' → logprob: -3.14355731010437
    4. 'result' → logprob: -3.14355731010437
    5. 'part' → logprob: -3.64355731010437
    6. ' et' → logprob: -3.64355731010437
    7. '<|end|>' → logprob: -3.64355731010437
    8. '"' → logprob: -3.89355731010437
    9. 'et' → logprob: -4.143557071685791
    10. '   ' → logprob: -4.768557071685791

Token 702: ' totale' (ID: 52898)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48074859380722046
    2. ' =' → logprob: -1.2307486534118652
    3. 'result' → logprob: -2.7307486534118652
    4. 'res' → logprob: -5.480748653411865
    5. ' result' → logprob: -5.480748653411865
    6. 'answer' → logprob: -5.730748653411865
    7. 'sum' → logprob: -6.105748653411865
    8. 'total' → logprob: -6.355748653411865
    9. ',' → logprob: -6.605748653411865
    10. 'part' → logprob: -6.605748653411865

Token 703: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5443426966667175
    2. 'res' → logprob: -1.6693427562713623
    3. '   ' → logprob: -2.5443427562713623
    4. ' result' → logprob: -2.6693427562713623
    5. 'total' → logprob: -3.2943427562713623
    6. ' res' → logprob: -4.544342517852783
    7. ' total' → logprob: -4.794342517852783
    8. '=' → logprob: -4.919342517852783
    9. 'sum' → logprob: -5.544342517852783
    10. 'answer' → logprob: -5.919342517852783

Token 704: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9646287560462952
    2. 'res' → logprob: -1.5896286964416504
    3. 'total' → logprob: -2.0896286964416504
    4. 'const' → logprob: -2.5896286964416504
    5. ' result' → logprob: -3.2146286964416504
    6. 'sum' → logprob: -3.3396286964416504
    7. ' res' → logprob: -3.7146286964416504
    8. ' total' → logprob: -4.08962869644165
    9. 'val' → logprob: -4.58962869644165
    10. 's' → logprob: -4.83962869644165

Token 705: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7510390281677246
    2. 'res' → logprob: -1.1260390281677246
    3. 'total' → logprob: -2.2510390281677246
    4. 'ans' (adapté à ' ans') → logprob: -3.7510390281677246
    5. 'sum' → logprob: -4.001039028167725
    6. 'answer' → logprob: -4.001039028167725
    7. 'const' → logprob: -4.626039028167725
    8. 'part' → logprob: -5.001039028167725
    9. 'acc' → logprob: -5.126039028167725
    10. 'ret' → logprob: -5.251039028167725

Token 706: 'const' (ID: 1671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4338250160217285
    2. ' =' → logprob: -1.0588250160217285
    3. '_' → logprob: -5.3088250160217285
    4. ',' → logprob: -9.80882453918457
    5. '_const' → logprob: -10.43382453918457
    6. 'a' → logprob: -11.05882453918457
    7. ')' → logprob: -11.18382453918457
    8. ' ' → logprob: -11.68382453918457
    9. '   ' → logprob: -11.80882453918457
    10. '_=' → logprob: -12.05882453918457

Token 707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520384192466736
    2. ' =' → logprob: -1.5020384788513184
    3. ',' → logprob: -9.75203800201416
    4. '_' → logprob: -10.62703800201416
    5. '   ' → logprob: -11.25203800201416
    6. ')' → logprob: -12.00203800201416
    7. ' ' → logprob: -12.87703800201416
    8. '[' → logprob: -13.87703800201416
    9. '	' → logprob: -14.50203800201416
    10. ' =
' → logprob: -14.50203800201416

Token 708: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038983117789030075
    2. '1' → logprob: -3.288983106613159
    3. 'a' → logprob: -7.288983345031738
    4. ' ' → logprob: -8.288983345031738
    5. 'A' → logprob: -13.163983345031738
    6. '(' → logprob: -13.288983345031738
    7. ' a' → logprob: -13.788983345031738
    8. '   ' → logprob: -14.163983345031738
    9. '(a' → logprob: -14.788983345031738
    10. 'b' → logprob: -15.038983345031738

Token 709: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005592276575043797
    2. '1' → logprob: -7.625559329986572
    3. 'a' → logprob: -9.625558853149414
    4. ' ' → logprob: -13.000558853149414
    5. '(' → logprob: -14.000558853149414
    6. 'A' → logprob: -14.125558853149414
    7. 'L' → logprob: -14.750558853149414
    8. 'b' → logprob: -15.000558853149414
    9. '(a' → logprob: -16.250558853149414
    10. 'pow' → logprob: -16.625558853149414

Token 710: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27986228466033936
    2. '<|end|>' → logprob: -1.5298622846603394
    3. '
' → logprob: -4.654862403869629
    4. '    
' → logprob: -5.029862403869629
    5. '  
' → logprob: -6.279862403869629
    6. ')' → logprob: -6.404862403869629
    7. 'ans' → logprob: -6.654862403869629
    8. '[' → logprob: -7.154862403869629
    9. '<|end|>' → logprob: -7.279862403869629
    10. ' ans' → logprob: -7.279862403869629

Token 711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1450476050376892
    2. '[' → logprob: -3.395047664642334
    3. '<|end|>' → logprob: -3.395047664642334
    4. ' ' → logprob: -3.895047664642334
    5. '#' → logprob: -4.645047664642334
    6. '
' → logprob: -4.770047664642334
    7. '```' → logprob: -5.145047664642334
    8. ' 
' → logprob: -5.270047664642334
    9. '    
' → logprob: -5.770047664642334
    10. '  
' → logprob: -6.145047664642334

Token 712: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41888663172721863
    2. ' ' → logprob: -2.293886661529541
    3. 'ans' → logprob: -2.918886661529541
    4. '[' → logprob: -3.293886661529541
    5. ' ans' → logprob: -3.543886661529541
    6. '#' (adapté à ' #') → logprob: -4.043886661529541
    7. '  ' → logprob: -4.168886661529541
    8. '<|end|>' → logprob: -4.543886661529541
    9. ' 
' → logprob: -4.668886661529541
    10. '+' → logprob: -4.918886661529541

Token 713: ' Initial' (ID: 9209)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003185198176652193
    2. 'answer' → logprob: -6.753185272216797
    3. 'i' → logprob: -7.253185272216797
    4. 'anst' → logprob: -7.503185272216797
    5. '#' → logprob: -9.128185272216797
    6. 'pos' → logprob: -9.628185272216797
    7. 'cur' → logprob: -9.753185272216797
    8. 'n' → logprob: -10.003185272216797
    9. 'l' → logprob: -10.128185272216797
    10. 'an' → logprob: -10.253185272216797

Token 714: 'isation' (ID: 6993)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.4155547618865967
    2. 'ze' → logprob: -2.1655547618865967
    3. 'space' → logprob: -2.9155547618865967
    4. 'const' → logprob: -3.2905547618865967
    5. 'ize' → logprob: -3.6655547618865967
    6. 'ized' → logprob: -3.9155547618865967
    7. 't' → logprob: -4.040555000305176
    8. 'al' → logprob: -4.415555000305176
    9. '```' → logprob: -4.415555000305176
    10. '#' → logprob: -5.040555000305176

Token 715: ' du' (ID: 1462)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8462324738502502
    2. 'de' → logprob: -1.4712324142456055
    3. ' of' → logprob: -2.3462324142456055
    4. ' de' → logprob: -2.3462324142456055
    5. 'd' → logprob: -3.3462324142456055
    6. '(ans' → logprob: -3.4712324142456055
    7. 'of' → logprob: -3.5962324142456055
    8. '   ' → logprob: -3.8462324142456055
    9. ' ans' → logprob: -4.3462324142456055
    10. 'des' → logprob: -5.2212324142456055

Token 716: ' dé' (ID: 2393)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0008999044075608253
    2. 'answer' → logprob: -8.125900268554688
    3. 'an' → logprob: -8.250900268554688
    4. ' ans' → logprob: -9.125900268554688
    5. 'anst' → logprob: -9.250900268554688
    6. '1' → logprob: -10.250900268554688
    7. 'anz' → logprob: -10.625900268554688
    8. '	ans' → logprob: -11.625900268554688
    9. 'a' → logprob: -12.000900268554688
    10. 'newline' → logprob: -12.000900268554688

Token 717: 'cal' (ID: 5842)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3816009759902954
    2. 'comp' → logprob: -2.631600856781006
    3. 'cal' → logprob: -2.881600856781006
    4. 'l' → logprob: -3.256600856781006
    5. 'dou' → logprob: -3.506600856781006
    6. 'com' → logprob: -4.131600856781006
    7. 'sum' → logprob: -4.631600856781006
    8. 'd' → logprob: -4.756600856781006
    9. 'c' → logprob: -5.131600856781006
    10. 'p' → logprob: -5.256600856781006

Token 718: 'age' (ID: 477)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5954925417900085
    2. 'ans' → logprob: -2.5954926013946533
    3. 'age' → logprob: -2.9704926013946533
    4. '_ans' → logprob: -2.9704926013946533
    5. ' ans' → logprob: -2.9704926013946533
    6. '_' → logprob: -3.3454926013946533
    7. 'ay' → logprob: -3.4704926013946533
    8. '   ' → logprob: -3.8454926013946533
    9. ' =' → logprob: -4.095492362976074
    10. '=' → logprob: -4.345492362976074

Token 719: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1560048758983612
    2. ' ans' → logprob: -2.1560049057006836
    3. 'offset' → logprob: -5.031004905700684
    4. '(ans' → logprob: -5.031004905700684
    5. 'current' → logprob: -5.906004905700684
    6. ' =' → logprob: -6.031004905700684
    7. '=' → logprob: -6.531004905700684
    8. '_ans' → logprob: -6.656004905700684
    9. 'cur' → logprob: -7.406004905700684
    10. ' current' → logprob: -7.531004905700684

Token 720: 'ch' (ID: 332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08864518254995346
    2. 'pow' → logprob: -2.9636452198028564
    3. 'shift' → logprob: -4.963644981384277
    4. 'offset' → logprob: -5.588644981384277
    5. 'digits' → logprob: -5.713644981384277
    6. '=' → logprob: -5.963644981384277
    7. 'const' → logprob: -6.213644981384277
    8. 'd' → logprob: -6.588644981384277
    9. '10' → logprob: -6.713644981384277
    10. 'line' → logprob: -6.713644981384277

Token 721: 'ouse' (ID: 1941)
  Prédit: 'iff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iff' → logprob: -0.6544662117958069
    2. 'ar' → logprob: -2.404466152191162
    3. 'e' → logprob: -2.779466152191162
    4. 'if' → logprob: -2.904466152191162
    5. 'an' → logprob: -2.904466152191162
    6. 'ange' → logprob: -3.154466152191162
    7. 'ain' → logprob: -3.404466152191162
    8. 'ef' → logprob: -3.529466152191162
    9. 'ec' → logprob: -4.029466152191162
    10. 'ang' → logprob: -4.154466152191162

Token 722: 'i' (ID: 72)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0424906015396118
    2. 'r' → logprob: -1.5424906015396118
    3. 't' → logprob: -1.9174906015396118
    4. '   ' → logprob: -3.0424904823303223
    5. 's' → logprob: -3.4174904823303223
    6. ' =' → logprob: -3.6674904823303223
    7. 'f' → logprob: -3.9174904823303223
    8. 'ffset' → logprob: -3.9174904823303223
    9. 'nt' → logprob: -4.042490482330322
    10. 'lf' → logprob: -4.542490482330322

Token 723: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22379939258098602
    2. '=' → logprob: -1.7237993478775024
    3. ''' → logprob: -3.973799467086792
    4. ' ='' → logprob: -6.473799228668213
    5. ' ' → logprob: -7.598799228668213
    6. ''=' → logprob: -8.598799705505371
    7. '='' → logprob: -8.723799705505371
    8. ' '' → logprob: -8.848799705505371
    9. 'const' → logprob: -8.848799705505371
    10. 's' → logprob: -9.473799705505371

Token 724: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889342308044434
    2. '=' → logprob: -2.5788934230804443
    3. 'ch' → logprob: -13.578893661499023
    4. ',' → logprob: -14.203893661499023
    5. ' ' → logprob: -14.203893661499023
    6. '   ' → logprob: -14.328893661499023
    7. 's' → logprob: -16.078893661499023
    8. ' =
' → logprob: -16.828893661499023
    9. '  ' → logprob: -17.203893661499023
    10. ' ,' → logprob: -17.203893661499023

Token 725: 'qui' (ID: 22771)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269102543592453
    2. ')' → logprob: -3.0019102096557617
    3. ' ' → logprob: -3.6269102096557617
    4. ' )' → logprob: -3.8769102096557617
    5. '1' → logprob: -4.001910209655762
    6. ' ans' → logprob: -6.501910209655762
    7. '=' → logprob: -7.251910209655762
    8. 'ans' → logprob: -7.251910209655762
    9. ' =' → logprob: -8.126910209655762
    10. 'a' → logprob: -8.126910209655762

Token 726: ' veut' (ID: 41653)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05594763904809952
    2. ' =' → logprob: -3.1809475421905518
    3. '+=' → logprob: -4.680947780609131
    4. ' +=' → logprob: -5.930947780609131
    5. ')' → logprob: -7.430947780609131
    6. ',' → logprob: -8.430947303771973
    7. '*=' → logprob: -11.055947303771973
    8. ' ' → logprob: -11.180947303771973
    9. '=
' → logprob: -11.680947303771973
    10. ' ' → logprob: -11.680947303771973

Token 727: ' dire' (ID: 4071)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9329050183296204
    2. 'dire' → logprob: -1.1829049587249756
    3. 'contin' → logprob: -2.5579049587249756
    4. '#' → logprob: -3.1829049587249756
    5. ')' → logprob: -3.5579049587249756
    6. ''' → logprob: -4.057905197143555
    7. '```' → logprob: -4.182905197143555
    8. 's' → logprob: -4.307905197143555
    9. ' ' → logprob: -4.307905197143555
    10. '  ' → logprob: -4.307905197143555

Token 728: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9822754263877869
    2. ''' → logprob: -1.9822754859924316
    3. 'offset' → logprob: -1.9822754859924316
    4. ' offset' → logprob: -2.1072754859924316
    5. ' "' → logprob: -2.3572754859924316
    6. ' '' → logprob: -3.1072754859924316
    7. ')' → logprob: -3.4822754859924316
    8. '_offset' → logprob: -4.357275485992432
    9. ' ' → logprob: -4.732275485992432
    10. ' )' → logprob: -4.857275485992432

Token 729: 'aj' (ID: 1255)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.14897896349430084
    2. ' offset' → logprob: -2.2739789485931396
    3. 'adjust' → logprob: -4.398979187011719
    4. '0' → logprob: -4.773979187011719
    5. 'shift' → logprob: -5.273979187011719
    6. ')' → logprob: -6.023979187011719
    7. ' shift' → logprob: -6.398979187011719
    8. 'd' → logprob: -7.648979187011719
    9. ' )' → logprob: -7.898979187011719
    10. ' ' → logprob: -7.898979187011719

Token 730: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -3.1424973713001236e-05
    2. 'uste' → logprob: -10.500031471252441
    3. 'uster' → logprob: -13.500031471252441
    4. 'usta' → logprob: -13.875031471252441
    5. 'ustada' → logprob: -14.375031471252441
    6. 'us' → logprob: -15.125031471252441
    7. 'usted' → logprob: -15.250031471252441
    8. 'ut' → logprob: -16.375030517578125
    9. ' ust' → logprob: -17.000030517578125
    10. 'usto' → logprob: -17.375030517578125

Token 731: 'ement' (ID: 962)
  Prédit: 'ust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.2081885039806366
    2. 'ement' → logprob: -1.833188533782959
    3. 'er' → logprob: -4.083188533782959
    4. 'ment' → logprob: -5.083188533782959
    5. '   ' → logprob: -6.208188533782959
    6. '```' → logprob: -6.583188533782959
    7. '       ' → logprob: -7.958188533782959
    8. ')' → logprob: -8.0831880569458
    9. 'e' → logprob: -8.7081880569458
    10. 'uster' → logprob: -9.5831880569458

Token 732: '"' (ID: 1)
  Prédit: ' ")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ")' → logprob: -0.8637521266937256
    2. '")' → logprob: -1.1137521266937256
    3. ')' → logprob: -1.9887521266937256
    4. ' =' → logprob: -2.8637521266937256
    5. ' )' → logprob: -3.1137521266937256
    6. '=' → logprob: -4.863752365112305
    7. '"' → logprob: -6.738752365112305
    8. ' ' → logprob: -7.738752365112305
    9. ' "' → logprob: -7.988752365112305
    10. ' ").' → logprob: -8.238752365112305

Token 733: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19702978432178497
    2. ' )' → logprob: -1.9470298290252686
    3. ' =' → logprob: -3.5720298290252686
    4. '=' → logprob: -5.0720295906066895
    5. '   ' → logprob: -6.9470295906066895
    6. ' ' → logprob: -8.447030067443848
    7. ' ' → logprob: -9.447030067443848
    8. ')=' → logprob: -9.822030067443848
    9. ' )
' → logprob: -9.947030067443848
    10. ' +=' → logprob: -10.197030067443848

Token 734: ' japonais' (ID: 162300)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3054826855659485
    2. ' japonais' → logprob: -1.5554826259613037
    3. 'python' → logprob: -3.9304826259613037
    4. 'fr' → logprob: -4.305482864379883
    5. 'anglais' → logprob: -5.555482864379883
    6. ' j' → logprob: -5.555482864379883
    7. 'ja' → logprob: -6.305482864379883
    8. ' japon' → logprob: -6.555482864379883
    9. ' français' → logprob: -6.555482864379883
    10. 'Japanese' → logprob: -6.555482864379883

Token 735: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018668832490220666
    2. ' )' → logprob: -6.626866817474365
    3. ' =' → logprob: -8.876867294311523
    4. '   ' → logprob: -9.251867294311523
    5. '")' → logprob: -9.251867294311523
    6. '=' → logprob: -9.876867294311523
    7. ')
' → logprob: -10.001867294311523
    8. ').' → logprob: -10.501867294311523
    9. '<|end|>' → logprob: -11.001867294311523
    10. ' ' → logprob: -11.376867294311523

Token 736: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5483933091163635
    2. 'ch' → logprob: -1.0483932495117188
    3. '=' → logprob: -2.9233932495117188
    4. ' ch' → logprob: -5.048393249511719
    5. '<|end|>' → logprob: -5.298393249511719
    6. ' ' → logprob: -6.423393249511719
    7. '   ' → logprob: -6.423393249511719
    8. ' ans' → logprob: -6.798393249511719
    9. 'ans' → logprob: -7.423393249511719
    10. ',' → logprob: -8.048393249511719

Token 737: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.022329123690724373
    2. ' ch' → logprob: -3.897329092025757
    3. 'ans' → logprob: -7.147329330444336
    4. ' ans' → logprob: -7.147329330444336
    5. '0' → logprob: -9.647329330444336
    6. '```' → logprob: -10.522329330444336
    7. '	ch' → logprob: -10.772329330444336
    8. ' ' → logprob: -10.897329330444336
    9. ' ' → logprob: -11.397329330444336
    10. '_ch' → logprob: -11.397329330444336

Token 738: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -8.697387966094539e-05
    2. '   ' → logprob: -10.125086784362793
    3. 'ose' → logprob: -11.250086784362793
    4. ' ' → logprob: -11.750086784362793
    5. ' =' → logprob: -11.750086784362793
    6. '_' → logprob: -11.875086784362793
    7. 'ause' → logprob: -12.875086784362793
    8. 'o' → logprob: -13.500086784362793
    9. '  ' → logprob: -13.500086784362793
    10. '=' → logprob: -14.000086784362793

Token 739: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2948405128554441e-05
    2. '   ' → logprob: -12.50001335144043
    3. 'и' → logprob: -12.87501335144043
    4. '=' → logprob: -13.25001335144043
    5. '_i' → logprob: -13.87501335144043
    6. '=i' → logprob: -14.12501335144043
    7. '	i' → logprob: -14.87501335144043
    8. '```' → logprob: -14.87501335144043
    9. 'ि' → logprob: -15.12501335144043
    10. 'і' → logprob: -15.12501335144043

Token 740: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759419202804565
    2. ' =' → logprob: -0.8259419202804565
    3. ',' → logprob: -13.200942039489746
    4. '＝' → logprob: -15.700942039489746
    5. ')' → logprob: -15.825942039489746
    6. ' ' → logprob: -16.95094108581543
    7. ' ' → logprob: -17.07594108581543
    8. ' =
' → logprob: -17.32594108581543
    9. '=int' → logprob: -17.32594108581543
    10. '=
' → logprob: -17.45094108581543

Token 741: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015104549238458276
    2. ' ' → logprob: -6.7515106201171875
    3. '1' → logprob: -8.251510620117188
    4. 'a' → logprob: -9.876510620117188
    5. 'L' → logprob: -11.126510620117188
    6. 'l' → logprob: -12.751510620117188
    7. 'n' → logprob: -12.876510620117188
    8. 'A' → logprob: -13.376510620117188
    9. '(' → logprob: -13.876510620117188
    10. 'B' → logprob: -14.126510620117188

Token 742: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002388495020568371
    2. '1' → logprob: -6.3773884773254395
    3. 'L' → logprob: -8.252388954162598
    4. 'a' → logprob: -8.377388954162598
    5. '-' → logprob: -9.377388954162598
    6. 'n' → logprob: -10.377388954162598
    7. 'A' → logprob: -10.877388954162598
    8. 'M' → logprob: -10.877388954162598
    9. 'B' → logprob: -11.752388954162598
    10. 'l' → logprob: -11.877388954162598

Token 743: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08641728013753891
    2. '<|end|>' → logprob: -2.7114171981811523
    3. ')' → logprob: -5.711417198181152
    4. '
' → logprob: -5.836417198181152
    5. ',' → logprob: -6.336417198181152
    6. ' for' → logprob: -6.461417198181152
    7. ' ' → logprob: -6.461417198181152
    8. 'for' → logprob: -6.586417198181152
    9. '[' → logprob: -7.586417198181152
    10. '    
' → logprob: -7.836417198181152

Token 744: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018819328397512436
    2. 'for' → logprob: -4.518819332122803
    3. ' for' → logprob: -5.768819332122803
    4. '    
' → logprob: -7.018819332122803
    5. '
' → logprob: -7.268819332122803
    6. '```' → logprob: -7.268819332122803
    7. ' ' → logprob: -7.643819332122803
    8. '  
' → logprob: -7.893819332122803
    9. '	' → logprob: -8.393818855285645
    10. '[' → logprob: -8.518818855285645

Token 745: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3424074351787567
    2. 'for' → logprob: -1.592407464981079
    3. 'i' → logprob: -2.842407464981079
    4. ' for' → logprob: -3.842407464981079
    5. 'ans' → logprob: -5.3424072265625
    6. ' i' → logprob: -7.2174072265625
    7. 'result' → logprob: -8.3424072265625
    8. ' ans' → logprob: -8.5924072265625
    9. '#' (adapté à ' #') → logprob: -8.8424072265625
    10. 'pos' → logprob: -9.0924072265625

Token 746: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024773201439529657
    2. 'ans' → logprob: -6.752477169036865
    3. 'i' → logprob: -6.877477169036865
    4. 'result' → logprob: -8.752477645874023
    5. 'res' → logprob: -10.252477645874023
    6. '#' → logprob: -11.127477645874023
    7. 'answer' → logprob: -11.377477645874023
    8. ' for' → logprob: -11.627477645874023
    9. 'pour' → logprob: -11.627477645874023
    10. 'while' → logprob: -12.502477645874023

Token 747: ' effect' (ID: 3159)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01917525939643383
    2. '=' → logprob: -4.394175052642822
    3. ' for' → logprob: -5.894175052642822
    4. ' =' → logprob: -6.019175052642822
    5. '   ' → logprob: -7.394175052642822
    6. 'i' → logprob: -7.519175052642822
    7. '#' → logprob: -9.76917552947998
    8. '_=' → logprob: -10.14417552947998
    9. 'range' → logprob: -10.26917552947998
    10. 'n' → logprob: -10.39417552947998

Token 748: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0067778960801661015
    2. 'u' → logprob: -5.131777763366699
    3. 'uer' → logprob: -7.256777763366699
    4. 'uez' → logprob: -9.5067777633667
    5. 'ure' → logprob: -10.1317777633667
    6. 'uate' → logprob: -11.7567777633667
    7. 'uent' → logprob: -11.8817777633667
    8. '#' → logprob: -12.1317777633667
    9. 'uera' → logprob: -13.3817777633667
    10. 'ué' → logprob: -13.6317777633667

Token 749: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2735191583633423
    2. ' for' → logprob: -1.5235191583633423
    3. '   ' → logprob: -5.273519039154053
    4. '60' → logprob: -5.523519039154053
    5. ' ' → logprob: -5.773519039154053
    6. ' range' → logprob: -5.773519039154053
    7. 'range' → logprob: -5.898519039154053
    8. '(' → logprob: -6.398519039154053
    9. 'n' → logprob: -8.398519515991211
    10. 'i' → logprob: -8.773519515991211

Token 750: ' dé' (ID: 2393)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00047261794679798186
    2. ' for' → logprob: -7.875472545623779
    3. 'while' → logprob: -9.625473022460938
    4. 'range' → logprob: -11.750473022460938
    5. '_' → logprob: -12.000473022460938
    6. 'i' → logprob: -12.250473022460938
    7. '
' → logprob: -12.250473022460938
    8. '```' → logprob: -13.375473022460938
    9. 'r' → logprob: -14.250473022460938
    10. '   ' → logprob: -16.125473022460938

Token 751: 'composition' (ID: 119135)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009959840215742588
    2. 'f' → logprob: -5.259959697723389
    3. 'while' → logprob: -5.509959697723389
    4. ' for' → logprob: -7.884959697723389
    5. 'fi' → logprob: -9.259960174560547
    6. 'comp' → logprob: -9.634960174560547
    7. '```' → logprob: -10.134960174560547
    8. 'range' → logprob: -10.884960174560547
    9. ' while' → logprob: -11.384960174560547
    10. 'fin' → logprob: -11.384960174560547

Token 752: ' b' (ID: 287)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.473206102848053
    2. ' du' → logprob: -1.8482060432434082
    3. '   ' → logprob: -2.473206043243408
    4. ' of' → logprob: -3.223206043243408
    5. ' for' → logprob: -3.473206043243408
    6. 'de' → logprob: -3.598206043243408
    7. ' n' → logprob: -4.973206043243408
    8. ' while' → logprob: -4.973206043243408
    9. 'for' → logprob: -5.598206043243408
    10. 'n' → logprob: -5.723206043243408

Token 753: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34346622228622437
    2. ' >>=' → logprob: -2.218466281890869
    3. ',' → logprob: -3.343466281890869
    4. '>>' → logprob: -3.468466281890869
    5. ' >>' → logprob: -3.968466281890869
    6. 'inaire' → logprob: -4.093466281890869
    7. ' in' → logprob: -4.093466281890869
    8. '   ' → logprob: -4.218466281890869
    9. ' en' → logprob: -4.718466281890869
    10. '=' → logprob: -4.843466281890869

Token 754: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23336803913116455
    2. ' for' → logprob: -1.9833680391311646
    3. 'for' → logprob: -2.858367919921875
    4. ' in' → logprob: -5.358367919921875
    5. ' of' → logprob: -5.608367919921875
    6. 'in' → logprob: -6.858367919921875
    7. ',' → logprob: -7.108367919921875
    8. '
' → logprob: -7.358367919921875
    9. '  ' → logprob: -7.483367919921875
    10. 'of' → logprob: -7.858367919921875

Token 755: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020603785291314125
    2. ' n' → logprob: -3.895603895187378
    3. 'b' → logprob: -10.395604133605957
    4. '
' → logprob: -11.395604133605957
    5. '(n' → logprob: -12.270604133605957
    6. '   ' → logprob: -12.895604133605957
    7. ' b' → logprob: -13.145604133605957
    8. 'range' → logprob: -13.270604133605957
    9. 'a' → logprob: -13.395604133605957
    10. '	n' → logprob: -13.770604133605957

Token 756: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42480286955833435
    2. '   ' → logprob: -2.049802780151367
    3. ' n' → logprob: -2.174802780151367
    4. 'while' → logprob: -3.424802780151367
    5. ' for' → logprob: -3.799802780151367
    6. ' while' → logprob: -4.174802780151367
    7. 'for' → logprob: -4.299802780151367
    8. 'de' → logprob: -5.174802780151367
    9. ' de' → logprob: -5.299802780151367
    10. '(n' → logprob: -6.174802780151367

Token 757: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17464016377925873
    2. '   ' → logprob: -2.67464017868042
    3. 'for' → logprob: -3.42464017868042
    4. ' :' → logprob: -3.67464017868042
    5. ' for' → logprob: -4.04964017868042
    6. ',' → logprob: -5.17464017868042
    7. ':
' → logprob: -5.92464017868042
    8. ' ' → logprob: -6.92464017868042
    9. ' :
' → logprob: -7.04964017868042
    10. '
' → logprob: -7.04964017868042

Token 758: 'nombre' (ID: 28576)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6532952189445496
    2. ' n' → logprob: -1.5282952785491943
    3. ')' → logprob: -2.1532952785491943
    4. '1' → logprob: -2.7782952785491943
    5. '):' → logprob: -4.278295040130615
    6. ' for' → logprob: -4.403295040130615
    7. '
' → logprob: -4.778295040130615
    8. '   ' → logprob: -4.778295040130615
    9. '):
' → logprob: -4.903295040130615
    10. ' (' → logprob: -5.278295040130615

Token 759: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44390669465065
    2. '>>' → logprob: -2.318906784057617
    3. ' >>=' → logprob: -2.443906784057617
    4. ')' → logprob: -3.193906784057617
    5. '   ' → logprob: -3.318906784057617
    6. '>' → logprob: -3.568906784057617
    7. '):' → logprob: -4.068906784057617
    8. '):
' → logprob: -4.443906784057617
    9. ' =' → logprob: -4.568906784057617
    10. '+=' → logprob: -5.443906784057617

Token 760: ' blocs' (ID: 182599)
  Prédit: ' blocs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocs' → logprob: -1.219331979751587
    2. 'bloc' → logprob: -1.719331979751587
    3. 'blocks' → logprob: -1.844331979751587
    4. 'bl' → logprob: -2.594331979751587
    5. 'fois' → logprob: -2.969331979751587
    6. ')' → logprob: -2.969331979751587
    7. '1' → logprob: -3.094331979751587
    8. 'b' → logprob: -3.844331979751587
    9. '```' → logprob: -4.094331741333008
    10. ' bloques' → logprob: -4.094331741333008

Token 761: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1692013144493103
    2. '):' → logprob: -2.294201374053955
    3. '   ' → logprob: -3.169201374053955
    4. ',' → logprob: -6.044201374053955
    5. '):
' → logprob: -6.044201374053955
    6. ' )' → logprob: -6.294201374053955
    7. ':' → logprob: -6.669201374053955
    8. '<|end|>' → logprob: -7.419201374053955
    9. '[' → logprob: -7.669201374053955
    10. '
' → logprob: -7.669201374053955

Token 762: ' traiter' (ID: 105852)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.09780039638280869
    2. 'concat' → logprob: -3.8478004932403564
    3. 'part' → logprob: -4.222800254821777
    4. 'trait' → logprob: -4.222800254821777
    5. '```' → logprob: -4.472800254821777
    6. '#' → logprob: -5.097800254821777
    7. '   ' → logprob: -5.847800254821777
    8. 'repr' → logprob: -5.847800254821777
    9. ')' → logprob: -6.097800254821777
    10. 'Ajouter' → logprob: -6.347800254821777

Token 763: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13040974736213684
    2. '):' → logprob: -2.8804097175598145
    3. '   ' → logprob: -3.3804097175598145
    4. ',' → logprob: -4.7554097175598145
    5. ').' → logprob: -5.0054097175598145
    6. '.' → logprob: -5.2554097175598145
    7. '):
' → logprob: -5.6304097175598145
    8. ':' → logprob: -5.6304097175598145
    9. '),' → logprob: -6.7554097175598145
    10. 'for' → logprob: -6.8804097175598145

Token 764: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7137049436569214
    2. '   ' → logprob: -1.3387049436569214
    3. 'for' → logprob: -1.9637049436569214
    4. '
' → logprob: -2.463705062866211
    5. 'n' → logprob: -5.588705062866211
    6. ')' → logprob: -5.838705062866211
    7. 'i' → logprob: -5.963705062866211
    8. ':' → logprob: -6.338705062866211
    9. ' i' → logprob: -6.463705062866211
    10. '  
' → logprob: -6.463705062866211

Token 765: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4442473351955414
    2. ' for' → logprob: -1.3192473649978638
    3. 'i' → logprob: -3.194247245788574
    4. '   ' → logprob: -3.194247245788574
    5. ' i' → logprob: -5.069247245788574
    6. 'n' → logprob: -6.819247245788574
    7. 'result' → logprob: -7.444247245788574
    8. 'res' → logprob: -8.819247245788574
    9. ' ans' → logprob: -8.819247245788574
    10. ' result' → logprob: -8.819247245788574

Token 766: ' À' (ID: 27643)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3944278657436371
    2. ' for' → logprob: -1.1444278955459595
    3. 'i' → logprob: -5.64442777633667
    4. '   ' → logprob: -6.26942777633667
    5. ' i' → logprob: -6.26942777633667
    6. '
' → logprob: -9.394428253173828
    7. 'while' → logprob: -10.644428253173828
    8. ' ' → logprob: -10.769428253173828
    9. 'n' → logprob: -11.019428253173828
    10. '```' → logprob: -11.269428253173828

Token 767: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044830597937107086
    2. 'range' → logprob: -3.794830560684204
    3. 'i' → logprob: -4.294830799102783
    4. ' for' → logprob: -5.044830799102783
    5. ' range' → logprob: -7.669830799102783
    6. ' i' → logprob: -8.669830322265625
    7. 'r' → logprob: -9.419830322265625
    8. '   ' → logprob: -9.544830322265625
    9. '_' → logprob: -9.794830322265625
    10. ' ' → logprob: -9.794830322265625

Token 768: ' bit' (ID: 3546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09539078921079636
    2. ' i' → logprob: -2.970390796661377
    3. 'for' → logprob: -3.595390796661377
    4. ' for' → logprob: -5.595390796661377
    5. '   ' → logprob: -6.345390796661377
    6. 'if' → logprob: -6.595390796661377
    7. '_' → logprob: -6.845390796661377
    8. '1' → logprob: -6.970390796661377
    9. ' ' → logprob: -6.970390796661377
    10. 'range' → logprob: -7.595390796661377

Token 769: ' '' (ID: 461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6111528277397156
    2. 'in' → logprob: -1.7361528873443604
    3. ':' → logprob: -1.9861528873443604
    4. '   ' → logprob: -2.6111528873443604
    5. '=' → logprob: -3.7361528873443604
    6. ' =' → logprob: -4.486152648925781
    7. 'if' → logprob: -4.986152648925781
    8. ' n' → logprob: -5.486152648925781
    9. ':
' → logprob: -5.736152648925781
    10. ' if' → logprob: -5.736152648925781

Token 770: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35519611835479736
    2. ' in' → logprob: -1.6051961183547974
    3. ' i' → logprob: -3.105195999145508
    4. '1' → logprob: -3.480195999145508
    5. 'in' → logprob: -4.230195999145508
    6. 'n' → logprob: -5.605195999145508
    7. 'if' → logprob: -6.730195999145508
    8. ' n' → logprob: -7.230195999145508
    9. '   ' → logprob: -7.230195999145508
    10. '=' → logprob: -8.230195999145508

Token 771: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3396371304988861
    2. '   ' → logprob: -2.089637041091919
    3. ':' → logprob: -3.214637041091919
    4. 'in' → logprob: -3.464637041091919
    5. ')' → logprob: -3.714637041091919
    6. '):' → logprob: -3.839637041091919
    7. '):
' → logprob: -4.589637279510498
    8. ' en' → logprob: -4.964637279510498
    9. ''' → logprob: -5.464637279510498
    10. ' if' → logprob: -5.589637279510498

Token 772: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46912631392478943
    2. ' in' → logprob: -1.4691263437271118
    3. '   ' → logprob: -2.4691262245178223
    4. 'in' → logprob: -3.7191262245178223
    5. ',' → logprob: -4.844126224517822
    6. ' :' → logprob: -5.094126224517822
    7. ' if' → logprob: -5.344126224517822
    8. ':
' → logprob: -5.469126224517822
    9. 'if' → logprob: -5.719126224517822
    10. ' en' → logprob: -6.094126224517822

Token 773: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7425734996795654
    2. 'i' → logprob: -1.7425734996795654
    3. 'range' → logprob: -1.9925734996795654
    4. ' ' → logprob: -2.2425734996795654
    5. 'l' → logprob: -3.3675734996795654
    6. '0' → logprob: -4.2425737380981445
    7. ' range' → logprob: -4.4925737380981445
    8. '<|end|>' → logprob: -4.7425737380981445
    9. ' i' → logprob: -4.9925737380981445
    10. '```' → logprob: -5.7425737380981445

Token 774: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14635729789733887
    2. '1' → logprob: -2.646357297897339
    3. ' range' → logprob: -4.146357536315918
    4. 'i' → logprob: -4.271357536315918
    5. '0' → logprob: -4.271357536315918
    6. 'l' → logprob: -4.896357536315918
    7. 'in' → logprob: -6.271357536315918
    8. ' ' → logprob: -6.396357536315918
    9. 'part' → logprob: -6.396357536315918
    10. '```' → logprob: -6.521357536315918

Token 775: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03673488274216652
    2. ':
' → logprob: -4.0367350578308105
    3. '   ' → logprob: -4.7867350578308105
    4. ' if' → logprob: -5.2867350578308105
    5. ',' → logprob: -5.5367350578308105
    6. ' :' → logprob: -7.2867350578308105
    7. 'if' → logprob: -8.411734580993652
    8. ' in' → logprob: -10.036734580993652
    9. ' :
' → logprob: -10.786734580993652
    10. ' ,' → logprob: -11.036734580993652

Token 776: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07925602048635483
    2. 'range' → logprob: -2.829256057739258
    3. ' range' → logprob: -4.704256057739258
    4. ' n' → logprob: -4.829256057739258
    5. '   ' → logprob: -10.454256057739258
    6. ' ' → logprob: -10.829256057739258
    7. 'bin' → logprob: -12.079256057739258
    8. ' la' → logprob: -12.204256057739258
    9. 'b' → logprob: -12.329256057739258
    10. '(n' → logprob: -12.954256057739258

Token 777: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08535175025463104
    2. ':
' → logprob: -2.5853517055511475
    3. '   ' → logprob: -5.335351943969727
    4. ',' → logprob: -6.960351943969727
    5. ' :' → logprob: -7.960351943969727
    6. ' if' → logprob: -8.460351943969727
    7. 'if' → logprob: -10.335351943969727
    8. ' :
' → logprob: -10.710351943969727
    9. '):' → logprob: -11.210351943969727
    10. ':
' → logprob: -11.460351943969727

Token 778: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3941788077354431
    2. '   ' → logprob: -1.769178867340088
    3. 'if' → logprob: -1.894178867340088
    4. '       ' → logprob: -5.519178867340088
    5. '    ' → logprob: -7.769178867340088
    6. '	if' → logprob: -8.76917839050293
    7. '<|end|>' → logprob: -9.76917839050293
    8. '#' → logprob: -10.01917839050293
    9. '  ' → logprob: -10.39417839050293
    10. ' ' → logprob: -10.89417839050293

Token 779: ' emp' (ID: 4927)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4641835391521454
    2. ' if' → logprob: -1.0891835689544678
    3. 'for' → logprob: -3.9641835689544678
    4. ' for' → logprob: -4.839183330535889
    5. '   ' → logprob: -4.964183330535889
    6. ':' → logprob: -7.964183330535889
    7. '#' → logprob: -8.339183807373047
    8. '    ' → logprob: -8.964183807373047
    9. ' ' → logprob: -9.464183807373047
    10. ' #' → logprob: -10.089183807373047

Token 780: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.03845086693763733
    2. 'êche' → logprob: -4.413450717926025
    3. 'che' → logprob: -5.413450717926025
    4. 'n' → logprob: -5.413450717926025
    5. 'oche' → logprob: -6.163450717926025
    6. 'o' → logprob: -6.288450717926025
    7. '   ' → logprob: -6.413450717926025
    8. '=' → logprob: -7.163450717926025
    9. 'f' → logprob: -7.163450717926025
    10. '**' → logprob: -7.163450717926025

Token 781: ' la' (ID: 557)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.4890200197696686
    2. '   ' → logprob: -2.2390201091766357
    3. '(
' → logprob: -2.3640201091766357
    4. ' (' → logprob: -2.8640201091766357
    5. 'ans' → logprob: -3.3640201091766357
    6. ' (
' → logprob: -3.7390201091766357
    7. ' ans' → logprob: -4.114019870758057
    8. ' doubling' → logprob: -4.364019870758057
    9. ')' → logprob: -4.864019870758057
    10. '(' → logprob: -4.864019870758057

Token 782: ' contribution' (ID: 26735)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4355021119117737
    2. ' if' → logprob: -1.060502052307129
    3. ' ' → logprob: -5.810502052307129
    4. '   ' → logprob: -6.310502052307129
    5. '  ' → logprob: -7.810502052307129
    6. 'for' → logprob: -7.935502052307129
    7. ':' → logprob: -8.560502052307129
    8. '    ' → logprob: -8.935502052307129
    9. ' for' → logprob: -9.060502052307129
    10. 'space' → logprob: -9.435502052307129

Token 783: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1427156925201416
    2. ')' → logprob: -2.1427156925201416
    3. '   ' → logprob: -2.1427156925201416
    4. '    ' → logprob: -2.5177156925201416
    5. ' ' → logprob: -2.8927156925201416
    6. 'const' → logprob: -2.8927156925201416
    7. ' )' → logprob: -3.0177156925201416
    8. '<|end|>' → logprob: -3.7677156925201416
    9. ' +=' → logprob: -3.7677156925201416
    10. '(i' → logprob: -4.0177154541015625

Token 784: ' ' (ID: 220)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.029257778078317642
    2. 'i' → logprob: -3.7792577743530273
    3. 'bloc' → logprob: -6.404257774353027
    4. ' doubling' → logprob: -7.154257774353027
    5. 'part' → logprob: -7.279257774353027
    6. 'block' → logprob: -7.904257774353027
    7. ' i' → logprob: -8.154257774353027
    8. 'd' → logprob: -8.279257774353027
    9. 'b' → logprob: -8.404257774353027
    10. '(i' → logprob: -8.404257774353027

Token 785: '2' (ID: 17)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.06588052213191986
    2. 'i' → logprob: -2.940880537033081
    3. 'if' → logprob: -5.065880298614502
    4. 'part' → logprob: -6.440880298614502
    5. '(i' → logprob: -7.565880298614502
    6. 'b' → logprob: -7.565880298614502
    7. '[i' → logprob: -7.940880298614502
    8. 'd' → logprob: -8.31588077545166
    9. 'pow' → logprob: -8.56588077545166
    10. 'n' → logprob: -8.81588077545166

Token 786: '^' (ID: 61)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.290397047996521
    2. '**' → logprob: -1.540397047996521
    3. '^' → logprob: -3.5403971672058105
    4. ' ' → logprob: -5.1653971672058105
    5. ' ^' → logprob: -7.0403971672058105
    6. '[i' → logprob: -7.1653971672058105
    7. 'i' → logprob: -8.040396690368652
    8. '   ' → logprob: -8.540396690368652
    9. ' i' → logprob: -8.915396690368652
    10. ')' → logprob: -9.040396690368652

Token 787: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11881020665168762
    2. ' i' → logprob: -2.2438101768493652
    3. '	i' → logprob: -5.618810176849365
    4. '   ' → logprob: -6.868810176849365
    5. '[i' → logprob: -6.868810176849365
    6. '(i' → logprob: -8.868810653686523
    7. ' ' → logprob: -10.368810653686523
    8. '{i' → logprob: -11.118810653686523
    9. '_i' → logprob: -11.243810653686523
    10. '    ' → logprob: -11.493810653686523

Token 788: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1913739442825317
    2. '^' → logprob: -1.6913739442825317
    3. '**' → logprob: -1.8163739442825317
    4. ')' → logprob: -2.316373825073242
    5. 'i' → logprob: -2.316373825073242
    6. '[i' → logprob: -3.066373825073242
    7. '   ' → logprob: -4.316373825073242
    8. ' i' → logprob: -4.441373825073242
    9. '(i' → logprob: -4.566373825073242
    10. ' ' → logprob: -4.691373825073242

Token 789: 'ème' (ID: 9767)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14108648896217346
    2. ' i' → logprob: -2.2660865783691406
    3. '   ' → logprob: -5.016086578369141
    4. '1' → logprob: -5.266086578369141
    5. ')' → logprob: -5.391086578369141
    6. ' ' → logprob: -5.641086578369141
    7. '`' → logprob: -7.266086578369141
    8. '[i' → logprob: -7.391086578369141
    9. '  ' → logprob: -7.516086578369141
    10. '```' → logprob: -7.516086578369141

Token 790: ' bloc' (ID: 51218)
  Prédit: ' bloc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bloc' → logprob: -1.521878957748413
    2. 'block' → logprob: -1.646878957748413
    3. 'bloc' → logprob: -1.896878957748413
    4. ')' → logprob: -2.021878957748413
    5. ' block' → logprob: -2.021878957748413
    6. '1' → logprob: -3.146878957748413
    7. 'i' → logprob: -3.771878957748413
    8. ' i' → logprob: -4.146879196166992
    9. ']' → logprob: -4.396879196166992
    10. '   ' → logprob: -4.521879196166992

Token 791: ' via' (ID: 4493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031452830880880356
    2. ' for' → logprob: -4.031452655792236
    3. ',' → logprob: -5.531452655792236
    4. '<|end|>' → logprob: -5.531452655792236
    5. ':' → logprob: -6.781452655792236
    6. 'for' → logprob: -7.156452655792236
    7. ' ' → logprob: -7.281452655792236
    8. '  ' → logprob: -7.781452655792236
    9. '<|end|>' → logprob: -8.031453132629395
    10. ' if' → logprob: -8.406453132629395

Token 792: ' le' (ID: 505)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.3363851308822632
    2. 'range' → logprob: -2.3363852500915527
    3. ' doubling' → logprob: -2.7113852500915527
    4. ' range' → logprob: -3.2113852500915527
    5. 'if' → logprob: -3.4613852500915527
    6. '   ' → logprob: -4.211385250091553
    7. 'pow' → logprob: -4.961385250091553
    8. ' if' → logprob: -5.086385250091553
    9. 'for' → logprob: -5.961385250091553
    10. ')' → logprob: -6.086385250091553

Token 793: ' doubl' (ID: 127992)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6606892347335815
    2. 'for' → logprob: -0.7856892347335815
    3. ' if' → logprob: -4.285689353942871
    4. ' for' → logprob: -4.535689353942871
    5. 'dou' → logprob: -6.910689353942871
    6. 'i' → logprob: -7.035689353942871
    7. '   ' → logprob: -7.035689353942871
    8. 'range' → logprob: -8.785689353942871
    9. 'pow' → logprob: -10.285689353942871
    10. ' i' → logprob: -10.285689353942871

Token 794: 'age' (ID: 477)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.026057815179228783
    2. 'age' → logprob: -3.776057720184326
    3. 'i' → logprob: -7.151057720184326
    4. 'a' → logprob: -7.151057720184326
    5. 'e' → logprob: -7.401057720184326
    6. 'er' → logprob: -9.276058197021484
    7. 'é' → logprob: -9.401058197021484
    8. 'in' → logprob: -9.651058197021484
    9. 'aging' → logprob: -10.151058197021484
    10. 'able' → logprob: -10.401058197021484

Token 795: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12461943924427032
    2. '<|end|>' → logprob: -3.624619483947754
    3. '[' → logprob: -3.999619483947754
    4. ' ' → logprob: -4.624619483947754
    5. ':' → logprob: -4.624619483947754
    6. '[i' → logprob: -4.749619483947754
    7. ',' → logprob: -4.749619483947754
    8. 'for' → logprob: -4.999619483947754
    9. ')' → logprob: -5.124619483947754
    10. ' for' → logprob: -5.374619483947754

Token 796: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41051220893859863
    2. ' for' → logprob: -1.2855122089385986
    3. 'for' → logprob: -3.0355122089385986
    4. ' 
' → logprob: -5.9105119705200195
    5. '
' → logprob: -6.0355119705200195
    6. ' i' → logprob: -6.1605119705200195
    7. '  
' → logprob: -6.2855119705200195
    8. 'i' → logprob: -6.9105119705200195
    9. '    
' → logprob: -7.2855119705200195
    10. ' ' → logprob: -7.4105119705200195

Token 797: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8404651284217834
    2. ' for' → logprob: -0.9654651284217834
    3. ' ans' → logprob: -2.2154650688171387
    4. 'for' (adapté à ' for') → logprob: -2.8404650688171387
    5. ' i' → logprob: -4.465465068817139
    6. 'ans' → logprob: -5.715465068817139
    7. ' ' → logprob: -6.340465068817139
    8. 'i' → logprob: -6.340465068817139
    9. ' n' → logprob: -8.340465545654297
    10. '  ' → logprob: -8.340465545654297

Token 798: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38687753677368164
    2. 'i' → logprob: -1.1368775367736816
    3. '	i' → logprob: -12.386877059936523
    4. ' ' → logprob: -13.761877059936523
    5. '_i' → logprob: -14.011877059936523
    6. '_' → logprob: -15.761877059936523
    7. ' ' → logprob: -16.136877059936523
    8. '```' → logprob: -17.386877059936523
    9. '   ' → logprob: -17.636877059936523
    10. ',i' → logprob: -18.011877059936523

Token 799: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11284594237804413
    2. 'in' → logprob: -2.2378458976745605
    3. ' ' → logprob: -10.987846374511719
    4. '	in' → logprob: -12.737846374511719
    5. '  ' → logprob: -13.487846374511719
    6. 'space' → logprob: -14.237846374511719
    7. ' i' → logprob: -15.112846374511719
    8. ',' → logprob: -15.862846374511719
    9. '<|end|>' → logprob: -15.987846374511719
    10. ')' → logprob: -16.11284637451172

Token 800: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196802109479904
    2. ' range' → logprob: -2.8119680881500244
    3. '	range' → logprob: -15.686967849731445
    4. '(range' → logprob: -15.936967849731445
    5. ' ' → logprob: -16.311967849731445
    6. '   ' → logprob: -17.936967849731445
    7. 're' → logprob: -18.061967849731445
    8. '
' → logprob: -18.311967849731445
    9. '```' → logprob: -18.686967849731445
    10. 'rang' → logprob: -19.186967849731445

Token 801: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.537180211627856e-05
    2. ' (' → logprob: -11.000045776367188
    3. '60' → logprob: -11.000045776367188
    4. '(
' → logprob: -12.500045776367188
    5. ',' → logprob: -12.625045776367188
    6. '(b' → logprob: -13.875045776367188
    7. '(len' → logprob: -14.000045776367188
    8. '(range' → logprob: -14.250045776367188
    9. '64' → logprob: -14.625045776367188
    10. ')' → logprob: -15.125045776367188

Token 802: '0' (ID: 15)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -5.919942486798391e-05
    2. '0' → logprob: -9.750059127807617
    3. '6' → logprob: -14.750059127807617
    4. ' ' → logprob: -15.000059127807617
    5. '   ' → logprob: -16.625059127807617
    6. '61' → logprob: -16.875059127807617
    7. '
' → logprob: -18.875059127807617
    8. '59' → logprob: -19.125059127807617
    9. '(' → logprob: -19.500059127807617
    10. 'range' → logprob: -19.625059127807617

Token 803: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01682496815919876
    2. ',n' → logprob: -4.766825199127197
    3. ' ,' → logprob: -4.891825199127197
    4. 'n' → logprob: -8.016824722290039
    5. '(n' → logprob: -9.016824722290039
    6. ',b' → logprob: -9.141824722290039
    7. '1' → logprob: -10.141824722290039
    8. '(' → logprob: -10.641824722290039
    9. '   ' → logprob: -11.266824722290039
    10. 'b' → logprob: -11.891824722290039

Token 804: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '61' → logprob: -16.000032424926758
    4. '64' → logprob: -16.250032424926758
    5. '59' → logprob: -16.875032424926758
    6. '   ' → logprob: -17.250032424926758
    7. '6' → logprob: -17.750032424926758
    8. '62' → logprob: -19.750032424926758
    9. '40' → logprob: -20.125032424926758
    10. '  ' → logprob: -21.250032424926758

Token 805: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -1.0280383548888494e-06
    2. '64' → logprob: -15.250000953674316
    3. '61' → logprob: -15.250000953674316
    4. '59' → logprob: -15.625000953674316
    5. ' ' → logprob: -16.000001907348633
    6. 'n' → logprob: -16.750001907348633
    7. '40' → logprob: -17.125001907348633
    8. 'b' → logprob: -17.625001907348633
    9. '6' → logprob: -17.750001907348633
    10. 'len' → logprob: -18.250001907348633

Token 806: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6935634016990662
    2. '):' → logprob: -0.6935634016990662
    3. '   ' → logprob: -8.818563461303711
    4. '):
' → logprob: -8.943563461303711
    5. ')' → logprob: -9.943563461303711
    6. ' ):' → logprob: -10.193563461303711
    7. ' ):
' → logprob: -10.818563461303711
    8. 'if' → logprob: -11.568563461303711
    9. ':' → logprob: -11.568563461303711
    10. ' if' → logprob: -12.693563461303711

Token 807: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2193608582019806
    2. ' if' → logprob: -1.7193608283996582
    3. '   ' → logprob: -4.344360828399658
    4. ':' → logprob: -6.094360828399658
    5. 'if' → logprob: -7.344360828399658
    6. '<|end|>' → logprob: -8.094361305236816
    7. ' ' → logprob: -8.344361305236816
    8. '    ' → logprob: -8.469361305236816
    9. ' #' → logprob: -8.594361305236816
    10. ' :' → logprob: -8.719361305236816

Token 808: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07136134058237076
    2. 'if' → logprob: -2.6963613033294678
    3. '   ' → logprob: -7.196361541748047
    4. '       ' → logprob: -7.821361541748047
    5. ' 
' → logprob: -9.571361541748047
    6. '	if' → logprob: -9.571361541748047
    7. '    ' → logprob: -9.821361541748047
    8. ' ' → logprob: -10.321361541748047
    9. '
' → logprob: -10.696361541748047
    10. '        
' → logprob: -11.821361541748047

Token 809: ' Test' (ID: 4674)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5570885807392187e-05
    2. ' if' → logprob: -11.750015258789062
    3. '   ' → logprob: -12.000015258789062
    4. '       ' → logprob: -13.875015258789062
    5. '
' → logprob: -14.625015258789062
    6. 'If' → logprob: -17.500015258789062
    7. ' ' → logprob: -17.500015258789062
    8. '        
' → logprob: -17.625015258789062
    9. '           ' → logprob: -17.875015258789062
    10. '	if' → logprob: -18.125015258789062

Token 810: ' pour' (ID: 1930)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11423434317111969
    2. 'if' → logprob: -2.239234447479248
    3. ' (' → logprob: -7.364234447479248
    4. ' n' → logprob: -8.11423397064209
    5. '(n' → logprob: -8.98923397064209
    6. '   ' → logprob: -9.11423397064209
    7. '       ' → logprob: -9.23923397064209
    8. ' ((' → logprob: -9.61423397064209
    9. '((' → logprob: -10.23923397064209
    10. 'n' → logprob: -11.73923397064209

Token 811: ' savoir' (ID: 22835)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.18977327644824982
    2. ' (' → logprob: -2.1897733211517334
    3. 'n' → logprob: -3.0647733211517334
    4. ' n' → logprob: -4.939773082733154
    5. '((' → logprob: -5.314773082733154
    6. 'if' → logprob: -7.064773082733154
    7. '(b' → logprob: -8.064773559570312
    8. '(' → logprob: -8.564773559570312
    9. ' ((' → logprob: -8.564773559570312
    10. '(ch' → logprob: -8.564773559570312

Token 812: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3967057466506958
    2. '(n' → logprob: -1.5217057466506958
    3. ' if' → logprob: -2.3967056274414062
    4. 'n' → logprob: -4.771705627441406
    5. ' (' → logprob: -5.021705627441406
    6. '((' → logprob: -6.271705627441406
    7. ' n' → logprob: -7.396705627441406
    8. '   ' → logprob: -7.771705627441406
    9. '(' → logprob: -10.521705627441406
    10. ' ((' → logprob: -10.771705627441406

Token 813: ' le' (ID: 505)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10413461178541183
    2. 'n' → logprob: -3.1041345596313477
    3. ' (' → logprob: -3.1041345596313477
    4. ' n' → logprob: -4.729134559631348
    5. '(' → logprob: -8.354134559631348
    6. '((' → logprob: -9.354134559631348
    7. ' ' → logprob: -12.604134559631348
    8. '   ' → logprob: -13.104134559631348
    9. ' ((' → logprob: -13.354134559631348
    10. '(not' → logprob: -13.604134559631348

Token 814: ' i' (ID: 575)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10381821542978287
    2. 'n' → logprob: -2.35381817817688
    3. ' (' → logprob: -6.103818416595459
    4. ' n' → logprob: -7.103818416595459
    5. '((' → logprob: -8.2288179397583
    6. '(' → logprob: -8.2288179397583
    7. '1' → logprob: -12.9788179397583
    8. ' ' → logprob: -13.6038179397583
    9. 'b' → logprob: -13.6038179397583
    10. '(
' → logprob: -13.6038179397583

Token 815: '-' (ID: 12)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.6812357306480408
    2. '-th' → logprob: -0.8062357306480408
    3. ' th' → logprob: -3.6812357902526855
    4. ' bit' → logprob: -4.9312357902526855
    5. ' &' → logprob: -5.5562357902526855
    6. ' ' → logprob: -6.0562357902526855
    7. ' token' → logprob: -6.0562357902526855
    8. 'n' → logprob: -6.9312357902526855
    9. ' n' → logprob: -7.1812357902526855
    10. 'h' → logprob: -7.3062357902526855

Token 816: 'ème' (ID: 9767)
  Prédit: '-th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-th' → logprob: -0.2832929790019989
    2. 'th' → logprob: -1.7832930088043213
    3. ''t' → logprob: -3.1582930088043213
    4. ' th' → logprob: -4.783292770385742
    5. ' ' → logprob: -4.908292770385742
    6. ' token' → logprob: -5.158292770385742
    7. 't' → logprob: -5.533292770385742
    8. ' bit' → logprob: -6.283292770385742
    9. 'n' → logprob: -6.533292770385742
    10. 'token' → logprob: -6.783292770385742

Token 817: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.4743582606315613
    2. ' bit' → logprob: -0.9743582606315613
    3. '(bit' → logprob: -8.849358558654785
    4. '(' → logprob: -10.224358558654785
    5. ' (' → logprob: -10.224358558654785
    6. 'b' → logprob: -10.849358558654785
    7. ' ' → logprob: -11.099358558654785
    8. '(i' → logprob: -12.474358558654785
    9. '   ' → logprob: -12.599358558654785
    10. ' i' → logprob: -12.849358558654785

Token 818: ' est' (ID: 893)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2671809494495392
    2. ' (' → logprob: -1.7671809196472168
    3. ' &' → logprob: -3.767180919647217
    4. 'n' → logprob: -4.017180919647217
    5. ' n' → logprob: -4.392180919647217
    6. '(' → logprob: -5.892180919647217
    7. '&' → logprob: -6.017180919647217
    8. '((' → logprob: -6.142180919647217
    9. ' of' → logprob: -6.767180919647217
    10. ' in' → logprob: -7.517180919647217

Token 819: ' à' (ID: 1221)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3398192524909973
    2. ' (' → logprob: -1.5898191928863525
    3. '1' → logprob: -2.5898191928863525
    4. 'n' → logprob: -5.339819431304932
    5. '(' → logprob: -5.839819431304932
    6. ' n' → logprob: -7.339819431304932
    7. '   ' → logprob: -7.714819431304932
    8. '((' → logprob: -9.464818954467773
    9. ' ' → logprob: -9.714818954467773
    10. ' set' → logprob: -9.964818954467773

Token 820: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007266097818501294
    2. ' ' → logprob: -7.250726699829102
    3. '```' → logprob: -12.250726699829102
    4. '   ' → logprob: -12.375726699829102
    5. ''' → logprob: -13.000726699829102
    6. '0' → logprob: -13.875726699829102
    7. 'b' → logprob: -14.375726699829102
    8. 'l' → logprob: -14.500726699829102
    9. ' set' → logprob: -14.500726699829102
    10. '`' → logprob: -14.625726699829102

Token 821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.227250610711053e-05
    2. ' ' → logprob: -10.375041961669922
    3. 'n' → logprob: -12.500041961669922
    4. '(' → logprob: -12.625041961669922
    5. ' (' → logprob: -13.375041961669922
    6. '(n' → logprob: -14.000041961669922
    7. '(b' → logprob: -14.375041961669922
    8. '   ' → logprob: -15.000041961669922
    9. 'b' → logprob: -15.250041961669922
    10. '0' → logprob: -15.875041961669922

Token 822: ' dans' (ID: 2671)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16918882727622986
    2. 'if' → logprob: -2.2941887378692627
    3. ' (' → logprob: -3.9191887378692627
    4. '(n' → logprob: -4.044188976287842
    5. ' n' → logprob: -4.919188976287842
    6. ' &' → logprob: -5.544188976287842
    7. ':' → logprob: -6.669188976287842
    8. '       ' → logprob: -6.919188976287842
    9. ',' → logprob: -7.169188976287842
    10. '   ' → logprob: -7.294188976287842

Token 823: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16574977338314056
    2. ' n' → logprob: -1.9157497882843018
    3. '(n' → logprob: -5.290749549865723
    4. ' (' → logprob: -7.665749549865723
    5. '(' → logprob: -13.165749549865723
    6. '	n' → logprob: -14.290749549865723
    7. '   ' → logprob: -14.915749549865723
    8. ')n' → logprob: -15.290749549865723
    9. '(
' → logprob: -15.540749549865723
    10. ' ' → logprob: -15.790749549865723

Token 824: ' :' (ID: 712)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5078482627868652
    2. ':' → logprob: -1.3828482627868652
    3. 'if' → logprob: -2.3828482627868652
    4. '   ' → logprob: -4.257848262786865
    5. ' &' → logprob: -4.257848262786865
    6. ' (' → logprob: -4.757848262786865
    7. ' :' → logprob: -5.132848262786865
    8. ',' → logprob: -6.007848262786865
    9. ':
' → logprob: -6.382848262786865
    10. '&' → logprob: -6.632848262786865

Token 825: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38879454135894775
    2. 'if' → logprob: -1.1387945413589478
    3. ' (' → logprob: -6.888794422149658
    4. '(n' → logprob: -7.138794422149658
    5. ' n' → logprob: -9.888794898986816
    6. 'n' → logprob: -10.638794898986816
    7. '   ' → logprob: -10.638794898986816
    8. '       ' → logprob: -11.888794898986816
    9. '((' → logprob: -13.638794898986816
    10. '(' → logprob: -14.513794898986816

Token 826: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48491814732551575
    2. '(n' → logprob: -0.9849181175231934
    3. ' n' → logprob: -5.234918117523193
    4. ' (' → logprob: -5.234918117523193
    5. '   ' → logprob: -9.859918594360352
    6. '((' → logprob: -10.609918594360352
    7. '(' → logprob: -10.859918594360352
    8. ')' → logprob: -12.109918594360352
    9. ')n' → logprob: -12.109918594360352
    10. '1' → logprob: -12.359918594360352

Token 827: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.02709398791193962
    2. '&' → logprob: -4.152093887329102
    3. ' &' → logprob: -4.902093887329102
    4. ' >>' → logprob: -5.652093887329102
    5. '&gt' → logprob: -11.027093887329102
    6. '   ' → logprob: -11.402093887329102
    7. ' ' → logprob: -11.777093887329102
    8. '>>>' → logprob: -12.527093887329102
    9. '&
' → logprob: -12.652093887329102
    10. ')' → logprob: -13.152093887329102

Token 828: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012403888104017824
    2. ' i' → logprob: -9.000123977661133
    3. ')' → logprob: -15.250123977661133
    4. ')i' → logprob: -15.500123977661133
    5. '   ' → logprob: -16.750123977661133
    6. '	i' → logprob: -17.500123977661133
    7. '```' → logprob: -18.000123977661133
    8. ' ' → logprob: -19.125123977661133
    9. '
' → logprob: -19.750123977661133
    10. '(i' → logprob: -20.250123977661133

Token 829: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02345860004425049
    2. ')&' → logprob: -3.773458480834961
    3. '&' → logprob: -8.648458480834961
    4. ' )' → logprob: -10.273458480834961
    5. ' &' → logprob: -13.273458480834961
    6. ')
' → logprob: -14.773458480834961
    7. '）' → logprob: -15.273458480834961
    8. '   ' → logprob: -15.648458480834961
    9. ')>>' → logprob: -16.14845848083496
    10. '&amp' → logprob: -16.27345848083496

Token 830: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '
' → logprob: -18.25007438659668
    4. ')' → logprob: -18.75007438659668
    5. '   ' → logprob: -18.75007438659668
    6. '(' → logprob: -18.75007438659668
    7. '

' → logprob: -19.87507438659668
    8. ' ' → logprob: -20.12507438659668
    9. '
' → logprob: -20.75007438659668
    10. '１' → logprob: -20.87507438659668

Token 831: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005716211744584143
    2. ')==' → logprob: -7.7505717277526855
    3. '):' → logprob: -9.125571250915527
    4. ' )' → logprob: -10.625571250915527
    5. '):
' → logprob: -12.500571250915527
    6. ')!=' → logprob: -13.000571250915527
    7. '==' → logprob: -15.000571250915527
    8. ')>' → logprob: -15.125571250915527
    9. ')
' → logprob: -15.500571250915527
    10. '）' → logprob: -15.625571250915527

Token 832: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031784253660589457
    2. ' ' → logprob: -5.753178596496582
    3. '0' → logprob: -15.003178596496582
    4. ')' → logprob: -15.253178596496582
    5. '
' → logprob: -16.253177642822266
    6. '   ' → logprob: -16.378177642822266
    7. 'True' → logprob: -17.628177642822266
    8. ' True' → logprob: -17.628177642822266
    9. '

' → logprob: -17.753177642822266
    10. '  ' → logprob: -18.065677642822266

Token 833: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023095356300473213
    2. ' ' → logprob: -8.37523078918457
    3. '0' → logprob: -15.25023078918457
    4. ')' → logprob: -16.37523078918457
    5. '   ' → logprob: -17.37523078918457
    6. '
' → logprob: -18.37523078918457
    7. '

' → logprob: -18.62523078918457
    8. '  ' → logprob: -19.25023078918457
    9. 'True' → logprob: -19.62523078918457
    10. '
' → logprob: -20.00023078918457

Token 834: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5342292785644531
    2. ')' → logprob: -0.9092292785644531
    3. '):
' → logprob: -4.534229278564453
    4. ' )' → logprob: -8.909229278564453
    5. ' ):' → logprob: -9.534229278564453
    6. ':' → logprob: -10.284229278564453
    7. ')
' → logprob: -11.159229278564453
    8. '       ' → logprob: -11.284229278564453
    9. '):
' → logprob: -11.284229278564453
    10. '   ' → logprob: -11.409229278564453

Token 835: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7308750152587891
    2. '       ' → logprob: -0.7308750152587891
    3. '):' → logprob: -4.480875015258789
    4. ' :' → logprob: -4.855875015258789
    5. ')' → logprob: -4.980875015258789
    6. ' if' → logprob: -5.355875015258789
    7. '<|end|>' → logprob: -6.480875015258789
    8. ':
' → logprob: -6.605875015258789
    9. '):
' → logprob: -6.855875015258789
    10. '   ' → logprob: -7.105875015258789

Token 836: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5613303780555725
    2. '       ' → logprob: -0.9363303780555725
    3. 'if' → logprob: -3.3113303184509277
    4. '    ' → logprob: -8.311330795288086
    5. '   ' → logprob: -8.686330795288086
    6. ')' → logprob: -9.186330795288086
    7. '        ' → logprob: -9.186330795288086
    8. ' ' → logprob: -9.686330795288086
    9. '        
' → logprob: -9.811330795288086
    10. ':' → logprob: -9.811330795288086

Token 837: ' L' (ID: 451)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10911205410957336
    2. ' if' → logprob: -2.359112024307251
    3. '       ' → logprob: -4.73411226272583
    4. '   ' → logprob: -9.734111785888672
    5. '    ' → logprob: -11.734111785888672
    6. 'If' → logprob: -12.484111785888672
    7. '	if' → logprob: -13.609111785888672
    8. '           ' → logprob: -13.734111785888672
    9. '        ' → logprob: -14.109111785888672
    10. ' ' → logprob: -14.984111785888672

Token 838: ''op' (ID: 70747)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04012829810380936
    2. ' if' → logprob: -4.040128231048584
    3. '   ' → logprob: -4.290128231048584
    4. 'e' → logprob: -5.165128231048584
    5. 'et' → logprob: -7.290128231048584
    6. '#' → logprob: -8.290128707885742
    7. '       ' → logprob: -8.415128707885742
    8. '```' → logprob: -8.665128707885742
    9. 'f' → logprob: -8.790128707885742
    10. 'a' → logprob: -8.915128707885742

Token 839: 'érateur' (ID: 108528)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30902132391929626
    2. 'e' → logprob: -2.184021234512329
    3. 'i' → logprob: -3.434021234512329
    4. 'a' → logprob: -3.684021234512329
    5. '   ' → logprob: -3.684021234512329
    6. 'f' → logprob: -3.809021234512329
    7. '&' → logprob: -3.934021234512329
    8. '       ' → logprob: -4.809021472930908
    9. '=' → logprob: -5.059021472930908
    10. ' if' → logprob: -5.059021472930908

Token 840: ' '' (ID: 461)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.5924060344696045
    2. ' &' → logprob: -1.0924060344696045
    3. ' (' → logprob: -2.4674060344696045
    4. '(' → logprob: -5.092406272888184
    5. ' n' → logprob: -5.217406272888184
    6. '(n' → logprob: -5.342406272888184
    7. 'if' → logprob: -5.967406272888184
    8. ' if' → logprob: -6.217406272888184
    9. ' &
' → logprob: -6.717406272888184
    10. '&
' → logprob: -6.967406272888184

Token 841: '>>' (ID: 3920)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.2239624410867691
    2. '(n' → logprob: -2.2239625453948975
    3. 'n' → logprob: -3.4739625453948975
    4. 'if' → logprob: -3.5989625453948975
    5. '(' → logprob: -4.848962306976318
    6. ' &' → logprob: -4.973962306976318
    7. ' (' → logprob: -5.098962306976318
    8. ')' → logprob: -6.098962306976318
    9. ' n' → logprob: -6.223962306976318
    10. '((' → logprob: -6.348962306976318

Token 842: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1799954175949097
    2. ')' → logprob: -1.3049954175949097
    3. ' i' → logprob: -2.054995536804199
    4. 'n' → logprob: -2.304995536804199
    5. ' n' → logprob: -2.304995536804199
    6. '>' → logprob: -3.679995536804199
    7. ' (' → logprob: -3.804995536804199
    8. '1' → logprob: -4.179995536804199
    9. ' )' → logprob: -4.929995536804199
    10. ' ' → logprob: -5.054995536804199

Token 843: ' réalise' (ID: 153079)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09016411751508713
    2. ')>>' → logprob: -3.4651641845703125
    3. '=' → logprob: -4.9651641845703125
    4. '(n' → logprob: -5.2151641845703125
    5. '>>' → logprob: -5.3401641845703125
    6. ')>' → logprob: -5.3401641845703125
    7. ')n' → logprob: -5.3401641845703125
    8. ' n' → logprob: -5.5901641845703125
    9. ' )' → logprob: -5.7151641845703125
    10. '<|end|>' → logprob: -5.7151641845703125

Token 844: ' un' (ID: 537)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2870004177093506
    2. ' n' → logprob: -1.7870004177093506
    3. '(n' → logprob: -2.7870004177093506
    4. ' (' → logprob: -4.28700065612793
    5. '(' → logprob: -6.16200065612793
    6. '>' → logprob: -6.78700065612793
    7. '1' → logprob: -6.91200065612793
    8. 'b' → logprob: -7.53700065612793
    9. ')' → logprob: -7.91200065612793
    10. ' ' → logprob: -8.28700065612793

Token 845: ' dé' (ID: 2393)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8173641562461853
    2. 'shift' → logprob: -0.9423641562461853
    3. 'right' → logprob: -2.94236421585083
    4. ' dé' → logprob: -3.44236421585083
    5. ' right' → logprob: -3.69236421585083
    6. '>>>' → logprob: -4.19236421585083
    7. ' shift' → logprob: -4.69236421585083
    8. '>' → logprob: -4.81736421585083
    9. 'dé' → logprob: -4.94236421585083
    10. 'bit' → logprob: -5.44236421585083

Token 846: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.01565726473927498
    2. '>' → logprob: -4.515657424926758
    3. 'placement' → logprob: -6.890657424926758
    4. 'éc' → logprob: -7.015657424926758
    5. 'cale' → logprob: -7.015657424926758
    6. 'c' → logprob: -7.640657424926758
    7. 'ç' → logprob: -8.390657424926758
    8. '>>' → logprob: -8.890657424926758
    9. 'caler' → logprob: -9.015657424926758
    10. 'é' → logprob: -9.140657424926758

Token 847: 'age' (ID: 477)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.059221863746643
    2. ' >' → logprob: -1.434221863746643
    3. ' >>' → logprob: -1.434221863746643
    4. '=' → logprob: -3.6842217445373535
    5. '>>' → logprob: -3.6842217445373535
    6. '   ' → logprob: -3.9342217445373535
    7. '       ' → logprob: -4.5592217445373535
    8. ')' → logprob: -4.6842217445373535
    9. ' &' → logprob: -4.8092217445373535
    10. ' (' → logprob: -4.8092217445373535

Token 848: ' b' (ID: 287)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.2216832637786865
    2. 'n' → logprob: -1.4716832637786865
    3. '>>' → logprob: -2.5966832637786865
    4. ' n' → logprob: -2.9716832637786865
    5. '=' → logprob: -3.0966832637786865
    6. 'd' → logprob: -3.2216832637786865
    7. '>' → logprob: -3.2216832637786865
    8. '(i' → logprob: -3.3466832637786865
    9. ')' → logprob: -3.7216832637786865
    10. 'right' → logprob: -3.7216832637786865

Token 849: 'inaire' (ID: 41465)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6620657444000244
    2. '=' → logprob: -1.1620657444000244
    3. 'it' → logprob: -2.4120657444000244
    4. 'i' → logprob: -3.5370657444000244
    5. '>' → logprob: -3.6620657444000244
    6. '>>' → logprob: -5.037065505981445
    7. '   ' → logprob: -5.162065505981445
    8. '```' → logprob: -5.662065505981445
    9. '==' → logprob: -5.912065505981445
    10. ')' → logprob: -6.787065505981445

Token 850: ' à' (ID: 1221)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5232917666435242
    2. ')' → logprob: -1.398291826248169
    3. 'n' → logprob: -2.273291826248169
    4. ')n' → logprob: -3.773291826248169
    5. ' n' → logprob: -3.898291826248169
    6. '       ' → logprob: -4.89829158782959
    7. '),' → logprob: -7.14829158782959
    8. '           ' → logprob: -7.14829158782959
    9. ')>>' → logprob: -7.52329158782959
    10. '=' → logprob: -7.52329158782959

Token 851: ' droite' (ID: 61428)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31948646903038025
    2. 'i' → logprob: -1.6944864988327026
    3. '>' → logprob: -2.694486379623413
    4. ' droite' → logprob: -4.569486618041992
    5. ' i' → logprob: -4.944486618041992
    6. ' ' → logprob: -6.444486618041992
    7. 'right' → logprob: -6.569486618041992
    8. '=' → logprob: -7.319486618041992
    9. ' right' → logprob: -7.694486618041992
    10. ')' → logprob: -9.194486618041992

Token 852: ' ;' (ID: 4605)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13587363064289093
    2. '       ' → logprob: -2.760873556137085
    3. 'if' → logprob: -4.135873794555664
    4. ' if' → logprob: -4.135873794555664
    5. '(n' → logprob: -5.010873794555664
    6. ')n' → logprob: -5.135873794555664
    7. 'n' → logprob: -6.135873794555664
    8. '):' → logprob: -6.385873794555664
    9. ').' → logprob: -6.510873794555664
    10. ' n' → logprob: -6.635873794555664

Token 853: ' '&' (ID: 35856)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6398481726646423
    2. '(n' → logprob: -1.764848232269287
    3. ' if' → logprob: -1.889848232269287
    4. 'if' → logprob: -2.764848232269287
    5. ')' → logprob: -3.514848232269287
    6. '(' → logprob: -3.764848232269287
    7. ' n' → logprob: -4.264848232269287
    8. 'n' → logprob: -4.764848232269287
    9. '(
' → logprob: -5.139848232269287
    10. '((' → logprob: -6.514848232269287

Token 854: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2815142869949341
    2. ' ' → logprob: -1.406514286994934
    3. ' (' → logprob: -8.406514167785645
    4. '(' → logprob: -9.156514167785645
    5. ' ' → logprob: -11.531514167785645
    6. ')' → logprob: -11.906514167785645
    7. '&' → logprob: -12.031514167785645
    8. ' n' → logprob: -12.281514167785645
    9. '#' → logprob: -13.906514167785645
    10. '(n' → logprob: -14.281514167785645

Token 855: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006736811250448227
    2. ' ' → logprob: -5.006736755371094
    3. '(' → logprob: -11.256736755371094
    4. ' (' → logprob: -12.756736755371094
    5. ')' → logprob: -13.131736755371094
    6. '&' → logprob: -14.131736755371094
    7. '=' → logprob: -14.506736755371094
    8. '```' → logprob: -14.631736755371094
    9. ' ' → logprob: -14.881736755371094
    10. '0' → logprob: -15.006736755371094

Token 856: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5823286771774292
    2. '==' → logprob: -1.4573286771774292
    3. ' ==' → logprob: -1.9573286771774292
    4. ')==' → logprob: -2.7073287963867188
    5. ' )' → logprob: -8.082328796386719
    6. '')' → logprob: -9.582328796386719
    7. ''' → logprob: -9.582328796386719
    8. '=' → logprob: -9.957328796386719
    9. '```' → logprob: -10.957328796386719
    10. ']==' → logprob: -11.707328796386719

Token 857: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09348198026418686
    2. ' ==' → logprob: -3.21848201751709
    3. ')==' → logprob: -3.59348201751709
    4. ')' → logprob: -3.84348201751709
    5. '=' → logprob: -8.46848201751709
    6. ']==' → logprob: -10.59348201751709
    7. '===' → logprob: -10.59348201751709
    8. '==
' → logprob: -11.09348201751709
    9. '()==' → logprob: -11.34348201751709
    10. ')=' → logprob: -12.59348201751709

Token 858: 'ole' (ID: 1491)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00418809475377202
    2. '==' → logprob: -5.629188060760498
    3. '1' → logprob: -8.129188537597656
    4. ' ==' → logprob: -8.754188537597656
    5. '&' → logprob: -10.254188537597656
    6. ')' → logprob: -11.004188537597656
    7. '=True' → logprob: -11.129188537597656
    8. ' égal' → logprob: -11.629188537597656
    9. ' equal' → logprob: -11.754188537597656
    10. ' =' → logprob: -11.879188537597656

Token 859: ' le' (ID: 505)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9612484574317932
    2. '1' → logprob: -1.2112483978271484
    3. ' (' → logprob: -1.2112483978271484
    4. '(' → logprob: -4.711248397827148
    5. 'n' → logprob: -5.086248397827148
    6. ' n' → logprob: -5.961248397827148
    7. ' ' → logprob: -6.086248397827148
    8. '((' → logprob: -6.586248397827148
    9. ' ((' → logprob: -8.836248397827148
    10. '(
' → logprob: -9.086248397827148

Token 860: ' bit' (ID: 3546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06750980764627457
    2. 'bit' → logprob: -3.442509889602661
    3. ' bit' → logprob: -3.567509889602661
    4. ' ' → logprob: -5.317509651184082
    5. 'b' → logprob: -9.317509651184082
    6. 'i' → logprob: -10.317509651184082
    7. '```' → logprob: -11.317509651184082
    8. 'bits' → logprob: -11.567509651184082
    9. ' i' → logprob: -12.317509651184082
    10. ' ' → logprob: -12.692509651184082

Token 861: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5493537783622742
    2. ' ==' → logprob: -1.424353837966919
    3. '==' → logprob: -2.174353837966919
    4. '(i' → logprob: -4.04935359954834
    5. ')==' → logprob: -4.29935359954834
    6. '=' → logprob: -4.67435359954834
    7. '):
' → logprob: -5.17435359954834
    8. '1' → logprob: -5.79935359954834
    9. '[i' → logprob: -5.79935359954834
    10. ' ' → logprob: -6.04935359954834

Token 862: ' poids' (ID: 56058)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7173740863800049
    2. '1' → logprob: -0.9673740863800049
    3. ' i' → logprob: -2.717374086380005
    4. 'n' → logprob: -2.967374086380005
    5. ' ' → logprob: -4.842373847961426
    6. ' n' → logprob: -5.092373847961426
    7. '```' → logprob: -9.717373847961426
    8. 'l' → logprob: -9.967373847961426
    9. '0' → logprob: -10.092373847961426
    10. '   ' → logprob: -10.342373847961426

Token 863: ' faible' (ID: 75786)
  Prédit: ' faible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faible' → logprob: -0.4042854905128479
    2. ' fort' → logprob: -1.2792854309082031
    3. '1' → logprob: -3.404285430908203
    4. 'fort' → logprob: -4.654285430908203
    5. ' ' → logprob: -5.779285430908203
    6. '```' → logprob: -6.154285430908203
    7. ' ' → logprob: -6.404285430908203
    8. '   ' → logprob: -7.404285430908203
    9. ' i' → logprob: -7.404285430908203
    10. ' faibles' → logprob: -7.779285430908203

Token 864: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4003343880176544
    2. '):' → logprob: -2.150334358215332
    3. ')==' → logprob: -2.525334358215332
    4. ' ==' → logprob: -2.775334358215332
    5. ':' → logprob: -3.150334358215332
    6. '==' → logprob: -4.150334358215332
    7. '):
' → logprob: -5.400334358215332
    8. '       ' → logprob: -5.900334358215332
    9. '=' → logprob: -6.775334358215332
    10. '   ' → logprob: -7.400334358215332

Token 865: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1982528269290924
    2. ' if' → logprob: -1.82325279712677
    3. ':' → logprob: -4.8232526779174805
    4. 'if' → logprob: -5.1982526779174805
    5. '   ' → logprob: -5.4482526779174805
    6. ' :' → logprob: -9.32325267791748
    7. ')' → logprob: -9.57325267791748
    8. '    ' → logprob: -9.82325267791748
    9. '):' → logprob: -10.32325267791748
    10. ':
' → logprob: -10.57325267791748

Token 866: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40092286467552185
    2. 'if' (adapté à ' if') → logprob: -1.1509228944778442
    3. '       ' → logprob: -4.275922775268555
    4. '   ' → logprob: -10.275922775268555
    5. 'If' → logprob: -11.900922775268555
    6. ')' → logprob: -12.525922775268555
    7. '    ' → logprob: -13.150922775268555
    8. '           ' → logprob: -13.400922775268555
    9. '	if' → logprob: -13.525922775268555
    10. ':' → logprob: -14.150922775268555

Token 867: ' n' (ID: 297)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04773499816656113
    2. '(n' → logprob: -3.2977349758148193
    3. ' n' → logprob: -4.672735214233398
    4. 'n' → logprob: -8.172735214233398
    5. ' ((' → logprob: -11.797735214233398
    6. ' ' → logprob: -12.797735214233398
    7. '((' → logprob: -12.922735214233398
    8. '(' → logprob: -12.922735214233398
    9. ' ' → logprob: -13.547735214233398
    10. '   ' → logprob: -14.547735214233398

Token 868: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.10709520429372787
    2. ' &' → logprob: -2.607095241546631
    3. ' >>' → logprob: -3.982095241546631
    4. '&' → logprob: -5.107095241546631
    5. '>' → logprob: -6.732095241546631
    6. '       ' → logprob: -7.107095241546631
    7. '[' → logprob: -7.857095241546631
    8. '&gt' → logprob: -8.357094764709473
    9. '   ' → logprob: -8.982094764709473
    10. '	' → logprob: -9.857094764709473

Token 869: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0564331205387134e-05
    2. ' i' → logprob: -11.50001049041748
    3. '	i' → logprob: -15.62501049041748
    4. '<|end|>' → logprob: -16.250011444091797
    5. '   ' → logprob: -16.875011444091797
    6. '[i' → logprob: -18.375011444091797
    7. '```' → logprob: -18.625011444091797
    8. ')i' → logprob: -19.125011444091797
    9. '<|end|>' → logprob: -19.125011444091797
    10. ' ' → logprob: -19.500011444091797

Token 870: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.31330013275146484
    2. '&' → logprob: -1.3133001327514648
    3. '   ' → logprob: -11.813300132751465
    4. '1' → logprob: -11.813300132751465
    5. '&amp' → logprob: -11.813300132751465
    6. ')&' → logprob: -12.188300132751465
    7. ' ' → logprob: -12.313300132751465
    8. ')' → logprob: -13.563300132751465
    9. '           ' → logprob: -13.813300132751465
    10. '       ' → logprob: -13.813300132751465

Token 871: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009756443090736866
    2. ' ' → logprob: -4.634756565093994
    3. '   ' → logprob: -15.134756088256836
    4. ' ' → logprob: -16.509756088256836
    5. '  ' → logprob: -17.509756088256836
    6. '```' → logprob: -18.197256088256836
    7. '0' → logprob: -18.447256088256836
    8. '(' → logprob: -18.447256088256836
    9. '	' → logprob: -19.009756088256836
    10. '１' → logprob: -19.447256088256836

Token 872: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.87506675720215
    4. '```' → logprob: -18.75006675720215
    5. '0' → logprob: -19.50006675720215
    6. '(' → logprob: -20.00006675720215
    7. '  ' → logprob: -20.00006675720215
    8. '`' → logprob: -20.25006675720215
    9. '
' → logprob: -21.18756675720215
    10. '' → logprob: -21.18756675720215

Token 873: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6226626634597778
    2. ' ==' → logprob: -1.1226626634597778
    3. '==' → logprob: -1.9976626634597778
    4. ':
' → logprob: -6.247662544250488
    5. ' :' → logprob: -8.122662544250488
    6. '=' → logprob: -8.872662544250488
    7. ')==' → logprob: -11.122662544250488
    8. ')' → logprob: -11.622662544250488
    9. ' =' → logprob: -11.747662544250488
    10. '1' → logprob: -12.372662544250488

Token 874: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233882926404476
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.380233764648438
    4. 'True' → logprob: -18.255233764648438
    5. '0' → logprob: -18.755233764648438
    6. '  ' → logprob: -19.505233764648438
    7. '```' → logprob: -19.755233764648438
    8. '۱' → logprob: -20.005233764648438
    9. ' ' → logprob: -20.067733764648438
    10. ' True' → logprob: -20.442733764648438

Token 875: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '0' → logprob: -18.875045776367188
    4. '   ' → logprob: -19.125045776367188
    5. '```' → logprob: -20.500045776367188
    6. '۱' → logprob: -20.687545776367188
    7. '' → logprob: -20.812545776367188
    8. 'True' → logprob: -20.812545776367188
    9. '１' → logprob: -21.000045776367188
    10. '  ' → logprob: -21.625045776367188

Token 876: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22648590803146362
    2. ':
' → logprob: -1.6014859676361084
    3. '       ' → logprob: -7.726485729217529
    4. '):
' → logprob: -8.101486206054688
    5. '):' → logprob: -8.351486206054688
    6. ' :' → logprob: -10.601486206054688
    7. ')' → logprob: -11.101486206054688
    8. ' :
' → logprob: -11.226486206054688
    9. '   ' → logprob: -11.351486206054688
    10. ':
' → logprob: -11.601486206054688

Token 877: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008210873231291771
    2. ':' → logprob: -5.5082106590271
    3. ' ans' → logprob: -6.7582106590271
    4. 'ans' → logprob: -7.0082106590271
    5. '   ' → logprob: -7.6332106590271
    6. '(ans' → logprob: -8.133211135864258
    7. ' (' → logprob: -8.383211135864258
    8. ')' → logprob: -8.383211135864258
    9. 'ch' → logprob: -8.758211135864258
    10. '):' → logprob: -8.883211135864258

Token 878: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.017840731889009476
    2. ' ans' → logprob: -4.39284086227417
    3. '           ' → logprob: -5.64284086227417
    4. '(ans' → logprob: -6.64284086227417
    5. '   ' → logprob: -8.017840385437012
    6. '       ' → logprob: -10.142840385437012
    7. '	ans' → logprob: -10.142840385437012
    8. 'answer' → logprob: -10.517840385437012
    9. '               ' → logprob: -12.017840385437012
    10. 'temp' → logprob: -12.142840385437012

Token 879: ' Aj' (ID: 28294)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004234985448420048
    2. '           ' → logprob: -6.379234790802002
    3. ' ans' → logprob: -6.754234790802002
    4. '(ans' → logprob: -7.379234790802002
    5. 'temp' → logprob: -7.879234790802002
    6. 'tmp' → logprob: -8.87923526763916
    7. 'answer' → logprob: -9.50423526763916
    8. 'new' → logprob: -10.12923526763916
    9. '   ' → logprob: -10.62923526763916
    10. '#' → logprob: -11.62923526763916

Token 880: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.8935226202011108
    2. 'outer' → logprob: -0.8935226202011108
    3. '           ' → logprob: -2.1435227394104004
    4. '   ' → logprob: -3.7685227394104004
    5. 'outez' → logprob: -3.8935227394104004
    6. '               ' → logprob: -5.5185227394104
    7. 'ans' → logprob: -5.7685227394104
    8. 'ust' → logprob: -5.7685227394104
    9. '    ' → logprob: -6.2685227394104
    10. 'outes' → logprob: -6.6435227394104

Token 881: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3049430847167969
    2. '=' → logprob: -1.8049430847167969
    3. '           ' → logprob: -3.429943084716797
    4. ' +=' → logprob: -3.929943084716797
    5. '(' → logprob: -4.429943084716797
    6. ' (' → logprob: -4.554943084716797
    7. '(
' → logprob: -4.679943084716797
    8. '(ans' → logprob: -5.054943084716797
    9. ' ans' → logprob: -6.054943084716797
    10. ')' → logprob: -6.179943084716797

Token 882: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.11839942634105682
    2. '(d' → logprob: -2.9933993816375732
    3. '(a' → logprob: -3.1183993816375732
    4. 'ans' → logprob: -4.368399620056152
    5. 'a' → logprob: -6.618399620056152
    6. 'dou' → logprob: -6.868399620056152
    7. '(ch' → logprob: -7.368399620056152
    8. '(an' → logprob: -8.118399620056152
    9. '(' → logprob: -8.118399620056152
    10. '((' → logprob: -8.243399620056152

Token 883: ' contribution' (ID: 26735)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.3664116859436035
    2. 'ans' → logprob: -1.9914116859436035
    3. '(d' → logprob: -2.2414116859436035
    4. 'dou' → logprob: -2.9914116859436035
    5. '(ch' → logprob: -5.2414116859436035
    6. '(' → logprob: -6.2414116859436035
    7. '((' → logprob: -6.3664116859436035
    8. 'ch' → logprob: -6.9914116859436035
    9. '(a' → logprob: -7.1164116859436035
    10. ' (' → logprob: -7.2414116859436035

Token 884: ' constante' (ID: 49652)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12622331082820892
    2. 'ans' → logprob: -2.75122332572937
    3. '(ans' → logprob: -3.75122332572937
    4. '=' → logprob: -4.626223087310791
    5. ' =' → logprob: -4.876223087310791
    6. ' ans' → logprob: -5.126223087310791
    7. ' +=' → logprob: -6.251223087310791
    8. '               ' → logprob: -7.251223087310791
    9. '+=' → logprob: -7.376223087310791
    10. '            ' → logprob: -7.376223087310791

Token 885: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34568023681640625
    2. '+=' → logprob: -1.9706802368164062
    3. '           ' → logprob: -2.5956802368164062
    4. '*=' → logprob: -3.7206802368164062
    5. ' =' → logprob: -3.8456802368164062
    6. ' +=' → logprob: -4.095680236816406
    7. '*' → logprob: -4.970680236816406
    8. ')' → logprob: -5.845680236816406
    9. 'ans' → logprob: -6.595680236816406
    10. ' ans' → logprob: -7.345680236816406

Token 886: ' ce' (ID: 2357)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.3044021725654602
    2. 'ans' → logprob: -1.4294021129608154
    3. '(ans' → logprob: -4.4294023513793945
    4. 'a' → logprob: -6.0544023513793945
    5. '(
' → logprob: -6.4294023513793945
    6. '((' → logprob: -6.5544023513793945
    7. '(d' → logprob: -6.6794023513793945
    8. '(' → logprob: -6.6794023513793945
    9. 'ch' → logprob: -7.3044023513793945
    10. ' ans' → logprob: -7.5544023513793945

Token 887: ' bloc' (ID: 51218)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26599305868148804
    2. 'dou' → logprob: -2.140993118286133
    3. ' i' → logprob: -2.515993118286133
    4. ' bloc' → logprob: -5.265993118286133
    5. ' block' → logprob: -5.390993118286133
    6. 'bloc' → logprob: -5.515993118286133
    7. ' ' → logprob: -5.765993118286133
    8. ' doubling' → logprob: -5.765993118286133
    9. 'block' → logprob: -5.890993118286133
    10. '2' → logprob: -5.890993118286133

Token 888: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5470921397209167
    2. '=' → logprob: -0.9220921397209167
    3. ' +=' → logprob: -4.422091960906982
    4. '+=' → logprob: -5.172091960906982
    5. '           ' → logprob: -6.047091960906982
    6. ')' → logprob: -6.922091960906982
    7. '*=' → logprob: -7.172091960906982
    8. ' ans' → logprob: -7.297091960906982
    9. '*' → logprob: -8.29709243774414
    10. 'ans' → logprob: -8.42209243774414

Token 889: ' ajust' (ID: 32650)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.19612368941307068
    2. ' ans' → logprob: -2.3211236000061035
    3. 'ans' → logprob: -2.9461236000061035
    4. '           ' → logprob: -4.1961236000061035
    5. ' (' → logprob: -4.4461236000061035
    6. '(' → logprob: -7.8211236000061035
    7. '	ans' → logprob: -10.321124076843262
    8. '_ans' → logprob: -10.446124076843262
    9. '(answer' → logprob: -10.946124076843262
    10. 'answer' → logprob: -11.071124076843262

Token 890: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.7140486836433411
    2. 'é' → logprob: -1.0890486240386963
    3. '           ' → logprob: -2.7140486240386963
    4. '+' → logprob: -3.5890486240386963
    5. '       ' → logprob: -3.7140486240386963
    6. '   ' → logprob: -3.7140486240386963
    7. 'ant' → logprob: -4.964048862457275
    8. ' +' → logprob: -5.464048862457275
    9. '        ' → logprob: -5.589048862457275
    10. 'e' → logprob: -5.839048862457275

Token 891: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34813743829727173
    2. '+=' → logprob: -1.348137378692627
    3. ' +=' → logprob: -4.098137378692627
    4. '           ' → logprob: -4.973137378692627
    5. '*=' → logprob: -5.348137378692627
    6. ' =' → logprob: -5.973137378692627
    7. ')' → logprob: -6.848137378692627
    8. '(
' → logprob: -7.473137378692627
    9. '+=(' → logprob: -7.848137378692627
    10. '=(' → logprob: -8.723137855529785

Token 892: ''un' (ID: 9788)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.9278808832168579
    2. ' ch' → logprob: -1.427880883216858
    3. 'ou' → logprob: -2.1778807640075684
    4. 'ouble' → logprob: -2.3028807640075684
    5. 'dou' → logprob: -2.9278807640075684
    6. '(ch' → logprob: -3.6778807640075684
    7. 'ans' → logprob: -4.052880764007568
    8. 'a' → logprob: -4.677880764007568
    9. 'oub' → logprob: -5.052880764007568
    10. ' ans' → logprob: -5.052880764007568

Token 893: ' dé' (ID: 2393)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.07423090934753418
    2. ' ch' → logprob: -2.699230909347534
    3. '(ch' → logprob: -6.074231147766113
    4. ')' → logprob: -6.824231147766113
    5. 'pow' → logprob: -8.199231147766113
    6. ' (' → logprob: -9.074231147766113
    7. 'ans' → logprob: -9.824231147766113
    8. 'es' → logprob: -9.824231147766113
    9. '	ch' → logprob: -9.949231147766113
    10. '```' → logprob: -10.324231147766113

Token 894: 'cal' (ID: 5842)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.0130195617675781
    2. 'dou' → logprob: -1.0130195617675781
    3. 'ans' → logprob: -2.263019561767578
    4. 'f' → logprob: -3.388019561767578
    5. 'c' → logprob: -3.513019561767578
    6. 'ch' → logprob: -3.888019561767578
    7. '(ans' → logprob: -4.263019561767578
    8. 'cal' → logprob: -4.263019561767578
    9. ')' → logprob: -4.263019561767578
    10. 'const' → logprob: -4.388019561767578

Token 895: 'age' (ID: 477)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3854504823684692
    2. '               ' → logprob: -1.3854504823684692
    3. 'ement' → logprob: -1.7604504823684692
    4. '   ' → logprob: -2.0104503631591797
    5. ')' → logprob: -2.2604503631591797
    6. '       ' → logprob: -3.8854503631591797
    7. 'ch' → logprob: -4.88545036315918
    8. '            ' → logprob: -4.88545036315918
    9. '    ' → logprob: -5.13545036315918
    10. 'ans' → logprob: -5.26045036315918

Token 896: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3326921463012695
    2. '(ans' → logprob: -1.3326921463012695
    3. '=' → logprob: -1.5826921463012695
    4. '(' → logprob: -2.3326921463012695
    5. 'ans' → logprob: -3.0826921463012695
    6. '           ' → logprob: -3.8326921463012695
    7. ' =' → logprob: -3.8326921463012695
    8. '   ' → logprob: -4.3326921463012695
    9. ' ans' → logprob: -4.7076921463012695
    10. ' (' → logprob: -4.8326921463012695

Token 897: ' puissance' (ID: 63494)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.005513823125511408
    2. '(ch' → logprob: -6.005513668060303
    3. ' ch' → logprob: -6.130513668060303
    4. 'a' → logprob: -8.005514144897461
    5. '(' → logprob: -9.005514144897461
    6. ' (' → logprob: -9.380514144897461
    7. 'l' → logprob: -9.505514144897461
    8. 'pow' → logprob: -9.880514144897461
    9. ')' → logprob: -10.755514144897461
    10. '```' → logprob: -11.005514144897461

Token 898: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042430587112903595
    2. '(
' → logprob: -3.6674306392669678
    3. ' (' → logprob: -5.667430400848389
    4. '=' → logprob: -5.917430400848389
    5. 'ans' → logprob: -6.417430400848389
    6. '(ans' → logprob: -6.417430400848389
    7. '(pow' → logprob: -6.542430400848389
    8. '10' → logprob: -6.667430400848389
    9. '((' → logprob: -7.042430400848389
    10. 'pow' → logprob: -7.042430400848389

Token 899: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9593904614448547
    2. '10' → logprob: -0.9593904614448547
    3. 'ch' → logprob: -1.70939040184021
    4. 'pow' → logprob: -3.83439040184021
    5. '(ch' → logprob: -4.459390640258789
    6. ' (' → logprob: -4.584390640258789
    7. '(pow' → logprob: -5.459390640258789
    8. '(
' → logprob: -7.334390640258789
    9. '   ' → logprob: -7.459390640258789
    10. ' ch' → logprob: -7.584390640258789

Token 900: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.24723772704601288
    2. '(' → logprob: -2.3722376823425293
    3. 'ch' → logprob: -2.3722376823425293
    4. 'pow' → logprob: -4.247237682342529
    5. '(ch' → logprob: -4.997237682342529
    6. '(M' → logprob: -5.497237682342529
    7. '(pow' → logprob: -5.747237682342529
    8. 'M' → logprob: -5.872237682342529
    9. 'l' → logprob: -7.747237682342529
    10. ' (' → logprob: -8.622238159179688

Token 901: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.518801748752594
    2. '(ans' → logprob: -2.268801689147949
    3. '(
' → logprob: -2.768801689147949
    4. ')' → logprob: -2.893801689147949
    5. '(pow' → logprob: -2.893801689147949
    6. '=' → logprob: -3.018801689147949
    7. '           ' → logprob: -3.393801689147949
    8. ' (' → logprob: -4.268801689147949
    9. ' ans' → logprob: -4.893801689147949
    10. ' =' → logprob: -5.268801689147949

Token 902: 'd' (ID: 67)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6262127757072449
    2. 'pow' → logprob: -1.7512128353118896
    3. '(pow' → logprob: -2.0012128353118896
    4. '(ans' → logprob: -3.0012128353118896
    5. ')' → logprob: -3.3762128353118896
    6. 'ch' → logprob: -4.2512125968933105
    7. '(
' → logprob: -4.5012125968933105
    8. ' (' → logprob: -4.6262125968933105
    9. '           ' → logprob: -4.8762125968933105
    10. '(ch' → logprob: -5.0012125968933105

Token 903: 'éc' (ID: 5675)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.13073697686195374
    2. 'ouble' → logprob: -2.505737066268921
    3. 'oub' → logprob: -4.630736827850342
    4. ')' → logprob: -5.130736827850342
    5. 'o' → logprob: -5.630736827850342
    6. '           ' → logprob: -5.880736827850342
    7. ' (' → logprob: -6.130736827850342
    8. '(' → logprob: -6.380736827850342
    9. ' ans' → logprob: -6.505736827850342
    10. '   ' → logprob: -6.630736827850342

Token 904: 'al' (ID: 280)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.336771160364151
    2. 'ec' → logprob: -1.7117711305618286
    3. 'e' → logprob: -2.961771249771118
    4. ')' → logprob: -3.711771249771118
    5. 'é' → logprob: -5.086771011352539
    6. ' )' → logprob: -5.211771011352539
    7. '           ' → logprob: -6.086771011352539
    8. 'es' → logprob: -6.336771011352539
    9. 'ix' → logprob: -6.336771011352539
    10. 'igit' → logprob: -6.461771011352539

Token 905: 'age' (ID: 477)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34011465311050415
    2. '(' → logprob: -2.3401145935058594
    3. '           ' → logprob: -2.3401145935058594
    4. '       ' → logprob: -3.9651145935058594
    5. '   ' → logprob: -4.340114593505859
    6. '**' → logprob: -4.340114593505859
    7. '10' → logprob: -4.590114593505859
    8. 'e' → logprob: -5.090114593505859
    9. ' (' → logprob: -5.090114593505859
    10. '    ' → logprob: -5.715114593505859

Token 906: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.484695166349411
    2. ')' → logprob: -1.6096951961517334
    3. '=' → logprob: -2.6096951961517334
    4. '(
' → logprob: -3.1096951961517334
    5. '           ' → logprob: -4.109694957733154
    6. '(ch' → logprob: -4.234694957733154
    7. ' (' → logprob: -4.984694957733154
    8. '       ' → logprob: -5.484694957733154
    9. '(ans' → logprob: -5.609694957733154
    10. '(pow' → logprob: -5.984694957733154

Token 907: ' base' (ID: 3611)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3429940342903137
    2. 'ch' → logprob: -2.092993974685669
    3. ' l' → logprob: -2.467993974685669
    4. ' ans' → logprob: -3.842993974685669
    5. 'ans' → logprob: -3.967993974685669
    6. ' ch' → logprob: -4.342994213104248
    7. '10' → logprob: -4.842994213104248
    8. '   ' → logprob: -4.967994213104248
    9. 'pow' → logprob: -5.217994213104248
    10. '       ' → logprob: -6.342994213104248

Token 908: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02110336720943451
    2. ' ' → logprob: -4.521103382110596
    3. ')' → logprob: -5.771103382110596
    4. '   ' → logprob: -6.396103382110596
    5. '           ' → logprob: -6.396103382110596
    6. '(' → logprob: -6.396103382110596
    7. '               ' → logprob: -7.771103382110596
    8. ' )' → logprob: -7.896103382110596
    9. '       ' → logprob: -8.771102905273438
    10. '    ' → logprob: -8.896102905273438

Token 909: '10' (ID: 702)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09786103665828705
    2. ' l' → logprob: -2.7228610515594482
    3. '10' → logprob: -3.8478610515594482
    4. 'ch' → logprob: -5.972860813140869
    5. 'L' → logprob: -6.972860813140869
    6. ' ch' → logprob: -6.972860813140869
    7. ' ' → logprob: -7.222860813140869
    8. ')' → logprob: -7.722860813140869
    9. '```' → logprob: -7.847860813140869
    10. ' L' → logprob: -9.847861289978027

Token 910: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17977678775787354
    2. '(ans' → logprob: -2.804776668548584
    3. '):' → logprob: -3.179776668548584
    4. ')*' → logprob: -4.054776668548584
    5. ' )' → logprob: -4.304776668548584
    6. '           ' → logprob: -4.929776668548584
    7. '(
' → logprob: -5.554776668548584
    8. '):
' → logprob: -5.679776668548584
    9. '       ' → logprob: -6.054776668548584
    10. '(' → logprob: -6.054776668548584

Token 911: '           ' (ID: 352)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7515024542808533
    2. ' =' → logprob: -1.001502513885498
    3. '(ans' → logprob: -3.001502513885498
    4. '   ' → logprob: -4.001502513885498
    5. 'ans' → logprob: -4.126502513885498
    6. '+=' → logprob: -4.251502513885498
    7. '=' → logprob: -4.376502513885498
    8. '           ' → logprob: -4.626502513885498
    9. '```' → logprob: -4.626502513885498
    10. ' ans' → logprob: -4.876502513885498

Token 912: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.4841240346431732
    2. '(ans' → logprob: -1.4841240644454956
    3. ' ans' → logprob: -1.8591240644454956
    4. '           ' → logprob: -7.109124183654785
    5. ' (' → logprob: -7.984124183654785
    6. '   ' → logprob: -10.359124183654785
    7. '	ans' → logprob: -10.359124183654785
    8. '_ans' → logprob: -11.859124183654785
    9. '```' → logprob: -12.234124183654785
    10. 'answer' → logprob: -12.359124183654785

Token 913: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.0001097417771234177
    2. '_const' → logprob: -10.000109672546387
    3. '=' → logprob: -10.375109672546387
    4. ' =' → logprob: -11.625109672546387
    5. '   ' → logprob: -12.000109672546387
    6. '```' → logprob: -12.000109672546387
    7. ' const' → logprob: -12.375109672546387
    8. '       ' → logprob: -13.500109672546387
    9. '.const' → logprob: -13.625109672546387
    10. '(const' → logprob: -14.000109672546387

Token 914: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0032086113933473825
    2. ' =' → logprob: -5.878208637237549
    3. '+=' → logprob: -7.878208637237549
    4. '*=' → logprob: -10.87820816040039
    5. ' +=' → logprob: -12.37820816040039
    6. '   ' → logprob: -14.50320816040039
    7. '＝' → logprob: -15.00320816040039
    8. '```' → logprob: -15.37820816040039
    9. '=(' → logprob: -15.50320816040039
    10. ' *=' → logprob: -16.37820816040039

Token 915: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.09496741741895676
    2. 'a' → logprob: -2.5949673652648926
    3. '(a' → logprob: -5.094967365264893
    4. 'ch' → logprob: -5.719967365264893
    5. '(ch' → logprob: -5.844967365264893
    6. 'b' → logprob: -6.594967365264893
    7. '(d' → logprob: -6.719967365264893
    8. ' doubling' → logprob: -7.969967365264893
    9. 'pow' → logprob: -8.84496784210205
    10. '(' → logprob: -8.96996784210205

Token 916: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -7.465036105713807e-06
    2. 'line' → logprob: -12.125007629394531
    3. '_const' → logprob: -13.875007629394531
    4. ' const' → logprob: -14.500007629394531
    5. '```' → logprob: -16.00000762939453
    6. '(const' → logprob: -16.37500762939453
    7. '.const' → logprob: -16.50000762939453
    8. ')' → logprob: -17.00000762939453
    9. '
' → logprob: -17.12500762939453
    10. '   ' → logprob: -17.25000762939453

Token 917: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.2617008400848135e-05
    2. 'i' → logprob: -10.375032424926758
    3. '[' → logprob: -13.625032424926758
    4. '(i' → logprob: -16.875032424926758
    5. '{i' → logprob: -17.500032424926758
    6. '[I' → logprob: -18.000032424926758
    7. ')i' → logprob: -18.000032424926758
    8. ',i' → logprob: -18.250032424926758
    9. '```' → logprob: -18.250032424926758
    10. ' i' → logprob: -18.375032424926758

Token 918: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6667988300323486
    2. ' *' → logprob: -1.4167988300323486
    3. ']' → logprob: -1.5417988300323486
    4. ']*' → logprob: -4.1667985916137695
    5. ')' → logprob: -4.6667985916137695
    6. '           ' → logprob: -6.0417985916137695
    7. ')*' → logprob: -6.9167985916137695
    8. '   ' → logprob: -7.7917985916137695
    9. '       ' → logprob: -8.04179859161377
    10. ' ' → logprob: -8.41679859161377

Token 919: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4343218207359314
    2. '*' → logprob: -1.0593218803405762
    3. '           ' → logprob: -5.434321880340576
    4. ' ans' → logprob: -8.184321403503418
    5. ')' → logprob: -8.434321403503418
    6. '(ans' → logprob: -8.559321403503418
    7. 'pow' → logprob: -9.059321403503418
    8. 'ans' → logprob: -9.434321403503418
    9. '*(' → logprob: -9.559321403503418
    10. '       ' → logprob: -9.809321403503418

Token 920: ' pow' (ID: 9779)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.01585054397583
    2. 'pow' → logprob: -1.51585054397583
    3. 'a' → logprob: -1.76585054397583
    4. '((' → logprob: -1.89085054397583
    5. '(pow' → logprob: -3.01585054397583
    6. '(a' → logprob: -3.39085054397583
    7. '(b' → logprob: -5.39085054397583
    8. '(ch' → logprob: -6.01585054397583
    9. 'ch' → logprob: -6.26585054397583
    10. '(' → logprob: -6.39085054397583

Token 921: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.080963092041202e-06
    2. '10' → logprob: -12.500004768371582
    3. ' (' → logprob: -14.625004768371582
    4. '(a' → logprob: -15.000004768371582
    5. '(
' → logprob: -15.250004768371582
    6. '(pow' → logprob: -15.750004768371582
    7. 'a' → logprob: -16.7500057220459
    8. '((' → logprob: -18.2500057220459
    9. 'pow' → logprob: -19.0000057220459
    10. '(A' → logprob: -19.5000057220459

Token 922: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868755102157593
    2. '10' → logprob: -1.1368755102157593
    3. 'a' → logprob: -13.13687515258789
    4. '(
' → logprob: -14.13687515258789
    5. '(a' → logprob: -14.26187515258789
    6. 'ch' → logprob: -15.26187515258789
    7. 'pow' → logprob: -15.38687515258789
    8. ')' → logprob: -16.26187515258789
    9. '(L' → logprob: -16.38687515258789
    10. ' (' → logprob: -16.51187515258789

Token 923: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3887373208999634
    2. '(' → logprob: -1.6387373208999634
    3. '(ch' → logprob: -2.513737201690674
    4. '(l' → logprob: -3.513737201690674
    5. '(L' → logprob: -4.763737201690674
    6. ' (' → logprob: -6.763737201690674
    7. ',ch' → logprob: -6.763737201690674
    8. ' ch' → logprob: -6.888737201690674
    9. '(n' → logprob: -7.263737201690674
    10. ',l' → logprob: -7.638737201690674

Token 924: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.10327786207199097
    2. '(ch' → logprob: -2.3532779216766357
    3. 'l' → logprob: -6.728277683258057
    4. ' ch' → logprob: -7.228277683258057
    5. '(a' → logprob: -7.228277683258057
    6. '(l' → logprob: -8.353278160095215
    7. 'a' → logprob: -9.478278160095215
    8. '((' → logprob: -10.978278160095215
    9. '(L' → logprob: -11.103278160095215
    10. '(' → logprob: -11.103278160095215

Token 925: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -0.029162725433707237
    2. 'ose' → logprob: -3.779162645339966
    3. 'ause' → logprob: -5.654162883758545
    4. 'use' → logprob: -7.529162883758545
    5. '```' → logprob: -7.654162883758545
    6. 'uose' → logprob: -7.779162883758545
    7. 'oise' → logprob: -8.029162406921387
    8. 'u' → logprob: -8.154162406921387
    9. 'o' → logprob: -9.279162406921387
    10. '   ' → logprob: -9.904162406921387

Token 926: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.47495681833243e-05
    2. ' i' → logprob: -10.875024795532227
    3. '   ' → logprob: -12.625024795532227
    4. '	i' → logprob: -14.375024795532227
    5. '  ' → logprob: -14.875024795532227
    6. '­i' → logprob: -15.250024795532227
    7. 'si' → logprob: -15.625024795532227
    8. ' ' → logprob: -15.750024795532227
    9. '*i' → logprob: -16.000024795532227
    10. '%i' → logprob: -16.125024795532227

Token 927: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010654398938640952
    2. ' ,' → logprob: -7.251065254211426
    3. ')' → logprob: -8.251065254211426
    4. '%' → logprob: -9.751065254211426
    5. ' *' → logprob: -11.876065254211426
    6. '*' → logprob: -11.876065254211426
    7. '   ' → logprob: -12.001065254211426
    8. ' %' → logprob: -12.126065254211426
    9. ',
' → logprob: -13.001065254211426
    10. '),' → logprob: -13.626065254211426

Token 928: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -9.9728669738397e-05
    2. 'L' → logprob: -9.250100135803223
    3. ' l' → logprob: -13.125100135803223
    4. 'a' → logprob: -14.500100135803223
    5. '   ' → logprob: -14.750100135803223
    6. '
' → logprob: -15.375100135803223
    7. 'A' → logprob: -15.500100135803223
    8. '	l' → logprob: -16.750099182128906
    9. '_l' → logprob: -17.375099182128906
    10. '(l' → logprob: -17.375099182128906

Token 929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018661346985027194
    2. ' ,' → logprob: -9.250186920166016
    3. ')' → logprob: -9.750186920166016
    4. '           ' → logprob: -11.375186920166016
    5. '%' → logprob: -11.500186920166016
    6. '   ' → logprob: -12.625186920166016
    7. '       ' → logprob: -12.750186920166016
    8. ',M' → logprob: -13.750186920166016
    9. ' %' → logprob: -14.375186920166016
    10. ',
' → logprob: -15.000186920166016

Token 930: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -4.966313281329349e-05
    2. ' M' → logprob: -10.000049591064453
    3. '           ' → logprob: -13.125049591064453
    4. '   ' → logprob: -13.500049591064453
    5. '       ' → logprob: -14.625049591064453
    6. '               ' → logprob: -16.375049591064453
    7. '                   ' → logprob: -17.125049591064453
    8. '          ' → logprob: -17.250049591064453
    9. '         ' → logprob: -17.500049591064453
    10. '    ' → logprob: -17.750049591064453

Token 931: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044146373867988586
    2. ')%' → logprob: -3.2941462993621826
    3. '%' → logprob: -5.544146537780762
    4. '           ' → logprob: -6.919146537780762
    5. ' )' → logprob: -7.169146537780762
    6. '<|end|>' → logprob: -8.419146537780762
    7. ' %' → logprob: -9.169146537780762
    8. ']' → logprob: -11.294146537780762
    9. '%)' → logprob: -11.419146537780762
    10. ']%' → logprob: -11.544146537780762

Token 932: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 933: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4781167507171631
    2. '(ans' → logprob: -1.853116750717163
    3. ' ans' → logprob: -1.853116750717163
    4. '<|end|>' → logprob: -3.728116750717163
    5. '%' → logprob: -3.978116750717163
    6. ')' → logprob: -4.728116989135742
    7. '           ' → logprob: -5.853116989135742
    8. '	ans' → logprob: -5.853116989135742
    9. '```' → logprob: -5.978116989135742
    10. '_ans' → logprob: -6.228116989135742

Token 934: ' Ré' (ID: 27181)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.04311292618513107
    2. 'ans' → logprob: -3.1681129932403564
    3. '           ' → logprob: -9.793112754821777
    4. ' ch' → logprob: -10.168112754821777
    5. ' ans' → logprob: -11.418112754821777
    6. 'answer' → logprob: -13.043112754821777
    7. '```' → logprob: -13.043112754821777
    8. '   ' → logprob: -14.293112754821777
    9. '       ' → logprob: -14.293112754821777
    10. 'an' → logprob: -14.793112754821777

Token 935: 'duction' (ID: 23838)
  Prédit: 'ponse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ponse' → logprob: -0.2646617591381073
    2. 'ch' → logprob: -2.6396617889404297
    3. 'set' → logprob: -3.5146617889404297
    4. '       ' → logprob: -4.13966178894043
    5. 'cemment' → logprob: -4.38966178894043
    6. 'initial' → logprob: -4.51466178894043
    7. '   ' → logprob: -4.63966178894043
    8. '           ' → logprob: -4.88966178894043
    9. 'férence' → logprob: -5.13966178894043
    10. '```' → logprob: -5.13966178894043

Token 936: ' modulo' (ID: 112372)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4254608452320099
    2. '%=' → logprob: -2.5504608154296875
    3. ' %=' → logprob: -2.5504608154296875
    4. ' ans' → logprob: -2.6754608154296875
    5. '(ans' → logprob: -2.8004608154296875
    6. '=' → logprob: -3.1754608154296875
    7. '%' → logprob: -4.1754608154296875
    8. '
' → logprob: -6.9254608154296875
    9. '%
' → logprob: -7.1754608154296875
    10. '	ans' → logprob: -7.1754608154296875

Token 937: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.285661518573761
    2. '(M' → logprob: -1.4106614589691162
    3. ' M' → logprob: -6.160661697387695
    4. '(
' → logprob: -6.910661697387695
    5. '(' → logprob: -7.160661697387695
    6. ' (' → logprob: -7.785661697387695
    7. ')' → logprob: -9.285661697387695
    8. '           ' → logprob: -9.410661697387695
    9. '=' → logprob: -12.535661697387695
    10. ',' → logprob: -12.660661697387695

Token 938: ' pour' (ID: 1930)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.814828634262085
    2. '(ans' → logprob: -1.314828634262085
    3. ' ans' → logprob: -2.314828634262085
    4. ')' → logprob: -2.439828634262085
    5. '           ' → logprob: -3.189828634262085
    6. 'ans' → logprob: -3.814828634262085
    7. ' %=' → logprob: -3.939828634262085
    8. ')%' → logprob: -4.939828872680664
    9. '%=' → logprob: -5.564828872680664
    10. ' %' → logprob: -6.189828872680664

Token 939: ' maintenir' (ID: 105693)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0052725342102348804
    2. ' ans' → logprob: -5.255272388458252
    3. '(ans' → logprob: -10.25527286529541
    4. 'answer' → logprob: -13.25527286529541
    5. '	ans' → logprob: -13.63027286529541
    6. '           ' → logprob: -15.38027286529541
    7. '_ans' → logprob: -15.50527286529541
    8. '```' → logprob: -15.88027286529541
    9. 'answers' → logprob: -17.505271911621094
    10. '       ' → logprob: -17.630271911621094

Token 940: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00535743311047554
    2. ' ans' → logprob: -5.755357265472412
    3. '(ans' → logprob: -6.255357265472412
    4. '```' → logprob: -8.63035774230957
    5. 'M' → logprob: -10.75535774230957
    6. '
' → logprob: -11.38035774230957
    7. '(M' → logprob: -11.88035774230957
    8. ' M' → logprob: -12.00535774230957
    9. '	ans' → logprob: -12.00535774230957
    10. '``' → logprob: -12.25535774230957

Token 941: ' taille' (ID: 41644)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004732010420411825
    2. ' ans' → logprob: -5.379732131958008
    3. 'answer' → logprob: -9.879732131958008
    4. '(ans' → logprob: -10.379732131958008
    5. '```' → logprob: -11.504732131958008
    6. ')' → logprob: -12.629732131958008
    7. '	ans' → logprob: -12.754732131958008
    8. '_ans' → logprob: -13.379732131958008
    9. '=' → logprob: -13.629732131958008
    10. '`' → logprob: -13.879732131958008

Token 942: ' du' (ID: 1462)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.10452885925769806
    2. 'ans' → logprob: -2.3545289039611816
    3. ' ans' → logprob: -5.854528903961182
    4. '(
' → logprob: -7.729528903961182
    5. '```' → logprob: -8.604528427124023
    6. '=' → logprob: -8.729528427124023
    7. '           ' → logprob: -8.729528427124023
    8. '(' → logprob: -8.854528427124023
    9. ')' → logprob: -9.229528427124023
    10. '	ans' → logprob: -9.854528427124023

Token 943: ' nombre' (ID: 9733)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009983669966459274
    2. ' ans' → logprob: -4.634983539581299
    3. 'answer' → logprob: -8.884984016418457
    4. '(ans' → logprob: -10.134984016418457
    5. ' code' → logprob: -11.509984016418457
    6. 'result' → logprob: -11.509984016418457
    7. '```' → logprob: -11.759984016418457
    8. 'code' → logprob: -12.259984016418457
    9. '	ans' → logprob: -13.009984016418457
    10. ' answer' → logprob: -13.134984016418457

Token 944: ' raisonn' (ID: 144705)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9065547585487366
    2. ')' → logprob: -0.9065547585487366
    3. '(ans' → logprob: -2.031554698944092
    4. ' ans' → logprob: -3.781554698944092
    5. ')%' → logprob: -4.406554698944092
    6. ' %=' → logprob: -5.281554698944092
    7. ')
' → logprob: -5.531554698944092
    8. '           ' → logprob: -5.531554698944092
    9. 'ans' → logprob: -5.656554698944092
    10. ' %' → logprob: -6.156554698944092

Token 945: 'able' (ID: 562)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0947457030415535
    2. 'e' → logprob: -3.344745635986328
    3. 'ans' → logprob: -4.094745635986328
    4. ' )' → logprob: -4.719745635986328
    5. ' ans' → logprob: -4.844745635986328
    6. '           ' → logprob: -5.594745635986328
    7. '       ' → logprob: -5.719745635986328
    8. '```' → logprob: -5.969745635986328
    9. '(ans' → logprob: -6.344745635986328
    10. '}' → logprob: -6.344745635986328

Token 946: '.
' (ID: 558)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.6384491920471191
    2. '%' → logprob: -1.6384491920471191
    3. ')' → logprob: -2.263449192047119
    4. ' ans' → logprob: -2.888449192047119
    5. '```' → logprob: -3.013449192047119
    6. '
' → logprob: -3.388449192047119
    7. 'ans' → logprob: -3.888449192047119
    8. ')%' → logprob: -5.263449192047119
    9. ')
' → logprob: -5.763449192047119
    10. '_ans' → logprob: -6.638449192047119

Token 947: '           ' (ID: 352)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.38779401779174805
    2. '%' → logprob: -1.387794017791748
    3. ' ans' → logprob: -3.762794017791748
    4. 'ans' → logprob: -4.012794017791748
    5. '```' → logprob: -4.887794017791748
    6. '%
' → logprob: -5.012794017791748
    7. ' %' → logprob: -5.137794017791748
    8. ' %=' → logprob: -5.637794017791748
    9. '%=' → logprob: -6.512794017791748
    10. '
' → logprob: -6.887794017791748

Token 948: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6872102618217468
    2. 'ans' (adapté à ' ans') → logprob: -1.4372103214263916
    3. '%' → logprob: -2.3122103214263916
    4. '(ans' → logprob: -2.5622103214263916
    5. ' %=' → logprob: -2.8122103214263916
    6. ' %' → logprob: -4.1872100830078125
    7. '%=' → logprob: -5.5622100830078125
    8. ')' → logprob: -6.5622100830078125
    9. '=' → logprob: -6.9372100830078125
    10. '%
' → logprob: -7.8122100830078125

Token 949: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -8.482821431243792e-05
    2. '_const' → logprob: -10.12508487701416
    3. '=' → logprob: -11.62508487701416
    4. ' const' → logprob: -11.62508487701416
    5. '```' → logprob: -11.62508487701416
    6. '%=' → logprob: -12.00008487701416
    7. '%' → logprob: -13.00008487701416
    8. '.const' → logprob: -13.00008487701416
    9. ' %=' → logprob: -13.25008487701416
    10. ')' → logprob: -13.37508487701416

Token 950: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.10109250992536545
    2. ' %=' → logprob: -2.351092576980591
    3. '=' → logprob: -7.226092338562012
    4. '%' → logprob: -8.851092338562012
    5. ' =' → logprob: -11.976092338562012
    6. ')' → logprob: -12.226092338562012
    7. '```' → logprob: -12.976092338562012
    8. ')%' → logprob: -14.726092338562012
    9. '#' → logprob: -14.976092338562012
    10. ' %' → logprob: -15.351092338562012

Token 951: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.15310683415737e-05
    2. ' M' → logprob: -10.750021934509277
    3. '(M' → logprob: -17.37502098083496
    4. '```' → logprob: -19.37502098083496
    5. '   ' → logprob: -21.12502098083496
    6. '(' → logprob: -21.62502098083496
    7. '
' → logprob: -21.87502098083496
    8. '	M' → logprob: -22.00002098083496
    9. ' ' → logprob: -22.00002098083496
    10. 'm' → logprob: -23.00002098083496

Token 952: '
' (ID: 198)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.06049110367894173
    2. '<|end|>' → logprob: -3.9354910850524902
    3. ' ch' → logprob: -4.93549108505249
    4. '
' → logprob: -5.06049108505249
    5. '[ch' → logprob: -5.06049108505249
    6. ' 
' → logprob: -5.43549108505249
    7. '[' → logprob: -5.81049108505249
    8. '+' → logprob: -6.18549108505249
    9. ' ' → logprob: -6.43549108505249
    10. '	ch' → logprob: -6.68549108505249

Token 953: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0069718137383461
    2. '       ' → logprob: -5.756971836090088
    3. '+' → logprob: -6.631971836090088
    4. 'ch' → logprob: -7.256971836090088
    5. '               ' → logprob: -7.631971836090088
    6. '          ' → logprob: -8.00697135925293
    7. '            ' → logprob: -9.00697135925293
    8. '<|end|>' → logprob: -9.00697135925293
    9. '   ' → logprob: -9.25697135925293
    10. ' ch' → logprob: -9.38197135925293

Token 954: ' #' (ID: 1069)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.2652475833892822
    2. '           ' → logprob: -1.5152475833892822
    3. '	ch' → logprob: -4.640247344970703
    4. '       ' → logprob: -6.015247344970703
    5. '          ' → logprob: -8.015247344970703
    6. '   ' → logprob: -8.140247344970703
    7. ' ch' → logprob: -9.015247344970703
    8. '               ' → logprob: -9.390247344970703
    9. '            ' → logprob: -10.015247344970703
    10. '		' → logprob: -10.015247344970703

Token 955: ' On' (ID: 2160)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.1875571544806007e-05
    2. '           ' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.875011444091797
    4. '       ' → logprob: -16.500011444091797
    5. 'dou' → logprob: -17.125011444091797
    6. ' ch' → logprob: -17.250011444091797
    7. '
' → logprob: -18.750011444091797
    8. '	ch' → logprob: -19.250011444091797
    9. '          ' → logprob: -19.375011444091797
    10. '               ' → logprob: -19.500011444091797

Token 956: ' augmente' (ID: 150199)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.2057725191116333
    2. '+=' → logprob: -1.7057725191116333
    3. ' +=' → logprob: -5.580772399902344
    4. '           ' → logprob: -8.080772399902344
    5. '       ' → logprob: -9.205772399902344
    6. ']+=' → logprob: -10.205772399902344
    7. ' ch' → logprob: -10.580772399902344
    8. '   ' → logprob: -10.955772399902344
    9. '```' → logprob: -11.080772399902344
    10. '[ch' → logprob: -11.580772399902344

Token 957: ' '' (ID: 461)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.004289711359888315
    2. ' ch' → logprob: -5.504289627075195
    3. '	ch' → logprob: -8.879289627075195
    4. '(ch' → logprob: -10.379289627075195
    5. '1' → logprob: -11.129289627075195
    6. '           ' → logprob: -11.629289627075195
    7. '   ' → logprob: -11.879289627075195
    8. '[ch' → logprob: -11.879289627075195
    9. '_ch' → logprob: -14.629289627075195
    10. '       ' → logprob: -14.754289627075195

Token 958: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -2.7610454708337784e-05
    2. ' ch' → logprob: -10.500027656555176
    3. '	ch' → logprob: -19.62502670288086
    4. '(ch' → logprob: -20.37502670288086
    5. '   ' → logprob: -21.00002670288086
    6. '[ch' → logprob: -21.75002670288086
    7. '```' → logprob: -22.00002670288086
    8. '       ' → logprob: -22.62502670288086
    9. ' ' → logprob: -23.00002670288086
    10. 'Ch' → logprob: -23.00002670288086

Token 959: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -2.2200749754119897e-06
    2. 'ose' → logprob: -13.250001907348633
    3. 'ause' → logprob: -15.125001907348633
    4. 'uose' → logprob: -17.000001907348633
    5. 'ousse' → logprob: -17.625001907348633
    6. 'o' → logprob: -18.625001907348633
    7. 'house' → logprob: -18.625001907348633
    8. 'OUSE' → logprob: -18.750001907348633
    9. 'ou' → logprob: -18.875001907348633
    10. 'ous' → logprob: -19.000001907348633

Token 960: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.6934557505883276e-05
    2. '   ' → logprob: -10.000057220458984
    3. ' i' → logprob: -12.375057220458984
    4. ' ' → logprob: -13.000057220458984
    5. 'и' → logprob: -13.375057220458984
    6. '  ' → logprob: -13.875057220458984
    7. 'ï' → logprob: -14.625057220458984
    8. '	i' → logprob: -14.625057220458984
    9. '    ' → logprob: -15.000057220458984
    10. 'і' → logprob: -15.250057220458984

Token 961: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.05251890793442726
    2. '+=' → logprob: -3.052518844604492
    3. '<|end|>' → logprob: -5.927518844604492
    4. '           ' → logprob: -7.552518844604492
    5. ')' → logprob: -9.052518844604492
    6. ',' → logprob: -9.552518844604492
    7. '+' → logprob: -9.677518844604492
    8. ' ' → logprob: -9.802518844604492
    9. ']+=' → logprob: -9.802518844604492
    10. '   ' → logprob: -9.927518844604492

Token 962: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6348965167999268
    2. '+=' → logprob: -0.7598965167999268
    3. '<|end|>' → logprob: -6.384896278381348
    4. '+' → logprob: -7.884896278381348
    5. '           ' → logprob: -9.759896278381348
    6. ']+=' → logprob: -10.009896278381348
    7. '<|end|>' → logprob: -10.384896278381348
    8. ' +' → logprob: -11.759896278381348
    9. '       ' → logprob: -11.759896278381348
    10. '        ' → logprob: -11.884896278381348

Token 963: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030464066192507744
    2. '1' → logprob: -3.6554641723632812
    3. '(' → logprob: -5.530464172363281
    4. ' ' → logprob: -9.405464172363281
    5. '   ' → logprob: -9.405464172363281
    6. 'pow' → logprob: -10.905464172363281
    7. ' (' → logprob: -11.905464172363281
    8. '(pow' → logprob: -15.155464172363281
    9. '    ' → logprob: -15.655464172363281
    10. '  ' → logprob: -15.780464172363281

Token 964: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08781693130731583
    2. '1' → logprob: -2.5878169536590576
    3. '(' → logprob: -4.8378167152404785
    4. 'pow' → logprob: -7.4628167152404785
    5. ' ' → logprob: -8.337817192077637
    6. '   ' → logprob: -9.087817192077637
    7. ' (' → logprob: -11.212817192077637
    8. '(pow' → logprob: -11.962817192077637
    9. '10' → logprob: -12.837817192077637
    10. '(i' → logprob: -13.087817192077637

Token 965: '^' (ID: 61)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 966: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001757696009008214
    2. ' i' → logprob: -9.000175476074219
    3. '(i' → logprob: -10.125175476074219
    4. '   ' → logprob: -12.500175476074219
    5. '(' → logprob: -12.750175476074219
    6. ' (' → logprob: -12.875175476074219
    7. '1' → logprob: -13.750175476074219
    8. '{i' → logprob: -14.125175476074219
    9. '[i' → logprob: -14.500175476074219
    10. ' ' → logprob: -15.250175476074219

Token 967: ',' (ID: 11)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.33281850814819336
    2. ' <<' → logprob: -1.3328185081481934
    3. ' +' → logprob: -4.707818508148193
    4. ' <<=' → logprob: -4.832818508148193
    5. ' +=' → logprob: -7.082818508148193
    6. '<<(' → logprob: -7.582818508148193
    7. '+' → logprob: -7.832818508148193
    8. '(' → logprob: -8.957818984985352
    9. ' *' → logprob: -9.457818984985352
    10. '+=' → logprob: -9.832818984985352

Token 968: ' car' (ID: 1669)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7892690896987915
    2. '1' → logprob: -1.0392690896987915
    3. '2' → logprob: -2.914268970489502
    4. '   ' → logprob: -3.039268970489502
    5. '           ' → logprob: -3.164268970489502
    6. ' ch' → logprob: -3.414268970489502
    7. '       ' → logprob: -5.164268970489502
    8. 'ch' → logprob: -5.539268970489502
    9. '               ' → logprob: -6.289268970489502
    10. ' +=' → logprob: -7.039268970489502

Token 969: ' on' (ID: 402)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20055529475212097
    2. 'ch' → logprob: -2.2005553245544434
    3. '1' → logprob: -2.7005553245544434
    4. ' ch' → logprob: -6.325555324554443
    5. ' ' → logprob: -6.825555324554443
    6. '   ' → logprob: -7.450555324554443
    7. '(' → logprob: -8.825554847717285
    8. '       ' → logprob: -9.700554847717285
    9. '           ' → logprob: -9.825554847717285
    10. '                   ' → logprob: -10.825554847717285

Token 970: ' vient' (ID: 40370)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1190199926495552
    2. ' +=' → logprob: -2.3690199851989746
    3. 'ch' → logprob: -4.244019985198975
    4. ']+=' → logprob: -6.494019985198975
    5. ' <<=' → logprob: -6.744019985198975
    6. ' ch' → logprob: -6.869019985198975
    7. '+=(' → logprob: -8.744020462036133
    8. '       ' → logprob: -9.369020462036133
    9. '+' → logprob: -9.744020462036133
    10. '<<' → logprob: -9.869020462036133

Token 971: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2746897041797638
    2. '           ' → logprob: -2.2746896743774414
    3. '+=' → logprob: -2.5246896743774414
    4. '+' → logprob: -4.024689674377441
    5. ' de' → logprob: -4.149689674377441
    6. ' +=' → logprob: -4.774689674377441
    7. '            ' → logprob: -4.774689674377441
    8. ' d' → logprob: -6.149689674377441
    9. 'd' → logprob: -6.774689674377441
    10. '   ' → logprob: -7.149689674377441

Token 972: ' traiter' (ID: 105852)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.03627847135066986
    2. '(ch' → logprob: -4.286278247833252
    3. ' ch' → logprob: -4.911278247833252
    4. '+=' → logprob: -5.411278247833252
    5. '(' → logprob: -5.661278247833252
    6. '+' → logprob: -5.661278247833252
    7. ' +=' → logprob: -6.411278247833252
    8. ' (' → logprob: -7.786278247833252
    9. 'add' → logprob: -7.911278247833252
    10. ' ajouter' → logprob: -8.66127872467041

Token 973: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17482315003871918
    2. '1' → logprob: -2.299823045730591
    3. '   ' → logprob: -3.549823045730591
    4. ' ' → logprob: -3.799823045730591
    5. '(' → logprob: -5.54982328414917
    6. '           ' → logprob: -6.04982328414917
    7. ' (' → logprob: -6.54982328414917
    8. '               ' → logprob: -7.42482328414917
    9. '       ' → logprob: -7.79982328414917
    10. '                   ' → logprob: -9.049822807312012

Token 974: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04052331671118736
    2. '(' → logprob: -3.7905232906341553
    3. '1' → logprob: -4.165523529052734
    4. '   ' → logprob: -6.540523529052734
    5. ' ' → logprob: -9.290523529052734
    6. ' (' → logprob: -10.290523529052734
    7. '10' → logprob: -10.790523529052734
    8. 'pow' → logprob: -12.040523529052734
    9. '       ' → logprob: -12.540523529052734
    10. '(pow' → logprob: -13.540523529052734

Token 975: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.035647694021463394
    2. ' **' → logprob: -3.4106476306915283
    3. '^' → logprob: -6.410647869110107
    4. '[i' → logprob: -8.16064739227295
    5. ' ' → logprob: -10.03564739227295
    6. '   ' → logprob: -11.03564739227295
    7. ' ^' → logprob: -12.91064739227295
    8. '
' → logprob: -13.16064739227295
    9. ' ' → logprob: -13.66064739227295
    10. '```' → logprob: -13.66064739227295

Token 976: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00028255043434910476
    2. ' i' → logprob: -8.250282287597656
    3. '(i' → logprob: -11.250282287597656
    4. '[i' → logprob: -13.375282287597656
    5. '{i' → logprob: -13.375282287597656
    6. '```' → logprob: -13.375282287597656
    7. '_i' → logprob: -13.875282287597656
    8. '	i' → logprob: -14.250282287597656
    9. '(' → logprob: -14.625282287597656
    10. '^' → logprob: -14.750282287597656

Token 977: ' blocs' (ID: 182599)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5600115060806274
    2. ' (' → logprob: -1.8100115060806274
    3. '**' → logprob: -2.060011386871338
    4. '(n' → logprob: -2.685011386871338
    5. ' <<' → logprob: -2.810011386871338
    6. '<<' → logprob: -3.060011386871338
    7. '(' → logprob: -3.060011386871338
    8. '(i' → logprob: -3.185011386871338
    9. '   ' → logprob: -3.310011386871338
    10. '<|end|>' → logprob: -3.310011386871338

Token 978: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03110831044614315
    2. ' +=' → logprob: -4.406108379364014
    3. '		' → logprob: -5.281108379364014
    4. '<<' → logprob: -5.531108379364014
    5. ' <<=' → logprob: -6.031108379364014
    6. ' <<' → logprob: -6.031108379364014
    7. '       ' → logprob: -6.906108379364014
    8. ' +' → logprob: -7.406108379364014
    9. '
' → logprob: -7.906108379364014
    10. '(' → logprob: -8.031107902526855

Token 979: ' longueur' (ID: 104613)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9176643490791321
    2. 'blocks' → logprob: -1.1676642894744873
    3. 'i' → logprob: -2.5426642894744873
    4. 'dou' → logprob: -3.2926642894744873
    5. 'l' → logprob: -3.4176642894744873
    6. 'b' → logprob: -3.6676642894744873
    7. ' blocs' → logprob: -4.042664527893066
    8. ' blocks' → logprob: -4.417664527893066
    9. 'ch' → logprob: -4.542664527893066
    10. ' i' → logprob: -4.542664527893066

Token 980: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.148418128490448
    2. 'i' → logprob: -2.1484181880950928
    3. '           ' → logprob: -5.398417949676514
    4. ' l' → logprob: -5.523417949676514
    5. 'ch' → logprob: -6.023417949676514
    6. 'n' → logprob: -6.273417949676514
    7. '1' → logprob: -6.398417949676514
    8. ' i' → logprob: -6.648417949676514
    9. '10' → logprob: -7.023417949676514
    10. '```' → logprob: -7.148417949676514

Token 981: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3041706085205078
    2. ' +=' → logprob: -1.6791706085205078
    3. ' <<=' → logprob: -2.929170608520508
    4. '<<' → logprob: -4.804170608520508
    5. ' <<' → logprob: -5.429170608520508
    6. '       ' → logprob: -5.554170608520508
    7. '+=' → logprob: -6.679170608520508
    8. '               ' → logprob: -6.804170608520508
    9. '		' → logprob: -6.929170608520508
    10. '          ' → logprob: -8.054170608520508

Token 982: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6999685764312744
    2. ' ch' → logprob: -1.1999685764312744
    3. 'ch' → logprob: -2.8249685764312744
    4. ' +=' → logprob: -3.3249685764312744
    5. '	ch' → logprob: -3.3249685764312744
    6. '[ch' → logprob: -3.4499685764312744
    7. '		' → logprob: -4.699968338012695
    8. '   ' → logprob: -4.949968338012695
    9. '       ' → logprob: -5.074968338012695
    10. '+' → logprob: -5.324968338012695

Token 983: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.024034032598137856
    2. '2' → logprob: -4.899034023284912
    3. ' ch' → logprob: -5.399034023284912
    4. '1' → logprob: -5.524034023284912
    5. '           ' → logprob: -6.024034023284912
    6. '   ' → logprob: -6.149034023284912
    7. '(' → logprob: -7.024034023284912
    8. ' +=' → logprob: -7.274034023284912
    9. '+=' → logprob: -7.274034023284912
    10. '       ' → logprob: -7.649034023284912

Token 984: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -4.4849443838757e-06
    2. 'ose' → logprob: -12.375004768371582
    3. 'ause' → logprob: -16.875003814697266
    4. 'ou' → logprob: -17.625003814697266
    5. 'o' → logprob: -18.000003814697266
    6. 'ous' → logprob: -18.125003814697266
    7. 'ousse' → logprob: -18.125003814697266
    8. 'oise' → logprob: -18.375003814697266
    9. 'uose' → logprob: -18.500003814697266
    10. 'ourse' → logprob: -19.000003814697266

Token 985: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.941850526549388e-06
    2. 'и' → logprob: -12.875007629394531
    3. '   ' → logprob: -13.000007629394531
    4. 'い' → logprob: -14.000007629394531
    5. 'і' → logprob: -15.125007629394531
    6. ' i' → logprob: -15.500007629394531
    7. '[i' → logprob: -15.625007629394531
    8. 'ي' → logprob: -15.625007629394531
    9. 'si' → logprob: -15.750007629394531
    10. ' ' → logprob: -15.875007629394531

Token 986: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.026345467194914818
    2. ' +=' → logprob: -3.6513454914093018
    3. '+' → logprob: -11.026345252990723
    4. '=' → logprob: -11.276345252990723
    5. '|' → logprob: -12.151345252990723
    6. '+=(' → logprob: -12.151345252990723
    7. ']+=' → logprob: -12.401345252990723
    8. '+='' → logprob: -15.276345252990723
    9. ' ' → logprob: -15.401345252990723
    10. '        ' → logprob: -15.651345252990723

Token 987: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012380871921777725
    2. '(' → logprob: -6.751237869262695
    3. '1' → logprob: -10.251237869262695
    4. ' ' → logprob: -10.376237869262695
    5. ' (' → logprob: -13.751237869262695
    6. 'pow' → logprob: -15.751237869262695
    7. '   ' → logprob: -16.376237869262695
    8. '[' → logprob: -17.876237869262695
    9. '`' → logprob: -18.501237869262695
    10. '```' → logprob: -18.626237869262695

Token 988: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004510108381509781
    2. '(' → logprob: -5.504509925842285
    3. '1' → logprob: -7.754509925842285
    4. ' ' → logprob: -13.629509925842285
    5. 'pow' → logprob: -13.629509925842285
    6. ' (' → logprob: -14.879509925842285
    7. '   ' → logprob: -17.3795108795166
    8. '[' → logprob: -17.5045108795166
    9. '(pow' → logprob: -17.5045108795166
    10. '```' → logprob: -17.7545108795166

Token 989: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.004784445744007826
    2. 'i' → logprob: -5.50478458404541
    3. '*i' → logprob: -8.37978458404541
    4. '^' → logprob: -8.75478458404541
    5. '[i' → logprob: -8.75478458404541
    6. '```' → logprob: -9.62978458404541
    7. '`' → logprob: -10.50478458404541
    8. ' **' → logprob: -11.12978458404541
    9. ' i' → logprob: -11.12978458404541
    10. '%i' → logprob: -11.62978458404541

Token 990: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.1008713702030946e-06
    2. ' i' → logprob: -13.125001907348633
    3. '	i' → logprob: -17.500001907348633
    4. '(i' → logprob: -17.625001907348633
    5. '<|end|>' → logprob: -18.250001907348633
    6. '(' → logprob: -19.125001907348633
    7. '_i' → logprob: -19.625001907348633
    8. '```' → logprob: -19.875001907348633
    9. '{i' → logprob: -20.875001907348633
    10. '[i' → logprob: -21.250001907348633

Token 991: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 992: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9971954822540283
    2. 'return' → logprob: -1.6221954822540283
    3. 'if' → logprob: -1.6221954822540283
    4. '
' → logprob: -2.6221954822540283
    5. '           ' → logprob: -2.6221954822540283
    6. 'ans' → logprob: -2.9971954822540283
    7. '       ' → logprob: -4.122195243835449
    8. '#' → logprob: -4.997195243835449
    9. '            
' → logprob: -5.372195243835449
    10. '    
' → logprob: -5.497195243835449

Token 993: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0268499851226807
    2. '<|end|>' → logprob: -1.2768499851226807
    3. '   ' → logprob: -1.5268499851226807
    4. ')' → logprob: -3.4018499851226807
    5. '#' (adapté à ' #') → logprob: -3.4018499851226807
    6. ' ' → logprob: -3.6518499851226807
    7. ':' → logprob: -4.776849746704102
    8. '%' → logprob: -4.776849746704102
    9. '\t' → logprob: -4.776849746704102
    10. '\' → logprob: -5.526849746704102

Token 994: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0018836578819900751
    2. 'answer' → logprob: -7.251883506774902
    3. 'return' → logprob: -7.876883506774902
    4. 'anst' → logprob: -8.376883506774902
    5. 'result' → logprob: -9.001883506774902
    6. '#' → logprob: -9.251883506774902
    7. 'ansch' → logprob: -10.001883506774902
    8. 'line' → logprob: -10.501883506774902
    9. 'anso' → logprob: -10.626883506774902
    10. 'an' → logprob: -10.626883506774902

Token 995: ' recomm' (ID: 4922)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23652808368206024
    2. '   ' → logprob: -1.7365280389785767
    3. 'continue' → logprob: -4.236527919769287
    4. ' return' → logprob: -4.361527919769287
    5. '#' → logprob: -5.236527919769287
    6. ' continue' → logprob: -7.861527919769287
    7. 'contin' → logprob: -8.236528396606445
    8. ' #' → logprob: -8.736528396606445
    9. ' retourne' → logprob: -8.861528396606445
    10. '    ' → logprob: -9.111528396606445

Token 996: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.13407786190509796
    2. 'ance' → logprob: -2.634077787399292
    3. 'n' → logprob: -3.009077787399292
    4. 'rence' → logprob: -6.634078025817871
    5. 'nance' → logprob: -7.259078025817871
    6. '#' → logprob: -7.259078025817871
    7. 'orce' → logprob: -7.759078025817871
    8. 'once' → logprob: -8.759078025817871
    9. 'an' → logprob: -8.884078025817871
    10. 'rne' → logprob: -9.384078025817871

Token 997: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38789618015289307
    2. 'return' → logprob: -2.0128960609436035
    3. 'ans' → logprob: -2.1378960609436035
    4. '<|end|>' → logprob: -3.5128960609436035
    5. '#' → logprob: -4.3878960609436035
    6. '    
' → logprob: -4.6378960609436035
    7. 'for' → logprob: -5.2628960609436035
    8. 'ch' → logprob: -5.8878960609436035
    9. 'def' → logprob: -6.2628960609436035
    10. '
' → logprob: -6.6378960609436035

Token 998: ' même' (ID: 9679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002154307207092643
    2. 'return' → logprob: -6.752154350280762
    3. ' for' → logprob: -7.127154350280762
    4. '#' → logprob: -9.627154350280762
    5. '   ' → logprob: -10.002154350280762
    6. '```' → logprob: -11.002154350280762
    7. '
' → logprob: -11.127154350280762
    8. 'ans' → logprob: -11.752154350280762
    9. 'ch' → logprob: -11.752154350280762
    10. 'pour' → logprob: -12.502154350280762

Token 999: ' processus' (ID: 49849)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007613879279233515
    2. 'pour' → logprob: -8.250761032104492
    3. '#' → logprob: -8.500761032104492
    4. 'ans' → logprob: -8.875761032104492
    5. '```' → logprob: -9.750761032104492
    6. '   ' → logprob: -10.250761032104492
    7. 'const' → logprob: -10.375761032104492
    8. ' for' → logprob: -11.375761032104492
    9. '
' → logprob: -11.500761032104492
    10. 'process' → logprob: -13.250761032104492

Token 1000: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030582809820771217
    2. 'for' → logprob: -4.155582904815674
    3. 'ans' → logprob: -4.780582904815674
    4. ',' → logprob: -6.280582904815674
    5. ' for' → logprob: -6.655582904815674
    6. '    
' → logprob: -7.280582904815674
    7. '#' → logprob: -7.280582904815674
    8. '<|end|>' → logprob: -7.780582904815674
    9. 'ch' → logprob: -8.030582427978516
    10. 'pour' → logprob: -8.655582427978516

Token 1001: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.26050469279289246
    2. 'line' → logprob: -2.885504722595215
    3. 'result' → logprob: -3.010504722595215
    4. '   ' → logprob: -3.635504722595215
    5. 'part' → logprob: -3.885504722595215
    6. 'la' → logprob: -4.260504722595215
    7. '#' → logprob: -4.635504722595215
    8. 'lin' → logprob: -4.635504722595215
    9. 'res' → logprob: -5.010504722595215
    10. 'le' → logprob: -5.010504722595215

Token 1002: ' contribution' (ID: 26735)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.016685817390680313
    2. 'for' → logprob: -4.891685962677002
    3. '#' → logprob: -5.641685962677002
    4. 'answer' → logprob: -6.266685962677002
    5. 'part' → logprob: -6.391685962677002
    6. 'lin' → logprob: -7.766685962677002
    7. 'line' → logprob: -7.891685962677002
    8. 'return' → logprob: -8.391685485839844
    9. 'ch' → logprob: -8.391685485839844
    10. ' ans' → logprob: -8.641685485839844

Token 1003: ' "' (ID: 392)
  Prédit: 'lin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lin' → logprob: -0.21680738031864166
    2. 'line' → logprob: -1.7168073654174805
    3. 'linear' → logprob: -4.4668073654174805
    4. '#line' → logprob: -6.8418073654174805
    5. ' lin' → logprob: -7.5918073654174805
    6. '
' → logprob: -7.7168073654174805
    7. '   ' → logprob: -8.21680736541748
    8. '#' → logprob: -8.46680736541748
    9. 'ligne' → logprob: -8.71680736541748
    10. 'for' → logprob: -8.96680736541748

Token 1004: 'lin' (ID: 4724)
  Prédit: 'lin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lin' → logprob: -0.7353723049163818
    2. 'line' → logprob: -0.8603723049163818
    3. 'linear' → logprob: -3.110372304916382
    4. ' lin' → logprob: -3.235372304916382
    5. ' line' → logprob: -4.735372543334961
    6. 'const' → logprob: -6.110372543334961
    7. ' linear' → logprob: -6.860372543334961
    8. '(line' → logprob: -7.735372543334961
    9. 'ligne' → logprob: -7.860372543334961
    10. 'l' → logprob: -8.735372543334961

Token 1005: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3234996199607849
    2. 'e' → logprob: -1.8234996795654297
    3. 'aire' → logprob: -2.1984996795654297
    4. 'ear' → logprob: -6.94849967956543
    5. 'a' → logprob: -7.57349967956543
    6. 'naire' → logprob: -7.69849967956543
    7. '
' → logprob: -8.32349967956543
    8. '```' → logprob: -8.57349967956543
    9. '   ' → logprob: -8.94849967956543
    10. ')' → logprob: -8.94849967956543

Token 1006: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.03777521476149559
    2. 'é' → logprob: -3.9127752780914307
    3. 'naire' → logprob: -5.412775039672852
    4. 'e' → logprob: -5.662775039672852
    5. 'a' → logprob: -6.412775039672852
    6. '
' → logprob: -6.412775039672852
    7. ')' → logprob: -6.787775039672852
    8. '#' → logprob: -6.912775039672852
    9. 'aires' → logprob: -7.287775039672852
    10. 'ére' → logprob: -8.287775039672852

Token 1007: '".
' (ID: 26880)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.143566608428955
    2. '   ' → logprob: -1.518566608428955
    3. 'part' → logprob: -2.143566608428955
    4. ')' → logprob: -2.643566608428955
    5. 'for' → logprob: -3.268566608428955
    6. 'line' → logprob: -3.393566608428955
    7. 'const' → logprob: -3.893566608428955
    8. 'du' → logprob: -4.018566608428955
    9. ',' → logprob: -4.143566608428955
    10. ':' → logprob: -4.393566608428955

Token 1008: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002570481738075614
    2. 'for' → logprob: -8.87525749206543
    3. '   ' → logprob: -10.87525749206543
    4. 'answer' → logprob: -10.87525749206543
    5. ' ans' → logprob: -10.87525749206543
    6. 'an' → logprob: -11.25025749206543
    7. 'lin' → logprob: -11.75025749206543
    8. 'anst' → logprob: -11.87525749206543
    9. '
' → logprob: -12.00025749206543
    10. '	ans' → logprob: -12.12525749206543

Token 1009: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0009041957673616707
    2. 'for' → logprob: -7.625904083251953
    3. '   ' → logprob: -8.375904083251953
    4. 'answer' → logprob: -9.625904083251953
    5. ' ans' → logprob: -9.750904083251953
    6. '	ans' → logprob: -11.375904083251953
    7. 'lin' → logprob: -11.750904083251953
    8. 'anst' → logprob: -11.875904083251953
    9. 'an' → logprob: -12.000904083251953
    10. '```' → logprob: -12.125904083251953

Token 1010: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6110791563987732
    2. 'const' → logprob: -0.8610791563987732
    3. '_line' → logprob: -4.361079216003418
    4. 'linear' → logprob: -4.611079216003418
    5. 'lin' → logprob: -5.361079216003418
    6. '_linear' → logprob: -5.861079216003418
    7. '_const' → logprob: -6.486079216003418
    8. '_lin' → logprob: -6.736079216003418
    9. '_' → logprob: -6.986079216003418
    10. ' =' → logprob: -8.611079216003418

Token 1011: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.36928024888038635
    2. ' =' → logprob: -2.1192803382873535
    3. '+=' → logprob: -2.2442803382873535
    4. '=' → logprob: -2.4942803382873535
    5. ']+=' → logprob: -10.244279861450195
    6. '   ' → logprob: -11.744279861450195
    7. '+' → logprob: -11.869279861450195
    8. ')' → logprob: -11.994279861450195
    9. '<|end|>' → logprob: -12.119279861450195
    10. '+=(' → logprob: -12.619279861450195

Token 1012: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011714138090610504
    2. ' ' → logprob: -6.751171588897705
    3. '   ' → logprob: -14.376171112060547
    4. '(' → logprob: -15.251171112060547
    5. 'a' → logprob: -16.376171112060547
    6. '=' → logprob: -17.438671112060547
    7. 'b' → logprob: -17.501171112060547
    8. ' (' → logprob: -17.626171112060547
    9. ' ' → logprob: -17.626171112060547
    10. '       ' → logprob: -17.751171112060547

Token 1013: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.375006675720215
    3. '(' → logprob: -14.125006675720215
    4. 'B' → logprob: -14.625006675720215
    5. '   ' → logprob: -15.000006675720215
    6. 'b' → logprob: -15.125006675720215
    7. 'a' → logprob: -15.250006675720215
    8. 'A' → logprob: -15.875006675720215
    9. 'def' → logprob: -16.37500762939453
    10. '#' → logprob: -16.87500762939453

Token 1014: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8686047196388245
    2. ' for' → logprob: -1.1186046600341797
    3. '<|end|>' → logprob: -1.4936046600341797
    4. '   ' → logprob: -4.36860466003418
    5. ' ' → logprob: -4.99360466003418
    6. '	for' → logprob: -5.61860466003418
    7. '
' → logprob: -5.86860466003418
    8. '<|end|>' → logprob: -6.86860466003418
    9. '  
' → logprob: -7.61860466003418
    10. ' 
' → logprob: -8.11860466003418

Token 1015: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13325071334838867
    2. ' for' → logprob: -2.2582507133483887
    3. '<|end|>' → logprob: -4.383250713348389
    4. '   ' → logprob: -5.258250713348389
    5. '	for' → logprob: -6.258250713348389
    6. '```' → logprob: -8.258251190185547
    7. '
' → logprob: -8.633251190185547
    8. '[' → logprob: -10.008251190185547
    9. ' ' → logprob: -10.258251190185547
    10. '<|end|>' → logprob: -10.633251190185547

Token 1016: ' ch' (ID: 549)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005189551156945527
    2. 'ch' (adapté à ' ch') → logprob: -8.125518798828125
    3. ' for' → logprob: -9.125518798828125
    4. '   ' → logprob: -9.125518798828125
    5. '```' → logprob: -12.500518798828125
    6. '	for' → logprob: -14.000518798828125
    7. '
' → logprob: -14.875518798828125
    8. '#' → logprob: -16.125518798828125
    9. '``' → logprob: -16.625518798828125
    10. '       ' → logprob: -16.750518798828125

Token 1017: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -0.00043972869752906263
    2. 'ose' → logprob: -7.875439643859863
    3. 'ause' → logprob: -10.250439643859863
    4. 'o' → logprob: -11.625439643859863
    5. '```' → logprob: -12.125439643859863
    6. 'uose' → logprob: -12.250439643859863
    7. '   ' → logprob: -13.375439643859863
    8. 'oise' → logprob: -13.500439643859863
    9. ' ' → logprob: -14.500439643859863
    10. 'OUSE' → logprob: -15.000439643859863

Token 1018: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.60414821645827e-06
    2. '=' → logprob: -13.375004768371582
    3. 'ï' → logprob: -14.000004768371582
    4. 'и' → logprob: -14.125004768371582
    5. '   ' → logprob: -14.375004768371582
    6. 'і' → logprob: -15.125004768371582
    7. 'ي' → logprob: -16.625003814697266
    8. 'si' → logprob: -16.750003814697266
    9. '  ' → logprob: -16.875003814697266
    10. '```' → logprob: -16.875003814697266

Token 1019: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0387314148247242
    2. ' =' → logprob: -3.288731336593628
    3. '+=' → logprob: -7.913731575012207
    4. ' +=' → logprob: -8.038731575012207
    5. '<|end|>' → logprob: -14.663731575012207
    6. ' ' → logprob: -15.663731575012207
    7. '   ' → logprob: -16.03873062133789
    8. '.=' → logprob: -16.03873062133789
    9. ')' → logprob: -16.28873062133789
    10. '+' → logprob: -16.66373062133789

Token 1020: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'b' → logprob: -15.87501335144043
    4. '   ' → logprob: -17.75001335144043
    5. 'n' → logprob: -18.25001335144043
    6. '۰' → logprob: -18.25001335144043
    7. '(' → logprob: -19.31251335144043
    8. '1' → logprob: -19.31251335144043
    9. '[' → logprob: -19.93751335144043
    10. 'a' → logprob: -20.00001335144043

Token 1021: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. '1' → logprob: -12.875003814697266
    3. ' ' → logprob: -15.000003814697266
    4. 'b' → logprob: -15.250003814697266
    5. '-' → logprob: -16.000003814697266
    6. 'A' → logprob: -16.125003814697266
    7. 'a' → logprob: -16.500003814697266
    8. 'M' → logprob: -16.812503814697266
    9. 'L' → logprob: -17.125003814697266
    10. '۰' → logprob: -17.437503814697266

Token 1022: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28208887577056885
    2. '<|end|>' → logprob: -2.0320887565612793
    3. ' for' → logprob: -2.6570887565612793
    4. '
' → logprob: -3.2820887565612793
    5. '   ' → logprob: -5.407088756561279
    6. '<|end|>' → logprob: -7.032088756561279
    7. '	for' → logprob: -8.032089233398438
    8. '```' → logprob: -8.032089233398438
    9. '  
' → logprob: -8.657089233398438
    10. ' ' → logprob: -8.657089233398438

Token 1023: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01600797101855278
    2. ' for' → logprob: -4.391007900238037
    3. '```' → logprob: -6.141007900238037
    4. '
' → logprob: -6.766007900238037
    5. '   ' → logprob: -9.391008377075195
    6. '	for' → logprob: -9.641008377075195
    7. '<|end|>' → logprob: -11.141008377075195
    8. '``' → logprob: -12.016008377075195
    9. '[' → logprob: -12.516008377075195
    10. 'For' → logprob: -12.766008377075195

Token 1024: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002036595979006961
    2. ' for' → logprob: -8.625204086303711
    3. '
' → logprob: -11.000204086303711
    4. '```' → logprob: -12.125204086303711
    5. '	for' → logprob: -13.875204086303711
    6. '   ' → logprob: -14.750204086303711
    7. '  
' → logprob: -15.750204086303711
    8. 'For' → logprob: -15.750204086303711
    9. '    
' → logprob: -16.25020408630371
    10. '#' → logprob: -16.25020408630371

Token 1025: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.623244553338736e-05
    2. ' i' → logprob: -9.625065803527832
    3. ' ' → logprob: -17.50006675720215
    4. 'in' → logprob: -17.62506675720215
    5. ' in' → logprob: -18.37506675720215
    6. '	i' → logprob: -18.37506675720215
    7. 'range' → logprob: -19.12506675720215
    8. '   ' → logprob: -19.12506675720215
    9. '```' → logprob: -19.37506675720215
    10. '0' → logprob: -19.87506675720215

Token 1026: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11285147815942764
    2. 'in' → logprob: -2.23785138130188
    3. ' ' → logprob: -10.7378511428833
    4. '	in' → logprob: -13.3628511428833
    5. '(' → logprob: -13.7378511428833
    6. ')' → logprob: -14.6128511428833
    7. '```' → logprob: -14.6128511428833
    8. '   ' → logprob: -14.8628511428833
    9. '=' → logprob: -14.8628511428833
    10. '  ' → logprob: -14.8628511428833

Token 1027: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0045128390192985535
    2. ' range' → logprob: -5.504512786865234
    3. '0' → logprob: -7.879512786865234
    4. '60' → logprob: -10.129512786865234
    5. '(' → logprob: -11.379512786865234
    6. '(range' → logprob: -12.629512786865234
    7. ' ' → logprob: -14.129512786865234
    8. 'in' → logprob: -14.754512786865234
    9. ' in' → logprob: -16.754512786865234
    10. ' (' → logprob: -17.629512786865234

Token 1028: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.153795766294934e-06
    2. '0' → logprob: -12.875005722045898
    3. 'range' → logprob: -13.125005722045898
    4. '(range' → logprob: -14.375005722045898
    5. '60' → logprob: -14.750005722045898
    6. ' (' → logprob: -14.875005722045898
    7. '(
' → logprob: -16.2500057220459
    8. '<|end|>' → logprob: -16.5000057220459
    9. ' range' → logprob: -16.7500057220459
    10. ',' → logprob: -17.5000057220459

Token 1029: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019293478690087795
    2. '60' → logprob: -6.25192928314209
    3. 'range' → logprob: -14.50192928314209
    4. '(' → logprob: -15.37692928314209
    5. '61' → logprob: -17.251930236816406
    6. ' ' → logprob: -17.501930236816406
    7. '59' → logprob: -18.751930236816406
    8. ',' → logprob: -19.376930236816406
    9. '   ' → logprob: -19.626930236816406
    10. '
' → logprob: -20.001930236816406

Token 1030: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010423363419249654
    2. ' ,' → logprob: -7.126042366027832
    3. '+' → logprob: -9.001042366027832
    4. '+,' → logprob: -9.751042366027832
    5. '(' → logprob: -10.501042366027832
    6. '60' → logprob: -12.251042366027832
    7. '1' → logprob: -12.376042366027832
    8. '0' → logprob: -13.001042366027832
    9. '```' → logprob: -13.001042366027832
    10. ' ' → logprob: -13.126042366027832

Token 1031: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.50000286102295
    3. '0' → logprob: -13.87500286102295
    4. '   ' → logprob: -16.500001907348633
    5. '59' → logprob: -18.875001907348633
    6. '61' → logprob: -18.875001907348633
    7. '(' → logprob: -19.875001907348633
    8. '40' → logprob: -20.750001907348633
    9. '6' → logprob: -20.875001907348633
    10. '```' → logprob: -21.000001907348633

Token 1032: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '(' → logprob: -16.0
    4. '61' → logprob: -18.375
    5. '59' → logprob: -18.625
    6. 'i' → logprob: -18.75
    7. '
' → logprob: -18.875
    8. '   ' → logprob: -19.5
    9. '64' → logprob: -19.625
    10. '40' → logprob: -19.625

Token 1033: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7349179983139038
    2. '):' → logprob: -0.8599179983139038
    3. '):
' → logprob: -2.3599181175231934
    4. '   ' → logprob: -6.859918117523193
    5. ':
' → logprob: -7.859918117523193
    6. '```' → logprob: -8.234917640686035
    7. '>:' → logprob: -8.484917640686035
    8. '():' → logprob: -8.734917640686035
    9. '+' → logprob: -8.984917640686035
    10. '}:' → logprob: -9.109917640686035

Token 1034: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008723298087716103
    2. '   ' → logprob: -5.008723258972168
    3. '```' → logprob: -6.883723258972168
    4. '	' → logprob: -7.508723258972168
    5. ' if' → logprob: -8.883723258972168
    6. '	   ' → logprob: -9.508723258972168
    7. '<|end|>' → logprob: -9.883723258972168
    8. 'if' → logprob: -10.383723258972168
    9. '[' → logprob: -10.508723258972168
    10. ' ' → logprob: -11.008723258972168

Token 1035: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6682313680648804
    2. '#' → logprob: -1.1682313680648804
    3. '   ' → logprob: -1.9182313680648804
    4. '       ' → logprob: -3.66823148727417
    5. '```' → logprob: -5.91823148727417
    6. ' if' → logprob: -6.66823148727417
    7. '``' → logprob: -10.418231010437012
    8. ' ' → logprob: -10.418231010437012
    9. '
' → logprob: -11.043231010437012
    10. '	if' → logprob: -11.293231010437012

Token 1036: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04307261481881142
    2. 'n' → logprob: -3.1680727005004883
    3. '(n' → logprob: -10.043072700500488
    4. ' (' → logprob: -10.543072700500488
    5. '   ' → logprob: -13.668072700500488
    6. ' ' → logprob: -14.043072700500488
    7. '	n' → logprob: -14.293072700500488
    8. ' ' → logprob: -14.668072700500488
    9. '(' → logprob: -15.793072700500488
    10. '_n' → logprob: -16.793071746826172

Token 1037: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.20145368576049805
    2. '>>' → logprob: -1.701453685760498
    3. '>' → logprob: -11.076454162597656
    4. ' >' → logprob: -11.826454162597656
    5. ' >>=' → logprob: -12.826454162597656
    6. ' &' → logprob: -12.951454162597656
    7. '[' → logprob: -13.076454162597656
    8. ' ' → logprob: -13.201454162597656
    9. '>>
' → logprob: -13.326454162597656
    10. '>>&' → logprob: -13.826454162597656

Token 1038: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00017994173686020076
    2. ' i' → logprob: -8.6251802444458
    3. '(i' → logprob: -15.7501802444458
    4. '	i' → logprob: -17.000179290771484
    5. '<|end|>' → logprob: -17.750179290771484
    6. '[i' → logprob: -17.875179290771484
    7. '```' → logprob: -18.125179290771484
    8. '_i' → logprob: -18.125179290771484
    9. ' ' → logprob: -18.375179290771484
    10. '(' → logprob: -18.625179290771484

Token 1039: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.38687241077423096
    2. '&' → logprob: -1.136872410774231
    3. ' ' → logprob: -14.886872291564941
    4. '[' → logprob: -15.011872291564941
    5. ' &
' → logprob: -15.261872291564941
    6. '&
' → logprob: -16.011873245239258
    7. '&i' → logprob: -16.136873245239258
    8. '1' → logprob: -16.136873245239258
    9. '&amp' → logprob: -16.761873245239258
    10. '＆' → logprob: -17.511873245239258

Token 1040: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043005939573049545
    2. ' ' → logprob: -3.16800594329834
    3. '```' → logprob: -12.16800594329834
    4. '   ' → logprob: -14.41800594329834
    5. 'i' → logprob: -14.79300594329834
    6. '`' → logprob: -15.54300594329834
    7. ' i' → logprob: -16.293004989624023
    8. '``' → logprob: -16.355504989624023
    9. '0' → logprob: -16.543004989624023
    10. ' ' → logprob: -17.230504989624023

Token 1041: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -16.625003814697266
    4. '```' → logprob: -17.250003814697266
    5. '   ' → logprob: -18.375003814697266
    6. 'i' → logprob: -18.625003814697266
    7. '`' → logprob: -19.062503814697266
    8. '' → logprob: -19.125003814697266
    9. '
' → logprob: -19.437503814697266
    10. '１' → logprob: -19.562503814697266

Token 1042: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20145533978939056
    2. '==' → logprob: -1.7014553546905518
    3. '=' → logprob: -11.076455116271973
    4. ')==' → logprob: -11.326455116271973
    5. ' ' → logprob: -12.451455116271973
    6. '[' → logprob: -13.076455116271973
    7. '()==' → logprob: -13.076455116271973
    8. ')' → logprob: -13.576455116271973
    9. ']==' → logprob: -13.701455116271973
    10. '==
' → logprob: -13.826455116271973

Token 1043: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '0' → logprob: -16.00001335144043
    4. '   ' → logprob: -17.25001335144043
    5. '۱' → logprob: -18.12501335144043
    6. '१' → logprob: -19.18751335144043
    7. '```' → logprob: -19.18751335144043
    8. '  ' → logprob: -19.43751335144043
    9. '１' → logprob: -19.62501335144043
    10. '[' → logprob: -19.68751335144043

Token 1044: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '0' → logprob: -15.875000953674316
    4. '   ' → logprob: -18.125001907348633
    5. '۱' → logprob: -18.937501907348633
    6. '```' → logprob: -19.125001907348633
    7. '' → logprob: -19.687501907348633
    8. '...' → logprob: -19.875001907348633
    9. '१' → logprob: -20.000001907348633
    10. '১' → logprob: -20.187501907348633

Token 1045: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4290548861026764
    2. ':' → logprob: -1.054054856300354
    3. '           ' → logprob: -9.179055213928223
    4. '       ' → logprob: -9.554055213928223
    5. '=' → logprob: -10.179055213928223
    6. '<|end|>' → logprob: -10.179055213928223
    7. ':

' → logprob: -10.304055213928223
    8. '):
' → logprob: -10.929055213928223
    9. ':
' → logprob: -11.679055213928223
    10. '<|end|>' → logprob: -12.054055213928223

Token 1046: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2585129141807556
    2. '       ' → logprob: -1.5085129737854004
    3. 'ans' → logprob: -6.1335129737854
    4. ':' → logprob: -6.3835129737854
    5. '```' → logprob: -7.2585129737854
    6. '   ' → logprob: -7.6335129737854
    7. '               ' → logprob: -7.8835129737854
    8. '#' → logprob: -8.258512496948242
    9. '<|end|>' → logprob: -8.258512496948242
    10. '(ans' → logprob: -8.758512496948242

Token 1047: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0027959682047367096
    2. '           ' → logprob: -6.252796173095703
    3. ' ans' → logprob: -7.877796173095703
    4. '(ans' → logprob: -8.252796173095703
    5. '       ' → logprob: -9.002796173095703
    6. '	ans' → logprob: -9.877796173095703
    7. '   ' → logprob: -10.627796173095703
    8. '```' → logprob: -10.877796173095703
    9. 'answer' → logprob: -12.127796173095703
    10. '               ' → logprob: -13.377796173095703

Token 1048: ' Aj' (ID: 28294)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -8.77627644513268e-06
    2. '           ' → logprob: -12.250008583068848
    3. ' ans' → logprob: -12.500008583068848
    4. 'answer' → logprob: -15.875008583068848
    5. '
' → logprob: -17.625009536743164
    6. '(ans' → logprob: -17.750009536743164
    7. '	ans' → logprob: -18.250009536743164
    8. '       ' → logprob: -18.500009536743164
    9. '```' → logprob: -19.000009536743164
    10. '   ' → logprob: -19.500009536743164

Token 1049: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.16990222036838531
    2. 'ans' → logprob: -2.1699023246765137
    3. 'outez' → logprob: -3.5449023246765137
    4. '           ' → logprob: -4.919902324676514
    5. ' ans' → logprob: -6.919902324676514
    6. 'outer' → logprob: -6.919902324676514
    7. '   ' → logprob: -7.294902324676514
    8. '       ' → logprob: -7.419902324676514
    9. '_ans' → logprob: -7.794902324676514
    10. '        ' → logprob: -8.169901847839355

Token 1050: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5908191204071045
    2. '(
' → logprob: -1.5908191204071045
    3. '+=' → logprob: -2.2158191204071045
    4. '(' → logprob: -2.8408191204071045
    5. '           ' → logprob: -2.9658191204071045
    6. 'ans' → logprob: -4.215819358825684
    7. ' +=' → logprob: -5.465819358825684
    8. '(ans' → logprob: -6.715819358825684
    9. '               ' → logprob: -7.590819358825684
    10. '```' → logprob: -7.840819358825684

Token 1051: ' la' (ID: 557)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0006547740194946527
    2. ' doubling' → logprob: -8.250655174255371
    3. '(d' → logprob: -8.375655174255371
    4. 'ans' → logprob: -8.875655174255371
    5. '   ' → logprob: -11.750655174255371
    6. 'double' → logprob: -12.375655174255371
    7. '(ans' → logprob: -12.750655174255371
    8. ' dou' → logprob: -13.750655174255371
    9. 'd' → logprob: -13.750655174255371
    10. '(
' → logprob: -14.000655174255371

Token 1052: ' contribution' (ID: 26735)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.18411944806575775
    2. 'ans' → logprob: -1.809119462966919
    3. '(d' → logprob: -6.30911922454834
    4. '(ans' → logprob: -6.93411922454834
    5. '(
' → logprob: -7.55911922454834
    6. '(' → logprob: -7.93411922454834
    7. 'line' → logprob: -8.30911922454834
    8. ' doubling' → logprob: -8.93411922454834
    9. '(line' → logprob: -9.18411922454834
    10. ' ans' → logprob: -9.68411922454834

Token 1053: ' issue' (ID: 6626)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.11306922882795334
    2. '(line' → logprob: -2.6130692958831787
    3. 'linear' → logprob: -4.7380690574646
    4. 'lin' → logprob: -5.2380690574646
    5. 'ans' → logprob: -5.6130690574646
    6. '=' → logprob: -5.6130690574646
    7. '=line' → logprob: -5.7380690574646
    8. ' line' → logprob: -6.1130690574646
    9. '(
' → logprob: -6.3630690574646
    10. '(' → logprob: -6.4880690574646

Token 1054: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7084606885910034
    2. '=' → logprob: -2.083460807800293
    3. '(ans' → logprob: -2.083460807800293
    4. '(
' → logprob: -2.458460807800293
    5. '           ' → logprob: -2.708460807800293
    6. '(line' → logprob: -3.208460807800293
    7. 'ans' → logprob: -3.583460807800293
    8. 'dou' → logprob: -4.583460807800293
    9. 'line' → logprob: -5.083460807800293
    10. '=line' → logprob: -5.083460807800293

Token 1055: ' doubl' (ID: 127992)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -1.8789383830153383e-05
    2. ' doubling' → logprob: -11.875019073486328
    3. 'ans' → logprob: -12.375019073486328
    4. 'part' → logprob: -12.625019073486328
    5. '(d' → logprob: -13.375019073486328
    6. '(i' → logprob: -14.250019073486328
    7. '   ' → logprob: -15.125019073486328
    8. 'double' → logprob: -15.125019073486328
    9. 'd' → logprob: -15.500019073486328
    10. '(' → logprob: -15.750019073486328

Token 1056: 'age' (ID: 477)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.00043710620957426727
    2. 'age' → logprob: -8.000436782836914
    3. 'aging' → logprob: -10.875436782836914
    4. 'able' → logprob: -11.125436782836914
    5. 'bling' → logprob: -11.500436782836914
    6. 'a' → logprob: -11.625436782836914
    7. 'ving' → logprob: -11.625436782836914
    8. 'aling' → logprob: -12.000436782836914
    9. 'ling' → logprob: -12.125436782836914
    10. 'ging' → logprob: -12.250436782836914

Token 1057: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6533040404319763
    2. ' ans' → logprob: -2.028304100036621
    3. '           ' → logprob: -2.153304100036621
    4. '+=' → logprob: -2.903304100036621
    5. '(ans' → logprob: -3.028304100036621
    6. 'ans' → logprob: -3.153304100036621
    7. '=' → logprob: -3.653304100036621
    8. ' =' → logprob: -3.778304100036621
    9. '<|end|>' → logprob: -5.403304100036621
    10. '[i' → logprob: -5.528304100036621

Token 1058: ' plus' (ID: 2932)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.32665443420410156
    2. ' ans' → logprob: -1.4516544342041016
    3. '           ' → logprob: -3.5766544342041016
    4. '(ans' → logprob: -4.576654434204102
    5. '               ' → logprob: -5.451654434204102
    6. 'answer' → logprob: -7.076654434204102
    7. '	ans' → logprob: -8.201654434204102
    8. '+=' → logprob: -8.826654434204102
    9. '```' → logprob: -9.201654434204102
    10. '=' → logprob: -9.576654434204102

Token 1059: ' un' (ID: 537)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6470116376876831
    2. 'dou' → logprob: -1.147011637687683
    3. ' ans' → logprob: -2.7720117568969727
    4. ' doubling' → logprob: -2.8970117568969727
    5. '(ans' → logprob: -3.7720117568969727
    6. ' (' → logprob: -5.272011756896973
    7. '           ' → logprob: -5.647011756896973
    8. '(
' → logprob: -5.772011756896973
    9. '(' → logprob: -6.647011756896973
    10. '=' → logprob: -7.272011756896973

Token 1060: ' terme' (ID: 42959)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.610114574432373
    2. ' ans' → logprob: -1.235114574432373
    3. 'pow' → logprob: -2.610114574432373
    4. '(ans' → logprob: -3.735114574432373
    5. 'a' → logprob: -4.360114574432373
    6. '=' → logprob: -4.485114574432373
    7. 'b' → logprob: -4.735114574432373
    8. ')' → logprob: -5.110114574432373
    9. 'dou' → logprob: -5.235114574432373
    10. ' pow' → logprob: -5.985114574432373

Token 1061: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4020228683948517
    2. '(' → logprob: -2.6520228385925293
    3. '(
' → logprob: -2.6520228385925293
    4. ' *' → logprob: -2.6520228385925293
    5. '=' → logprob: -3.6520228385925293
    6. '*' → logprob: -3.7770228385925293
    7. ' =' → logprob: -3.7770228385925293
    8. '(a' → logprob: -5.152022838592529
    9. ':' → logprob: -5.277022838592529
    10. '            
' → logprob: -5.527022838592529

Token 1062: ' correction' (ID: 43745)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.23442068696022034
    2. ' ans' → logprob: -2.3594207763671875
    3. 'dou' → logprob: -3.3594207763671875
    4. '(ans' → logprob: -3.4844207763671875
    5. 'ch' → logprob: -3.6094207763671875
    6. 'a' → logprob: -5.1094207763671875
    7. '(' → logprob: -5.9844207763671875
    8. ' doubling' → logprob: -6.3594207763671875
    9. 'A' → logprob: -6.4844207763671875
    10. ' (' → logprob: -6.6094207763671875

Token 1063: ' dépend' (ID: 68660)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04495709389448166
    2. '=' → logprob: -3.919957160949707
    3. ' =' → logprob: -5.294957160949707
    4. ':' → logprob: -5.544957160949707
    5. '*' → logprob: -5.794957160949707
    6. '               ' → logprob: -6.169957160949707
    7. '(' → logprob: -6.544957160949707
    8. ',' → logprob: -6.919957160949707
    9. ' +=' → logprob: -7.044957160949707
    10. 'import' → logprob: -7.169957160949707

Token 1064: 'ant' (ID: 493)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12823164463043213
    2. '           ' → logprob: -3.0032315254211426
    3. '=' → logprob: -3.7532315254211426
    4. ')' → logprob: -4.128231525421143
    5. 'ant' → logprob: -5.003231525421143
    6. ' (' → logprob: -5.128231525421143
    7. ',' → logprob: -5.253231525421143
    8. '            ' → logprob: -5.253231525421143
    9. '+' → logprob: -6.503231525421143
    10. ']' → logprob: -6.878231525421143

Token 1065: ' du' (ID: 1462)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.122712254524231
    2. '(' → logprob: -1.247712254524231
    3. '           ' → logprob: -1.497712254524231
    4. '(
' → logprob: -1.997712254524231
    5. '(a' → logprob: -3.9977121353149414
    6. '(ch' → logprob: -6.622712135314941
    7. '(d' → logprob: -6.622712135314941
    8. 'ans' → logprob: -6.997712135314941
    9. '(i' → logprob: -7.372712135314941
    10. '=' → logprob: -7.497712135314941

Token 1066: ' dé' (ID: 2393)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.13026127219200134
    2. 'dou' → logprob: -3.380261182785034
    3. 'a' → logprob: -3.505261182785034
    4. 'i' → logprob: -3.630261182785034
    5. 'ans' → logprob: -4.255261421203613
    6. 'l' → logprob: -4.630261421203613
    7. 'pow' → logprob: -6.505261421203613
    8. ' ch' → logprob: -6.755261421203613
    9. 'A' → logprob: -6.880261421203613
    10. 'b' → logprob: -7.505261421203613

Token 1067: 'cal' (ID: 5842)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.06841418892145157
    2. ' ch' → logprob: -3.4434142112731934
    3. 'i' → logprob: -3.5684142112731934
    4. ' i' → logprob: -6.693414211273193
    5. 'éc' → logprob: -7.068414211273193
    6. '```' → logprob: -7.193414211273193
    7. 'c' → logprob: -7.568414211273193
    8. ')' → logprob: -7.693414211273193
    9. '_ch' → logprob: -7.693414211273193
    10. 'ouble' → logprob: -8.193413734436035

Token 1068: 'age' (ID: 477)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.2940666675567627
    2. ' de' → logprob: -1.4190666675567627
    3. 'es' → logprob: -1.7940666675567627
    4. '   ' → logprob: -2.4190666675567627
    5. '```' → logprob: -2.5440666675567627
    6. 'e' → logprob: -3.4190666675567627
    7. 'age' → logprob: -3.6690666675567627
    8. 'i' → logprob: -4.169066429138184
    9. 'ch' → logprob: -4.419066429138184
    10. ' ' → logprob: -4.919066429138184

Token 1069: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017851736396551132
    2. '*' → logprob: -4.767851829528809
    3. ',' → logprob: -6.142851829528809
    4. '(ans' → logprob: -6.392851829528809
    5. ' *' → logprob: -6.517851829528809
    6. '=' → logprob: -6.892851829528809
    7. '(' → logprob: -7.517851829528809
    8. '               ' → logprob: -7.767851829528809
    9. '*(' → logprob: -8.392851829528809
    10. '            
' → logprob: -8.642851829528809

Token 1070: '           ' (ID: 352)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.15924502909183502
    2. '+=' → logprob: -3.284245014190674
    3. 'ans' → logprob: -3.784245014190674
    4. '+' → logprob: -4.034245014190674
    5. '```' → logprob: -4.159245014190674
    6. '(' → logprob: -4.284245014190674
    7. ' ans' → logprob: -4.284245014190674
    8. ' +=' → logprob: -5.034245014190674
    9. '(
' → logprob: -5.034245014190674
    10. '<|end|>' → logprob: -5.409245014190674

Token 1071: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0021288490388542414
    2. ' ans' → logprob: -6.377129077911377
    3. '           ' → logprob: -8.127128601074219
    4. '(ans' → logprob: -9.252128601074219
    5. 'answer' → logprob: -11.127128601074219
    6. '```' → logprob: -11.377128601074219
    7. '	ans' → logprob: -12.752128601074219
    8. '+=' → logprob: -13.502128601074219
    9. '``' → logprob: -14.002128601074219
    10. '_ans' → logprob: -14.377128601074219

Token 1072: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.018237387761473656
    2. 'const' → logprob: -4.018237590789795
    3. 'linear' → logprob: -10.393237113952637
    4. '_line' → logprob: -10.768237113952637
    5. 'lin' → logprob: -11.643237113952637
    6. '+=' → logprob: -12.518237113952637
    7. '_' → logprob: -12.518237113952637
    8. ' +=' → logprob: -12.893237113952637
    9. '(line' → logprob: -13.018237113952637
    10. '#line' → logprob: -13.018237113952637

Token 1073: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31984806060791016
    2. ' +=' → logprob: -1.3198480606079102
    3. '=' → logprob: -5.19484806060791
    4. ' =' → logprob: -7.19484806060791
    5. '+=(' → logprob: -8.31984806060791
    6. '+' → logprob: -12.19484806060791
    7. ']+=' → logprob: -12.44484806060791
    8. '           ' → logprob: -12.44484806060791
    9. '*=' → logprob: -12.94484806060791
    10. '```' → logprob: -13.06984806060791

Token 1074: ' (
' (ID: 4112)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.004265965893864632
    2. ' doubling' → logprob: -5.629265785217285
    3. '(d' → logprob: -7.879265785217285
    4. '   ' → logprob: -9.629265785217285
    5. 'double' → logprob: -10.629265785217285
    6. '(
' → logprob: -10.629265785217285
    7. '(' → logprob: -11.004265785217285
    8. 'ans' → logprob: -11.254265785217285
    9. '(b' → logprob: -11.379265785217285
    10. 'b' → logprob: -11.504265785217285

Token 1075: '               ' (ID: 506)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0036234736908227205
    2. ' doubling' → logprob: -6.2536234855651855
    3. '(d' → logprob: -6.7536234855651855
    4. '           ' → logprob: -8.253623008728027
    5. 'd' → logprob: -9.753623008728027
    6. 'double' → logprob: -10.003623008728027
    7. '   ' → logprob: -10.378623008728027
    8. 'ans' → logprob: -10.628623008728027
    9. '(' → logprob: -11.128623008728027
    10. '       ' → logprob: -11.503623008728027

Token 1076: ' (' (ID: 350)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.004944477695971727
    2. ' doubling' → logprob: -5.629944324493408
    3. '(d' → logprob: -7.379944324493408
    4. '   ' → logprob: -9.004944801330566
    5. 'double' → logprob: -9.379944801330566
    6. 'b' → logprob: -9.504944801330566
    7. 'd' → logprob: -9.629944801330566
    8. 'a' → logprob: -9.629944801330566
    9. '(a' → logprob: -10.129944801330566
    10. 'A' → logprob: -10.504944801330566

Token 1077: 'dou' (ID: 122443)
  Prédit: 'dou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0032990318723022938
    2. 'a' → logprob: -6.753299236297607
    3. 'ans' → logprob: -7.628299236297607
    4. 'part' → logprob: -7.628299236297607
    5. 'b' → logprob: -7.878299236297607
    6. ' doubling' → logprob: -8.25329875946045
    7. 'A' → logprob: -8.87829875946045
    8. '   ' → logprob: -9.75329875946045
    9. 'pow' → logprob: -10.00329875946045
    10. 'parts' → logprob: -10.00329875946045

Token 1078: 'bling' (ID: 11037)
  Prédit: 'bling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bling' → logprob: -0.0017716889269649982
    2. 'ble' → logprob: -6.876771926879883
    3. 'bl' → logprob: -7.751771926879883
    4. 'b' → logprob: -8.501771926879883
    5. 'gling' → logprob: -10.501771926879883
    6. 'ling' → logprob: -10.626771926879883
    7. 'bing' → logprob: -11.001771926879883
    8. 'pling' → logprob: -11.876771926879883
    9. 'bly' → logprob: -12.126771926879883
    10. 'bled' → logprob: -12.876771926879883

Token 1079: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.28121379017829895
    2. 'const' → logprob: -1.4062137603759766
    3. '_const' → logprob: -10.656213760375977
    4. '_line' → logprob: -11.406213760375977
    5. '[' → logprob: -12.031213760375977
    6. ' const' → logprob: -12.906213760375977
    7. ')' → logprob: -13.156213760375977
    8. '   ' → logprob: -13.281213760375977
    9. '[line' → logprob: -13.281213760375977
    10. '[i' → logprob: -13.281213760375977

Token 1080: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.75000286102295
    3. ')[' → logprob: -13.87500286102295
    4. '[I' → logprob: -15.50000286102295
    5. 'i' → logprob: -16.875001907348633
    6. ')i' → logprob: -17.625001907348633
    7. '[
' → logprob: -17.750001907348633
    8. '[int' → logprob: -17.875001907348633
    9. ')' → logprob: -18.375001907348633
    10. '           ' → logprob: -19.000001907348633

Token 1081: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0818183571100235
    2. ')' → logprob: -2.9568183422088623
    3. '+' → logprob: -5.081818580627441
    4. ' *' → logprob: -5.331818580627441
    5. ']*' → logprob: -5.831818580627441
    6. ' +' → logprob: -6.206818580627441
    7. '*' → logprob: -6.206818580627441
    8. '           ' → logprob: -6.331818580627441
    9. '%' → logprob: -6.706818580627441
    10. '])' → logprob: -6.956818580627441

Token 1082: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.36420777440071106
    2. '*' → logprob: -1.2392077445983887
    3. '               ' → logprob: -4.489207744598389
    4. ')' → logprob: -6.489207744598389
    5. '                ' → logprob: -6.989207744598389
    6. '+' → logprob: -7.114207744598389
    7. '                   ' → logprob: -7.864207744598389
    8. '           ' → logprob: -9.114208221435547
    9. ' ' → logprob: -9.114208221435547
    10. ' +' → logprob: -9.114208221435547

Token 1083: ' ch' (ID: 549)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.744756817817688
    2. 'ans' → logprob: -1.494756817817688
    3. 'a' → logprob: -1.744756817817688
    4. 'ch' → logprob: -2.3697566986083984
    5. ' ans' → logprob: -5.119756698608398
    6. 'n' → logprob: -5.119756698608398
    7. '           ' → logprob: -5.994756698608398
    8. 'pow' → logprob: -6.119756698608398
    9. '   ' → logprob: -6.619756698608398
    10. 'd' → logprob: -6.744756698608398

Token 1084: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -0.0008996733813546598
    2. 'ose' → logprob: -7.125899791717529
    3. 'ause' → logprob: -9.875899314880371
    4. '```' → logprob: -10.750899314880371
    5. 'uose' → logprob: -11.875899314880371
    6. ' ' → logprob: -12.125899314880371
    7. '   ' → logprob: -12.875899314880371
    8. 'OUSE' → logprob: -13.125899314880371
    9. '>' → logprob: -14.375899314880371
    10. '[' → logprob: -15.000899314880371

Token 1085: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006950272712856531
    2. 'si' → logprob: -5.006950378417969
    3. 's' → logprob: -8.881950378417969
    4. 'и' → logprob: -11.006950378417969
    5. 'sei' → logprob: -11.881950378417969
    6. 'is' → logprob: -12.131950378417969
    7. '[i' → logprob: -12.381950378417969
    8. 'і' → logprob: -12.506950378417969
    9. '```' → logprob: -12.506950378417969
    10. '   ' → logprob: -12.631950378417969

Token 1086: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47481727600097656
    2. '*' → logprob: -0.9748172760009766
    3. ')' → logprob: -8.099817276000977
    4. '               ' → logprob: -9.224817276000977
    5. '                   ' → logprob: -10.349817276000977
    6. '          ' → logprob: -10.349817276000977
    7. ' ' → logprob: -10.349817276000977
    8. '                ' → logprob: -10.474817276000977
    9. '```' → logprob: -10.724817276000977
    10. '           ' → logprob: -10.849817276000977

Token 1087: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.04174162074923515
    2. 'a' → logprob: -3.2917416095733643
    3. ' doubling' → logprob: -7.041741847991943
    4. 'A' → logprob: -7.791741847991943
    5. 'b' → logprob: -7.916741847991943
    6. '(a' → logprob: -7.916741847991943
    7. 'B' → logprob: -8.166741371154785
    8. 'pow' → logprob: -8.541741371154785
    9. 'M' → logprob: -8.666741371154785
    10. 'ans' → logprob: -8.916741371154785

Token 1088: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.500001907348633
    3. ' const' → logprob: -15.625001907348633
    4. '[i' → logprob: -15.875001907348633
    5. 'line' → logprob: -15.875001907348633
    6. '_const' → logprob: -16.625001907348633
    7. '```' → logprob: -16.750001907348633
    8. '
' → logprob: -17.375001907348633
    9. '.const' → logprob: -17.375001907348633
    10. '   ' → logprob: -17.375001907348633

Token 1089: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.6895233531831764e-05
    2. '[' → logprob: -11.12502670288086
    3. '[
' → logprob: -11.62502670288086
    4. 'i' → logprob: -13.12502670288086
    5. '```' → logprob: -14.25002670288086
    6. '[int' → logprob: -16.37502670288086
    7. '[I' → logprob: -16.62502670288086
    8. ',i' → logprob: -16.75002670288086
    9. '(i' → logprob: -16.87502670288086
    10. '
' → logprob: -17.00002670288086

Token 1090: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010715399868786335
    2. '%' → logprob: -5.635715484619141
    3. ')%' → logprob: -6.260715484619141
    4. '               ' → logprob: -6.385715484619141
    5. ' )' → logprob: -6.510715484619141
    6. ' *' → logprob: -7.010715484619141
    7. '           ' → logprob: -7.760715484619141
    8. '*' → logprob: -7.760715484619141
    9. ' %' → logprob: -9.01071548461914
    10. '                   ' → logprob: -9.88571548461914

Token 1091: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4605063498020172
    2. ')' → logprob: -1.0855063199996948
    3. '*' → logprob: -3.7105064392089844
    4. '%' → logprob: -5.585506439208984
    5. '               ' → logprob: -6.585506439208984
    6. ')%' → logprob: -7.460506439208984
    7. ' )' → logprob: -7.585506439208984
    8. '           ' → logprob: -8.460506439208984
    9. ' %' → logprob: -8.960506439208984
    10. '            ' → logprob: -9.585506439208984

Token 1092: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -5.931863051955588e-05
    2. ' pow' → logprob: -10.000059127807617
    3. '(pow' → logprob: -12.000059127807617
    4. 'A' → logprob: -12.250059127807617
    5. 'B' → logprob: -13.625059127807617
    6. 'a' → logprob: -13.875059127807617
    7. '   ' → logprob: -15.500059127807617
    8. '           ' → logprob: -16.000059127807617
    9. '       ' → logprob: -16.375059127807617
    10. '               ' → logprob: -16.625059127807617

Token 1093: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.127333340875339e-06
    2. '10' → logprob: -12.500003814697266
    3. ' (' → logprob: -15.625003814697266
    4. '(
' → logprob: -15.875003814697266
    5. '(pow' → logprob: -17.875003814697266
    6. '()' → logprob: -19.375003814697266
    7. '9' → logprob: -20.125003814697266
    8. '(int' → logprob: -20.375003814697266
    9. '('' → logprob: -20.750003814697266
    10. '(
' → logprob: -20.875003814697266

Token 1094: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06197362765669823
    2. '(' → logprob: -2.8119735717773438
    3. ' ' → logprob: -12.186973571777344
    4. '(
' → logprob: -14.936973571777344
    5. ' (' → logprob: -15.561973571777344
    6. '   ' → logprob: -16.436973571777344
    7. 'a' → logprob: -16.561973571777344
    8. 'pow' → logprob: -17.061973571777344
    9. '```' → logprob: -17.186973571777344
    10. '{' → logprob: -17.561973571777344

Token 1095: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1440226435661316
    2. '(' → logprob: -2.0190227031707764
    3. '(ch' → logprob: -6.769022464752197
    4. ',ch' → logprob: -9.019022941589355
    5. '(
' → logprob: -10.644022941589355
    6. ' ,' → logprob: -11.019022941589355
    7. ' (' → logprob: -11.144022941589355
    8. ',(' → logprob: -11.519022941589355
    9. '((' → logprob: -12.269022941589355
    10. ',
' → logprob: -13.144022941589355

Token 1096: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.2015022188425064
    2. ' ch' → logprob: -1.7015022039413452
    3. '(ch' → logprob: -9.576501846313477
    4. '	ch' → logprob: -11.451501846313477
    5. '   ' → logprob: -11.951501846313477
    6. '[ch' → logprob: -13.826501846313477
    7. ' ' → logprob: -14.576501846313477
    8. ''ch' → logprob: -15.451501846313477
    9. '  ' → logprob: -15.701501846313477
    10. '-ch' → logprob: -15.701501846313477

Token 1097: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -3.309382373117842e-05
    2. '```' → logprob: -11.125033378601074
    3. 'ose' → logprob: -11.500033378601074
    4. 'uose' → logprob: -12.125033378601074
    5. 'ousse' → logprob: -14.125033378601074
    6. 'ause' → logprob: -14.750033378601074
    7. 'use' → logprob: -15.000033378601074
    8. 'oise' → logprob: -15.000033378601074
    9. '=' → logprob: -15.375033378601074
    10. 'OUSE' → logprob: -15.625033378601074

Token 1098: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5854451656341553
    2. 'si' → logprob: -0.8354451656341553
    3. 'ise' → logprob: -6.085445404052734
    4. 'esi' → logprob: -6.460445404052734
    5. 'se' → logprob: -6.585445404052734
    6. 'sei' → logprob: -6.960445404052734
    7. 'is' → logprob: -7.210445404052734
    8. 'usi' → logprob: -7.335445404052734
    9. 'isi' → logprob: -8.085445404052734
    10. 's' → logprob: -8.210445404052734

Token 1099: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06209529936313629
    2. ' *' → logprob: -2.8120954036712646
    3. '*l' → logprob: -9.187095642089844
    4. ' l' → logprob: -11.812095642089844
    5. ',' → logprob: -12.312095642089844
    6. '```' → logprob: -12.562095642089844
    7. ' ' → logprob: -12.812095642089844
    8. 'l' → logprob: -13.187095642089844
    9. '*,' → logprob: -13.187095642089844
    10. '`' → logprob: -13.812095642089844

Token 1100: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12692862749099731
    2. ' l' → logprob: -2.1269285678863525
    3. '	l' → logprob: -15.001928329467773
    4. ' ' → logprob: -15.251928329467773
    5. ' ' → logprob: -17.126928329467773
    6. '(l' → logprob: -18.126928329467773
    7. '```' → logprob: -18.376928329467773
    8. '_l' → logprob: -18.626928329467773
    9. '
' → logprob: -18.626928329467773
    10. '   ' → logprob: -18.751928329467773

Token 1101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.052377623040229e-05
    2. ' ,' → logprob: -9.625070571899414
    3. ',M' → logprob: -13.000070571899414
    4. ',
' → logprob: -14.000070571899414
    5. '           ' → logprob: -14.625070571899414
    6. ')' → logprob: -15.000070571899414
    7. '%' → logprob: -15.125070571899414
    8. '       ' → logprob: -16.375070571899414
    9. '   ' → logprob: -16.875070571899414
    10. '),' → logprob: -17.500070571899414

Token 1102: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0007104054093360901
    2. ' M' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.375710487365723
    4. '           ' → logprob: -16.125709533691406
    5. '       ' → logprob: -16.875709533691406
    6. '```' → logprob: -17.250709533691406
    7. ' ' → logprob: -17.500709533691406
    8. '(M' → logprob: -17.750709533691406
    9. '    ' → logprob: -18.625709533691406
    10. '	M' → logprob: -18.750709533691406

Token 1103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002342469524592161
    2. ')
' → logprob: -6.752342700958252
    3. '           ' → logprob: -7.002342700958252
    4. ' )' → logprob: -8.752342224121094
    5. ')%' → logprob: -10.002342224121094
    6. '```' → logprob: -11.002342224121094
    7. '               ' → logprob: -11.627342224121094
    8. '                   ' → logprob: -12.127342224121094
    9. '       ' → logprob: -12.252342224121094
    10. ')\' → logprob: -12.627342224121094

Token 1104: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045098524540662766
    2. '<|end|>' → logprob: -3.6700985431671143
    3. ')%' → logprob: -4.795098304748535
    4. '           ' → logprob: -5.045098304748535
    5. ' )' → logprob: -5.920098304748535
    6. '<|end|>' → logprob: -7.920098304748535
    7. '%' → logprob: -8.045098304748535
    8. '               ' → logprob: -8.920098304748535
    9. ')
' → logprob: -9.545098304748535
    10. '       ' → logprob: -9.795098304748535

Token 1105: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053585316985845566
    2. ')%' → logprob: -3.1785852909088135
    3. '           ' → logprob: -4.928585529327393
    4. '%' → logprob: -6.053585529327393
    5. ' )' → logprob: -7.553585529327393
    6. '<|end|>' → logprob: -8.553585052490234
    7. ')
' (adapté à ' )
') → logprob: -9.178585052490234
    8. ' %' → logprob: -10.053585052490234
    9. '               ' → logprob: -11.053585052490234
    10. '%)' → logprob: -11.178585052490234

Token 1106: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.06364449113607407
    2. '           ' → logprob: -3.6886444091796875
    3. ')%' → logprob: -4.0636444091796875
    4. ' %' → logprob: -4.4386444091796875
    5. ')' → logprob: -5.5636444091796875
    6. '<|end|>' → logprob: -6.1886444091796875
    7. ' %=' → logprob: -7.1886444091796875
    8. '%
' → logprob: -7.8136444091796875
    9. '%=' → logprob: -8.688644409179688
    10. '%)' → logprob: -8.938644409179688

Token 1107: ' ans' (ID: 3345)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02448735199868679
    2. '%=' → logprob: -3.899487257003784
    3. '           ' → logprob: -6.024487495422363
    4. ')%' → logprob: -7.524487495422363
    5. ' %=' → logprob: -7.649487495422363
    6. '%
' → logprob: -8.649487495422363
    7. ')' → logprob: -8.774487495422363
    8. '%)' → logprob: -10.024487495422363
    9. '=' → logprob: -10.399487495422363
    10. 'ans' (adapté à ' ans') → logprob: -10.899487495422363

Token 1108: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0024781543761491776
    2. 'const' → logprob: -6.002478122711182
    3. '=' → logprob: -14.62747859954834
    4. ' %=' → logprob: -14.75247859954834
    5. '%=' → logprob: -14.75247859954834
    6. ' line' → logprob: -15.25247859954834
    7. '_line' → logprob: -15.50247859954834
    8. '=line' → logprob: -15.50247859954834
    9. '#line' → logprob: -15.62747859954834
    10. '[line' → logprob: -16.127477645874023

Token 1109: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.03029107116162777
    2. ' %=' → logprob: -3.5302910804748535
    3. '%' → logprob: -7.5302910804748535
    4. '=' → logprob: -13.405290603637695
    5. ' %' → logprob: -13.780290603637695
    6. ')%' → logprob: -14.655290603637695
    7. '
' → logprob: -15.030290603637695
    8. ' ' → logprob: -15.655290603637695
    9. '	' → logprob: -16.280290603637695
    10. ')' → logprob: -16.405290603637695

Token 1110: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.3080716346157715e-05
    2. ' M' → logprob: -10.750022888183594
    3. '(M' → logprob: -13.375022888183594
    4. '(' → logprob: -18.750022888183594
    5. ' ' → logprob: -19.750022888183594
    6. '   ' → logprob: -19.750022888183594
    7. '```' → logprob: -20.625022888183594
    8. 'm' → logprob: -21.125022888183594
    9. '	M' → logprob: -21.125022888183594
    10. '           ' → logprob: -21.250022888183594

Token 1111: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1112: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1113: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.008673430420458317
    2. '           ' → logprob: -4.758673667907715
    3. ' ch' → logprob: -10.383673667907715
    4. '       ' → logprob: -10.883673667907715
    5. '   ' → logprob: -12.383673667907715
    6. '	ch' → logprob: -12.758673667907715
    7. '               ' → logprob: -14.258673667907715
    8. '          ' → logprob: -14.883673667907715
    9. '[ch' → logprob: -15.008673667907715
    10. '```' → logprob: -15.133673667907715

Token 1114: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -4.990154047845863e-05
    2. 'ause' → logprob: -10.750049591064453
    3. 'ose' → logprob: -10.750049591064453
    4. '```' → logprob: -12.750049591064453
    5. '#' → logprob: -13.250049591064453
    6. 'o' → logprob: -14.625049591064453
    7. 'ous' → logprob: -15.125049591064453
    8. '>' → logprob: -15.375049591064453
    9. 'use' → logprob: -15.375049591064453
    10. '`' → logprob: -15.625049591064453

Token 1115: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.896309739408025e-07
    2. 'si' → logprob: -14.375000953674316
    3. '   ' → logprob: -16.75
    4. 'и' → logprob: -17.0
    5. ' ' → logprob: -17.75
    6. ''i' → logprob: -17.875
    7. 'і' → logprob: -18.375
    8. 'is' → logprob: -18.375
    9. 'esi' → logprob: -18.75
    10. 'ي' → logprob: -19.0

Token 1116: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003663729876279831
    2. ' +=' → logprob: -5.628663539886475
    3. '+' → logprob: -9.753664016723633
    4. ']+=' → logprob: -12.253664016723633
    5. '+=(' → logprob: -15.003664016723633
    6. '=' → logprob: -15.378664016723633
    7. '+='' → logprob: -16.003664016723633
    8. '+="' → logprob: -16.378664016723633
    9. '```' → logprob: -16.878664016723633
    10. '   ' → logprob: -17.628664016723633

Token 1117: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029751179739832878
    2. ' ' → logprob: -3.5297510623931885
    3. '   ' → logprob: -14.65475082397461
    4. '(' → logprob: -15.15475082397461
    5. ' (' → logprob: -17.65475082397461
    6. '  ' → logprob: -18.27975082397461
    7. '```' → logprob: -18.27975082397461
    8. '       ' → logprob: -18.52975082397461
    9. '    ' → logprob: -18.77975082397461
    10. '1' → logprob: -18.77975082397461

Token 1118: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '(' → logprob: -18.000001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '1' → logprob: -20.375001907348633
    6. 'pow' → logprob: -20.750001907348633
    7. '```' → logprob: -21.375001907348633
    8. '10' → logprob: -21.750001907348633
    9. '0' → logprob: -22.000001907348633
    10. '`' → logprob: -22.375001907348633

Token 1119: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0031369589269161224
    2. ' **' → logprob: -6.003137111663818
    3. '^' → logprob: -7.878137111663818
    4. '[i' → logprob: -9.00313663482666
    5. 'i' → logprob: -9.12813663482666
    6. '*i' → logprob: -10.50313663482666
    7. '_i' → logprob: -11.37813663482666
    8. ' i' → logprob: -12.37813663482666
    9. '```' → logprob: -13.50313663482666
    10. '`' → logprob: -13.62813663482666

Token 1120: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8624639324116288e-06
    2. ' i' → logprob: -13.250001907348633
    3. '(i' → logprob: -16.375001907348633
    4. '(' → logprob: -17.125001907348633
    5. '	i' → logprob: -18.250001907348633
    6. '   ' → logprob: -19.000001907348633
    7. ')i' → logprob: -19.375001907348633
    8. '<|end|>' → logprob: -19.375001907348633
    9. '```' → logprob: -19.500001907348633
    10. ''i' → logprob: -20.250001907348633

Token 1121: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03701603785157204
    2. '<|end|>' → logprob: -4.162015914916992
    3. 'return' → logprob: -4.662015914916992
    4. '	return' → logprob: -5.037015914916992
    5. ' return' → logprob: -6.537015914916992
    6. '    
' → logprob: -7.412015914916992
    7. ')' → logprob: -7.412015914916992
    8. '#' → logprob: -8.037015914916992
    9. '       ' → logprob: -8.787015914916992
    10. ':return' → logprob: -9.162015914916992

Token 1122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2404272556304932
    2. 'return' → logprob: -1.2404272556304932
    3. '<|end|>' → logprob: -1.4904272556304932
    4. ' return' → logprob: -2.365427255630493
    5. '
' → logprob: -2.615427255630493
    6. ' ' → logprob: -4.865427017211914
    7. '	return' → logprob: -5.615427017211914
    8. '```' → logprob: -5.740427017211914
    9. '\n' → logprob: -6.115427017211914
    10. ' 
' → logprob: -6.490427017211914

Token 1123: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38896995782852173
    2. 'return' → logprob: -1.138969898223877
    3. ' return' → logprob: -6.513969898223877
    4. '#' (adapté à ' #') → logprob: -8.138970375061035
    5. '	return' → logprob: -8.888970375061035
    6. '```' → logprob: -9.138970375061035
    7. '       ' → logprob: -11.138970375061035
    8. 'result' → logprob: -11.263970375061035
    9. ' ' → logprob: -11.513970375061035
    10. '<|end|>' → logprob: -11.638970375061035

Token 1124: ' Ren' (ID: 17631)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0008693021372891963
    2. 'result' → logprob: -7.875869274139404
    3. '#' → logprob: -8.125869750976562
    4. 'ans' → logprob: -9.375869750976562
    5. '   ' → logprob: -10.250869750976562
    6. 'res' → logprob: -10.500869750976562
    7. 'answer' → logprob: -10.625869750976562
    8. 'total' → logprob: -11.625869750976562
    9. ' return' → logprob: -12.375869750976562
    10. 'ret' → logprob: -12.500869750976562

Token 1125: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.003888434497639537
    2. 'voy' → logprob: -5.8788886070251465
    3. 'return' → logprob: -7.2538886070251465
    4. 'v' → logprob: -8.378888130187988
    5. 'vo' → logprob: -9.753888130187988
    6. 'voi' → logprob: -9.878888130187988
    7. '```' → logprob: -11.628888130187988
    8. '   ' → logprob: -11.753888130187988
    9. '#' → logprob: -12.003888130187988
    10. 'ver' → logprob: -12.753888130187988

Token 1126: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.13949300348758698
    2. ' (' → logprob: -2.139492988586426
    3. ' ans' → logprob: -5.264492988586426
    4. 'ans' → logprob: -5.514492988586426
    5. '((' → logprob: -6.639492988586426
    6. '   ' → logprob: -7.264492988586426
    7. 'return' → logprob: -7.889492988586426
    8. '(a' → logprob: -7.889492988586426
    9. '(' → logprob: -9.264492988586426
    10. ' ((' → logprob: -9.389492988586426

Token 1127: ' combinaison' (ID: 165933)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004956458695232868
    2. 'ans' → logprob: -5.754956245422363
    3. '(d' → logprob: -6.629956245422363
    4. '(' → logprob: -8.379956245422363
    5. ' (' → logprob: -9.254956245422363
    6. '((' → logprob: -10.629956245422363
    7. '(
' → logprob: -10.629956245422363
    8. '(a' → logprob: -10.754956245422363
    9. 'return' → logprob: -11.504956245422363
    10. 'result' → logprob: -11.629956245422363

Token 1128: ' lin' (ID: 14432)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.010933688841760159
    2. ' (' → logprob: -5.510933876037598
    3. '(' → logprob: -6.010933876037598
    4. '((' → logprob: -6.260933876037598
    5. 'return' → logprob: -6.885933876037598
    6. '(return' → logprob: -7.010933876037598
    7. '(
' → logprob: -8.885933876037598
    8. '(d' → logprob: -8.885933876037598
    9. '   ' → logprob: -9.760933876037598
    10. '(a' → logprob: -10.010933876037598

Token 1129: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.133697748184204
    2. 'aire' → logprob: -1.383697748184204
    3. ')' → logprob: -2.008697748184204
    4. 'e' → logprob: -2.883697748184204
    5. '+' → logprob: -3.008697748184204
    6. '(
' → logprob: -3.508697748184204
    7. 'naire' → logprob: -3.758697748184204
    8. 'ear' → logprob: -4.133697509765625
    9. 'ar' → logprob: -4.258697509765625
    10. '(a' → logprob: -4.633697509765625

Token 1130: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.024795692414045334
    2. 'é' → logprob: -3.7747957706451416
    3. 'a' → logprob: -7.2747955322265625
    4. 'e' → logprob: -7.5247955322265625
    5. 'naire' → logprob: -9.899795532226562
    6. 'ére' → logprob: -10.024795532226562
    7. 'aires' → logprob: -10.274795532226562
    8. '```' → logprob: -10.524795532226562
    9. '(a' → logprob: -10.649795532226562
    10. 'air' → logprob: -10.649795532226562

Token 1131: ' des' (ID: 731)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.013835072517395
    2. '(a' → logprob: -1.138835072517395
    3. '(ans' → logprob: -2.3888349533081055
    4. '((' → logprob: -3.0138349533081055
    5. ' (' → logprob: -3.1388349533081055
    6. '   ' → logprob: -3.1388349533081055
    7. ' return' → logprob: -3.2638349533081055
    8. '(return' → logprob: -3.6388349533081055
    9. '(' → logprob: -3.8888349533081055
    10. '(
' → logprob: -6.3888349533081055

Token 1132: ' contributions' (ID: 29298)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07909137010574341
    2. '(ans' → logprob: -2.7040913105010986
    3. '(a' → logprob: -5.329091548919678
    4. 'a' → logprob: -5.829091548919678
    5. '[a' → logprob: -6.954091548919678
    6. ' ans' → logprob: -9.70409107208252
    7. '((' → logprob: -9.82909107208252
    8. 'L' → logprob: -10.20409107208252
    9. '(L' → logprob: -10.32909107208252
    10. '(d' → logprob: -10.45409107208252

Token 1133: ' (' (ID: 350)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4844581186771393
    2. ' return' → logprob: -2.1094582080841064
    3. '(' → logprob: -2.3594582080841064
    4. '(ans' → logprob: -2.6094582080841064
    5. '   ' → logprob: -2.9844582080841064
    6. '(return' → logprob: -3.6094582080841064
    7. ' (' → logprob: -5.734457969665527
    8. '%' → logprob: -5.984457969665527
    9. '(
' → logprob: -5.984457969665527
    10. '((' → logprob: -6.484457969665527

Token 1134: 'po' (ID: 2519)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.014758738689124584
    2. '(a' → logprob: -4.889758586883545
    3. ' (' → logprob: -5.764758586883545
    4. 'ans' → logprob: -6.139758586883545
    5. 'return' → logprob: -6.889758586883545
    6. 'a' → logprob: -8.139759063720703
    7. '((' → logprob: -8.639759063720703
    8. '(return' → logprob: -8.889759063720703
    9. '(' → logprob: -9.764759063720703
    10. ' ans' → logprob: -10.389759063720703

Token 1135: 'ids' (ID: 3375)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.022138845175504684
    2. 't' → logprob: -5.522139072418213
    3. 'w' → logprob: -6.022139072418213
    4. 'l' → logprob: -6.147139072418213
    5. 'ur' → logprob: -6.147139072418213
    6. '(a' → logprob: -6.522139072418213
    7. '(' → logprob: -6.897139072418213
    8. 'wer' → logprob: -6.897139072418213
    9. '+' → logprob: -7.022139072418213
    10. '#' → logprob: -7.147139072418213

Token 1136: ' a' (ID: 261)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7751252055168152
    2. '(a' → logprob: -1.90012526512146
    3. ' (' → logprob: -2.15012526512146
    4. ')' → logprob: -2.40012526512146
    5. '   ' → logprob: -2.77512526512146
    6. '=' → logprob: -3.65012526512146
    7. ' =' → logprob: -3.77512526512146
    8. 'a' → logprob: -4.025125026702881
    9. '(
' → logprob: -4.400125026702881
    10. ' *' → logprob: -5.150125026702881

Token 1137: ' et' (ID: 859)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7685306668281555
    2. ',' → logprob: -0.8935306668281555
    3. ' ,' → logprob: -3.1435306072235107
    4. ' *' → logprob: -3.3935306072235107
    5. '+' → logprob: -3.6435306072235107
    6. ')' → logprob: -4.51853084564209
    7. ' +' → logprob: -5.26853084564209
    8. '*a' → logprob: -5.64353084564209
    9. ' ' → logprob: -6.89353084564209
    10. '[' → logprob: -7.14353084564209

Token 1138: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132803440093994
    2. ' b' → logprob: -1.3132803440093994
    3. ',' → logprob: -12.31328010559082
    4. ')' → logprob: -12.43828010559082
    5. ' l' → logprob: -12.81328010559082
    6. 'l' → logprob: -13.06328010559082
    7. ' ' → logprob: -13.18828010559082
    8. ')b' → logprob: -14.06328010559082
    9. '```' → logprob: -14.18828010559082
    10. '   ' → logprob: -14.56328010559082

Token 1139: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14929957687854767
    2. ',' → logprob: -3.3992996215820312
    3. '*' → logprob: -3.8992996215820312
    4. ' *' → logprob: -4.399299621582031
    5. '[a' → logprob: -4.399299621582031
    6. '[' → logprob: -4.524299621582031
    7. '+' → logprob: -4.774299621582031
    8. ' +' → logprob: -4.899299621582031
    9. ' )' → logprob: -5.024299621582031
    10. '   ' → logprob: -5.024299621582031

Token 1140: ' comme' (ID: 7971)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1998780965805054
    2. ' (' → logprob: -1.1998780965805054
    3. 'a' → logprob: -1.4498780965805054
    4. '   ' → logprob: -3.574878215789795
    5. ' ans' → logprob: -3.574878215789795
    6. 'return' → logprob: -3.574878215789795
    7. ' return' → logprob: -3.824878215789795
    8. '(a' → logprob: -4.199878215789795
    9. '(' → logprob: -4.324878215789795
    10. ')' → logprob: -4.949878215789795

Token 1141: ' retour' (ID: 30714)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.3227599859237671
    2. '(a' → logprob: -1.322759985923767
    3. 'return' → logprob: -5.197760105133057
    4. ' (' → logprob: -6.072760105133057
    5. '(return' → logprob: -7.697760105133057
    6. ' return' → logprob: -7.697760105133057
    7. '(' → logprob: -8.572759628295898
    8. '   ' → logprob: -8.697759628295898
    9. 'a' → logprob: -9.572759628295898
    10. '(answer' → logprob: -9.947759628295898

Token 1142: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0473663806915283
    2. ' a' → logprob: -1.1723663806915283
    3. ' return' → logprob: -1.5473663806915283
    4. 'return' → logprob: -2.9223663806915283
    5. 'a' → logprob: -3.5473663806915283
    6. '<|end|>' → logprob: -3.9223663806915283
    7. ' 
' → logprob: -5.547366142272949
    8. '    
' → logprob: -5.547366142272949
    9. '
' → logprob: -5.547366142272949
    10. '(a' → logprob: -5.797366142272949

Token 1143: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.24148344993591309
    2. 'ans' → logprob: -2.116483449935913
    3. 'a' → logprob: -3.116483449935913
    4. ' ans' → logprob: -3.616483449935913
    5. '(a' → logprob: -4.366483688354492
    6. 'return' → logprob: -5.491483688354492
    7. ' (' → logprob: -5.491483688354492
    8. ' a' → logprob: -6.741483688354492
    9. ' return' → logprob: -7.991483688354492
    10. '((' → logprob: -8.991483688354492

Token 1144: ' fonction' (ID: 17610)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008801879361271858
    2. ' return' → logprob: -5.5088019371032715
    3. 'result' → logprob: -5.6338019371032715
    4. '   ' → logprob: -7.1338019371032715
    5. 'value' → logprob: -9.383801460266113
    6. 'a' → logprob: -10.008801460266113
    7. 'def' → logprob: -10.258801460266113
    8. 'function' → logprob: -10.383801460266113
    9. 'part' → logprob: -11.133801460266113
    10. '    
' → logprob: -11.133801460266113

Token 1145: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14526084065437317
    2. ' return' → logprob: -2.645260810852051
    3. 'return' → logprob: -2.895260810852051
    4. ':return' → logprob: -5.520260810852051
    5. '
' → logprob: -6.145260810852051
    6. '	return' → logprob: -7.145260810852051
    7. '<|end|>' → logprob: -7.770260810852051
    8. '    
' → logprob: -8.02026081085205
    9. '(return' → logprob: -8.27026081085205
    10. ':
' → logprob: -8.27026081085205

Token 1146: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.29097655415534973
    2. ' return' → logprob: -2.1659765243530273
    3. '   ' → logprob: -2.7909765243530273
    4. '<|end|>' → logprob: -3.0409765243530273
    5. '{return' → logprob: -4.540976524353027
    6. ':return' → logprob: -4.790976524353027
    7. '(return' → logprob: -5.415976524353027
    8. '	return' → logprob: -6.665976524353027
    9. '    
' → logprob: -6.915976524353027
    10. '```' → logprob: -7.290976524353027

Token 1147: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12765979766845703
    2. '   ' → logprob: -2.877659797668457
    3. ' return' → logprob: -2.877659797668457
    4. '{return' → logprob: -6.252659797668457
    5. ':return' → logprob: -6.252659797668457
    6. '(return' → logprob: -6.502659797668457
    7. '<|end|>' → logprob: -6.752659797668457
    8. '```' → logprob: -8.377659797668457
    9. '	return' → logprob: -8.377659797668457
    10. 'a' → logprob: -9.502659797668457

Token 1148: ' ans' (ID: 3345)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00017958412354346365
    2. '(b' → logprob: -9.375179290771484
    3. '(ans' → logprob: -10.125179290771484
    4. ' (' → logprob: -10.750179290771484
    5. '((' → logprob: -10.750179290771484
    6. '(' → logprob: -11.875179290771484
    7. 'a' → logprob: -13.250179290771484
    8. '(
' → logprob: -13.625179290771484
    9. '(abs' → logprob: -14.500179290771484
    10. '(A' → logprob: -14.625179290771484

Token 1149: 'line' (ID: 1137)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.0050122095271945
    2. 'line' → logprob: -5.380012035369873
    3. 'a' → logprob: -8.380012512207031
    4. ' const' → logprob: -9.880012512207031
    5. 'b' → logprob: -10.505012512207031
    6. 'c' → logprob: -10.755012512207031
    7. '
' → logprob: -11.505012512207031
    8. 'cost' → logprob: -12.130012512207031
    9. 'cont' → logprob: -12.255012512207031
    10. '   ' → logprob: -12.505012512207031

Token 1150: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5784932374954224
    2. '*' → logprob: -1.2034932374954224
    3. ' +' → logprob: -2.328493118286133
    4. '+' → logprob: -3.328493118286133
    5. '*a' → logprob: -5.328493118286133
    6. '*b' → logprob: -8.453493118286133
    7. ',' → logprob: -8.453493118286133
    8. ' ' → logprob: -9.078493118286133
    9. '+a' → logprob: -9.453493118286133
    10. '*(' → logprob: -9.578493118286133

Token 1151: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0013489264529198408
    2. ' a' → logprob: -6.626348972320557
    3. 'b' → logprob: -10.751348495483398
    4. '	a' → logprob: -14.501348495483398
    5. '(a' → logprob: -15.001348495483398
    6. 'A' → logprob: -15.376348495483398
    7. ' b' → logprob: -16.1263484954834
    8. '<|end|>' → logprob: -16.2513484954834
    9. '*a' → logprob: -16.5013484954834
    10. ')a' → logprob: -16.7513484954834

Token 1152: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740920662879944
    2. ' +' → logprob: -0.9740920662879944
    3. '+b' → logprob: -11.599092483520508
    4. '<|end|>' → logprob: -12.599092483520508
    5. ' +
' → logprob: -14.224092483520508
    6. ' ' → logprob: -14.974092483520508
    7. '+a' → logprob: -15.224092483520508
    8. '+B' → logprob: -15.349092483520508
    9. '%' → logprob: -15.474092483520508
    10. '+
' → logprob: -15.474092483520508

Token 1153: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.17263734340667725
    2. ' ans' → logprob: -1.9226373434066772
    3. '(ans' → logprob: -5.047637462615967
    4. 'b' → logprob: -5.172637462615967
    5. 'a' → logprob: -9.172636985778809
    6. ' b' → logprob: -9.297636985778809
    7. '	ans' → logprob: -11.047636985778809
    8. ' (' → logprob: -11.172636985778809
    9. ' a' → logprob: -12.672636985778809
    10. '_ans' → logprob: -12.672636985778809

Token 1154: 'const' (ID: 1671)
  Prédit: 'const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: 0.0
    2. ' const' → logprob: -17.75
    3. '.const' → logprob: -18.25
    4. 'cost' → logprob: -18.375
    5. '```' → logprob: -18.75
    6. '_const' → logprob: -19.25
    7. 'a' → logprob: -19.625
    8. 'b' → logprob: -19.75
    9. '   ' → logprob: -20.0
    10. '<const' → logprob: -20.25

Token 1155: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22920122742652893
    2. '%' → logprob: -1.6042011976242065
    3. '<|end|>' → logprob: -6.104201316833496
    4. ')' → logprob: -6.604201316833496
    5. ')%' → logprob: -9.479201316833496
    6. '%A' → logprob: -10.479201316833496
    7. '%B' → logprob: -10.729201316833496
    8. '<|end|>' → logprob: -11.104201316833496
    9. '%n' → logprob: -11.854201316833496
    10. ' %#' → logprob: -11.854201316833496

Token 1156: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1637164789135568e-05
    2. ' b' → logprob: -11.375011444091797
    3. 'B' → logprob: -16.625011444091797
    4. '	b' → logprob: -18.875011444091797
    5. '   ' → logprob: -19.375011444091797
    6. ')b' → logprob: -20.375011444091797
    7. '<|end|>' → logprob: -20.500011444091797
    8. '*b' → logprob: -20.500011444091797
    9. '(b' → logprob: -20.750011444091797
    10. ' ' → logprob: -21.000011444091797

Token 1157: '

' (ID: 279)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.05510241165757179
    2. '%' → logprob: -2.9301023483276367
    3. '<|end|>' → logprob: -8.680102348327637
    4. '%A' → logprob: -11.430102348327637
    5. ')' → logprob: -11.555102348327637
    6. ' ' → logprob: -11.680102348327637
    7. '%n' → logprob: -12.180102348327637
    8. '%B' → logprob: -12.430102348327637
    9. '<|end|>' → logprob: -13.055102348327637
    10. '
' → logprob: -13.180102348327637

Token 1158: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1159: ' Dé' (ID: 27247)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44526687264442444
    2. '<|end|>' → logprob: -1.195266842842102
    3. ' (' → logprob: -3.8202669620513916
    4. '(L' → logprob: -4.1952667236328125
    5. '%' → logprob: -5.9452667236328125
    6. '()' → logprob: -6.0702667236328125
    7. 'L' → logprob: -6.0702667236328125
    8. ' ' → logprob: -6.6952667236328125
    9. '(
' → logprob: -6.6952667236328125
    10. ' L' → logprob: -6.6952667236328125

Token 1160: 'termination' (ID: 173292)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.3080716346157715e-05
    2. 'def' → logprob: -11.375022888183594
    3. '#' → logprob: -12.375022888183594
    4. 'ff' → logprob: -13.125022888183594
    5. 'fi' → logprob: -14.125022888183594
    6. '```' → logprob: -14.125022888183594
    7. 'ƒ' → logprob: -14.125022888183594
    8. 'ф' → logprob: -14.875022888183594
    9. '
' → logprob: -15.000022888183594
    10. '_' → logprob: -15.125022888183594

Token 1161: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10987173765897751
    2. '(L' → logprob: -3.9848716259002686
    3. '(a' → logprob: -4.484871864318848
    4. '_' → logprob: -4.484871864318848
    5. '<|end|>' → logprob: -4.484871864318848
    6. 'a' → logprob: -4.859871864318848
    7. ' (' → logprob: -5.109871864318848
    8. '_result' → logprob: -5.734871864318848
    9. '(n' → logprob: -5.859871864318848
    10. 'result' → logprob: -5.859871864318848

Token 1162: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06953207403421402
    2. 'part' → logprob: -3.9445321559906006
    3. 'answer' → logprob: -4.0695319175720215
    4. 'res' → logprob: -4.8195319175720215
    5. 'ans' → logprob: -4.8195319175720215
    6. 'L' → logprob: -5.3195319175720215
    7. '(L' → logprob: -6.0695319175720215
    8. '0' → logprob: -6.9445319175720215
    9. 'pow' → logprob: -7.0695319175720215
    10. '(ans' → logprob: -7.1945319175720215

Token 1163: ' longueur' (ID: 104613)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02057996205985546
    2. ' result' → logprob: -4.520579814910889
    3. 'res' → logprob: -5.645579814910889
    4. 'print' → logprob: -6.020579814910889
    5. 'answer' → logprob: -6.770579814910889
    6. 'rés' → logprob: -7.145579814910889
    7. 'r' → logprob: -8.020580291748047
    8. '#' → logprob: -8.270580291748047
    9. 'part' → logprob: -8.770580291748047
    10. 'value' → logprob: -9.020580291748047

Token 1164: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6695570945739746
    2. 'L' → logprob: -1.7945570945739746
    3. 'l' → logprob: -2.0445570945739746
    4. 'def' → logprob: -2.6695570945739746
    5. 'de' → logprob: -3.5445570945739746
    6. 'n' → logprob: -4.169557094573975
    7. 'du' → logprob: -4.294557094573975
    8. '_l' → logprob: -4.419557094573975
    9. ' =' → logprob: -4.669557094573975
    10. 'max' → logprob: -5.169557094573975

Token 1165: 'en' (ID: 262)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.43790295720100403
    2. 'l' → logprob: -1.3129029273986816
    3. 'len' → logprob: -2.5629029273986816
    4. 'str' → logprob: -5.562902927398682
    5. ')' → logprob: -6.437902927398682
    6. ' L' → logprob: -7.437902927398682
    7. '(len' → logprob: -7.937902927398682
    8. '10' → logprob: -8.06290340423584
    9. 'max' → logprob: -8.18790340423584
    10. ' len' → logprob: -8.43790340423584

Token 1166: ' nombre' (ID: 9733)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5306556224822998
    2. 'L' → logprob: -1.2806556224822998
    3. 'str' → logprob: -2.6556556224823
    4. 'digits' → logprob: -3.4056556224823
    5. 'len' → logprob: -3.7806556224823
    6. ' L' → logprob: -6.405655860900879
    7. 'int' → logprob: -6.905655860900879
    8. ' l' → logprob: -7.030655860900879
    9. '10' → logprob: -7.280655860900879
    10. 'chaine' → logprob: -7.655655860900879

Token 1167: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4471185505390167
    2. 'de' → logprob: -1.8221185207366943
    3. '=' → logprob: -2.3221185207366943
    4. ')' → logprob: -3.8221185207366943
    5. 'L' → logprob: -3.9471185207366943
    6. 'l' → logprob: -4.072118759155273
    7. '#' → logprob: -4.822118759155273
    8. '_l' → logprob: -5.197118759155273
    9. ' =' → logprob: -5.197118759155273
    10. ' d' → logprob: -5.572118759155273

Token 1168: ' chiffres' (ID: 105565)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.31748461723327637
    2. 'digits' → logprob: -1.4424846172332764
    3. 'L' → logprob: -3.8174846172332764
    4. ' digits' → logprob: -5.4424848556518555
    5. ' str' → logprob: -5.8174848556518555
    6. ' L' → logprob: -6.5674848556518555
    7. 's' → logprob: -6.8174848556518555
    8. 'd' → logprob: -7.1924848556518555
    9. ')' → logprob: -7.3174848556518555
    10. '```' → logprob: -7.4424848556518555

Token 1169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.601668119430542
    2. '(' → logprob: -1.851668119430542
    3. '=' → logprob: -2.226668119430542
    4. 'd' → logprob: -3.476668119430542
    5. ' =' → logprob: -3.601668119430542
    6. '(
' → logprob: -3.851668119430542
    7. 'de' → logprob: -3.851668119430542
    8. 's' → logprob: -4.351668357849121
    9. '(l' → logprob: -4.726668357849121
    10. 'l' → logprob: -4.976668357849121

Token 1170: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7305707931518555
    2. 'l' → logprob: -1.4805707931518555
    3. 'L' → logprob: -1.8555707931518555
    4. '=' → logprob: -2.1055707931518555
    5. 'len' → logprob: -5.7305707931518555
    6. 'n' → logprob: -5.9805707931518555
    7. 'length' → logprob: -6.4805707931518555
    8. ' l' → logprob: -6.7305707931518555
    9. '=
' → logprob: -7.1055707931518555
    10. ' L' → logprob: -7.3555707931518555

Token 1171: ' nombre' (ID: 9733)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.34905847907066345
    2. 'L' → logprob: -1.2240585088729858
    3. 'part' → logprob: -8.224058151245117
    4. '(str' → logprob: -9.224058151245117
    5. 'A' → logprob: -9.974058151245117
    6. ' str' → logprob: -10.099058151245117
    7. 'M' → logprob: -10.349058151245117
    8. 'input' → logprob: -10.974058151245117
    9. 'len' → logprob: -11.099058151245117
    10. '(L' → logprob: -11.349058151245117

Token 1172: ' de' (ID: 334)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07752776145935059
    2. 'N' → logprob: -3.5775277614593506
    3. 'str' → logprob: -4.20252799987793
    4. 'A' → logprob: -5.20252799987793
    5. 'n' → logprob: -5.32752799987793
    6. 'part' → logprob: -5.45252799987793
    7. 'a' → logprob: -5.82752799987793
    8. 'def' → logprob: -5.82752799987793
    9. 'l' → logprob: -6.45252799987793
    10. 'len' → logprob: -7.07752799987793

Token 1173: ' départ' (ID: 32693)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10249091684818268
    2. 'digits' → logprob: -2.7274909019470215
    3. 'part' → logprob: -3.9774909019470215
    4. 'ch' → logprob: -5.7274909019470215
    5. ' L' → logprob: -5.8524909019470215
    6. 'l' → logprob: -6.4774909019470215
    7. 'str' → logprob: -7.1024909019470215
    8. '10' → logprob: -7.4774909019470215
    9. 'digit' → logprob: -7.6024909019470215
    10. '#' → logprob: -7.9774909019470215

Token 1174: ' A' (ID: 355)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.49863094091415405
    2. ' =' → logprob: -1.1236310005187988
    3. 'l' → logprob: -3.498631000518799
    4. '=' → logprob: -3.498631000518799
    5. 'length' → logprob: -5.998631000518799
    6. 'def' → logprob: -6.373631000518799
    7. 'len' → logprob: -6.873631000518799
    8. 'import' → logprob: -7.748631000518799
    9. 'n' → logprob: -8.12363052368164
    10. 'a' → logprob: -8.37363052368164

Token 1175: '.
' (ID: 558)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10662158578634262
    2. 'L' → logprob: -3.231621503829956
    3. 'len' → logprob: -3.356621503829956
    4. 'length' → logprob: -3.731621503829956
    5. 'a' → logprob: -7.356621742248535
    6. 'la' → logprob: -7.606621742248535
    7. 'def' → logprob: -8.106621742248535
    8. 'A' → logprob: -8.356621742248535
    9. 'import' → logprob: -8.606621742248535
    10. ' =' → logprob: -9.106621742248535

Token 1176: 'start' (ID: 5236)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07905293256044388
    2. 'L' → logprob: -3.5790529251098633
    3. 'len' → logprob: -3.8290529251098633
    4. 'length' → logprob: -3.9540529251098633
    5. 'import' → logprob: -6.079052925109863
    6. 'la' → logprob: -6.329052925109863
    7. 'a' → logprob: -7.454052925109863
    8. 'def' → logprob: -7.829052925109863
    9. ' l' → logprob: -7.954052925109863
    10. 'long' → logprob: -8.204052925109863

Token 1177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1309263706207275
    2. '_len' → logprob: -1.2559263706207275
    3. '_length' → logprob: -1.2559263706207275
    4. 'len' → logprob: -3.1309263706207275
    5. '=' → logprob: -3.7559263706207275
    6. 'length' → logprob: -3.8809263706207275
    7. 'L' → logprob: -4.630926132202148
    8. 'A' → logprob: -6.005926132202148
    9. 'g' → logprob: -6.130926132202148
    10. '_str' → logprob: -6.505926132202148

Token 1178: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00021676832693628967
    2. ' len' → logprob: -8.500216484069824
    3. 'A' → logprob: -12.000216484069824
    4. 'L' → logprob: -12.125216484069824
    5. '1' → logprob: -14.500216484069824
    6. '(len' → logprob: -15.125216484069824
    7. '10' → logprob: -15.375216484069824
    8. '0' → logprob: -15.375216484069824
    9. ' ' → logprob: -16.00021743774414
    10. '  ' → logprob: -16.50021743774414

Token 1179: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -7.672236824873835e-05
    2. 'str' → logprob: -9.500076293945312
    3. '(' → logprob: -13.250076293945312
    4. ' str' → logprob: -18.000076293945312
    5. '=str' → logprob: -19.500076293945312
    6. '(A' → logprob: -20.125076293945312
    7. '	str' → logprob: -20.875076293945312
    8. '[str' → logprob: -20.875076293945312
    9. '(s' → logprob: -21.250076293945312
    10. ' (' → logprob: -21.250076293945312

Token 1180: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0002158146962756291
    2. 'A' → logprob: -8.500215530395508
    3. '(' → logprob: -11.375215530395508
    4. '(
' → logprob: -14.500215530395508
    5. '(a' → logprob: -15.750215530395508
    6. '(abs' → logprob: -16.500215530395508
    7. ' A' → logprob: -17.500215530395508
    8. ' (' → logprob: -17.625215530395508
    9. '((' → logprob: -18.750215530395508
    10. '(L' → logprob: -18.875215530395508

Token 1181: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00020270596724003553
    2. '))
' → logprob: -9.375203132629395
    3. '()))' → logprob: -9.875203132629395
    4. ' ))' → logprob: -10.375203132629395
    5. ')))' → logprob: -11.250203132629395
    6. ')' → logprob: -11.625203132629395
    7. '))+' → logprob: -12.125203132629395
    8. '))-' → logprob: -12.625203132629395
    9. '   ' → logprob: -13.750203132629395
    10. '__))' → logprob: -14.750203132629395

Token 1182: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1183: ' Dé' (ID: 27247)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.698438048362732
    2. 'n' → logprob: -1.823438048362732
    3. 'result' → logprob: -2.0734381675720215
    4. 'if' → logprob: -2.6984381675720215
    5. 'print' → logprob: -2.6984381675720215
    6. 'end' → logprob: -2.9484381675720215
    7. 'res' → logprob: -3.5734381675720215
    8. 'l' → logprob: -3.5734381675720215
    9. 'length' → logprob: -3.5734381675720215
    10. 'start' → logprob: -3.6984381675720215

Token 1184: 'termination' (ID: 173292)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.5776603817939758
    2. 'part' → logprob: -1.702660322189331
    3. 'fin' → logprob: -2.827660322189331
    4. 'c' → logprob: -3.202660322189331
    5. 'f' → logprob: -3.202660322189331
    6. 'but' → logprob: -3.327660322189331
    7. 'l' → logprob: -3.452660322189331
    8. 'termination' → logprob: -4.07766056060791
    9. 'b' → logprob: -5.20266056060791
    10. '#' → logprob: -5.32766056060791

Token 1185: ' de' (ID: 334)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8680329322814941
    2. '(B' → logprob: -1.6180329322814941
    3. 'of' → logprob: -2.368032932281494
    4. 'str' → logprob: -2.368032932281494
    5. '(str' → logprob: -2.993032932281494
    6. 'max' → logprob: -3.993032932281494
    7. 'l' → logprob: -4.243032932281494
    8. 'start' → logprob: -4.243032932281494
    9. 'len' → logprob: -4.368032932281494
    10. 'de' → logprob: -4.493032932281494

Token 1186: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.041426461189985275
    2. 'l' → logprob: -3.541426420211792
    3. 'start' → logprob: -4.791426658630371
    4. 'str' → logprob: -7.041426658630371
    5. ' len' → logprob: -7.541426658630371
    6. 'L' → logprob: -7.916426658630371
    7. 'max' → logprob: -8.041426658630371
    8. '(len' → logprob: -8.166426658630371
    9. 'def' → logprob: -8.541426658630371
    10. 'end' → logprob: -8.666426658630371

Token 1187: ' longueur' (ID: 104613)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4929220974445343
    2. 'start' → logprob: -1.242922067642212
    3. 'B' → logprob: -3.367922067642212
    4. 'l' → logprob: -4.117922306060791
    5. 'L' → logprob: -4.367922306060791
    6. 'end' → logprob: -4.742922306060791
    7. 'length' → logprob: -4.742922306060791
    8. '#' → logprob: -4.992922306060791
    9. 'str' → logprob: -5.617922306060791
    10. 'def' → logprob: -6.242922306060791

Token 1188: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6684088110923767
    2. '=' → logprob: -0.9184088110923767
    3. 'B' → logprob: -2.6684088706970215
    4. 'str' → logprob: -4.6684088706970215
    5. '=str' → logprob: -6.0434088706970215
    6. '(B' → logprob: -6.2934088706970215
    7. '(str' → logprob: -6.7934088706970215
    8. 'of' → logprob: -6.9184088706970215
    9. 'start' → logprob: -7.2934088706970215
    10. '(' → logprob: -7.5434088706970215

Token 1189: 'en' (ID: 262)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.000836312014143914
    2. 'start' → logprob: -7.250836372375488
    3. '(str' → logprob: -9.625836372375488
    4. 'B' → logprob: -10.625836372375488
    5. ' str' → logprob: -10.875836372375488
    6. 'len' → logprob: -11.625836372375488
    7. '```' → logprob: -13.250836372375488
    8. 'b' → logprob: -13.625836372375488
    9. 's' → logprob: -14.125836372375488
    10. '   ' → logprob: -14.125836372375488

Token 1190: ' nombre' (ID: 9733)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00016706773021724075
    2. 'B' → logprob: -9.250166893005371
    3. 'start' → logprob: -11.250166893005371
    4. ' str' → logprob: -11.250166893005371
    5. 'len' → logprob: -11.500166893005371
    6. 'range' → logprob: -11.750166893005371
    7. '(str' → logprob: -12.000166893005371
    8. 'digits' → logprob: -12.250166893005371
    9. '
' → logprob: -12.750166893005371
    10. 'b' → logprob: -12.875166893005371

Token 1191: ' de' (ID: 334)
  Prédit: '=str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=str' → logprob: -0.13776977360248566
    2. 'str' → logprob: -2.3877696990966797
    3. '(str' → logprob: -4.26276969909668
    4. '=' → logprob: -4.26276969909668
    5. 'of' → logprob: -5.38776969909668
    6. 'def' → logprob: -6.63776969909668
    7. 'de' → logprob: -6.88776969909668
    8. ' =' → logprob: -7.13776969909668
    9. '#' → logprob: -8.38776969909668
    10. 'd' → logprob: -8.88776969909668

Token 1192: ' chiffres' (ID: 105565)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.11424434185028076
    2. 'B' → logprob: -2.2392444610595703
    3. 'start' → logprob: -7.11424446105957
    4. '(str' → logprob: -8.61424446105957
    5. 'string' → logprob: -8.73924446105957
    6. '```' → logprob: -9.23924446105957
    7. '(B' → logprob: -10.36424446105957
    8. 'A' → logprob: -10.48924446105957
    9. '
' → logprob: -10.61424446105957
    10. ' B' → logprob: -10.73924446105957

Token 1193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9100366830825806
    2. 'de' → logprob: -1.1600366830825806
    3. '(str' → logprob: -1.7850366830825806
    4. 'str' → logprob: -3.410036563873291
    5. '=str' → logprob: -4.410036563873291
    6. '(' → logprob: -4.410036563873291
    7. 'def' → logprob: -4.660036563873291
    8. ' de' → logprob: -4.660036563873291
    9. 's' → logprob: -4.660036563873291
    10. ' (' → logprob: -5.285036563873291

Token 1194: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0975722074508667
    2. 'str' → logprob: -1.2225722074508667
    3. ' =' → logprob: -2.3475723266601562
    4. 'B' → logprob: -2.3475723266601562
    5. 'de' → logprob: -2.4725723266601562
    6. 'of' → logprob: -3.3475723266601562
    7. '(str' → logprob: -3.8475723266601562
    8. 'start' → logprob: -4.222572326660156
    9. '=str' → logprob: -4.847572326660156
    10. '#' → logprob: -5.722572326660156

Token 1195: ' dernier' (ID: 27982)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4792190194129944
    2. 'L' → logprob: -1.2292189598083496
    3. 'M' → logprob: -3.3542189598083496
    4. 'start' → logprob: -3.6042189598083496
    5. 'str' → logprob: -3.7292189598083496
    6. 'input' → logprob: -7.47921895980835
    7. 'n' → logprob: -8.229219436645508
    8. 'a' → logprob: -8.354219436645508
    9. 'A' → logprob: -8.479219436645508
    10. '#' → logprob: -8.979219436645508

Token 1196: ' nombre' (ID: 9733)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.24682727456092834
    2. '=' → logprob: -2.1218273639678955
    3. ' =' → logprob: -3.7468273639678955
    4. 'number' → logprob: -3.8718273639678955
    5. 'N' → logprob: -4.246827125549316
    6. 'num' → logprob: -5.371827125549316
    7. 'n' → logprob: -5.371827125549316
    8. 'str' → logprob: -5.371827125549316
    9. 'line' → logprob: -5.496827125549316
    10. 'M' → logprob: -5.746827125549316

Token 1197: ' génér' (ID: 18939)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2618199586868286
    2. ' =' → logprob: -1.5118199586868286
    3. 'B' → logprob: -6.011819839477539
    4. 'str' → logprob: -6.386819839477539
    5. 's' → logprob: -6.511819839477539
    6. '=str' → logprob: -6.886819839477539
    7. 'C' → logprob: -7.136819839477539
    8. 'start' → logprob: -7.636819839477539
    9. 'N' → logprob: -8.136819839477539
    10. 'M' → logprob: -8.261819839477539

Token 1198: 'é' (ID: 377)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.09515430778265
    2. 'é' → logprob: -3.345154285430908
    3. 'al' → logprob: -4.220154285430908
    4. 'er' → logprob: -4.845154285430908
    5. 'lé' → logprob: -5.345154285430908
    6. 'r' → logprob: -5.470154285430908
    7. 'ément' → logprob: -5.595154285430908
    8. 'ement' → logprob: -5.720154285430908
    9. 'A' → logprob: -5.970154285430908
    10. 'né' → logprob: -6.470154285430908

Token 1199: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25445500016212463
    2. ' =' → logprob: -1.5044549703598022
    3. 'start' → logprob: -6.379455089569092
    4. '=start' → logprob: -8.629454612731934
    5. 's' → logprob: -8.754454612731934
    6. '+' → logprob: -9.254454612731934
    7. 'n' → logprob: -9.504454612731934
    8. 'B' → logprob: -9.754454612731934
    9. '=
' → logprob: -9.879454612731934
    10. '+=' → logprob: -10.129454612731934

Token 1200: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1381087452173233
    2. 'str' → logprob: -2.138108730316162
    3. 'M' → logprob: -4.888108730316162
    4. 'L' → logprob: -7.013108730316162
    5. '(str' → logprob: -7.138108730316162
    6. ')' → logprob: -7.638108730316162
    7. ' B' → logprob: -8.26310920715332
    8. 'A' → logprob: -8.38810920715332
    9. '(B' → logprob: -8.51310920715332
    10. ' str' → logprob: -8.63810920715332

Token 1201: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029883775860071182
    2. '+' → logprob: -3.904883861541748
    3. ')+' → logprob: -5.529883861541748
    4. ')
' → logprob: -5.654883861541748
    5. ' +' → logprob: -7.279883861541748
    6. '))' → logprob: -8.27988338470459
    7. '#' → logprob: -8.40488338470459
    8. ' )' → logprob: -8.52988338470459
    9. ')#' → logprob: -9.15488338470459
    10. ').' → logprob: -9.90488338470459

Token 1202: 'L' (ID: 43)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.2641927897930145
    2. 'L' → logprob: -2.014192819595337
    3. '(' → logprob: -3.764192819595337
    4. '10' → logprob: -4.014192581176758
    5. ' M' → logprob: -4.389192581176758
    6. '(L' → logprob: -4.639192581176758
    7. '2' → logprob: -5.014192581176758
    8. ' (' → logprob: -5.389192581176758
    9. 'pow' → logprob: -5.389192581176758
    10. '(M' → logprob: -5.639192581176758

Token 1203: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13789159059524536
    2. '+' → logprob: -2.3878915309906006
    3. ')
' → logprob: -3.5128915309906006
    4. ' +' → logprob: -6.51289176940918
    5. ')**' → logprob: -6.88789176940918
    6. '**' → logprob: -7.38789176940918
    7. '))' → logprob: -7.38789176940918
    8. ')+' → logprob: -7.63789176940918
    9. ' )' → logprob: -7.76289176940918
    10. ')#' → logprob: -7.76289176940918

Token 1204: ' A' (ID: 355)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3990679085254669
    2. 'A' → logprob: -1.5240678787231445
    3. 'B' → logprob: -3.3990678787231445
    4. 'start' → logprob: -3.3990678787231445
    5. ' M' → logprob: -4.0240678787231445
    6. '1' → logprob: -4.8990678787231445
    7. 'L' → logprob: -5.2740678787231445
    8. ' A' → logprob: -5.3990678787231445
    9. ' start' → logprob: -6.0240678787231445
    10. '(' → logprob: -6.2740678787231445

Token 1205: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015802307054400444
    2. '+' → logprob: -5.140802383422852
    3. ' )' → logprob: -5.640802383422852
    4. ')
' → logprob: -5.765802383422852
    5. ')+' → logprob: -6.515802383422852
    6. '))' → logprob: -7.390802383422852
    7. ' +' → logprob: -7.640802383422852
    8. '#' → logprob: -9.140802383422852
    9. '-' → logprob: -9.265802383422852
    10. ').' → logprob: -9.765802383422852

Token 1206: ' B' (ID: 418)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001218451652675867
    2. ' ' → logprob: -7.376218318939209
    3. 'L' → logprob: -8.126218795776367
    4. 'start' → logprob: -9.126218795776367
    5. 'B' → logprob: -9.626218795776367
    6. 'M' → logprob: -9.751218795776367
    7. ')' → logprob: -11.126218795776367
    8. 'len' → logprob: -11.876218795776367
    9. '(' → logprob: -11.876218795776367
    10. '0' → logprob: -12.376218795776367

Token 1207: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42857998609542847
    2. '+' → logprob: -1.4285800457000732
    3. ' +' → logprob: -2.3035800457000732
    4. '*' → logprob: -6.178579807281494
    5. ' )' → logprob: -6.553579807281494
    6. '#' → logprob: -6.553579807281494
    7. 'L' → logprob: -7.553579807281494
    8. '-' → logprob: -7.678579807281494
    9. '))' → logprob: -7.678579807281494
    10. ')#' → logprob: -8.053580284118652

Token 1208: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.12806984782218933
    2. 'last' → logprob: -3.0030698776245117
    3. 'start' → logprob: -3.6280698776245117
    4. '=' → logprob: -3.6280698776245117
    5. ' =' → logprob: -5.003069877624512
    6. 'len' → logprob: -5.378069877624512
    7. '=end' → logprob: -6.628069877624512
    8. 'max' → logprob: -7.253069877624512
    9. 'final' → logprob: -7.378069877624512
    10. 'L' → logprob: -7.628069877624512

Token 1209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931552886962891
    2. ' =' → logprob: -0.6931552886962891
    3. '=len' → logprob: -12.068155288696289
    4. ',' → logprob: -14.568155288696289
    5. ' ' → logprob: -14.693155288696289
    6. 'len' → logprob: -15.693155288696289
    7. '=
' → logprob: -15.693155288696289
    8. '=int' → logprob: -15.818155288696289
    9. ')' → logprob: -15.943155288696289
    10. '＝' → logprob: -16.06815528869629

Token 1210: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00013119110371917486
    2. 'start' → logprob: -9.500131607055664
    3. ' len' → logprob: -9.875131607055664
    4. 'L' → logprob: -12.750131607055664
    5. '(len' → logprob: -14.375131607055664
    6. 'l' → logprob: -14.500131607055664
    7. '=len' → logprob: -16.125131607055664
    8. '   ' → logprob: -16.250131607055664
    9. 'le' → logprob: -16.375131607055664
    10. '	len' → logprob: -16.500131607055664

Token 1211: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00010139751975657418
    2. 'str' → logprob: -9.250101089477539
    3. '(' → logprob: -12.500101089477539
    4. '((' → logprob: -13.875101089477539
    5. '(B' → logprob: -15.750101089477539
    6. '=str' → logprob: -16.25010108947754
    7. '(
' → logprob: -16.50010108947754
    8. ' str' → logprob: -16.75010108947754
    9. '	str' → logprob: -16.75010108947754
    10. '[str' → logprob: -17.37510108947754

Token 1212: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.006934878882020712
    2. '((' → logprob: -6.006934642791748
    3. '(A' → logprob: -6.006934642791748
    4. '(L' → logprob: -6.631934642791748
    5. '(M' → logprob: -8.006935119628906
    6. 'B' → logprob: -8.631935119628906
    7. '(' → logprob: -9.006935119628906
    8. '(b' → logprob: -11.131935119628906
    9. ' (' → logprob: -12.506935119628906
    10. '(
' → logprob: -12.506935119628906

Token 1213: ' *' (ID: 425)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5701489448547363
    2. '*' → logprob: -1.3201489448547363
    3. ' *' → logprob: -1.8201489448547363
    4. ' ))' → logprob: -6.320148944854736
    5. ')))' → logprob: -7.070148944854736
    6. '+' → logprob: -7.195148944854736
    7. '*))' → logprob: -7.320148944854736
    8. ')' → logprob: -7.445148944854736
    9. ' +' → logprob: -8.195148468017578
    10. '))
' → logprob: -9.570148468017578

Token 1214: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00031305922311730683
    2. '(L' → logprob: -9.000312805175781
    3. 'M' → logprob: -9.125312805175781
    4. ' L' → logprob: -10.125312805175781
    5. 'B' → logprob: -11.125312805175781
    6. 'A' → logprob: -11.125312805175781
    7. '(' → logprob: -11.875312805175781
    8. '(M' → logprob: -13.875312805175781
    9. 'l' → logprob: -14.250312805175781
    10. '(B' → logprob: -14.875312805175781

Token 1215: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36188116669654846
    2. ' +' → logprob: -1.236881136894226
    3. ' -' → logprob: -4.986881256103516
    4. '-' → logprob: -5.861881256103516
    5. '))' → logprob: -6.111881256103516
    6. ')' → logprob: -7.611881256103516
    7. '+B' → logprob: -7.611881256103516
    8. '*' → logprob: -8.486881256103516
    9. ')),' → logprob: -9.736881256103516
    10. ')+' → logprob: -10.111881256103516

Token 1216: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0009514793055132031
    2. ' A' → logprob: -7.125951290130615
    3. 'M' → logprob: -9.000951766967773
    4. 'B' → logprob: -11.375951766967773
    5. '(A' → logprob: -12.625951766967773
    6. '(-' → logprob: -13.500951766967773
    7. '(' → logprob: -13.625951766967773
    8. ' ' → logprob: -14.000951766967773
    9. 'a' → logprob: -14.125951766967773
    10. '	A' → logprob: -14.250951766967773

Token 1217: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12699487805366516
    2. '-' → logprob: -2.1269948482513428
    3. '))' → logprob: -10.376995086669922
    4. ')' → logprob: -10.751995086669922
    5. ' ' → logprob: -11.751995086669922
    6. '*' → logprob: -13.751995086669922
    7. ')),' → logprob: -13.751995086669922
    8. '[' → logprob: -14.126995086669922
    9. '<|end|>' → logprob: -15.001995086669922
    10. '+' → logprob: -15.001995086669922

Token 1218: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04580417647957802
    2. ' B' → logprob: -3.420804262161255
    3. '1' → logprob: -4.420804023742676
    4. ' ' → logprob: -10.045804023742676
    5. '   ' → logprob: -11.670804023742676
    6. '	B' → logprob: -12.545804023742676
    7. ')' → logprob: -13.795804023742676
    8. '       ' → logprob: -14.170804023742676
    9. '    ' → logprob: -14.170804023742676
    10. '_B' → logprob: -14.670804023742676

Token 1219: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00023512568441219628
    2. ')' → logprob: -9.500235557556152
    3. '))
' → logprob: -9.875235557556152
    4. ' ))' → logprob: -10.125235557556152
    5. '()))' → logprob: -10.875235557556152
    6. '+' → logprob: -10.875235557556152
    7. ')))' → logprob: -11.250235557556152
    8. '))+' → logprob: -11.250235557556152
    9. '()' → logprob: -14.125235557556152
    10. '))

' → logprob: -14.500235557556152

Token 1220: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.855587363243103
    2. 'result' → logprob: -1.480587363243103
    3. '#' → logprob: -1.980587363243103
    4. 'for' → logprob: -2.4805874824523926
    5. '
' → logprob: -4.230587482452393
    6. 'part' → logprob: -4.355587482452393
    7. 'start' → logprob: -4.480587482452393
    8. 'res' → logprob: -4.605587482452393
    9. 'range' → logprob: -4.980587482452393
    10. 'diff' → logprob: -4.980587482452393

Token 1221: ' Cré' (ID: 109203)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4254407584667206
    2. 'total' → logprob: -2.050440788269043
    3. 'if' → logprob: -2.300440788269043
    4. 'res' → logprob: -3.050440788269043
    5. 'answer' → logprob: -3.925440788269043
    6. 'ans' → logprob: -4.425440788269043
    7. 'def' → logprob: -4.800440788269043
    8. 'length' → logprob: -5.300440788269043
    9. 'r' → logprob: -5.800440788269043
    10. 'diff' → logprob: -6.050440788269043

Token 1222: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0034723745193332434
    2. 'er' → logprob: -6.878472328186035
    3. 'def' → logprob: -7.253472328186035
    4. '#' → logprob: -7.253472328186035
    5. 'lation' → logprob: -8.503472328186035
    6. 'tion' → logprob: -8.628472328186035
    7. 'ration' → logprob: -8.878472328186035
    8. '```' → logprob: -8.878472328186035
    9. 'ption' → logprob: -9.628472328186035
    10. 'a' → logprob: -10.128472328186035

Token 1223: ' d' (ID: 272)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11267340928316116
    2. 'sequence' → logprob: -3.23767352104187
    3. 'res' → logprob: -4.112673282623291
    4. '=' → logprob: -4.987673282623291
    5. 'answer' → logprob: -5.237673282623291
    6. ' =' → logprob: -5.487673282623291
    7. '#' → logprob: -5.612673282623291
    8. '(
' → logprob: -5.612673282623291
    9. 'range' → logprob: -5.612673282623291
    10. 'def' → logprob: -5.987673282623291

Token 1224: ''une' (ID: 13337)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5237044095993042
    2. 'une' → logprob: -1.6487044095993042
    3. 'range' → logprob: -2.1487045288085938
    4. 'a' → logprob: -2.6487045288085938
    5. '(' → logprob: -2.6487045288085938
    6. ' une' → logprob: -3.0237045288085938
    7. ' range' → logprob: -3.2737045288085938
    8. '[]' → logprob: -3.3987045288085938
    9. '=' → logprob: -3.3987045288085938
    10. ' la' → logprob: -3.5237045288085938

Token 1225: ' liste' (ID: 31719)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0072726011276245
    2. 'for' → logprob: -1.1322726011276245
    3. 'def' → logprob: -1.3822726011276245
    4. 'result' → logprob: -3.132272720336914
    5. 'list' → logprob: -4.757272720336914
    6. 'variable' → logprob: -6.257272720336914
    7. '
' → logprob: -6.632272720336914
    8. '#' → logprob: -6.882272720336914
    9. '=' → logprob: -7.382272720336914
    10. 'sequence' → logprob: -7.757272720336914

Token 1226: ' vide' (ID: 21835)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.7807857990264893
    2. 'result' → logprob: -1.7807857990264893
    3. 'res' → logprob: -2.6557857990264893
    4. 'length' → logprob: -3.1557857990264893
    5. 'digit' → logprob: -3.2807857990264893
    6. 'numbers' → logprob: -3.2807857990264893
    7. 'dp' → logprob: -3.5307857990264893
    8. 'results' → logprob: -3.6557857990264893
    9. 'sequence' → logprob: -3.9057857990264893
    10. 'ranges' → logprob: -4.78078556060791

Token 1227: ' pour' (ID: 1930)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8514906764030457
    2. 'res' → logprob: -1.3514907360076904
    3. 'results' → logprob: -2.2264907360076904
    4. 'numbers' → logprob: -3.1014907360076904
    5. 'sequence' → logprob: -3.4764907360076904
    6. 'seq' → logprob: -3.7264907360076904
    7. 'dp' → logprob: -3.9764907360076904
    8. 'ans' → logprob: -4.726490497589111
    9. 'answers' → logprob: -4.726490497589111
    10. 'answer' → logprob: -4.976490497589111

Token 1228: ' stock' (ID: 6546)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.1609762907028198
    2. 'res' → logprob: -1.4109762907028198
    3. 'result' → logprob: -1.6609762907028198
    4. 'length' → logprob: -3.0359764099121094
    5. 'numbers' → logprob: -3.0359764099121094
    6. 'digits' → logprob: -3.2859764099121094
    7. 'ans' → logprob: -4.285976409912109
    8. 'answers' → logprob: -4.285976409912109
    9. 'store' → logprob: -4.785976409912109
    10. 'long' → logprob: -5.285976409912109

Token 1229: 'er' (ID: 259)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3516499102115631
    2. '[]' → logprob: -2.3516499996185303
    3. 'e' → logprob: -2.4766499996185303
    4. '=[]' → logprob: -3.7266499996185303
    5. '#' → logprob: -4.101649761199951
    6. '```' → logprob: -4.351649761199951
    7. '=' → logprob: -4.476649761199951
    8. 'des' → logprob: -4.851649761199951
    9. '_' → logprob: -4.976649761199951
    10. ' des' → logprob: -5.101649761199951

Token 1230: ' les' (ID: 1341)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2063499242067337
    2. 'digits' → logprob: -3.3313498497009277
    3. 'res' → logprob: -3.5813498497009277
    4. 'results' → logprob: -3.9563498497009277
    5. 'result' → logprob: -4.456349849700928
    6. 'parts' → logprob: -4.581349849700928
    7. 'lines' → logprob: -4.706349849700928
    8. 'long' → logprob: -4.831349849700928
    9. 'leng' → logprob: -4.956349849700928
    10. 'numbers' → logprob: -5.206349849700928

Token 1231: ' informations' (ID: 33951)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.13325291872024536
    2. 'res' → logprob: -3.2582528591156006
    3. 'results' → logprob: -3.7582528591156006
    4. 'lens' → logprob: -4.38325309753418
    5. 'leng' → logprob: -4.75825309753418
    6. 'result' → logprob: -4.75825309753418
    7. 'parts' → logprob: -5.13325309753418
    8. 'long' → logprob: -5.38325309753418
    9. 'digits' → logprob: -5.38325309753418
    10. 'answers' → logprob: -6.63325309753418

Token 1232: ' sur' (ID: 1512)
  Prédit: 'infos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'infos' → logprob: -2.148285150527954
    2. 'result' → logprob: -2.273285150527954
    3. 'lines' → logprob: -2.273285150527954
    4. 'results' → logprob: -2.273285150527954
    5. 'res' → logprob: -2.523285150527954
    6. 'interval' → logprob: -2.773285150527954
    7. 'ranges' → logprob: -3.023285150527954
    8. 'info' → logprob: -3.273285150527954
    9. 'numbers' → logprob: -3.273285150527954
    10. 'values' → logprob: -3.398285150527954

Token 1233: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5790870189666748
    2. 'les' → logprob: -1.0790870189666748
    3. '#' → logprob: -3.454087018966675
    4. 'l' → logprob: -3.704087018966675
    5. 'L' → logprob: -3.829087018966675
    6. 'B' → logprob: -5.079087257385254
    7. 'le' → logprob: -5.329087257385254
    8. 'len' → logprob: -5.954087257385254
    9. 'length' → logprob: -6.079087257385254
    10. 'A' → logprob: -6.079087257385254

Token 1234: ' "' (ID: 392)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.0860832929611206
    2. 'long' → logprob: -1.3360832929611206
    3. '#' → logprob: -2.46108341217041
    4. 'blocks' → logprob: -2.83608341217041
    5. 'bl' → logprob: -3.21108341217041
    6. 'digits' → logprob: -3.46108341217041
    7. 'n' → logprob: -3.96108341217041
    8. 'leng' → logprob: -4.08608341217041
    9. 'val' → logprob: -4.21108341217041
    10. 'diff' → logprob: -4.33608341217041

Token 1235: 'part' (ID: 5815)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -1.0969115495681763
    2. 'digits' → logprob: -1.9719115495681763
    3. 'ranges' → logprob: -2.3469114303588867
    4. 'long' → logprob: -2.9719114303588867
    5. 'numbers' → logprob: -3.0969114303588867
    6. 'parts' → logprob: -3.0969114303588867
    7. 'bl' → logprob: -3.0969114303588867
    8. 'segments' → logprob: -3.5969114303588867
    9. 'length' → logprob: -3.7219114303588867
    10. 'n' → logprob: -3.9719114303588867

Token 1236: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.5272456407546997
    2. 's' → logprob: -1.0272456407546997
    3. 'itions' → logprob: -3.15224552154541
    4. 'ie' → logprob: -6.27724552154541
    5. 'sizes' → logprob: -7.15224552154541
    6. 'es' → logprob: -7.27724552154541
    7. 'ition' → logprob: -7.65224552154541
    8. 'ic' → logprob: -7.65224552154541
    9. 'icipants' → logprob: -7.65224552154541
    10. 'ials' → logprob: -7.77724552154541

Token 1237: '"' (ID: 1)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -1.2835458517074585
    2. 'de' → logprob: -1.5335458517074585
    3. '=[]' → logprob: -2.783545970916748
    4. ',' → logprob: -2.783545970916748
    5. '=' → logprob: -2.908545970916748
    6. ' =' → logprob: -3.283545970916748
    7. 'des' → logprob: -3.283545970916748
    8. '#' → logprob: -3.408545970916748
    9. 's' → logprob: -3.908545970916748
    10. '_l' → logprob: -4.158545970916748

Token 1238: ' à' (ID: 1221)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.042857248336076736
    2. 'part' → logprob: -3.2928571701049805
    3. ',' → logprob: -7.2928571701049805
    4. 'pieces' → logprob: -7.4178571701049805
    5. 'segments' → logprob: -7.5428571701049805
    6. '=[]' → logprob: -7.9178571701049805
    7. '=' → logprob: -8.16785717010498
    8. '(parts' → logprob: -8.16785717010498
    9. 'sections' → logprob: -8.29285717010498
    10. 'des' → logprob: -8.41785717010498

Token 1239: ' traiter' (ID: 105852)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -1.2621221542358398
    2. 'concat' → logprob: -1.5121221542358398
    3. 'aj' → logprob: -1.6371221542358398
    4. 'part' → logprob: -1.6371221542358398
    5. 'tr' → logprob: -3.51212215423584
    6. 'rem' → logprob: -4.01212215423584
    7. 'calcul' → logprob: -4.51212215423584
    8. 'append' → logprob: -4.76212215423584
    9. '#' → logprob: -5.01212215423584
    10. 'som' → logprob: -5.26212215423584

Token 1240: '.
' (ID: 558)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.013400087133049965
    2. 'part' → logprob: -4.513400077819824
    3. 'ranges' → logprob: -7.263400077819824
    4. 'segments' → logprob: -7.388400077819824
    5. 'sections' → logprob: -9.138400077819824
    6. 'pieces' → logprob: -9.263400077819824
    7. 'interval' → logprob: -9.388400077819824
    8. 'blocks' → logprob: -9.513400077819824
    9. 'partials' → logprob: -9.763400077819824
    10. 'steps' → logprob: -10.138400077819824

Token 1241: '#' (ID: 2)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.01616961695253849
    2. 'part' → logprob: -4.266169548034668
    3. 'ranges' → logprob: -7.391169548034668
    4. 'segments' → logprob: -7.766169548034668
    5. 'interval' → logprob: -8.891169548034668
    6. 'partition' → logprob: -8.891169548034668
    7. 'pieces' → logprob: -9.641169548034668
    8. 'blocks' → logprob: -9.766169548034668
    9. 'res' → logprob: -10.141169548034668
    10. 'partials' → logprob: -10.141169548034668

Token 1242: ' Chaque' (ID: 94758)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.013902796432375908
    2. 'part' → logprob: -4.38890266418457
    3. 'segments' → logprob: -7.63890266418457
    4. 'ranges' → logprob: -8.01390266418457
    5. 'partition' → logprob: -9.38890266418457
    6. 'interval' → logprob: -9.38890266418457
    7. 'pieces' → logprob: -10.01390266418457
    8. 'partials' → logprob: -10.51390266418457
    9. 'sections' → logprob: -10.51390266418457
    10. 'blocks' → logprob: -10.76390266418457

Token 1243: ' partie' (ID: 22139)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5993435382843018
    2. ' part' → logprob: -0.8493435382843018
    3. '_' → logprob: -5.099343299865723
    4. ' partie' → logprob: -5.224343299865723
    5. '#' → logprob: -6.599343299865723
    6. '_part' → logprob: -6.724343299865723
    7. '[
' → logprob: -6.849343299865723
    8. '(
' → logprob: -7.349343299865723
    9. '[' → logprob: -7.474343299865723
    10. 'p' → logprob: -7.724343299865723

Token 1244: ' correspond' (ID: 11095)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04485361650586128
    2. '=' → logprob: -3.669853687286377
    3. 'append' → logprob: -4.919853687286377
    4. '.' → logprob: -5.669853687286377
    5. ' =' → logprob: -6.169853687286377
    6. '#' → logprob: -6.544853687286377
    7. '=[]' → logprob: -6.669853687286377
    8. '_append' → logprob: -7.294853687286377
    9. '=[]
' → logprob: -8.294853210449219
    10. 's' → logprob: -8.419853210449219

Token 1245: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.21767719089984894
    2. '=' → logprob: -1.8426772356033325
    3. ' à' → logprob: -3.842677116394043
    4. '#' → logprob: -5.467677116394043
    5. ' =' → logprob: -6.217677116394043
    6. ''à' → logprob: -6.342677116394043
    7. 'a' → logprob: -6.717677116394043
    8. '```' → logprob: -6.842677116394043
    9. ')' → logprob: -7.092677116394043
    10. 'au' → logprob: -7.217677116394043

Token 1246: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1376972645521164
    2. '(L' → logprob: -2.637697219848633
    3. '(B' → logprob: -3.762697219848633
    4. '(A' → logprob: -4.387697219848633
    5. '(start' → logprob: -4.887697219848633
    6. '[' → logprob: -5.012697219848633
    7. ' (' → logprob: -5.887697219848633
    8. '[L' → logprob: -6.762697219848633
    9. '[]' → logprob: -7.137697219848633
    10. '[start' → logprob: -7.887697219848633

Token 1247: ' plage' (ID: 78241)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.4506172239780426
    2. 'part' → logprob: -1.5756171941757202
    3. 'range' → logprob: -2.9506173133850098
    4. '(' → logprob: -3.3256173133850098
    5. 'pair' → logprob: -4.45061731338501
    6. 'long' → logprob: -4.70061731338501
    7. 'ligne' → logprob: -4.95061731338501
    8. 'tu' → logprob: -5.32561731338501
    9. '(tuple' → logprob: -5.95061731338501
    10. '(
' → logprob: -5.95061731338501

Token 1248: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6765171885490417
    2. '=' → logprob: -1.5515172481536865
    3. 'des' → logprob: -2.5515172481536865
    4. '[]' → logprob: -2.6765172481536865
    5. ' =' → logprob: -3.0515172481536865
    6. '```' → logprob: -4.051517009735107
    7. '=[]' → logprob: -4.176517009735107
    8. '[' → logprob: -5.176517009735107
    9. '[
' → logprob: -5.176517009735107
    10. ',' → logprob: -5.301517009735107

Token 1249: ' nombres' (ID: 76205)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.263618528842926
    2. 'val' → logprob: -2.2636184692382812
    3. 'ch' → logprob: -2.6386184692382812
    4. 'n' → logprob: -3.3886184692382812
    5. 'l' → logprob: -4.638618469238281
    6. 'd' → logprob: -6.013618469238281
    7. 'digits' → logprob: -6.138618469238281
    8. 'nombre' → logprob: -6.263618469238281
    9. ' longue' → logprob: -6.388618469238281
    10. 'ta' → logprob: -7.513618469238281

Token 1250: ' ayant' (ID: 45436)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1562918424606323
    2. '=[]' → logprob: -1.1562918424606323
    3. ',' → logprob: -1.4062918424606323
    4. ' =' → logprob: -3.156291961669922
    5. '=' → logprob: -3.531291961669922
    6. 'part' → logprob: -4.781291961669922
    7. 'parts' → logprob: -5.281291961669922
    8. '[],' → logprob: -5.531291961669922
    9. 'de' → logprob: -5.531291961669922
    10. '.append' → logprob: -5.656291961669922

Token 1251: ' le' (ID: 505)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.5072924494743347
    2. 'une' → logprob: -1.1322925090789795
    3. 'la' → logprob: -3.3822925090789795
    4. 'un' → logprob: -4.2572922706604
    5. '#' → logprob: -4.3822922706604
    6. '```' → logprob: -5.8822922706604
    7. ' une' → logprob: -6.2572922706604
    8. ' des' → logprob: -6.5072922706604
    9. 'length' → logprob: -6.7572922706604
    10. 'diff' → logprob: -7.0072922706604

Token 1252: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.5359333157539368
    2. 'm' → logprob: -0.9109333157539368
    3. 'long' → logprob: -5.285933494567871
    4. '```' → logprob: -5.535933494567871
    5. 'nombre' → logprob: -6.910933494567871
    6. 'same' → logprob: -7.285933494567871
    7. 'length' → logprob: -7.410933494567871
    8. 'even' → logprob: -7.785933494567871
    9. '#' → logprob: -8.535933494567871
    10. ' even' → logprob: -8.910933494567871

Token 1253: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.09509826451539993
    2. 'length' → logprob: -2.4700982570648193
    3. 'len' → logprob: -5.470098495483398
    4. ' nombre' → logprob: -6.720098495483398
    5. 'long' → logprob: -8.220098495483398
    6. 'leng' → logprob: -8.970098495483398
    7. 'l' → logprob: -9.345098495483398
    8. 'nb' → logprob: -9.595098495483398
    9. 'n' → logprob: -9.970098495483398
    10. 'number' → logprob: -10.345098495483398

Token 1254: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.22855283319950104
    2. ' de' → logprob: -2.10355281829834
    3. 'd' → logprob: -2.97855281829834
    4. '_de' → logprob: -4.35355281829834
    5. '_d' → logprob: -4.85355281829834
    6. '#' → logprob: -4.85355281829834
    7. '```' → logprob: -6.85355281829834
    8. 'of' → logprob: -7.85355281829834
    9. ' d' → logprob: -8.22855281829834
    10. '_' → logprob: -8.60355281829834

Token 1255: ' chiffres' (ID: 105565)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.09506671875715256
    2. 'ch' → logprob: -2.470066785812378
    3. 'c' → logprob: -5.595066547393799
    4. 'd' → logprob: -6.345066547393799
    5. ' chiffres' → logprob: -8.345067024230957
    6. 'car' → logprob: -8.720067024230957
    7. ' digits' → logprob: -9.345067024230957
    8. '```' → logprob: -9.720067024230957
    9. 'digit' → logprob: -10.720067024230957
    10. 'spaces' → logprob: -11.345067024230957

Token 1256: '.
' (ID: 558)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.017433132976293564
    2. 'part' → logprob: -4.142433166503906
    3. 'ranges' → logprob: -6.767433166503906
    4. '(parts' → logprob: -9.642433166503906
    5. ' parts' → logprob: -9.892433166503906
    6. 'sections' → logprob: -10.142433166503906
    7. ',' → logprob: -10.767433166503906
    8. 'segments' → logprob: -11.267433166503906
    9. 'pieces' → logprob: -11.392433166503906
    10. '```' → logprob: -11.892433166503906

Token 1257: 'part' (ID: 5815)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.026406429708003998
    2. 'ranges' → logprob: -4.276406288146973
    3. 'part' → logprob: -4.526406288146973
    4. 'interval' → logprob: -7.401406288146973
    5. 'segments' → logprob: -8.401406288146973
    6. '```' → logprob: -8.901406288146973
    7. 'steps' → logprob: -10.151406288146973
    8. 'sections' → logprob: -10.151406288146973
    9. 'pieces' → logprob: -10.401406288146973
    10. 'range' → logprob: -10.651406288146973

Token 1258: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005950364284217358
    2. 'parts' → logprob: -6.380950450897217
    3. 'sizes' → logprob: -6.755950450897217
    4. 'ies' → logprob: -6.880950450897217
    5. 'es' → logprob: -7.255950450897217
    6. 'list' → logprob: -8.005949974060059
    7. 'sum' → logprob: -8.880949974060059
    8. '=' → logprob: -9.005949974060059
    9. '_parts' → logprob: -9.005949974060059
    10. 'spart' → logprob: -9.130949974060059

Token 1259: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0015174767468124628
    2. '[' → logprob: -6.501517295837402
    3. ' []' → logprob: -11.251517295837402
    4. '[]
' → logprob: -13.501517295837402
    5. '{}' → logprob: -15.501517295837402
    6. '[]

' → logprob: -15.751517295837402
    7. '[]}' → logprob: -16.12651824951172
    8. '[]"' → logprob: -16.87651824951172
    9. '[int' → logprob: -17.12651824951172
    10. '[len' → logprob: -17.12651824951172

Token 1260: '#' (ID: 2)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.11638221889734268
    2. 'start' → logprob: -3.116382122039795
    3. 'cur' → logprob: -3.491382122039795
    4. 'length' → logprob: -4.866382122039795
    5. 'last' → logprob: -5.116382122039795
    6. 'curr' → logprob: -5.491382122039795
    7. 'i' → logprob: -5.866382122039795
    8. 'prev' → logprob: -6.116382122039795
    9. 'digit' → logprob: -6.116382122039795
    10. 'l' → logprob: -6.116382122039795

Token 1261: ' Bou' (ID: 33816)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.26127123832702637
    2. 'cur' → logprob: -1.8862712383270264
    3. 'curr' → logprob: -3.5112712383270264
    4. 'for' → logprob: -4.1362714767456055
    5. 'i' → logprob: -4.8862714767456055
    6. 'start' → logprob: -5.3862714767456055
    7. 'prev' → logprob: -5.6362714767456055
    8. 'last' → logprob: -5.6362714767456055
    9. 'length' → logprob: -6.0112714767456055
    10. 'def' → logprob: -6.1362714767456055

Token 1262: 'cle' (ID: 3170)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3665788471698761
    2. 'f' → logprob: -1.9915788173675537
    3. 'for' → logprob: -2.8665788173675537
    4. 'c' → logprob: -2.8665788173675537
    5. 'k' → logprob: -3.4915788173675537
    6. 'ck' → logprob: -4.866579055786133
    7. 'i' → logprob: -5.241579055786133
    8. 'n' → logprob: -5.991579055786133
    9. 'ch' → logprob: -6.241579055786133
    10. 'y' → logprob: -6.366579055786133

Token 1263: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001279045594856143
    2. ' for' → logprob: -7.251278877258301
    3. 'i' → logprob: -8.3762788772583
    4. '_' → logprob: -8.6262788772583
    5. 'range' → logprob: -8.8762788772583
    6. 'from' → logprob: -13.0012788772583
    7. '#' → logprob: -13.0012788772583
    8. '=' → logprob: -13.1262788772583
    9. '
' → logprob: -13.2512788772583
    10. '(i' → logprob: -13.3762788772583

Token 1264: ' va' (ID: 3423)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9647045135498047
    2. 'i' → logprob: -1.2147045135498047
    3. 'for' → logprob: -2.3397045135498047
    4. 'current' → logprob: -2.8397045135498047
    5. '=' → logprob: -3.4647045135498047
    6. 'cur' → logprob: -3.8397045135498047
    7. 'part' → logprob: -3.9647045135498047
    8. 'start' → logprob: -4.214704513549805
    9. 'n' → logprob: -4.464704513549805
    10. 'length' → logprob: -4.964704513549805

Token 1265: ' it' (ID: 480)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.48151078820228577
    2. 'i' → logprob: -1.1065107583999634
    3. 'length' → logprob: -4.231510639190674
    4. 'current' → logprob: -4.856510639190674
    5. ' l' → logprob: -4.981510639190674
    6. 'd' → logprob: -5.231510639190674
    7. ' i' → logprob: -5.856510639190674
    8. 'k' → logprob: -5.981510639190674
    9. 'n' → logprob: -6.356510639190674
    10. 'range' → logprob: -6.481510639190674

Token 1266: 'érer' (ID: 29097)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7298489212989807
    2. 'er' → logprob: -1.229848861694336
    3. 'érer' → logprob: -2.729848861694336
    4. 'ér' → logprob: -2.979848861694336
    5. 'égr' → logprob: -3.729848861694336
    6. '_range' → logprob: -4.229848861694336
    7. 'é' → logprob: -4.354848861694336
    8. '=' → logprob: -4.979848861694336
    9. '_' → logprob: -5.354848861694336
    10. 'in' → logprob: -5.479848861694336

Token 1267: ' du' (ID: 1462)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(start' → logprob: -1.0453689098358154
    2. '(' → logprob: -1.9203689098358154
    3. 'start' → logprob: -2.0453689098358154
    4. 'from' → logprob: -2.4203689098358154
    5. 'for' → logprob: -3.0453689098358154
    6. 'range' → logprob: -3.2953689098358154
    7. '(end' → logprob: -3.5453689098358154
    8. '(L' → logprob: -3.5453689098358154
    9. 'over' → logprob: -3.6703689098358154
    10. 'end' → logprob: -4.0453691482543945

Token 1268: ' nombre' (ID: 9733)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.036142464727163315
    2. 'B' → logprob: -4.286142349243164
    3. '1' → logprob: -5.161142349243164
    4. 'A' → logprob: -5.411142349243164
    5. 'end' → logprob: -5.411142349243164
    6. '0' → logprob: -5.786142349243164
    7. ' start' → logprob: -6.286142349243164
    8. 'L' → logprob: -7.036142349243164
    9. 'part' → logprob: -7.786142349243164
    10. '(start' → logprob: -7.911142349243164

Token 1269: ' de' (ID: 334)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.3598332405090332
    2. '=' → logprob: -1.6098332405090332
    3. 'de' → logprob: -1.9848332405090332
    4. 'A' → logprob: -2.234833240509033
    5. 'start' → logprob: -2.484833240509033
    6. '(' → logprob: -3.484833240509033
    7. 'd' → logprob: -3.609833240509033
    8. 'part' → logprob: -3.984833240509033
    9. ' =' → logprob: -3.984833240509033
    10. 'L' → logprob: -4.484833240509033

Token 1270: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.27876144647598267
    2. 'digits' → logprob: -2.028761386871338
    3. 'd' → logprob: -2.778761386871338
    4. 'part' → logprob: -3.403761386871338
    5. 'start' → logprob: -4.778761386871338
    6. 'car' → logprob: -6.278761386871338
    7. '0' → logprob: -6.653761386871338
    8. 'c' → logprob: -7.028761386871338
    9. '1' → logprob: -7.028761386871338
    10. '```' → logprob: -7.153761386871338

Token 1271: ' minimal' (ID: 19957)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.26341792941093445
    2. 'start' → logprob: -1.6384179592132568
    3. 'de' → logprob: -5.138417720794678
    4. 'for' → logprob: -5.138417720794678
    5. '=' → logprob: -5.263417720794678
    6. 'from' → logprob: -6.013417720794678
    7. '(' → logprob: -6.013417720794678
    8. 'range' → logprob: -6.138417720794678
    9. '=start' → logprob: -6.513417720794678
    10. '(s' → logprob: -6.763417720794678

Token 1272: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3638944625854492
    2. '(start' → logprob: -2.238894462585449
    3. '(' → logprob: -2.363894462585449
    4. 'à' → logprob: -2.488894462585449
    5. 'part' → logprob: -2.488894462585449
    6. 'start' → logprob: -2.488894462585449
    7. 'au' → logprob: -2.613894462585449
    8. ',' → logprob: -3.488894462585449
    9. '(part' → logprob: -3.863894462585449
    10. '(min' → logprob: -4.113894462585449

Token 1273: ' départ' (ID: 32693)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3058187663555145
    2. 'A' → logprob: -1.680818796157837
    3. 'part' → logprob: -3.180818796157837
    4. 'B' → logprob: -3.930818796157837
    5. 'l' → logprob: -5.305818557739258
    6. ' start' → logprob: -5.430818557739258
    7. 'L' → logprob: -5.930818557739258
    8. '1' → logprob: -6.930818557739258
    9. ' A' → logprob: -7.180818557739258
    10. '(start' → logprob: -7.805818557739258

Token 1274: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(start' → logprob: -1.365808129310608
    2. 'start' → logprob: -1.490808129310608
    3. '=' → logprob: -1.990808129310608
    4. 'à' → logprob: -2.1158080101013184
    5. '(' → logprob: -3.2408080101013184
    6. ' jusqu' → logprob: -3.3658080101013184
    7. ',' → logprob: -3.7408080101013184
    8. 'A' → logprob: -3.8658080101013184
    9. 'au' → logprob: -3.9908080101013184
    10. ' à' → logprob: -4.115808010101318

Token 1275: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.025747669860720634
    2. 'end' → logprob: -3.775747776031494
    3. '1' → logprob: -6.775747776031494
    4. ' start' → logprob: -7.650747776031494
    5. 'B' → logprob: -8.275747299194336
    6. 'A' → logprob: -8.775747299194336
    7. '2' → logprob: -8.900747299194336
    8. ')' → logprob: -9.150747299194336
    9. 'part' → logprob: -10.275747299194336
    10. '```' → logprob: -10.275747299194336

Token 1276: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31755995750427246
    2. ' jusqu' → logprob: -1.9425599575042725
    3. ',' → logprob: -2.4425599575042725
    4. ' à' → logprob: -4.317560195922852
    5. '```' → logprob: -4.942560195922852
    6. '=' → logprob: -5.442560195922852
    7. 'à' → logprob: -5.817560195922852
    8. ';' → logprob: -6.317560195922852
    9. ' au' → logprob: -6.317560195922852
    10. ' jusque' → logprob: -6.567560195922852

Token 1277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00939171388745308
    2. '4' → logprob: -5.384391784667969
    3. '2' → logprob: -6.259391784667969
    4. '```' → logprob: -6.634391784667969
    5. '3' → logprob: -7.759391784667969
    6. '#' → logprob: -7.884391784667969
    7. ')' → logprob: -8.384391784667969
    8. '=' → logprob: -9.134391784667969
    9. '0' → logprob: -9.384391784667969
    10. ' ' → logprob: -9.634391784667969

Token 1278: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1974601000547409
    2. ',' → logprob: -2.197460174560547
    3. ' jusqu' → logprob: -3.322460174560547
    4. ' à' → logprob: -4.572460174560547
    5. 'à' → logprob: -4.947460174560547
    6. ' au' → logprob: -5.322460174560547
    7. ' )' → logprob: -5.947460174560547
    8. 'au' → logprob: -6.447460174560547
    9. '```' → logprob: -7.322460174560547
    10. ' ,' → logprob: -7.447460174560547

Token 1279: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7849022150039673
    2. ' jusqu' → logprob: -1.9099022150039673
    3. 'to' → logprob: -2.1599020957946777
    4. 'à' → logprob: -2.2849020957946777
    5. ' to' → logprob: -2.7849020957946777
    6. '+' → logprob: -3.6599020957946777
    7. 'for' → logprob: -3.6599020957946777
    8. ' up' → logprob: -4.034902095794678
    9. ',' → logprob: -4.534902095794678
    10. '```' → logprob: -4.909902095794678

Token 1280: ' celui' (ID: 27857)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.010242469608783722
    2. ' end' → logprob: -4.635242462158203
    3. '(end' → logprob: -7.760242462158203
    4. '60' → logprob: -10.885242462158203
    5. '=end' → logprob: -11.385242462158203
    6. 'range' → logprob: -12.010242462158203
    7. 'len' → logprob: -12.510242462158203
    8. '
' → logprob: -13.385242462158203
    9. '[end' → logprob: -13.510242462158203
    10. ',end' → logprob: -13.635242462158203

Token 1281: ' de' (ID: 334)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6639818549156189
    2. '(end' → logprob: -0.9139818549156189
    3. '=end' → logprob: -3.4139819145202637
    4. '(B' → logprob: -4.663981914520264
    5. 'part' → logprob: -4.788981914520264
    6. 'B' → logprob: -4.788981914520264
    7. ',' → logprob: -5.413981914520264
    8. '(part' → logprob: -5.538981914520264
    9. '=' → logprob: -5.788981914520264
    10. ',end' → logprob: -6.038981914520264

Token 1282: ' fin' (ID: 2131)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.011383899487555027
    2. '(end' → logprob: -4.511384010314941
    3. ' end' → logprob: -8.136384010314941
    4. '[end' → logprob: -12.136384010314941
    5. '
' → logprob: -12.261384010314941
    6. '=end' → logprob: -12.386384010314941
    7. '(' → logprob: -12.511384010314941
    8. 'len' → logprob: -12.761384010314941
    9. '1' → logprob: -12.886384010314941
    10. '```' → logprob: -12.886384010314941

Token 1283: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0571099519729614
    2. 'for' → logprob: -1.4321099519729614
    3. '(end' → logprob: -1.5571099519729614
    4. '(start' → logprob: -2.682109832763672
    5. 'in' → logprob: -3.432109832763672
    6. '(' → logprob: -4.057109832763672
    7. ',' → logprob: -4.182109832763672
    8. 'end' → logprob: -4.557109832763672
    9. ' +' → logprob: -4.682109832763672
    10. ' (' → logprob: -4.682109832763672

Token 1284: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.004763803444802761
    2. ' end' → logprob: -5.754763603210449
    3. '(end' → logprob: -6.504763603210449
    4. '1' → logprob: -10.62976360321045
    5. 'start' → logprob: -11.00476360321045
    6. '+' → logprob: -11.37976360321045
    7. ',end' → logprob: -11.87976360321045
    8. '=end' → logprob: -11.87976360321045
    9. '
' → logprob: -12.00476360321045
    10. '2' → logprob: -13.12976360321045

Token 1285: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6764021515846252
    2. ',' → logprob: -0.8014021515846252
    3. '-' → logprob: -3.9264020919799805
    4. ' +' → logprob: -4.4264020919799805
    5. '()+' → logprob: -6.1764020919799805
    6. 'for' → logprob: -6.4264020919799805
    7. '#' → logprob: -6.5514020919799805
    8. ')' → logprob: -6.8014020919799805
    9. ' -' → logprob: -6.9264020919799805
    10. '```' → logprob: -7.0514020919799805

Token 1286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3218636214733124
    2. '+' → logprob: -1.3218636512756348
    3. '0' → logprob: -5.196863651275635
    4. ' +' → logprob: -6.071863651275635
    5. ' ' → logprob: -8.196863174438477
    6. '```' → logprob: -8.196863174438477
    7. ')' → logprob: -10.446863174438477
    8. '(' → logprob: -10.446863174438477
    9. '2' → logprob: -10.696863174438477
    10. ')+' → logprob: -10.946863174438477

Token 1287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061058029532432556
    2. '+' → logprob: -3.3110580444335938
    3. '0' → logprob: -3.8110580444335938
    4. '2' → logprob: -8.436058044433594
    5. ' +' → logprob: -9.186058044433594
    6. '```' → logprob: -9.186058044433594
    7. ' ' → logprob: -9.561058044433594
    8. '-' → logprob: -9.686058044433594
    9. '   ' → logprob: -11.311058044433594
    10. 'B' → logprob: -11.686058044433594

Token 1288: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0758671760559082
    2. '):
' → logprob: -1.4508671760559082
    3. ',' → logprob: -1.7008671760559082
    4. '+' → logprob: -1.8258671760559082
    5. 'for' → logprob: -3.450867176055908
    6. 'in' → logprob: -4.575867176055908
    7. ' for' → logprob: -4.825867176055908
    8. ':' → logprob: -4.825867176055908
    9. ' +' → logprob: -5.450867176055908
    10. '```' → logprob: -5.575867176055908

Token 1289: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0502154603600502
    2. ' for' → logprob: -3.550215482711792
    3. 'in' → logprob: -4.050215244293213
    4. ' in' → logprob: -6.800215244293213
    5. ',' → logprob: -7.175215244293213
    6. '```' → logprob: -7.925215244293213
    7. ':
' → logprob: -8.425215721130371
    8. ':' → logprob: -9.050215721130371
    9. '
' → logprob: -9.550215721130371
    10. 'pour' → logprob: -10.425215721130371

Token 1290: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22381052374839783
    2. ' for' → logprob: -2.2238104343414307
    3. ':' → logprob: -3.2238104343414307
    4. 'in' → logprob: -3.5988104343414307
    5. ':
' → logprob: -4.22381067276001
    6. '(range' → logprob: -5.47381067276001
    7. ',' → logprob: -6.34881067276001
    8. ' in' → logprob: -6.34881067276001
    9. '(' → logprob: -7.09881067276001
    10. 'range' → logprob: -7.84881067276001

Token 1291: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005966834723949432
    2. ' for' → logprob: -5.130966663360596
    3. '```' → logprob: -10.505967140197754
    4. 'range' → logprob: -11.505967140197754
    5. ' 
' → logprob: -16.380966186523438
    6. '	for' → logprob: -16.505966186523438
    7. '(range' → logprob: -16.505966186523438
    8. 'i' → logprob: -16.630966186523438
    9. ' range' → logprob: -16.630966186523438
    10. 'pour' → logprob: -16.755966186523438

Token 1292: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09682483226060867
    2. ' i' → logprob: -3.221824884414673
    3. 'd' → logprob: -3.846824884414673
    4. 'l' → logprob: -4.471824645996094
    5. 'x' → logprob: -5.596824645996094
    6. 'length' → logprob: -5.846824645996094
    7. 'k' → logprob: -5.971824645996094
    8. ' length' → logprob: -6.346824645996094
    9. ' d' → logprob: -6.471824645996094
    10. 'digit' → logprob: -6.596824645996094

Token 1293: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38692793250083923
    2. 'in' → logprob: -1.1369279623031616
    3. ',' → logprob: -11.386927604675293
    4. '	in' → logprob: -11.386927604675293
    5. '_' → logprob: -12.386927604675293
    6. 'range' → logprob: -12.511927604675293
    7. '   ' → logprob: -12.636927604675293
    8. ' ' → logprob: -12.636927604675293
    9. ')' → logprob: -13.011927604675293
    10. '```' → logprob: -13.261927604675293

Token 1294: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08063562959432602
    2. ' range' → logprob: -2.5806355476379395
    3. 'start' → logprob: -6.4556355476379395
    4. ' start' → logprob: -8.830636024475098
    5. '(range' → logprob: -11.080636024475098
    6. '(start' → logprob: -12.705636024475098
    7. '
' → logprob: -13.080636024475098
    8. 'part' → logprob: -13.580636024475098
    9. '	range' → logprob: -13.705636024475098
    10. 'rang' → logprob: -14.205636024475098

Token 1295: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0024515187833458185
    2. '(' → logprob: -6.627451419830322
    3. 'start' → logprob: -7.127451419830322
    4. ' (' → logprob: -8.50245189666748
    5. '(range' → logprob: -9.62745189666748
    6. ' start' → logprob: -10.37745189666748
    7. 'range' → logprob: -11.50245189666748
    8. '(len' → logprob: -12.75245189666748
    9. '(
' → logprob: -13.62745189666748
    10. '(st' → logprob: -13.75245189666748

Token 1296: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006532176397740841
    2. ' ,' → logprob: -5.131532192230225
    3. '-' → logprob: -8.131531715393066
    4. ',i' → logprob: -9.381531715393066
    5. '   ' → logprob: -9.756531715393066
    6. ' -' → logprob: -9.756531715393066
    7. ',len' → logprob: -10.381531715393066
    8. '+' → logprob: -11.131531715393066
    9. ',n' → logprob: -11.506531715393066
    10. ',end' → logprob: -12.506531715393066

Token 1297: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.114600834436715e-05
    2. '0' → logprob: -9.625091552734375
    3. ' ' → logprob: -11.000091552734375
    4. '4' → logprob: -12.250091552734375
    5. 'i' → logprob: -13.875091552734375
    6. '   ' → logprob: -14.125091552734375
    7. ',' → logprob: -14.625091552734375
    8. '2' → logprob: -14.625091552734375
    9. '```' → logprob: -15.000091552734375
    10. '
' → logprob: -15.750091552734375

Token 1298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. '0' → logprob: -9.625096321105957
    3. ' ' → logprob: -10.875096321105957
    4. '4' → logprob: -12.125096321105957
    5. 'i' → logprob: -13.750096321105957
    6. '
' → logprob: -13.875096321105957
    7. '2' → logprob: -13.875096321105957
    8. 'start' → logprob: -14.375096321105957
    9. '```' → logprob: -14.625096321105957
    10. '-' → logprob: -14.750096321105957

Token 1299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008205882040783763
    2. ' ,' → logprob: -7.375820636749268
    3. ',len' → logprob: -9.50082015991211
    4. ',i' → logprob: -10.12582015991211
    5. ',n' → logprob: -10.37582015991211
    6. ',
' → logprob: -11.12582015991211
    7. ',end' → logprob: -11.50082015991211
    8. ',L' → logprob: -12.50082015991211
    9. ',num' → logprob: -12.62582015991211
    10. ',b' → logprob: -13.00082015991211

Token 1300: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0005537479883059859
    2. ' end' → logprob: -7.500553607940674
    3. '(end' → logprob: -14.125554084777832
    4. '
' → logprob: -17.500553131103516
    5. '=end' → logprob: -18.000553131103516
    6. '   ' → logprob: -18.375553131103516
    7. '	end' → logprob: -18.875553131103516
    8. '[end' → logprob: -19.375553131103516
    9. ':end' → logprob: -19.500553131103516
    10. ',end' → logprob: -19.500553131103516

Token 1301: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02090059220790863
    2. '+' → logprob: -4.395900726318359
    3. ' ,' → logprob: -5.145900726318359
    4. ' +' → logprob: -6.270900726318359
    5. '(i' → logprob: -8.39590072631836
    6. '(' → logprob: -8.52090072631836
    7. ',i' → logprob: -9.52090072631836
    8. '   ' → logprob: -9.52090072631836
    9. ' ' → logprob: -11.27090072631836
    10. '(),' → logprob: -12.14590072631836

Token 1302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008675140561535954
    2. ' if' → logprob: -8.12586784362793
    3. 'if' → logprob: -8.25086784362793
    4. '```' → logprob: -9.25086784362793
    5. 'n' → logprob: -9.37586784362793
    6. '#' → logprob: -10.50086784362793
    7. 'min' → logprob: -11.00086784362793
    8. 'l' → logprob: -11.00086784362793
    9. '    
' → logprob: -11.12586784362793
    10. 'part' → logprob: -12.00086784362793

Token 1303: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9268460273742676
    2. 'if' → logprob: -1.3018460273742676
    3. ' if' → logprob: -1.8018460273742676
    4. 'part' → logprob: -3.9268460273742676
    5. 'begin' → logprob: -4.176846027374268
    6. 'l' → logprob: -4.301846027374268
    7. 'start' → logprob: -4.301846027374268
    8. 'n' → logprob: -4.301846027374268
    9. 'low' → logprob: -4.301846027374268
    10. '#' (adapté à ' #') → logprob: -4.301846027374268

Token 1304: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3299790620803833
    2. 'low' → logprob: -2.7049789428710938
    3. '#' → logprob: -2.9549789428710938
    4. 'part' → logprob: -3.0799789428710938
    5. 'lower' → logprob: -3.5799789428710938
    6. 'min' → logprob: -4.454978942871094
    7. 'left' → logprob: -4.454978942871094
    8. 'first' → logprob: -4.579978942871094
    9. 'begin' → logprob: -4.704978942871094
    10. 'start' → logprob: -5.079978942871094

Token 1305: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4083077907562256
    2. '   ' → logprob: -2.2833077907562256
    3. ' =' → logprob: -2.5333077907562256
    4. 'de' → logprob: -2.9083077907562256
    5. '_min' → logprob: -3.9083077907562256
    6. 'min' → logprob: -4.158308029174805
    7. 'start' → logprob: -4.408308029174805
    8. 's' → logprob: -4.533308029174805
    9. '_start' → logprob: -5.033308029174805
    10. '(
' → logprob: -5.283308029174805

Token 1306: ' l' (ID: 305)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.071391224861145
    2. 'min' → logprob: -1.946391224861145
    3. 'if' → logprob: -2.0713911056518555
    4. 'left' → logprob: -2.6963911056518555
    5. 'lo' → logprob: -2.8213911056518555
    6. 'start' → logprob: -3.1963911056518555
    7. 'lower' → logprob: -3.1963911056518555
    8. 'de' → logprob: -3.4463911056518555
    9. 'l' → logprob: -3.5713911056518555
    10. 'begin' → logprob: -3.5713911056518555

Token 1307: ''ind' (ID: 82245)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.4032317399978638
    2. 'a' → logprob: -1.6532317399978638
    3. 'ower' → logprob: -2.528231620788574
    4. 'e' → logprob: -2.653231620788574
    5. '10' → logprob: -2.778231620788574
    6. 'i' → logprob: -2.903231620788574
    7. 'if' → logprob: -3.028231620788574
    8. 'pow' → logprob: -3.153231620788574
    9. 'ow' → logprob: -3.778231620788574
    10. 'n' → logprob: -3.778231620788574

Token 1308: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6427088975906372
    2. 'ice' → logprob: -1.2677088975906372
    3. '_min' → logprob: -2.3927087783813477
    4. 'min' → logprob: -3.6427087783813477
    5. '_' → logprob: -4.142708778381348
    6. 'i' → logprob: -4.392708778381348
    7. '_i' → logprob: -4.517708778381348
    8. 'ent' → logprob: -5.142708778381348
    9. 'e' → logprob: -5.267708778381348
    10. '_ex' → logprob: -5.392708778381348

Token 1309: ' l' (ID: 305)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3023340106010437
    2. 'i' → logprob: -2.4273340702056885
    3. ' =' → logprob: -2.5523340702056885
    4. 'de' → logprob: -3.8023340702056885
    5. '=i' → logprob: -4.177333831787109
    6. ' i' → logprob: -4.802333831787109
    7. '_=' → logprob: -4.927333831787109
    8. 'min' → logprob: -5.052333831787109
    9. '_i' → logprob: -5.427333831787109
    10. '```' → logprob: -5.552333831787109

Token 1310: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45161136984825134
    2. '=' → logprob: -1.0766113996505737
    3. '=i' → logprob: -3.951611280441284
    4. 'i' → logprob: -6.451611518859863
    5. 'ength' → logprob: -7.201611518859863
    6. '_i' → logprob: -8.451611518859863
    7. ',' → logprob: -8.576611518859863
    8. 's' → logprob: -9.201611518859863
    9. '   ' → logprob: -9.451611518859863
    10. 'ist' → logprob: -9.951611518859863

Token 1311: 'prem' (ID: 76294)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09887339174747467
    2. '=' → logprob: -3.4738733768463135
    3. ' =' → logprob: -3.4738733768463135
    4. 'l' → logprob: -3.8488733768463135
    5. ' i' → logprob: -4.973873615264893
    6. ')' → logprob: -6.598873615264893
    7. '   ' → logprob: -6.973873615264893
    8. '=i' → logprob: -8.098873138427734
    9. '10' → logprob: -8.348873138427734
    10. 'part' → logprob: -8.598873138427734

Token 1312: 'ier' (ID: 905)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21164867281913757
    2. '   ' → logprob: -2.71164870262146
    3. 'ière' → logprob: -3.21164870262146
    4. '=' → logprob: -3.96164870262146
    5. '=i' → logprob: -3.96164870262146
    6. '_i' → logprob: -4.711648464202881
    7. '```' → logprob: -4.961648464202881
    8. '-i' → logprob: -5.961648464202881
    9. 'a' → logprob: -6.586648464202881
    10. 'ié' → logprob: -6.711648464202881

Token 1313: ' numéro' (ID: 65036)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0089596509933472
    2. '=' → logprob: -1.2589596509933472
    3. ' =' → logprob: -1.8839596509933472
    4. ' _' → logprob: -3.1339597702026367
    5. '_ch' → logprob: -3.2589597702026367
    6. 'ch' → logprob: -3.5089597702026367
    7. '_num' → logprob: -4.633959770202637
    8. '_digit' → logprob: -4.633959770202637
    9. '_=' → logprob: -5.008959770202637
    10. '=i' → logprob: -5.133959770202637

Token 1314: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6123830080032349
    2. '=i' → logprob: -1.1123830080032349
    3. 'de' → logprob: -2.9873828887939453
    4. ' =' → logprob: -3.3623828887939453
    5. 'i' → logprob: -3.9873828887939453
    6. 'à' → logprob: -5.612382888793945
    7. 's' → logprob: -5.612382888793945
    8. ')' → logprob: -5.737382888793945
    9. '```' → logprob: -5.737382888793945
    10. '_' → logprob: -6.237382888793945

Token 1315: ' bloc' (ID: 51218)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15032048523426056
    2. 'ch' → logprob: -3.775320529937744
    3. 'bloc' → logprob: -3.775320529937744
    4. 'd' → logprob: -4.025320529937744
    5. 'la' → logprob: -4.025320529937744
    6. 'part' → logprob: -4.275320529937744
    7. 'digits' → logprob: -4.400320529937744
    8. 'l' → logprob: -4.775320529937744
    9. 'range' → logprob: -4.900320529937744
    10. ' i' → logprob: -5.400320529937744

Token 1316: ' atte' (ID: 43312)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7079323530197144
    2. '=i' → logprob: -1.0829323530197144
    3. ' =' → logprob: -1.8329323530197144
    4. 's' → logprob: -5.832932472229004
    5. ')' → logprob: -5.832932472229004
    6. 'i' → logprob: -7.332932472229004
    7. '(i' → logprob: -7.707932472229004
    8. '```' → logprob: -7.707932472229004
    9. '[i' → logprob: -8.332932472229004
    10. ')=' → logprob: -8.457932472229004

Token 1317: 'ignant' (ID: 53288)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.41033875942230225
    2. 'gn' → logprob: -1.2853387594223022
    3. 'igné' → logprob: -4.160338878631592
    4. 'nt' → logprob: -4.285338878631592
    5. 'nd' → logprob: -4.535338878631592
    6. 'n' → logprob: -5.035338878631592
    7. 'g' → logprob: -5.785338878631592
    8. 'ind' → logprob: -6.035338878631592
    9. 'né' → logprob: -6.910338878631592
    10. 'r' → logprob: -6.910338878631592

Token 1318: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.019040293991565704
    2. ' i' → logprob: -4.144040107727051
    3. '10' → logprob: -7.394040107727051
    4. '2' → logprob: -7.769040107727051
    5. '=' → logprob: -7.769040107727051
    6. ' =' → logprob: -8.14404010772705
    7. 'l' → logprob: -8.14404010772705
    8. ' ' → logprob: -8.26904010772705
    9. '   ' → logprob: -8.89404010772705
    10. '```' → logprob: -9.14404010772705

Token 1319: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021398626267910004
    2. '10' → logprob: -4.271398544311523
    3. ' i' → logprob: -5.521398544311523
    4. '=' → logprob: -7.021398544311523
    5. 'l' → logprob: -7.521398544311523
    6. '0' → logprob: -8.396398544311523
    7. 'ch' → logprob: -8.521398544311523
    8. '(i' → logprob: -8.521398544311523
    9. 'str' → logprob: -8.646398544311523
    10. '9' → logprob: -9.271398544311523

Token 1320: ' de' (ID: 334)
  Prédit: '=i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=i' → logprob: -0.7451149225234985
    2. '=' → logprob: -0.9951149225234985
    3. 'i' → logprob: -2.495114803314209
    4. ' =' → logprob: -3.120114803314209
    5. ' i' → logprob: -4.120114803314209
    6. '_i' → logprob: -6.120114803314209
    7. ')' → logprob: -6.370114803314209
    8. 's' → logprob: -6.495114803314209
    9. '[i' → logprob: -6.745114803314209
    10. 'de' → logprob: -6.870114803314209

Token 1321: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.15303047001361847
    2. 'd' → logprob: -3.0280303955078125
    3. 'digits' → logprob: -3.0280303955078125
    4. 'i' → logprob: -3.6530303955078125
    5. ' chiffres' → logprob: -4.4030303955078125
    6. 'l' → logprob: -5.9030303955078125
    7. '```' → logprob: -6.4030303955078125
    8. ' i' → logprob: -7.2780303955078125
    9. 'c' → logprob: -7.7780303955078125
    10. ' digits' → logprob: -8.528030395507812

Token 1322: ' i' (ID: 575)
  Prédit: '=i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=i' → logprob: -1.2242205142974854
    2. 'i' → logprob: -1.3492205142974854
    3. '=' → logprob: -1.4742205142974854
    4. ' =' → logprob: -1.8492205142974854
    5. ' i' → logprob: -3.5992205142974854
    6. ')' → logprob: -3.8492205142974854
    7. 'dans' → logprob: -6.224220275878906
    8. '```' → logprob: -6.474220275878906
    9. ' dans' → logprob: -6.724220275878906
    10. ')i' → logprob: -6.849220275878906

Token 1323: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3255479633808136
    2. '=' → logprob: -2.200547933578491
    3. ')' → logprob: -2.450547933578491
    4. ' +' → logprob: -3.075547933578491
    5. ' =' → logprob: -4.32554817199707
    6. ')=' → logprob: -4.95054817199707
    7. '):' → logprob: -5.70054817199707
    8. '=i' → logprob: -6.20054817199707
    9. '+i' → logprob: -6.32554817199707
    10. '   ' → logprob: -6.70054817199707

Token 1324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.570319702499546e-05
    2. ' ' → logprob: -10.750025749206543
    3. '
' → logprob: -13.125025749206543
    4. '2' → logprob: -13.750025749206543
    5. '```' → logprob: -14.250025749206543
    6. '   ' → logprob: -15.750025749206543
    7. '<|end|>' → logprob: -16.250024795532227
    8. ')' → logprob: -17.125024795532227
    9. 's' → logprob: -17.375024795532227
    10. '=' → logprob: -17.625024795532227

Token 1325: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3968399465084076
    2. '+' → logprob: -1.27183997631073
    3. ' +' → logprob: -3.3968398571014404
    4. ')+' → logprob: -5.2718400955200195
    5. '):' → logprob: -5.5218400955200195
    6. ')
' → logprob: -6.6468400955200195
    7. '):
' → logprob: -7.3968400955200195
    8. ' )' → logprob: -7.3968400955200195
    9. '   ' → logprob: -7.3968400955200195
    10. ' =' → logprob: -8.02184009552002

Token 1326: ' basé' (ID: 139381)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.401654839515686
    2. 'min' → logprob: -2.1516547203063965
    3. ' min' → logprob: -2.4016547203063965
    4. 'l' → logprob: -2.6516547203063965
    5. 'low' → logprob: -2.7766547203063965
    6. ' low' → logprob: -3.1516547203063965
    7. 'lower' → logprob: -3.1516547203063965
    8. ' lower' → logprob: -3.4016547203063965
    9. 'start' → logprob: -3.6516547203063965
    10. 'first' → logprob: -3.9016547203063965

Token 1327: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.5619434118270874
    2. '=' → logprob: -0.9369434118270874
    3. ' sur' → logprob: -3.811943531036377
    4. '=i' → logprob: -4.811943531036377
    5. '(i' → logprob: -5.561943531036377
    6. 'i' → logprob: -6.936943531036377
    7. '   ' → logprob: -7.311943531036377
    8. '_sur' → logprob: -7.561943531036377
    9. 'on' → logprob: -7.936943531036377
    10. ' =' → logprob: -8.686943054199219

Token 1328: ' les' (ID: 1341)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03918797895312309
    2. 'pow' → logprob: -3.2891879081726074
    3. '(' → logprob: -7.789187908172607
    4. 'i' → logprob: -8.289188385009766
    5. '1' → logprob: -9.039188385009766
    6. '
' → logprob: -9.414188385009766
    7. ' ' → logprob: -9.539188385009766
    8. '   ' → logprob: -10.164188385009766
    9. '(pow' → logprob: -10.664188385009766
    10. ' pow' → logprob: -10.914188385009766

Token 1329: ' propriétés' (ID: 134557)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.37830647826194763
    2. 'pow' → logprob: -1.37830650806427
    3. 'part' → logprob: -4.0033063888549805
    4. 'i' → logprob: -4.2533063888549805
    5. '(' → logprob: -5.1283063888549805
    6. ' ' → logprob: -5.3783063888549805
    7. 'B' → logprob: -5.6283063888549805
    8. ' pow' → logprob: -5.8783063888549805
    9. '   ' → logprob: -6.2533063888549805
    10. 'str' → logprob: -6.5033063888549805

Token 1330: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4094822108745575
    2. ' =' → logprob: -1.9094822406768799
    3. 'de' → logprob: -2.78448224067688
    4. '   ' → logprob: -3.15948224067688
    5. ' de' → logprob: -3.65948224067688
    6. 'i' → logprob: -4.284482002258301
    7. ' des' → logprob: -4.409482002258301
    8. '[i' → logprob: -5.409482002258301
    9. 'des' → logprob: -5.409482002258301
    10. '#' → logprob: -5.909482002258301

Token 1331: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5396899580955505
    2. '10' → logprob: -1.1646900177001953
    3. 'B' → logprob: -3.9146900177001953
    4. 'range' → logprob: -4.039690017700195
    5. 'pow' → logprob: -4.164690017700195
    6. '2' → logprob: -4.289690017700195
    7. ' la' → logprob: -4.539690017700195
    8. 'l' → logprob: -4.664690017700195
    9. 'd' → logprob: -5.289690017700195
    10. 'i' → logprob: -5.914690017700195

Token 1332: ' suite' (ID: 13800)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7545455098152161
    2. 'd' → logprob: -2.2545454502105713
    3. 'range' → logprob: -2.2545454502105713
    4. 'pu' → logprob: -3.0045454502105713
    5. ' nombres' → logprob: -3.1295454502105713
    6. 'nombre' → logprob: -3.2545454502105713
    7. 'part' → logprob: -3.5045454502105713
    8. 'for' → logprob: -3.8795454502105713
    9. 'pow' → logprob: -3.8795454502105713
    10. ' range' → logprob: -4.50454568862915

Token 1333: ' ar' (ID: 646)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3429073989391327
    2. '=' → logprob: -1.717907428741455
    3. 'de' → logprob: -3.967907428741455
    4. '   ' → logprob: -3.967907428741455
    5. '[i' → logprob: -4.092907428741455
    6. '=i' → logprob: -4.217907428741455
    7. ' des' → logprob: -5.342907428741455
    8. ' i' → logprob: -5.467907428741455
    9. 'A' → logprob: -5.467907428741455
    10. 'i' → logprob: -5.592907428741455

Token 1334: 'ith' (ID: 437)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.588189423084259
    2. 'range' → logprob: -1.5881893634796143
    3. 'r' → logprob: -2.0881893634796143
    4. 'ray' → logprob: -2.7131893634796143
    5. 'ith' → logprob: -3.4631893634796143
    6. 'ea' → logprob: -5.463189601898193
    7. 't' → logprob: -5.713189601898193
    8. 'e' → logprob: -5.838189601898193
    9. 'm' → logprob: -6.588189601898193
    10. 'g' → logprob: -6.588189601898193

Token 1335: 'm' (ID: 76)
  Prédit: 'ith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ith' → logprob: -0.0462171845138073
    2. 'm' → logprob: -3.421217203140259
    3. 'th' → logprob: -6.04621696472168
    4. 'i' → logprob: -6.04621696472168
    5. 'ythm' → logprob: -6.54621696472168
    6. '1' → logprob: -6.79621696472168
    7. 'mé' → logprob: -7.42121696472168
    8. '   ' → logprob: -7.42121696472168
    9. '```' → logprob: -7.67121696472168
    10. 'g' → logprob: -7.92121696472168

Token 1336: 'étique' (ID: 41132)
  Prédit: 'étique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étique' → logprob: -0.33110320568084717
    2. 't' → logprob: -1.3311032056808472
    3. 'thique' → logprob: -4.956103324890137
    4. 'étiques' → logprob: -5.456103324890137
    5. 'th' → logprob: -5.706103324890137
    6. 'é' → logprob: -7.581103324890137
    7. 'étr' → logprob: -8.081103324890137
    8. '#' → logprob: -8.206103324890137
    9. 'tiques' → logprob: -8.331103324890137
    10. '   ' → logprob: -8.831103324890137

Token 1337: ' génér' (ID: 18939)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9071533679962158
    2. '=' → logprob: -1.1571533679962158
    3. ' =' → logprob: -1.4071533679962158
    4. '[i' → logprob: -4.282153129577637
    5. '=i' → logprob: -4.657153129577637
    6. 'n' → logprob: -5.907153129577637
    7. '```' → logprob: -6.407153129577637
    8. 'i' → logprob: -6.782153129577637
    9. ',' → logprob: -6.782153129577637
    10. ':' → logprob: -7.282153129577637

Token 1338: 'ée' (ID: 2894)
  Prédit: 'érée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érée' → logprob: -1.5905312299728394
    2. 'er' → logprob: -2.215531349182129
    3. 'é' → logprob: -2.340531349182129
    4. 'rée' → logprob: -2.590531349182129
    5. 'ée' → logprob: -2.840531349182129
    6. 'érées' → logprob: -2.840531349182129
    7. '       ' → logprob: -3.090531349182129
    8. 'al' → logprob: -3.340531349182129
    9. '   ' → logprob: -3.590531349182129
    10. 'e' → logprob: -3.590531349182129

Token 1339: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7214615345001221
    2. ' =' → logprob: -0.8464615345001221
    3. '   ' → logprob: -2.721461534500122
    4. '=i' → logprob: -4.596461296081543
    5. ':' → logprob: -6.971461296081543
    6. '=
' → logprob: -7.096461296081543
    7. '```' → logprob: -7.471461296081543
    8. 'n' → logprob: -7.471461296081543
    9. '):
' → logprob: -7.596461296081543
    10. 'de' → logprob: -7.721461296081543

Token 1340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021636169403791428
    2. ':' → logprob: -4.021636009216309
    3. '```' → logprob: -6.896636009216309
    4. ' :' → logprob: -7.521636009216309
    5. ':
' → logprob: -7.896636009216309
    6. ' =' → logprob: -7.896636009216309
    7. '    ' → logprob: -8.271636009216309
    8. '=' → logprob: -8.646636009216309
    9. '[' → logprob: -8.896636009216309
    10. ',' → logprob: -8.896636009216309

Token 1341: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.1050043106079102
    2. '   ' → logprob: -2.10500431060791
    3. ' l' → logprob: -2.48000431060791
    4. 'i' → logprob: -3.10500431060791
    5. 'n' → logprob: -3.48000431060791
    6. 'start' → logprob: -3.48000431060791
    7. 'low' → logprob: -3.60500431060791
    8. ' low' → logprob: -3.85500431060791
    9. 'part' → logprob: -3.85500431060791
    10. ' part' → logprob: -3.85500431060791

Token 1342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08916149288415909
    2. ' =' → logprob: -2.4641613960266113
    3. '=i' → logprob: -8.46416187286377
    4. '=int' → logprob: -11.96416187286377
    5. '=l' → logprob: -13.71416187286377
    6. ',' → logprob: -14.33916187286377
    7. '=
' → logprob: -14.33916187286377
    8. '=len' → logprob: -14.46416187286377
    9. '＝' → logprob: -14.96416187286377
    10. '+=' → logprob: -15.71416187286377

Token 1343: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.31233713030815125
    2. 'B' → logprob: -1.6873371601104736
    3. 'pow' → logprob: -2.8123371601104736
    4. 'L' → logprob: -5.0623369216918945
    5. 'len' → logprob: -5.1873369216918945
    6. '(B' → logprob: -5.5623369216918945
    7. 'A' → logprob: -6.4373369216918945
    8. '(' → logprob: -6.5623369216918945
    9. 'max' → logprob: -6.9373369216918945
    10. '(pow' → logprob: -7.1873369216918945

Token 1344: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6503397822380066
    2. '10' → logprob: -0.9003397822380066
    3. 'i' → logprob: -3.2753398418426514
    4. 'max' → logprob: -4.150339603424072
    5. 'pow' → logprob: -4.900339603424072
    6. 'B' → logprob: -5.775339603424072
    7. 'int' → logprob: -5.900339603424072
    8. '(i' → logprob: -6.025339603424072
    9. 'A' → logprob: -7.525339603424072
    10. '(' → logprob: -8.02534008026123

Token 1345: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1346: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06359740346670151
    2. '10' → logprob: -3.6885974407196045
    3. 'len' → logprob: -4.188597202301025
    4. '9' → logprob: -4.313597202301025
    5. '(i' → logprob: -5.813597202301025
    6. 'int' → logprob: -6.063597202301025
    7. 'A' → logprob: -7.313597202301025
    8. '(' → logprob: -7.438597202301025
    9. 'pow' → logprob: -7.938597202301025
    10. 'B' → logprob: -8.063597679138184

Token 1347: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.026547132059931755
    2. 'i' → logprob: -4.026546955108643
    3. 'pow' → logprob: -6.151546955108643
    4. 'B' → logprob: -6.276546955108643
    5. '(i' → logprob: -6.526546955108643
    6. 'A' → logprob: -7.151546955108643
    7. '(' → logprob: -7.151546955108643
    8. '[i' → logprob: -7.776546955108643
    9. 'L' → logprob: -9.0265474319458
    10. '0' → logprob: -9.1515474319458

Token 1348: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.010702426545321941
    2. ' **' → logprob: -4.760702610015869
    3. 'i' → logprob: -7.260702610015869
    4. ')' → logprob: -8.010702133178711
    5. '^' → logprob: -8.135702133178711
    6. '[i' → logprob: -8.385702133178711
    7. '*i' → logprob: -9.135702133178711
    8. ' ' → logprob: -9.135702133178711
    9. '```' → logprob: -9.635702133178711
    10. ')**' → logprob: -9.885702133178711

Token 1349: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00038944309926591814
    2. '(i' → logprob: -7.875389575958252
    3. ' i' → logprob: -12.500389099121094
    4. '{i' → logprob: -13.250389099121094
    5. '(' → logprob: -13.375389099121094
    6. '   ' → logprob: -13.875389099121094
    7. ' (' → logprob: -14.625389099121094
    8. '(
' → logprob: -15.250389099121094
    9. ')i' → logprob: -15.500389099121094
    10. '	i' → logprob: -16.250389099121094

Token 1350: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47890421748161316
    2. ' -' → logprob: -0.9789042472839355
    3. ')' → logprob: -5.3539042472839355
    4. '#' → logprob: -10.978903770446777
    5. ')-' → logprob: -10.978903770446777
    6. '*' → logprob: -11.103903770446777
    7. '<|end|>' → logprob: -11.603903770446777
    8. ' ' → logprob: -12.603903770446777
    9. '+' → logprob: -12.853903770446777
    10. '-B' → logprob: -13.103903770446777

Token 1351: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009103872813284397
    2. 'B' → logprob: -5.884103775024414
    3. '(A' → logprob: -6.009103775024414
    4. ' A' → logprob: -6.134103775024414
    5. ' (' → logprob: -7.259103775024414
    6. '(B' → logprob: -7.884103775024414
    7. '((' → logprob: -8.134103775024414
    8. '(' → logprob: -8.884103775024414
    9. 'L' → logprob: -9.884103775024414
    10. '(L' → logprob: -10.509103775024414

Token 1352: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004943170119076967
    2. ')//' → logprob: -5.504943370819092
    3. ' )' → logprob: -8.379942893981934
    4. '+' → logprob: -8.879942893981934
    5. ')>>' → logprob: -9.254942893981934
    6. '//' → logprob: -9.504942893981934
    7. ')>' → logprob: -10.004942893981934
    8. '-' → logprob: -10.129942893981934
    9. ')>=' → logprob: -10.504942893981934
    10. '   ' → logprob: -10.754942893981934

Token 1353: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.005455143749713898
    2. ' B' → logprob: -5.880455017089844
    3. '(B' → logprob: -6.505455017089844
    4. '(' → logprob: -8.130455017089844
    5. ' (' → logprob: -8.755455017089844
    6. '1' → logprob: -8.755455017089844
    7. 'L' → logprob: -9.005455017089844
    8. '(i' → logprob: -9.005455017089844
    9. 'M' → logprob: -9.630455017089844
    10. '0' → logprob: -9.755455017089844

Token 1354: '1' (ID: 16)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006750543136149645
    2. '(B' → logprob: -5.631750583648682
    3. ' B' → logprob: -6.006750583648682
    4. '((' → logprob: -8.756750106811523
    5. ' (' → logprob: -8.881750106811523
    6. '(' → logprob: -8.881750106811523
    7. '1' → logprob: -9.256750106811523
    8. ')' → logprob: -10.256750106811523
    9. 'L' → logprob: -10.506750106811523
    10. '(i' → logprob: -10.756750106811523

Token 1355: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02970859408378601
    2. ')//' → logprob: -3.7797086238861084
    3. '+' → logprob: -5.279708385467529
    4. ' +' → logprob: -7.404708385467529
    5. ' )' → logprob: -7.779708385467529
    6. '#' → logprob: -9.529708862304688
    7. '   ' → logprob: -9.529708862304688
    8. ')#' → logprob: -10.029708862304688
    9. '+B' → logprob: -10.404708862304688
    10. ')
' → logprob: -10.654708862304688

Token 1356: ' //' (ID: 602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23063433170318604
    2. ' if' → logprob: -2.8556342124938965
    3. '#' → logprob: -3.1056342124938965
    4. '<|end|>' → logprob: -3.7306342124938965
    5. 'if' → logprob: -3.8556342124938965
    6. '
' → logprob: -3.9806342124938965
    7. '//' → logprob: -4.6056342124938965
    8. '<|end|>' → logprob: -4.7306342124938965
    9. ')' → logprob: -5.1056342124938965
    10. ' //' → logprob: -5.2306342124938965

Token 1357: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -7.791440293658525e-05
    2. ' B' → logprob: -9.500078201293945
    3. 'L' → logprob: -12.875078201293945
    4. '   ' → logprob: -15.375078201293945
    5. '	B' → logprob: -16.250078201293945
    6. '
' → logprob: -17.625078201293945
    7. ' ' → logprob: -17.625078201293945
    8. '(B' → logprob: -17.750078201293945
    9. 'M' → logprob: -18.375078201293945
    10. 'b' → logprob: -19.375078201293945

Token 1358: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09841606765985489
    2. '
' → logprob: -3.2234160900115967
    3. '<|end|>' → logprob: -3.2234160900115967
    4. '    
' → logprob: -4.723415851593018
    5. 'n' → logprob: -6.473415851593018
    6. 'if' → logprob: -7.348415851593018
    7. ' if' → logprob: -7.473415851593018
    8. '```' → logprob: -7.598415851593018
    9. '<|end|>' → logprob: -8.098416328430176
    10. '  ' → logprob: -8.473416328430176

Token 1359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1847194880247116
    2. '
' → logprob: -2.1847195625305176
    3. '    
' → logprob: -3.6847195625305176
    4. '```' → logprob: -3.9347195625305176
    5. ' 
' → logprob: -6.309719562530518
    6. '<|end|>' → logprob: -6.434719562530518
    7. ' if' → logprob: -6.684719562530518
    8. ' ' → logprob: -7.059719562530518
    9. '  
' → logprob: -7.309719562530518
    10. 'if' → logprob: -7.309719562530518

Token 1360: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01669730804860592
    2. '
' → logprob: -5.141697406768799
    3. '    
' → logprob: -5.141697406768799
    4. ' if' → logprob: -6.641697406768799
    5. '<|end|>' → logprob: -7.391697406768799
    6. 'if' → logprob: -7.516697406768799
    7. ' 
' → logprob: -7.766697406768799
    8. 'part' → logprob: -8.14169692993164
    9. ' part' → logprob: -8.26669692993164
    10. '	part' → logprob: -8.39169692993164

Token 1361: ' Calcul' (ID: 57243)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07788291573524475
    2. 'if' → logprob: -2.827883005142212
    3. 'part' → logprob: -4.702882766723633
    4. 'u' → logprob: -5.202882766723633
    5. '#' → logprob: -7.327882766723633
    6. 'p' → logprob: -9.452882766723633
    7. 'l' → logprob: -9.702882766723633
    8. 'n' → logprob: -9.702882766723633
    9. '```' → logprob: -10.327882766723633
    10. 'h' → logprob: -10.452882766723633

Token 1362: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41671520471572876
    2. '   ' → logprob: -1.541715145111084
    3. ' =' → logprob: -2.791715145111084
    4. 'r' → logprob: -3.666715145111084
    5. 'de' → logprob: -4.166715145111084
    6. '(' → logprob: -4.541715145111084
    7. 'd' → logprob: -5.291715145111084
    8. 's' → logprob: -6.666715145111084
    9. ' de' → logprob: -6.666715145111084
    10. '(
' → logprob: -6.666715145111084

Token 1363: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002819851040840149
    2. 'u' → logprob: -7.002820014953613
    3. '   ' → logprob: -8.002820014953613
    4. 'l' → logprob: -8.252820014953613
    5. ' r' → logprob: -8.252820014953613
    6. 'min' → logprob: -8.627820014953613
    7. 'm' → logprob: -8.877820014953613
    8. 'len' → logprob: -9.377820014953613
    9. '10' → logprob: -9.377820014953613
    10. 'L' → logprob: -9.752820014953613

Token 1364: ''ind' (ID: 82245)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11621434986591339
    2. '   ' → logprob: -3.4912142753601074
    3. ' r' → logprob: -3.8662142753601074
    4. 'min' → logprob: -4.616214275360107
    5. 'n' → logprob: -4.741214275360107
    6. '=' → logprob: -5.241214275360107
    7. 'u' → logprob: -5.241214275360107
    8. ' =' → logprob: -5.366214275360107
    9. 'l' → logprob: -5.366214275360107
    10. ' ' → logprob: -6.116214275360107

Token 1365: 'ice' (ID: 603)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7861106395721436
    2. 'e' → logprob: -1.7861106395721436
    3. 't' → logprob: -2.2861106395721436
    4. 'f' → logprob: -2.6611106395721436
    5. ' =' → logprob: -3.1611106395721436
    6. 'x' → logprob: -3.2861106395721436
    7. 'ex' → logprob: -3.6611106395721436
    8. 'i' → logprob: -3.9111106395721436
    9. 'l' → logprob: -4.286110877990723
    10. 'b' → logprob: -4.286110877990723

Token 1366: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.020891373977065086
    2. ' r' → logprob: -4.145891189575195
    3. '   ' → logprob: -6.645891189575195
    4. 'l' → logprob: -6.895891189575195
    5. 'n' → logprob: -7.395891189575195
    6. 'u' → logprob: -7.395891189575195
    7. 'next' → logprob: -7.895891189575195
    8. '```' → logprob: -8.645891189575195
    9. ' =' → logprob: -9.020891189575195
    10. '=' → logprob: -9.270891189575195

Token 1367: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693388760089874
    2. '=' → logprob: -2.1269338130950928
    3. 's' → logprob: -13.501934051513672
    4. '	' → logprob: -13.876934051513672
    5. '   ' → logprob: -13.876934051513672
    6. '```' → logprob: -14.251934051513672
    7. ')' → logprob: -15.251934051513672
    8. '=
' → logprob: -15.376934051513672
    9. ' ' → logprob: -15.501934051513672
    10. '=int' → logprob: -15.626934051513672

Token 1368: 'dern' (ID: 19098)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09327327460050583
    2. '   ' → logprob: -3.718273162841797
    3. '(' → logprob: -3.843273162841797
    4. ' ' → logprob: -4.093273162841797
    5. 'min' → logprob: -5.093273162841797
    6. 'l' → logprob: -5.218273162841797
    7. '=' → logprob: -5.343273162841797
    8. ' (' → logprob: -5.843273162841797
    9. ' min' → logprob: -6.093273162841797
    10. ' =' → logprob: -6.718273162841797

Token 1369: 'ier' (ID: 905)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00978678185492754
    2. ' =' → logprob: -4.759786605834961
    3. 'r' → logprob: -7.259786605834961
    4. '   ' → logprob: -9.134786605834961
    5. '=r' → logprob: -9.134786605834961
    6. '```' → logprob: -9.634786605834961
    7. '=(' → logprob: -10.134786605834961
    8. ' r' → logprob: -10.509786605834961
    9. '       ' → logprob: -10.634786605834961
    10. 'e' → logprob: -11.134786605834961

Token 1370: ' numéro' (ID: 65036)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27462270855903625
    2. '=' → logprob: -1.6496226787567139
    3. '_' → logprob: -3.899622678756714
    4. '_num' → logprob: -4.524622917175293
    5. ' numéro' → logprob: -4.774622917175293
    6. 'l' → logprob: -6.399622917175293
    7. 'num' → logprob: -6.649622917175293
    8. '_number' → logprob: -7.274622917175293
    9. ')' → logprob: -7.399622917175293
    10. ' _' → logprob: -7.399622917175293

Token 1371: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04892025515437126
    2. ' =' → logprob: -3.048920154571533
    3. ')' → logprob: -9.048920631408691
    4. 's' → logprob: -10.423920631408691
    5. '   ' → logprob: -10.423920631408691
    6. '=l' → logprob: -10.423920631408691
    7. '=i' → logprob: -11.048920631408691
    8. 'r' → logprob: -11.173920631408691
    9. 'de' → logprob: -11.298920631408691
    10. 'à' → logprob: -11.298920631408691

Token 1372: ' bloc' (ID: 51218)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.04957594349980354
    2. ' bloc' → logprob: -3.9245760440826416
    3. 'block' → logprob: -4.2995758056640625
    4. 'bl' → logprob: -4.5495758056640625
    5. 'part' → logprob: -6.7995758056640625
    6. 'l' → logprob: -6.7995758056640625
    7. 'i' → logprob: -6.9245758056640625
    8. ' block' → logprob: -8.049575805664062
    9. '_bloc' → logprob: -8.174575805664062
    10. 'blo' → logprob: -8.549575805664062

Token 1373: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017958639189600945
    2. ' =' → logprob: -4.767958641052246
    3. ')' → logprob: -5.017958641052246
    4. '=i' → logprob: -6.267958641052246
    5. ' à' → logprob: -8.517958641052246
    6. ')=' → logprob: -9.017958641052246
    7. '```' → logprob: -9.142958641052246
    8. 'à' → logprob: -9.267958641052246
    9. '=l' → logprob: -10.017958641052246
    10. 'r' → logprob: -10.017958641052246

Token 1374: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2461217641830444
    2. 'i' → logprob: -1.8711217641830444
    3. ' i' → logprob: -2.621121883392334
    4. 'part' → logprob: -2.746121883392334
    5. ' ce' → logprob: -2.746121883392334
    6. 'l' → logprob: -2.871121883392334
    7. 'r' → logprob: -2.871121883392334
    8. ' laquelle' → logprob: -3.121121883392334
    9. ' cette' → logprob: -3.246121883392334
    10. 'ce' → logprob: -3.621121883392334

Token 1375: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11565785855054855
    2. ' +' → logprob: -2.3656578063964844
    3. '```' → logprob: -5.365657806396484
    4. '=' → logprob: -5.615657806396484
    5. 'n' → logprob: -6.115657806396484
    6. ' =' → logprob: -6.740657806396484
    7. ')' → logprob: -6.740657806396484
    8. ' i' → logprob: -8.115657806396484
    9. 'r' → logprob: -8.365657806396484
    10. ' plus' → logprob: -8.490657806396484

Token 1376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3263179063796997
    2. 'i' → logprob: -1.3263179063796997
    3. '+' → logprob: -4.57631778717041
    4. '```' → logprob: -6.82631778717041
    5. ' i' → logprob: -7.07631778717041
    6. '_i' → logprob: -8.45131778717041
    7. '(i' → logprob: -8.57631778717041
    8. ' ' → logprob: -9.70131778717041
    9. '``' → logprob: -10.07631778717041
    10. '`' → logprob: -10.20131778717041

Token 1377: ' chiffres' (ID: 105565)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.213139146566391
    2. '+' → logprob: -2.213139057159424
    3. '):
' → logprob: -3.213139057159424
    4. '=' → logprob: -4.713139057159424
    5. ' +' → logprob: -4.713139057159424
    6. ')
' → logprob: -4.963139057159424
    7. '```' → logprob: -5.588139057159424
    8. ' =' → logprob: -5.838139057159424
    9. ' )' → logprob: -5.963139057159424
    10. ')+' → logprob: -6.213139057159424

Token 1378: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18246906995773315
    2. '   ' → logprob: -1.932469129562378
    3. ')
' → logprob: -4.682468891143799
    4. ' =' → logprob: -4.932468891143799
    5. '=' → logprob: -5.557468891143799
    6. '):
' → logprob: -7.182468891143799
    7. '```' → logprob: -8.682469367980957
    8. '),' → logprob: -8.807469367980957
    9. '):' → logprob: -8.807469367980957
    10. ' )' → logprob: -8.807469367980957

Token 1379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44831863045692444
    2. 'r' → logprob: -1.073318600654602
    3. ' r' → logprob: -3.9483187198638916
    4. '	r' → logprob: -9.448318481445312
    5. '    ' → logprob: -10.573318481445312
    6. '       ' → logprob: -11.948318481445312
    7. ' ' → logprob: -12.198318481445312
    8. '  ' → logprob: -12.323318481445312
    9. '```' → logprob: -12.448318481445312
    10. '    
' → logprob: -12.948318481445312

Token 1380: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.21625298261642456
    2. '   ' → logprob: -1.8412530422210693
    3. ' r' → logprob: -3.3412530422210693
    4. '	r' → logprob: -8.216253280639648
    5. ' ' → logprob: -9.841253280639648
    6. '       ' → logprob: -10.466253280639648
    7. '           ' → logprob: -10.841253280639648
    8. '    ' → logprob: -10.966253280639648
    9. '#' → logprob: -11.341253280639648
    10. '  ' → logprob: -11.591253280639648

Token 1381: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408050298690796
    2. ' =' → logprob: -0.974080502986908
    3. ' ' → logprob: -13.849080085754395
    4. '	' → logprob: -14.224080085754395
    5. '   ' → logprob: -14.224080085754395
    6. '=int' → logprob: -14.724080085754395
    7. ')' → logprob: -15.349080085754395
    8. '=
' → logprob: -15.599080085754395
    9. '＝' → logprob: -15.724080085754395
    10. ' =
' → logprob: -16.72408103942871

Token 1382: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3973652422428131
    2. '1' → logprob: -2.1473653316497803
    3. '(' → logprob: -2.2723653316497803
    4. ' min' → logprob: -2.7723653316497803
    5. '(min' → logprob: -3.6473653316497803
    6. '10' → logprob: -4.522365093231201
    7. ' (' → logprob: -5.522365093231201
    8. ' ' → logprob: -5.772365093231201
    9. '   ' → logprob: -7.397365093231201
    10. 'L' → logprob: -9.14736557006836

Token 1383: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.42354264855384827
    2. 'min' → logprob: -1.2985426187515259
    3. '(' → logprob: -2.7985427379608154
    4. '(min' → logprob: -4.673542499542236
    5. '1' → logprob: -6.673542499542236
    6. ' min' → logprob: -7.798542499542236
    7. ' ' → logprob: -9.048542976379395
    8. '   ' → logprob: -9.548542976379395
    9. ' (' → logprob: -9.798542976379395
    10. '(
' → logprob: -10.548542976379395

Token 1384: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4339044392108917
    2. ' **' → logprob: -1.6839044094085693
    3. 'i' → logprob: -2.0589044094085693
    4. '^' → logprob: -3.9339044094085693
    5. '[i' → logprob: -4.308904647827148
    6. '(i' → logprob: -6.308904647827148
    7. ' i' → logprob: -6.808904647827148
    8. '```' → logprob: -6.933904647827148
    9. ' ^' → logprob: -7.183904647827148
    10. ' ' → logprob: -7.683904647827148

Token 1385: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2819751501083374
    2. 'i' → logprob: -1.4069751501083374
    3. '(' → logprob: -7.656975269317627
    4. ' (' → logprob: -8.281974792480469
    5. ' i' → logprob: -9.906974792480469
    6. '{i' → logprob: -11.156974792480469
    7. '   ' → logprob: -11.281974792480469
    8. '(
' → logprob: -11.406974792480469
    9. '_i' → logprob: -13.031974792480469
    10. '       ' → logprob: -13.531974792480469

Token 1386: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0014924844726920128
    2. 'i' → logprob: -6.876492500305176
    3. '(' → logprob: -8.001492500305176
    4. ' (' → logprob: -9.126492500305176
    5. '(
' → logprob: -11.751492500305176
    6. '{i' → logprob: -12.376492500305176
    7. '   ' → logprob: -12.876492500305176
    8. '
' → logprob: -15.251492500305176
    9. ' i' → logprob: -15.376492500305176
    10. '[i' → logprob: -15.751492500305176

Token 1387: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30159470438957214
    2. 'i' → logprob: -2.3015947341918945
    3. '(i' → logprob: -2.8015947341918945
    4. ')-' → logprob: -3.0515947341918945
    5. '(' → logprob: -4.4265947341918945
    6. ' (' → logprob: -4.5515947341918945
    7. '-' → logprob: -4.8015947341918945
    8. ' ' → logprob: -5.5515947341918945
    9. '   ' → logprob: -5.5515947341918945
    10. ' -' → logprob: -5.5515947341918945

Token 1388: ' ' (ID: 220)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.010054253041744232
    2. 'i' → logprob: -5.135054111480713
    3. ' (' → logprob: -5.635054111480713
    4. '(' → logprob: -8.010054588317871
    5. '1' → logprob: -8.760054588317871
    6. '(
' → logprob: -10.635054588317871
    7. '   ' → logprob: -11.385054588317871
    8. ' i' → logprob: -11.885054588317871
    9. '(l' → logprob: -12.760054588317871
    10. '((' → logprob: -12.760054588317871

Token 1389: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.24756713211536407
    2. 'i' → logprob: -1.9975671768188477
    3. '(' → logprob: -2.6225671768188477
    4. ' (' → logprob: -5.247567176818848
    5. '1' → logprob: -6.122567176818848
    6. '(r' → logprob: -6.747567176818848
    7. '(l' → logprob: -7.497567176818848
    8. ' i' → logprob: -8.247567176818848
    9. '```' → logprob: -8.247567176818848
    10. 'r' → logprob: -8.497567176818848

Token 1390: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4665645956993103
    2. ')' → logprob: -1.466564655303955
    3. '-' → logprob: -1.966564655303955
    4. ')-' → logprob: -7.091564655303955
    5. ' ' → logprob: -7.341564655303955
    6. '   ' → logprob: -8.091564178466797
    7. ' )' → logprob: -8.341564178466797
    8. '#' → logprob: -10.091564178466797
    9. '```' → logprob: -10.216564178466797
    10. '  ' → logprob: -11.216564178466797

Token 1391: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5260470509529114
    2. '-' → logprob: -0.9010470509529114
    3. ')' → logprob: -5.901047229766846
    4. ')-' → logprob: -9.401046752929688
    5. '   ' → logprob: -10.026046752929688
    6. ' ' → logprob: -10.776046752929688
    7. 'r' → logprob: -11.776046752929688
    8. '```' → logprob: -12.026046752929688
    9. ' )' → logprob: -12.401046752929688
    10. '#' → logprob: -12.776046752929688

Token 1392: ' A' (ID: 355)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11827222257852554
    2. 'A' → logprob: -2.243272304534912
    3. 'B' → logprob: -5.243272304534912
    4. ' A' → logprob: -9.618271827697754
    5. ' ' → logprob: -10.243271827697754
    6. '2' → logprob: -10.993271827697754
    7. '   ' → logprob: -11.493271827697754
    8. '(A' → logprob: -12.493271827697754
    9. ' B' → logprob: -12.618271827697754
    10. '#' → logprob: -12.618271827697754

Token 1393: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47499987483024597
    2. ' -' → logprob: -0.9749999046325684
    3. ')' → logprob: -7.224999904632568
    4. '   ' → logprob: -9.34999942779541
    5. '       ' → logprob: -10.09999942779541
    6. '           ' → logprob: -10.72499942779541
    7. ' ' → logprob: -11.22499942779541
    8. '          ' → logprob: -12.22499942779541
    9. '  ' → logprob: -12.84999942779541
    10. '    ' → logprob: -12.97499942779541

Token 1394: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000556012790184468
    2. ' ' → logprob: -8.250555992126465
    3. 'B' → logprob: -8.250555992126465
    4. ' B' → logprob: -10.375555992126465
    5. '   ' → logprob: -14.375555992126465
    6. ')' → logprob: -14.500555992126465
    7. '	B' → logprob: -15.500555992126465
    8. '2' → logprob: -15.625555992126465
    9. '           ' → logprob: -15.875555992126465
    10. '       ' → logprob: -16.00055694580078

Token 1395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005597044946625829
    2. 'B' → logprob: -7.5005598068237305
    3. ' ' → logprob: -12.12555980682373
    4. ' B' → logprob: -14.25055980682373
    5. '2' → logprob: -15.50055980682373
    6. 'b' → logprob: -16.125558853149414
    7. '   ' → logprob: -16.875558853149414
    8. '>B' → logprob: -16.875558853149414
    9. '	B' → logprob: -16.875558853149414
    10. ')' → logprob: -17.063058853149414

Token 1396: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019758609123528004
    2. ')//' → logprob: -6.376976013183594
    3. ' )' → logprob: -9.376976013183594
    4. '   ' → logprob: -9.376976013183594
    5. '           ' → logprob: -10.501976013183594
    6. '       ' → logprob: -10.501976013183594
    7. '-' → logprob: -10.876976013183594
    8. ')/' → logprob: -12.001976013183594
    9. '+' → logprob: -12.501976013183594
    10. '#' → logprob: -12.751976013183594

Token 1397: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6482693552970886
    2. '//' → logprob: -2.2732694149017334
    3. '#' → logprob: -2.3982694149017334
    4. '   ' → logprob: -2.5232694149017334
    5. ' //' → logprob: -2.6482694149017334
    6. '       ' → logprob: -3.2732694149017334
    7. '           ' → logprob: -3.8982694149017334
    8. '<|end|>' → logprob: -3.8982694149017334
    9. '```' → logprob: -4.398269176483154
    10. '<|end|>' → logprob: -4.773269176483154

Token 1398: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00015908108616713434
    2. ' B' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.62515926361084
    4. '	B' → logprob: -17.250158309936523
    5. '       ' → logprob: -17.750158309936523
    6. '```' → logprob: -17.875158309936523
    7. '    ' → logprob: -19.000158309936523
    8. '>B' → logprob: -19.125158309936523
    9. '           ' → logprob: -19.625158309936523
    10. ' ' → logprob: -20.000158309936523

Token 1399: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23815041780471802
    2. '<|end|>' → logprob: -1.6131503582000732
    3. '
' → logprob: -4.738150596618652
    4. '    
' → logprob: -6.863150596618652
    5. ' if' → logprob: -7.488150596618652
    6. '```' → logprob: -7.613150596618652
    7. '<|end|>' → logprob: -7.613150596618652
    8. ')' → logprob: -8.113150596618652
    9. '  ' → logprob: -8.863150596618652
    10. '+' → logprob: -8.988150596618652

Token 1400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0352860763669014
    2. '```' → logprob: -3.7852861881256104
    3. '<|end|>' → logprob: -5.160285949707031
    4. ' if' → logprob: -5.910285949707031
    5. '    
' → logprob: -6.785285949707031
    6. '
' → logprob: -6.910285949707031
    7. 'if' → logprob: -7.160285949707031
    8. '``' → logprob: -8.410285949707031
    9. 'part' → logprob: -9.910285949707031
    10. ' ' → logprob: -10.160285949707031

Token 1401: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06256582587957382
    2. ' if' → logprob: -3.937565803527832
    3. '```' → logprob: -3.937565803527832
    4. 'part' → logprob: -4.687565803527832
    5. 'if' → logprob: -4.937565803527832
    6. ' part' → logprob: -6.687565803527832
    7. '<|end|>' → logprob: -6.937565803527832
    8. '	part' → logprob: -7.312565803527832
    9. '    
' → logprob: -7.562565803527832
    10. ',' → logprob: -7.937565803527832

Token 1402: ' Correction' (ID: 134873)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0024805311113595963
    2. 'if' → logprob: -6.002480506896973
    3. ' part' → logprob: -13.502480506896973
    4. '   ' → logprob: -13.627480506896973
    5. '#' → logprob: -14.127480506896973
    6. '```' → logprob: -14.252480506896973
    7. '
' → logprob: -15.127480506896973
    8. ' if' → logprob: -15.752480506896973
    9. '(part' → logprob: -16.12748146057129
    10. '	part' → logprob: -16.12748146057129

Token 1403: ' pour' (ID: 1930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016414381563663483
    2. ' if' → logprob: -4.641414165496826
    3. '   ' → logprob: -5.391414165496826
    4. 'for' → logprob: -7.016414165496826
    5. '```' → logprob: -7.016414165496826
    6. 'r' → logprob: -9.141414642333984
    7. '#' → logprob: -9.641414642333984
    8. 'pour' → logprob: -10.516414642333984
    9. '``' → logprob: -10.641414642333984
    10. '       ' → logprob: -11.016414642333984

Token 1404: ' que' (ID: 661)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18699516355991364
    2. 'if' → logprob: -2.436995267868042
    3. 'l' → logprob: -3.061995267868042
    4. ' if' → logprob: -4.686995029449463
    5. 'part' → logprob: -4.811995029449463
    6. ' r' → logprob: -4.936995029449463
    7. '   ' → logprob: -5.311995029449463
    8. '```' → logprob: -5.811995029449463
    9. ' l' → logprob: -6.561995029449463
    10. '#' → logprob: -6.936995029449463

Token 1405: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0163600891828537
    2. 'l' → logprob: -4.516360282897949
    3. 'part' → logprob: -5.891360282897949
    4. 'if' → logprob: -6.766360282897949
    5. ' r' → logprob: -7.016360282897949
    6. '   ' → logprob: -8.14136028289795
    7. ' if' → logprob: -9.26636028289795
    8. ' l' → logprob: -10.01636028289795
    9. ' part' → logprob: -10.64136028289795
    10. 'max' → logprob: -11.01636028289795

Token 1406: ' ne' (ID: 453)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.616965115070343
    2. ' =' → logprob: -1.2419650554656982
    3. '<=' → logprob: -2.9919650554656982
    4. 'if' → logprob: -3.2419650554656982
    5. '.append' → logprob: -3.6169650554656982
    6. '=max' → logprob: -4.491965293884277
    7. '   ' → logprob: -4.991965293884277
    8. '>' → logprob: -5.241965293884277
    9. '+=' → logprob: -5.491965293884277
    10. ' <=' → logprob: -5.491965293884277

Token 1407: ' soit' (ID: 17293)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1732279658317566
    2. '=max' → logprob: -1.9232280254364014
    3. '=min' → logprob: -5.048227787017822
    4. 'max' → logprob: -6.173227787017822
    5. ' =' → logprob: -6.423227787017822
    6. 'if' → logprob: -6.673227787017822
    7. '<' → logprob: -7.423227787017822
    8. '=l' → logprob: -7.548227787017822
    9. '>' → logprob: -8.67322826385498
    10. '+=' → logprob: -10.29822826385498

Token 1408: ' pas' (ID: 2173)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005573694594204426
    2. 'min' → logprob: -6.130573749542236
    3. ' max' → logprob: -6.255573749542236
    4. 'l' → logprob: -7.505573749542236
    5. 'part' → logprob: -7.630573749542236
    6. '0' → logprob: -8.005573272705078
    7. '>' → logprob: -10.505573272705078
    8. '(max' → logprob: -10.755573272705078
    9. '=max' → logprob: -11.380573272705078
    10. 'r' → logprob: -11.880573272705078

Token 1409: ' en' (ID: 469)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12295554578304291
    2. 'l' → logprob: -3.372955560684204
    3. 'min' → logprob: -3.372955560684204
    4. 'part' → logprob: -3.747955560684204
    5. 'less' → logprob: -4.622955322265625
    6. 'moins' → logprob: -5.872955322265625
    7. '>' → logprob: -6.122955322265625
    8. 'max' → logprob: -6.122955322265625
    9. '<
' → logprob: -6.372955322265625
    10. 'if' → logprob: -6.747955322265625

Token 1410: ' dessous' (ID: 120954)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.13583076000213623
    2. 'moins' → logprob: -4.010830879211426
    3. '```' → logprob: -4.135830879211426
    4. 'de' → logprob: -4.510830879211426
    5. ' part' → logprob: -4.510830879211426
    6. 'min' → logprob: -4.510830879211426
    7. 'range' → logprob: -4.885830879211426
    8. 'b' → logprob: -4.885830879211426
    9. 'max' → logprob: -5.385830879211426
    10. 'less' → logprob: -5.510830879211426

Token 1411: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.35743656754493713
    2. 'l' → logprob: -1.3574365377426147
    3. '(' → logprob: -4.857436656951904
    4. '0' → logprob: -4.982436656951904
    5. '(max' → logprob: -4.982436656951904
    6. '```' → logprob: -4.982436656951904
    7. '   ' → logprob: -5.732436656951904
    8. ' max' → logprob: -5.732436656951904
    9. 'if' → logprob: -5.857436656951904
    10. '=' → logprob: -6.732436656951904

Token 1412: ' ' (ID: 220)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4377079904079437
    2. 'l' → logprob: -1.3127080202102661
    3. '0' → logprob: -2.6877079010009766
    4. '1' → logprob: -4.187707901000977
    5. 'part' → logprob: -6.937707901000977
    6. ' L' → logprob: -8.187707901000977
    7. ' l' → logprob: -8.562707901000977
    8. 'max' → logprob: -8.562707901000977
    9. 'i' → logprob: -8.937707901000977
    10. 'start' → logprob: -9.062707901000977

Token 1413: '0' (ID: 15)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1976862996816635
    2. 'l' → logprob: -2.572686195373535
    3. '0' → logprob: -2.822686195373535
    4. 'L' → logprob: -3.197686195373535
    5. '1' → logprob: -6.697686195373535
    6. 'part' → logprob: -6.822686195373535
    7. 'A' → logprob: -8.447686195373535
    8. ' start' → logprob: -9.822686195373535
    9. 'max' → logprob: -9.822686195373535
    10. '(start' → logprob: -10.822686195373535

Token 1414: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13886746764183044
    2. '   ' → logprob: -2.6388673782348633
    3. 'l' → logprob: -3.3888673782348633
    4. ' if' → logprob: -3.7638673782348633
    5. '```' → logprob: -7.513867378234863
    6. '	if' → logprob: -7.763867378234863
    7. ' l' → logprob: -8.638867378234863
    8. '	l' → logprob: -10.013867378234863
    9. '``' → logprob: -10.388867378234863
    10. ',' → logprob: -11.013867378234863

Token 1415: ' grâce' (ID: 31589)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3306176960468292
    2. 'if' → logprob: -1.3306176662445068
    3. ' if' → logprob: -4.205617904663086
    4. 'l' → logprob: -6.205617904663086
    5. '```' → logprob: -8.955617904663086
    6. ' l' → logprob: -9.455617904663086
    7. '	if' → logprob: -9.830617904663086
    8. '	l' → logprob: -11.830617904663086
    9. '       ' → logprob: -12.205617904663086
    10. '``' → logprob: -13.830617904663086

Token 1416: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4353756308555603
    2. 'max' → logprob: -1.810375690460205
    3. '(max' → logprob: -3.060375690460205
    4. ' max' → logprob: -3.310375690460205
    5. 'if' → logprob: -3.310375690460205
    6. 'à' → logprob: -3.310375690460205
    7. ' à' → logprob: -3.685375690460205
    8. ' if' → logprob: -5.810375690460205
    9. '```' → logprob: -6.310375690460205
    10. '(' → logprob: -7.185375690460205

Token 1417: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06397520750761032
    2. 'max' → logprob: -2.8139750957489014
    3. ' l' → logprob: -6.5639753341674805
    4. ' max' → logprob: -8.31397533416748
    5. '```' → logprob: -8.56397533416748
    6. 'if' → logprob: -9.68897533416748
    7. '   ' → logprob: -9.81397533416748
    8. 'min' → logprob: -11.31397533416748
    9. '0' → logprob: -11.43897533416748
    10. '``' → logprob: -12.06397533416748

Token 1418: ' fonction' (ID: 17610)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11588475853204727
    2. 'max' → logprob: -2.240884780883789
    3. '```' → logprob: -6.490884780883789
    4. 'if' → logprob: -7.365884780883789
    5. ' l' → logprob: -7.615884780883789
    6. ' max' → logprob: -8.240884780883789
    7. '   ' → logprob: -10.115884780883789
    8. '``' → logprob: -10.240884780883789
    9. '
' → logprob: -10.990884780883789
    10. 'min' → logprob: -11.240884780883789

Token 1419: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00011367550177965313
    2. ' max' → logprob: -9.875113487243652
    3. '```' → logprob: -10.250113487243652
    4. 'min' → logprob: -11.375113487243652
    5. '
' → logprob: -11.625113487243652
    6. '[max' → logprob: -12.500113487243652
    7. '`' → logprob: -13.750113487243652
    8. '=max' → logprob: -14.625113487243652
    9. '(max' → logprob: -14.750113487243652
    10. '	max' → logprob: -15.125113487243652

Token 1420: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6817707419395447
    2. '(l' → logprob: -0.8067707419395447
    3. '(max' → logprob: -3.5567708015441895
    4. '   ' → logprob: -5.1817708015441895
    5. '(
' → logprob: -5.1817708015441895
    6. '```' → logprob: -5.3067708015441895
    7. '(part' → logprob: -6.9317708015441895
    8. 'l' → logprob: -7.6817708015441895
    9. 'max' → logprob: -7.9317708015441895
    10. '=' → logprob: -8.181770324707031

Token 1421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10508555918931961
    2. 'l' → logprob: -2.855085611343384
    3. ' l' → logprob: -3.230085611343384
    4. '```' → logprob: -6.480085372924805
    5. '       ' → logprob: -7.230085372924805
    6. ' part' → logprob: -9.480085372924805
    7. '``' → logprob: -9.730085372924805
    8. '           ' → logprob: -10.105085372924805
    9. ' ' → logprob: -10.230085372924805
    10. '	l' → logprob: -10.355085372924805

Token 1422: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24043568968772888
    2. ' l' → logprob: -2.2404356002807617
    3. 'l' (adapté à ' l') → logprob: -2.3654356002807617
    4. '       ' → logprob: -5.115435600280762
    5. '```' → logprob: -5.240435600280762
    6. ' part' → logprob: -6.490435600280762
    7. '           ' → logprob: -8.115435600280762
    8. 'part' → logprob: -9.115435600280762
    9. ' ' → logprob: -9.865435600280762
    10. '``' → logprob: -10.240435600280762

Token 1423: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008319015032611787
    2. ' =' → logprob: -7.6258320808410645
    3. '=max' → logprob: -8.125831604003906
    4. '=l' → logprob: -10.750831604003906
    5. '.append' → logprob: -11.500831604003906
    6. 'max' → logprob: -12.000831604003906
    7. '   ' → logprob: -12.500831604003906
    8. ',' → logprob: -12.750831604003906
    9. '=
' → logprob: -14.000831604003906
    10. 'l' → logprob: -14.250831604003906

Token 1424: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011383073404431343
    2. ' max' → logprob: -4.511383056640625
    3. '0' → logprob: -8.011383056640625
    4. ' ' → logprob: -14.011383056640625
    5. '(max' → logprob: -14.011383056640625
    6. '   ' → logprob: -14.261383056640625
    7. '	max' → logprob: -14.386383056640625
    8. '
' → logprob: -15.261383056640625
    9. 'min' → logprob: -16.011383056640625
    10. '1' → logprob: -16.136383056640625

Token 1425: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741290807723999
    2. '(l' → logprob: -0.9741290807723999
    3. '(
' → logprob: -9.974128723144531
    4. '0' → logprob: -12.474128723144531
    5. 'l' → logprob: -14.474128723144531
    6. '(L' → logprob: -14.724128723144531
    7. ' (' → logprob: -14.849128723144531
    8. '((' → logprob: -16.59912872314453
    9. '/l' → logprob: -17.22412872314453
    10. ',l' → logprob: -17.34912872314453

Token 1426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2166194915771484
    2. '(l' → logprob: -1.2166194915771484
    3. 'l' → logprob: -1.5916194915771484
    4. '(' → logprob: -1.5916194915771484
    5. '1' → logprob: -8.091619491577148
    6. '(
' → logprob: -10.591619491577148
    7. ' l' → logprob: -12.216619491577148
    8. '	l' → logprob: -12.841619491577148
    9. '[l' → logprob: -13.341619491577148
    10. ',l' → logprob: -13.466619491577148

Token 1427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1440705507993698
    2. ',l' → logprob: -2.019070625305176
    3. ' ,' → logprob: -7.019070625305176
    4. '(l' → logprob: -8.644070625305176
    5. '(' → logprob: -9.019070625305176
    6. ',
' → logprob: -9.019070625305176
    7. 'l' → logprob: -10.144070625305176
    8. '   ' → logprob: -11.394070625305176
    9. ')' → logprob: -12.269070625305176
    10. ',(' → logprob: -12.519070625305176

Token 1428: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.943783253314905e-05
    2. ' l' → logprob: -9.875059127807617
    3. '   ' → logprob: -12.000059127807617
    4. '	l' → logprob: -14.250059127807617
    5. '       ' → logprob: -14.875059127807617
    6. '           ' → logprob: -15.625059127807617
    7. '  ' → logprob: -16.000059127807617
    8. ')' → logprob: -16.250059127807617
    9. ' ' → logprob: -16.500059127807617
    10. '
' → logprob: -16.625059127807617

Token 1429: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006944591179490089
    2. '<|end|>' → logprob: -5.88194465637207
    3. '   ' → logprob: -6.25694465637207
    4. ',' → logprob: -6.50694465637207
    5. ' )' → logprob: -7.88194465637207
    6. ')
' → logprob: -8.50694465637207
    7. '<|end|>' → logprob: -9.75694465637207
    8. '),' → logprob: -10.75694465637207
    9. ' ,' → logprob: -11.13194465637207
    10. '  ' → logprob: -11.63194465637207

Token 1430: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012833021173719317
    2. '```' → logprob: -9.625128746032715
    3. 'r' → logprob: -10.000128746032715
    4. '<|end|>' → logprob: -12.000128746032715
    5. '       ' → logprob: -12.750128746032715
    6. '	r' → logprob: -13.125128746032715
    7. '    
' → logprob: -13.125128746032715
    8. ' r' → logprob: -13.625128746032715
    9. '   ' → logprob: -14.250128746032715
    10. '\t' → logprob: -14.500128746032715

Token 1431: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005415892228484154
    2. '```' → logprob: -6.130415916442871
    3. 'r' → logprob: -6.255415916442871
    4. '	r' → logprob: -7.880415916442871
    5. '    
' → logprob: -8.630415916442871
    6. '
' → logprob: -9.005415916442871
    7. ' r' → logprob: -9.130415916442871
    8. '\t' → logprob: -9.130415916442871
    9. '       ' → logprob: -9.255415916442871
    10. ' ' → logprob: -9.505415916442871

Token 1432: ' Correction' (ID: 134873)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006414268864318728
    2. ' r' → logprob: -7.750641345977783
    3. '   ' → logprob: -8.500641822814941
    4. 'part' → logprob: -13.000641822814941
    5. 'if' → logprob: -13.375641822814941
    6. '
' → logprob: -13.375641822814941
    7. '#' → logprob: -13.875641822814941
    8. '```' → logprob: -15.125641822814941
    9. '    
' → logprob: -15.500641822814941
    10. ' if' → logprob: -15.750641822814941

Token 1433: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020673971623182297
    2. ' =' → logprob: -4.020673751831055
    3. '=r' → logprob: -6.770673751831055
    4. '   ' → logprob: -7.145673751831055
    5. ',' → logprob: -7.645673751831055
    6. 'r' → logprob: -10.395673751831055
    7. '=l' → logprob: -10.520673751831055
    8. ',r' → logprob: -10.895673751831055
    9. '=max' → logprob: -12.020673751831055
    10. '=
' → logprob: -12.520673751831055

Token 1434: ' que' (ID: 661)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0029151919297873974
    2. 'l' → logprob: -6.377915382385254
    3. ' r' → logprob: -6.752915382385254
    4. 'min' → logprob: -10.752915382385254
    5. ' l' → logprob: -11.502915382385254
    6. '```' → logprob: -11.752915382385254
    7. '   ' → logprob: -12.752915382385254
    8. 'max' → logprob: -14.252915382385254
    9. '``' → logprob: -14.752915382385254
    10. '
' → logprob: -15.252915382385254

Token 1435: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003195654833689332
    2. ' r' → logprob: -5.753195762634277
    3. 'l' → logprob: -11.003195762634277
    4. '```' → logprob: -14.503195762634277
    5. '   ' → logprob: -14.753195762634277
    6. ' l' → logprob: -15.878195762634277
    7. '	r' → logprob: -16.75319480895996
    8. 'part' → logprob: -17.25319480895996
    9. ' ' → logprob: -17.50319480895996
    10. '(r' → logprob: -17.75319480895996

Token 1436: ' ne' (ID: 453)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001714093261398375
    2. ' =' → logprob: -6.37671422958374
    3. '=max' → logprob: -11.376713752746582
    4. 'max' → logprob: -15.626713752746582
    5. '=
' → logprob: -15.751713752746582
    6. '=min' → logprob: -17.1267147064209
    7. '=r' → logprob: -17.6267147064209
    8. '=l' → logprob: -17.7517147064209
    9. '+=' → logprob: -18.2517147064209
    10. '<' → logprob: -19.3767147064209

Token 1437: ' dépasse' (ID: 165701)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06874289363622665
    2. '=max' → logprob: -3.1937429904937744
    3. 'max' → logprob: -3.6937429904937744
    4. '=min' → logprob: -8.443742752075195
    5. '<=' → logprob: -9.068742752075195
    6. ' =' → logprob: -9.193742752075195
    7. '=r' → logprob: -10.443742752075195
    8. '<' → logprob: -10.568742752075195
    9. '=int' → logprob: -11.568742752075195
    10. ' max' → logprob: -11.943742752075195

Token 1438: ' pas' (ID: 2173)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6543863415718079
    2. '0' → logprob: -1.904386281967163
    3. 'l' → logprob: -1.904386281967163
    4. 'r' → logprob: -2.779386281967163
    5. 'max' → logprob: -2.904386281967163
    6. 'min' → logprob: -3.154386281967163
    7. ',' → logprob: -5.029386520385742
    8. '(L' → logprob: -5.404386520385742
    9. 'M' → logprob: -5.529386520385742
    10. ' L' → logprob: -6.029386520385742

Token 1439: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0013474960578605533
    2. ' L' → logprob: -7.126347541809082
    3. 'min' → logprob: -8.001347541809082
    4. 'M' → logprob: -9.251347541809082
    5. '(L' → logprob: -9.751347541809082
    6. 'max' → logprob: -10.251347541809082
    7. ' min' → logprob: -12.876347541809082
    8. 'l' → logprob: -13.251347541809082
    9. '   ' → logprob: -13.251347541809082
    10. 'r' → logprob: -13.251347541809082

Token 1440: '-' (ID: 12)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0044588432647287846
    2. ' =' → logprob: -5.504458904266357
    3. ',' → logprob: -8.5044584274292
    4. '=max' → logprob: -9.1294584274292
    5. '   ' → logprob: -10.5044584274292
    6. '=
' → logprob: -11.0044584274292
    7. 'max' → logprob: -11.2544584274292
    8. '(max' → logprob: -11.7544584274292
    9. ')' → logprob: -13.8794584274292
    10. '<|end|>' → logprob: -14.2544584274292

Token 1441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -16.250009536743164
    4. '   ' → logprob: -16.875009536743164
    5. '```' → logprob: -18.250009536743164
    6. '
' → logprob: -18.625009536743164
    7. 'r' → logprob: -19.500009536743164
    8. ' ' → logprob: -19.875009536743164
    9. 'L' → logprob: -20.750009536743164
    10. ')' → logprob: -20.875009536743164

Token 1442: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11210162192583084
    2. ' =' → logprob: -2.3621015548706055
    3. '   ' → logprob: -5.6121015548706055
    4. ',' → logprob: -5.6121015548706055
    5. '=r' → logprob: -6.2371015548706055
    6. '```' → logprob: -6.8621015548706055
    7. 'r' → logprob: -7.6121015548706055
    8. '=max' → logprob: -7.7371015548706055
    9. '=l' → logprob: -8.862101554870605
    10. '=
' → logprob: -9.112101554870605

Token 1443: ' grâce' (ID: 31589)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18039795756340027
    2. ' r' → logprob: -1.8053979873657227
    3. ' min' → logprob: -8.055397987365723
    4. 'min' → logprob: -8.430397987365723
    5. 'max' → logprob: -9.430397987365723
    6. ' max' → logprob: -10.930397987365723
    7. 'l' → logprob: -12.055397987365723
    8. ' l' → logprob: -12.305397987365723
    9. '   ' → logprob: -13.180397987365723
    10. '=' → logprob: -13.305397987365723

Token 1444: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11631409823894501
    2. 'max' → logprob: -3.616314172744751
    3. '(r' → logprob: -3.741314172744751
    4. '   ' → logprob: -3.866314172744751
    5. '(
' → logprob: -4.366313934326172
    6. 'r' → logprob: -4.616313934326172
    7. '(max' → logprob: -5.116313934326172
    8. '=' → logprob: -5.866313934326172
    9. ')' → logprob: -6.366313934326172
    10. '```' → logprob: -6.366313934326172

Token 1445: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12917013466358185
    2. 'max' → logprob: -2.1291701793670654
    3. ' min' → logprob: -6.129169940948486
    4. ' max' → logprob: -9.879170417785645
    5. 'r' → logprob: -12.129170417785645
    6. 'L' → logprob: -13.254170417785645
    7. '(min' → logprob: -13.629170417785645
    8. '=min' → logprob: -14.004170417785645
    9. '(max' → logprob: -15.629170417785645
    10. 'l' → logprob: -15.629170417785645

Token 1446: ' fonction' (ID: 17610)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.47429290413856506
    2. 'min' → logprob: -0.9742928743362427
    3. ' min' → logprob: -8.724292755126953
    4. ' max' → logprob: -9.849292755126953
    5. '=max' → logprob: -15.224292755126953
    6. '=min' → logprob: -15.599292755126953
    7. '
' → logprob: -16.474292755126953
    8. '(max' → logprob: -17.724292755126953
    9. '```' → logprob: -17.849292755126953
    10. '(min' → logprob: -18.224292755126953

Token 1447: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20148895680904388
    2. 'max' → logprob: -1.701488971710205
    3. ' min' → logprob: -10.076488494873047
    4. 'r' → logprob: -10.451488494873047
    5. ' max' → logprob: -13.076488494873047
    6. '=min' → logprob: -13.451488494873047
    7. 'L' → logprob: -14.576488494873047
    8. '(min' → logprob: -15.201488494873047
    9. '=max' → logprob: -15.826488494873047
    10. '```' → logprob: -16.576488494873047

Token 1448: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2967073917388916
    2. '(r' → logprob: -1.4217073917388916
    3. '(max' → logprob: -4.5467071533203125
    4. '(
' → logprob: -5.5467071533203125
    5. '```' → logprob: -8.171707153320312
    6. '   ' → logprob: -8.546707153320312
    7. '(L' → logprob: -8.921707153320312
    8. 'max' → logprob: -9.671707153320312
    9. ' (' → logprob: -9.921707153320312
    10. '(l' → logprob: -9.921707153320312

Token 1449: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.33519434928894043
    2. 'r' → logprob: -1.5851943492889404
    3. '   ' → logprob: -3.7101943492889404
    4. '(max' → logprob: -3.9601943492889404
    5. '(r' → logprob: -4.3351945877075195
    6. ' max' → logprob: -4.8351945877075195
    7. ' r' → logprob: -4.9601945877075195
    8. '```' → logprob: -5.8351945877075195
    9. 'min' → logprob: -6.0851945877075195
    10. '(' → logprob: -6.5851945877075195

Token 1450: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0017897785874083638
    2. ' r' → logprob: -6.376789569854736
    3. '   ' → logprob: -9.376790046691895
    4. '```' → logprob: -13.126790046691895
    5. '	r' → logprob: -14.501790046691895
    6. '       ' → logprob: -16.126789093017578
    7. '``' → logprob: -16.626789093017578
    8. ' ' → logprob: -16.876789093017578
    9. '  ' → logprob: -17.001789093017578
    10. '    
' → logprob: -17.251789093017578

Token 1451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04365465044975281
    2. '=max' → logprob: -3.168654680252075
    3. '=min' → logprob: -8.043654441833496
    4. ' =' → logprob: -8.043654441833496
    5. '=
' → logprob: -11.918654441833496
    6. '=r' → logprob: -13.168654441833496
    7. '(max' → logprob: -14.043654441833496
    8. 'max' → logprob: -14.293654441833496
    9. '[max' → logprob: -14.793654441833496
    10. ',max' → logprob: -15.043654441833496

Token 1452: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10244347900152206
    2. 'L' → logprob: -2.6024434566497803
    3. ' min' → logprob: -3.8524434566497803
    4. 'max' → logprob: -6.727443695068359
    5. ' L' → logprob: -7.102443695068359
    6. '(min' → logprob: -10.97744369506836
    7. ' max' → logprob: -11.97744369506836
    8. '(L' → logprob: -12.10244369506836
    9. '>L' → logprob: -15.72744369506836
    10. '	min' → logprob: -15.97744369506836

Token 1453: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00014811802248004824
    2. '(r' → logprob: -8.875147819519043
    3. '(
' → logprob: -12.125147819519043
    4. '(' → logprob: -13.250147819519043
    5. 'L' → logprob: -14.250147819519043
    6. 'r' → logprob: -16.12514877319336
    7. '((' → logprob: -16.50014877319336
    8. '(R' → logprob: -16.62514877319336
    9. '(l' → logprob: -17.37514877319336
    10. ' (' → logprob: -17.75014877319336

Token 1454: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6247161030769348
    2. '-' → logprob: -0.9997161030769348
    3. ',r' → logprob: -3.12471604347229
    4. 'r' → logprob: -3.62471604347229
    5. ' r' → logprob: -5.374716281890869
    6. ' ,' → logprob: -5.624716281890869
    7. ' -' → logprob: -5.624716281890869
    8. '<|end|>' → logprob: -5.874716281890869
    9. '[' → logprob: -5.999716281890869
    10. '   ' → logprob: -6.249716281890869

Token 1455: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -17.125001907348633
    4. 'r' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '<|end|>' → logprob: -18.500001907348633
    7. ')' → logprob: -18.875001907348633
    8. ',' → logprob: -19.625001907348633
    9. '１' → logprob: -19.750001907348633
    10. '१' → logprob: -19.750001907348633

Token 1456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.375003814697266
    4. '
' → logprob: -18.750003814697266
    5. 'r' → logprob: -19.000003814697266
    6. '0' → logprob: -19.125003814697266
    7. '１' → logprob: -19.875003814697266
    8. '```' → logprob: -20.187503814697266
    9. '=' → logprob: -20.250003814697266
    10. '...' → logprob: -20.312503814697266

Token 1457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017393168527632952
    2. ',r' → logprob: -6.626739501953125
    3. ')' → logprob: -8.001739501953125
    4. '   ' → logprob: -10.376739501953125
    5. ' ,' → logprob: -11.501739501953125
    6. '<|end|>' → logprob: -11.501739501953125
    7. ',
' → logprob: -11.751739501953125
    8. 'r' → logprob: -11.876739501953125
    9. '(r' → logprob: -12.626739501953125
    10. '```' → logprob: -13.001739501953125

Token 1458: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.547789674485102e-05
    2. ' r' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.750036239624023
    4. '	r' → logprob: -19.000036239624023
    5. '       ' → logprob: -20.375036239624023
    6. ')' → logprob: -20.750036239624023
    7. '<|end|>' → logprob: -20.750036239624023
    8. '    
' → logprob: -20.875036239624023
    9. '           ' → logprob: -21.500036239624023
    10. ' ' → logprob: -21.625036239624023

Token 1459: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034743899013847113
    2. '<|end|>' → logprob: -6.253474235534668
    3. '   ' → logprob: -6.628474235534668
    4. ')
' → logprob: -8.628474235534668
    5. '<|end|>' → logprob: -11.003474235534668
    6. ' )' → logprob: -11.378474235534668
    7. ')>' → logprob: -13.253474235534668
    8. ')+' → logprob: -13.253474235534668
    9. '),' → logprob: -13.753474235534668
    10. ')\
' → logprob: -13.878474235534668

Token 1460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004492427222430706
    2. '<|end|>' → logprob: -6.004492282867432
    3. '```' → logprob: -7.129492282867432
    4. '    
' → logprob: -7.504492282867432
    5. 'if' → logprob: -7.879492282867432
    6. ' if' → logprob: -8.50449275970459
    7. '	if' → logprob: -10.87949275970459
    8. '
' → logprob: -11.00449275970459
    9. '<|end|>' → logprob: -12.00449275970459
    10. '``' → logprob: -12.00449275970459

Token 1461: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05437910184264183
    2. 'if' → logprob: -3.0543789863586426
    3. '```' → logprob: -5.679378986358643
    4. ' if' → logprob: -6.179378986358643
    5. '    
' → logprob: -8.9293794631958
    6. '<|end|>' → logprob: -9.5543794631958
    7. '``' → logprob: -10.0543794631958
    8. '	if' → logprob: -10.8043794631958
    9. '
' → logprob: -12.5543794631958
    10. '       ' → logprob: -13.1793794631958

Token 1462: ' Aj' (ID: 28294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002215796150267124
    2. 'part' → logprob: -6.25221586227417
    3. '   ' → logprob: -8.377215385437012
    4. '#' → logprob: -10.252215385437012
    5. ' if' → logprob: -11.002215385437012
    6. '
' → logprob: -13.377215385437012
    7. '```' → logprob: -13.502215385437012
    8. '    
' → logprob: -13.627215385437012
    9. 'If' → logprob: -14.627215385437012
    10. '	if' → logprob: -16.377216339111328

Token 1463: 'out' (ID: 468)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5928038358688354
    2. 'outez' → logprob: -1.4678038358688354
    3. 'outer' → logprob: -2.217803955078125
    4. 'out' → logprob: -2.467803955078125
    5. 'oute' → logprob: -4.092803955078125
    6. 'f' → logprob: -5.342803955078125
    7. 'if' → logprob: -7.467803955078125
    8. '    ' → logprob: -8.092803955078125
    9. 'ust' → logprob: -8.217803955078125
    10. '  ' → logprob: -9.217803955078125

Token 1464: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3895280063152313
    2. ',' → logprob: -2.0145280361175537
    3. '(
' → logprob: -2.7645280361175537
    4. '.append' → logprob: -2.8895280361175537
    5. '(' → logprob: -3.7645280361175537
    6. 'part' → logprob: -3.7645280361175537
    7. '(part' → logprob: -4.639527797698975
    8. ' part' → logprob: -5.514527797698975
    9. '```' → logprob: -6.139527797698975
    10. ',
' → logprob: -6.264527797698975

Token 1465: ''une' (ID: 13337)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43985655903816223
    2. ' (' → logprob: -1.1898565292358398
    3. '(
' → logprob: -3.81485652923584
    4. '(part' → logprob: -3.93985652923584
    5. '   ' → logprob: -5.31485652923584
    6. ' (
' → logprob: -5.81485652923584
    7. ' part' → logprob: -7.31485652923584
    8. '([' → logprob: -7.81485652923584
    9. 'part' → logprob: -8.06485652923584
    10. '(l' → logprob: -8.43985652923584

Token 1466: ' sous' (ID: 14487)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9761344194412231
    2. 'part' → logprob: -1.1011344194412231
    3. '(' → logprob: -2.1011343002319336
    4. '(l' → logprob: -2.3511343002319336
    5. '(
' → logprob: -3.2261343002319336
    6. ' if' → logprob: -4.726134300231934
    7. '(None' → logprob: -5.351134300231934
    8. '(r' → logprob: -5.476134300231934
    9. '   ' → logprob: -5.726134300231934
    10. 'l' → logprob: -6.101134300231934

Token 1467: '-l' (ID: 2887)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1026052236557007
    2. 'part' → logprob: -1.6026052236557007
    3. 'range' → logprob: -2.2276053428649902
    4. ',' → logprob: -2.4776053428649902
    5. '_part' → logprob: -2.4776053428649902
    6. '-part' → logprob: -3.2276053428649902
    7. '.append' → logprob: -3.6026053428649902
    8. 'list' → logprob: -3.8526053428649902
    9. '_list' → logprob: -3.9776053428649902
    10. '_l' → logprob: -4.10260534286499

Token 1468: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.1662266105413437
    2. 'ist' → logprob: -2.041226625442505
    3. 'range' → logprob: -4.916226387023926
    4. 'e' → logprob: -5.666226387023926
    5. 'istance' → logprob: -5.916226387023926
    6. 'liste' → logprob: -6.541226387023926
    7. 'a' → logprob: -6.916226387023926
    8. 'part' → logprob: -7.041226387023926
    9. '#' → logprob: -7.291226387023926
    10. '[' → logprob: -7.666226387023926

Token 1469: ' contenant' (ID: 131049)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21380753815174103
    2. '[
' → logprob: -2.7138075828552246
    3. '[(' → logprob: -2.8388075828552246
    4. '   ' → logprob: -3.4638075828552246
    5. '([' → logprob: -4.713807582855225
    6. '```' → logprob: -4.838807582855225
    7. '.append' → logprob: -5.213807582855225
    8. '[[' → logprob: -5.213807582855225
    9. '[i' → logprob: -5.838807582855225
    10. '[l' → logprob: -6.088807582855225

Token 1470: ' (' (ID: 350)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.024521438404917717
    2. '[i' → logprob: -3.7745213508605957
    3. '[
' → logprob: -7.399521350860596
    4. '[' → logprob: -7.399521350860596
    5. '   ' → logprob: -10.649521827697754
    6. ' [' → logprob: -11.024521827697754
    7. '[L' → logprob: -12.149521827697754
    8. '[r' → logprob: -12.899521827697754
    9. '[a' → logprob: -14.149521827697754
    10. '[t' → logprob: -14.149521827697754

Token 1471: 'nombre' (ID: 28576)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3434770405292511
    2. '[l' → logprob: -1.3434770107269287
    3. '[
' → logprob: -3.8434770107269287
    4. '[' → logprob: -5.218477249145508
    5. 'l' → logprob: -5.968477249145508
    6. 'i' → logprob: -8.093477249145508
    7. '   ' → logprob: -10.343477249145508
    8. ' [' → logprob: -11.093477249145508
    9. '[I' → logprob: -12.218477249145508
    10. ' l' → logprob: -12.843477249145508

Token 1472: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2683658301830292
    2. '(i' → logprob: -2.2683658599853516
    3. '[' → logprob: -2.5183658599853516
    4. 'l' → logprob: -4.018365859985352
    5. '[
' → logprob: -4.393365859985352
    6. 'i' → logprob: -4.893365859985352
    7. '[l' → logprob: -4.893365859985352
    8. '(' → logprob: -6.018365859985352
    9. '   ' → logprob: -6.768365859985352
    10. ' [' → logprob: -7.393365859985352

Token 1473: ' chiffres' (ID: 105565)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08401887863874435
    2. '[' → logprob: -3.3340189456939697
    3. 'i' → logprob: -3.8340189456939697
    4. 'tokens' → logprob: -4.459018707275391
    5. '[
' → logprob: -5.709018707275391
    6. 'digits' → logprob: -5.834018707275391
    7. '[t' → logprob: -7.084018707275391
    8. '[r' → logprob: -7.084018707275391
    9. 'elements' → logprob: -7.084018707275391
    10. '[l' → logprob: -7.334018707275391

Token 1474: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7635279297828674
    2. ',' → logprob: -1.3885278701782227
    3. '[i' → logprob: -1.6385278701782227
    4. '(i' → logprob: -2.6385278701782227
    5. ' i' → logprob: -5.138527870178223
    6. '[' → logprob: -5.638527870178223
    7. ',i' → logprob: -5.888527870178223
    8. '   ' → logprob: -6.138527870178223
    9. '```' → logprob: -6.388527870178223
    10. '[
' → logprob: -7.263527870178223

Token 1475: ' borne' (ID: 111819)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16564756631851196
    2. 'i' → logprob: -2.415647506713867
    3. '[i' → logprob: -3.290647506713867
    4. '[l' → logprob: -4.040647506713867
    5. ' l' → logprob: -5.290647506713867
    6. ' i' → logprob: -6.790647506713867
    7. '[' → logprob: -7.290647506713867
    8. ' [' → logprob: -7.290647506713867
    9. '[
' → logprob: -8.290647506713867
    10. 'r' → logprob: -8.290647506713867

Token 1476: ' gauche' (ID: 58367)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.7144021391868591
    2. '[i' → logprob: -0.8394021391868591
    3. '[' → logprob: -3.214402198791504
    4. 'i' → logprob: -3.839402198791504
    5. '[l' → logprob: -4.839402198791504
    6. 'l' → logprob: -5.589402198791504
    7. '[r' → logprob: -6.589402198791504
    8. '```' → logprob: -6.839402198791504
    9. '(i' → logprob: -7.089402198791504
    10. 'r' → logprob: -7.964402198791504

Token 1477: ' l' (ID: 305)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35618701577186584
    2. 'i' → logprob: -1.7311869859695435
    3. '[i' → logprob: -2.231187105178833
    4. '[' → logprob: -5.981186866760254
    5. ',i' → logprob: -6.106186866760254
    6. '(i' → logprob: -6.106186866760254
    7. '```' → logprob: -6.106186866760254
    8. '   ' → logprob: -6.356186866760254
    9. ' i' → logprob: -6.356186866760254
    10. ')' → logprob: -7.106186866760254

Token 1478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030289290007203817
    2. ',i' → logprob: -6.628028869628906
    3. ' ,' → logprob: -7.128028869628906
    4. '   ' → logprob: -7.503028869628906
    5. 'i' → logprob: -9.253028869628906
    6. '+' → logprob: -9.503028869628906
    7. '[i' → logprob: -10.003028869628906
    8. ',
' → logprob: -10.503028869628906
    9. ')' → logprob: -10.753028869628906
    10. '),' → logprob: -10.753028869628906

Token 1479: ' borne' (ID: 111819)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06795285642147064
    2. 'nombre' → logprob: -2.942952871322632
    3. '[i' → logprob: -5.567952632904053
    4. '[' → logprob: -5.942952632904053
    5. ' nombre' → logprob: -6.442952632904053
    6. 'i' → logprob: -6.567952632904053
    7. '[r' → logprob: -6.942952632904053
    8. 'B' → logprob: -7.067952632904053
    9. ' r' → logprob: -8.067953109741211
    10. '[
' → logprob: -8.192953109741211

Token 1480: ' droite' (ID: 61428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4944862425327301
    2. 'dro' → logprob: -1.2444862127304077
    3. '[
' → logprob: -2.9944863319396973
    4. '[' → logprob: -4.119486331939697
    5. 'd' → logprob: -4.119486331939697
    6. ' droite' → logprob: -5.369486331939697
    7. '```' → logprob: -5.369486331939697
    8. 'right' → logprob: -5.869486331939697
    9. '[r' → logprob: -6.619486331939697
    10. '1' → logprob: -6.619486331939697

Token 1481: ' r' (ID: 428)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.333404004573822
    2. 'r' → logprob: -1.7084040641784668
    3. '[i' → logprob: -2.708404064178467
    4. ',' → logprob: -3.833404064178467
    5. '(i' → logprob: -5.583404064178467
    6. '[
' → logprob: -5.958404064178467
    7. '[' → logprob: -6.208404064178467
    8. ',i' → logprob: -6.458404064178467
    9. ' i' → logprob: -6.708404064178467
    10. ')' → logprob: -7.083404064178467

Token 1482: ').
' (ID: 6294)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012747544795274734
    2. '   ' → logprob: -4.637747764587402
    3. '[i' → logprob: -6.387747764587402
    4. '[' → logprob: -7.762747764587402
    5. ',i' → logprob: -8.512747764587402
    6. ')' → logprob: -8.762747764587402
    7. '```' → logprob: -8.887747764587402
    8. ' ,' → logprob: -9.137747764587402
    9. ',
' → logprob: -9.387747764587402
    10. '[],' → logprob: -9.887747764587402

Token 1483: '   ' (ID: 271)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.07911152392625809
    2. ' part' → logprob: -2.7041115760803223
    3. '.append' → logprob: -5.454111576080322
    4. '(part' → logprob: -6.329111576080322
    5. '[' → logprob: -6.704111576080322
    6. '   ' → logprob: -6.829111576080322
    7. '	part' → logprob: -7.704111576080322
    8. '```' → logprob: -8.704111099243164
    9. '[
' → logprob: -10.329111099243164
    10. '_part' → logprob: -10.329111099243164

Token 1484: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' (adapté à ' part') → logprob: -0.0024826733861118555
    2. ' part' → logprob: -6.002482891082764
    3. '(part' → logprob: -12.502482414245605
    4. '	part' → logprob: -13.502482414245605
    5. '   ' → logprob: -14.127482414245605
    6. '[' → logprob: -14.502482414245605
    7. '```' → logprob: -15.252482414245605
    8. '_part' → logprob: -16.127483367919922
    9. '
' → logprob: -16.502483367919922
    10. 'append' → logprob: -16.752483367919922

Token 1485: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0022065204102545977
    2. '.' → logprob: -6.127206325531006
    3. 'append' → logprob: -12.002206802368164
    4. ' .' → logprob: -12.002206802368164
    5. '.app' → logprob: -12.877206802368164
    6. '​.' → logprob: -13.127206802368164
    7. '.Append' → logprob: -13.377206802368164
    8. '.ap' → logprob: -14.752206802368164
    9. ').' → logprob: -14.877206802368164
    10. '+.' → logprob: -14.877206802368164

Token 1486: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.2546665370464325
    2. '((' → logprob: -1.7546665668487549
    3. '[(' → logprob: -3.379666566848755
    4. '[i' → logprob: -4.879666328430176
    5. '(i' → logprob: -5.254666328430176
    6. '(' → logprob: -5.754666328430176
    7. '[' → logprob: -6.379666328430176
    8. '([(' → logprob: -9.504666328430176
    9. ' (' → logprob: -11.754666328430176
    10. '   ' → logprob: -12.004666328430176

Token 1487: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000517886015586555
    2. ' i' → logprob: -8.250517845153809
    3. '   ' → logprob: -8.375517845153809
    4. '(i' → logprob: -10.875517845153809
    5. '
' → logprob: -13.375517845153809
    6. '[i' → logprob: -13.375517845153809
    7. '       ' → logprob: -13.875517845153809
    8. '1' → logprob: -14.375517845153809
    9. ' ' → logprob: -15.125517845153809
    10. '```' → logprob: -15.125517845153809

Token 1488: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47711485624313354
    2. ' +' → logprob: -1.2271149158477783
    3. ',' → logprob: -2.4771149158477783
    4. ' ,' → logprob: -6.102114677429199
    5. '   ' → logprob: -11.4771146774292
    6. '<|end|>' → logprob: -11.4771146774292
    7. ',
' → logprob: -11.6021146774292
    8. '1' → logprob: -11.7271146774292
    9. ' ' → logprob: -12.3521146774292
    10. ',i' → logprob: -12.4771146774292

Token 1489: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.875021934509277
    4. '```' → logprob: -16.37502098083496
    5. ',' → logprob: -17.93752098083496
    6. '2' → logprob: -18.06252098083496
    7. '
' → logprob: -18.37502098083496
    8. '１' → logprob: -18.50002098083496
    9. '0' → logprob: -18.62502098083496
    10. '۱' → logprob: -18.93752098083496

Token 1490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -15.000036239624023
    4. '```' → logprob: -15.437536239624023
    5. '0' → logprob: -15.687536239624023
    6. '１' → logprob: -16.562536239624023
    7. '
' → logprob: -16.812536239624023
    8. '  ' → logprob: -17.062536239624023
    9. '2' → logprob: -17.312536239624023
    10. ',' → logprob: -18.062536239624023

Token 1491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026574634830467403
    2. ',l' → logprob: -8.875266075134277
    3. ' ,' → logprob: -9.000266075134277
    4. ',
' → logprob: -13.625266075134277
    5. ',L' → logprob: -15.250266075134277
    6. ',n' → logprob: -15.250266075134277
    7. '‌,' → logprob: -15.625266075134277
    8. ',r' → logprob: -15.750266075134277
    9. '```' → logprob: -16.25026512145996
    10. '   ' → logprob: -16.50026512145996

Token 1492: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.008618000894784927
    2. ' l' → logprob: -4.758617877960205
    3. '   ' → logprob: -13.258618354797363
    4. '	l' → logprob: -13.508618354797363
    5. '    ' → logprob: -15.383618354797363
    6. ' ' → logprob: -16.758617401123047
    7. '       ' → logprob: -17.383617401123047
    8. '  ' → logprob: -17.633617401123047
    9. '     ' → logprob: -18.383617401123047
    10. '_l' → logprob: -18.508617401123047

Token 1493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007279572542756796
    2. ',r' → logprob: -5.132279396057129
    3. ' ,' → logprob: -6.632279396057129
    4. '   ' → logprob: -11.382279396057129
    5. 'r' → logprob: -11.382279396057129
    6. ',
' → logprob: -12.507279396057129
    7. ',b' → logprob: -13.257279396057129
    8. ' r' → logprob: -13.882279396057129
    9. '       ' → logprob: -14.257279396057129
    10. '+' → logprob: -14.757279396057129

Token 1494: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000627014203928411
    2. ' r' → logprob: -7.375627040863037
    3. '   ' → logprob: -14.875626564025879
    4. '	r' → logprob: -17.000627517700195
    5. '
' → logprob: -17.625627517700195
    6. '       ' → logprob: -17.875627517700195
    7. ' ' → logprob: -18.250627517700195
    8. '    ' → logprob: -18.875627517700195
    9. '           ' → logprob: -19.375627517700195
    10. '     ' → logprob: -19.625627517700195

Token 1495: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -7.159660890465602e-05
    2. '])
' → logprob: -10.25007152557373
    3. ' ])' → logprob: -11.00007152557373
    4. ')' → logprob: -11.37507152557373
    5. '   ' → logprob: -12.50007152557373
    6. ')])' → logprob: -13.37507152557373
    7. ')]' → logprob: -13.62507152557373
    8. '])
' → logprob: -15.25007152557373
    9. '))' → logprob: -15.37507152557373
    10. '])]' → logprob: -15.50007152557373

Token 1496: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36857619881629944
    2. '   ' → logprob: -2.2435762882232666
    3. '```' → logprob: -2.7435762882232666
    4. 'if' → logprob: -3.1185762882232666
    5. '#' → logprob: -3.1185762882232666
    6. '<|end|>' → logprob: -3.9935762882232666
    7. '
' → logprob: -4.9935760498046875
    8. 'continue' → logprob: -5.2435760498046875
    9. ' for' → logprob: -5.4935760498046875
    10. '[' → logprob: -6.1185760498046875

Token 1497: ' Tri' (ID: 25062)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9621334075927734
    2. 'answer' → logprob: -1.7121334075927734
    3. 'total' → logprob: -1.7121334075927734
    4. 'result' → logprob: -1.9621334075927734
    5. 'res' → logprob: -2.3371334075927734
    6. 'for' → logprob: -5.462133407592773
    7. 'S' → logprob: -5.587133407592773
    8. '#' → logprob: -5.837133407592773
    9. 'ret' → logprob: -6.087133407592773
    10. 's' → logprob: -6.337133407592773

Token 1498: ' de' (ID: 334)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.001181777217425406
    2. '(part' → logprob: -6.751181602478027
    3. '(
' → logprob: -12.376181602478027
    4. '()' → logprob: -12.751181602478027
    5. ' part' → logprob: -13.751181602478027
    6. '```' → logprob: -13.876181602478027
    7. 'sort' → logprob: -14.001181602478027
    8. '()
' → logprob: -14.501181602478027
    9. 'parts' → logprob: -15.001181602478027
    10. '.sort' → logprob: -15.501181602478027

Token 1499: ' la' (ID: 557)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.981667537620524e-06
    2. ' part' → logprob: -13.250001907348633
    3. 'key' → logprob: -16.875001907348633
    4. '```' → logprob: -17.750001907348633
    5. 'lambda' → logprob: -17.875001907348633
    6. '(part' → logprob: -17.875001907348633
    7. '
' → logprob: -19.750001907348633
    8. 'par' → logprob: -20.000001907348633
    9. 'parts' → logprob: -20.250001907348633
    10. 'sorted' → logprob: -20.625001907348633

Token 1500: ' liste' (ID: 31719)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -9.372294698550832e-06
    2. ' part' → logprob: -12.125009536743164
    3. 'key' → logprob: -13.125009536743164
    4. 'lambda' → logprob: -13.500009536743164
    5. 'sorted' → logprob: -15.375009536743164
    6. 'parts' → logprob: -15.625009536743164
    7. '(part' → logprob: -16.000009536743164
    8. '```' → logprob: -16.750009536743164
    9. '#' → logprob: -18.875009536743164
    10. 'sort' → logprob: -19.750009536743164

Token 1501: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.00026169343618676066
    2. '(part' → logprob: -8.250261306762695
    3. 'parts' → logprob: -15.375261306762695
    4. '(
' → logprob: -16.125261306762695
    5. '```' → logprob: -16.250261306762695
    6. ' part' → logprob: -17.000261306762695
    7. 'sort' → logprob: -19.125261306762695
    8. '	part' → logprob: -19.250261306762695
    9. '(parts' → logprob: -19.750261306762695
    10. '.part' → logprob: -20.250261306762695

Token 1502: ' en' (ID: 469)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.490579754114151
    2. '.sort' → logprob: -0.9905797243118286
    3. '(part' → logprob: -4.365579605102539
    4. '.part' → logprob: -6.115579605102539
    5. '()' → logprob: -7.615579605102539
    6. '.reverse' → logprob: -7.740579605102539
    7. '()
' → logprob: -8.365579605102539
    8. '```' → logprob: -8.990579605102539
    9. 'sort' → logprob: -9.865579605102539
    10. ' part' → logprob: -10.740579605102539

Token 1503: ' ordre' (ID: 103061)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.1417006105184555
    2. 'part' → logprob: -2.266700506210327
    3. 'key' → logprob: -3.766700506210327
    4. '-place' → logprob: -6.016700744628906
    5. 'lambda' → logprob: -6.391700744628906
    6. 'reverse' → logprob: -7.141700744628906
    7. ' place' → logprob: -9.266700744628906
    8. 'fonction' → logprob: -9.516700744628906
    9. '```' → logprob: -9.641700744628906
    10. 'ordre' → logprob: -10.141700744628906

Token 1504: ' décro' (ID: 176854)
  Prédit: '(part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.7279261350631714
    2. 'part' → logprob: -1.3529261350631714
    3. 'reverse' → logprob: -2.727926254272461
    4. '(reverse' → logprob: -2.977926254272461
    5. '.sort' → logprob: -3.352926254272461
    6. 'sort' → logprob: -3.852926254272461
    7. '(
' → logprob: -3.852926254272461
    8. '()' → logprob: -3.977926254272461
    9. '```' → logprob: -3.977926254272461
    10. '.reverse' → logprob: -4.477926254272461

Token 1505: 'issant' (ID: 31359)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.5103596448898315
    2. 'nt' → logprob: -1.8853596448898315
    3. 'sort' → logprob: -2.510359764099121
    4. 'r' → logprob: -3.510359764099121
    5. 'ert' → logprob: -3.760359764099121
    6. 't' → logprob: -4.135359764099121
    7. 'sent' → logprob: -4.885359764099121
    8. 'dre' → logprob: -4.885359764099121
    9. 'dent' → logprob: -5.010359764099121
    10. 'part' → logprob: -5.010359764099121

Token 1506: ' selon' (ID: 27571)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.12199673056602478
    2. '(part' → logprob: -2.2469966411590576
    3. 'reverse' → logprob: -5.371996879577637
    4. '(reverse' → logprob: -6.371996879577637
    5. '```' → logprob: -7.246996879577637
    6. '.reverse' → logprob: -7.496996879577637
    7. ',' → logprob: -7.746996879577637
    8. '()
' → logprob: -8.246996879577637
    9. ' part' → logprob: -8.371996879577637
    10. '(
' → logprob: -8.621996879577637

Token 1507: ' la' (ID: 557)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.001537715899758041
    2. '(lambda' → logprob: -7.126537799835205
    3. ' lambda' → logprob: -7.626537799835205
    4. '=lambda' → logprob: -8.501537322998047
    5. '```' → logprob: -10.126537322998047
    6. '   ' → logprob: -14.001537322998047
    7. '_lambda' → logprob: -14.251537322998047
    8. '``' → logprob: -15.751537322998047
    9. 'x' → logprob: -15.876537322998047
    10. '.lambda' → logprob: -15.876537322998047

Token 1508: ' longueur' (ID: 104613)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0018113177502527833
    2. '0' → logprob: -7.376811504364014
    3. ' lambda' → logprob: -7.751811504364014
    4. '=lambda' → logprob: -8.001811027526855
    5. '```' → logprob: -8.876811027526855
    6. '(lambda' → logprob: -9.126811027526855
    7. 'x' → logprob: -9.876811027526855
    8. 'len' → logprob: -10.251811027526855
    9. 'key' → logprob: -10.251811027526855
    10. 'lam' → logprob: -10.626811027526855

Token 1509: ' du' (ID: 1462)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5211890339851379
    2. ',' → logprob: -1.7711889743804932
    3. '(part' → logprob: -2.021188974380493
    4. 'key' → logprob: -3.021188974380493
    5. ',key' → logprob: -3.896188974380493
    6. '(key' → logprob: -4.396189212799072
    7. 'reverse' → logprob: -4.521189212799072
    8. '(reverse' → logprob: -5.271189212799072
    9. '```' → logprob: -5.896189212799072
    10. ',
' → logprob: -6.021189212799072

Token 1510: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18696649372577667
    2. '[' → logprob: -2.8119664192199707
    3. 'part' → logprob: -2.8119664192199707
    4. ' ' → logprob: -4.436966419219971
    5. 'key' → logprob: -4.811966419219971
    6. '#' → logprob: -4.811966419219971
    7. ' part' → logprob: -5.186966419219971
    8. 'lambda' → logprob: -5.561966419219971
    9. ' key' → logprob: -5.686966419219971
    10. '```' → logprob: -6.311966419219971

Token 1511: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8367425799369812
    2. 'part' → logprob: -0.9617425799369812
    3. '(part' → logprob: -2.211742639541626
    4. '```' → logprob: -3.961742639541626
    5. ',
' → logprob: -4.086742401123047
    6. 'key' → logprob: -4.461742401123047
    7. ',key' → logprob: -4.836742401123047
    8. 'reverse' → logprob: -5.336742401123047
    9. '(reverse' → logprob: -5.586742401123047
    10. '.sort' → logprob: -5.586742401123047

Token 1512: 'part' (ID: 5815)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6972678899765015
    2. 'lambda' → logprob: -0.6972678899765015
    3. 'reverse' → logprob: -5.822268009185791
    4. ' lambda' → logprob: -7.697268009185791
    5. ' key' → logprob: -7.947268009185791
    6. '```' → logprob: -8.697267532348633
    7. '=lambda' → logprob: -9.197267532348633
    8. 'x' → logprob: -10.447267532348633
    9. '(lambda' → logprob: -11.072267532348633
    10. '0' → logprob: -11.322267532348633

Token 1513: '[i' (ID: 1768)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.7251980304718018
    2. '[' → logprob: -1.6001980304718018
    3. 'sort' → logprob: -2.3501980304718018
    4. '[-' → logprob: -2.8501980304718018
    5. '=' → logprob: -3.1001980304718018
    6. ',' → logprob: -3.1001980304718018
    7. '```' → logprob: -3.1001980304718018
    8. 's' → logprob: -4.975197792053223
    9. '=lambda' → logprob: -5.850197792053223
    10. '][' → logprob: -6.100197792053223

Token 1514: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02782396227121353
    2. '],' → logprob: -4.5278239250183105
    3. ']' → logprob: -5.4028239250183105
    4. '])' → logprob: -5.5278239250183105
    5. '][-' → logprob: -6.4028239250183105
    6. '[' → logprob: -6.5278239250183105
    7. '()][' → logprob: -7.4028239250183105
    8. ')][' → logprob: -7.5278239250183105
    9. '])[' → logprob: -7.7778239250183105
    10. '#' → logprob: -7.7778239250183105

Token 1515: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006950391689315438
    2. '][' → logprob: -7.75069522857666
    3. '[' → logprob: -9.62569522857666
    4. ':' → logprob: -9.87569522857666
    5. '#' → logprob: -10.25069522857666
    6. '1' → logprob: -10.37569522857666
    7. ' ' → logprob: -10.37569522857666
    8. '
' → logprob: -11.37569522857666
    9. '```' → logprob: -11.37569522857666
    10. '-' → logprob: -12.00069522857666

Token 1516: '])' (ID: 4636)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.027052680030465126
    2. '])' → logprob: -4.527052879333496
    3. ']),' → logprob: -4.777052879333496
    4. ']' → logprob: -5.652052879333496
    5. '-' → logprob: -7.527052879333496
    6. '),' → logprob: -7.527052879333496
    7. '```' → logprob: -7.652052879333496
    8. '#' → logprob: -8.152052879333496
    9. '])
' → logprob: -8.152052879333496
    10. '],
' → logprob: -8.277052879333496

Token 1517: ' pour' (ID: 1930)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.02667052671313286
    2. ',' → logprob: -3.776670455932617
    3. '(part' → logprob: -6.151670455932617
    4. ',
' → logprob: -7.276670455932617
    5. '.sort' → logprob: -7.901670455932617
    6. ' part' → logprob: -9.401670455932617
    7. '```' → logprob: -9.776670455932617
    8. 'sort' → logprob: -10.901670455932617
    9. ')' → logprob: -10.901670455932617
    10. ')
' → logprob: -11.026670455932617

Token 1518: ' traitement' (ID: 42434)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.2625792324542999
    2. ' part' → logprob: -2.5125792026519775
    3. 'i' → logprob: -2.7625792026519775
    4. '_' → logprob: -3.0125792026519775
    5. ' i' → logprob: -3.5125792026519775
    6. 'reverse' → logprob: -5.762579441070557
    7. '_part' → logprob: -6.387579441070557
    8. ' reverse' → logprob: -7.262579441070557
    9. 'p' → logprob: -7.512579441070557
    10. ' p' → logprob: -8.012578964233398

Token 1519: ' ult' (ID: 11619)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.9127289652824402
    2. '(reverse' → logprob: -1.287729024887085
    3. '(part' → logprob: -1.412729024887085
    4. 'part' → logprob: -2.787729024887085
    5. ',' → logprob: -5.037728786468506
    6. '.reverse' → logprob: -5.662728786468506
    7. '()
' → logprob: -5.912728786468506
    8. 'key' → logprob: -6.662728786468506
    9. '(key' → logprob: -7.287728786468506
    10. '()' → logprob: -7.662728786468506

Token 1520: 'érieur' (ID: 24251)
  Prédit: 'érieure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.20873527228832245
    2. 'érieur' → logprob: -1.7087352275848389
    3. '#' → logprob: -6.333735466003418
    4. 'imité' → logprob: -6.708735466003418
    5. 'érie' → logprob: -7.208735466003418
    6. 'érieures' → logprob: -7.583735466003418
    7. 'érieurs' → logprob: -7.833735466003418
    8. 'é' → logprob: -7.958735466003418
    9. 'éré' → logprob: -8.083735466003418
    10. 'er' → logprob: -8.208735466003418

Token 1521: '.
' (ID: 558)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0031399279832839966
    2. '(part' → logprob: -5.878139972686768
    3. ',
' → logprob: -9.25313949584961
    4. ',' → logprob: -9.37813949584961
    5. ')
' → logprob: -10.00313949584961
    6. ')' → logprob: -10.50313949584961
    7. '.sort' → logprob: -10.75313949584961
    8. 'sort' → logprob: -11.12813949584961
    9. '
' → logprob: -11.25313949584961
    10. '```' → logprob: -11.50313949584961

Token 1522: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -5.796184723294573e-06
    2. ' part' → logprob: -12.375005722045898
    3. '```' → logprob: -13.750005722045898
    4. '(part' → logprob: -15.000005722045898
    5. 'sort' → logprob: -17.0000057220459
    6. 'reverse' → logprob: -17.5000057220459
    7. 'parts' → logprob: -18.2500057220459
    8. '.sort' → logprob: -18.6250057220459
    9. '.part' → logprob: -18.6250057220459
    10. '
' → logprob: -18.7500057220459

Token 1523: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.004107254091650248
    2. '=' → logprob: -5.504107475280762
    3. '.' → logprob: -11.504107475280762
    4. '.reverse' → logprob: -11.629107475280762
    5. 'sort' → logprob: -12.504107475280762
    6. '(part' → logprob: -13.129107475280762
    7. ' =' → logprob: -13.504107475280762
    8. '.part' → logprob: -13.879107475280762
    9. 'part' → logprob: -14.129107475280762
    10. '=.' → logprob: -14.879107475280762

Token 1524: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0013799945591017604
    2. 'reverse' → logprob: -6.75137996673584
    3. '(key' → logprob: -8.50137996673584
    4. '(part' → logprob: -12.50137996673584
    5. 'Reverse' → logprob: -14.12637996673584
    6. '(' → logprob: -14.12637996673584
    7. ' reverse' → logprob: -14.50137996673584
    8. '.reverse' → logprob: -15.00137996673584
    9. 'key' → logprob: -15.50137996673584
    10. '_reverse' → logprob: -15.75137996673584

Token 1525: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0017870404990389943
    2. '(),' → logprob: -7.001787185668945
    3. ',key' → logprob: -8.251787185668945
    4. '=' → logprob: -8.376787185668945
    5. '())' → logprob: -9.001787185668945
    6. '=lambda' → logprob: -9.251787185668945
    7. ',' → logprob: -9.876787185668945
    8. ')' → logprob: -10.126787185668945
    9. 'key' → logprob: -10.126787185668945
    10. '(key' → logprob: -10.751787185668945

Token 1526: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000333320174831897
    2. ',' → logprob: -8.500333786010742
    3. ')
' → logprob: -9.750333786010742
    4. '())' → logprob: -10.375333786010742
    5. '<|end|>' → logprob: -11.250333786010742
    6. '()' → logprob: -11.625333786010742
    7. ' )' → logprob: -11.875333786010742
    8. ')#' → logprob: -12.375333786010742
    9. '),' → logprob: -13.625333786010742
    10. '))' → logprob: -14.000333786010742

Token 1527: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24012406170368195
    2. '#' → logprob: -2.240123987197876
    3. 'result' → logprob: -3.615123987197876
    4. 'part' → logprob: -4.115124225616455
    5. 'total' → logprob: -4.490124225616455
    6. 'ans' → logprob: -4.615124225616455
    7. 'sum' → logprob: -4.865124225616455
    8. 'i' → logprob: -4.990124225616455
    9. 'n' → logprob: -5.115124225616455
    10. 'answer' → logprob: -5.365124225616455

Token 1528: ' Initial' (ID: 9209)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.00723397731781
    2. 'res' → logprob: -1.38223397731781
    3. 'answer' → logprob: -1.88223397731781
    4. 'ans' → logprob: -2.0072340965270996
    5. 'total' → logprob: -2.3822340965270996
    6. 'for' → logprob: -6.7572340965271
    7. 'ret' → logprob: -7.0072340965271
    8. 's' → logprob: -7.7572340965271
    9. 'sum' → logprob: -7.7572340965271
    10. 'final' → logprob: -7.8822340965271

Token 1529: 'isation' (ID: 6993)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.3304461240768433
    2. 'sum' → logprob: -1.9554461240768433
    3. 'result' → logprob: -2.205446243286133
    4. 'val' → logprob: -2.205446243286133
    5. 'isation' → logprob: -2.455446243286133
    6. '#' → logprob: -2.955446243286133
    7. 'total' → logprob: -3.205446243286133
    8. 'answer' → logprob: -3.580446243286133
    9. 'i' → logprob: -3.705446243286133
    10. 'ans' → logprob: -3.705446243286133

Token 1530: ' du' (ID: 1462)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09918779879808426
    2. 'total' → logprob: -3.2241878509521484
    3. 'answer' → logprob: -3.8491878509521484
    4. 'res' → logprob: -4.099187850952148
    5. 'result' → logprob: -4.349187850952148
    6. 'sum' → logprob: -7.099187850952148
    7. '(ans' → logprob: -7.099187850952148
    8. 's' → logprob: -7.349187850952148
    9. '```' → logprob: -7.474187850952148
    10. 'final' → logprob: -7.849187850952148

Token 1531: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9387277364730835
    2. 'answer' → logprob: -1.4387277364730835
    3. 'result' → logprob: -1.5637277364730835
    4. 'res' → logprob: -2.063727855682373
    5. 'total' → logprob: -3.438727855682373
    6. 'ret' → logprob: -6.813727855682373
    7. 'final' → logprob: -7.063727855682373
    8. 'sum' → logprob: -8.188727378845215
    9. 'rés' → logprob: -8.813727378845215
    10. 'output' → logprob: -9.188727378845215

Token 1532: ' final' (ID: 1721)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.49068403244018555
    2. 'res' → logprob: -1.2406840324401855
    3. 'ans' → logprob: -2.3656840324401855
    4. 'answer' → logprob: -5.6156840324401855
    5. 'total' → logprob: -8.115684509277344
    6. 'ret' → logprob: -8.365684509277344
    7. '```' → logprob: -8.365684509277344
    8. '
' → logprob: -8.865684509277344
    9. '=' → logprob: -9.990684509277344
    10. 'rés' → logprob: -10.115684509277344

Token 1533: ' à' (ID: 1221)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.34328219294548035
    2. 'res' → logprob: -1.9682822227478027
    3. 'ans' → logprob: -1.9682822227478027
    4. 'answer' → logprob: -4.843282222747803
    5. 'final' → logprob: -6.718282222747803
    6. 'total' → logprob: -7.093282222747803
    7. '
' → logprob: -7.218282222747803
    8. '```' → logprob: -8.218281745910645
    9. 'ret' → logprob: -9.218281745910645
    10. 'rés' → logprob: -10.718281745910645

Token 1534: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '1' → logprob: -16.625
    4. '(' → logprob: -17.125
    5. 'ans' → logprob: -17.5
    6. '#' → logprob: -17.5
    7. '```' → logprob: -17.875
    8. '۰' → logprob: -18.4375
    9. '
' → logprob: -18.875
    10. '[' → logprob: -19.125

Token 1535: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.750001907348633
    3. 'ans' → logprob: -14.375001907348633
    4. ' ' → logprob: -14.875001907348633
    5. '1' → logprob: -16.375001907348633
    6. '```' → logprob: -16.875001907348633
    7. '(ans' → logprob: -17.375001907348633
    8. '۰' → logprob: -17.875001907348633
    9. '[' → logprob: -17.937501907348633
    10. '-' → logprob: -18.250001907348633

Token 1536: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1592167764902115
    2. 'res' → logprob: -2.40921688079834
    3. 'ans' → logprob: -2.90921688079834
    4. 'answer' → logprob: -6.15921688079834
    5. '```' → logprob: -7.53421688079834
    6. 'total' → logprob: -9.90921688079834
    7. 'rés' → logprob: -10.40921688079834
    8. 'final' → logprob: -10.78421688079834
    9. 'ret' → logprob: -11.65921688079834
    10. 'r' → logprob: -11.78421688079834

Token 1537: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10624508559703827
    2. 'res' → logprob: -2.7312450408935547
    3. 'ans' → logprob: -3.4812450408935547
    4. 'answer' → logprob: -5.981245040893555
    5. '```' → logprob: -6.356245040893555
    6. 'total' → logprob: -8.231245040893555
    7. 'ret' → logprob: -8.606245040893555
    8. 'final' → logprob: -9.481245040893555
    9. 'rés' → logprob: -10.106245040893555
    10. '``' → logprob: -11.106245040893555

Token 1538: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894306421279907
    2. '=' → logprob: -2.4639430046081543
    3. ',' → logprob: -13.338943481445312
    4. '<|end|>' → logprob: -14.213943481445312
    5. ' ' → logprob: -15.213943481445312
    6. ')' → logprob: -15.463943481445312
    7. ' +=' → logprob: -15.838943481445312
    8. '_' → logprob: -15.963943481445312
    9. ' ,' → logprob: -16.838943481445312
    10. 's' → logprob: -17.026443481445312

Token 1539: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '(' → logprob: -15.875007629394531
    4. '۰' → logprob: -17.50000762939453
    5. '1' → logprob: -19.12500762939453
    6. '   ' → logprob: -19.43750762939453
    7. ' ' → logprob: -19.50000762939453
    8. '```' → logprob: -19.87500762939453
    9. '０' → logprob: -20.12500762939453
    10. '#' → logprob: -20.25000762939453

Token 1540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '(' → logprob: -16.375
    4. '1' → logprob: -18.3125
    5. '۰' → logprob: -18.6875
    6. 'part' → logprob: -18.75
    7. '[' → logprob: -19.4375
    8. 'int' → logprob: -19.5
    9. '```' → logprob: -20.0625
    10. 'pow' → logprob: -20.125

Token 1541: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15159085392951965
    2. 'for' → logprob: -2.0265908241271973
    3. '<|end|>' → logprob: -5.151590824127197
    4. ' for' → logprob: -6.401590824127197
    5. '
' → logprob: -7.026590824127197
    6. '

' → logprob: -8.651591300964355
    7. '\n' → logprob: -9.651591300964355
    8. '```' → logprob: -9.901591300964355
    9. '' → logprob: -9.901591300964355
    10. '+' → logprob: -10.026591300964355

Token 1542: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0023466343991458416
    2. '
' → logprob: -6.127346515655518
    3. ' for' → logprob: -9.127346992492676
    4. '```' → logprob: -10.502346992492676
    5. '#' → logprob: -11.377346992492676
    6. '<|end|>' → logprob: -12.252346992492676
    7. 'i' → logprob: -13.127346992492676
    8. '+' → logprob: -13.377346992492676
    9. '
' → logprob: -13.877346992492676
    10. 'n' → logprob: -14.502346992492676

Token 1543: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.1008713702030946e-06
    2. 'i' → logprob: -14.500001907348633
    3. '
' → logprob: -14.750001907348633
    4. 'part' → logprob: -15.125001907348633
    5. 'while' → logprob: -15.500001907348633
    6. '#' → logprob: -15.625001907348633
    7. '```' → logprob: -15.625001907348633
    8. 'mod' → logprob: -16.375001907348633
    9. ' for' → logprob: -16.375001907348633
    10. 'pow' → logprob: -16.625001907348633

Token 1544: 'isation' (ID: 6993)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016620856476947665
    2. '=' → logprob: -7.001662254333496
    3. 'i' → logprob: -8.751662254333496
    4. ' for' → logprob: -9.251662254333496
    5. 'range' → logprob: -9.251662254333496
    6. '```' → logprob: -9.501662254333496
    7. '#' → logprob: -9.626662254333496
    8. ':' → logprob: -10.001662254333496
    9. '_for' → logprob: -10.876662254333496
    10. 'in' → logprob: -11.001662254333496

Token 1545: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38456660509109497
    2. '(' → logprob: -2.63456654548645
    3. '```' → logprob: -3.00956654548645
    4. '0' → logprob: -3.13456654548645
    5. 'ch' → logprob: -3.13456654548645
    6. '(
' → logprob: -3.63456654548645
    7. 'i' → logprob: -4.509566783905029
    8. '()' → logprob: -4.759566783905029
    9. 'of' → logprob: -5.009566783905029
    10. '_' → logprob: -5.009566783905029

Token 1546: ''une' (ID: 13337)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05095323175191879
    2. 'i' → logprob: -4.300953388214111
    3. 'L' → logprob: -5.050953388214111
    4. ' i' → logprob: -5.425953388214111
    5. ' ' → logprob: -5.550953388214111
    6. '_' → logprob: -5.550953388214111
    7. ' L' → logprob: -5.800953388214111
    8. '=' → logprob: -6.050953388214111
    9. '(' → logprob: -6.425953388214111
    10. 'n' → logprob: -6.675953388214111

Token 1547: ' variable' (ID: 11076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08450134843587875
    2. ' for' → logprob: -3.084501266479492
    3. '=' → logprob: -4.459501266479492
    4. 'range' → logprob: -4.834501266479492
    5. '
' → logprob: -6.084501266479492
    6. 'i' → logprob: -6.084501266479492
    7. '```' → logprob: -6.334501266479492
    8. ' =' → logprob: -6.959501266479492
    9. ')' → logprob: -6.959501266479492
    10. '0' → logprob: -7.334501266479492

Token 1548: ' '' (ID: 461)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014676624909043312
    2. ' =' → logprob: -5.389676570892334
    3. 'i' → logprob: -6.014676570892334
    4. '_=' → logprob: -6.764676570892334
    5. '```' → logprob: -7.139676570892334
    6. 'pour' → logprob: -7.514676570892334
    7. 'a' → logprob: -7.514676570892334
    8. 'b' → logprob: -7.889676570892334
    9. '=i' → logprob: -7.889676570892334
    10. ',' → logprob: -8.014677047729492

Token 1549: 'ch' (ID: 332)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.7479407787322998
    2. 'i' → logprob: -2.1229407787323
    3. 'pow' → logprob: -2.1229407787323
    4. 'part' → logprob: -2.8729407787323
    5. 'carry' → logprob: -2.8729407787323
    6. 'acc' → logprob: -2.8729407787323
    7. 'ans' → logprob: -2.9979407787323
    8. 'p' → logprob: -3.2479407787323
    9. 'pos' → logprob: -3.7479407787323
    10. 'cur' → logprob: -3.8729407787323

Token 1550: 'ouse' (ID: 1941)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7865194082260132
    2. 'i' → logprob: -1.4115194082260132
    3. 'oise' → logprob: -1.6615194082260132
    4. 'ose' → logprob: -3.2865195274353027
    5. 'e' → logprob: -4.286519527435303
    6. ' =' → logprob: -4.536519527435303
    7. '```' → logprob: -4.536519527435303
    8. 'an' → logprob: -5.536519527435303
    9. '   ' → logprob: -5.536519527435303
    10. 'if' → logprob: -5.786519527435303

Token 1551: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.081584716506768e-05
    2. '   ' → logprob: -11.125020980834961
    3. '=' → logprob: -12.625020980834961
    4. ' =' → logprob: -14.125020980834961
    5. '```' → logprob: -14.250020980834961
    6. '  ' → logprob: -14.875020980834961
    7. '       ' → logprob: -16.12502098083496
    8. 'ı' → logprob: -16.12502098083496
    9. ''i' → logprob: -16.25002098083496
    10. ' ' → logprob: -16.25002098083496

Token 1552: '',' (ID: 787)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740792512893677
    2. ' =' → logprob: -0.9740792512893677
    3. ' ' → logprob: -13.724079132080078
    4. ' ' → logprob: -14.349079132080078
    5. '   ' → logprob: -16.474079132080078
    6. ')' → logprob: -16.474079132080078
    7. '＝' → logprob: -16.474079132080078
    8. '=
' → logprob: -16.724079132080078
    9. ',' → logprob: -16.974079132080078
    10. '```' → logprob: -16.974079132080078

Token 1553: ' représentant' (ID: 136122)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.153890922665596
    2. '=' → logprob: -2.02889084815979
    3. ' =' → logprob: -4.528891086578369
    4. ' ' → logprob: -8.153890609741211
    5. 'ch' → logprob: -10.153890609741211
    6. '   ' → logprob: -11.653890609741211
    7. '1' → logprob: -12.153890609741211
    8. '#' → logprob: -12.528890609741211
    9. ' ch' → logprob: -12.528890609741211
    10. '
' → logprob: -12.778890609741211

Token 1554: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019699118565768003
    2. ' ' → logprob: -6.376969814300537
    3. '1' → logprob: -8.501970291137695
    4. '=' → logprob: -11.376970291137695
    5. '10' → logprob: -11.626970291137695
    6. '   ' → logprob: -12.001970291137695
    7. 'L' → logprob: -12.126970291137695
    8. ' =' → logprob: -12.376970291137695
    9. ' L' → logprob: -12.439470291137695
    10. '2' → logprob: -13.189470291137695

Token 1555: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2249423712491989
    2. '1' → logprob: -1.7249423265457153
    3. ' ' → logprob: -4.349942207336426
    4. ' L' → logprob: -6.099942207336426
    5. '10' → logprob: -6.224942207336426
    6. 'L' → logprob: -6.599942207336426
    7. 'pow' → logprob: -7.349942207336426
    8. 'sum' → logprob: -7.474942207336426
    9. 'ch' → logprob: -7.849942207336426
    10. '```' → logprob: -7.849942207336426

Token 1556: ' total' (ID: 3609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10037499666213989
    2. ' =' → logprob: -2.850374937057495
    3. '+=' → logprob: -4.225375175476074
    4. 'de' → logprob: -4.975375175476074
    5. ' +=' → logprob: -5.225375175476074
    6. '```' → logprob: -5.350375175476074
    7. 'des' → logprob: -6.850375175476074
    8. 'd' → logprob: -7.100375175476074
    9. ' de' → logprob: -7.475375175476074
    10. ' d' → logprob: -7.725375175476074

Token 1557: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1536892652511597
    2. 'de' → logprob: -1.4036892652511597
    3. ' =' → logprob: -2.153689384460449
    4. 'des' → logprob: -2.403689384460449
    5. '+=' → logprob: -2.653689384460449
    6. ' +=' → logprob: -2.653689384460449
    7. ' de' → logprob: -3.403689384460449
    8. ' des' → logprob: -3.403689384460449
    9. ' d' → logprob: -4.653689384460449
    10. 'd' → logprob: -5.153689384460449

Token 1558: ' chiffres' (ID: 105565)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.05424812436103821
    2. 'part' → logprob: -3.929248094558716
    3. ' blocs' → logprob: -4.429248332977295
    4. 'bloc' → logprob: -5.179248332977295
    5. 'blocks' → logprob: -5.429248332977295
    6. '```' → logprob: -5.429248332977295
    7. 'élé' → logprob: -5.929248332977295
    8. 'blo' → logprob: -6.929248332977295
    9. '0' → logprob: -7.679248332977295
    10. 'parts' → logprob: -7.804248332977295

Token 1559: ' déjà' (ID: 21229)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8172358870506287
    2. ' =' → logprob: -1.3172359466552734
    3. 'processed' → logprob: -2.3172359466552734
    4. 'used' → logprob: -2.5672359466552734
    5. ' +=' → logprob: -3.6922359466552734
    6. '```' → logprob: -4.692235946655273
    7. '_processed' → logprob: -5.067235946655273
    8. '+=' → logprob: -5.192235946655273
    9. 'dé' → logprob: -5.192235946655273
    10. '_used' → logprob: -5.442235946655273

Token 1560: ' produits' (ID: 23489)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.6917130351066589
    2. 'trait' → logprob: -0.8167130351066589
    3. 'com' → logprob: -3.9417130947113037
    4. 'tra' → logprob: -4.441712856292725
    5. 'comp' → logprob: -5.316712856292725
    6. 'calcul' → logprob: -5.441712856292725
    7. 'acc' → logprob: -5.691712856292725
    8. 'concat' → logprob: -5.941712856292725
    9. '
' → logprob: -6.191712856292725
    10. 'som' → logprob: -6.566712856292725

Token 1561: ',
' (ID: 412)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01254214160144329
    2. ' =' → logprob: -4.387542247772217
    3. ',' → logprob: -11.262541770935059
    4. 'ch' → logprob: -11.637541770935059
    5. '+=' → logprob: -12.762541770935059
    6. '```' → logprob: -13.012541770935059
    7. '
' → logprob: -13.387541770935059
    8. '0' → logprob: -13.762541770935059
    9. ' +=' → logprob: -14.262541770935059
    10. '#' → logprob: -14.387541770935059

Token 1562: '#' (ID: 2)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2599146068096161
    2. '=' → logprob: -1.8849146366119385
    3. ' =' → logprob: -2.7599146366119385
    4. '   ' → logprob: -4.759914398193359
    5. '#' → logprob: -6.134914398193359
    6. ' ' → logprob: -6.384914398193359
    7. '
' → logprob: -8.00991439819336
    8. ')' → logprob: -8.88491439819336
    9. '1' → logprob: -8.88491439819336
    10. '```' → logprob: -8.88491439819336

Token 1563: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2614915072917938
    2. 'ch' → logprob: -1.7614915370941162
    3. '=' → logprob: -3.261491537094116
    4. ' #' → logprob: -5.261491298675537
    5. '
' → logprob: -6.261491298675537
    6. '```' → logprob: -6.261491298675537
    7. '0' → logprob: -6.386491298675537
    8. ' =' → logprob: -6.386491298675537
    9. 'n' → logprob: -7.011491298675537
    10. ' ch' → logprob: -7.136491298675537

Token 1564: ' ajust' (ID: 32650)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8543730974197388
    2. 'part' → logprob: -1.9793730974197388
    3. 'ch' → logprob: -2.104372978210449
    4. '0' → logprob: -2.104372978210449
    5. '<|end|>' → logprob: -2.229372978210449
    6. ' i' → logprob: -2.479372978210449
    7. ')' → logprob: -3.104372978210449
    8. 'calcul' → logprob: -3.479372978210449
    9. '1' → logprob: -3.979372978210449
    10. '   ' → logprob: -4.104372978210449

Token 1565: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -3.6312321753939614e-05
    2. 'ment' → logprob: -10.625036239624023
    3. 'ement' → logprob: -12.625036239624023
    4. '#' → logprob: -13.250036239624023
    5. 'e' → logprob: -13.750036239624023
    6. 'é' → logprob: -13.750036239624023
    7. '=' → logprob: -13.875036239624023
    8. '```' → logprob: -13.875036239624023
    9. 'r' → logprob: -14.750036239624023
    10. 'ER' → logprob: -15.000036239624023

Token 1566: ' le' (ID: 505)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8368486762046814
    2. 'ans' → logprob: -1.5868487358093262
    3. '1' → logprob: -2.086848735809326
    4. ' la' → logprob: -3.211848735809326
    5. 'ch' → logprob: -3.711848735809326
    6. ' ' → logprob: -3.836848735809326
    7. ' +=' → logprob: -3.961848735809326
    8. '=' → logprob: -4.086848735809326
    9. '0' → logprob: -4.461848735809326
    10. ')' → logprob: -4.586848735809326

Token 1567: ' dé' (ID: 2393)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.9996873736381531
    2. '```' → logprob: -1.4996874332427979
    3. 'ch' → logprob: -2.749687433242798
    4. 'offset' → logprob: -3.499687433242798
    5. ' poids' → logprob: -3.499687433242798
    6. '10' → logprob: -3.624687433242798
    7. ')' → logprob: -3.999687433242798
    8. ' pow' → logprob: -4.124687194824219
    9. 'po' → logprob: -4.124687194824219
    10. ' dé' → logprob: -4.374687194824219

Token 1568: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.11277938634157181
    2. 'c' → logprob: -2.612779378890991
    3. '```' → logprob: -4.73777961730957
    4. 'placement' → logprob: -4.86277961730957
    5. 'ch' → logprob: -5.61277961730957
    6. 'cale' → logprob: -5.73777961730957
    7. 'caler' → logprob: -5.73777961730957
    8. 'f' → logprob: -6.36277961730957
    9. '``' → logprob: -7.36277961730957
    10. 'l' → logprob: -7.61277961730957

Token 1569: 'age' (ID: 477)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.36944669485092163
    2. '   ' → logprob: -1.7444467544555664
    3. 'age' → logprob: -2.6194467544555664
    4. 'i' → logprob: -3.8694467544555664
    5. 'ment' → logprob: -3.9944467544555664
    6. ' ' → logprob: -5.744446754455566
    7. 'ément' → logprob: -5.869446754455566
    8. '  ' → logprob: -6.369446754455566
    9. 'e' → logprob: -6.369446754455566
    10. 'iment' → logprob: -6.494446754455566

Token 1570: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8752740025520325
    2. ' +=' → logprob: -1.2502739429473877
    3. ' =' → logprob: -2.2502739429473877
    4. '+=' → logprob: -3.1252739429473877
    5. '<|end|>' → logprob: -3.3752739429473877
    6. 'ch' → logprob: -3.5002739429473877
    7. '.' → logprob: -3.8752739429473877
    8. 'ans' → logprob: -4.125274181365967
    9. 'dans' → logprob: -4.750274181365967
    10. ',' → logprob: -5.125274181365967

Token 1571: ' base' (ID: 3611)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1388391256332397
    2. 'l' → logprob: -1.2638391256332397
    3. '1' → logprob: -1.8888391256332397
    4. ' l' → logprob: -3.1388392448425293
    5. '```' → logprob: -3.3888392448425293
    6. ' ' → logprob: -3.8888392448425293
    7. 'digits' → logprob: -3.8888392448425293
    8. 'L' → logprob: -4.013839244842529
    9. 'length' → logprob: -4.513839244842529
    10. 'part' → logprob: -4.763839244842529

Token 1572: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009174388833343983
    2. '=' → logprob: -4.884174346923828
    3. ' ' → logprob: -6.634174346923828
    4. ' =' → logprob: -8.759174346923828
    5. '```' → logprob: -10.759174346923828
    6. '0' → logprob: -11.009174346923828
    7. '   ' → logprob: -11.259174346923828
    8. '1' → logprob: -11.384174346923828
    9. 'd' → logprob: -11.884174346923828
    10. ' +=' → logprob: -12.509174346923828

Token 1573: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003086486831307411
    2. ' ' → logprob: -8.250308990478516
    3. '0' → logprob: -11.125308990478516
    4. '1' → logprob: -11.625308990478516
    5. '```' → logprob: -11.750308990478516
    6. '   ' → logprob: -12.125308990478516
    7. '
' → logprob: -12.500308990478516
    8. '=' → logprob: -12.875308990478516
    9. '(' → logprob: -14.875308990478516
    10. '#' → logprob: -14.875308990478516

Token 1574: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018540509045124054
    2. ' =' → logprob: -4.018540382385254
    3. 'ch' → logprob: -9.018540382385254
    4. ',' → logprob: -9.643540382385254
    5. '
' → logprob: -10.018540382385254
    6. '.' → logprob: -10.143540382385254
    7. '+=' → logprob: -10.143540382385254
    8. '#' → logprob: -10.643540382385254
    9. '=
' → logprob: -10.893540382385254
    10. '<|end|>' → logprob: -11.768540382385254

Token 1575: ' la' (ID: 557)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.2338241338729858
    2. 'l' → logprob: -1.4838241338729858
    3. ' part' → logprob: -2.1088242530822754
    4. ' la' → logprob: -2.2338242530822754
    5. 'ans' → logprob: -2.6088242530822754
    6. '1' → logprob: -3.1088242530822754
    7. ' ans' → logprob: -3.3588242530822754
    8. ' l' → logprob: -3.3588242530822754
    9. 'la' → logprob: -4.358824253082275
    10. '   ' → logprob: -5.233824253082275

Token 1576: ' prochaine' (ID: 78876)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7421070337295532
    2. 'part' → logprob: -1.1171070337295532
    3. 'pow' → logprob: -2.8671069145202637
    4. 'i' → logprob: -3.2421069145202637
    5. 'ch' → logprob: -3.6171069145202637
    6. 'ans' → logprob: -4.117106914520264
    7. '#' → logprob: -4.242106914520264
    8. 'b' → logprob: -4.617106914520264
    9. ' for' → logprob: -4.867106914520264
    10. ' part' → logprob: -5.492106914520264

Token 1577: ' portion' (ID: 19137)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.711586833000183
    2. 'ch' → logprob: -1.836586833000183
    3. 'part' → logprob: -1.836586833000183
    4. ' =' → logprob: -2.2115869522094727
    5. '=' → logprob: -2.4615869522094727
    6. ' ans' → logprob: -3.0865869522094727
    7. '+=' → logprob: -3.0865869522094727
    8. 'for' → logprob: -3.9615869522094727
    9. 'token' → logprob: -3.9615869522094727
    10. ' part' → logprob: -4.086586952209473

Token 1578: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1681225448846817
    2. ' =' → logprob: -2.1681225299835205
    3. 'ch' → logprob: -3.4181225299835205
    4. '.' → logprob: -5.4181227684021
    5. ',' → logprob: -6.9181227684021
    6. '   ' → logprob: -7.1681227684021
    7. '```' → logprob: -8.168122291564941
    8. '
' → logprob: -8.418122291564941
    9. '+=' → logprob: -8.543122291564941
    10. ' +=' → logprob: -8.793122291564941

Token 1579: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -4.203409844194539e-05
    2. '```' → logprob: -10.250041961669922
    3. '
' → logprob: -12.750041961669922
    4. 'part' → logprob: -13.375041961669922
    5. 'for' → logprob: -13.625041961669922
    6. 'c' → logprob: -15.750041961669922
    7. '0' → logprob: -15.875041961669922
    8. '``' → logprob: -16.250041961669922
    9. ' ch' → logprob: -16.250041961669922
    10. '	ch' → logprob: -16.625041961669922

Token 1580: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -0.0016764947213232517
    2. '=' → logprob: -7.126676559448242
    3. 'ose' → logprob: -8.501676559448242
    4. 'ause' → logprob: -8.751676559448242
    5. ' =' → logprob: -8.876676559448242
    6. '```' → logprob: -9.251676559448242
    7. '   ' → logprob: -9.626676559448242
    8. 'ousse' → logprob: -9.626676559448242
    9. 'OUSE' → logprob: -10.126676559448242
    10. 'o' → logprob: -10.126676559448242

Token 1581: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2310800552368164
    2. 'i' → logprob: -1.6060800552368164
    3. ' =' → logprob: -5.356080055236816
    4. 's' → logprob: -7.481080055236816
    5. '   ' → logprob: -8.606080055236816
    6. 'e' → logprob: -9.731080055236816
    7. 'si' → logprob: -10.606080055236816
    8. '  ' → logprob: -10.606080055236816
    9. 'и' → logprob: -11.731080055236816
    10. '=i' → logprob: -11.981080055236816

Token 1582: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0040785204619169235
    2. ' =' → logprob: -5.504078388214111
    3. '=
' → logprob: -17.754077911376953
    4. '＝' → logprob: -18.004077911376953
    5. ',' → logprob: -18.754077911376953
    6. ' ' → logprob: -19.129077911376953
    7. ')' → logprob: -19.254077911376953
    8. '<|end|>' → logprob: -19.254077911376953
    9. '=}' → logprob: -19.379077911376953
    10. '=

' → logprob: -19.754077911376953

Token 1583: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.0948158382670954e-05
    2. ' ' → logprob: -11.250030517578125
    3. 'L' → logprob: -11.375030517578125
    4. '1' → logprob: -12.250030517578125
    5. 'B' → logprob: -14.125030517578125
    6. '-' → logprob: -15.000030517578125
    7. 'M' → logprob: -16.750030517578125
    8. '[' → logprob: -16.875030517578125
    9. ' L' → logprob: -17.125030517578125
    10. '00' → logprob: -17.312530517578125

Token 1584: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.4192871175473556e-05
    2. 'L' → logprob: -10.125054359436035
    3. '1' → logprob: -12.125054359436035
    4. ' ' → logprob: -12.125054359436035
    5. '[' → logprob: -14.000054359436035
    6. 'part' → logprob: -14.625054359436035
    7. 'B' → logprob: -14.875054359436035
    8. '-' → logprob: -15.125054359436035
    9. 'M' → logprob: -15.562554359436035
    10. '(' → logprob: -16.00005340576172

Token 1585: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010410134680569172
    2. '
' → logprob: -4.635410308837891
    3. '```' → logprob: -8.01041030883789
    4. ' for' → logprob: -8.13541030883789
    5. '#' → logprob: -11.01041030883789
    6. '  
' → logprob: -13.01041030883789
    7. '``' → logprob: -13.38541030883789
    8. '
' → logprob: -13.51041030883789
    9. ' 
' → logprob: -13.63541030883789
    10. '<|end|>' → logprob: -14.01041030883789

Token 1586: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1472419600977446e-06
    2. '#' → logprob: -14.750000953674316
    3. '```' → logprob: -14.875000953674316
    4. ' for' → logprob: -15.250000953674316
    5. '
' → logprob: -16.250001907348633
    6. '	for' → logprob: -18.750001907348633
    7. 'while' → logprob: -19.125001907348633
    8. '``' → logprob: -19.500001907348633
    9. 'from' → logprob: -20.250001907348633
    10. 'def' → logprob: -20.375001907348633

Token 1587: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. '#' → logprob: -18.375
    3. ' for' → logprob: -18.625
    4. '
' → logprob: -19.125
    5. 'while' → logprob: -19.5
    6. '```' → logprob: -19.5
    7. '	for' → logprob: -22.25
    8. 'def' → logprob: -22.375
    9. 'from' → logprob: -22.875
    10. '   ' → logprob: -23.375

Token 1588: 'ours' (ID: 2327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010622822679579258
    2. ' for' → logprob: -4.635622978210449
    3. '   ' → logprob: -8.26062297821045
    4. 'or' → logprob: -8.26062297821045
    5. 'r' → logprob: -9.01062297821045
    6. 'i' → logprob: -9.51062297821045
    7. 'ur' → logprob: -10.01062297821045
    8. 'o' → logprob: -10.26062297821045
    9. '       ' → logprob: -11.63562297821045
    10. '```' → logprob: -11.76062297821045

Token 1589: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024880575016140938
    2. 'part' → logprob: -4.274880409240723
    3. ' for' → logprob: -4.774880409240723
    4. 'in' → logprob: -6.649880409240723
    5. ' in' → logprob: -8.024880409240723
    6. ' part' → logprob: -8.399880409240723
    7. 'of' → logprob: -8.774880409240723
    8. 'range' → logprob: -9.274880409240723
    9. '(part' → logprob: -10.274880409240723
    10. '_,' → logprob: -11.274880409240723

Token 1590: ' chaque' (ID: 21194)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.00025037277373485267
    2. 'range' → logprob: -8.375250816345215
    3. ' part' → logprob: -10.875250816345215
    4. 'for' → logprob: -15.250250816345215
    5. 're' → logprob: -16.1252498626709
    6. 'par' → logprob: -16.2502498626709
    7. ' range' → logprob: -16.3752498626709
    8. 'parts' → logprob: -16.6252498626709
    9. 'enumer' → logprob: -17.0002498626709
    10. '[' → logprob: -17.2502498626709

Token 1591: ' interval' (ID: 17116)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.004045275505632162
    2. 'p' → logprob: -6.129045486450195
    3. ' part' → logprob: -6.629045486450195
    4. 'range' → logprob: -9.129045486450195
    5. '(part' → logprob: -9.629045486450195
    6. 'item' → logprob: -9.754045486450195
    7. 'i' → logprob: -9.879045486450195
    8. '([' → logprob: -10.004045486450195
    9. 'element' → logprob: -10.379045486450195
    10. 'pa' → logprob: -10.629045486450195

Token 1592: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5940894484519958
    2. 'for' → logprob: -1.3440895080566406
    3. ',' → logprob: -2.4690895080566406
    4. ' for' → logprob: -3.4690895080566406
    5. 'ée' → logprob: -3.7190895080566406
    6. 'r' → logprob: -3.8440895080566406
    7. '   ' → logprob: -5.844089508056641
    8. ',
' → logprob: -5.844089508056641
    9. '[
' → logprob: -6.094089508056641
    10. '```' → logprob: -6.219089508056641

Token 1593: ' stock' (ID: 6546)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.449985146522522
    2. ' in' → logprob: -1.449985146522522
    3. 'for' → logprob: -2.4499850273132324
    4. 'dans' → logprob: -3.9499850273132324
    5. ',' → logprob: -4.949985027313232
    6. '```' → logprob: -5.324985027313232
    7. ' for' → logprob: -5.449985027313232
    8. ' dans' → logprob: -6.324985027313232
    9. 'part' → logprob: -6.449985027313232
    10. 'de' → logprob: -6.949985027313232

Token 1594: 'é' (ID: 377)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3938012421131134
    2. 'for' → logprob: -1.393801212310791
    3. ' in' → logprob: -2.643801212310791
    4. ' for' → logprob: -5.518801212310791
    5. 'er' → logprob: -7.018801212310791
    6. '   ' → logprob: -8.39380168914795
    7. 'en' → logprob: -8.76880168914795
    8. 'e' → logprob: -9.14380168914795
    9. '[
' → logprob: -9.14380168914795
    10. '[' → logprob: -9.76880168914795

Token 1595: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12566006183624268
    2. 'for' → logprob: -3.250659942626953
    3. 'dans' → logprob: -3.375659942626953
    4. 'part' → logprob: -3.750659942626953
    5. ' in' → logprob: -4.125659942626953
    6. '```' → logprob: -6.000659942626953
    7. '(part' → logprob: -6.750659942626953
    8. ',' → logprob: -7.500659942626953
    9. ' dans' → logprob: -7.500659942626953
    10. ' for' → logprob: -8.750659942626953

Token 1596: ' la' (ID: 557)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.0280383548888494e-06
    2. ' part' → logprob: -13.875000953674316
    3. '
' → logprob: -18.875001907348633
    4. 'range' → logprob: -18.875001907348633
    5. '(part' → logprob: -19.375001907348633
    6. 'par' → logprob: -20.000001907348633
    7. 'parts' → logprob: -20.500001907348633
    8. '```' → logprob: -20.875001907348633
    9. '	part' → logprob: -21.000001907348633
    10. 'partition' → logprob: -22.000001907348633

Token 1597: ' liste' (ID: 31719)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -7.896309739408025e-07
    2. 'for' → logprob: -14.750000953674316
    3. 'range' → logprob: -15.375000953674316
    4. ' part' → logprob: -16.375
    5. 'parts' → logprob: -18.875
    6. '
' → logprob: -19.875
    7. '```' → logprob: -20.125
    8. 'par' → logprob: -20.25
    9. '(part' → logprob: -20.625
    10. '`' → logprob: -21.375

Token 1598: ' '' (ID: 461)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.04685904458165169
    2. 'for' → logprob: -3.1718590259552
    3. ' part' → logprob: -5.921859264373779
    4. 'in' → logprob: -7.546859264373779
    5. ' for' → logprob: -8.046858787536621
    6. 'range' → logprob: -9.296858787536621
    7. '(part' → logprob: -9.796858787536621
    8. '_,' → logprob: -9.921858787536621
    9. ' in' → logprob: -10.171858787536621
    10. 'parts' → logprob: -10.296858787536621

Token 1599: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -4.320199877838604e-07
    2. ' part' → logprob: -15.0
    3. '```' → logprob: -17.5
    4. 'parts' → logprob: -18.125
    5. 'range' → logprob: -18.75
    6. '(part' → logprob: -19.0
    7. '	part' → logprob: -19.5
    8. 'par' → logprob: -19.625
    9. '
' → logprob: -20.75
    10. 'for' → logprob: -20.875

Token 1600: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3512508273124695
    2. ':
' → logprob: -1.2262508869171143
    3. 'for' → logprob: -5.976250648498535
    4. 'in' → logprob: -9.851250648498535
    5. ',' → logprob: -9.976250648498535
    6. '):
' → logprob: -10.226250648498535
    7. ' for' → logprob: -10.601250648498535
    8. '   ' → logprob: -10.851250648498535
    9. ' :' → logprob: -10.851250648498535
    10. '```' → logprob: -11.101250648498535

Token 1601: ' trait' (ID: 15458)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5024286508560181
    2. ':' → logprob: -1.252428650856018
    3. ':
' → logprob: -2.2524285316467285
    4. '```' → logprob: -6.3774285316467285
    5. ' for' → logprob: -7.0024285316467285
    6. 'in' → logprob: -7.6274285316467285
    7. '   ' → logprob: -7.6274285316467285
    8. 'pour' → logprob: -8.502429008483887
    9. ',' → logprob: -9.377429008483887
    10. 'dans' → logprob: -10.002429008483887

Token 1602: 'ée' (ID: 2894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003908487968146801
    2. ' for' → logprob: -6.378908634185791
    3. 's' → logprob: -6.753908634185791
    4. 'in' → logprob: -8.253908157348633
    5. 'ant' → logprob: -8.628908157348633
    6. '#' → logprob: -8.878908157348633
    7. 'é' → logprob: -9.003908157348633
    8. 'e' → logprob: -9.128908157348633
    9. 'part' → logprob: -9.628908157348633
    10. 'er' → logprob: -10.128908157348633

Token 1603: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2905808985233307
    2. ':
' → logprob: -1.9155808687210083
    3. 'in' → logprob: -2.540580987930298
    4. 'for' → logprob: -5.040580749511719
    5. 'dans' → logprob: -5.290580749511719
    6. '   ' → logprob: -5.790580749511719
    7. ',' → logprob: -5.790580749511719
    8. ' in' → logprob: -6.040580749511719
    9. 'en' → logprob: -6.415580749511719
    10. 'as' → logprob: -6.665580749511719

Token 1604: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3544423381972592e-05
    2. '```' → logprob: -11.25001335144043
    3. ' for' → logprob: -14.62501335144043
    4. '
' → logprob: -17.37501335144043
    5. '``' → logprob: -17.87501335144043
    6. 'pour' → logprob: -20.00001335144043
    7. '   ' → logprob: -21.37501335144043
    8. '	for' → logprob: -22.00001335144043
    9. '#' → logprob: -22.12501335144043
    10. 'in' → logprob: -23.00001335144043

Token 1605: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8383123278617859
    2. 'p' → logprob: -1.5883123874664307
    3. 'length' → logprob: -1.8383123874664307
    4. '_,' → logprob: -2.8383123874664307
    5. 'l' → logprob: -3.2133123874664307
    6. 'digits' → logprob: -3.8383123874664307
    7. 'digit' → logprob: -3.9633123874664307
    8. 'part' → logprob: -4.213312149047852
    9. 'num' → logprob: -4.963312149047852
    10. ' length' → logprob: -4.963312149047852

Token 1606: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11311979591846466
    2. ' in' → logprob: -2.2381198406219482
    3. ' ' → logprob: -9.488120079040527
    4. ',' → logprob: -9.988120079040527
    5. '[' → logprob: -10.363120079040527
    6. 'dans' → logprob: -10.738120079040527
    7. 's' → logprob: -10.988120079040527
    8. 'n' → logprob: -11.238120079040527
    9. ')' → logprob: -11.613120079040527
    10. 'range' → logprob: -11.863120079040527

Token 1607: ' range' (ID: 3352)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5832309722900391
    2. 'range' → logprob: -0.8332309722900391
    3. ' range' → logprob: -5.208230972290039
    4. ' part' → logprob: -6.333230972290039
    5. '[' → logprob: -12.208230972290039
    6. 're' → logprob: -12.958230972290039
    7. 'in' → logprob: -13.083230972290039
    8. '(part' → logprob: -13.208230972290039
    9. 'parts' → logprob: -13.333230972290039
    10. '0' → logprob: -14.333230972290039

Token 1608: '(' (ID: 7)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10203301161527634
    2. ' in' → logprob: -2.3520328998565674
    3. '0' → logprob: -7.2270331382751465
    4. 'part' → logprob: -7.2270331382751465
    5. 'range' → logprob: -9.352032661437988
    6. ' ' → logprob: -9.477032661437988
    7. '(part' → logprob: -9.727032661437988
    8. ')' → logprob: -9.977032661437988
    9. '[' → logprob: -10.602032661437988
    10. ',' → logprob: -10.602032661437988

Token 1609: '0' (ID: 15)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.012673276476562023
    2. 'range' → logprob: -4.387673377990723
    3. '0' → logprob: -9.262673377990723
    4. ' part' → logprob: -9.762673377990723
    5. ' range' → logprob: -12.512673377990723
    6. '[' → logprob: -12.887673377990723
    7. ')' → logprob: -13.637673377990723
    8. 're' → logprob: -13.637673377990723
    9. '   ' → logprob: -13.887673377990723
    10. '(part' → logprob: -14.762673377990723

Token 1610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02599499002099037
    2. 'in' → logprob: -3.9009950160980225
    3. ' in' → logprob: -6.525994777679443
    4. ',len' → logprob: -6.775994777679443
    5. ')' → logprob: -6.900994777679443
    6. ' ,' → logprob: -7.525994777679443
    7. '):
' → logprob: -7.650994777679443
    8. '):' → logprob: -8.650995254516602
    9. '   ' → logprob: -9.025995254516602
    10. ',in' → logprob: -9.275995254516602

Token 1611: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0006416652468033135
    2. ' len' → logprob: -7.500641822814941
    3. 'L' → logprob: -9.875641822814941
    4. 'part' → logprob: -11.125641822814941
    5. '4' → logprob: -11.375641822814941
    6. '(len' → logprob: -12.250641822814941
    7. '60' → logprob: -13.125641822814941
    8. 'range' → logprob: -13.750641822814941
    9. '   ' → logprob: -14.500641822814941
    10. '10' → logprob: -15.125641822814941

Token 1612: '(part' (ID: 51033)
  Prédit: '(part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.018151111900806427
    2. 'part' → logprob: -4.01815128326416
    3. ' part' → logprob: -14.39315128326416
    4. '(parts' → logprob: -15.51815128326416
    5. '(' → logprob: -16.268150329589844
    6. '(range' → logprob: -16.393150329589844
    7. '-part' → logprob: -16.518150329589844
    8. 'range' → logprob: -16.768150329589844
    9. '	part' → logprob: -17.018150329589844
    10. '_part' → logprob: -17.143150329589844

Token 1613: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003366288496181369
    2. '):' → logprob: -5.753366470336914
    3. '):
' → logprob: -9.753366470336914
    4. ']):
' → logprob: -9.878366470336914
    5. '   ' → logprob: -10.753366470336914
    6. ')' → logprob: -10.878366470336914
    7. '[' → logprob: -11.503366470336914
    8. ':
' → logprob: -12.253366470336914
    9. ']:
' → logprob: -12.253366470336914
    10. ')):
' → logprob: -12.878366470336914

Token 1614: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1974610686302185
    2. 'l' → logprob: -2.3224611282348633
    3. 'if' → logprob: -3.6974611282348633
    4. ' if' → logprob: -4.322461128234863
    5. 'n' → logprob: -4.447461128234863
    6. 'num' → logprob: -4.822461128234863
    7. ' l' → logprob: -5.322461128234863
    8. 'digit' → logprob: -5.822461128234863
    9. 'length' → logprob: -5.947461128234863
    10. '```' → logprob: -6.072461128234863

Token 1615: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5515856146812439
    2. 'if' → logprob: -2.1765856742858887
    3. 'length' → logprob: -2.1765856742858887
    4. ' l' → logprob: -3.1765856742858887
    5. ' if' → logprob: -3.3015856742858887
    6. ' length' → logprob: -3.6765856742858887
    7. 'a' → logprob: -3.9265856742858887
    8. 'num' → logprob: -4.051585674285889
    9. 'n' → logprob: -4.676585674285889
    10. 'part' → logprob: -4.926585674285889

Token 1616: ' Dé' (ID: 27247)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7880371809005737
    2. 'l' → logprob: -1.1630371809005737
    3. 'if' → logprob: -2.0380373001098633
    4. 'digit' → logprob: -3.6630373001098633
    5. 'a' → logprob: -3.9130373001098633
    6. 'digits' → logprob: -3.9130373001098633
    7. 'd' → logprob: -4.038037300109863
    8. 'num' → logprob: -5.288037300109863
    9. 'part' → logprob: -5.663037300109863
    10. 'leng' → logprob: -6.538037300109863

Token 1617: 'composition' (ID: 119135)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03197101131081581
    2. 'part' → logprob: -4.781970977783203
    3. 'if' → logprob: -4.906970977783203
    4. 'ch' → logprob: -5.031970977783203
    5. 'L' → logprob: -5.906970977783203
    6. 'n' → logprob: -6.531970977783203
    7. 'c' → logprob: -7.156970977783203
    8. 'p' → logprob: -7.406970977783203
    9. '   ' → logprob: -7.656970977783203
    10. 'a' → logprob: -7.906970977783203

Token 1618: ' de' (ID: 334)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6345542669296265
    2. '_,' → logprob: -1.7595542669296265
    3. '   ' → logprob: -2.884554386138916
    4. 'd' → logprob: -2.884554386138916
    5. 'n' → logprob: -3.009554386138916
    6. 'length' → logprob: -3.259554386138916
    7. 'part' → logprob: -3.509554386138916
    8. ',' → logprob: -3.759554386138916
    9. 'p' → logprob: -4.884554386138916
    10. 'num' → logprob: -5.259554386138916

Token 1619: ' chaque' (ID: 21194)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.20303672552108765
    2. 'l' → logprob: -2.2030367851257324
    3. '_,' → logprob: -4.203036785125732
    4. 'ch' → logprob: -4.328036785125732
    5. 'p' → logprob: -5.078036785125732
    6. 'i' → logprob: -5.203036785125732
    7. '_' → logprob: -5.578036785125732
    8. 'parts' → logprob: -5.578036785125732
    9. 'n' → logprob: -5.703036785125732
    10. 'd' → logprob: -5.703036785125732

Token 1620: ' sous' (ID: 14487)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.02815120667219162
    2. 'i' → logprob: -4.528151035308838
    3. 'ch' → logprob: -5.278151035308838
    4. '[i' → logprob: -5.528151035308838
    5. ' part' → logprob: -6.653151035308838
    6. '[' → logprob: -6.653151035308838
    7. 'l' → logprob: -6.778151035308838
    8. 'digit' → logprob: -7.653151035308838
    9. '```' → logprob: -7.778151035308838
    10. '#' → logprob: -7.903151035308838

Token 1621: '-l' (ID: 2887)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.13820883631706238
    2. 'l' → logprob: -2.5132088661193848
    3. 'range' → logprob: -4.888208866119385
    4. 'length' → logprob: -5.138208866119385
    5. '[' → logprob: -5.138208866119385
    6. '[i' → logprob: -5.263208866119385
    7. 'list' → logprob: -5.638208866119385
    8. 'ch' → logprob: -5.763208866119385
    9. 'len' → logprob: -5.888208866119385
    10. 'i' → logprob: -5.888208866119385

Token 1622: 'iste' (ID: 4872)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5421389937400818
    2. 'liste' → logprob: -1.6671390533447266
    3. 'list' → logprob: -3.0421390533447266
    4. '[' → logprob: -3.0421390533447266
    5. '[i' → logprob: -3.1671390533447266
    6. 'i' → logprob: -3.4171390533447266
    7. 'ist' → logprob: -3.7921390533447266
    8. 'lst' → logprob: -4.667139053344727
    9. 'l' → logprob: -5.792139053344727
    10. 'a' → logprob: -5.917139053344727

Token 1623: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.2740461528301239
    2. '[' → logprob: -3.3990461826324463
    3. ' en' → logprob: -3.5240461826324463
    4. 'num' → logprob: -3.5240461826324463
    5. '[i' → logprob: -4.024045944213867
    6. '[n' → logprob: -4.274045944213867
    7. 'l' → logprob: -4.274045944213867
    8. '=' → logprob: -4.399045944213867
    9. '[num' → logprob: -4.399045944213867
    10. '```' → logprob: -4.524045944213867

Token 1624: ' variables' (ID: 13955)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.27761703729629517
    2. '_,' → logprob: -1.9026169776916504
    3. 'length' → logprob: -3.6526169776916504
    4. 'd' → logprob: -4.15261697769165
    5. 'digit' → logprob: -4.15261697769165
    6. 'digits' → logprob: -4.65261697769165
    7. 'num' → logprob: -5.52761697769165
    8. 'k' → logprob: -5.77761697769165
    9. 'part' → logprob: -5.90261697769165
    10. 'c' → logprob: -5.90261697769165

Token 1625: ' '' (ID: 461)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10297980159521103
    2. 'd' → logprob: -3.602979898452759
    3. '_,' → logprob: -3.852979898452759
    4. 'length' → logprob: -3.977979898452759
    5. 'digit' → logprob: -4.60297966003418
    6. 'digits' → logprob: -4.85297966003418
    7. '```' → logprob: -6.35297966003418
    8. 'n' → logprob: -6.47797966003418
    9. 'c' → logprob: -6.60297966003418
    10. 'num' → logprob: -6.60297966003418

Token 1626: 'length' (ID: 7914)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8086453080177307
    2. 'length' → logprob: -1.683645248413086
    3. 'd' → logprob: -2.308645248413086
    4. 'digits' → logprob: -2.433645248413086
    5. 'digit' → logprob: -3.058645248413086
    6. '_,' → logprob: -3.433645248413086
    7. 'num' → logprob: -3.558645248413086
    8. 'c' → logprob: -4.058645248413086
    9. 'part' → logprob: -4.183645248413086
    10. 'k' → logprob: -5.183645248413086

Token 1627: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003045569872483611
    2. ',length' → logprob: -6.003045558929443
    3. 'length' → logprob: -9.003046035766602
    4. 's' → logprob: -9.753046035766602
    5. ',n' → logprob: -9.878046035766602
    6. ',num' → logprob: -10.003046035766602
    7. ' ,' → logprob: -10.253046035766602
    8. '_,' → logprob: -10.378046035766602
    9. ',d' → logprob: -10.628046035766602
    10. ',size' → logprob: -10.628046035766602

Token 1628: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032414051238447428
    2. ',length' → logprob: -5.753241539001465
    3. 'length' → logprob: -10.628241539001465
    4. '[length' → logprob: -10.753241539001465
    5. ',l' → logprob: -12.003241539001465
    6. '=' → logprob: -12.753241539001465
    7. ' ,' → logprob: -13.378241539001465
    8. '(length' → logprob: -13.753241539001465
    9. ',size' → logprob: -14.128241539001465
    10. ',width' → logprob: -14.128241539001465

Token 1629: 'nombre' (ID: 28576)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.008002284914255142
    2. 'part' → logprob: -5.133002281188965
    3. 'l' → logprob: -6.258002281188965
    4. ' length' → logprob: -9.258002281188965
    5. 'L' → logprob: -11.008002281188965
    6. 'leng' → logprob: -11.258002281188965
    7. ',length' → logprob: -11.383002281188965
    8. '_,' → logprob: -11.758002281188965
    9. ',' → logprob: -13.258002281188965
    10. 'long' → logprob: -13.258002281188965

Token 1630: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043240685015916824
    2. '_,' → logprob: -3.918240785598755
    3. 'de' → logprob: -5.043240547180176
    4. '_of' → logprob: -5.793240547180176
    5. ' ,' → logprob: -6.168240547180176
    6. '```' → logprob: -6.418240547180176
    7. 'length' → logprob: -6.543240547180176
    8. 'of' → logprob: -6.793240547180176
    9. ',length' → logprob: -7.168240547180176
    10. '_de' → logprob: -7.168240547180176

Token 1631: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.44858551025390625
    2. 'digits' → logprob: -1.0735855102539062
    3. 'part' → logprob: -5.323585510253906
    4. 'd' → logprob: -5.573585510253906
    5. 'c' → logprob: -5.823585510253906
    6. ' chiffres' → logprob: -6.073585510253906
    7. ' digits' → logprob: -6.198585510253906
    8. 'car' → logprob: -6.448585510253906
    9. 'parts' → logprob: -7.323585510253906
    10. 'chars' → logprob: -7.698585510253906

Token 1632: ' des' (ID: 731)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008401192026212811
    2. '),' → logprob: -8.250840187072754
    3. ',length' → logprob: -8.500840187072754
    4. '```' → logprob: -8.875840187072754
    5. '`,' → logprob: -9.375840187072754
    6. ' ,' → logprob: -10.250840187072754
    7. '',' → logprob: -10.375840187072754
    8. 'length' → logprob: -10.875840187072754
    9. ')' → logprob: -11.000840187072754
    10. '[length' → logprob: -11.750840187072754

Token 1633: ' nombres' (ID: 76205)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.26312586665153503
    2. ' part' → logprob: -1.5131258964538574
    3. 'length' → logprob: -5.888125896453857
    4. 'parts' → logprob: -6.388125896453857
    5. 'number' → logprob: -6.638125896453857
    6. ' parts' → logprob: -7.013125896453857
    7. 'numbers' → logprob: -7.388125896453857
    8. 'digits' → logprob: -7.388125896453857
    9. 'nombre' → logprob: -7.638125896453857
    10. ' number' → logprob: -7.888125896453857

Token 1634: ' concernés' (ID: 192160)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006650181603617966
    2. ',length' → logprob: -8.500664710998535
    3. '),' → logprob: -9.125664710998535
    4. '```' → logprob: -9.500664710998535
    5. 'length' → logprob: -10.000664710998535
    6. ',
' → logprob: -10.125664710998535
    7. '`,' → logprob: -10.125664710998535
    8. '[length' → logprob: -10.250664710998535
    9. '   ' → logprob: -10.625664710998535
    10. '],' → logprob: -11.125664710998535

Token 1635: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013919607736170292
    2. '),' → logprob: -4.388919830322266
    3. '',' → logprob: -8.138919830322266
    4. ',length' → logprob: -8.138919830322266
    5. 'length' → logprob: -8.388919830322266
    6. '   ' → logprob: -8.388919830322266
    7. ')' → logprob: -8.888919830322266
    8. '`,' → logprob: -9.388919830322266
    9. '```' → logprob: -9.763919830322266
    10. ' ,' → logprob: -10.763919830322266

Token 1636: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.13561634719371796
    2. 'length' → logprob: -2.1356163024902344
    3. '_,' → logprob: -5.010616302490234
    4. ' l' → logprob: -6.510616302490234
    5. '   ' → logprob: -8.635616302490234
    6. ' length' → logprob: -8.760616302490234
    7. '_l' → logprob: -9.635616302490234
    8. ' _,' → logprob: -9.885616302490234
    9. ',' → logprob: -11.760616302490234
    10. '  ' → logprob: -12.135616302490234

Token 1637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017517358355689794
    2. 'ength' → logprob: -9.625175476074219
    3. ',r' → logprob: -10.500175476074219
    4. ' ,' → logprob: -10.750175476074219
    5. '=' → logprob: -11.000175476074219
    6. ',
' → logprob: -11.500175476074219
    7. ',l' → logprob: -11.875175476074219
    8. ',length' → logprob: -12.250175476074219
    9. 's' → logprob: -12.500175476074219
    10. ',e' → logprob: -12.750175476074219

Token 1638: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002438432304188609
    2. ' r' → logprob: -6.377438545227051
    3. 'l' → logprob: -7.752438545227051
    4. '_,' → logprob: -9.00243854522705
    5. 'and' → logprob: -9.37743854522705
    6. ' and' → logprob: -10.62743854522705
    7. ',' → logprob: -11.00243854522705
    8. 'et' → logprob: -11.00243854522705
    9. '```' → logprob: -11.62743854522705
    10. '#' → logprob: -12.25243854522705

Token 1639: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08345667272806168
    2. ',' → logprob: -2.5834567546844482
    3. ',length' → logprob: -6.333456516265869
    4. ' =' → logprob: -6.458456516265869
    5. 'length' → logprob: -7.083456516265869
    6. '(length' → logprob: -8.708456993103027
    7. '```' → logprob: -9.083456993103027
    8. '[length' → logprob: -10.708456993103027
    9. '   ' → logprob: -10.958456993103027
    10. '=
' → logprob: -10.958456993103027

Token 1640: '   ' (ID: 271)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.005096426233649254
    2. '[length' → logprob: -6.130096435546875
    3. ' length' → logprob: -6.630096435546875
    4. '(length' → logprob: -7.255096435546875
    5. ',length' → logprob: -7.505096435546875
    6. ',' → logprob: -8.880096435546875
    7. '   ' → logprob: -9.005096435546875
    8. 'part' → logprob: -10.255096435546875
    9. '```' → logprob: -11.630096435546875
    10. 'l' → logprob: -12.255096435546875

Token 1641: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -5.2166411478538066e-05
    2. ' length' → logprob: -10.375052452087402
    3. '(length' → logprob: -11.500052452087402
    4. '[length' → logprob: -11.875052452087402
    5. 'leng' → logprob: -13.375052452087402
    6. ',length' → logprob: -14.000052452087402
    7. '   ' → logprob: -14.375052452087402
    8. 'l' → logprob: -14.875052452087402
    9. '```' → logprob: -15.375052452087402
    10. 'part' → logprob: -16.000051498413086

Token 1642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11355022341012955
    2. '=' → logprob: -2.2385501861572266
    3. ',length' → logprob: -7.363550186157227
    4. ' =' → logprob: -10.113550186157227
    5. ',l' → logprob: -10.238550186157227
    6. ' ,' → logprob: -12.988550186157227
    7. '[length' → logprob: -13.488550186157227
    8. '=
' → logprob: -13.613550186157227
    9. ',
' → logprob: -13.613550186157227
    10. ',num' → logprob: -13.738550186157227

Token 1643: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.023262249305844307
    2. ' l' → logprob: -3.7732622623443604
    3. '_,' → logprob: -11.773262023925781
    4. '_' → logprob: -12.023262023925781
    5. '_l' → logprob: -13.398262023925781
    6. '_=' → logprob: -14.273262023925781
    7. ' _,' → logprob: -15.398262023925781
    8. '	l' → logprob: -15.523262023925781
    9. ' _' → logprob: -15.898262023925781
    10. '   ' → logprob: -16.14826202392578

Token 1644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.017927029868588e-05
    2. ',r' → logprob: -9.750080108642578
    3. '=' → logprob: -11.000080108642578
    4. ' ,' → logprob: -12.750080108642578
    5. ',l' → logprob: -14.625080108642578
    6. ',
' → logprob: -15.250080108642578
    7. ',c' → logprob: -15.875080108642578
    8. ',n' → logprob: -16.000080108642578
    9. ',t' → logprob: -16.000080108642578
    10. ',\
' → logprob: -16.250080108642578

Token 1645: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0015028368216007948
    2. ' r' → logprob: -6.501502990722656
    3. '=r' → logprob: -15.251502990722656
    4. '   ' → logprob: -16.626502990722656
    5. '=' → logprob: -16.751502990722656
    6. '	r' → logprob: -17.001502990722656
    7. ' ' → logprob: -17.126502990722656
    8. 'm' → logprob: -17.251502990722656
    9. 'b' → logprob: -17.501502990722656
    10. '```' → logprob: -17.501502990722656

Token 1646: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08899661898612976
    2. ' =' → logprob: -2.463996648788452
    3. ',' → logprob: -10.338996887207031
    4. '   ' → logprob: -11.088996887207031
    5. '=r' → logprob: -12.588996887207031
    6. '=line' → logprob: -13.088996887207031
    7. '=
' → logprob: -14.213996887207031
    8. '=user' → logprob: -14.463996887207031
    9. 'if' → logprob: -15.088996887207031
    10. '=l' → logprob: -15.213996887207031

Token 1647: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.048596687614917755
    2. ' part' → logprob: -3.0485966205596924
    3. '	part' → logprob: -11.923596382141113
    4. '   ' → logprob: -13.548596382141113
    5. '(part' → logprob: -14.298596382141113
    6. '
' → logprob: -15.673596382141113
    7. ' parti' → logprob: -16.17359733581543
    8. '_part' → logprob: -16.17359733581543
    9. ' ' → logprob: -16.17359733581543
    10. 'par' → logprob: -16.42359733581543

Token 1648: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0433478355407715
    2. '[' → logprob: -1.1683478355407715
    3. ' =' → logprob: -1.6683478355407715
    4. '   ' → logprob: -2.7933478355407715
    5. '[i' → logprob: -3.2933478355407715
    6. '<|end|>' → logprob: -4.0433478355407715
    7. '<|end|>' → logprob: -5.1683478355407715
    8. '[
' → logprob: -5.1683478355407715
    9. '=
' → logprob: -5.4183478355407715
    10. '
' → logprob: -5.7933478355407715

Token 1649: ']
' (ID: 1592)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5096380114555359
    2. ' =' → logprob: -1.2596380710601807
    3. '   ' → logprob: -3.0096380710601807
    4. ')' → logprob: -3.7596380710601807
    5. '<|end|>' → logprob: -4.259637832641602
    6. '
' → logprob: -4.634637832641602
    7. ']' → logprob: -4.884637832641602
    8. '#' → logprob: -5.884637832641602
    9. ',' → logprob: -6.259637832641602
    10. ']=' → logprob: -7.009637832641602

Token 1650: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08495926856994629
    2. '```' → logprob: -2.8349592685699463
    3. '<|end|>' → logprob: -4.834959030151367
    4. '
' → logprob: -5.209959030151367
    5. ' if' → logprob: -5.334959030151367
    6. 'if' → logprob: -5.959959030151367
    7. '    
' → logprob: -7.209959030151367
    8. '``' → logprob: -7.709959030151367
    9. '	if' → logprob: -8.459959030151367
    10. '  
' → logprob: -8.959959030151367

Token 1651: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.706767201423645
    2. 'if' → logprob: -0.831767201423645
    3. ' if' → logprob: -2.7067670822143555
    4. '```' → logprob: -6.0817670822143555
    5. '<|end|>' → logprob: -7.0817670822143555
    6. '
' → logprob: -7.8317670822143555
    7. '    
' → logprob: -7.9567670822143555
    8. '#' (adapté à ' #') → logprob: -8.831767082214355
    9. ' 
' → logprob: -9.081767082214355
    10. '	if' → logprob: -9.206767082214355

Token 1652: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0011347393738105893
    2. 'n' → logprob: -7.376134872436523
    3. '#' → logprob: -8.251134872436523
    4. 'ans' → logprob: -9.126134872436523
    5. 'length' → logprob: -10.251134872436523
    6. '
' → logprob: -10.376134872436523
    7. '```' → logprob: -10.501134872436523
    8. ' if' → logprob: -11.001134872436523
    9. 'continue' → logprob: -11.376134872436523
    10. 'part' → logprob: -13.251134872436523

Token 1653: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038166917860507965
    2. '+=' → logprob: -3.6631669998168945
    3. ' =' → logprob: -5.4131669998168945
    4. 'if' → logprob: -6.4131669998168945
    5. ' +=' → logprob: -6.4131669998168945
    6. 'ans' → logprob: -6.5381669998168945
    7. 'part' → logprob: -7.6631669998168945
    8. '   ' → logprob: -7.9131669998168945
    9. '(ans' → logprob: -8.163166999816895
    10. '=(' → logprob: -8.288166999816895

Token 1654: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06080297753214836
    2. '(r' → logprob: -3.935802936553955
    3. 'max' → logprob: -4.310802936553955
    4. 'part' → logprob: -4.310802936553955
    5. '0' → logprob: -5.560802936553955
    6. 'ans' → logprob: -6.060802936553955
    7. ' r' → logprob: -6.185802936553955
    8. 'parts' → logprob: -6.435802936553955
    9. '(max' → logprob: -7.435802936553955
    10. '(part' → logprob: -8.060803413391113

Token 1655: ' valeur' (ID: 41664)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7748109102249146
    2. 'nombre' → logprob: -1.8998109102249146
    3. 'part' → logprob: -1.8998109102249146
    4. 'count' → logprob: -3.024810791015625
    5. 'ans' → logprob: -3.399810791015625
    6. '```' → logprob: -3.524810791015625
    7. 'r' → logprob: -3.774810791015625
    8. 'next' → logprob: -4.024810791015625
    9. '(n' → logprob: -4.024810791015625
    10. 'max' → logprob: -4.149810791015625

Token 1656: ' de' (ID: 334)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.24131442606449127
    2. 'max' → logprob: -2.24131441116333
    3. 'r' → logprob: -3.49131441116333
    4. '(r' → logprob: -4.36631441116333
    5. '=' → logprob: -4.61631441116333
    6. ' =' → logprob: -4.74131441116333
    7. 'ans' → logprob: -5.36631441116333
    8. '```' → logprob: -5.36631441116333
    9. 'diff' → logprob: -5.74131441116333
    10. 'if' → logprob: -5.99131441116333

Token 1657: ' départ' (ID: 32693)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5475477576255798
    2. 'r' → logprob: -1.1725478172302246
    3. 'max' → logprob: -2.4225478172302246
    4. 'parts' → logprob: -4.922547817230225
    5. '0' → logprob: -5.172547817230225
    6. '(r' → logprob: -5.297547817230225
    7. '(part' → logprob: -7.422547817230225
    8. 'ans' → logprob: -7.422547817230225
    9. '(max' → logprob: -7.672547817230225
    10. '```' → logprob: -7.672547817230225

Token 1658: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22134104371070862
    2. 'l' → logprob: -2.221341133117676
    3. ' =' → logprob: -2.846341133117676
    4. '```' → logprob: -4.596341133117676
    5. '=l' → logprob: -5.346341133117676
    6. '   ' → logprob: -5.846341133117676
    7. 'part' → logprob: -5.846341133117676
    8. ',' → logprob: -6.096341133117676
    9. '(l' → logprob: -6.221341133117676
    10. 'for' → logprob: -6.846341133117676

Token 1659: 'const' (ID: 1671)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5085312128067017
    2. 'part' → logprob: -1.2585312128067017
    3. 'l' → logprob: -2.633531093597412
    4. 'L' → logprob: -4.133531093597412
    5. 'parts' → logprob: -4.883531093597412
    6. 'B' → logprob: -5.008531093597412
    7. 'A' → logprob: -5.258531093597412
    8. 'n' → logprob: -6.758531093597412
    9. 'ans' → logprob: -6.883531093597412
    10. 'max' → logprob: -7.383531093597412

Token 1660: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2544059753417969
    2. '=' → logprob: -1.5044059753417969
    3. 'a' → logprob: -1.7544059753417969
    4. 'A' → logprob: -2.379405975341797
    5. 's' → logprob: -3.004405975341797
    6. ')' → logprob: -3.629405975341797
    7. 'B' → logprob: -4.129405975341797
    8. 'r' → logprob: -4.379405975341797
    9. '```' → logprob: -4.379405975341797
    10. 'L' → logprob: -4.879405975341797

Token 1661: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14368052780628204
    2. ' =' → logprob: -2.0186805725097656
    3. ',' → logprob: -8.268680572509766
    4. '=B' → logprob: -8.393680572509766
    5. '=b' → logprob: -8.768680572509766
    6. '=A' → logprob: -9.143680572509766
    7. 'b' → logprob: -9.768680572509766
    8. '=a' → logprob: -10.143680572509766
    9. '   ' → logprob: -10.143680572509766
    10. '```' → logprob: -10.393680572509766

Token 1662: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1896950006484985
    2. 'l' → logprob: -1.4396950006484985
    3. 'length' → logprob: -1.9396950006484985
    4. 'parts' → logprob: -1.9396950006484985
    5. 'part' → logprob: -2.064694881439209
    6. 'r' → logprob: -3.939694881439209
    7. 'B' → logprob: -4.439694881439209
    8. 'L' → logprob: -5.689694881439209
    9. '(' → logprob: -6.189694881439209
    10. 'ans' → logprob: -6.814694881439209

Token 1663: ' sé' (ID: 7462)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.6817115545272827
    2. 'part' → logprob: -0.9317115545272827
    3. 'ans' → logprob: -2.6817116737365723
    4. 'val' → logprob: -4.931711673736572
    5. '```' → logprob: -5.556711673736572
    6. 'n' → logprob: -5.806711673736572
    7. 'r' → logprob: -5.806711673736572
    8. 'l' → logprob: -6.306711673736572
    9. 'B' → logprob: -6.681711673736572
    10. 'start' → logprob: -6.931711673736572

Token 1664: 'quence' (ID: 6975)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.4758312702178955
    2. '```' → logprob: -1.7258312702178955
    3. 'if' → logprob: -1.8508312702178955
    4. 'b' → logprob: -2.7258312702178955
    5. 'n' → logprob: -2.8508312702178955
    6. 'ans' → logprob: -2.9758312702178955
    7. 'const' → logprob: -3.2258312702178955
    8. 'l' → logprob: -3.4758312702178955
    9. 'r' → logprob: -3.4758312702178955
    10. '#' → logprob: -3.8508312702178955

Token 1665: ' correspond' (ID: 11095)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2588716447353363
    2. '   ' → logprob: -1.8838716745376587
    3. '=A' → logprob: -3.383871555328369
    4. ' =' → logprob: -3.508871555328369
    5. 'A' → logprob: -5.383871555328369
    6. 'const' → logprob: -5.883871555328369
    7. 'a' → logprob: -7.008871555328369
    8. '=B' → logprob: -7.133871555328369
    9. 'part' → logprob: -7.383871555328369
    10. '       ' → logprob: -7.758871555328369

Token 1666: 'ante' (ID: 2116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.492449015378952
    2. '=' → logprob: -1.6174490451812744
    3. ' =' → logprob: -2.8674490451812744
    4. '=
' → logprob: -2.9924490451812744
    5. ' à' → logprob: -3.6174490451812744
    6. 'à' → logprob: -4.242448806762695
    7. 'a' → logprob: -4.492448806762695
    8. '    
' → logprob: -5.367448806762695
    9. '
' → logprob: -5.492448806762695
    10. ',' → logprob: -5.992448806762695

Token 1667: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3652532398700714
    2. ' =' → logprob: -1.240253210067749
    3. '   ' → logprob: -4.240253448486328
    4. ',' → logprob: -6.365253448486328
    5. '=A' → logprob: -8.865253448486328
    6. ')' → logprob: -9.615253448486328
    7. '=a' → logprob: -9.865253448486328
    8. '    ' → logprob: -10.365253448486328
    9. '[' → logprob: -10.615253448486328
    10. '=r' → logprob: -10.865253448486328

Token 1668: 'dern' (ID: 19098)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.29169294238090515
    2. 'part' → logprob: -2.2916929721832275
    3. 'length' → logprob: -2.7916929721832275
    4. 'B' → logprob: -2.9166929721832275
    5. 'r' → logprob: -4.666692733764648
    6. 'l' → logprob: -5.041692733764648
    7. 'L' → logprob: -5.791692733764648
    8. '0' → logprob: -6.041692733764648
    9. 'parts' → logprob: -6.041692733764648
    10. 'ans' → logprob: -6.291692733764648

Token 1669: 'ier' (ID: 905)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1536304950714111
    2. 'B' → logprob: -1.9036304950714111
    3. 't' → logprob: -1.9036304950714111
    4. '```' → logprob: -1.9036304950714111
    5. 'r' → logprob: -2.778630495071411
    6. ' =' → logprob: -3.153630495071411
    7. '   ' → logprob: -3.403630495071411
    8. '=B' → logprob: -4.403630256652832
    9. 'u' → logprob: -4.778630256652832
    10. '#' → logprob: -4.778630256652832

Token 1670: ' nombre' (ID: 9733)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -1.5005062818527222
    2. '=' → logprob: -1.6255062818527222
    3. 'const' → logprob: -1.8755062818527222
    4. '+' → logprob: -1.8755062818527222
    5. 'nombre' → logprob: -3.2505064010620117
    6. '_token' → logprob: -3.6255064010620117
    7. 'num' → logprob: -3.8755064010620117
    8. '```' → logprob: -4.000506401062012
    9. 'r' → logprob: -4.250506401062012
    10. ' =' → logprob: -4.250506401062012

Token 1671: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.211700439453125
    2. '```' → logprob: -1.711700439453125
    3. ' +' → logprob: -2.211700439453125
    4. '-' → logprob: -2.461700439453125
    5. '=' → logprob: -2.586700439453125
    6. 'B' → logprob: -2.836700439453125
    7. ' -' → logprob: -3.211700439453125
    8. 'A' → logprob: -3.211700439453125
    9. ',' → logprob: -3.586700439453125
    10. ' =' → logprob: -3.836700439453125

Token 1672: ' l' (ID: 305)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.5638318061828613
    2. 'bl' → logprob: -1.0638318061828613
    3. 'la' → logprob: -3.9388318061828613
    4. 'block' → logprob: -4.063831806182861
    5. 'b' → logprob: -4.438831806182861
    6. '```' → logprob: -4.813831806182861
    7. 'ligne' → logprob: -5.063831806182861
    8. 'r' → logprob: -5.563831806182861
    9. 'l' → logprob: -5.563831806182861
    10. 'part' → logprob: -5.688831806182861

Token 1673: ''' (ID: 6)
  Prédit: 'igne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.3038967251777649
    2. 'ist' → logprob: -2.30389666557312
    3. 'r' → logprob: -3.30389666557312
    4. 'iste' → logprob: -3.55389666557312
    5. 'ine' → logprob: -4.553896903991699
    6. 'part' → logprob: -4.553896903991699
    7. 'range' → logprob: -4.678896903991699
    8. 'iné' → logprob: -4.803896903991699
    9. '')' → logprob: -5.178896903991699
    10. ')' → logprob: -5.428896903991699

Token 1674: 'interval' (ID: 37558)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -1.6331108808517456
    2. 'bloc' → logprob: -1.7581108808517456
    3. 'interval' → logprob: -2.133111000061035
    4. 'range' → logprob: -2.133111000061035
    5. 'a' → logprob: -2.258111000061035
    6. '_bloc' → logprob: -2.258111000061035
    7. 'i' → logprob: -3.008111000061035
    8. 'indice' → logprob: -3.508111000061035
    9. 'e' → logprob: -4.133111000061035
    10. '_block' → logprob: -4.508111000061035

Token 1675: 'le' (ID: 282)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9145918488502502
    2. 'e' → logprob: -1.5395917892456055
    3. ',' → logprob: -2.6645917892456055
    4. ')' → logprob: -2.9145917892456055
    5. 'ist' → logprob: -3.1645917892456055
    6. 'aire' → logprob: -3.2895917892456055
    7. ']+' → logprob: -4.0395917892456055
    8. 'ée' → logprob: -4.0395917892456055
    9. 'r' → logprob: -4.1645917892456055
    10. '   ' → logprob: -4.2895917892456055

Token 1676: ').
' (ID: 6294)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5380622744560242
    2. ' +' → logprob: -1.663062334060669
    3. '-' → logprob: -2.788062334060669
    4. ')' → logprob: -2.788062334060669
    5. '   ' → logprob: -3.788062334060669
    6. '```' → logprob: -3.788062334060669
    7. ' -' → logprob: -4.03806209564209
    8. '=' → logprob: -4.28806209564209
    9. ' =' → logprob: -5.16306209564209
    10. ',' → logprob: -5.28806209564209

Token 1677: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4847314655780792
    2. ' =' → logprob: -1.4847314357757568
    3. '=' → logprob: -2.484731435775757
    4. 'A' → logprob: -3.859731435775757
    5. ' B' → logprob: -4.109731674194336
    6. '```' → logprob: -4.484731674194336
    7. ',' → logprob: -5.359731674194336
    8. 'r' → logprob: -5.609731674194336
    9. 'const' → logprob: -5.734731674194336
    10. ' (' → logprob: -6.109731674194336

Token 1678: ' const' (ID: 1026)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' (adapté à ' const') → logprob: -0.03440996631979942
    2. 'B' → logprob: -4.284409999847412
    3. 'part' → logprob: -4.909409999847412
    4. '```' → logprob: -5.159409999847412
    5. 'start' → logprob: -6.409409999847412
    6. 'A' → logprob: -6.409409999847412
    7. '   ' → logprob: -6.784409999847412
    8. 'val' → logprob: -6.784409999847412
    9. 'last' → logprob: -7.534409999847412
    10. '``' → logprob: -8.159409523010254

Token 1679: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742880165576935
    2. ' =' → logprob: -0.9742879867553711
    3. ',' → logprob: -8.724287986755371
    4. '=B' → logprob: -11.599287986755371
    5. '＝' → logprob: -11.724287986755371
    6. '=r' → logprob: -11.849287986755371
    7. ')' → logprob: -11.974287986755371
    8. '   ' → logprob: -12.724287986755371
    9. '=int' → logprob: -12.849287986755371
    10. ')=' → logprob: -13.474287986755371

Token 1680: ' B' (ID: 418)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.9884738922119141
    2. 'B' → logprob: -1.488473892211914
    3. 'pow' → logprob: -1.738473892211914
    4. '(A' → logprob: -2.738473892211914
    5. 'A' → logprob: -2.863473892211914
    6. '(pow' → logprob: -3.238473892211914
    7. '(' → logprob: -3.738473892211914
    8. '((' → logprob: -4.363473892211914
    9. '(L' → logprob: -5.363473892211914
    10. '(length' → logprob: -5.738473892211914

Token 1681: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4223901033401489
    2. '*' → logprob: -1.172390103340149
    3. ' +' → logprob: -4.672389984130859
    4. '*(' → logprob: -4.797389984130859
    5. '<|end|>' → logprob: -4.797389984130859
    6. '+' → logprob: -5.172389984130859
    7. '   ' → logprob: -6.922389984130859
    8. '*r' → logprob: -7.547389984130859
    9. ')' → logprob: -8.42238998413086
    10. '**' → logprob: -8.42238998413086

Token 1682: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06880120933055878
    2. 'l' → logprob: -3.193801164627075
    3. '(r' → logprob: -3.818801164627075
    4. '(l' → logprob: -5.943801403045654
    5. 'length' → logprob: -8.193800926208496
    6. '(' → logprob: -8.443800926208496
    7. '((' → logprob: -8.568800926208496
    8. '(length' → logprob: -9.568800926208496
    9. ' r' → logprob: -9.818800926208496
    10. ' (' → logprob: -10.318800926208496

Token 1683: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7100782990455627
    2. '+' → logprob: -1.460078239440918
    3. '<|end|>' → logprob: -1.585078239440918
    4. '   ' → logprob: -2.835078239440918
    5. '<|end|>' → logprob: -5.835078239440918
    6. '
' → logprob: -5.835078239440918
    7. '%' → logprob: -5.960078239440918
    8. '#' → logprob: -6.335078239440918
    9. ')' → logprob: -7.585078239440918
    10. ' ' → logprob: -7.585078239440918

Token 1684: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.004696090007201e-05
    2. ' A' → logprob: -10.000069618225098
    3. '(' → logprob: -11.750069618225098
    4. '(A' → logprob: -12.500069618225098
    5. '   ' → logprob: -12.625069618225098
    6. 'B' → logprob: -13.125069618225098
    7. ' (' → logprob: -13.625069618225098
    8. '1' → logprob: -13.875069618225098
    9. ' ' → logprob: -14.000069618225098
    10. 'L' → logprob: -14.500069618225098

Token 1685: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7142451405525208
    2. '<|end|>' → logprob: -0.9642451405525208
    3. ' +' → logprob: -2.714245080947876
    4. ' -' → logprob: -3.589245080947876
    5. '+' → logprob: -4.589245319366455
    6. '
' → logprob: -4.839245319366455
    7. '<|end|>' → logprob: -5.464245319366455
    8. '-' → logprob: -6.089245319366455
    9. '#' → logprob: -6.089245319366455
    10. ' ' → logprob: -6.214245319366455

Token 1686: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6818716526031494
    2. ' -' → logprob: -0.9318716526031494
    3. '   ' → logprob: -2.4318716526031494
    4. '
' → logprob: -5.55687141418457
    5. '```' → logprob: -6.05687141418457
    6. '#' → logprob: -6.55687141418457
    7. '<|end|>' → logprob: -7.05687141418457
    8. ')' → logprob: -7.18187141418457
    9. ' ' → logprob: -7.55687141418457
    10. ' +' → logprob: -7.68187141418457

Token 1687: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1688: ' Le' (ID: 2018)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7275462746620178
    2. 'n' → logprob: -1.352546215057373
    3. 'if' → logprob: -1.477546215057373
    4. 'const' → logprob: -4.727546215057373
    5. 'for' → logprob: -4.977546215057373
    6. 'length' → logprob: -5.727546215057373
    7. 'diff' → logprob: -6.477546215057373
    8. 'count' → logprob: -6.602546215057373
    9. 'a' → logprob: -6.852546215057373
    10. 'num' → logprob: -6.852546215057373

Token 1689: ' pas' (ID: 2173)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4726259708404541
    2. 'const' → logprob: -1.222625970840454
    3. 'ans' → logprob: -3.597625970840454
    4. 'ch' → logprob: -4.347625732421875
    5. 'length' → logprob: -4.472625732421875
    6. 'count' → logprob: -5.972625732421875
    7. 'offset' → logprob: -5.972625732421875
    8. 'result' → logprob: -5.972625732421875
    9. 'part' → logprob: -6.347625732421875
    10. 'if' → logprob: -6.347625732421875

Token 1690: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9334549307823181
    2. '*' → logprob: -1.308454990386963
    3. '<|end|>' → logprob: -2.183454990386963
    4. '#' → logprob: -3.308454990386963
    5. '=' → logprob: -3.308454990386963
    6. ' +' → logprob: -3.433454990386963
    7. ' *' → logprob: -3.558454990386963
    8. ')' → logprob: -4.058454990386963
    9. ' =' → logprob: -4.183454990386963
    10. '```' → logprob: -4.433454990386963

Token 1691: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5296598672866821
    2. '1' → logprob: -0.9046598672866821
    3. ' B' → logprob: -5.654659748077393
    4. 'r' → logprob: -6.654659748077393
    5. '10' → logprob: -8.02966022491455
    6. '+' → logprob: -8.27966022491455
    7. 'b' → logprob: -8.27966022491455
    8. ' ' → logprob: -9.02966022491455
    9. ')' → logprob: -9.15466022491455
    10. 'for' → logprob: -9.27966022491455

Token 1692: ' suite' (ID: 13800)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3999316990375519
    2. 'pas' → logprob: -2.0249316692352295
    3. 'B' → logprob: -2.5249316692352295
    4. 'const' → logprob: -2.7749316692352295
    5. 'r' → logprob: -4.149931907653809
    6. 'part' → logprob: -5.274931907653809
    7. 'range' → logprob: -5.649931907653809
    8. 'd' → logprob: -6.024931907653809
    9. 'b' → logprob: -6.024931907653809
    10. ' for' → logprob: -6.149931907653809

Token 1693: ' ar' (ID: 646)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6290847659111023
    2. 'B' → logprob: -1.754084825515747
    3. '-' → logprob: -2.004084825515747
    4. ' -' → logprob: -3.254084825515747
    5. ' *' → logprob: -3.629084825515747
    6. '+' → logprob: -4.129084587097168
    7. '```' → logprob: -4.379084587097168
    8. '#' → logprob: -4.504084587097168
    9. '<|end|>' → logprob: -4.754084587097168
    10. ',' → logprob: -4.754084587097168

Token 1694: 'ith' (ID: 437)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02584548480808735
    2. 'i' → logprob: -5.150845527648926
    3. '+=' → logprob: -5.400845527648926
    4. 'g' → logprob: -6.150845527648926
    5. 'range' → logprob: -6.150845527648926
    6. '=' → logprob: -6.275845527648926
    7. 'rg' → logprob: -6.525845527648926
    8. '+' → logprob: -6.650845527648926
    9. 'rang' → logprob: -7.400845527648926
    10. 'ange' → logprob: -7.525845527648926

Token 1695: 'm' (ID: 76)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.910385251045227
    2. '-' → logprob: -2.0353851318359375
    3. '1' → logprob: -2.1603851318359375
    4. '+' → logprob: -2.4103851318359375
    5. 'r' → logprob: -2.6603851318359375
    6. 'ithmetic' → logprob: -2.7853851318359375
    7. 'm' → logprob: -2.9103851318359375
    8. '=' → logprob: -2.9103851318359375
    9. ' -' → logprob: -3.5353851318359375
    10. 'it' → logprob: -3.9103851318359375

Token 1696: 'étique' (ID: 41132)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02456052228808403
    2. 'étique' → logprob: -4.274560451507568
    3. '#' → logprob: -5.899560451507568
    4. '1' → logprob: -6.149560451507568
    5. '+' → logprob: -7.024560451507568
    6. 'mé' → logprob: -7.149560451507568
    7. 't' → logprob: -7.524560451507568
    8. 'mt' → logprob: -7.774560451507568
    9. 'metic' → logprob: -7.774560451507568
    10. '   ' → logprob: -8.149560928344727

Token 1697: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1698: 'line' (ID: 1137)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.022874101996421814
    2. '-' → logprob: -4.647873878479004
    3. '-B' → logprob: -5.897873878479004
    4. '#' → logprob: -6.397873878479004
    5. ' B' → logprob: -6.397873878479004
    6. '   ' → logprob: -6.647873878479004
    7. 'b' → logprob: -6.897873878479004
    8. 'const' → logprob: -6.897873878479004
    9. ')' → logprob: -6.897873878479004
    10. '
' → logprob: -7.397873878479004

Token 1699: '),' (ID: 936)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8425309658050537
    2. '=' → logprob: -1.0925309658050537
    3. ')' → logprob: -1.5925309658050537
    4. '```' → logprob: -5.092531204223633
    5. '*' → logprob: -5.217531204223633
    6. '[r' → logprob: -5.467531204223633
    7. '=r' → logprob: -5.967531204223633
    8. 'r' → logprob: -6.217531204223633
    9. '[' → logprob: -6.842531204223633
    10. ' )' → logprob: -6.842531204223633

Token 1700: ' qui' (ID: 2780)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5241607427597046
    2. ' B' → logprob: -0.8991607427597046
    3. ' -' → logprob: -8.274160385131836
    4. '-B' → logprob: -8.274160385131836
    5. '-' → logprob: -8.399160385131836
    6. 'length' → logprob: -9.649160385131836
    7. 'b' → logprob: -10.024160385131836
    8. ' length' → logprob: -10.399160385131836
    9. ' ' → logprob: -10.774160385131836
    10. ' =' → logprob: -10.774160385131836

Token 1701: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020526476204395294
    2. ' =' → logprob: -4.02052640914917
    3. '=B' → logprob: -6.52052640914917
    4. '+=' → logprob: -8.145526885986328
    5. '=line' → logprob: -8.145526885986328
    6. 'B' → logprob: -9.645526885986328
    7. '=
' → logprob: -9.770526885986328
    8. ' +=' → logprob: -10.145526885986328
    9. ' line' → logprob: -10.895526885986328
    10. 'line' → logprob: -10.895526885986328

Token 1702: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0003166353271808475
    2. ' B' → logprob: -8.375316619873047
    3. '   ' → logprob: -10.250316619873047
    4. 'pow' → logprob: -11.500316619873047
    5. '       ' → logprob: -11.875316619873047
    6. 'const' → logprob: -12.000316619873047
    7. '(B' → logprob: -12.375316619873047
    8. '```' → logprob: -12.375316619873047
    9. 'part' → logprob: -12.500316619873047
    10. '10' → logprob: -13.000316619873047

Token 1703: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4435588121414185
    2. '*' → logprob: -1.5685588121414185
    3. ' *' → logprob: -1.9435588121414185
    4. '<|end|>' → logprob: -2.193558692932129
    5. '   ' → logprob: -2.318558692932129
    6. '=' → logprob: -2.443558692932129
    7. ')' → logprob: -3.318558692932129
    8. '
' → logprob: -3.568558692932129
    9. ',' → logprob: -3.943558692932129
    10. ' ' → logprob: -4.568558692932129

Token 1704: 'const' (ID: 1671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7542853951454163
    2. 'B' → logprob: -1.6292853355407715
    3. '1' → logprob: -2.1292853355407715
    4. ' B' → logprob: -2.2542853355407715
    5. ' )' → logprob: -2.7542853355407715
    6. 'length' → logprob: -4.6292853355407715
    7. '   ' → logprob: -4.7542853355407715
    8. '```' → logprob: -4.8792853355407715
    9. ' ' → logprob: -5.6292853355407715
    10. ' length' → logprob: -6.1292853355407715

Token 1705: 'ance' (ID: 766)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0749252662062645
    2. ' *' → logprob: -3.324925184249878
    3. ' )' → logprob: -4.074925422668457
    4. '   ' → logprob: -4.949925422668457
    5. ')
' → logprob: -5.574925422668457
    6. '```' → logprob: -6.324925422668457
    7. '*' → logprob: -6.574925422668457
    8. '),' → logprob: -6.824925422668457
    9. ',' → logprob: -7.074925422668457
    10. '#' → logprob: -7.449925422668457

Token 1706: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0801769271492958
    2. ',' → logprob: -3.830176830291748
    3. '```' → logprob: -3.955176830291748
    4. '),' → logprob: -4.205176830291748
    5. ' )' → logprob: -5.580176830291748
    6. '<|end|>' → logprob: -5.830176830291748
    7. '*' → logprob: -6.080176830291748
    8. '):
' → logprob: -6.080176830291748
    9. ')
' → logprob: -6.705176830291748
    10. '+' → logprob: -6.830176830291748

Token 1707: ' l' (ID: 305)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.490946888923645
    2. ' B' → logprob: -1.365946888923645
    3. '1' → logprob: -2.9909467697143555
    4. ')' → logprob: -2.9909467697143555
    5. ' ' → logprob: -4.8659467697143555
    6. '```' → logprob: -5.1159467697143555
    7. 'r' → logprob: -5.3659467697143555
    8. ' )' → logprob: -5.6159467697143555
    9. 'b' → logprob: -6.2409467697143555
    10. ' r' → logprob: -6.4909467697143555

Token 1708: ''éc' (ID: 91629)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36480581760406494
    2. ' )' → logprob: -1.989805817604065
    3. '1' → logprob: -2.4898056983947754
    4. ' B' → logprob: -3.8648056983947754
    5. ' line' → logprob: -3.8648056983947754
    6. 'B' → logprob: -3.9898056983947754
    7. '```' → logprob: -4.739805698394775
    8. 'line' → logprob: -5.864805698394775
    9. 'pas' → logprob: -6.239805698394775
    10. ' step' → logprob: -6.364805698394775

Token 1709: 'art' (ID: 497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4809419810771942
    2. '=' → logprob: -2.2309420108795166
    3. ' B' → logprob: -3.1059420108795166
    4. ' )' → logprob: -3.2309420108795166
    5. '   ' → logprob: -3.3559420108795166
    6. ' ' → logprob: -3.6059420108795166
    7. 'B' → logprob: -4.1059417724609375
    8. ' =' → logprob: -4.1059417724609375
    9. ',' → logprob: -4.1059417724609375
    10. ')
' → logprob: -4.4809417724609375

Token 1710: ' entre' (ID: 3853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021064957603812218
    2. ')
' → logprob: -5.021064758300781
    3. ',' → logprob: -6.021064758300781
    4. '),' → logprob: -6.146064758300781
    5. '```' → logprob: -6.396064758300781
    6. ' entre' → logprob: -6.646064758300781
    7. 'between' → logprob: -6.646064758300781
    8. '   ' → logprob: -6.896064758300781
    9. '):
' → logprob: -7.396064758300781
    10. ').' → logprob: -7.521064758300781

Token 1711: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3093729615211487
    2. 'l' → logprob: -2.434372901916504
    3. 'la' → logprob: -2.809372901916504
    4. 'r' → logprob: -3.059372901916504
    5. 'bloc' → logprob: -4.434372901916504
    6. '   ' → logprob: -5.309372901916504
    7. 'nombre' → logprob: -5.309372901916504
    8. ')' → logprob: -5.434372901916504
    9. 'tokens' → logprob: -5.559372901916504
    10. 'pas' → logprob: -5.559372901916504

Token 1712: ' termes' (ID: 72480)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7803794145584106
    2. ' nombres' → logprob: -0.9053794145584106
    3. 'nombre' → logprob: -2.780379295349121
    4. 'bl' → logprob: -4.155379295349121
    5. ' blocs' → logprob: -4.280379295349121
    6. 'num' → logprob: -5.280379295349121
    7. 'numbers' → logprob: -5.405379295349121
    8. ',' → logprob: -5.530379295349121
    9. 'élé' → logprob: -5.780379295349121
    10. ')' → logprob: -5.905379295349121

Token 1713: ' cons' (ID: 1473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07031340897083282
    2. '   ' → logprob: -3.4453134536743164
    3. '<|end|>' → logprob: -4.195313453674316
    4. '),' → logprob: -4.570313453674316
    5. ',' → logprob: -5.820313453674316
    6. ' )' → logprob: -5.945313453674316
    7. '<|end|>' → logprob: -7.070313453674316
    8. ' ' → logprob: -7.570313453674316
    9. '):' → logprob: -7.820313453674316
    10. '```' → logprob: -7.945313453674316

Token 1714: 'écut' (ID: 96392)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4163596034049988
    2. ')' → logprob: -2.0413596630096436
    3. 't' → logprob: -2.5413596630096436
    4. ' =' → logprob: -2.6663596630096436
    5. ',' → logprob: -3.2913596630096436
    6. '):
' → logprob: -5.1663594245910645
    7. ')
' → logprob: -5.1663594245910645
    8. '```' → logprob: -5.9163594245910645
    9. 'tant' → logprob: -6.2913594245910645
    10. '),' → logprob: -6.7913594245910645

Token 1715: 'ifs' (ID: 14119)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2768545150756836
    2. ',' → logprob: -1.6518545150756836
    3. '):
' → logprob: -4.651854515075684
    4. '),' → logprob: -4.901854515075684
    5. ' )' → logprob: -5.026854515075684
    6. ')
' → logprob: -5.151854515075684
    7. ' =' → logprob: -5.276854515075684
    8. '   ' → logprob: -5.901854515075684
    9. '```' → logprob: -5.901854515075684
    10. '=' → logprob: -6.151854515075684

Token 1716: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009280811063945293
    2. '   ' → logprob: -5.759280681610107
    3. '),' → logprob: -5.884280681610107
    4. ')
' → logprob: -6.634280681610107
    5. ' )' → logprob: -6.884280681610107
    6. '):' → logprob: -8.384281158447266
    7. ').' → logprob: -8.759281158447266
    8. '):
' → logprob: -9.509281158447266
    9. ',' → logprob: -9.759281158447266
    10. '+' → logprob: -9.759281158447266

Token 1717: '   ' (ID: 271)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2267603874206543
    2. '   ' → logprob: -2.6017603874206543
    3. ' ' → logprob: -2.8517603874206543
    4. 'line' → logprob: -3.6017603874206543
    5. '+' → logprob: -4.851760387420654
    6. '```' → logprob: -4.851760387420654
    7. '[' → logprob: -5.476760387420654
    8. ' B' → logprob: -5.726760387420654
    9. '[line' → logprob: -5.851760387420654
    10. 'B' → logprob: -6.101760387420654

Token 1718: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2844637334346771
    2. 'line' (adapté à ' line') → logprob: -1.4094637632369995
    3. '```' → logprob: -6.909463882446289
    4. 'B' → logprob: -7.284463882446289
    5. '   ' → logprob: -7.784463882446289
    6. ' B' → logprob: -7.784463882446289
    7. 'b' → logprob: -7.784463882446289
    8. ' b' → logprob: -9.284463882446289
    9. ' ' → logprob: -9.784463882446289
    10. ' ' → logprob: -10.034463882446289

Token 1719: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132723271846771
    2. '=' → logprob: -1.3132723569869995
    3. '=B' → logprob: -11.938272476196289
    4. ',' → logprob: -13.688272476196289
    5. ' =
' → logprob: -14.438272476196289
    6. '=
' → logprob: -14.438272476196289
    7. ' ' → logprob: -14.563272476196289
    8. ')' → logprob: -14.563272476196289
    9. '   ' → logprob: -15.188272476196289
    10. '=b' → logprob: -15.313272476196289

Token 1720: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02979700267314911
    2. ' B' → logprob: -3.529797077178955
    3. '	B' → logprob: -10.404796600341797
    4. '   ' → logprob: -11.529796600341797
    5. ' ' → logprob: -13.279796600341797
    6. '(B' → logprob: -13.904796600341797
    7. ' ' → logprob: -14.029796600341797
    8. '    ' → logprob: -14.654796600341797
    9. 'b' → logprob: -14.779796600341797
    10. '=B' → logprob: -15.279796600341797

Token 1721: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5167011022567749
    2. '<|end|>' → logprob: -1.016701102256775
    3. '
' → logprob: -4.0167012214660645
    4. '<|end|>' → logprob: -4.6417012214660645
    5. ')' → logprob: -5.1417012214660645
    6. ' ' → logprob: -6.1417012214660645
    7. '    
' → logprob: -6.3917012214660645
    8. '  ' → logprob: -7.0167012214660645
    9. '+' → logprob: -7.2667012214660645
    10. '#' → logprob: -8.266700744628906

Token 1722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2719736397266388
    2. '<|end|>' → logprob: -2.2719736099243164
    3. '
' → logprob: -3.1469736099243164
    4. '+' → logprob: -3.6469736099243164
    5. ')' → logprob: -3.6469736099243164
    6. ',' → logprob: -4.521973609924316
    7. '```' → logprob: -5.396973609924316
    8. '    
' → logprob: -5.521973609924316
    9. '*' → logprob: -5.896973609924316
    10. '#' → logprob: -6.021973609924316

Token 1723: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7057979106903076
    2. '
' → logprob: -1.7057979106903076
    3. '```' → logprob: -2.3307979106903076
    4. 'if' → logprob: -2.9557979106903076
    5. ')' → logprob: -3.0807979106903076
    6. ' if' → logprob: -4.080798149108887
    7. '+' → logprob: -4.080798149108887
    8. '<|end|>' → logprob: -4.205798149108887
    9. '#' (adapté à ' #') → logprob: -4.330798149108887
    10. 'for' → logprob: -4.955798149108887

Token 1724: ' Addition' (ID: 129345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1793367862701416
    2. 'n' → logprob: -2.5543367862701416
    3. 'if' → logprob: -2.6793367862701416
    4. 'val' → logprob: -4.8043365478515625
    5. 'part' → logprob: -6.9293365478515625
    6. 'total' → logprob: -7.0543365478515625
    7. 'res' → logprob: -7.1793365478515625
    8. '#' → logprob: -7.3043365478515625
    9. 'value' → logprob: -7.4293365478515625
    10. 'answer' → logprob: -7.5543365478515625

Token 1725: ' au' (ID: 2791)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8783078789710999
    2. '+=' → logprob: -1.753307819366455
    3. ' +=' → logprob: -2.003307819366455
    4. ' ans' → logprob: -2.503307819366455
    5. '(ans' → logprob: -2.628307819366455
    6. '=' → logprob: -3.253307819366455
    7. '   ' → logprob: -3.503307819366455
    8. '(
' → logprob: -3.503307819366455
    9. '```' → logprob: -4.753307819366455
    10. ' (
' → logprob: -5.628307819366455

Token 1726: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07928973436355591
    2. '(ans' → logprob: -2.579289674758911
    3. '(
' → logprob: -8.079289436340332
    4. ' ans' → logprob: -9.829289436340332
    5. 'answer' → logprob: -11.079289436340332
    6. '(' → logprob: -11.829289436340332
    7. ' (' → logprob: -12.204289436340332
    8. '```' → logprob: -13.079289436340332
    9. 'result' → logprob: -13.204289436340332
    10. '	ans' → logprob: -13.829289436340332

Token 1727: ' final' (ID: 1721)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5280762314796448
    2. '+=' → logprob: -1.278076171875
    3. '(ans' → logprob: -2.153076171875
    4. ' +=' → logprob: -5.028076171875
    5. '=' → logprob: -5.778076171875
    6. '(' → logprob: -5.778076171875
    7. '(
' → logprob: -7.153076171875
    8. '```' → logprob: -7.278076171875
    9. ' (' → logprob: -7.403076171875
    10. ' ans' → logprob: -7.903076171875

Token 1728: ',' (ID: 11)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.13446339964866638
    2. '%=' → logprob: -2.509463310241699
    3. ' +=' → logprob: -3.634463310241699
    4. '=' → logprob: -4.259463310241699
    5. ' %=' → logprob: -6.384463310241699
    6. '(ans' → logprob: -6.884463310241699
    7. '```' → logprob: -7.384463310241699
    8. 'ans' → logprob: -8.1344633102417
    9. ' =' → logprob: -8.6344633102417
    10. ' ans' → logprob: -9.3844633102417

Token 1729: ' pour' (ID: 1930)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.041838109493255615
    2. ' (' → logprob: -4.0418381690979
    3. 'ans' → logprob: -4.0418381690979
    4. ' ans' → logprob: -5.9168381690979
    5. '(part' → logprob: -6.5418381690979
    6. '+' → logprob: -7.4168381690979
    7. '+=' → logprob: -8.541837692260742
    8. 'part' → logprob: -8.541837692260742
    9. '(parts' → logprob: -9.041837692260742
    10. ' +=' → logprob: -9.291837692260742

Token 1730: ' cette' (ID: 7696)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5404182076454163
    2. 'part' → logprob: -2.0404181480407715
    3. '(part' → logprob: -2.1654181480407715
    4. 'ans' → logprob: -2.5404181480407715
    5. ' (' → logprob: -3.4154181480407715
    6. '(parts' → logprob: -3.6654181480407715
    7. ' ans' → logprob: -4.2904181480407715
    8. 'parts' → logprob: -4.2904181480407715
    9. ' part' → logprob: -6.0404181480407715
    10. ' parts' → logprob: -6.2904181480407715

Token 1731: ' portion' (ID: 19137)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.4007941484451294
    2. ' part' → logprob: -1.5257941484451294
    3. ' i' → logprob: -1.6507941484451294
    4. 'i' → logprob: -1.7757941484451294
    5. 'length' → logprob: -3.02579402923584
    6. 'range' → logprob: -3.02579402923584
    7. ' range' → logprob: -4.27579402923584
    8. ' _' → logprob: -4.40079402923584
    9. ' length' → logprob: -4.52579402923584
    10. '   ' → logprob: -5.15079402923584

Token 1732: ' :
' (ID: 10039)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2361341118812561
    2. ' +=' → logprob: -1.7361340522766113
    3. '=' → logprob: -3.7361340522766113
    4. '   ' → logprob: -5.736134052276611
    5. 'ans' → logprob: -5.986134052276611
    6. '(ans' → logprob: -5.986134052276611
    7. ' ans' → logprob: -7.736134052276611
    8. '+=(' → logprob: -7.861134052276611
    9. ' =' → logprob: -8.11113452911377
    10. '(' → logprob: -8.23613452911377

Token 1733: '   ' (ID: 271)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.01951410621404648
    2. ' (' → logprob: -4.519514083862305
    3. 'ans' → logprob: -5.144514083862305
    4. ' ans' → logprob: -6.644514083862305
    5. '(' → logprob: -6.894514083862305
    6. '(parts' → logprob: -9.394514083862305
    7. '(part' → logprob: -9.644514083862305
    8. '+' → logprob: -10.019514083862305
    9. '(
' → logprob: -10.894514083862305
    10. '```' → logprob: -11.144514083862305

Token 1734: ' #' (ID: 1069)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.05506913736462593
    2. 'ans' → logprob: -3.1800692081451416
    3. ' (' → logprob: -4.5550689697265625
    4. ' ans' → logprob: -7.3050689697265625
    5. '(' → logprob: -7.9300689697265625
    6. '(part' → logprob: -9.055068969726562
    7. '   ' → logprob: -9.180068969726562
    8. 'part' → logprob: -9.930068969726562
    9. '(parts' → logprob: -10.305068969726562
    10. '(answer' → logprob: -10.430068969726562

Token 1735: ' -' (ID: 533)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2813533544540405
    2. 'ans' → logprob: -1.4063533544540405
    3. '```' → logprob: -9.406352996826172
    4. ' (' → logprob: -10.031352996826172
    5. ' ans' → logprob: -10.281352996826172
    6. '
' → logprob: -11.531352996826172
    7. '(' → logprob: -11.781352996826172
    8. '   ' → logprob: -11.906352996826172
    9. '(
' → logprob: -12.656352996826172
    10. 'answer' → logprob: -12.781352996826172

Token 1736: ' appel' (ID: 34642)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02249639667570591
    2. 'ans' → logprob: -4.147496223449707
    3. ' (' → logprob: -5.772496223449707
    4. ' ans' → logprob: -7.022496223449707
    5. '(part' → logprob: -7.147496223449707
    6. '(parts' → logprob: -7.272496223449707
    7. '(' → logprob: -8.022496223449707
    8. 'part' → logprob: -8.022496223449707
    9. 'parts' → logprob: -8.772496223449707
    10. '(answer' → logprob: -10.772496223449707

Token 1737: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23388871550559998
    2. 'to' → logprob: -2.483888626098633
    3. '(
' → logprob: -2.983888626098633
    4. '   ' → logprob: -3.358888626098633
    5. 'à' → logprob: -3.733888626098633
    6. 'part' → logprob: -5.483888626098633
    7. '(' → logprob: -5.483888626098633
    8. '(part' → logprob: -5.858888626098633
    9. ' =' → logprob: -7.108888626098633
    10. '       ' → logprob: -7.233888626098633

Token 1738: ' parts' (ID: 7881)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.055593278259038925
    2. 'ans' → logprob: -2.930593252182007
    3. 'parts' → logprob: -7.805593490600586
    4. ' part' → logprob: -9.305593490600586
    5. '
' → logprob: -9.430593490600586
    6. 'result' → logprob: -10.305593490600586
    7. '   ' → logprob: -10.930593490600586
    8. 'partial' → logprob: -11.180593490600586
    9. '```' → logprob: -11.555593490600586
    10. 'a' → logprob: -12.180593490600586

Token 1739: 'um' (ID: 394)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.003217045683413744
    2. 'um' → logprob: -5.7532172203063965
    3. 'part' → logprob: -10.753216743469238
    4. ')' → logprob: -12.503216743469238
    5. '(sum' → logprob: -12.503216743469238
    6. 'umsum' → logprob: -13.003216743469238
    7. '   ' → logprob: -13.503216743469238
    8. 'psum' → logprob: -14.253216743469238
    9. 'sub' → logprob: -14.378216743469238
    10. '```' → logprob: -14.378216743469238

Token 1740: '()' (ID: 416)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.003285613376647234
    2. '(const' → logprob: -6.0032854080200195
    3. '(a' → logprob: -8.00328540802002
    4. '(' → logprob: -8.25328540802002
    5. '(part' → logprob: -9.50328540802002
    6. 'const' → logprob: -9.75328540802002
    7. '(
' → logprob: -10.12828540802002
    8. 'a' → logprob: -11.75328540802002
    9. 'line' → logprob: -11.75328540802002
    10. '=line' → logprob: -12.25328540802002

Token 1741: ' qui' (ID: 2780)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0008319015032611787
    2. '(' → logprob: -7.7508320808410645
    3. '(
' → logprob: -8.625831604003906
    4. '   ' → logprob: -9.750831604003906
    5. '(ans' → logprob: -10.125831604003906
    6. 'line' → logprob: -10.250831604003906
    7. '=line' → logprob: -10.375831604003906
    8. ')' → logprob: -10.750831604003906
    9. '
' → logprob: -12.250831604003906
    10. '=' → logprob: -12.250831604003906

Token 1742: ' va' (ID: 3423)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.2556644678115845
    2. '(part' → logprob: -2.255664348602295
    3. ')' → logprob: -2.505664348602295
    4. 'ans' → logprob: -2.630664348602295
    5. '```' → logprob: -2.755664348602295
    6. '(line' → logprob: -2.880664348602295
    7. ' +=' → logprob: -3.255664348602295
    8. 'returns' → logprob: -3.380664348602295
    9. 'calcul' → logprob: -3.630664348602295
    10. '+=' → logprob: -3.630664348602295

Token 1743: ' calcul' (ID: 7559)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12383992969989777
    2. '(ans' → logprob: -2.873839855194092
    3. 'add' → logprob: -3.498839855194092
    4. 'acc' → logprob: -4.998839855194092
    5. 'part' → logprob: -5.248839855194092
    6. 'line' → logprob: -5.373839855194092
    7. 'calcul' → logprob: -5.498839855194092
    8. '(line' → logprob: -5.748839855194092
    9. ')' → logprob: -6.623839855194092
    10. 'aj' → logprob: -7.373839855194092

Token 1744: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00012749579036608338
    2. 'ate' → logprob: -9.625127792358398
    3. '   ' → logprob: -10.250127792358398
    4. 'érer' → logprob: -11.625127792358398
    5. '#' → logprob: -11.875127792358398
    6. 'ater' → logprob: -12.625127792358398
    7. 'uer' → logprob: -13.625127792358398
    8. '(' → logprob: -13.875127792358398
    9. 'uler' → logprob: -14.250127792358398
    10. 'rer' → logprob: -14.875127792358398

Token 1745: ' la' (ID: 557)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.27362459897994995
    2. 'line' → logprob: -1.5236246585845947
    3. 'const' → logprob: -4.023624420166016
    4. '(a' → logprob: -6.898624420166016
    5. 'a' → logprob: -7.023624420166016
    6. '(const' → logprob: -7.398624420166016
    7. 'part' → logprob: -8.148624420166016
    8. '(ans' → logprob: -9.023624420166016
    9. '(
' → logprob: -9.148624420166016
    10. ' line' → logprob: -9.148624420166016

Token 1746: ' contribution' (ID: 26735)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.16272282600402832
    2. '(ans' → logprob: -2.4127228260040283
    3. '(part' → logprob: -4.037722587585449
    4. 'const' → logprob: -4.787722587585449
    5. 'part' → logprob: -4.787722587585449
    6. '(const' → logprob: -4.912722587585449
    7. 'ans' → logprob: -5.037722587585449
    8. '(' → logprob: -5.287722587585449
    9. '((' → logprob: -6.037722587585449
    10. 'line' → logprob: -6.912722587585449

Token 1747: ' de' (ID: 334)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.014825806953012943
    2. '(length' → logprob: -5.014825820922852
    3. '(const' → logprob: -5.639825820922852
    4. 'line' → logprob: -6.014825820922852
    5. 'const' → logprob: -7.139825820922852
    6. 'length' → logprob: -7.764825820922852
    7. '(
' → logprob: -8.264825820922852
    8. '(a' → logprob: -8.514825820922852
    9. '(' → logprob: -8.889825820922852
    10. '=line' → logprob: -9.639825820922852

Token 1748: ' cette' (ID: 7696)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1707286536693573
    2. 'const' → logprob: -1.9207286834716797
    3. 'length' → logprob: -5.17072868347168
    4. '(line' → logprob: -5.67072868347168
    5. 'part' → logprob: -7.42072868347168
    6. '
' → logprob: -8.92072868347168
    7. '   ' → logprob: -9.04572868347168
    8. 'a' → logprob: -9.17072868347168
    9. '(const' → logprob: -9.42072868347168
    10. ' const' → logprob: -10.17072868347168

Token 1749: ' portion' (ID: 19137)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.139922097325325
    2. 'part' → logprob: -2.8899221420288086
    3. '(line' → logprob: -3.1399221420288086
    4. 'portion' → logprob: -4.139922142028809
    5. 'length' → logprob: -4.889922142028809
    6. 'range' → logprob: -6.264922142028809
    7. '
' → logprob: -6.764922142028809
    8. ' line' → logprob: -7.389922142028809
    9. 'segment' → logprob: -7.389922142028809
    10. '(length' → logprob: -7.514922142028809

Token 1750: ' (' (ID: 350)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.019819075241684914
    2. '(ans' → logprob: -4.769819259643555
    3. '(part' → logprob: -6.144819259643555
    4. '(a' → logprob: -6.144819259643555
    5. '(' → logprob: -6.644819259643555
    6. ')' → logprob: -7.269819259643555
    7. ',' → logprob: -7.394819259643555
    8. 'const' → logprob: -7.394819259643555
    9. 'line' → logprob: -7.519819259643555
    10. '(
' → logprob: -7.644819259643555

Token 1751: 'nombre' (ID: 28576)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.026338616386055946
    2. 'a' → logprob: -4.651338577270508
    3. 'const' → logprob: -5.026338577270508
    4. 'length' → logprob: -5.526338577270508
    5. ' line' → logprob: -6.151338577270508
    6. '(line' → logprob: -6.401338577270508
    7. 'part' → logprob: -6.901338577270508
    8. '   ' → logprob: -7.901338577270508
    9. ')' → logprob: -8.276338577270508
    10. ' const' → logprob: -9.901338577270508

Token 1752: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.8722807765007019
    2. ',' → logprob: -1.2472808361053467
    3. '=line' → logprob: -2.6222808361053467
    4. '(length' → logprob: -2.7472808361053467
    5. '=' → logprob: -2.7472808361053467
    6. '   ' → logprob: -3.7472808361053467
    7. 'length' → logprob: -4.122280597686768
    8. ')' → logprob: -4.247280597686768
    9. ',length' → logprob: -4.247280597686768
    10. ',line' → logprob: -5.247280597686768

Token 1753: ' positions' (ID: 15897)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4227295219898224
    2. ' line' → logprob: -1.7977294921875
    3. 'length' → logprob: -2.2977294921875
    4. 'r' → logprob: -3.4227294921875
    5. 'l' → logprob: -3.9227294921875
    6. ' length' → logprob: -4.7977294921875
    7. ' r' → logprob: -5.1727294921875
    8. ' l' → logprob: -5.9227294921875
    9. 'part' → logprob: -6.2977294921875
    10. ' part' → logprob: -6.5477294921875

Token 1754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21319973468780518
    2. ')' → logprob: -2.5881996154785156
    3. '(line' → logprob: -2.7131996154785156
    4. '),' → logprob: -4.213199615478516
    5. '```' → logprob: -4.588199615478516
    6. '+' → logprob: -5.213199615478516
    7. '(l' → logprob: -5.463199615478516
    8. ',line' → logprob: -6.088199615478516
    9. ',l' → logprob: -6.213199615478516
    10. '(length' → logprob: -6.463199615478516

Token 1755: ' etc' (ID: 5178)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.44055184721946716
    2. 'n' → logprob: -1.5655518770217896
    3. 'length' → logprob: -2.5655517578125
    4. 'l' → logprob: -3.9405517578125
    5. 'line' → logprob: -3.9405517578125
    6. 'L' → logprob: -4.5655517578125
    7. '(r' → logprob: -4.9405517578125
    8. ')' → logprob: -5.9405517578125
    9. 'M' → logprob: -6.4405517578125
    10. 'len' → logprob: -6.6905517578125

Token 1756: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21428179740905762
    2. '(line' → logprob: -2.0892817974090576
    3. ')' → logprob: -3.0892817974090576
    4. '   ' → logprob: -4.964282035827637
    5. '),' → logprob: -4.964282035827637
    6. '(length' → logprob: -5.464282035827637
    7. ',line' → logprob: -6.839282035827637
    8. '(' → logprob: -6.964282035827637
    9. ')
' → logprob: -7.214282035827637
    10. '=line' → logprob: -7.839282035827637

Token 1757: '),
' (ID: 2313)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05898885056376457
    2. '(line' → logprob: -3.3089888095855713
    3. '   ' → logprob: -5.18398904800415
    4. ',line' → logprob: -5.30898904800415
    5. '(length' → logprob: -6.30898904800415
    6. ',length' → logprob: -6.43398904800415
    7. ')' → logprob: -6.55898904800415
    8. ' ,' → logprob: -6.55898904800415
    9. 'line' → logprob: -6.93398904800415
    10. 'length' → logprob: -7.43398904800415

Token 1758: '   ' (ID: 271)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.36010435223579407
    2. 'line' → logprob: -1.4851043224334717
    3. '   ' → logprob: -3.4851043224334717
    4. 'a' → logprob: -3.6101043224334717
    5. ' a' → logprob: -4.735104560852051
    6. 'length' → logprob: -6.110104560852051
    7. '       ' → logprob: -6.360104560852051
    8. '(line' → logprob: -6.360104560852051
    9. ' length' → logprob: -6.860104560852051
    10. '    ' → logprob: -7.735104560852051

Token 1759: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8114599585533142
    2. ' ans' → logprob: -1.686460018157959
    3. 'a' → logprob: -1.936460018157959
    4. '(ans' → logprob: -2.811460018157959
    5. 'line' → logprob: -2.936460018157959
    6. ' line' → logprob: -3.436460018157959
    7. '+' → logprob: -3.686460018157959
    8. '   ' → logprob: -4.561460018157959
    9. ' a' → logprob: -4.686460018157959
    10. '(line' → logprob: -5.061460018157959

Token 1760: ' -' (ID: 533)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33890780806541443
    2. ' ans' → logprob: -1.5889078378677368
    3. '(ans' → logprob: -3.5889077186584473
    4. '   ' → logprob: -3.8389077186584473
    5. ')' → logprob: -4.338907718658447
    6. '+=' → logprob: -4.963907718658447
    7. '+' → logprob: -5.588907718658447
    8. '```' → logprob: -6.213907718658447
    9. ' +=' → logprob: -6.713907718658447
    10. 'mod' → logprob: -6.963907718658447

Token 1761: ' pow' (ID: 9779)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.025967568159103394
    2. ' ans' → logprob: -3.900967597961426
    3. '(ans' → logprob: -5.400967597961426
    4. '   ' → logprob: -7.650967597961426
    5. '       ' → logprob: -9.275967597961426
    6. '           ' → logprob: -9.650967597961426
    7. 'a' → logprob: -9.900967597961426
    8. 'mod' → logprob: -10.025967597961426
    9. 'answer' → logprob: -10.525967597961426
    10. '	ans' → logprob: -11.025967597961426

Token 1762: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019769940990954638
    2. '10' → logprob: -9.250197410583496
    3. '(
' → logprob: -9.625197410583496
    4. '(pow' → logprob: -10.875197410583496
    5. ' (' → logprob: -11.875197410583496
    6. 'pow' → logprob: -12.750197410583496
    7. '```' → logprob: -12.750197410583496
    8. '(
' → logprob: -13.875197410583496
    9. '((' → logprob: -14.125197410583496
    10. '
' → logprob: -15.125197410583496

Token 1763: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6327094435691833
    2. '10' → logprob: -0.7577094435691833
    3. ')' → logprob: -10.382709503173828
    4. '
' → logprob: -11.132709503173828
    5. '(
' → logprob: -11.132709503173828
    6. 'M' → logprob: -11.507709503173828
    7. '#' → logprob: -11.882709503173828
    8. 'pow' → logprob: -12.382709503173828
    9. '```' → logprob: -12.507709503173828
    10. '   ' → logprob: -12.632709503173828

Token 1764: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6508675813674927
    2. '(length' → logprob: -1.5258675813674927
    3. '(ch' → logprob: -1.5258675813674927
    4. '(line' → logprob: -3.900867462158203
    5. '(
' → logprob: -4.275867462158203
    6. ',' → logprob: -5.025867462158203
    7. '```' → logprob: -6.900867462158203
    8. '((' → logprob: -8.150867462158203
    9. '(-' → logprob: -8.400867462158203
    10. '(len' → logprob: -8.525867462158203

Token 1765: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -7.73183855926618e-05
    2. ' ch' → logprob: -10.125077247619629
    3. '   ' → logprob: -10.375077247619629
    4. 'length' → logprob: -13.375077247619629
    5. '       ' → logprob: -13.500077247619629
    6. '(ch' → logprob: -14.000077247619629
    7. '           ' → logprob: -14.125077247619629
    8. '	ch' → logprob: -15.000077247619629
    9. '
' → logprob: -15.375077247619629
    10. '  ' → logprob: -15.500077247619629

Token 1766: 'ouse' (ID: 1941)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9141436219215393
    2. ',' → logprob: -1.0391435623168945
    3. '(ch' → logprob: -2.6641435623168945
    4. '```' → logprob: -2.9141435623168945
    5. '),' → logprob: -3.9141435623168945
    6. '   ' → logprob: -3.9141435623168945
    7. '(' → logprob: -4.6641435623168945
    8. '*' → logprob: -4.6641435623168945
    9. ' ,' → logprob: -4.7891435623168945
    10. ' ' → logprob: -4.7891435623168945

Token 1767: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1800142079591751
    2. '   ' → logprob: -2.305014133453369
    3. 'e' → logprob: -4.180014133453369
    4. 'ise' → logprob: -4.430014133453369
    5. 'esi' → logprob: -4.930014133453369
    6. '  ' → logprob: -5.930014133453369
    7. 'si' → logprob: -6.055014133453369
    8. 'sizei' → logprob: -6.055014133453369
    9. 'ei' → logprob: -6.180014133453369
    10. 'is' → logprob: -6.180014133453369

Token 1768: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.168100968003273
    2. ')' → logprob: -1.9181009531021118
    3. ' ,' → logprob: -5.668100833892822
    4. '   ' → logprob: -6.293100833892822
    5. '),' → logprob: -7.293100833892822
    6. ',
' → logprob: -7.543100833892822
    7. '```' → logprob: -7.793100833892822
    8. ')*' → logprob: -8.79310131072998
    9. '(' → logprob: -8.79310131072998
    10. '*' → logprob: -9.04310131072998

Token 1769: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00030602619517594576
    2. ' M' → logprob: -8.125306129455566
    3. '   ' → logprob: -12.500306129455566
    4. ')' → logprob: -12.625306129455566
    5. '
' → logprob: -14.250306129455566
    6. '  ' → logprob: -15.125306129455566
    7. '```' → logprob: -15.125306129455566
    8. ' ' → logprob: -15.250306129455566
    9. '       ' → logprob: -15.250306129455566
    10. '           ' → logprob: -15.375306129455566

Token 1770: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007486367831006646
    2. ',' → logprob: -8.250748634338379
    3. ')*' → logprob: -8.750748634338379
    4. ')
' → logprob: -9.125748634338379
    5. '),' → logprob: -9.500748634338379
    6. '   ' → logprob: -10.125748634338379
    7. ')%' → logprob: -10.125748634338379
    8. ' )' → logprob: -11.000748634338379
    9. ')+' → logprob: -11.500748634338379
    10. '))' → logprob: -11.625748634338379

Token 1771: ' multipl' (ID: 44269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0827091932296753
    2. '```' → logprob: -1.4577091932296753
    3. '   ' → logprob: -2.207709312438965
    4. '(ans' → logprob: -2.457709312438965
    5. ' *' → logprob: -2.707709312438965
    6. ')*' → logprob: -2.832709312438965
    7. '*' → logprob: -2.957709312438965
    8. ',' → logprob: -3.957709312438965
    9. '),' → logprob: -4.707709312438965
    10. ' ans' → logprob: -5.082709312438965

Token 1772: 'ie' (ID: 396)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9752156734466553
    2. '()' → logprob: -1.6002156734466553
    3. 'y' → logprob: -2.4752156734466553
    4. 'ier' → logprob: -2.7252156734466553
    5. 'ie' → logprob: -3.3502156734466553
    6. '=' → logprob: -3.4752156734466553
    7. 'er' → logprob: -3.7252156734466553
    8. '   ' → logprob: -3.9752156734466553
    9. '(ans' → logprob: -4.225215911865234
    10. '```' → logprob: -4.225215911865234

Token 1773: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20390917360782623
    2. '(ans' → logprob: -1.828909158706665
    3. '(
' → logprob: -4.578909397125244
    4. 'ans' → logprob: -4.578909397125244
    5. ' (' → logprob: -6.453909397125244
    6. ')' → logprob: -7.328909397125244
    7. '(pow' → logprob: -7.953909397125244
    8. '10' → logprob: -8.203908920288086
    9. '   ' → logprob: -8.328908920288086
    10. '```' → logprob: -10.203908920288086

Token 1774: ' la' (ID: 557)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.178327739238739
    2. '(' → logprob: -2.928327798843384
    3. '10' → logprob: -3.053327798843384
    4. 'M' → logprob: -3.803327798843384
    5. 'part' → logprob: -4.053327560424805
    6. '(pow' → logprob: -4.178327560424805
    7. '100' → logprob: -6.053327560424805
    8. '(
' → logprob: -6.928327560424805
    9. '(part' → logprob: -6.928327560424805
    10. '   ' → logprob: -7.178327560424805

Token 1775: ' bonne' (ID: 24450)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.02037825807929039
    2. '(' → logprob: -5.145378112792969
    3. 'part' → logprob: -5.145378112792969
    4. '10' → logprob: -5.895378112792969
    5. '(pow' → logprob: -6.770378112792969
    6. '```' → logprob: -6.895378112792969
    7. ' pow' → logprob: -7.020378112792969
    8. ' (' → logprob: -7.270378112792969
    9. ')' → logprob: -7.770378112792969
    10. '(
' → logprob: -7.770378112792969

Token 1776: ' puissance' (ID: 63494)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6221650838851929
    2. ')' → logprob: -1.4971650838851929
    3. '10' → logprob: -2.7471652030944824
    4. '(ans' → logprob: -2.9971652030944824
    5. '(pow' → logprob: -2.9971652030944824
    6. 'pow' → logprob: -3.4971652030944824
    7. '```' → logprob: -4.122165203094482
    8. ' (' → logprob: -4.372165203094482
    9. ' )' → logprob: -5.497165203094482
    10. 'ans' → logprob: -5.622165203094482

Token 1777: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06034444272518158
    2. ' (' → logprob: -3.3103444576263428
    3. '10' → logprob: -4.060344219207764
    4. '(
' → logprob: -5.810344219207764
    5. '```' → logprob: -6.935344219207764
    6. '   ' → logprob: -8.560344696044922
    7. '
' → logprob: -9.185344696044922
    8. ' ' → logprob: -9.310344696044922
    9. ' (
' → logprob: -9.685344696044922
    10. ')' → logprob: -9.685344696044922

Token 1778: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.875003814697266
    3. 'pow' → logprob: -14.750003814697266
    4. '(' → logprob: -15.125003814697266
    5. '```' → logprob: -15.250003814697266
    6. 'M' → logprob: -16.250003814697266
    7. '
' → logprob: -16.500003814697266
    8. '1' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.375003814697266
    10. '``' → logprob: -18.500003814697266

Token 1779: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.5332478142227046e-05
    2. 'M' → logprob: -11.500015258789062
    3. ' ' → logprob: -13.000015258789062
    4. '```' → logprob: -13.375015258789062
    5. '
' → logprob: -14.750015258789062
    6. '0' → logprob: -15.500015258789062
    7. '`' → logprob: -15.875015258789062
    8. '1' → logprob: -16.000015258789062
    9. 'ch' → logprob: -16.000015258789062
    10. '(' → logprob: -16.000015258789062

Token 1780: ' selon' (ID: 27571)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.8321306109428406
    2. ',' → logprob: -1.3321306705474854
    3. '   ' → logprob: -2.0821306705474854
    4. '```' → logprob: -2.4571306705474854
    5. '(' → logprob: -2.9571306705474854
    6. '(
' → logprob: -3.5821306705474854
    7. '(pow' → logprob: -5.707130432128906
    8. ')' → logprob: -5.832130432128906
    9. '       ' → logprob: -6.332130432128906
    10. '           ' → logprob: -7.582130432128906

Token 1781: ' tous' (ID: 10688)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.01202060841023922
    2. ' ch' → logprob: -5.137020587921143
    3. 'length' → logprob: -5.887020587921143
    4. '10' → logprob: -6.262020587921143
    5. 'len' → logprob: -8.0120210647583
    6. '   ' → logprob: -8.0120210647583
    7. '(ch' → logprob: -8.6370210647583
    8. '1' → logprob: -8.6370210647583
    9. ' length' → logprob: -10.0120210647583
    10. 'part' → logprob: -10.0120210647583

Token 1782: ' les' (ID: 1341)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.10228700935840607
    2. '(ch' → logprob: -2.4772870540618896
    3. ' ch' → logprob: -4.7272868156433105
    4. '(' → logprob: -6.2272868156433105
    5. '   ' → logprob: -6.3522868156433105
    6. ' (' → logprob: -7.4772868156433105
    7. '	ch' → logprob: -10.227287292480469
    8. '(
' → logprob: -10.727287292480469
    9. '    ' → logprob: -11.352287292480469
    10. ')' → logprob: -11.477287292480469

Token 1783: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.01759115606546402
    2. ' ch' → logprob: -4.1425909996032715
    3. '   ' → logprob: -6.7675909996032715
    4. 'i' → logprob: -9.26759147644043
    5. ' ' → logprob: -9.39259147644043
    6. ' i' → logprob: -9.76759147644043
    7. ''ch' → logprob: -10.64259147644043
    8. '  ' → logprob: -11.01759147644043
    9. '       ' → logprob: -11.01759147644043
    10. '	ch' → logprob: -11.26759147644043

Token 1784: ' déjà' (ID: 21229)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8465039134025574
    2. '   ' → logprob: -1.0965039730072021
    3. ')' → logprob: -2.221503973007202
    4. '(ans' → logprob: -2.846503973007202
    5. '```' → logprob: -3.346503973007202
    6. '(' → logprob: -3.846503973007202
    7. '(
' → logprob: -4.971503734588623
    8. '=' → logprob: -6.346503734588623
    9. '),' → logprob: -6.721503734588623
    10. 'ans' → logprob: -7.346503734588623

Token 1785: ' trait' (ID: 15458)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.9378879070281982
    2. 'processed' → logprob: -1.8128879070281982
    3. 'cons' → logprob: -1.8128879070281982
    4. '```' → logprob: -2.1878879070281982
    5. 'acc' → logprob: -2.4378879070281982
    6. 'ans' → logprob: -3.5628879070281982
    7. 'produ' → logprob: -4.937888145446777
    8. 'computed' → logprob: -5.062888145446777
    9. ')' → logprob: -5.187888145446777
    10. 'written' → logprob: -5.437888145446777

Token 1786: 'és' (ID: 1756)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9819602966308594
    2. ')' → logprob: -1.2319602966308594
    3. '),' → logprob: -1.2319602966308594
    4. '=' → logprob: -4.106960296630859
    5. '   ' → logprob: -4.231960296630859
    6. '(' → logprob: -6.731960296630859
    7. ',
' → logprob: -6.731960296630859
    8. ')
' → logprob: -6.856960296630859
    9. '):
' → logprob: -6.981960296630859
    10. '+' → logprob: -7.106960296630859

Token 1787: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05955743417143822
    2. '(ans' → logprob: -3.0595574378967285
    3. 'ans' → logprob: -5.5595574378967285
    4. ')' → logprob: -5.6845574378967285
    5. '(
' → logprob: -7.0595574378967285
    6. '
' → logprob: -7.4345574378967285
    7. ' ans' → logprob: -7.6845574378967285
    8. '(' → logprob: -7.9345574378967285
    9. ')
' → logprob: -8.05955696105957
    10. '	ans' → logprob: -8.30955696105957

Token 1788: '   ' (ID: 271)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.26634156703948975
    2. 'ans' → logprob: -2.1413416862487793
    3. '   ' → logprob: -2.6413416862487793
    4. ')' → logprob: -3.3913416862487793
    5. '(ans' → logprob: -5.141341686248779
    6. ' )' → logprob: -6.516341686248779
    7. '       ' → logprob: -7.391341686248779
    8. ')
' → logprob: -7.391341686248779
    9. 'pow' → logprob: -7.641341686248779
    10. '```' → logprob: -7.891341686248779

Token 1789: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9703299403190613
    2. ')' → logprob: -1.470329999923706
    3. ' ans' → logprob: -1.970329999923706
    4. '%' → logprob: -2.720329999923706
    5. '(ans' → logprob: -2.720329999923706
    6. '   ' → logprob: -2.845329999923706
    7. '```' → logprob: -3.970329999923706
    8. ' )' → logprob: -4.345329761505127
    9. ')*' → logprob: -5.095329761505127
    10. 'pow' → logprob: -5.220329761505127

Token 1790: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8135156035423279
    2. ')' → logprob: -1.0635156631469727
    3. 'ans' → logprob: -2.0635156631469727
    4. 'pow' → logprob: -2.6885156631469727
    5. ' ans' → logprob: -5.313515663146973
    6. '       ' → logprob: -5.813515663146973
    7. ')
' → logprob: -5.938515663146973
    8. '(ans' → logprob: -6.063515663146973
    9. ' )' → logprob: -6.688515663146973
    10. '```' → logprob: -7.438515663146973

Token 1791: ' prise' (ID: 43816)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06325604766607285
    2. ' ans' → logprob: -3.563256025314331
    3. '(ans' → logprob: -3.563256025314331
    4. '   ' → logprob: -7.18825626373291
    5. '```' → logprob: -7.18825626373291
    6. 'pow' → logprob: -7.18825626373291
    7. ')' → logprob: -7.56325626373291
    8. '%' → logprob: -7.56325626373291
    9. 'mod' → logprob: -8.56325626373291
    10. '
' → logprob: -8.68825626373291

Token 1792: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003947317600250244
    2. ' (' → logprob: -7.0039472579956055
    3. '(pow' → logprob: -7.2539472579956055
    4. '(
' → logprob: -7.3789472579956055
    5. 'mod' → logprob: -7.5039472579956055
    6. '%' → logprob: -7.5039472579956055
    7. '(mod' → logprob: -8.878947257995605
    8. ')' → logprob: -9.128947257995605
    9. 'pow' → logprob: -10.128947257995605
    10. '=' → logprob: -10.128947257995605

Token 1793: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.022915463894605637
    2. '%=' → logprob: -5.022915363311768
    3. 'ans' → logprob: -5.147915363311768
    4. '%
' → logprob: -5.272915363311768
    5. '(ans' → logprob: -6.522915363311768
    6. ')%' → logprob: -7.022915363311768
    7. ')' → logprob: -7.647915363311768
    8. '%\' → logprob: -7.772915363311768
    9. '%)' → logprob: -8.022915840148926
    10. ' %' → logprob: -8.397915840148926

Token 1794: ' M' (ID: 391)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.127075433731079
    2. '(ans' → logprob: -1.627075433731079
    3. '(M' → logprob: -1.752075433731079
    4. 'M' → logprob: -1.877075433731079
    5. '(
' → logprob: -3.502075433731079
    6. '=' → logprob: -3.752075433731079
    7. 'ans' → logprob: -3.752075433731079
    8. ' M' → logprob: -3.877075433731079
    9. '(' → logprob: -4.1270751953125
    10. ' =' → logprob: -4.6270751953125

Token 1795: ' après' (ID: 16460)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.27524733543395996
    2. '%=' → logprob: -2.90024733543396
    3. 'ans' → logprob: -2.90024733543396
    4. '=' → logprob: -3.02524733543396
    5. ')' → logprob: -4.275247573852539
    6. '   ' → logprob: -4.525247573852539
    7. '```' → logprob: -4.525247573852539
    8. ' %=' → logprob: -4.650247573852539
    9. ' ans' → logprob: -4.775247573852539
    10. '+=' → logprob: -5.025247573852539

Token 1796: ' chaque' (ID: 21194)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5409055948257446
    2. '=' → logprob: -2.040905475616455
    3. '(ans' → logprob: -2.040905475616455
    4. ' ans' → logprob: -2.915905475616455
    5. ')' → logprob: -3.665905475616455
    6. '```' → logprob: -4.540905475616455
    7. '(' → logprob: -4.665905475616455
    8. '=
' → logprob: -4.915905475616455
    9. ' (' → logprob: -5.290905475616455
    10. ' =' → logprob: -5.415905475616455

Token 1797: ' addition' (ID: 5856)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.231594443321228
    2. '+=' → logprob: -1.231594443321228
    3. 'ans' → logprob: -1.231594443321228
    4. ')' → logprob: -2.9815945625305176
    5. '=' → logprob: -3.2315945625305176
    6. '(ans' → logprob: -4.606594562530518
    7. '```' → logprob: -5.106594562530518
    8. ' ans' → logprob: -5.606594562530518
    9. ' +=' → logprob: -5.856594562530518
    10. '*' → logprob: -5.856594562530518

Token 1798: ' majeure' (ID: 155877)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5069730281829834
    2. 'ans' → logprob: -1.2569730281829834
    3. '
' → logprob: -3.3819730281829834
    4. '   ' → logprob: -3.7569730281829834
    5. ')' → logprob: -4.2569732666015625
    6. '```' → logprob: -4.5069732666015625
    7. ',' → logprob: -4.8819732666015625
    8. ' ans' → logprob: -4.8819732666015625
    9. ')
' → logprob: -5.7569732666015625
    10. '=' → logprob: -5.7569732666015625

Token 1799: ' pour' (ID: 1930)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.6122203469276428
    2. '   ' → logprob: -1.862220287322998
    3. '
' → logprob: -2.237220287322998
    4. 'ans' → logprob: -2.487220287322998
    5. '```' → logprob: -3.737220287322998
    6. ',' → logprob: -3.862220287322998
    7. ')' → logprob: -4.112220287322998
    8. ')
' → logprob: -4.237220287322998
    9. ' ans' → logprob: -4.487220287322998
    10. ' =' → logprob: -4.612220287322998

Token 1800: ' garder' (ID: 63069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6219779253005981
    2. '(ans' → logprob: -1.6219779253005981
    3. ' ans' → logprob: -1.8719779253005981
    4. '%' → logprob: -3.3719778060913086
    5. '_' → logprob: -4.121977806091309
    6. '%=' → logprob: -4.496977806091309
    7. ' %=' → logprob: -4.746977806091309
    8. '=' → logprob: -5.121977806091309
    9. ')' → logprob: -5.121977806091309
    10. 'continue' → logprob: -5.246977806091309

Token 1801: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006963181309401989
    2. ' ans' → logprob: -5.63196325302124
    3. '(ans' → logprob: -6.25696325302124
    4. '1' → logprob: -7.50696325302124
    5. '```' → logprob: -7.75696325302124
    6. '
' → logprob: -8.256962776184082
    7. '   ' → logprob: -10.006962776184082
    8. ')' → logprob: -10.381962776184082
    9. 'answer' → logprob: -10.631962776184082
    10. '10' → logprob: -10.756962776184082

Token 1802: ' taille' (ID: 41644)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.21793010830879211
    2. ' ans' → logprob: -1.9679300785064697
    3. '```' → logprob: -3.2179300785064697
    4. '(ans' → logprob: -4.592930316925049
    5. ')' → logprob: -5.967930316925049
    6. '%' → logprob: -6.842930316925049
    7. 'answer' → logprob: -7.092930316925049
    8. 'mod' → logprob: -8.21792984008789
    9. '`' → logprob: -8.46792984008789
    10. '_ans' → logprob: -8.84292984008789

Token 1803: ' du' (ID: 1462)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3653573989868164
    2. '(ans' → logprob: -1.8653573989868164
    3. '=' → logprob: -2.1153573989868164
    4. ' ans' → logprob: -3.6153573989868164
    5. '(
' → logprob: -6.365357398986816
    6. '(' → logprob: -7.740357398986816
    7. '```' → logprob: -7.865357398986816
    8. '=
' → logprob: -8.240357398986816
    9. ' =' → logprob: -8.490357398986816
    10. ' (' → logprob: -8.865357398986816

Token 1804: ' nombre' (ID: 9733)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9796649217605591
    2. ' ans' → logprob: -1.979664921760559
    3. '```' → logprob: -2.2296648025512695
    4. 'result' → logprob: -2.4796648025512695
    5. ')' → logprob: -2.6046648025512695
    6. 'nombre' → logprob: -3.3546648025512695
    7. ' nombre' → logprob: -3.8546648025512695
    8. ' result' → logprob: -3.9796648025512695
    9. 'int' → logprob: -4.2296648025512695
    10. '1' → logprob: -4.2296648025512695

Token 1805: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03282272070646286
    2. '(ans' → logprob: -4.282822608947754
    3. '=' → logprob: -4.532822608947754
    4. 'ans' → logprob: -5.657822608947754
    5. ')' → logprob: -6.657822608947754
    6. '```' → logprob: -6.782822608947754
    7. ')
' → logprob: -7.532822608947754
    8. ' =' → logprob: -8.032822608947754
    9. ':
' → logprob: -8.907822608947754
    10. '):
' → logprob: -9.157822608947754

Token 1806: ' contrôle' (ID: 57360)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5043232440948486
    2. 'ans' → logprob: -1.2543232440948486
    3. '100' → logprob: -3.3793232440948486
    4. 'control' → logprob: -3.7543232440948486
    5. '10' → logprob: -4.0043230056762695
    6. 'mod' → logprob: -4.1293230056762695
    7. '```' → logprob: -4.2543230056762695
    8. '(ans' → logprob: -6.5043230056762695
    9. '(M' → logprob: -6.6293230056762695
    10. '
' → logprob: -7.2543230056762695

Token 1807: '.
' (ID: 558)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.18046456575393677
    2. 'ans' → logprob: -2.180464506149292
    3. ')' → logprob: -4.055464744567871
    4. '```' → logprob: -4.805464744567871
    5. '
' → logprob: -4.930464744567871
    6. ' ans' → logprob: -5.430464744567871
    7. '(' → logprob: -5.555464744567871
    8. ')
' → logprob: -5.805464744567871
    9. '(
' → logprob: -6.680464744567871
    10. ',' → logprob: -6.680464744567871

Token 1808: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.012507416307926178
    2. '(ans' → logprob: -4.512507438659668
    3. ' ans' → logprob: -7.137507438659668
    4. '```' → logprob: -7.637507438659668
    5. '   ' → logprob: -9.887507438659668
    6. '(
' → logprob: -10.137507438659668
    7. '
' → logprob: -11.137507438659668
    8. '=' → logprob: -11.137507438659668
    9. '``' → logprob: -11.512507438659668
    10. '	ans' → logprob: -11.512507438659668

Token 1809: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0006265374249778688
    2. '(ans' → logprob: -7.500626564025879
    3. ' ans' → logprob: -10.000626564025879
    4. '```' → logprob: -10.875626564025879
    5. '   ' → logprob: -12.375626564025879
    6. 'answer' → logprob: -13.625626564025879
    7. '(
' → logprob: -14.000626564025879
    8. '``' → logprob: -14.125626564025879
    9. '	ans' → logprob: -14.125626564025879
    10. '
' → logprob: -14.250626564025879

Token 1810: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5298236608505249
    2. '+=' → logprob: -0.9048236608505249
    3. '   ' → logprob: -5.5298237800598145
    4. '=' → logprob: -6.5298237800598145
    5. '```' → logprob: -7.1548237800598145
    6. '+=(' → logprob: -8.529823303222656
    7. ' =' → logprob: -8.779823303222656
    8. ']+=' → logprob: -9.904823303222656
    9. '%=' → logprob: -10.404823303222656
    10. '	' → logprob: -11.654823303222656

Token 1811: ' (' (ID: 350)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.010905629023909569
    2. '(part' → logprob: -5.260905742645264
    3. 'parts' → logprob: -6.135905742645264
    4. 'pow' → logprob: -6.135905742645264
    5. '(parts' → logprob: -7.260905742645264
    6. ' part' → logprob: -9.010905265808105
    7. '(
' → logprob: -9.010905265808105
    8. '   ' → logprob: -9.260905265808105
    9. '(pow' → logprob: -9.260905265808105
    10. '(' → logprob: -9.760905265808105

Token 1812: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.007532563991844654
    2. 'pow' → logprob: -5.132532596588135
    3. 'line' → logprob: -7.632532596588135
    4. 'parts' → logprob: -7.757532596588135
    5. '(part' → logprob: -8.632532119750977
    6. '
' → logprob: -9.007532119750977
    7. ' part' → logprob: -9.257532119750977
    8. '(' → logprob: -9.882532119750977
    9. '(
' → logprob: -9.882532119750977
    10. '   ' → logprob: -10.007532119750977

Token 1813: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.004709345754235983
    2. 'line' → logprob: -5.629709243774414
    3. '[i' → logprob: -7.629709243774414
    4. 'length' → logprob: -9.004709243774414
    5. 'const' → logprob: -9.129709243774414
    6. '[line' → logprob: -9.129709243774414
    7. '(line' → logprob: -9.629709243774414
    8. '   ' → logprob: -10.254709243774414
    9. 'len' → logprob: -10.379709243774414
    10. '[' → logprob: -10.754709243774414

Token 1814: '(-' (ID: 8087)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.026161184534430504
    2. '(const' → logprob: -3.7761611938476562
    3. 'const' → logprob: -6.401161193847656
    4. '(' → logprob: -7.776161193847656
    5. 'line' → logprob: -7.901161193847656
    6. '(
' → logprob: -7.901161193847656
    7. '#line' → logprob: -10.776161193847656
    8. ')' → logprob: -10.901161193847656
    9. '(length' → logprob: -11.151161193847656
    10. '[line' → logprob: -12.026161193847656

Token 1815: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07725878059864044
    2. '1' → logprob: -3.077258825302124
    3. 'length' → logprob: -3.952258825302124
    4. 'const' → logprob: -5.077258586883545
    5. 'B' → logprob: -6.452258586883545
    6. 'A' → logprob: -8.202259063720703
    7. 'ch' → logprob: -8.327259063720703
    8. '   ' → logprob: -8.702259063720703
    9. ' line' → logprob: -9.327259063720703
    10. 'part' → logprob: -9.452259063720703

Token 1816: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002206401200965047
    2. ',line' → logprob: -6.377206325531006
    3. ' ,' → logprob: -8.502206802368164
    4. '[line' → logprob: -9.502206802368164
    5. '   ' → logprob: -10.002206802368164
    6. '[' → logprob: -10.002206802368164
    7. ',length' → logprob: -10.377206802368164
    8. ',r' → logprob: -10.877206802368164
    9. '(line' → logprob: -11.002206802368164
    10. ',
' → logprob: -11.627206802368164

Token 1817: ' const' (ID: 1026)
  Prédit: 'const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'const' → logprob: -0.1235181987285614
    2. 'line' → logprob: -2.748518228530884
    3. 'length' → logprob: -3.248518228530884
    4. '1' → logprob: -4.873517990112305
    5. ' const' → logprob: -5.748517990112305
    6. ' line' → logprob: -7.498517990112305
    7. '   ' → logprob: -8.123517990112305
    8. '-' → logprob: -8.373517990112305
    9. '0' → logprob: -8.498517990112305
    10. '-length' → logprob: -8.498517990112305

Token 1818: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004023307003080845
    2. ' ,' → logprob: -5.62902307510376
    3. ',r' → logprob: -8.379023551940918
    4. '   ' → logprob: -10.004023551940918
    5. ',length' → logprob: -10.129023551940918
    6. ',l' → logprob: -10.254023551940918
    7. ',
' → logprob: -10.254023551940918
    8. ',len' → logprob: -11.004023551940918
    9. '[' → logprob: -12.754023551940918
    10. ',n' → logprob: -13.254023551940918

Token 1819: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.000340111117111519
    2. ' length' → logprob: -8.000340461730957
    3. '   ' → logprob: -12.625340461730957
    4. '    ' → logprob: -14.125340461730957
    5. '1' → logprob: -15.250340461730957
    6. '[length' → logprob: -16.25033950805664
    7. 'len' → logprob: -17.00033950805664
    8. '
' → logprob: -17.12533950805664
    9. ' ' → logprob: -17.25033950805664
    10. '(length' → logprob: -17.37533950805664

Token 1820: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001487140398239717
    2. ',
' → logprob: -10.25014877319336
    3. ' ,' → logprob: -10.50014877319336
    4. ',r' → logprob: -10.62514877319336
    5. '   ' → logprob: -11.00014877319336
    6. ',L' → logprob: -11.25014877319336
    7. '-' → logprob: -11.62514877319336
    8. '```' → logprob: -12.00014877319336
    9. ')' → logprob: -12.75014877319336
    10. ',M' → logprob: -13.25014877319336

Token 1821: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006083561107516289
    2. ' r' → logprob: -5.2560834884643555
    3. '   ' → logprob: -7.1310834884643555
    4. '(r' → logprob: -10.256083488464355
    5. '```' → logprob: -12.506083488464355
    6. '
' → logprob: -12.756083488464355
    7. ' (' → logprob: -13.131083488464355
    8. '    
' → logprob: -13.381083488464355
    9. '(' → logprob: -13.756083488464355
    10. '	r' → logprob: -14.131083488464355

Token 1822: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.523323655128479
    2. ' -' → logprob: -0.898323655128479
    3. '-
' → logprob: -9.648324012756348
    4. '-r' → logprob: -10.023324012756348
    5. '-l' → logprob: -10.148324012756348
    6. ')' → logprob: -10.398324012756348
    7. '   ' → logprob: -12.148324012756348
    8. ' -
' → logprob: -12.148324012756348
    9. '+' → logprob: -12.398324012756348
    10. ')-' → logprob: -13.773324012756348

Token 1823: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.6656825866666622e-05
    2. ' l' → logprob: -10.62502670288086
    3. '   ' → logprob: -13.62502670288086
    4. '(l' → logprob: -14.50002670288086
    5. '	l' → logprob: -15.00002670288086
    6. '    ' → logprob: -16.37502670288086
    7. ' ' → logprob: -16.87502670288086
    8. '  ' → logprob: -17.00002670288086
    9. '       ' → logprob: -17.50002670288086
    10. '           ' → logprob: -17.75002670288086

Token 1824: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001443449524231255
    2. ' +' → logprob: -6.626443386077881
    3. '+
' → logprob: -9.751443862915039
    4. ')+' → logprob: -10.751443862915039
    5. '[' → logprob: -11.126443862915039
    6. '+l' → logprob: -11.626443862915039
    7. ')' → logprob: -12.376443862915039
    8. '<|end|>' → logprob: -13.126443862915039
    9. '+)' → logprob: -13.501443862915039
    10. '   ' → logprob: -13.626443862915039

Token 1825: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. '0' → logprob: -14.750014305114746
    4. '   ' → logprob: -15.000014305114746
    5. '```' → logprob: -15.500014305114746
    6. '           ' → logprob: -17.75001335144043
    7. '[' → logprob: -18.12501335144043
    8. '       ' → logprob: -18.62501335144043
    9. '<|end|>' → logprob: -19.25001335144043
    10. ')' → logprob: -19.37501335144043

Token 1826: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4617256056226324e-05
    2. ' ' → logprob: -11.250014305114746
    3. '0' → logprob: -14.125014305114746
    4. '```' → logprob: -14.625014305114746
    5. '   ' → logprob: -15.625014305114746
    6. ')' → logprob: -16.250015258789062
    7. '[' → logprob: -17.750015258789062
    8. '``' → logprob: -18.687515258789062
    9. '<|end|>' → logprob: -18.812515258789062
    10. '`' → logprob: -18.875015258789062

Token 1827: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002354360418394208
    2. ' )' → logprob: -6.752354145050049
    3. '))' → logprob: -7.627354145050049
    4. ')*' → logprob: -8.627354621887207
    5. '   ' → logprob: -8.877354621887207
    6. '           ' → logprob: -9.127354621887207
    7. ' +' → logprob: -9.627354621887207
    8. '       ' → logprob: -9.627354621887207
    9. ')
' → logprob: -10.127354621887207
    10. '+' → logprob: -10.752354621887207

Token 1828: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4482664465904236
    2. ')' → logprob: -1.4482665061950684
    3. '       ' → logprob: -2.9482665061950684
    4. '   ' → logprob: -3.1982665061950684
    5. '           ' → logprob: -4.073266506195068
    6. '*' → logprob: -4.948266506195068
    7. '```' → logprob: -5.948266506195068
    8. '          ' → logprob: -6.698266506195068
    9. ')*' → logprob: -6.823266506195068
    10. '%' → logprob: -7.198266506195068

Token 1829: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0017101633129641414
    2. ' pow' → logprob: -6.376709938049316
    3. '(pow' → logprob: -12.001709938049316
    4. '   ' → logprob: -13.626709938049316
    5. '       ' → logprob: -16.001710891723633
    6. '    ' → logprob: -16.126710891723633
    7. '           ' → logprob: -16.876710891723633
    8. 'p' → logprob: -17.251710891723633
    9. '
' → logprob: -17.376710891723633
    10. '  ' → logprob: -17.501710891723633

Token 1830: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.1557283111615106e-05
    2. '10' → logprob: -10.375041961669922
    3. ' (' → logprob: -11.625041961669922
    4. '(
' → logprob: -13.625041961669922
    5. '```' → logprob: -16.625041961669922
    6. ' ' → logprob: -18.750041961669922
    7. '(pow' → logprob: -18.750041961669922
    8. ')' → logprob: -19.000041961669922
    9. '(
' → logprob: -20.250041961669922
    10. '(

' → logprob: -20.875041961669922

Token 1831: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07889904081821442
    2. '(' → logprob: -2.5788991451263428
    3. ' ' → logprob: -13.078899383544922
    4. '```' → logprob: -13.203899383544922
    5. '(
' → logprob: -13.578899383544922
    6. '
' → logprob: -13.703899383544922
    7. '   ' → logprob: -13.828899383544922
    8. ')' → logprob: -14.828899383544922
    9. ' (' → logprob: -15.203899383544922
    10. '    
' → logprob: -15.453899383544922

Token 1832: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6316750049591064
    2. '(ch' → logprob: -0.8816750049591064
    3. '(' → logprob: -3.2566750049591064
    4. ',ch' → logprob: -4.381674766540527
    5. ' (' → logprob: -5.881674766540527
    6. ' ,' → logprob: -9.131674766540527
    7. '(
' → logprob: -9.131674766540527
    8. ')' → logprob: -9.256674766540527
    9. ' ch' → logprob: -10.506674766540527
    10. '   ' → logprob: -11.506674766540527

Token 1833: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -2.816093228830141e-06
    2. ' ch' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.125001907348633
    4. '	ch' → logprob: -17.625001907348633
    5. '(ch' → logprob: -18.875001907348633
    6. '       ' → logprob: -19.625001907348633
    7. '[ch' → logprob: -20.500001907348633
    8. ' ' → logprob: -20.625001907348633
    9. '  ' → logprob: -20.875001907348633
    10. '-ch' → logprob: -21.000001907348633

Token 1834: 'ouse' (ID: 1941)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.03163163363933563
    2. 'ouse' → logprob: -3.6566317081451416
    3. ' ch' → logprob: -6.4066314697265625
    4. 'h' → logprob: -6.6566314697265625
    5. '_ch' → logprob: -7.6566314697265625
    6. '(ch' → logprob: -8.281631469726562
    7. 'ause' → logprob: -8.406631469726562
    8. 'uose' → logprob: -8.406631469726562
    9. 'house' → logprob: -8.656631469726562
    10. ',ch' → logprob: -8.781631469726562

Token 1835: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00870746374130249
    2. '   ' → logprob: -6.133707523345947
    3. 'oise' → logprob: -6.758707523345947
    4. 'e' → logprob: -6.883707523345947
    5. 'ise' → logprob: -6.883707523345947
    6. 'si' → logprob: -7.008707523345947
    7. 'oi' → logprob: -7.258707523345947
    8. 'ose' → logprob: -7.258707523345947
    9. 'se' → logprob: -8.383707046508789
    10. 'ch' → logprob: -8.883707046508789

Token 1836: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003297440707683563
    2. ' ,' → logprob: -8.625329971313477
    3. '%' → logprob: -9.250329971313477
    4. ')' → logprob: -10.875329971313477
    5. '   ' → logprob: -11.250329971313477
    6. ',
' → logprob: -12.000329971313477
    7. ' %' → logprob: -12.250329971313477
    8. '
' → logprob: -12.500329971313477
    9. ' ans' → logprob: -13.000329971313477
    10. '%,' → logprob: -13.375329971313477

Token 1837: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.176947600673884e-05
    2. ' M' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.500021934509277
    4. '       ' → logprob: -17.50002098083496
    5. '           ' → logprob: -17.62502098083496
    6. '
' → logprob: -18.25002098083496
    7. '    ' → logprob: -18.87502098083496
    8. ' ' → logprob: -19.00002098083496
    9. '  ' → logprob: -19.25002098083496
    10. '         ' → logprob: -19.87502098083496

Token 1838: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002817358821630478
    2. ')%' → logprob: -6.127817153930664
    3. '   ' → logprob: -7.502817153930664
    4. ' )' → logprob: -9.627817153930664
    5. '%' → logprob: -11.752817153930664
    6. '       ' → logprob: -12.252817153930664
    7. ')
' → logprob: -14.502817153930664
    8. '           ' → logprob: -15.127817153930664
    9. '))' → logprob: -15.252817153930664
    10. '%)' → logprob: -15.627817153930664

Token 1839: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4308582544326782
    2. ' %=' → logprob: -1.9308582544326782
    3. ')%' → logprob: -2.3058581352233887
    4. '%=' → logprob: -3.3058581352233887
    5. '```' → logprob: -3.6808581352233887
    6. ')' → logprob: -3.8058581352233887
    7. '   ' → logprob: -5.305858135223389
    8. '(ans' → logprob: -5.555858135223389
    9. ' ans' → logprob: -5.680858135223389
    10. ' %' → logprob: -6.055858135223389

Token 1840: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0002613358374219388
    2. ' M' → logprob: -8.250261306762695
    3. '(M' → logprob: -17.000261306762695
    4. ' ' → logprob: -18.625261306762695
    5. '```' → logprob: -18.750261306762695
    6. '
' → logprob: -19.250261306762695
    7. '	M' → logprob: -19.375261306762695
    8. '=M' → logprob: -19.625261306762695
    9. '\
' → logprob: -20.375261306762695
    10. '(' → logprob: -20.500261306762695

Token 1841: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8135464787483215
    2. 'ans' → logprob: -1.0635464191436768
    3. '%' → logprob: -2.8135464191436768
    4. '```' → logprob: -2.8135464191436768
    5. '\n' → logprob: -3.4385464191436768
    6. '(ans' → logprob: -3.8135464191436768
    7. '\' → logprob: -4.563546657562256
    8. ' ans' → logprob: -4.563546657562256
    9. '``' → logprob: -5.313546657562256
    10. '	ans' → logprob: -6.313546657562256

Token 1842: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5023419857025146
    2. '```' → logprob: -1.0023419857025146
    3. '``' → logprob: -4.002342224121094
    4. '   ' → logprob: -4.752342224121094
    5. 'ch' → logprob: -7.252342224121094
    6. '(ans' → logprob: -9.127342224121094
    7. '
' → logprob: -9.502342224121094
    8. '\' → logprob: -10.877342224121094
    9. '    
' → logprob: -11.252342224121094
    10. ' ans' → logprob: -11.502342224121094

Token 1843: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.10013484954833984
    2. '   ' → logprob: -2.85013484954834
    3. '```' → logprob: -3.35013484954834
    4. '``' → logprob: -6.97513484954834
    5. 'ch' → logprob: -7.60013484954834
    6. '
' → logprob: -7.60013484954834
    7. '(ans' → logprob: -8.22513484954834
    8. ' ans' → logprob: -9.60013484954834
    9. '	ans' → logprob: -9.97513484954834
    10. '    
' → logprob: -11.47513484954834

Token 1844: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.5766162276268005
    2. ' %=' → logprob: -0.8266162276268005
    3. '%' → logprob: -7.326616287231445
    4. ' %' → logprob: -11.701616287231445
    5. ')%' → logprob: -13.076616287231445
    6. '	' → logprob: -13.076616287231445
    7. '```' → logprob: -13.201616287231445
    8. '   ' → logprob: -13.451616287231445
    9. ' ' → logprob: -13.826616287231445
    10. '=' → logprob: -14.076616287231445

Token 1845: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -3.128163257315464e-07
    2. '10' → logprob: -15.875
    3. '100' → logprob: -16.375
    4. ' M' → logprob: -16.625
    5. '(M' → logprob: -18.625
    6. 'L' → logprob: -19.0
    7. '(' → logprob: -19.0
    8. '```' → logprob: -20.625
    9. ' ' → logprob: -20.875
    10. '1' → logprob: -21.125

Token 1846: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20144452154636383
    2. 'ch' → logprob: -1.7014445066452026
    3. '```' → logprob: -11.076444625854492
    4. '
' → logprob: -12.701444625854492
    5. '	ch' → logprob: -12.701444625854492
    6. ' ch' → logprob: -12.951444625854492
    7. '  ' → logprob: -13.451444625854492
    8. '    
' → logprob: -13.451444625854492
    9. '``' → logprob: -13.826444625854492
    10. '       ' → logprob: -14.076444625854492

Token 1847: '   ' (ID: 271)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.1602402776479721
    2. '   ' → logprob: -1.9102402925491333
    3. '```' → logprob: -11.535240173339844
    4. '	ch' → logprob: -13.285240173339844
    5. '  ' → logprob: -13.410240173339844
    6. ' ch' → logprob: -13.785240173339844
    7. '``' → logprob: -14.285240173339844
    8. ' ' → logprob: -14.660240173339844
    9. '       ' → logprob: -14.910240173339844
    10. '    
' → logprob: -15.160240173339844

Token 1848: ' #' (ID: 1069)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.008615399710834026
    2. '   ' → logprob: -4.758615493774414
    3. '	ch' → logprob: -15.133615493774414
    4. '```' → logprob: -15.133615493774414
    5. '  ' → logprob: -16.008615493774414
    6. ' ch' → logprob: -16.008615493774414
    7. '
' → logprob: -17.008615493774414
    8. '    
' → logprob: -17.258615493774414
    9. ' ' → logprob: -17.383615493774414
    10. '``' → logprob: -18.258615493774414

Token 1849: ' In' (ID: 730)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.250000953674316
    3. '#' → logprob: -18.0
    4. ' ch' → logprob: -19.375
    5. '	ch' → logprob: -21.0
    6. '
' → logprob: -21.0
    7. '  ' → logprob: -23.375
    8. 'Ch' → logprob: -23.5
    9. '       ' → logprob: -23.875
    10. ' ' → logprob: -24.125

Token 1850: 'cr' (ID: 798)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08358266949653625
    2. 'ans' → logprob: -2.833582639694214
    3. '   ' → logprob: -4.083582878112793
    4. 'ch' → logprob: -6.083582878112793
    5. 'ns' → logprob: -6.958582878112793
    6. 'nc' → logprob: -7.208582878112793
    7. 'c' → logprob: -8.458582878112793
    8. '#' → logprob: -8.833582878112793
    9. '  ' → logprob: -9.958582878112793
    10. 'f' → logprob: -10.083582878112793

Token 1851: 'ément' (ID: 17645)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7608734369277954
    2. 'ans' → logprob: -1.2608734369277954
    3. 'ch' → logprob: -1.5108734369277954
    4. 'cr' → logprob: -3.635873317718506
    5. '  ' → logprob: -8.010873794555664
    6. 'crement' → logprob: -8.135873794555664
    7. '	ans' → logprob: -8.510873794555664
    8. 'cre' → logprob: -9.010873794555664
    9. 'er' → logprob: -9.135873794555664
    10. 'c' → logprob: -9.135873794555664

Token 1852: 'ation' (ID: 387)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5868086814880371
    2. '   ' → logprob: -0.9618086814880371
    3. '(' → logprob: -3.711808681488037
    4. '(ch' → logprob: -4.211808681488037
    5. '=' → logprob: -4.461808681488037
    6. 'ch' → logprob: -5.086808681488037
    7. ' +=' → logprob: -6.086808681488037
    8. '(
' → logprob: -6.711808681488037
    9. '+=(' → logprob: -7.961808681488037
    10. 'ation' → logprob: -8.336809158325195

Token 1853: ' du' (ID: 1462)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.006223243661224842
    2. '   ' → logprob: -5.631223201751709
    3. '(ch' → logprob: -6.131223201751709
    4. '+=' → logprob: -8.131223678588867
    5. ' ch' → logprob: -9.381223678588867
    6. '	ch' → logprob: -10.756223678588867
    7. ' +=' → logprob: -11.256223678588867
    8. '```' → logprob: -11.631223678588867
    9. '[ch' → logprob: -11.881223678588867
    10. '(' → logprob: -12.131223678588867

Token 1854: ' dé' (ID: 2393)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -2.696889623621246e-06
    2. 'length' → logprob: -12.87500286102295
    3. ' ch' → logprob: -17.250001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '	ch' → logprob: -19.125001907348633
    6. 'ans' → logprob: -19.875001907348633
    7. '
' → logprob: -20.500001907348633
    8. 'Ch' → logprob: -21.250001907348633
    9. '  ' → logprob: -21.375001907348633
    10. '[ch' → logprob: -21.750001907348633

Token 1855: 'cal' (ID: 5842)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.00029756641015410423
    2. ' ch' → logprob: -8.875297546386719
    3. 'ans' → logprob: -9.625297546386719
    4. 'c' → logprob: -10.750297546386719
    5. 's' → logprob: -10.750297546386719
    6. '   ' → logprob: -11.000297546386719
    7. '[ch' → logprob: -12.250297546386719
    8. '_ch' → logprob: -12.500297546386719
    9. '(ch' → logprob: -12.625297546386719
    10. 'f' → logprob: -13.000297546386719

Token 1856: 'age' (ID: 477)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09126914292573929
    2. 'ation' → logprob: -3.2162692546844482
    3. 'e' → logprob: -4.091269016265869
    4. 'i' → logprob: -4.341269016265869
    5. 'ch' → logprob: -5.091269016265869
    6. 'er' → logprob: -5.091269016265869
    7. 'ition' → logprob: -6.591269016265869
    8. 'iation' → logprob: -6.591269016265869
    9. '  ' → logprob: -7.591269016265869
    10. 'ement' → logprob: -8.091269493103027

Token 1857: ' '' (ID: 461)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0035407976247370243
    2. ' +=' → logprob: -5.878540992736816
    3. '   ' → logprob: -7.503540992736816
    4. 'length' → logprob: -9.128540992736816
    5. '+=(' → logprob: -9.753540992736816
    6. '+' → logprob: -11.878540992736816
    7. ']+=' → logprob: -12.378540992736816
    8. '=' → logprob: -13.003540992736816
    9. '```' → logprob: -13.753540992736816
    10. '(length' → logprob: -14.253540992736816

Token 1858: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.004687868524342775
    2. 'length' → logprob: -5.379687786102295
    3. '(ch' → logprob: -10.629688262939453
    4. '(length' → logprob: -10.754688262939453
    5. 'part' → logprob: -11.254688262939453
    6. 'ans' → logprob: -12.754688262939453
    7. ' ch' → logprob: -13.129688262939453
    8. '   ' → logprob: -13.504688262939453
    9. '(' → logprob: -14.254688262939453
    10. ' length' → logprob: -14.379688262939453

Token 1859: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -0.005069025792181492
    2. 'ose' → logprob: -5.380069255828857
    3. 'ause' → logprob: -7.755069255828857
    4. 'o' → logprob: -12.7550687789917
    5. '   ' → logprob: -12.7550687789917
    6. ' ' → logprob: -12.7550687789917
    7. 'uose' → logprob: -13.1300687789917
    8. '```' → logprob: -13.2550687789917
    9. 'house' → logprob: -13.3800687789917
    10. 'ourse' → logprob: -13.6300687789917

Token 1860: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.03521392197581e-05
    2. '   ' → logprob: -10.500030517578125
    3. 'si' → logprob: -13.750030517578125
    4. '  ' → logprob: -14.750030517578125
    5. 'и' → logprob: -15.125030517578125
    6. 'ï' → logprob: -16.000030517578125
    7. 'і' → logprob: -16.375030517578125
    8. ' ' → logprob: -16.750030517578125
    9. '
' → logprob: -16.750030517578125
    10. 'ı' → logprob: -16.750030517578125

Token 1861: ''' (ID: 6)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05653136968612671
    2. ' +=' → logprob: -3.3065314292907715
    3. '   ' → logprob: -4.0565314292907715
    4. '+' → logprob: -7.6815314292907715
    5. '+=(' → logprob: -7.8065314292907715
    6. '```' → logprob: -9.806530952453613
    7. ']+=' → logprob: -10.431530952453613
    8. '       ' → logprob: -10.806530952453613
    9. '	' → logprob: -11.556530952453613
    10. '           ' → logprob: -12.181530952453613

Token 1862: ' par' (ID: 686)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00384045229293406
    2. ' +=' → logprob: -5.753840446472168
    3. '   ' → logprob: -7.503840446472168
    4. '+=(' → logprob: -9.128840446472168
    5. ']+=' → logprob: -13.753840446472168
    6. '```' → logprob: -14.128840446472168
    7. '+' → logprob: -14.378840446472168
    8. '
' → logprob: -15.503840446472168
    9. '       ' → logprob: -15.878840446472168
    10. '	' → logprob: -16.003841400146484

Token 1863: ' le' (ID: 505)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.21259458363056183
    2. '(length' → logprob: -1.7125946283340454
    3. '(r' → logprob: -4.837594509124756
    4. ' length' → logprob: -6.212594509124756
    5. ' (' → logprob: -7.337594509124756
    6. '((' → logprob: -8.587594985961914
    7. '(' → logprob: -9.337594985961914
    8. '(l' → logprob: -9.587594985961914
    9. 'part' → logprob: -9.837594985961914
    10. 'r' → logprob: -10.212594985961914

Token 1864: ' nombre' (ID: 9733)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.07160726934671402
    2. '(length' → logprob: -2.8216073513031006
    3. '(r' → logprob: -4.6966071128845215
    4. ' length' → logprob: -8.69660758972168
    5. '(' → logprob: -9.44660758972168
    6. 'part' → logprob: -9.69660758972168
    7. '((' → logprob: -10.07160758972168
    8. ' (' → logprob: -10.32160758972168
    9. '(part' → logprob: -10.57160758972168
    10. '(l' → logprob: -10.82160758972168

Token 1865: ' de' (ID: 334)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.21291084587574005
    2. '(r' → logprob: -2.4629108905792236
    3. '(part' → logprob: -2.9629108905792236
    4. '(length' → logprob: -3.9629108905792236
    5. 'part' → logprob: -4.2129106521606445
    6. '[(' → logprob: -4.5879106521606445
    7. 'length' → logprob: -5.4629106521606445
    8. '[length' → logprob: -5.4629106521606445
    9. '(' → logprob: -6.9629106521606445
    10. '[r' → logprob: -7.8379106521606445

Token 1866: ' chiffres' (ID: 105565)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.6220892667770386
    2. ' (' → logprob: -1.8720892667770386
    3. 'r' → logprob: -1.9970892667770386
    4. 'length' → logprob: -2.997089385986328
    5. '(length' → logprob: -3.497089385986328
    6. ' r' → logprob: -3.622089385986328
    7. 'digits' → logprob: -3.747089385986328
    8. ' length' → logprob: -4.122089385986328
    9. ' digits' → logprob: -4.247089385986328
    10. 'part' → logprob: -5.997089385986328

Token 1867: ' produits' (ID: 23489)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01863119751214981
    2. '*(' → logprob: -4.6436309814453125
    3. ' *' → logprob: -4.7686309814453125
    4. '   ' → logprob: -8.518630981445312
    5. '*r' → logprob: -9.143630981445312
    6. '*((' → logprob: -10.393630981445312
    7. '*
' → logprob: -13.143630981445312
    8. '(r' → logprob: -14.268630981445312
    9. ' ' → logprob: -14.393630981445312
    10. '#' → logprob: -14.518630981445312

Token 1868: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12179643660783768
    2. '+=' → logprob: -2.3717963695526123
    3. ' +=' → logprob: -4.246796607971191
    4. '*' → logprob: -5.496796607971191
    5. '*(' → logprob: -6.746796607971191
    6. '+=(' → logprob: -6.996796607971191
    7. '*=' → logprob: -8.996796607971191
    8. '       ' → logprob: -8.996796607971191
    9. '(r' → logprob: -9.246796607971191
    10. ' *=' → logprob: -9.621796607971191

Token 1869: ' cette' (ID: 7696)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.7802854776382446
    2. '(length' → logprob: -1.1552854776382446
    3. 'length' → logprob: -1.7802854776382446
    4. '((' → logprob: -3.030285358428955
    5. ' (' → logprob: -4.780285358428955
    6. 'r' → logprob: -7.405285358428955
    7. '(' → logprob: -8.155285835266113
    8. ' length' → logprob: -8.405285835266113
    9. 'range' → logprob: -9.655285835266113
    10. '(range' → logprob: -9.655285835266113

Token 1870: ' portion' (ID: 19137)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0740100145339966
    2. '(r' → logprob: -1.0740100145339966
    3. 'for' → logprob: -1.8240100145339966
    4. 'part' → logprob: -2.449009895324707
    5. 'range' → logprob: -4.074009895324707
    6. 'length' → logprob: -4.199009895324707
    7. '[r' → logprob: -4.574009895324707
    8. ' (' → logprob: -5.699009895324707
    9. '+' → logprob: -5.699009895324707
    10. '
' → logprob: -5.949009895324707

Token 1871: ' (' (ID: 350)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.28160202503204346
    2. '+=' → logprob: -1.9066020250320435
    3. '*(' → logprob: -3.156601905822754
    4. '   ' → logprob: -3.656601905822754
    5. ' +=' → logprob: -4.281601905822754
    6. ' *' → logprob: -4.531601905822754
    7. '*=' → logprob: -6.531601905822754
    8. '*((' → logprob: -7.531601905822754
    9. '(r' → logprob: -8.031601905822754
    10. '*r' → logprob: -8.031601905822754

Token 1872: 'nombre' (ID: 28576)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.029965106397867203
    2. ' (' → logprob: -3.7799651622772217
    3. '(length' → logprob: -5.779964923858643
    4. 'length' → logprob: -6.154964923858643
    5. '(' → logprob: -6.904964923858643
    6. 'r' → logprob: -8.6549654006958
    7. '((' → logprob: -9.1549654006958
    8. '(l' → logprob: -9.5299654006958
    9. '(line' → logprob: -10.5299654006958
    10. '   ' → logprob: -10.5299654006958

Token 1873: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.589871346950531
    2. '+=' → logprob: -1.3398714065551758
    3. '   ' → logprob: -2.339871406555176
    4. '=' → logprob: -3.339871406555176
    5. '+' → logprob: -3.839871406555176
    6. '+=(' → logprob: -4.464871406555176
    7. '(r' → logprob: -5.089871406555176
    8. '[r' → logprob: -5.964871406555176
    9. '*(' → logprob: -6.089871406555176
    10. '*' → logprob: -6.714871406555176

Token 1874: ' nombres' (ID: 76205)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06857750564813614
    2. '(r' → logprob: -3.068577527999878
    3. 'part' → logprob: -4.943577289581299
    4. ' r' → logprob: -5.443577289581299
    5. 'digits' → logprob: -5.693577289581299
    6. ' part' → logprob: -7.068577289581299
    7. ')' → logprob: -7.568577289581299
    8. '(part' → logprob: -7.693577289581299
    9. ' (' → logprob: -8.068577766418457
    10. '```' → logprob: -8.068577766418457

Token 1875: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8657644391059875
    2. ' *' → logprob: -1.2407643795013428
    3. '[i' → logprob: -1.9907643795013428
    4. '[r' → logprob: -2.1157643795013428
    5. '*(' → logprob: -3.7407643795013428
    6. '```' → logprob: -5.615764617919922
    7. '[' → logprob: -6.240764617919922
    8. ')' → logprob: -7.490764617919922
    9. '*[' → logprob: -7.490764617919922
    10. ')*(' → logprob: -7.615764617919922

Token 1876: ' longueur' (ID: 104613)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.22293448448181152
    2. 'length' → logprob: -2.7229344844818115
    3. ' (' → logprob: -3.2229344844818115
    4. '(r' → logprob: -3.4729344844818115
    5. '(line' → logprob: -3.5979344844818115
    6. '((' → logprob: -3.9729344844818115
    7. 'B' → logprob: -5.722934722900391
    8. '(B' → logprob: -5.972934722900391
    9. 'line' → logprob: -5.972934722900391
    10. '(part' → logprob: -5.972934722900391

Token 1877: ' de' (ID: 334)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8402925133705139
    2. '*' → logprob: -1.0902924537658691
    3. '*(' → logprob: -1.4652924537658691
    4. '   ' → logprob: -7.215292453765869
    5. '(r' → logprob: -8.340292930603027
    6. '*r' → logprob: -8.590292930603027
    7. ')' → logprob: -9.590292930603027
    8. ' *(' → logprob: -11.340292930603027
    9. '```' → logprob: -11.465292930603027
    10. '*((' → logprob: -11.965292930603027

Token 1878: ' chaque' (ID: 21194)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3321422040462494
    2. 'part' → logprob: -1.4571422338485718
    3. 'line' → logprob: -4.082142353057861
    4. 'r' → logprob: -4.582142353057861
    5. '(r' → logprob: -4.957142353057861
    6. '(length' → logprob: -5.082142353057861
    7. ' length' → logprob: -5.832142353057861
    8. '(part' → logprob: -5.957142353057861
    9. ' part' → logprob: -6.707142353057861
    10. ' (' → logprob: -7.082142353057861

Token 1879: ' nombre' (ID: 9733)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.009226607158780098
    2. 'part' → logprob: -5.3842267990112305
    3. ' length' → logprob: -5.8842267990112305
    4. ' part' → logprob: -8.13422679901123
    5. 'portion' → logprob: -8.25922679901123
    6. '(length' → logprob: -8.50922679901123
    7. '
' → logprob: -8.75922679901123
    8. 'number' → logprob: -8.88422679901123
    9. '```' → logprob: -8.88422679901123
    10. '   ' → logprob: -9.13422679901123

Token 1880: ').
' (ID: 6294)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5484069585800171
    2. '*(' → logprob: -1.048406958580017
    3. '*' → logprob: -2.7984070777893066
    4. '   ' → logprob: -4.923407077789307
    5. ')' → logprob: -6.048407077789307
    6. ')*(' → logprob: -7.548407077789307
    7. '*r' → logprob: -8.423406600952148
    8. '```' → logprob: -9.173406600952148
    9. '(r' → logprob: -9.548406600952148
    10. '*((' → logprob: -10.048406600952148

Token 1881: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25861820578575134
    2. 'ch' → logprob: -2.133618116378784
    3. '```' → logprob: -2.258618116378784
    4. '``' → logprob: -6.008618354797363
    5. ' ch' → logprob: -6.758618354797363
    6. '	ch' → logprob: -7.258618354797363
    7. '[ch' → logprob: -8.258618354797363
    8. '    
' → logprob: -9.133618354797363
    9. '`' → logprob: -9.758618354797363
    10. '(ch' → logprob: -9.883618354797363

Token 1882: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.009080009534955025
    2. '   ' → logprob: -4.759079933166504
    3. ' ch' → logprob: -8.384079933166504
    4. '(ch' → logprob: -9.009079933166504
    5. '```' → logprob: -9.259079933166504
    6. '	ch' → logprob: -11.634079933166504
    7. '[ch' → logprob: -12.759079933166504
    8. '
' → logprob: -13.384079933166504
    9. '_ch' → logprob: -13.509079933166504
    10. '       ' → logprob: -13.634079933166504

Token 1883: 'ouse' (ID: 1941)
  Prédit: 'ouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouse' → logprob: -7.350386295001954e-05
    2. 'ose' → logprob: -9.625073432922363
    3. 'ause' → logprob: -12.500073432922363
    4. '=' → logprob: -13.125073432922363
    5. '```' → logprob: -14.500073432922363
    6. 'uose' → logprob: -15.125073432922363
    7. 'OUSE' → logprob: -15.500073432922363
    8. 'o' → logprob: -16.12507438659668
    9. 'ourse' → logprob: -16.25007438659668
    10. '+' → logprob: -16.62507438659668

Token 1884: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.2961512513575144e-05
    2. '=' → logprob: -11.500022888183594
    3. ' +=' → logprob: -12.125022888183594
    4. '+=' → logprob: -12.500022888183594
    5. '   ' → logprob: -14.000022888183594
    6. 'и' → logprob: -14.750022888183594
    7. 'si' → logprob: -14.875022888183594
    8. '+' → logprob: -15.375022888183594
    9. 'і' → logprob: -15.375022888183594
    10. '=i' → logprob: -15.375022888183594

Token 1885: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023432515561580658
    2. ' +=' → logprob: -3.773432493209839
    3. '   ' → logprob: -9.148432731628418
    4. '+=(' → logprob: -10.023432731628418
    5. '+' → logprob: -10.773432731628418
    6. ']+=' → logprob: -11.648432731628418
    7. '=' → logprob: -12.898432731628418
    8. '```' → logprob: -13.148432731628418
    9. '+='' → logprob: -13.898432731628418
    10. '+="' → logprob: -14.148432731628418

Token 1886: ' length' (ID: 5517)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.07993143051862717
    2. ' (' → logprob: -2.5799314975738525
    3. '(length' → logprob: -7.579931259155273
    4. 'length' → logprob: -8.079931259155273
    5. '((' → logprob: -9.204931259155273
    6. '(l' → logprob: -10.079931259155273
    7. 'r' → logprob: -10.579931259155273
    8. '(' → logprob: -10.579931259155273
    9. '   ' → logprob: -11.579931259155273
    10. ' length' → logprob: -11.829931259155273

Token 1887: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3453768193721771
    2. '*' → logprob: -1.3453768491744995
    3. '*(' → logprob: -3.47037672996521
    4. '*r' → logprob: -7.845376968383789
    5. '   ' → logprob: -10.220376968383789
    6. '(r' → logprob: -10.345376968383789
    7. '```' → logprob: -10.845376968383789
    8. '#' → logprob: -11.970376968383789
    9. ')' → logprob: -12.720376968383789
    10. '(' → logprob: -13.470376968383789

Token 1888: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.011234324425458908
    2. ' (' → logprob: -4.511234283447266
    3. '(max' → logprob: -9.136234283447266
    4. '((' → logprob: -10.011234283447266
    5. '(' → logprob: -10.886234283447266
    6. '(L' → logprob: -12.011234283447266
    7. '(R' → logprob: -12.511234283447266
    8. '(l' → logprob: -13.136234283447266
    9. 'max' → logprob: -13.511234283447266
    10. '   ' → logprob: -13.761234283447266

Token 1889: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018186001107096672
    2. '(r' → logprob: -4.018186092376709
    3. ' r' → logprob: -10.39318561553955
    4. ' (' → logprob: -12.64318561553955
    5. '(' → logprob: -13.14318561553955
    6. '   ' → logprob: -16.393186569213867
    7. 'max' → logprob: -16.893186569213867
    8. '
' → logprob: -17.018186569213867
    9. '(max' → logprob: -17.018186569213867
    10. '_r' → logprob: -17.143186569213867

Token 1890: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.27855753898620605
    2. '+' → logprob: -1.653557538986206
    3. ' +' → logprob: -3.653557538986206
    4. '-' → logprob: -3.903557538986206
    5. '[' → logprob: -6.278557777404785
    6. '-i' → logprob: -7.903557777404785
    7. '-l' → logprob: -7.903557777404785
    8. '[i' → logprob: -8.028557777404785
    9. '<|end|>' → logprob: -8.028557777404785
    10. ']+' → logprob: -8.153557777404785

Token 1891: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001170225441455841
    2. ' l' → logprob: -6.7511701583862305
    3. '	l' → logprob: -17.626171112060547
    4. 'i' → logprob: -18.751171112060547
    5. ' л' → logprob: -19.751171112060547
    6. '   ' → logprob: -20.001171112060547
    7. '0' → logprob: -20.251171112060547
    8. '+l' → logprob: -20.376171112060547
    9. '```' → logprob: -20.501171112060547
    10. '-l' → logprob: -20.751171112060547

Token 1892: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007621064782142639
    2. ' +' → logprob: -4.8826212882995605
    3. '+
' → logprob: -11.882620811462402
    4. '[' → logprob: -12.382620811462402
    5. ')+' → logprob: -14.007620811462402
    6. '+)' → logprob: -14.257620811462402
    7. '+r' → logprob: -14.882620811462402
    8. '1' → logprob: -15.007620811462402
    9. ')' → logprob: -15.007620811462402
    10. ']+' → logprob: -15.132620811462402

Token 1893: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4359756112098694
    2. '1' → logprob: -1.9359755516052246
    3. 'l' → logprob: -1.9359755516052246
    4. '0' → logprob: -2.8109755516052246
    5. ' ' → logprob: -6.310975551605225
    6. ' +' → logprob: -7.185975551605225
    7. ' l' → logprob: -7.560975551605225
    8. 'r' → logprob: -7.560975551605225
    9. '   ' → logprob: -7.935975551605225
    10. 'b' → logprob: -8.810976028442383

Token 1894: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4336647093296051
    2. '0' → logprob: -1.8086646795272827
    3. 'l' → logprob: -1.9336646795272827
    4. '1' → logprob: -3.5586647987365723
    5. 'r' → logprob: -4.433664798736572
    6. ' ' → logprob: -7.058664798736572
    7. 'i' → logprob: -7.183664798736572
    8. '   ' → logprob: -7.558664798736572
    9. 'b' → logprob: -8.808664321899414
    10. ' l' → logprob: -8.933664321899414

Token 1895: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002090899972245097
    2. '   ' → logprob: -6.252090930938721
    3. '<|end|>' → logprob: -9.252090454101562
    4. ')
' → logprob: -10.252090454101562
    5. ' )' → logprob: -11.002090454101562
    6. '}' → logprob: -12.127090454101562
    7. '<|end|>' → logprob: -13.252090454101562
    8. ')}' → logprob: -13.252090454101562
    9. '```' → logprob: -13.502090454101562
    10. '       ' → logprob: -14.502090454101562

Token 1896: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1897: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -20.875
    3. ' print' → logprob: -21.25
    4. '#print' → logprob: -22.25
    5. '#' → logprob: -23.125
    6. 'Print' → logprob: -25.125
    7. '
' → logprob: -25.375
    8. 'ans' → logprob: -25.625
    9. '``' → logprob: -26.0
    10. 'if' → logprob: -26.25

Token 1898: ' avoir' (ID: 16595)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2200749754119897e-06
    2. '#' → logprob: -14.250001907348633
    3. ' print' → logprob: -14.625001907348633
    4. 'ans' → logprob: -14.750001907348633
    5. '```' → logprob: -14.875001907348633
    6. '
' → logprob: -16.500001907348633
    7. 'pr' → logprob: -16.750001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '#print' → logprob: -17.750001907348633
    10. 'Print' → logprob: -19.125001907348633

Token 1899: ' traité' (ID: 160836)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.2762428822461516e-05
    2. '#' → logprob: -10.000052452087402
    3. '#print' → logprob: -12.125052452087402
    4. '```' → logprob: -14.125052452087402
    5. '
' → logprob: -14.625052452087402
    6. 'pr' → logprob: -15.375052452087402
    7. 'ans' → logprob: -15.375052452087402
    8. ' print' → logprob: -16.12505340576172
    9. '%' → logprob: -18.00005340576172
    10. 'aff' → logprob: -18.25005340576172

Token 1900: ' toutes' (ID: 17502)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004901650827378035
    2. 'ans' → logprob: -5.879901885986328
    3. '#' → logprob: -6.629901885986328
    4. '```' → logprob: -8.129901885986328
    5. 'l' → logprob: -8.879901885986328
    6. 'le' → logprob: -9.504901885986328
    7. '(ans' → logprob: -9.629901885986328
    8. 'la' → logprob: -9.754901885986328
    9. '#print' → logprob: -10.379901885986328
    10. 'pour' → logprob: -10.629901885986328

Token 1901: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.04415503516793251
    2. 'part' → logprob: -3.7941551208496094
    3. ':' → logprob: -4.919155120849609
    4. 'la' → logprob: -5.794155120849609
    5. '#' → logprob: -5.794155120849609
    6. '()' → logprob: -5.919155120849609
    7. ' les' → logprob: -6.294155120849609
    8. '(part' → logprob: -7.044155120849609
    9. 'le' → logprob: -7.294155120849609
    10. '```' → logprob: -8.04415512084961

Token 1902: ' portions' (ID: 34833)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.03091195970773697
    2. 'port' → logprob: -4.030911922454834
    3. 'l' → logprob: -5.155911922454834
    4. 'parts' → logprob: -5.405911922454834
    5. 'portion' → logprob: -6.530911922454834
    6. '#' → logprob: -8.655912399291992
    7. 'por' → logprob: -9.280912399291992
    8. 'par' → logprob: -9.530912399291992
    9. '```' → logprob: -9.780912399291992
    10. 'lines' → logprob: -9.905912399291992

Token 1903: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019090480054728687
    2. '```' → logprob: -9.000190734863281
    3. ',' → logprob: -9.875190734863281
    4. ' print' → logprob: -11.375190734863281
    5. '#' → logprob: -12.750190734863281
    6. '#print' → logprob: -14.500190734863281
    7. '``' → logprob: -15.125190734863281
    8. '
' → logprob: -15.500190734863281
    9. 'return' → logprob: -15.875190734863281
    10. '(print' → logprob: -15.875190734863281

Token 1904: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.625
    3. ' print' → logprob: -18.0
    4. '#' → logprob: -18.0
    5. '#print' → logprob: -18.125
    6. '
' → logprob: -18.125
    7. 'ans' → logprob: -23.875
    8. '``' → logprob: -24.0
    9. 'printf' → logprob: -24.875
    10. '_print' → logprob: -25.0

Token 1905: 'age' (ID: 477)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6665306091308594
    2. 'er' → logprob: -1.0415306091308594
    3. 'é' → logprob: -2.0415306091308594
    4. 'print' → logprob: -6.041530609130859
    5. '#' → logprob: -7.041530609130859
    6. '(e' → logprob: -8.66653060913086
    7. '(' → logprob: -8.91653060913086
    8. '(ans' → logprob: -10.41653060913086
    9. ')' → logprob: -10.54153060913086
    10. '()' → logprob: -10.66653060913086

Token 1906: ' du' (ID: 1462)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.707997428951785e-05
    2. 'ans' → logprob: -9.750077247619629
    3. 'print' → logprob: -11.875077247619629
    4. '(print' → logprob: -11.875077247619629
    5. '(' → logprob: -12.625077247619629
    6. '(f' → logprob: -13.750077247619629
    7. '```' → logprob: -15.500077247619629
    8. '(str' → logprob: -16.125076293945312
    9. '((' → logprob: -16.375076293945312
    10. '(
' → logprob: -17.500076293945312

Token 1907: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014174791052937508
    2. '(ans' → logprob: -4.264174938201904
    3. 'result' → logprob: -12.639174461364746
    4. ' ans' → logprob: -13.014174461364746
    5. '```' → logprob: -13.264174461364746
    6. 'answer' → logprob: -13.514174461364746
    7. 'print' → logprob: -13.764174461364746
    8. '(
' → logprob: -14.764174461364746
    9. '(' → logprob: -15.514174461364746
    10. '	ans' → logprob: -15.514174461364746

Token 1908: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001269993488676846
    2. '(ans' → logprob: -7.376269817352295
    3. '(print' → logprob: -8.001270294189453
    4. '```' → logprob: -8.376270294189453
    5. '(' → logprob: -9.876270294189453
    6. 'ans' → logprob: -10.751270294189453
    7. '
' → logprob: -13.251270294189453
    8. '``' → logprob: -13.876270294189453
    9. ' print' → logprob: -14.251270294189453
    10. '()
' → logprob: -14.376270294189453

Token 1909: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009361166739836335
    2. '(print' → logprob: -7.500936031341553
    3. '```' → logprob: -8.000936508178711
    4. '(' → logprob: -10.125936508178711
    5. '(ans' → logprob: -12.625936508178711
    6. '``' → logprob: -13.125936508178711
    7. '
' → logprob: -13.750936508178711
    8. ' print' → logprob: -14.250936508178711
    9. '()
' → logprob: -14.625936508178711
    10. '(
' → logprob: -16.12593650817871

Token 1910: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -13.000001907348633
    3. '``' → logprob: -19.750001907348633
    4. ' print' → logprob: -19.875001907348633
    5. '#print' → logprob: -23.375001907348633
    6. '
' → logprob: -23.875001907348633
    7. '	print' → logprob: -25.625001907348633
    8. '`' → logprob: -26.125001907348633
    9. '(print' → logprob: -26.125001907348633
    10. 'prints' → logprob: -26.375001907348633

Token 1911: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.282920129597187e-05
    2. 'ans' → logprob: -11.500012397766113
    3. '(' → logprob: -12.875012397766113
    4. '((' → logprob: -16.87501335144043
    5. '(
' → logprob: -17.00001335144043
    6. ' (' → logprob: -17.50001335144043
    7. '	ans' → logprob: -18.62501335144043
    8. '(answer' → logprob: -18.75001335144043
    9. '(f' → logprob: -19.00001335144043
    10. 'ANS' → logprob: -19.25001335144043

Token 1912: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. '()' → logprob: -12.750009536743164
    3. '())' → logprob: -12.875009536743164
    4. '+' → logprob: -14.250009536743164
    5. ' )' → logprob: -14.250009536743164
    6. ')
' → logprob: -14.375009536743164
    7. '(' → logprob: -15.000009536743164
    8. '```' → logprob: -15.000009536743164
    9. '%' → logprob: -15.125009536743164
    10. '))' → logprob: -15.625009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1910
Tokens correctement prédits (1ère position, stricte): 432
Tokens correctement prédits (1ère position, avec adaptation): 452
Tokens correctement prédits (top 10): 1021
Précision stricte (1ère position): 22.62%
Précision adaptée (1ère position): 23.66%
Précision (top 10): 53.46%
================================================================================
