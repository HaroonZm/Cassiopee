================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, truediv
from math import ceil

a, b = map(int, __import__('sys').stdin.read().split())
delta = reduce(add, [b, -a])
denom = (lambda x: (x-1)+0)(a)
steps = 1 + ceil(truediv(delta, denom))
print(steps)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.24421319365501404
    2. ' math' → logprob: -2.119213104248047
    3. 'operator' → logprob: -3.244213104248047
    4. ' itertools' → logprob: -3.244213104248047
    5. ' collections' → logprob: -4.494213104248047
    6. 'math' → logprob: -5.494213104248047
    7. ' os' → logprob: -6.369213104248047
    8. 'collections' → logprob: -7.369213104248047
    9. ' ' → logprob: -7.994213104248047
    10. ' typing' → logprob: -8.119213104248047

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0243254154920578
    2. 'import' → logprob: -3.899325370788574
    3. '.' → logprob: -5.774325370788574
    4. ' ' → logprob: -7.399325370788574
    5. ' .' → logprob: -10.149325370788574
    6. '	import' → logprob: -11.899325370788574
    7. '.import' → logprob: -12.774325370788574
    8. '<|end|>' → logprob: -13.274325370788574
    9. ' Import' → logprob: -13.649325370788574
    10. '_import' → logprob: -13.774325370788574

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.14861725270748138
    2. ' import' → logprob: -2.5236172676086426
    3. ' mul' → logprob: -3.2736172676086426
    4. 'add' → logprob: -4.398617267608643
    5. ' ' → logprob: -5.523617267608643
    6. 'import' → logprob: -6.773617267608643
    7. 'mul' → logprob: -6.773617267608643
    8. ' item' → logprob: -6.898617267608643
    9. ' icon' → logprob: -9.148616790771484
    10. 'item' → logprob: -9.898616790771484

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011845800094306469
    2. '\' → logprob: -5.511845588684082
    3. '(
' → logprob: -5.511845588684082
    4. '\n' → logprob: -6.386845588684082
    5. '\(' → logprob: -7.261845588684082
    6. ',' → logprob: -7.386845588684082
    7. '```' → logprob: -8.761845588684082
    8. '`' → logprob: -9.386845588684082
    9. '(

' → logprob: -9.636845588684082
    10. '#' → logprob: -9.761845588684082

Token 10: ' tr' (ID: 498)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.6044785976409912
    2. 'mul' → logprob: -0.8544785976409912
    3. ' sub' → logprob: -4.22947883605957
    4. 'sub' → logprob: -4.35447883605957
    5. ' i' → logprob: -8.10447883605957
    6. 'i' → logprob: -8.97947883605957
    7. '```' → logprob: -9.35447883605957
    8. 'getitem' → logprob: -9.85447883605957
    9. ' ' → logprob: -10.47947883605957
    10. 'concat' → logprob: -10.72947883605957

Token 11: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.19724304974079132
    2. 'u' → logprob: -1.822243094444275
    3. 'ue' → logprob: -4.4472432136535645
    4. 'uem' → logprob: -5.1972432136535645
    5. 'ut' → logprob: -9.947242736816406
    6. 'um' → logprob: -11.072242736816406
    7. 'uth' → logprob: -11.072242736816406
    8. 'uc' → logprob: -12.072242736816406
    9. 'ed' → logprob: -12.572242736816406
    10. '
' → logprob: -12.947242736816406

Token 12: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -4.008129963040119e-06
    2. 'ivr' → logprob: -14.000003814697266
    3. 'ived' → logprob: -14.125003814697266
    4. 'ivid' → logprob: -14.625003814697266
    5. 'vision' → logprob: -14.875003814697266
    6. 'ive' → logprob: -15.000003814697266
    7. 'vi' → logprob: -15.000003814697266
    8. 'ivi' → logprob: -15.250003814697266
    9. '_div' → logprob: -16.000003814697266
    10. 'i' → logprob: -16.000003814697266

Token 13: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8557744026184082
    2. '(' → logprob: -1.9807744026184082
    3. '\' → logprob: -2.105774402618408
    4. ',' → logprob: -2.105774402618408
    5. 'def' → logprob: -2.730774402618408
    6. '(
' → logprob: -3.355774402618408
    7. ',
' → logprob: -3.730774402618408
    8. '#' → logprob: -4.855774402618408
    9. '`' → logprob: -4.980774402618408
    10. 'result' → logprob: -5.105774402618408

Token 14: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.968917727470398
    2. 'result' → logprob: -1.468917727470398
    3. '(
' → logprob: -1.843917727470398
    4. ',' → logprob: -3.0939178466796875
    5. '#' → logprob: -3.2189178466796875
    6. '\' → logprob: -3.3439178466796875
    7. 'def' → logprob: -3.4689178466796875
    8. 'reduce' → logprob: -4.7189178466796875
    9. 'a' → logprob: -4.8439178466796875
    10. 'x' → logprob: -4.9689178466796875

Token 15: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6640670299530029
    2. ' math' → logprob: -1.039067029953003
    3. ' fractions' → logprob: -2.664067029953003
    4. ' itertools' → logprob: -3.289067029953003
    5. 'fra' → logprob: -4.789067268371582
    6. ' statistics' → logprob: -5.164067268371582
    7. 'statistics' → logprob: -5.164067268371582
    8. 'collections' → logprob: -7.164067268371582
    9. ' typing' → logprob: -7.664067268371582
    10. 'typing' → logprob: -7.664067268371582

Token 16: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.007805711589753628
    2. 'import' → logprob: -4.882805824279785
    3. ' ' → logprob: -9.507805824279785
    4. '.' → logprob: -9.882805824279785
    5. '	import' → logprob: -10.257805824279785
    6. '.sqrt' → logprob: -11.132805824279785
    7. ' sqrt' → logprob: -12.007805824279785
    8. '_import' → logprob: -12.882805824279785
    9. ' importar' → logprob: -13.007805824279785
    10. ' .' → logprob: -13.257805824279785

Token 17: ' ceil' (ID: 35964)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.9121662974357605
    2. 'ceil' → logprob: -1.6621663570404053
    3. 'pow' → logprob: -2.5371663570404053
    4. 'floor' → logprob: -2.5371663570404053
    5. 'is' → logprob: -2.6621663570404053
    6. ' ceil' → logprob: -3.1621663570404053
    7. 'f' → logprob: -3.5371663570404053
    8. ' sqrt' → logprob: -3.7871663570404053
    9. 'prod' → logprob: -3.9121663570404053
    10. ' factorial' → logprob: -4.287166118621826

Token 18: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0074101686477661
    2. 'def' → logprob: -1.6324101686477661
    3. '(
' → logprob: -1.8824101686477661
    4. '\n' → logprob: -2.0074100494384766
    5. ',' → logprob: -3.3824100494384766
    6. '\' → logprob: -4.007410049438477
    7. 'a' → logprob: -4.257410049438477
    8. 'x' → logprob: -4.632410049438477
    9. '
' → logprob: -4.632410049438477
    10. ',
' → logprob: -4.882410049438477

Token 19: 'a' (ID: 64)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46842628717422485
    2. 'result' → logprob: -1.71842622756958
    3. '\' → logprob: -3.34342622756958
    4. '#' → logprob: -3.46842622756958
    5. '`' → logprob: -4.09342622756958
    6. 'n' → logprob: -4.09342622756958
    7. 'a' → logprob: -4.21842622756958
    8. '\n' → logprob: -4.34342622756958
    9. 'data' → logprob: -4.59342622756958
    10. 'd' → logprob: -4.71842622756958

Token 20: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3735542297363281
    2. '=' → logprob: -1.7485542297363281
    3. '.' → logprob: -1.8735542297363281
    4. ' =' → logprob: -1.9985542297363281
    5. ',' → logprob: -2.373554229736328
    6. ' ' → logprob: -3.123554229736328
    7. 's' → logprob: -3.248554229736328
    8. '_' → logprob: -3.373554229736328
    9. 'r' → logprob: -3.623554229736328
    10. '(' → logprob: -4.498554229736328

Token 21: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.31335076689720154
    2. 'b' → logprob: -1.313350796699524
    3. ' ' → logprob: -9.813350677490234
    4. ' =' → logprob: -11.438350677490234
    5. ' n' → logprob: -12.438350677490234
    6. '=' → logprob: -12.688350677490234
    7. ' *' → logprob: -12.938350677490234
    8. 'n' → logprob: -13.313350677490234
    9. '*b' → logprob: -13.438350677490234
    10. '*' → logprob: -13.563350677490234

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014752639457583427
    2. '=' → logprob: -4.2647528648376465
    3. ',' → logprob: -7.5147528648376465
    4. ' ,' → logprob: -10.389752388000488
    5. ' ' → logprob: -12.389752388000488
    6. ')' → logprob: -12.639752388000488
    7. '  ' → logprob: -13.264752388000488
    8. '_' → logprob: -14.264752388000488
    9. '[' → logprob: -14.514752388000488
    10. ' =
' → logprob: -14.639752388000488

Token 23: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.059869952499866486
    2. '1' → logprob: -3.4348700046539307
    3. '0' → logprob: -4.434869766235352
    4. '5' → logprob: -5.184869766235352
    5. '10' → logprob: -5.559869766235352
    6. '2' → logprob: -6.684869766235352
    7. ' (' → logprob: -7.059869766235352
    8. ' [' → logprob: -7.434869766235352
    9. '3' → logprob: -7.809869766235352
    10. '[' → logprob: -8.059869766235352

Token 24: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06467675417661667
    2. '(lambda' → logprob: -3.0646767616271973
    3. '(int' → logprob: -4.439676761627197
    4. '(str' → logprob: -6.314676761627197
    5. '<|end|>' → logprob: -6.564676761627197
    6. '(input' → logprob: -8.689676284790039
    7. '(eval' → logprob: -9.189676284790039
    8. '()' → logprob: -9.689676284790039
    9. '(user' → logprob: -9.939676284790039
    10. '(len' → logprob: -10.064676284790039

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1595337986946106
    2. ')' → logprob: -2.159533739089966
    3. '(' → logprob: -3.659533739089966
    4. 'input' → logprob: -5.409533977508545
    5. ',' → logprob: -7.409533977508545
    6. ',input' → logprob: -7.659533977508545
    7. '```' → logprob: -9.034533500671387
    8. ' input' → logprob: -9.159533500671387
    9. '=input' → logprob: -9.659533500671387
    10. '())' → logprob: -10.034533500671387

Token 26: ' __' (ID: 2516)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3132754862308502
    2. 'input' → logprob: -1.3132754564285278
    3. '(input' → logprob: -12.313275337219238
    4. ',input' → logprob: -12.563275337219238
    5. ')' → logprob: -13.438275337219238
    6. ' ' → logprob: -13.688275337219238
    7. '=input' → logprob: -13.688275337219238
    8. ' )' → logprob: -13.813275337219238
    9. '	input' → logprob: -14.688275337219238
    10. '```' → logprob: -15.938275337219238

Token 27: 'import' (ID: 561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015061709564179182
    2. ' input' → logprob: -6.501506328582764
    3. '__' → logprob: -12.751505851745605
    4. '(input' → logprob: -14.251505851745605
    5. 'range' → logprob: -16.126506805419922
    6. '_input' → logprob: -17.126506805419922
    7. ')' → logprob: -17.126506805419922
    8. ',input' → logprob: -17.751506805419922
    9. 'open' → logprob: -17.876506805419922
    10. '=input' → logprob: -18.001506805419922

Token 28: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.037289757281541824
    2. '("' → logprob: -4.287289619445801
    3. '('__' → logprob: -4.412289619445801
    4. '__('' → logprob: -5.037289619445801
    5. '(' → logprob: -6.537289619445801
    6. '("__' → logprob: -6.912289619445801
    7. '(__' → logprob: -7.412289619445801
    8. '__' → logprob: -7.537289619445801
    9. '__("' → logprob: -8.9122896194458
    10. ' ('' → logprob: -9.0372896194458

Token 29: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1274029016494751
    2. 'built' → logprob: -2.1274027824401855
    3. '__' → logprob: -7.7524027824401855
    4. ' built' → logprob: -10.252403259277344
    5. 'math' → logprob: -12.127403259277344
    6. ' sys' → logprob: -12.752403259277344
    7. 're' → logprob: -15.127403259277344
    8. '_sys' → logprob: -15.502403259277344
    9. 'os' → logprob: -15.877403259277344
    10. 'code' → logprob: -16.127403259277344

Token 30: '').' (ID: 3426)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4026460647583008
    2. '.argv' → logprob: -1.4026460647583008
    3. '').' → logprob: -2.777646064758301
    4. ').' → logprob: -4.777646064758301
    5. '.stdout' → logprob: -5.777646064758301
    6. '.' → logprob: -6.152646064758301
    7. ').__' → logprob: -6.152646064758301
    8. '<|end|>' → logprob: -6.902646064758301
    9. 'import' → logprob: -7.027646064758301
    10. '```' → logprob: -7.027646064758301

Token 31: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.07889925688505173
    2. 'argv' → logprob: -2.5788991451263428
    3. '.stdin' → logprob: -12.578899383544922
    4. '.argv' → logprob: -13.453899383544922
    5. 'stderr' → logprob: -13.828899383544922
    6. '__' → logprob: -14.078899383544922
    7. '(stdin' → logprob: -14.578899383544922
    8. 'std' → logprob: -14.703899383544922
    9. 'stdout' → logprob: -14.703899383544922
    10. ' stdin' → logprob: -14.828899383544922

Token 32: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.011721979826688766
    2. '.read' → logprob: -5.011722087860107
    3. '.' → logprob: -5.761722087860107
    4. ')' → logprob: -6.886722087860107
    5. '.readlines' → logprob: -7.761722087860107
    6. ').' → logprob: -8.01172161102295
    7. ' .' → logprob: -10.51172161102295
    8. 'read' → logprob: -11.51172161102295
    9. '```' → logprob: -12.01172161102295
    10. ' readline' → logprob: -12.51172161102295

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.28173935413360596
    2. '())' → logprob: -1.531739354133606
    3. '()' → logprob: -3.6567392349243164
    4. 'line' → logprob: -6.031739234924316
    5. ')' → logprob: -7.281739234924316
    6. '_line' → logprob: -8.781739234924316
    7. ' ())' → logprob: -9.281739234924316
    8. '(' → logprob: -9.406739234924316
    9. '().__' → logprob: -10.031739234924316
    10. '()),' → logprob: -11.156739234924316

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08217056840658188
    2. 'strip' → logprob: -2.5821704864501953
    3. 'read' → logprob: -5.957170486450195
    4. 'rstrip' → logprob: -7.457170486450195
    5. 'decode' → logprob: -9.832170486450195
    6. 'replace' → logprob: -10.082170486450195
    7. ' split' → logprob: -12.207170486450195
    8. ')' → logprob: -12.332170486450195
    9. '```' → logprob: -12.457170486450195
    10. '(split' → logprob: -14.332170486450195

Token 35: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.045470934361219406
    2. '()))' → logprob: -3.170470952987671
    3. '()' → logprob: -6.295470714569092
    4. ')' → logprob: -8.67047119140625
    5. '))' → logprob: -9.04547119140625
    6. '('' → logprob: -9.67047119140625
    7. '()))
' → logprob: -9.79547119140625
    8. '(','' → logprob: -9.79547119140625
    9. '(),' → logprob: -9.92047119140625
    10. '())
' → logprob: -10.17047119140625

Token 36: 'delta' (ID: 42200)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7602244019508362
    2. '(' → logprob: -1.8852243423461914
    3. '()' → logprob: -2.1352243423461914
    4. 'range' → logprob: -2.6352243423461914
    5. ')' → logprob: -2.7602243423461914
    6. 'data' → logprob: -3.6352243423461914
    7. '[' → logprob: -4.635224342346191
    8. '(a' → logprob: -4.760224342346191
    9. '(range' → logprob: -4.760224342346191
    10. '_' → logprob: -5.010224342346191

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08278617262840271
    2. '=' → logprob: -3.4577860832214355
    3. '_' → logprob: -3.4577860832214355
    4. '_x' → logprob: -4.9577860832214355
    5. 's' → logprob: -5.7077860832214355
    6. 'x' → logprob: -6.2077860832214355
    7. ' ' → logprob: -6.8327860832214355
    8. '_=' → logprob: -7.8327860832214355
    9. '_y' → logprob: -8.207786560058594
    10. 'a' → logprob: -8.332786560058594

Token 38: ' reduce' (ID: 10389)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.24989505112171173
    2. 'b' → logprob: -1.7498950958251953
    3. ' abs' → logprob: -3.6248950958251953
    4. 'abs' → logprob: -4.874895095825195
    5. ' (' → logprob: -5.499895095825195
    6. ' a' → logprob: -5.749895095825195
    7. 'a' → logprob: -6.624895095825195
    8. '(b' → logprob: -6.874895095825195
    9. ' max' → logprob: -7.124895095825195
    10. ' ' → logprob: -7.249895095825195

Token 39: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.2567015290260315
    2. '(' → logprob: -1.5067014694213867
    3. '(lambda' → logprob: -5.381701469421387
    4. 'add' → logprob: -9.006701469421387
    5. '(operator' → logprob: -11.381701469421387
    6. ' add' → logprob: -11.506701469421387
    7. '(
' → logprob: -11.881701469421387
    8. '(tr' → logprob: -12.756701469421387
    9. ' (' → logprob: -13.381701469421387
    10. '```' → logprob: -14.256701469421387

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022177327424287796
    2. ',[' → logprob: -3.897177219390869
    3. ' ,' → logprob: -7.647177219390869
    4. ' ,[' → logprob: -8.147177696228027
    5. ',map' → logprob: -8.772177696228027
    6. ',tr' → logprob: -8.772177696228027
    7. ',(' → logprob: -9.147177696228027
    8. '[' → logprob: -9.397177696228027
    9. ',
' → logprob: -10.022177696228027
    10. '([' → logprob: -10.522177696228027

Token 41: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2592693567276001
    2. '[' → logprob: -2.1342692375183105
    3. '[a' → logprob: -3.1342692375183105
    4. '[b' → logprob: -4.0092692375183105
    5. ' (' → logprob: -4.2592692375183105
    6. ' map' → logprob: -4.3842692375183105
    7. ' range' → logprob: -5.7592692375183105
    8. ')' → logprob: -6.1342692375183105
    9. 'div' → logprob: -6.2592692375183105
    10. 'range' → logprob: -6.7592692375183105

Token 42: 'b' (ID: 65)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.144905686378479
    2. '[' → logprob: -1.394905686378479
    3. ' tr' → logprob: -2.7699055671691895
    4. 'b' → logprob: -2.8949055671691895
    5. 'abs' → logprob: -3.5199055671691895
    6. ' [' → logprob: -3.8949055671691895
    7. '1' → logprob: -4.0199055671691895
    8. '[i' → logprob: -4.0199055671691895
    9. '[a' → logprob: -4.1449055671691895
    10. '[b' → logprob: -4.1449055671691895

Token 43: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1214947700500488
    2. '-' → logprob: -1.2464947700500488
    3. '-i' → logprob: -1.8714947700500488
    4. '**' → logprob: -2.746494770050049
    5. ',' → logprob: -2.746494770050049
    6. '[i' → logprob: -4.246494770050049
    7. ' ' → logprob: -4.371494770050049
    8. ' /' → logprob: -4.746494770050049
    9. 'i' → logprob: -4.871494770050049
    10. ' **' → logprob: -4.996494770050049

Token 44: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.325924277305603
    2. ' -' → logprob: -1.325924277305603
    3. '-a' → logprob: -4.950924396514893
    4. '1' → logprob: -6.575924396514893
    5. '-b' → logprob: -7.450924396514893
    6. ' ' → logprob: -7.825924396514893
    7. '-d' → logprob: -8.200923919677734
    8. ',' → logprob: -8.325923919677734
    9. '-div' → logprob: -8.450923919677734
    10. '0' → logprob: -8.575923919677734

Token 45: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002193908003391698
    2. ' a' → logprob: -8.625219345092773
    3. '2' → logprob: -11.750219345092773
    4. '(' → logprob: -12.125219345092773
    5. '1' → logprob: -12.625219345092773
    6. '(a' → logprob: -12.750219345092773
    7. '4' → logprob: -13.000219345092773
    8. '6' → logprob: -13.125219345092773
    9. '7' → logprob: -13.250219345092773
    10. '3' → logprob: -13.375219345092773

Token 46: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.013268465176224709
    2. '+' → logprob: -4.88826847076416
    3. ',' → logprob: -6.26326847076416
    4. '],' → logprob: -6.76326847076416
    5. ' +' → logprob: -6.88826847076416
    6. ']' → logprob: -7.63826847076416
    7. ' ])' → logprob: -7.76326847076416
    8. ')' → logprob: -8.01326847076416
    9. '])
' → logprob: -9.76326847076416
    10. ']))' → logprob: -9.76326847076416

Token 47: 'den' (ID: 1660)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4141269624233246
    2. ')' → logprob: -1.164126992225647
    3. '1' → logprob: -5.164126873016357
    4. ' +' → logprob: -5.164126873016357
    5. ' ' → logprob: -5.289126873016357
    6. ',' → logprob: -6.039126873016357
    7. ' )' → logprob: -6.789126873016357
    8. '2' → logprob: -6.914126873016357
    9. '+
' → logprob: -7.039126873016357
    10. '-' → logprob: -7.039126873016357

Token 48: 'om' (ID: 310)
  Prédit: 'ominator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -0.2127564698457718
    2. '=' → logprob: -2.587756395339966
    3. ' =' → logprob: -2.837756395339966
    4. 'om' → logprob: -3.212756395339966
    5. 'omin' → logprob: -5.337756633758545
    6. ' ' → logprob: -5.962756633758545
    7. '```' → logprob: -6.462756633758545
    8. 'min' → logprob: -6.587756633758545
    9. 's' → logprob: -6.587756633758545
    10. 'o' → logprob: -6.962756633758545

Token 49: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3505922853946686
    2. ' =' → logprob: -1.2255922555923462
    3. 'inator' → logprob: -6.975592136383057
    4. 's' → logprob: -7.100592136383057
    5. '_' → logprob: -9.350592613220215
    6. 'in' → logprob: -9.600592613220215
    7. ' ' → logprob: -10.100592613220215
    8. ',' → logprob: -10.225592613220215
    9. ' ' → logprob: -10.725592613220215
    10. 'ination' → logprob: -10.850592613220215

Token 50: ' (' (ID: 350)
  Prédit: ' delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' delta' → logprob: -1.5837838649749756
    2. ' ' → logprob: -2.2087838649749756
    3. ' ceil' → logprob: -2.2087838649749756
    4. ' b' → logprob: -2.3337838649749756
    5. '2' → logprob: -2.5837838649749756
    6. 'delta' → logprob: -2.8337838649749756
    7. ' (' → logprob: -2.9587838649749756
    8. 'b' → logprob: -3.0837838649749756
    9. 'ceil' → logprob: -3.0837838649749756
    10. ' abs' → logprob: -3.4587838649749756

Token 51: 'lambda' (ID: 35280)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9975431561470032
    2. ' b' → logprob: -1.4975430965423584
    3. '2' → logprob: -2.1225430965423584
    4. ' delta' → logprob: -2.6225430965423584
    5. 'delta' → logprob: -2.7475430965423584
    6. ' ' → logprob: -3.7475430965423584
    7. 'a' → logprob: -3.9975430965423584
    8. 'ceil' → logprob: -4.1225433349609375
    9. ' ceil' → logprob: -4.2475433349609375
    10. ' (' → logprob: -4.6225433349609375

Token 52: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1515657603740692
    2. 'x' → logprob: -2.5265657901763916
    3. ' n' → logprob: -3.4015657901763916
    4. ' k' → logprob: -5.5265655517578125
    5. ' d' → logprob: -5.6515655517578125
    6. 'n' → logprob: -5.6515655517578125
    7. ' y' → logprob: -6.1515655517578125
    8. ' s' → logprob: -6.2765655517578125
    9. ' i' → logprob: -6.4015655517578125
    10. ' b' → logprob: -6.4015655517578125

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01256216038018465
    2. ' :' → logprob: -4.512562274932861
    3. ':x' → logprob: -7.137562274932861
    4. ',' → logprob: -7.387562274932861
    5. '=' → logprob: -10.762561798095703
    6. 'x' → logprob: -11.137561798095703
    7. ',x' → logprob: -11.387561798095703
    8. ' x' → logprob: -11.512561798095703
    9. ':n' → logprob: -11.637561798095703
    10. ':max' → logprob: -11.887561798095703

Token 54: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0281535387039185
    2. 'x' → logprob: -1.6531535387039185
    3. ' ceil' → logprob: -1.9031535387039185
    4. 'ceil' → logprob: -2.403153419494629
    5. ' ' → logprob: -2.903153419494629
    6. '1' → logprob: -3.153153419494629
    7. ' max' → logprob: -3.778153419494629
    8. ' abs' → logprob: -4.153153419494629
    9. 'abs' → logprob: -4.653153419494629
    10. ' (' → logprob: -4.903153419494629

Token 55: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0385385751724243
    2. ' x' → logprob: -1.1635385751724243
    3. '1' → logprob: -2.5385384559631348
    4. 'ceil' → logprob: -2.5385384559631348
    5. ' ceil' → logprob: -2.9135384559631348
    6. ' ' → logprob: -3.5385384559631348
    7. 'abs' → logprob: -4.663538455963135
    8. ' (' → logprob: -4.663538455963135
    9. 'delta' → logprob: -4.788538455963135
    10. ' delta' → logprob: -4.788538455963135

Token 56: '-' (ID: 12)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9131981730461121
    2. '+' → logprob: -1.6631982326507568
    3. ' if' → logprob: -1.7881982326507568
    4. ' and' → logprob: -2.413198232650757
    5. ' //' → logprob: -3.538198232650757
    6. 'and' → logprob: -3.663198232650757
    7. '-' → logprob: -4.163197994232178
    8. ' -' → logprob: -4.163197994232178
    9. ' *' → logprob: -4.663197994232178
    10. '**' → logprob: -4.913197994232178

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2446257472038269
    2. 'a' → logprob: -1.7446258068084717
    3. ' ' → logprob: -3.9946258068084717
    4. ' a' → logprob: -4.369625568389893
    5. '-' → logprob: -5.994625568389893
    6. 'b' → logprob: -6.369625568389893
    7. 'delta' → logprob: -6.869625568389893
    8. '(a' → logprob: -6.994625568389893
    9. 'x' → logprob: -7.244625568389893
    10. '2' → logprob: -7.369625568389893

Token 58: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19483964145183563
    2. ')//' → logprob: -2.0698397159576416
    3. ')*' → logprob: -3.6948397159576416
    4. '))' → logprob: -4.4448394775390625
    5. ')+' → logprob: -5.6948394775390625
    6. ')*(' → logprob: -6.1948394775390625
    7. '+' → logprob: -6.5698394775390625
    8. ')%' → logprob: -6.6948394775390625
    9. ')**' → logprob: -6.8198394775390625
    10. ' )' → logprob: -6.9448394775390625

Token 59: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9503996968269348
    2. 'x' → logprob: -1.95039963722229
    3. ' x' → logprob: -2.20039963722229
    4. '2' → logprob: -2.57539963722229
    5. ' ' → logprob: -2.70039963722229
    6. 'b' → logprob: -2.95039963722229
    7. '(x' → logprob: -3.45039963722229
    8. ' (' → logprob: -3.57539963722229
    9. ' b' → logprob: -3.70039963722229
    10. '(' → logprob: -4.075399875640869

Token 60: ')(' (ID: 4898)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38375040888786316
    2. ')' → logprob: -1.5087504386901855
    3. '.' → logprob: -3.2587504386901855
    4. ' if' → logprob: -4.2587504386901855
    5. 'x' → logprob: -4.2587504386901855
    6. 'if' → logprob: -5.1337504386901855
    7. ')(' → logprob: -5.2587504386901855
    8. ',' → logprob: -5.7587504386901855
    9. ' )' → logprob: -6.1337504386901855
    10. ' ' → logprob: -6.2587504386901855

Token 61: 'a' (ID: 64)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.7389985918998718
    2. 'b' → logprob: -1.2389986515045166
    3. ' delta' → logprob: -2.2389986515045166
    4. '2' → logprob: -2.9889986515045166
    5. ' b' → logprob: -3.3639986515045166
    6. 'a' → logprob: -4.4889984130859375
    7. ' ' → logprob: -5.4889984130859375
    8. '(delta' → logprob: -5.6139984130859375
    9. 'ceil' → logprob: -5.9889984130859375
    10. '10' → logprob: -6.1139984130859375

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041548567824065685
    2. '+' → logprob: -5.754154682159424
    3. '))' → logprob: -7.379154682159424
    4. ' )' → logprob: -9.004155158996582
    5. ')
' → logprob: -9.754155158996582
    6. '+)' → logprob: -10.379155158996582
    7. ')))' → logprob: -10.879155158996582
    8. '-' → logprob: -11.129155158996582
    9. ' +' → logprob: -11.254155158996582
    10. ')+' → logprob: -11.379155158996582

Token 63: 'steps' (ID: 27176)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6993841528892517
    2. ')' → logprob: -1.1993842124938965
    3. '<|end|>' → logprob: -2.4493842124938965
    4. '
' → logprob: -2.6993842124938965
    5. ' ' → logprob: -3.6993842124938965
    6. '%' → logprob: -5.5743842124938965
    7. '**' → logprob: -5.6993842124938965
    8. '*' → logprob: -5.8243842124938965
    9. '```' → logprob: -6.1993842124938965
    10. '+
' → logprob: -6.4493842124938965

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03434177488088608
    2. '=' → logprob: -3.409341812133789
    3. ' ' → logprob: -7.534341812133789
    4. ',' → logprob: -10.034341812133789
    5. ' /' → logprob: -10.284341812133789
    6. ')' → logprob: -10.659341812133789
    7. '_' → logprob: -11.409341812133789
    8. '/' → logprob: -11.659341812133789
    9. ' =
' → logprob: -12.409341812133789
    10. ' //' → logprob: -12.659341812133789

Token 65: ' ' (ID: 220)
  Prédit: ' ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceil' → logprob: -0.1460714042186737
    2. 'ceil' → logprob: -2.271071434020996
    3. ' int' → logprob: -4.021071434020996
    4. ' delta' → logprob: -4.896071434020996
    5. ' lambda' → logprob: -6.396071434020996
    6. 'int' → logprob: -6.521071434020996
    7. 'delta' → logprob: -6.896071434020996
    8. ' (' → logprob: -7.646071434020996
    9. ' tr' → logprob: -7.896071434020996
    10. ' ' → logprob: -8.021071434020996

Token 66: '1' (ID: 16)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.09096028655767441
    2. 'tr' → logprob: -3.2159602642059326
    3. ' ceil' → logprob: -4.090960502624512
    4. 'delta' → logprob: -4.215960502624512
    5. 'int' → logprob: -4.965960502624512
    6. 'lambda' → logprob: -6.090960502624512
    7. '(' → logprob: -6.840960502624512
    8. 'den' → logprob: -7.090960502624512
    9. '[' → logprob: -7.465960502624512
    10. 'b' → logprob: -7.590960502624512

Token 67: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5520870685577393
    2. '<|end|>' → logprob: -0.9270870685577393
    3. '/' → logprob: -4.30208683013916
    4. ' ' → logprob: -4.92708683013916
    5. '<|end|>' → logprob: -5.92708683013916
    6. ')' → logprob: -6.30208683013916
    7. ' +' → logprob: -6.92708683013916
    8. ' /' → logprob: -7.92708683013916
    9. '[' → logprob: -8.42708683013916
    10. '%' → logprob: -8.42708683013916

Token 68: ' ceil' (ID: 35964)
  Prédit: ' ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceil' → logprob: -0.6849228739738464
    2. 'ceil' → logprob: -0.8099228739738464
    3. ' int' → logprob: -3.309922933578491
    4. 'int' → logprob: -4.309922695159912
    5. ' delta' → logprob: -8.43492317199707
    6. ' ' → logprob: -8.55992317199707
    7. 'delta' → logprob: -8.68492317199707
    8. '(' → logprob: -9.93492317199707
    9. '  ' → logprob: -9.99742317199707
    10. '   ' → logprob: -9.99742317199707

Token 69: '(tr' (ID: 14363)
  Prédit: '(delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(delta' → logprob: -0.004830599762499332
    2. '((' → logprob: -5.379830837249756
    3. '(' → logprob: -8.879830360412598
    4. 'delta' → logprob: -10.129830360412598
    5. '(tr' → logprob: -11.129830360412598
    6. '(div' → logprob: -11.629830360412598
    7. '(((' → logprob: -12.504830360412598
    8. ' delta' → logprob: -13.754830360412598
    9. '(abs' → logprob: -13.879830360412598
    10. ' (' → logprob: -14.129830360412598

Token 70: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.004604099318385124
    2. 'ud' → logprob: -6.629603862762451
    3. '(' → logprob: -7.129603862762451
    4. 'u' → logprob: -7.629603862762451
    5. 'ed' → logprob: -7.754603862762451
    6. 'ue' → logprob: -8.62960433959961
    7. '/' → logprob: -8.87960433959961
    8. 'ues' → logprob: -8.87960433959961
    9. '```' → logprob: -9.00460433959961
    10. '[' → logprob: -9.37960433959961

Token 71: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -2.2961512513575144e-05
    2. 'div' → logprob: -11.000022888183594
    3. ' iv' → logprob: -13.000022888183594
    4. ' ' → logprob: -15.000022888183594
    5. 'ivid' → logprob: -15.000022888183594
    6. 'ivind' → logprob: -15.125022888183594
    7. '/' → logprob: -15.250022888183594
    8. 'v' → logprob: -15.312522888183594
    9. '```' → logprob: -15.625022888183594
    10. ' div' → logprob: -15.750022888183594

Token 72: '(delta' (ID: 78789)
  Prédit: '(delta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(delta' → logprob: -0.00024500858853571117
    2. '(' → logprob: -8.500245094299316
    3. 'delta' → logprob: -11.000245094299316
    4. ')' → logprob: -11.250245094299316
    5. ')(' → logprob: -12.125245094299316
    6. ' delta' → logprob: -12.750245094299316
    7. ' (' → logprob: -13.000245094299316
    8. '((' → logprob: -13.875245094299316
    9. '(abs' → logprob: -16.250244140625
    10. '(del' → logprob: -16.250244140625

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012754731811583042
    2. ' ,' → logprob: -4.512754917144775
    3. ',d' → logprob: -7.387754917144775
    4. '(' → logprob: -7.512754917144775
    5. 'den' → logprob: -9.137754440307617
    6. ' (' → logprob: -9.637754440307617
    7. ')' → logprob: -9.887754440307617
    8. ',
' → logprob: -10.262754440307617
    9. ' ' → logprob: -10.637754440307617
    10. '<|end|>' → logprob: -10.637754440307617

Token 74: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.12745170295238495
    2. ' denom' → logprob: -2.1274516582489014
    3. ' den' → logprob: -7.6274518966674805
    4. ' denominator' → logprob: -11.12745189666748
    5. '(' → logprob: -11.62745189666748
    6. ' denomin' → logprob: -12.62745189666748
    7. ' ' → logprob: -12.75245189666748
    8. ')' → logprob: -13.25245189666748
    9. '-den' → logprob: -14.37745189666748
    10. 'd' → logprob: -14.87745189666748

Token 75: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00659529073163867
    2. ')' → logprob: -5.256595134735107
    3. ')))' → logprob: -6.631595134735107
    4. '))
' → logprob: -10.506595611572266
    5. ' ))' → logprob: -12.006595611572266
    6. '))))' → logprob: -13.131595611572266
    7. '),' → logprob: -13.881595611572266
    8. '))

' → logprob: -14.131595611572266
    9. ')
' → logprob: -14.381595611572266
    10. '));' → logprob: -14.756595611572266

Token 76: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0381573848426342
    2. '\n' → logprob: -3.5381574630737305
    3. ' ' → logprob: -5.1631574630737305
    4. '```' → logprob: -7.4131574630737305
    5. '<|end|>' → logprob: -7.5381574630737305
    6. ' )' → logprob: -7.6631574630737305
    7. '\' → logprob: -8.53815746307373
    8. ')
' → logprob: -8.66315746307373
    9. ' 
' → logprob: -8.91315746307373
    10. '
' → logprob: -9.41315746307373

Token 77: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.44574936106801e-05
    2. '((' → logprob: -10.50007438659668
    3. ' (' → logprob: -10.75007438659668
    4. '(`' → logprob: -11.25007438659668
    5. '()' → logprob: -12.75007438659668
    6. '('' → logprob: -12.87507438659668
    7. 'steps' → logprob: -13.62507438659668
    8. '(len' → logprob: -14.12507438659668
    9. '```' → logprob: -14.25007438659668
    10. '(f' → logprob: -14.75007438659668

Token 78: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.0007161272224038839
    2. ' steps' → logprob: -7.250716209411621
    3. 'step' → logprob: -12.125716209411621
    4. ')' → logprob: -14.875716209411621
    5. '   ' → logprob: -15.875716209411621
    6. '(' → logprob: -16.500715255737305
    7. '_steps' → logprob: -16.875715255737305
    8. ' ' → logprob: -17.125715255737305
    9. '  ' → logprob: -17.375715255737305
    10. 'Steps' → logprob: -17.500715255737305

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015060516307130456
    2. '))' → logprob: -6.5015058517456055
    3. ' )' → logprob: -13.001505851745605
    4. ')`' → logprob: -14.501505851745605
    5. '`)' → logprob: -14.626505851745605
    6. ')))' → logprob: -15.126505851745605
    7. '')' → logprob: -16.251506805419922
    8. ')
' → logprob: -16.876506805419922
    9. ')**' → logprob: -17.501506805419922
    10. ')")' → logprob: -17.501506805419922


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 59
Précision stricte (1ère position): 38.96%
Précision adaptée (1ère position): 38.96%
Précision (top 10): 76.62%
================================================================================
