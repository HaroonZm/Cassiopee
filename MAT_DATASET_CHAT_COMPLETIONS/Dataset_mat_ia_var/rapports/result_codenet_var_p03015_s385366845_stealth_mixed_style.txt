================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

L = input()
mod = 1000000007

def calc(L, mod):
    f = 2
    nf = 1
    i = 1
    while i < len(L):
        x = int(L[i])
        if x == 1:
            nf = nf * 3 + f
            f <<= 1
        else:
            nf = nf * 3
        nf = nf % mod
        f = f % mod
        i += 1
    return (f + nf) % mod

ans = (lambda s, m: calc(s, m))(L, mod)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'L' (ID: 43)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02542591281235218
    2. '(lambda' → logprob: -3.775425910949707
    3. '```' → logprob: -7.275425910949707
    4. '(
' → logprob: -8.150425910949707
    5. ',' → logprob: -8.150425910949707
    6. '.' → logprob: -8.275425910949707
    7. '\' → logprob: -8.775425910949707
    8. '\(' → logprob: -9.025425910949707
    9. 'def' → logprob: -9.025425910949707
    10. ' (' → logprob: -9.775425910949707

Token 6: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21629127860069275
    2. 'ambda' → logprob: -2.7162911891937256
    3. 'a' → logprob: -3.2162911891937256
    4. '[' → logprob: -3.3412911891937256
    5. 'e' → logprob: -4.216291427612305
    6. '[i' → logprob: -4.466291427612305
    7. 'ist' → logprob: -4.591291427612305
    8. 'is' → logprob: -5.466291427612305
    9. '['' → logprob: -5.841291427612305
    10. '=' → logprob: -6.216291427612305

Token 7: ' input' (ID: 3422)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12814901769161224
    2. '[' → logprob: -2.1281490325927734
    3. ' []' → logprob: -7.128149032592773
    4. '[]' → logprob: -8.253149032592773
    5. '[int' → logprob: -9.503149032592773
    6. 'range' → logprob: -10.753149032592773
    7. ' ['' → logprob: -11.128149032592773
    8. '['' → logprob: -11.503149032592773
    9. ' ' → logprob: -11.753149032592773
    10. ' range' → logprob: -12.003149032592773

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018732868193183094
    2. '(
' → logprob: -9.750186920166016
    3. ''' → logprob: -10.125186920166016
    4. '('' → logprob: -10.375186920166016
    5. '("("' → logprob: -10.875186920166016
    6. ')' → logprob: -11.875186920166016
    7. '"' → logprob: -12.125186920166016
    8. '(

' → logprob: -12.125186920166016
    9. '```' → logprob: -12.125186920166016
    10. ' (' → logprob: -12.250186920166016

Token 9: 'mod' (ID: 4847)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.3594866096973419
    2. '.' → logprob: -1.2344865798950195
    3. '.strip' → logprob: -5.1094865798950195
    4. 'split' → logprob: -6.1094865798950195
    5. '.s' → logprob: -6.8594865798950195
    6. '.replace' → logprob: -8.35948657989502
    7. ' .' → logprob: -8.35948657989502
    8. 's' → logprob: -8.60948657989502
    9. ')' → logprob: -8.98448657989502
    10. '.reduce' → logprob: -9.23448657989502

Token 10: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2161610722541809
    2. '=' → logprob: -2.216161012649536
    3. ' =' → logprob: -2.716161012649536
    4. ' ' → logprob: -4.591161251068115
    5. 'ulus' → logprob: -6.091161251068115
    6. '%' → logprob: -6.466161251068115
    7. 'ulo' → logprob: -6.591161251068115
    8. ' _' → logprob: -7.841161251068115
    9. 'ule' → logprob: -7.841161251068115
    10. '_mod' → logprob: -7.966161251068115

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4009586572647095
    2. '10' → logprob: -1.1509586572647095
    3. '100' → logprob: -4.27595853805542
    4. '1' → logprob: -9.525959014892578
    5. '998' → logprob: -11.900959014892578
    6. 'int' → logprob: -12.025959014892578
    7. ' int' → logprob: -13.650959014892578
    8. ' (' → logprob: -14.025959014892578
    9. ' ' → logprob: -14.275959014892578
    10. '(' → logprob: -15.150959014892578

Token 12: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014311464503407478
    2. '100' → logprob: -4.26431131362915
    3. ' ' → logprob: -9.264311790466309
    4. '1' → logprob: -10.139311790466309
    5. '998' → logprob: -11.264311790466309
    6. 'int' → logprob: -14.764311790466309
    7. '123' → logprob: -16.139310836791992
    8. '999' → logprob: -16.139310836791992
    9. '2' → logprob: -16.514310836791992
    10. '101' → logprob: -16.639310836791992

Token 13: '000' (ID: 1302)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.255537509918213
    2. '*' → logprob: -1.255537509918213
    3. ')' → logprob: -2.255537509918213
    4. '0' → logprob: -2.380537509918213
    5. '\' → logprob: -2.630537509918213
    6. ' ' → logprob: -2.755537509918213
    7. '>' → logprob: -4.130537509918213
    8. '\n' → logprob: -4.380537509918213
    9. ',' → logprob: -4.630537509918213
    10. ' *' → logprob: -5.005537509918213

Token 14: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26303815841674805
    2. '7' → logprob: -1.763038158416748
    3. '+' → logprob: -4.013038158416748
    4. '000' → logprob: -4.513038158416748
    5. '9' → logprob: -4.513038158416748
    6. '3' → logprob: -4.763038158416748
    7. '1' → logprob: -5.388038158416748
    8. ')' → logprob: -5.763038158416748
    9. ' ' → logprob: -6.638038158416748
    10. ' +' → logprob: -7.013038158416748

Token 15: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.991464786347933e-05
    2. '9' → logprob: -10.375060081481934
    3. '+' → logprob: -11.125060081481934
    4. ' ' → logprob: -11.875060081481934
    5. '0' → logprob: -12.375060081481934
    6. ' +' → logprob: -13.625060081481934
    7. ')' → logprob: -14.375060081481934
    8. '07' → logprob: -14.625060081481934
    9. '19' → logprob: -15.250060081481934
    10. '```' → logprob: -17.000059127807617

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28470730781555176
    2. ' 
' → logprob: -2.7847073078155518
    3. '<|end|>' → logprob: -3.2847073078155518
    4. 'a' → logprob: -3.7847073078155518
    5. ' ' → logprob: -3.7847073078155518
    6. 'result' → logprob: -3.9097073078155518
    7. ')' → logprob: -4.284707069396973
    8. '*' → logprob: -4.659707069396973
    9. 's' → logprob: -5.284707069396973
    10. 'n' → logprob: -5.284707069396973

Token 17: 'def' (ID: 1314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6832985877990723
    2. 'a' → logprob: -2.0582985877990723
    3. 'result' → logprob: -2.0582985877990723
    4. '*' → logprob: -2.1832985877990723
    5. 'def' → logprob: -2.1832985877990723
    6. 'data' → logprob: -2.4332985877990723
    7. 's' → logprob: -2.9332985877990723
    8. ')' → logprob: -3.0582985877990723
    9. '_' → logprob: -3.1832985877990723
    10. 'n' → logprob: -4.433298587799072

Token 18: ' calc' (ID: 25691)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.647262454032898
    2. ' f' → logprob: -2.1472625732421875
    3. ' pow' → logprob: -2.2722625732421875
    4. ' solve' → logprob: -2.3972625732421875
    5. 'pow' → logprob: -3.7722625732421875
    6. ' hash' → logprob: -4.0222625732421875
    7. ' mul' → logprob: -4.2722625732421875
    8. ' fib' → logprob: -4.3972625732421875
    9. ' prod' → logprob: -4.3972625732421875
    10. ' mod' → logprob: -4.6472625732421875

Token 19: '(L' (ID: 11075)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.1851661205291748
    2. 'ulate' → logprob: -1.3101661205291748
    3. '_' → logprob: -1.4351661205291748
    4. '_sum' → logprob: -2.560166120529175
    5. '_val' → logprob: -3.185166120529175
    6. '_mul' → logprob: -3.935166120529175
    7. '_value' → logprob: -4.810166358947754
    8. '(' → logprob: -5.310166358947754
    9. '_product' → logprob: -5.935166358947754
    10. '(a' → logprob: -6.060166358947754

Token 20: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03514613211154938
    2. ',' → logprob: -3.5351462364196777
    3. '[' → logprob: -5.910146236419678
    4. ')' → logprob: -6.410146236419678
    5. '[i' → logprob: -7.285146236419678
    6. ':' → logprob: -8.78514575958252
    7. ' ):' → logprob: -10.91014575958252
    8. '[int' → logprob: -10.91014575958252
    9. '[n' → logprob: -11.28514575958252
    10. ',i' → logprob: -11.41014575958252

Token 21: ' mod' (ID: 1812)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2830452919006348
    2. 'n' → logprob: -2.1580452919006348
    3. ' k' → logprob: -2.2830452919006348
    4. 'k' → logprob: -2.4080452919006348
    5. ')' → logprob: -2.5330452919006348
    6. ' K' → logprob: -2.6580452919006348
    7. 'K' → logprob: -3.5330452919006348
    8. 'a' → logprob: -3.9080452919006348
    9. ' i' → logprob: -3.9080452919006348
    10. ' a' → logprob: -4.033045291900635

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018300127238035202
    2. ')' → logprob: -4.1433000564575195
    3. ',' → logprob: -6.1433000564575195
    4. ' ):' → logprob: -9.76830005645752
    5. ':' → logprob: -10.01830005645752
    6. '):
' → logprob: -12.76830005645752
    7. '=' → logprob: -12.89330005645752
    8. ''):' → logprob: -13.51830005645752
    9. '*' → logprob: -13.76830005645752
    10. '),' → logprob: -14.14330005645752

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6019678115844727
    2. ':' → logprob: -0.8519678115844727
    3. ')' → logprob: -4.476967811584473
    4. '):' → logprob: -5.851967811584473
    5. '(' → logprob: -5.976967811584473
    6. '    ' → logprob: -6.351967811584473
    7. ' ' → logprob: -7.101967811584473
    8. '    
' → logprob: -7.476967811584473
    9. ':return' → logprob: -7.476967811584473
    10. '[' → logprob: -7.601967811584473

Token 24: ' f' (ID: 285)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9715712070465088
    2. ' result' → logprob: -2.096571207046509
    3. '   ' → logprob: -2.221571207046509
    4. ' res' → logprob: -2.221571207046509
    5. 'return' → logprob: -2.596571207046509
    6. 'result' → logprob: -3.096571207046509
    7. 'res' → logprob: -3.971571207046509
    8. ' r' → logprob: -4.09657096862793
    9. ' n' → logprob: -4.34657096862793
    10. ' a' → logprob: -4.47157096862793

Token 25: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.8487433791160583
    2. 'o' → logprob: -1.3487434387207031
    3. 'a' → logprob: -1.7237434387207031
    4. '=' → logprob: -3.598743438720703
    5. ' =' → logprob: -3.723743438720703
    6. 'u' → logprob: -3.848743438720703
    7. 'rom' → logprob: -3.973743438720703
    8. 'i' → logprob: -4.223743438720703
    9. 'r' → logprob: -4.598743438720703
    10. 'actor' → logprob: -5.473743438720703

Token 26: ' ' (ID: 220)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6264594197273254
    2. '[' → logprob: -1.5014593601226807
    3. ' lambda' → logprob: -1.6264593601226807
    4. 'lambda' → logprob: -3.3764593601226807
    5. ' ' → logprob: -5.00145959854126
    6. '(lambda' → logprob: -6.87645959854126
    7. '1' → logprob: -6.87645959854126
    8. ' []' → logprob: -6.87645959854126
    9. '[]' → logprob: -7.37645959854126
    10. '[L' → logprob: -7.50145959854126

Token 27: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03395767882466316
    2. 'lambda' → logprob: -3.7839577198028564
    3. '1' → logprob: -4.658957481384277
    4. '{' → logprob: -8.033957481384277
    5. '[L' → logprob: -9.033957481384277
    6. '(lambda' → logprob: -9.158957481384277
    7. '0' → logprob: -9.158957481384277
    8. '[]' → logprob: -9.283957481384277
    9. '[len' → logprob: -9.283957481384277
    10. '[int' → logprob: -9.283957481384277

Token 28: '
' (ID: 198)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1754463016986847
    2. ' **' → logprob: -2.0504462718963623
    3. '*' → logprob: -4.675446510314941
    4. '<|end|>' → logprob: -5.300446510314941
    5. '
' → logprob: -5.550446510314941
    6. ' *' → logprob: -5.675446510314941
    7. ' ' → logprob: -5.800446510314941
    8. '0' → logprob: -6.550446510314941
    9. '%' → logprob: -6.550446510314941
    10. ' %' → logprob: -6.925446510314941

Token 29: '   ' (ID: 271)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6397884488105774
    2. '*' → logprob: -1.8897883892059326
    3. ' *' → logprob: -2.3897883892059326
    4. ' **' → logprob: -2.3897883892059326
    5. ',' → logprob: -3.5147883892059326
    6. '+' → logprob: -3.6397883892059326
    7. ' ' → logprob: -3.6397883892059326
    8. '<|end|>' → logprob: -4.514788627624512
    9. ' %' → logprob: -4.764788627624512
    10. '%' → logprob: -4.764788627624512

Token 30: ' nf' (ID: 89636)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4356686770915985
    2. ' ' → logprob: -2.310668706893921
    3. ' **' → logprob: -2.685668706893921
    4. '*' → logprob: -2.935668706893921
    5. '**' → logprob: -3.310668706893921
    6. ' %' → logprob: -3.560668706893921
    7. ' +' → logprob: -4.560668468475342
    8. ' =' → logprob: -4.685668468475342
    9. ' for' → logprob: -5.185668468475342
    10. ')' → logprob: -5.185668468475342

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.731892466545105
    2. ' =' → logprob: -0.731892466545105
    3. '_' → logprob: -4.1068925857543945
    4. 'actor' → logprob: -5.3568925857543945
    5. '*' → logprob: -5.6068925857543945
    6. 'ac' → logprob: -5.7318925857543945
    7. ' ' → logprob: -5.9818925857543945
    8. 'o' → logprob: -6.3568925857543945
    9. 'u' → logprob: -6.7318925857543945
    10. 'f' → logprob: -7.6068925857543945

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08484713733196259
    2. '1' → logprob: -2.8348472118377686
    3. ' f' → logprob: -4.0848469734191895
    4. '2' → logprob: -6.2098469734191895
    5. 'f' → logprob: -6.3348469734191895
    6. ' [' → logprob: -7.7098469734191895
    7. '0' → logprob: -7.7098469734191895
    8. '4' → logprob: -8.209847450256348
    9. ' L' → logprob: -8.584847450256348
    10. ' mod' → logprob: -9.084847450256348

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3043367266654968
    2. ' ' → logprob: -1.6793367862701416
    3. 'f' → logprob: -3.4293367862701416
    4. '2' → logprob: -3.5543367862701416
    5. ' f' → logprob: -5.0543365478515625
    6. '0' → logprob: -6.1793365478515625
    7. '[]' → logprob: -6.8043365478515625
    8. ' []' → logprob: -7.0543365478515625
    9. '4' → logprob: -7.3043365478515625
    10. ' [' → logprob: -7.4293365478515625

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7676999568939209
    2. ')' → logprob: -1.767699956893921
    3. '<|end|>' → logprob: -1.892699956893921
    4. '   ' → logprob: -2.517699956893921
    5. ' ' → logprob: -3.517699956893921
    6. ',' → logprob: -3.642699956893921
    7. ' for' → logprob: -3.892699956893921
    8. 'for' → logprob: -4.1427001953125
    9. '+' → logprob: -4.5177001953125
    10. '0' → logprob: -5.3927001953125

Token 35: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.491487979888916
    2. ' ' → logprob: -1.491487979888916
    3. '
' → logprob: -1.741487979888916
    4. '*' → logprob: -2.616487979888916
    5. ',' → logprob: -2.991487979888916
    6. ' for' → logprob: -3.241487979888916
    7. ')' → logprob: -3.241487979888916
    8. '<|end|>' → logprob: -3.241487979888916
    9. '   ' → logprob: -3.866487979888916
    10. ' 
' → logprob: -3.991487979888916

Token 36: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1679562330245972
    2. 'for' → logprob: -1.1679562330245972
    3. ' ' → logprob: -2.2929563522338867
    4. '
' → logprob: -2.7929563522338867
    5. '   ' → logprob: -2.9179563522338867
    6. ')' → logprob: -3.4179563522338867
    7. ',' → logprob: -4.292956352233887
    8. 'n' → logprob: -4.542956352233887
    9. '*' → logprob: -4.667956352233887
    10. '+' → logprob: -4.667956352233887

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5692872405052185
    2. ' =' → logprob: -1.0692873001098633
    3. 'n' → logprob: -2.4442873001098633
    4. 'nt' → logprob: -6.194287300109863
    5. '+' → logprob: -7.194287300109863
    6. 'f' → logprob: -7.569287300109863
    7. 'd' → logprob: -8.944287300109863
    8. 'nd' → logprob: -8.944287300109863
    9. ' ' → logprob: -9.069287300109863
    10. 's' → logprob: -9.319287300109863

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1104434728622437
    2. ' ' → logprob: -1.1104434728622437
    3. '2' → logprob: -1.3604434728622437
    4. '0' → logprob: -2.485443592071533
    5. '3' → logprob: -6.735443592071533
    6. '4' → logprob: -10.360443115234375
    7. 'f' → logprob: -11.110443115234375
    8. 'len' → logprob: -11.172943115234375
    9. '5' → logprob: -11.485443115234375
    10. '10' → logprob: -11.860443115234375

Token 39: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13961993157863617
    2. '1' → logprob: -2.389619827270508
    3. '0' → logprob: -3.764619827270508
    4. ' ' → logprob: -4.264619827270508
    5. '3' → logprob: -6.764619827270508
    6. 'len' → logprob: -9.014619827270508
    7. 'f' → logprob: -10.764619827270508
    8. '4' → logprob: -11.139619827270508
    9. ' len' → logprob: -11.202119827270508
    10. '10' → logprob: -11.202119827270508

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17235352098941803
    2. '<|end|>' → logprob: -2.422353506088257
    3. '+' → logprob: -3.922353506088257
    4. ' ' → logprob: -4.047353744506836
    5. ' 
' → logprob: -4.547353744506836
    6. ',' → logprob: -5.672353744506836
    7. '\n' → logprob: -6.047353744506836
    8. '0' → logprob: -6.172353744506836
    9. '<|end|>' → logprob: -6.172353744506836
    10. ':' → logprob: -6.672353744506836

Token 41: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.520887017250061
    2. ':' → logprob: -1.770887017250061
    3. '   ' → logprob: -2.0208868980407715
    4. '
' → logprob: -2.2708868980407715
    5. '<|end|>' → logprob: -2.2708868980407715
    6. ',' → logprob: -2.7708868980407715
    7. ' while' → logprob: -3.1458868980407715
    8. '+' → logprob: -3.5208868980407715
    9. ')' → logprob: -3.8958868980407715
    10. '0' → logprob: -4.0208868980407715

Token 42: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2455769032239914
    2. ' ' → logprob: -2.870576858520508
    3. ' 
' → logprob: -2.995576858520508
    4. ' while' → logprob: -3.370576858520508
    5. '<|end|>' → logprob: -4.370576858520508
    6. 'while' (adapté à ' while') → logprob: -4.745576858520508
    7. '0' → logprob: -4.995576858520508
    8. '\n' → logprob: -5.245576858520508
    9. ',' → logprob: -5.245576858520508
    10. ')' → logprob: -5.495576858520508

Token 43: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05513761192560196
    2. 'i' → logprob: -2.9301376342773438
    3. ' True' → logprob: -9.430137634277344
    4. ' f' → logprob: -9.930137634277344
    5. ' ' → logprob: -10.180137634277344
    6. '(i' → logprob: -10.305137634277344
    7. 'True' → logprob: -10.930137634277344
    8. 'f' → logprob: -11.805137634277344
    9. ' ' → logprob: -11.930137634277344
    10. ' (' → logprob: -12.180137634277344

Token 44: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.752304196357727
    2. '<=' → logprob: -1.252304196357727
    3. '<' → logprob: -2.0023040771484375
    4. ' <' → logprob: -2.2523040771484375
    5. '<len' → logprob: -6.1273040771484375
    6. ' ' → logprob: -7.8773040771484375
    7. ' len' → logprob: -9.877304077148438
    8. '<n' → logprob: -11.627304077148438
    9. ' ≤' → logprob: -12.127304077148438
    10. 'len' → logprob: -12.252304077148438

Token 45: ' len' (ID: 4631)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9338858127593994
    2. ' L' → logprob: -1.3088858127593994
    3. 'len' → logprob: -1.8088858127593994
    4. ' len' → logprob: -1.8088858127593994
    5. '=' → logprob: -5.18388557434082
    6. '=len' → logprob: -6.30888557434082
    7. '=L' → logprob: -7.93388557434082
    8. ' =' → logprob: -8.18388557434082
    9. 'n' → logprob: -8.55888557434082
    10. 'int' → logprob: -8.68388557434082

Token 46: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -9.031157969729975e-05
    2. 'L' → logprob: -9.750090599060059
    3. '(' → logprob: -10.375090599060059
    4. ' L' → logprob: -16.375089645385742
    5. '[L' → logprob: -16.500089645385742
    6. ' (' → logprob: -17.000089645385742
    7. '(s' → logprob: -17.000089645385742
    8. ')' → logprob: -17.000089645385742
    9. '(l' → logprob: -17.125089645385742
    10. '(S' → logprob: -17.250089645385742

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029317980632185936
    2. '):
' → logprob: -4.029317855834961
    3. ')' → logprob: -5.029317855834961
    4. ' ):' → logprob: -5.529317855834961
    5. ':' → logprob: -8.904317855834961
    6. '   ' → logprob: -9.279317855834961
    7. ' ):
' → logprob: -9.279317855834961
    8. '-' → logprob: -9.654317855834961
    9. ' and' → logprob: -9.779317855834961
    10. ' )' → logprob: -10.279317855834961

Token 48: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16989398002624512
    2. ' :' → logprob: -2.419893980026245
    3. '   ' → logprob: -4.169894218444824
    4. '       ' → logprob: -4.419894218444824
    5. ' ' → logprob: -4.794894218444824
    6. ' :
' → logprob: -4.919894218444824
    7. ':
' → logprob: -5.044894218444824
    8. ' and' → logprob: -5.294894218444824
    9. ',' → logprob: -5.669894218444824
    10. '    ' → logprob: -5.669894218444824

Token 49: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5559556484222412
    2. ' if' → logprob: -1.3059556484222412
    3. '    ' → logprob: -2.680955648422241
    4. 'if' → logprob: -3.805955648422241
    5. ' f' → logprob: -3.805955648422241
    6. '       ' → logprob: -4.43095588684082
    7. '   ' → logprob: -5.43095588684082
    8. ' i' → logprob: -5.55595588684082
    9. 'f' → logprob: -5.68095588684082
    10. ' s' → logprob: -5.80595588684082

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0648176521062851
    2. '=' → logprob: -2.8148176670074463
    3. ' *=' → logprob: -6.189817428588867
    4. ' +=' → logprob: -8.689817428588867
    5. ' ' → logprob: -8.814817428588867
    6. ' <<=' → logprob: -9.189817428588867
    7. ',' → logprob: -9.689817428588867
    8. '*=' → logprob: -9.814817428588867
    9. '*' → logprob: -9.939817428588867
    10. '+=' → logprob: -10.314817428588867

Token 51: ' int' (ID: 677)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -1.715008020401001
    2. 'f' → logprob: -1.840008020401001
    3. ' L' → logprob: -1.840008020401001
    4. 'L' → logprob: -2.215008020401001
    5. 'int' → logprob: -2.215008020401001
    6. ' int' → logprob: -2.465008020401001
    7. ' (' → logprob: -2.715008020401001
    8. '(L' → logprob: -2.965008020401001
    9. ' ord' → logprob: -3.840008020401001
    10. '(int' → logprob: -4.590007781982422

Token 52: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00035083942930214107
    2. '(' → logprob: -8.000350952148438
    3. 'L' → logprob: -11.375350952148438
    4. '(
' → logprob: -14.375350952148438
    5. '((' → logprob: -14.500350952148438
    6. '(x' → logprob: -15.125350952148438
    7. ')' → logprob: -15.125350952148438
    8. '(i' → logprob: -15.125350952148438
    9. ')L' → logprob: -15.125350952148438
    10. '('' → logprob: -15.500350952148438

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018685187387745827
    2. '[' → logprob: -9.375186920166016
    3. ')' → logprob: -9.500186920166016
    4. 'i' → logprob: -11.750186920166016
    5. ' [' → logprob: -12.125186920166016
    6. '[x' → logprob: -12.500186920166016
    7. '[
' → logprob: -13.500186920166016
    8. ')i' → logprob: -13.625186920166016
    9. '[f' → logprob: -14.250186920166016
    10. ' i' → logprob: -14.250186920166016

Token 54: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.012103884480893612
    2. '])-' → logprob: -5.137104034423828
    3. '-' → logprob: -5.637104034423828
    4. '])
' → logprob: -6.637104034423828
    5. ')' → logprob: -7.137104034423828
    6. ']' → logprob: -8.387104034423828
    7. '])+' → logprob: -9.387104034423828
    8. ' ])' → logprob: -10.387104034423828
    9. ' -' → logprob: -10.762104034423828
    10. '))' → logprob: -10.762104034423828

Token 55: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.12248694896698
    2. ' +' → logprob: -1.99748694896698
    3. '
' → logprob: -2.3724870681762695
    4. '-' → logprob: -2.6224870681762695
    5. '   ' → logprob: -2.7474870681762695
    6. ' ' → logprob: -2.7474870681762695
    7. ' *' → logprob: -3.1224870681762695
    8. ' -' → logprob: -3.2474870681762695
    9. ' if' → logprob: -3.4974870681762695
    10. 'if' → logprob: -3.7474870681762695

Token 56: ' if' (ID: 538)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.5236331224441528
    2. ' if' → logprob: -1.8986331224441528
    3. ' f' → logprob: -2.0236330032348633
    4. ' ' → logprob: -2.0236330032348633
    5. ' *' → logprob: -2.3986330032348633
    6. 'if' (adapté à ' if') → logprob: -2.5236330032348633
    7. '*f' → logprob: -3.2736330032348633
    8. '+' → logprob: -3.6486330032348633
    9. '*' → logprob: -3.7736330032348633
    10. '
' → logprob: -4.023633003234863

Token 57: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2835486829280853
    2. 'x' → logprob: -1.4085487127304077
    3. ' ' → logprob: -7.408548831939697
    4. ' L' → logprob: -8.033548355102539
    5. ' f' → logprob: -8.158548355102539
    6. ' not' → logprob: -8.533548355102539
    7. 'L' → logprob: -8.658548355102539
    8. ' (' → logprob: -8.658548355102539
    9. '(x' → logprob: -8.658548355102539
    10. ' i' → logprob: -8.783548355102539

Token 58: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8404507637023926
    2. '==' → logprob: -1.3404507637023926
    3. '>' → logprob: -1.9654507637023926
    4. ' >' → logprob: -2.4654507637023926
    5. ' !=' → logprob: -3.9654507637023926
    6. ' >=' → logprob: -3.9654507637023926
    7. '>=' → logprob: -4.465450763702393
    8. '!=' → logprob: -4.840450763702393
    9. ' <=' → logprob: -5.340450763702393
    10. ' ' → logprob: -5.465450763702393

Token 59: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3174855709075928
    2. '0' → logprob: -1.3174855709075928
    3. '1' → logprob: -5.567485809326172
    4. '2' → logprob: -9.067485809326172
    5. '9' → logprob: -9.192485809326172
    6. '4' → logprob: -10.192485809326172
    7. ' x' → logprob: -10.692485809326172
    8. 'f' → logprob: -10.754985809326172
    9. '  ' → logprob: -11.254985809326172
    10. 'x' → logprob: -11.442485809326172

Token 60: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05713063105940819
    2. '1' → logprob: -3.0571305751800537
    3. '9' → logprob: -5.682130813598633
    4. '2' → logprob: -5.932130813598633
    5. '4' → logprob: -7.057130813598633
    6. '3' → logprob: -8.182130813598633
    7. 'f' → logprob: -8.182130813598633
    8. 'x' → logprob: -8.182130813598633
    9. ' ' → logprob: -8.432130813598633
    10. '6' → logprob: -8.807130813598633

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00592097407206893
    2. ':
' → logprob: -6.005920886993408
    3. ' or' → logprob: -6.255920886993408
    4. ' :' → logprob: -6.880920886993408
    5. ' and' → logprob: -8.005921363830566
    6. '):' → logprob: -9.755921363830566
    7. '0' → logprob: -11.130921363830566
    8. ' ' → logprob: -11.255921363830566
    9. ',' → logprob: -11.505921363830566
    10. ' :
' → logprob: -11.505921363830566

Token 62: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.052169445902109146
    2. ':
' → logprob: -3.4271695613861084
    3. '           ' → logprob: -5.177169322967529
    4. ' and' → logprob: -5.302169322967529
    5. '       ' → logprob: -6.927169322967529
    6. '<|end|>' → logprob: -6.927169322967529
    7. '
' → logprob: -7.052169322967529
    8. ' :' → logprob: -7.302169322967529
    9. ' or' → logprob: -7.427169322967529
    10. '        ' → logprob: -7.427169322967529

Token 63: ' nf' (ID: 89636)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1909722089767456
    2. ' ' → logprob: -1.6909722089767456
    3. ' f' → logprob: -1.8159722089767456
    4. 'f' → logprob: -1.9409722089767456
    5. ':' → logprob: -3.190972328186035
    6. ' nf' → logprob: -3.440972328186035
    7. '*f' → logprob: -3.815972328186035
    8. ' 
' → logprob: -4.565972328186035
    9. ')' → logprob: -4.815972328186035
    10. '*' → logprob: -4.815972328186035

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7068778872489929
    2. ' =' → logprob: -1.4568779468536377
    3. '*=' → logprob: -1.9568779468536377
    4. ' *=' → logprob: -2.2068779468536377
    5. '+=' → logprob: -4.081877708435059
    6. ' +=' → logprob: -5.706877708435059
    7. '*' → logprob: -6.331877708435059
    8. ' ' → logprob: -8.331877708435059
    9. ' <<=' → logprob: -8.956877708435059
    10. ' *' → logprob: -10.456877708435059

Token 65: ' nf' (ID: 89636)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20247113704681396
    2. ' nf' → logprob: -2.7024712562561035
    3. '(f' → logprob: -2.9524712562561035
    4. '(n' → logprob: -3.3274712562561035
    5. '(' → logprob: -4.7024712562561035
    6. ' f' → logprob: -4.9524712562561035
    7. 'nf' → logprob: -5.0774712562561035
    8. 'f' → logprob: -6.0774712562561035
    9. ' ' → logprob: -6.7024712562561035
    10. '0' → logprob: -6.8274712562561035

Token 66: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47590309381484985
    2. ' *' → logprob: -0.9759030938148499
    3. '+' → logprob: -6.725903034210205
    4. ' +' → logprob: -7.725903034210205
    5. '*f' → logprob: -9.225903511047363
    6. '**' → logprob: -10.725903511047363
    7. '*(' → logprob: -10.850903511047363
    8. ' ' → logprob: -11.475903511047363
    9. '*n' → logprob: -11.600903511047363
    10. '*i' → logprob: -12.725903511047363

Token 67: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.21671399474143982
    2. ' f' → logprob: -2.3417139053344727
    3. '2' → logprob: -2.7167139053344727
    4. '3' → logprob: -4.341713905334473
    5. ' ' → logprob: -5.341713905334473
    6. ' (' → logprob: -5.966713905334473
    7. '(f' → logprob: -6.091713905334473
    8. '(' → logprob: -6.341713905334473
    9. 'x' → logprob: -6.341713905334473
    10. '4' → logprob: -6.466713905334473

Token 68: '3' (ID: 18)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1371530145406723
    2. '2' → logprob: -2.387152910232544
    3. '3' → logprob: -4.137153148651123
    4. ' f' → logprob: -5.012153148651123
    5. '4' → logprob: -6.137153148651123
    6. '(f' → logprob: -6.137153148651123
    7. 'x' → logprob: -6.387153148651123
    8. '(' → logprob: -6.512153148651123
    9. '(x' → logprob: -7.137153148651123
    10. '1' → logprob: -7.137153148651123

Token 69: ' +' (ID: 659)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.05313008278608322
    2. '%' → logprob: -3.0531301498413086
    3. ' ' → logprob: -6.553130149841309
    4. '<|end|>' → logprob: -7.553130149841309
    5. ')' → logprob: -7.678130149841309
    6. 'f' → logprob: -7.678130149841309
    7. '
' → logprob: -7.803130149841309
    8. ' f' → logprob: -8.303130149841309
    9. '*f' → logprob: -8.428130149841309
    10. ' *' → logprob: -8.553130149841309

Token 70: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.6806855797767639
    2. 'f' → logprob: -0.8056855797767639
    3. '2' → logprob: -3.930685520172119
    4. ' ' → logprob: -4.555685520172119
    5. '1' → logprob: -4.805685520172119
    6. '3' → logprob: -6.180685520172119
    7. '4' → logprob: -6.430685520172119
    8. '0' → logprob: -6.555685520172119
    9. 'pow' → logprob: -6.930685520172119
    10. '6' → logprob: -7.555685520172119

Token 71: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7002652883529663
    2. '<|end|>' → logprob: -1.2002652883529663
    3. '*' → logprob: -2.075265407562256
    4. ' ' → logprob: -2.700265407562256
    5. '*f' → logprob: -5.200265407562256
    6. ')' → logprob: -7.325265407562256
    7. ' 
' → logprob: -7.700265407562256
    8. '<|end|>' → logprob: -7.700265407562256
    9. '    ' → logprob: -7.825265407562256
    10. '        ' → logprob: -7.825265407562256

Token 72: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.361694097518921
    2. '*' → logprob: -1.861694097518921
    3. ' ' → logprob: -2.236694097518921
    4. '<|end|>' → logprob: -2.361694097518921
    5. ' *' → logprob: -2.611694097518921
    6. '\n' → logprob: -2.736694097518921
    7. '
' → logprob: -3.111694097518921
    8. ')' → logprob: -3.236694097518921
    9. '```' → logprob: -3.611694097518921
    10. '    ' → logprob: -3.861694097518921

Token 73: ' f' (ID: 285)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0773885250091553
    2. ' ' → logprob: -1.2023885250091553
    3. ' *' → logprob: -1.5773885250091553
    4. '<|end|>' → logprob: -2.7023885250091553
    5. ')' → logprob: -3.5773885250091553
    6. '    ' → logprob: -4.077388763427734
    7. '
' → logprob: -5.077388763427734
    8. '        ' → logprob: -5.202388763427734
    9. '```' → logprob: -5.577388763427734
    10. '*f' → logprob: -5.702388763427734

Token 74: ' <<=' (ID: 134025)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32022833824157715
    2. ' =' → logprob: -1.9452283382415771
    3. '*=' → logprob: -2.195228338241577
    4. ' *=' → logprob: -4.320228576660156
    5. '+=' → logprob: -5.820228576660156
    6. '*' → logprob: -6.445228576660156
    7. ',' → logprob: -6.695228576660156
    8. ' +=' → logprob: -8.070228576660156
    9. ' ' → logprob: -8.320228576660156
    10. ' *' → logprob: -10.445228576660156

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00625819293782115
    2. '2' → logprob: -5.131258010864258
    3. '3' → logprob: -8.506258010864258
    4. ' ' → logprob: -9.006258010864258
    5. '4' → logprob: -13.256258010864258
    6. '   ' → logprob: -14.256258010864258
    7. '0' → logprob: -14.568758010864258
    8. '5' → logprob: -14.631258010864258
    9. '6' → logprob: -15.068758010864258
    10. '	' → logprob: -15.693758010864258

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015558054437860847
    2. '2' → logprob: -6.501555919647217
    3. ' ' → logprob: -10.251555442810059
    4. '3' → logprob: -11.001555442810059
    5. '4' → logprob: -15.251555442810059
    6. '   ' → logprob: -15.314055442810059
    7. '0' → logprob: -15.564055442810059
    8. '5' → logprob: -16.439056396484375
    9. '	' → logprob: -16.814056396484375
    10. '```' → logprob: -16.939056396484375

Token 77: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37149932980537415
    2. '       ' → logprob: -1.4964993000030518
    3. '<|end|>' → logprob: -2.8714993000030518
    4. '<|end|>' → logprob: -4.746499538421631
    5. '
' → logprob: -5.621499538421631
    6. '\n' → logprob: -5.746499538421631
    7. '```' → logprob: -5.871499538421631
    8. 'i' → logprob: -6.246499538421631
    9. ' ' → logprob: -6.371499538421631
    10. ' 
' → logprob: -6.871499538421631

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.636287271976471
    2. '
' → logprob: -1.0112872123718262
    3. '\n' → logprob: -3.011287212371826
    4. '<|end|>' → logprob: -3.761287212371826
    5. '           ' → logprob: -5.136287212371826
    6. '        
' → logprob: -5.511287212371826
    7. '<|end|>' → logprob: -5.886287212371826
    8. ' 
' → logprob: -6.011287212371826
    9. '	' → logprob: -6.386287212371826
    10. '```' → logprob: -6.386287212371826

Token 79: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2319190502166748
    2. '\n' → logprob: -1.3569190502166748
    3. ' else' → logprob: -1.7319190502166748
    4. 'else' (adapté à ' else') → logprob: -2.481919050216675
    5. '```' → logprob: -2.981919050216675
    6. '\t' → logprob: -3.856919050216675
    7. ' ' → logprob: -3.981919050216675
    8. '
' → logprob: -4.231919288635254
    9. 'i' → logprob: -4.356919288635254
    10. 'elif' → logprob: -4.606919288635254

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12856663763523102
    2. ':
' → logprob: -2.1285667419433594
    3. '           ' → logprob: -7.628566741943359
    4. '       ' → logprob: -8.12856674194336
    5. '<|end|>' → logprob: -8.12856674194336
    6. '        ' → logprob: -8.87856674194336
    7. ',' → logprob: -10.12856674194336
    8. '{' → logprob: -10.12856674194336
    9. ' :
' → logprob: -10.25356674194336
    10. '<|end|>' → logprob: -10.25356674194336

Token 81: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9768841862678528
    2. 'f' → logprob: -1.726884126663208
    3. ' f' → logprob: -2.101884126663208
    4. '        ' → logprob: -2.476884126663208
    5. 'nf' → logprob: -2.851884126663208
    6. ' nf' → logprob: -2.851884126663208
    7. ' ' → logprob: -3.226884126663208
    8. '            ' → logprob: -3.601884126663208
    9. '    ' → logprob: -4.601884365081787
    10. '       ' → logprob: -4.726884365081787

Token 82: ' nf' (ID: 89636)
  Prédit: ' nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nf' → logprob: -0.877528727054596
    2. 'nf' (adapté à ' nf') → logprob: -1.5025286674499512
    3. 'f' → logprob: -1.6275286674499512
    4. ' f' → logprob: -1.8775286674499512
    5. '            ' → logprob: -5.877528667449951
    6. '_nf' → logprob: -6.252528667449951
    7. '        ' → logprob: -6.252528667449951
    8. 'n' → logprob: -6.627528667449951
    9. ' ' → logprob: -7.502528667449951
    10. '    ' → logprob: -7.502528667449951

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23229247331619263
    2. '=' → logprob: -2.232292413711548
    3. ' *=' → logprob: -2.357292413711548
    4. '*=' → logprob: -5.482292652130127
    5. ' <<=' → logprob: -7.232292652130127
    6. ' +=' → logprob: -8.482292175292969
    7. ' *' → logprob: -9.857292175292969
    8. '*' → logprob: -9.857292175292969
    9. ' ' → logprob: -9.982292175292969
    10. ',' → logprob: -10.107292175292969

Token 84: ' nf' (ID: 89636)
  Prédit: ' nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nf' → logprob: -0.10710632801055908
    2. 'nf' → logprob: -2.7321062088012695
    3. ' (' → logprob: -4.1071062088012695
    4. ' f' → logprob: -4.8571062088012695
    5. 'f' → logprob: -5.2321062088012695
    6. '(' → logprob: -6.3571062088012695
    7. ' ' → logprob: -6.6071062088012695
    8. '(n' → logprob: -6.8571062088012695
    9. '_nf' → logprob: -7.1071062088012695
    10. '2' → logprob: -7.2321062088012695

Token 85: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.031068900600075722
    2. '*' → logprob: -3.531068801879883
    3. ' +' → logprob: -6.781068801879883
    4. '+' → logprob: -8.906068801879883
    5. ' ' → logprob: -11.156068801879883
    6. ' <<' → logprob: -11.281068801879883
    7. '<<' → logprob: -11.406068801879883
    8. '**' → logprob: -12.906068801879883
    9. ' <<=' → logprob: -13.156068801879883
    10. ' **' → logprob: -14.406068801879883

Token 86: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.29862910509109497
    2. '3' → logprob: -1.7986290454864502
    3. ' ' → logprob: -3.67362904548645
    4. '(' → logprob: -3.92362904548645
    5. '4' → logprob: -4.298629283905029
    6. '6' → logprob: -4.673629283905029
    7. '(f' → logprob: -4.673629283905029
    8. 'f' → logprob: -4.673629283905029
    9. ' (' → logprob: -6.298629283905029
    10. '5' → logprob: -7.173629283905029

Token 87: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13977324962615967
    2. '3' → logprob: -2.389773368835449
    3. '6' → logprob: -4.139773368835449
    4. '4' → logprob: -4.639773368835449
    5. 'f' → logprob: -5.389773368835449
    6. '(' → logprob: -5.639773368835449
    7. '(f' → logprob: -5.764773368835449
    8. '1' → logprob: -7.514773368835449
    9. ' ' → logprob: -7.889773368835449
    10. '5' → logprob: -8.51477336883545

Token 88: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5071662664413452
    2. '+' → logprob: -1.1321662664413452
    3. ' ' → logprob: -2.6321663856506348
    4. ' -' → logprob: -7.257166385650635
    5. '<|end|>' → logprob: -8.007165908813477
    6. '        ' → logprob: -8.382165908813477
    7. ' +
' → logprob: -8.382165908813477
    8. '           ' → logprob: -8.382165908813477
    9. '       ' → logprob: -8.507165908813477
    10. '-' → logprob: -8.507165908813477

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.105245441198349
    2. '<|end|>' → logprob: -3.105245351791382
    3. ' ' → logprob: -3.855245351791382
    4. '
' → logprob: -4.980245590209961
    5. '        
' → logprob: -5.480245590209961
    6. '+' → logprob: -5.605245590209961
    7. '           ' → logprob: -5.605245590209961
    8. ' 
' → logprob: -5.980245590209961
    9. '<|end|>' → logprob: -6.480245590209961
    10. '```' → logprob: -6.855245590209961

Token 90: ' nf' (ID: 89636)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015144395641982555
    2. ' i' → logprob: -5.015144348144531
    3. '```' → logprob: -5.390144348144531
    4. 'i' → logprob: -7.140144348144531
    5. '
' → logprob: -7.265144348144531
    6. '	' → logprob: -7.390144348144531
    7. '   ' → logprob: -7.390144348144531
    8. ' ' → logprob: -8.890144348144531
    9. '``' → logprob: -8.890144348144531
    10. '+' → logprob: -9.015144348144531

Token 91: ' =' (ID: 314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2077634334564209
    2. '%=' → logprob: -2.082763433456421
    3. ' %=' → logprob: -2.957763433456421
    4. '=' → logprob: -4.832763671875
    5. ' %' → logprob: -5.832763671875
    6. ' =' → logprob: -9.582763671875
    7. ',' → logprob: -9.707763671875
    8. '//=' → logprob: -11.457763671875
    9. ' <<=' → logprob: -11.832763671875
    10. '```' → logprob: -11.832763671875

Token 92: ' nf' (ID: 89636)
  Prédit: ' nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nf' → logprob: -0.0702279657125473
    2. 'nf' → logprob: -2.695227861404419
    3. '%n' → logprob: -9.19522762298584
    4. '_nf' → logprob: -9.32022762298584
    5. ' %' → logprob: -9.82022762298584
    6. '%' → logprob: -10.57022762298584
    7. ' nft' → logprob: -12.07022762298584
    8. ' nfl' → logprob: -12.44522762298584
    9. 'n' → logprob: -12.69522762298584
    10. ' mod' → logprob: -13.07022762298584

Token 93: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.014173968695104122
    2. ' %' → logprob: -4.264173984527588
    3. '%
' → logprob: -12.13917350769043
    4. '%n' → logprob: -13.76417350769043
    5. ' mod' → logprob: -13.88917350769043
    6. 'mod' → logprob: -14.01417350769043
    7. ' %=' → logprob: -14.51417350769043
    8. ' %
' → logprob: -14.63917350769043
    9. '%i' → logprob: -15.13917350769043
    10. '%d' → logprob: -15.38917350769043

Token 94: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.005497818812727928
    2. 'mod' → logprob: -5.255497932434082
    3. '(mod' → logprob: -8.255497932434082
    4. ' ' → logprob: -13.005497932434082
    5. '	mod' → logprob: -13.755497932434082
    6. ' modul' → logprob: -15.505497932434082
    7. ' мод' → logprob: -15.630497932434082
    8. '_mod' → logprob: -15.755497932434082
    9. ' (' → logprob: -15.880497932434082
    10. ' ' → logprob: -15.880497932434082

Token 95: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19577346742153168
    2. '
' → logprob: -2.0707733631134033
    3. '<|end|>' → logprob: -3.1957733631134033
    4. '        
' → logprob: -6.195773601531982
    5. '	' → logprob: -6.320773601531982
    6. '```' → logprob: -6.570773601531982
    7. '\n' → logprob: -6.945773601531982
    8. ',' → logprob: -7.195773601531982
    9. '<|end|>' → logprob: -7.445773601531982
    10. '
' → logprob: -7.570773601531982

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10707099735736847
    2. '
' → logprob: -2.9820709228515625
    3. '<|end|>' → logprob: -3.3570709228515625
    4. '```' → logprob: -5.1070709228515625
    5. '        
' → logprob: -5.7320709228515625
    6. '	' → logprob: -6.4820709228515625
    7. 'i' → logprob: -6.7320709228515625
    8. '   ' → logprob: -7.3570709228515625
    9. '<|end|>' → logprob: -7.4820709228515625
    10. '  
' → logprob: -7.8570709228515625

Token 97: ' f' (ID: 285)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0005556344985962
    2. ' i' → logprob: -1.0005556344985962
    3. '       ' → logprob: -1.3755556344985962
    4. 'f' (adapté à ' f') → logprob: -5.125555515289307
    5. '   ' → logprob: -6.125555515289307
    6. ' f' → logprob: -6.250555515289307
    7. '	i' → logprob: -6.875555515289307
    8. ' ' → logprob: -7.500555515289307
    9. '```' → logprob: -9.875555992126465
    10. '	' → logprob: -10.000555992126465

Token 98: ' =' (ID: 314)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.04337320849299431
    2. '=' → logprob: -3.5433731079101562
    3. '%=' → logprob: -5.168373107910156
    4. '<<' → logprob: -6.043373107910156
    5. '+=' → logprob: -6.293373107910156
    6. ' =' → logprob: -6.543373107910156
    7. ' %=' → logprob: -6.668373107910156
    8. '*=' → logprob: -7.918373107910156
    9. ' +=' → logprob: -8.293373107910156
    10. ',' → logprob: -9.043373107910156

Token 99: ' f' (ID: 285)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.23382683098316193
    2. ' (' → logprob: -1.6088268756866455
    3. 'f' → logprob: -5.483826637268066
    4. '(' → logprob: -5.858826637268066
    5. ' f' → logprob: -6.608826637268066
    6. ' ' → logprob: -11.983826637268066
    7. '2' → logprob: -12.358826637268066
    8. '1' → logprob: -13.983826637268066
    9. '(n' → logprob: -13.983826637268066
    10. '((' → logprob: -14.233826637268066

Token 100: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3376842439174652
    2. ' %' → logprob: -1.3376842737197876
    3. '*' → logprob: -4.087684154510498
    4. ' *' → logprob: -5.712684154510498
    5. '<<' → logprob: -5.837684154510498
    6. ' <<=' → logprob: -7.462684154510498
    7. '+' → logprob: -7.962684154510498
    8. ' <<' → logprob: -9.837684631347656
    9. '*f' → logprob: -9.837684631347656
    10. 'f' → logprob: -10.212684631347656

Token 101: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07889793813228607
    2. ' mod' → logprob: -2.5788979530334473
    3. '(mod' → logprob: -11.828897476196289
    4. ' ' → logprob: -14.578897476196289
    5. '	mod' → logprob: -15.078897476196289
    6. ' ' → logprob: -17.70389747619629
    7. 'm' → logprob: -17.95389747619629
    8. ' мод' → logprob: -18.70389747619629
    9. '   ' → logprob: -18.95389747619629
    10. '_mod' → logprob: -19.32889747619629

Token 102: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6410632133483887
    2. '
' → logprob: -0.8910632133483887
    3. '```' → logprob: -5.016063213348389
    4. '<|end|>' → logprob: -5.016063213348389
    5. '        
' → logprob: -5.141063213348389
    6. 'i' → logprob: -5.266063213348389
    7. '   ' → logprob: -5.266063213348389
    8. '	' → logprob: -5.266063213348389
    9. '	i' → logprob: -5.391063213348389
    10. '\n' → logprob: -5.516063213348389

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08481800556182861
    2. 'i' → logprob: -3.459817886352539
    3. '	' → logprob: -4.209817886352539
    4. '
' → logprob: -4.459817886352539
    5. '	i' → logprob: -4.959817886352539
    6. '   ' → logprob: -5.334817886352539
    7. ' i' → logprob: -5.334817886352539
    8. '```' → logprob: -5.459817886352539
    9. '<|end|>' → logprob: -7.459817886352539
    10. ' ' → logprob: -8.084817886352539

Token 104: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7397981286048889
    2. '       ' → logprob: -0.9897981286048889
    3. 'i' (adapté à ' i') → logprob: -2.364798069000244
    4. ' i' → logprob: -2.864798069000244
    5. '	i' → logprob: -9.489798545837402
    6. ' ' → logprob: -10.364798545837402
    7. '
' → logprob: -10.614798545837402
    8. '```' → logprob: -10.739798545837402
    9. '	' → logprob: -11.864798545837402
    10. '    
' → logprob: -12.364798545837402

Token 105: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31385430693626404
    2. ' +=' → logprob: -1.5638543367385864
    3. '+' → logprob: -2.813854217529297
    4. '=' → logprob: -9.938854217529297
    5. '++' → logprob: -11.563854217529297
    6. ' +' → logprob: -11.813854217529297
    7. '+="' → logprob: -12.813854217529297
    8. '+='' → logprob: -13.438854217529297
    9. '+++' → logprob: -13.813854217529297
    10. ' ' → logprob: -14.313854217529297

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -20.37523078918457
    4. ' ' → logprob: -21.25023078918457
    5. '```' → logprob: -21.75023078918457
    6. '１' → logprob: -22.37523078918457
    7. '	' → logprob: -22.75023078918457
    8. '2' → logprob: -22.87523078918457
    9. '<|end|>' → logprob: -22.87523078918457
    10. '۱' → logprob: -23.00023078918457

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -19.875
    4. '```' → logprob: -20.125
    5. '2' → logprob: -21.625
    6. '  ' → logprob: -22.375
    7. '１' → logprob: -23.375
    8. '       ' → logprob: -23.625
    9. '
' → logprob: -23.625
    10. '0' → logprob: -24.0

Token 108: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037954463623464108
    2. '<|end|>' → logprob: -6.003795623779297
    3. '	return' → logprob: -7.878795623779297
    4. '
' → logprob: -8.128795623779297
    5. '       ' → logprob: -8.878795623779297
    6. '    
' → logprob: -9.128795623779297
    7. 'return' → logprob: -9.628795623779297
    8. ',' → logprob: -9.753795623779297
    9. ' return' → logprob: -10.003795623779297
    10. ')' → logprob: -10.003795623779297

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001675302512012422
    2. 'return' → logprob: -6.751675128936768
    3. ' return' → logprob: -7.626675128936768
    4. '
' → logprob: -12.376675605773926
    5. '    
' → logprob: -12.501675605773926
    6. '<|end|>' → logprob: -12.626675605773926
    7. '       ' → logprob: -13.251675605773926
    8. ' ' → logprob: -13.626675605773926
    9. '	return' → logprob: -13.626675605773926
    10. '  ' → logprob: -14.626675605773926

Token 110: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5239813923835754
    2. 'return' (adapté à ' return') → logprob: -1.0239813327789307
    3. ' return' → logprob: -3.0239813327789307
    4. ' ' → logprob: -10.398981094360352
    5. '	return' → logprob: -10.773981094360352
    6. '       ' → logprob: -12.398981094360352
    7. ':return' → logprob: -12.898981094360352
    8. '<|end|>' → logprob: -13.023981094360352
    9. '    
' → logprob: -13.273981094360352
    10. '  ' → logprob: -13.273981094360352

Token 111: ' (' (ID: 350)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.1917177438735962
    2. '(n' → logprob: -2.1917176246643066
    3. ' nf' → logprob: -2.8167176246643066
    4. ' (' → logprob: -6.066717624664307
    5. '(f' → logprob: -8.566718101501465
    6. 'n' → logprob: -8.566718101501465
    7. '_nf' → logprob: -9.191718101501465
    8. 'f' → logprob: -9.566718101501465
    9. '[n' → logprob: -11.066718101501465
    10. '(nx' → logprob: -12.379218101501465

Token 112: 'f' (ID: 69)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.24935787916183472
    2. 'f' → logprob: -1.6243579387664795
    3. ' nf' → logprob: -3.9993579387664795
    4. '(n' → logprob: -6.2493577003479
    5. '(f' → logprob: -6.7493577003479
    6. ' f' → logprob: -6.8743577003479
    7. 'n' → logprob: -7.1243577003479
    8. ' (' → logprob: -8.624358177185059
    9. '_nf' → logprob: -9.374358177185059
    10. 'fn' → logprob: -10.124358177185059

Token 113: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08888090401887894
    2. ',n' → logprob: -3.088881015777588
    3. ' +' → logprob: -4.088881015777588
    4. ' ,' → logprob: -4.463881015777588
    5. '+' → logprob: -5.338881015777588
    6. ' *' → logprob: -6.088881015777588
    7. '%' → logprob: -6.088881015777588
    8. ' %' → logprob: -7.588881015777588
    9. '*' → logprob: -7.963881015777588
    10. ',f' → logprob: -8.08888053894043

Token 114: ' nf' (ID: 89636)
  Prédit: ' nf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nf' → logprob: -0.20142357051372528
    2. 'nf' → logprob: -1.7014235258102417
    3. '_nf' → logprob: -11.576423645019531
    4. 'n' → logprob: -14.326423645019531
    5. ' nft' → logprob: -15.826423645019531
    6. ' n' → logprob: -16.82642364501953
    7. ' ' → logprob: -16.95142364501953
    8. 'f' → logprob: -16.95142364501953
    9. '	n' → logprob: -18.45142364501953
    10. ' nfl' → logprob: -18.57642364501953

Token 115: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000563042180147022
    2. ')%' → logprob: -7.500563144683838
    3. ' )' → logprob: -11.75056266784668
    4. '%' → logprob: -13.37556266784668
    5. '   ' → logprob: -15.00056266784668
    6. '	' → logprob: -16.62556266784668
    7. ')
' → logprob: -16.62556266784668
    8. ' ' → logprob: -16.75056266784668
    9. '```' → logprob: -17.00056266784668
    10. '）' → logprob: -17.25056266784668

Token 116: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6793217658996582
    2. '(' → logprob: -1.0543217658996582
    3. '<|end|>' → logprob: -2.554321765899658
    4. '#' → logprob: -4.179321765899658
    5. '(
' → logprob: -4.179321765899658
    6. '%' → logprob: -4.179321765899658
    7. '+' → logprob: -5.179321765899658
    8. '
' → logprob: -5.304321765899658
    9. ' ' → logprob: -6.429321765899658
    10. '*' → logprob: -6.429321765899658

Token 117: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.31358280777931213
    2. 'mod' → logprob: -1.3135827779769897
    3. '(mod' → logprob: -8.063582420349121
    4. ' ' → logprob: -12.688582420349121
    5. '	mod' → logprob: -13.063582420349121
    6. ' ' → logprob: -15.063582420349121
    7. ' мод' → logprob: -15.813582420349121
    8. '0' → logprob: -16.313583374023438
    9. '_mod' → logprob: -16.438583374023438
    10. '(' → logprob: -16.813583374023438

Token 118: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4925931990146637
    2. 'print' → logprob: -1.9925931692123413
    3. 'result' → logprob: -2.117593288421631
    4. '(' → logprob: -2.617593288421631
    5. '#' → logprob: -3.992593288421631
    6. 'n' → logprob: -5.117593288421631
    7. '<|end|>' → logprob: -5.117593288421631
    8. '(
' → logprob: -5.492593288421631
    9. '\n' → logprob: -5.617593288421631
    10. 'return' → logprob: -5.867593288421631

Token 119: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4997893273830414
    2. '(' → logprob: -0.9997893571853638
    3. '#' → logprob: -4.874789237976074
    4. '[' → logprob: -5.374789237976074
    5. '<|end|>' → logprob: -6.249789237976074
    6. 'print' → logprob: -6.374789237976074
    7. '*' → logprob: -6.499789237976074
    8. '+' → logprob: -6.499789237976074
    9. ' ' → logprob: -6.749789237976074
    10. '
' → logprob: -7.374789237976074

Token 120: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.70588618516922
    2. ' =' → logprob: -0.70588618516922
    3. '(' → logprob: -5.205886363983154
    4. ')' → logprob: -5.580886363983154
    5. '_' → logprob: -6.330886363983154
    6. '<|end|>' → logprob: -7.330886363983154
    7. ' ' → logprob: -8.455885887145996
    8. '()' → logprob: -8.580885887145996
    9. ',' → logprob: -9.330885887145996
    10. 's' → logprob: -9.580885887145996

Token 121: ' (' (ID: 350)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.06211814284324646
    2. ' calc' → logprob: -2.8121180534362793
    3. '(calc' → logprob: -8.812118530273438
    4. 'str' → logprob: -14.687118530273438
    5. 'cal' → logprob: -14.937118530273438
    6. ' ' → logprob: -15.312118530273438
    7. '.calc' → logprob: -15.687118530273438
    8. ' str' → logprob: -16.187118530273438
    9. 'calculate' → logprob: -16.687118530273438
    10. 'int' → logprob: -16.937118530273438

Token 122: 'lambda' (ID: 35280)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.009783834218978882
    2. 'reduce' → logprob: -4.759783744812012
    3. ' calc' → logprob: -6.884783744812012
    4. '(calc' → logprob: -9.009783744812012
    5. ' reduce' → logprob: -12.134783744812012
    6. 'cal' → logprob: -12.384783744812012
    7. '   ' → logprob: -12.884783744812012
    8. ')' → logprob: -13.009783744812012
    9. 'calculate' → logprob: -13.384783744812012
    10. 'int' → logprob: -13.509783744812012

Token 123: ' s' (ID: 265)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.27227669954299927
    2. 'L' → logprob: -1.8972766399383545
    3. ' x' → logprob: -2.6472766399383545
    4. 'x' → logprob: -5.272276878356934
    5. ' s' → logprob: -5.397276878356934
    6. ' l' → logprob: -6.147276878356934
    7. ' n' → logprob: -6.897276878356934
    8. ' lst' → logprob: -7.022276878356934
    9. ' a' → logprob: -7.272276878356934
    10. ' f' → logprob: -7.647276878356934

Token 124: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004677899647504091
    2. ' :' → logprob: -5.504677772521973
    3. ':s' → logprob: -7.504677772521973
    4. ':L' → logprob: -11.254677772521973
    5. 's' → logprob: -11.504677772521973
    6. ':f' → logprob: -11.629677772521973
    7. ',' → logprob: -11.879677772521973
    8. ':l' → logprob: -13.254677772521973
    9. ':n' → logprob: -13.504677772521973
    10. ' s' → logprob: -13.754677772521973

Token 125: ' m' (ID: 284)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6763482093811035
    2. 'm' → logprob: -0.8013482093811035
    3. ' mod' → logprob: -3.5513482093811035
    4. ' m' → logprob: -4.3013482093811035
    5. 'n' → logprob: -8.801347732543945
    6. 'x' → logprob: -9.301347732543945
    7. 'k' → logprob: -9.926347732543945
    8. 'md' → logprob: -10.176347732543945
    9. 'f' → logprob: -10.301347732543945
    10. 't' → logprob: -10.676347732543945

Token 126: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013939269119873643
    2. ' :' → logprob: -6.626393795013428
    3. '=' → logprob: -10.001394271850586
    4. ':s' → logprob: -11.751394271850586
    5. ':f' → logprob: -12.501394271850586
    6. ',' → logprob: -12.501394271850586
    7. ':(' → logprob: -12.626394271850586
    8. ':L' → logprob: -14.001394271850586
    9. ')' → logprob: -15.001394271850586
    10. 's' → logprob: -15.126394271850586

Token 127: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.08502168953418732
    2. 'reduce' → logprob: -3.335021734237671
    3. ' calc' → logprob: -3.585021734237671
    4. '(calc' → logprob: -4.085021495819092
    5. ' reduce' → logprob: -6.835021495819092
    6. '(s' → logprob: -10.21002197265625
    7. '(re' → logprob: -10.71002197265625
    8. 'print' → logprob: -10.71002197265625
    9. '   ' → logprob: -10.83502197265625
    10. ')' → logprob: -10.83502197265625

Token 128: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.007594910915941
    2. '(L' → logprob: -5.382595062255859
    3. ')(' → logprob: -5.882595062255859
    4. '(' → logprob: -9.13259506225586
    5. ')' → logprob: -9.63259506225586
    6. '(S' → logprob: -12.75759506225586
    7. ' (' → logprob: -13.38259506225586
    8. '<|end|>' → logprob: -14.25759506225586
    9. ')L' → logprob: -14.38259506225586
    10. ')s' → logprob: -14.63259506225586

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005557744298130274
    2. ' ,' → logprob: -7.500555992126465
    3. ',m' → logprob: -13.000555992126465
    4. ',
' → logprob: -15.375555992126465
    5. ',module' → logprob: -16.37555503845215
    6. ',len' → logprob: -16.75055503845215
    7. ',n' → logprob: -17.50055503845215
    8. ')' → logprob: -17.62555503845215
    9. ',l' → logprob: -17.87555503845215
    10. ' ' → logprob: -18.12555503845215

Token 130: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.40579184889793396
    2. ' m' → logprob: -1.1557918787002563
    3. 'mod' → logprob: -4.405791759490967
    4. ' mod' → logprob: -5.030791759490967
    5. ')m' → logprob: -13.530792236328125
    6. ')' → logprob: -14.530792236328125
    7. ' ' → logprob: -15.405792236328125
    8. '	m' → logprob: -15.530792236328125
    9. '	mod' → logprob: -15.780792236328125
    10. '_mod' → logprob: -16.030792236328125

Token 131: '))(' (ID: 72297)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4780859351158142
    2. '))(' → logprob: -0.9780859351158142
    3. ')' → logprob: -5.728085994720459
    4. ')(' → logprob: -7.228085994720459
    5. ')))' → logprob: -11.8530855178833
    6. ')L' → logprob: -11.9780855178833
    7. '))[' → logprob: -13.1030855178833
    8. '(L' → logprob: -13.6030855178833
    9. ')).' → logprob: -13.9780855178833
    10. '))
' → logprob: -14.2280855178833

Token 132: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -7.696077227592468e-05
    2. ' L' → logprob: -9.500077247619629
    3. '(L' → logprob: -13.125077247619629
    4. ')L' → logprob: -17.125076293945312
    5. ',L' → logprob: -18.125076293945312
    6. ')' → logprob: -18.625076293945312
    7. '[L' → logprob: -18.750076293945312
    8. '"L' → logprob: -19.000076293945312
    9. '	L' → logprob: -19.125076293945312
    10. '(' → logprob: -19.875076293945312

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.620622712536715e-05
    2. ')' → logprob: -10.125045776367188
    3. ' ,' → logprob: -12.125045776367188
    4. ',)' → logprob: -15.000045776367188
    5. ',
' → logprob: -15.375045776367188
    6. ',module' → logprob: -17.500045776367188
    7. ' ' → logprob: -18.500045776367188
    8. '   ' → logprob: -18.625045776367188
    9. ',

' → logprob: -18.625045776367188
    10. ',:)' → logprob: -18.750045776367188

Token 134: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.3132626414299011
    2. 'mod' → logprob: -1.313262701034546
    3. '(mod' → logprob: -15.313262939453125
    4. '	mod' → logprob: -15.438262939453125
    5. ' ' → logprob: -16.313262939453125
    6. ' modul' → logprob: -16.313262939453125
    7. ')' → logprob: -16.438262939453125
    8. ' ' → logprob: -16.688262939453125
    9. '_mod' → logprob: -17.063262939453125
    10. ' 
' → logprob: -17.438262939453125

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.700132997939363e-05
    2. '))' → logprob: -11.000017166137695
    3. ')))' → logprob: -16.250017166137695
    4. ')`' → logprob: -17.500017166137695
    5. ' )' → logprob: -17.750017166137695
    6. ')
' → logprob: -17.875017166137695
    7. ')}' → logprob: -18.000017166137695
    8. ')#' → logprob: -18.625017166137695
    9. '})' → logprob: -19.125017166137695
    10. ')}}' → logprob: -19.750017166137695

Token 136: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023393364972434938
    2. '
' → logprob: -8.37523365020752
    3. '<|end|>' → logprob: -13.50023365020752
    4. ' print' → logprob: -13.87523365020752
    5. '\n' → logprob: -15.00023365020752
    6. ')' → logprob: -15.50023365020752
    7. 'ans' → logprob: -15.75023365020752
    8. '#print' → logprob: -15.87523365020752
    9. '```' → logprob: -16.000234603881836
    10. '#' → logprob: -17.125234603881836

Token 137: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0011714138090610504
    2. '(' → logprob: -6.751171588897705
    3. ' (' → logprob: -14.626171112060547
    4. 'ans' → logprob: -15.251171112060547
    5. '(answer' → logprob: -15.251171112060547
    6. '(
' → logprob: -15.626171112060547
    7. '()' → logprob: -16.251171112060547
    8. '(abs' → logprob: -17.001171112060547
    9. '(an' → logprob: -17.626171112060547
    10. '((' → logprob: -17.626171112060547

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -15.375
    3. ' )' → logprob: -16.625
    4. ')`' → logprob: -17.375
    5. ')
' → logprob: -17.625
    6. '')' → logprob: -18.875
    7. ')**' → logprob: -19.125
    8. ')#' → logprob: -19.375
    9. ')}' → logprob: -19.5
    10. '(' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 136
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 105
Précision stricte (1ère position): 31.62%
Précision adaptée (1ère position): 31.62%
Précision (top 10): 77.21%
================================================================================
