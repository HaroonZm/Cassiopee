================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

N = int(sys.stdin.readline())
S = list(map(int, sys.stdin.readline().split()))
N = N - 1
ans = 0

for d in range(1, N + 1):
    a = N - d
    res = 0
    p = N
    q = 0
    while a >= d:
        if a <= N - a and N % d == 0:
            break
        p = p - d
        q = q + d
        res = res + S[p] + S[q]
        if res > ans:
            ans = res
        a = a - d

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06772785633802414
    2. '\n' → logprob: -3.44272780418396
    3. 'import' → logprob: -3.81772780418396
    4. '<|end|>' → logprob: -5.817728042602539
    5. '\' → logprob: -6.317728042602539
    6. 'newline' → logprob: -6.692728042602539
    7. ',' → logprob: -6.942728042602539
    8. '' → logprob: -7.442728042602539
    9. '
' → logprob: -7.692728042602539
    10. '<|end|>' → logprob: -7.692728042602539

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3462890386581421
    2. ' =' → logprob: -1.471289038658142
    3. ' ' → logprob: -2.8462891578674316
    4. ',' → logprob: -6.471289157867432
    5. '.' → logprob: -6.971289157867432
    6. '_' → logprob: -7.096289157867432
    7. '  ' → logprob: -7.346289157867432
    8. ')' → logprob: -8.471288681030273
    9. '   ' → logprob: -8.721288681030273
    10. 'u' → logprob: -9.471288681030273

Token 5: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0865667387843132
    2. ' ' → logprob: -2.586566686630249
    3. 'int' → logprob: -4.961566925048828
    4. '10' → logprob: -7.836566925048828
    5. ' input' → logprob: -8.961566925048828
    6. '20' → logprob: -10.336566925048828
    7. '5' → logprob: -10.461566925048828
    8. '32' → logprob: -11.711566925048828
    9. ' len' → logprob: -11.836566925048828
    10. '=int' → logprob: -11.961566925048828

Token 6: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.492120155598968e-05
    2. '```' → logprob: -11.000064849853516
    3. '('' → logprob: -11.625064849853516
    4. ' (' → logprob: -11.750064849853516
    5. '`' → logprob: -11.875064849853516
    6. '(sys' → logprob: -12.250064849853516
    7. '("("' → logprob: -12.750064849853516
    8. ''' → logprob: -12.750064849853516
    9. '(**' → logprob: -13.000064849853516
    10. '(
' → logprob: -13.000064849853516

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00036084887688048184
    2. '.)' → logprob: -8.750360488891602
    3. '.readline' → logprob: -9.750360488891602
    4. '.argv' → logprob: -9.875360488891602
    5. '.stdin' → logprob: -10.125360488891602
    6. '.")' → logprob: -10.625360488891602
    7. '.')' → logprob: -11.375360488891602
    8. ')' → logprob: -12.375360488891602
    9. '.read' → logprob: -13.250360488891602
    10. '.​' → logprob: -13.750360488891602

Token 8: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.16480234265327454
    2. '.' → logprob: -1.9148023128509521
    3. '.read' → logprob: -5.414802551269531
    4. '.)' → logprob: -9.289802551269531
    5. ')' → logprob: -11.414802551269531
    6. '.readlines' → logprob: -12.539802551269531
    7. '.Read' → logprob: -13.039802551269531
    8. ').' → logprob: -13.414802551269531
    9. '.")' → logprob: -13.539802551269531
    10. ' .' → logprob: -13.664802551269531

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.18315237760543823
    2. '()' → logprob: -1.808152437210083
    3. ')' → logprob: -6.058152198791504
    4. '().' → logprob: -7.183152198791504
    5. '(' → logprob: -9.308152198791504
    6. '('' → logprob: -9.933152198791504
    7. '()[' → logprob: -9.933152198791504
    8. ' ())' → logprob: -9.933152198791504
    9. '()))' → logprob: -10.183152198791504
    10. '()]' → logprob: -12.933152198791504

Token 10: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3931220471858978
    2. '\n' → logprob: -1.2681220769882202
    3. ' for' → logprob: -3.6431219577789307
    4. '\' → logprob: -5.39312219619751
    5. '```' → logprob: -6.39312219619751
    6. '
' → logprob: -6.64312219619751
    7. 'a' → logprob: -6.76812219619751
    8. '\r' → logprob: -7.01812219619751
    9. 's' → logprob: -7.14312219619751
    10. ' ' → logprob: -7.14312219619751

Token 11: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2807958126068115
    2. ' =' → logprob: -1.9057958126068115
    3. '[' → logprob: -3.0307958126068115
    4. '=' → logprob: -3.1557958126068115
    5. '_' → logprob: -6.655796051025391
    6. ' ' → logprob: -7.655796051025391
    7. ')' → logprob: -7.780796051025391
    8. 's' → logprob: -7.780796051025391
    9. '[:]' → logprob: -7.780796051025391
    10. 'um' → logprob: -8.28079605102539

Token 12: ' list' (ID: 1562)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10630179196596146
    2. 'sys' → logprob: -3.106301784515381
    3. ' input' → logprob: -3.231301784515381
    4. 'input' → logprob: -4.231301784515381
    5. ' ' → logprob: -6.606301784515381
    6. ''' → logprob: -8.981302261352539
    7. '"' → logprob: -9.106302261352539
    8. ''s' → logprob: -9.231302261352539
    9. '(sys' → logprob: -9.606302261352539
    10. '=sys' → logprob: -9.606302261352539

Token 13: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000407316314522177
    2. '()' → logprob: -9.250407218933105
    3. '(s' → logprob: -9.750407218933105
    4. '(S' → logprob: -9.750407218933105
    5. '(sys' → logprob: -9.750407218933105
    6. '(range' → logprob: -10.500407218933105
    7. '(str' → logprob: -10.750407218933105
    8. '(input' → logprob: -10.875407218933105
    9. '("("' → logprob: -11.250407218933105
    10. '(int' → logprob: -11.875407218933105

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.11030977219343185
    2. '(' → logprob: -2.8603098392486572
    3. '(str' → logprob: -3.1103098392486572
    4. '(lambda' → logprob: -6.110309600830078
    5. 'int' → logprob: -9.110309600830078
    6. 'str' → logprob: -9.235309600830078
    7. '(
' → logprob: -9.735309600830078
    8. '```' → logprob: -11.110309600830078
    9. '[int' → logprob: -11.235309600830078
    10. '<int' → logprob: -11.235309600830078

Token 15: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.005411503836512566
    2. '(' → logprob: -5.255411624908447
    3. ')' → logprob: -10.005411148071289
    4. '=sys' → logprob: -10.130411148071289
    5. 'sys' → logprob: -10.505411148071289
    6. '(system' → logprob: -11.255411148071289
    7. ' (' → logprob: -11.630411148071289
    8. '(Sys' → logprob: -12.005411148071289
    9. '(
' → logprob: -12.130411148071289
    10. '(input' → logprob: -12.130411148071289

Token 16: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008157902397215366
    2. ' sys' → logprob: -4.883157730102539
    3. '(sys' → logprob: -7.633157730102539
    4. '=sys' → logprob: -10.383157730102539
    5. 'input' → logprob: -10.883157730102539
    6. '	sys' → logprob: -11.508157730102539
    7. ')' → logprob: -12.133157730102539
    8. '_sys' → logprob: -14.758157730102539
    9. 'str' → logprob: -15.133157730102539
    10. '/sys' → logprob: -15.258157730102539

Token 17: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0019457722082734108
    2. '.' → logprob: -6.501945972442627
    3. '.stdout' → logprob: -8.001945495605469
    4. '.readline' → logprob: -9.376945495605469
    5. 'stdin' → logprob: -11.751945495605469
    6. '.argv' → logprob: -12.126945495605469
    7. '.std' → logprob: -12.501945495605469
    8. '.stderr' → logprob: -12.751945495605469
    9. '(stdin' → logprob: -13.376945495605469
    10. '.st' → logprob: -13.876945495605469

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.171581091824919e-05
    2. '.read' → logprob: -10.37507152557373
    3. '.stdin' → logprob: -10.50007152557373
    4. '.readlines' → logprob: -11.75007152557373
    5. '.' → logprob: -12.87507152557373
    6. '().' → logprob: -13.25007152557373
    7. ').' → logprob: -15.37507152557373
    8. '.stdout' → logprob: -15.62507152557373
    9. ' readline' → logprob: -16.625072479248047
    10. '.reader' → logprob: -17.250072479248047

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.598351240158081
    2. '()))' → logprob: -1.348351240158081
    3. '()' → logprob: -1.973351240158081
    4. '())' → logprob: -2.973351240158081
    5. '()));' → logprob: -8.34835147857666
    6. '())))' → logprob: -9.34835147857666
    7. ')' → logprob: -10.47335147857666
    8. '(' → logprob: -10.97335147857666
    9. '());' → logprob: -11.09835147857666
    10. '))' → logprob: -11.34835147857666

Token 20: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.18008747696876526
    2. 'split' → logprob: -1.9300874471664429
    3. 'rstrip' → logprob: -3.9300875663757324
    4. 'read' → logprob: -10.930087089538574
    5. ' strip' → logprob: -12.055087089538574
    6. ' split' → logprob: -13.930087089538574
    7. ')' → logprob: -14.680087089538574
    8. '(split' → logprob: -16.18008804321289
    9. 'decode' → logprob: -16.30508804321289
    10. '(strip' → logprob: -17.30508804321289

Token 21: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07896711677312851
    2. '))' → logprob: -2.8289670944213867
    3. '())' → logprob: -4.328967094421387
    4. '()' → logprob: -5.828967094421387
    5. ')' → logprob: -7.828967094421387
    6. '(' → logprob: -8.078967094421387
    7. '()))
' → logprob: -11.328967094421387
    8. '()));' → logprob: -12.578967094421387
    9. '())))' → logprob: -13.203967094421387
    10. '()))

' → logprob: -13.203967094421387

Token 22: 'N' (ID: 45)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3414407968521118
    2. 'for' → logprob: -2.3414406776428223
    3. 's' → logprob: -3.0914406776428223
    4. 'result' → logprob: -3.4664406776428223
    5. 'count' → logprob: -4.216440677642822
    6. 'sum' → logprob: -4.216440677642822
    7. 'dp' → logprob: -4.216440677642822
    8. 'answer' → logprob: -4.466440677642822
    9. 'sorted' → logprob: -4.591440677642822
    10. 'max' → logprob: -4.716440677642822

Token 23: ' =' (ID: 314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6140403151512146
    2. '<|end|>' → logprob: -1.1140403747558594
    3. '#' → logprob: -3.4890403747558594
    4. ')' → logprob: -3.7390403747558594
    5. '```' → logprob: -3.7390403747558594
    6. '*' → logprob: -4.614040374755859
    7. '\n' → logprob: -4.614040374755859
    8. '[' → logprob: -5.114040374755859
    9. '>' → logprob: -5.364040374755859
    10. ' ' → logprob: -5.489040374755859

Token 24: ' N' (ID: 478)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.44095590710639954
    2. ' len' → logprob: -1.0659558773040771
    3. ' N' → logprob: -5.190956115722656
    4. 'N' → logprob: -6.315956115722656
    5. ' ' → logprob: -6.440956115722656
    6. 'int' → logprob: -6.690956115722656
    7. ' int' → logprob: -7.690956115722656
    8. '0' → logprob: -7.940956115722656
    9. ' S' → logprob: -8.190956115722656
    10. '10' → logprob: -8.690956115722656

Token 25: ' -' (ID: 533)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7159196734428406
    2. '-' → logprob: -0.8409196734428406
    3. '<|end|>' → logprob: -3.4659197330474854
    4. '*' → logprob: -4.215919494628906
    5. ' ' → logprob: -4.465919494628906
    6. '+' → logprob: -4.465919494628906
    7. ' %' → logprob: -5.965919494628906
    8. '#' → logprob: -6.340919494628906
    9. ' -' → logprob: -6.340919494628906
    10. '>' → logprob: -6.465919494628906

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931501030921936
    2. ' ' → logprob: -0.6931501030921936
    3. '2' → logprob: -13.693150520324707
    4. ' S' → logprob: -14.693150520324707
    5. '0' → logprob: -15.568150520324707
    6. ' ' → logprob: -15.568150520324707
    7. ' len' → logprob: -15.693150520324707
    8. 's' → logprob: -16.06814956665039
    9. 'S' → logprob: -16.19314956665039
    10. ' one' → logprob: -16.63064956665039

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028278196696192026
    2. ' ' → logprob: -5.8778276443481445
    3. 'len' → logprob: -11.252827644348145
    4. '2' → logprob: -11.752827644348145
    5. ' len' → logprob: -14.252827644348145
    6. '0' → logprob: -15.377827644348145
    7. '3' → logprob: -15.377827644348145
    8. '4' → logprob: -15.627827644348145
    9. '10' → logprob: -15.752827644348145
    10. '   ' → logprob: -16.37782859802246

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021842287853360176
    2. '\n' → logprob: -4.8968424797058105
    3. ' for' → logprob: -5.5218424797058105
    4. '<|end|>' → logprob: -5.6468424797058105
    5. 'for' → logprob: -6.0218424797058105
    6. ' 
' → logprob: -6.1468424797058105
    7. '
' → logprob: -7.3968424797058105
    8. '  
' → logprob: -8.646842002868652
    9. '' → logprob: -8.771842002868652
    10. '\' → logprob: -9.021842002868652

Token 29: 'ans' (ID: 616)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09012620151042938
    2. '\n' → logprob: -3.0901262760162354
    3. 'for' → logprob: -4.090126037597656
    4. ' for' → logprob: -4.965126037597656
    5. 'while' → logprob: -5.465126037597656
    6. '<|end|>' → logprob: -5.840126037597656
    7. ' while' → logprob: -6.340126037597656
    8. ' 
' → logprob: -6.590126037597656
    9. '' → logprob: -6.715126037597656
    10. '\' → logprob: -6.840126037597656

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32721972465515137
    2. '=' → logprob: -1.4522197246551514
    3. ' +=' → logprob: -3.5772197246551514
    4. '[' → logprob: -4.4522199630737305
    5. ' ' → logprob: -5.8272199630737305
    6. '_' → logprob: -7.4522199630737305
    7. '+' → logprob: -7.5772199630737305
    8. '.' → logprob: -8.20221996307373
    9. '+=' → logprob: -8.20221996307373
    10. '[:]' → logprob: -8.45221996307373

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39185741543769836
    2. ' ' → logprob: -1.266857385635376
    3. ' S' → logprob: -4.641857624053955
    4. 'S' → logprob: -4.891857624053955
    5. ' []' → logprob: -4.891857624053955
    6. '[]' → logprob: -5.016857624053955
    7. ' [' → logprob: -6.141857624053955
    8. 'abs' → logprob: -6.516857624053955
    9. ' max' → logprob: -6.766857624053955
    10. 'max' → logprob: -6.766857624053955

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0564664788544178
    2. 'S' → logprob: -3.556466579437256
    3. 'abs' → logprob: -5.056466579437256
    4. '[]' → logprob: -5.556466579437256
    5. 'float' → logprob: -5.681466579437256
    6. '1' → logprob: -5.931466579437256
    7. 'max' → logprob: -5.931466579437256
    8. '[' → logprob: -6.431466579437256
    9. 'N' → logprob: -6.681466579437256
    10. '-' → logprob: -6.806466579437256

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3429234027862549
    2. ' for' → logprob: -2.217923402786255
    3. ' 
' → logprob: -2.592923402786255
    4. 'for' → logprob: -2.967923402786255
    5. ' while' → logprob: -3.467923402786255
    6. 'while' → logprob: -4.842923164367676
    7. ' ' → logprob: -5.342923164367676
    8. '<|end|>' → logprob: -5.467923164367676
    9. '\n' → logprob: -5.592923164367676
    10. '' → logprob: -6.467923164367676

Token 34: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022439889144152403
    2. 'while' → logprob: -6.127243995666504
    3. ' for' → logprob: -10.627243995666504
    4. 'if' → logprob: -10.752243995666504
    5. 'i' → logprob: -11.502243995666504
    6. ' while' → logprob: -14.502243995666504
    7. ':' → logprob: -14.627243995666504
    8. '+' → logprob: -14.627243995666504
    9. 'f' → logprob: -15.002243995666504
    10. '```' → logprob: -15.127243995666504

Token 35: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08950860053300858
    2. ' ' → logprob: -2.589508533477783
    3. ' _' → logprob: -4.839508533477783
    4. '_' → logprob: -6.339508533477783
    5. 'i' → logprob: -7.089508533477783
    6. '  ' → logprob: -10.464509010314941
    7. ' ‌' → logprob: -11.839509010314941
    8. ' x' → logprob: -12.464509010314941
    9. '_i' → logprob: -12.464509010314941
    10. ' I' → logprob: -12.589509010314941

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005701842252165079
    2. ' ' → logprob: -5.880702018737793
    3. ' i' → logprob: -6.755702018737793
    4. 'in' → logprob: -6.880702018737793
    5. 'i' → logprob: -7.880702018737793
    6. 'd' → logprob: -9.255702018737793
    7. '  ' → logprob: -9.380702018737793
    8. 'e' → logprob: -9.755702018737793
    9. ',' → logprob: -10.755702018737793
    10. ' ' → logprob: -11.630702018737793

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1555337756872177
    2. 'range' → logprob: -2.405533790588379
    3. ' S' → logprob: -3.030533790588379
    4. 'S' → logprob: -5.280533790588379
    5. ' ' → logprob: -8.530533790588379
    6. '(range' → logprob: -8.905533790588379
    7. ' xrange' → logprob: -10.780533790588379
    8. '  ' → logprob: -11.030533790588379
    9. '	range' → logprob: -11.405533790588379
    10. '[' → logprob: -11.593033790588379

Token 38: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030329227447509766
    2. '(N' → logprob: -3.5303292274475098
    3. ' (' → logprob: -7.53032922744751
    4. '(n' → logprob: -10.905328750610352
    5. '(len' → logprob: -11.280328750610352
    6. '((' → logprob: -12.530328750610352
    7. '(s' → logprob: -13.655328750610352
    8. '(S' → logprob: -13.655328750610352
    9. '(range' → logprob: -13.780328750610352
    10. '(
' → logprob: -14.280328750610352

Token 39: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16240598261356354
    2. '1' → logprob: -1.9124059677124023
    3. '2' → logprob: -7.412405967712402
    4. 'len' → logprob: -7.412405967712402
    5. '0' → logprob: -8.162405967712402
    6. '10' → logprob: -8.412405967712402
    7. '(' → logprob: -9.287405967712402
    8. ' N' → logprob: -9.662405967712402
    9. '100' → logprob: -9.662405967712402
    10. ' ' → logprob: -10.287405967712402

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012633019126951694
    2. ' ,' → logprob: -4.387632846832275
    3. ',N' → logprob: -9.012633323669434
    4. ',len' → logprob: -14.137633323669434
    5. ' ' → logprob: -14.762633323669434
    6. ',n' → logprob: -15.637633323669434
    7. ',(' → logprob: -17.512632369995117
    8. ',
' → logprob: -17.762632369995117
    9. ',d' → logprob: -17.762632369995117
    10. ',

' → logprob: -17.887632369995117

Token 41: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006937370635569096
    2. ' N' → logprob: -5.006937503814697
    3. 'len' → logprob: -8.756937026977539
    4. ' ' → logprob: -10.006937026977539
    5. ' len' → logprob: -11.631937026977539
    6. '10' → logprob: -12.381937026977539
    7. '100' → logprob: -13.256937026977539
    8. '9' → logprob: -14.631937026977539
    9. 'n' → logprob: -14.756937026977539
    10. '   ' → logprob: -14.881937026977539

Token 42: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11322273313999176
    2. ' +' → logprob: -2.23822283744812
    3. '):' → logprob: -7.863222599029541
    4. ' ' → logprob: -12.3632230758667
    5. ' ):' → logprob: -12.3632230758667
    6. ')' → logprob: -12.9882230758667
    7. ',' → logprob: -13.3632230758667
    8. '):
' → logprob: -13.8632230758667
    9. '```' → logprob: -14.6132230758667
    10. '-' → logprob: -14.9882230758667

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007413055747747421
    2. '2' → logprob: -5.382412910461426
    3. ' ' → logprob: -5.882412910461426
    4. ')' → logprob: -15.257412910461426
    5. '   ' → logprob: -16.007413864135742
    6. '3' → logprob: -16.007413864135742
    7. '```' → logprob: -16.069913864135742
    8. '  ' → logprob: -16.632413864135742
    9. '7' → logprob: -17.069913864135742
    10. '11' → logprob: -17.632413864135742

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000654654751997441
    2. '2' → logprob: -7.375654697418213
    3. ' ' → logprob: -10.500654220581055
    4. ')' → logprob: -15.625654220581055
    5. '   ' → logprob: -16.063154220581055
    6. '```' → logprob: -16.875654220581055
    7. '3' → logprob: -17.063154220581055
    8. '(' → logprob: -17.250654220581055
    9. '１' → logprob: -17.500654220581055
    10. '  ' → logprob: -17.563154220581055

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030003171414136887
    2. ':' → logprob: -3.780003070831299
    3. ')' → logprob: -5.030003070831299
    4. ' ):' → logprob: -9.030003547668457
    5. ':)' → logprob: -9.655003547668457
    6. '):
' → logprob: -12.655003547668457
    7. ' :' → logprob: -13.155003547668457
    8. ',' → logprob: -13.280003547668457
    9. ' )' → logprob: -13.655003547668457
    10. ':**' → logprob: -14.280003547668457

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40204936265945435
    2. ' ' → logprob: -1.2770493030548096
    3. ':' → logprob: -3.1520493030548096
    4. ' for' → logprob: -6.527049541473389
    5. ' if' → logprob: -6.652049541473389
    6. '  ' → logprob: -6.652049541473389
    7. '<|end|>' → logprob: -6.902049541473389
    8. ' ans' → logprob: -7.027049541473389
    9. '    ' → logprob: -7.152049541473389
    10. ' ' → logprob: -8.15204906463623

Token 47: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3362436294555664
    2. ' i' → logprob: -1.5862436294555664
    3. '   ' → logprob: -1.9612436294555664
    4. 'i' → logprob: -2.2112436294555664
    5. 'for' → logprob: -2.2112436294555664
    6. ' ans' → logprob: -3.9612436294555664
    7. ' if' → logprob: -4.086243629455566
    8. 'ans' → logprob: -4.211243629455566
    9. 'count' → logprob: -4.211243629455566
    10. 'cnt' → logprob: -4.211243629455566

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29078689217567444
    2. 'ns' → logprob: -1.540786862373352
    3. '=' → logprob: -3.4157869815826416
    4. 'll' → logprob: -6.1657867431640625
    5. 'cc' → logprob: -7.4157867431640625
    6. ' +=' → logprob: -8.290786743164062
    7. '   ' → logprob: -8.290786743164062
    8. 'ss' → logprob: -8.415786743164062
    9. 'rr' → logprob: -8.415786743164062
    10. ' ' → logprob: -8.665786743164062

Token 49: ' N' (ID: 478)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2857474386692047
    2. '0' → logprob: -1.5357474088668823
    3. '[S' → logprob: -4.910747528076172
    4. 'sum' → logprob: -5.035747528076172
    5. 'N' → logprob: -5.660747528076172
    6. 'abs' → logprob: -5.785747528076172
    7. '[' → logprob: -6.035747528076172
    8. '1' → logprob: -6.160747528076172
    9. '(S' → logprob: -6.410747528076172
    10. 'd' → logprob: -6.660747528076172

Token 50: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5344863533973694
    2. '-' → logprob: -0.9094863533973694
    3. '+' → logprob: -4.534486293792725
    4. '-d' → logprob: -8.784486770629883
    5. ' +' → logprob: -8.784486770629883
    6. 'd' → logprob: -9.659486770629883
    7. ' ' → logprob: -9.909486770629883
    8. '-n' → logprob: -10.284486770629883
    9. '-j' → logprob: -10.659486770629883
    10. '-b' → logprob: -10.909486770629883

Token 51: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0024427161552011967
    2. ' d' → logprob: -6.127442836761475
    3. '2' → logprob: -8.502442359924316
    4. ' ' → logprob: -10.752442359924316
    5. '1' → logprob: -11.502442359924316
    6. 'a' → logprob: -12.002442359924316
    7. '3' → logprob: -12.877442359924316
    8. '(' → logprob: -13.002442359924316
    9. '(d' → logprob: -13.814942359924316
    10. '4' → logprob: -13.877442359924316

Token 52: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33273938298225403
    2. '
' → logprob: -2.7077393531799316
    3. ' ' → logprob: -2.8327393531799316
    4. ' +' → logprob: -2.8327393531799316
    5. '-' → logprob: -3.7077393531799316
    6. '<|end|>' → logprob: -4.207739353179932
    7. ' -' → logprob: -4.707739353179932
    8. ' for' → logprob: -4.707739353179932
    9. ' 
' → logprob: -4.832739353179932
    10. 'for' → logprob: -4.832739353179932

Token 53: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29892638325691223
    2. '   ' → logprob: -3.04892635345459
    3. ' +' → logprob: -3.17392635345459
    4. ' ' → logprob: -3.29892635345459
    5. ' for' → logprob: -3.29892635345459
    6. 'for' → logprob: -3.42392635345459
    7. '-' → logprob: -4.04892635345459
    8. 's' → logprob: -5.04892635345459
    9. '
' → logprob: -5.17392635345459
    10. '```' → logprob: -5.79892635345459

Token 54: ' res' (ID: 694)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4554184675216675
    2. ' ' → logprob: -1.7054184675216675
    3. 'for' → logprob: -1.7054184675216675
    4. 's' → logprob: -2.080418586730957
    5. ' for' → logprob: -2.580418586730957
    6. ')' → logprob: -3.330418586730957
    7. '<|end|>' → logprob: -3.330418586730957
    8. 'b' → logprob: -3.580418586730957
    9. '-' → logprob: -3.955418586730957
    10. '
' → logprob: -4.080418586730957

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3959653973579407
    2. 'ult' → logprob: -1.395965337753296
    3. '=' → logprob: -2.770965337753296
    4. ' +=' → logprob: -4.395965576171875
    5. 't' → logprob: -6.020965576171875
    6. 'ults' → logprob: -7.145965576171875
    7. '+=' → logprob: -7.895965576171875
    8. 'u' → logprob: -8.520965576171875
    9. 's' → logprob: -8.770965576171875
    10. 'ultat' → logprob: -9.395965576171875

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1506991386413574
    2. 'S' → logprob: -1.1506991386413574
    3. 'max' → logprob: -2.2756991386413574
    4. 'abs' → logprob: -2.6506991386413574
    5. 'min' → logprob: -3.0256991386413574
    6. 'a' → logprob: -3.1506991386413574
    7. ' S' → logprob: -3.6506991386413574
    8. ' max' → logprob: -4.150699138641357
    9. ' ' → logprob: -4.400699138641357
    10. 'ans' → logprob: -4.400699138641357

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6399322152137756
    2. 'S' → logprob: -1.6399321556091309
    3. 'abs' → logprob: -2.264932155609131
    4. 'max' → logprob: -2.639932155609131
    5. 'a' → logprob: -3.514932155609131
    6. 'ans' → logprob: -3.639932155609131
    7. 'sum' → logprob: -3.889932155609131
    8. 'min' → logprob: -5.014932155609131
    9. '[' → logprob: -5.889932155609131
    10. '[a' → logprob: -6.014932155609131

Token 58: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01280674897134304
    2. ' for' → logprob: -5.2628068923950195
    3. 'for' → logprob: -5.5128068923950195
    4. '	for' → logprob: -6.5128068923950195
    5. ' ' → logprob: -7.3878068923950195
    6. '
' → logprob: -7.8878068923950195
    7. '<|end|>' → logprob: -8.01280689239502
    8. '    
' → logprob: -8.63780689239502
    9. '  ' → logprob: -8.88780689239502
    10. '    ' → logprob: -9.26280689239502

Token 60: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2407648265361786
    2. '   ' → logprob: -1.615764856338501
    3. ' for' → logprob: -4.240764617919922
    4. '	for' → logprob: -7.490764617919922
    5. ' ' → logprob: -8.990764617919922
    6. '  ' → logprob: -10.115764617919922
    7. 'while' → logprob: -10.490764617919922
    8. 'i' → logprob: -10.740764617919922
    9. '    ' → logprob: -10.865764617919922
    10. 'b' → logprob: -11.365764617919922

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4590008854866028
    2. '=' → logprob: -1.834000825881958
    3. 'r' → logprob: -1.834000825881958
    4. 'refix' → logprob: -4.084001064300537
    5. 'for' → logprob: -5.584001064300537
    6. '+=' → logprob: -5.709001064300537
    7. 'rev' → logprob: -5.709001064300537
    8. 'a' → logprob: -5.959001064300537
    9. ' +=' → logprob: -6.084001064300537
    10. 'range' → logprob: -6.334001064300537

Token 62: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03854057192802429
    2. 'a' → logprob: -4.413540363311768
    3. '1' → logprob: -4.538540363311768
    4. 'S' → logprob: -4.788540363311768
    5. 'N' → logprob: -5.913540363311768
    6. ' ' → logprob: -7.038540363311768
    7. 'd' → logprob: -7.038540363311768
    8. '[S' → logprob: -7.538540363311768
    9. '[a' → logprob: -7.538540363311768
    10. '[' → logprob: -8.038540840148926

Token 63: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5298416018486023
    2. ' -' → logprob: -0.9048416018486023
    3. ' ' → logprob: -5.404841423034668
    4. '   ' → logprob: -6.529841423034668
    5. '  ' → logprob: -9.154841423034668
    6. '<|end|>' → logprob: -9.154841423034668
    7. '    ' → logprob: -9.529841423034668
    8. ' -
' → logprob: -9.779841423034668
    9. 'd' → logprob: -10.029841423034668
    10. '-
' → logprob: -10.029841423034668

Token 64: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10101719945669174
    2. ' -' → logprob: -2.4760172367095947
    3. '   ' → logprob: -4.726016998291016
    4. ' ' → logprob: -6.851016998291016
    5. 'for' → logprob: -7.726016998291016
    6. 'while' → logprob: -7.726016998291016
    7. '-a' → logprob: -8.601016998291016
    8. ' for' → logprob: -8.976016998291016
    9. '  ' → logprob: -9.101016998291016
    10. 'p' → logprob: -9.226016998291016

Token 65: ' q' (ID: 2335)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06271272152662277
    2. ' -' → logprob: -3.3127126693725586
    3. 'while' → logprob: -4.312712669372559
    4. ' ' → logprob: -5.312712669372559
    5. ' while' → logprob: -5.937712669372559
    6. '   ' → logprob: -7.687712669372559
    7. '<|end|>' → logprob: -7.687712669372559
    8. ')' → logprob: -7.937712669372559
    9. '	while' → logprob: -7.937712669372559
    10. 'for' → logprob: -8.062712669372559

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4859932065010071
    2. '=' → logprob: -1.3609931468963623
    3. ' -' → logprob: -2.3609931468963623
    4. '-' → logprob: -3.4859931468963623
    5. '-=' → logprob: -6.610993385314941
    6. ' -=' → logprob: -6.735993385314941
    7. ' ' → logprob: -7.110993385314941
    8. '   ' → logprob: -9.235993385314941
    9. ',' → logprob: -10.860993385314941
    10. '  ' → logprob: -10.985993385314941

Token 67: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2475818395614624
    2. 'p' → logprob: -1.8725818395614624
    3. 'a' → logprob: -2.872581958770752
    4. '0' → logprob: -5.497581958770752
    5. ' N' → logprob: -5.747581958770752
    6. ' p' → logprob: -6.872581958770752
    7. ' a' → logprob: -8.372581481933594
    8. 'd' → logprob: -8.372581481933594
    9. ' ' → logprob: -9.247581481933594
    10. 'n' → logprob: -10.372581481933594

Token 68: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3082418739795685
    2. 'p' → logprob: -1.558241844177246
    3. 'a' → logprob: -2.933241844177246
    4. '0' → logprob: -6.933241844177246
    5. 'd' → logprob: -8.183241844177246
    6. ' N' → logprob: -9.058241844177246
    7. ' p' → logprob: -9.808241844177246
    8. 'ans' → logprob: -11.183241844177246
    9. 'n' → logprob: -11.433241844177246
    10. ' ' → logprob: -11.558241844177246

Token 69: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' while' (ID: 2049)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3873608410358429
    2. '   ' → logprob: -2.5123608112335205
    3. 'for' → logprob: -2.8873608112335205
    4. 'while' (adapté à ' while') → logprob: -2.8873608112335205
    5. ':' → logprob: -3.5123608112335205
    6. '<|end|>' → logprob: -3.6373608112335205
    7. ' ' → logprob: -3.8873608112335205
    8. ' while' → logprob: -3.8873608112335205
    9. ' for' → logprob: -4.6373610496521
    10. '-' → logprob: -5.6373610496521

Token 72: ' a' (ID: 261)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3043053448200226
    2. 'p' → logprob: -1.9293053150177002
    3. ' q' → logprob: -2.4293053150177
    4. 'q' → logprob: -3.6793053150177
    5. ' ' → logprob: -6.304305553436279
    6. ' True' → logprob: -7.679305553436279
    7. ' a' → logprob: -8.179305076599121
    8. '(p' → logprob: -8.429305076599121
    9. 'True' → logprob: -8.554305076599121
    10. '   ' → logprob: -8.929305076599121

Token 73: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.13166211545467377
    2. '>=' → logprob: -2.506662130355835
    3. ' >' → logprob: -3.756662130355835
    4. '>' → logprob: -4.006661891937256
    5. ' ' → logprob: -9.131662368774414
    6. '+' → logprob: -10.256662368774414
    7. '-' → logprob: -10.881662368774414
    8. ' <' → logprob: -10.881662368774414
    9. '[' → logprob: -11.506662368774414
    10. 's' → logprob: -11.631662368774414

Token 74: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023384306579828262
    2. ' ' → logprob: -3.7733843326568604
    3. '1' → logprob: -9.773384094238281
    4. '   ' → logprob: -10.523384094238281
    5. 'p' → logprob: -11.148384094238281
    6. 'q' → logprob: -11.148384094238281
    7. 'd' → logprob: -11.273384094238281
    8. '  ' → logprob: -12.273384094238281
    9. ' p' → logprob: -13.273384094238281
    10. ' q' → logprob: -13.523384094238281

Token 75: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6480000019073486
    2. ':' → logprob: -0.7730000019073486
    3. 'and' → logprob: -4.2729997634887695
    4. ':
' → logprob: -7.3979997634887695
    5. ' :' → logprob: -7.7729997634887695
    6. ' or' → logprob: -8.64799976348877
    7. '   ' → logprob: -9.89799976348877
    8. ' ' → logprob: -11.02299976348877
    9. '+' → logprob: -11.14799976348877
    10. '	and' → logprob: -11.77299976348877

Token 76: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' if' (ID: 538)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.266674280166626
    2. 'q' → logprob: -1.641674280166626
    3. 'res' → logprob: -2.266674280166626
    4. ' if' → logprob: -2.391674280166626
    5. ' p' → logprob: -2.641674280166626
    6. '<|end|>' → logprob: -2.766674280166626
    7. ' res' → logprob: -2.766674280166626
    8. ' ' → logprob: -3.516674280166626
    9. '       ' → logprob: -3.641674280166626
    10. ' q' → logprob: -3.891674280166626

Token 78: ' a' (ID: 261)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.587570309638977
    2. ' S' → logprob: -0.837570309638977
    3. ' p' → logprob: -5.3375701904296875
    4. 'p' → logprob: -5.9625701904296875
    5. ' ' → logprob: -7.2125701904296875
    6. 'q' → logprob: -7.4625701904296875
    7. 'a' → logprob: -7.7125701904296875
    8. '(S' → logprob: -7.9625701904296875
    9. 'abs' → logprob: -8.087570190429688
    10. ' q' → logprob: -8.087570190429688

Token 79: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.40565988421440125
    2. '>=' → logprob: -1.7806599140167236
    3. '%' → logprob: -2.9056599140167236
    4. ' ==' → logprob: -3.7806599140167236
    5. ' >' → logprob: -4.0306596755981445
    6. ' %' → logprob: -4.1556596755981445
    7. ' <' → logprob: -4.6556596755981445
    8. ' -' → logprob: -4.6556596755981445
    9. '==' → logprob: -4.6556596755981445
    10. '>' → logprob: -4.7806596755981445

Token 80: ' N' (ID: 478)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5017039179801941
    2. 'q' → logprob: -1.1267039775848389
    3. 'N' → logprob: -3.126703977584839
    4. ' p' → logprob: -4.25170373916626
    5. ' q' → logprob: -5.12670373916626
    6. '0' → logprob: -5.87670373916626
    7. ' ' → logprob: -6.25170373916626
    8. ' N' → logprob: -7.50170373916626
    9. 'S' → logprob: -8.001704216003418
    10. 'd' → logprob: -8.876704216003418

Token 81: ' -' (ID: 533)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.40451571345329285
    2. ':' → logprob: -1.7795157432556152
    3. 'and' → logprob: -2.0295157432556152
    4. '-' → logprob: -4.404515743255615
    5. ' -' → logprob: -4.904515743255615
    6. ':
' → logprob: -5.654515743255615
    7. '<|end|>' → logprob: -5.904515743255615
    8. ' ' → logprob: -6.154515743255615
    9. '   ' → logprob: -6.904515743255615
    10. '       ' → logprob: -7.279515743255615

Token 82: ' a' (ID: 261)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.039676863700151443
    2. '1' → logprob: -4.164676666259766
    3. 'p' → logprob: -4.289676666259766
    4. 'q' → logprob: -5.164676666259766
    5. '2' → logprob: -6.164676666259766
    6. ' d' → logprob: -7.289676666259766
    7. 'a' → logprob: -7.789676666259766
    8. ' ' → logprob: -8.164676666259766
    9. 'N' → logprob: -8.914676666259766
    10. '   ' → logprob: -9.539676666259766

Token 83: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34806010127067566
    2. ' and' → logprob: -1.598060131072998
    3. ' :' → logprob: -2.598060131072998
    4. 'and' → logprob: -5.098060131072998
    5. ' ' → logprob: -5.348060131072998
    6. ' or' → logprob: -6.848060131072998
    7. ' +' → logprob: -6.848060131072998
    8. '+' → logprob: -7.098060131072998
    9. ':
' → logprob: -7.098060131072998
    10. '   ' → logprob: -7.848060131072998

Token 84: ' N' (ID: 478)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.5883612036705017
    2. 'S' → logprob: -1.7133612632751465
    3. ' p' → logprob: -2.5883612632751465
    4. ' a' → logprob: -2.7133612632751465
    5. 'a' → logprob: -3.4633612632751465
    6. ' q' → logprob: -3.4633612632751465
    7. 'q' → logprob: -4.7133612632751465
    8. 'p' → logprob: -4.7133612632751465
    9. ' d' → logprob: -5.3383612632751465
    10. ' ' → logprob: -5.3383612632751465

Token 85: ' %' (ID: 1851)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2723044753074646
    2. '-' → logprob: -1.7723045349121094
    3. '+' → logprob: -3.0223045349121094
    4. ' +' → logprob: -5.272304534912109
    5. ' >=' → logprob: -5.772304534912109
    6. '>=' → logprob: -5.897304534912109
    7. ' ' → logprob: -6.772304534912109
    8. '>' → logprob: -6.772304534912109
    9. '-a' → logprob: -6.897304534912109
    10. ' >' → logprob: -7.272304534912109

Token 86: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.531823456287384
    2. ' d' → logprob: -1.0318233966827393
    3. 'a' → logprob: -3.2818233966827393
    4. ' a' → logprob: -4.156823635101318
    5. ' ' → logprob: -6.406823635101318
    6. ' p' → logprob: -8.03182315826416
    7. '2' → logprob: -8.65682315826416
    8. 'p' → logprob: -8.65682315826416
    9. ' (' → logprob: -8.65682315826416
    10. ' q' → logprob: -8.78182315826416

Token 87: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23916508257389069
    2. '==' → logprob: -1.6141650676727295
    3. ' !=' → logprob: -4.489165306091309
    4. '!=' → logprob: -6.739165306091309
    5. ':' → logprob: -7.614165306091309
    6. ' ' → logprob: -7.739165306091309
    7. ' and' → logprob: -9.489165306091309
    8. ' :' → logprob: -9.489165306091309
    9. '=' → logprob: -10.364165306091309
    10. '>' → logprob: -10.739165306091309

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25194624066352844
    2. ' ' → logprob: -1.501946210861206
    3. '1' → logprob: -11.751946449279785
    4. 'a' → logprob: -13.439446449279785
    5. ' a' → logprob: -13.814446449279785
    6. ' q' → logprob: -14.064446449279785
    7. 'q' → logprob: -14.251946449279785
    8. '  ' → logprob: -14.439446449279785
    9. 'd' → logprob: -14.501946449279785
    10. '=' → logprob: -14.626946449279785

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005938159301877022
    2. ' ' → logprob: -5.1309380531311035
    3. 'a' → logprob: -12.380938529968262
    4. '1' → logprob: -13.255938529968262
    5. 'p' → logprob: -14.193438529968262
    6. '  ' → logprob: -14.255938529968262
    7. 'q' → logprob: -14.568438529968262
    8. 'd' → logprob: -15.318438529968262
    9. '   ' → logprob: -15.630938529968262
    10. ' a' → logprob: -15.880938529968262

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020892347674816847
    2. ' and' → logprob: -6.377089023590088
    3. ':
' → logprob: -9.127089500427246
    4. 'and' → logprob: -9.502089500427246
    5. '):' → logprob: -9.502089500427246
    6. ' :' → logprob: -9.877089500427246
    7. '       ' → logprob: -10.877089500427246
    8. ')' → logprob: -11.252089500427246
    9. ' or' → logprob: -11.627089500427246
    10. ',' → logprob: -11.627089500427246

Token 91: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5348020195960999
    2. '<|end|>' → logprob: -1.784801959991455
    3. '       ' → logprob: -2.159801959991455
    4. ':' → logprob: -2.534801959991455
    5. ' ' → logprob: -4.159801959991455
    6. ')' → logprob: -5.034801959991455
    7. '               ' → logprob: -5.159801959991455
    8. '<|end|>' → logprob: -5.534801959991455
    9. ' (' → logprob: -5.909801959991455
    10. ' :' → logprob: -6.034801959991455

Token 92: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -1.0041035413742065
    2. 'res' → logprob: -1.5041035413742065
    3. ' break' → logprob: -2.129103660583496
    4. ' ans' → logprob: -2.754103660583496
    5. 'p' → logprob: -3.254103660583496
    6. '           ' → logprob: -3.254103660583496
    7. ' res' → logprob: -3.754103660583496
    8. 'q' → logprob: -3.879103660583496
    9. '               ' → logprob: -4.004103660583496
    10. ' p' → logprob: -4.504103660583496

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5009371638298035
    2. '       ' → logprob: -1.5009372234344482
    3. '<|end|>' → logprob: -2.1259372234344482
    4. '\n' → logprob: -4.125936985015869
    5. '        
' → logprob: -4.875936985015869
    6. ' 
' → logprob: -5.500936985015869
    7. '   ' → logprob: -5.625936985015869
    8. ' ' → logprob: -5.750936985015869
    9. '        ' → logprob: -6.125936985015869
    10. '    
' → logprob: -6.375936985015869

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8214672803878784
    2. '<|end|>' → logprob: -0.8214672803878784
    3. '
' → logprob: -2.196467399597168
    4. '        
' → logprob: -6.196467399597168
    5. '<|end|>' → logprob: -6.571467399597168
    6. '   ' → logprob: -6.821467399597168
    7. ' ' → logprob: -7.321467399597168
    8. '\n' → logprob: -7.446467399597168
    9. ' 
' → logprob: -7.696467399597168
    10. '        ' → logprob: -7.821467399597168

Token 95: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39589038491249084
    2. ' if' → logprob: -1.8958903551101685
    3. 'if' → logprob: -2.395890474319458
    4. '+' → logprob: -4.395890235900879
    5. '   ' → logprob: -4.395890235900879
    6. '        ' → logprob: -4.770890235900879
    7. ' res' → logprob: -4.895890235900879
    8. 'res' → logprob: -5.020890235900879
    9. '           ' → logprob: -5.270890235900879
    10. 'q' → logprob: -5.270890235900879

Token 96: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5989350080490112
    2. '-=' → logprob: -1.3489350080490112
    3. '=' → logprob: -2.223935127258301
    4. ' =' → logprob: -3.098935127258301
    5. '-' → logprob: -3.848935127258301
    6. '+=' → logprob: -5.098935127258301
    7. ',' → logprob: -5.848935127258301
    8. ' +=' → logprob: -5.848935127258301
    9. ' -' → logprob: -6.098935127258301
    10. ' ' → logprob: -6.598935127258301

Token 97: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5684736371040344
    2. ' a' → logprob: -1.0684735774993896
    3. ' p' → logprob: -4.193473815917969
    4. 'S' → logprob: -4.318473815917969
    5. 'p' → logprob: -4.443473815917969
    6. ' min' → logprob: -4.693473815917969
    7. ' max' → logprob: -4.818473815917969
    8. ' S' → logprob: -4.943473815917969
    9. 'q' → logprob: -5.568473815917969
    10. 'min' → logprob: -5.693473815917969

Token 98: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.44202885031700134
    2. '-' → logprob: -1.0670288801193237
    3. '-d' → logprob: -4.567028999328613
    4. '-a' → logprob: -6.692028999328613
    5. '-q' → logprob: -7.817028999328613
    6. ' +' → logprob: -7.942028999328613
    7. '+' → logprob: -8.067028999328613
    8. ' ' → logprob: -8.692028999328613
    9. 'd' → logprob: -9.192028999328613
    10. '+d' → logprob: -9.817028999328613

Token 99: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.43566033244132996
    2. '1' → logprob: -1.1856603622436523
    3. ' d' → logprob: -3.4356603622436523
    4. ' ' → logprob: -4.560660362243652
    5. '2' → logprob: -6.185660362243652
    6. 'q' → logprob: -6.810660362243652
    7. 'a' → logprob: -7.060660362243652
    8. 'p' → logprob: -7.685660362243652
    9. ' q' → logprob: -8.685660362243652
    10. ' p' → logprob: -8.810660362243652

Token 100: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.08613503724336624
    2. ' q' → logprob: -3.211135149002075
    3. 'res' → logprob: -3.711135149002075
    4. ' res' → logprob: -4.836134910583496
    5. '1' → logprob: -5.461134910583496
    6. 'p' → logprob: -6.586134910583496
    7. ' ' → logprob: -6.961134910583496
    8. 'a' → logprob: -7.086134910583496
    9. '2' → logprob: -7.461134910583496
    10. 's' → logprob: -7.711134910583496

Token 103: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.15444503724575043
    2. '+=' → logprob: -2.779444932937622
    3. ' =' → logprob: -2.779444932937622
    4. '=' → logprob: -4.154445171356201
    5. '+' → logprob: -5.904445171356201
    6. ' +' → logprob: -7.654445171356201
    7. '   ' → logprob: -10.529444694519043
    8. ' ' → logprob: -10.904444694519043
    9. '<|end|>' → logprob: -11.904444694519043
    10. '    ' → logprob: -12.279444694519043

Token 104: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.27470430731773376
    2. 'p' → logprob: -2.3997042179107666
    3. ' q' → logprob: -2.5247042179107666
    4. '1' → logprob: -3.3997042179107666
    5. ' p' → logprob: -4.149704456329346
    6. ' ' → logprob: -4.899704456329346
    7. '2' → logprob: -5.899704456329346
    8. 'd' → logprob: -6.024704456329346
    9. '+' → logprob: -6.274704456329346
    10. 'S' → logprob: -6.649704456329346

Token 105: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012526008300483227
    2. ' +' → logprob: -4.387526035308838
    3. '<|end|>' → logprob: -12.26252555847168
    4. '+=' → logprob: -12.88752555847168
    5. '+
' → logprob: -13.01252555847168
    6. '+p' → logprob: -13.51252555847168
    7. ' +=' → logprob: -13.76252555847168
    8. '+d' → logprob: -14.13752555847168
    9. '+a' → logprob: -14.26252555847168
    10. '++' → logprob: -14.51252555847168

Token 106: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13028544187545776
    2. 'd' → logprob: -2.2552855014801025
    3. ' ' → logprob: -4.380285263061523
    4. '2' → logprob: -6.505285263061523
    5. ' d' → logprob: -6.880285263061523
    6. 'S' → logprob: -7.005285263061523
    7. 'a' → logprob: -7.130285263061523
    8. 'p' → logprob: -8.255285263061523
    9. '3' → logprob: -9.880285263061523
    10. '   ' → logprob: -10.380285263061523

Token 107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15259040892124176
    2. '
' → logprob: -2.65259051322937
    3. '<|end|>' → logprob: -2.77759051322937
    4. 'a' → logprob: -5.152590274810791
    5. '<|end|>' → logprob: -7.277590274810791
    6. '```' → logprob: -7.402590274810791
    7. '   ' → logprob: -7.777590274810791
    8. 'if' → logprob: -8.27759075164795
    9. '        
' → logprob: -8.52759075164795
    10. ' if' → logprob: -8.77759075164795

Token 108: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07249996811151505
    2. '<|end|>' → logprob: -3.197499990463257
    3. '       ' → logprob: -3.572499990463257
    4. '```' → logprob: -8.072500228881836
    5. '<|end|>' → logprob: -8.197500228881836
    6. '
' → logprob: -9.322500228881836
    7. 'if' → logprob: -9.697500228881836
    8. '        
' → logprob: -9.697500228881836
    9. '   ' → logprob: -10.072500228881836
    10. ' if' → logprob: -10.447500228881836

Token 109: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.3281601369380951
    2. 'if' → logprob: -1.9531601667404175
    3. 'a' → logprob: -2.078160047531128
    4. 'ans' → logprob: -5.328160285949707
    5. ' res' → logprob: -5.578160285949707
    6. ' if' → logprob: -6.328160285949707
    7. 'for' → logprob: -8.078160285949707
    8. '   ' → logprob: -8.203160285949707
    9. ' a' → logprob: -8.203160285949707
    10. 'p' → logprob: -8.328160285949707

Token 110: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.019981972873210907
    2. '+=' → logprob: -4.144981861114502
    3. ' =' → logprob: -5.644981861114502
    4. '=' → logprob: -8.01998233795166
    5. '+' → logprob: -9.76998233795166
    6. ' +' → logprob: -11.76998233795166
    7. ' ' → logprob: -12.76998233795166
    8. ' ^=' → logprob: -13.14498233795166
    9. ' |=' → logprob: -13.51998233795166
    10. '<|end|>' → logprob: -13.89498233795166

Token 111: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7989144325256348
    2. 'max' → logprob: -1.4239144325256348
    3. ' max' → logprob: -1.7989144325256348
    4. ' res' → logprob: -2.2989144325256348
    5. 'S' → logprob: -3.7989144325256348
    6. ' S' → logprob: -5.048914432525635
    7. 'p' → logprob: -5.548914432525635
    8. 'q' → logprob: -5.673914432525635
    9. ' p' → logprob: -6.298914432525635
    10. 'abs' → logprob: -6.423914432525635

Token 112: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.386933833360672
    2. ' +' → logprob: -1.1369338035583496
    3. ' |' → logprob: -11.136934280395508
    4. '+p' → logprob: -11.136934280395508
    5. '+d' → logprob: -11.386934280395508
    6. '|' → logprob: -11.636934280395508
    7. ' +=' → logprob: -12.886934280395508
    8. ' ' → logprob: -12.886934280395508
    9. '+=' → logprob: -13.261934280395508
    10. '-' → logprob: -13.761934280395508

Token 113: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05149109289050102
    2. 'abs' → logprob: -3.3014910221099854
    3. 'max' → logprob: -5.9264912605285645
    4. 'p' → logprob: -6.1764912605285645
    5. 'q' → logprob: -6.1764912605285645
    6. ' S' → logprob: -6.3014912605285645
    7. ' abs' → logprob: -6.9264912605285645
    8. '1' → logprob: -7.0514912605285645
    9. '(S' → logprob: -7.0514912605285645
    10. 'a' → logprob: -7.8014912605285645

Token 114: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.015386237762868404
    2. '[q' → logprob: -4.26538610458374
    3. 'p' → logprob: -6.89038610458374
    4. 'q' → logprob: -9.140386581420898
    5. '[' → logprob: -9.765386581420898
    6. '[a' → logprob: -10.390386581420898
    7. '[
' → logprob: -13.265386581420898
    8. '(p' → logprob: -13.765386581420898
    9. ' [' → logprob: -14.015386581420898
    10. '	p' → logprob: -14.265386581420898

Token 115: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012665401445701718
    2. '+' → logprob: -7.5012664794921875
    3. ' ]' → logprob: -8.126266479492188
    4. '])' → logprob: -8.376266479492188
    5. '[q' → logprob: -10.001266479492188
    6. '[' → logprob: -10.126266479492188
    7. ']*' → logprob: -10.501266479492188
    8. ' +' → logprob: -11.001266479492188
    9. '+]' → logprob: -11.251266479492188
    10. '*' → logprob: -11.751266479492188

Token 116: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.25196373462677
    2. ' S' → logprob: -1.50196373462677
    3. ' ' → logprob: -10.75196361541748
    4. '   ' → logprob: -12.12696361541748
    5. '       ' → logprob: -12.62696361541748
    6. '	S' → logprob: -13.37696361541748
    7. '+' → logprob: -14.00196361541748
    8. '           ' → logprob: -14.75196361541748
    9. '  ' → logprob: -15.12696361541748
    10. '    ' → logprob: -15.50196361541748

Token 118: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.00018101456225849688
    2. 'q' → logprob: -9.250181198120117
    3. '[a' → logprob: -10.500181198120117
    4. '[' → logprob: -10.625181198120117
    5. '[p' → logprob: -11.250181198120117
    6. ' [' → logprob: -11.875181198120117
    7. '   ' → logprob: -12.250181198120117
    8. '```' → logprob: -12.500181198120117
    9. '       ' → logprob: -14.500181198120117
    10. '[N' → logprob: -14.625181198120117

Token 119: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007123691961169243
    2. '+' → logprob: -6.0071234703063965
    3. '<|end|>' → logprob: -6.1321234703063965
    4. ' )' → logprob: -6.7571234703063965
    5. ']' → logprob: -7.3821234703063965
    6. '<|end|>' → logprob: -8.007123947143555
    7. '-' → logprob: -9.632123947143555
    8. '```' → logprob: -9.632123947143555
    9. ')
' → logprob: -10.007123947143555
    10. ' +' → logprob: -10.257123947143555

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20950017869472504
    2. '   ' → logprob: -1.7095001935958862
    3. 'a' → logprob: -5.084500312805176
    4. '```' → logprob: -7.584500312805176
    5. '<|end|>' → logprob: -8.084500312805176
    6. ' a' → logprob: -8.334500312805176
    7. '        
' → logprob: -8.459500312805176
    8. 'print' → logprob: -8.834500312805176
    9. ' ' → logprob: -9.334500312805176
    10. '    
' → logprob: -10.084500312805176

Token 121: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06377805024385452
    2. '   ' → logprob: -3.5637781620025635
    3. ' a' → logprob: -4.188777923583984
    4. '       ' → logprob: -4.438777923583984
    5. ' ' → logprob: -6.563777923583984
    6. ' if' → logprob: -6.813777923583984
    7. 'if' (adapté à ' if') → logprob: -6.813777923583984
    8. 'print' → logprob: -7.063777923583984
    9. '```' → logprob: -7.938777923583984
    10. '<|end|>' → logprob: -7.938777923583984

Token 122: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.7824102640151978
    2. ' p' → logprob: -1.5324102640151978
    3. ' a' → logprob: -1.7824102640151978
    4. ' S' → logprob: -2.907410144805908
    5. ' q' → logprob: -3.157410144805908
    6. 'res' → logprob: -4.032410144805908
    7. 'a' → logprob: -4.532410144805908
    8. ' not' → logprob: -4.657410144805908
    9. ' N' → logprob: -5.032410144805908
    10. ' ' → logprob: -5.407410144805908

Token 123: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08447318524122238
    2. ' >=' → logprob: -3.209473133087158
    3. '>' → logprob: -3.334473133087158
    4. '>=' → logprob: -6.209473133087158
    5. ' ==' → logprob: -6.459473133087158
    6. ' <=' → logprob: -7.084473133087158
    7. ' <' → logprob: -8.834473609924316
    8. '==' → logprob: -8.959473609924316
    9. ' ' → logprob: -9.334473609924316
    10. '%' → logprob: -9.459473609924316

Token 124: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5232232213020325
    2. ' ans' → logprob: -0.8982232213020325
    3. '	ans' → logprob: -10.398222923278809
    4. '0' → logprob: -10.648222923278809
    5. ' ' → logprob: -10.898222923278809
    6. '100' → logprob: -11.648222923278809
    7. '(ans' → logprob: -11.773222923278809
    8. '10' → logprob: -12.648222923278809
    9. '999' → logprob: -13.398222923278809
    10. '1' → logprob: -13.898222923278809

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00780251482501626
    2. ':
' → logprob: -4.882802486419678
    3. '       ' → logprob: -9.507802963256836
    4. '<|end|>' → logprob: -10.007802963256836
    5. '           ' → logprob: -10.757802963256836
    6. '<|end|>' → logprob: -11.257802963256836
    7. '):' → logprob: -11.882802963256836
    8. ' :' → logprob: -11.882802963256836
    9. '   ' → logprob: -11.882802963256836
    10. ':return' → logprob: -12.132802963256836

Token 126: '           ' (ID: 352)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.41360390186309814
    2. '           ' → logprob: -1.1636039018630981
    3. '	ans' → logprob: -5.038603782653809
    4. 'ans' → logprob: -5.163603782653809
    5. ' 
' → logprob: -5.663603782653809
    6. '(ans' → logprob: -5.663603782653809
    7. '
' → logprob: -6.038603782653809
    8. '```' → logprob: -6.788603782653809
    9. '            
' → logprob: -7.038603782653809
    10. '               ' → logprob: -7.163603782653809

Token 127: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0026522288098931313
    2. 'ans' (adapté à ' ans') → logprob: -6.002652168273926
    3. '           ' → logprob: -8.877652168273926
    4. '	ans' → logprob: -11.127652168273926
    5. '```' → logprob: -11.502652168273926
    6. '               ' → logprob: -12.127652168273926
    7. '(ans' → logprob: -12.502652168273926
    8. '_ans' → logprob: -13.502652168273926
    9. ' ' → logprob: -14.877652168273926
    10. '            ' → logprob: -15.002652168273926

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028115289751440287
    2. '=' → logprob: -5.877811431884766
    3. ' ' → logprob: -12.252811431884766
    4. ' +=' → logprob: -14.252811431884766
    5. ' =)' → logprob: -14.252811431884766
    6. '<|end|>' → logprob: -14.752811431884766
    7. ' >' → logprob: -17.377811431884766
    8. ' =
' → logprob: -17.502811431884766
    9. ' |=' → logprob: -17.627811431884766
    10. '>' → logprob: -18.002811431884766

Token 129: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.006715728435665369
    2. 'res' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.256715774536133
    4. '(res' → logprob: -17.006715774536133
    5. ' ans' → logprob: -17.256715774536133
    6. '	res' → logprob: -17.756715774536133
    7. '$res' → logprob: -18.256715774536133
    8. ' ' → logprob: -19.006715774536133
    9. '_res' → logprob: -19.381715774536133
    10. '```' → logprob: -19.506715774536133

Token 130: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.36907514929771423
    2. '
' → logprob: -1.7440751791000366
    3. '<|end|>' → logprob: -2.494075059890747
    4. '\n' → logprob: -3.244075059890747
    5. '   ' → logprob: -5.619075298309326
    6. ')' → logprob: -6.619075298309326
    7. ' print' → logprob: -6.744075298309326
    8. ' ' → logprob: -6.994075298309326
    9. '<|end|>' → logprob: -7.244075298309326
    10. '  
' → logprob: -7.244075298309326

Token 131: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12426061183214188
    2. '<|end|>' → logprob: -2.249260663986206
    3. ' print' → logprob: -5.874260425567627
    4. ')' → logprob: -6.374260425567627
    5. '\n' → logprob: -6.374260425567627
    6. '   ' → logprob: -6.749260425567627
    7. ' ' → logprob: -6.749260425567627
    8. '+' → logprob: -7.624260425567627
    9. '```' → logprob: -7.624260425567627
    10. '    ' → logprob: -7.999260425567627

Token 132: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.43986016511917114
    2. ' -=' → logprob: -1.4398601055145264
    3. '=' → logprob: -2.1898601055145264
    4. '-' → logprob: -5.0648603439331055
    5. ' =' → logprob: -7.5648603439331055
    6. ' -' → logprob: -9.189860343933105
    7. '+=' → logprob: -11.064860343933105
    8. '```' → logprob: -11.939860343933105
    9. ' ' → logprob: -12.189860343933105
    10. ')' → logprob: -12.814860343933105

Token 134: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014174560084939003
    2. ' a' → logprob: -4.264174461364746
    3. 'p' → logprob: -11.764174461364746
    4. '	a' → logprob: -13.889174461364746
    5. ' ' → logprob: -14.014174461364746
    6. '   ' → logprob: -14.014174461364746
    7. ' p' → logprob: -14.514174461364746
    8. '_a' → logprob: -15.889174461364746
    9. '  ' → logprob: -17.014175415039062
    10. '>a' → logprob: -18.139175415039062

Token 135: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5323622822761536
    2. 'a' → logprob: -0.9073622822761536
    3. ' -' → logprob: -5.407362461090088
    4. '-a' → logprob: -5.782362461090088
    5. ' a' → logprob: -6.782362461090088
    6. 'd' → logprob: -8.15736198425293
    7. '-d' → logprob: -9.15736198425293
    8. ' ' → logprob: -10.15736198425293
    9. 'p' → logprob: -10.28236198425293
    10. '-p' → logprob: -11.65736198425293

Token 136: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23664775490760803
    2. '1' → logprob: -1.6116477251052856
    3. ' d' → logprob: -4.861647605895996
    4. '2' → logprob: -6.111647605895996
    5. ' ' → logprob: -6.736647605895996
    6. '   ' → logprob: -12.111647605895996
    7. 'q' → logprob: -12.236647605895996
    8. '3' → logprob: -12.861647605895996
    9. '4' → logprob: -12.986647605895996
    10. '(' → logprob: -13.299147605895996

Token 137: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008386960835196078
    2. '
' → logprob: -8.000838279724121
    3. ')' → logprob: -8.125838279724121
    4. '<|end|>' → logprob: -9.000838279724121
    5. ' print' → logprob: -9.500838279724121
    6. '```' → logprob: -13.375838279724121
    7. '(print' → logprob: -13.750838279724121
    8. '#print' → logprob: -14.000838279724121
    9. '\n' → logprob: -14.125838279724121
    10. '  
' → logprob: -14.375838279724121

Token 138: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.319370302458992e-06
    2. ' print' → logprob: -12.625005722045898
    3. '
' → logprob: -14.125005722045898
    4. '```' → logprob: -14.500005722045898
    5. '<|end|>' → logprob: -14.500005722045898
    6. '  
' → logprob: -16.8750057220459
    7. ')' → logprob: -17.6250057220459
    8. '\n' → logprob: -17.8750057220459
    9. '#print' → logprob: -17.8750057220459
    10. 'for' → logprob: -18.1250057220459

Token 139: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.006732780486345291
    2. '(' → logprob: -5.006732940673828
    3. '()' → logprob: -11.131732940673828
    4. 'ans' → logprob: -13.256732940673828
    5. '(
' → logprob: -14.631732940673828
    6. ' (' → logprob: -15.381732940673828
    7. '(answer' → logprob: -15.631732940673828
    8. '(max' → logprob: -16.631732940673828
    9. '(`' → logprob: -16.881732940673828
    10. '(abs' → logprob: -16.881732940673828

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.000000953674316
    3. '+' → logprob: -15.625000953674316
    4. ')
' → logprob: -16.0
    5. '))' → logprob: -16.0
    6. ')`' → logprob: -16.5
    7. '+)' → logprob: -17.75
    8. '()' → logprob: -18.625
    9. ')}' → logprob: -18.625
    10. '`)' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 138
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 31.16%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 73.91%
================================================================================
