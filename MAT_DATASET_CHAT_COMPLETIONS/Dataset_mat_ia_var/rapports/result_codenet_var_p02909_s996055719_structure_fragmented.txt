================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input()

def is_sunny(s):
    return s == 'Sunny'

def is_cloudy(s):
    return s == 'Cloudy'

def print_cloudy():
    print('Cloudy')

def print_rainy():
    print('Rainy')

def print_sunny():
    print('Sunny')

def process_sunny():
    print_cloudy()

def process_cloudy():
    print_rainy()

def process_other():
    print_sunny()

def handle_input(s):
    if is_sunny(s):
        process_sunny()
    elif is_cloudy(s):
        process_cloudy()
    else:
        process_other()

def main():
    s = get_input()
    handle_input(s)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004976270254701376
    2. '():' → logprob: -5.629976272583008
    3. '_' → logprob: -6.879976272583008
    4. '()' → logprob: -8.629976272583008
    5. '```' → logprob: -10.004976272583008
    6. '(:' → logprob: -10.504976272583008
    7. '(_' → logprob: -10.754976272583008
    8. '(_:' → logprob: -10.879976272583008
    9. ' (' → logprob: -11.504976272583008
    10. '("("' → logprob: -12.004976272583008

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.05937580764293671
    2. '():' → logprob: -3.684375762939453
    3. ':' → logprob: -4.559375762939453
    4. '   ' → logprob: -4.684375762939453
    5. '\' → logprob: -5.809375762939453
    6. '\n' → logprob: -5.934375762939453
    7. '``' → logprob: -5.934375762939453
    8. '    
' → logprob: -7.059375762939453
    9. '()' → logprob: -7.934375762939453
    10. '(' → logprob: -7.934375762939453

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21803174912929535
    2. 'input' → logprob: -2.468031644821167
    3. 'user' → logprob: -3.218031644821167
    4. '   ' → logprob: -3.343031644821167
    5. '```' → logprob: -4.593031883239746
    6. 'x' → logprob: -4.843031883239746
    7. ' ' → logprob: -4.968031883239746
    8. ' return' → logprob: -5.843031883239746
    9. 'text' → logprob: -6.343031883239746
    10. 'i' → logprob: -6.593031883239746

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3835088610649109
    2. ' ' → logprob: -1.3835089206695557
    3. 'input' → logprob: -2.7585089206695557
    4. '"' → logprob: -6.008508682250977
    5. ''' → logprob: -7.133508682250977
    6. ' "' → logprob: -8.008508682250977
    7. '  ' → logprob: -8.258508682250977
    8. ' '' → logprob: -8.508508682250977
    9. ' None' → logprob: -9.133508682250977
    10. '(input' → logprob: -9.258508682250977

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004189398139715195
    2. '()' → logprob: -5.504189491271973
    3. '('' → logprob: -10.004189491271973
    4. '(
' → logprob: -11.254189491271973
    5. '("("' → logprob: -11.254189491271973
    6. ' (' → logprob: -11.629189491271973
    7. '("")' → logprob: -11.879189491271973
    8. ' ' → logprob: -12.129189491271973
    9. '```' → logprob: -12.129189491271973
    10. ''' → logprob: -13.129189491271973

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9562095403671265
    2. '(' → logprob: -1.3312095403671265
    3. '()' → logprob: -2.456209659576416
    4. '\n' → logprob: -2.581209659576416
    5. '```' → logprob: -3.206209659576416
    6. '(
' → logprob: -3.456209659576416
    7. '#' → logprob: -3.706209659576416
    8. '<|end|>' → logprob: -3.831209659576416
    9. '\' → logprob: -4.331209659576416
    10. '
' → logprob: -4.706209659576416

Token 9: ' is' (ID: 382)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6385780572891235
    2. ' calculate' → logprob: -1.1385780572891235
    3. ' process' → logprob: -2.763577938079834
    4. ' main' → logprob: -3.388577938079834
    5. ' print' → logprob: -4.638577938079834
    6. ' add' → logprob: -4.888577938079834
    7. ' space' → logprob: -5.388577938079834
    8. ' user' → logprob: -5.638577938079834
    9. ' validate' → logprob: -5.638577938079834
    10. ' compute' → logprob: -5.638577938079834

Token 10: '_s' (ID: 1278)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.0748920440673828
    2. '_pal' → logprob: -1.1998920440673828
    3. '_' → logprob: -1.5748920440673828
    4. '_prime' → logprob: -2.449892044067383
    5. '_even' → logprob: -3.699892044067383
    6. '_integer' → logprob: -5.074892044067383
    7. ' _' → logprob: -5.199892044067383
    8. '_space' → logprob: -5.699892044067383
    9. '_numeric' → logprob: -5.949892044067383
    10. '_digit' → logprob: -5.949892044067383

Token 11: 'unny' (ID: 128423)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -1.15360689163208
    2. 'tring' → logprob: -1.77860689163208
    3. 't' → logprob: -2.27860689163208
    4. 'afe' → logprob: -3.02860689163208
    5. 'string' → logprob: -3.15360689163208
    6. '_even' → logprob: -3.15360689163208
    7. 'pecial' → logprob: -3.40360689163208
    8. 'm' → logprob: -3.90360689163208
    9. 'quare' → logprob: -4.15360689163208
    10. 'orted' → logprob: -4.15360689163208

Token 12: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034545984119176865
    2. '():' → logprob: -3.5345458984375
    3. '_' → logprob: -5.7845458984375
    4. '(:' → logprob: -8.0345458984375
    5. ':' → logprob: -8.4095458984375
    6. '(_:' → logprob: -8.4095458984375
    7. '()' → logprob: -8.7845458984375
    8. '(_' → logprob: -9.0345458984375
    9. '(_)' → logprob: -9.0345458984375
    10. '("("' → logprob: -9.5345458984375

Token 13: '):
' (ID: 1883)
  Prédit: 'unny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -0.07186081260442734
    2. '):' → logprob: -3.5718607902526855
    3. 'un' → logprob: -4.6968607902526855
    4. ')' → logprob: -4.8218607902526855
    5. 'e' → logprob: -4.9468607902526855
    6. 'ky' → logprob: -5.1968607902526855
    7. ' ):' → logprob: -6.5718607902526855
    8. 't' → logprob: -6.8218607902526855
    9. '):
' → logprob: -6.9468607902526855
    10. 'tring' → logprob: -7.0718607902526855

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5815914869308472
    2. '(s' → logprob: -1.9565914869308472
    3. '(' → logprob: -2.3315916061401367
    4. 's' → logprob: -2.8315916061401367
    5. ' return' → logprob: -3.3315916061401367
    6. ':' → logprob: -3.7065916061401367
    7. ' (' → logprob: -4.081591606140137
    8. ' s' → logprob: -4.081591606140137
    9. ''' → logprob: -4.081591606140137
    10. ''s' → logprob: -5.081591606140137

Token 15: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.34736335277557373
    2. ' s' → logprob: -1.4723633527755737
    3. 'return' (adapté à ' return') → logprob: -3.7223634719848633
    4. '   ' → logprob: -3.9723634719848633
    5. 's' → logprob: -4.347363471984863
    6. '"' → logprob: -5.347363471984863
    7. ''' → logprob: -6.597363471984863
    8. ' "' → logprob: -7.097363471984863
    9. ''s' → logprob: -7.972363471984863
    10. ' if' → logprob: -7.972363471984863

Token 16: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.24004286527633667
    2. ''s' → logprob: -2.6150429248809814
    3. 's' → logprob: -2.7400429248809814
    4. '"' → logprob: -3.2400429248809814
    5. ' "' → logprob: -3.9900429248809814
    6. ''' → logprob: -4.740042686462402
    7. '"s' → logprob: -5.365042686462402
    8. ' '' → logprob: -5.490042686462402
    9. ' ' → logprob: -8.615042686462402
    10. ' True' → logprob: -8.865042686462402

Token 17: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.813007116317749
    2. ' ==' → logprob: -0.813007116317749
    3. '.' → logprob: -2.813007116317749
    4. '.lower' → logprob: -3.188007116317749
    5. '.startswith' → logprob: -5.563007354736328
    6. ' in' → logprob: -5.688007354736328
    7. '.endswith' → logprob: -6.438007354736328
    8. ' .' → logprob: -7.188007354736328
    9. '=' → logprob: -7.813007354736328
    10. '>' → logprob: -7.938007354736328

Token 18: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5701156258583069
    2. ' "' → logprob: -0.9451156258583069
    3. ''' → logprob: -3.195115566253662
    4. ' '' → logprob: -5.445115566253662
    5. ''S' → logprob: -8.19511604309082
    6. ''s' → logprob: -8.32011604309082
    7. '"S' → logprob: -10.19511604309082
    8. ' ' → logprob: -10.44511604309082
    9. '"I' → logprob: -11.32011604309082
    10. '"s' → logprob: -12.07011604309082

Token 19: 'Sunny' (ID: 145166)
  Prédit: 'sun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sun' → logprob: -0.0004699954588431865
    2. 'yes' → logprob: -7.875470161437988
    3. 'Sunny' → logprob: -9.500470161437988
    4. 'clear' → logprob: -12.500470161437988
    5. ' sunny' → logprob: -13.125470161437988
    6. '晴' → logprob: -13.375470161437988
    7. 'true' → logprob: -13.375470161437988
    8. 'y' → logprob: -13.375470161437988
    9. 's' → logprob: -13.875470161437988
    10. 'Yes' → logprob: -14.000470161437988

Token 20: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00017541198758408427
    2. ''S' → logprob: -8.750175476074219
    3. ''s' → logprob: -11.625175476074219
    4. '"' → logprob: -12.750175476074219
    5. ''''' → logprob: -13.375175476074219
    6. '')' → logprob: -13.875175476074219
    7. ' '' → logprob: -14.500175476074219
    8. ')'' → logprob: -14.875175476074219
    9. ''"' → logprob: -15.000175476074219
    10. '"'' → logprob: -15.250175476074219

Token 21: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18823719024658203
    2. '

' → logprob: -2.188237190246582
    3. '
' → logprob: -3.313237190246582
    4. '<|end|>' → logprob: -4.188237190246582
    5. '\' → logprob: -5.688237190246582
    6. '\n' → logprob: -6.188237190246582
    7. '```' → logprob: -6.813237190246582
    8. '<|end|>' → logprob: -7.813237190246582
    9. '#' → logprob: -8.813237190246582
    10. 'newline' → logprob: -8.938237190246582

Token 22: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.48065826296806335
    2. 'is' → logprob: -1.1056582927703857
    3. ' main' → logprob: -4.230658054351807
    4. ' get' → logprob: -4.355658054351807
    5. 'def' → logprob: -4.605658054351807
    6. ' def' → logprob: -4.730658054351807
    7. 'main' → logprob: -5.855658054351807
    8. 'get' → logprob: -6.855658054351807
    9. ' rain' → logprob: -8.730658531188965
    10. 'rain' → logprob: -9.105658531188965

Token 23: '_cloud' (ID: 83382)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.034539300948381424
    2. 'rain' → logprob: -4.784539222717285
    3. '_cloud' → logprob: -4.909539222717285
    4. ' Rain' → logprob: -5.034539222717285
    5. ' rainy' → logprob: -5.534539222717285
    6. 'Rain' → logprob: -6.284539222717285
    7. '_s' → logprob: -6.409539222717285
    8. 'cloud' → logprob: -7.034539222717285
    9. ' rain' → logprob: -7.659539222717285
    10. '_w' → logprob: -7.909539222717285

Token 24: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1472419600977446e-06
    2. ' y' → logprob: -14.125000953674316
    3. '(y' → logprob: -16.625001907348633
    4. 'less' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '```' → logprob: -17.625001907348633
    7. '‘y' → logprob: -17.625001907348633
    8. '	y' → logprob: -17.750001907348633
    9. '[y' → logprob: -18.125001907348633
    10. ''y' → logprob: -18.250001907348633

Token 25: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.10042662918567657
    2. '(' → logprob: -2.35042667388916
    3. 's' → logprob: -8.97542667388916
    4. ' (' → logprob: -9.72542667388916
    5. '_' → logprob: -10.72542667388916
    6. '('' → logprob: -13.60042667388916
    7. '(_' → logprob: -13.60042667388916
    8. '(S' → logprob: -13.72542667388916
    9. '("("' → logprob: -13.72542667388916
    10. '(n' → logprob: -13.97542667388916

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018579611787572503
    2. ')' → logprob: -7.001857757568359
    3. '):
' → logprob: -7.001857757568359
    4. 's' → logprob: -11.62685775756836
    5. ' ):' → logprob: -11.87685775756836
    6. '):
' → logprob: -12.62685775756836
    7. '=' → logprob: -12.62685775756836
    8. ' s' → logprob: -12.87685775756836
    9. ''):' → logprob: -13.00185775756836
    10. '):

' → logprob: -13.12685775756836

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01421439554542303
    2. ' s' → logprob: -4.639214515686035
    3. ' return' → logprob: -5.514214515686035
    4. 's' → logprob: -8.139214515686035
    5. 'return' → logprob: -10.014214515686035
    6. '(s' → logprob: -10.264214515686035
    7. '    ' → logprob: -10.514214515686035
    8. ' ' → logprob: -11.264214515686035
    9. '  ' → logprob: -12.514214515686035
    10. '```' → logprob: -13.514214515686035

Token 28: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1207314059138298
    2. 'return' (adapté à ' return') → logprob: -2.2457313537597656
    3. '   ' → logprob: -5.620731353759766
    4. ' s' → logprob: -5.745731353759766
    5. 's' → logprob: -6.870731353759766
    6. ' ' → logprob: -11.120731353759766
    7. '(s' → logprob: -12.745731353759766
    8. '	return' → logprob: -13.245731353759766
    9. '    ' → logprob: -13.870731353759766
    10. '  ' → logprob: -13.995731353759766

Token 29: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08897186070680618
    2. 's' → logprob: -2.4639718532562256
    3. '(s' → logprob: -11.088972091674805
    4. ''s' → logprob: -11.588972091674805
    5. ''' → logprob: -13.338972091674805
    6. ' '' → logprob: -13.776472091674805
    7. ' ' → logprob: -13.838972091674805
    8. '`s' → logprob: -14.276472091674805
    9. '	s' → logprob: -14.463972091674805
    10. '   ' → logprob: -14.713972091674805

Token 30: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.037112876772880554
    2. '==' → logprob: -3.4121129512786865
    3. ' in' → logprob: -7.287112712860107
    4. '.startswith' → logprob: -7.287112712860107
    5. ' !=' → logprob: -7.412112712860107
    6. '.' → logprob: -7.537112712860107
    7. '[' → logprob: -7.912112712860107
    8. ' ' → logprob: -8.037113189697266
    9. ' .' → logprob: -9.412113189697266
    10. '.endswith' → logprob: -9.662113189697266

Token 31: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14273519814014435
    2. ' '' → logprob: -2.017735242843628
    3. ' ' → logprob: -10.517735481262207
    4. ''S' → logprob: -10.642735481262207
    5. '"' → logprob: -12.017735481262207
    6. ' ' → logprob: -13.517735481262207
    7. ''s' → logprob: -14.017735481262207
    8. ' "' → logprob: -14.892735481262207
    9. '`' → logprob: -15.392735481262207
    10. '’' → logprob: -16.51773452758789

Token 32: 'Cloud' (ID: 17486)
  Prédit: 'Cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cloud' → logprob: -0.01817382499575615
    2. ''' → logprob: -4.018173694610596
    3. 'Sunny' → logprob: -11.518174171447754
    4. ''C' → logprob: -12.018174171447754
    5. ''S' → logprob: -12.518174171447754
    6. 'cloud' → logprob: -13.268174171447754
    7. ' Cloud' → logprob: -13.893174171447754
    8. 'Rain' → logprob: -14.518174171447754
    9. '"' → logprob: -15.393174171447754
    10. '.Cloud' → logprob: -15.518174171447754

Token 33: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.1008713702030946e-06
    2. ' y' → logprob: -13.875001907348633
    3. ''y' → logprob: -14.000001907348633
    4. 's' → logprob: -15.875001907348633
    5. ''' → logprob: -16.125001907348633
    6. 'y's' → logprob: -18.125001907348633
    7. '‘y' → logprob: -18.250001907348633
    8. 'Y' → logprob: -19.125001907348633
    9. '	y' → logprob: -19.500001907348633
    10. ')' → logprob: -19.750001907348633

Token 34: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4855663721391466e-05
    2. '')' → logprob: -11.750015258789062
    3. ')' → logprob: -13.250015258789062
    4. ''''' → logprob: -13.625015258789062
    5. ''
' → logprob: -13.875015258789062
    6. '"' → logprob: -14.000015258789062
    7. ')'' → logprob: -14.125015258789062
    8. ''s' → logprob: -14.875015258789062
    9. '```' → logprob: -15.250015258789062
    10. 's' → logprob: -15.625015258789062

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.457669562427327e-05
    2. '
' → logprob: -10.25007438659668
    3. '

' → logprob: -11.25007438659668
    4. 'd' → logprob: -11.62507438659668
    5. '```' → logprob: -11.62507438659668
    6. '\' → logprob: -12.62507438659668
    7. 'de' → logprob: -13.62507438659668
    8. '<|end|>' → logprob: -13.75007438659668
    9. '#' → logprob: -14.37507438659668
    10. '``' → logprob: -14.50007438659668

Token 36: ' print' (ID: 2123)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0006273718317970634
    2. 'is' → logprob: -7.625627517700195
    3. ' get' → logprob: -9.125627517700195
    4. ' def' → logprob: -11.375627517700195
    5. ' ' → logprob: -12.500627517700195
    6. ' ' → logprob: -12.625627517700195
    7. ' i' → logprob: -13.375627517700195
    8. 'def' → logprob: -13.500627517700195
    9. '_is' → logprob: -13.625627517700195
    10. '```' → logprob: -13.750627517700195

Token 37: '_cloud' (ID: 83382)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001786563778296113
    2. '_' → logprob: -6.876786708831787
    3. '_s' → logprob: -7.751786708831787
    4. '('' → logprob: -9.501786231994629
    5. '(s' → logprob: -9.626786231994629
    6. '_weather' → logprob: -10.001786231994629
    7. '("' → logprob: -10.626786231994629
    8. 's' → logprob: -11.001786231994629
    9. '("")' → logprob: -11.251786231994629
    10. '()' → logprob: -11.376786231994629

Token 38: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00015943869948387146
    2. ' y' → logprob: -9.87515926361084
    3. '_y' → logprob: -10.25015926361084
    4. '   ' → logprob: -10.37515926361084
    5. '(y' → logprob: -11.00015926361084
    6. 's' → logprob: -11.50015926361084
    7. 'iness' → logprob: -12.50015926361084
    8. '_' → logprob: -12.62515926361084
    9. '()' → logprob: -13.12515926361084
    10. '_cover' → logprob: -13.87515926361084

Token 39: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03319548815488815
    2. '_' → logprob: -3.5331954956054688
    3. '()' → logprob: -6.533195495605469
    4. '(_)' → logprob: -7.283195495605469
    5. '(_' → logprob: -8.783195495605469
    6. '('' → logprob: -8.783195495605469
    7. '_s' → logprob: -8.908195495605469
    8. 's' → logprob: -8.908195495605469
    9. '(s' → logprob: -8.908195495605469
    10. ''' → logprob: -9.533195495605469

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016587569552939385
    2. ' print' → logprob: -9.125165939331055
    3. 'print' → logprob: -10.250165939331055
    4. '(' → logprob: -11.000165939331055
    5. '   ' → logprob: -13.250165939331055
    6. '```' → logprob: -14.375165939331055
    7. '()' → logprob: -14.750165939331055
    8. '       ' → logprob: -14.875165939331055
    9. '    
' → logprob: -15.125165939331055
    10. ' (' → logprob: -15.250165939331055

Token 41: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.057894252240657806
    2. '   ' → logprob: -3.057894229888916
    3. ' print' → logprob: -4.682894229888916
    4. 'pr' → logprob: -12.057894706726074
    5. 'prin' → logprob: -13.057894706726074
    6. ' ' → logprob: -13.932894706726074
    7. '	print' → logprob: -14.307894706726074
    8. '```' → logprob: -14.807894706726074
    9. 'p' → logprob: -15.057894706726074
    10. '  ' → logprob: -15.307894706726074

Token 42: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6391302347183228
    2. '(' → logprob: -1.1391302347183228
    3. '("' → logprob: -1.8891302347183228
    4. '()' → logprob: -7.514130115509033
    5. '("("' → logprob: -7.889130115509033
    6. '("")' → logprob: -11.514130592346191
    7. '("""' → logprob: -12.264130592346191
    8. '"' → logprob: -13.014130592346191
    9. ''' → logprob: -13.514130592346191
    10. '("(' → logprob: -13.764130592346191

Token 43: 'Cloud' (ID: 17486)
  Prédit: 'Cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cloud' → logprob: -0.022458521649241447
    2. 'It' → logprob: -3.897458553314209
    3. 'It's' → logprob: -6.397458553314209
    4. 'cloud' → logprob: -9.89745807647705
    5. 'Today' → logprob: -10.64745807647705
    6. 'The' → logprob: -10.77245807647705
    7. 'Over' → logprob: -10.77245807647705
    8. 'There' → logprob: -11.27245807647705
    9. 'Sky' → logprob: -11.39745807647705
    10. 'No' → logprob: -11.52245807647705

Token 44: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.7372048862162046e-05
    2. ' y' → logprob: -10.625027656555176
    3. '   ' → logprob: -13.375027656555176
    4. 'Y' → logprob: -14.625027656555176
    5. '	y' → logprob: -15.375027656555176
    6. ' ' → logprob: -15.750027656555176
    7. 'Cloud' → logprob: -16.25002670288086
    8. ' Cloud' → logprob: -16.25002670288086
    9. ''y' → logprob: -16.50002670288086
    10. 'yy' → logprob: -16.75002670288086

Token 45: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -1.5213274309644476e-05
    2. ')' → logprob: -11.875015258789062
    3. '")' → logprob: -12.375015258789062
    4. '')
' → logprob: -13.125015258789062
    5. ''' → logprob: -14.000015258789062
    6. '!' → logprob: -14.625015258789062
    7. '')

' → logprob: -16.625015258789062
    8. 'day' → logprob: -16.625015258789062
    9. 'Cloud' → logprob: -17.000015258789062
    10. ' day' → logprob: -17.125015258789062

Token 46: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5710365176200867
    2. '
' → logprob: -0.9460365176200867
    3. '

' → logprob: -3.0710365772247314
    4. '<|end|>' → logprob: -8.071036338806152
    5. '```' → logprob: -10.446036338806152
    6. '\n' → logprob: -11.071036338806152
    7. ' def' → logprob: -11.321036338806152
    8. '
' → logprob: -11.571036338806152
    9. '<|end|>' → logprob: -11.821036338806152
    10. '\' → logprob: -11.946036338806152

Token 47: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0387619249522686
    2. '_' → logprob: -4.413762092590332
    3. ' ' → logprob: -4.913762092590332
    4. 'print' → logprob: -5.038762092590332
    5. ' _' → logprob: -5.663762092590332
    6. ' get' → logprob: -5.788762092590332
    7. '_print' → logprob: -6.163762092590332
    8. '_s' → logprob: -6.288762092590332
    9. ' is' → logprob: -7.413762092590332
    10. ' def' → logprob: -7.663762092590332

Token 48: '_r' (ID: 3442)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.6566836833953857
    2. '('' → logprob: -0.9066836833953857
    3. '_' → logprob: -3.2816836833953857
    4. '_S' → logprob: -3.7816836833953857
    5. '(' → logprob: -4.281683921813965
    6. '('_' → logprob: -6.031683921813965
    7. '(s' → logprob: -8.406683921813965
    8. '_(' → logprob: -8.656683921813965
    9. '()' → logprob: -9.156683921813965
    10. 'Sunny' → logprob: -9.281683921813965

Token 49: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.0008585774339735508
    2. 'a' → logprob: -7.875858783721924
    3. 'unny' → logprob: -8.000858306884766
    4. 'aining' → logprob: -9.875858306884766
    5. 'ains' → logprob: -10.875858306884766
    6. '``' → logprob: -11.750858306884766
    7. '```' → logprob: -11.750858306884766
    8. 'ained' → logprob: -12.000858306884766
    9. '_' → logprob: -12.250858306884766
    10. 'ai' → logprob: -12.375858306884766

Token 50: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.9875325708417222e-05
    2. '(y' → logprob: -10.875029563903809
    3. ''y' → logprob: -12.875029563903809
    4. '()' → logprob: -13.250029563903809
    5. 'ny' → logprob: -13.875029563903809
    6. '('' → logprob: -14.000029563903809
    7. '‘y' → logprob: -14.500029563903809
    8. '.py' → logprob: -14.625029563903809
    9. '	y' → logprob: -14.750029563903809
    10. '_y' → logprob: -15.125029563903809

Token 51: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001329287188127637
    2. '()' → logprob: -6.75132942199707
    3. '(' → logprob: -9.25132942199707
    4. '():
' → logprob: -10.25132942199707
    5. '('' → logprob: -11.62632942199707
    6. ':' → logprob: -12.00132942199707
    7. ' ():' → logprob: -12.12632942199707
    8. '_' → logprob: -12.75132942199707
    9. '()>' → logprob: -13.62632942199707
    10. '():
' → logprob: -14.37632942199707

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011629798245849088
    2. 'print' → logprob: -9.375116348266602
    3. ' print' → logprob: -10.500116348266602
    4. ''' → logprob: -13.500116348266602
    5. '   ' → logprob: -13.875116348266602
    6. ' ' → logprob: -15.000116348266602
    7. '  ' → logprob: -15.375116348266602
    8. '       ' → logprob: -15.375116348266602
    9. '(' → logprob: -15.625116348266602
    10. '('' → logprob: -15.750116348266602

Token 53: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.392824874026701e-05
    2. '   ' → logprob: -10.87503433227539
    3. ' print' → logprob: -11.12503433227539
    4. 'pr' → logprob: -16.62503433227539
    5. 'prin' → logprob: -17.00003433227539
    6. '```' → logprob: -17.62503433227539
    7. '	print' → logprob: -17.87503433227539
    8. ' ' → logprob: -18.25003433227539
    9. 'printf' → logprob: -19.12503433227539
    10. 'Print' → logprob: -19.25003433227539

Token 54: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.005279772914946079
    2. '(' → logprob: -5.255279541015625
    3. '(R' → logprob: -10.130279541015625
    4. '("' → logprob: -12.630279541015625
    5. ''' → logprob: -13.630279541015625
    6. '(r' → logprob: -14.255279541015625
    7. 'Rain' → logprob: -15.505279541015625
    8. '()' → logprob: -15.880279541015625
    9. '(('' → logprob: -15.880279541015625
    10. '(\'' → logprob: -16.005279541015625

Token 55: 'Rain' (ID: 74615)
  Prédit: 'Rain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rain' → logprob: -1.580929347255733e-05
    2. ''' → logprob: -11.250016212463379
    3. ' Rain' → logprob: -13.625016212463379
    4. 'Cloud' → logprob: -14.500016212463379
    5. 'rain' → logprob: -14.750016212463379
    6. 'R' → logprob: -14.750016212463379
    7. 'Sunny' → logprob: -16.750015258789062
    8. '雨' → logprob: -16.875015258789062
    9. ' rainy' → logprob: -17.125015258789062
    10. ''r' → logprob: -17.125015258789062

Token 56: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.320199877838604e-07
    2. 'ny' → logprob: -15.375
    3. ''y' → logprob: -16.25
    4. 'yy' → logprob: -17.75
    5. ' y' → logprob: -18.125
    6. 'yyyy' → logprob: -18.875
    7. '	y' → logprob: -19.0
    8. '‘y' → logprob: -19.0
    9. '```' → logprob: -19.375
    10. 'yyy' → logprob: -19.375

Token 57: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -2.4868770196917467e-05
    2. ')' → logprob: -10.750024795532227
    3. '')
' → logprob: -13.500024795532227
    4. ''' → logprob: -13.875024795532227
    5. '()' → logprob: -14.125024795532227
    6. '")' → logprob: -15.500024795532227
    7. '')

' → logprob: -16.250024795532227
    8. '('' → logprob: -18.500024795532227
    9. ''))' → logprob: -18.500024795532227
    10. '')"' → logprob: -18.750024795532227

Token 58: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003601140109822154
    2. '
' → logprob: -6.00360107421875
    3. 'd' → logprob: -7.25360107421875
    4. '

' → logprob: -8.50360107421875
    5. '```' → logprob: -8.62860107421875
    6. '<|end|>' → logprob: -11.25360107421875
    7. '\' → logprob: -11.37860107421875
    8. ' def' → logprob: -12.50360107421875
    9. 'de' → logprob: -13.25360107421875
    10. 'ndef' → logprob: -13.62860107421875

Token 59: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.11958940327167511
    2. ' is' → logprob: -2.869589328765869
    3. ' get' → logprob: -3.369589328765869
    4. ' def' → logprob: -4.369589328765869
    5. ' main' → logprob: -5.994589328765869
    6. ' predict' → logprob: -6.244589328765869
    7. 'print' → logprob: -6.619589328765869
    8. ' check' → logprob: -6.744589328765869
    9. ' ' → logprob: -8.369589805603027
    10. ' forecast' → logprob: -8.369589805603027

Token 60: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0001499060745118186
    2. '_cloud' → logprob: -9.625149726867676
    3. '('' → logprob: -10.125149726867676
    4. '()' → logprob: -11.875149726867676
    5. '_r' → logprob: -12.000149726867676
    6. '_' → logprob: -12.000149726867676
    7. 'Sunny' → logprob: -12.250149726867676
    8. '(s' → logprob: -12.250149726867676
    9. '(' → logprob: -12.375149726867676
    10. '_S' → logprob: -13.375149726867676

Token 61: 'unny' (ID: 128423)
  Prédit: 'unny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -3.1424973713001236e-05
    2. 'un' → logprob: -10.500031471252441
    3. 'u' → logprob: -13.500031471252441
    4. 'unn' → logprob: -13.875031471252441
    5. 'uny' → logprob: -15.125031471252441
    6. '_un' → logprob: -15.375031471252441
    7. 'sun' → logprob: -15.500031471252441
    8. 'Sunny' → logprob: -15.750031471252441
    9. 'n' → logprob: -16.125030517578125
    10. '	un' → logprob: -16.625030517578125

Token 62: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.796184723294573e-06
    2. ' ():' → logprob: -12.625005722045898
    3. '()' → logprob: -13.125005722045898
    4. '():
' → logprob: -15.125005722045898
    5. ':' → logprob: -17.2500057220459
    6. '(' → logprob: -17.2500057220459
    7. '()>' → logprob: -18.5000057220459
    8. '():
' → logprob: -19.2500057220459
    9. '():

' → logprob: -19.6250057220459
    10. '()">' → logprob: -19.6250057220459

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06589559465646744
    2. 'print' → logprob: -3.0658955574035645
    3. ' print' → logprob: -4.0658955574035645
    4. '	print' → logprob: -12.565896034240723
    5. '('' → logprob: -13.190896034240723
    6. '(print' → logprob: -13.190896034240723
    7. '(' → logprob: -13.815896034240723
    8. ' ' → logprob: -13.940896034240723
    9. '  ' → logprob: -14.315896034240723
    10. ''' → logprob: -14.440896034240723

Token 64: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006823831703513861
    2. ' print' → logprob: -5.006824016571045
    3. '   ' → logprob: -9.131823539733887
    4. ' ' → logprob: -15.756823539733887
    5. '	print' → logprob: -15.881823539733887
    6. '  ' → logprob: -17.006824493408203
    7. '(print' → logprob: -17.256824493408203
    8. '('' → logprob: -18.506824493408203
    9. '```' → logprob: -18.506824493408203
    10. '    ' → logprob: -19.381824493408203

Token 65: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03808017447590828
    2. '(' → logprob: -3.2880802154541016
    3. '(S' → logprob: -11.288080215454102
    4. '("' → logprob: -11.413080215454102
    5. ' ('' → logprob: -12.288080215454102
    6. ' (' → logprob: -13.288080215454102
    7. '('(' → logprob: -13.288080215454102
    8. '(s' → logprob: -13.413080215454102
    9. ''s' → logprob: -13.663080215454102
    10. '(\'' → logprob: -14.163080215454102

Token 66: 'Sunny' (ID: 145166)
  Prédit: 'Sunny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sunny' → logprob: -2.935296834039036e-06
    2. 'Sun' → logprob: -12.87500286102295
    3. ' Sunny' → logprob: -15.25000286102295
    4. 'S' → logprob: -17.375003814697266
    5. ''S' → logprob: -17.500003814697266
    6. ' sunny' → logprob: -18.750003814697266
    7. ''' → logprob: -19.000003814697266
    8. 'sun' → logprob: -19.000003814697266
    9. 's' → logprob: -20.500003814697266
    10. 'SUN' → logprob: -21.375003814697266

Token 67: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0003566767554730177
    2. '()' → logprob: -8.250356674194336
    3. '')
' → logprob: -9.375356674194336
    4. ''' → logprob: -12.250356674194336
    5. ')' → logprob: -12.375356674194336
    6. '')

' → logprob: -13.875356674194336
    7. '")' → logprob: -15.375356674194336
    8. '('' → logprob: -15.750356674194336
    9. '')
' → logprob: -16.625356674194336
    10. 'def' → logprob: -17.250356674194336

Token 68: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001737431448418647
    2. '
' → logprob: -8.875173568725586
    3. 'weather' → logprob: -11.125173568725586
    4. '

' → logprob: -11.875173568725586
    5. 's' → logprob: -12.500173568725586
    6. '```' → logprob: -12.625173568725586
    7. 'd' → logprob: -13.125173568725586
    8. 'if' → logprob: -13.625173568725586
    9. 'sun' → logprob: -14.875173568725586
    10. 'n' → logprob: -15.125173568725586

Token 69: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3342570662498474
    2. ' weather' → logprob: -1.3342571258544922
    3. ' classify' → logprob: -5.459257125854492
    4. ' def' → logprob: -5.709257125854492
    5. ' determine' → logprob: -5.834257125854492
    6. ' predict' → logprob: -5.834257125854492
    7. ' get' → logprob: -5.834257125854492
    8. ' check' → logprob: -6.459257125854492
    9. ' forecast' → logprob: -6.959257125854492
    10. ' decide' → logprob: -7.334257125854492

Token 70: '_s' (ID: 1278)
  Prédit: '_weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weather' → logprob: -0.3568879961967468
    2. '_' → logprob: -1.7318880558013916
    3. '(' → logprob: -2.8568880558013916
    4. '_(' → logprob: -3.7318880558013916
    5. '_day' → logprob: -3.8568880558013916
    6. '(weather' → logprob: -5.1068878173828125
    7. '_input' → logprob: -5.2318878173828125
    8. '(_' → logprob: -5.8568878173828125
    9. '(day' → logprob: -6.2318878173828125
    10. '(s' → logprob: -7.2318878173828125

Token 71: 'unny' (ID: 128423)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6728652715682983
    2. '_' → logprob: -1.1728652715682983
    3. 'unny' → logprob: -2.922865390777588
    4. '_weather' → logprob: -3.547865390777588
    5. 'e' → logprob: -3.672865390777588
    6. '(' → logprob: -4.297865390777588
    7. '_day' → logprob: -5.047865390777588
    8. '(t' → logprob: -5.172865390777588
    9. '_s' → logprob: -5.672865390777588
    10. '_input' → logprob: -5.672865390777588

Token 72: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.166117861866951
    2. '(' → logprob: -1.9161179065704346
    3. '(s' → logprob: -5.2911176681518555
    4. '_' → logprob: -8.541117668151855
    5. '()' → logprob: -8.916117668151855
    6. ' ():' → logprob: -9.166117668151855
    7. '(_' → logprob: -9.291117668151855
    8. '(S' → logprob: -9.791117668151855
    9. '_s' → logprob: -10.166117668151855
    10. '():
' → logprob: -10.791117668151855

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046112917363643646
    2. '
' → logprob: -3.1711130142211914
    3. '    
' → logprob: -6.546113014221191
    4. '\n' → logprob: -7.296113014221191
    5. 'print' → logprob: -8.046113014221191
    6. '```' → logprob: -8.546113014221191
    7. 'n' → logprob: -9.171113014221191
    8. '(' → logprob: -9.671113014221191
    9. '       ' → logprob: -9.796113014221191
    10. ' 
' → logprob: -10.171113014221191

Token 74: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3936549723148346
    2. 'print' (adapté à ' print') → logprob: -1.3936549425125122
    3. ' print' → logprob: -2.6436550617218018
    4. '    
' → logprob: -6.518654823303223
    5. ' if' → logprob: -6.893654823303223
    6. '```' → logprob: -7.518654823303223
    7. 'if' → logprob: -7.768654823303223
    8. ' return' → logprob: -7.893654823303223
    9. '    ' → logprob: -8.018654823303223
    10. 'return' → logprob: -8.268654823303223

Token 75: '_cloud' (ID: 83382)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.05571911484003067
    2. '_' → logprob: -3.0557191371917725
    3. '('_' → logprob: -5.430718898773193
    4. '(' → logprob: -6.180718898773193
    5. '('' → logprob: -9.180719375610352
    6. '_S' → logprob: -9.305719375610352
    7. '_(' → logprob: -9.430719375610352
    8. '```' → logprob: -9.805719375610352
    9. '(_' → logprob: -9.930719375610352
    10. '("_' → logprob: -9.930719375610352

Token 76: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.200166469876422e-06
    2. ' y' → logprob: -12.750004768371582
    3. '```' → logprob: -14.750004768371582
    4. '	y' → logprob: -15.250004768371582
    5. '   ' → logprob: -15.375004768371582
    6. '(y' → logprob: -15.750004768371582
    7. 'y's' → logprob: -15.750004768371582
    8. ''y' → logprob: -15.875004768371582
    9. '('' → logprob: -16.2500057220459
    10. 'yf' → logprob: -16.5625057220459

Token 77: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011562933214008808
    2. '()
' → logprob: -7.376156330108643
    3. '(' → logprob: -7.626156330108643
    4. '()

' → logprob: -11.126155853271484
    5. ' ()' → logprob: -11.876155853271484
    6. '(
' → logprob: -12.376155853271484
    7. '()`' → logprob: -13.001155853271484
    8. ' ' → logprob: -13.251155853271484
    9. '```' → logprob: -13.376155853271484
    10. '('' → logprob: -13.751155853271484

Token 78: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.296811819076538
    2. '()' → logprob: -1.421811819076538
    3. 'def' → logprob: -1.421811819076538
    4. '<|end|>' → logprob: -1.921811819076538
    5. '   ' → logprob: -3.671811819076538
    6. '\n' → logprob: -3.796811819076538
    7. '(' → logprob: -4.171812057495117
    8. '()
' → logprob: -4.796812057495117
    9. 'elif' → logprob: -5.296812057495117
    10. '<|end|>' → logprob: -5.921812057495117

Token 79: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.043193519115448
    2. 'process' → logprob: -3.1681935787200928
    3. '_process' → logprob: -9.918193817138672
    4. ' ' → logprob: -10.043193817138672
    5. ' def' → logprob: -10.418193817138672
    6. '_' → logprob: -10.418193817138672
    7. '	process' → logprob: -12.043193817138672
    8. ' _' → logprob: -12.168193817138672
    9. '(process' → logprob: -12.168193817138672
    10. 'def' → logprob: -12.418193817138672

Token 80: '_cloud' (ID: 83382)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.7479572892189026
    2. '_r' → logprob: -0.8729572892189026
    3. '_cloud' → logprob: -2.247957229614258
    4. '_' → logprob: -5.747957229614258
    5. '_weather' → logprob: -10.872957229614258
    6. ' _' → logprob: -11.247957229614258
    7. 'cloud' → logprob: -11.497957229614258
    8. '_cl' → logprob: -11.497957229614258
    9. 's' → logprob: -11.747957229614258
    10. '__' → logprob: -11.872957229614258

Token 81: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.842555426876061e-06
    2. '():' → logprob: -13.000004768371582
    3. 's' → logprob: -14.000004768371582
    4. '   ' → logprob: -15.000004768371582
    5. '(y' → logprob: -15.000004768371582
    6. 'ly' → logprob: -15.375004768371582
    7. 'def' → logprob: -15.750004768371582
    8. '()' → logprob: -15.875004768371582
    9. ' y' → logprob: -15.875004768371582
    10. '_y' → logprob: -16.0000057220459

Token 82: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.8550976164988242e-05
    2. '():
' → logprob: -11.250018119812012
    3. ' ():' → logprob: -12.250018119812012
    4. '()' → logprob: -14.250018119812012
    5. '():
' → logprob: -18.875019073486328
    6. ':' → logprob: -18.875019073486328
    7. '():

' → logprob: -20.375019073486328
    8. '(' → logprob: -20.500019073486328
    9. ' ()' → logprob: -20.750019073486328
    10. '   ' → logprob: -20.875019073486328

Token 83: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06287136673927307
    2. '   ' → logprob: -3.4378714561462402
    3. ' print' → logprob: -3.5628714561462402
    4. 'process' → logprob: -8.437870979309082
    5. '```' → logprob: -9.687870979309082
    6. '	print' → logprob: -9.937870979309082
    7. ' process' → logprob: -10.562870979309082
    8. 'def' → logprob: -10.687870979309082
    9. 'if' → logprob: -11.062870979309082
    10. 'return' → logprob: -11.437870979309082

Token 84: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4356423616409302
    2. ' print' → logprob: -1.0606423616409302
    3. '   ' → logprob: -6.185642242431641
    4. ' process' → logprob: -6.185642242431641
    5. 'process' → logprob: -6.560642242431641
    6. '```' → logprob: -8.31064224243164
    7. '
' → logprob: -8.68564224243164
    8. '    
' → logprob: -8.93564224243164
    9. 'pr' → logprob: -9.06064224243164
    10. ' if' → logprob: -9.06064224243164

Token 85: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.1586160808801651
    2. '_s' → logprob: -2.533616065979004
    3. '('_' → logprob: -3.283616065979004
    4. '_' → logprob: -4.158616065979004
    5. ''_' → logprob: -4.533616065979004
    6. '('' → logprob: -7.033616065979004
    7. '(' → logprob: -7.158616065979004
    8. ''' → logprob: -7.658616065979004
    9. '_R' → logprob: -8.033616065979004
    10. ' _' → logprob: -8.658616065979004

Token 86: 'ain' (ID: 524)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6330420970916748
    2. 'ain' → logprob: -0.7580420970916748
    3. 'ai' → logprob: -7.883042335510254
    4. ''a' → logprob: -11.758042335510254
    5. 'airy' → logprob: -12.008042335510254
    6. 'aina' → logprob: -12.133042335510254
    7. ' a' → logprob: -12.133042335510254
    8. 'а' → logprob: -12.383042335510254
    9. 'aini' → logprob: -12.383042335510254
    10. 'aine' → logprob: -12.383042335510254

Token 87: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.896309739408025e-07
    2. 'y's' → logprob: -14.750000953674316
    3. ' y' → logprob: -15.750000953674316
    4. ''y' → logprob: -16.375
    5. '	y' → logprob: -16.5
    6. '```' → logprob: -17.75
    7. '‘y' → logprob: -18.0
    8. '(y' → logprob: -19.5
    9. 'ys' → logprob: -19.75
    10. ';y' → logprob: -19.75

Token 88: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18371549248695374
    2. '()

' → logprob: -1.8087154626846313
    3. '()
' → logprob: -5.683715343475342
    4. 'def' → logprob: -8.3087158203125
    5. '(' → logprob: -8.9337158203125
    6. '()\' → logprob: -9.8087158203125
    7. '(

' → logprob: -9.9337158203125
    8. '()


' → logprob: -10.8087158203125
    9. '(
' → logprob: -11.3087158203125
    10. '()

' → logprob: -11.5587158203125

Token 89: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8312570318812504e-05
    2. '
' → logprob: -11.375018119812012
    3. '```' → logprob: -12.750018119812012
    4. 'd' → logprob: -13.375018119812012
    5. '\' → logprob: -13.750018119812012
    6. 'ndef' → logprob: -14.125018119812012
    7. 'de' → logprob: -16.125019073486328
    8. '	def' → logprob: -16.375019073486328
    9. ' def' → logprob: -16.375019073486328
    10. '    
' → logprob: -17.000019073486328

Token 90: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.17978645861148834
    2. 'process' → logprob: -1.8047864437103271
    3. '_process' → logprob: -10.304786682128906
    4. '	process' → logprob: -12.429786682128906
    5. ' ' → logprob: -13.804786682128906
    6. '(process' → logprob: -14.054786682128906
    7. ' proces' → logprob: -14.679786682128906
    8. 'rocess' → logprob: -14.929786682128906
    9. ' _' → logprob: -15.054786682128906
    10. '_' → logprob: -15.054786682128906

Token 91: '_other' (ID: 70088)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.000286364956991747
    2. '_' → logprob: -8.750286102294922
    3. '_cloud' → logprob: -9.500286102294922
    4. '_r' → logprob: -9.875286102294922
    5. ' _' → logprob: -13.750286102294922
    6. 's' → logprob: -15.625286102294922
    7. '__' → logprob: -16.250286102294922
    8. '_weather' → logprob: -16.500286102294922
    9. '_
' → logprob: -16.750286102294922
    10. '_c' → logprob: -17.375286102294922

Token 92: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008292826823890209
    2. ' ():' → logprob: -7.625829219818115
    3. '():
' → logprob: -9.125829696655273
    4. 's' → logprob: -9.250829696655273
    5. '()' → logprob: -9.250829696655273
    6. '(s' → logprob: -10.625829696655273
    7. '(' → logprob: -11.375829696655273
    8. ' ()' → logprob: -13.625829696655273
    9. ':' → logprob: -13.625829696655273
    10. '():
' → logprob: -14.500829696655273

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09295114129781723
    2. 'print' → logprob: -2.7179510593414307
    3. ' print' → logprob: -3.8429510593414307
    4. '    
' → logprob: -7.46795129776001
    5. '    ' → logprob: -7.71795129776001
    6. '```' → logprob: -9.092950820922852
    7. '
' → logprob: -9.467950820922852
    8. '	print' → logprob: -10.467950820922852
    9. '       ' → logprob: -11.092950820922852
    10. ' ' → logprob: -11.217950820922852

Token 94: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07964040338993073
    2. ' print' → logprob: -2.5796403884887695
    3. '   ' → logprob: -7.5796403884887695
    4. 'pr' → logprob: -9.32964038848877
    5. 'p' → logprob: -10.45464038848877
    6. 'process' → logprob: -10.82964038848877
    7. '    ' → logprob: -11.07964038848877
    8. ' 
' → logprob: -11.07964038848877
    9. '    
' → logprob: -11.20464038848877
    10. ' ' → logprob: -11.45464038848877

Token 95: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.09029939770698547
    2. '_' → logprob: -2.465299367904663
    3. '('_' → logprob: -6.840299606323242
    4. '(' → logprob: -8.965299606323242
    5. '_(' → logprob: -9.465299606323242
    6. ''_' → logprob: -10.840299606323242
    7. '_S' → logprob: -10.965299606323242
    8. '('' → logprob: -11.965299606323242
    9. 's' → logprob: -11.965299606323242
    10. '("_' → logprob: -12.090299606323242

Token 96: 'unny' (ID: 128423)
  Prédit: 'unny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -1.723973582556937e-05
    2. 'un' → logprob: -11.000017166137695
    3. 'unn' → logprob: -15.375017166137695
    4. 'u' → logprob: -16.750017166137695
    5. 'unning' → logprob: -16.750017166137695
    6. 'unky' → logprob: -17.125017166137695
    7. 'uny' → logprob: -18.000017166137695
    8. '_un' → logprob: -18.000017166137695
    9. '	un' → logprob: -18.000017166137695
    10. 'ummy' → logprob: -18.250017166137695

Token 97: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009037716314196587
    2. '()
' → logprob: -5.384037494659424
    3. '(' → logprob: -5.509037494659424
    4. '(
' → logprob: -8.509037971496582
    5. '()

' → logprob: -9.009037971496582
    6. '()\' → logprob: -11.259037971496582
    7. '()`' → logprob: -12.384037971496582
    8. '(

' → logprob: -12.884037971496582
    9. ' ()' → logprob: -13.259037971496582
    10. '()<' → logprob: -13.384037971496582

Token 98: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00406842865049839
    2. 'd' → logprob: -6.004068374633789
    3. '
' → logprob: -6.879068374633789
    4. 's' → logprob: -8.004068374633789
    5. 'n' → logprob: -9.129068374633789
    6. '```' → logprob: -9.754068374633789
    7. '    
' → logprob: -11.504068374633789
    8. '\' → logprob: -11.879068374633789
    9. 'weather' → logprob: -11.879068374633789
    10. '  
' → logprob: -12.004068374633789

Token 99: ' handle' (ID: 5318)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.42932265996932983
    2. ' main' → logprob: -1.0543227195739746
    3. ' weather' → logprob: -7.929322719573975
    4. ' run' → logprob: -9.179322242736816
    5. 'process' → logprob: -10.429322242736816
    6. ' get' → logprob: -10.554322242736816
    7. '_process' → logprob: -11.304322242736816
    8. ' decide' → logprob: -11.429322242736816
    9. ' analyze' → logprob: -11.679322242736816
    10. ' check' → logprob: -11.804322242736816

Token 100: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1242883950471878
    2. '_weather' → logprob: -2.749288320541382
    3. '_input' → logprob: -3.374288320541382
    4. '_(' → logprob: -4.874288558959961
    5. '_day' → logprob: -5.249288558959961
    6. '_s' → logprob: -5.874288558959961
    7. '(' → logprob: -6.499288558959961
    8. '(_' → logprob: -7.874288558959961
    9. '_condition' → logprob: -8.749288558959961
    10. ' _' → logprob: -8.874288558959961

Token 101: '(s' (ID: 1858)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007838946767151356
    2. '(' → logprob: -4.882838726043701
    3. '()' → logprob: -9.50783920288086
    4. '(input' → logprob: -9.88283920288086
    5. ' ():' → logprob: -10.00783920288086
    6. '(s' → logprob: -10.63283920288086
    7. '_input' → logprob: -11.50783920288086
    8. '_' → logprob: -12.13283920288086
    9. '(user' → logprob: -12.38283920288086
    10. 's' → logprob: -13.00783920288086

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006502442411147058
    2. ')' → logprob: -7.500650405883789
    3. '):
' → logprob: -9.375650405883789
    4. ' ):' → logprob: -11.875650405883789
    5. '_' → logprob: -13.000650405883789
    6. ':' → logprob: -13.750650405883789
    7. 's' → logprob: -14.000650405883789
    8. '_input' → logprob: -14.875650405883789
    9. '   ' → logprob: -15.625650405883789
    10. ')：' → logprob: -16.12565040588379

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08276741206645966
    2. ' if' → logprob: -2.5827674865722656
    3. '
' → logprob: -6.582767486572266
    4. '    
' → logprob: -7.332767486572266
    5. ' 
' → logprob: -7.457767486572266
    6. ':' → logprob: -7.832767486572266
    7. '<|end|>' → logprob: -8.082767486572266
    8. ' ' → logprob: -8.957767486572266
    9. 'if' → logprob: -9.082767486572266
    10. '	if' → logprob: -9.582767486572266

Token 104: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16045553982257843
    2. 'if' (adapté à ' if') → logprob: -1.910455584526062
    3. '   ' → logprob: -8.410455703735352
    4. ' i' → logprob: -11.910455703735352
    5. 'i' → logprob: -13.410455703735352
    6. '	if' → logprob: -15.285455703735352
    7. '```' → logprob: -15.785455703735352
    8. ' ' → logprob: -16.28545570373535
    9. 's' → logprob: -17.16045570373535
    10. ' 
' → logprob: -17.53545570373535

Token 105: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0007541201775893569
    2. ' s' → logprob: -7.625754356384277
    3. 's' → logprob: -9.000754356384277
    4. ' ' → logprob: -9.625754356384277
    5. 'is' → logprob: -10.125754356384277
    6. '_' → logprob: -10.750754356384277
    7. ' ' → logprob: -11.375754356384277
    8. '_s' → logprob: -14.000754356384277
    9. ')' → logprob: -14.750754356384277
    10. ' (' → logprob: -14.875754356384277

Token 106: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0007068329723551869
    2. '_' → logprob: -7.375706672668457
    3. '_cloud' → logprob: -9.625706672668457
    4. ' _' → logprob: -11.625706672668457
    5. 's' → logprob: -12.875706672668457
    6. 'sun' → logprob: -14.750706672668457
    7. '(s' → logprob: -14.875706672668457
    8. '_(' → logprob: -15.250706672668457
    9. '_
' → logprob: -15.375706672668457
    10. 'Sunny' → logprob: -15.625706672668457

Token 107: 'unny' (ID: 128423)
  Prédit: 'unny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -0.0002627662615850568
    2. '_un' → logprob: -9.125263214111328
    3. '_s' → logprob: -9.375263214111328
    4. 'sun' → logprob: -9.875263214111328
    5. 'un' → logprob: -12.125263214111328
    6. '_' → logprob: -12.875263214111328
    7. 's' → logprob: -13.000263214111328
    8. 'uny' → logprob: -13.000263214111328
    9. 'Sunny' → logprob: -13.250263214111328
    10. '_n' → logprob: -13.750263214111328

Token 108: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0012626138050109148
    2. '(' → logprob: -7.251262664794922
    3. ' (' → logprob: -7.501262664794922
    4. ' ' → logprob: -16.626262664794922
    5. '(S' → logprob: -18.001262664794922
    6. '((' → logprob: -19.001262664794922
    7. '(
' → logprob: -19.126262664794922
    8. 's' → logprob: -19.376262664794922
    9. ')' → logprob: -19.376262664794922
    10. '(i' → logprob: -19.501262664794922

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00032747918157838285
    2. '):
' → logprob: -8.125327110290527
    3. ')' → logprob: -11.000327110290527
    4. ' ):' → logprob: -11.750327110290527
    5. ':' → logprob: -12.125327110290527
    6. '():' → logprob: -13.875327110290527
    7. '   ' → logprob: -15.250327110290527
    8. '):
' → logprob: -16.875328063964844
    9. '):

' → logprob: -17.125328063964844
    10. ''):' → logprob: -17.375328063964844

Token 110: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3423166871070862
    2. '       ' → logprob: -1.3423166275024414
    3. ':
' → logprob: -4.092316627502441
    4. ':' → logprob: -4.842316627502441
    5. '   ' → logprob: -6.842316627502441
    6. '<|end|>' → logprob: -7.467316627502441
    7. '():
' → logprob: -8.217316627502441
    8. '' → logprob: -8.342316627502441
    9. '\n' → logprob: -8.592316627502441
    10. ':return' → logprob: -8.717316627502441

Token 111: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.1269630640745163
    2. 'process' (adapté à ' process') → logprob: -2.1269631385803223
    3. '	process' → logprob: -11.751962661743164
    4. '_process' → logprob: -12.126962661743164
    5. '(process' → logprob: -12.251962661743164
    6. ' 
' → logprob: -12.501962661743164
    7. '
' → logprob: -12.751962661743164
    8. ' proces' → logprob: -13.001962661743164
    9. '   ' → logprob: -13.251962661743164
    10. '.process' → logprob: -13.251962661743164

Token 112: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -9.674858301877975e-05
    2. '_' → logprob: -9.250096321105957
    3. ' _' → logprob: -14.625096321105957
    4. '_
' → logprob: -16.625097274780273
    5. '_sn' → logprob: -17.250097274780273
    6. '_cloud' → logprob: -17.625097274780273
    7. '__' → logprob: -18.875097274780273
    8. 's' → logprob: -19.000097274780273
    9. '"_' → logprob: -19.125097274780273
    10. '```' → logprob: -19.375097274780273

Token 113: 'unny' (ID: 128423)
  Prédit: 'unny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -3.650518920039758e-06
    2. '_un' → logprob: -13.125003814697266
    3. 'un' → logprob: -13.625003814697266
    4. '	un' → logprob: -16.625003814697266
    5. 'sun' → logprob: -16.875003814697266
    6. 'unning' → logprob: -16.875003814697266
    7. 'uny' → logprob: -17.000003814697266
    8. '(un' → logprob: -17.125003814697266
    9. '-un' → logprob: -17.750003814697266
    10. '_' → logprob: -17.875003814697266

Token 114: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000912774819880724
    2. '()
' → logprob: -7.000912666320801
    3. '()

' → logprob: -14.3759126663208
    4. '()`' → logprob: -15.5009126663208
    5. '(' → logprob: -15.7509126663208
    6. ' ()' → logprob: -15.7509126663208
    7. '()
' → logprob: -16.250913619995117
    8. '()\' → logprob: -17.250913619995117
    9. '()"' → logprob: -17.375913619995117
    10. '():' → logprob: -18.000913619995117

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26568958163261414
    2. 'elif' → logprob: -1.6406896114349365
    3. ' elif' → logprob: -4.015689373016357
    4. '
' → logprob: -4.265689373016357
    5. '    
' → logprob: -5.390689373016357
    6. '	elif' → logprob: -6.640689373016357
    7. 'else' → logprob: -7.390689373016357
    8. ' else' → logprob: -7.515689373016357
    9. '\n' → logprob: -9.140689849853516
    10. '<|end|>' → logprob: -9.765689849853516

Token 116: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.6958935260772705
    2. 'elif' (adapté à ' elif') → logprob: -0.6958935260772705
    3. '   ' → logprob: -6.820893287658691
    4. ' else' → logprob: -6.945893287658691
    5. '	elif' → logprob: -7.945893287658691
    6. '
' → logprob: -8.695893287658691
    7. 'else' → logprob: -9.070893287658691
    8. 'el' → logprob: -11.195893287658691
    9. '    
' → logprob: -11.320893287658691
    10. ' ' → logprob: -11.820893287658691

Token 117: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -4.68022444692906e-05
    2. 'is' → logprob: -10.750046730041504
    3. ' ' → logprob: -10.750046730041504
    4. ' ' → logprob: -12.750046730041504
    5. 'space' → logprob: -14.500046730041504
    6. ' space' → logprob: -15.000046730041504
    7. '	is' → logprob: -17.25004768371582
    8. '(is' → logprob: -18.00004768371582
    9. 's' → logprob: -18.12504768371582
    10. '    ' → logprob: -18.25004768371582

Token 118: '_cloud' (ID: 83382)
  Prédit: '_cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cloud' → logprob: -4.1557283111615106e-05
    2. '_' → logprob: -10.750041961669922
    3. 'cloud' → logprob: -10.875041961669922
    4. '_cl' → logprob: -14.500041961669922
    5. '_s' → logprob: -15.500041961669922
    6. '_c' → logprob: -15.500041961669922
    7. ' _' → logprob: -16.875041961669922
    8. 'Cloud' → logprob: -17.625041961669922
    9. '_
' → logprob: -18.125041961669922
    10. 's' → logprob: -18.625041961669922

Token 119: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.034592388459714e-06
    2. 's' → logprob: -13.000005722045898
    3. 'ly' → logprob: -13.875005722045898
    4. 'cloud' → logprob: -14.000005722045898
    5. 'ycl' → logprob: -14.625005722045898
    6. ' y' → logprob: -14.625005722045898
    7. '(y' → logprob: -15.250005722045898
    8. '_cloud' → logprob: -15.875005722045898
    9. 'yl' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.2500057220459

Token 120: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.7835754988482222e-05
    2. '(' → logprob: -11.000018119812012
    3. ' (' → logprob: -13.750018119812012
    4. 's' → logprob: -18.875017166137695
    5. ' ' → logprob: -19.000017166137695
    6. ')' → logprob: -19.625017166137695
    7. '<|end|>' → logprob: -20.375017166137695
    8. '(
' → logprob: -21.250017166137695
    9. '(S' → logprob: -21.625017166137695
    10. ''s' → logprob: -21.750017166137695

Token 121: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6518841981887817
    2. '(s' → logprob: -0.9018841981887817
    3. '):' → logprob: -2.651884078979492
    4. 's' → logprob: -6.526884078979492
    5. ')' → logprob: -7.276884078979492
    6. '   ' → logprob: -9.276884078979492
    7. ' s' → logprob: -9.401884078979492
    8. '):

' → logprob: -9.651884078979492
    9. ' (' → logprob: -10.026884078979492
    10. ' ):
' → logprob: -10.276884078979492

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08752601593732834
    2. ' process' → logprob: -2.7125260829925537
    3. 'process' → logprob: -4.337525844573975
    4. ':' → logprob: -6.587525844573975
    5. ':
' → logprob: -7.087525844573975
    6. '   ' → logprob: -7.462525844573975
    7. 'handle' → logprob: -7.962525844573975
    8. '(process' → logprob: -8.462526321411133
    9. ' True' → logprob: -8.587526321411133
    10. ' handle' → logprob: -8.712526321411133

Token 123: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.16025246679782867
    2. ' process' → logprob: -1.9102524518966675
    3. '       ' → logprob: -10.660252571105957
    4. '	process' → logprob: -12.660252571105957
    5. '(process' → logprob: -14.535252571105957
    6. '
' → logprob: -15.160252571105957
    7. 'proces' → logprob: -15.535252571105957
    8. '.process' → logprob: -15.535252571105957
    9. '   ' → logprob: -15.660252571105957
    10. '_process' → logprob: -15.785252571105957

Token 124: '_cloud' (ID: 83382)
  Prédit: '_cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cloud' → logprob: -0.0008048642775975168
    2. '_other' → logprob: -7.375804901123047
    3. '_' → logprob: -9.250804901123047
    4. '_cl' → logprob: -9.750804901123047
    5. '_c' → logprob: -10.750804901123047
    6. '_
' → logprob: -13.875804901123047
    7. 'cloud' → logprob: -14.250804901123047
    8. '
' → logprob: -15.375804901123047
    9. ' _' → logprob: -15.875804901123047
    10. '__' → logprob: -16.000804901123047

Token 125: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1875571544806007e-05
    2. 'ly' → logprob: -11.750011444091797
    3. ' y' → logprob: -13.875011444091797
    4. '   ' → logprob: -14.375011444091797
    5. 'yd' → logprob: -14.750011444091797
    6. 't' → logprob: -15.125011444091797
    7. 'yl' → logprob: -15.500011444091797
    8. 'ent' → logprob: -15.750011444091797
    9. '_y' → logprob: -16.000011444091797
    10. 'yt' → logprob: -16.375011444091797

Token 126: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.7707634568214417
    2. '   ' → logprob: -1.1457633972167969
    3. '()' → logprob: -1.5207633972167969
    4. '
' → logprob: -8.270763397216797
    5. '():
' → logprob: -8.395763397216797
    6. 'else' → logprob: -8.770763397216797
    7. ':
' → logprob: -9.145763397216797
    8. ' else' → logprob: -10.395763397216797
    9. ')
' → logprob: -11.895763397216797
    10. ')' → logprob: -11.895763397216797

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025672955438494682
    2. 'else' → logprob: -3.7756729125976562
    3. ' else' → logprob: -6.025672912597656
    4. '	else' → logprob: -11.900672912597656
    5. '```' → logprob: -14.150672912597656
    6. '_else' → logprob: -14.275672912597656
    7. 'elif' → logprob: -15.525672912597656
    8. '    
' → logprob: -16.275672912597656
    9. 'Else' → logprob: -16.525672912597656
    10. '
' → logprob: -17.150672912597656

Token 128: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4071900248527527
    2. ' else' → logprob: -1.1571900844573975
    3. '   ' → logprob: -3.9071900844573975
    4. '	else' → logprob: -11.157190322875977
    5. '_else' → logprob: -13.282190322875977
    6. ' ' → logprob: -14.532190322875977
    7. '```' → logprob: -15.032190322875977
    8. 'e' → logprob: -16.532190322875977
    9. '  ' → logprob: -17.032190322875977
    10. '
' → logprob: -17.032190322875977

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007609108928591013
    2. ':
' → logprob: -4.882608890533447
    3. ' :' → logprob: -13.382609367370605
    4. ' :
' → logprob: -14.507609367370605
    5. ':
' → logprob: -14.757609367370605
    6. ':return' → logprob: -15.507609367370605
    7. ':

' → logprob: -15.882609367370605
    8. '   ' → logprob: -15.882609367370605
    9. ':def' → logprob: -16.13260841369629
    10. '():
' → logprob: -18.50760841369629

Token 130: '       ' (ID: 309)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.2199113368988037
    2. 'process' → logprob: -1.7199113368988037
    3. '       ' → logprob: -4.594911575317383
    4. '   ' → logprob: -4.844911575317383
    5. '	process' → logprob: -8.219911575317383
    6. '_process' → logprob: -10.719911575317383
    7. '    ' → logprob: -10.844911575317383
    8. '(process' → logprob: -11.094911575317383
    9. ' ' → logprob: -11.844911575317383
    10. ' proces' → logprob: -11.969911575317383

Token 131: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.12692894041538239
    2. ' process' → logprob: -2.1269290447235107
    3. '	process' → logprob: -15.12692928314209
    4. '   ' → logprob: -15.50192928314209
    5. 'proces' → logprob: -15.75192928314209
    6. ' proces' → logprob: -15.75192928314209
    7. '       ' → logprob: -16.376928329467773
    8. '_process' → logprob: -17.251928329467773
    9. '(process' → logprob: -17.751928329467773
    10. ' ' → logprob: -18.251928329467773

Token 132: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.75
    3. '_o' → logprob: -17.5
    4. '_or' → logprob: -18.0
    5. 'other' → logprob: -18.125
    6. '_else' → logprob: -18.75
    7. '_OTHER' → logprob: -19.375
    8. ' _' → logprob: -20.125
    9. '```' → logprob: -20.125
    10. 'Other' → logprob: -20.5

Token 133: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0020180940628051758
    2. '()
' → logprob: -6.252017974853516
    3. '()

' → logprob: -10.002017974853516
    4. '(' → logprob: -10.752017974853516
    5. '(s' → logprob: -11.127017974853516
    6. '()\' → logprob: -12.252017974853516
    7. '(
' → logprob: -14.002017974853516
    8. '()
' → logprob: -14.127017974853516
    9. '()`' → logprob: -14.502017974853516
    10. '()<' → logprob: -14.877017974853516

Token 134: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.246996209025383
    2. 'if' → logprob: -2.1219961643218994
    3. 'def' → logprob: -2.3719961643218994
    4. 'handle' → logprob: -5.3719964027404785
    5. 'print' → logprob: -7.9969964027404785
    6. 'input' → logprob: -8.12199592590332
    7. 'while' → logprob: -8.12199592590332
    8. '
' → logprob: -9.37199592590332
    9. 'for' → logprob: -10.49699592590332
    10. 'user' → logprob: -10.62199592590332

Token 135: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.005235648714005947
    2. 'main' → logprob: -5.25523567199707
    3. '_main' → logprob: -13.88023567199707
    4. ' run' → logprob: -14.00523567199707
    5. '	main' → logprob: -16.63023567199707
    6. 'run' → logprob: -18.38023567199707
    7. ' process' → logprob: -19.13023567199707
    8. ' ma' → logprob: -19.25523567199707
    9. ' _' → logprob: -19.38023567199707
    10. ' mai' → logprob: -19.75523567199707

Token 136: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011570196511456743
    2. '():
' → logprob: -9.125115394592285
    3. ' ():' → logprob: -12.000115394592285
    4. '()' → logprob: -14.500115394592285
    5. '():
' → logprob: -16.5001163482666
    6. '_' → logprob: -17.5001163482666
    7. '(' → logprob: -17.5001163482666
    8. ':' → logprob: -18.8751163482666
    9. '()>' → logprob: -19.0001163482666
    10. '():

' → logprob: -19.6251163482666

Token 137: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.15332351624965668
    2. '   ' → logprob: -2.1533234119415283
    3. 's' → logprob: -3.6533234119415283
    4. '	s' → logprob: -9.27832317352295
    5. ' input' → logprob: -11.77832317352295
    6. '    ' → logprob: -11.77832317352295
    7. 'input' → logprob: -11.90332317352295
    8. '(s' → logprob: -12.02832317352295
    9. '    
' → logprob: -12.02832317352295
    10. '   ' → logprob: -12.27832317352295

Token 138: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5238611698150635
    2. 's' (adapté à ' s') → logprob: -0.8988611698150635
    3. '   ' → logprob: -7.273860931396484
    4. 'input' → logprob: -10.898860931396484
    5. ' input' → logprob: -11.648860931396484
    6. '	s' → logprob: -12.273860931396484
    7. ' user' → logprob: -13.273860931396484
    8. 'user' → logprob: -13.773860931396484
    9. '```' → logprob: -13.898860931396484
    10. '    
' → logprob: -14.023860931396484

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029758475720882416
    2. '=' → logprob: -3.5297584533691406
    3. ' ' → logprob: -12.52975845336914
    4. '_' → logprob: -13.15475845336914
    5. 's' → logprob: -14.77975845336914
    6. ',' → logprob: -14.77975845336914
    7. '  ' → logprob: -15.02975845336914
    8. ')' → logprob: -15.02975845336914
    9. '=input' → logprob: -15.15475845336914
    10. ' ' → logprob: -15.27975845336914

Token 140: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.20141392946243286
    2. 'get' → logprob: -1.701413869857788
    3. '	get' → logprob: -14.701414108276367
    4. '(get' → logprob: -15.951414108276367
    5. '_get' → logprob: -17.326414108276367
    6. '=get' → logprob: -17.701414108276367
    7. '[get' → logprob: -18.951414108276367
    8. ' ' → logprob: -19.076414108276367
    9. ')get' → logprob: -19.201414108276367
    10. '.get' → logprob: -19.201414108276367

Token 141: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -12.125006675720215
    3. 'input' → logprob: -14.500006675720215
    4. '_in' → logprob: -15.250006675720215
    5. '_inputs' → logprob: -15.750006675720215
    6. '_user' → logprob: -16.87500762939453
    7. '_Input' → logprob: -16.87500762939453
    8. '_s' → logprob: -17.00000762939453
    9. ' _' → logprob: -17.12500762939453
    10. '_output' → logprob: -17.12500762939453

Token 142: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.7146746763028204e-05
    2. '()
' → logprob: -10.25003719329834
    3. ' ()' → logprob: -14.37503719329834
    4. '()

' → logprob: -14.62503719329834
    5. '(' → logprob: -15.75003719329834
    6. '()`' → logprob: -16.125036239624023
    7. '`()' → logprob: -16.500036239624023
    8. '()"' → logprob: -16.625036239624023
    9. '()(' → logprob: -17.125036239624023
    10. '|()
' → logprob: -17.125036239624023

Token 143: '   ' (ID: 271)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.5903295278549194
    2. '   ' → logprob: -0.8403295278549194
    3. '
' → logprob: -4.715329647064209
    4. '	handle' → logprob: -5.715329647064209
    5. ' handle' → logprob: -6.465329647064209
    6. '_handle' → logprob: -8.71532917022705
    7. '    
' → logprob: -8.96532917022705
    8. '(handle' → logprob: -9.46532917022705
    9. '.handle' → logprob: -9.59032917022705
    10. ' ' → logprob: -11.21532917022705

Token 144: ' handle' (ID: 5318)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' (adapté à ' handle') → logprob: -0.0002647927321959287
    2. ' handle' → logprob: -8.250265121459961
    3. '   ' → logprob: -12.875265121459961
    4. '	handle' → logprob: -14.750265121459961
    5. '
' → logprob: -15.000265121459961
    6. '_handle' → logprob: -16.37526512145996
    7. '.handle' → logprob: -16.87526512145996
    8. ' ' → logprob: -17.62526512145996
    9. '(handle' → logprob: -18.25026512145996
    10. 'handler' → logprob: -18.75026512145996

Token 145: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00020592445798683912
    2. '_' → logprob: -8.500205993652344
    3. '_in' → logprob: -13.375205993652344
    4. '_inputs' → logprob: -15.500205993652344
    5. '_Input' → logprob: -15.750205993652344
    6. '_s' → logprob: -16.125205993652344
    7. ' _' → logprob: -16.125205993652344
    8. '_output' → logprob: -16.500205993652344
    9. '_
' → logprob: -16.875205993652344
    10. '_handle' → logprob: -16.875205993652344

Token 146: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004089204594492912
    2. '(' → logprob: -5.50408935546875
    3. ' (' → logprob: -11.50408935546875
    4. '(
' → logprob: -14.37908935546875
    5. 's' → logprob: -16.62908935546875
    6. '(ss' → logprob: -17.12908935546875
    7. '(

' → logprob: -18.62908935546875
    8. ' ' → logprob: -18.62908935546875
    9. '('' → logprob: -19.12908935546875
    10. '((' → logprob: -19.25408935546875

Token 147: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4974866644479334e-05
    2. ')
' → logprob: -11.125015258789062
    3. ' )' → logprob: -16.000015258789062
    4. ')

' → logprob: -17.000015258789062
    5. '())' → logprob: -17.250015258789062
    6. '()' → logprob: -17.500015258789062
    7. ')`' → logprob: -19.375015258789062
    8. '))' → logprob: -19.500015258789062
    9. ')#' → logprob: -19.625015258789062
    10. ')
' → logprob: -20.000015258789062

Token 148: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7267530560493469
    2. '
' → logprob: -1.1017529964447021
    3. '\n' → logprob: -2.351752996444702
    4. 'if' → logprob: -2.601752996444702
    5. '<|end|>' → logprob: -5.226753234863281
    6. '#' → logprob: -5.726753234863281
    7. ' main' → logprob: -6.476753234863281
    8. '\' → logprob: -6.851753234863281
    9. '' → logprob: -6.976753234863281
    10. '   ' → logprob: -7.601753234863281

Token 149: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004921489744447172
    2. '(' → logprob: -7.875492095947266
    3. '()
' → logprob: -9.125492095947266
    4. '(
' → logprob: -13.875492095947266
    5. '()

' → logprob: -14.000492095947266
    6. ' ()' → logprob: -14.625492095947266
    7. '()`' → logprob: -15.625492095947266
    8. '();' → logprob: -15.750492095947266
    9. '()<' → logprob: -16.125492095947266
    10. '()
' → logprob: -16.250492095947266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 147
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 90
Tokens correctement prédits (top 10): 130
Précision stricte (1ère position): 54.42%
Précision adaptée (1ère position): 61.22%
Précision (top 10): 88.44%
================================================================================
