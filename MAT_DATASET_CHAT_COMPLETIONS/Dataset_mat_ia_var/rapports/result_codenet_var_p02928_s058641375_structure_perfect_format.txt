================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter

R = lambda: map(int, input().split())
n, k = R()
a = list(R())
r = k * sum(a[i] < a[j] for i in range(n) for j in range(i))
r += k * (k - 1) // 2 * (n * (n - 1) // 2 - sum(x * (x - 1) // 2 for x in Counter(a).values()))
print(r % (10 ** 9 + 7))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.542423165636137e-05
    2. '\(' → logprob: -10.000085830688477
    3. '.' → logprob: -10.875085830688477
    4. '(
' → logprob: -12.625085830688477
    5. '\' → logprob: -12.750085830688477
    6. ' (' → logprob: -12.875085830688477
    7. 'a' → logprob: -13.125085830688477
    8. '()' → logprob: -13.250085830688477
    9. 'newline' → logprob: -13.625085830688477
    10. '```' → logprob: -13.750085830688477

Token 5: 'R' (ID: 49)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02473033405840397
    2. 'a' → logprob: -4.149730205535889
    3. 'newline' → logprob: -6.274730205535889
    4. '.' → logprob: -6.774730205535889
    5. '\' → logprob: -6.899730205535889
    6. '\n' → logprob: -7.149730205535889
    7. '```' → logprob: -7.274730205535889
    8. '\(' → logprob: -7.399730205535889
    9. 'c' → logprob: -7.774730205535889
    10. 'import' → logprob: -8.274730682373047

Token 6: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15648627281188965
    2. 'e' → logprob: -2.1564862728118896
    3. 'A' → logprob: -4.156486511230469
    4. '=' → logprob: -5.906486511230469
    5. '(' → logprob: -6.031486511230469
    6. ' =' → logprob: -6.281486511230469
    7. 'E' → logprob: -6.281486511230469
    8. 'an' → logprob: -6.531486511230469
    9. '[' → logprob: -7.406486511230469
    10. '(a' → logprob: -7.656486511230469

Token 7: ' lambda' (ID: 27871)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.05437277629971504
    2. 'Counter' → logprob: -3.304372787475586
    3. ' [' → logprob: -4.929372787475586
    4. ' []' → logprob: -5.679372787475586
    5. '[' → logprob: -6.179372787475586
    6. '"' → logprob: -6.554372787475586
    7. ' "' → logprob: -7.679372787475586
    8. ''' → logprob: -8.054372787475586
    9. ' ' → logprob: -8.429372787475586
    10. ' '' → logprob: -8.554372787475586

Token 8: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.019549764692783356
    2. ' s' → logprob: -5.01954984664917
    3. 'x' → logprob: -5.14454984664917
    4. ' lst' → logprob: -5.89454984664917
    5. ' ' → logprob: -6.39454984664917
    6. ' a' → logprob: -6.51954984664917
    7. ' t' → logprob: -8.144549369812012
    8. ' l' → logprob: -9.144549369812012
    9. ' items' → logprob: -9.394549369812012
    10. ' iterable' → logprob: -9.769549369812012

Token 9: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.2495118379592896
    2. ' input' → logprob: -1.2495118379592896
    3. '[]' → logprob: -2.37451171875
    4. 'int' → logprob: -2.62451171875
    5. ' list' → logprob: -2.62451171875
    6. 'list' → logprob: -2.74951171875
    7. ' Counter' → logprob: -2.99951171875
    8. ' []' → logprob: -3.87451171875
    9. 'Counter' → logprob: -3.99951171875
    10. ' int' → logprob: -3.99951171875

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2073776125907898
    2. '(' → logprob: -1.8323776721954346
    3. '<|end|>' → logprob: -3.7073776721954346
    4. '(lambda' → logprob: -6.8323774337768555
    5. '(str' → logprob: -7.4573774337768555
    6. 'int' → logprob: -7.7073774337768555
    7. '(
' → logprob: -8.957377433776855
    8. '[int' → logprob: -9.707377433776855
    9. '(input' → logprob: -9.832377433776855
    10. '(None' → logprob: -10.082377433776855

Token 11: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6208474636077881
    2. '(input' → logprob: -1.620847463607788
    3. ')' → logprob: -1.745847463607788
    4. ' input' → logprob: -3.120847463607788
    5. '(' → logprob: -4.120847702026367
    6. ',' → logprob: -4.870847702026367
    7. '())' → logprob: -5.495847702026367
    8. '(stdin' → logprob: -5.620847702026367
    9. ',input' → logprob: -5.995847702026367
    10. ' ' → logprob: -6.495847702026367

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08898810297250748
    2. ' input' → logprob: -2.4639880657196045
    3. ')' → logprob: -10.838988304138184
    4. '(input' → logprob: -11.088988304138184
    5. 'open' → logprob: -12.213988304138184
    6. 'raw' → logprob: -12.963988304138184
    7. '=input' → logprob: -13.338988304138184
    8. ' ' → logprob: -13.838988304138184
    9. ',input' → logprob: -14.338988304138184
    10. ' open' → logprob: -14.463988304138184

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7172220349311829
    2. '()' → logprob: -0.8422220349311829
    3. '().' → logprob: -2.592221975326538
    4. '(' → logprob: -5.717222213745117
    5. ')' → logprob: -7.342222213745117
    6. '('' → logprob: -7.842222213745117
    7. '`()' → logprob: -7.842222213745117
    8. '()))' → logprob: -7.967222213745117
    9. '());' → logprob: -8.217222213745117
    10. '();)' → logprob: -8.592222213745117

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00041494169272482395
    2. 'strip' → logprob: -7.875414848327637
    3. ' split' → logprob: -11.250414848327637
    4. 'rstrip' → logprob: -11.250414848327637
    5. ')' → logprob: -12.375414848327637
    6. 'read' → logprob: -12.625414848327637
    7. 'spl' → logprob: -14.375414848327637
    8. '(split' → logprob: -14.750414848327637
    9. 's' → logprob: -16.125415802001953
    10. ' readline' → logprob: -16.875415802001953

Token 15: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04621000960469246
    2. ')' → logprob: -3.2962100505828857
    3. '()))' → logprob: -5.421209812164307
    4. '))' → logprob: -6.296209812164307
    5. '()' → logprob: -6.296209812164307
    6. ' ())' → logprob: -12.171210289001465
    7. '`)' → logprob: -12.671210289001465
    8. '())
' → logprob: -12.796210289001465
    9. '(' → logprob: -12.796210289001465
    10. '()),' → logprob: -13.046210289001465

Token 16: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4934791624546051
    2. 'a' → logprob: -1.2434791326522827
    3. '(' → logprob: -2.9934792518615723
    4. 'def' → logprob: -4.618479251861572
    5. 'for' → logprob: -4.993479251861572
    6. 'x' → logprob: -5.243479251861572
    7. 'A' → logprob: -5.618479251861572
    8. 'data' → logprob: -5.868479251861572
    9. 's' → logprob: -5.993479251861572
    10. '()' → logprob: -6.118479251861572

Token 17: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7014051675796509
    2. ' =' → logprob: -1.7014051675796509
    3. ',' → logprob: -1.8264051675796509
    4. ')' → logprob: -2.3264050483703613
    5. '[' → logprob: -3.2014050483703613
    6. '.' → logprob: -5.201405048370361
    7. '_' → logprob: -5.451405048370361
    8. '(' → logprob: -5.701405048370361
    9. ' ' → logprob: -5.951405048370361
    10. 's' → logprob: -6.701405048370361

Token 18: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4556814432144165
    2. 'k' → logprob: -1.0806814432144165
    3. ' m' → logprob: -4.705681324005127
    4. ' k' → logprob: -4.955681324005127
    5. 'q' → logprob: -5.330681324005127
    6. '*m' → logprob: -6.330681324005127
    7. '*k' → logprob: -6.580681324005127
    8. '*' → logprob: -7.830681324005127
    9. 'r' → logprob: -7.830681324005127
    10. 'a' → logprob: -7.955681324005127

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5787753462791443
    2. ' =' → logprob: -0.8287753462791443
    3. ',' → logprob: -5.953775405883789
    4. ')' → logprob: -8.828775405883789
    5. '<|end|>' → logprob: -9.703775405883789
    6. '[' → logprob: -12.078775405883789
    7. ')=' → logprob: -12.578775405883789
    8. ' ' → logprob: -12.703775405883789
    9. '<|end|>' → logprob: -12.828775405883789
    10. ' ,' → logprob: -12.828775405883789

Token 20: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6683446168899536
    2. ' R' → logprob: -0.7933446168899536
    3. 'next' → logprob: -4.043344497680664
    4. ' next' → logprob: -4.043344497680664
    5. ' ' → logprob: -10.918344497680664
    6. 'map' → logprob: -11.668344497680664
    7. 'r' → logprob: -12.918344497680664
    8. ' map' → logprob: -13.168344497680664
    9. 'list' → logprob: -13.793344497680664
    10. 'tuple' → logprob: -13.918344497680664

Token 21: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5943813920021057
    2. '<|end|>' → logprob: -1.344381332397461
    3. '\n' → logprob: -2.719381332397461
    4. '
' → logprob: -3.469381332397461
    5. ')' → logprob: -3.719381332397461
    6. '\' → logprob: -4.219381332397461
    7. '<|end|>' → logprob: -4.469381332397461
    8. '```' → logprob: -4.969381332397461
    9. '#' → logprob: -5.094381332397461
    10. '[' → logprob: -5.469381332397461

Token 22: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6331064701080322
    2. '
' → logprob: -1.8831064701080322
    3. '<|end|>' → logprob: -2.2581064701080322
    4. 'for' → logprob: -2.5081064701080322
    5. 's' → logprob: -2.8831064701080322
    6. 'arr' → logprob: -3.1331064701080322
    7. ')' → logprob: -3.1331064701080322
    8. 'data' → logprob: -3.3831064701080322
    9. ' 
' → logprob: -3.6331064701080322
    10. ' ' → logprob: -4.133106231689453

Token 23: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8256289958953857
    2. '[' → logprob: -1.4506289958953857
    3. ' =' → logprob: -1.8256289958953857
    4. '=' → logprob: -2.2006289958953857
    5. '[:]' → logprob: -3.3256289958953857
    6. '[:' → logprob: -5.075629234313965
    7. '.count' → logprob: -5.700629234313965
    8. ')' → logprob: -5.825629234313965
    9. ' ' → logprob: -6.450629234313965
    10. '[]' → logprob: -7.200629234313965

Token 24: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.48045751452445984
    2. ' list' → logprob: -1.6054575443267822
    3. 'Counter' → logprob: -2.3554575443267822
    4. ' Counter' → logprob: -2.4804575443267822
    5. '[' → logprob: -6.980457305908203
    6. '[]' → logprob: -7.355457305908203
    7. 'List' → logprob: -8.605457305908203
    8. 'R' → logprob: -9.230457305908203
    9. ' [' → logprob: -9.605457305908203
    10. 'counter' → logprob: -10.105457305908203

Token 25: '(R' (ID: 4092)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.045730724930763245
    2. '(map' → logprob: -3.1707308292388916
    3. '(range' → logprob: -6.5457305908203125
    4. '(a' → logprob: -7.2957305908203125
    5. '(C' → logprob: -8.420730590820312
    6. '(int' → logprob: -8.795730590820312
    7. '(R' → logprob: -9.545730590820312
    8. '(
' → logprob: -10.045730590820312
    9. '(input' → logprob: -10.670730590820312
    10. '(

' → logprob: -11.170730590820312

Token 26: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004289830569177866
    2. ')' → logprob: -5.504289627075195
    3. '()' → logprob: -8.629289627075195
    4. '()))' → logprob: -10.754289627075195
    5. '))' → logprob: -11.754289627075195
    6. '())
' → logprob: -13.504289627075195
    7. ' ())' → logprob: -13.879289627075195
    8. '(' → logprob: -14.379289627075195
    9. '();)' → logprob: -15.879289627075195
    10. ' )' → logprob: -16.254289627075195

Token 27: 'r' (ID: 81)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7022966146469116
    2. 'a' → logprob: -0.9522966146469116
    3. 'b' → logprob: -3.202296733856201
    4. '
' → logprob: -3.452296733856201
    5. 'd' → logprob: -4.702296733856201
    6. 's' → logprob: -4.827296733856201
    7. 'counter' → logprob: -5.577296733856201
    8. 'cnt' → logprob: -5.577296733856201
    9. 'for' → logprob: -5.827296733856201
    10. 'count' → logprob: -6.077296733856201

Token 28: ' =' (ID: 314)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3299786448478699
    2. ' =' → logprob: -2.0799787044525146
    3. '=' → logprob: -2.2049787044525146
    4. 'a' → logprob: -4.2049784660339355
    5. 'e' → logprob: -4.5799784660339355
    6. 'ange' → logprob: -4.9549784660339355
    7. 'ef' → logprob: -6.7049784660339355
    8. '[' → logprob: -6.8299784660339355
    9. 'r' → logprob: -7.0799784660339355
    10. '.append' → logprob: -7.2049784660339355

Token 29: ' k' (ID: 372)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.4952681362628937
    2. ' Counter' → logprob: -0.9952681064605713
    3. '[]' → logprob: -5.37026834487915
    4. '0' → logprob: -5.62026834487915
    5. ' sum' → logprob: -5.87026834487915
    6. '[' → logprob: -5.87026834487915
    7. 'sum' → logprob: -6.12026834487915
    8. ' ' → logprob: -7.24526834487915
    9. ' []' → logprob: -7.49526834487915
    10. ' [' → logprob: -7.49526834487915

Token 30: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7363733649253845
    2. '-' → logprob: -1.2363734245300293
    3. ' ' → logprob: -2.1113734245300293
    4. '%' → logprob: -3.1113734245300293
    5. ' for' → logprob: -4.236373424530029
    6. 'for' → logprob: -4.736373424530029
    7. '<|end|>' → logprob: -4.736373424530029
    8. ')' → logprob: -5.236373424530029
    9. '>' → logprob: -5.486373424530029
    10. ' %' → logprob: -5.736373424530029

Token 31: ' sum' (ID: 4215)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8217228055000305
    2. 'max' → logprob: -2.0717227458953857
    3. '(max' → logprob: -2.1967227458953857
    4. 'n' → logprob: -2.4467227458953857
    5. ' (' → logprob: -3.4467227458953857
    6. '(k' → logprob: -3.5717227458953857
    7. '(' → logprob: -3.6967227458953857
    8. '[' → logprob: -3.9467227458953857
    9. 'a' → logprob: -3.9467227458953857
    10. '2' → logprob: -3.9467227458953857

Token 32: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2427424192428589
    2. '(C' → logprob: -1.7427424192428589
    3. '(' → logprob: -3.4927425384521484
    4. '(lambda' → logprob: -5.867742538452148
    5. '((' → logprob: -6.117742538452148
    6. '(min' → logprob: -6.367742538452148
    7. '([' → logprob: -7.242742538452148
    8. '(abs' → logprob: -7.242742538452148
    9. '(x' → logprob: -7.742742538452148
    10. 'a' → logprob: -7.742742538452148

Token 33: '[i' (ID: 1768)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03615119680762291
    2. ' )' → logprob: -4.41115140914917
    3. ' -' → logprob: -4.91115140914917
    4. '[' → logprob: -4.91115140914917
    5. '[i' → logprob: -6.53615140914917
    6. '-' → logprob: -6.78615140914917
    7. '[a' → logprob: -6.91115140914917
    8. '(' → logprob: -7.03615140914917
    9. ' //' → logprob: -7.28615140914917
    10. ' /' → logprob: -7.53615140914917

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09681876748800278
    2. '%' → logprob: -3.846818685531616
    3. ':i' → logprob: -4.221818923950195
    4. '])' → logprob: -4.596818923950195
    5. ']==' → logprob: -4.596818923950195
    6. '-' → logprob: -4.846818923950195
    7. ':' → logprob: -5.221818923950195
    8. '%i' → logprob: -5.971818923950195
    9. '==' → logprob: -6.096818923950195
    10. ':]' → logprob: -6.471818923950195

Token 35: ' <' (ID: 464)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4156503677368164
    2. ')' → logprob: -1.7906503677368164
    3. '==' → logprob: -2.0406503677368164
    4. '[i' → logprob: -2.2906503677368164
    5. ' ==' → logprob: -3.1656503677368164
    6. ' i' → logprob: -3.4156503677368164
    7. '])' → logprob: -3.7906503677368164
    8. '(i' → logprob: -4.040650367736816
    9. '!=' → logprob: -4.040650367736816
    10. ']' → logprob: -4.165650367736816

Token 36: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.308294415473938
    2. ' a' → logprob: -1.808294415473938
    3. 'k' → logprob: -3.0582942962646484
    4. ' k' → logprob: -3.6832942962646484
    5. 'i' → logprob: -5.308294296264648
    6. ' ' → logprob: -5.558294296264648
    7. '=' → logprob: -5.558294296264648
    8. ' n' → logprob: -5.683294296264648
    9. 'n' → logprob: -5.808294296264648
    10. ' i' → logprob: -5.808294296264648

Token 37: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4559361934661865
    2. '[k' → logprob: -1.2059361934661865
    3. '[n' → logprob: -3.3309361934661865
    4. '[' → logprob: -3.9559361934661865
    5. '[-' → logprob: -5.455936431884766
    6. '[j' → logprob: -5.455936431884766
    7. 'k' → logprob: -7.330936431884766
    8. '[r' → logprob: -7.455936431884766
    9. ')' → logprob: -7.955936431884766
    10. '0' → logprob: -8.330936431884766

Token 38: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.470210462808609
    2. 'for' → logprob: -1.0952104330062866
    3. ']' → logprob: -3.970210552215576
    4. ')' → logprob: -4.470210552215576
    5. ' ' → logprob: -4.845210552215576
    6. '])' → logprob: -7.220210552215576
    7. '+' → logprob: -7.845210552215576
    8. ' and' → logprob: -7.970210552215576
    9. 'and' → logprob: -8.345210075378418
    10. '  ' → logprob: -9.345210075378418

Token 39: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20568840205669403
    2. 'for' → logprob: -1.7056883573532104
    3. ' ' → logprob: -5.9556884765625
    4. '+' → logprob: -7.8306884765625
    5. ' or' → logprob: -7.9556884765625
    6. ')' → logprob: -8.4556884765625
    7. ' and' → logprob: -8.4556884765625
    8. 'and' → logprob: -9.2056884765625
    9. '  ' → logprob: -9.4556884765625
    10. 'or' → logprob: -9.4556884765625

Token 40: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026760827749967575
    2. 'range' → logprob: -3.9017608165740967
    3. ' j' → logprob: -5.651761054992676
    4. 'j' → logprob: -6.651761054992676
    5. ' i' → logprob: -6.776761054992676
    6. 'i' → logprob: -8.651761054992676
    7. ' ' → logprob: -10.401761054992676
    8. ' xrange' → logprob: -10.901761054992676
    9. '<|end|>' → logprob: -12.026761054992676
    10. '   ' → logprob: -12.401761054992676

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007631112355738878
    2. 'in' → logprob: -5.007631301879883
    3. '<|end|>' → logprob: -7.757631301879883
    4. ' ' → logprob: -8.382631301879883
    5. ' range' → logprob: -8.757631301879883
    6. 'range' → logprob: -10.132631301879883
    7. ',' → logprob: -10.507631301879883
    8. ' i' → logprob: -11.507631301879883
    9. '+' → logprob: -11.882631301879883
    10. ')' → logprob: -12.132631301879883

Token 42: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519393861293793
    2. ' range' → logprob: -1.5019394159317017
    3. '	range' → logprob: -12.00193977355957
    4. ' xrange' → logprob: -13.50193977355957
    5. ' ' → logprob: -14.12693977355957
    6. '(range' → logprob: -14.25193977355957
    7. '0' → logprob: -14.75193977355957
    8. 'ran' → logprob: -15.75193977355957
    9. 'r' → logprob: -15.75193977355957
    10. '.range' → logprob: -16.00193977355957

Token 43: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009340813383460045
    2. '(' → logprob: -5.259340763092041
    3. '(k' → logprob: -5.634340763092041
    4. '(len' → logprob: -8.1343412399292
    5. 'n' → logprob: -8.5093412399292
    6. '(j' → logprob: -11.2593412399292
    7. 'k' → logprob: -11.7593412399292
    8. '(
' → logprob: -12.8843412399292
    9. ' n' → logprob: -12.8843412399292
    10. ')' → logprob: -14.0093412399292

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002652348019182682
    2. '-' → logprob: -6.127652168273926
    3. ' )' → logprob: -7.877652168273926
    4. ' -' → logprob: -10.502652168273926
    5. ' ' → logprob: -10.752652168273926
    6. '),' → logprob: -11.627652168273926
    7. ' for' → logprob: -11.877652168273926
    8. '   ' → logprob: -12.252652168273926
    9. 'for' → logprob: -13.002652168273926
    10. '```' → logprob: -13.252652168273926

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38352760672569275
    2. 'for' → logprob: -1.2585276365280151
    3. '-' → logprob: -4.133527755737305
    4. ')' → logprob: -4.508527755737305
    5. ' ' → logprob: -5.758527755737305
    6. '   ' → logprob: -5.883527755737305
    7. '	for' → logprob: -7.508527755737305
    8. ' -' → logprob: -8.008527755737305
    9. '+' → logprob: -8.133527755737305
    10. ' )' → logprob: -9.633527755737305

Token 46: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5770441889762878
    2. 'j' → logprob: -0.8270441889762878
    3. ' range' → logprob: -7.4520440101623535
    4. 'i' → logprob: -8.952044486999512
    5. '    ' → logprob: -9.077044486999512
    6. '   ' → logprob: -9.327044486999512
    7. 'range' → logprob: -9.452044486999512
    8. ' i' → logprob: -9.577044486999512
    9. '	j' → logprob: -11.327044486999512
    10. ' ' → logprob: -11.452044486999512

Token 47: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8035570979118347
    2. ' range' → logprob: -1.1785571575164795
    3. ' in' → logprob: -2.4285571575164795
    4. '(i' → logprob: -2.5535571575164795
    5. '(range' → logprob: -3.4285571575164795
    6. ' i' → logprob: -4.1785569190979
    7. '(n' → logprob: -4.9285569190979
    8. '<|end|>' → logprob: -5.4285569190979
    9. 'i' → logprob: -5.5535569190979
    10. '(' → logprob: -5.6785569190979

Token 48: ' range' (ID: 3352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1299835443496704
    2. ' range' → logprob: -1.1299835443496704
    3. 'range' → logprob: -1.3799835443496704
    4. 'n' → logprob: -3.004983425140381
    5. ' i' → logprob: -3.379983425140381
    6. ' n' → logprob: -4.004983425140381
    7. ' ' → logprob: -8.879983901977539
    8. '(i' → logprob: -8.879983901977539
    9. '(range' → logprob: -9.504983901977539
    10. '   ' → logprob: -9.754983901977539

Token 49: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04542127996683121
    2. '(i' → logprob: -3.1704213619232178
    3. '(' → logprob: -6.170421123504639
    4. 'n' → logprob: -8.170421600341797
    5. '(k' → logprob: -11.170421600341797
    6. 'i' → logprob: -11.295421600341797
    7. ')' → logprob: -12.170421600341797
    8. ' (' → logprob: -12.545421600341797
    9. '(j' → logprob: -13.170421600341797
    10. '((' → logprob: -13.295421600341797

Token 50: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00912087969481945
    2. ' +' → logprob: -5.134120941162109
    3. '1' → logprob: -6.509120941162109
    4. '+n' → logprob: -6.884120941162109
    5. 'n' → logprob: -8.13412094116211
    6. ',' → logprob: -8.75912094116211
    7. ',n' → logprob: -9.13412094116211
    8. ')' → logprob: -10.50912094116211
    9. '+)' → logprob: -11.13412094116211
    10. '))' → logprob: -11.50912094116211

Token 51: 'r' (ID: 81)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23773904144763947
    2. '-' → logprob: -1.612739086151123
    3. ')' → logprob: -5.487739086151123
    4. '[' → logprob: -6.237739086151123
    5. ' +' → logprob: -6.737739086151123
    6. '*' → logprob: -6.987739086151123
    7. '+
' → logprob: -7.112739086151123
    8. '(' → logprob: -7.487739086151123
    9. ' -' → logprob: -7.612739086151123
    10. ' ' → logprob: -8.112738609313965

Token 52: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015695640817284584
    2. '%' → logprob: -4.515695571899414
    3. '<|end|>' → logprob: -6.015695571899414
    4. ' +' → logprob: -7.265695571899414
    5. '+
' → logprob: -7.390695571899414
    6. ')' → logprob: -8.515695571899414
    7. '*' → logprob: -8.765695571899414
    8. '**' → logprob: -9.015695571899414
    9. '+r' → logprob: -9.265695571899414
    10. '```' → logprob: -9.765695571899414

Token 53: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10305658727884293
    2. 'sum' → logprob: -3.1030566692352295
    3. ' k' → logprob: -3.2280566692352295
    4. ' sum' → logprob: -4.85305643081665
    5. 'n' → logprob: -6.60305643081665
    6. 'a' → logprob: -7.35305643081665
    7. ' ' → logprob: -7.60305643081665
    8. ' (' → logprob: -7.60305643081665
    9. 'Counter' → logprob: -7.60305643081665
    10. ' n' → logprob: -7.60305643081665

Token 54: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2743890583515167
    2. ' *' → logprob: -2.1493890285491943
    3. '*(' → logprob: -2.1493890285491943
    4. '**' → logprob: -5.149389266967773
    5. '*k' → logprob: -8.399389266967773
    6. '*n' → logprob: -8.399389266967773
    7. '*r' → logprob: -8.399389266967773
    8. '*((' → logprob: -9.399389266967773
    9. '```' → logprob: -9.524389266967773
    10. '-' → logprob: -9.899389266967773

Token 55: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.24064233899116516
    2. '(n' → logprob: -1.7406423091888428
    3. 'k' → logprob: -3.9906423091888428
    4. 'sum' → logprob: -4.615642547607422
    5. 'n' → logprob: -5.490642547607422
    6. '(sum' → logprob: -5.615642547607422
    7. ' (' → logprob: -7.115642547607422
    8. '(' → logprob: -7.365642547607422
    9. '(a' → logprob: -8.240642547607422
    10. '(len' → logprob: -8.865642547607422

Token 56: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.25521236658096313
    2. 'k' → logprob: -1.5052123069763184
    3. 'n' → logprob: -6.255212306976318
    4. '(n' → logprob: -6.755212306976318
    5. '-' → logprob: -10.255212783813477
    6. '(' → logprob: -10.380212783813477
    7. ')' → logprob: -10.505212783813477
    8. 'a' → logprob: -10.880212783813477
    9. ' (' → logprob: -10.880212783813477
    10. '(a' → logprob: -11.130212783813477

Token 57: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08895004540681839
    2. ' -' → logprob: -2.4639501571655273
    3. '1' → logprob: -12.213950157165527
    4. '+' → logprob: -13.463950157165527
    5. ' ' → logprob: -13.463950157165527
    6. ')' → logprob: -13.713950157165527
    7. '−' → logprob: -13.963950157165527
    8. '```' → logprob: -15.088950157165527
    9. ' ' → logprob: -16.27644920349121
    10. ' +' → logprob: -16.71394920349121

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.265633419388905e-05
    2. ' ' → logprob: -9.750062942504883
    3. ')' → logprob: -12.625062942504883
    4. '```' → logprob: -15.375062942504883
    5. '   ' → logprob: -15.875062942504883
    6. '-' → logprob: -16.937562942504883
    7. '<|end|>' → logprob: -17.000062942504883
    8. '  ' → logprob: -17.062562942504883
    9. '...' → logprob: -17.187562942504883
    10. ' ' → logprob: -17.312562942504883

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. ')' → logprob: -15.000003814697266
    4. '   ' → logprob: -16.625003814697266
    5. '```' → logprob: -17.000003814697266
    6. '  ' → logprob: -17.500003814697266
    7. '>' → logprob: -18.000003814697266
    8. '
' → logprob: -18.125003814697266
    9. '{' → logprob: -18.625003814697266
    10. '    ' → logprob: -18.750003814697266

Token 60: ')' (ID: 8)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5942113399505615
    2. '//' → logprob: -0.8442113399505615
    3. ')' → logprob: -4.094211578369141
    4. ')//' → logprob: -6.594211578369141
    5. ' )' → logprob: -10.21921157836914
    6. ' ' → logprob: -10.59421157836914
    7. '   ' → logprob: -13.46921157836914
    8. ' ' → logprob: -13.59421157836914
    9. '```' → logprob: -14.46921157836914
    10. ' *' → logprob: -14.59421157836914

Token 61: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3880620300769806
    2. ' //' → logprob: -1.1380620002746582
    3. '```' → logprob: -8.138062477111816
    4. ' *' → logprob: -8.763062477111816
    5. ' ' → logprob: -9.013062477111816
    6. '*' → logprob: -9.013062477111816
    7. ')' → logprob: -9.388062477111816
    8. '2' → logprob: -9.763062477111816
    9. '#' → logprob: -9.888062477111816
    10. '`' → logprob: -10.013062477111816

Token 62: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001410850090906024
    2. ' ' → logprob: -8.875141143798828
    3. '1' → logprob: -14.000141143798828
    4. '```' → logprob: -15.125141143798828
    5. '   ' → logprob: -16.750141143798828
    6. '  ' → logprob: -17.875141143798828
    7. '	' → logprob: -19.500141143798828
    8. '**' → logprob: -20.125141143798828
    9. '    ' → logprob: -20.125141143798828
    10. '{' → logprob: -20.375141143798828

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. '1' → logprob: -12.625004768371582
    3. ' ' → logprob: -14.000004768371582
    4. '```' → logprob: -16.875003814697266
    5. '4' → logprob: -19.187503814697266
    6. '{' → logprob: -19.312503814697266
    7. '   ' → logprob: -19.437503814697266
    8. '3' → logprob: -19.500003814697266
    9. ')' → logprob: -19.687503814697266
    10. '

' → logprob: -19.937503814697266

Token 64: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06995376944541931
    2. '*' → logprob: -2.694953680038452
    3. ' ' → logprob: -12.194953918457031
    4. ' +' → logprob: -13.069953918457031
    5. '*[' → logprob: -13.069953918457031
    6. ' ' → logprob: -13.319953918457031
    7. '+' → logprob: -14.319953918457031
    8. ')' → logprob: -14.319953918457031
    9. '**' → logprob: -14.444953918457031
    10. '*(' → logprob: -14.444953918457031

Token 65: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06313597410917282
    2. ' sum' → logprob: -2.813135862350464
    3. 'n' → logprob: -7.063136100769043
    4. '(sum' → logprob: -8.813136100769043
    5. ' n' → logprob: -8.938136100769043
    6. 'a' → logprob: -11.688136100769043
    7. '(n' → logprob: -12.688136100769043
    8. 'Counter' → logprob: -12.688136100769043
    9. 'len' → logprob: -12.813136100769043
    10. ' (' → logprob: -13.188136100769043

Token 66: 'n' (ID: 77)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.002934437245130539
    2. ' sum' → logprob: -6.502934455871582
    3. 'n' → logprob: -7.127934455871582
    4. 'a' → logprob: -7.502934455871582
    5. 'len' → logprob: -10.502934455871582
    6. '(sum' → logprob: -10.877934455871582
    7. '   ' → logprob: -12.002934455871582
    8. '  ' → logprob: -12.627934455871582
    9. ' n' → logprob: -12.877934455871582
    10. 'int' → logprob: -13.127934455871582

Token 67: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7008591890335083
    2. '*' → logprob: -0.8258591890335083
    3. '**' → logprob: -2.8258590698242188
    4. ' **' → logprob: -5.325859069824219
    5. ')' → logprob: -6.575859069824219
    6. ')**' → logprob: -8.075859069824219
    7. ')*' → logprob: -10.200859069824219
    8. ' )' → logprob: -10.575859069824219
    9. ' ' → logprob: -10.700859069824219
    10. ' ' → logprob: -10.825859069824219

Token 68: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.104283906519413
    2. '(n' → logprob: -2.4792838096618652
    3. ' n' → logprob: -4.479283809661865
    4. 'sum' → logprob: -6.229283809661865
    5. ' (' → logprob: -6.979283809661865
    6. '*n' → logprob: -7.854283809661865
    7. ' sum' → logprob: -8.604284286499023
    8. '(sum' → logprob: -9.229284286499023
    9. '*' → logprob: -9.479284286499023
    10. ')' → logprob: -10.354284286499023

Token 69: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.339776832144707e-05
    2. '(n' → logprob: -10.250082969665527
    3. ' n' → logprob: -10.375082969665527
    4. '-' → logprob: -11.750082969665527
    5. '1' → logprob: -11.875082969665527
    6. ')n' → logprob: -14.000082969665527
    7. '	n' → logprob: -15.125082969665527
    8. ')' → logprob: -15.875082969665527
    9. '   ' → logprob: -16.125083923339844
    10. ' ' → logprob: -16.125083923339844

Token 70: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3869268298149109
    2. ' -' → logprob: -1.1369268894195557
    3. ')' → logprob: -10.261926651000977
    4. '1' → logprob: -11.636926651000977
    5. ' ' → logprob: -11.886926651000977
    6. '  ' → logprob: -13.886926651000977
    7. '```' → logprob: -13.886926651000977
    8. '()' → logprob: -14.136926651000977
    9. '   ' → logprob: -14.386926651000977
    10. '–' → logprob: -14.386926651000977

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016611411410849541
    2. ' ' → logprob: -8.750165939331055
    3. ')' → logprob: -12.625165939331055
    4. '   ' → logprob: -13.500165939331055
    5. '<|end|>' → logprob: -13.500165939331055
    6. '  ' → logprob: -14.500165939331055
    7. '```' → logprob: -15.250165939331055
    8. '...' → logprob: -15.500165939331055
    9. '
' → logprob: -16.250165939331055
    10. '<|end|>' → logprob: -16.625165939331055

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.62501049041748
    3. ')' → logprob: -15.12501049041748
    4. '2' → logprob: -15.37501049041748
    5. '   ' → logprob: -15.37501049041748
    6. '```' → logprob: -15.43751049041748
    7. '  ' → logprob: -15.62501049041748
    8. '...' → logprob: -17.250009536743164
    9. '
' → logprob: -17.375009536743164
    10. '۱' → logprob: -17.562509536743164

Token 73: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7410888671875
    2. ')' → logprob: -0.8660888671875
    3. ' ))' → logprob: -3.6160888671875
    4. '//' → logprob: -3.7410888671875
    5. ' )' → logprob: -3.7410888671875
    6. ')//' → logprob: -4.1160888671875
    7. ' //' → logprob: -4.6160888671875
    8. ' ' → logprob: -6.3660888671875
    9. ')))' → logprob: -8.3660888671875
    10. '   ' → logprob: -9.8660888671875

Token 74: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08739154785871506
    2. '//' → logprob: -3.2123916149139404
    3. ' )' → logprob: -3.7123916149139404
    4. '))' → logprob: -4.462391376495361
    5. ' //' → logprob: -5.337391376495361
    6. ' ' → logprob: -7.337391376495361
    7. ')//' → logprob: -7.462391376495361
    8. '`)' → logprob: -8.21239185333252
    9. ' ))' → logprob: -8.46239185333252
    10. ')))' → logprob: -9.08739185333252

Token 75: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.314625690924004e-05
    2. ' ' → logprob: -9.750073432922363
    3. ')' → logprob: -11.375073432922363
    4. '1' → logprob: -13.125073432922363
    5. '```' → logprob: -14.250073432922363
    6. '  ' → logprob: -16.250072479248047
    7. '>' → logprob: -16.625072479248047
    8. '   ' → logprob: -16.625072479248047
    9. '.' → logprob: -17.437572479248047
    10. '    ' → logprob: -17.687572479248047

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1875571544806007e-05
    2. '1' → logprob: -11.500011444091797
    3. ' ' → logprob: -13.375011444091797
    4. '```' → logprob: -16.250011444091797
    5. ')' → logprob: -17.250011444091797
    6. '{' → logprob: -18.062511444091797
    7. '   ' → logprob: -18.562511444091797
    8. '4' → logprob: -18.750011444091797
    9. '' → logprob: -19.062511444091797
    10. '  ' → logprob: -19.250011444091797

Token 77: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002734381938353181
    2. ' )' → logprob: -6.127734184265137
    3. '))' → logprob: -8.377734184265137
    4. ')*' → logprob: -9.002734184265137
    5. ' *' → logprob: -10.002734184265137
    6. '*)' → logprob: -10.377734184265137
    7. '*' → logprob: -10.377734184265137
    8. ')))' → logprob: -10.627734184265137
    9. '`)' → logprob: -11.127734184265137
    10. '')' → logprob: -11.877734184265137

Token 78: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.34864896535873413
    2. ' sum' → logprob: -1.223649024963379
    3. ' ' → logprob: -9.723649024963379
    4. '  ' → logprob: -10.098649024963379
    5. '(sum' → logprob: -10.223649024963379
    6. '   ' → logprob: -10.598649024963379
    7. ')' → logprob: -11.348649024963379
    8. '    ' → logprob: -12.223649024963379
    9. ' (' → logprob: -12.473649024963379
    10. 'n' → logprob: -13.098649024963379

Token 79: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0015221221838146448
    2. '(' → logprob: -6.501522064208984
    3. '((' → logprob: -11.626522064208984
    4. '(i' → logprob: -11.876522064208984
    5. '(
' → logprob: -13.626522064208984
    6. 'a' → logprob: -13.751522064208984
    7. '(

' → logprob: -15.376522064208984
    8. '(int' → logprob: -15.501522064208984
    9. '(r' → logprob: -15.626522064208984
    10. '(x' → logprob: -15.626522064208984

Token 80: ' *' (ID: 425)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06936992704868317
    2. '<' → logprob: -3.0693700313568115
    3. ' >' → logprob: -4.569369792938232
    4. '<a' → logprob: -6.194369792938232
    5. ' <=' → logprob: -6.319369792938232
    6. '(a' → logprob: -6.319369792938232
    7. '>' → logprob: -7.069369792938232
    8. ' ' → logprob: -7.444369792938232
    9. 'a' → logprob: -7.569369792938232
    10. ' *' → logprob: -8.06937026977539

Token 81: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3622988164424896
    2. 'x' → logprob: -1.237298846244812
    3. '(' → logprob: -5.487298965454102
    4. 'a' → logprob: -5.612298965454102
    5. ' (' → logprob: -5.612298965454102
    6. '(a' → logprob: -6.612298965454102
    7. ' x' → logprob: -7.612298965454102
    8. '(C' → logprob: -8.737298965454102
    9. 'r' → logprob: -10.362298965454102
    10. ')' → logprob: -10.487298965454102

Token 82: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.22778791189193726
    2. 'x' → logprob: -1.727787971496582
    3. ' (' → logprob: -3.977787971496582
    4. ' x' → logprob: -5.727787971496582
    5. '(' → logprob: -6.102787971496582
    6. 'a' → logprob: -6.852787971496582
    7. '2' → logprob: -8.852787971496582
    8. '(a' → logprob: -8.977787971496582
    9. ' ' → logprob: -9.102787971496582
    10. '1' → logprob: -9.727787971496582

Token 83: ' -' (ID: 533)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.44894108176231384
    2. '-' → logprob: -1.8239411115646362
    3. ' *' → logprob: -1.9489411115646362
    4. ' ' → logprob: -4.198941230773926
    5. ' -' → logprob: -4.323941230773926
    6. '*' → logprob: -4.573941230773926
    7. ' for' → logprob: -5.073941230773926
    8. '1' → logprob: -5.573941230773926
    9. '+' → logprob: -5.948941230773926
    10. '>' → logprob: -6.823941230773926

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005235767923295498
    2. ' ' → logprob: -5.25523567199707
    3. '   ' → logprob: -14.50523567199707
    4. ')' → logprob: -14.75523567199707
    5. '  ' → logprob: -14.75523567199707
    6. '```' → logprob: -16.19273567199707
    7. '    ' → logprob: -16.50523567199707
    8. '2' → logprob: -16.94273567199707
    9. ' ' → logprob: -17.00523567199707
    10. '' → logprob: -17.00523567199707

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028624574770219624
    2. '2' → logprob: -8.375286102294922
    3. 'x' → logprob: -10.250286102294922
    4. ' ' → logprob: -10.875286102294922
    5. 'i' → logprob: -14.625286102294922
    6. 'a' → logprob: -15.625286102294922
    7. '   ' → logprob: -15.750286102294922
    8. '  ' → logprob: -15.875286102294922
    9. '```' → logprob: -16.000286102294922
    10. ')' → logprob: -16.125286102294922

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7829326391220093
    2. '//' → logprob: -0.7829326391220093
    3. ' //' → logprob: -3.032932758331299
    4. ' for' → logprob: -4.282932758331299
    5. ' ' → logprob: -4.407932758331299
    6. 'for' → logprob: -5.157932758331299
    7. '```' → logprob: -6.032932758331299
    8. ' )' → logprob: -6.907932758331299
    9. ')//' → logprob: -7.032932758331299
    10. '()' → logprob: -7.032932758331299

Token 87: ' //' (ID: 602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4949111342430115
    2. '()' → logprob: -1.4949111938476562
    3. '//' → logprob: -2.2449111938476562
    4. ' for' → logprob: -2.8699111938476562
    5. ' ' → logprob: -6.494911193847656
    6. ' //' → logprob: -6.744911193847656
    7. ')' → logprob: -8.119911193847656
    8. ' ()' → logprob: -8.994911193847656
    9. '  ' → logprob: -9.119911193847656
    10. '```' → logprob: -9.494911193847656

Token 88: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013327404158189893
    2. ' ' → logprob: -6.626332759857178
    3. ')' → logprob: -12.62633228302002
    4. '1' → logprob: -12.87633228302002
    5. '```' → logprob: -15.00133228302002
    6. '   ' → logprob: -16.126333236694336
    7. ' )' → logprob: -16.376333236694336
    8. '6' → logprob: -16.688833236694336
    9. ',' → logprob: -17.001333236694336
    10. '>' → logprob: -17.126333236694336

Token 89: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008643055334687233
    2. '1' → logprob: -4.75864315032959
    3. ')' → logprob: -11.38364315032959
    4. ' ' → logprob: -11.75864315032959
    5. '```' → logprob: -12.63364315032959
    6. '4' → logprob: -13.13364315032959
    7. '   ' → logprob: -14.25864315032959
    8. '}' → logprob: -14.69614315032959
    9. '  ' → logprob: -15.13364315032959
    10. ' )' → logprob: -15.38364315032959

Token 90: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2043471485376358
    2. ' for' → logprob: -1.9543471336364746
    3. '(x' → logprob: -3.3293471336364746
    4. ')' → logprob: -5.829347133636475
    5. '(a' → logprob: -6.329347133636475
    6. '(' → logprob: -6.704347133636475
    7. 'x' → logprob: -7.579347133636475
    8. '(c' → logprob: -8.079347610473633
    9. 'a' → logprob: -8.204347610473633
    10. '(v' → logprob: -9.704347610473633

Token 91: ' x' (ID: 1215)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.267802357673645
    2. 'Counter' → logprob: -1.767802357673645
    3. ' x' → logprob: -3.1428022384643555
    4. 'x' → logprob: -4.8928022384643555
    5. ' a' → logprob: -5.6428022384643555
    6. 'a' → logprob: -6.0178022384643555
    7. ' (' → logprob: -6.3928022384643555
    8. '(C' → logprob: -6.6428022384643555
    9. '.Counter' → logprob: -7.1428022384643555
    10. '[' → logprob: -7.3928022384643555

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1620716005563736
    2. '(C' → logprob: -2.912071704864502
    3. '(a' → logprob: -3.662071704864502
    4. '(' → logprob: -3.912071704864502
    5. 'in' → logprob: -4.162071704864502
    6. ')' → logprob: -4.162071704864502
    7. 'a' → logprob: -4.412071704864502
    8. ' Counter' → logprob: -6.287071704864502
    9. 'Counter' → logprob: -6.287071704864502
    10. ' a' → logprob: -6.912071704864502

Token 93: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.02069486677646637
    2. ' Counter' → logprob: -3.8956949710845947
    3. '(C' → logprob: -9.520694732666016
    4. 'C' → logprob: -11.020694732666016
    5. '.Counter' → logprob: -11.270694732666016
    6. '[' → logprob: -11.520694732666016
    7. ' ' → logprob: -11.770694732666016
    8. '	C' → logprob: -12.270694732666016
    9. 'list' → logprob: -12.395694732666016
    10. 'a' → logprob: -12.645694732666016

Token 94: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.2842308680992573e-05
    2. 'a' → logprob: -11.250022888183594
    3. '(' → logprob: -12.875022888183594
    4. ' (' → logprob: -13.125022888183594
    5. ')a' → logprob: -13.750022888183594
    6. ')' → logprob: -13.875022888183594
    7. ')(' → logprob: -14.000022888183594
    8. '```' → logprob: -14.375022888183594
    9. '((' → logprob: -14.625022888183594
    10. '<|end|>' → logprob: -15.750022888183594

Token 95: ').' (ID: 741)
  Prédit: '.values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.3215620219707489
    2. ').' → logprob: -1.9465620517730713
    3. '().' → logprob: -2.0715620517730713
    4. 'values' → logprob: -5.196561813354492
    5. 'a' → logprob: -8.946561813354492
    6. '.v' → logprob: -9.071561813354492
    7. ')' → logprob: -9.321561813354492
    8. '.' → logprob: -9.321561813354492
    9. ' values' → logprob: -9.696561813354492
    10. '(' → logprob: -9.821561813354492

Token 96: 'values' (ID: 7222)
  Prédit: 'values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -1.0921942703134846e-05
    2. ' values' → logprob: -11.75001049041748
    3. '.values' → logprob: -12.75001049041748
    4. '	values' → logprob: -16.750011444091797
    5. 'value' → logprob: -18.125011444091797
    6. 'val' → logprob: -18.875011444091797
    7. 'valu' → logprob: -19.625011444091797
    8. '(values' → logprob: -19.750011444091797
    9. 'elements' → logprob: -19.875011444091797
    10. 'vals' → logprob: -20.375011444091797

Token 97: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009152302518486977
    2. '()' → logprob: -5.384152412414551
    3. '))' → logprob: -6.009152412414551
    4. '())' → logprob: -6.259152412414551
    5. '()))
' → logprob: -9.50915241241455
    6. '())))' → logprob: -10.38415241241455
    7. '()));' → logprob: -11.38415241241455
    8. ')' → logprob: -11.50915241241455
    9. '(' → logprob: -11.63415241241455
    10. '()))

' → logprob: -11.75915241241455

Token 98: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2200749754119897e-06
    2. ' print' → logprob: -13.500001907348633
    3. '```' → logprob: -14.375001907348633
    4. '\n' → logprob: -16.750001907348633
    5. '
' → logprob: -17.000001907348633
    6. '\' → logprob: -17.875001907348633
    7. '<|end|>' → logprob: -18.000001907348633
    8. '(print' → logprob: -18.500001907348633
    9. '#print' → logprob: -18.625001907348633
    10. '``' → logprob: -18.875001907348633

Token 99: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.023485267534852028
    2. '(' → logprob: -3.7734851837158203
    3. '(f' → logprob: -8.52348518371582
    4. '('' → logprob: -11.27348518371582
    5. ' (' → logprob: -12.02348518371582
    6. '("("' → logprob: -12.14848518371582
    7. '((' → logprob: -12.77348518371582
    8. '(
' → logprob: -12.77348518371582
    9. '(round' → logprob: -12.89848518371582
    10. '(R' → logprob: -13.77348518371582

Token 100: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '))' → logprob: -13.000004768371582
    3. ')`' → logprob: -13.375004768371582
    4. ' )' → logprob: -15.000004768371582
    5. '`)' → logprob: -16.000003814697266
    6. ')}' → logprob: -16.250003814697266
    7. ')
' → logprob: -16.875003814697266
    8. ')**' → logprob: -17.875003814697266
    9. '})' → logprob: -18.250003814697266
    10. '')' → logprob: -18.750003814697266

Token 101: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0574241876602173
    2. '100' → logprob: -1.0574241876602173
    3. '(' → logprob: -1.4324241876602173
    4. '998' → logprob: -3.3074240684509277
    5. ' ' → logprob: -3.6824240684509277
    6. ' (' → logprob: -5.432424068450928
    7. '1' → logprob: -8.557424545288086
    8. '999' → logprob: -9.182424545288086
    9. '(int' → logprob: -9.557424545288086
    10. '109' → logprob: -10.557424545288086

Token 102: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.010532704181969166
    2. '100' → logprob: -4.760532855987549
    3. '998' → logprob: -6.260532855987549
    4. ' ' → logprob: -13.01053237915039
    5. '1' → logprob: -13.26053237915039
    6. '(' → logprob: -13.76053237915039
    7. 'int' → logprob: -13.88553237915039
    8. '999' → logprob: -16.88553237915039
    9. '109' → logprob: -17.38553237915039
    10. '１０' → logprob: -17.51053237915039

Token 103: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.018528224900364876
    2. '09' → logprob: -4.018528461456299
    3. '**' → logprob: -8.26852798461914
    4. ' ' → logprob: -9.26852798461914
    5. '+' → logprob: -10.89352798461914
    6. '009' → logprob: -12.64352798461914
    7. '```' → logprob: -12.89352798461914
    8. '109' → logprob: -13.76852798461914
    9. '909' → logprob: -14.89352798461914
    10. '>' → logprob: -15.01852798461914

Token 104: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -16.375
    3. ' ' → logprob: -16.625
    4. '```' → logprob: -20.25
    5. '+' → logprob: -21.375
    6. '９' → logprob: -21.625
    7. '   ' → logprob: -22.375
    8. '19' → logprob: -22.375
    9. '九' → logprob: -22.75
    10. '99' → logprob: -23.375

Token 105: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.0
    3. ' ' → logprob: -18.0
    4. '19' → logprob: -19.875
    5. '```' → logprob: -20.375
    6. '10' → logprob: -20.75
    7. '   ' → logprob: -21.75
    8. '18' → logprob: -21.75
    9. '``' → logprob: -21.75
    10. '99' → logprob: -21.875

Token 106: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004889304982498288
    2. ' +' → logprob: -7.625488758087158
    3. '7' → logprob: -14.000489234924316
    4. '+
' → logprob: -16.62548828125
    5. '＋' → logprob: -16.75048828125
    6. ' plus' → logprob: -17.75048828125
    7. '```' → logprob: -18.62548828125
    8. ' ' → logprob: -18.75048828125
    9. ')+' → logprob: -18.87548828125
    10. ')' → logprob: -19.00048828125

Token 107: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '+' → logprob: -17.625
    4. '9' → logprob: -18.0
    5. '   ' → logprob: -19.375
    6. '```' → logprob: -19.625
    7. '07' → logprob: -21.0
    8. ' ' → logprob: -21.75
    9. '  ' → logprob: -21.75
    10. ')' → logprob: -21.9375

Token 108: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '9' → logprob: -16.75
    3. ' ' → logprob: -17.125
    4. '+' → logprob: -19.75
    5. '```' → logprob: -21.0
    6. '   ' → logprob: -21.75
    7. '07' → logprob: -21.875
    8. '７' → logprob: -22.125
    9. ')' → logprob: -22.25
    10. '79' → logprob: -22.5625

Token 109: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20141558349132538
    2. '))' → logprob: -1.7014155387878418
    3. ')))' → logprob: -13.576416015625
    4. ' )' → logprob: -14.701416015625
    5. ')`' → logprob: -15.951416015625
    6. ')
' → logprob: -16.076416015625
    7. '))
' → logprob: -16.451416015625
    8. ' ))' → logprob: -16.576416015625
    9. ')}' → logprob: -16.826416015625
    10. '})' → logprob: -17.451416015625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 107
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 90
Précision stricte (1ère position): 28.04%
Précision adaptée (1ère position): 28.04%
Précision (top 10): 84.11%
================================================================================
