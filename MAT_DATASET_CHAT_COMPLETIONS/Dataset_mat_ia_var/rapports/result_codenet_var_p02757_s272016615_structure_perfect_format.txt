================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, p = map(int, input().split())
s = list(map(int, list(input())))

def solve():
    if p in [2, 5]:
        ret = 0
        for i in range(n):
            lsd = s[n - 1 - i]
            if lsd % p == 0:
                ret += n - i
        return ret

    ten = 1
    cnt = [0] * p
    r = 0
    cnt[r] += 1
    for i in range(n):
        msd = s[n - 1 - i]
        r = (msd * ten + r) % p
        ten = ten * 10 % p
        cnt[r] += 1

    ret = 0
    for r in range(p):
        ret += cnt[r] * (cnt[r] - 1) // 2
    return ret

print(solve())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' p' (ID: 275)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020264487713575363
    2. ',' → logprob: -4.520264625549316
    3. ' =' → logprob: -4.770264625549316
    4. '*' → logprob: -8.395264625549316
    5. ')' → logprob: -8.395264625549316
    6. ':' → logprob: -9.395264625549316
    7. '>' → logprob: -10.270264625549316
    8. '_' → logprob: -10.395264625549316
    9. '+' → logprob: -10.645264625549316
    10. '-' → logprob: -10.770264625549316

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.43232637643814087
    2. ' ' → logprob: -1.807326316833496
    3. 'map' → logprob: -1.932326316833496
    4. ' n' → logprob: -3.932326316833496
    5. '0' → logprob: -4.432326316833496
    6. ' np' → logprob: -5.432326316833496
    7. '10' → logprob: -6.432326316833496
    8. ' input' → logprob: -6.682326316833496
    9. 'input' → logprob: -7.057326316833496
    10. 'n' → logprob: -7.557326316833496

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022017577663064003
    2. '<|end|>' → logprob: -4.397017478942871
    3. '(lambda' → logprob: -5.647017478942871
    4. '```' → logprob: -5.897017478942871
    5. '(int' → logprob: -7.397017478942871
    6. ')' → logprob: -8.022017478942871
    7. '<|end|>' → logprob: -8.147017478942871
    8. '(str' → logprob: -8.272017478942871
    9. '(token' → logprob: -8.397017478942871
    10. '(user' → logprob: -8.647017478942871

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0268848929554224
    2. ')' → logprob: -3.9018847942352295
    3. 'input' → logprob: -5.776885032653809
    4. '```' → logprob: -6.776885032653809
    5. '(' → logprob: -6.901885032653809
    6. ' input' → logprob: -8.526885032653809
    7. ',input' → logprob: -8.901885032653809
    8. '`' → logprob: -8.901885032653809
    9. '(str' → logprob: -9.276885032653809
    10. '=input' → logprob: -9.401885032653809

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12695802748203278
    2. ' input' → logprob: -2.126958131790161
    3. '(input' → logprob: -10.501957893371582
    4. ')' → logprob: -13.501957893371582
    5. ',input' → logprob: -14.376957893371582
    6. '=input' → logprob: -15.751957893371582
    7. '```' → logprob: -16.6269588470459
    8. '<input' → logprob: -16.8769588470459
    9. '[input' → logprob: -16.8769588470459
    10. 'user' → logprob: -17.1269588470459

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25362512469291687
    2. '())' → logprob: -1.7536251544952393
    3. '(' → logprob: -3.2536251544952393
    4. ')' → logprob: -5.62862491607666
    5. '(()' → logprob: -6.75362491607666
    6. '().' → logprob: -6.87862491607666
    7. '();)' → logprob: -7.00362491607666
    8. '`()' → logprob: -7.12862491607666
    9. '('' → logprob: -7.50362491607666
    10. '());' → logprob: -8.00362491607666

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019448186503723264
    2. 'strip' → logprob: -6.2519450187683105
    3. 'rstrip' → logprob: -11.251944541931152
    4. ' split' → logprob: -13.001944541931152
    5. '(split' → logprob: -14.626944541931152
    6. ')' → logprob: -15.251944541931152
    7. 'read' → logprob: -16.00194549560547
    8. 'startswith' → logprob: -16.12694549560547
    9. 'spl' → logprob: -16.62694549560547
    10. 'replace' → logprob: -17.50194549560547

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6955786943435669
    2. '())' → logprob: -1.070578694343567
    3. '))' → logprob: -1.945578694343567
    4. '()))' → logprob: -4.320578575134277
    5. '()' → logprob: -6.320578575134277
    6. '`)' → logprob: -9.445578575134277
    7. '('' → logprob: -9.445578575134277
    8. '(' → logprob: -9.445578575134277
    9. ')))' → logprob: -10.945578575134277
    10. '```' → logprob: -10.945578575134277

Token 11: 's' (ID: 82)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1003170013427734
    2. '#' → logprob: -1.3503170013427734
    3. ',' → logprob: -2.2253170013427734
    4. 'a' → logprob: -2.4753170013427734
    5. '*' → logprob: -2.9753170013427734
    6. '[' → logprob: -3.7253170013427734
    7. '%' → logprob: -3.9753170013427734
    8. '`' → logprob: -3.9753170013427734
    9. '=' → logprob: -4.225317001342773
    10. ' ' → logprob: -4.225317001342773

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35754936933517456
    2. ' =' → logprob: -1.6075494289398193
    3. '[' → logprob: -3.3575494289398193
    4. '.' → logprob: -3.8575494289398193
    5. 'um' → logprob: -4.23254919052124
    6. ',' → logprob: -4.98254919052124
    7. 't' → logprob: -5.48254919052124
    8. '_' → logprob: -5.73254919052124
    9. 'u' → logprob: -5.73254919052124
    10. '[i' → logprob: -6.10754919052124

Token 13: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04826197773218155
    2. ' input' → logprob: -3.173261880874634
    3. '""' → logprob: -6.798262119293213
    4. 'list' → logprob: -7.173262119293213
    5. '"' → logprob: -7.798262119293213
    6. '0' → logprob: -7.798262119293213
    7. '''' → logprob: -7.798262119293213
    8. ''' → logprob: -8.048261642456055
    9. ' ' → logprob: -8.048261642456055
    10. 'bin' → logprob: -8.048261642456055

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003381722839549184
    2. '(s' → logprob: -6.128381729125977
    3. '(input' → logprob: -7.628381729125977
    4. '(str' → logprob: -8.128381729125977
    5. '(range' → logprob: -8.628381729125977
    6. '(int' → logprob: -10.128381729125977
    7. '(

' → logprob: -10.503381729125977
    8. ' (' → logprob: -10.753381729125977
    9. '(
' → logprob: -10.753381729125977
    10. '(list' → logprob: -10.753381729125977

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013902351493015885
    2. '(' → logprob: -6.62639045715332
    3. 'int' → logprob: -10.50139045715332
    4. '<int' → logprob: -10.75139045715332
    5. '=int' → logprob: -12.50139045715332
    6. '(str' → logprob: -12.50139045715332
    7. '[int' → logprob: -12.62639045715332
    8. '(
' → logprob: -13.87639045715332
    9. '(input' → logprob: -13.87639045715332
    10. ',int' → logprob: -14.00139045715332

Token 16: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.935077428817749
    2. ',input' → logprob: -0.935077428817749
    3. ',' → logprob: -1.560077428817749
    4. '(' → logprob: -5.560077667236328
    5. ' ,' → logprob: -7.310077667236328
    6. ' (' → logprob: -9.310077667236328
    7. ',(' → logprob: -10.435077667236328
    8. 'input' → logprob: -10.810077667236328
    9. ',int' → logprob: -10.935077667236328
    10. '(),' → logprob: -10.935077667236328

Token 17: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10021281987428665
    2. ' input' → logprob: -2.350212812423706
    3. '(input' → logprob: -12.475213050842285
    4. 'list' → logprob: -14.225213050842285
    5. ',input' → logprob: -14.475213050842285
    6. 's' → logprob: -15.225213050842285
    7. '	input' → logprob: -15.475213050842285
    8. '=input' → logprob: -15.600213050842285
    9. ')' → logprob: -16.10021209716797
    10. '_input' → logprob: -16.35021209716797

Token 18: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001548545085825026
    2. '(' → logprob: -6.501548767089844
    3. ' (' → logprob: -11.126548767089844
    4. '(str' → logprob: -11.251548767089844
    5. 'input' → logprob: -11.626548767089844
    6. '(s' → logprob: -12.126548767089844
    7. '```' → logprob: -14.126548767089844
    8. '((' → logprob: -14.501548767089844
    9. ',input' → logprob: -14.501548767089844
    10. ' input' → logprob: -14.876548767089844

Token 19: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.11037542670965195
    2. '()' → logprob: -2.48537540435791
    3. '()))' → logprob: -4.73537540435791
    4. '())' → logprob: -4.98537540435791
    5. '().' → logprob: -5.23537540435791
    6. '()));' → logprob: -9.48537540435791
    7. '()>' → logprob: -9.86037540435791
    8. '()[' → logprob: -10.73537540435791
    9. '()+' → logprob: -10.86037540435791
    10. ')))' → logprob: -11.11037540435791

Token 20: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020673619583249092
    2. '))' → logprob: -3.8956735134124756
    3. ')))' → logprob: -9.395673751831055
    4. '[' → logprob: -10.770673751831055
    5. '`)' → logprob: -10.770673751831055
    6. ')`' → logprob: -13.895673751831055
    7. 's' → logprob: -14.145673751831055
    8. ' )' → logprob: -14.395673751831055
    9. '#' → logprob: -14.520673751831055
    10. '),' → logprob: -14.770673751831055

Token 21: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009349319152534008
    2. '[' → logprob: -5.259349346160889
    3. 'for' → logprob: -7.509349346160889
    4. '[:' → logprob: -7.634349346160889
    5. '
' → logprob: -7.759349346160889
    6. '```' → logprob: -7.759349346160889
    7. ':' → logprob: -8.38434886932373
    8. ')
' → logprob: -8.38434886932373
    9. '[:]' → logprob: -8.63434886932373
    10. '(' → logprob: -8.63434886932373

Token 22: ' solve' (ID: 17722)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.43825533986091614
    2. ' f' → logprob: -2.0632553100585938
    3. ' solve' → logprob: -2.1882553100585938
    4. ' ' → logprob: -3.6882553100585938
    5. ' check' → logprob: -4.563255310058594
    6. ' solution' → logprob: -4.563255310058594
    7. ' s' → logprob: -4.938255310058594
    8. ' max' → logprob: -5.063255310058594
    9. ' process' → logprob: -5.313255310058594
    10. ' a' → logprob: -5.313255310058594

Token 23: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011688163504004478
    2. '_' → logprob: -5.136688232421875
    3. '(n' → logprob: -6.011688232421875
    4. '():' → logprob: -7.011688232421875
    5. '(s' → logprob: -7.136688232421875
    6. '(:' → logprob: -7.511688232421875
    7. '(_' → logprob: -8.636688232421875
    8. ':' → logprob: -9.386688232421875
    9. '(p' → logprob: -9.386688232421875
    10. '(a' → logprob: -9.511688232421875

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052120789885520935
    2. 'pass' → logprob: -4.802120685577393
    3. 'dp' → logprob: -4.802120685577393
    4. ' ' → logprob: -5.177120685577393
    5. ' pass' → logprob: -5.677120685577393
    6. ' for' → logprob: -5.927120685577393
    7. 'result' → logprob: -6.302120685577393
    8. 's' → logprob: -6.427120685577393
    9. ' dp' → logprob: -6.427120685577393
    10. 'count' → logprob: -6.677120685577393

Token 25: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7171458005905151
    2. ' for' → logprob: -2.5921459197998047
    3. ' ' → logprob: -2.8421459197998047
    4. 's' → logprob: -2.8421459197998047
    5. 'c' → logprob: -3.0921459197998047
    6. 'count' → logprob: -3.5921459197998047
    7. ' s' → logprob: -3.9671459197998047
    8. 'for' → logprob: -4.092145919799805
    9. 'dp' → logprob: -4.092145919799805
    10. ' dp' → logprob: -4.217145919799805

Token 26: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.260394811630249
    2. ' n' → logprob: -1.885394811630249
    3. 'p' → logprob: -3.260394811630249
    4. ' s' → logprob: -3.885394811630249
    5. 'n' → logprob: -4.635395050048828
    6. ' sum' → logprob: -6.135395050048828
    7. ' ' → logprob: -6.260395050048828
    8. 's' → logprob: -6.510395050048828
    9. ' len' → logprob: -6.760395050048828
    10. ' not' → logprob: -7.510395050048828

Token 27: ' in' (ID: 306)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7161704897880554
    2. '>' → logprob: -1.5911705493927002
    3. ' <=' → logprob: -1.9661705493927002
    4. ' ==' → logprob: -2.7161705493927
    5. '==' → logprob: -3.0911705493927
    6. '<=' → logprob: -3.2161705493927
    7. '%' → logprob: -5.466170310974121
    8. ' >=' → logprob: -5.716170310974121
    9. ' <' → logprob: -5.966170310974121
    10. ' %' → logprob: -6.466170310974121

Token 28: ' [' (ID: 723)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.012632783502340317
    2. 's' → logprob: -4.387632846832275
    3. ' n' → logprob: -10.137632369995117
    4. ')' → logprob: -10.637632369995117
    5. ' ' → logprob: -11.012632369995117
    6. '   ' → logprob: -11.387632369995117
    7. ' p' → logprob: -11.637632369995117
    8. '(s' → logprob: -12.012632369995117
    9. '(' → logprob: -13.075132369995117
    10. 'n' → logprob: -13.262632369995117

Token 29: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20724701881408691
    2. '[' → logprob: -1.957247018814087
    3. '{' → logprob: -3.957247018814087
    4. '(' → logprob: -4.457246780395508
    5. ' s' → logprob: -5.082246780395508
    6. '{s' → logprob: -5.707246780395508
    7. 'range' → logprob: -5.957246780395508
    8. '[s' → logprob: -7.207246780395508
    9. '   ' → logprob: -7.707246780395508
    10. ' [' → logprob: -7.707246780395508

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004415636416524649
    2. ' ,' → logprob: -5.504415512084961
    3. '6' → logprob: -9.754415512084961
    4. ']' → logprob: -9.879415512084961
    5. ']:' → logprob: -9.879415512084961
    6. '4' → logprob: -10.254415512084961
    7. '7' → logprob: -10.504415512084961
    8. ' ' → logprob: -10.504415512084961
    9. '1' → logprob: -11.004415512084961
    10. '3' → logprob: -11.129415512084961

Token 31: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.04994150623679161
    2. ' ' → logprob: -3.0499415397644043
    3. '3' → logprob: -6.924941539764404
    4. '4' → logprob: -8.299941062927246
    5. '   ' → logprob: -10.674941062927246
    6. '1' → logprob: -11.299941062927246
    7. ']' → logprob: -11.424941062927246
    8. '  ' → logprob: -11.424941062927246
    9. '2' → logprob: -11.549941062927246
    10. 'p' → logprob: -11.674941062927246

Token 32: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.002304889028891921
    2. '3' → logprob: -6.627305030822754
    3. '4' → logprob: -7.502305030822754
    4. ' ' → logprob: -8.002305030822754
    5. '1' → logprob: -11.002305030822754
    6. '10' → logprob: -11.627305030822754
    7. '0' → logprob: -11.689805030822754
    8. ']' → logprob: -11.939805030822754
    9. '   ' → logprob: -11.939805030822754
    10. '2' → logprob: -12.064805030822754

Token 33: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.013136224821209908
    2. ']:
' → logprob: -4.513136386871338
    3. ']' → logprob: -6.263136386871338
    4. ' ]' → logprob: -9.26313591003418
    5. ']:
' → logprob: -9.88813591003418
    6. ',' → logprob: -11.01313591003418
    7. ']:

' → logprob: -11.88813591003418
    8. ':' → logprob: -12.76313591003418
    9. '   ' → logprob: -12.88813591003418
    10. '):' → logprob: -13.26313591003418

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6544340252876282
    2. ':' → logprob: -0.7794340252876282
    3. '   ' → logprob: -4.7794342041015625
    4. ':
' → logprob: -4.9044342041015625
    5. '):' → logprob: -6.7794342041015625
    6. ' :' → logprob: -6.9044342041015625
    7. ':return' → logprob: -7.1544342041015625
    8. '    ' → logprob: -7.4044342041015625
    9. ',' → logprob: -7.7794342041015625
    10. '<|end|>' → logprob: -7.9044342041015625

Token 35: ' ret' (ID: 2881)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3157280385494232
    2. ' for' → logprob: -1.8157280683517456
    3. '   ' → logprob: -3.440727949142456
    4. '
' → logprob: -3.940727949142456
    5. ' 
' → logprob: -4.315728187561035
    6. ' return' → logprob: -4.440728187561035
    7. '           ' → logprob: -4.690728187561035
    8. 'for' → logprob: -4.815728187561035
    9. ' ' → logprob: -5.190728187561035
    10. '        
' → logprob: -6.315728187561035

Token 36: ' =' (ID: 314)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urn' → logprob: -2.045823566731997e-05
    2. 'u' → logprob: -11.125020027160645
    3. 'ur' → logprob: -12.500020027160645
    4. ' =' → logprob: -14.125020027160645
    5. 'urning' → logprob: -14.625020027160645
    6. ' urn' → logprob: -15.625020027160645
    7. '=' → logprob: -16.12502098083496
    8. 'urb' → logprob: -16.25002098083496
    9. 'urm' → logprob: -16.37502098083496
    10. 'turn' → logprob: -16.37502098083496

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4305120706558228
    2. '[' → logprob: -2.180511951446533
    3. '[p' → logprob: -2.180511951446533
    4. ' [' → logprob: -2.430511951446533
    5. '[n' → logprob: -2.430511951446533
    6. 'sum' → logprob: -2.555511951446533
    7. 'p' → logprob: -3.430511951446533
    8. ' ' → logprob: -3.555511951446533
    9. '[s' → logprob: -3.555511951446533
    10. 's' → logprob: -3.680511951446533

Token 38: '0' (ID: 15)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.3841967582702637
    2. '0' → logprob: -2.0091967582702637
    3. 'next' → logprob: -2.0091967582702637
    4. 'sum' → logprob: -2.3841967582702637
    5. 's' → logprob: -2.5091967582702637
    6. '[s' → logprob: -2.6341967582702637
    7. '[n' → logprob: -3.1341967582702637
    8. '[' → logprob: -3.3841967582702637
    9. 'max' → logprob: -3.3841967582702637
    10. '[p' → logprob: -3.6341967582702637

Token 39: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24115268886089325
    2. '<|end|>' → logprob: -1.6161526441574097
    3. '\n' → logprob: -5.491152763366699
    4. ' for' → logprob: -5.866152763366699
    5. ' ' → logprob: -6.366152763366699
    6. '<|end|>' → logprob: -6.616152763366699
    7. '  
' → logprob: -6.991152763366699
    8. '   ' → logprob: -7.241152763366699
    9. '    
' → logprob: -7.241152763366699
    10. ' 
' → logprob: -7.491152763366699

Token 40: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3811013400554657
    2. ' for' → logprob: -1.881101369857788
    3. '\n' → logprob: -2.131101369857788
    4. 'for' → logprob: -3.881101369857788
    5. '   ' → logprob: -5.006101131439209
    6. ' 
' → logprob: -5.756101131439209
    7. '    
' → logprob: -5.756101131439209
    8. '<|end|>' → logprob: -5.756101131439209
    9. '  
' → logprob: -6.006101131439209
    10. '
' → logprob: -6.631101131439209

Token 41: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01673164963722229
    2. ' for' → logprob: -4.1417317390441895
    3. '   ' → logprob: -7.6417317390441895
    4. '
' → logprob: -9.141731262207031
    5. '	for' → logprob: -9.391731262207031
    6. '       ' → logprob: -10.766731262207031
    7. ' ' → logprob: -13.391731262207031
    8. '```' → logprob: -13.641731262207031
    9. '    
' → logprob: -14.766731262207031
    10. '    ' → logprob: -14.766731262207031

Token 42: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1821523755788803
    2. 'i' → logprob: -1.8071523904800415
    3. ' s' → logprob: -6.557152271270752
    4. ' range' → logprob: -7.932152271270752
    5. ' ' → logprob: -8.30715274810791
    6. 's' → logprob: -8.30715274810791
    7. 'range' → logprob: -9.68215274810791
    8. '_' → logprob: -11.43215274810791
    9. ' idx' → logprob: -11.55715274810791
    10. '	i' → logprob: -11.55715274810791

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.052966270595788956
    2. 'in' → logprob: -3.552966356277466
    3. ',' → logprob: -3.802966356277466
    4. ' ' → logprob: -7.677966117858887
    5. ' ,' → logprob: -9.302966117858887
    6. 'range' → logprob: -10.677966117858887
    7. '  ' → logprob: -11.052966117858887
    8. '   ' → logprob: -11.302966117858887
    9. ' range' → logprob: -11.677966117858887
    10. 's' → logprob: -12.177966117858887

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693734467029572
    2. ' range' → logprob: -2.1269373893737793
    3. 's' → logprob: -12.251936912536621
    4. '	range' → logprob: -13.376936912536621
    5. ' ' → logprob: -14.126936912536621
    6. '(range' → logprob: -14.376936912536621
    7. ' xrange' → logprob: -15.001936912536621
    8. 'ran' → logprob: -16.001937866210938
    9. 'rang' → logprob: -16.001937866210938
    10. ' s' → logprob: -16.126937866210938

Token 45: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009548535570502281
    2. '(len' → logprob: -4.759548664093018
    3. '(' → logprob: -7.009548664093018
    4. '(p' → logprob: -11.50954818725586
    5. 'n' → logprob: -12.25954818725586
    6. ' (' → logprob: -12.38454818725586
    7. ' n' → logprob: -12.50954818725586
    8. 'len' → logprob: -12.75954818725586
    9. '(s' → logprob: -14.00954818725586
    10. ' len' → logprob: -14.00954818725586

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01680421642959118
    2. '-' → logprob: -4.516804218292236
    3. '):
' → logprob: -5.266804218292236
    4. ' -' → logprob: -9.016803741455078
    5. '):
' → logprob: -9.141803741455078
    6. ')' → logprob: -9.141803741455078
    7. '   ' → logprob: -9.516803741455078
    8. ' ):' → logprob: -9.516803741455078
    9. ' ' → logprob: -10.391803741455078
    10. '       ' → logprob: -10.641803741455078

Token 47: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47895005345344543
    2. '           ' → logprob: -1.353950023651123
    3. '       ' → logprob: -3.228950023651123
    4. ' ' → logprob: -3.353950023651123
    5. ' :' → logprob: -4.228950023651123
    6. ' if' → logprob: -4.603950023651123
    7. ':
' → logprob: -5.103950023651123
    8. '   ' → logprob: -5.353950023651123
    9. '<|end|>' → logprob: -5.728950023651123
    10. ',' → logprob: -6.353950023651123

Token 48: ' l' (ID: 305)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6400104761123657
    2. ' if' → logprob: -1.0150104761123657
    3. 'if' → logprob: -2.390010356903076
    4. '               ' → logprob: -4.390010356903076
    5. '       ' → logprob: -6.140010356903076
    6. '   ' → logprob: -6.390010356903076
    7. ' ' → logprob: -6.890010356903076
    8. 's' → logprob: -8.015010833740234
    9. ' s' → logprob: -8.265010833740234
    10. '```' → logprob: -8.390010833740234

Token 49: 'sd' (ID: 19879)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.1490154266357422
    2. '=' → logprob: -1.3990154266357422
    3. ' =' → logprob: -2.149015426635742
    4. '=i' → logprob: -2.774015426635742
    5. '+=' → logprob: -3.024015426635742
    6. '   ' → logprob: -3.274015426635742
    7. 'et' → logprob: -3.524015426635742
    8. 'ist' → logprob: -3.649015426635742
    9. 'i' → logprob: -3.774015426635742
    10. '+' → logprob: -4.274015426635742

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5251880884170532
    2. '=' → logprob: -0.9001880884170532
    3. '=s' → logprob: -6.275187969207764
    4. 's' → logprob: -8.775188446044922
    5. ']' → logprob: -12.025188446044922
    6. ' ' → logprob: -12.775188446044922
    7. 'x' → logprob: -13.275188446044922
    8. '(s' → logprob: -13.525188446044922
    9. ')' → logprob: -13.525188446044922
    10. '=i' → logprob: -13.650188446044922

Token 51: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.14271534979343414
    2. 's' → logprob: -2.0177154541015625
    3. '	s' → logprob: -11.017715454101562
    4. ' ' → logprob: -11.767715454101562
    5. 'int' → logprob: -13.017715454101562
    6. '_s' → logprob: -13.142715454101562
    7. '(s' → logprob: -13.142715454101562
    8. '   ' → logprob: -13.392715454101562
    9. '10' → logprob: -13.392715454101562
    10. '<|end|>' → logprob: -13.517715454101562

Token 52: '[n' (ID: 15433)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.129266067640856e-05
    2. '[' → logprob: -11.125020980834961
    3. '[-' → logprob: -12.250020980834961
    4. '[n' → logprob: -14.500020980834961
    5. ' [' → logprob: -14.750020980834961
    6. 'i' → logprob: -15.375020980834961
    7. '[
' → logprob: -16.62502098083496
    8. '```' → logprob: -16.75002098083496
    9. '[index' → logprob: -17.00002098083496
    10. '][' → logprob: -17.12502098083496

Token 53: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.060756199061870575
    2. ' -' → logprob: -2.935756206512451
    3. '1' → logprob: -6.060756206512451
    4. '-i' → logprob: -6.310756206512451
    5. 'i' → logprob: -6.560756206512451
    6. '[i' → logprob: -8.935755729675293
    7. ' ' → logprob: -9.560755729675293
    8. ']' → logprob: -10.685755729675293
    9. ' i' → logprob: -10.810755729675293
    10. 's' → logprob: -12.060755729675293

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12803103029727936
    2. 'i' → logprob: -2.128031015396118
    3. ' ' → logprob: -7.253031253814697
    4. ' i' → logprob: -7.878031253814697
    5. '   ' → logprob: -12.128030776977539
    6. '(' → logprob: -13.003030776977539
    7. '-' → logprob: -13.128030776977539
    8. '(i' → logprob: -13.503030776977539
    9. '	i' → logprob: -14.440530776977539
    10. '  ' → logprob: -14.503030776977539

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1272464245557785
    2. 'i' → logprob: -2.127246379852295
    3. '(' → logprob: -8.752246856689453
    4. '(i' → logprob: -9.877246856689453
    5. ' i' → logprob: -9.877246856689453
    6. ' ' → logprob: -10.002246856689453
    7. '   ' → logprob: -13.002246856689453
    8. '-' → logprob: -13.377246856689453
    9. '{i' → logprob: -13.377246856689453
    10. '	i' → logprob: -14.002246856689453

Token 56: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -1.0149791240692139
    2. ' -' → logprob: -1.1399791240692139
    3. ']' → logprob: -1.2649791240692139
    4. '-' → logprob: -3.764979124069214
    5. '])' → logprob: -5.139979362487793
    6. '][' → logprob: -6.389979362487793
    7. 'i' → logprob: -6.514979362487793
    8. '[i' → logprob: -6.514979362487793
    9. ' i' → logprob: -8.139979362487793
    10. ')' → logprob: -8.139979362487793

Token 57: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06203031167387962
    2. ' i' → logprob: -2.81203031539917
    3. '	i' → logprob: -10.062029838562012
    4. ' ' → logprob: -11.312029838562012
    5. ']' → logprob: -12.937029838562012
    6. '   ' → logprob: -13.062029838562012
    7. '  ' → logprob: -13.937029838562012
    8. ')' → logprob: -14.687029838562012
    9. ')i' → logprob: -14.687029838562012
    10. '<|end|>' → logprob: -14.937029838562012

Token 58: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009264515712857246
    2. '])' → logprob: -4.8842644691467285
    3. ' ]' → logprob: -7.0092644691467285
    4. ']
' → logprob: -7.3842644691467285
    5. ']

' → logprob: -10.884264945983887
    6. ' ])' → logprob: -10.884264945983887
    7. '])
' → logprob: -11.009264945983887
    8. ')]' → logprob: -11.384264945983887
    9. ']%' → logprob: -11.509264945983887
    10. ']]' → logprob: -12.009264945983887

Token 59: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04269551485776901
    2. '
' → logprob: -4.41769552230835
    3. 'if' → logprob: -4.79269552230835
    4. ' %' → logprob: -5.29269552230835
    5. ' if' → logprob: -5.91769552230835
    6. ')' → logprob: -6.29269552230835
    7. ']' → logprob: -6.66769552230835
    8. '           ' → logprob: -6.66769552230835
    9. '=' → logprob: -6.91769552230835
    10. ' =' → logprob: -7.16769552230835

Token 60: ' if' (ID: 538)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.883476972579956
    2. '           ' → logprob: -1.258476972579956
    3. ' if' → logprob: -2.258476972579956
    4. '=' → logprob: -3.383476972579956
    5. ' ' → logprob: -3.383476972579956
    6. 'if' (adapté à ' if') → logprob: -3.633476972579956
    7. ' %' → logprob: -4.008477210998535
    8. '          ' → logprob: -4.383477210998535
    9. '       ' → logprob: -4.508477210998535
    10. ' =' → logprob: -4.508477210998535

Token 61: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.0028521865606307983
    2. 'l' → logprob: -6.002851963043213
    3. 'ls' → logprob: -8.502852439880371
    4. ' (' → logprob: -9.627852439880371
    5. '(' → logprob: -10.127852439880371
    6. ' ' → logprob: -10.877852439880371
    7. 'ld' → logprob: -11.127852439880371
    8. '0' → logprob: -11.502852439880371
    9. 's' → logprob: -12.377852439880371
    10. '(ls' → logprob: -12.377852439880371

Token 62: 'sd' (ID: 19879)
  Prédit: 'sd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sd' → logprob: -0.18227140605449677
    2. 's' → logprob: -1.8072713613510132
    3. '%' → logprob: -7.057271480560303
    4. 'st' → logprob: -7.307271480560303
    5. 'd' → logprob: -7.432271480560303
    6. '==' → logprob: -8.807271003723145
    7. ' %' → logprob: -9.557271003723145
    8. '%d' → logprob: -10.432271003723145
    9. ' sd' → logprob: -11.057271003723145
    10. '   ' → logprob: -11.057271003723145

Token 63: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47428765892982483
    2. '%' → logprob: -0.9742876291275024
    3. '==' → logprob: -9.224287986755371
    4. ' ' → logprob: -10.224287986755371
    5. ' ==' → logprob: -10.599287986755371
    6. ' in' → logprob: -10.724287986755371
    7. '%i' → logprob: -12.099287986755371
    8. '%=' → logprob: -12.724287986755371
    9. '%n' → logprob: -12.849287986755371
    10. '0' → logprob: -13.099287986755371

Token 64: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010362643515691161
    2. ' p' → logprob: -6.876036167144775
    3. ' ' → logprob: -13.626036643981934
    4. '2' → logprob: -13.626036643981934
    5. '	p' → logprob: -15.001036643981934
    6. '==' → logprob: -15.501036643981934
    7. '<p' → logprob: -15.876036643981934
    8. '  ' → logprob: -16.251035690307617
    9. '=' → logprob: -16.751035690307617
    10. '(p' → logprob: -17.001035690307617

Token 65: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0006709783338010311
    2. ' ==' → logprob: -7.375670909881592
    3. '=' → logprob: -10.37567138671875
    4. '===' → logprob: -12.37567138671875
    5. '==
' → logprob: -12.75067138671875
    6. ']==' → logprob: -13.50067138671875
    7. '0' → logprob: -13.75067138671875
    8. ')==' → logprob: -13.75067138671875
    9. '!=' → logprob: -13.87567138671875
    10. '```' → logprob: -14.62567138671875

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861468818038702
    2. ' ' → logprob: -4.758614540100098
    3. '=' → logprob: -16.508615493774414
    4. '<|end|>' → logprob: -17.383615493774414
    5. '  ' → logprob: -17.633615493774414
    6. '۰' → logprob: -17.883615493774414
    7. ' ' → logprob: -18.008615493774414
    8. '```' → logprob: -18.258615493774414
    9. '==' → logprob: -18.508615493774414
    10. 's' → logprob: -18.821115493774414

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.015305552864447e-05
    2. ' ' → logprob: -9.750060081481934
    3. '۰' → logprob: -14.000060081481934
    4. '<|end|>' → logprob: -15.750060081481934
    5. '٠' → logprob: -15.812560081481934
    6. '০' → logprob: -15.937560081481934
    7. '०' → logprob: -16.00006103515625
    8. '０' → logprob: -16.06256103515625
    9. '=' → logprob: -16.31256103515625
    10. '```' → logprob: -16.50006103515625

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015686646802350879
    2. ':
' → logprob: -6.501568794250488
    3. ' :' → logprob: -10.376568794250488
    4. '           ' → logprob: -11.126568794250488
    5. '               ' → logprob: -11.876568794250488
    6. ':return' → logprob: -12.001568794250488
    7. ',' → logprob: -13.501568794250488
    8. '):' → logprob: -13.626568794250488
    9. ':

' → logprob: -14.126568794250488
    10. ' and' → logprob: -14.126568794250488

Token 69: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002810344099998474
    2. ' ' → logprob: -6.752810478210449
    3. '
' → logprob: -7.752810478210449
    4. ',' → logprob: -8.62781047821045
    5. '              ' → logprob: -8.62781047821045
    6. '                
' → logprob: -8.75281047821045
    7. '<|end|>' → logprob: -8.87781047821045
    8. '1' → logprob: -9.37781047821045
    9. '           ' → logprob: -9.50281047821045
    10. ' 
' → logprob: -9.62781047821045

Token 70: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.0926557332277298
    2. ' ret' → logprob: -2.467655658721924
    3. '                   ' → logprob: -6.717655658721924
    4. '               ' → logprob: -7.092655658721924
    5. '
' → logprob: -7.592655658721924
    6. '+' → logprob: -7.967655658721924
    7. '	ret' → logprob: -8.717656135559082
    8. '           ' → logprob: -9.092656135559082
    9. '```' → logprob: -9.092656135559082
    10. ' ' → logprob: -9.217656135559082

Token 71: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16113580763339996
    2. '+=' → logprob: -1.9111357927322388
    3. ' =' → logprob: -7.286135673522949
    4. '=' → logprob: -8.53613567352295
    5. '                ' → logprob: -10.91113567352295
    6. '+' → logprob: -12.16113567352295
    7. ' ' → logprob: -13.28613567352295
    8. ']+=' → logprob: -13.41113567352295
    9. ' +' → logprob: -13.66113567352295
    10. '            ' → logprob: -14.53613567352295

Token 72: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5418910980224609
    2. 'i' → logprob: -1.041891098022461
    3. '1' → logprob: -2.791891098022461
    4. ' n' → logprob: -6.666891098022461
    5. ' i' → logprob: -6.791891098022461
    6. '(i' → logprob: -7.166891098022461
    7. '(n' → logprob: -7.166891098022461
    8. '(' → logprob: -8.791891098022461
    9. ' ' → logprob: -9.791891098022461
    10. ' (' → logprob: -10.291891098022461

Token 73: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6436125636100769
    2. ' -' → logprob: -0.7686125636100769
    3. '-i' → logprob: -4.518612384796143
    4. '-n' → logprob: -11.1436128616333
    5. ' ' → logprob: -11.5186128616333
    6. '   ' → logprob: -13.1436128616333
    7. '-token' → logprob: -13.3936128616333
    8. '−' → logprob: -13.3936128616333
    9. '<|end|>' → logprob: -13.3936128616333
    10. '-end' → logprob: -13.6436128616333

Token 74: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14684827625751495
    2. '1' → logprob: -2.021848201751709
    3. ' i' → logprob: -5.521848201751709
    4. ' ' → logprob: -9.271848678588867
    5. '	i' → logprob: -9.896848678588867
    6. '   ' → logprob: -12.021848678588867
    7. '(i' → logprob: -12.396848678588867
    8. '_i' → logprob: -13.459348678588867
    9. '```' → logprob: -13.709348678588867
    10. '-i' → logprob: -13.771848678588867

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4001260995864868
    2. '       ' → logprob: -1.4001260995864868
    3. ' return' → logprob: -3.0251259803771973
    4. '
' → logprob: -4.525125980377197
    5. '	return' → logprob: -4.775125980377197
    6. 'return' → logprob: -5.400125980377197
    7. ' ' → logprob: -6.275125980377197
    8. '\n' → logprob: -6.650125980377197
    9. '    
' → logprob: -6.775125980377197
    10. '```' → logprob: -7.025125980377197

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11838279664516449
    2. '   ' → logprob: -2.243382692337036
    3. 'return' → logprob: -5.743382930755615
    4. '           ' → logprob: -6.993382930755615
    5. '	return' → logprob: -7.243382930755615
    6. ' return' → logprob: -7.993382930755615
    7. '<|end|>' → logprob: -8.618382453918457
    8. '```' → logprob: -10.493382453918457
    9. ':return' → logprob: -10.618382453918457
    10. '	' → logprob: -10.868382453918457

Token 77: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08115709573030472
    2. '       ' → logprob: -2.9561572074890137
    3. 'return' (adapté à ' return') → logprob: -3.7061572074890137
    4. ' return' → logprob: -7.331157207489014
    5. '	return' → logprob: -7.956157207489014
    6. 'else' → logprob: -8.331156730651855
    7. '           ' → logprob: -9.706156730651855
    8. ':return' → logprob: -11.581156730651855
    9. ')return' → logprob: -12.081156730651855
    10. '```' → logprob: -12.081156730651855

Token 78: ' ret' (ID: 2881)
  Prédit: ' ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.5241122245788574
    2. 'ret' → logprob: -0.8991122245788574
    3. '0' → logprob: -7.024112224578857
    4. ' None' → logprob: -10.024112701416016
    5. 'None' → logprob: -10.899112701416016
    6. ' ' → logprob: -10.899112701416016
    7. '(ret' → logprob: -12.399112701416016
    8. ' ' → logprob: -12.899112701416016
    9. '	ret' → logprob: -13.149112701416016
    10. '$ret' → logprob: -13.149112701416016

Token 79: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3409538269042969
    2. ')' → logprob: -1.9659538269042969
    3. '<|end|>' → logprob: -2.715953826904297
    4. ' ' → logprob: -3.215953826904297
    5. '```' → logprob: -4.465953826904297
    6. '...' → logprob: -4.465953826904297
    7. '(' → logprob: -5.715953826904297
    8. '#' → logprob: -5.715953826904297
    9. '0' → logprob: -5.840953826904297
    10. '  ' → logprob: -6.215953826904297

Token 81: ' ten' (ID: 4325)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6238507032394409
    2. 'ret' → logprob: -1.998850703239441
    3. '   ' → logprob: -2.4988508224487305
    4. ' ' → logprob: -3.6238508224487305
    5. 'mul' → logprob: -3.6238508224487305
    6. 'pow' → logprob: -3.8738508224487305
    7. 'mult' → logprob: -4.1238508224487305
    8. '*' → logprob: -4.2488508224487305
    9. 'ans' → logprob: -4.3738508224487305
    10. 'else' → logprob: -4.3738508224487305

Token 82: ' =' (ID: 314)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.6236070394515991
    2. '_p' → logprob: -1.4986070394515991
    3. 'pow' → logprob: -1.9986070394515991
    4. '_power' → logprob: -2.8736071586608887
    5. 's' → logprob: -3.9986071586608887
    6. '=' → logprob: -4.498607158660889
    7. '```' → logprob: -4.998607158660889
    8. ' =' → logprob: -5.123607158660889
    9. '**' → logprob: -6.248607158660889
    10. 'power' → logprob: -7.123607158660889

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007818840444087982
    2. '[' → logprob: -5.007818698883057
    3. ' ' → logprob: -8.132819175720215
    4. 'pow' → logprob: -8.132819175720215
    5. '0' → logprob: -8.382819175720215
    6. '10' → logprob: -8.632819175720215
    7. ' [' → logprob: -10.257819175720215
    8. '[p' → logprob: -10.757819175720215
    9. '(' → logprob: -10.882819175720215
    10. 'ten' → logprob: -11.882819175720215

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04430021345615387
    2. '[' → logprob: -3.1693003177642822
    3. '10' → logprob: -7.544300079345703
    4. 'pow' → logprob: -7.669300079345703
    5. '0' → logprob: -9.544300079345703
    6. '(' → logprob: -9.794300079345703
    7. '[p' → logprob: -9.919300079345703
    8. ' [' → logprob: -10.794300079345703
    9. 'ten' → logprob: -10.794300079345703
    10. '{' → logprob: -11.044300079345703

Token 85: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39961183071136475
    2. '   ' → logprob: -1.5246118307113647
    3. ':' → logprob: -3.3996119499206543
    4. '%' → logprob: -4.024611949920654
    5. '<|end|>' → logprob: -4.524611949920654
    6. 'ret' → logprob: -5.149611949920654
    7. '=' → logprob: -5.274611949920654
    8. '```' → logprob: -5.274611949920654
    9. ' ' → logprob: -5.524611949920654
    10. '0' → logprob: -5.649611949920654

Token 86: '   ' (ID: 271)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.816186249256134
    2. '   ' → logprob: -1.1911861896514893
    3. '
' → logprob: -2.1911861896514893
    4. ',' → logprob: -2.1911861896514893
    5. '0' → logprob: -4.566186428070068
    6. 'def' → logprob: -5.066186428070068
    7. ' ret' → logprob: -5.691186428070068
    8. '*' → logprob: -6.566186428070068
    9. '```' → logprob: -6.691186428070068
    10. ' ' → logprob: -6.941186428070068

Token 87: ' cnt' (ID: 27340)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.04122331365942955
    2. 'res' → logprob: -4.291223526000977
    3. 'ans' → logprob: -4.416223526000977
    4. 'mod' → logprob: -5.916223526000977
    5. ' ret' → logprob: -6.041223526000977
    6. 'cur' → logprob: -6.041223526000977
    7. 'result' → logprob: -6.541223526000977
    8. '   ' → logprob: -6.916223526000977
    9. 'total' → logprob: -6.916223526000977
    10. 'pow' → logprob: -7.416223526000977

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3013989329338074
    2. '=' → logprob: -1.4263989925384521
    3. 's' → logprob: -3.926398992538452
    4. '={}' → logprob: -8.676399230957031
    5. ',' → logprob: -9.301399230957031
    6. ' ' → logprob: -10.301399230957031
    7. '={' → logprob: -12.051399230957031
    8. '[' → logprob: -12.176399230957031
    9. ':' → logprob: -12.426399230957031
    10. '  ' → logprob: -12.551399230957031

Token 89: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.012411579489707947
    2. '0' → logprob: -5.512411594390869
    3. ' {' → logprob: -5.512411594390869
    4. '{}' → logprob: -5.637411594390869
    5. '[' → logprob: -8.137411117553711
    6. '1' → logprob: -8.887411117553711
    7. 'default' → logprob: -9.012411117553711
    8. ' ' → logprob: -9.262411117553711
    9. ' defaultdict' → logprob: -10.512411117553711
    10. ' {}' → logprob: -11.137411117553711

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003267552936449647
    2. '1' → logprob: -5.878267765045166
    3. '{' → logprob: -7.753267765045166
    4. ' ' → logprob: -11.128267288208008
    5. '{}' → logprob: -11.503267288208008
    6. ']' → logprob: -13.003267288208008
    7. 'default' → logprob: -13.253267288208008
    8. '[' → logprob: -13.378267288208008
    9. '100' → logprob: -14.753267288208008
    10. ')' → logprob: -15.003267288208008

Token 91: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0571664422750473
    2. ']*' → logprob: -3.182166337966919
    3. ',' → logprob: -4.307166576385498
    4. ' for' → logprob: -8.05716609954834
    5. ']*(' → logprob: -8.68216609954834
    6. ' ]' → logprob: -10.18216609954834
    7. '0' → logprob: -11.05716609954834
    8. ')' → logprob: -11.30716609954834
    9. '<|end|>' → logprob: -11.43216609954834
    10. '   ' → logprob: -11.68216609954834

Token 92: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0818800926208496
    2. '[' → logprob: -1.5818800926208496
    3. '0' → logprob: -1.7068800926208496
    4. ' *' → logprob: -2.0818800926208496
    5. ' for' → logprob: -3.0818800926208496
    6. ']' → logprob: -3.4568800926208496
    7. '(' → logprob: -3.5818800926208496
    8. '*' → logprob: -4.20688009262085
    9. ']*' → logprob: -4.70688009262085
    10. '*[' → logprob: -5.83188009262085

Token 93: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.704273118884885e-07
    2. ' p' → logprob: -14.750000953674316
    3. '100' → logprob: -15.750000953674316
    4. '<p' → logprob: -18.375
    5. '999' → logprob: -20.0
    6. '(p' → logprob: -20.125
    7. '	p' → logprob: -20.125
    8. '(' → logprob: -20.375
    9. '{' → logprob: -21.0
    10. '*p' → logprob: -21.25

Token 94: '
' (ID: 198)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0023975323420017958
    2. '   ' → logprob: -7.002397537231445
    3. ' cnt' → logprob: -7.252397537231445
    4. '0' → logprob: -8.377397537231445
    5. '	cnt' → logprob: -8.377397537231445
    6. '[cnt' → logprob: -9.502397537231445
    7. '<|end|>' → logprob: -9.752397537231445
    8. '```' → logprob: -10.377397537231445
    9. 'count' → logprob: -10.502397537231445
    10. ' ' → logprob: -10.502397537231445

Token 95: '   ' (ID: 271)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0018675910541787744
    2. '   ' → logprob: -6.876867771148682
    3. ' cnt' → logprob: -7.751867771148682
    4. '0' → logprob: -8.751867294311523
    5. '	cnt' → logprob: -8.876867294311523
    6. ' ' → logprob: -11.001867294311523
    7. 'count' → logprob: -11.001867294311523
    8. 'counter' → logprob: -11.376867294311523
    9. '<|end|>' → logprob: -11.376867294311523
    10. 'ret' → logprob: -11.376867294311523

Token 96: ' r' (ID: 428)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.004087185952812433
    2. 'ret' → logprob: -5.879086971282959
    3. 'ans' → logprob: -7.254086971282959
    4. ' cnt' → logprob: -9.129087448120117
    5. 'counter' → logprob: -9.254087448120117
    6. 'res' → logprob: -9.629087448120117
    7. '   ' → logprob: -9.754087448120117
    8. '0' → logprob: -10.129087448120117
    9. 'count' → logprob: -10.254087448120117
    10. 'answer' → logprob: -10.379087448120117

Token 97: ' =' (ID: 314)
  Prédit: 'em'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'em' → logprob: -0.6069204211235046
    2. 'ema' → logprob: -1.6069204807281494
    3. 'es' → logprob: -1.8569204807281494
    4. 'unning' → logprob: -2.7319204807281494
    5. '=' → logprob: -4.35692024230957
    6. ' =' → logprob: -5.10692024230957
    7. 'emain' → logprob: -5.10692024230957
    8. 'sum' → logprob: -5.60692024230957
    9. 'un' → logprob: -6.73192024230957
    10. 'ev' → logprob: -7.35692024230957

Token 98: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038054682314395905
    2. ' ' → logprob: -3.2880547046661377
    3. '1' → logprob: -11.788054466247559
    4. '<|end|>' → logprob: -13.663054466247559
    5. '10' → logprob: -14.038054466247559
    6. '[' → logprob: -14.663054466247559
    7. '=' → logprob: -14.913054466247559
    8. '2' → logprob: -15.225554466247559
    9. '  ' → logprob: -15.225554466247559
    10. 'n' → logprob: -15.538054466247559

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001860174525063485
    2. ' ' → logprob: -8.6251859664917
    3. '1' → logprob: -12.2501859664917
    4. '10' → logprob: -14.1251859664917
    5. '[' → logprob: -15.2501859664917
    6. '2' → logprob: -16.250186920166016
    7. 's' → logprob: -16.875186920166016
    8. 'n' → logprob: -16.937686920166016
    9. '(' → logprob: -17.312686920166016
    10. '7' → logprob: -17.375186920166016

Token 100: '
' (ID: 198)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2078687846660614
    2. '   ' → logprob: -1.7078688144683838
    3. '<|end|>' → logprob: -6.207868576049805
    4. '	cnt' → logprob: -6.832868576049805
    5. ' cnt' → logprob: -7.082868576049805
    6. ' ' → logprob: -7.207868576049805
    7. '  ' → logprob: -8.207868576049805
    8. '[cnt' → logprob: -8.207868576049805
    9. '0' → logprob: -8.332868576049805
    10. '(cnt' → logprob: -8.457868576049805

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41074439883232117
    2. 'ret' → logprob: -1.1607444286346436
    3. 'cnt' → logprob: -4.1607441902160645
    4. ' ret' → logprob: -6.1607441902160645
    5. 'ans' → logprob: -6.7857441902160645
    6. 'total' → logprob: -6.9107441902160645
    7. '       ' → logprob: -7.0357441902160645
    8. 'answer' → logprob: -7.4107441902160645
    9. ' ' → logprob: -7.7857441902160645
    10. '  ' → logprob: -8.035744667053223

Token 102: ' cnt' (ID: 27340)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.09080266952514648
    2. 'ans' → logprob: -2.7158026695251465
    3. 'res' → logprob: -4.0908026695251465
    4. 'result' → logprob: -6.7158026695251465
    5. ' ret' → logprob: -6.9658026695251465
    6. 'for' → logprob: -7.4658026695251465
    7. 'answer' → logprob: -7.7158026695251465
    8. '   ' → logprob: -7.8408026695251465
    9. 'cnt' (adapté à ' cnt') → logprob: -8.840803146362305
    10. 'total' → logprob: -9.340803146362305

Token 103: '[r' (ID: 33265)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001454955490771681
    2. '[r' → logprob: -9.12514591217041
    3. '[p' → logprob: -10.37514591217041
    4. '0' → logprob: -13.50014591217041
    5. '[s' → logprob: -13.62514591217041
    6. '[n' → logprob: -13.75014591217041
    7. ' [' → logprob: -14.87514591217041
    8. '[len' → logprob: -15.37514591217041
    9. '[(' → logprob: -15.87514591217041
    10. 'p' → logprob: -16.000144958496094

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004628888331353664
    2. ']+=' → logprob: -5.379628658294678
    3. ' ]' → logprob: -11.879629135131836
    4. ']+' → logprob: -14.879629135131836
    5. '"]' → logprob: -15.379629135131836
    6. ')' → logprob: -15.504629135131836
    7. '']' → logprob: -15.504629135131836
    8. '`]' → logprob: -15.504629135131836
    9. ']++;
' → logprob: -15.879629135131836
    10. ']
' → logprob: -16.379629135131836

Token 105: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2666463255882263
    2. ' +=' → logprob: -1.516646385192871
    3. '=' → logprob: -4.266646385192871
    4. ']+=' → logprob: -8.016646385192871
    5. ' =' → logprob: -8.516646385192871
    6. '+' → logprob: -10.266646385192871
    7. '<|end|>' → logprob: -12.016646385192871
    8. ']' → logprob: -12.391646385192871
    9. '```' → logprob: -13.641646385192871
    10. '1' → logprob: -13.891646385192871

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.625158309936523
    4. '```' → logprob: -17.625158309936523
    5. '  ' → logprob: -18.500158309936523
    6. '0' → logprob: -18.812658309936523
    7. '<|end|>' → logprob: -19.875158309936523
    8. '۱' → logprob: -20.062658309936523
    9. '2' → logprob: -20.187658309936523
    10. '[' → logprob: -20.187658309936523

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '{' → logprob: -16.750011444091797
    4. '0' → logprob: -17.125011444091797
    5. '```' → logprob: -17.125011444091797
    6. '[' → logprob: -18.000011444091797
    7. '2' → logprob: -18.250011444091797
    8. '(' → logprob: -18.375011444091797
    9. 's' → logprob: -18.375011444091797
    10. '   ' → logprob: -18.375011444091797

Token 108: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32091861963272095
    2. ' for' → logprob: -1.8209185600280762
    3. 'for' → logprob: -2.320918560028076
    4. '<|end|>' → logprob: -4.445918560028076
    5. '	for' → logprob: -7.195918560028076
    6. '
' → logprob: -7.320918560028076
    7. '```' → logprob: -7.570918560028076
    8. ' ' → logprob: -8.320919036865234
    9. '    
' → logprob: -8.570919036865234
    10. '  ' → logprob: -9.445919036865234

Token 109: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33097803592681885
    2. '   ' → logprob: -1.4559780359268188
    3. ' for' → logprob: -3.7059779167175293
    4. 'result' → logprob: -4.455977916717529
    5. 'res' → logprob: -5.330977916717529
    6. 'ans' → logprob: -5.580977916717529
    7. 'ret' → logprob: -6.330977916717529
    8. 'answer' → logprob: -7.205977916717529
    9. 'total' → logprob: -7.955977916717529
    10. '```' → logprob: -8.580978393554688

Token 110: ' for' (ID: 395)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.04617483541369438
    2. 'res' → logprob: -4.171175003051758
    3. 'ans' → logprob: -4.171175003051758
    4. 'for' (adapté à ' for') → logprob: -4.796175003051758
    5. 'result' → logprob: -5.546175003051758
    6. '   ' → logprob: -6.921175003051758
    7. 'answer' → logprob: -6.921175003051758
    8. ' ret' → logprob: -9.421175003051758
    9. 'total' → logprob: -11.046175003051758
    10. ' for' → logprob: -12.171175003051758

Token 111: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6935258507728577
    2. ' i' → logprob: -0.6935258507728577
    3. ' j' → logprob: -9.318526268005371
    4. 'j' → logprob: -9.318526268005371
    5. 'x' → logprob: -10.193526268005371
    6. ' x' → logprob: -10.318526268005371
    7. ' ' → logprob: -10.818526268005371
    8. 'd' → logprob: -10.943526268005371
    9. '(i' → logprob: -11.568526268005371
    10. 'c' → logprob: -11.568526268005371

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011134239612147212
    2. 'in' → logprob: -6.876113414764404
    3. ' range' → logprob: -9.876113891601562
    4. 'range' → logprob: -10.751113891601562
    5. ' ' → logprob: -12.751113891601562
    6. '(range' → logprob: -13.501113891601562
    7. '   ' → logprob: -13.751113891601562
    8. ',' → logprob: -14.126113891601562
    9. 'd' → logprob: -14.626113891601562
    10. '  ' → logprob: -15.376113891601562

Token 113: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.523193895816803
    2. ' range' → logprob: -0.898193895816803
    3. ' ' → logprob: -10.773194313049316
    4. 's' → logprob: -11.273194313049316
    5. '   ' → logprob: -11.898194313049316
    6. ' reversed' → logprob: -12.273194313049316
    7. 're' → logprob: -12.398194313049316
    8. '	range' → logprob: -12.398194313049316
    9. '(range' → logprob: -12.523194313049316
    10. 'n' → logprob: -12.648194313049316

Token 114: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0042121936567127705
    2. '(' → logprob: -5.629212379455566
    3. 'n' → logprob: -7.504212379455566
    4. '(len' → logprob: -10.629212379455566
    5. ' n' → logprob: -11.004212379455566
    6. ' (' → logprob: -11.629212379455566
    7. '   ' → logprob: -12.004212379455566
    8. '1' → logprob: -13.254212379455566
    9. '	n' → logprob: -14.379212379455566
    10. '(p' → logprob: -14.504212379455566

Token 115: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2814852297306061
    2. ' -' → logprob: -1.4064851999282837
    3. '):
' → logprob: -8.281485557556152
    4. ' ' → logprob: -10.406485557556152
    5. '   ' → logprob: -10.531485557556152
    6. '):' → logprob: -11.031485557556152
    7. '  ' → logprob: -12.031485557556152
    8. '1' → logprob: -14.031485557556152
    9. ')' → logprob: -15.031485557556152
    10. '):

' → logprob: -15.406485557556152

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02313261851668358
    2. ' r' → logprob: -4.523132801055908
    3. '   ' → logprob: -4.898132801055908
    4. ' s' → logprob: -5.773132801055908
    5. ',' → logprob: -8.27313232421875
    6. '    ' → logprob: -8.52313232421875
    7. 'r' → logprob: -8.64813232421875
    8. '<|end|>' → logprob: -8.77313232421875
    9. '```' → logprob: -9.02313232421875
    10. ' ' → logprob: -9.27313232421875

Token 117: ' ms' (ID: 15217)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.7785822749137878
    2. 'r' → logprob: -0.9035822749137878
    3. '   ' → logprob: -2.4035823345184326
    4. '       ' → logprob: -4.1535820960998535
    5. 'idx' → logprob: -4.6535820960998535
    6. ' idx' → logprob: -4.9035820960998535
    7. 'd' → logprob: -5.7785820960998535
    8. 'x' → logprob: -6.7785820960998535
    9. ' ' → logprob: -7.1535820960998535
    10. ' x' → logprob: -7.2785820960998535

Token 118: 'd' (ID: 67)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5412485003471375
    2. '   ' → logprob: -2.1662485599517822
    3. '=' → logprob: -2.4162485599517822
    4. 's' → logprob: -3.0412485599517822
    5. ' =' → logprob: -3.2912485599517822
    6. 'd' → logprob: -3.6662485599517822
    7. '=i' → logprob: -3.6662485599517822
    8. '       ' → logprob: -3.9162485599517822
    9. '[i' → logprob: -4.041248321533203
    10. ' i' → logprob: -5.166248321533203

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049177687615156174
    2. '=' → logprob: -3.049177646636963
    3. '=s' → logprob: -8.424178123474121
    4. '   ' → logprob: -9.049178123474121
    5. '=(' → logprob: -9.174178123474121
    6. ' ' → logprob: -10.674178123474121
    7. ' =(' → logprob: -10.799178123474121
    8. ' s' → logprob: -11.049178123474121
    9. '    ' → logprob: -11.174178123474121
    10. 's' → logprob: -11.299178123474121

Token 120: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.35861989855766296
    2. 's' → logprob: -1.2336199283599854
    3. ' (' → logprob: -5.608619689941406
    4. '   ' → logprob: -6.108619689941406
    5. ' n' → logprob: -6.733619689941406
    6. '(s' → logprob: -7.108619689941406
    7. ' ' → logprob: -7.108619689941406
    8. 'n' → logprob: -7.608619689941406
    9. '(' → logprob: -7.733619689941406
    10. '(n' → logprob: -8.733619689941406

Token 121: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.03444267064332962
    2. '[-' → logprob: -3.534442663192749
    3. '[' → logprob: -5.409442901611328
    4. '[i' → logprob: -9.034442901611328
    5. 'n' → logprob: -9.784442901611328
    6. '   ' → logprob: -11.409442901611328
    7. '[len' → logprob: -11.784442901611328
    8. ' [' → logprob: -12.284442901611328
    9. '[N' → logprob: -13.034442901611328
    10. '[(' → logprob: -13.784442901611328

Token 122: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25368958711624146
    2. '-' → logprob: -1.5036895275115967
    3. '1' → logprob: -6.503689765930176
    4. ' ' → logprob: -8.378689765930176
    5. '-i' → logprob: -10.628689765930176
    6. '
' → logprob: -13.503689765930176
    7. '2' → logprob: -13.503689765930176
    8. '   ' → logprob: -13.878689765930176
    9. '−' → logprob: -14.503689765930176
    10. 'i' → logprob: -15.003689765930176

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025672181509435177
    2. 'i' → logprob: -6.627567291259766
    3. ' ' → logprob: -6.752567291259766
    4. '   ' → logprob: -10.502567291259766
    5. '2' → logprob: -11.002567291259766
    6. ' i' → logprob: -11.377567291259766
    7. '(i' → logprob: -12.377567291259766
    8. '(' → logprob: -12.752567291259766
    9. '  ' → logprob: -13.627567291259766
    10. '           ' → logprob: -13.815067291259766

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003017280250787735
    2. 'i' → logprob: -5.878017425537109
    3. ' ' → logprob: -8.75301742553711
    4. '2' → logprob: -11.00301742553711
    5. ' i' → logprob: -11.12801742553711
    6. '   ' → logprob: -11.62801742553711
    7. '(i' → logprob: -12.37801742553711
    8. '-' → logprob: -12.87801742553711
    9. '(' → logprob: -13.50301742553711
    10. 'p' → logprob: -14.00301742553711

Token 125: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2015385776758194
    2. '-' → logprob: -1.7015385627746582
    3. '-i' → logprob: -9.326539039611816
    4. ' ' → logprob: -10.451539039611816
    5. ']' → logprob: -13.201539039611816
    6. 'i' → logprob: -13.326539039611816
    7. ' -
' → logprob: -13.826539039611816
    8. ' i' → logprob: -14.326539039611816
    9. '-
' → logprob: -14.451539039611816
    10. '
' → logprob: -15.201539039611816

Token 126: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007644963916391134
    2. ' i' → logprob: -4.882645130157471
    3. ' ' → logprob: -11.382644653320312
    4. '(i' → logprob: -11.882644653320312
    5. '   ' → logprob: -12.632644653320312
    6. '1' → logprob: -13.007644653320312
    7. ' (' → logprob: -13.007644653320312
    8. '
' → logprob: -13.257644653320312
    9. '(' → logprob: -13.257644653320312
    10. ']' → logprob: -13.757644653320312

Token 127: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02335495501756668
    2. ']
' → logprob: -3.773355007171631
    3. ']*' → logprob: -10.148354530334473
    4. '   ' → logprob: -10.773354530334473
    5. ' ]' → logprob: -11.148354530334473
    6. ']

' → logprob: -11.273354530334473
    7. ']
' → logprob: -11.773354530334473
    8. '       ' → logprob: -12.648354530334473
    9. '```' → logprob: -13.398354530334473
    10. ' ]
' → logprob: -13.898354530334473

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009672398678958416
    2. '   ' → logprob: -6.009672164916992
    3. ' r' → logprob: -6.259672164916992
    4. 'r' → logprob: -6.384672164916992
    5. '<|end|>' → logprob: -6.384672164916992
    6. '
' → logprob: -7.134672164916992
    7. ',' → logprob: -8.759672164916992
    8. ')' → logprob: -9.134672164916992
    9. '        ' → logprob: -9.259672164916992
    10. '<|end|>' → logprob: -9.259672164916992

Token 129: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.012676924467086792
    2. ' r' → logprob: -4.38767671585083
    3. '   ' → logprob: -9.137677192687988
    4. '
' → logprob: -10.762677192687988
    5. 'ten' → logprob: -11.387677192687988
    6. '```' → logprob: -11.637677192687988
    7. '       ' → logprob: -12.012677192687988
    8. ' ten' → logprob: -12.512677192687988
    9. '    
' → logprob: -12.762677192687988
    10. '``' → logprob: -13.512677192687988

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16034628450870514
    2. ' =' → logprob: -1.910346269607544
    3. '+=' → logprob: -9.785346031188965
    4. ' +=' → logprob: -10.410346031188965
    5. '*=' → logprob: -10.660346031188965
    6. '%=' → logprob: -12.160346031188965
    7. ' *=' → logprob: -12.535346031188965
    8. '=(' → logprob: -14.160346031188965
    9. ' %=' → logprob: -14.660346031188965
    10. ' =(' → logprob: -15.035346031188965

Token 131: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.12696905434131622
    2. ' (' → logprob: -2.1269690990448
    3. '(' → logprob: -10.501969337463379
    4. '   ' → logprob: -12.751969337463379
    5. '((' → logprob: -12.876969337463379
    6. '(res' → logprob: -13.626969337463379
    7. '(ret' → logprob: -13.626969337463379
    8. '(R' → logprob: -13.751969337463379
    9. '(rs' → logprob: -13.876969337463379
    10. '(m' → logprob: -14.001969337463379

Token 132: 'ms' (ID: 1782)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.010661748237907887
    2. '(r' → logprob: -5.135661602020264
    3. ' r' → logprob: -5.385661602020264
    4. ' (' → logprob: -9.760662078857422
    5. 'ms' → logprob: -10.760662078857422
    6. ')' → logprob: -11.135662078857422
    7. '   ' → logprob: -11.260662078857422
    8. '(ms' → logprob: -11.260662078857422
    9. '(' → logprob: -12.135662078857422
    10. '           ' → logprob: -13.010662078857422

Token 133: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005819845828227699
    2. 'r' → logprob: -7.625582218170166
    3. 's' → logprob: -10.000581741333008
    4. 'sd' → logprob: -10.625581741333008
    5. '_d' → logprob: -11.625581741333008
    6. ' d' → logprob: -12.375581741333008
    7. 'D' → logprob: -13.125581741333008
    8. 'д' → logprob: -13.375581741333008
    9. '   ' → logprob: -13.500581741333008
    10. '%d' → logprob: -14.000581741333008

Token 134: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10032247751951218
    2. '*' → logprob: -2.3503224849700928
    3. ' +' → logprob: -9.350322723388672
    4. ' ' → logprob: -11.475322723388672
    5. '+' → logprob: -11.850322723388672
    6. ')' → logprob: -12.850322723388672
    7. '10' → logprob: -13.350322723388672
    8. '
' → logprob: -13.475322723388672
    9. '*p' → logprob: -13.725322723388672
    10. '*r' → logprob: -13.850322723388672

Token 135: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.0024849306792020798
    2. ' ten' → logprob: -6.0024847984313965
    3. '10' → logprob: -12.377485275268555
    4. '
' → logprob: -13.377485275268555
    5. '   ' → logprob: -13.627485275268555
    6. ' ' → logprob: -13.877485275268555
    7. '  ' → logprob: -14.127485275268555
    8. ')' → logprob: -16.502485275268555
    9. '    ' → logprob: -16.752485275268555
    10. '          ' → logprob: -17.002485275268555

Token 136: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693513810634613
    2. ' +' → logprob: -0.693513810634613
    3. '+r' → logprob: -7.943513870239258
    4. '%' → logprob: -11.818513870239258
    5. '＋' → logprob: -13.818513870239258
    6. ' ' → logprob: -14.568513870239258
    7. '+p' → logprob: -14.568513870239258
    8. ')' → logprob: -14.818513870239258
    9. ' plus' → logprob: -14.943513870239258
    10. '+y' → logprob: -15.443513870239258

Token 137: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001170225441455841
    2. ' r' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.376171112060547
    4. ')' → logprob: -18.376171112060547
    5. '<|end|>' → logprob: -18.501171112060547
    6. '   ' → logprob: -18.626171112060547
    7. '
' → logprob: -18.876171112060547
    8. '       ' → logprob: -19.126171112060547
    9. '	r' → logprob: -19.251171112060547
    10. '    ' → logprob: -20.126171112060547

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5213274309644476e-05
    2. ')%' → logprob: -11.500015258789062
    3. ' )' → logprob: -12.250015258789062
    4. ']' → logprob: -16.625015258789062
    5. '）' → logprob: -17.375015258789062
    6. '%' → logprob: -18.000015258789062
    7. '`)' → logprob: -18.375015258789062
    8. '   ' → logprob: -18.375015258789062
    9. '")' → logprob: -18.500015258789062
    10. '')' → logprob: -18.625015258789062

Token 139: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.25207558274269104
    2. ' %' → logprob: -1.5020755529403687
    3. ' %=' → logprob: -9.7520751953125
    4. ')' → logprob: -10.6270751953125
    5. ')%' → logprob: -10.6270751953125
    6. '%=' → logprob: -11.0020751953125
    7. '%i' → logprob: -11.6270751953125
    8. '%n' → logprob: -12.3770751953125
    9. '%s' → logprob: -13.3770751953125
    10. '
' → logprob: -13.3770751953125

Token 140: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00020354038861114532
    2. ' p' → logprob: -8.500203132629395
    3. '<p' → logprob: -19.62520408630371
    4. '	p' → logprob: -20.25020408630371
    5. '*p' → logprob: -20.50020408630371
    6. '<|end|>' → logprob: -21.37520408630371
    7. '_p' → logprob: -21.87520408630371
    8. ')p' → logprob: -22.37520408630371
    9. ''p' → logprob: -22.37520408630371
    10. '$p' → logprob: -22.87520408630371

Token 141: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17072786390781403
    2. '
' → logprob: -2.2957279682159424
    3. '   ' → logprob: -3.7957279682159424
    4. ' ten' → logprob: -4.045727729797363
    5. '        
' → logprob: -4.920727729797363
    6. '    
' → logprob: -5.795727729797363
    7. 'ten' → logprob: -6.295727729797363
    8. '<|end|>' → logprob: -7.170727729797363
    9. '	' → logprob: -7.295727729797363
    10. '           ' → logprob: -7.920727729797363

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006723064463585615
    2. 'ten' → logprob: -6.506722927093506
    3. ' ten' → logprob: -6.631722927093506
    4. '	' → logprob: -6.881722927093506
    5. '   ' → logprob: -7.256722927093506
    6. '
' → logprob: -7.256722927093506
    7. '        
' → logprob: -7.506722927093506
    8. '```' → logprob: -7.631722927093506
    9. '<|end|>' → logprob: -9.006723403930664
    10. ',' → logprob: -9.506723403930664

Token 143: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' (adapté à ' ten') → logprob: -0.007299802266061306
    2. 'cnt' → logprob: -5.257299900054932
    3. ' ten' → logprob: -7.007299900054932
    4. '       ' → logprob: -7.382299900054932
    5. '   ' → logprob: -7.632299900054932
    6. '
' → logprob: -11.507299423217773
    7. 'count' → logprob: -11.882299423217773
    8. '```' → logprob: -12.007299423217773
    9. '           ' → logprob: -12.132299423217773
    10. '        
' → logprob: -12.257299423217773

Token 144: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.6495800614356995
    2. '=' → logprob: -1.0245800018310547
    3. ' =' → logprob: -2.2745800018310547
    4. ' *=' → logprob: -4.149580001831055
    5. '*' → logprob: -8.774580001831055
    6. '%=' → logprob: -12.149580001831055
    7. ' <<=' → logprob: -12.274580001831055
    8. '   ' → logprob: -12.774580001831055
    9. ' ' → logprob: -13.149580001831055
    10. '	' → logprob: -13.649580001831055

Token 145: ' ten' (ID: 4325)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007129086880013347
    2. ' (' → logprob: -7.250712871551514
    3. 'ten' → logprob: -13.250713348388672
    4. '(t' → logprob: -14.125713348388672
    5. '10' → logprob: -15.500713348388672
    6. ' ten' → logprob: -16.125713348388672
    7. ' ' → logprob: -16.750713348388672
    8. '(T' → logprob: -17.125713348388672
    9. '(te' → logprob: -17.750713348388672
    10. '```' → logprob: -19.500713348388672

Token 146: ' *' (ID: 425)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010363411158323288
    2. '*' → logprob: -4.635363578796387
    3. '*(' → logprob: -8.260363578796387
    4. ' (' → logprob: -8.635363578796387
    5. ' *' → logprob: -8.885363578796387
    6. '10' → logprob: -11.385363578796387
    7. '(n' → logprob: -12.510363578796387
    8. '```' → logprob: -12.635363578796387
    9. '(p' → logprob: -13.010363578796387
    10. '   ' → logprob: -13.135363578796387

Token 147: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -11.125024795532227
    3. '(' → logprob: -11.500024795532227
    4. '100' → logprob: -15.750024795532227
    5. '   ' → logprob: -17.500024795532227
    6. '
' → logprob: -18.375024795532227
    7. 'pow' → logprob: -18.875024795532227
    8. '  ' → logprob: -19.250024795532227
    9. '```' → logprob: -20.125024795532227
    10. '１０' → logprob: -20.125024795532227

Token 148: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '100' → logprob: -16.125
    4. '(' → logprob: -17.25
    5. '   ' → logprob: -20.75
    6. '１０' → logprob: -20.875
    7. '
' → logprob: -21.375
    8. '0' → logprob: -21.625
    9. '```' → logprob: -21.625
    10. '101' → logprob: -22.125

Token 149: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02095663547515869
    2. ' %' → logprob: -4.645956516265869
    3. '%n' → logprob: -4.895956516265869
    4. '%i' → logprob: -5.895956516265869
    5. '%d' → logprob: -7.270956516265869
    6. '%x' → logprob: -8.895956993103027
    7. '%s' → logprob: -10.520956993103027
    8. '%m' → logprob: -11.145956993103027
    9. '%b' → logprob: -11.270956993103027
    10. '%c' → logprob: -11.520956993103027

Token 150: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.088346359931165e-07
    2. ' p' → logprob: -14.000000953674316
    3. '<p' → logprob: -22.25
    4. '*p' → logprob: -22.625
    5. '
' → logprob: -23.25
    6. '	p' → logprob: -23.875
    7. '$p' → logprob: -24.25
    8. ' ' → logprob: -24.875
    9. '   ' → logprob: -24.875
    10. 'python' → logprob: -24.875

Token 151: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27800115942955017
    2. '   ' → logprob: -1.7780011892318726
    3. 'cnt' → logprob: -3.778001070022583
    4. 'ret' → logprob: -4.153001308441162
    5. '	cnt' → logprob: -5.278001308441162
    6. '<|end|>' → logprob: -5.278001308441162
    7. '	ret' → logprob: -6.028001308441162
    8. 'ans' → logprob: -6.028001308441162
    9. '```' → logprob: -6.028001308441162
    10. '	ans' → logprob: -6.278001308441162

Token 152: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0009432652732357383
    2. '   ' → logprob: -7.875943183898926
    3. '       ' → logprob: -8.000943183898926
    4. ' cnt' → logprob: -8.625943183898926
    5. 'count' → logprob: -10.375943183898926
    6. 'counter' → logprob: -12.125943183898926
    7. 'for' → logprob: -12.500943183898926
    8. '	cnt' → logprob: -13.000943183898926
    9. 'if' → logprob: -13.625943183898926
    10. 'ans' → logprob: -13.750943183898926

Token 154: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.001418326748535037
    2. '[' → logprob: -6.751418113708496
    3. '[s' → logprob: -8.376418113708496
    4. '[(' → logprob: -11.626418113708496
    5. '[
' → logprob: -12.876418113708496
    6. '[m' → logprob: -13.626418113708496
    7. ' [' → logprob: -13.626418113708496
    8. 'r' → logprob: -13.876418113708496
    9. '```' → logprob: -14.126418113708496
    10. '[c' → logprob: -15.001418113708496

Token 155: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011246467009186745
    2. ']+=' → logprob: -4.511246681213379
    3. '+=' → logprob: -9.136246681213379
    4. ' ]' → logprob: -9.886246681213379
    5. ' +=' → logprob: -10.636246681213379
    6. '+]' → logprob: -11.636246681213379
    7. '+' → logprob: -12.761246681213379
    8. '[' → logprob: -12.886246681213379
    9. '`]' → logprob: -14.761246681213379
    10. ')' → logprob: -15.136246681213379

Token 156: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0004020713677164167
    2. ' +=' → logprob: -8.125402450561523
    3. '+' → logprob: -9.500402450561523
    4. ']+=' → logprob: -10.500402450561523
    5. '=' → logprob: -12.875402450561523
    6. '+='' → logprob: -15.125402450561523
    7. '[' → logprob: -15.625402450561523
    8. '+=(' → logprob: -15.625402450561523
    9. '++' → logprob: -15.625402450561523
    10. '+="' → logprob: -16.125402450561523

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.00006675720215
    4. '```' → logprob: -17.25006675720215
    5. '0' → logprob: -19.12506675720215
    6. '  ' → logprob: -19.37506675720215
    7. '１' → logprob: -19.50006675720215
    8. '(' → logprob: -20.00006675720215
    9. '۱' → logprob: -20.12506675720215
    10. '
' → logprob: -20.31256675720215

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '0' → logprob: -19.5
    4. '```' → logprob: -19.5
    5. '   ' → logprob: -20.75
    6. '<|end|>' → logprob: -21.625
    7. '１' → logprob: -21.75
    8. '' → logprob: -22.25
    9. '  ' → logprob: -22.375
    10. '۱' → logprob: -22.5

Token 159: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.0024096618872135878
    2. 'ans' → logprob: -6.3774094581604
    3. 'res' → logprob: -7.6274094581604
    4. '   ' → logprob: -9.002409934997559
    5. 'answer' → logprob: -9.877409934997559
    6. 'result' → logprob: -11.002409934997559
    7. ' ret' → logprob: -11.252409934997559
    8. 'return' → logprob: -12.002409934997559
    9. '    
' → logprob: -12.502409934997559
    10. '```' → logprob: -13.502409934997559

Token 162: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.024977436289191246
    2. ' =' → logprob: -3.774977445602417
    3. '+=' → logprob: -6.649977207183838
    4. '=' → logprob: -7.774977207183838
    5. ' ' → logprob: -12.399977684020996
    6. '+' → logprob: -13.149977684020996
    7. ',' → logprob: -13.774977684020996
    8. ' +' → logprob: -13.899977684020996
    9. '```' → logprob: -13.899977684020996
    10. '<|end|>' → logprob: -14.024977684020996

Token 163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04312285780906677
    2. ' ' → logprob: -3.1681227684020996
    3. 'sum' → logprob: -10.043123245239258
    4. 'cnt' → logprob: -10.543123245239258
    5. '   ' → logprob: -10.668123245239258
    6. ' sum' → logprob: -11.043123245239258
    7. ' cnt' → logprob: -11.293123245239258
    8. '  ' → logprob: -14.293123245239258
    9. '```' → logprob: -15.168123245239258
    10. 'ret' → logprob: -15.543123245239258

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010186368599534035
    2. 'sum' → logprob: -7.001018524169922
    3. ' ' → logprob: -9.376018524169922
    4. '   ' → logprob: -11.001018524169922
    5. 'cnt' → logprob: -13.126018524169922
    6. ' sum' → logprob: -14.251018524169922
    7. '
' → logprob: -14.626018524169922
    8. '```' → logprob: -14.751018524169922
    9. '[' → logprob: -15.001018524169922
    10. '1' → logprob: -15.001018524169922

Token 165: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42037805914878845
    2. 'for' → logprob: -1.4203780889511108
    3. ' for' → logprob: -2.2953779697418213
    4. '
' → logprob: -7.7953782081604
    5. '<|end|>' → logprob: -8.545377731323242
    6. '	for' → logprob: -8.670377731323242
    7. '```' → logprob: -9.920377731323242
    8. 'from' → logprob: -11.795377731323242
    9. '    
' → logprob: -12.045377731323242
    10. '  ' → logprob: -12.295377731323242

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16111540794372559
    2. 'for' → logprob: -2.1611154079437256
    3. ' for' → logprob: -3.6611154079437256
    4. '```' → logprob: -4.911115646362305
    5. '
' → logprob: -7.911115646362305
    6. '``' → logprob: -9.911115646362305
    7. '	for' → logprob: -10.036115646362305
    8. ' ' → logprob: -10.161115646362305
    9. '  ' → logprob: -11.286115646362305
    10. '<|end|>' → logprob: -11.411115646362305

Token 167: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.828512363834307e-05
    2. '   ' → logprob: -10.250088691711426
    3. 'from' → logprob: -10.250088691711426
    4. ' for' → logprob: -11.000088691711426
    5. '
' → logprob: -14.500088691711426
    6. '```' → logprob: -15.250088691711426
    7. '       ' → logprob: -17.25008773803711
    8. 'import' → logprob: -18.50008773803711
    9. '	for' → logprob: -18.75008773803711
    10. ' ' → logprob: -18.75008773803711

Token 168: ' r' (ID: 428)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0606766939163208
    2. 'c' → logprob: -1.1856766939163208
    3. ' c' → logprob: -2.0606765747070312
    4. 'x' → logprob: -2.3106765747070312
    5. ' i' → logprob: -3.0606765747070312
    6. ' x' → logprob: -3.1856765747070312
    7. 'v' → logprob: -4.060676574707031
    8. ' v' → logprob: -5.060676574707031
    9. 'j' → logprob: -6.310676574707031
    10. 'r' → logprob: -6.685676574707031

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00031854258850216866
    2. 'in' → logprob: -8.12531852722168
    3. '1' → logprob: -11.62531852722168
    4. '   ' → logprob: -12.37531852722168
    5. ' ' → logprob: -12.37531852722168
    6. ',' → logprob: -13.00031852722168
    7. '  ' → logprob: -14.75031852722168
    8. 'range' → logprob: -14.75031852722168
    9. '[' → logprob: -14.87531852722168
    10. '0' → logprob: -14.87531852722168

Token 170: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2701093256473541
    2. 'cnt' → logprob: -1.8951092958450317
    3. ' range' → logprob: -2.5201094150543213
    4. ' cnt' → logprob: -5.145109176635742
    5. 'p' → logprob: -10.020109176635742
    6. '(cnt' → logprob: -10.770109176635742
    7. '(range' → logprob: -10.895109176635742
    8. '[cnt' → logprob: -11.270109176635742
    9. 'count' → logprob: -11.770109176635742
    10. ' ' → logprob: -12.645109176635742

Token 171: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00015169414109550416
    2. 'p' → logprob: -9.125151634216309
    3. '(len' → logprob: -10.875151634216309
    4. '(' → logprob: -10.875151634216309
    5. '   ' → logprob: -12.750151634216309
    6. ' p' → logprob: -14.125151634216309
    7. 'len' → logprob: -15.250151634216309
    8. '(cnt' → logprob: -15.375151634216309
    9. '[p' → logprob: -15.625151634216309
    10. '(
' → logprob: -15.625151634216309

Token 172: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10042642802000046
    2. '):' → logprob: -2.350426435470581
    3. '):
' → logprob: -9.22542667388916
    4. '   ' → logprob: -9.47542667388916
    5. '+' → logprob: -10.60042667388916
    6. ']:
' → logprob: -12.22542667388916
    7. ')' → logprob: -12.97542667388916
    8. ':
' → logprob: -12.97542667388916
    9. ']:' → logprob: -13.10042667388916
    10. ' ):
' → logprob: -13.35042667388916

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027769433800131083
    2. 'ret' → logprob: -6.877777099609375
    3. ' ret' → logprob: -7.127777099609375
    4. '   ' → logprob: -7.877777099609375
    5. ' if' → logprob: -8.377777099609375
    6. '```' → logprob: -8.627777099609375
    7. 'if' → logprob: -10.377777099609375
    8. ' for' → logprob: -10.502777099609375
    9. 'cnt' → logprob: -10.627777099609375
    10. 'count' → logprob: -10.877777099609375

Token 174: ' ret' (ID: 2881)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.24644190073013306
    2. 'ret' (adapté à ' ret') → logprob: -2.4964418411254883
    3. '   ' → logprob: -2.9964418411254883
    4. '       ' → logprob: -3.1214418411254883
    5. 'x' → logprob: -3.6214418411254883
    6. 'cnt' → logprob: -4.871441841125488
    7. 'm' → logprob: -6.246441841125488
    8. 'k' → logprob: -6.371441841125488
    9. 'if' → logprob: -6.871441841125488
    10. 'v' → logprob: -7.246441841125488

Token 175: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14568640291690826
    2. ' +=' → logprob: -2.020686388015747
    3. '   ' → logprob: -6.145686626434326
    4. '+=(' → logprob: -7.520686626434326
    5. '```' → logprob: -9.395686149597168
    6. ']+=' → logprob: -9.520686149597168
    7. '       ' → logprob: -9.645686149597168
    8. '	' → logprob: -10.395686149597168
    9. '*(' → logprob: -10.520686149597168
    10. '
' → logprob: -11.395686149597168

Token 176: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0023676820565015078
    2. ' cnt' → logprob: -6.1273674964904785
    3. '   ' → logprob: -9.377367973327637
    4. '(cnt' → logprob: -9.377367973327637
    5. ' ' → logprob: -11.877367973327637
    6. '	cnt' → logprob: -12.877367973327637
    7. '  ' → logprob: -13.502367973327637
    8. '(' → logprob: -14.377367973327637
    9. '[cnt' → logprob: -14.502367973327637
    10. '
' → logprob: -14.877367973327637

Token 177: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.143808109802194e-05
    2. '[' → logprob: -10.125041007995605
    3. 'r' → logprob: -14.750041007995605
    4. '[
' → logprob: -15.000041007995605
    5. '[i' → logprob: -15.500041007995605
    6. '[t' → logprob: -16.125041961669922
    7. '[cnt' → logprob: -16.125041961669922
    8. '```' → logprob: -16.750041961669922
    9. '[c' → logprob: -17.000041961669922
    10. ' [' → logprob: -17.250041961669922

Token 178: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6965236663818359
    2. ' *' → logprob: -0.6965236663818359
    3. '*(' → logprob: -5.696523666381836
    4. ' ' → logprob: -11.821523666381836
    5. ' ' → logprob: -13.321523666381836
    6. '   ' → logprob: -13.446523666381836
    7. '	' → logprob: -14.071523666381836
    8. '
' → logprob: -14.446523666381836
    9. '  ' → logprob: -14.571523666381836
    10. ')' → logprob: -15.071523666381836

Token 179: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005541566759347916
    2. '*(' → logprob: -5.255541801452637
    3. ' *' → logprob: -8.130541801452637
    4. '(cnt' → logprob: -12.130541801452637
    5. '       ' → logprob: -13.005541801452637
    6. 'cnt' → logprob: -13.130541801452637
    7. '```' → logprob: -13.630541801452637
    8. '   ' → logprob: -14.380541801452637
    9. '           ' → logprob: -14.755541801452637
    10. '(' → logprob: -15.130541801452637

Token 180: ' (' (ID: 350)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.00010199354437645525
    2. '[cnt' → logprob: -9.500102043151855
    3. ' (' → logprob: -11.000102043151855
    4. '(max' → logprob: -12.875102043151855
    5. '(count' → logprob: -13.125102043151855
    6. '(ct' → logprob: -13.750102043151855
    7. '(c' → logprob: -13.875102043151855
    8. 'cnt' → logprob: -14.375102043151855
    9. '(' → logprob: -14.500102043151855
    10. '(cont' → logprob: -15.000102043151855

Token 181: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0003728774609044194
    2. '(cnt' → logprob: -8.000372886657715
    3. ' cnt' → logprob: -10.625372886657715
    4. '[cnt' → logprob: -11.625372886657715
    5. '	cnt' → logprob: -12.875372886657715
    6. '   ' → logprob: -14.000372886657715
    7. '
' → logprob: -14.750372886657715
    8. '_cnt' → logprob: -16.1253719329834
    9. ' ' → logprob: -16.6253719329834
    10. '       ' → logprob: -16.6253719329834

Token 182: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.451116051815916e-05
    2. 'r' → logprob: -10.625024795532227
    3. '[
' → logprob: -16.125024795532227
    4. '[' → logprob: -16.875024795532227
    5. '```' → logprob: -18.375024795532227
    6. ' [' → logprob: -18.375024795532227
    7. '-' → logprob: -18.625024795532227
    8. '[-' → logprob: -19.875024795532227
    9. '[p' → logprob: -20.500024795532227
    10. '
' → logprob: -20.875024795532227

Token 183: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868735730648041
    2. '-' → logprob: -1.1368736028671265
    3. ' ' → logprob: -13.386873245239258
    4. '   ' → logprob: -14.886873245239258
    5. '```' → logprob: -15.636873245239258
    6. ')' → logprob: -16.261873245239258
    7. '–' → logprob: -16.511873245239258
    8. ' ' → logprob: -16.886873245239258
    9. '       ' → logprob: -17.011873245239258
    10. '
' → logprob: -17.011873245239258

Token 184: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014163863845169544
    2. ' -' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.514163970947266
    4. '–' → logprob: -17.139163970947266
    5. '−' → logprob: -17.264163970947266
    6. '<|end|>' → logprob: -17.389163970947266
    7. '```' → logprob: -17.389163970947266
    8. '1' → logprob: -18.389163970947266
    9. '
' → logprob: -18.389163970947266
    10. ')' → logprob: -18.764163970947266

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.250005722045898
    4. '```' → logprob: -15.500005722045898
    5. '
' → logprob: -16.0000057220459
    6. '       ' → logprob: -17.0000057220459
    7. ')' → logprob: -17.6250057220459
    8. '  ' → logprob: -18.6250057220459
    9. '<|end|>' → logprob: -19.0000057220459
    10. '

' → logprob: -19.3750057220459

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -16.875001907348633
    4. '
' → logprob: -17.375001907348633
    5. ')' → logprob: -17.500001907348633
    6. '<|end|>' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '۱' → logprob: -19.062501907348633
    9. '

' → logprob: -19.125001907348633
    10. '{' → logprob: -19.250001907348633

Token 187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3363572955131531
    2. ' //' → logprob: -1.5863573551177979
    3. '//' → logprob: -2.586357355117798
    4. ')//' → logprob: -5.336357116699219
    5. ' )' → logprob: -7.336357116699219
    6. ']' → logprob: -9.211357116699219
    7. '```' → logprob: -10.086357116699219
    8. '   ' → logprob: -11.086357116699219
    9. ' ' → logprob: -11.961357116699219
    10. ' ' → logprob: -12.086357116699219

Token 188: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.018170781433582306
    2. ' //' → logprob: -4.0181708335876465
    3. '#' → logprob: -11.268170356750488
    4. '```' → logprob: -13.018170356750488
    5. '
' → logprob: -13.268170356750488
    6. '   ' → logprob: -13.643170356750488
    7. '>>' → logprob: -14.393170356750488
    8. '0' → logprob: -14.643170356750488
    9. ' ' → logprob: -14.768170356750488
    10. '       ' → logprob: -14.768170356750488

Token 189: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -21.0
    5. '۲' → logprob: -22.0
    6. '
' → logprob: -22.5
    7. '２' → logprob: -22.625
    8. '       ' → logprob: -23.5
    9. '           ' → logprob: -23.625
    10. '٢' → logprob: -23.875

Token 190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '
' → logprob: -22.125
    4. '   ' → logprob: -22.625
    5. '```' → logprob: -22.875
    6. '۲' → logprob: -24.0
    7. '２' → logprob: -25.0
    8. '

' → logprob: -25.125
    9. '202' → logprob: -25.25
    10. '
' → logprob: -25.25

Token 191: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006333410274237394
    2. 'return' → logprob: -5.256333351135254
    3. ' return' → logprob: -7.006333351135254
    4. '
' → logprob: -9.131333351135254
    5. '	return' → logprob: -9.631333351135254
    6. '    
' → logprob: -11.006333351135254
    7. '```' → logprob: -14.131333351135254
    8. '
' → logprob: -14.631333351135254
    9. '  
' → logprob: -15.006333351135254
    10. ' 
' → logprob: -15.256333351135254

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013189997524023056
    2. ' return' → logprob: -4.763189792633057
    3. 'return' → logprob: -6.013189792633057
    4. '
' → logprob: -7.138189792633057
    5. '	return' → logprob: -7.263189792633057
    6. '```' → logprob: -7.513189792633057
    7. '    
' → logprob: -10.263190269470215
    8. '<|end|>' → logprob: -11.263190269470215
    9. '  
' → logprob: -11.763190269470215
    10. ' ' → logprob: -12.263190269470215

Token 193: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0049620321951806545
    2. ' return' → logprob: -5.504961967468262
    3. 'return' (adapté à ' return') → logprob: -7.254961967468262
    4. '```' → logprob: -9.379961967468262
    5. '	return' → logprob: -9.504961967468262
    6. '<|end|>' → logprob: -11.379961967468262
    7. 'print' → logprob: -13.504961967468262
    8. '       ' → logprob: -13.879961967468262
    9. '``' → logprob: -14.129961967468262
    10. '    
' → logprob: -14.379961967468262

Token 194: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.011047814972698689
    2. ' ret' → logprob: -4.511047840118408
    3. '   ' → logprob: -18.51104736328125
    4. '(ret' → logprob: -18.88604736328125
    5. '	ret' → logprob: -19.13604736328125
    6. '$ret' → logprob: -19.51104736328125
    7. '```' → logprob: -20.01104736328125
    8. 'rets' → logprob: -21.76104736328125
    9. '_ret' → logprob: -22.26104736328125
    10. '  ' → logprob: -22.26104736328125

Token 195: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.5
    3. 'if' → logprob: -16.875
    4. 'result' → logprob: -18.25
    5. '```' → logprob: -19.125
    6. 'for' → logprob: -20.875
    7. '#print' → logprob: -21.5
    8. '#' → logprob: -21.875
    9. '
' → logprob: -21.875
    10. 'ans' → logprob: -22.0

Token 197: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.16042305529117584
    2. '(' → logprob: -1.9104230403900146
    3. 'solve' → logprob: -9.035423278808594
    4. '(sol' → logprob: -10.410423278808594
    5. '(
' → logprob: -11.035423278808594
    6. '()' → logprob: -11.160423278808594
    7. '(print' → logprob: -12.160423278808594
    8. '(solution' → logprob: -12.535423278808594
    9. '('' → logprob: -12.660423278808594
    10. '(

' → logprob: -13.910423278808594

Token 198: 'olve' (ID: 11460)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009316838346421719
    2. '))' → logprob: -4.759316921234131
    3. 'olve' → logprob: -7.384316921234131
    4. '[' → logprob: -9.884316444396973
    5. ')))' → logprob: -11.384316444396973
    6. '])' → logprob: -13.009316444396973
    7. ' )' → logprob: -13.259316444396973
    8. '())' → logprob: -13.509316444396973
    9. ')")' → logprob: -13.884316444396973
    10. 's' → logprob: -14.009316444396973

Token 199: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018177567049860954
    2. '()' → logprob: -4.018177509307861
    3. ')' → logprob: -10.89317798614502
    4. '();)' → logprob: -12.26817798614502
    5. ' ())' → logprob: -13.39317798614502
    6. '()]' → logprob: -14.01817798614502
    7. '()))' → logprob: -14.01817798614502
    8. '())
' → logprob: -15.26817798614502
    9. '().' → logprob: -15.89317798614502
    10. '()`' → logprob: -16.143177032470703


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 197
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 34.01%
Précision adaptée (1ère position): 37.56%
Précision (top 10): 82.74%
================================================================================
