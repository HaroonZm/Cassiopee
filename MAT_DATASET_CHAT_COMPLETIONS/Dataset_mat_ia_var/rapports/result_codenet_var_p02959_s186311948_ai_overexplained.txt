================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Importe le module sys qui fournit des fonctions d'accès au système et à l'entrée/sortie standard

# Définit une fonction d'entrée 'input' qui lit une ligne de l'entrée standard,
# supprime les caractères de fin de ligne, et retourne le résultat comme une chaîne de caractères.
input = lambda: sys.stdin.readline().rstrip()

def main():
    # Lit la première entrée (supposée être un entier n), la convertit en entier avec int()
    n = int(input())
    
    # Lit la deuxième ligne d'entrée, la découpe en une liste de chaînes, 
    # puis mappe chaque élément de cette liste à int pour obtenir une liste d'entiers, et enfin cast en 'list'.
    # Cette liste sera stockée dans la variable 'a'.
    a = list(map(int, input().split()))
    
    # Fait de même avec la troisième ligne de l'entrée pour obtenir la liste 'b'.
    b = list(map(int, input().split()))
    
    # Initialise une variable entière 'ans' à 0, qui va accumuler le total désiré.
    ans = 0
    
    # Boucle 'for' qui itère sur les indices de 0 à n-1 (n exclusive).
    # À chaque itération, la variable 'i' prend la valeur de l'index courant.
    for i in range(n):
        # Si l'élément correspondant dans 'b' est supérieur ou égal à celui dans 'a',
        # alors 'b' peut "couvrir" 'a' complètement à cet indice.
        if b[i] >= a[i]:
            # Ajoute la totalité de a[i] à la réponse car tout 'a[i]' est "utilisé".
            ans += a[i]
            # On soustrait de b[i] la quantité utilisée pour correspondre à 'a[i]'.
            b[i] -= a[i]
            # Maintenant, il peut rester du 'b[i]' pour attaquer 'a[i+1]', alors on vérifie cette possibilité.
            # On regarde si le reste de 'b[i]' est supérieur ou égal à 'a[i+1]'.
            if b[i] >= a[i+1]:
                # Dans ce cas, on peut "détruire" tout 'a[i+1]' grâce au reste de 'b[i]'.
                ans += a[i+1]
                # Met à 0, car tout est consommé.
                a[i+1] = 0
            else:
                # Sinon, il ne reste pas assez de 'b[i]' pour tout faire;
                # on ajoute ce qu'il reste de 'b[i]' à la réponse.
                ans += b[i]
                # On soustrait le montant utilisé à 'a[i+1]'.
                a[i+1] -= b[i]
        else:
            # Si 'b[i]' n'est pas assez pour "détruire" tout 'a[i]',
            # alors on ne peut en utiliser que 'b[i]'.
            ans += b[i]
    # Après la boucle, on affiche la valeur finale de 'ans' avec print()
    print(ans)

# On vérifie si ce fichier de code est le programme principal exécuté,
# plutôt qu'importé comme module dans un autre script.
if __name__ == '__main__':
    main()  # Appelle la fonction 'main' pour lancer le processus principal du programme
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.015895461663603783
    2. '\n' → logprob: -5.140895366668701
    3. '<|end|>' → logprob: -5.390895366668701
    4. '\' → logprob: -5.640895366668701
    5. '.readline' → logprob: -8.14089584350586
    6. '[' → logprob: -8.39089584350586
    7. '<|end|>' → logprob: -8.51589584350586
    8. 'import' → logprob: -8.51589584350586
    9. '```' → logprob: -8.64089584350586
    10. '' → logprob: -8.89089584350586

Token 4: ' Im' (ID: 3133)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02292315661907196
    2. ' .' → logprob: -4.647922992706299
    3. '<|end|>' → logprob: -5.147922992706299
    4. ' ' → logprob: -6.147922992706299
    5. '<|end|>' → logprob: -6.647922992706299
    6. 'import' → logprob: -6.772922992706299
    7. '.import' → logprob: -7.272922992706299
    8. ',' → logprob: -7.772922992706299
    9. '.system' → logprob: -8.272923469543457
    10. '.e' → logprob: -8.647923469543457

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.001934469910338521
    2. 'p' → logprob: -6.25193452835083
    3. 'por' → logprob: -13.001934051513672
    4. 'ported' → logprob: -13.626934051513672
    5. 'ports' → logprob: -14.251934051513672
    6. '```' → logprob: -15.251934051513672
    7. 'porter' → logprob: -15.376934051513672
    8. 'po' → logprob: -15.501934051513672
    9. ' ' → logprob: -15.501934051513672
    10. 'порт' → logprob: -15.751934051513672

Token 6: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47804948687553406
    2. 'rt' → logprob: -0.9780495166778564
    3. ' ' → logprob: -6.353049278259277
    4. ' r' → logprob: -6.478049278259277
    5. 'ort' → logprob: -8.978049278259277
    6. ' rt' → logprob: -9.103049278259277
    7. 'nt' → logprob: -9.478049278259277
    8. 'port' → logprob: -9.728049278259277
    9. 'space' → logprob: -10.103049278259277
    10. 'rror' → logprob: -10.228049278259277

Token 7: ' module' (ID: 8827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9091833829879761
    2. 's' → logprob: -1.034183382987976
    3. ' module' → logprob: -2.4091835021972656
    4. 'r' → logprob: -2.5341835021972656
    5. ' ' → logprob: -4.159183502197266
    6. ' r' → logprob: -4.409183502197266
    7. ' s' → logprob: -4.534183502197266
    8. ' sys' → logprob: -4.909183502197266
    9. ' space' → logprob: -5.034183502197266
    10. 'space' → logprob: -5.659183502197266

Token 8: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07835765928030014
    2. ' .' → logprob: -3.203357696533203
    3. ' ' → logprob: -4.203357696533203
    4. 'import' → logprob: -5.703357696533203
    5. '' → logprob: -5.953357696533203
    6. 'sys' → logprob: -6.078357696533203
    7. '\' → logprob: -6.203357696533203
    8. ',' → logprob: -6.203357696533203
    9. ' sys' → logprob: -6.703357696533203
    10. '\n' → logprob: -6.828357696533203

Token 9: ' qui' (ID: 2780)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07437466084957123
    2. '\n' → logprob: -3.5743746757507324
    3. ' ' → logprob: -4.449374675750732
    4. 'import' → logprob: -4.824374675750732
    5. '
' → logprob: -5.074374675750732
    6. '' → logprob: -5.074374675750732
    7. '\' → logprob: -5.199374675750732
    8. '<|end|>' → logprob: -6.449374675750732
    9. ',' → logprob: -6.574374675750732
    10. '.import' → logprob: -7.574374675750732

Token 10: ' fournit' (ID: 123615)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.883600115776062
    2. '.' → logprob: -1.758600115776062
    3. ' est' → logprob: -2.8836002349853516
    4. ' permet' → logprob: -2.8836002349853516
    5. ' ' → logprob: -3.0086002349853516
    6. ' .' → logprob: -3.2586002349853516
    7. '<|end|>' → logprob: -3.6336002349853516
    8. ' fournit' → logprob: -3.8836002349853516
    9. 'space' → logprob: -4.008600234985352
    10. '```' → logprob: -4.383600234985352

Token 11: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2546902000904083
    2. '.' → logprob: -2.879690170288086
    3. '  ' → logprob: -2.879690170288086
    4. ' des' → logprob: -3.004690170288086
    5. 's' → logprob: -4.379690170288086
    6. ' .' → logprob: -4.629690170288086
    7. '_' → logprob: -5.129690170288086
    8. '<|end|>' → logprob: -5.129690170288086
    9. '```' → logprob: -5.254690170288086
    10. ' ' → logprob: -5.879690170288086

Token 12: ' fonctions' (ID: 87283)
  Prédit: ' fonctionnalités'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctionnalités' → logprob: -0.32081708312034607
    2. ' fonctions' → logprob: -1.5708171129226685
    3. 'fon' → logprob: -3.320816993713379
    4. ' informations' → logprob: -4.820816993713379
    5. 'fonction' → logprob: -4.820816993713379
    6. ' systèmes' → logprob: -5.820816993713379
    7. ' functionalities' → logprob: -6.195816993713379
    8. ' fonctionnal' → logprob: -6.320816993713379
    9. 's' → logprob: -6.445816993713379
    10. ' outils' → logprob: -6.695816993713379

Token 13: ' d' (ID: 272)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.028460951521992683
    2. '<|end|>' → logprob: -4.15346097946167
    3. ',' → logprob: -5.52846097946167
    4. 'import' → logprob: -5.65346097946167
    5. '```' → logprob: -6.65346097946167
    6. '[' → logprob: -6.65346097946167
    7. '<|end|>' → logprob: -7.40346097946167
    8. ' ' → logprob: -8.028460502624512
    9. 'et' → logprob: -8.403460502624512
    10. ' .' → logprob: -8.528460502624512

Token 14: ''accès' (ID: 116356)
  Prédit: ''entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.13510127365589142
    2. 'entrée' → logprob: -2.260101318359375
    3. 'e' → logprob: -4.385101318359375
    4. ''accès' → logprob: -5.635101318359375
    5. ''ex' → logprob: -6.510101318359375
    6. '’entrée' → logprob: -6.635101318359375
    7. 'entr' → logprob: -7.510101318359375
    8. ''' → logprob: -7.760101318359375
    9. ''ent' → logprob: -7.885101318359375
    10. 'é' → logprob: -7.885101318359375

Token 15: ' au' (ID: 2791)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007632650900632143
    2. ',' → logprob: -5.882632732391357
    3. '```' → logprob: -6.007632732391357
    4. ' .' → logprob: -7.507632732391357
    5. ' ' → logprob: -8.1326322555542
    6. 'import' → logprob: -8.2576322555542
    7. 'et' → logprob: -8.6326322555542
    8. '\' → logprob: -8.8826322555542
    9. '[' → logprob: -9.5076322555542
    10. '.util' → logprob: -10.0076322555542

Token 16: ' système' (ID: 30034)
  Prédit: ' système'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' système' → logprob: -0.6354402303695679
    2. 's' → logprob: -1.0104402303695679
    3. ' system' → logprob: -3.1354403495788574
    4. '_' → logprob: -3.8854403495788574
    5. 'system' → logprob: -4.260440349578857
    6. ' ' → logprob: -4.260440349578857
    7. '_s' → logprob: -5.260440349578857
    8. ' syst' → logprob: -7.010440349578857
    9. ' sys' → logprob: -7.135440349578857
    10. ' systèmes' → logprob: -7.260440349578857

Token 17: ' et' (ID: 859)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7168378829956055
    2. '
' → logprob: -1.4668378829956055
    3. '.' → logprob: -1.7168378829956055
    4. 'import' → logprob: -3.0918378829956055
    5. '<|end|>' → logprob: -4.2168378829956055
    6. '\' → logprob: -4.3418378829956055
    7. '' → logprob: -5.0918378829956055
    8. '

' → logprob: -5.4668378829956055
    9. 'newline' → logprob: -5.4668378829956055
    10. ',' → logprob: -5.7168378829956055

Token 18: ' à' (ID: 1221)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.21080806851387024
    2. ' aux' → logprob: -2.085808038711548
    3. 'des' → logprob: -4.085808277130127
    4. ' au' → logprob: -4.210808277130127
    5. 'aux' → logprob: -5.085808277130127
    6. ' ' → logprob: -5.210808277130127
    7. ' à' → logprob: -5.210808277130127
    8. 'import' → logprob: -6.085808277130127
    9. ' une' → logprob: -6.710808277130127
    10. 'os' → logprob: -6.835808277130127

Token 19: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6995274424552917
    2. ' l' → logprob: -0.8245274424552917
    3. 'Python' → logprob: -3.5745275020599365
    4. 'la' → logprob: -4.449527263641357
    5. 'os' → logprob: -5.074527263641357
    6. ' Python' → logprob: -5.324527263641357
    7. 's' → logprob: -5.449527263641357
    8. 'le' → logprob: -6.324527263641357
    9. ' la' → logprob: -6.449527263641357
    10. 'a' → logprob: -6.824527263641357

Token 20: ''entrée' (ID: 115820)
  Prédit: ''environnement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''environnement' → logprob: -0.6974849104881287
    2. ''' → logprob: -1.4474849700927734
    3. 'e' → logprob: -1.9474849700927734
    4. 'a' → logprob: -2.5724849700927734
    5. ''inter' → logprob: -4.572484970092773
    6. ''a' → logprob: -5.072484970092773
    7. ''environ' → logprob: -5.572484970092773
    8. ''utilisateur' → logprob: -5.822484970092773
    9. ''\' → logprob: -5.822484970092773
    10. ''ex' → logprob: -5.947484970092773

Token 21: '/s' (ID: 5031)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08788570016622543
    2. ',' → logprob: -3.337885618209839
    3. '\n' → logprob: -4.212885856628418
    4. '\' → logprob: -4.462885856628418
    5. '
' → logprob: -5.087885856628418
    6. 'import' → logprob: -5.087885856628418
    7. '' → logprob: -5.837885856628418
    8. ' ' → logprob: -6.587885856628418
    9. '```' → logprob: -6.962885856628418
    10. 'a' → logprob: -7.212885856628418

Token 22: 'ort' (ID: 390)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.7919189929962158
    2. 'u' → logprob: -2.041918992996216
    3. ' ' → logprob: -2.416918992996216
    4. 't' → logprob: -2.416918992996216
    5. 'ur' → logprob: -2.666918992996216
    6. '_' → logprob: -2.791918992996216
    7. 'p' → logprob: -2.791918992996216
    8. 's' → logprob: -2.916918992996216
    9. 'o' → logprob: -3.291918992996216
    10. 'a' → logprob: -3.541918992996216

Token 23: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10275211930274963
    2. 'u' → logprob: -2.977752208709717
    3. '.' → logprob: -3.352752208709717
    4. ',' → logprob: -5.352752208709717
    5. 'a' → logprob: -6.352752208709717
    6. '_' → logprob: -6.477752208709717
    7. ')' → logprob: -6.977752208709717
    8. 'ur' → logprob: -8.102751731872559
    9. 'es' → logprob: -8.227751731872559
    10. '\' → logprob: -8.227751731872559

Token 24: ' standard' (ID: 7024)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9241524934768677
    2. '\n' → logprob: -1.0491524934768677
    3. '.' → logprob: -2.299152374267578
    4. '' → logprob: -2.924152374267578
    5. ',' → logprob: -3.674152374267578
    6. '

' → logprob: -3.924152374267578
    7. '\' → logprob: -4.299152374267578
    8. ' ' → logprob: -4.549152374267578
    9. 'import' → logprob: -4.549152374267578
    10. 'newline' → logprob: -5.049152374267578

Token 25: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3523069620132446
    2. '.' → logprob: -1.7273069620132446
    3. '
' → logprob: -1.7273069620132446
    4. ' ' → logprob: -1.8523069620132446
    5. '' → logprob: -2.352306842803955
    6. '\' → logprob: -2.477306842803955
    7. ',' → logprob: -4.102306842803955
    8. 'import' → logprob: -4.727306842803955
    9. '

' → logprob: -5.477306842803955
    10. '#' → logprob: -5.477306842803955

Token 26: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21297509968280792
    2. '
' → logprob: -1.8379751443862915
    3. '\' → logprob: -4.712975025177002
    4. '

' → logprob: -4.962975025177002
    5. '' → logprob: -5.337975025177002
    6. 'import' → logprob: -6.087975025177002
    7. '```' → logprob: -6.212975025177002
    8. ',' → logprob: -6.337975025177002
    9. '.' → logprob: -6.712975025177002
    10. 'newline' → logprob: -7.337975025177002

Token 27: ' Déf' (ID: 180635)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3396545350551605
    2. 'def' → logprob: -1.464654564857483
    3. ' #' → logprob: -3.5896544456481934
    4. 'import' → logprob: -4.339654445648193
    5. ' def' → logprob: -5.214654445648193
    6. ' ' → logprob: -5.339654445648193
    7. '\' → logprob: -6.839654445648193
    8. '```' → logprob: -7.714654445648193
    9. '#!/' → logprob: -7.964654445648193
    10. 'class' → logprob: -7.964654445648193

Token 28: 'init' (ID: 3287)
  Prédit: 'ini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.9313167929649353
    2. 'inition' → logprob: -1.30631685256958
    3. 'in' → logprob: -1.43131685256958
    4. 'init' → logprob: -3.18131685256958
    5. 'i' → logprob: -4.05631685256958
    6. '#' → logprob: -4.30631685256958
    7. 'ine' → logprob: -4.43131685256958
    8. 'inis' → logprob: -5.80631685256958
    9. 'ault' → logprob: -5.93131685256958
    10. 'int' → logprob: -5.93131685256958

Token 29: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01162725780159235
    2. '_' → logprob: -4.636627197265625
    3. ' un' → logprob: -7.636627197265625
    4. ' une' → logprob: -7.761627197265625
    5. 's' → logprob: -8.011627197265625
    6. ' la' → logprob: -8.761627197265625
    7. ' a' → logprob: -9.011627197265625
    8. ' ' → logprob: -9.011627197265625
    9. ' ‌' → logprob: -10.011627197265625
    10. '  ' → logprob: -10.261627197265625

Token 30: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.08318302780389786
    2. ' fonction' → logprob: -2.9581830501556396
    3. ' function' → logprob: -5.3331828117370605
    4. 'f' → logprob: -5.3331828117370605
    5. 'fon' → logprob: -5.4581828117370605
    6. 'classe' → logprob: -5.9581828117370605
    7. '_f' → logprob: -6.4581828117370605
    8. ' variable' → logprob: -6.5831828117370605
    9. 'class' → logprob: -6.5831828117370605
    10. '_' → logprob: -6.7081828117370605

Token 31: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03023289330303669
    2. '_' → logprob: -4.655232906341553
    3. 'd' → logprob: -4.655232906341553
    4. ' d' → logprob: -5.905232906341553
    5. 'space' → logprob: -6.530232906341553
    6. 'def' → logprob: -6.530232906341553
    7. ' )' → logprob: -6.780232906341553
    8. 's' → logprob: -6.905232906341553
    9. ' ```' → logprob: -6.905232906341553
    10. '(space' → logprob: -7.905232906341553

Token 32: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4966185986995697
    2. 'é' → logprob: -1.121618628501892
    3. 'ef' → logprob: -3.4966185092926025
    4. 'éf' → logprob: -3.4966185092926025
    5. 'efi' → logprob: -5.496618747711182
    6. ''' → logprob: -8.496618270874023
    7. ''é' → logprob: -8.621618270874023
    8. ''entrée' → logprob: -9.246618270874023
    9. ''ex' → logprob: -9.621618270874023
    10. 'f' → logprob: -9.746618270874023

Token 33: ' '' (ID: 461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0031213874462991953
    2. '(' → logprob: -6.128121376037598
    3. 's' → logprob: -7.128121376037598
    4. '()' → logprob: -10.003121376037598
    5. ' ' → logprob: -11.253121376037598
    6. 'def' → logprob: -11.378121376037598
    7. ')' → logprob: -11.503121376037598
    8. '_util' → logprob: -11.628121376037598
    9. '```' → logprob: -12.253121376037598
    10. ' (' → logprob: -12.253121376037598

Token 34: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5815878510475159
    2. 'user' → logprob: -1.581587791442871
    3. '()' → logprob: -2.081587791442871
    4. 's' → logprob: -3.081587791442871
    5. 'util' → logprob: -3.456587791442871
    6. 'input' → logprob: -4.456587791442871
    7. '():' → logprob: -5.706587791442871
    8. 'nom' → logprob: -5.956587791442871
    9. ''' → logprob: -6.081587791442871
    10. '_' → logprob: -6.331587791442871

Token 35: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0297965370118618
    2. '_' → logprob: -4.404796600341797
    3. '('' → logprob: -4.779796600341797
    4. ''' → logprob: -5.654796600341797
    5. ')' → logprob: -5.779796600341797
    6. 's' → logprob: -6.654796600341797
    7. '()' → logprob: -8.654796600341797
    8. ' (' → logprob: -9.904796600341797
    9. '```' → logprob: -9.904796600341797
    10. ''''' → logprob: -10.029796600341797

Token 36: ' qui' (ID: 2780)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013041513971984386
    2. ':' → logprob: -4.7630414962768555
    3. '_' → logprob: -6.3880414962768555
    4. 'def' → logprob: -6.7630414962768555
    5. '()' → logprob: -8.013041496276855
    6. '=' → logprob: -8.513041496276855
    7. '():' → logprob: -8.513041496276855
    8. ',' → logprob: -8.638041496276855
    9. ' (' → logprob: -8.763041496276855
    10. '(
' → logprob: -9.388041496276855

Token 37: ' lit' (ID: 11980)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3216164708137512
    2. '()' → logprob: -1.6966164112091064
    3. ' prend' → logprob: -4.0716166496276855
    4. ' permet' → logprob: -4.3216166496276855
    5. ' def' → logprob: -4.6966166496276855
    6. '(' → logprob: -4.6966166496276855
    7. '(prompt' → logprob: -5.3216166496276855
    8. ' :' → logprob: -5.4466166496276855
    9. ':' → logprob: -5.5716166496276855
    10. ' reads' → logprob: -5.8216166496276855

Token 38: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026736343279480934
    2. '(' → logprob: -3.776736259460449
    3. 'une' → logprob: -7.276736259460449
    4. '_' → logprob: -7.526736259460449
    5. 's' → logprob: -7.526736259460449
    6. ' ' → logprob: -8.15173625946045
    7. 'a' → logprob: -8.27673625946045
    8. 'l' → logprob: -8.65173625946045
    9. ')' → logprob: -8.90173625946045
    10. '("")' → logprob: -8.90173625946045

Token 39: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9775746464729309
    2. ' ligne' → logprob: -1.1025745868682861
    3. ' ' → logprob: -2.352574586868286
    4. 'ligne' → logprob: -2.352574586868286
    5. '_' → logprob: -3.852574586868286
    6. '(' → logprob: -4.102574825286865
    7. ' chaîne' → logprob: -4.602574825286865
    8. 'l' → logprob: -5.102574825286865
    9. 'entrée' → logprob: -5.102574825286865
    10. 'chaine' → logprob: -5.352574825286865

Token 40: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09605765342712402
    2. '()' → logprob: -2.596057653427124
    3. 'def' → logprob: -5.221057891845703
    4. '_' → logprob: -5.721057891845703
    5. '\' → logprob: -6.596057891845703
    6. ' ' → logprob: -6.846057891845703
    7. ' =' → logprob: -6.971057891845703
    8. ',' → logprob: -6.971057891845703
    9. 's' → logprob: -7.471057891845703
    10. ' (' → logprob: -7.846057891845703

Token 41: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9395869374275208
    2. 'code' → logprob: -1.189586877822876
    3. 'sys' → logprob: -2.564586877822876
    4. ' l' → logprob: -2.564586877822876
    5. ' code' → logprob: -2.814586877822876
    6. 'input' → logprob: -3.814586877822876
    7. 'texte' → logprob: -3.939586877822876
    8. 's' → logprob: -4.814587116241455
    9. 'entrée' → logprob: -4.814587116241455
    10. ' sys' → logprob: -4.814587116241455

Token 42: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.358633428812027
    2. 'a' → logprob: -1.8586333990097046
    3. ''' → logprob: -2.358633518218994
    4. ''utilisateur' → logprob: -3.858633518218994
    5. 'entrée' → logprob: -4.233633518218994
    6. 'e' → logprob: -4.858633518218994
    7. 'input' → logprob: -6.483633518218994
    8. 'es' → logprob: -6.483633518218994
    9. 'sys' → logprob: -6.983633518218994
    10. 'stdin' → logprob: -7.608633518218994

Token 43: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18055212497711182
    2. 'standard' → logprob: -1.9305521249771118
    3. ' standard' → logprob: -5.305552005767822
    4. '(' → logprob: -6.305552005767822
    5. ')' → logprob: -6.555552005767822
    6. '```' → logprob: -6.680552005767822
    7. '.' → logprob: -7.055552005767822
    8. 'sys' → logprob: -7.055552005767822
    9. 'stdin' → logprob: -7.180552005767822
    10. '().' → logprob: -7.430552005767822

Token 44: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6818486452102661
    2. '(' → logprob: -1.4318486452102661
    3. ':' → logprob: -1.5568486452102661
    4. '\' → logprob: -4.181848526000977
    5. '()' → logprob: -4.556848526000977
    6. '_' → logprob: -5.181848526000977
    7. '=' → logprob: -5.931848526000977
    8. ')' → logprob: -6.181848526000977
    9. ' =' → logprob: -6.556848526000977
    10. 's' → logprob: -6.806848526000977

Token 45: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.350677251815796
    2. '   ' → logprob: -1.600677251815796
    3. ' ' → logprob: -1.975677251815796
    4. ' def' → logprob: -2.100677251815796
    5. ',' → logprob: -3.100677251815796
    6. ')' → logprob: -3.100677251815796
    7. ' et' → logprob: -3.475677251815796
    8. ' return' → logprob: -3.850677251815796
    9. ' )' → logprob: -3.850677251815796
    10. '_' → logprob: -4.350677490234375

Token 46: ' sup' (ID: 1982)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.2497186660766602
    2. ' puis' → logprob: -1.6247186660766602
    3. ' strip' → logprob: -2.24971866607666
    4. ' sup' → logprob: -2.37471866607666
    5. ' et' → logprob: -3.12471866607666
    6. 'rstrip' → logprob: -3.24971866607666
    7. ' retourne' → logprob: -3.24971866607666
    8. 'sup' → logprob: -3.49971866607666
    9. ' ajoute' → logprob: -4.12471866607666
    10. 'et' → logprob: -4.74971866607666

Token 47: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.03655847907066345
    2. 'pr' → logprob: -3.5365583896636963
    3. 'p' → logprob: -5.911558628082275
    4. 'prim' → logprob: -6.411558628082275
    5. 'pri' → logprob: -6.911558628082275
    6. 'primer' → logprob: -8.036558151245117
    7. 'pl' → logprob: -8.536558151245117
    8. '_' → logprob: -8.661558151245117
    9. 'prima' → logprob: -8.786558151245117
    10. '```' → logprob: -9.536558151245117

Token 48: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.804892897605896
    2. ' les' → logprob: -1.554892897605896
    3. ' ' → logprob: -2.5548930168151855
    4. ' la' → logprob: -2.6798930168151855
    5. ' ' → logprob: -2.9298930168151855
    6. ' trailing' → logprob: -3.0548930168151855
    7. ' le' → logprob: -3.3048930168151855
    8. 'l' → logprob: -3.6798930168151855
    9. 'le' → logprob: -4.0548930168151855
    10. 'les' → logprob: -5.5548930168151855

Token 49: ' caractères' (ID: 183106)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.008781078271567822
    2. ' trailing' → logprob: -6.0087809562683105
    3. ' ' → logprob: -6.5087809562683105
    4. ' caractères' → logprob: -6.8837809562683105
    5. 'esp' → logprob: -7.1337809562683105
    6. '\n' → logprob: -7.5087809562683105
    7. '  ' → logprob: -7.7587809562683105
    8. ' \' → logprob: -7.8837809562683105
    9. 'car' → logprob: -8.008781433105469
    10. ' '\' → logprob: -8.383781433105469

Token 50: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9227628707885742
    2. ' '\' → logprob: -2.047762870788574
    3. 's' → logprob: -2.297762870788574
    4. ' \' → logprob: -2.547762870788574
    5. '\n' → logprob: -2.672762870788574
    6. ' blancs' → logprob: -2.922762870788574
    7. ' d' → logprob: -3.547762870788574
    8. ' ' → logprob: -3.547762870788574
    9. 'de' → logprob: -3.672762870788574
    10. ' ' → logprob: -4.297762870788574

Token 51: ' fin' (ID: 2131)
  Prédit: ' fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.02285918965935707
    2. 'fin' → logprob: -4.3978590965271
    3. '\n' → logprob: -5.8978590965271
    4. ' ' → logprob: -6.2728590965271
    5. ' ' → logprob: -6.7728590965271
    6. 'es' → logprob: -7.2728590965271
    7. 's' → logprob: -7.5228590965271
    8. ' nouvelle' → logprob: -7.8978590965271
    9. ' espace' → logprob: -7.8978590965271
    10. '  ' → logprob: -8.272859573364258

Token 52: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.005039133131504059
    2. 'de' → logprob: -5.380039215087891
    3. ' d' → logprob: -8.00503921508789
    4. ' ' → logprob: -10.88003921508789
    5. 'd' → logprob: -11.25503921508789
    6. ' \' → logprob: -11.50503921508789
    7. '_de' → logprob: -11.63003921508789
    8. 'u' → logprob: -11.88003921508789
    9. 's' → logprob: -12.13003921508789
    10. 'e' → logprob: -12.63003921508789

Token 53: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.04626385495066643
    2. ' ligne' → logprob: -3.1712639331817627
    3. 'l' → logprob: -5.796263694763184
    4. 'line' → logprob: -8.671263694763184
    5. 'lig' → logprob: -11.046263694763184
    6. ' ' → logprob: -11.671263694763184
    7. 'chaine' → logprob: -12.671263694763184
    8. 'lin' → logprob: -12.796263694763184
    9. '```' → logprob: -12.796263694763184
    10. 'e' → logprob: -13.421263694763184

Token 54: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9863433837890625
    2. ',' → logprob: -1.4863433837890625
    3. 's' → logprob: -1.9863433837890625
    4. ' ,' → logprob: -3.2363433837890625
    5. ' \' → logprob: -3.2363433837890625
    6. '()' → logprob: -3.8613433837890625
    7. '\' → logprob: -3.8613433837890625
    8. 'rstrip' → logprob: -4.1113433837890625
    9. ' )' → logprob: -4.3613433837890625
    10. ' (' → logprob: -4.3613433837890625

Token 55: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.36509737372398376
    2. 'def' → logprob: -2.7400972843170166
    3. ' return' → logprob: -2.7400972843170166
    4. ')' → logprob: -3.2400972843170166
    5. 'et' → logprob: -3.6150972843170166
    6. ' and' → logprob: -3.6150972843170166
    7. ' puis' → logprob: -3.9900972843170166
    8. ' def' → logprob: -4.240097522735596
    9. '   ' → logprob: -4.365097522735596
    10. ' )' → logprob: -4.615097522735596

Token 56: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.6179196834564209
    2. ' ren' → logprob: -1.117919683456421
    3. 'ren' → logprob: -3.117919683456421
    4. 'return' → logprob: -3.492919683456421
    5. ' return' → logprob: -3.617919683456421
    6. 'ret' → logprob: -4.742919921875
    7. ' la' → logprob: -4.742919921875
    8. 'la' → logprob: -5.367919921875
    9. ' convert' → logprob: -5.992919921875
    10. ' les' → logprob: -6.742919921875

Token 57: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7558041214942932
    2. ' ' → logprob: -1.1308040618896484
    3. ' l' → logprob: -1.7558040618896484
    4. ' ' → logprob: -4.630804061889648
    5. '<|end|>' → logprob: -5.505804061889648
    6. '  ' → logprob: -5.630804061889648
    7. ' input' → logprob: -5.755804061889648
    8. 'l' → logprob: -6.005804061889648
    9. 'input' → logprob: -6.255804061889648
    10. ' le' → logprob: -6.505804061889648

Token 58: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.3396776020526886
    2. ' texte' → logprob: -2.464677572250366
    3. ' string' → logprob: -3.089677572250366
    4. ' contenu' → logprob: -3.339677572250366
    5. 'texte' → logprob: -3.964677572250366
    6. 'e' → logprob: -3.964677572250366
    7. 's' → logprob: -4.464677810668945
    8. 'string' → logprob: -4.589677810668945
    9. 'a' → logprob: -4.839677810668945
    10. ' chaîne' → logprob: -5.214677810668945

Token 59: ' comme' (ID: 7971)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024200094863772392
    2. '\' → logprob: -4.024199962615967
    3. '
' → logprob: -5.649199962615967
    4. '\n' → logprob: -6.399199962615967
    5. ':' → logprob: -8.149200439453125
    6. '```' → logprob: -8.274200439453125
    7. ':def' → logprob: -8.899200439453125
    8. 'de' → logprob: -10.024200439453125
    9. 'd' → logprob: -10.149200439453125
    10. ' def' → logprob: -10.774200439453125

Token 60: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.018719185143709183
    2. ' une' → logprob: -4.64371919631958
    3. 'cha' → logprob: -5.51871919631958
    4. 'chaine' → logprob: -5.89371919631958
    5. 'str' → logprob: -6.39371919631958
    6. 'string' → logprob: -8.018718719482422
    7. ' chaîne' → logprob: -9.268718719482422
    8. 'un' → logprob: -11.018718719482422
    9. 's' → logprob: -11.393718719482422
    10. '```' → logprob: -11.393718719482422

Token 61: ' chaîne' (ID: 89288)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.05224253237247467
    2. 'string' → logprob: -3.9272425174713135
    3. 'chaine' → logprob: -4.302242755889893
    4. ' chaîne' → logprob: -4.427242755889893
    5. ' str' → logprob: -6.177242755889893
    6. ' string' → logprob: -6.427242755889893
    7. 's' → logprob: -7.302242755889893
    8. 'cha' → logprob: -7.552242755889893
    9. ' chaine' → logprob: -8.052242279052734
    10. ' ' → logprob: -9.052242279052734

Token 62: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37078988552093506
    2. '\' → logprob: -1.620789885520935
    3. '
' → logprob: -2.6207900047302246
    4. '\n' → logprob: -4.245790004730225
    5. ':' → logprob: -4.495790004730225
    6. 'd' → logprob: -5.370790004730225
    7. '

' → logprob: -6.120790004730225
    8. 'de' → logprob: -6.370790004730225
    9. '```' → logprob: -7.120790004730225
    10. ':def' → logprob: -7.120790004730225

Token 63: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.020289838314056396
    2. ' caractères' → logprob: -4.020289897918701
    3. 'texte' → logprob: -6.520289897918701
    4. 'str' → logprob: -8.270289421081543
    5. 'chaine' → logprob: -8.895289421081543
    6. ' caract' → logprob: -9.645289421081543
    7. ' caracteres' → logprob: -9.895289421081543
    8. 'cha' → logprob: -10.520289421081543
    9. 'char' → logprob: -10.520289421081543
    10. ' caractère' → logprob: -10.770289421081543

Token 64: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15319015085697174
    2. 'def' → logprob: -2.4031901359558105
    3. '\' → logprob: -3.2781901359558105
    4. '

' → logprob: -5.4031901359558105
    5. 'd' → logprob: -5.6531901359558105
    6. '\n' → logprob: -5.7781901359558105
    7. '
' → logprob: -6.2781901359558105
    8. '```' → logprob: -8.278190612792969
    9. ' 
' → logprob: -8.528190612792969
    10. '' → logprob: -8.778190612792969

Token 65: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0103230532258749
    2. '
' → logprob: -5.0103230476379395
    3. '\' → logprob: -5.8853230476379395
    4. '```' → logprob: -7.6353230476379395
    5. '\n' → logprob: -8.510323524475098
    6. 'd' → logprob: -9.635323524475098
    7. '
' → logprob: -11.135323524475098
    8. '

' → logprob: -11.510323524475098
    9. 'de' → logprob: -11.510323524475098
    10. 'input' → logprob: -11.635323524475098

Token 66: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07809429615736008
    2. '(' → logprob: -2.703094244003296
    3. ' =' → logprob: -5.203094482421875
    4. '=' → logprob: -6.578094482421875
    5. '().' → logprob: -7.953094482421875
    6. '.' → logprob: -8.578094482421875
    7. ':' → logprob: -8.703094482421875
    8. '():' → logprob: -9.203094482421875
    9. '[:]' → logprob: -9.703094482421875
    10. ')' → logprob: -9.828094482421875

Token 67: ' lambda' (ID: 27871)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.355000764131546
    2. 'sys' → logprob: -1.2300007343292236
    3. ' lambda' → logprob: -5.480000972747803
    4. 'lambda' → logprob: -6.105000972747803
    5. 'input' → logprob: -9.355000495910645
    6. ' input' → logprob: -10.480000495910645
    7. '	sys' → logprob: -11.605000495910645
    8. '(sys' → logprob: -12.605000495910645
    9. ' ' → logprob: -13.105000495910645
    10. '=sys' → logprob: -13.355000495910645

Token 68: ':' (ID: 25)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5586162805557251
    2. 'sys' → logprob: -1.183616280555725
    3. ':' → logprob: -2.3086161613464355
    4. ' :' → logprob: -4.9336161613464355
    5. '().' → logprob: -5.3086161613464355
    6. '():' → logprob: -5.3086161613464355
    7. '()' → logprob: -6.0586161613464355
    8. ' ' → logprob: -6.8086161613464355
    9. ' ()' → logprob: -7.4336161613464355
    10. '=sys' → logprob: -7.8086161613464355

Token 69: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16050885617733002
    2. ' sys' → logprob: -1.9105088710784912
    3. 'input' → logprob: -8.28550910949707
    4. ' input' → logprob: -10.53550910949707
    5. '(sys' → logprob: -12.91050910949707
    6. '	sys' → logprob: -13.66050910949707
    7. '=sys' → logprob: -14.78550910949707
    8. 'stdin' → logprob: -15.41050910949707
    9. 'raw' → logprob: -15.53550910949707
    10. 's' → logprob: -15.53550910949707

Token 70: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00018089536752086133
    2. '.' → logprob: -9.250181198120117
    3. '.stdout' → logprob: -9.625181198120117
    4. '.argv' → logprob: -12.000181198120117
    5. '.readline' → logprob: -12.375181198120117
    6. ' .' → logprob: -12.375181198120117
    7. '.std' → logprob: -12.875181198120117
    8. '.input' → logprob: -14.375181198120117
    9. 'stdin' → logprob: -15.000181198120117
    10. '.stderr' → logprob: -15.250181198120117

Token 71: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -12.875003814697266
    3. '.read' → logprob: -14.125003814697266
    4. ' readline' → logprob: -17.625003814697266
    5. '.readlines' → logprob: -18.125003814697266
    6. '.buffer' → logprob: -18.375003814697266
    7. ' .' → logprob: -20.000003814697266
    8. '.rstrip' → logprob: -21.125003814697266
    9. 'read' → logprob: -21.250003814697266
    10. '.flush' → logprob: -22.750003814697266

Token 72: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07890454679727554
    2. '()' → logprob: -2.578904628753662
    3. '(' → logprob: -11.328904151916504
    4. ' ().' → logprob: -13.703904151916504
    5. ' ()' → logprob: -14.328904151916504
    6. '.rstrip' → logprob: -15.203904151916504
    7. '()\' → logprob: -15.453904151916504
    8. '()
' → logprob: -15.703904151916504
    9. 'rstrip' → logprob: -16.45390510559082
    10. '()

' → logprob: -16.70390510559082

Token 73: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.47407716512680054
    2. 'strip' → logprob: -0.9740771651268005
    3. 'rst' → logprob: -16.724077224731445
    4. '.rstrip' → logprob: -17.349077224731445
    5. 'decode' → logprob: -17.599077224731445
    6. 'r' → logprob: -17.724077224731445
    7. ' strip' → logprob: -18.474077224731445
    8. 'str' → logprob: -18.724077224731445
    9. '_strip' → logprob: -19.224077224731445
    10. '(strip' → logprob: -20.599077224731445

Token 74: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.035126570612192154
    2. '(' → logprob: -3.4101266860961914
    3. '()
' → logprob: -7.160126686096191
    4. '()\' → logprob: -8.410126686096191
    5. '\n' → logprob: -8.535126686096191
    6. '(
' → logprob: -9.410126686096191
    7. '('\' → logprob: -9.910126686096191
    8. '\' → logprob: -10.285126686096191
    9. '(\' → logprob: -10.535126686096191
    10. '()

' → logprob: -10.535126686096191

Token 75: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15278922021389008
    2. '#' → logprob: -2.4027891159057617
    3. '\n' → logprob: -3.7777891159057617
    4. '

' → logprob: -4.777789115905762
    5. 'n' → logprob: -5.777789115905762
    6. 'def' → logprob: -5.777789115905762
    7. '<|end|>' → logprob: -6.027789115905762
    8. ' ' → logprob: -6.527789115905762
    9. '  
' → logprob: -6.527789115905762
    10. ' 
' → logprob: -6.777789115905762

Token 76: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20283041894435883
    2. '_' → logprob: -2.9528303146362305
    3. ' main' → logprob: -3.3278303146362305
    4. ' test' → logprob: -3.8278303146362305
    5. ' calculate' → logprob: -4.5778303146362305
    6. ' space' → logprob: -4.7028303146362305
    7. ' ' → logprob: -4.8278303146362305
    8. ' user' → logprob: -5.0778303146362305
    9. ' parse' → logprob: -5.3278303146362305
    10. ' solve' → logprob: -5.4528303146362305

Token 77: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.14496862888336182
    2. '(' → logprob: -2.0199685096740723
    3. '()' → logprob: -6.144968509674072
    4. ' ():' → logprob: -9.64496898651123
    5. ':' → logprob: -10.39496898651123
    6. '():
' → logprob: -11.26996898651123
    7. '()>' → logprob: -11.64496898651123
    8. '(:' → logprob: -12.01996898651123
    9. ' (' → logprob: -12.14496898651123
    10. '(
' → logprob: -12.76996898651123

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11529197543859482
    2. ' ' → logprob: -2.4902920722961426
    3. ':' → logprob: -3.9902920722961426
    4. 'n' → logprob: -6.365292072296143
    5. '(' → logprob: -6.490292072296143
    6. '    ' → logprob: -6.615292072296143
    7. ')' → logprob: -7.240292072296143
    8. '  ' → logprob: -7.740292072296143
    9. '    
' → logprob: -8.490291595458984
    10. ' :' → logprob: -8.865291595458984

Token 79: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7481402158737183
    2. '   ' → logprob: -1.4981402158737183
    3. ' n' → logprob: -1.7481402158737183
    4. ' pass' → logprob: -3.873140335083008
    5. 'print' → logprob: -4.248140335083008
    6. 'user' → logprob: -4.248140335083008
    7. '    ' → logprob: -4.248140335083008
    8. ' ' → logprob: -4.373140335083008
    9. ' print' → logprob: -4.623140335083008
    10. ' user' → logprob: -4.748140335083008

Token 80: ' Lit' (ID: 45595)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.483521968126297
    2. 'n' → logprob: -1.4835219383239746
    3. ' name' → logprob: -3.8585219383239746
    4. '#' → logprob: -4.108521938323975
    5. 'print' → logprob: -4.108521938323975
    6. '   ' → logprob: -4.233521938323975
    7. 'name' → logprob: -4.358521938323975
    8. ' user' → logprob: -4.483521938323975
    9. ' pass' → logprob: -4.608521938323975
    10. ' print' → logprob: -4.733521938323975

Token 81: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008959780680015683
    2. ' une' → logprob: -8.125896453857422
    3. ' un' → logprob: -9.125896453857422
    4. ' la' → logprob: -9.375896453857422
    5. ' ()' → logprob: -9.500896453857422
    6. ' ' → logprob: -9.750896453857422
    7. 'une' → logprob: -10.375896453857422
    8. 'user' → logprob: -10.625896453857422
    9. 'int' → logprob: -10.750896453857422
    10. '())' → logprob: -11.125896453857422

Token 82: ' première' (ID: 23423)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -1.532943844795227
    2. ' ligne' → logprob: -2.1579437255859375
    3. 'ligne' → logprob: -2.4079437255859375
    4. 's' → logprob: -2.5329437255859375
    5. ' chaîne' → logprob: -2.7829437255859375
    6. ' valeur' → logprob: -2.9079437255859375
    7. 'entrée' → logprob: -3.0329437255859375
    8. ' première' → logprob: -3.0329437255859375
    9. 'chaine' → logprob: -3.1579437255859375
    10. ' ' → logprob: -3.6579437255859375

Token 83: ' entrée' (ID: 95590)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.054449886083602905
    2. ' ' → logprob: -3.4294497966766357
    3. 'ligne' → logprob: -4.054450035095215
    4. ' line' → logprob: -6.804450035095215
    5. '()' → logprob: -7.054450035095215
    6. 'l' → logprob: -7.429450035095215
    7. 'line' → logprob: -8.179450035095215
    8. '   ' → logprob: -8.804450035095215
    9. 'entrée' → logprob: -9.929450035095215
    10. ' lign' → logprob: -10.429450035095215

Token 84: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027945231646299362
    2. ' ' → logprob: -4.277945041656494
    3. ' =' → logprob: -5.902945041656494
    4. ' ()' → logprob: -5.902945041656494
    5. '   ' → logprob: -6.027945041656494
    6. '(' → logprob: -6.152945041656494
    7. ',' → logprob: -6.402945041656494
    8. '  ' → logprob: -8.277945518493652
    9. ' (' → logprob: -8.277945518493652
    10. ')' → logprob: -8.652945518493652

Token 85: 'supp' (ID: 124665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30065593123435974
    2. ' )' → logprob: -2.1756558418273926
    3. ' une' → logprob: -3.0506558418273926
    4. ' la' → logprob: -3.3006558418273926
    5. ' ' → logprob: -4.425655841827393
    6. ' le' → logprob: -4.925655841827393
    7. '()' → logprob: -5.175655841827393
    8. ' un' → logprob: -5.175655841827393
    9. '   ' → logprob: -5.425655841827393
    10. 'l' → logprob: -5.550655841827393

Token 86: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.014912830665707588
    2. 'osed' → logprob: -5.6399126052856445
    3. 'ose' → logprob: -5.7649126052856445
    4. 'lement' → logprob: -5.8899126052856445
    5. 'l' → logprob: -6.8899126052856445
    6. 'ément' → logprob: -7.1399126052856445
    7. 'osition' → logprob: -7.5149126052856445
    8. ')' → logprob: -7.7649126052856445
    9. 'oser' → logprob: -7.7649126052856445
    10. ' os' → logprob: -7.8899126052856445

Token 87: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.1633293777704239
    2. 'ément' → logprob: -2.1633293628692627
    3. 'é' → logprob: -3.4133293628692627
    4. 'ant' → logprob: -6.788329601287842
    5. 'ed' → logprob: -7.163329601287842
    6. 'éd' → logprob: -9.163329124450684
    7. 'és' → logprob: -9.288329124450684
    8. '#' → logprob: -9.413329124450684
    9. 'e' → logprob: -9.413329124450684
    10. '   ' → logprob: -9.538329124450684

Token 88: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.24565885961055756
    2. 'être' → logprob: -1.7456588745117188
    3. ')' → logprob: -4.120658874511719
    4. ' ' → logprob: -4.620658874511719
    5. 'e' → logprob: -6.120658874511719
    6. 't' → logprob: -6.245658874511719
    7. ' conten' → logprob: -6.370658874511719
    8. ' une' → logprob: -6.620658874511719
    9. '   ' → logprob: -7.120658874511719
    10. '  ' → logprob: -7.120658874511719

Token 89: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.045060232281684875
    2. ' ' → logprob: -3.670060157775879
    3. ' une' → logprob: -4.920060157775879
    4. ' le' → logprob: -5.170060157775879
    5. 'un' → logprob: -5.920060157775879
    6. ' an' → logprob: -6.920060157775879
    7. ' l' → logprob: -7.170060157775879
    8. ' la' → logprob: -8.045060157775879
    9. 'le' → logprob: -8.545060157775879
    10. '   ' → logprob: -8.670060157775879

Token 90: ' entier' (ID: 80473)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.9419830441474915
    2. ' entier' → logprob: -1.3169829845428467
    3. 'e' → logprob: -1.4419829845428467
    4. 'ent' → logprob: -2.9419829845428467
    5. 'nombre' → logprob: -3.4419829845428467
    6. ' ' → logprob: -4.441983222961426
    7. ' ent' → logprob: -5.316983222961426
    8. ' e' → logprob: -6.816983222961426
    9. ' integer' → logprob: -7.441983222961426
    10. ' )' → logprob: -7.941983222961426

Token 91: ' n' (ID: 297)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.28563177585601807
    2. ')' → logprob: -1.410631775856018
    3. ' ' → logprob: -6.0356316566467285
    4. ' n' → logprob: -6.4106316566467285
    5. ' ' → logprob: -9.160632133483887
    6. 'n' → logprob: -9.285632133483887
    7. '   ' → logprob: -9.660632133483887
    8. ' nombre' → logprob: -10.160632133483887
    9. ' ,' → logprob: -10.410632133483887
    10. ',' → logprob: -11.160632133483887

Token 92: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11355128884315491
    2. ' )' → logprob: -2.238551378250122
    3. 'umer' → logprob: -8.238551139831543
    4. ' ' → logprob: -8.738551139831543
    5. 'e' → logprob: -9.738551139831543
    6. ' ' → logprob: -9.863551139831543
    7. 'umber' → logprob: -10.488551139831543
    8. '  ' → logprob: -10.613551139831543
    9. '   ' → logprob: -10.863551139831543
    10. '_' → logprob: -10.863551139831543

Token 93: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8488924503326416
    2. '   ' → logprob: -1.0988924503326416
    3. 'n' → logprob: -1.4738924503326416
    4. '    ' → logprob: -4.7238922119140625
    5. ' ' → logprob: -8.473892211914062
    6. '    
' → logprob: -9.098892211914062
    7. ' )' → logprob: -9.098892211914062
    8. ')' → logprob: -9.223892211914062
    9. '  ' → logprob: -9.348892211914062
    10. '	n' → logprob: -9.348892211914062

Token 94: ' convert' (ID: 8452)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7288155555725098
    2. 'n' → logprob: -1.2288155555725098
    3. ' n' → logprob: -1.8538155555725098
    4. '=' → logprob: -2.9788155555725098
    5. '=int' → logprob: -4.22881555557251
    6. ' ' → logprob: -7.35381555557251
    7. '=n' → logprob: -7.72881555557251
    8. 'int' → logprob: -7.72881555557251
    9. ' number' → logprob: -8.478815078735352
    10. '=input' → logprob: -9.228815078735352

Token 95: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.004899397026747465
    2. 'i' → logprob: -5.504899501800537
    3. 'ie' → logprob: -7.379899501800537
    4. 'is' → logprob: -10.254899024963379
    5. ' it' → logprob: -10.379899024963379
    6. '   ' → logprob: -10.629899024963379
    7. 'ir' → logprob: -10.754899024963379
    8. '=' → logprob: -10.754899024963379
    9. '```' → logprob: -11.379899024963379
    10. 'et' → logprob: -11.504899024963379

Token 96: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2556314766407013
    2. 'en' → logprob: -1.505631446838379
    3. '   ' → logprob: -6.255631446838379
    4. 'int' → logprob: -7.130631446838379
    5. ' ' → logprob: -7.255631446838379
    6. '(en' → logprob: -9.380631446838379
    7. '()' → logprob: -9.505631446838379
    8. '(int' → logprob: -9.755631446838379
    9. '```' → logprob: -11.505631446838379
    10. '(' → logprob: -11.630631446838379

Token 97: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47522616386413574
    2. ' int' → logprob: -0.9752261638641357
    3. ' un' → logprob: -8.100226402282715
    4. ' entier' → logprob: -8.225226402282715
    5. 'ent' → logprob: -8.350226402282715
    6. ' integer' → logprob: -8.975226402282715
    7. ' ent' → logprob: -9.600226402282715
    8. ' ' → logprob: -9.975226402282715
    9. '=int' → logprob: -10.350226402282715
    10. ' an' → logprob: -10.600226402282715

Token 98: ' avec' (ID: 3937)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.666059136390686
    2. '   ' → logprob: -1.166059136390686
    3. ',' → logprob: -2.4160590171813965
    4. '(' → logprob: -2.7910590171813965
    5. 'n' → logprob: -5.0410590171813965
    6. '(n' → logprob: -5.5410590171813965
    7. ' ' → logprob: -5.6660590171813965
    8. ')' → logprob: -6.2910590171813965
    9. ' =' → logprob: -6.2910590171813965
    10. ' n' → logprob: -6.4160590171813965

Token 99: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3869163691997528
    2. 'int' → logprob: -1.1369163990020752
    3. ' ' → logprob: -10.761916160583496
    4. '   ' → logprob: -11.886916160583496
    5. ' n' → logprob: -12.386916160583496
    6. '=int' → logprob: -12.636916160583496
    7. '(int' → logprob: -13.261916160583496
    8. 'n' → logprob: -13.761916160583496
    9. '```' → logprob: -13.886916160583496
    10. '`' → logprob: -14.011916160583496

Token 100: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0170679222792387
    2. '(input' → logprob: -4.517067909240723
    3. '()' → logprob: -5.767067909240723
    4. '(
' → logprob: -7.267067909240723
    5. ',' → logprob: -7.517067909240723
    6. ' (' → logprob: -7.767067909240723
    7. ' ' → logprob: -7.892067909240723
    8. '   ' → logprob: -7.892067909240723
    9. 'input' → logprob: -9.017067909240723
    10. ')' → logprob: -9.642067909240723

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.199431911110878
    2. '(' → logprob: -2.574431896209717
    3. '()' → logprob: -2.699431896209717
    4. 'n' → logprob: -3.699431896209717
    5. '(n' → logprob: -5.199431896209717
    6. ',' → logprob: -5.699431896209717
    7. ' n' → logprob: -6.449431896209717
    8. ')' → logprob: -7.574431896209717
    9. ' ' → logprob: -8.324432373046875
    10. '    ' → logprob: -8.449432373046875

Token 102: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.16054874658584595
    2. '   ' → logprob: -2.160548686981201
    3. ' n' → logprob: -3.410548686981201
    4. '  ' → logprob: -11.41054916381836
    5. '    
' → logprob: -11.78554916381836
    6. ' ' → logprob: -11.91054916381836
    7. '	n' → logprob: -12.16054916381836
    8. ',' → logprob: -12.78554916381836
    9. '    ' → logprob: -13.16054916381836
    10. ')' → logprob: -13.66054916381836

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008637497201561928
    2. '=' → logprob: -4.758637428283691
    3. ' ' → logprob: -11.008637428283691
    4. ')' → logprob: -12.883637428283691
    5. '=int' → logprob: -13.008637428283691
    6. ' =
' → logprob: -14.383637428283691
    7. '   ' → logprob: -14.383637428283691
    8. '  ' → logprob: -16.133638381958008
    9. ' ' → logprob: -16.258638381958008
    10. ' )' → logprob: -16.258638381958008

Token 104: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06994109600782394
    2. 'int' → logprob: -2.6949410438537598
    3. ' input' → logprob: -12.569941520690918
    4. 'input' → logprob: -14.444941520690918
    5. ' ' → logprob: -15.069941520690918
    6. '=int' → logprob: -15.694941520690918
    7. '<int' → logprob: -15.819941520690918
    8. '(int' → logprob: -15.944941520690918
    9. '	int' → logprob: -17.0699405670166
    10. ':int' → logprob: -17.8199405670166

Token 105: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009828338399529457
    2. '(' → logprob: -4.634828567504883
    3. 'input' → logprob: -10.134828567504883
    4. ' (' → logprob: -10.759828567504883
    5. '(
' → logprob: -11.509828567504883
    6. ' input' → logprob: -14.884828567504883
    7. '(

' → logprob: -15.009828567504883
    8. ')' → logprob: -15.259828567504883
    9. '=input' → logprob: -15.634828567504883
    10. ' ' → logprob: -16.384828567504883

Token 106: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0037980577908456326
    2. '()' → logprob: -6.378798007965088
    3. '()))' → logprob: -6.378798007965088
    4. ')' → logprob: -8.003798484802246
    5. ' ())' → logprob: -10.378798484802246
    6. '())
' → logprob: -10.753798484802246
    7. '(' → logprob: -12.378798484802246
    8. '))' → logprob: -12.878798484802246
    9. '()
' → logprob: -14.378798484802246
    10. '()))
' → logprob: -14.628798484802246

Token 107: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4413573741912842
    2. '<|end|>' → logprob: -1.4413573741912842
    3. ')' → logprob: -2.441357374191284
    4. ' ' → logprob: -4.566357612609863
    5. '
' → logprob: -4.816357612609863
    6. '    
' → logprob: -5.316357612609863
    7. '\n' → logprob: -6.066357612609863
    8. '  
' → logprob: -6.316357612609863
    9. '<|end|>' → logprob: -6.566357612609863
    10. '  ' → logprob: -6.691357612609863

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08864136040210724
    2. '#' → logprob: -3.338641405105591
    3. 'result' → logprob: -3.838641405105591
    4. 's' → logprob: -4.713641166687012
    5. 'for' → logprob: -5.588641166687012
    6. 'a' → logprob: -5.963641166687012
    7. 'arr' → logprob: -6.088641166687012
    8. 'results' → logprob: -6.088641166687012
    9. ' result' → logprob: -6.713641166687012
    10. ' #' → logprob: -6.713641166687012

Token 109: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7984845042228699
    2. 's' → logprob: -1.9234845638275146
    3. 'total' → logprob: -2.0484845638275146
    4. 'for' → logprob: -2.1734845638275146
    5. 'arr' → logprob: -3.2984845638275146
    6. 'results' → logprob: -3.6734845638275146
    7. 'res' → logprob: -4.0484843254089355
    8. '#' (adapté à ' #') → logprob: -4.0484843254089355
    9. 'lst' → logprob: -4.1734843254089355
    10. 'a' → logprob: -4.2984843254089355

Token 110: ' Lit' (ID: 45595)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7851909399032593
    2. 'for' → logprob: -1.5351909399032593
    3. 'total' → logprob: -2.160191059112549
    4. '#' → logprob: -3.035191059112549
    5. 's' → logprob: -3.035191059112549
    6. ' result' → logprob: -3.660191059112549
    7. 'res' → logprob: -4.160191059112549
    8. 'results' → logprob: -4.160191059112549
    9. 'sum' → logprob: -4.785191059112549
    10. ' total' → logprob: -5.035191059112549

Token 111: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0037298917304724455
    2. ' la' → logprob: -7.003729820251465
    3. ' ()' → logprob: -7.253729820251465
    4. ' n' → logprob: -7.628729820251465
    5. ' les' → logprob: -8.003729820251465
    6. '   ' → logprob: -8.253729820251465
    7. 'n' → logprob: -8.628729820251465
    8. '(n' → logprob: -8.628729820251465
    9. ' un' → logprob: -8.878729820251465
    10. ' ' → logprob: -9.003729820251465

Token 112: ' deuxième' (ID: 51664)
  Prédit: ' deuxième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deuxième' → logprob: -0.3087938725948334
    2. ' seconde' → logprob: -2.308793783187866
    3. ' suivante' → logprob: -2.683793783187866
    4. 's' → logprob: -3.183793783187866
    5. 'de' → logprob: -3.933793783187866
    6. ' liste' → logprob: -4.683794021606445
    7. ' ligne' → logprob: -4.808794021606445
    8. '#' → logprob: -5.183794021606445
    9. ' ' → logprob: -6.308794021606445
    10. 'ligne' → logprob: -6.433794021606445

Token 113: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22479146718978882
    2. 'input' → logprob: -2.4747915267944336
    3. ' input' → logprob: -3.3497915267944336
    4. '   ' → logprob: -3.4747915267944336
    5. 'n' → logprob: -4.349791526794434
    6. ' n' → logprob: -4.974791526794434
    7. ' ()' → logprob: -5.099791526794434
    8. 'entrée' → logprob: -5.224791526794434
    9. '()
' → logprob: -5.724791526794434
    10. ' ' → logprob: -5.974791526794434

Token 114: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16206572949886322
    2. ' =' → logprob: -2.5370657444000244
    3. ',' → logprob: -3.6620657444000244
    4. '()' → logprob: -4.287065505981445
    5. 's' → logprob: -4.287065505981445
    6. ' (' → logprob: -5.412065505981445
    7. 'input' → logprob: -6.287065505981445
    8. 'n' → logprob: -6.412065505981445
    9. '=' → logprob: -6.537065505981445
    10. ':' → logprob: -6.787065505981445

Token 115: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.08396276086568832
    2. 'e' → logprob: -2.9589626789093018
    3. 'entrée' → logprob: -3.5839626789093018
    4. 'es' → logprob: -8.458962440490723
    5. ''' → logprob: -8.833962440490723
    6. ' entrée' → logprob: -9.333962440490723
    7. '’entrée' → logprob: -9.583962440490723
    8. ''é' → logprob: -10.333962440490723
    9. ''ex' → logprob: -10.458962440490723
    10. 'é' → logprob: -10.458962440490723

Token 116: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46090394258499146
    2. '()' → logprob: -1.9609038829803467
    3. ' =' → logprob: -1.9609038829803467
    4. 's' → logprob: -2.8359038829803467
    5. ',' → logprob: -4.835904121398926
    6. '=' → logprob: -5.585904121398926
    7. 'data' → logprob: -5.710904121398926
    8. 'input' → logprob: -5.960904121398926
    9. 'n' → logprob: -6.210904121398926
    10. 'for' → logprob: -6.960904121398926

Token 117: ' la' (ID: 557)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.6999965906143188
    2. 's' → logprob: -2.0749964714050293
    3. ' qui' → logprob: -2.1999964714050293
    4. ' la' → logprob: -2.3249964714050293
    5. ' tokens' → logprob: -2.6999964714050293
    6. 'tokens' → logprob: -2.9499964714050293
    7. 'numbers' → logprob: -3.1999964714050293
    8. ' split' → logprob: -3.4499964714050293
    9. ' which' → logprob: -3.5749964714050293
    10. ' s' → logprob: -3.6999964714050293

Token 118: ' décou' (ID: 68302)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.136082649230957
    2. ' liste' → logprob: -1.261082649230957
    3. ' split' → logprob: -1.511082649230957
    4. ' =' → logprob: -2.386082649230957
    5. 's' → logprob: -4.261082649230957
    6. ' convert' → logprob: -4.511082649230957
    7. ' transforme' → logprob: -5.011082649230957
    8. 'n' → logprob: -5.261082649230957
    9. '=' → logprob: -5.386082649230957
    10. ' list' → logprob: -5.511082649230957

Token 119: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0054528857581317425
    2. 'page' → logprob: -5.880453109741211
    3. 'per' → logprob: -6.255453109741211
    4. 'p' → logprob: -7.380453109741211
    5. 'pé' → logprob: -10.755453109741211
    6. 'pa' → logprob: -10.880453109741211
    7. 'pte' → logprob: -11.880453109741211
    8. 'пе' → logprob: -12.005453109741211
    9. '```' → logprob: -12.380453109741211
    10. 'e' → logprob: -12.630453109741211

Token 120: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.22307516634464264
    2. '()' → logprob: -2.2230751514434814
    3. 's' → logprob: -2.5980751514434814
    4. 'en' → logprob: -5.8480753898620605
    5. ' into' → logprob: -5.8480753898620605
    6. 'tokens' → logprob: -6.0980753898620605
    7. ' =' → logprob: -6.5980753898620605
    8. ' n' → logprob: -6.8480753898620605
    9. ' ' → logprob: -6.9730753898620605
    10. ' la' → logprob: -7.0980753898620605

Token 121: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.25994059443473816
    2. ' tokens' → logprob: -1.7599406242370605
    3. 'tokens' → logprob: -4.0099406242370605
    4. ' liste' → logprob: -4.2599406242370605
    5. ' a' → logprob: -5.1349406242370605
    6. 'une' → logprob: -5.2599406242370605
    7. ' espaces' → logprob: -6.1349406242370605
    8. ' list' → logprob: -6.3849406242370605
    9. 'liste' → logprob: -6.7599406242370605
    10. ' n' → logprob: -6.8849406242370605

Token 122: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.4246337115764618
    2. ' list' → logprob: -1.4246337413787842
    3. 'list' → logprob: -2.799633741378784
    4. 'liste' → logprob: -3.174633741378784
    5. 's' → logprob: -6.174633502960205
    6. ' listes' → logprob: -8.174633979797363
    7. 'lst' → logprob: -9.174633979797363
    8. ' lista' → logprob: -9.174633979797363
    9. 'Liste' → logprob: -10.049633979797363
    10. 'n' → logprob: -10.799633979797363

Token 123: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5843803882598877
    2. ' des' → logprob: -1.7093803882598877
    3. ' s' → logprob: -2.7093803882598877
    4. 'tokens' → logprob: -3.7093803882598877
    5. ' de' → logprob: -3.8343803882598877
    6. ' input' → logprob: -4.084380149841309
    7. ' d' → logprob: -4.209380149841309
    8. 'input' → logprob: -4.209380149841309
    9. '   ' → logprob: -4.459380149841309
    10. 'a' → logprob: -4.709380149841309

Token 124: ' chaînes' (ID: 179904)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.5399206876754761
    2. ' chaînes' → logprob: -1.289920687675476
    3. ' integers' → logprob: -3.2899208068847656
    4. 'strings' → logprob: -3.5399208068847656
    5. ' tokens' → logprob: -3.6649208068847656
    6. 'str' → logprob: -4.164920806884766
    7. ' nombres' → logprob: -4.289920806884766
    8. ' ent' → logprob: -5.414920806884766
    9. 'tokens' → logprob: -5.664920806884766
    10. ' chain' → logprob: -5.789920806884766

Token 125: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11520220339298248
    2. '   ' → logprob: -2.9902021884918213
    3. 's' → logprob: -3.4902021884918213
    4. ' =' → logprob: -4.6152024269104
    5. '().' → logprob: -5.3652024269104
    6. 'n' → logprob: -5.9902024269104
    7. 'de' → logprob: -6.6152024269104
    8. ' n' → logprob: -6.7402024269104
    9. ' de' → logprob: -6.7402024269104
    10. '(),' → logprob: -7.1152024269104

Token 126: ' 
' (ID: 793)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -1.6303672790527344
    2. ' lst' → logprob: -1.6303672790527344
    3. ' vals' → logprob: -1.8803672790527344
    4. ' a' → logprob: -2.2553672790527344
    5. ' numbers' → logprob: -2.3803672790527344
    6. ' t' → logprob: -2.8803672790527344
    7. ' values' → logprob: -3.5053672790527344
    8. ' nums' → logprob: -3.6303672790527344
    9. ' data' → logprob: -4.255367279052734
    10. ' l' → logprob: -4.255367279052734

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016390221193432808
    2. 'tokens' → logprob: -5.891390323638916
    3. ' tokens' → logprob: -6.266390323638916
    4. 's' → logprob: -6.641390323638916
    5. '    ' → logprob: -6.766390323638916
    6. ' numbers' → logprob: -7.016390323638916
    7. 'numbers' → logprob: -7.266390323638916
    8. ' s' → logprob: -7.391390323638916
    9. ' b' → logprob: -7.516390323638916
    10. ' elems' → logprob: -7.516390323638916

Token 128: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.4370410442352295
    2. ' arr' → logprob: -1.6870410442352295
    3. 'a' → logprob: -1.9370410442352295
    4. 'numbers' → logprob: -2.1870410442352295
    5. 'lst' → logprob: -2.6870410442352295
    6. ' numbers' → logprob: -2.9370410442352295
    7. ' lst' → logprob: -3.1870410442352295
    8. ' a' → logprob: -3.4370410442352295
    9. 'nums' → logprob: -3.9370410442352295
    10. 'values' → logprob: -4.062041282653809

Token 129: ' puis' (ID: 18766)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.0574588775634766
    2. 'a' → logprob: -1.4324588775634766
    3. 'numbers' → logprob: -2.3074588775634766
    4. 'nums' → logprob: -2.8074588775634766
    5. ' arr' → logprob: -2.9324588775634766
    6. 'lst' → logprob: -3.0574588775634766
    7. 'l' → logprob: -3.6824588775634766
    8. 'vals' → logprob: -3.9324588775634766
    9. 't' → logprob: -4.432458877563477
    10. 'scores' → logprob: -4.432458877563477

Token 130: ' map' (ID: 4014)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9202132821083069
    2. ' convert' → logprob: -1.545213222503662
    3. ' la' → logprob: -2.420213222503662
    4. ' map' → logprob: -2.670213222503662
    5. 'convert' → logprob: -2.795213222503662
    6. 'con' → logprob: -3.170213222503662
    7. '   ' → logprob: -3.795213222503662
    8. 'la' → logprob: -4.170213222503662
    9. ' trie' → logprob: -4.295213222503662
    10. 'map' → logprob: -4.420213222503662

Token 131: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.009315538220107555
    2. '(int' → logprob: -4.759315490722656
    3. 'e' → logprob: -8.259315490722656
    4. '(pe' → logprob: -8.634315490722656
    5. 's' → logprob: -9.759315490722656
    6. '(lambda' → logprob: -10.009315490722656
    7. '(' → logprob: -10.384315490722656
    8. 'per' → logprob: -10.634315490722656
    9. 'pee' → logprob: -10.759315490722656
    10. 'p' → logprob: -11.009315490722656

Token 132: ' chaque' (ID: 21194)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012864530086517334
    2. 'int' → logprob: -4.887864589691162
    3. ' int' → logprob: -6.137864589691162
    4. '(lambda' → logprob: -6.262864589691162
    5. '(' → logprob: -7.637864589691162
    6. '(str' → logprob: -8.137864112854004
    7. ' chaque' → logprob: -9.387864112854004
    8. '   ' → logprob: -10.387864112854004
    9. '```' → logprob: -10.387864112854004
    10. 'each' → logprob: -10.637864112854004

Token 133: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1832824945449829
    2. 'int' → logprob: -2.5582823753356934
    3. 'str' → logprob: -3.5582823753356934
    4. 'element' → logprob: -3.8082823753356934
    5. ' élément' → logprob: -3.8082823753356934
    6. ' str' → logprob: -5.558282375335693
    7. ' element' → logprob: -5.558282375335693
    8. ' int' → logprob: -5.808282375335693
    9. '(int' → logprob: -6.808282375335693
    10. ' chaîne' → logprob: -6.933282375335693

Token 134: ' de' (ID: 334)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2812834680080414
    2. 'int' → logprob: -1.7812834978103638
    3. ' int' → logprob: -2.906283378601074
    4. '(' → logprob: -4.781283378601074
    5. ' en' → logprob: -4.781283378601074
    6. '   ' → logprob: -6.406283378601074
    7. '(str' → logprob: -7.406283378601074
    8. 'str' → logprob: -7.781283378601074
    9. ' ' → logprob: -7.906283378601074
    10. '(lambda' → logprob: -8.031283378601074

Token 135: ' cette' (ID: 7696)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6401386260986328
    2. ' int' → logprob: -0.7651386260986328
    3. ' str' → logprob: -5.390138626098633
    4. 'str' → logprob: -5.890138626098633
    5. ' la' → logprob: -10.140138626098633
    6. '(int' → logprob: -10.140138626098633
    7. ' lambda' → logprob: -10.265138626098633
    8. ' type' → logprob: -10.765138626098633
    9. ' ' → logprob: -11.515138626098633
    10. '   ' → logprob: -11.765138626098633

Token 136: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.13122837245464325
    2. ' list' → logprob: -2.881228446960449
    3. 'liste' → logprob: -3.506228446960449
    4. 'list' → logprob: -4.506228446960449
    5. ' chaîne' → logprob: -5.131228446960449
    6. ' input' → logprob: -5.506228446960449
    7. ' ligne' → logprob: -6.131228446960449
    8. 'input' → logprob: -6.131228446960449
    9. ' chaine' → logprob: -6.131228446960449
    10. ' string' → logprob: -6.381228446960449

Token 137: ' à' (ID: 1221)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.0991482734680176
    2. 'int' → logprob: -1.0991482734680176
    3. ' int' → logprob: -2.3491482734680176
    4. ' à' → logprob: -2.5991482734680176
    5. '(int' → logprob: -3.0991482734680176
    6. ' sur' → logprob: -3.0991482734680176
    7. ' to' → logprob: -4.099148273468018
    8. ' ' → logprob: -4.349148273468018
    9. ' str' → logprob: -4.724148273468018
    10. '   ' → logprob: -4.724148273468018

Token 138: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11292698234319687
    2. ' int' → logprob: -2.237926959991455
    3. 'l' → logprob: -9.987927436828613
    4. ' l' → logprob: -10.737927436828613
    5. ' une' → logprob: -11.487927436828613
    6. '(int' → logprob: -12.112927436828613
    7. '=int' → logprob: -12.112927436828613
    8. '`' → logprob: -13.237927436828613
    9. '<int' → logprob: -13.362927436828613
    10. ' des' → logprob: -13.487927436828613

Token 139: ' pour' (ID: 1930)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11332758516073227
    2. '(int' → logprob: -3.6133275032043457
    3. ',' → logprob: -3.8633275032043457
    4. '(' → logprob: -3.9883275032043457
    5. '   ' → logprob: -4.363327503204346
    6. '(map' → logprob: -4.738327503204346
    7. '(numbers' → logprob: -5.238327503204346
    8. 'input' → logprob: -5.363327503204346
    9. 's' → logprob: -6.363327503204346
    10. '()' → logprob: -6.488327503204346

Token 140: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.11663971096277237
    2. 'ob' → logprob: -2.8666396141052246
    3. ' en' → logprob: -3.7416396141052246
    4. ' créer' → logprob: -3.9916396141052246
    5. 'en' → logprob: -5.616639614105225
    6. ' les' → logprob: -5.741639614105225
    7. ' form' → logprob: -6.616639614105225
    8. 'les' → logprob: -7.616639614105225
    9. ' convertir' → logprob: -7.866639614105225
    10. ' le' → logprob: -8.241640090942383

Token 141: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.09595152735710144
    2. ' des' → logprob: -3.220951557159424
    3. ' la' → logprob: -3.595951557159424
    4. 'une' → logprob: -5.220951557159424
    5. ' un' → logprob: -5.345951557159424
    6. ' integers' → logprob: -5.595951557159424
    7. ' a' → logprob: -5.845951557159424
    8. ' les' → logprob: -5.970951557159424
    9. '   ' → logprob: -6.720951557159424
    10. 'a' → logprob: -6.845951557159424

Token 142: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.11293070763349533
    2. 'liste' → logprob: -2.6129307746887207
    3. ' list' → logprob: -3.8629307746887207
    4. 'list' → logprob: -4.487930774688721
    5. 's' → logprob: -7.112930774688721
    6. ' listes' → logprob: -8.237930297851562
    7. ' ' → logprob: -10.987930297851562
    8. 'l' → logprob: -11.487930297851562
    9. ' ' → logprob: -11.487930297851562
    10. 'Liste' → logprob: -11.487930297851562

Token 143: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1451691389083862
    2. '   ' → logprob: -1.2701691389083862
    3. ' of' → logprob: -2.020169258117676
    4. ' des' → logprob: -2.395169258117676
    5. ' d' → logprob: -3.395169258117676
    6. ' integers' → logprob: -3.395169258117676
    7. '[int' → logprob: -4.270169258117676
    8. '(numbers' → logprob: -4.520169258117676
    9. '(map' → logprob: -4.895169258117676
    10. 'de' → logprob: -5.020169258117676

Token 144: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.21724148094654083
    2. ' ent' → logprob: -2.0922415256500244
    3. 'ent' → logprob: -2.7172415256500244
    4. '’ent' → logprob: -5.467241287231445
    5. ' integers' → logprob: -7.092241287231445
    6. 'inte' → logprob: -8.342241287231445
    7. '_ent' → logprob: -8.467241287231445
    8. ' entier' → logprob: -9.217241287231445
    9. 'ints' → logprob: -9.842241287231445
    10. ' nombres' → logprob: -10.217241287231445

Token 145: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0001967457792488858
    2. 'ières' → logprob: -8.62519645690918
    3. 'i' → logprob: -11.75019645690918
    4. 'ier' → logprob: -12.25019645690918
    5. 'ers' → logprob: -12.87519645690918
    6. 's' → logprob: -14.25019645690918
    7. '```' → logprob: -15.12519645690918
    8. 'eurs' → logprob: -15.62519645690918
    9. 'gers' → logprob: -15.87519645690918
    10. 'ié' → logprob: -16.12519645690918

Token 146: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04578856751322746
    2. 'a' → logprob: -4.045788764953613
    3. 'numbers' → logprob: -4.420788764953613
    4. 'arr' → logprob: -5.670788764953613
    5. '(numbers' → logprob: -5.795788764953613
    6. 'lst' → logprob: -6.670788764953613
    7. ' numbers' → logprob: -6.920788764953613
    8. ' a' → logprob: -6.920788764953613
    9. 's' → logprob: -7.170788764953613
    10. 'nums' → logprob: -7.170788764953613

Token 147: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4631883203983307
    2. ' a' → logprob: -1.7131882905960083
    3. 'a' → logprob: -2.213188409805298
    4. ' arr' → logprob: -3.838188409805298
    5. ' lst' → logprob: -4.463188171386719
    6. 'arr' → logprob: -4.463188171386719
    7. ' numbers' → logprob: -4.963188171386719
    8. ' l' → logprob: -5.463188171386719
    9. ' nums' → logprob: -5.463188171386719
    10. 'numbers' → logprob: -5.838188171386719

Token 148: ' enfin' (ID: 50642)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.27746865153312683
    2. ' les' → logprob: -2.902468681335449
    3. ' convert' → logprob: -3.027468681335449
    4. ' lst' → logprob: -3.777468681335449
    5. ' la' → logprob: -4.152468681335449
    6. ' n' → logprob: -4.152468681335449
    7. ' l' → logprob: -4.277468681335449
    8. ' liste' → logprob: -4.402468681335449
    9. ' converts' → logprob: -4.527468681335449
    10. ' transforme' → logprob: -4.902468681335449

Token 149: ' cast' (ID: 9831)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2686011493206024
    2. ' liste' → logprob: -2.143601179122925
    3. 'list' → logprob: -2.768601179122925
    4. 'liste' → logprob: -4.268600940704346
    5. ' la' → logprob: -4.393600940704346
    6. ' convert' → logprob: -5.143600940704346
    7. ' lst' → logprob: -5.268600940704346
    8. ' converts' → logprob: -5.893600940704346
    9. ' listes' → logprob: -6.143600940704346
    10. ' les' → logprob: -6.268600940704346

Token 150: ' en' (ID: 469)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00034964739461429417
    2. '(e' → logprob: -8.750349998474121
    3. '()' → logprob: -9.500349998474121
    4. 'er' → logprob: -9.875349998474121
    5. '(' → logprob: -10.500349998474121
    6. ' e' → logprob: -11.875349998474121
    7. '(list' → logprob: -12.125349998474121
    8. ')' → logprob: -12.125349998474121
    9. '(
' → logprob: -12.500349998474121
    10. ')e' → logprob: -12.750349998474121

Token 151: ' '' (ID: 461)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4740995764732361
    2. 'list' → logprob: -0.9740995764732361
    3. ' liste' → logprob: -11.849099159240723
    4. 'liste' → logprob: -12.224099159240723
    5. '[]' → logprob: -13.099099159240723
    6. ' ' → logprob: -13.224099159240723
    7. '```' → logprob: -13.474099159240723
    8. '   ' → logprob: -13.849099159240723
    9. ' la' → logprob: -14.599099159240723
    10. 'List' → logprob: -14.599099159240723

Token 152: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.31326964497566223
    2. ' list' → logprob: -1.3132696151733398
    3. ' ' → logprob: -12.93826961517334
    4. 'List' → logprob: -14.18826961517334
    5. 'set' → logprob: -14.18826961517334
    6. '   ' → logprob: -14.43826961517334
    7. 'l' → logprob: -15.18826961517334
    8. ')' → logprob: -15.18826961517334
    9. '[]' → logprob: -15.31326961517334
    10. '```' → logprob: -15.31326961517334

Token 153: ''.
' (ID: 49980)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.947215735912323
    2. '[int' → logprob: -1.0722157955169678
    3. '()' → logprob: -1.6972157955169678
    4. '(map' → logprob: -3.0722157955169678
    5. ''' → logprob: -4.572215557098389
    6. '(input' → logprob: -4.697215557098389
    7. ')' → logprob: -4.947215557098389
    8. '<int' → logprob: -5.447215557098389
    9. '```' → logprob: -5.572215557098389
    10. '')' → logprob: -6.822215557098389

Token 154: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.434770941734314
    2. 'a' → logprob: -1.559770941734314
    3. '   ' → logprob: -1.809770941734314
    4. 'arr' → logprob: -2.1847710609436035
    5. 'numbers' → logprob: -2.5597710609436035
    6. ' numbers' → logprob: -2.6847710609436035
    7. ' arr' → logprob: -3.4347710609436035
    8. 'lst' → logprob: -3.5597710609436035
    9. ' lst' → logprob: -3.9347710609436035
    10. 'nums' → logprob: -4.9347710609436035

Token 155: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.7965291142463684
    2. 'a' → logprob: -1.4215290546417236
    3. 'lst' → logprob: -2.4215290546417236
    4. 'numbers' → logprob: -2.4215290546417236
    5. ' a' → logprob: -3.6715290546417236
    6. 'values' → logprob: -4.046529293060303
    7. ' arr' → logprob: -4.046529293060303
    8. 'nums' → logprob: -4.171529293060303
    9. ' numbers' → logprob: -4.171529293060303
    10. ' lst' → logprob: -5.046529293060303

Token 156: ' Cette' (ID: 27383)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.7200159430503845
    2. ' arr' → logprob: -2.0950160026550293
    3. 'a' → logprob: -2.2200160026550293
    4. 'numbers' → logprob: -2.5950160026550293
    5. ' numbers' → logprob: -2.8450160026550293
    6. ' a' → logprob: -3.3450160026550293
    7. 'lst' → logprob: -3.7200160026550293
    8. 'nums' → logprob: -3.7200160026550293
    9. 'values' → logprob: -4.095016002655029
    10. ' lst' → logprob: -5.095016002655029

Token 157: ' liste' (ID: 31719)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30555039644241333
    2. ' numbers' → logprob: -3.1805503368377686
    3. 'numbers' → logprob: -3.5555503368377686
    4. 's' → logprob: -3.8055503368377686
    5. ' n' → logprob: -3.9305503368377686
    6. 'n' → logprob: -4.055550575256348
    7. 'liste' → logprob: -4.305550575256348
    8. '=' → logprob: -4.305550575256348
    9. ' liste' → logprob: -4.430550575256348
    10. ' line' → logprob: -4.680550575256348

Token 158: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016168443486094475
    2. '=' → logprob: -5.391168594360352
    3. '_numbers' → logprob: -5.641168594360352
    4. ' des' → logprob: -5.766168594360352
    5. 'des' → logprob: -7.641168594360352
    6. 's' → logprob: -7.641168594360352
    7. ' d' → logprob: -7.766168594360352
    8. 'd' → logprob: -7.891168594360352
    9. '_' → logprob: -8.266168594360352
    10. 'n' → logprob: -8.391168594360352

Token 159: ' stock' (ID: 6546)
  Prédit: ' utilisée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.5784780383110046
    2. ' stock' → logprob: -0.9534780383110046
    3. ' used' → logprob: -3.8284780979156494
    4. ' la' → logprob: -4.95347785949707
    5. ' stored' → logprob: -5.45347785949707
    6. 'stock' → logprob: -5.95347785949707
    7. ' appelée' → logprob: -6.07847785949707
    8. ' les' → logprob: -6.45347785949707
    9. ' lst' → logprob: -6.57847785949707
    10. ' utilisées' → logprob: -6.82847785949707

Token 160: 'ée' (ID: 2894)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5657347440719604
    2. '=' → logprob: -1.5657347440719604
    3. 'ée' → logprob: -2.19073486328125
    4. 'e' → logprob: -2.44073486328125
    5. 'er' → logprob: -4.56573486328125
    6. '_' → logprob: -5.44073486328125
    7. 'é' → logprob: -6.06573486328125
    8. 'es' → logprob: -7.19073486328125
    9. '   ' → logprob: -7.31573486328125
    10. 'ed' → logprob: -7.31573486328125

Token 161: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.47199103236198425
    2. '   ' → logprob: -2.3469910621643066
    3. ' en' → logprob: -2.4719910621643066
    4. ' =' → logprob: -2.7219910621643066
    5. 's' → logprob: -3.4719910621643066
    6. ' in' → logprob: -3.8469910621643066
    7. '=' → logprob: -4.596991062164307
    8. ' ' → logprob: -5.096991062164307
    9. ' as' → logprob: -5.221991062164307
    10. 'dans' → logprob: -5.346991062164307

Token 162: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.098443627357483
    2. 'arr' → logprob: -1.223443627357483
    3. 'lst' → logprob: -2.2234435081481934
    4. ' arr' → logprob: -3.2234435081481934
    5. ' a' → logprob: -3.2234435081481934
    6. 'numbers' → logprob: -3.3484435081481934
    7. ' lst' → logprob: -3.4734435081481934
    8. 'values' → logprob: -4.098443508148193
    9. ' numbers' → logprob: -4.223443508148193
    10. 'nums' → logprob: -4.348443508148193

Token 163: ' variable' (ID: 11076)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.4167020320892334
    2. 'lst' → logprob: -1.7917020320892334
    3. 'a' → logprob: -2.0417020320892334
    4. 'numbers' → logprob: -2.1667020320892334
    5. ' numbers' → logprob: -3.0417020320892334
    6. ' lst' → logprob: -3.1667020320892334
    7. 'nums' → logprob: -3.2917020320892334
    8. 'liste' → logprob: -3.6667020320892334
    9. 'array' → logprob: -3.7917020320892334
    10. ' array' → logprob: -3.7917020320892334

Token 164: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4539896249771118
    2. ' a' → logprob: -1.3289896249771118
    3. 'arr' → logprob: -3.5789895057678223
    4. 'numbers' → logprob: -3.8289895057678223
    5. ' numbers' → logprob: -4.328989505767822
    6. ' lst' → logprob: -4.453989505767822
    7. 'lst' → logprob: -4.578989505767822
    8. ' arr' → logprob: -5.328989505767822
    9. 'values' → logprob: -6.703989505767822
    10. 'nums' → logprob: -6.828989505767822

Token 165: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.032875657081604
    2. 'numbers' → logprob: -1.532875657081604
    3. 'arr' → logprob: -1.782875657081604
    4. 'lst' → logprob: -2.4078755378723145
    5. 'values' → logprob: -3.4078755378723145
    6. 'nums' → logprob: -3.9078755378723145
    7. ' a' → logprob: -4.2828755378723145
    8. 'data' → logprob: -4.2828755378723145
    9. ' numbers' → logprob: -4.4078755378723145
    10. 'scores' → logprob: -4.9078755378723145

Token 166: ''.
' (ID: 49980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21747100353240967
    2. 'a' → logprob: -2.592471122741699
    3. ''' → logprob: -2.842471122741699
    4. ')' → logprob: -3.592471122741699
    5. '=' → logprob: -4.967471122741699
    6. '_a' → logprob: -4.967471122741699
    7. ')'' → logprob: -5.092471122741699
    8. '')' → logprob: -5.217471122741699
    9. ''
' → logprob: -5.717471122741699
    10. 's' → logprob: -6.342471122741699

Token 167: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21163314580917358
    2. '   ' → logprob: -1.8366332054138184
    3. ' a' → logprob: -3.4616332054138184
    4. '  ' → logprob: -13.08663272857666
    5. ' ' → logprob: -13.21163272857666
    6. '	a' → logprob: -13.21163272857666
    7. '```' → logprob: -14.71163272857666
    8. '    
' → logprob: -15.46163272857666
    9. '    ' → logprob: -15.46163272857666
    10. '
' → logprob: -16.336633682250977

Token 168: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0003570343542378396
    2. ' a' → logprob: -8.000356674194336
    3. '   ' → logprob: -10.750356674194336
    4. '	a' → logprob: -16.625356674194336
    5. '```' → logprob: -17.250356674194336
    6. ' ' → logprob: -18.750356674194336
    7. '  ' → logprob: -18.875356674194336
    8. '
' → logprob: -19.000356674194336
    9. '    
' → logprob: -19.250356674194336
    10. '_a' → logprob: -19.875356674194336

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488555505871773
    2. '=' → logprob: -2.9298856258392334
    3. ' ' → logprob: -13.179885864257812
    4. ')' → logprob: -14.554885864257812
    5. ' =[' → logprob: -15.429885864257812
    6. ',' → logprob: -15.679885864257812
    7. ' =
' → logprob: -16.054885864257812
    8. 'a' → logprob: -16.304885864257812
    9. '   ' → logprob: -16.679885864257812
    10. '=[]' → logprob: -17.054885864257812

Token 170: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25192928314208984
    2. ' list' → logprob: -1.5019292831420898
    3. '=list' → logprob: -16.501930236816406
    4. 'List' → logprob: -16.626930236816406
    5. ' ' → logprob: -17.001930236816406
    6. '	list' → logprob: -17.251930236816406
    7. '(list' → logprob: -17.876930236816406
    8. 'li' → logprob: -18.376930236816406
    9. 'l' → logprob: -18.501930236816406
    10. '.list' → logprob: -19.126930236816406

Token 171: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -9.805981972021982e-05
    2. '(' → logprob: -9.25009822845459
    3. 'map' → logprob: -13.50009822845459
    4. '(int' → logprob: -15.50009822845459
    5. '(
' → logprob: -16.625097274780273
    6. '(m' → logprob: -16.750097274780273
    7. ' map' → logprob: -16.875097274780273
    8. ' (' → logprob: -17.250097274780273
    9. '.map' → logprob: -18.000097274780273
    10. '	map' → logprob: -18.375097274780273

Token 172: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000657154421787709
    2. '(' → logprob: -7.375657081604004
    3. 'int' → logprob: -10.750657081604004
    4. ' (' → logprob: -12.875657081604004
    5. ')' → logprob: -13.000657081604004
    6. ' int' → logprob: -13.750657081604004
    7. ',int' → logprob: -14.125657081604004
    8. '<int' → logprob: -14.250657081604004
    9. '=int' → logprob: -14.250657081604004
    10. ')(' → logprob: -15.000657081604004

Token 173: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.8577813506126404
    2. '(input' → logprob: -0.9827813506126404
    3. ',' → logprob: -1.6077814102172852
    4. '(' → logprob: -6.982781410217285
    5. 'input' → logprob: -8.232781410217285
    6. ' ,' → logprob: -10.232781410217285
    7. ' (' → logprob: -10.482781410217285
    8. ',(' → logprob: -11.607781410217285
    9. ' input' → logprob: -11.857781410217285
    10. '(),' → logprob: -11.857781410217285

Token 174: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02976333536207676
    2. ' input' → logprob: -3.5297632217407227
    3. '(input' → logprob: -11.404763221740723
    4. ' ' → logprob: -14.404763221740723
    5. '   ' → logprob: -15.279763221740723
    6. ',input' → logprob: -15.279763221740723
    7. '	input' → logprob: -15.529763221740723
    8. '<input' → logprob: -16.15476417541504
    9. '=input' → logprob: -16.15476417541504
    10. '[input' → logprob: -16.27976417541504

Token 175: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.1557283111615106e-05
    2. '()' → logprob: -10.125041961669922
    3. '()))' → logprob: -14.125041961669922
    4. ' ().' → logprob: -14.750041961669922
    5. '()
' → logprob: -16.125041961669922
    6. '))' → logprob: -16.750041961669922
    7. '(' → logprob: -17.250041961669922
    8. ')' → logprob: -17.250041961669922
    9. '())' → logprob: -17.500041961669922
    10. '()));' → logprob: -17.625041961669922

Token 176: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.610702363715973e-06
    2. 'strip' → logprob: -11.750009536743164
    3. 'rstrip' → logprob: -13.500009536743164
    4. ' split' → logprob: -15.250009536743164
    5. '(split' → logprob: -17.000009536743164
    6. 'spl' → logprob: -18.125009536743164
    7. '.split' → logprob: -20.375009536743164
    8. 's' → logprob: -21.250009536743164
    9. ')' → logprob: -22.375009536743164
    10. 'plit' → logprob: -22.500009536743164

Token 177: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05137436091899872
    2. '()' → logprob: -3.0513744354248047
    3. '())))' → logprob: -6.551374435424805
    4. '())' → logprob: -7.301374435424805
    5. '))' → logprob: -7.426374435424805
    6. '()))
' → logprob: -10.426374435424805
    7. '()));' → logprob: -11.176374435424805
    8. ')))' → logprob: -11.176374435424805
    9. '(' → logprob: -11.301374435424805
    10. '())).' → logprob: -12.426374435424805

Token 178: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3399060070514679
    2. '    
' → logprob: -1.7149059772491455
    3. '
' → logprob: -2.3399059772491455
    4. '<|end|>' → logprob: -4.714906215667725
    5. 'n' → logprob: -6.714906215667725
    6. '    
    
' → logprob: -7.964906215667725
    7. 'for' → logprob: -8.214905738830566
    8. 'a' → logprob: -8.714905738830566
    9. '  
' → logprob: -9.214905738830566
    10. '    ' → logprob: -9.339905738830566

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4240403175354004
    2. '#' → logprob: -2.4240403175354004
    3. 's' → logprob: -3.0490403175354004
    4. 'max' → logprob: -3.1740403175354004
    5. 'total' → logprob: -3.2990403175354004
    6. 'count' → logprob: -3.2990403175354004
    7. 'sum' → logprob: -3.5490403175354004
    8. 'for' → logprob: -3.7990403175354004
    9. 'result' → logprob: -3.9240403175354004
    10. 'if' → logprob: -5.0490403175354

Token 180: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9160056710243225
    2. '#' (adapté à ' #') → logprob: -2.5410056114196777
    3. 'total' → logprob: -2.5410056114196777
    4. 's' → logprob: -2.5410056114196777
    5. 'result' → logprob: -2.5410056114196777
    6. 'for' → logprob: -2.6660056114196777
    7. 'sum' → logprob: -3.0410056114196777
    8. 'max' → logprob: -3.2910056114196777
    9. 'a' → logprob: -3.4160056114196777
    10. 'm' → logprob: -4.041005611419678

Token 181: ' F' (ID: 454)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6056230068206787
    2. 'count' → logprob: -1.8556230068206787
    3. 'total' → logprob: -1.9806230068206787
    4. 'max' → logprob: -2.2306230068206787
    5. 's' → logprob: -2.4806230068206787
    6. 'for' → logprob: -2.7306230068206787
    7. 'result' → logprob: -2.7306230068206787
    8. 'sum' → logprob: -3.1056230068206787
    9. 'a' → logprob: -3.4806230068206787
    10. 'sorted' → logprob: -3.8556230068206787

Token 182: 'ait' (ID: 1271)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0036373690236359835
    2. '#' → logprob: -6.378637313842773
    3. ' or' → logprob: -7.378637313842773
    4. '   ' → logprob: -7.878637313842773
    5. 'for' → logprob: -7.878637313842773
    6. 'rom' → logprob: -8.378637313842773
    7. 'requency' → logprob: -10.003637313842773
    8. ' for' → logprob: -10.378637313842773
    9. 'requencies' → logprob: -10.378637313842773
    10. 'r' → logprob: -10.753637313842773

Token 183: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5609043836593628
    2. ' un' → logprob: -1.5609043836593628
    3. ' ' → logprob: -2.3109045028686523
    4. ' une' → logprob: -2.3109045028686523
    5. 'for' → logprob: -2.5609045028686523
    6. ' la' → logprob: -2.6859045028686523
    7. ' for' → logprob: -3.3109045028686523
    8. '(' → logprob: -3.3109045028686523
    9. '()' → logprob: -3.4359045028686523
    10. '   ' → logprob: -4.060904502868652

Token 184: ' même' (ID: 9679)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3876925706863403
    2. 'for' → logprob: -1.8876925706863403
    3. ' la' → logprob: -2.137692451477051
    4. '_' → logprob: -2.137692451477051
    5. 's' → logprob: -2.512692451477051
    6. ' a' → logprob: -2.512692451477051
    7. ' ' → logprob: -2.637692451477051
    8. ' for' → logprob: -3.012692451477051
    9. ' l' → logprob: -3.762692451477051
    10. '#' → logprob: -4.262692451477051

Token 185: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7853944301605225
    2. 'for' → logprob: -1.6603944301605225
    3. ' for' → logprob: -2.0353944301605225
    4. 'a' → logprob: -2.7853944301605225
    5. 'b' → logprob: -3.1603944301605225
    6. '#' → logprob: -3.2853944301605225
    7. ' b' → logprob: -3.4103944301605225
    8. ' avec' → logprob: -4.910394668579102
    9. '(' → logprob: -5.035394668579102
    10. ' a' → logprob: -5.160394668579102

Token 186: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1767619103193283
    2. 'a' → logprob: -3.0517618656158447
    3. ' la' → logprob: -3.1767618656158447
    4. 'la' → logprob: -3.4267618656158447
    5. ' b' → logprob: -3.6767618656158447
    6. 'list' → logprob: -4.801762104034424
    7. '   ' → logprob: -6.176762104034424
    8. ' a' → logprob: -6.551762104034424
    9. ' list' → logprob: -6.801762104034424
    10. 'l' → logprob: -7.426762104034424

Token 187: ' troisième' (ID: 75373)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2784707546234131
    2. ' deuxième' → logprob: -2.028470754623413
    3. ' troisième' → logprob: -3.028470754623413
    4. 'a' → logprob: -4.403470993041992
    5. 'de' → logprob: -4.528470993041992
    6. ' variable' → logprob: -4.778470993041992
    7. ' b' → logprob: -5.028470993041992
    8. 's' → logprob: -5.528470993041992
    9. 'variable' → logprob: -5.653470993041992
    10. ' seconde' → logprob: -5.653470993041992

Token 188: ' ligne' (ID: 19583)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22306478023529053
    2. 'line' → logprob: -2.84806489944458
    3. 'ligne' → logprob: -2.84806489944458
    4. ' a' → logprob: -3.34806489944458
    5. ' ligne' → logprob: -3.59806489944458
    6. '   ' → logprob: -4.59806489944458
    7. ' line' → logprob: -4.72306489944458
    8. ' ' → logprob: -7.47306489944458
    9. '#' → logprob: -7.72306489944458
    10. 'l' → logprob: -8.348064422607422

Token 189: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42214465141296387
    2. '   ' → logprob: -1.2971446514129639
    3. ' a' → logprob: -2.797144651412964
    4. ',' → logprob: -5.422144889831543
    5. 'b' → logprob: -5.547144889831543
    6. ':' → logprob: -7.297144889831543
    7. ' ' → logprob: -7.922144889831543
    8. ' de' → logprob: -8.922144889831543
    9. '  ' → logprob: -9.047144889831543
    10. ' b' → logprob: -9.172144889831543

Token 190: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3759101629257202
    2. ' input' → logprob: -1.5009101629257202
    3. 'a' → logprob: -3.2509102821350098
    4. 'l' → logprob: -3.5009102821350098
    5. 'entrée' → logprob: -4.00091028213501
    6. ' l' → logprob: -6.62591028213501
    7. 'la' → logprob: -7.87591028213501
    8. ' a' → logprob: -8.000909805297852
    9. '(input' → logprob: -8.000909805297852
    10. ' entrée' → logprob: -8.375909805297852

Token 191: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.11432068049907684
    2. 'input' → logprob: -2.614320755004883
    3. ''entrée' → logprob: -3.364320755004883
    4. '#' → logprob: -10.239320755004883
    5. 'a' → logprob: -10.364320755004883
    6. 'entry' → logprob: -10.489320755004883
    7. ' entrée' → logprob: -10.614320755004883
    8. 'import' → logprob: -10.739320755004883
    9. '’entrée' → logprob: -10.864320755004883
    10. 'entrada' → logprob: -11.114320755004883

Token 192: ' pour' (ID: 1930)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7071434855461121
    2. ',' → logprob: -0.8321434855461121
    3. ' a' → logprob: -2.707143545150757
    4. '   ' → logprob: -6.082143306732178
    5. ' ,' → logprob: -6.457143306732178
    6. 'b' → logprob: -7.332143306732178
    7. ' ' → logprob: -8.582143783569336
    8. 's' → logprob: -9.332143783569336
    9. ',a' → logprob: -9.332143783569336
    10. ' b' → logprob: -9.832143783569336

Token 193: ' obtenir' (ID: 54423)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9016700387001038
    2. ' b' → logprob: -1.151669979095459
    3. ' obtenir' → logprob: -1.651669979095459
    4. ' la' → logprob: -2.901669979095459
    5. 'a' → logprob: -4.151669979095459
    6. ' a' → logprob: -5.151669979095459
    7. 'la' → logprob: -5.401669979095459
    8. ' une' → logprob: -6.651669979095459
    9. ' récupérer' → logprob: -7.151669979095459
    10. ' stock' → logprob: -7.276669979095459

Token 194: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04828605800867081
    2. ' b' → logprob: -3.548285961151123
    3. '   ' → logprob: -4.423285961151123
    4. 'a' → logprob: -5.298285961151123
    5. ' a' → logprob: -7.173285961151123
    6. ' la' → logprob: -8.673286437988281
    7. 'list' → logprob: -8.798286437988281
    8. 's' → logprob: -9.548286437988281
    9. 'l' → logprob: -9.923286437988281
    10. ' list' → logprob: -10.298286437988281

Token 195: ' liste' (ID: 31719)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05427251383662224
    2. ' b' → logprob: -3.179272413253784
    3. 'liste' → logprob: -5.304272651672363
    4. 'list' → logprob: -5.929272651672363
    5. ' liste' → logprob: -6.179272651672363
    6. ' list' → logprob: -7.804272651672363
    7. 'variable' → logprob: -8.054272651672363
    8. ' variable' → logprob: -8.179272651672363
    9. 's' → logprob: -8.804272651672363
    10. '   ' → logprob: -9.554272651672363

Token 196: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2123604416847229
    2. '   ' → logprob: -1.7123603820800781
    3. ' b' → logprob: -4.962360382080078
    4. 's' → logprob: -7.087360382080078
    5. '(b' → logprob: -7.087360382080078
    6. 't' → logprob: -7.462360382080078
    7. ' de' → logprob: -7.962360382080078
    8. 'de' → logprob: -8.462360382080078
    9. ' ' → logprob: -9.087360382080078
    10. '	b' → logprob: -9.087360382080078

Token 197: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01614217273890972
    2. ' b' → logprob: -4.14114236831665
    3. 'a' → logprob: -10.703641891479492
    4. 's' → logprob: -10.891141891479492
    5. '   ' → logprob: -12.016141891479492
    6. 'p' → logprob: -12.078641891479492
    7. 't' → logprob: -12.203641891479492
    8. ' ' → logprob: -12.328641891479492
    9. 'c' → logprob: -12.391141891479492
    10. 'd' → logprob: -12.641141891479492

Token 198: ''.
' (ID: 49980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5611522197723389
    2. ')' → logprob: -1.0611522197723389
    3. '')' → logprob: -3.436152219772339
    4. 'a' → logprob: -3.561152219772339
    5. '()' → logprob: -4.311152458190918
    6. ')
' → logprob: -5.811152458190918
    7. 'b' → logprob: -6.061152458190918
    8. '')
' → logprob: -7.186152458190918
    9. ' =' → logprob: -7.311152458190918
    10. ')')
' → logprob: -7.561152458190918

Token 199: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5355860590934753
    2. '   ' → logprob: -0.9105860590934753
    3. ' b' → logprob: -4.410585880279541
    4. '
' → logprob: -8.9105863571167
    5. '    
' → logprob: -10.1605863571167
    6. '	b' → logprob: -10.9105863571167
    7. '```' → logprob: -10.9105863571167
    8. ' ' → logprob: -11.4105863571167
    9. '  ' → logprob: -12.2855863571167
    10. 'a' → logprob: -12.6605863571167

Token 200: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.013213764876127243
    2. ' b' → logprob: -4.388213634490967
    3. '   ' → logprob: -7.263213634490967
    4. 'a' → logprob: -13.638214111328125
    5. '
' → logprob: -14.763214111328125
    6. '	b' → logprob: -15.013214111328125
    7. ' ' → logprob: -15.138214111328125
    8. '    
' → logprob: -15.138214111328125
    9. '```' → logprob: -15.638214111328125
    10. ' a' → logprob: -15.638214111328125

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407716512680054
    2. ' =' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.099077224731445
    4. '=list' → logprob: -16.474077224731445
    5. 'a' → logprob: -17.849077224731445
    6. '=[]' → logprob: -18.349077224731445
    7. '=
' → logprob: -18.474077224731445
    8. ')' → logprob: -18.474077224731445
    9. '=

' → logprob: -18.474077224731445
    10. '   ' → logprob: -18.599077224731445

Token 202: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4740772247314453
    2. ' list' → logprob: -0.9740772247314453
    3. 'List' → logprob: -15.974077224731445
    4. '(list' → logprob: -16.849077224731445
    5. '=list' → logprob: -17.474077224731445
    6. '	list' → logprob: -18.224077224731445
    7. 'a' → logprob: -19.099077224731445
    8. 'l' → logprob: -19.224077224731445
    9. 'ist' → logprob: -19.224077224731445
    10. ' ' → logprob: -19.724077224731445

Token 203: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.750004768371582
    3. ' (' → logprob: -13.125004768371582
    4. 'map' → logprob: -16.2500057220459
    5. '(list' → logprob: -16.3750057220459
    6. ',map' → logprob: -17.8750057220459
    7. '(m' → logprob: -18.6250057220459
    8. '(mapping' → logprob: -18.7500057220459
    9. '(Map' → logprob: -19.7500057220459
    10. '.map' → logprob: -20.0000057220459

Token 204: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.229872087715194e-05
    2. 'int' → logprob: -10.500061988830566
    3. '<int' → logprob: -10.625061988830566
    4. '(' → logprob: -12.125061988830566
    5. '[int' → logprob: -13.250061988830566
    6. '=int' → logprob: -13.375061988830566
    7. ',int' → logprob: -13.875061988830566
    8. ' (' → logprob: -14.875061988830566
    9. ']int' → logprob: -15.500061988830566
    10. ' int' → logprob: -15.625061988830566

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025387205183506012
    2. ',input' → logprob: -4.275387287139893
    3. '(input' → logprob: -4.525387287139893
    4. '(' → logprob: -8.400386810302734
    5. ' ,' → logprob: -9.400386810302734
    6. 'input' → logprob: -11.400386810302734
    7. '(),' → logprob: -12.525386810302734
    8. ',int' → logprob: -12.900386810302734
    9. ' (' → logprob: -13.025386810302734
    10. ' input' → logprob: -14.275386810302734

Token 206: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10047590732574463
    2. ' input' → logprob: -2.350475788116455
    3. '(input' → logprob: -8.225476264953613
    4. '=input' → logprob: -15.100476264953613
    5. '[input' → logprob: -15.225476264953613
    6. ',input' → logprob: -15.225476264953613
    7. '<input' → logprob: -15.850476264953613
    8. ' ' → logprob: -15.850476264953613
    9. '	input' → logprob: -16.475475311279297
    10. 'a' → logprob: -16.475475311279297

Token 207: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.125
    3. ' ().' → logprob: -16.5
    4. '()' → logprob: -17.75
    5. ' .' → logprob: -18.625
    6. ').' → logprob: -20.125
    7. '.split' → logprob: -21.25
    8. '].' → logprob: -22.625
    9. '()).' → logprob: -22.625
    10. '.py' → logprob: -23.125

Token 208: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.318681188422488e-05
    2. '().' → logprob: -11.87501335144043
    3. ' split' → logprob: -12.50001335144043
    4. ').' → logprob: -13.75001335144043
    5. '.split' → logprob: -14.25001335144043
    6. ')' → logprob: -14.75001335144043
    7. '(split' → logprob: -16.12501335144043
    8. 'rstrip' → logprob: -16.12501335144043
    9. '()' → logprob: -17.00001335144043
    10. 'spl' → logprob: -17.12501335144043

Token 209: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0033340873196721077
    2. '()' → logprob: -5.878334045410156
    3. '))' → logprob: -7.753334045410156
    4. '()))
' → logprob: -9.878334045410156
    5. '())' → logprob: -10.378334045410156
    6. '()));' → logprob: -11.878334045410156
    7. '(' → logprob: -12.128334045410156
    8. '())).' → logprob: -13.253334045410156
    9. '()))

' → logprob: -13.378334045410156
    10. '())))' → logprob: -14.628334045410156

Token 210: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4560941755771637
    2. '    
' → logprob: -1.3310941457748413
    3. '
' → logprob: -2.331094264984131
    4. '<|end|>' → logprob: -5.706094264984131
    5. '    
    
' → logprob: -7.956094264984131
    6. 'n' → logprob: -8.331093788146973
    7. 'for' → logprob: -8.331093788146973
    8. '  
' → logprob: -9.206093788146973
    9. '#' → logprob: -9.331093788146973
    10. '   
' → logprob: -9.581093788146973

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03191444277763367
    2. '#' → logprob: -3.906914472579956
    3. 'result' → logprob: -5.281914234161377
    4. 'c' → logprob: -6.281914234161377
    5. '    
' → logprob: -6.656914234161377
    6. 'sum' → logprob: -6.781914234161377
    7. 'total' → logprob: -7.781914234161377
    8. 's' → logprob: -7.781914234161377
    9. 'for' → logprob: -8.281914710998535
    10. 'a' → logprob: -8.406914710998535

Token 212: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8115577101707458
    2. 'a' → logprob: -1.4365577697753906
    3. 'result' → logprob: -2.3115577697753906
    4. 'c' → logprob: -2.6865577697753906
    5. 'diff' → logprob: -3.1865577697753906
    6. 'for' → logprob: -3.6865577697753906
    7. 's' → logprob: -4.311557769775391
    8. 'res' → logprob: -4.311557769775391
    9. 'sum' → logprob: -4.686557769775391
    10. 'max' → logprob: -4.686557769775391

Token 213: ' Initialise' (ID: 179601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35874348878860474
    2. 'result' → logprob: -1.98374342918396
    3. 'a' → logprob: -3.35874342918396
    4. 'for' → logprob: -3.60874342918396
    5. 'c' → logprob: -3.73374342918396
    6. 'total' → logprob: -4.108743667602539
    7. 'diff' → logprob: -4.358743667602539
    8. 'res' → logprob: -4.483743667602539
    9. 's' → logprob: -4.608743667602539
    10. 'max' → logprob: -5.358743667602539

Token 214: ' une' (ID: 2463)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8804624080657959
    2. 'result' → logprob: -1.630462408065796
    3. 'total' → logprob: -2.255462408065796
    4. 'count' → logprob: -2.880462408065796
    5. 'sum' → logprob: -3.130462408065796
    6. 'max' → logprob: -3.505462408065796
    7. 'res' → logprob: -3.630462408065796
    8. ' result' → logprob: -4.005462646484375
    9. 'ans' → logprob: -4.505462646484375
    10. 'answer' → logprob: -4.505462646484375

Token 215: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5355610847473145
    2. 'res' → logprob: -2.4105610847473145
    3. 's' → logprob: -2.9105610847473145
    4. 'sum' → logprob: -3.4105610847473145
    5. 'max' → logprob: -3.5355610847473145
    6. 'total' → logprob: -3.5355610847473145
    7. 'count' → logprob: -3.6605610847473145
    8. 'answer' → logprob: -3.7855610847473145
    9. 'ans' → logprob: -3.9105610847473145
    10. 'diff' → logprob: -3.9105610847473145

Token 216: ' entière' (ID: 61583)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.716533362865448
    2. ' result' → logprob: -1.5915334224700928
    3. 'c' → logprob: -2.2165334224700928
    4. 'total' → logprob: -3.3415334224700928
    5. 'sum' → logprob: -3.7165334224700928
    6. 'res' → logprob: -3.8415334224700928
    7. 'answer' → logprob: -3.8415334224700928
    8. 'max' → logprob: -4.216533184051514
    9. ' total' → logprob: -4.466533184051514
    10. 'diff' → logprob: -4.716533184051514

Token 217: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.5818699598312378
    2. ' result' → logprob: -1.9568699598312378
    3. 'c' → logprob: -2.5818700790405273
    4. ' ans' → logprob: -2.7068700790405273
    5. 's' → logprob: -2.8318700790405273
    6. ' total' → logprob: -3.0818700790405273
    7. 'total' → logprob: -3.0818700790405273
    8. 'sum' → logprob: -3.0818700790405273
    9. 'count' → logprob: -3.2068700790405273
    10. 'ans' → logprob: -3.4568700790405273

Token 218: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.7168079614639282
    2. 'count' → logprob: -1.7168079614639282
    3. 'res' → logprob: -2.0918078422546387
    4. 's' → logprob: -2.4668078422546387
    5. 'total' → logprob: -2.4668078422546387
    6. 'ans' → logprob: -2.5918078422546387
    7. 'c' → logprob: -2.7168078422546387
    8. 'diff' → logprob: -2.7168078422546387
    9. 'max' → logprob: -3.2168078422546387
    10. 'score' → logprob: -3.4668078422546387

Token 219: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08496267348527908
    2. '=' → logprob: -2.7099626064300537
    3. ''' → logprob: -4.209962844848633
    4. ')' → logprob: -10.334962844848633
    5. '   ' → logprob: -12.084962844848633
    6. 'a' → logprob: -12.209962844848633
    7. '='' → logprob: -12.209962844848633
    8. ''=' → logprob: -12.584962844848633
    9. ' ' → logprob: -12.709962844848633
    10. ' ='' → logprob: -13.209962844848633

Token 220: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931583285331726
    2. ' =' → logprob: -0.6931583285331726
    3. '   ' → logprob: -12.318158149719238
    4. 'ans' → logprob: -12.693158149719238
    5. ' ans' → logprob: -13.068158149719238
    6. '0' → logprob: -14.568158149719238
    7. ',' → logprob: -15.193158149719238
    8. '=int' → logprob: -15.568158149719238
    9. ' ' → logprob: -15.943158149719238
    10. '(ans' → logprob: -16.068159103393555

Token 221: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023612596560269594
    2. ' ' → logprob: -6.127361297607422
    3. 'float' → logprob: -9.752361297607422
    4. 'n' → logprob: -10.377361297607422
    5. '-' → logprob: -10.752361297607422
    6. '100' → logprob: -11.627361297607422
    7. ' n' → logprob: -11.877361297607422
    8. '1' → logprob: -12.002361297607422
    9. 'int' → logprob: -12.127361297607422
    10. ' float' → logprob: -12.127361297607422

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012157135643064976
    2. 'float' → logprob: -6.876215934753418
    3. 'int' → logprob: -10.126215934753418
    4. 'abs' → logprob: -10.251215934753418
    5. '10' → logprob: -10.501215934753418
    6. '100' → logprob: -10.876215934753418
    7. '-' → logprob: -10.876215934753418
    8. '1' → logprob: -11.251215934753418
    9. ' ' → logprob: -11.751215934753418
    10. 'n' → logprob: -12.126215934753418

Token 223: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12952113151550293
    2. 'ans' → logprob: -2.129521131515503
    3. ' ans' → logprob: -6.254521369934082
    4. '	ans' → logprob: -7.379521369934082
    5. '(ans' → logprob: -10.254521369934082
    6. '    
' → logprob: -12.754521369934082
    7. '  ' → logprob: -13.004521369934082
    8. '
' → logprob: -13.754521369934082
    9. ' ' → logprob: -13.879521369934082
    10. '_ans' → logprob: -14.129521369934082

Token 224: ' qui' (ID: 2780)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.31739115715026855
    2. ' ans' → logprob: -1.3173911571502686
    3. '   ' → logprob: -5.567391395568848
    4. '	ans' → logprob: -8.317391395568848
    5. '(ans' → logprob: -10.567391395568848
    6. '
' → logprob: -10.942391395568848
    7. '_ans' → logprob: -12.567391395568848
    8. 'answer' → logprob: -12.567391395568848
    9. '    
' → logprob: -13.442391395568848
    10. ' ' → logprob: -13.692391395568848

Token 225: ' va' (ID: 3423)
  Prédit: 'represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'represent' → logprob: -1.2213242053985596
    2. ' serv' → logprob: -1.9713242053985596
    3. ' =' → logprob: -2.5963242053985596
    4. ' stock' → logprob: -2.8463242053985596
    5. ' cont' → logprob: -3.0963242053985596
    6. 'cont' → logprob: -3.0963242053985596
    7. 'repr' → logprob: -3.3463242053985596
    8. ' va' → logprob: -3.3463242053985596
    9. 'rep' → logprob: -3.4713242053985596
    10. '=' → logprob: -3.5963242053985596

Token 226: ' accum' (ID: 23148)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.4683445692062378
    2. ' stock' → logprob: -1.8433445692062378
    3. 'stock' → logprob: -1.8433445692062378
    4. ' compter' → logprob: -2.0933446884155273
    5. ' servir' → logprob: -2.3433446884155273
    6. 'serv' → logprob: -2.7183446884155273
    7. ' accum' → logprob: -2.7183446884155273
    8. '=' → logprob: -4.218344688415527
    9. ' conten' → logprob: -4.718344688415527
    10. 'represent' → logprob: -4.843344688415527

Token 227: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.006622293032705784
    2. 'érer' → logprob: -5.131622314453125
    3. 'uer' → logprob: -8.006622314453125
    4. 'er' → logprob: -8.631622314453125
    5. 'erer' → logprob: -9.131622314453125
    6. 'urer' → logprob: -9.881622314453125
    7. 'u' → logprob: -11.006622314453125
    8. '=' → logprob: -13.256622314453125
    9. 'ular' → logprob: -14.506622314453125
    10. '   ' → logprob: -14.506622314453125

Token 228: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.26283085346221924
    2. 'le' → logprob: -3.0128307342529297
    3. 'la' → logprob: -3.2628307342529297
    4. ' the' → logprob: -3.3878307342529297
    5. '0' → logprob: -3.6378307342529297
    6. ' le' → logprob: -3.8878307342529297
    7. 'the' → logprob: -4.26283073425293
    8. 'l' → logprob: -4.51283073425293
    9. ' l' → logprob: -4.76283073425293
    10. 'ans' → logprob: -5.01283073425293

Token 229: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.4468410015106201
    2. 'total' → logprob: -1.6968410015106201
    3. 's' → logprob: -1.9468410015106201
    4. 'maximum' → logprob: -2.19684100151062
    5. 'nombre' → logprob: -2.32184100151062
    6. 'score' → logprob: -2.69684100151062
    7. 'max' → logprob: -3.07184100151062
    8. 'rés' → logprob: -3.57184100151062
    9. 'sum' → logprob: -3.94684100151062
    10. ' total' → logprob: -4.446841239929199

Token 230: ' désir' (ID: 92342)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1260593831539154
    2. '   ' → logprob: -2.2510592937469482
    3. ' ans' → logprob: -5.376059532165527
    4. '=' → logprob: -5.501059532165527
    5. '(ans' → logprob: -5.876059532165527
    6. ' =' → logprob: -6.876059532165527
    7. '	ans' → logprob: -8.251059532165527
    8. 'for' → logprob: -9.001059532165527
    9. '_ans' → logprob: -10.626059532165527
    10. 'answer' → logprob: -10.751059532165527

Token 231: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.02070596069097519
    2. '=' → logprob: -4.2707061767578125
    3. 'e' → logprob: -6.7707061767578125
    4. 'ué' → logprob: -6.8957061767578125
    5. ' =' → logprob: -7.2707061767578125
    6. 'u' → logprob: -7.3957061767578125
    7. '   ' → logprob: -7.5207061767578125
    8. 'até' → logprob: -7.7707061767578125
    9. 'er' → logprob: -8.145706176757812
    10. 'ulé' → logprob: -8.520706176757812

Token 232: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4008624255657196
    2. '   ' → logprob: -1.150862455368042
    3. ' ans' → logprob: -4.400862216949463
    4. '	ans' → logprob: -7.025862216949463
    5. '(ans' → logprob: -8.025862693786621
    6. '
' → logprob: -8.400862693786621
    7. '    
' → logprob: -9.525862693786621
    8. '=' → logprob: -10.275862693786621
    9. ' =' → logprob: -10.400862693786621
    10. ' ' → logprob: -11.150862693786621

Token 233: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12751875817775726
    2. '   ' → logprob: -2.127518653869629
    3. ' ans' → logprob: -7.502518653869629
    4. '	ans' → logprob: -10.377518653869629
    5. '(ans' → logprob: -12.752518653869629
    6. '
' → logprob: -13.377518653869629
    7. 'answer' → logprob: -13.377518653869629
    8. '    
' → logprob: -14.252518653869629
    9. '_ans' → logprob: -15.127518653869629
    10. ' ' → logprob: -15.377518653869629

Token 234: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -7.028536492725834e-05
    2. ' ans' → logprob: -9.625070571899414
    3. '   ' → logprob: -12.750070571899414
    4. '	ans' → logprob: -14.000070571899414
    5. 'answer' → logprob: -14.875070571899414
    6. '(ans' → logprob: -16.500070571899414
    7. '_ans' → logprob: -17.875070571899414
    8. '
' → logprob: -18.000070571899414
    9. ' ' → logprob: -18.750070571899414
    10. 'acc' → logprob: -19.500070571899414

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741579592227936
    2. '=' → logprob: -0.9741579294204712
    3. ' +=' → logprob: -9.72415828704834
    4. '+=' → logprob: -11.22415828704834
    5. ' ' → logprob: -11.97415828704834
    6. ')' → logprob: -14.09915828704834
    7. ',' → logprob: -15.34915828704834
    8. '.=' → logprob: -16.599157333374023
    9. '.' → logprob: -16.724157333374023
    10. ' =
' → logprob: -16.849157333374023

Token 236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11299778521060944
    2. ' ' → logprob: -2.2379977703094482
    3. 'abs' → logprob: -9.987998008728027
    4. 'sum' → logprob: -10.237998008728027
    5. ' sum' → logprob: -10.487998008728027
    6. ' abs' → logprob: -11.237998008728027
    7. 'n' → logprob: -11.925498008728027
    8. 'max' → logprob: -12.050498008728027
    9. 'a' → logprob: -12.050498008728027
    10. ' max' → logprob: -12.300498008728027

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002506111632101238
    2. ' ' → logprob: -9.125250816345215
    3. 'abs' → logprob: -10.125250816345215
    4. 'sum' → logprob: -10.375250816345215
    5. 'max' → logprob: -11.125250816345215
    6. 'a' → logprob: -11.125250816345215
    7. '100' → logprob: -11.250250816345215
    8. 'n' → logprob: -11.375250816345215
    9. '1' → logprob: -12.500250816345215
    10. 'int' → logprob: -13.125250816345215

Token 238: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3569439649581909
    2. 'for' → logprob: -1.606943964958191
    3. ' for' → logprob: -2.3569440841674805
    4. '
' → logprob: -5.7319440841674805
    5. '    
' → logprob: -6.8569440841674805
    6. '	for' → logprob: -7.6069440841674805
    7. '  ' → logprob: -9.85694408416748
    8. '    ' → logprob: -9.98194408416748
    9. ' ' → logprob: -10.23194408416748
    10. '  
' → logprob: -11.60694408416748

Token 239: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07039608061313629
    2. '   ' → logprob: -2.6953961849212646
    3. ' for' → logprob: -7.6953959465026855
    4. '#' → logprob: -13.070396423339844
    5. 'i' → logprob: -13.945396423339844
    6. '	for' → logprob: -14.570396423339844
    7. '    
' → logprob: -14.945396423339844
    8. '  ' → logprob: -15.195396423339844
    9. '```' → logprob: -15.195396423339844
    10. 'while' → logprob: -15.570396423339844

Token 240: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.204720582696609e-05
    2. '   ' → logprob: -10.375052452087402
    3. ' for' → logprob: -11.125052452087402
    4. 'i' → logprob: -12.250052452087402
    5. '#' (adapté à ' #') → logprob: -14.125052452087402
    6. 'a' → logprob: -16.250051498413086
    7. 'n' → logprob: -16.500051498413086
    8. 'while' → logprob: -16.750051498413086
    9. '	for' → logprob: -17.250051498413086
    10. 'fo' → logprob: -17.750051498413086

Token 241: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002715873415581882
    2. ' for' → logprob: -8.250271797180176
    3. '   ' → logprob: -12.000271797180176
    4. '#' → logprob: -13.875271797180176
    5. 'fo' → logprob: -14.125271797180176
    6. 'i' → logprob: -14.125271797180176
    7. 'n' → logprob: -14.875271797180176
    8. 'a' → logprob: -15.000271797180176
    9. 'from' → logprob: -16.00027084350586
    10. 'while' → logprob: -16.25027084350586

Token 242: 'cle' (ID: 3170)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.22838035225868225
    2. '   ' → logprob: -2.2283804416656494
    3. 'for' → logprob: -2.6033804416656494
    4. ' for' → logprob: -3.8533804416656494
    5. 'cle' → logprob: -8.35338020324707
    6. '  ' → logprob: -8.72838020324707
    7. 'n' → logprob: -8.97838020324707
    8. 'ur' → logprob: -9.35338020324707
    9. ' r' → logprob: -9.35338020324707
    10. '    ' → logprob: -9.35338020324707

Token 243: ' '' (ID: 461)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01581932045519352
    2. 'for' → logprob: -4.265819549560547
    3. '   ' → logprob: -6.765819549560547
    4. ' i' → logprob: -8.140819549560547
    5. ' ' → logprob: -9.640819549560547
    6. ' ' → logprob: -10.390819549560547
    7. ':' → logprob: -10.515819549560547
    8. '	for' → logprob: -11.265819549560547
    9. '_' → logprob: -11.515819549560547
    10. ' a' → logprob: -11.515819549560547

Token 244: 'for' (ID: 1938)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15605098009109497
    2. ' i' → logprob: -2.15605092048645
    3. 'for' → logprob: -4.656051158905029
    4. '_' → logprob: -5.156051158905029
    5. 'range' → logprob: -5.281051158905029
    6. ' range' → logprob: -5.531051158905029
    7. ' for' → logprob: -5.656051158905029
    8. 'n' → logprob: -8.031050682067871
    9. '_i' → logprob: -8.656050682067871
    10. ' _' → logprob: -8.656050682067871

Token 245: ''' (ID: 6)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012930906377732754
    2. 'i' → logprob: -4.387930870056152
    3. ' _' → logprob: -8.262930870056152
    4. ' ' → logprob: -10.012930870056152
    5. ''' → logprob: -10.512930870056152
    6. '_' → logprob: -10.762930870056152
    7. ' ' → logprob: -11.512930870056152
    8. '```' → logprob: -11.637930870056152
    9. '   ' → logprob: -12.200430870056152
    10. '_i' → logprob: -12.387930870056152

Token 246: ' qui' (ID: 2780)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007127242628484964
    2. 'i' → logprob: -5.382127285003662
    3. ' _' → logprob: -6.257127285003662
    4. ' for' → logprob: -8.132126808166504
    5. '_' → logprob: -8.507126808166504
    6. ' ' → logprob: -10.007126808166504
    7. 'for' → logprob: -11.382126808166504
    8. ' ' → logprob: -11.382126808166504
    9. ' in' → logprob: -11.757126808166504
    10. '   ' → logprob: -12.132126808166504

Token 247: ' it' (ID: 480)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018735216930508614
    2. 'i' → logprob: -4.018735408782959
    3. ' _' → logprob: -8.3937349319458
    4. ' range' → logprob: -8.3937349319458
    5. ' for' → logprob: -9.8937349319458
    6. '_' → logprob: -10.2687349319458
    7. 'for' → logprob: -11.1437349319458
    8. '_i' → logprob: -11.3937349319458
    9. 'range' → logprob: -12.0187349319458
    10. '	i' → logprob: -12.7687349319458

Token 248: 'ère' (ID: 4346)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1472124606370926
    2. 'range' → logprob: -2.647212505340576
    3. ' i' → logprob: -3.147212505340576
    4. ' in' → logprob: -4.772212505340576
    5. ' for' → logprob: -5.022212505340576
    6. 'er' → logprob: -6.522212505340576
    7. 'or' → logprob: -6.772212505340576
    8. 'o' → logprob: -7.397212505340576
    9. '_range' → logprob: -7.397212505340576
    10. '	range' → logprob: -7.647212505340576

Token 249: ' sur' (ID: 1512)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004437597002834082
    2. 'i' → logprob: -5.504437446594238
    3. ' ' → logprob: -9.004437446594238
    4. ' _' → logprob: -9.254437446594238
    5. '_' → logprob: -9.754437446594238
    6. ' over' → logprob: -10.379437446594238
    7. ' ' → logprob: -11.504437446594238
    8. '(i' → logprob: -12.004437446594238
    9. '   ' → logprob: -12.129437446594238
    10. '	i' → logprob: -12.129437446594238

Token 250: ' les' (ID: 1341)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03438416123390198
    2. 'range' → logprob: -3.409384250640869
    3. ' i' → logprob: -7.784384250640869
    4. 'i' → logprob: -9.159383773803711
    5. ' a' → logprob: -9.659383773803711
    6. 'a' → logprob: -9.659383773803711
    7. '(range' → logprob: -10.409383773803711
    8. 'n' → logprob: -11.159383773803711
    9. ' zip' → logprob: -11.409383773803711
    10. ' n' → logprob: -12.284383773803711

Token 251: ' indices' (ID: 30378)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.34870725870132446
    2. 'range' → logprob: -1.2237071990966797
    3. 'a' → logprob: -8.97370719909668
    4. ' a' → logprob: -9.97370719909668
    5. 'n' → logprob: -10.84870719909668
    6. ' zip' → logprob: -10.97370719909668
    7. ' ' → logprob: -11.59870719909668
    8. 'i' → logprob: -11.72370719909668
    9. '(range' → logprob: -11.84870719909668
    10. 'zip' → logprob: -12.34870719909668

Token 252: ' de' (ID: 334)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.18849313259124756
    2. 'range' → logprob: -2.188493251800537
    3. '(range' → logprob: -3.063493251800537
    4. '(n' → logprob: -5.563493251800537
    5. ' in' → logprob: -5.938493251800537
    6. '(' → logprob: -6.438493251800537
    7. '(i' → logprob: -6.438493251800537
    8. ' i' → logprob: -6.688493251800537
    9. '   ' → logprob: -7.063493251800537
    10. 'n' → logprob: -8.188492774963379

Token 253: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859282076358795
    2. 'range' → logprob: -3.0485928058624268
    3. '(range' → logprob: -12.798592567443848
    4. ' la' → logprob: -13.923592567443848
    5. 'n' → logprob: -14.548592567443848
    6. 'a' → logprob: -14.798592567443848
    7. '	range' → logprob: -14.798592567443848
    8. ' a' → logprob: -15.548592567443848
    9. ' n' → logprob: -16.298593521118164
    10. 'la' → logprob: -17.048593521118164

Token 254: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008067715098150074
    2. ' range' → logprob: -7.12580680847168
    3. 'a' → logprob: -13.37580680847168
    4. 'la' → logprob: -14.25080680847168
    5. '(range' → logprob: -16.75080680847168
    6. '```' → logprob: -17.37580680847168
    7. 'r' → logprob: -17.50080680847168
    8. 'rang' → logprob: -17.87580680847168
    9. 'n' → logprob: -18.00080680847168
    10. '   ' → logprob: -18.00080680847168

Token 255: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47125959396362305
    2. 'range' → logprob: -1.721259593963623
    3. ' range' → logprob: -2.471259593963623
    4. ' in' → logprob: -3.471259593963623
    5. ' ' → logprob: -3.721259593963623
    6. ' à' → logprob: -3.846259593963623
    7. ' jusqu' → logprob: -4.721259593963623
    8. ' n' → logprob: -5.221259593963623
    9. 'in' → logprob: -5.471259593963623
    10. ',n' → logprob: -5.721259593963623

Token 256: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05489976704120636
    2. 'n' → logprob: -2.9298996925354004
    3. ' range' → logprob: -11.679900169372559
    4. ' ' → logprob: -13.054900169372559
    5. 'range' → logprob: -13.054900169372559
    6. '   ' → logprob: -13.429900169372559
    7. '	n' → logprob: -13.554900169372559
    8. ' ' → logprob: -14.304900169372559
    9. '(n' → logprob: -14.304900169372559
    10. '<n' → logprob: -15.929900169372559

Token 257: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25589075684547424
    2. '   ' → logprob: -2.1308908462524414
    3. ' n' → logprob: -3.7558908462524414
    4. ':
' → logprob: -4.255890846252441
    5. 'range' → logprob: -4.255890846252441
    6. '-' → logprob: -4.380890846252441
    7. 'for' → logprob: -4.630890846252441
    8. '(n' → logprob: -4.880890846252441
    9. ' for' → logprob: -5.255890846252441
    10. 'n' → logprob: -5.380890846252441

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026050140149891376
    2. '-' → logprob: -8.500260353088379
    3. ' ' → logprob: -9.875260353088379
    4. 'n' → logprob: -12.875260353088379
    5. '   ' → logprob: -13.625260353088379
    6. ' -' → logprob: -13.750260353088379
    7. '```' → logprob: -15.250260353088379
    8. '
' → logprob: -16.375261306762695
    9. ' n' → logprob: -16.625261306762695
    10. 'for' → logprob: -17.000261306762695

Token 259: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7901840806007385
    2. '   ' → logprob: -1.2901840209960938
    3. 'for' → logprob: -1.7901840209960938
    4. ':' → logprob: -2.2901840209960938
    5. ':
' → logprob: -7.040184020996094
    6. 'range' → logprob: -7.165184020996094
    7. ' range' → logprob: -7.415184020996094
    8. 'in' → logprob: -9.040184020996094
    9. ',' → logprob: -9.415184020996094
    10. ' :' → logprob: -9.540184020996094

Token 260: 'n' (ID: 77)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1297905594110489
    2. 'n' → logprob: -2.2547905445098877
    3. ')' → logprob: -4.879790782928467
    4. '):' → logprob: -5.254790782928467
    5. ' range' → logprob: -6.504790782928467
    6. '):
' → logprob: -7.254790782928467
    7. ')n' → logprob: -7.629790782928467
    8. ' )' → logprob: -8.129790306091309
    9. 'range' → logprob: -8.129790306091309
    10. '   ' → logprob: -8.254790306091309

Token 261: ' exclusive' (ID: 17078)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07039952278137207
    2. '-' → logprob: -3.195399522781372
    3. '):
' → logprob: -3.945399522781372
    4. ' -' → logprob: -5.945399284362793
    5. ')' → logprob: -6.320399284362793
    6. ' ):' → logprob: -6.320399284362793
    7. ':' → logprob: -7.570399284362793
    8. 'for' → logprob: -8.070399284362793
    9. '   ' → logprob: -8.195399284362793
    10. '
' → logprob: -8.945399284362793

Token 262: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13054126501083374
    2. '):
' → logprob: -2.6305413246154785
    3. ')' → logprob: -3.0055413246154785
    4. ' ):' → logprob: -7.6305413246154785
    5. ':' → logprob: -9.38054084777832
    6. '   ' → logprob: -9.88054084777832
    7. ' ):
' → logprob: -10.00554084777832
    8. ' )' → logprob: -10.00554084777832
    9. 'for' → logprob: -10.25554084777832
    10. '):
' → logprob: -11.00554084777832

Token 263: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15318605303764343
    2. ' for' → logprob: -2.153186082839966
    3. '   ' → logprob: -3.653186082839966
    4. '	for' → logprob: -12.278185844421387
    5. 'range' → logprob: -13.778185844421387
    6. 'or' → logprob: -14.403185844421387
    7. ' range' → logprob: -14.653185844421387
    8. ' ' → logprob: -15.278185844421387
    9. '    
' → logprob: -15.403185844421387
    10. '
' → logprob: -15.528185844421387

Token 264: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25552621483802795
    2. ' for' → logprob: -1.5055261850357056
    3. '   ' → logprob: -5.630526065826416
    4. '	for' → logprob: -12.880526542663574
    5. ' ' → logprob: -13.880526542663574
    6. '  ' → logprob: -16.505525588989258
    7. ' range' → logprob: -16.505525588989258
    8. ' ' → logprob: -16.880525588989258
    9. '
' → logprob: -17.005525588989258
    10. 'or' → logprob: -17.005525588989258

Token 265: ' À' (ID: 27643)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20156146585941315
    2. ' for' → logprob: -1.701561450958252
    3. '   ' → logprob: -8.82656192779541
    4. ' ' → logprob: -14.57656192779541
    5. '	for' → logprob: -14.95156192779541
    6. '
' → logprob: -15.82656192779541
    7. ' range' → logprob: -15.95156192779541
    8. 'range' → logprob: -16.701560974121094
    9. ' ' → logprob: -16.951560974121094
    10. '  ' → logprob: -17.201560974121094

Token 266: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16738811135292053
    2. 'range' → logprob: -2.2923882007598877
    3. 'for' → logprob: -3.1673882007598877
    4. ' for' → logprob: -4.667387962341309
    5. ' i' → logprob: -7.417387962341309
    6. 'i' → logprob: -7.667387962341309
    7. ' ' → logprob: -8.417387962341309
    8. 'n' → logprob: -9.292387962341309
    9. '    ' → logprob: -9.667387962341309
    10. '   ' → logprob: -11.042387962341309

Token 267: ' it' (ID: 480)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2527019679546356
    2. 'i' → logprob: -1.502701997756958
    3. ' range' → logprob: -7.377701759338379
    4. 'range' → logprob: -9.627701759338379
    5. ' ' → logprob: -10.377701759338379
    6. ' in' → logprob: -11.627701759338379
    7. '_' → logprob: -11.752701759338379
    8. ' index' → logprob: -12.002701759338379
    9. '   ' → logprob: -12.502701759338379
    10. ':' → logprob: -12.752701759338379

Token 268: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.02573930285871029
    2. 'ération' → logprob: -4.2757391929626465
    3. 'é' → logprob: -5.6507391929626465
    4. 'e' → logprob: -6.4007391929626465
    5. 'érieur' → logprob: -6.9007391929626465
    6. '=' → logprob: -7.1507391929626465
    7. '   ' → logprob: -7.2757391929626465
    8. '  ' → logprob: -7.5257391929626465
    9. 'éra' → logprob: -7.6507391929626465
    10. ':' → logprob: -8.150739669799805

Token 269: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.058179520070552826
    2. ' :' → logprob: -3.3081796169281006
    3. '   ' → logprob: -4.3081793785095215
    4. ',' → logprob: -5.4331793785095215
    5. ':
' → logprob: -6.8081793785095215
    6. ' :
' → logprob: -7.4331793785095215
    7. ' for' → logprob: -8.93317985534668
    8. ' ,' → logprob: -9.68317985534668
    9. 'for' → logprob: -10.30817985534668
    10. '    ' → logprob: -10.43317985534668

Token 270: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.014893686398863792
    2. 'ans' → logprob: -5.014893531799316
    3. ' ' → logprob: -5.639893531799316
    4. '   ' → logprob: -6.639893531799316
    5. '    ' → logprob: -6.639893531799316
    6. ' 
' → logprob: -7.389893531799316
    7. '	ans' → logprob: -8.139893531799316
    8. '     
' → logprob: -8.264893531799316
    9. '(ans' → logprob: -8.264893531799316
    10. '    
' → logprob: -8.764893531799316

Token 271: ' variable' (ID: 11076)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4836181402206421
    2. 'ans' → logprob: -0.9836181402206421
    3. 'for' → logprob: -5.358618259429932
    4. ' for' → logprob: -5.983618259429932
    5. '(ans' → logprob: -7.358618259429932
    6. '   ' → logprob: -7.608618259429932
    7. ' ' → logprob: -7.858618259429932
    8. '	ans' → logprob: -8.233617782592773
    9. 's' → logprob: -9.233617782592773
    10. ':' → logprob: -9.358617782592773

Token 272: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16033409535884857
    2. 'i' → logprob: -1.9103341102600098
    3. '   ' → logprob: -10.660333633422852
    4. ' ans' → logprob: -10.785333633422852
    5. ' for' → logprob: -11.035333633422852
    6. ' ' → logprob: -11.160333633422852
    7. 'for' → logprob: -11.535333633422852
    8. '_' → logprob: -12.160333633422852
    9. ' _' → logprob: -12.285333633422852
    10. '	i' → logprob: -12.410333633422852

Token 273: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003115095605608076
    2. ' i' → logprob: -8.250311851501465
    3. 'ans' → logprob: -10.750311851501465
    4. 'range' → logprob: -11.125311851501465
    5. 'a' → logprob: -12.375311851501465
    6. 'for' → logprob: -12.750311851501465
    7. ')' → logprob: -13.500311851501465
    8. '_' → logprob: -13.625311851501465
    9. ' range' → logprob: -13.875311851501465
    10. '_i' → logprob: -14.000311851501465

Token 274: ''' (ID: 6)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5753395557403564
    2. ' in' → logprob: -1.2003395557403564
    3. ''' → logprob: -2.3253395557403564
    4. ')' → logprob: -3.7003395557403564
    5. ' '' → logprob: -5.325339317321777
    6. ''in' → logprob: -6.200339317321777
    7. '):' → logprob: -6.575339317321777
    8. ')'' → logprob: -6.700339317321777
    9. '')' → logprob: -6.825339317321777
    10. '+='' → logprob: -6.950339317321777

Token 275: ' prend' (ID: 37463)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8468921780586243
    2. 'in' → logprob: -1.4718921184539795
    3. ')' → logprob: -2.3468921184539795
    4. ' range' → logprob: -2.8468921184539795
    5. 'for' → logprob: -2.9718921184539795
    6. ' for' → logprob: -3.4718921184539795
    7. ' represents' → logprob: -3.9718921184539795
    8. '   ' → logprob: -4.221892356872559
    9. ':' → logprob: -4.346892356872559
    10. ' will' → logprob: -4.471892356872559

Token 276: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4547428488731384
    2. 'n' → logprob: -1.8297429084777832
    3. ' la' → logprob: -2.329742908477783
    4. ' n' → logprob: -4.329742908477783
    5. ' a' → logprob: -4.454742908477783
    6. 'l' → logprob: -4.704742908477783
    7. '  ' → logprob: -4.954742908477783
    8. ',' → logprob: -5.204742908477783
    9. ' i' → logprob: -5.579742908477783
    10. 'range' → logprob: -5.579742908477783

Token 277: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9320611357688904
    2. ' value' → logprob: -1.3070611953735352
    3. ' valeur' → logprob: -1.8070611953735352
    4. 'value' → logprob: -1.9320611953735352
    5. ' val' → logprob: -4.682061195373535
    6. 'range' → logprob: -4.807061195373535
    7. ' range' → logprob: -4.932061195373535
    8. ' vale' → logprob: -7.682061195373535
    9. 'values' → logprob: -8.307061195373535
    10. 'n' → logprob: -8.557061195373535

Token 278: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08205471932888031
    2. ' ' → logprob: -3.082054615020752
    3. ' de' → logprob: -3.957054615020752
    4. ' range' → logprob: -5.207054615020752
    5. ' in' → logprob: -5.957054615020752
    6. 'range' → logprob: -6.957054615020752
    7. '    ' → logprob: -7.082054615020752
    8. 'i' → logprob: -7.207054615020752
    9. ' a' → logprob: -7.332054615020752
    10. ' dans' → logprob: -8.08205509185791

Token 279: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3981667459011078
    2. 'i' → logprob: -1.1481667757034302
    3. ' ' → logprob: -4.898166656494141
    4. 'range' → logprob: -6.773166656494141
    5. ' range' → logprob: -6.773166656494141
    6. 'n' → logprob: -7.773166656494141
    7. ' la' → logprob: -8.39816665649414
    8. ''' → logprob: -8.89816665649414
    9. ' l' → logprob: -9.02316665649414
    10. ' n' → logprob: -9.14816665649414

Token 280: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24974071979522705
    2. 'a' → logprob: -2.2497406005859375
    3. 'i' → logprob: -3.1247406005859375
    4. ''i' → logprob: -3.4997406005859375
    5. ''ind' → logprob: -4.1247406005859375
    6. ''espace' → logprob: -5.3747406005859375
    7. 'es' → logprob: -5.3747406005859375
    8. ' i' → logprob: -5.4997406005859375
    9. 'e' → logprob: -6.1247406005859375
    10. 'indice' → logprob: -6.6247406005859375

Token 281: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5192358493804932
    2. ' i' → logprob: -1.0192358493804932
    3. ' range' → logprob: -3.519235849380493
    4. 'range' → logprob: -4.894235610961914
    5. 'indice' → logprob: -5.519235610961914
    6. 'n' → logprob: -7.144235610961914
    7. ' ' → logprob: -7.519235610961914
    8. ' in' → logprob: -8.269235610961914
    9. ' for' → logprob: -8.394235610961914
    10. ' index' → logprob: -8.519235610961914

Token 282: ' courant' (ID: 74694)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8451160192489624
    2. ' in' → logprob: -1.0951160192489624
    3. 'in' → logprob: -2.595116138458252
    4. ',' → logprob: -2.970116138458252
    5. ' i' → logprob: -3.595116138458252
    6. '   ' → logprob: -4.095116138458252
    7. ' de' → logprob: -4.345116138458252
    8. ' ,' → logprob: -4.595116138458252
    9. ' for' → logprob: -5.095116138458252
    10. ' en' → logprob: -5.470116138458252

Token 283: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38190191984176636
    2. '   ' → logprob: -1.5069019794464111
    3. ' :' → logprob: -3.506901979446411
    4. ' for' → logprob: -3.631901979446411
    5. 'for' → logprob: -4.506901741027832
    6. ' in' → logprob: -5.131901741027832
    7. ':
' → logprob: -5.256901741027832
    8. '):' → logprob: -5.256901741027832
    9. 'in' → logprob: -5.381901741027832
    10. ' ' → logprob: -6.256901741027832

Token 284: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8620472550392151
    2. 'for' → logprob: -0.8620472550392151
    3. '   ' → logprob: -1.8620471954345703
    4. '	for' → logprob: -10.61204719543457
    5. ' ' → logprob: -10.86204719543457
    6. '
' → logprob: -12.11204719543457
    7. '  ' → logprob: -13.98704719543457
    8. '    
' → logprob: -14.36204719543457
    9. '```' → logprob: -14.73704719543457
    10. 'or' → logprob: -14.86204719543457

Token 285: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25600141286849976
    2. ' for' → logprob: -1.5060014724731445
    3. '   ' → logprob: -5.5060014724731445
    4. ' ' → logprob: -14.381001472473145
    5. '	for' → logprob: -14.381001472473145
    6. 'range' → logprob: -16.006000518798828
    7. ' range' → logprob: -16.131000518798828
    8. '
' → logprob: -16.131000518798828
    9. '```' → logprob: -16.256000518798828
    10. '  ' → logprob: -16.506000518798828

Token 286: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023252349346876144
    2. 'i' → logprob: -3.773252248764038
    3. ' in' → logprob: -12.898252487182617
    4. ' ' → logprob: -12.898252487182617
    5. '_' → logprob: -14.273252487182617
    6. '	i' → logprob: -14.648252487182617
    7. '_i' → logprob: -15.023252487182617
    8. ' ' → logprob: -15.523252487182617
    9. ' _' → logprob: -16.398252487182617
    10. '  ' → logprob: -16.898252487182617

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04301220551133156
    2. 'in' → logprob: -3.1680121421813965
    3. ' ' → logprob: -12.043012619018555
    4. 'range' → logprob: -13.543012619018555
    5. ',' → logprob: -13.918012619018555
    6. ')' → logprob: -14.043012619018555
    7. '```' → logprob: -14.668012619018555
    8. 'n' → logprob: -14.668012619018555
    9. '	in' → logprob: -14.793012619018555
    10. 'import' → logprob: -14.918012619018555

Token 288: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25193697214126587
    2. ' range' → logprob: -1.501936912536621
    3. '(range' → logprob: -12.876936912536621
    4. ')' → logprob: -13.376936912536621
    5. '	range' → logprob: -13.751936912536621
    6. ' ' → logprob: -14.126936912536621
    7. 'n' → logprob: -14.501936912536621
    8. 'in' → logprob: -15.001936912536621
    9. '   ' → logprob: -15.376936912536621
    10. ' xrange' → logprob: -15.876936912536621

Token 289: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00033558503491804004
    2. '(' → logprob: -8.000335693359375
    3. ' (' → logprob: -16.500335693359375
    4. 'n' → logprob: -17.875335693359375
    5. '(
' → logprob: -18.375335693359375
    6. '(len' → logprob: -19.375335693359375
    7. ' n' → logprob: -19.625335693359375
    8. '(i' → logprob: -19.625335693359375
    9. '((' → logprob: -21.125335693359375
    10. '(N' → logprob: -21.250335693359375

Token 290: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00028970264247618616
    2. '):
' → logprob: -8.250289916992188
    3. ')' → logprob: -11.125289916992188
    4. ':' → logprob: -11.875289916992188
    5. ' ):' → logprob: -12.750289916992188
    6. '   ' → logprob: -13.250289916992188
    7. '():' → logprob: -13.875289916992188
    8. '):
' → logprob: -14.250289916992188
    9. '+' → logprob: -15.375289916992188
    10. ']:' → logprob: -16.750289916992188

Token 291: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03311799839138985
    2. ' ans' → logprob: -3.6581180095672607
    3. 'ans' → logprob: -5.158117771148682
    4. '	ans' → logprob: -8.53311824798584
    5. '       ' → logprob: -8.90811824798584
    6. '    
' → logprob: -9.03311824798584
    7. '    ' → logprob: -9.03311824798584
    8. '(ans' → logprob: -9.03311824798584
    9. ' if' → logprob: -9.15811824798584
    10. '  ' → logprob: -9.65811824798584

Token 292: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.29922083020210266
    2. '   ' → logprob: -1.6742208003997803
    3. 'ans' → logprob: -2.6742208003997803
    4. '	ans' → logprob: -6.549221038818359
    5. ' for' → logprob: -8.54922103881836
    6. '(ans' → logprob: -8.67422103881836
    7. ' if' → logprob: -9.42422103881836
    8. '       ' → logprob: -9.79922103881836
    9. '    
' → logprob: -9.79922103881836
    10. '    ' → logprob: -9.92422103881836

Token 293: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003405136289075017
    2. ' ans' → logprob: -6.2534050941467285
    3. '   ' → logprob: -7.2534050941467285
    4. 'if' → logprob: -7.6284050941467285
    5. 'for' → logprob: -9.128405570983887
    6. 'diff' → logprob: -9.628405570983887
    7. '	ans' → logprob: -10.253405570983887
    8. 'c' → logprob: -12.003405570983887
    9. 'answer' → logprob: -12.003405570983887
    10. 'temp' → logprob: -12.128405570983887

Token 294: ' l' (ID: 305)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.29122504591941833
    2. 'a' → logprob: -1.4162250757217407
    3. ' abs' → logprob: -5.541224956512451
    4. ' b' → logprob: -6.166224956512451
    5. ' i' → logprob: -6.291224956512451
    6. 'b' → logprob: -7.416224956512451
    7. 'i' → logprob: -7.791224956512451
    8. 'abs' → logprob: -7.916224956512451
    9. '(a' → logprob: -8.41622543334961
    10. ' (' → logprob: -8.41622543334961

Token 295: ''' (ID: 6)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4627835154533386
    2. 'a' → logprob: -1.0877835750579834
    3. ' abs' → logprob: -3.8377835750579834
    4. ' i' → logprob: -5.462783336639404
    5. 'abs' → logprob: -5.962783336639404
    6. 'i' → logprob: -6.587783336639404
    7. ' b' → logprob: -6.712783336639404
    8. 'b' → logprob: -6.962783336639404
    9. ' (' → logprob: -8.337783813476562
    10. '   ' → logprob: -8.337783813476562

Token 296: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06833403557538986
    2. 'b' → logprob: -3.4433341026306152
    3. ' a' → logprob: -3.6933341026306152
    4. 'i' → logprob: -5.693334102630615
    5. 'abs' → logprob: -5.943334102630615
    6. ' b' → logprob: -6.443334102630615
    7. ' abs' → logprob: -7.193334102630615
    8. ' i' → logprob: -7.693334102630615
    9. '(a' → logprob: -9.318333625793457
    10. '0' → logprob: -9.693333625793457

Token 297: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.03561755642294884
    2. 'a' → logprob: -4.285617351531982
    3. 'if' → logprob: -4.785617351531982
    4. 'ement' → logprob: -5.160617351531982
    5. 'm' → logprob: -6.285617351531982
    6. '#' → logprob: -6.285617351531982
    7. 'e' → logprob: -7.035617351531982
    8. 'em' → logprob: -7.410617351531982
    9. 'ément' → logprob: -7.410617351531982
    10. 'i' → logprob: -8.03561782836914

Token 298: ' correspondant' (ID: 146058)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7257996797561646
    2. ' a' → logprob: -0.7257996797561646
    3. ' i' → logprob: -4.600799560546875
    4. ' abs' → logprob: -4.975799560546875
    5. ' b' → logprob: -5.225799560546875
    6. 'b' → logprob: -5.725799560546875
    7. 'abs' → logprob: -6.350799560546875
    8. 'i' → logprob: -6.350799560546875
    9. '   ' → logprob: -6.475799560546875
    10. ' de' → logprob: -7.475799560546875

Token 299: ' dans' (ID: 2671)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9490293264389038
    2. 'a' → logprob: -1.1990293264389038
    3. ' a' → logprob: -1.6990293264389038
    4. ' à' → logprob: -2.4490294456481934
    5. 'de' → logprob: -5.074029445648193
    6. 'i' → logprob: -5.074029445648193
    7. '[i' → logprob: -5.199029445648193
    8. '   ' → logprob: -5.324029445648193
    9. ' i' → logprob: -5.574029445648193
    10. ' dans' → logprob: -5.824029445648193

Token 300: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023768417537212372
    2. 'b' → logprob: -3.898768424987793
    3. ' a' → logprob: -5.773768424987793
    4. ' b' → logprob: -9.273768424987793
    5. ' ' → logprob: -12.773768424987793
    6. '(a' → logprob: -12.773768424987793
    7. '   ' → logprob: -13.023768424987793
    8. '[a' → logprob: -13.273768424987793
    9. '	a' → logprob: -13.336268424987793
    10. '#a' → logprob: -13.398768424987793

Token 301: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11317441612482071
    2. 'b' → logprob: -2.2381744384765625
    3. ' a' → logprob: -8.238174438476562
    4. ' b' → logprob: -10.113174438476562
    5. '(a' → logprob: -10.863174438476562
    6. 'i' → logprob: -12.488174438476562
    7. '   ' → logprob: -12.613174438476562
    8. '[a' → logprob: -12.738174438476562
    9. 'abs' → logprob: -13.175674438476562
    10. ')' → logprob: -13.550674438476562

Token 302: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03181618079543114
    2. ''[' → logprob: -3.781816244125366
    3. ''' → logprob: -4.781816005706787
    4. '][' → logprob: -10.156816482543945
    5. '[' → logprob: -10.281816482543945
    6. ''][' → logprob: -11.031816482543945
    7. ']'' → logprob: -11.281816482543945
    8. '')[' → logprob: -11.781816482543945
    9. '[j' → logprob: -11.906816482543945
    10. '['' → logprob: -12.156816482543945

Token 303: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.5954712075181305e-05
    2. '[' → logprob: -10.875036239624023
    3. '[j' → logprob: -12.625036239624023
    4. ' [' → logprob: -12.875036239624023
    5. '[a' → logprob: -12.875036239624023
    6. '[b' → logprob: -12.875036239624023
    7. '   ' → logprob: -13.250036239624023
    8. 'i' → logprob: -14.125036239624023
    9. '>' → logprob: -14.750036239624023
    10. 'a' → logprob: -14.875036239624023

Token 304: ' supérieur' (ID: 98491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7526218891143799
    2. 'a' → logprob: -1.7526218891143799
    3. ' not' → logprob: -1.8776218891143799
    4. 'not' → logprob: -2.50262188911438
    5. 'strict' → logprob: -2.62762188911438
    6. 'b' → logprob: -3.00262188911438
    7. ' a' → logprob: -3.12762188911438
    8. ' ' → logprob: -3.37762188911438
    9. ' supérieur' → logprob: -3.62762188911438
    10. ' b' → logprob: -4.002621650695801

Token 305: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6563579440116882
    2. '       ' → logprob: -1.406358003616333
    3. '[i' → logprob: -2.281358003616333
    4. 'à' → logprob: -2.406358003616333
    5. '           ' → logprob: -4.531357765197754
    6. ' a' → logprob: -4.781357765197754
    7. 'a' → logprob: -5.031357765197754
    8. '[' → logprob: -5.281357765197754
    9. '   ' → logprob: -5.281357765197754
    10. ',' → logprob: -6.781357765197754

Token 306: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.21065077185630798
    2. '=' → logprob: -2.710650682449341
    3. 'à' → logprob: -2.835650682449341
    4. ' égal' → logprob: -3.710650682449341
    5. 'strict' → logprob: -3.960650682449341
    6. 'a' → logprob: -4.96065092086792
    7. 'ég' → logprob: -5.96065092086792
    8. '>' → logprob: -6.08565092086792
    9. ' ég' → logprob: -6.21065092086792
    10. 'equal' → logprob: -6.58565092086792

Token 307: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5534997582435608
    2. ' à' → logprob: -1.428499698638916
    3. 'à' → logprob: -2.553499698638916
    4. '(a' → logprob: -3.053499698638916
    5. '       ' → logprob: -3.553499698638916
    6. ' a' → logprob: -4.178499698638916
    7. '   ' → logprob: -4.803499698638916
    8. '(' → logprob: -5.678499698638916
    9. '#' → logprob: -6.803499698638916
    10. ' (' → logprob: -7.428499698638916

Token 308: ' celui' (ID: 27857)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0018230968853458762
    2. ' a' → logprob: -7.0018229484558105
    3. 'l' → logprob: -8.251823425292969
    4. '0' → logprob: -8.501823425292969
    5. 'à' → logprob: -9.001823425292969
    6. ' celui' → logprob: -9.001823425292969
    7. '100' → logprob: -10.376823425292969
    8. 'cel' → logprob: -10.626823425292969
    9. '10' → logprob: -10.751823425292969
    10. '1' → logprob: -10.876823425292969

Token 309: ' dans' (ID: 2671)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.0485180616378784
    2. ' de' → logprob: -1.5485180616378784
    3. 'a' → logprob: -1.9235180616378784
    4. '       ' → logprob: -1.9235180616378784
    5. '   ' → logprob: -3.173518180847168
    6. 'à' → logprob: -3.298518180847168
    7. '#' → logprob: -4.298518180847168
    8. ' a' → logprob: -4.423518180847168
    9. 'de' → logprob: -4.548518180847168
    10. ' dans' → logprob: -4.798518180847168

Token 310: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007355354027822614
    2. ' a' → logprob: -7.500735759735107
    3. ''a' → logprob: -8.62573528289795
    4. '   ' → logprob: -14.50073528289795
    5. '#a' → logprob: -14.62573528289795
    6. ' ' → logprob: -15.00073528289795
    7. '`' → logprob: -15.12573528289795
    8. ' '' → logprob: -15.37573528289795
    9. '"a' → logprob: -15.50073528289795
    10. ''' → logprob: -15.62573528289795

Token 311: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00016086915275081992
    2. ' a' → logprob: -8.750161170959473
    3. ''a' → logprob: -13.000161170959473
    4. ''' → logprob: -16.875160217285156
    5. ' ' → logprob: -17.125160217285156
    6. '   ' → logprob: -17.375160217285156
    7. '')' → logprob: -17.625160217285156
    8. ''''' → logprob: -18.000160217285156
    9. '#a' → logprob: -18.125160217285156
    10. '	a' → logprob: -18.375160217285156

Token 312: '',
' (ID: 1214)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016199883073568344
    2. ''' → logprob: -4.766200065612793
    3. ''[' → logprob: -6.016200065612793
    4. '',' → logprob: -6.141200065612793
    5. '[' → logprob: -7.016200065612793
    6. '':' → logprob: -7.141200065612793
    7. '   ' → logprob: -7.891200065612793
    8. ' [' → logprob: -8.141200065612793
    9. '':
' → logprob: -9.141200065612793
    10. ' '' → logprob: -9.391200065612793

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009488075040280819
    2. ' if' → logprob: -5.384488105773926
    3. ':' → logprob: -5.634488105773926
    4. '           ' → logprob: -7.634488105773926
    5. 'if' → logprob: -7.884488105773926
    6. ' ans' → logprob: -8.634488105773926
    7. 'ans' → logprob: -9.759488105773926
    8. '        ' → logprob: -10.259488105773926
    9. ',' → logprob: -10.509488105773926
    10. '   ' → logprob: -10.884488105773926

Token 314: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.068749338388443
    2. '           ' → logprob: -2.81874942779541
    3. ' ans' → logprob: -5.56874942779541
    4. ' if' → logprob: -6.31874942779541
    5. ':' → logprob: -8.06874942779541
    6. '        ' → logprob: -8.44374942779541
    7. '   ' → logprob: -8.81874942779541
    8. 'ans' → logprob: -8.94374942779541
    9. 'if' → logprob: -9.81874942779541
    10. '      ' → logprob: -10.06874942779541

Token 315: ' alors' (ID: 17971)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17908237874507904
    2. ' ans' → logprob: -2.0540823936462402
    3. '           ' → logprob: -3.9290823936462402
    4. 'ans' → logprob: -4.30408239364624
    5. '   ' → logprob: -6.80408239364624
    6. ' if' → logprob: -7.17908239364624
    7. '	ans' → logprob: -8.179081916809082
    8. '(ans' → logprob: -8.679081916809082
    9. 'if' → logprob: -9.179081916809082
    10. '        ' → logprob: -10.554081916809082

Token 316: ' '' (ID: 461)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.780178964138031
    2. '       ' → logprob: -1.1551790237426758
    3. 'ans' → logprob: -2.030179023742676
    4. '           ' → logprob: -2.405179023742676
    5. '   ' → logprob: -5.780179023742676
    6. '	ans' → logprob: -7.280179023742676
    7. '(ans' → logprob: -7.530179023742676
    8. '
' → logprob: -8.405179023742676
    9. '        ' → logprob: -8.905179023742676
    10. '      ' → logprob: -10.280179023742676

Token 317: 'b' (ID: 65)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01058802381157875
    2. ' ans' → logprob: -4.7605881690979
    3. 'a' → logprob: -6.7605881690979
    4. '   ' → logprob: -7.5105881690979
    5. '	ans' → logprob: -9.260587692260742
    6. '(ans' → logprob: -10.260587692260742
    7. '       ' → logprob: -10.385587692260742
    8. 'b' → logprob: -10.385587692260742
    9. ' a' → logprob: -10.385587692260742
    10. ' ' → logprob: -11.635587692260742

Token 318: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017421995289623737
    2. '[' → logprob: -8.875174522399902
    3. ''[' → logprob: -10.750174522399902
    4. ''' → logprob: -12.625174522399902
    5. ' [' → logprob: -13.375174522399902
    6. '')[' → logprob: -13.500174522399902
    7. 'i' → logprob: -14.000174522399902
    8. '[I' → logprob: -14.125174522399902
    9. '
' → logprob: -14.500174522399902
    10. '[a' → logprob: -14.500174522399902

Token 319: ' peut' (ID: 9216)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010563970543444157
    2. '[' → logprob: -4.635563850402832
    3. 'ans' → logprob: -7.510563850402832
    4. 'i' → logprob: -10.260563850402832
    5. ' [' → logprob: -10.385563850402832
    6. ' ans' → logprob: -10.635563850402832
    7. '_ans' → logprob: -10.760563850402832
    8. '	ans' → logprob: -10.885563850402832
    9. ')' → logprob: -11.510563850402832
    10. '
' → logprob: -11.635563850402832

Token 320: ' "' (ID: 392)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.32974761724472046
    2. '[' → logprob: -1.3297476768493652
    3. '   ' → logprob: -4.954747676849365
    4. '       ' → logprob: -5.704747676849365
    5. ' ans' → logprob: -5.829747676849365
    6. ' [' → logprob: -7.954747676849365
    7. '#' → logprob: -8.204747200012207
    8. ' continuer' → logprob: -8.204747200012207
    9. 'ans' → logprob: -8.329747200012207
    10. '           ' → logprob: -8.704747200012207

Token 321: 'c' (ID: 66)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3217051029205322
    2. 'acheter' → logprob: -2.3217051029205322
    3. ' surpass' → logprob: -2.6967051029205322
    4. '[' → logprob: -2.9467051029205322
    5. ' acheter' → logprob: -2.9467051029205322
    6. 'augment' → logprob: -3.0717051029205322
    7. ' remplacer' → logprob: -3.0717051029205322
    8. ' contribuer' → logprob: -3.0717051029205322
    9. ' être' → logprob: -3.1967051029205322
    10. ' aider' → logprob: -3.5717051029205322

Token 322: 'ouvrir' (ID: 32923)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.057309750467538834
    2. 'onter' → logprob: -3.182309865951538
    3. 'on' → logprob: -5.182309627532959
    4. 'omp' → logprob: -5.557309627532959
    5. 'ommer' → logprob: -6.307309627532959
    6. 'over' → logprob: -7.057309627532959
    7. 'comp' → logprob: -7.932309627532959
    8. '[i' → logprob: -8.057310104370117
    9. 'éder' → logprob: -8.307310104370117
    10. 'onten' → logprob: -8.932310104370117

Token 323: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5495668649673462
    2. ' "' → logprob: -1.5495668649673462
    3. 'a' → logprob: -1.6745668649673462
    4. ' a' → logprob: -4.424566745758057
    5. '[i' → logprob: -5.549566745758057
    6. 'i' → logprob: -6.174566745758057
    7. '   ' → logprob: -6.924566745758057
    8. ' '' → logprob: -7.049566745758057
    9. ' i' → logprob: -7.299566745758057
    10. ''' → logprob: -7.424566745758057

Token 324: ' '' (ID: 461)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6962199211120605
    2. 'a' → logprob: -0.8212199211120605
    3. '[i' → logprob: -3.0712199211120605
    4. '   ' → logprob: -5.3212199211120605
    5. '[a' → logprob: -5.9462199211120605
    6. '[' → logprob: -6.1962199211120605
    7. ' l' → logprob: -6.5712199211120605
    8. 'i' → logprob: -7.0712199211120605
    9. ' ' → logprob: -7.1962199211120605
    10. ' the' → logprob: -7.5712199211120605

Token 325: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2033204436302185
    2. ' a' → logprob: -1.7033205032348633
    3. ''' → logprob: -6.953320503234863
    4. ''a' → logprob: -7.453320503234863
    5. ' '' → logprob: -8.078320503234863
    6. ' ' → logprob: -10.203320503234863
    7. '   ' → logprob: -12.828320503234863
    8. '	a' → logprob: -13.078320503234863
    9. 'l' → logprob: -13.140820503234863
    10. 'ai' → logprob: -13.328320503234863

Token 326: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4060561776859686e-05
    2. '   ' → logprob: -11.000043869018555
    3. '[' → logprob: -11.250043869018555
    4. '       ' → logprob: -11.750043869018555
    5. '"' → logprob: -13.375043869018555
    6. ' [' → logprob: -13.500043869018555
    7. 'i' → logprob: -14.375043869018555
    8. '"[' → logprob: -14.625043869018555
    9. '           ' → logprob: -15.000043869018555
    10. '```' → logprob: -15.125043869018555

Token 327: ' complètement' (ID: 81766)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2990413308143616
    2. ':' → logprob: -2.049041271209717
    3. '       ' → logprob: -2.174041271209717
    4. '[' → logprob: -4.924041271209717
    5. '           ' → logprob: -5.549041271209717
    6. ':
' → logprob: -6.174041271209717
    7. ' and' → logprob: -6.549041271209717
    8. '   ' → logprob: -7.424041271209717
    9. ',' → logprob: -8.924041748046875
    10. '):' → logprob: -9.174041748046875

Token 328: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4198486804962158
    2. '       ' → logprob: -1.2948486804962158
    3. ' and' → logprob: -2.919848680496216
    4. ',' → logprob: -4.919848442077637
    5. '           ' → logprob: -5.794848442077637
    6. ' or' → logprob: -6.544848442077637
    7. ':
' → logprob: -6.794848442077637
    8. '   ' → logprob: -7.419848442077637
    9. 'and' → logprob: -7.419848442077637
    10. ' :' → logprob: -7.919848442077637

Token 329: ' cet' (ID: 19505)
  Prédit: ' cette'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cette' → logprob: -0.7726434469223022
    2. ' cet' → logprob: -1.2726434469223022
    3. 'i' → logprob: -2.647643566131592
    4. ' l' → logprob: -2.647643566131592
    5. 'l' → logprob: -3.147643566131592
    6. ' ce' → logprob: -4.147643566131592
    7. '[i' → logprob: -4.272643566131592
    8. 'c' → logprob: -4.397643566131592
    9. 'cet' → logprob: -4.522643566131592
    10. ' i' → logprob: -4.897643566131592

Token 330: ' indice' (ID: 90848)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.13209977746009827
    2. 'index' → logprob: -2.1320998668670654
    3. 'i' → logprob: -5.757099628448486
    4. ' indice' → logprob: -7.507099628448486
    5. ' index' → logprob: -7.882099628448486
    6. 'indices' → logprob: -8.007100105285645
    7. '```' → logprob: -8.507100105285645
    8. 'instant' → logprob: -9.382100105285645
    9. 'indent' → logprob: -9.507100105285645
    10. 'idx' → logprob: -9.882100105285645

Token 331: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3844263553619385
    2. '       ' → logprob: -1.2594263553619385
    3. ',' → logprob: -3.7594263553619385
    4. ' :' → logprob: -5.634426116943359
    5. '           ' → logprob: -5.884426116943359
    6. ' and' → logprob: -6.259426116943359
    7. ':
' → logprob: -6.634426116943359
    8. '   ' → logprob: -7.009426116943359
    9. ' or' → logprob: -7.759426116943359
    10. '.' → logprob: -8.00942611694336

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009476040489971638
    2. ':' → logprob: -4.759476184844971
    3. '   ' → logprob: -7.884476184844971
    4. ' :' → logprob: -8.634475708007812
    5. ' if' → logprob: -9.009475708007812
    6. '           ' → logprob: -9.384475708007812
    7. ',' → logprob: -10.134475708007812
    8. ' and' → logprob: -10.884475708007812
    9. ':
' → logprob: -12.134475708007812
    10. '      ' → logprob: -12.259475708007812

Token 333: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3856182098388672
    2. ' if' → logprob: -1.2606182098388672
    3. 'if' (adapté à ' if') → logprob: -3.385618209838867
    4. '   ' → logprob: -6.010618209838867
    5. ' ans' → logprob: -9.260618209838867
    6. 'ans' → logprob: -10.385618209838867
    7. '           ' → logprob: -10.760618209838867
    8. '    ' → logprob: -11.885618209838867
    9. '      ' → logprob: -12.385618209838867
    10. '	if' → logprob: -12.510618209838867

Token 334: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931600570678711
    2. ' b' → logprob: -0.6931600570678711
    3. '   ' → logprob: -11.693160057067871
    4. '	b' → logprob: -13.318160057067871
    5. 'a' → logprob: -13.818160057067871
    6. ' ' → logprob: -14.068160057067871
    7. ' a' → logprob: -14.318160057067871
    8. '(b' → logprob: -15.193160057067871
    9. '    ' → logprob: -16.318161010742188
    10. ' ' → logprob: -16.443161010742188

Token 335: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.37500286102295
    3. ' [' → logprob: -13.50000286102295
    4. 'i' → logprob: -17.000003814697266
    5. '```' → logprob: -18.500003814697266
    6. '>=' → logprob: -18.625003814697266
    7. '[I' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.750003814697266
    9. ' >=' → logprob: -18.875003814697266
    10. '
' → logprob: -19.125003814697266

Token 336: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06689074635505676
    2. ']>=' → logprob: -2.9418907165527344
    3. '>=' → logprob: -4.566890716552734
    4. '[i' → logprob: -6.941890716552734
    5. '[' → logprob: -7.691890716552734
    6. ' ]' → logprob: -9.941890716552734
    7. ' >=' → logprob: -10.316890716552734
    8. '']' → logprob: -11.066890716552734
    9. '   ' → logprob: -12.066890716552734
    10. '[]' → logprob: -12.316890716552734

Token 337: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.020584169775247574
    2. ' >=' → logprob: -3.8955841064453125
    3. '>' → logprob: -10.645584106445312
    4. ']>=' → logprob: -11.395584106445312
    5. '   ' → logprob: -13.145584106445312
    6. '[' → logprob: -13.270584106445312
    7. ')>=' → logprob: -13.520584106445312
    8. ' ' → logprob: -14.395584106445312
    9. '[i' → logprob: -15.145584106445312
    10. ']' → logprob: -15.270584106445312

Token 338: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889088988304138
    2. ' a' → logprob: -2.578890800476074
    3. '   ' → logprob: -14.328890800476074
    4. '	a' → logprob: -14.953890800476074
    5. ' ' → logprob: -15.828890800476074
    6. '(a' → logprob: -17.57889175415039
    7. ' ' → logprob: -18.20389175415039
    8. '  ' → logprob: -18.32889175415039
    9. '[a' → logprob: -18.32889175415039
    10. '_a' → logprob: -18.45389175415039

Token 339: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.013994814362377e-05
    2. '[' → logprob: -10.25005054473877
    3. ' [' → logprob: -11.25005054473877
    4. 'i' → logprob: -14.62505054473877
    5. '][' → logprob: -14.87505054473877
    6. ']' → logprob: -15.50005054473877
    7. '[j' → logprob: -15.75005054473877
    8. '[
' → logprob: -15.87505054473877
    9. '```' → logprob: -16.000049591064453
    10. '[a' → logprob: -16.375049591064453

Token 340: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.056122228503227234
    2. ']:
' → logprob: -2.931122303009033
    3. ']:
' → logprob: -7.431122303009033
    4. ']' → logprob: -7.931122303009033
    5. '[i' → logprob: -8.306121826171875
    6. '       ' → logprob: -11.306121826171875
    7. ' ]' → logprob: -11.556121826171875
    8. ']:

' → logprob: -11.681121826171875
    9. '[' → logprob: -13.181121826171875
    10. ':' → logprob: -13.306121826171875

Token 341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007218499667942524
    2. ':' → logprob: -5.132218360900879
    3. '       ' → logprob: -7.507218360900879
    4. ' ans' → logprob: -8.257218360900879
    5. ':
' → logprob: -8.382218360900879
    6. 'ans' → logprob: -8.882218360900879
    7. '):' → logprob: -10.632218360900879
    8. '):
' → logprob: -11.132218360900879
    9. '            
' → logprob: -11.257218360900879
    10. ',' → logprob: -11.382218360900879

Token 342: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28303709626197815
    2. 'ans' → logprob: -1.6580370664596558
    3. ' ans' → logprob: -2.9080371856689453
    4. '       ' → logprob: -7.158037185668945
    5. '	ans' → logprob: -8.033037185668945
    6. '               ' → logprob: -8.533037185668945
    7. '(ans' → logprob: -10.158037185668945
    8. '   ' → logprob: -10.783037185668945
    9. 'answer' → logprob: -11.283037185668945
    10. '          ' → logprob: -11.908037185668945

Token 343: ' Aj' (ID: 28294)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.000375380739569664
    2. '           ' → logprob: -8.375375747680664
    3. ' ans' → logprob: -8.875375747680664
    4. '	ans' → logprob: -13.375375747680664
    5. '       ' → logprob: -13.500375747680664
    6. '   ' → logprob: -13.625375747680664
    7. 'a' → logprob: -14.875375747680664
    8. 'answer' → logprob: -15.375375747680664
    9. '(ans' → logprob: -16.000375747680664
    10. '               ' → logprob: -17.125375747680664

Token 344: 'oute' (ID: 3509)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.5097697377204895
    2. 'out' → logprob: -1.3847696781158447
    3. 'outez' → logprob: -2.3847696781158447
    4. 'oute' → logprob: -2.8847696781158447
    5. 'outes' → logprob: -7.509769916534424
    6. '       ' → logprob: -9.009769439697266
    7. 'ust' → logprob: -9.509769439697266
    8. 'ans' → logprob: -9.759769439697266
    9. 'outs' → logprob: -9.759769439697266
    10. '   ' → logprob: -10.134769439697266

Token 345: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4741414487361908
    2. ' a' → logprob: -0.9741414785385132
    3. '           ' → logprob: -10.599141120910645
    4. ' ans' → logprob: -10.724141120910645
    5. 'b' → logprob: -11.849141120910645
    6. 'ans' → logprob: -12.474141120910645
    7. ' b' → logprob: -12.724141120910645
    8. '(a' → logprob: -13.474141120910645
    9. ' (' → logprob: -14.724141120910645
    10. '   ' → logprob: -15.099141120910645

Token 346: ' totalité' (ID: 199552)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.017190026119351387
    2. ' a' → logprob: -4.142189979553223
    3. 'b' → logprob: -6.892189979553223
    4. ' b' → logprob: -9.392189979553223
    5. '   ' → logprob: -11.142189979553223
    6. '(a' → logprob: -11.267189979553223
    7. 'ans' → logprob: -12.017189979553223
    8. '           ' → logprob: -12.642189979553223
    9. ' (' → logprob: -12.642189979553223
    10. ' ' → logprob: -12.642189979553223

Token 347: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016202813014388084
    2. ' a' → logprob: -4.266202926635742
    3. '           ' → logprob: -6.391202926635742
    4. '(a' → logprob: -8.141202926635742
    5. ' de' → logprob: -10.516202926635742
    6. '               ' → logprob: -11.516202926635742
    7. '   ' → logprob: -11.641202926635742
    8. ' (' → logprob: -11.766202926635742
    9. '       ' → logprob: -12.391202926635742
    10. '(' → logprob: -12.516202926635742

Token 348: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01815134845674038
    2. ' a' → logprob: -4.01815128326416
    3. 'b' → logprob: -14.01815128326416
    4. ' b' → logprob: -15.64315128326416
    5. '(a' → logprob: -15.89315128326416
    6. ' ' → logprob: -16.018152236938477
    7. '           ' → logprob: -16.518152236938477
    8. '   ' → logprob: -16.768152236938477
    9. '	a' → logprob: -17.143152236938477
    10. ' (' → logprob: -17.768152236938477

Token 349: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.625001907348633
    3. ' [' → logprob: -14.375001907348633
    4. 'i' → logprob: -16.250001907348633
    5. 'a' → logprob: -16.375001907348633
    6. '```' → logprob: -16.500001907348633
    7. '[
' → logprob: -17.250001907348633
    8. '[a' → logprob: -17.500001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '(i' → logprob: -19.000001907348633

Token 350: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3171417713165283
    2. '[i' → logprob: -1.3171417713165283
    3. ')' → logprob: -6.317141532897949
    4. '])' → logprob: -6.567141532897949
    5. ' ]' → logprob: -7.567141532897949
    6. '[' → logprob: -10.56714153289795
    7. '   ' → logprob: -10.69214153289795
    8. '       ' → logprob: -10.94214153289795
    9. ']*' → logprob: -11.56714153289795
    10. ')]' → logprob: -11.69214153289795

Token 351: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.33035901188850403
    2. '           ' → logprob: -1.3303589820861816
    3. 'to' → logprob: -4.455358982086182
    4. '       ' → logprob: -6.580358982086182
    5. '               ' → logprob: -7.080358982086182
    6. '   ' → logprob: -7.205358982086182
    7. ' ans' → logprob: -7.205358982086182
    8. ' a' → logprob: -7.955358982086182
    9. ' à' → logprob: -8.20535945892334
    10. ')' → logprob: -8.33035945892334

Token 352: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.47418251633644104
    2. 'ans' → logprob: -0.9741824865341187
    3. 'a' → logprob: -9.72418212890625
    4. '(ans' → logprob: -10.59918212890625
    5. '	ans' → logprob: -11.09918212890625
    6. ' a' → logprob: -12.34918212890625
    7. '_ans' → logprob: -14.59918212890625
    8. '```' → logprob: -15.97418212890625
    9. 'b' → logprob: -16.34918212890625
    10. 'answer' → logprob: -16.34918212890625

Token 353: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004624868277460337
    2. ' ans' → logprob: -5.379624843597412
    3. '(ans' → logprob: -13.37962532043457
    4. '	ans' → logprob: -13.37962532043457
    5. 'answer' → logprob: -13.62962532043457
    6. '_ans' → logprob: -15.37962532043457
    7. '
' → logprob: -16.50462532043457
    8. '`' → logprob: -17.87962532043457
    9. 'a' → logprob: -17.87962532043457
    10. 'Ans' → logprob: -18.12962532043457

Token 354: ' car' (ID: 1669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053279053419828415
    2. ' ans' → logprob: -3.553279161453247
    3. 'ans' → logprob: -4.303278923034668
    4. '
' → logprob: -6.053278923034668
    5. ' +=' → logprob: -6.303278923034668
    6. '               ' → logprob: -6.303278923034668
    7. '       ' → logprob: -6.678278923034668
    8. '(ans' → logprob: -6.678278923034668
    9. '+=' → logprob: -7.678278923034668
    10. 'a' → logprob: -8.678278923034668

Token 355: ' tout' (ID: 5501)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.103984534740448
    2. 'a' → logprob: -3.1039845943450928
    3. 'ans' → logprob: -3.1039845943450928
    4. ' a' → logprob: -4.853984355926514
    5. ' b' → logprob: -7.728984355926514
    6. 'b' → logprob: -8.353984832763672
    7. '(ans' → logprob: -8.728984832763672
    8. ' ' → logprob: -9.228984832763672
    9. '	ans' → logprob: -9.478984832763672
    10. '           ' → logprob: -9.603984832763672

Token 356: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07000267505645752
    2. ' a' → logprob: -2.945002555847168
    3. ' l' → logprob: -4.945002555847168
    4. 'l' → logprob: -5.445002555847168
    5. '(a' → logprob: -6.820002555847168
    6. 's' → logprob: -8.070002555847168
    7. ' est' → logprob: -8.195002555847168
    8. '   ' → logprob: -8.445002555847168
    9. ' le' → logprob: -8.445002555847168
    10. '```' → logprob: -8.570002555847168

Token 357: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0026630505453795195
    2. ' a' → logprob: -6.0026631355285645
    3. '(a' → logprob: -9.502662658691406
    4. '           ' → logprob: -9.752662658691406
    5. '```' → logprob: -10.752662658691406
    6. 'l' → logprob: -11.502662658691406
    7. 'la' → logprob: -12.127662658691406
    8. '       ' → logprob: -12.502662658691406
    9. 'ai' → logprob: -12.627662658691406
    10. '   ' → logprob: -13.502662658691406

Token 358: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.500012397766113
    3. ' [' → logprob: -13.250012397766113
    4. '[I' → logprob: -16.625011444091797
    5. '```' → logprob: -17.000011444091797
    6. '[a' → logprob: -17.750011444091797
    7. 'i' → logprob: -17.875011444091797
    8. 'a' → logprob: -18.125011444091797
    9. '(i' → logprob: -19.125011444091797
    10. ']' → logprob: -19.125011444091797

Token 359: ']'' (ID: 75642)
  Prédit: ']''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']'' → logprob: -0.5474879741668701
    2. '[i' → logprob: -1.0474879741668701
    3. ']' → logprob: -3.04748797416687
    4. ''' → logprob: -3.79748797416687
    5. ' ]' → logprob: -7.672488212585449
    6. '']' → logprob: -9.04748821258545
    7. '[' → logprob: -9.42248821258545
    8. ')'' → logprob: -9.42248821258545
    9. ' '' → logprob: -10.67248821258545
    10. ' est' → logprob: -11.42248821258545

Token 360: ' est' (ID: 893)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.09394947439432144
    2. ' est' → logprob: -3.218949556350708
    3. ' can' → logprob: -3.218949556350708
    4. 'est' → logprob: -5.468949317932129
    5. ' peux' → logprob: -7.093949317932129
    6. '       ' → logprob: -7.218949317932129
    7. ' pourra' → logprob: -7.468949317932129
    8. ' vaut' → logprob: -7.843949317932129
    9. '           ' → logprob: -7.968949317932129
    10. 'can' → logprob: -7.968949317932129

Token 361: ' "' (ID: 392)
  Prédit: ' couvert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couvert' → logprob: -0.38262248039245605
    2. 'cou' → logprob: -1.632622480392456
    3. 'c' → logprob: -3.132622480392456
    4. ' cou' → logprob: -3.382622480392456
    5. 'cons' → logprob: -3.882622480392456
    6. ' consomm' → logprob: -4.757622718811035
    7. 'covered' → logprob: -5.257622718811035
    8. ' pris' → logprob: -6.382622718811035
    9. 'absor' → logprob: -6.507622718811035
    10. 's' → logprob: -6.757622718811035

Token 362: 'util' (ID: 2056)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.6977858543395996
    2. 'covered' → logprob: -1.3227858543395996
    3. ' couvert' → logprob: -2.0727858543395996
    4. 'c' → logprob: -2.9477858543395996
    5. 'cons' → logprob: -3.8227858543395996
    6. ' cou' → logprob: -4.5727858543396
    7. 'absor' → logprob: -5.3227858543396
    8. 'cover' → logprob: -5.5727858543396
    9. 'pris' → logprob: -5.8227858543396
    10. 'count' → logprob: -6.1977858543396

Token 363: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.6958990097045898
    2. 'isable' → logprob: -0.6958990097045898
    3. 'isée' → logprob: -6.32089900970459
    4. 'is' → logprob: -7.07089900970459
    5. 'isés' → logprob: -10.19589900970459
    6. 'isible' → logprob: -10.32089900970459
    7. 'ise' → logprob: -11.69589900970459
    8. '```' → logprob: -11.94589900970459
    9. 'isées' → logprob: -12.07089900970459
    10. 'i' → logprob: -12.94589900970459

Token 364: '".
' (ID: 26880)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.13391698896884918
    2. ')' → logprob: -2.6339170932769775
    3. ' "' → logprob: -4.008916854858398
    4. ' +=' → logprob: -4.633916854858398
    5. '.' → logprob: -5.633916854858398
    6. ' )' → logprob: -5.758916854858398
    7. '           ' → logprob: -5.883916854858398
    8. ' dans' → logprob: -6.133916854858398
    9. 'a' → logprob: -6.508916854858398
    10. '+' → logprob: -6.633916854858398

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02716243267059326
    2. ' ans' → logprob: -4.027162551879883
    3. 'ans' → logprob: -4.777162551879883
    4. '       ' → logprob: -7.902162551879883
    5. '
' → logprob: -9.152162551879883
    6. '               ' → logprob: -10.277162551879883
    7. '(ans' → logprob: -11.277162551879883
    8. '   ' → logprob: -11.402162551879883
    9. '	ans' → logprob: -11.652162551879883
    10. '```' → logprob: -12.902162551879883

Token 366: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.040880415588617325
    2. ' ans' → logprob: -3.2908804416656494
    3. '           ' → logprob: -5.91588020324707
    4. '       ' → logprob: -9.41588020324707
    5. '   ' → logprob: -10.16588020324707
    6. '	ans' → logprob: -11.16588020324707
    7. '(ans' → logprob: -12.79088020324707
    8. 'answer' → logprob: -14.16588020324707
    9. '               ' → logprob: -14.66588020324707
    10. '_ans' → logprob: -15.54088020324707

Token 367: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759562849998474
    2. '+=' → logprob: -0.8259562849998474
    3. '+' → logprob: -11.950956344604492
    4. '   ' → logprob: -12.075956344604492
    5. ']+=' → logprob: -13.075956344604492
    6. '=' → logprob: -14.200956344604492
    7. '    ' → logprob: -14.450956344604492
    8. '       ' → logprob: -15.075956344604492
    9. '+=(' → logprob: -15.075956344604492
    10. '```' → logprob: -15.450956344604492

Token 368: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47407716512680054
    2. ' a' → logprob: -0.9740771651268005
    3. '	a' → logprob: -15.974077224731445
    4. '(a' → logprob: -17.974077224731445
    5. '_a' → logprob: -18.099077224731445
    6. ' ' → logprob: -19.099077224731445
    7. ' ' → logprob: -19.099077224731445
    8. '   ' → logprob: -19.849077224731445
    9. 'ai' → logprob: -20.224077224731445
    10. '[a' → logprob: -21.099077224731445

Token 369: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.250001907348633
    3. ' [' → logprob: -15.625001907348633
    4. '[I' → logprob: -18.750001907348633
    5. '[
' → logprob: -20.125001907348633
    6. 'i' → logprob: -20.125001907348633
    7. '[int' → logprob: -20.250001907348633
    8. '[a' → logprob: -20.625001907348633
    9. '```' → logprob: -20.750001907348633
    10. ' ' → logprob: -21.250001907348633

Token 370: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003671448677778244
    2. ')' → logprob: -5.753671646118164
    3. '])' → logprob: -9.003671646118164
    4. ' ]' → logprob: -9.128671646118164
    5. '<|end|>' → logprob: -9.253671646118164
    6. '[i' → logprob: -9.503671646118164
    7. ']
' → logprob: -10.128671646118164
    8. '       ' → logprob: -11.003671646118164
    9. ')]' → logprob: -11.003671646118164
    10. '']' → logprob: -12.253671646118164

Token 371: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007236497476696968
    2. ' else' → logprob: -5.257236480712891
    3. 'else' → logprob: -6.257236480712891
    4. '
' → logprob: -9.63223648071289
    5. 'elif' → logprob: -12.25723648071289
    6. '\n' → logprob: -12.75723648071289
    7. ' elif' → logprob: -12.88223648071289
    8. ')' → logprob: -13.75723648071289
    9. '   ' → logprob: -14.00723648071289
    10. '           ' → logprob: -14.13223648071289

Token 372: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21813055872917175
    2. 'b' → logprob: -2.468130588531494
    3. 'else' → logprob: -2.593130588531494
    4. ' else' → logprob: -3.843130588531494
    5. '           ' → logprob: -4.468130588531494
    6. ' b' → logprob: -5.718130588531494
    7. 'elif' → logprob: -9.593130111694336
    8. 'continue' → logprob: -10.093130111694336
    9. '```' → logprob: -10.593130111694336
    10. '   ' → logprob: -10.843130111694336

Token 373: ' On' (ID: 2160)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006587590090930462
    2. '           ' → logprob: -5.756587505340576
    3. ' b' → logprob: -6.256587505340576
    4. 'a' → logprob: -7.256587505340576
    5. '       ' → logprob: -8.256587982177734
    6. 'else' → logprob: -8.506587982177734
    7. 'continue' → logprob: -8.631587982177734
    8. '#' → logprob: -9.506587982177734
    9. ' continue' → logprob: -11.381587982177734
    10. ' else' → logprob: -11.756587982177734

Token 374: ' sou' (ID: 4069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.116255521774292
    2. ' b' → logprob: -1.366255521774292
    3. ' continue' → logprob: -1.616255521774292
    4. '           ' → logprob: -2.241255521774292
    5. 'continue' → logprob: -2.866255521774292
    6. '#' → logprob: -4.366255760192871
    7. '       ' → logprob: -4.616255760192871
    8. 'else' → logprob: -4.866255760192871
    9. ' else' → logprob: -5.741255760192871
    10. '=' → logprob: -5.741255760192871

Token 375: 'stra' (ID: 14867)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.32504913210868835
    2. 'stra' → logprob: -1.7000491619110107
    3. ' b' → logprob: -3.2000491619110107
    4. 'st' → logprob: -4.450048923492432
    5. 'a' → logprob: -4.575048923492432
    6. 'stract' → logprob: -5.200048923492432
    7. 'h' → logprob: -5.325048923492432
    8. 'met' → logprob: -5.450048923492432
    9. 'p' → logprob: -5.575048923492432
    10. 'r' → logprob: -5.700048923492432

Token 376: 'it' (ID: 278)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.03345572575926781
    2. 'ct' → logprob: -4.783455848693848
    3. 'cte' → logprob: -4.908455848693848
    4. 'a' → logprob: -5.408455848693848
    5. 'it' → logprob: -5.658455848693848
    6. 'que' → logprob: -6.408455848693848
    7. 'g' → logprob: -6.533455848693848
    8. 'b' → logprob: -6.908455848693848
    9. 's' → logprob: -7.283455848693848
    10. 'gue' → logprob: -7.658455848693848

Token 377: ' de' (ID: 334)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.24870337545871735
    2. 'a' → logprob: -1.6237033605575562
    3. ' b' → logprob: -3.9987034797668457
    4. ' a' → logprob: -5.498703479766846
    5. 'ans' → logprob: -8.373703002929688
    6. '           ' → logprob: -8.748703002929688
    7. ' ans' → logprob: -9.998703002929688
    8. '   ' → logprob: -10.623703002929688
    9. 'from' → logprob: -10.998703002929688
    10. '	b' → logprob: -10.998703002929688

Token 378: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007199380779638886
    2. ' b' → logprob: -7.250720024108887
    3. 'a' → logprob: -11.875720024108887
    4. '   ' → logprob: -13.875720024108887
    5. '	b' → logprob: -14.625720024108887
    6. '```' → logprob: -15.000720024108887
    7. ' ' → logprob: -15.125720024108887
    8. '`' → logprob: -15.750720024108887
    9. '#' → logprob: -15.750720024108887
    10. ''b' → logprob: -16.12571907043457

Token 379: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.253090865968261e-06
    2. '[' → logprob: -11.750009536743164
    3. ' [' → logprob: -14.375009536743164
    4. '[b' → logprob: -14.875009536743164
    5. 'b' → logprob: -15.625009536743164
    6. '```' → logprob: -16.625009536743164
    7. '   ' → logprob: -17.750009536743164
    8. ' b' → logprob: -18.625009536743164
    9. '[j' → logprob: -19.125009536743164
    10. 'i' → logprob: -19.625009536743164

Token 380: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.015398690477013588
    2. ',' → logprob: -5.2653985023498535
    3. ' a' → logprob: -5.6403985023498535
    4. '[' → logprob: -6.6403985023498535
    5. ']' → logprob: -6.7653985023498535
    6. '[a' → logprob: -7.0153985023498535
    7. ' ,' → logprob: -7.6403985023498535
    8. 'a' → logprob: -7.6403985023498535
    9. ' b' → logprob: -7.6403985023498535
    10. ' [' → logprob: -7.8903985023498535

Token 381: ' la' (ID: 557)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5687606930732727
    2. '-=' → logprob: -2.068760633468628
    3. 'b' → logprob: -2.193760633468628
    4. ' b' → logprob: -2.193760633468628
    5. 'a' → logprob: -3.318760633468628
    6. ' a' → logprob: -3.693760633468628
    7. '=' → logprob: -4.693760871887207
    8. ',' → logprob: -5.693760871887207
    9. ' ' → logprob: -6.193760871887207
    10. ' =' → logprob: -6.318760871887207

Token 382: ' quantité' (ID: 89219)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03940780833363533
    2. ' a' → logprob: -3.539407730102539
    3. ' quantité' → logprob: -4.664407730102539
    4. ' quantity' → logprob: -9.289407730102539
    5. ' valeur' → logprob: -10.789407730102539
    6. 'quant' → logprob: -10.914407730102539
    7. ' ' → logprob: -11.539407730102539
    8. '   ' → logprob: -11.664407730102539
    9. ' quant' → logprob: -11.789407730102539
    10. ' cantidad' → logprob: -12.164407730102539

Token 383: ' utilisée' (ID: 106548)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35168126225471497
    2. ' a' → logprob: -1.2266812324523926
    3. '   ' → logprob: -6.476681232452393
    4. '           ' → logprob: -7.351681232452393
    5. ' de' → logprob: -8.10168170928955
    6. '       ' → logprob: -8.22668170928955
    7. ' ' → logprob: -9.22668170928955
    8. ' utilisée' → logprob: -9.35168170928955
    9. '          ' → logprob: -10.10168170928955
    10. ' qu' → logprob: -10.35168170928955

Token 384: ' pour' (ID: 1930)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7461063861846924
    2. 'a' → logprob: -1.4961063861846924
    3. '           ' → logprob: -2.3711063861846924
    4. ' =' → logprob: -2.4961063861846924
    5. '=' → logprob: -2.9961063861846924
    6. ' -=' → logprob: -3.2461063861846924
    7. ',' → logprob: -4.996106147766113
    8. ' b' → logprob: -4.996106147766113
    9. ' -' → logprob: -5.371106147766113
    10. 'b' → logprob: -5.871106147766113

Token 385: ' correspond' (ID: 11095)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07611154019832611
    2. ' a' → logprob: -3.3261115550994873
    3. ' couvrir' → logprob: -3.8261115550994873
    4. 'c' → logprob: -4.576111316680908
    5. 'ans' → logprob: -5.826111316680908
    6. 'b' → logprob: -8.576111793518066
    7. 'util' → logprob: -8.701111793518066
    8. ' ' → logprob: -8.951111793518066
    9. 'contin' → logprob: -8.951111793518066
    10. 'l' → logprob: -8.951111793518066

Token 386: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.016132554039359093
    2. 'a' → logprob: -4.766132354736328
    3. 'ance' → logprob: -5.266132354736328
    4. 'er' → logprob: -6.141132354736328
    5. 'ante' → logprob: -9.266132354736328
    6. ' a' → logprob: -10.766132354736328
    7. 'r' → logprob: -11.391132354736328
    8. '=' → logprob: -11.766132354736328
    9. 'ancer' → logprob: -11.766132354736328
    10. 'e' → logprob: -12.266132354736328

Token 387: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7659818530082703
    2. ' à' → logprob: -1.265981912612915
    3. ' a' → logprob: -1.390981912612915
    4. 'à' → logprob: -5.640981674194336
    5. '   ' → logprob: -8.140981674194336
    6. '           ' → logprob: -8.265981674194336
    7. ' ' → logprob: -8.890981674194336
    8. ' to' → logprob: -10.390981674194336
    9. '       ' → logprob: -11.265981674194336
    10. '    ' → logprob: -12.265981674194336

Token 388: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07892272621393204
    2. ' a' → logprob: -2.578922748565674
    3. ' ' → logprob: -10.578922271728516
    4. 'l' → logprob: -13.828922271728516
    5. ' ans' → logprob: -13.828922271728516
    6. '   ' → logprob: -14.078922271728516
    7. ' l' → logprob: -14.203922271728516
    8. '	a' → logprob: -14.203922271728516
    9. '  ' → logprob: -14.328922271728516
    10. ' ' → logprob: -14.641422271728516

Token 389: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008617408573627472
    2. ' a' → logprob: -4.758617401123047
    3. ' ' → logprob: -13.883617401123047
    4. 'l' → logprob: -15.071117401123047
    5. 'ans' → logprob: -15.321117401123047
    6. 'ai' → logprob: -15.446117401123047
    7. '  ' → logprob: -15.633617401123047
    8. ' ans' → logprob: -15.696117401123047
    9. 'i' → logprob: -15.821117401123047
    10. '   ' → logprob: -16.446117401123047

Token 390: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.375000953674316
    3. 'i' → logprob: -15.750000953674316
    4. '[I' → logprob: -17.125
    5. '[j' → logprob: -17.125
    6. ' [' → logprob: -17.75
    7. '```' → logprob: -17.75
    8. '[
' → logprob: -18.5
    9. '(i' → logprob: -18.625
    10. 'a' → logprob: -18.625

Token 391: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06746513396501541
    2. ']' → logprob: -3.06746506690979
    3. '')' → logprob: -4.567465305328369
    4. '']' → logprob: -5.067465305328369
    5. ']'' → logprob: -7.067465305328369
    6. '[' → logprob: -8.567464828491211
    7. ')' → logprob: -8.817464828491211
    8. '].' → logprob: -8.817464828491211
    9. ']').' → logprob: -9.067464828491211
    10. '])' → logprob: -9.317464828491211

Token 392: ''.
' (ID: 49980)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010372139513492584
    2. '
' → logprob: -5.260372161865234
    3. '[i' → logprob: -6.260372161865234
    4. '       ' → logprob: -6.635372161865234
    5. ',' → logprob: -7.260372161865234
    6. '               ' → logprob: -8.635372161865234
    7. '          ' → logprob: -8.760372161865234
    8. '            
' → logprob: -9.010372161865234
    9. '.' → logprob: -9.135372161865234
    10. 'b' → logprob: -9.260372161865234

Token 393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.295074462890625
    2. 'b' → logprob: -1.795074462890625
    3. ' b' → logprob: -2.420074462890625
    4. '       ' → logprob: -8.170074462890625
    5. '               ' → logprob: -10.420074462890625
    6. '```' → logprob: -10.545074462890625
    7. ',' → logprob: -10.670074462890625
    8. '            
' → logprob: -10.920074462890625
    9. '=' → logprob: -11.170074462890625
    10. ' =' → logprob: -11.295074462890625

Token 394: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47423920035362244
    2. 'b' (adapté à ' b') → logprob: -0.9742392301559448
    3. '           ' → logprob: -8.849239349365234
    4. '	b' → logprob: -11.224239349365234
    5. '               ' → logprob: -13.349239349365234
    6. '       ' → logprob: -13.974239349365234
    7. '```' → logprob: -14.099239349365234
    8. ' ' → logprob: -14.599239349365234
    9. '
' → logprob: -14.724239349365234
    10. '   ' → logprob: -15.224239349365234

Token 395: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.750003814697266
    3. ' [' → logprob: -16.125003814697266
    4. '[I' → logprob: -16.500003814697266
    5. ' =' → logprob: -17.500003814697266
    6. '[b' → logprob: -17.875003814697266
    7. '```' → logprob: -17.875003814697266
    8. '=' → logprob: -18.000003814697266
    9. '\[' → logprob: -18.250003814697266
    10. '[j' → logprob: -18.250003814697266

Token 396: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3872206509113312
    2. ']' → logprob: -1.1372206211090088
    3. '[' → logprob: -8.26222038269043
    4. ']-' → logprob: -10.01222038269043
    5. 'i' → logprob: -10.63722038269043
    6. '   ' → logprob: -12.13722038269043
    7. '[j' → logprob: -12.88722038269043
    8. '][' → logprob: -12.88722038269043
    9. '```' → logprob: -13.01222038269043
    10. ']=' → logprob: -13.13722038269043

Token 397: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.010473248548805714
    2. ' -=' → logprob: -4.760473251342773
    3. '=' → logprob: -6.885473251342773
    4. '-' → logprob: -7.135473251342773
    5. '[i' → logprob: -10.385473251342773
    6. '   ' → logprob: -12.510473251342773
    7. '[' → logprob: -13.260473251342773
    8. ' -' → logprob: -14.635473251342773
    9. '[-' → logprob: -15.135473251342773
    10. ' ' → logprob: -15.260473251342773

Token 398: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '	a' → logprob: -18.50020408630371
    4. '   ' → logprob: -20.50020408630371
    5. ' ' → logprob: -21.75020408630371
    6. 'а' → logprob: -23.12520408630371
    7. '_a' → logprob: -23.25020408630371
    8. '  ' → logprob: -24.25020408630371
    9. '           ' → logprob: -24.37520408630371
    10. '#a' → logprob: -24.37520408630371

Token 399: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -18.375
    3. '[' → logprob: -18.5
    4. ' [' → logprob: -21.25
    5. '(i' → logprob: -22.25
    6. '[I' → logprob: -22.375
    7. ' ' → logprob: -22.5
    8. '```' → logprob: -22.75
    9. '[
' → logprob: -22.875
    10. '{i' → logprob: -23.375

Token 400: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0880812257528305
    2. '       ' → logprob: -2.963081121444702
    3. ')' → logprob: -3.838081121444702
    4. '<|end|>' → logprob: -4.713081359863281
    5. ']
' → logprob: -6.588081359863281
    6. '           ' → logprob: -8.588081359863281
    7. 'else' → logprob: -9.088081359863281
    8. '}' → logprob: -9.213081359863281
    9. ')
' → logprob: -9.463081359863281
    10. '<|end|>' → logprob: -9.588081359863281

Token 401: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24121655523777008
    2. '           ' → logprob: -1.6162165403366089
    3. 'a' → logprob: -4.241216659545898
    4. 'else' → logprob: -7.116216659545898
    5. ' a' → logprob: -8.491216659545898
    6. '<|end|>' → logprob: -9.491216659545898
    7. '   ' → logprob: -9.616216659545898
    8. ' else' → logprob: -10.241216659545898
    9. 'elif' → logprob: -10.741216659545898
    10. 'b' → logprob: -11.116216659545898

Token 402: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3556209206581116
    2. 'a' → logprob: -1.6056208610534668
    3. '           ' → logprob: -2.980620861053467
    4. 'else' → logprob: -3.105620861053467
    5. 'elif' → logprob: -6.855620861053467
    6. 'continue' → logprob: -7.230620861053467
    7. '   ' → logprob: -7.980620861053467
    8. 'ans' → logprob: -8.105621337890625
    9. 'input' → logprob: -8.980621337890625
    10. ' a' → logprob: -9.230621337890625

Token 403: ' Maintenant' (ID: 163349)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007375781424343586
    2. '           ' → logprob: -5.007375717163086
    3. ' a' → logprob: -8.007375717163086
    4. '#' → logprob: -8.632375717163086
    5. '       ' → logprob: -9.757375717163086
    6. '   ' → logprob: -10.257375717163086
    7. 'continue' → logprob: -10.257375717163086
    8. 'else' → logprob: -12.382375717163086
    9. ' continue' → logprob: -12.882375717163086
    10. 'ans' → logprob: -13.007375717163086

Token 404: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.046830836683511734
    2. '           ' → logprob: -3.671830892562866
    3. ' a' → logprob: -4.046830654144287
    4. '   ' → logprob: -6.296830654144287
    5. 'b' → logprob: -8.671831130981445
    6. '#' → logprob: -8.671831130981445
    7. ',' → logprob: -8.796831130981445
    8. ' ' → logprob: -8.921831130981445
    9. '       ' → logprob: -9.046831130981445
    10. '
' → logprob: -9.296831130981445

Token 405: ' il' (ID: 1793)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.45869919657707214
    2. 'if' → logprob: -1.3336992263793945
    3. 'a' → logprob: -3.4586992263793945
    4. '#' → logprob: -3.8336992263793945
    5. 'j' → logprob: -4.0836992263793945
    6. 'i' → logprob: -4.2086992263793945
    7. '           ' → logprob: -4.3336992263793945
    8. '   ' → logprob: -5.9586992263793945
    9. ' if' → logprob: -7.2086992263793945
    10. '       ' → logprob: -7.2086992263793945

Token 406: ' peut' (ID: 9216)
  Prédit: ' faut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.8680998086929321
    2. 's' → logprob: -1.4930998086929321
    3. 'f' → logprob: -2.4930996894836426
    4. '#' → logprob: -2.7430996894836426
    5. ' reste' → logprob: -2.9930996894836426
    6. 'n' → logprob: -3.1180996894836426
    7. '=' → logprob: -3.9930996894836426
    8. ' semble' → logprob: -4.243099689483643
    9. 'ans' → logprob: -4.618099689483643
    10. 'a' → logprob: -4.743099689483643

Token 407: ' rester' (ID: 54655)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.781683623790741
    2. 'ans' → logprob: -2.2816836833953857
    3. ' y' → logprob: -2.2816836833953857
    4. '   ' → logprob: -3.0316836833953857
    5. ' rester' → logprob: -3.2816836833953857
    6. ' rest' → logprob: -3.7816836833953857
    7. 'rest' → logprob: -3.9066836833953857
    8. 'f' → logprob: -3.9066836833953857
    9. 'contin' → logprob: -3.9066836833953857
    10. 'aj' → logprob: -3.9066836833953857

Token 408: ' du' (ID: 1462)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7795813679695129
    2. ' b' → logprob: -2.029581308364868
    3. ' de' → logprob: -2.279581308364868
    4. 'de' → logprob: -2.779581308364868
    5. ' du' → logprob: -3.029581308364868
    6. ' encore' → logprob: -3.029581308364868
    7. ' un' → logprob: -3.279581308364868
    8. 'un' → logprob: -3.654581308364868
    9. ' une' → logprob: -3.904581308364868
    10. 'a' → logprob: -3.904581308364868

Token 409: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16707517206668854
    2. ' b' → logprob: -2.0420751571655273
    3. 'a' → logprob: -3.9170751571655273
    4. ' a' → logprob: -6.042075157165527
    5. 'i' → logprob: -7.917075157165527
    6. 'temps' → logprob: -7.917075157165527
    7. ' i' → logprob: -8.292075157165527
    8. 's' → logprob: -8.542075157165527
    9. 'ans' → logprob: -8.542075157165527
    10. ' temps' → logprob: -8.667075157165527

Token 410: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.012813693843781948
    2. ' b' → logprob: -4.762813568115234
    3. 'a' → logprob: -5.512813568115234
    4. 'i' → logprob: -10.137813568115234
    5. ' a' → logprob: -10.137813568115234
    6. 'ans' → logprob: -10.387813568115234
    7. ' ' → logprob: -11.512813568115234
    8. 's' → logprob: -11.762813568115234
    9. ' i' → logprob: -11.887813568115234
    10. 'temps' → logprob: -12.512813568115234

Token 411: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000321995816193521
    2. '[' → logprob: -8.250322341918945
    3. ' [' → logprob: -10.125322341918945
    4. 'i' → logprob: -11.625322341918945
    5. ' i' → logprob: -12.250322341918945
    6. '[j' → logprob: -13.125322341918945
    7. 'b' → logprob: -13.500322341918945
    8. '   ' → logprob: -14.500322341918945
    9. '(i' → logprob: -14.875322341918945
    10. ' ' → logprob: -15.000322341918945

Token 412: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1164492815732956
    2. ']'' → logprob: -2.2414493560791016
    3. '[i' → logprob: -5.991449356079102
    4. ']>' → logprob: -7.366449356079102
    5. ']'
' → logprob: -8.866449356079102
    6. '']' → logprob: -9.241449356079102
    7. ' ]' → logprob: -9.491449356079102
    8. ']',' → logprob: -9.991449356079102
    9. ''' → logprob: -10.616449356079102
    10. ']')
' → logprob: -10.866449356079102

Token 413: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5228694677352905
    2. ' disponible' → logprob: -2.27286958694458
    3. 'qui' → logprob: -2.52286958694458
    4. ' qui' → logprob: -2.89786958694458
    5. 'à' → logprob: -3.77286958694458
    6. 's' → logprob: -3.89786958694458
    7. 'et' → logprob: -4.02286958694458
    8. 'ains' → logprob: -4.52286958694458
    9. 'available' → logprob: -4.52286958694458
    10. ' à' → logprob: -4.52286958694458

Token 414: ' atta' (ID: 71524)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.14791546761989594
    2. 'aj' → logprob: -3.1479153633117676
    3. ' utiliser' → logprob: -3.6479153633117676
    4. 'contin' → logprob: -4.897915363311768
    5. 'ans' → logprob: -5.147915363311768
    6. '#' → logprob: -5.397915363311768
    7. ' couvrir' → logprob: -5.647915363311768
    8. ' ajouter' → logprob: -5.772915363311768
    9. 'en' → logprob: -5.897915363311768
    10. 's' → logprob: -6.022915363311768

Token 415: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.00024358915106859058
    2. 'q' → logprob: -9.375243186950684
    3. 'que' → logprob: -9.375243186950684
    4. 'qu' → logprob: -11.875243186950684
    5. '```' → logprob: -11.875243186950684
    6. '#' → logprob: -12.000243186950684
    7. '   ' → logprob: -12.000243186950684
    8. '	' → logprob: -12.750243186950684
    9. 'quez' → logprob: -12.750243186950684
    10. '``' → logprob: -12.875243186950684

Token 416: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03921445459127426
    2. ' a' → logprob: -3.2892143726348877
    3. ' ' → logprob: -8.789214134216309
    4. ' la' → logprob: -8.914214134216309
    5. ' (' → logprob: -9.039214134216309
    6. 'l' → logprob: -9.414214134216309
    7. 'la' → logprob: -9.664214134216309
    8. '(' → logprob: -9.789214134216309
    9. 'i' → logprob: -9.914214134216309
    10. ' à' → logprob: -10.039214134216309

Token 417: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007688970770686865
    2. ' a' → logprob: -4.882688999176025
    3. 'i' → logprob: -10.257688522338867
    4. ' ' → logprob: -11.007688522338867
    5. '   ' → logprob: -11.632688522338867
    6. '
' → logprob: -12.257688522338867
    7. ' i' → logprob: -12.632688522338867
    8. 'la' → logprob: -13.632688522338867
    9. 'b' → logprob: -13.757688522338867
    10. '[i' → logprob: -13.882688522338867

Token 418: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010092071170220152
    2. '[' → logprob: -9.250101089477539
    3. '[j' → logprob: -13.250101089477539
    4. 'i' → logprob: -14.125101089477539
    5. '[next' → logprob: -14.250101089477539
    6. '[++' → logprob: -14.875101089477539
    7. '   ' → logprob: -15.000101089477539
    8. ' [' → logprob: -15.250101089477539
    9. ' i' → logprob: -16.00010108947754
    10. '[I' → logprob: -16.12510108947754

Token 419: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015775939682498574
    2. ' +' → logprob: -6.501577377319336
    3. '[i' → logprob: -9.876577377319336
    4. ']' → logprob: -11.376577377319336
    5. '[' → logprob: -12.251577377319336
    6. 'plus' → logprob: -13.251577377319336
    7. '+
' → logprob: -13.626577377319336
    8. '+]' → logprob: -13.626577377319336
    9. '1' → logprob: -14.251577377319336
    10. ']+' → logprob: -14.376577377319336

Token 420: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01600785367190838
    2. '1' → logprob: -4.641007900238037
    3. ' +' → logprob: -5.266007900238037
    4. ']' → logprob: -7.016007900238037
    5. ']+' → logprob: -9.016007423400879
    6. '   ' → logprob: -10.516007423400879
    7. '+i' → logprob: -12.266007423400879
    8. '+]' → logprob: -12.516007423400879
    9. ' plus' → logprob: -13.016007423400879
    10. '[i' → logprob: -13.016007423400879

Token 421: ']',' (ID: 66429)
  Prédit: ']''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']'' → logprob: -0.24972520768642426
    2. ']' → logprob: -1.6247252225875854
    3. ']'
' → logprob: -3.999725103378296
    4. '']' → logprob: -5.999725341796875
    5. ']',' → logprob: -6.624725341796875
    6. ''' → logprob: -6.999725341796875
    7. '+' → logprob: -8.624725341796875
    8. ')'' → logprob: -8.874725341796875
    9. '])' → logprob: -9.124725341796875
    10. ']
' → logprob: -9.499725341796875

Token 422: ' alors' (ID: 17971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2311408966779709
    2. 'ans' → logprob: -2.7311408519744873
    3. ' if' → logprob: -2.8561408519744873
    4. '           ' → logprob: -2.8561408519744873
    5. ' ans' → logprob: -4.606141090393066
    6. '       ' → logprob: -4.981141090393066
    7. 'i' → logprob: -5.106141090393066
    8. '   ' → logprob: -7.231141090393066
    9. ' i' → logprob: -7.231141090393066
    10. '               ' → logprob: -7.231141090393066

Token 423: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04105273634195328
    2. '           ' → logprob: -3.79105281829834
    3. '       ' → logprob: -4.41605281829834
    4. ' if' → logprob: -5.29105281829834
    5. '   ' → logprob: -8.04105281829834
    6. 'i' → logprob: -9.79105281829834
    7. '
' → logprob: -10.54105281829834
    8. 'ans' → logprob: -10.54105281829834
    9. '            
' → logprob: -10.91605281829834
    10. 'for' → logprob: -11.04105281829834

Token 424: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08384788036346436
    2. ' if' → logprob: -3.208847999572754
    3. 'continue' → logprob: -4.333847999572754
    4. 'min' → logprob: -4.833847999572754
    5. '   ' → logprob: -5.083847999572754
    6. ' continue' → logprob: -5.708847999572754
    7. 'ans' → logprob: -6.333847999572754
    8. '           ' → logprob: -6.583847999572754
    9. 'i' → logprob: -6.833847999572754
    10. '       ' → logprob: -7.583847999572754

Token 425: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00013202552509028465
    2. 'ife' → logprob: -9.000131607055664
    3. 'if' → logprob: -12.000131607055664
    4. 'f' → logprob: -14.625131607055664
    5. 'o' → logprob: -14.875131607055664
    6. 'ite' → logprob: -15.250131607055664
    7. 'ifi' → logprob: -15.250131607055664
    8. '#' → logprob: -15.375131607055664
    9. 'ifié' → logprob: -15.625131607055664
    10. '[' → logprob: -16.375131607055664

Token 426: ' cette' (ID: 7696)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34096044301986694
    2. 'if' → logprob: -1.3409605026245117
    3. '       ' → logprob: -3.7159605026245117
    4. '   ' → logprob: -6.090960502624512
    5. '	if' → logprob: -7.715960502624512
    6. ' s' → logprob: -9.715960502624512
    7. '           ' → logprob: -10.090960502624512
    8. 's' → logprob: -10.340960502624512
    9. ' si' → logprob: -10.590960502624512
    10. ' ' → logprob: -10.590960502624512

Token 427: ' possibilité' (ID: 58463)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48340755701065063
    2. ' if' → logprob: -0.9834075570106506
    3. '   ' → logprob: -5.608407497406006
    4. 'i' → logprob: -6.108407497406006
    5. ' i' → logprob: -6.358407497406006
    6. ' ' → logprob: -8.358407974243164
    7. 'poss' → logprob: -8.483407974243164
    8. '[i' → logprob: -8.983407974243164
    9. '
' → logprob: -9.108407974243164
    10. ':' → logprob: -9.233407974243164

Token 428: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10838259756565094
    2. '           ' → logprob: -2.4833827018737793
    3. '.' → logprob: -4.608382701873779
    4. ' if' → logprob: -5.483382701873779
    5. 'if' → logprob: -5.608382701873779
    6. '   ' → logprob: -7.108382701873779
    7. '        
' → logprob: -8.608382225036621
    8. '.
' → logprob: -8.983382225036621
    9. ',' → logprob: -9.233382225036621
    10. '            
' → logprob: -9.608382225036621

Token 429: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2886998653411865
    2. ' if' → logprob: -2.2886998653411865
    3. 'if' → logprob: -2.5386998653411865
    4. '           ' → logprob: -2.6636998653411865
    5. '        
' → logprob: -8.163700103759766
    6. '<|end|>' → logprob: -8.788700103759766
    7. '   ' → logprob: -9.538700103759766
    8. '            
' → logprob: -9.663700103759766
    9. '
' → logprob: -9.913700103759766
    10. '```' → logprob: -10.413700103759766

Token 430: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05145270749926567
    2. '       ' → logprob: -3.17645263671875
    3. ' if' → logprob: -5.55145263671875
    4. '   ' → logprob: -5.92645263671875
    5. '           ' → logprob: -6.30145263671875
    6. 'i' → logprob: -11.05145263671875
    7. '	if' → logprob: -12.05145263671875
    8. 'elif' → logprob: -12.55145263671875
    9. ' ' → logprob: -13.17645263671875
    10. '    ' → logprob: -13.67645263671875

Token 431: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005572011577896774
    2. ' if' → logprob: -8.500556945800781
    3. '       ' → logprob: -8.750556945800781
    4. '   ' → logprob: -9.375556945800781
    5. '           ' → logprob: -9.500556945800781
    6. 'i' → logprob: -10.500556945800781
    7. 'ans' → logprob: -12.375556945800781
    8. '#' → logprob: -14.500556945800781
    9. 'for' → logprob: -14.500556945800781
    10. '```' → logprob: -14.625556945800781

Token 432: ' regarde' (ID: 115760)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022503046318888664
    2. ' if' → logprob: -4.022502899169922
    3. 'for' → logprob: -6.397502899169922
    4. '   ' → logprob: -6.897502899169922
    5. '#' → logprob: -7.522502899169922
    6. 'elif' → logprob: -8.397502899169922
    7. 'continue' → logprob: -8.647502899169922
    8. 'i' → logprob: -9.022502899169922
    9. ' for' → logprob: -9.647502899169922
    10. '=' → logprob: -9.897502899169922

Token 433: ' si' (ID: 1784)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.7390518188476562
    2. 'min' → logprob: -0.9890518188476562
    3. 'if' → logprob: -2.6140518188476562
    4. ' if' → logprob: -3.2390518188476562
    5. '(min' → logprob: -4.364051818847656
    6. '   ' → logprob: -5.114051818847656
    7. '       ' → logprob: -5.364051818847656
    8. 'a' → logprob: -5.614051818847656
    9. ' i' → logprob: -6.364051818847656
    10. 'i' → logprob: -6.864051818847656

Token 434: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05153118073940277
    2. ' i' → logprob: -3.0515310764312744
    3. '   ' → logprob: -7.1765313148498535
    4. 'b' → logprob: -7.1765313148498535
    5. 'n' → logprob: -7.3015313148498535
    6. 'a' → logprob: -8.301530838012695
    7. ' n' → logprob: -8.801530838012695
    8. ' b' → logprob: -8.926530838012695
    9. '(i' → logprob: -9.301530838012695
    10. ' ' → logprob: -9.801530838012695

Token 435: ' reste' (ID: 26769)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06255675852298737
    2. ' i' → logprob: -2.812556743621826
    3. 'n' → logprob: -8.937557220458984
    4. 'a' → logprob: -9.062557220458984
    5. '(i' → logprob: -9.437557220458984
    6. ' next' → logprob: -9.562557220458984
    7. '   ' → logprob: -10.187557220458984
    8. ' n' → logprob: -10.437557220458984
    9. 'b' → logprob: -10.687557220458984
    10. ' ' → logprob: -10.937557220458984

Token 436: ' de' (ID: 334)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.296465516090393
    2. 'if' → logprob: -1.296465516090393
    3. '>' → logprob: -1.546465516090393
    4. ' >' → logprob: -2.5464653968811035
    5. ' de' → logprob: -3.2964653968811035
    6. ' if' → logprob: -3.4214653968811035
    7. 'i' → logprob: -3.6714653968811035
    8. '[i' → logprob: -4.4214653968811035
    9. ' <' → logprob: -4.6714653968811035
    10. ' i' → logprob: -4.6714653968811035

Token 437: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14290301501750946
    2. ' b' → logprob: -2.0179030895233154
    3. 'a' → logprob: -8.767903327941895
    4. ' a' → logprob: -10.517903327941895
    5. ' ' → logprob: -11.517903327941895
    6. 'n' → logprob: -11.642903327941895
    7. '   ' → logprob: -12.267903327941895
    8. ' n' → logprob: -12.455403327941895
    9. 'min' → logprob: -12.580403327941895
    10. ' min' → logprob: -13.205403327941895

Token 438: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004505250137299299
    2. ' b' → logprob: -5.504505157470703
    3. 'a' → logprob: -7.879505157470703
    4. 'n' → logprob: -11.254505157470703
    5. 'i' → logprob: -11.504505157470703
    6. ' a' → logprob: -11.879505157470703
    7. '   ' → logprob: -12.442005157470703
    8. ' ' → logprob: -13.067005157470703
    9. '```' → logprob: -13.129505157470703
    10. '
' → logprob: -13.567005157470703

Token 439: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018816311785485595
    2. 'i' → logprob: -10.000187873840332
    3. '   ' → logprob: -10.250187873840332
    4. '[' → logprob: -10.500187873840332
    5. ']' → logprob: -11.125187873840332
    6. ' [' → logprob: -11.125187873840332
    7. '[j' → logprob: -11.750187873840332
    8. '][' → logprob: -11.750187873840332
    9. ',i' → logprob: -12.000187873840332
    10. ' i' → logprob: -12.125187873840332

Token 440: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06268899142742157
    2. ']'' → logprob: -2.9376890659332275
    3. '']' → logprob: -5.437688827514648
    4. '[i' → logprob: -5.812688827514648
    5. ']>' → logprob: -9.062688827514648
    6. ']>=' → logprob: -9.312688827514648
    7. '+' → logprob: -9.562688827514648
    8. ''' → logprob: -10.062688827514648
    9. ']'
' → logprob: -10.687688827514648
    10. 'i' → logprob: -10.937688827514648

Token 441: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04527181759476662
    2. ' >' → logprob: -3.295271873474121
    3. '>=' → logprob: -5.170271873474121
    4. ' >=' → logprob: -6.545271873474121
    5. ' is' → logprob: -10.795271873474121
    6. ']' → logprob: -11.545271873474121
    7. '#' → logprob: -11.795271873474121
    8. 'if' → logprob: -11.920271873474121
    9. 'and' → logprob: -12.670271873474121
    10. 'b' → logprob: -12.670271873474121

Token 442: ' supérieur' (ID: 98491)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.09088507294654846
    2. ' supérieur' → logprob: -2.7158851623535156
    3. ' >' → logprob: -4.590885162353516
    4. 'sup' → logprob: -5.590885162353516
    5. 'strict' → logprob: -6.090885162353516
    6. 'super' → logprob: -6.465885162353516
    7. 'greater' → logprob: -6.590885162353516
    8. 'plus' → logprob: -7.590885162353516
    9. ' greater' → logprob: -8.465885162353516
    10. 's' → logprob: -8.965885162353516

Token 443: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5921583771705627
    2. '>' → logprob: -1.217158317565918
    3. 'à' → logprob: -2.592158317565918
    4. '=' → logprob: -3.717158317565918
    5. ' >' → logprob: -4.592158317565918
    6. ' a' → logprob: -4.967158317565918
    7. ' ou' → logprob: -4.967158317565918
    8. ' or' → logprob: -5.092158317565918
    9. '   ' → logprob: -5.467158317565918
    10. 'au' → logprob: -5.842158317565918

Token 444: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.07425802201032639
    2. ' ég' → logprob: -3.9492580890655518
    3. ' égal' → logprob: -4.199257850646973
    4. 'equal' → logprob: -4.449257850646973
    5. 'egal' → logprob: -4.449257850646973
    6. 'strict' → logprob: -5.324257850646973
    7. 'ég' → logprob: -5.574257850646973
    8. 'à' → logprob: -5.949257850646973
    9. 'eg' → logprob: -6.699257850646973
    10. '=' → logprob: -7.824257850646973

Token 445: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8980191349983215
    2. ' à' → logprob: -0.8980191349983215
    3. 'à' → logprob: -2.2730190753936768
    4. '           ' → logprob: -2.7730190753936768
    5. ' a' → logprob: -4.273019313812256
    6. ' to' → logprob: -5.898019313812256
    7. 'to' → logprob: -6.648019313812256
    8. '               ' → logprob: -7.648019313812256
    9. '   ' → logprob: -8.023018836975098
    10. '            ' → logprob: -8.898018836975098

Token 446: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0028191357851028442
    2. ' a' → logprob: -5.877819061279297
    3. ' ' → logprob: -12.377819061279297
    4. '1' → logprob: -12.377819061279297
    5. '0' → logprob: -13.002819061279297
    6. '   ' → logprob: -13.377819061279297
    7. '(a' → logprob: -14.752819061279297
    8. 'b' → logprob: -14.877819061279297
    9. '  ' → logprob: -15.377819061279297
    10. ' (' → logprob: -15.627819061279297

Token 447: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015329512534663081
    2. ' a' → logprob: -6.501533031463623
    3. '(a' → logprob: -11.376532554626465
    4. '0' → logprob: -11.876532554626465
    5. ' ' → logprob: -12.626532554626465
    6. ' (' → logprob: -13.001532554626465
    7. '1' → logprob: -13.126532554626465
    8. '(' → logprob: -13.376532554626465
    9. '   ' → logprob: -13.501532554626465
    10. ''a' → logprob: -15.626532554626465

Token 448: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.50000286102295
    3. 'i' → logprob: -14.00000286102295
    4. '[j' → logprob: -15.50000286102295
    5. '[min' → logprob: -15.87500286102295
    6. '[
' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.000001907348633
    8. 'a' → logprob: -17.125001907348633
    9. '```' → logprob: -17.125001907348633
    10. ' [' → logprob: -17.250001907348633

Token 449: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03072512336075306
    2. '[i' → logprob: -3.5307252407073975
    3. ' +' → logprob: -7.280725002288818
    4. '+i' → logprob: -9.655725479125977
    5. '[' → logprob: -9.780725479125977
    6. ']' → logprob: -9.780725479125977
    7. 'i' → logprob: -10.655725479125977
    8. 'plus' → logprob: -10.905725479125977
    9. '[
' → logprob: -11.030725479125977
    10. '[j' → logprob: -11.530725479125977

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026156092062592506
    2. '+' → logprob: -6.502615451812744
    3. 'i' → logprob: -6.877615451812744
    4. ']' → logprob: -10.377615928649902
    5. '   ' → logprob: -11.377615928649902
    6. ']+' → logprob: -11.377615928649902
    7. '[i' → logprob: -11.877615928649902
    8. '```' → logprob: -12.002615928649902
    9. ' i' → logprob: -12.127615928649902
    10. ' ' → logprob: -12.627615928649902

Token 451: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04805692285299301
    2. ']:
' → logprob: -3.9230568408966064
    3. ']:' → logprob: -4.5480570793151855
    4. ']'' → logprob: -5.1730570793151855
    5. '[i' → logprob: -5.2980570793151855
    6. '']' → logprob: -6.0480570793151855
    7. '+' → logprob: -6.7980570793151855
    8. '']:
' → logprob: -7.5480570793151855
    9. ']'
' → logprob: -7.6730570793151855
    10. ']+' → logprob: -7.9230570793151855

Token 452: ''.
' (ID: 49980)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.032368678599596024
    2. 'and' → logprob: -4.7823686599731445
    3. '           ' → logprob: -4.9073686599731445
    4. '       ' → logprob: -5.4073686599731445
    5. ' if' → logprob: -5.7823686599731445
    6. ' +' → logprob: -5.9073686599731445
    7. '+' → logprob: -6.0323686599731445
    8. ':' → logprob: -6.6573686599731445
    9. 'if' → logprob: -7.6573686599731445
    10. ':
' → logprob: -7.7823686599731445

Token 453: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23376263678073883
    2. '           ' → logprob: -1.6087626218795776
    3. ' if' → logprob: -5.358762741088867
    4. '<|end|>' → logprob: -6.608762741088867
    5. '   ' → logprob: -7.233762741088867
    6. 'if' → logprob: -7.858762741088867
    7. ' and' → logprob: -8.358762741088867
    8. '            
' → logprob: -8.608762741088867
    9. ',' → logprob: -8.733762741088867
    10. '        
' → logprob: -8.983762741088867

Token 454: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6764298677444458
    2. 'if' (adapté à ' if') → logprob: -0.9264298677444458
    3. '           ' → logprob: -2.9264297485351562
    4. '       ' → logprob: -3.1764297485351562
    5. '   ' → logprob: -8.551429748535156
    6. '```' → logprob: -10.551429748535156
    7. '            
' → logprob: -11.051429748535156
    8. '	if' → logprob: -11.801429748535156
    9. '        
' → logprob: -11.801429748535156
    10. '
' → logprob: -12.301429748535156

Token 455: ' b' (ID: 287)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.43460550904273987
    2. 'i' → logprob: -1.3096054792404175
    3. ' b' → logprob: -2.934605598449707
    4. 'b' → logprob: -3.559605598449707
    5. ' (' → logprob: -8.059605598449707
    6. '(i' → logprob: -8.184605598449707
    7. ' ' → logprob: -9.059605598449707
    8. 'a' → logprob: -9.559605598449707
    9. ' a' → logprob: -9.684605598449707
    10. '   ' → logprob: -10.309605598449707

Token 456: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1398757123970427e-05
    2. '[' → logprob: -11.750011444091797
    3. ' [' → logprob: -12.750011444091797
    4. 'i' → logprob: -15.750011444091797
    5. '   ' → logprob: -15.750011444091797
    6. ' i' → logprob: -17.500011444091797
    7. ' ' → logprob: -17.500011444091797
    8. '[j' → logprob: -17.625011444091797
    9. '[I' → logprob: -17.750011444091797
    10. ',i' → logprob: -18.125011444091797

Token 457: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021257536485791206
    2. '[i' → logprob: -4.021257400512695
    3. ']>' → logprob: -6.521257400512695
    4. ']>=' → logprob: -6.646257400512695
    5. '[' → logprob: -8.771257400512695
    6. '>' → logprob: -9.396257400512695
    7. ' ]' → logprob: -9.896257400512695
    8. '-' → logprob: -11.896257400512695
    9. '   ' → logprob: -11.896257400512695
    10. 'i' → logprob: -12.271257400512695

Token 458: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.058015525341033936
    2. ' >' → logprob: -2.9330155849456787
    3. '>=' → logprob: -5.9330153465271
    4. ' >=' → logprob: -7.6830153465271
    5. '[' → logprob: -12.308015823364258
    6. '   ' → logprob: -12.683015823364258
    7. ' ' → logprob: -12.808015823364258
    8. '[i' → logprob: -13.433015823364258
    9. '>
' → logprob: -13.808015823364258
    10. ':' → logprob: -14.183015823364258

Token 459: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002815693849697709
    2. ' a' → logprob: -5.8778157234191895
    3. '0' → logprob: -12.627815246582031
    4. ' (' → logprob: -13.252815246582031
    5. '   ' → logprob: -13.252815246582031
    6. '(a' → logprob: -13.377815246582031
    7. ' ' → logprob: -14.127815246582031
    8. '1' → logprob: -14.127815246582031
    9. '(' → logprob: -14.502815246582031
    10. 'n' → logprob: -16.25281524658203

Token 460: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.392202976712724e-06
    2. 'i' → logprob: -12.000006675720215
    3. '[' → logprob: -15.750006675720215
    4. '(i' → logprob: -17.2500057220459
    5. '[min' → logprob: -18.3750057220459
    6. ' i' → logprob: -18.5000057220459
    7. '   ' → logprob: -18.7500057220459
    8. '[next' → logprob: -18.8750057220459
    9. '[j' → logprob: -19.1250057220459
    10. '[
' → logprob: -19.3750057220459

Token 461: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00033832306507974863
    2. ' +' → logprob: -8.125338554382324
    3. ']' → logprob: -10.875338554382324
    4. ']+' → logprob: -12.250338554382324
    5. '   ' → logprob: -12.500338554382324
    6. '[i' → logprob: -12.500338554382324
    7. '1' → logprob: -12.500338554382324
    8. '[' → logprob: -12.750338554382324
    9. '+
' → logprob: -12.875338554382324
    10. '+i' → logprob: -14.000338554382324

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '+' → logprob: -14.750015258789062
    4. '   ' → logprob: -16.000015258789062
    5. '0' → logprob: -17.750015258789062
    6. ']' → logprob: -18.125015258789062
    7. '  ' → logprob: -18.750015258789062
    8. '```' → logprob: -18.875015258789062
    9. '       ' → logprob: -20.250015258789062
    10. '     ' → logprob: -20.312515258789062

Token 463: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.20230434834957123
    2. ']:
' → logprob: -1.7023043632507324
    3. ']:
' → logprob: -7.827304363250732
    4. ']' → logprob: -8.202303886413574
    5. '       ' → logprob: -9.452303886413574
    6. ']:

' → logprob: -10.202303886413574
    7. ' ]' → logprob: -10.327303886413574
    8. ':' → logprob: -10.702303886413574
    9. '   ' → logprob: -11.827303886413574
    10. ']]:
' → logprob: -11.952303886413574

Token 464: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015849737683311105
    2. '           ' → logprob: -7.626585006713867
    3. ' ans' → logprob: -8.126585006713867
    4. 'ans' → logprob: -8.251585006713867
    5. '<|end|>' → logprob: -8.376585006713867
    6. ':
' → logprob: -8.626585006713867
    7. '```' → logprob: -11.126585006713867
    8. '	           ' → logprob: -11.251585006713867
    9. '{
' → logprob: -11.251585006713867
    10. ',' → logprob: -11.501585006713867

Token 465: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7211049795150757
    2. '                   ' → logprob: -1.2211049795150757
    3. '               ' → logprob: -1.7211049795150757
    4. ' ans' → logprob: -3.4711050987243652
    5. '           ' → logprob: -4.971105098724365
    6. 'a' → logprob: -7.221105098724365
    7. '	ans' → logprob: -7.846105098724365
    8. '
' → logprob: -8.721104621887207
    9. '```' → logprob: -8.971104621887207
    10. '   ' → logprob: -8.971104621887207

Token 466: ' Dans' (ID: 22082)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.000667640648316592
    2. '           ' → logprob: -8.000667572021484
    3. ' ans' → logprob: -8.625667572021484
    4. '               ' → logprob: -9.000667572021484
    5. '                   ' → logprob: -11.500667572021484
    6. '```' → logprob: -11.500667572021484
    7. '   ' → logprob: -12.500667572021484
    8. '	ans' → logprob: -12.750667572021484
    9. '       ' → logprob: -13.750667572021484
    10. '
' → logprob: -14.875667572021484

Token 467: ' ce' (ID: 2357)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1961662322282791
    2. 'a' → logprob: -1.9461662769317627
    3. ' ans' → logprob: -5.321166038513184
    4. 'this' → logprob: -5.446166038513184
    5. '           ' → logprob: -5.446166038513184
    6. '
' → logprob: -5.571166038513184
    7. '   ' → logprob: -5.821166038513184
    8. 'b' → logprob: -6.321166038513184
    9. 'range' → logprob: -6.446166038513184
    10. '               ' → logprob: -6.696166038513184

Token 468: ' cas' (ID: 2108)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.849696695804596
    2. '           ' → logprob: -1.3496966361999512
    3. 'if' → logprob: -2.599696636199951
    4. '   ' → logprob: -2.724696636199951
    5. '                   ' → logprob: -2.849696636199951
    6. '               ' → logprob: -2.849696636199951
    7. ' ans' → logprob: -3.599696636199951
    8. 'for' → logprob: -4.599696636199951
    9. '
' → logprob: -5.349696636199951
    10. ' if' → logprob: -5.974696636199951

Token 469: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5040201544761658
    2. '                   ' → logprob: -1.0040202140808105
    3. 'ans' → logprob: -4.5040202140808105
    4. ',' → logprob: -5.1290202140808105
    5. '           ' → logprob: -5.1290202140808105
    6. ' ans' → logprob: -5.5040202140808105
    7. ':' → logprob: -6.5040202140808105
    8. ':
' → logprob: -7.7540202140808105
    9. '
' → logprob: -9.004019737243652
    10. '(ans' → logprob: -9.254019737243652

Token 470: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07639440894126892
    2. ' ans' → logprob: -3.3263943195343018
    3. '                   ' → logprob: -3.9513943195343018
    4. '               ' → logprob: -4.076394557952881
    5. '           ' → logprob: -6.701394557952881
    6. '	ans' → logprob: -9.201394081115723
    7. '   ' → logprob: -10.951394081115723
    8. '                       ' → logprob: -11.076394081115723
    9. '(ans' → logprob: -11.076394081115723
    10. '                ' → logprob: -11.576394081115723

Token 471: ' peut' (ID: 9216)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06404431164264679
    2. ' ans' → logprob: -2.814044237136841
    3. '           ' → logprob: -7.06404447555542
    4. 'aj' → logprob: -7.31404447555542
    5. '               ' → logprob: -8.064043998718262
    6. '                   ' → logprob: -9.689043998718262
    7. '
' → logprob: -10.064043998718262
    8. '	ans' → logprob: -10.564043998718262
    9. '```' → logprob: -11.064043998718262
    10. '(ans' → logprob: -11.189043998718262

Token 472: ' "' (ID: 392)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08544478565454483
    2. ' ans' → logprob: -2.585444688796997
    3. 'aj' → logprob: -6.210444927215576
    4. '   ' → logprob: -6.210444927215576
    5. '           ' → logprob: -6.335444927215576
    6. '       ' → logprob: -8.335444450378418
    7. '               ' → logprob: -8.710444450378418
    8. ' ajouter' → logprob: -9.710444450378418
    9. '	ans' → logprob: -9.960444450378418
    10. '```' → logprob: -9.960444450378418

Token 473: 'd' (ID: 67)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00013119110371917486
    2. 'aj' → logprob: -9.500131607055664
    3. ' ans' → logprob: -10.500131607055664
    4. '           ' → logprob: -11.500131607055664
    5. '	ans' → logprob: -12.625131607055664
    6. '       ' → logprob: -13.000131607055664
    7. '   ' → logprob: -13.000131607055664
    8. 'add' → logprob: -13.250131607055664
    9. '```' → logprob: -13.250131607055664
    10. 'ann' → logprob: -14.000131607055664

Token 474: 'étr' (ID: 35025)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8976404666900635
    2. 'é' → logprob: -1.5226404666900635
    3. 'aj' → logprob: -2.1476404666900635
    4. 'e' → logprob: -2.6476404666900635
    5. 'éc' → logprob: -3.2726404666900635
    6. 'ed' → logprob: -3.7726404666900635
    7. 'égr' → logprob: -3.8976404666900635
    8. 'em' → logprob: -4.522640228271484
    9. 'd' → logprob: -5.022640228271484
    10. 'ej' → logprob: -5.147640228271484

Token 475: 'uire' (ID: 157266)
  Prédit: 'uire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uire' → logprob: -3.452426608419046e-05
    2. 'uit' → logprob: -11.62503433227539
    3. 'uir' → logprob: -11.62503433227539
    4. 'ru' → logprob: -12.00003433227539
    5. 'uite' → logprob: -12.50003433227539
    6. 'u' → logprob: -12.50003433227539
    7. 'ruit' → logprob: -12.87503433227539
    8. 'o' → logprob: -15.87503433227539
    9. 'uis' → logprob: -16.00003433227539
    10. 'oire' → logprob: -16.62503433227539

Token 476: '"' (ID: 1)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34880751371383667
    2. ' a' → logprob: -1.2238075733184814
    3. 'l' → logprob: -9.848807334899902
    4. ' la' → logprob: -9.848807334899902
    5. '"' → logprob: -9.973807334899902
    6. '```' → logprob: -10.473807334899902
    7. '               ' → logprob: -10.598807334899902
    8. 'r' → logprob: -10.848807334899902
    9. 'la' → logprob: -10.973807334899902
    10. ' ' → logprob: -10.973807334899902

Token 477: ' tout' (ID: 5501)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023357054218649864
    2. ' a' → logprob: -3.7733571529388428
    3. '               ' → logprob: -9.398357391357422
    4. '                   ' → logprob: -11.273357391357422
    5. '           ' → logprob: -11.773357391357422
    6. ' ' → logprob: -13.023357391357422
    7. '   ' → logprob: -13.648357391357422
    8. ' the' → logprob: -14.023357391357422
    9. 'l' → logprob: -14.648357391357422
    10. ' toute' → logprob: -14.773357391357422

Token 478: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009248215705156326
    2. ' a' → logprob: -4.75924825668335
    3. '(a' → logprob: -7.88424825668335
    4. 'l' → logprob: -8.634247779846191
    5. ' l' → logprob: -10.634247779846191
    6. 'la' → logprob: -11.259247779846191
    7. ' la' → logprob: -11.384247779846191
    8. ' (' → logprob: -12.009247779846191
    9. '               ' → logprob: -12.134247779846191
    10. '   ' → logprob: -12.134247779846191

Token 479: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001502717612311244
    2. ' a' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.626502990722656
    4. ' ' → logprob: -16.626502990722656
    5. '```' → logprob: -17.001502990722656
    6. '(a' → logprob: -17.751502990722656
    7. '	a' → logprob: -18.001502990722656
    8. '       ' → logprob: -19.251502990722656
    9. '#a' → logprob: -19.251502990722656
    10. '  ' → logprob: -19.376502990722656

Token 480: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.125000953674316
    3. 'i' → logprob: -15.875000953674316
    4. '[next' → logprob: -16.250001907348633
    5. '[++' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '[j' → logprob: -17.875001907348633
    8. ' [' → logprob: -18.750001907348633
    9. '[min' → logprob: -19.000001907348633
    10. '(i' → logprob: -19.375001907348633

Token 481: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00022213248303160071
    2. '[i' → logprob: -8.500222206115723
    3. '[' → logprob: -12.125222206115723
    4. ' +' → logprob: -12.375222206115723
    5. '+i' → logprob: -12.875222206115723
    6. ']' → logprob: -13.125222206115723
    7. '   ' → logprob: -13.500222206115723
    8. 'i' → logprob: -13.625222206115723
    9. '1' → logprob: -14.250222206115723
    10. ']+' → logprob: -15.375222206115723

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003851517685689032
    2. '+' → logprob: -7.875385284423828
    3. ' ' → logprob: -12.750385284423828
    4. ']' → logprob: -14.250385284423828
    5. '   ' → logprob: -14.625385284423828
    6. '```' → logprob: -15.125385284423828
    7. ' +' → logprob: -15.500385284423828
    8. ']+' → logprob: -15.625385284423828
    9. '１' → logprob: -16.875385284423828
    10. '2' → logprob: -17.187885284423828

Token 483: ']'' (ID: 75642)
  Prédit: ']''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']'' → logprob: -0.8467482328414917
    2. ']'
' → logprob: -0.8467482328414917
    3. ']' → logprob: -1.9717482328414917
    4. '[i' → logprob: -6.471748352050781
    5. ']',' → logprob: -7.971748352050781
    6. '']' → logprob: -8.096748352050781
    7. ']"
' → logprob: -8.221748352050781
    8. ']')
' → logprob: -8.471748352050781
    9. '])' → logprob: -8.846748352050781
    10. ']"' → logprob: -8.846748352050781

Token 484: ' grâce' (ID: 31589)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014074998907744884
    2. '           ' → logprob: -5.139074802398682
    3. '                   ' → logprob: -5.264074802398682
    4. ',' → logprob: -7.139074802398682
    5. ' ans' → logprob: -7.139074802398682
    6. 'ans' → logprob: -7.514074802398682
    7. '
' → logprob: -8.51407527923584
    8. ')' → logprob: -9.01407527923584
    9. '       ' → logprob: -9.76407527923584
    10. ')
' → logprob: -9.76407527923584

Token 485: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.458893746137619
    2. 'à' → logprob: -1.0838937759399414
    3. 'a' → logprob: -3.7088937759399414
    4. '   ' → logprob: -5.833893775939941
    5. '           ' → logprob: -7.333893775939941
    6. ' a' → logprob: -7.583893775939941
    7. '               ' → logprob: -7.833893775939941
    8. '```' → logprob: -8.458893775939941
    9. ''à' → logprob: -8.833893775939941
    10. '#' → logprob: -8.958893775939941

Token 486: ' reste' (ID: 26769)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.49093130230903625
    2. 'b' → logprob: -0.9909312725067139
    3. ' b' → logprob: -4.615931510925293
    4. ' a' → logprob: -4.990931510925293
    5. '#' → logprob: -12.490931510925293
    6. ' ' → logprob: -12.865931510925293
    7. '```' → logprob: -12.990931510925293
    8. '
' → logprob: -13.365931510925293
    9. 'ans' → logprob: -13.865931510925293
    10. '   ' → logprob: -14.240931510925293

Token 487: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04330243170261383
    2. '           ' → logprob: -3.293302536010742
    3. 'a' → logprob: -6.168302536010742
    4. '                   ' → logprob: -6.918302536010742
    5. '.' → logprob: -7.918302536010742
    6. '       ' → logprob: -8.043302536010742
    7. ' a' → logprob: -8.293302536010742
    8. ' of' → logprob: -8.418302536010742
    9. ',' → logprob: -8.668302536010742
    10. ' ans' → logprob: -9.168302536010742

Token 488: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18010848760604858
    2. 'b' → logprob: -1.9301085472106934
    3. ' a' → logprob: -4.180108547210693
    4. ' b' → logprob: -5.430108547210693
    5. '```' → logprob: -12.805108070373535
    6. ' ' → logprob: -13.430108070373535
    7. '   ' → logprob: -14.430108070373535
    8. ' the' → logprob: -14.617608070373535
    9. '	a' → logprob: -14.617608070373535
    10. '	b' → logprob: -15.492608070373535

Token 489: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005060368217527866
    2. 'a' → logprob: -5.380060195922852
    3. ' b' → logprob: -7.755060195922852
    4. ' a' → logprob: -11.755060195922852
    5. '```' → logprob: -13.380060195922852
    6. ' ' → logprob: -14.880060195922852
    7. '   ' → logprob: -15.192560195922852
    8. ''b' → logprob: -15.442560195922852
    9. '	b' → logprob: -15.505060195922852
    10. ')b' → logprob: -16.00506019592285

Token 490: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.700132997939363e-05
    2. 'i' → logprob: -11.625017166137695
    3. '[' → logprob: -13.125017166137695
    4. '```' → logprob: -13.250017166137695
    5. '   ' → logprob: -14.000017166137695
    6. ' [' → logprob: -14.125017166137695
    7. '#' → logprob: -14.250017166137695
    8. '[
' → logprob: -14.500017166137695
    9. ']' → logprob: -15.250017166137695
    10. '
' → logprob: -15.500017166137695

Token 491: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18746601045131683
    2. ']'' → logprob: -2.1874659061431885
    3. '[i' → logprob: -2.9374659061431885
    4. '']' → logprob: -5.562466144561768
    5. '+' → logprob: -7.437466144561768
    6. ']',' → logprob: -8.06246566772461
    7. ']')
' → logprob: -8.43746566772461
    8. ']+' → logprob: -8.68746566772461
    9. ']'
' → logprob: -9.06246566772461
    10. '[' → logprob: -9.31246566772461

Token 492: ''.
' (ID: 49980)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16306114196777344
    2. '           ' → logprob: -2.0380611419677734
    3. ')' → logprob: -4.538061141967773
    4. '.' → logprob: -5.538061141967773
    5. ')
' → logprob: -6.788061141967773
    6. '                   ' → logprob: -6.788061141967773
    7. ',' → logprob: -7.538061141967773
    8. '')' → logprob: -7.663061141967773
    9. ']' → logprob: -8.038061141967773
    10. '.
' → logprob: -8.288061141967773

Token 493: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00540747307240963
    2. '                   ' → logprob: -5.880407333374023
    3. '           ' → logprob: -6.130407333374023
    4. ' ans' → logprob: -8.505407333374023
    5. 'ans' → logprob: -8.630407333374023
    6. '```' → logprob: -10.880407333374023
    7. '       ' → logprob: -11.630407333374023
    8. '   ' → logprob: -12.505407333374023
    9. '                       ' → logprob: -12.755407333374023
    10. '(ans' → logprob: -13.005407333374023

Token 494: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0006956351571716368
    2. '               ' → logprob: -7.750695705413818
    3. '           ' → logprob: -8.62569522857666
    4. ' ans' → logprob: -9.50069522857666
    5. '       ' → logprob: -12.50069522857666
    6. '   ' → logprob: -12.50069522857666
    7. '	ans' → logprob: -13.00069522857666
    8. '```' → logprob: -14.87569522857666
    9. '(ans' → logprob: -15.25069522857666
    10. '                   ' → logprob: -15.75069522857666

Token 495: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759479999542236
    2. ' +=' → logprob: -0.8259479999542236
    3. ']+=' → logprob: -12.450947761535645
    4. '   ' → logprob: -13.200947761535645
    5. '+' → logprob: -13.575947761535645
    6. '+=(' → logprob: -14.950947761535645
    7. ' ' → logprob: -15.325947761535645
    8. '=' → logprob: -15.450947761535645
    9. '    ' → logprob: -15.575947761535645
    10. '       ' → logprob: -15.950947761535645

Token 496: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.75020408630371
    4. '	a' → logprob: -18.87520408630371
    5. '       ' → logprob: -19.75020408630371
    6. '           ' → logprob: -20.00020408630371
    7. ' ' → logprob: -20.00020408630371
    8. '
' → logprob: -21.12520408630371
    9. '               ' → logprob: -21.12520408630371
    10. '  ' → logprob: -21.37520408630371

Token 497: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. 'i' → logprob: -15.875000953674316
    4. '[++' → logprob: -19.5
    5. '[next' → logprob: -19.625
    6. '[I' → logprob: -19.75
    7. '[
' → logprob: -20.125
    8. '{i' → logprob: -20.5
    9. ' [' → logprob: -20.5
    10. '```' → logprob: -20.5

Token 498: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001696902181720361
    2. '[i' → logprob: -8.87516975402832
    3. '[' → logprob: -11.37516975402832
    4. '+i' → logprob: -11.37516975402832
    5. '1' → logprob: -12.50016975402832
    6. ' +' → logprob: -13.87516975402832
    7. '+
' → logprob: -14.50016975402832
    8. ']+' → logprob: -14.75016975402832
    9. 'i' → logprob: -14.87516975402832
    10. '[
' → logprob: -15.12516975402832

Token 499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.47626737493556e-05
    2. 'i' → logprob: -11.00003433227539
    3. '+' → logprob: -11.62503433227539
    4. '[i' → logprob: -12.12503433227539
    5. ' ' → logprob: -13.50003433227539
    6. '   ' → logprob: -14.37503433227539
    7. '[' → logprob: -14.62503433227539
    8. '```' → logprob: -15.25003433227539
    9. '[next' → logprob: -15.62503433227539
    10. '0' → logprob: -15.68753433227539

Token 500: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39080002903938293
    2. ']
' → logprob: -1.1407999992370605
    3. ')' → logprob: -6.0157999992370605
    4. ')
' → logprob: -6.6407999992370605
    5. '<|end|>' → logprob: -9.765800476074219
    6. '])' → logprob: -10.765800476074219
    7. '']' → logprob: -10.765800476074219
    8. ']
' → logprob: -10.890800476074219
    9. ')]' → logprob: -11.390800476074219
    10. '])
' → logprob: -11.765800476074219

Token 501: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10815377533435822
    2. 'b' → logprob: -2.733153820037842
    3. '           ' → logprob: -3.608153820037842
    4. '                
' → logprob: -6.108153820037842
    5. '
' → logprob: -6.483153820037842
    6. '```' → logprob: -6.608153820037842
    7. '       ' → logprob: -6.733153820037842
    8. ' b' → logprob: -7.108153820037842
    9. '                   ' → logprob: -7.108153820037842
    10. '            
' → logprob: -7.233153820037842

Token 502: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02748873457312584
    2. 'b' → logprob: -3.6524887084960938
    3. '               ' → logprob: -7.277488708496094
    4. ' a' → logprob: -7.902488708496094
    5. '           ' → logprob: -9.152488708496094
    6. ' b' → logprob: -11.777488708496094
    7. '       ' → logprob: -12.402488708496094
    8. '```' → logprob: -13.027488708496094
    9. ')' → logprob: -13.527488708496094
    10. '                   ' → logprob: -13.652488708496094

Token 503: ' Met' (ID: 7227)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5766135454177856
    2. 'b' → logprob: -0.8266135454177856
    3. '               ' → logprob: -7.451613426208496
    4. '           ' → logprob: -10.451613426208496
    5. ' a' → logprob: -10.576613426208496
    6. '                   ' → logprob: -11.076613426208496
    7. ' b' → logprob: -11.326613426208496
    8. '```' → logprob: -12.826613426208496
    9. '   ' → logprob: -13.326613426208496
    10. '              ' → logprob: -13.451613426208496

Token 504: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004950174130499363
    2. 'b' → logprob: -5.379950046539307
    3. '   ' → logprob: -8.879950523376465
    4. '           ' → logprob: -9.504950523376465
    5. '               ' → logprob: -9.879950523376465
    6. '       ' → logprob: -11.004950523376465
    7. ' a' → logprob: -11.004950523376465
    8. '```' → logprob: -11.379950523376465
    9. '0' → logprob: -12.504950523376465
    10. '                   ' → logprob: -12.504950523376465

Token 505: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02686295472085476
    2. 'jour' → logprob: -4.151863098144531
    3. 'z' → logprob: -4.776863098144531
    4. 'zero' → logprob: -7.026863098144531
    5. '```' → logprob: -7.151863098144531
    6. 'b' → logprob: -8.651863098144531
    7. 'j' → logprob: -9.026863098144531
    8. 'jours' → logprob: -9.026863098144531
    9. ' jour' → logprob: -9.276863098144531
    10. 'a' → logprob: -9.526863098144531

Token 506: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006427380722016096
    2. 'a' → logprob: -7.375642776489258
    3. 'b' → logprob: -12.250642776489258
    4. 'zero' → logprob: -12.750642776489258
    5. ' ' → logprob: -12.875642776489258
    6. 'i' → logprob: -13.000642776489258
    7. 'n' → logprob: -13.875642776489258
    8. '```' → logprob: -14.000642776489258
    9. 'jour' → logprob: -14.500642776489258
    10. 'j' → logprob: -15.000642776489258

Token 507: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005622646771371365
    2. ' a' → logprob: -5.255622863769531
    3. 'b' → logprob: -8.005622863769531
    4. ' b' → logprob: -10.505622863769531
    5. '               ' → logprob: -10.630622863769531
    6. '                   ' → logprob: -13.130622863769531
    7. '```' → logprob: -14.630622863769531
    8. '(a' → logprob: -14.755622863769531
    9. '       ' → logprob: -15.255622863769531
    10. '           ' → logprob: -15.630622863769531

Token 508: ' car' (ID: 1669)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012302312068641186
    2. 'b' → logprob: -4.762302398681641
    3. ' a' → logprob: -5.887302398681641
    4. '               ' → logprob: -7.262302398681641
    5. '                   ' → logprob: -9.38730239868164
    6. ' b' → logprob: -9.38730239868164
    7. '           ' → logprob: -11.13730239868164
    8. '   ' → logprob: -12.51230239868164
    9. '       ' → logprob: -12.51230239868164
    10. '                       ' → logprob: -12.63730239868164

Token 509: ' tout' (ID: 5501)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015284325927495956
    2. ' a' → logprob: -7.001528263092041
    3. 'b' → logprob: -7.626528263092041
    4. '                   ' → logprob: -9.6265287399292
    5. '               ' → logprob: -10.0015287399292
    6. '   ' → logprob: -12.3765287399292
    7. '                       ' → logprob: -12.7515287399292
    8. ' b' → logprob: -12.8765287399292
    9. '           ' → logprob: -13.3765287399292
    10. '                ' → logprob: -14.0015287399292

Token 510: ' est' (ID: 893)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06209753826260567
    2. ' a' → logprob: -2.8120975494384766
    3. 'b' → logprob: -10.687097549438477
    4. '   ' → logprob: -10.937097549438477
    5. ' b' → logprob: -11.187097549438477
    6. 'l' → logprob: -11.437097549438477
    7. ' ' → logprob: -11.437097549438477
    8. '               ' → logprob: -11.562097549438477
    9. '           ' → logprob: -11.812097549438477
    10. '#' → logprob: -12.062097549438477

Token 511: ' consomm' (ID: 45779)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5768498778343201
    2. 'd' → logprob: -1.0768499374389648
    3. ' détr' → logprob: -2.701849937438965
    4. 'b' → logprob: -4.451849937438965
    5. ' a' → logprob: -4.826849937438965
    6. 'util' → logprob: -5.076849937438965
    7. 'dé' → logprob: -6.451849937438965
    8. 'destroy' → logprob: -6.951849937438965
    9. ' utilisé' → logprob: -7.326849937438965
    10. '```' → logprob: -8.076849937438965

Token 512: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00026062061078846455
    2. 'e' → logprob: -9.000260353088379
    3. 'a' → logprob: -9.375260353088379
    4. 'ée' → logprob: -10.000260353088379
    5. 'b' → logprob: -12.875260353088379
    6. 'ed' → logprob: -13.000260353088379
    7. 'ré' → logprob: -14.625260353088379
    8. 'u' → logprob: -14.750260353088379
    9. 'è' → logprob: -15.000260353088379
    10. 'à' → logprob: -15.625260353088379

Token 513: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3431161940097809
    2. '               ' → logprob: -1.4681161642074585
    3. ' a' → logprob: -3.093116283416748
    4. 'b' → logprob: -4.468116283416748
    5. ' b' → logprob: -6.468116283416748
    6. '                   ' → logprob: -7.468116283416748
    7. '           ' → logprob: -7.843116283416748
    8. ',' → logprob: -7.968116283416748
    9. '.' → logprob: -8.46811580657959
    10. '              ' → logprob: -10.34311580657959

Token 514: '               ' (ID: 506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00044353955308906734
    2. '               ' → logprob: -8.125443458557129
    3. ' a' → logprob: -9.250443458557129
    4. 'b' → logprob: -10.000443458557129
    5. '```' → logprob: -12.625443458557129
    6. '           ' → logprob: -13.250443458557129
    7. '       ' → logprob: -14.625443458557129
    8. '   ' → logprob: -15.375443458557129
    9. '                   ' → logprob: -16.000444412231445
    10. '              ' → logprob: -16.500444412231445

Token 515: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.005956052802503109
    2. 'b' → logprob: -5.130956172943115
    3. ' a' → logprob: -11.255955696105957
    4. '               ' → logprob: -12.005955696105957
    5. '           ' → logprob: -12.380955696105957
    6. '   ' → logprob: -13.380955696105957
    7. '                   ' → logprob: -13.630955696105957
    8. '       ' → logprob: -14.130955696105957
    9. '```' → logprob: -15.880955696105957
    10. ' b' → logprob: -16.005956649780273

Token 516: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.875003814697266
    3. 'i' → logprob: -14.250003814697266
    4. '[a' → logprob: -16.625003814697266
    5. ' [' → logprob: -17.375003814697266
    6. '```' → logprob: -17.375003814697266
    7. '[next' → logprob: -17.500003814697266
    8. '   ' → logprob: -18.500003814697266
    9. '\[' → logprob: -18.625003814697266
    10. '[I' → logprob: -19.000003814697266

Token 517: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00013738969573751092
    2. '1' → logprob: -9.000137329101562
    3. ' +' → logprob: -11.625137329101562
    4. ']+' → logprob: -13.625137329101562
    5. '+i' → logprob: -13.750137329101562
    6. '+
' → logprob: -14.000137329101562
    7. ']' → logprob: -14.125137329101562
    8. '[' → logprob: -14.250137329101562
    9. 'i' → logprob: -16.125137329101562
    10. '   ' → logprob: -16.250137329101562

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. '+' → logprob: -11.500011444091797
    3. ' ' → logprob: -14.125011444091797
    4. '   ' → logprob: -15.375011444091797
    5. '```' → logprob: -15.812511444091797
    6. '
' → logprob: -15.937511444091797
    7. '１' → logprob: -17.312511444091797
    8. ']' → logprob: -18.062511444091797
    9. '۱' → logprob: -18.062511444091797
    10. '१' → logprob: -18.125011444091797

Token 519: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015389078762382269
    2. ']=' → logprob: -6.5015387535095215
    3. '=' → logprob: -10.25153923034668
    4. '[i' → logprob: -14.75153923034668
    5. ' ]' → logprob: -15.12653923034668
    6. '']' → logprob: -15.25153923034668
    7. '[' → logprob: -16.37653923034668
    8. ' =' → logprob: -17.25153923034668
    9. '"]' → logprob: -17.50153923034668
    10. ']]' → logprob: -17.75153923034668

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011706985533237457
    2. ' =' → logprob: -6.751170635223389
    3. '-=' → logprob: -14.751171112060547
    4. '.=' → logprob: -17.126171112060547
    5. ' -=' → logprob: -17.626171112060547
    6. '＝' → logprob: -18.126171112060547
    7. '=
' → logprob: -18.126171112060547
    8. ')=' → logprob: -18.876171112060547
    9. '=

' → logprob: -19.001171112060547
    10. '*=' → logprob: -19.501171112060547

Token 521: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -20.375003814697266
    4. '   ' → logprob: -20.750003814697266
    5. '00' → logprob: -22.000003814697266
    6. '000' → logprob: -22.250003814697266
    7. '```' → logprob: -22.375003814697266
    8. '  ' → logprob: -22.875003814697266
    9. '０' → logprob: -22.875003814697266
    10. ' ' → logprob: -23.375003814697266

Token 522: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.750001907348633
    4. '000' → logprob: -18.875001907348633
    5. '00' → logprob: -19.625001907348633
    6. '```' → logprob: -20.500001907348633
    7. '۰' → logprob: -20.625001907348633
    8. '  ' → logprob: -21.312501907348633
    9. 'def' → logprob: -21.937501907348633
    10. '#' → logprob: -22.125001907348633

Token 523: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.14514824748039246
    2. ' else' → logprob: -2.395148277282715
    3. '           ' → logprob: -3.520148277282715
    4. '       ' → logprob: -4.770148277282715
    5. 'b' → logprob: -5.895148277282715
    6. '               ' → logprob: -6.770148277282715
    7. '<|end|>' → logprob: -6.895148277282715
    8. 'elif' → logprob: -7.395148277282715
    9. '            
' → logprob: -9.770148277282715
    10. '   ' → logprob: -9.895148277282715

Token 524: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6411463022232056
    2. ' else' → logprob: -1.5161463022232056
    3. '       ' → logprob: -1.6411463022232056
    4. '           ' → logprob: -3.266146183013916
    5. 'b' → logprob: -4.391146183013916
    6. '               ' → logprob: -5.641146183013916
    7. '   ' → logprob: -6.516146183013916
    8. ' b' → logprob: -7.141146183013916
    9. '<|end|>' → logprob: -7.141146183013916
    10. 'elif' → logprob: -7.266146183013916

Token 525: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5582475066184998
    2. 'else' (adapté à ' else') → logprob: -1.1832475662231445
    3. '       ' → logprob: -2.1832475662231445
    4. '           ' → logprob: -5.0582475662231445
    5. '   ' → logprob: -7.0582475662231445
    6. '	else' → logprob: -8.058247566223145
    7. '<|end|>' → logprob: -8.183247566223145
    8. ' ' → logprob: -8.308247566223145
    9. '    ' → logprob: -8.558247566223145
    10. '        ' → logprob: -9.433247566223145

Token 526: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3586854338645935
    2. ':' → logprob: -1.6086854934692383
    3. '               ' → logprob: -2.6086854934692383
    4. '           ' → logprob: -3.8586854934692383
    5. ' :
' → logprob: -6.733685493469238
    6. '{
' → logprob: -6.983685493469238
    7. '<|end|>' → logprob: -6.983685493469238
    8. '{' → logprob: -7.108685493469238
    9. '):
' → logprob: -7.608685493469238
    10. '       ' → logprob: -7.858685493469238

Token 527: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2580842971801758
    2. '           ' → logprob: -1.5080842971801758
    3. ' a' → logprob: -6.508084297180176
    4. 'a' → logprob: -6.633084297180176
    5. ' ans' → logprob: -6.633084297180176
    6. '```' → logprob: -7.633084297180176
    7. 'b' → logprob: -8.258084297180176
    8. '       ' → logprob: -8.508084297180176
    9. '   ' → logprob: -8.758084297180176
    10. '	       ' → logprob: -9.008084297180176

Token 528: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9159708023071289
    2. ' ans' → logprob: -1.040970802307129
    3. '           ' → logprob: -1.665970802307129
    4. 'ans' → logprob: -3.415970802307129
    5. '   ' → logprob: -5.665970802307129
    6. '            ' → logprob: -5.790970802307129
    7. '       ' → logprob: -5.790970802307129
    8. '                ' → logprob: -5.915970802307129
    9. '	ans' → logprob: -5.915970802307129
    10. ' #' → logprob: -6.165970802307129

Token 529: ' Sinon' (ID: 154924)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38709551095962524
    2. ' ans' → logprob: -2.1370954513549805
    3. ' a' → logprob: -2.2620954513549805
    4. 'ans' → logprob: -2.3870954513549805
    5. '           ' → logprob: -5.5120954513549805
    6. '               ' → logprob: -6.3870954513549805
    7. '   ' → logprob: -7.1370954513549805
    8. ' ' → logprob: -9.51209545135498
    9. '       ' → logprob: -9.51209545135498
    10. '#' → logprob: -9.76209545135498

Token 530: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8357967734336853
    2. ' a' → logprob: -0.8357967734336853
    3. '               ' → logprob: -2.71079683303833
    4. ' ans' → logprob: -4.08579683303833
    5. ':' → logprob: -4.21079683303833
    6. '           ' → logprob: -4.33579683303833
    7. ':
' → logprob: -4.58579683303833
    8. '                   ' → logprob: -4.96079683303833
    9. '   ' → logprob: -6.58579683303833
    10. 'ans' → logprob: -7.33579683303833

Token 531: ' il' (ID: 1793)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7415648102760315
    2. ' ans' → logprob: -0.9915648102760315
    3. '               ' → logprob: -1.9915647506713867
    4. '           ' → logprob: -4.241564750671387
    5. 'a' → logprob: -7.116564750671387
    6. '	ans' → logprob: -8.366564750671387
    7. ' a' → logprob: -8.491564750671387
    8. '#' → logprob: -9.491564750671387
    9. ' ' → logprob: -9.616564750671387
    10. '   ' → logprob: -9.616564750671387

Token 532: ' ne' (ID: 453)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08693704009056091
    2. ' ans' → logprob: -2.5869369506835938
    3. '           ' → logprob: -6.461936950683594
    4. 'aj' → logprob: -6.961936950683594
    5. '	ans' → logprob: -6.961936950683594
    6. '   ' → logprob: -7.086936950683594
    7. '+=' → logprob: -7.086936950683594
    8. '       ' → logprob: -7.086936950683594
    9. '(ans' → logprob: -7.961936950683594
    10. 'n' → logprob: -8.086936950683594

Token 533: ' reste' (ID: 26769)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.123282551765442
    2. 'rest' → logprob: -1.248282551765442
    3. 'ans' → logprob: -1.373282551765442
    4. 'reste' → logprob: -2.7482824325561523
    5. ' reste' → logprob: -3.4982824325561523
    6. ' rest' → logprob: -4.373282432556152
    7. 'aj' → logprob: -4.998282432556152
    8. 'a' → logprob: -4.998282432556152
    9. '       ' → logprob: -5.873282432556152
    10. '           ' → logprob: -6.123282432556152

Token 534: ' pas' (ID: 2173)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.7124934792518616
    2. 'qu' → logprob: -1.3374934196472168
    3. ' que' → logprob: -2.212493419647217
    4. 'pas' → logprob: -2.962493419647217
    5. '               ' → logprob: -3.712493419647217
    6. ' qu' → logprob: -4.087493419647217
    7. 'plus' → logprob: -4.087493419647217
    8. ' pas' → logprob: -4.337493419647217
    9. '           ' → logprob: -5.087493419647217
    10. 'a' → logprob: -5.962493419647217

Token 535: ' assez' (ID: 33376)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08614510297775269
    2. ' a' → logprob: -3.9611451625823975
    3. 'de' → logprob: -4.211144924163818
    4. ' b' → logprob: -4.336144924163818
    5. ' assez' → logprob: -4.461144924163818
    6. 'b' → logprob: -4.711144924163818
    7. 'a' → logprob: -5.086144924163818
    8. ' d' → logprob: -6.586144924163818
    9. 's' → logprob: -6.586144924163818
    10. '       ' → logprob: -6.961144924163818

Token 536: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5019799470901489
    2. ' a' → logprob: -1.501979947090149
    3. ' à' → logprob: -2.7519798278808594
    4. 'a' → logprob: -2.7519798278808594
    5. ' pour' → logprob: -3.7519798278808594
    6. ' b' → logprob: -5.001979827880859
    7. 'de' → logprob: -5.376979827880859
    8. ' d' → logprob: -5.626979827880859
    9. 'b' → logprob: -6.376979827880859
    10. 'à' → logprob: -6.501979827880859

Token 537: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11304080486297607
    2. ' b' → logprob: -2.2380409240722656
    3. 'a' → logprob: -8.613040924072266
    4. ' a' → logprob: -10.488040924072266
    5. ' ' → logprob: -12.363040924072266
    6. ' ' → logprob: -13.363040924072266
    7. '	b' → logprob: -13.488040924072266
    8. '_b' → logprob: -15.613040924072266
    9. 'val' → logprob: -15.738040924072266
    10. '```' → logprob: -15.738040924072266

Token 538: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005947356694377959
    2. ' b' → logprob: -7.500594615936279
    3. 'a' → logprob: -10.125595092773438
    4. ' ' → logprob: -14.000595092773438
    5. ' a' → logprob: -14.625595092773438
    6. '```' → logprob: -15.875595092773438
    7. '   ' → logprob: -16.250595092773438
    8. '	b' → logprob: -16.375595092773438
    9. '  ' → logprob: -17.125595092773438
    10. '
' → logprob: -17.375595092773438

Token 539: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005518406978808343
    2. '[' → logprob: -7.625551700592041
    3. ' [' → logprob: -9.7505521774292
    4. 'i' → logprob: -12.5005521774292
    5. '   ' → logprob: -14.8755521774292
    6. ' i' → logprob: -15.2505521774292
    7. ' ' → logprob: -15.3755521774292
    8. '[j' → logprob: -15.3755521774292
    9. ']' → logprob: -15.5005521774292
    10. '```' → logprob: -16.125551223754883

Token 540: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6970763802528381
    2. '[i' → logprob: -0.6970763802528381
    3. '']' → logprob: -6.822076320648193
    4. ']'' → logprob: -7.322076320648193
    5. ']>=' → logprob: -7.697076320648193
    6. ' ]' → logprob: -7.947076320648193
    7. '[' → logprob: -8.322076797485352
    8. ''' → logprob: -8.322076797485352
    9. ']-' → logprob: -9.197076797485352
    10. ' pour' → logprob: -9.322076797485352

Token 541: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9275527596473694
    2. '               ' → logprob: -0.9275527596473694
    3. ' to' → logprob: -2.0525527000427246
    4. 'to' → logprob: -4.177552700042725
    5. '                   ' → logprob: -4.427552700042725
    6. ' for' → logprob: -4.802552700042725
    7. ' ans' → logprob: -4.927552700042725
    8. 'a' → logprob: -5.302552700042725
    9. 'for' → logprob: -5.677552700042725
    10. '       ' → logprob: -5.802552700042725

Token 542: ' tout' (ID: 5501)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8546504974365234
    2. 'atta' → logprob: -1.1046504974365234
    3. ' atta' → logprob: -1.8546504974365234
    4. 'aj' → logprob: -3.4796504974365234
    5. ' a' → logprob: -3.8546504974365234
    6. 'att' → logprob: -3.9796504974365234
    7. 'ans' → logprob: -5.604650497436523
    8. ' ajouter' → logprob: -6.604650497436523
    9. 'augment' → logprob: -6.604650497436523
    10. 'b' → logprob: -6.854650497436523

Token 543: ' faire' (ID: 8119)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02716638147830963
    2. 'cons' → logprob: -4.277166366577148
    3. 'atta' → logprob: -5.777166366577148
    4. 'd' → logprob: -6.277166366577148
    5. 'util' → logprob: -6.527166366577148
    6. ' a' → logprob: -6.777166366577148
    7. ' atta' → logprob: -7.402166366577148
    8. ' couvrir' → logprob: -7.402166366577148
    9. '#' → logprob: -7.527166366577148
    10. 'b' → logprob: -7.652166366577148

Token 544: ';
' (ID: 307)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04153361916542053
    2. 'atta' → logprob: -4.791533470153809
    3. 'd' → logprob: -5.416533470153809
    4. 'c' → logprob: -5.416533470153809
    5. 'b' → logprob: -5.541533470153809
    6. '   ' → logprob: -5.791533470153809
    7. '```' → logprob: -5.791533470153809
    8. 'cons' → logprob: -6.291533470153809
    9. ' détr' → logprob: -6.416533470153809
    10. ' a' → logprob: -6.791533470153809

Token 545: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12715309858322144
    2. 'a' → logprob: -2.752153158187866
    3. ' a' → logprob: -3.002153158187866
    4. ' ans' → logprob: -5.877152919769287
    5. '           ' → logprob: -6.002152919769287
    6. 'ans' → logprob: -8.752153396606445
    7. '                ' → logprob: -9.252153396606445
    8. '   ' → logprob: -9.252153396606445
    9. '       ' → logprob: -9.627153396606445
    10. '                   ' → logprob: -9.752153396606445

Token 546: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38995563983917236
    2. ' a' → logprob: -1.2649556398391724
    3. '               ' → logprob: -3.264955520629883
    4. '           ' → logprob: -6.889955520629883
    5. ' ans' → logprob: -7.014955520629883
    6. '                ' → logprob: -8.514955520629883
    7. 'ans' → logprob: -8.889955520629883
    8. '   ' → logprob: -10.014955520629883
    9. '            ' → logprob: -10.014955520629883
    10. '       ' → logprob: -10.639955520629883

Token 547: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08941801637411118
    2. ' a' → logprob: -2.4644179344177246
    3. '               ' → logprob: -7.714417934417725
    4. '           ' → logprob: -10.839418411254883
    5. '   ' → logprob: -12.214418411254883
    6. ' ' → logprob: -13.089418411254883
    7. '       ' → logprob: -14.089418411254883
    8. '                ' → logprob: -14.089418411254883
    9. '                   ' → logprob: -14.214418411254883
    10. 'ans' → logprob: -14.589418411254883

Token 548: ' ajoute' (ID: 91611)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7601994276046753
    2. 'a' → logprob: -1.1351994276046753
    3. ' ans' → logprob: -2.010199546813965
    4. '               ' → logprob: -2.885199546813965
    5. ' a' → logprob: -4.510199546813965
    6. '           ' → logprob: -4.885199546813965
    7. '	ans' → logprob: -7.635199546813965
    8. 'aj' → logprob: -7.885199546813965
    9. 'add' → logprob: -8.135199546813965
    10. '   ' → logprob: -8.135199546813965

Token 549: ' ce' (ID: 2357)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4299379289150238
    2. 'b' → logprob: -1.0549379587173462
    3. '               ' → logprob: -6.929937839508057
    4. '           ' → logprob: -8.804938316345215
    5. ' ans' → logprob: -10.304938316345215
    6. '                   ' → logprob: -10.929938316345215
    7. '                ' → logprob: -11.554938316345215
    8. '	b' → logprob: -11.804938316345215
    9. '            ' → logprob: -12.054938316345215
    10. ' ' → logprob: -12.054938316345215

Token 550: ' qu' (ID: 474)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16907861828804016
    2. 'b' → logprob: -1.9190785884857178
    3. ' ans' → logprob: -5.294078826904297
    4. '   ' → logprob: -6.169078826904297
    5. '           ' → logprob: -7.919078826904297
    6. '               ' → logprob: -8.044078826904297
    7. '       ' → logprob: -8.419078826904297
    8. ' ' → logprob: -8.919078826904297
    9. ' ' → logprob: -9.169078826904297
    10. 'a' → logprob: -9.294078826904297

Token 551: ''il' (ID: 14683)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31390640139579773
    2. ' b' → logprob: -2.18890643119812
    3. 'b' → logprob: -2.68890643119812
    4. ' reste' → logprob: -3.18890643119812
    5. 'e' → logprob: -4.563906192779541
    6. ' a' → logprob: -4.688906192779541
    7. ' +=' → logprob: -5.063906192779541
    8. ' ans' → logprob: -5.188906192779541
    9. 'n' → logprob: -5.313906192779541
    10. ' rest' → logprob: -6.188906192779541

Token 552: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.3740534782409668
    2. ' reste' → logprob: -1.3740534782409668
    3. 'rest' → logprob: -2.874053478240967
    4. ' rest' → logprob: -6.249053478240967
    5. 'a' → logprob: -8.874053955078125
    6. ' resta' → logprob: -9.249053955078125
    7. ' a' → logprob: -9.249053955078125
    8. 'b' → logprob: -9.249053955078125
    9. 'pe' → logprob: -10.749053955078125
    10. 'y' → logprob: -11.374053955078125

Token 553: ' de' (ID: 334)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.001078486442566
    2. ' +=' → logprob: -1.001078486442566
    3. ' b' → logprob: -2.0010786056518555
    4. '               ' → logprob: -3.0010786056518555
    5. '           ' → logprob: -3.6260786056518555
    6. ' +' → logprob: -4.0010786056518555
    7. ' à' → logprob: -4.1260786056518555
    8. '+' → logprob: -5.3760786056518555
    9. '+=' → logprob: -5.5010786056518555
    10. '                   ' → logprob: -5.7510786056518555

Token 554: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740896224975586
    2. ' b' → logprob: -0.9740896224975586
    3. '```' → logprob: -12.724089622497559
    4. ' ' → logprob: -13.349089622497559
    5. ''b' → logprob: -13.349089622497559
    6. ' ' → logprob: -13.474089622497559
    7. '	b' → logprob: -13.599089622497559
    8. '`' → logprob: -13.974089622497559
    9. 'a' → logprob: -14.724089622497559
    10. '   ' → logprob: -15.599089622497559

Token 555: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.026303434744477272
    2. ' b' → logprob: -3.65130352973938
    3. ' ' → logprob: -14.0263032913208
    4. ''b' → logprob: -14.1513032913208
    5. '	b' → logprob: -14.2763032913208
    6. '   ' → logprob: -15.1513032913208
    7. '```' → logprob: -15.4013032913208
    8. ')b' → logprob: -16.026304244995117
    9. '`' → logprob: -16.651304244995117
    10. '_b' → logprob: -16.901304244995117

Token 556: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003609680861700326
    2. '[' → logprob: -8.000361442565918
    3. ' [' → logprob: -10.625361442565918
    4. 'i' → logprob: -14.500361442565918
    5. ' i' → logprob: -15.000361442565918
    6. '```' → logprob: -15.500361442565918
    7. ' ' → logprob: -16.6253604888916
    8. '(i' → logprob: -16.8753604888916
    9. '[I' → logprob: -17.0003604888916
    10. '[
' → logprob: -17.6253604888916

Token 557: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17893186211585999
    2. '])' → logprob: -1.9289318323135376
    3. '']' → logprob: -5.178931713104248
    4. ']'' → logprob: -5.178931713104248
    5. '[i' → logprob: -6.303931713104248
    6. ']')
' → logprob: -6.303931713104248
    7. '])
' → logprob: -7.178931713104248
    8. ''])' → logprob: -7.303931713104248
    9. ' ]' → logprob: -7.553931713104248
    10. ']+' → logprob: -8.428932189941406

Token 558: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22929562628269196
    2. ' +=' → logprob: -2.3542957305908203
    3. '               ' → logprob: -2.4792957305908203
    4. ' to' → logprob: -5.10429573059082
    5. ' ans' → logprob: -5.35429573059082
    6. '                   ' → logprob: -5.72929573059082
    7. ' à' → logprob: -5.85429573059082
    8. '+=' → logprob: -5.97929573059082
    9. ' +' → logprob: -6.35429573059082
    10. 'to' → logprob: -6.47929573059082

Token 559: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04951503500342369
    2. ' ans' → logprob: -3.0495150089263916
    3. 'a' → logprob: -7.049515247344971
    4. ' a' → logprob: -10.799514770507812
    5. '	ans' → logprob: -11.049514770507812
    6. 'b' → logprob: -11.799514770507812
    7. '(ans' → logprob: -12.049514770507812
    8. 'answer' → logprob: -12.549514770507812
    9. 'l' → logprob: -13.299514770507812
    10. ' ' → logprob: -13.674514770507812

Token 560: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07907627522945404
    2. ' ans' → logprob: -2.5790762901306152
    3. 'a' → logprob: -8.704075813293457
    4. '	ans' → logprob: -11.829075813293457
    5. ' a' → logprob: -12.204075813293457
    6. 'answer' → logprob: -12.329075813293457
    7. '(ans' → logprob: -13.204075813293457
    8. ' ' → logprob: -14.704075813293457
    9. '+' → logprob: -14.954075813293457
    10. '_ans' → logprob: -15.079075813293457

Token 561: '.
' (ID: 558)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9278931021690369
    2. '               ' → logprob: -1.1778931617736816
    3. '           ' → logprob: -1.5528931617736816
    4. ' +=' → logprob: -3.5528931617736816
    5. ' +' → logprob: -3.6778931617736816
    6. '                   ' → logprob: -3.9278931617736816
    7. '+' → logprob: -5.302893161773682
    8. '(ans' → logprob: -6.052893161773682
    9. '+=' → logprob: -6.677893161773682
    10. ',' → logprob: -7.427893161773682

Token 562: '               ' (ID: 506)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.17546449601650238
    2. '               ' → logprob: -2.050464391708374
    3. '           ' → logprob: -3.550464391708374
    4. 'ans' → logprob: -6.425464630126953
    5. ' ' → logprob: -7.675464630126953
    6. '                   ' → logprob: -7.925464630126953
    7. '(ans' → logprob: -8.050464630126953
    8. '+' → logprob: -8.300464630126953
    9. ' +' → logprob: -8.800464630126953
    10. '```' → logprob: -9.050464630126953

Token 563: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.00884607620537281
    2. 'ans' (adapté à ' ans') → logprob: -4.758846282958984
    3. '           ' → logprob: -8.758846282958984
    4. '               ' → logprob: -9.883846282958984
    5. '	ans' → logprob: -11.383846282958984
    6. '(ans' → logprob: -11.633846282958984
    7. '```' → logprob: -13.883846282958984
    8. '_ans' → logprob: -14.508846282958984
    9. ' b' → logprob: -14.883846282958984
    10. ' ' → logprob: -15.008846282958984

Token 564: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4741031527519226
    2. ' +=' → logprob: -0.9741031527519226
    3. '+' → logprob: -10.724102973937988
    4. ']+=' → logprob: -13.849102973937988
    5. '   ' → logprob: -13.974102973937988
    6. '+="' → logprob: -14.599102973937988
    7. ' +' → logprob: -14.599102973937988
    8. '+=(' → logprob: -14.724102973937988
    9. '       ' → logprob: -15.099102973937988
    10. '+='' → logprob: -15.349102973937988

Token 565: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868713676929474
    2. ' b' → logprob: -1.136871337890625
    3. '	b' → logprob: -15.136871337890625
    4. ' ' → logprob: -16.886871337890625
    5. ' ' → logprob: -17.761871337890625
    6. '   ' → logprob: -18.511871337890625
    7. '_b' → logprob: -19.261871337890625
    8. ' б' → logprob: -20.136871337890625
    9. '(b' → logprob: -20.136871337890625
    10. '$b' → logprob: -20.261871337890625

Token 566: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005644689663313329
    2. '[' → logprob: -7.5005645751953125
    3. ' [' → logprob: -11.375564575195312
    4. '[I' → logprob: -17.000564575195312
    5. 'i' → logprob: -17.250564575195312
    6. ' ' → logprob: -18.125564575195312
    7. ' i' → logprob: -18.250564575195312
    8. '   ' → logprob: -18.375564575195312
    9. '	' → logprob: -18.625564575195312
    10. '[
' → logprob: -19.000564575195312

Token 567: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005742375273257494
    2. ' ]' → logprob: -5.38074254989624
    3. '[i' → logprob: -7.75574254989624
    4. ')' → logprob: -8.130742073059082
    5. '<|end|>' → logprob: -8.755742073059082
    6. '])' → logprob: -9.130742073059082
    7. ']
' → logprob: -9.755742073059082
    8. '']' → logprob: -10.880742073059082
    9. '   ' → logprob: -11.255742073059082
    10. '}' → logprob: -11.880742073059082

Token 568: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7658736109733582
    2. '<|end|>' → logprob: -1.515873670578003
    3. '       ' → logprob: -2.515873670578003
    4. '               ' → logprob: -3.015873670578003
    5. '\n' → logprob: -3.140873670578003
    6. '  
' → logprob: -3.765873670578003
    7. ' 
' → logprob: -3.765873670578003
    8. ' b' → logprob: -3.890873670578003
    9. '            
' → logprob: -4.140873432159424
    10. ' ' → logprob: -4.140873432159424

Token 569: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6269979476928711
    2. 'b' → logprob: -1.001997947692871
    3. ' b' → logprob: -3.001997947692871
    4. ' a' → logprob: -3.251997947692871
    5. '               ' → logprob: -4.626997947692871
    6. '           ' → logprob: -7.751997947692871
    7. '       ' → logprob: -11.126997947692871
    8. '```' → logprob: -12.001997947692871
    9. '              ' → logprob: -12.001997947692871
    10. '   ' → logprob: -12.126997947692871

Token 570: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00027480217977426946
    2. 'b' → logprob: -8.500274658203125
    3. ' a' → logprob: -10.125274658203125
    4. '               ' → logprob: -10.500274658203125
    5. '           ' → logprob: -12.875274658203125
    6. '   ' → logprob: -14.125274658203125
    7. '       ' → logprob: -15.750274658203125
    8. '                   ' → logprob: -16.875274658203125
    9. '	a' → logprob: -17.000274658203125
    10. ' b' → logprob: -17.250274658203125

Token 571: ' sou' (ID: 4069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00733376806601882
    2. ' a' → logprob: -5.007333755493164
    3. '               ' → logprob: -7.632333755493164
    4. '[i' → logprob: -10.007333755493164
    5. '           ' → logprob: -10.757333755493164
    6. '[a' → logprob: -11.257333755493164
    7. 'b' → logprob: -11.507333755493164
    8. 'i' → logprob: -11.882333755493164
    9. 'à' → logprob: -12.257333755493164
    10. '#' → logprob: -12.382333755493164

Token 572: 'stra' (ID: 14867)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.030605698004364967
    2. '[i' → logprob: -4.530605792999268
    3. 'stract' → logprob: -4.530605792999268
    4. '[b' → logprob: -5.780605792999268
    5. 'a' → logprob: -6.280605792999268
    6. 'stra' → logprob: -6.905605792999268
    7. ' b' → logprob: -7.530605792999268
    8. '[a' → logprob: -7.655605792999268
    9. 'tract' → logprob: -8.53060531616211
    10. 'subtract' → logprob: -9.15560531616211

Token 573: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.17291735112667084
    2. 'b' → logprob: -2.922917366027832
    3. 'ct' → logprob: -3.047917366027832
    4. 'cte' → logprob: -3.547917366027832
    5. 'is' → logprob: -3.922917366027832
    6. 'ie' → logprob: -6.047917366027832
    7. 'e' → logprob: -6.547917366027832
    8. '[b' → logprob: -7.297917366027832
    9. 'ite' → logprob: -7.422917366027832
    10. 'a' → logprob: -7.422917366027832

Token 574: ' le' (ID: 505)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11931998282670975
    2. 'a' → logprob: -2.4943199157714844
    3. ' b' → logprob: -3.6193199157714844
    4. ' a' → logprob: -6.119319915771484
    5. '               ' → logprob: -7.619319915771484
    6. '           ' → logprob: -8.119319915771484
    7. '       ' → logprob: -10.494319915771484
    8. '   ' → logprob: -10.494319915771484
    9. '                   ' → logprob: -10.869319915771484
    10. ' ' → logprob: -11.744319915771484

Token 575: ' montant' (ID: 72364)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005863612983375788
    2. ' b' → logprob: -5.255863666534424
    3. 'a' → logprob: -8.005863189697266
    4. 'ans' → logprob: -8.880863189697266
    5. ' ans' → logprob: -9.130863189697266
    6. '   ' → logprob: -11.130863189697266
    7. '```' → logprob: -11.380863189697266
    8. ' a' → logprob: -12.130863189697266
    9. '	b' → logprob: -12.130863189697266
    10. ' ' → logprob: -12.880863189697266

Token 576: ' utilisé' (ID: 53138)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2628241777420044
    2. ' b' → logprob: -1.5128241777420044
    3. '               ' → logprob: -4.887824058532715
    4. ' from' → logprob: -6.887824058532715
    5. ' de' → logprob: -7.387824058532715
    6. 'from' → logprob: -7.387824058532715
    7. 'a' → logprob: -8.762824058532715
    8. '=' → logprob: -9.012824058532715
    9. '           ' → logprob: -9.012824058532715
    10. ' a' → logprob: -9.012824058532715

Token 577: ' à' (ID: 1221)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.47591954469680786
    2. ' from' → logprob: -2.100919485092163
    3. '               ' → logprob: -2.600919485092163
    4. '=' → logprob: -2.850919485092163
    5. 'b' → logprob: -2.975919485092163
    6. 'de' → logprob: -3.600919485092163
    7. ' de' → logprob: -3.975919485092163
    8. ' =' → logprob: -4.350919723510742
    9. 'a' → logprob: -4.975919723510742
    10. ' b' → logprob: -5.975919723510742

Token 578: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015030752401798964
    2. ' a' → logprob: -6.501502990722656
    3. '               ' → logprob: -15.126502990722656
    4. '   ' → logprob: -15.626502990722656
    5. '	a' → logprob: -15.751502990722656
    6. '                   ' → logprob: -16.626502990722656
    7. '           ' → logprob: -17.376502990722656
    8. ' ' → logprob: -17.376502990722656
    9. '```' → logprob: -18.126502990722656
    10. '       ' → logprob: -18.126502990722656

Token 579: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.547789674485102e-05
    2. ' a' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.125036239624023
    4. '	a' → logprob: -17.875036239624023
    5. ''a' → logprob: -18.875036239624023
    6. '#a' → logprob: -18.875036239624023
    7. '```' → logprob: -19.375036239624023
    8. '(a' → logprob: -19.625036239624023
    9. '       ' → logprob: -19.750036239624023
    10. '           ' → logprob: -19.750036239624023

Token 580: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. 'i' → logprob: -12.375005722045898
    3. '[' → logprob: -13.875005722045898
    4. 'a' → logprob: -16.1250057220459
    5. ' [' → logprob: -16.5000057220459
    6. ' i' → logprob: -16.7500057220459
    7. '(i' → logprob: -17.1250057220459
    8. '```' → logprob: -17.6250057220459
    9. ',i' → logprob: -17.7500057220459
    10. '   ' → logprob: -18.3750057220459

Token 581: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.9153885558771435e-06
    2. '+i' → logprob: -12.875005722045898
    3. '[i' → logprob: -13.625005722045898
    4. ' +' → logprob: -14.625005722045898
    5. '+
' → logprob: -14.625005722045898
    6. 'plus' → logprob: -15.250005722045898
    7. '1' → logprob: -15.500005722045898
    8. '+]' → logprob: -15.750005722045898
    9. '_plus' → logprob: -15.750005722045898
    10. '＋' → logprob: -15.875005722045898

Token 582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002195813925936818
    2. '+' → logprob: -6.127195835113525
    3. 'i' → logprob: -12.627195358276367
    4. ' ' → logprob: -12.877195358276367
    5. '   ' → logprob: -12.877195358276367
    6. '```' → logprob: -13.627195358276367
    7. '(i' → logprob: -15.252195358276367
    8. ']' → logprob: -15.502195358276367
    9. '[i' → logprob: -16.252195358276367
    10. '+i' → logprob: -16.752195358276367

Token 583: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4747150242328644
    2. ']' → logprob: -0.974714994430542
    3. ']-' → logprob: -8.849715232849121
    4. '[' → logprob: -9.099715232849121
    5. '][' → logprob: -9.474715232849121
    6. ' ]' → logprob: -9.474715232849121
    7. ']'' → logprob: -9.474715232849121
    8. '[j' → logprob: -10.224715232849121
    9. ']
' → logprob: -10.224715232849121
    10. '']' → logprob: -11.099715232849121

Token 584: ''.
' (ID: 49980)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.20412985980510712
    2. '-=' → logprob: -1.7041298151016235
    3. '-' → logprob: -6.829129695892334
    4. '               ' → logprob: -7.454129695892334
    5. '[i' → logprob: -7.829129695892334
    6. '=' → logprob: -8.204130172729492
    7. '           ' → logprob: -8.954130172729492
    8. ' -' → logprob: -9.329130172729492
    9. ' =' → logprob: -9.704130172729492
    10. '+=' → logprob: -10.829130172729492

Token 585: '               ' (ID: 506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05265282467007637
    2. ' a' → logprob: -3.8026528358459473
    3. '               ' → logprob: -4.802652835845947
    4. '-' → logprob: -5.177652835845947
    5. '           ' → logprob: -5.552652835845947
    6. '=' → logprob: -5.552652835845947
    7. ' -=' → logprob: -5.677652835845947
    8. '-=' → logprob: -6.177652835845947
    9. '```' → logprob: -7.302652835845947
    10. ' =' → logprob: -7.302652835845947

Token 586: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.000205566844670102
    2. ' a' → logprob: -8.500205993652344
    3. '               ' → logprob: -13.625205993652344
    4. '   ' → logprob: -15.500205993652344
    5. '           ' → logprob: -15.500205993652344
    6. '	a' → logprob: -16.000205993652344
    7. '                   ' → logprob: -16.125205993652344
    8. '```' → logprob: -16.250205993652344
    9. '       ' → logprob: -16.500205993652344
    10. '                       ' → logprob: -17.875205993652344

Token 587: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4498052223643754e-05
    2. 'i' → logprob: -11.250014305114746
    3. '[' → logprob: -13.625014305114746
    4. '(i' → logprob: -16.000015258789062
    5. '```' → logprob: -16.625015258789062
    6. '[next' → logprob: -17.375015258789062
    7. '[I' → logprob: -17.375015258789062
    8. ' i' → logprob: -17.750015258789062
    9. ',i' → logprob: -18.625015258789062
    10. '   ' → logprob: -18.625015258789062

Token 588: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007050448912195861
    2. 'i' → logprob: -7.750705242156982
    3. '1' → logprob: -8.625704765319824
    4. '[i' → logprob: -10.000704765319824
    5. '[' → logprob: -11.250704765319824
    6. '+i' → logprob: -11.375704765319824
    7. ']' → logprob: -11.625704765319824
    8. ' +' → logprob: -12.500704765319824
    9. ' i' → logprob: -12.875704765319824
    10. ']+=' → logprob: -13.000704765319824

Token 589: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.862962229410186e-05
    2. '+' → logprob: -9.625078201293945
    3. 'i' → logprob: -11.625078201293945
    4. '[i' → logprob: -13.500078201293945
    5. '[' → logprob: -14.375078201293945
    6. '   ' → logprob: -14.625078201293945
    7. '```' → logprob: -14.750078201293945
    8. 'Next' → logprob: -15.500078201293945
    9. '[next' → logprob: -15.500078201293945
    10. '(i' → logprob: -15.875078201293945

Token 590: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007336281123571098
    2. ']-' → logprob: -7.500733852386475
    3. '[i' → logprob: -9.375733375549316
    4. '-' → logprob: -10.000733375549316
    5. '[' → logprob: -10.500733375549316
    6. '-=' → logprob: -11.375733375549316
    7. ']=' → logprob: -13.000733375549316
    8. ' -=' → logprob: -13.125733375549316
    9. ' ]' → logprob: -13.125733375549316
    10. '[j' → logprob: -13.500733375549316

Token 591: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0004598631348926574
    2. '=' → logprob: -8.250459671020508
    3. ' -=' → logprob: -8.750459671020508
    4. '-' → logprob: -10.125459671020508
    5. '+=' → logprob: -16.125459671020508
    6. '   ' → logprob: -17.750459671020508
    7. '```' → logprob: -18.625459671020508
    8. '[' → logprob: -20.125459671020508
    9. ' =' → logprob: -20.500459671020508
    10. '=-' → logprob: -20.500459671020508

Token 592: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009115827269852161
    2. ' b' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.875911712646484
    4. '	b' → logprob: -16.875911712646484
    5. '       ' → logprob: -19.625911712646484
    6. '           ' → logprob: -19.625911712646484
    7. ' ' → logprob: -20.875911712646484
    8. '               ' → logprob: -21.250911712646484
    9. '```' → logprob: -21.750911712646484
    10. '  ' → logprob: -22.250911712646484

Token 593: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.250000953674316
    3. '[' → logprob: -15.250000953674316
    4. ' i' → logprob: -18.25
    5. ' [' → logprob: -18.375
    6. '```' → logprob: -19.375
    7. '[I' → logprob: -19.375
    8. '(i' → logprob: -20.375
    9. '[j' → logprob: -20.5
    10. '	i' → logprob: -20.625

Token 594: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015342684462666512
    2. '<|end|>' → logprob: -4.390342712402344
    3. '<|end|>' → logprob: -6.890342712402344
    4. '[i' → logprob: -7.640342712402344
    5. ' ]' → logprob: -7.890342712402344
    6. ')' → logprob: -8.390342712402344
    7. '       ' → logprob: -8.390342712402344
    8. ']
' → logprob: -8.890342712402344
    9. '}' → logprob: -9.265342712402344
    10. '```' → logprob: -10.015342712402344

Token 595: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 596: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7001408934593201
    2. ' else' → logprob: -1.4501409530639648
    3. '   ' → logprob: -2.200140953063965
    4. '<|end|>' → logprob: -2.325140953063965
    5. 'else' (adapté à ' else') → logprob: -3.700140953063965
    6. ' ' → logprob: -4.075140953063965
    7. ' 
' → logprob: -5.200140953063965
    8. ' return' → logprob: -5.825140953063965
    9. '    ' → logprob: -6.200140953063965
    10. 'return' → logprob: -6.450140953063965

Token 597: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6283215284347534
    2. ':' → logprob: -1.5033215284347534
    3. ':
' → logprob: -1.6283215284347534
    4. '       ' → logprob: -3.128321647644043
    5. '{' → logprob: -6.628321647644043
    6. '<|end|>' → logprob: -6.753321647644043
    7. ' :
' → logprob: -7.878321647644043
    8. '   ' → logprob: -8.003321647644043
    9. '{
' → logprob: -8.878321647644043
    10. '):
' → logprob: -9.128321647644043

Token 598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40357857942581177
    2. 'ans' → logprob: -1.153578519821167
    3. '       ' → logprob: -4.278578758239746
    4. '   ' → logprob: -6.653578758239746
    5. '#' → logprob: -7.278578758239746
    6. ' ans' → logprob: -7.528578758239746
    7. '	ans' → logprob: -8.778578758239746
    8. '```' → logprob: -10.903578758239746
    9. '(ans' → logprob: -11.653578758239746
    10. 'answer' → logprob: -12.778578758239746

Token 599: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.26053521037101746
    2. '           ' → logprob: -2.01053524017334
    3. '#' (adapté à ' #') → logprob: -2.63553524017334
    4. '       ' → logprob: -3.88553524017334
    5. ' ans' → logprob: -6.63553524017334
    6. '	ans' → logprob: -6.88553524017334
    7. '   ' → logprob: -7.13553524017334
    8. '```' → logprob: -10.38553524017334
    9. '(ans' → logprob: -10.63553524017334
    10. ' #' → logprob: -11.01053524017334

Token 600: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002067588793579489
    2. '           ' → logprob: -9.25020694732666
    3. ' ans' → logprob: -9.50020694732666
    4. '       ' → logprob: -10.87520694732666
    5. '   ' → logprob: -11.87520694732666
    6. '	ans' → logprob: -11.87520694732666
    7. '#' → logprob: -13.12520694732666
    8. 'else' → logprob: -14.62520694732666
    9. '(ans' → logprob: -15.62520694732666
    10. 'answer' → logprob: -16.125205993652344

Token 601: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4519801735877991
    2. ' a' → logprob: -1.3269801139831543
    3. ' ans' → logprob: -2.9519801139831543
    4. ' b' → logprob: -3.9519801139831543
    5. 'b' → logprob: -4.326980113983154
    6. 'ans' → logprob: -4.326980113983154
    7. '   ' → logprob: -8.451980590820312
    8. ' not' → logprob: -9.701980590820312
    9. '    ' → logprob: -10.076980590820312
    10. ' ' → logprob: -10.451980590820312

Token 602: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07674190402030945
    2. 'a' → logprob: -3.201741933822632
    3. ' b' → logprob: -3.451741933822632
    4. ' a' → logprob: -6.576741695404053
    5. '   ' → logprob: -10.576742172241211
    6. 'ans' → logprob: -10.576742172241211
    7. ' ' → logprob: -10.951742172241211
    8. ' ans' → logprob: -11.701742172241211
    9. '	b' → logprob: -12.326742172241211
    10. '  ' → logprob: -13.076742172241211

Token 603: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5451681974809617e-05
    2. '[' → logprob: -11.625015258789062
    3. ' [' → logprob: -12.125015258789062
    4. 'i' → logprob: -14.375015258789062
    5. '   ' → logprob: -15.625015258789062
    6. '       ' → logprob: -16.875015258789062
    7. '```' → logprob: -16.875015258789062
    8. '[I' → logprob: -17.000015258789062
    9. '           ' → logprob: -17.750015258789062
    10. '[j' → logprob: -18.000015258789062

Token 604: ']'' (ID: 75642)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11317281424999237
    2. ']' → logprob: -2.238172769546509
    3. '[' → logprob: -8.86317253112793
    4. ']<' → logprob: -8.86317253112793
    5. ' <' → logprob: -11.11317253112793
    6. '   ' → logprob: -11.48817253112793
    7. ' ]' → logprob: -11.86317253112793
    8. '[j' → logprob: -11.86317253112793
    9. '']' → logprob: -11.98817253112793
    10. ']'' → logprob: -12.73817253112793

Token 605: ' n' (ID: 297)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16990071535110474
    2. '<' → logprob: -2.04490065574646
    3. ' +=' → logprob: -3.79490065574646
    4. '+=' → logprob: -6.544900894165039
    5. 'else' → logprob: -7.669900894165039
    6. ' >' → logprob: -7.669900894165039
    7. '>' → logprob: -7.669900894165039
    8. '<n' → logprob: -8.294900894165039
    9. ' >=' → logprob: -8.544900894165039
    10. '           ' → logprob: -8.544900894165039

Token 606: ''est' (ID: 6616)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2918698787689209
    2. '[i' → logprob: -2.041869878768921
    3. ' >=' → logprob: -2.791869878768921
    4. '<' → logprob: -3.416869878768921
    5. '>=' → logprob: -4.6668701171875
    6. '<i' → logprob: -4.7918701171875
    7. ']' → logprob: -5.2918701171875
    8. '[' → logprob: -7.0418701171875
    9. '<b' → logprob: -7.5418701171875
    10. 'e' → logprob: -7.6668701171875

Token 607: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0017621672013774514
    2. ' pas' → logprob: -6.376762390136719
    3. '#' → logprob: -11.251762390136719
    4. 't' → logprob: -11.376762390136719
    5. 'p' → logprob: -12.001762390136719
    6. 's' → logprob: -12.251762390136719
    7. '>=' → logprob: -12.626762390136719
    8. 'plus' → logprob: -12.626762390136719
    9. '           ' → logprob: -12.876762390136719
    10. '_pas' → logprob: -13.251762390136719

Token 608: ' assez' (ID: 33376)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16178680956363678
    2. '>=' → logprob: -2.2867867946624756
    3. 'en' → logprob: -3.9117867946624756
    4. ' suff' → logprob: -4.036787033081055
    5. ' suffis' → logprob: -5.661787033081055
    6. ' enough' → logprob: -6.536787033081055
    7. ' assez' → logprob: -7.286787033081055
    8. ' >=' → logprob: -7.411787033081055
    9. ' suficiente' → logprob: -7.661787033081055
    10. ' ' → logprob: -7.911787033081055

Token 609: ' pour' (ID: 1930)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8314579725265503
    2. 'grand' → logprob: -0.8314579725265503
    3. 'à' → logprob: -2.58145809173584
    4. 'large' → logprob: -4.20645809173584
    5. ' >=' → logprob: -4.70645809173584
    6. ' grand' → logprob: -5.20645809173584
    7. '>' → logprob: -5.20645809173584
    8. 's' → logprob: -6.08145809173584
    9. ' suff' → logprob: -6.45645809173584
    10. 'big' → logprob: -6.58145809173584

Token 610: ' "' (ID: 392)
  Prédit: ' couvrir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couvrir' → logprob: -0.11771915853023529
    2. 'c' → logprob: -2.3677191734313965
    3. 'cover' → logprob: -5.6177191734313965
    4. 'atta' → logprob: -5.7427191734313965
    5. 'atte' → logprob: -5.8677191734313965
    6. 'cou' → logprob: -5.9927191734313965
    7. ' atta' → logprob: -6.7427191734313965
    8. 'a' → logprob: -7.1177191734313965
    9. '   ' → logprob: -7.1177191734313965
    10. ' ' → logprob: -8.117718696594238

Token 611: 'd' (ID: 67)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10471470654010773
    2. 'cou' → logprob: -2.6047146320343018
    3. 'atte' → logprob: -4.104714870452881
    4. ' couvrir' → logprob: -5.229714870452881
    5. 'atta' → logprob: -7.104714870452881
    6. 'cover' → logprob: -7.479714870452881
    7. 'd' → logprob: -7.979714870452881
    8. 'att' → logprob: -8.229714393615723
    9. 'rec' → logprob: -8.229714393615723
    10. 'a' → logprob: -8.479714393615723

Token 612: 'étr' (ID: 35025)
  Prédit: 'étr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étr' → logprob: -0.003245085710659623
    2. 'é' → logprob: -6.378244876861572
    3. 'estroy' → logprob: -7.253244876861572
    4. 'et' → logprob: -8.25324535369873
    5. 'e' → logprob: -8.75324535369873
    6. 'égr' → logprob: -9.12824535369873
    7. 'éter' → logprob: -9.87824535369873
    8. 'estr' → logprob: -10.12824535369873
    9. 'estruct' → logprob: -10.12824535369873
    10. 'ét' → logprob: -10.37824535369873

Token 613: 'uire' (ID: 157266)
  Prédit: 'uire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uire' → logprob: -0.2610587179660797
    2. 'ru' → logprob: -1.5110586881637573
    3. 'uir' → logprob: -5.386058807373047
    4. 'tru' → logprob: -6.261058807373047
    5. 'u' → logprob: -7.136058807373047
    6. 'o' → logprob: -7.261058807373047
    7. 'a' → logprob: -8.261058807373047
    8. 'ruit' → logprob: -8.886058807373047
    9. 'ouvrir' → logprob: -9.136058807373047
    10. 'roy' → logprob: -9.261058807373047

Token 614: '"' (ID: 1)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10024247318506241
    2. ' a' → logprob: -2.3502423763275146
    3. '   ' → logprob: -11.475242614746094
    4. ' ' → logprob: -11.850242614746094
    5. ' tout' → logprob: -11.975242614746094
    6. 'tout' → logprob: -12.100242614746094
    7. ' ' → logprob: -13.850242614746094
    8. 'l' → logprob: -14.225242614746094
    9. 'all' → logprob: -14.350242614746094
    10. ' all' → logprob: -14.350242614746094

Token 615: ' tout' (ID: 5501)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0003357006062287837
    2. ' a' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.250335693359375
    4. ' ' → logprob: -17.000335693359375
    5. '	a' → logprob: -17.625335693359375
    6. '#a' → logprob: -19.250335693359375
    7. '           ' → logprob: -20.000335693359375
    8. '       ' → logprob: -20.000335693359375
    9. 'а' → logprob: -20.125335693359375
    10. '  ' → logprob: -20.625335693359375

Token 616: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03806077316403389
    2. ' a' → logprob: -3.2880606651306152
    3. '   ' → logprob: -11.163061141967773
    4. ' ' → logprob: -13.163061141967773
    5. ' de' → logprob: -14.163061141967773
    6. '#a' → logprob: -14.163061141967773
    7. '	a' → logprob: -14.663061141967773
    8. 'à' → logprob: -14.913061141967773
    9. ''a' → logprob: -15.538061141967773
    10. '  ' → logprob: -15.788061141967773

Token 617: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.451116051815916e-05
    2. ' a' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.625024795532227
    4. ''a' → logprob: -16.750024795532227
    5. '```' → logprob: -17.500024795532227
    6. ' ' → logprob: -17.750024795532227
    7. '	a' → logprob: -19.125024795532227
    8. '  ' → logprob: -19.625024795532227
    9. '`' → logprob: -20.250024795532227
    10. 'а' → logprob: -20.250024795532227

Token 618: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. 'i' → logprob: -16.125
    4. '   ' → logprob: -17.25
    5. '```' → logprob: -17.25
    6. ' [' → logprob: -18.375
    7. '[j' → logprob: -19.0
    8. '[
' → logprob: -19.125
    9. '[I' → logprob: -19.125
    10. '(i' → logprob: -19.625

Token 619: ']',
' (ID: 106000)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04820961132645607
    2. '[i' → logprob: -3.2982096672058105
    3. ']',' → logprob: -5.1732096672058105
    4. ']:' → logprob: -6.0482096672058105
    5. ']):' → logprob: -7.5482096672058105
    6. ']'' → logprob: -7.5482096672058105
    7. ']:
' → logprob: -8.423209190368652
    8. ']",' → logprob: -8.798209190368652
    9. ']):
' → logprob: -8.923209190368652
    10. '],' → logprob: -9.048209190368652

Token 620: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14087910950183868
    2. 'ans' → logprob: -2.1408791542053223
    3. '       ' → logprob: -4.390879154205322
    4. ' ans' → logprob: -6.640879154205322
    5. '   ' → logprob: -9.390878677368164
    6. '	ans' → logprob: -10.390878677368164
    7. '(ans' → logprob: -11.390878677368164
    8. '```' → logprob: -11.515878677368164
    9. '          ' → logprob: -12.140878677368164
    10. 'answer' → logprob: -12.515878677368164

Token 621: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14778056740760803
    2. 'ans' → logprob: -2.022780656814575
    3. '       ' → logprob: -5.897780418395996
    4. ' ans' → logprob: -6.522780418395996
    5. '#' (adapté à ' #') → logprob: -7.772780418395996
    6. '	ans' → logprob: -8.272780418395996
    7. '   ' → logprob: -9.272780418395996
    8. 'answer' → logprob: -10.272780418395996
    9. '(ans' → logprob: -10.647780418395996
    10. '```' → logprob: -11.397780418395996

Token 622: ' alors' (ID: 17971)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06574869900941849
    2. '           ' → logprob: -3.065748691558838
    3. ' ans' → logprob: -4.190748691558838
    4. '       ' → logprob: -6.440748691558838
    5. '	ans' → logprob: -8.690749168395996
    6. '   ' → logprob: -9.565749168395996
    7. '(ans' → logprob: -11.065749168395996
    8. '```' → logprob: -11.065749168395996
    9. 'answer' → logprob: -12.190749168395996
    10. 'continue' → logprob: -13.190749168395996

Token 623: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0067478204146027565
    2. '           ' → logprob: -5.381747722625732
    3. ' ans' → logprob: -6.381747722625732
    4. '       ' → logprob: -8.25674819946289
    5. '#' → logprob: -9.50674819946289
    6. '	ans' → logprob: -9.75674819946289
    7. 'answer' → logprob: -11.00674819946289
    8. '   ' → logprob: -11.38174819946289
    9. '(ans' → logprob: -12.13174819946289
    10. '_ans' → logprob: -13.63174819946289

Token 624: ' ne' (ID: 453)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01404186524450779
    2. ' ans' → logprob: -4.889041900634766
    3. '           ' → logprob: -5.264041900634766
    4. '       ' → logprob: -7.389041900634766
    5. '```' → logprob: -8.264041900634766
    6. '	ans' → logprob: -8.889041900634766
    7. '   ' → logprob: -9.139041900634766
    8. '(ans' → logprob: -9.639041900634766
    9. 'aj' → logprob: -11.389041900634766
    10. '+=' → logprob: -11.764041900634766

Token 625: ' peut' (ID: 9216)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.18509067595005035
    2. ' ajoute' → logprob: -2.8100907802581787
    3. ' peut' → logprob: -3.1850907802581787
    4. 'fait' → logprob: -4.0600905418396
    5. 'pas' → logprob: -4.5600905418396
    6. 'add' → logprob: -4.8100905418396
    7. ' fait' → logprob: -4.8100905418396
    8. 'ans' → logprob: -5.5600905418396
    9. '           ' → logprob: -5.8100905418396
    10. '       ' → logprob: -5.8100905418396

Token 626: ' en' (ID: 469)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.8894683122634888
    2. 'pas' → logprob: -0.8894683122634888
    3. '           ' → logprob: -1.7644683122634888
    4. '       ' → logprob: -5.514468193054199
    5. '   ' → logprob: -6.514468193054199
    6. ' +=' → logprob: -8.1394681930542
    7. '+' → logprob: -8.5144681930542
    8. ' plus' → logprob: -8.8894681930542
    9. '+=' → logprob: -9.2644681930542
    10. ' ajouter' → logprob: -9.3894681930542

Token 627: ' utiliser' (ID: 43227)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.052655987441539764
    2. 'add' → logprob: -3.8026559352874756
    3. 'util' → logprob: -4.302656173706055
    4. ' ajouter' → logprob: -5.052656173706055
    5. 'pas' → logprob: -5.427656173706055
    6. 'faire' → logprob: -6.552656173706055
    7. 'a' → logprob: -7.427656173706055
    8. 'Ajouter' → logprob: -7.552656173706055
    9. 't' → logprob: -7.927656173706055
    10. '```' → logprob: -8.052656173706055

Token 628: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.07521022856235504
    2. 'que' → logprob: -2.9502103328704834
    3. 'pas' → logprob: -3.9502103328704834
    4. ' pas' → logprob: -7.450210094451904
    5. 'plus' → logprob: -9.075210571289062
    6. 'b' → logprob: -9.950210571289062
    7. ' qu' → logprob: -10.325210571289062
    8. '   ' → logprob: -10.950210571289062
    9. '```' → logprob: -11.200210571289062
    10. ' plus' → logprob: -11.325210571289062

Token 629: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04403788968920708
    2. ' b' → logprob: -3.1690378189086914
    3. 'tout' → logprob: -7.419037818908691
    4. ' tout' → logprob: -9.669037818908691
    5. ' toute' → logprob: -10.044037818908691
    6. ' que' → logprob: -10.044037818908691
    7. ' ' → logprob: -10.044037818908691
    8. ' la' → logprob: -10.044037818908691
    9. 'la' → logprob: -10.169037818908691
    10. ' autant' → logprob: -10.544037818908691

Token 630: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00407923199236393
    2. ' b' → logprob: -5.504079341888428
    3. '	b' → logprob: -15.00407886505127
    4. ''b' → logprob: -15.37907886505127
    5. ' ' → logprob: -16.379079818725586
    6. '   ' → logprob: -16.879079818725586
    7. '       ' → logprob: -17.504079818725586
    8. ''' → logprob: -18.129079818725586
    9. '```' → logprob: -18.254079818725586
    10. ')b' → logprob: -18.879079818725586

Token 631: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.750003814697266
    3. ' [' → logprob: -14.875003814697266
    4. '```' → logprob: -16.750003814697266
    5. '   ' → logprob: -17.750003814697266
    6. 'i' → logprob: -18.000003814697266
    7. '[I' → logprob: -18.375003814697266
    8. '(i' → logprob: -18.375003814697266
    9. '[
' → logprob: -18.500003814697266
    10. '
' → logprob: -18.625003814697266

Token 632: ']' (ID: 60)
  Prédit: ']''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']'' → logprob: -0.12401960045099258
    2. ''' → logprob: -3.1240196228027344
    3. ']'
' → logprob: -3.2490196228027344
    4. ']' → logprob: -3.4990196228027344
    5. ']',' → logprob: -6.624019622802734
    6. ''
' → logprob: -7.499019622802734
    7. ')'' → logprob: -7.749019622802734
    8. '']' → logprob: -8.249019622802734
    9. ''.' → logprob: -8.749019622802734
    10. '])' → logprob: -8.999019622802734

Token 633: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09524697810411453
    2. '           ' → logprob: -2.8452470302581787
    3. '',' → logprob: -4.8452467918396
    4. ''
' → logprob: -5.0952467918396
    5. '       ' → logprob: -5.3452467918396
    6. ''.' → logprob: -5.8452467918396
    7. ' '' → logprob: -6.2202467918396
    8. ']'' → logprob: -6.2202467918396
    9. ']' → logprob: -6.7202467918396
    10. ')' → logprob: -6.9702467918396

Token 634: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005466755945235491
    2. ' ans' → logprob: -5.630466938018799
    3. 'ans' → logprob: -6.380466938018799
    4. '       ' → logprob: -9.13046646118164
    5. '   ' → logprob: -10.88046646118164
    6. '	ans' → logprob: -10.88046646118164
    7. '```' → logprob: -11.25546646118164
    8. '(ans' → logprob: -11.63046646118164
    9. '               ' → logprob: -13.63046646118164
    10. '_ans' → logprob: -14.88046646118164

Token 635: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.005658571142703295
    2. '           ' → logprob: -5.5056586265563965
    3. ' ans' → logprob: -6.5056586265563965
    4. '       ' → logprob: -9.630658149719238
    5. '	ans' → logprob: -11.630658149719238
    6. '   ' → logprob: -12.005658149719238
    7. '(ans' → logprob: -13.255658149719238
    8. 'answer' → logprob: -14.130658149719238
    9. '```' → logprob: -14.380658149719238
    10. '_ans' → logprob: -16.255659103393555

Token 636: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029754308983683586
    2. '+=' → logprob: -3.529754400253296
    3. '+' → logprob: -13.779754638671875
    4. ' +' → logprob: -14.154754638671875
    5. ']+=' → logprob: -14.154754638671875
    6. '       ' → logprob: -14.779754638671875
    7. '   ' → logprob: -14.904754638671875
    8. '+='' → logprob: -16.279754638671875
    9. '+=(' → logprob: -16.279754638671875
    10. '           ' → logprob: -16.404754638671875

Token 637: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '	b' → logprob: -18.001928329467773
    4. '   ' → logprob: -19.751928329467773
    5. ' ' → logprob: -20.251928329467773
    6. '```' → logprob: -20.876928329467773
    7. ' б' → logprob: -22.376928329467773
    8. ' ' → logprob: -22.376928329467773
    9. ')b' → logprob: -23.126928329467773
    10. '`' → logprob: -23.501928329467773

Token 638: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.2020991056924686e-05
    2. '[' → logprob: -10.375032424926758
    3. ' [' → logprob: -14.250032424926758
    4. '```' → logprob: -16.375032424926758
    5. 'i' → logprob: -16.625032424926758
    6. '[I' → logprob: -18.750032424926758
    7. ' i' → logprob: -19.250032424926758
    8. '(i' → logprob: -20.000032424926758
    9. ' ' → logprob: -20.250032424926758
    10. '[
' → logprob: -20.500032424926758

Token 639: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 640: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 641: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7471454739570618
    2. '<|end|>' → logprob: -1.122145414352417
    3. '
' → logprob: -1.872145414352417
    4. 'return' → logprob: -3.997145414352417
    5. '' → logprob: -5.247145652770996
    6. '```' → logprob: -5.497145652770996
    7. ' ' → logprob: -5.747145652770996
    8. ')' → logprob: -5.747145652770996
    9. '   ' → logprob: -5.872145652770996
    10. ' return' → logprob: -6.497145652770996

Token 642: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012082326225936413
    2. 'if' → logprob: -4.512082099914551
    3. '   ' → logprob: -7.012082099914551
    4. 'return' → logprob: -9.01208209991455
    5. ' print' → logprob: -11.63708209991455
    6. '```' → logprob: -13.51208209991455
    7. ' if' → logprob: -14.76208209991455
    8. '#' → logprob: -15.88708209991455
    9. '    
' → logprob: -16.512083053588867
    10. ' ' → logprob: -16.637083053588867

Token 643: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0967851877212524
    2. 'print' → logprob: -1.2217851877212524
    3. 'le' → logprob: -2.096785068511963
    4. ' le' → logprob: -2.221785068511963
    5. 'la' → logprob: -2.596785068511963
    6. 'for' → logprob: -3.596785068511963
    7. '   ' → logprob: -3.971785068511963
    8. 'l' → logprob: -5.221785068511963
    9. 'return' → logprob: -5.346785068511963
    10. ' print' → logprob: -5.971785068511963

Token 644: ' boucle' (ID: 174211)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.262509286403656
    2. 'for' → logprob: -2.137509346008301
    3. 'if' → logprob: -2.512509346008301
    4. 'main' → logprob: -3.762509346008301
    5. 'return' → logprob: -5.262509346008301
    6. 'bou' → logprob: -6.387509346008301
    7. '#' → logprob: -7.137509346008301
    8. '   ' → logprob: -8.1375093460083
    9. '```' → logprob: -8.5125093460083
    10. ' for' → logprob: -9.3875093460083

Token 645: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008433843031525612
    2. 'print' → logprob: -4.883433818817139
    3. ',' → logprob: -7.258433818817139
    4. ' print' → logprob: -9.133434295654297
    5. '    
' → logprob: -11.633434295654297
    6. '
' → logprob: -12.758434295654297
    7. ',
' → logprob: -14.133434295654297
    8. '#' → logprob: -14.383434295654297
    9. '```' → logprob: -14.758434295654297
    10. '<|end|>' → logprob: -15.008434295654297

Token 646: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01459861733019352
    2. '   ' → logprob: -4.264598846435547
    3. ' print' → logprob: -7.764598846435547
    4. 'return' → logprob: -11.514598846435547
    5. '```' → logprob: -15.639598846435547
    6. '	print' → logprob: -15.764598846435547
    7. ' return' → logprob: -16.389598846435547
    8. '
' → logprob: -17.139598846435547
    9. ' ' → logprob: -17.639598846435547
    10. '  ' → logprob: -18.139598846435547

Token 647: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017273811623454094
    2. '   ' → logprob: -4.267273902893066
    3. ' print' → logprob: -5.892273902893066
    4. 'return' → logprob: -8.017273902893066
    5. ' return' → logprob: -11.642273902893066
    6. '```' → logprob: -13.517273902893066
    7. '#' → logprob: -13.642273902893066
    8. '
' → logprob: -14.017273902893066
    9. '	print' → logprob: -14.267273902893066
    10. '#print' → logprob: -14.517273902893066

Token 648: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0002613358374219388
    2. 'ans' → logprob: -8.250261306762695
    3. '(' → logprob: -17.625261306762695
    4. ' ans' → logprob: -18.250261306762695
    5. '	ans' → logprob: -18.750261306762695
    6. 'print' → logprob: -19.375261306762695
    7. '(answer' → logprob: -20.500261306762695
    8. '   ' → logprob: -21.125261306762695
    9. '_ans' → logprob: -22.500261306762695
    10. 'ANS' → logprob: -22.750261306762695

Token 649: ' valeur' (ID: 41664)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1298093944787979
    2. 'ans' → logprob: -2.1298093795776367
    3. '(ans' → logprob: -5.879809379577637
    4. ' print' → logprob: -9.879809379577637
    5. 'result' → logprob: -11.004809379577637
    6. ' ans' → logprob: -11.879809379577637
    7. 'answer' → logprob: -12.129809379577637
    8. '(' → logprob: -14.754809379577637
    9. '(print' → logprob: -14.754809379577637
    10. 'pr' → logprob: -15.879809379577637

Token 650: ' finale' (ID: 37759)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0033944444730877876
    2. 'print' → logprob: -6.253394603729248
    3. '(' → logprob: -7.128394603729248
    4. 'ans' → logprob: -7.378394603729248
    5. '   ' → logprob: -10.75339412689209
    6. '(print' → logprob: -12.37839412689209
    7. 'de' → logprob: -12.75339412689209
    8. 'd' → logprob: -13.00339412689209
    9. '```' → logprob: -13.50339412689209
    10. '(answer' → logprob: -13.62839412689209

Token 651: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5780156850814819
    2. '   ' → logprob: -0.8280156850814819
    3. '(' → logprob: -6.9530158042907715
    4. '(print' → logprob: -7.0780158042907715
    5. ' print' → logprob: -8.328015327453613
    6. '(ans' → logprob: -10.828015327453613
    7. '```' → logprob: -11.953015327453613
    8. '	print' → logprob: -12.078015327453613
    9. '()' → logprob: -14.953015327453613
    10. '  ' → logprob: -15.078015327453613

Token 652: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06208532303571701
    2. '(ans' → logprob: -2.8120853900909424
    3. ' ans' → logprob: -9.062085151672363
    4. 'print' → logprob: -13.937085151672363
    5. '	ans' → logprob: -14.437085151672363
    6. 'answer' → logprob: -16.56208610534668
    7. '_ans' → logprob: -16.93708610534668
    8. 'ANS' → logprob: -17.31208610534668
    9. 'Ans' → logprob: -17.68708610534668
    10. '```' → logprob: -18.18708610534668

Token 653: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00027254095766693354
    2. '(ans' → logprob: -8.250272750854492
    3. 'print' → logprob: -11.500272750854492
    4. ' ans' → logprob: -13.750272750854492
    5. '	ans' → logprob: -18.250272750854492
    6. 'Ans' → logprob: -19.500272750854492
    7. 'answer' → logprob: -19.625272750854492
    8. '_ans' → logprob: -20.250272750854492
    9. 'ANS' → logprob: -20.750272750854492
    10. '   ' → logprob: -20.875272750854492

Token 654: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033320679794996977
    2. 'print' → logprob: -6.128332138061523
    3. ')' → logprob: -7.253332138061523
    4. ')
' → logprob: -8.628332138061523
    5. '(' → logprob: -9.253332138061523
    6. ' print' → logprob: -9.378332138061523
    7. '(print' → logprob: -10.128332138061523
    8. '()
' → logprob: -11.378332138061523
    9. '()' → logprob: -11.753332138061523
    10. ',' → logprob: -11.878332138061523

Token 655: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005484064109623432
    2. 'print' → logprob: -5.255484104156494
    3. '
' → logprob: -8.380483627319336
    4. ' print' → logprob: -11.630483627319336
    5. '```' → logprob: -11.880483627319336
    6. '    
' → logprob: -12.255483627319336
    7. '	print' → logprob: -16.005483627319336
    8. '       ' → logprob: -16.880483627319336
    9. '.print' → logprob: -17.130483627319336
    10. '(print' → logprob: -17.380483627319336

Token 656: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.9153885558771435e-06
    2. ' print' → logprob: -12.250005722045898
    3. '(print' → logprob: -14.250005722045898
    4. '```' → logprob: -14.750005722045898
    5. '   ' → logprob: -17.7500057220459
    6. '(' → logprob: -21.1250057220459
    7. '	print' → logprob: -21.3750057220459
    8. '
' → logprob: -21.5000057220459
    9. '`' → logprob: -22.2500057220459
    10. '``' → logprob: -22.3750057220459

Token 657: '()
' (ID: 1234)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.017236195504665375
    2. '(' → logprob: -4.267236232757568
    3. '   ' → logprob: -6.142236232757568
    4. '(print' → logprob: -7.267236232757568
    5. '()' → logprob: -8.89223575592041
    6. 'print' → logprob: -9.89223575592041
    7. '(
' → logprob: -11.64223575592041
    8. '("' → logprob: -12.01723575592041
    9. 'ans' → logprob: -12.14223575592041
    10. '()
' → logprob: -12.51723575592041

Token 658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011066683568060398
    2. 'print' → logprob: -4.511066913604736
    3. '```' → logprob: -11.511066436767578
    4. ' print' → logprob: -11.636066436767578
    5. '	print' → logprob: -17.261066436767578
    6. '    
' → logprob: -18.261066436767578
    7. '
' → logprob: -19.136066436767578
    8. '       ' → logprob: -19.261066436767578
    9. '(print' → logprob: -19.636066436767578
    10. '``' → logprob: -20.011066436767578

Token 659: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3869742453098297
    2. 'print' (adapté à ' print') → logprob: -1.1369742155075073
    3. ' print' → logprob: -9.386974334716797
    4. '```' → logprob: -10.886974334716797
    5. '	print' → logprob: -14.261974334716797
    6. '    
' → logprob: -17.261974334716797
    7. '       ' → logprob: -17.886974334716797
    8. '(print' → logprob: -18.011974334716797
    9. '
' → logprob: -18.636974334716797
    10. '``' → logprob: -18.761974334716797

Token 660: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0007150543970055878
    2. '(' → logprob: -7.250715255737305
    3. '()' → logprob: -12.250715255737305
    4. ' (' → logprob: -16.375715255737305
    5. 'ans' → logprob: -16.500715255737305
    6. '(answer' → logprob: -16.625715255737305
    7. '(abs' → logprob: -17.000715255737305
    8. '(
' → logprob: -17.375715255737305
    9. '(an' → logprob: -19.250715255737305
    10. '(args' → logprob: -19.500715255737305

Token 661: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006708591827191412
    2. '())' → logprob: -7.375670909881592
    3. '()' → logprob: -10.250670433044434
    4. ' )' → logprob: -11.875670433044434
    5. ')`' → logprob: -14.000670433044434
    6. ')
' → logprob: -14.750670433044434
    7. '`)' → logprob: -15.875670433044434
    8. '))' → logprob: -16.37567138671875
    9. ')#' → logprob: -16.37567138671875
    10. '```' → logprob: -16.37567138671875

Token 662: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014049853198230267
    2. '
' → logprob: -4.514050006866455
    3. '<|end|>' → logprob: -6.139050006866455
    4. '```' → logprob: -7.389050006866455
    5. ' if' → logprob: -8.764049530029297
    6. '#' → logprob: -10.764049530029297
    7. '\n' → logprob: -11.139049530029297
    8. '<|end|>' → logprob: -12.389049530029297
    9. '__' → logprob: -12.889049530029297
    10. '  
' → logprob: -12.889049530029297

Token 663: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.41866585687967e-06
    2. 'main' → logprob: -12.000008583068848
    3. ' if' → logprob: -13.125008583068848
    4. '#' → logprob: -15.250008583068848
    5. '__' → logprob: -17.87500762939453
    6. '```' → logprob: -18.25000762939453
    7. 'for' → logprob: -19.62500762939453
    8. '#if' → logprob: -20.12500762939453
    9. 'import' → logprob: -20.87500762939453
    10. 'print' → logprob: -21.50000762939453

Token 664: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0013273799559101462
    2. ' if' → logprob: -6.6263275146484375
    3. '#' → logprob: -14.001327514648438
    4. '```' → logprob: -14.876327514648438
    5. '__' → logprob: -16.751327514648438
    6. '=' → logprob: -17.126327514648438
    7. 'If' → logprob: -17.126327514648438
    8. 'a' → logprob: -17.376327514648438
    9. 'for' → logprob: -18.001327514648438
    10. '_if' → logprob: -18.001327514648438

Token 665: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0028809530194848776
    2. 'if' → logprob: -5.877881050109863
    3. 'ife' → logprob: -10.002881050109863
    4. 'ifle' → logprob: -10.627881050109863
    5. '```' → logprob: -13.377881050109863
    6. 'ite' → logprob: -14.127881050109863
    7. 'ile' → logprob: -14.252881050109863
    8. 'ifiez' → logprob: -14.252881050109863
    9. 'ifi' → logprob: -14.752881050109863
    10. 'ifié' → logprob: -15.127881050109863

Token 666: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00552911963313818
    2. ' if' → logprob: -5.255528926849365
    3. '__' → logprob: -8.130529403686523
    4. ' __' → logprob: -15.380529403686523
    5. '#' → logprob: -15.755529403686523
    6. 'If' → logprob: -16.255529403686523
    7. 'name' → logprob: -16.255529403686523
    8. '```' → logprob: -16.255529403686523
    9. ' ' → logprob: -17.130529403686523
    10. '_' → logprob: -17.505529403686523

Token 667: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6931529641151428
    2. ' __' → logprob: -0.6931529641151428
    3. ' ' → logprob: -12.693153381347656
    4. 'name' → logprob: -13.818153381347656
    5. '/__' → logprob: -14.693153381347656
    6. '_name' → logprob: -15.068153381347656
    7. '```' → logprob: -15.568153381347656
    8. ' ' → logprob: -15.693153381347656
    9. '.__' → logprob: -15.818153381347656
    10. ' "__' → logprob: -16.068153381347656

Token 668: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08921534568071365
    2. ' __' → logprob: -2.4642152786254883
    3. 'name' → logprob: -8.839215278625488
    4. ' ==' → logprob: -10.089215278625488
    5. '_name' → logprob: -10.714215278625488
    6. '_' → logprob: -11.214215278625488
    7. '==' → logprob: -11.339215278625488
    8. '/__' → logprob: -12.339215278625488
    9. '.__' → logprob: -12.339215278625488
    10. 'if' → logprob: -12.464215278625488

Token 669: ' de' (ID: 334)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03221990913152695
    2. ' ==' → logprob: -4.157219886779785
    3. '==' → logprob: -4.907219886779785
    4. ' __' → logprob: -5.282219886779785
    5. 'if' → logprob: -6.407219886779785
    6. '.__' → logprob: -7.282219886779785
    7. 'name' → logprob: -7.657219886779785
    8. '```' → logprob: -7.782219886779785
    9. '.py' → logprob: -9.157219886779785
    10. '[' → logprob: -9.782219886779785

Token 670: ' code' (ID: 3490)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13896945118904114
    2. ' __' → logprob: -3.2639694213867188
    3. 'est' → logprob: -3.2639694213867188
    4. 'name' → logprob: -4.138969421386719
    5. '_' → logprob: -4.888969421386719
    6. 'n' → logprob: -5.013969421386719
    7. 'nom' → logprob: -5.763969421386719
    8. 'a' → logprob: -6.013969421386719
    9. 's' → logprob: -6.388969421386719
    10. 'import' → logprob: -6.638969421386719

Token 671: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0275905542075634
    2. ' __' → logprob: -4.152590751647949
    3. ' ==' → logprob: -4.777590751647949
    4. '==' → logprob: -6.402590751647949
    5. 'name' → logprob: -7.902590751647949
    6. 'if' → logprob: -8.15259075164795
    7. '.__' → logprob: -8.52759075164795
    8. '.py' → logprob: -9.40259075164795
    9. '_name' → logprob: -9.65259075164795
    10. ' is' → logprob: -9.90259075164795

Token 672: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0029586851596832275
    2. ' __' → logprob: -6.37795877456665
    3. 'name' → logprob: -7.87795877456665
    4. 'le' → logprob: -8.252958297729492
    5. ' le' → logprob: -8.877958297729492
    6. 'the' → logprob: -9.627958297729492
    7. ''' → logprob: -9.752958297729492
    8. '"' → logprob: -9.752958297729492
    9. 'import' → logprob: -9.877958297729492
    10. '_le' → logprob: -10.377958297729492

Token 673: ' programme' (ID: 18190)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4893592596054077
    2. 'main' → logprob: -1.2393592596054077
    3. 'principal' → logprob: -3.1143593788146973
    4. ' main' → logprob: -3.6143593788146973
    5. '_main' → logprob: -4.614359378814697
    6. 'f' → logprob: -5.114359378814697
    7. ' __' → logprob: -5.989359378814697
    8. ' principal' → logprob: -6.364359378814697
    9. 'point' → logprob: -6.489359378814697
    10. 'princip' → logprob: -6.864359378814697

Token 674: ' principal' (ID: 10589)
  Prédit: 'principal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'principal' → logprob: -0.605879008769989
    2. '__' → logprob: -0.855879008769989
    3. ' principal' → logprob: -3.605879068374634
    4. 'princip' → logprob: -7.605878829956055
    5. ' __' → logprob: -7.730878829956055
    6. 'if' → logprob: -7.980878829956055
    7. '```' → logprob: -8.105878829956055
    8. 'main' → logprob: -8.480878829956055
    9. 'd' → logprob: -8.980878829956055
    10. 'Principal' → logprob: -9.230878829956055

Token 675: ' exécut' (ID: 165350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005511214956641197
    2. ' if' → logprob: -5.255511283874512
    3. '
' → logprob: -8.755511283874512
    4. '__' → logprob: -9.380511283874512
    5. '```' → logprob: -10.880511283874512
    6. ':' → logprob: -11.630511283874512
    7. ':
' → logprob: -12.505511283874512
    8. ' and' → logprob: -14.380511283874512
    9. '

' → logprob: -14.380511283874512
    10. 'and' → logprob: -14.630511283874512

Token 676: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.009712301194667816
    2. 'able' → logprob: -4.759712219238281
    3. '__' → logprob: -7.259712219238281
    4. 'if' → logprob: -7.884712219238281
    5. 'e' → logprob: -11.384712219238281
    6. 'ed' → logprob: -12.884712219238281
    7. 'É' → logprob: -14.259712219238281
    8. 'ée' → logprob: -14.634712219238281
    9. ' if' → logprob: -14.759712219238281
    10. 'è' → logprob: -15.259712219238281

Token 677: ',
' (ID: 412)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0021625140216201544
    2. ' if' → logprob: -6.252162456512451
    3. '
' → logprob: -8.87716293334961
    4. '```' → logprob: -10.00216293334961
    5. ':
' → logprob: -10.87716293334961
    6. '__' → logprob: -11.00216293334961
    7. ':' → logprob: -11.37716293334961
    8. '``' → logprob: -14.25216293334961
    9. '

' → logprob: -15.62716293334961
    10. 'and' → logprob: -16.50216293334961

Token 678: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009462343878112733
    2. '__' → logprob: -7.125946044921875
    3. ' if' → logprob: -8.875946044921875
    4. '#' → logprob: -14.125946044921875
    5. ' __' → logprob: -14.125946044921875
    6. 'and' → logprob: -15.625946044921875
    7. '```' → logprob: -15.750946044921875
    8. 'name' → logprob: -16.500946044921875
    9. '#if' → logprob: -16.875946044921875
    10. 'i' → logprob: -17.375946044921875

Token 679: ' plutôt' (ID: 40017)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.65101717156358e-05
    2. ' if' → logprob: -9.250096321105957
    3. '__' → logprob: -14.875096321105957
    4. '```' → logprob: -18.500097274780273
    5. '
' → logprob: -19.125097274780273
    6. '#' → logprob: -20.875097274780273
    7. 'and' → logprob: -21.875097274780273
    8. ' __' → logprob: -22.250097274780273
    9. '#if' → logprob: -22.625097274780273
    10. 'elif' → logprob: -23.500097274780273

Token 680: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.8949904441833496
    2. ' than' → logprob: -0.8949904441833496
    3. 'que' → logprob: -2.5199904441833496
    4. 'than' → logprob: -2.7699904441833496
    5. 'qu' → logprob: -4.26999044418335
    6. ' qu' → logprob: -4.76999044418335
    7. 'if' → logprob: -4.76999044418335
    8. '_than' → logprob: -5.76999044418335
    9. '__' → logprob: -6.01999044418335
    10. '  ' → logprob: -6.64499044418335

Token 681: ''import' (ID: 195830)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8223409056663513
    2. ''un' → logprob: -1.947340965270996
    3. ''en' → logprob: -2.072340965270996
    4. 'que' → logprob: -2.822340965270996
    5. ' un' → logprob: -3.197340965270996
    6. ' en' → logprob: -3.322340965270996
    7. '__' → logprob: -3.447340965270996
    8. 'en' → logprob: -3.447340965270996
    9. 'e' → logprob: -3.947340965270996
    10. ' que' → logprob: -4.197340965270996

Token 682: 'é' (ID: 377)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20934897661209106
    2. '__' → logprob: -1.7093489170074463
    3. ' if' → logprob: -5.084349155426025
    4. 'é' → logprob: -6.459349155426025
    5. ' __' → logprob: -9.459348678588867
    6. '==' → logprob: -10.459348678588867
    7. 'ed' → logprob: -11.709348678588867
    8. '_name' → logprob: -11.834348678588867
    9. 'e' → logprob: -12.709348678588867
    10. '```' → logprob: -13.084348678588867

Token 683: ' comme' (ID: 7971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012407224625349045
    2. ' if' → logprob: -4.512407302856445
    3. '
' → logprob: -6.887407302856445
    4. ':
' → logprob: -8.387407302856445
    5. ':' → logprob: -9.512407302856445
    6. '__' → logprob: -11.137407302856445
    7. '```' → logprob: -11.262407302856445
    8. '.
' → logprob: -12.637407302856445
    9. ':

' → logprob: -14.762407302856445
    10. '  
' → logprob: -14.762407302856445

Token 684: ' module' (ID: 8827)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.006799329072237015
    2. 'un' → logprob: -5.631799221038818
    3. ' module' → logprob: -6.006799221038818
    4. 'module' → logprob: -7.256799221038818
    5. '__' → logprob: -11.756799697875977
    6. ' une' → logprob: -11.756799697875977
    7. ' __' → logprob: -12.256799697875977
    8. ' a' → logprob: -12.756799697875977
    9. 'import' → logprob: -14.131799697875977
    10. ' ' → logprob: -14.631799697875977

Token 685: ' dans' (ID: 2671)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0021901142317801714
    2. ' if' → logprob: -6.252190113067627
    3. '
' → logprob: -8.377190589904785
    4. ':
' → logprob: -10.502190589904785
    5. '```' → logprob: -13.502190589904785
    6. ':' → logprob: -13.627190589904785
    7. '__' → logprob: -14.752190589904785
    8. '

' → logprob: -15.002190589904785
    9. '.
' → logprob: -15.502190589904785
    10. ':

' → logprob: -16.62718963623047

Token 686: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1941135823726654
    2. 'un' → logprob: -1.8191136121749878
    3. '__' → logprob: -4.944113731384277
    4. ' d' → logprob: -5.819113731384277
    5. 'une' → logprob: -6.569113731384277
    6. 'd' → logprob: -7.194113731384277
    7. ' une' → logprob: -7.569113731384277
    8. 'aut' → logprob: -8.069113731384277
    9. ' __' → logprob: -8.194113731384277
    10. ''un' → logprob: -8.819113731384277

Token 687: ' autre' (ID: 20278)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.4962211847305298
    2. ' autre' → logprob: -1.4962211847305298
    3. 'module' → logprob: -2.7462210655212402
    4. 'script' → logprob: -3.3712210655212402
    5. 'programme' → logprob: -3.4962210655212402
    6. ' script' → logprob: -3.9962210655212402
    7. 'import' → logprob: -4.74622106552124
    8. ' programme' → logprob: -5.74622106552124
    9. '```' → logprob: -6.12122106552124
    10. ' module' → logprob: -6.62122106552124

Token 688: ' script' (ID: 11713)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0064352876506745815
    2. ' if' → logprob: -5.756435394287109
    3. '__' → logprob: -6.006435394287109
    4. '
' → logprob: -7.506435394287109
    5. ':
' → logprob: -9.13143539428711
    6. '```' → logprob: -10.00643539428711
    7. ':' → logprob: -10.38143539428711
    8. '.py' → logprob: -11.25643539428711
    9. '.
' → logprob: -11.88143539428711
    10. '_' → logprob: -12.13143539428711

Token 689: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2530258595943451
    2. '
' → logprob: -1.5030258893966675
    3. '

' → logprob: -7.378026008605957
    4. ' if' → logprob: -7.753026008605957
    5. ':
' → logprob: -11.003026008605957
    6. '  
' → logprob: -12.003026008605957
    7. '\n' → logprob: -12.128026008605957
    8. '```' → logprob: -12.253026008605957
    9. '
' → logprob: -12.753026008605957
    10. ':' → logprob: -13.628026008605957

Token 690: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.180879816180095e-05
    2. '
' → logprob: -10.000051498413086
    3. ' if' → logprob: -12.000051498413086
    4. '```' → logprob: -15.500051498413086
    5. '

' → logprob: -17.750051498413086
    6. '\n' → logprob: -18.750051498413086
    7. '  
' → logprob: -19.125051498413086
    8. ' 
' → logprob: -20.375051498413086
    9. '    
' → logprob: -20.375051498413086
    10. '
' → logprob: -21.250051498413086

Token 691: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.038056522607803345
    2. '__' → logprob: -3.2880566120147705
    3. ' ' → logprob: -11.163056373596191
    4. '_name' → logprob: -15.288056373596191
    5. '_' → logprob: -15.538056373596191
    6. 'name' → logprob: -15.913056373596191
    7. ' ' → logprob: -16.163057327270508
    8. ' ' → logprob: -16.663057327270508
    9. ' name' → logprob: -17.163057327270508
    10. '﻿' → logprob: -17.413057327270508

Token 692: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6469341516494751
    2. '==' → logprob: -0.7719341516494751
    3. '__' → logprob: -4.2719340324401855
    4. '=="' → logprob: -8.521934509277344
    5. 'name' → logprob: -10.521934509277344
    6. ' __' → logprob: -11.021934509277344
    7. '=='' → logprob: -11.271934509277344
    8. '=' → logprob: -12.396934509277344
    9. '_' → logprob: -12.396934509277344
    10. 'main' → logprob: -12.521934509277344

Token 693: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.52919222577475e-05
    2. '==' → logprob: -9.500075340270996
    3. ' ==' → logprob: -15.750075340270996
    4. '=="' → logprob: -16.37507438659668
    5. '"' → logprob: -17.12507438659668
    6. '__.__' → logprob: -17.25007438659668
    7. '____' → logprob: -17.75007438659668
    8. '___' → logprob: -17.87507438659668
    9. '_' → logprob: -18.00007438659668
    10. '=' → logprob: -18.62507438659668

Token 694: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11477302014827728
    2. '__' → logprob: -2.3647730350494385
    3. ' ==' → logprob: -4.364772796630859
    4. '=="' → logprob: -6.364772796630859
    5. '=='' → logprob: -11.36477279663086
    6. '=' → logprob: -12.61477279663086
    7. '==
' → logprob: -12.61477279663086
    8. '===' → logprob: -13.23977279663086
    9. '"' → logprob: -13.98977279663086
    10. '_' → logprob: -15.48977279663086

Token 695: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0032265526242554188
    2. ''' → logprob: -5.7532267570495605
    3. ' "__' → logprob: -10.003226280212402
    4. '__' → logprob: -12.628226280212402
    5. ' '__' → logprob: -15.378226280212402
    6. '"user' → logprob: -17.37822723388672
    7. '("__' → logprob: -17.50322723388672
    8. '"name' → logprob: -17.62822723388672
    9. ''"' → logprob: -18.25322723388672
    10. '"_' → logprob: -18.50322723388672

Token 696: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.750436007976532e-05
    2. '__' → logprob: -10.25003719329834
    3. 'name' → logprob: -13.12503719329834
    4. '_main' → logprob: -16.875038146972656
    5. 'm' → logprob: -17.500038146972656
    6. ' main' → logprob: -17.500038146972656
    7. '__':
' → logprob: -19.625038146972656
    8. 'ma' → logprob: -19.875038146972656
    9. '(main' → logprob: -20.750038146972656
    10. 'MAIN' → logprob: -20.750038146972656

Token 697: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.008616581559181213
    2. '__' → logprob: -4.7586164474487305
    3. '__":
' → logprob: -13.13361644744873
    4. '_' → logprob: -17.258617401123047
    5. '':
' → logprob: -18.633617401123047
    6. '__:' → logprob: -18.883617401123047
    7. '___' → logprob: -20.133617401123047
    8. '__.' → logprob: -20.508617401123047
    9. '__('' → logprob: -20.758617401123047
    10. ''' → logprob: -21.133617401123047

Token 698: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2255283147096634
    2. 'main' → logprob: -2.2255282402038574
    3. ':' → logprob: -3.2255282402038574
    4. '   ' → logprob: -3.2255282402038574
    5. '	main' → logprob: -5.475528240203857
    6. '__' → logprob: -5.725528240203857
    7. '__':
' → logprob: -6.475528240203857
    8. '_main' → logprob: -6.850528240203857
    9. ' ' → logprob: -6.850528240203857
    10. ':
' → logprob: -7.100528240203857

Token 699: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.0325924449716695e-05
    2. ' main' → logprob: -11.50001049041748
    3. '	main' → logprob: -16.000009536743164
    4. '   ' → logprob: -17.375009536743164
    5. '_main' → logprob: -21.125009536743164
    6. '(main' → logprob: -21.500009536743164
    7. '.main' → logprob: -22.625009536743164
    8. 'Main' → logprob: -22.875009536743164
    9. 'maine' → logprob: -23.625009536743164
    10. '  ' → logprob: -23.875009536743164

Token 700: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018540039658546448
    2. '<|end|>' → logprob: -4.393539905548096
    3. '()
' → logprob: -6.018539905548096
    4. '```' → logprob: -6.768539905548096
    5. '
' → logprob: -7.393539905548096
    6. '(' → logprob: -7.643539905548096
    7. ':' → logprob: -7.768539905548096
    8. '():' → logprob: -7.893539905548096
    9. ')' → logprob: -8.393540382385254
    10. '[' → logprob: -10.268540382385254

Token 701: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 702: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 703: ' App' (ID: 2583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 704: 'elle' (ID: 3486)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.6628299951553345
    2. 'elle' → logprob: -1.1628299951553345
    3. 'eler' → logprob: -1.7878299951553345
    4. 'ele' → logprob: -6.287829875946045
    5. 'le' → logprob: -6.537829875946045
    6. 'eller' → logprob: -7.787829875946045
    7. 'ler' → logprob: -7.912829875946045
    8. 'elé' → logprob: -8.287830352783203
    9. 'l' → logprob: -8.662830352783203
    10. 'e' → logprob: -9.787830352783203

Token 705: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -7.612634362885728e-05
    2. '(' → logprob: -9.500076293945312
    3. '()
' → logprob: -14.125076293945312
    4. ' ()' → logprob: -15.125076293945312
    5. '()`' → logprob: -16.750076293945312
    6. '()

' → logprob: -16.875076293945312
    7. '();' → logprob: -17.875076293945312
    8. '())' → logprob: -18.250076293945312
    9. '(
' → logprob: -18.375076293945312
    10. '()<' → logprob: -18.625076293945312

Token 706: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.016958462074398994
    2. 'fonction' → logprob: -4.266958236694336
    3. 'function' → logprob: -6.141958236694336
    4. '()' → logprob: -7.766958236694336
    5. '(main' → logprob: -9.141958236694336
    6. ' main' → logprob: -9.891958236694336
    7. 'principal' → logprob: -11.141958236694336
    8. 'ma' → logprob: -11.766958236694336
    9. 'princip' → logprob: -11.891958236694336
    10. 'fon' → logprob: -12.016958236694336

Token 707: ' '' (ID: 461)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05525098741054535
    2. 'main' → logprob: -2.930250883102417
    3. '(' → logprob: -9.305251121520996
    4. '(main' → logprob: -9.555251121520996
    5. '()
' → logprob: -9.680251121520996
    6. ')' → logprob: -10.055251121520996
    7. ' main' → logprob: -10.055251121520996
    8. '```' → logprob: -11.055251121520996
    9. '())' → logprob: -11.680251121520996
    10. '(
' → logprob: -11.930251121520996

Token 708: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. '	main' → logprob: -18.75
    4. 'm' → logprob: -19.75
    5. '(main' → logprob: -20.0
    6. 'ma' → logprob: -20.125
    7. 'mai' → logprob: -20.125
    8. 'principal' → logprob: -20.125
    9. '   ' → logprob: -20.75
    10. '.main' → logprob: -21.125

Token 709: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015991552209015936
    2. '()
' → logprob: -8.750160217285156
    3. '()`' → logprob: -14.125160217285156
    4. '(' → logprob: -15.750160217285156
    5. '()

' → logprob: -15.750160217285156
    6. ' ()' → logprob: -16.000160217285156
    7. '())' → logprob: -16.750160217285156
    8. '()"' → logprob: -16.875160217285156
    9. '()
' → logprob: -17.000160217285156
    10. '```' → logprob: -17.375160217285156

Token 710: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 711: ' lancer' (ID: 82697)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.030506260693073273
    2. 'execut' → logprob: -4.155506134033203
    3. 'l' → logprob: -4.405506134033203
    4. 'execute' → logprob: -7.155506134033203
    5. ' ex' → logprob: -7.405506134033203
    6. 'exec' → logprob: -7.655506134033203
    7. 'd' → logprob: -9.530506134033203
    8. 'execution' → logprob: -9.905506134033203
    9. ' lancer' → logprob: -10.280506134033203
    10. ''ex' → logprob: -10.655506134033203

Token 712: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.771655115589965e-05
    2. 'le' → logprob: -11.375018119812012
    3. 'the' → logprob: -13.625018119812012
    4. '()
' → logprob: -14.000018119812012
    5. ' ()' → logprob: -14.125018119812012
    6. '();' → logprob: -14.750018119812012
    7. 'la' → logprob: -14.750018119812012
    8. '(' → logprob: -15.000018119812012
    9. '().' → logprob: -15.125018119812012
    10. 'main' → logprob: -15.125018119812012

Token 713: ' processus' (ID: 49849)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.002083881525322795
    2. 'program' → logprob: -6.502083778381348
    3. ' programme' → logprob: -7.502083778381348
    4. 'script' → logprob: -11.377083778381348
    5. 'code' → logprob: -12.002083778381348
    6. 'programm' → logprob: -12.252083778381348
    7. 'process' → logprob: -13.002083778381348
    8. 'calcul' → logprob: -13.252083778381348
    9. 'programma' → logprob: -13.502083778381348
    10. 'trait' → logprob: -14.002083778381348

Token 714: ' principal' (ID: 10589)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 715: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 716: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.0203823484480381
    2. 'program' → logprob: -4.270382404327393
    3. 'script' → logprob: -5.270382404327393
    4. ' programme' → logprob: -6.895382404327393
    5. ' script' → logprob: -10.895381927490234
    6. 'code' → logprob: -10.895381927490234
    7. 'programm' → logprob: -12.770381927490234
    8. 'programma' → logprob: -12.770381927490234
    9. 'Programme' → logprob: -14.020381927490234
    10. 'prog' → logprob: -14.395381927490234


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 714
Tokens correctement prédits (1ère position, stricte): 186
Tokens correctement prédits (1ère position, avec adaptation): 198
Tokens correctement prédits (top 10): 427
Précision stricte (1ère position): 26.05%
Précision adaptée (1ère position): 27.73%
Précision (top 10): 59.80%
================================================================================
