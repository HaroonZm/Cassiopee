================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import socket

# Récupère le nom d'hôte (hostname) de la machine locale
hostname = socket.gethostname()

# Si le programme s'exécute sur une machine spécifique, redirige l'entrée standard depuis le fichier 'a1.in'.
if hostname == 'F451C':
    sys.stdin = open('a1.in')

def read_int_list():
    """
    Lit une ligne de l'entrée standard, la sépare par les espaces, 
    convertit chaque élément en entier et retourne la liste des entiers lus.

    Returns:
        list of int: Liste des entiers obtenus depuis l'entrée.
    """
    return list(map(int, input().split()))

def read_str_list():
    """
    Lit une ligne de l'entrée standard, la sépare par les espaces 
    et retourne la liste des chaînes obtenues.

    Returns:
        list of str: Liste des chaînes lues depuis l'entrée.
    """
    return input().split()

def read_int():
    """
    Lit une ligne de l'entrée standard et la convertit en entier.

    Returns:
        int: L'entier lu depuis l'entrée.
    """
    return int(input())

def read_str():
    """
    Lit une ligne de l'entrée standard et la retourne telle quelle (chaîne de caractères).

    Returns:
        str: La chaîne lue depuis l'entrée.
    """
    return input()

def main():
    """
    Fonction principale du programme.
    Lit deux entiers H et A depuis l'entrée,
    puis calcule le nombre minimal d'opérations nécessaires pour réduire
    H à un nombre inférieur ou égal à zéro en soustrayant A à chaque étape.
    Affiche ensuite le nombre d'opérations réalisées.
    """
    # Lit les valeurs de H (santé) et A (attaque) depuis l'entrée
    H, A = read_int_list()
    res = 0  # Initialise le compteur d'opérations à zéro
    
    # Répète l'opération de soustraction de A à H jusqu'à ce que H soit inférieur ou égal à zéro
    for i in range(10001):
        H = H - A  # Soustrait A à la valeur courante de H
        res += 1   # Incrémente le compteur d'opérations
        if H <= 0:
            break  # Termine la boucle si H est inférieur ou égal à zéro
    
    # Affiche le nombre total d'opérations effectuées
    print(res)

# Exécute la fonction principale lorsque le script est lancé
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' socket' (ID: 15114)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27923473715782166
    2. '\n' → logprob: -1.904234766960144
    3. 'import' → logprob: -3.6542346477508545
    4. '\' → logprob: -3.7792346477508545
    5. '
' → logprob: -3.9042346477508545
    6. '```' → logprob: -4.404234886169434
    7. 'newline' → logprob: -5.529234886169434
    8. '

' → logprob: -6.029234886169434
    9. '.
' → logprob: -6.529234886169434
    10. '<|end|>' → logprob: -6.654234886169434

Token 6: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2653789818286896
    2. 's' → logprob: -2.890378952026367
    3. '\n' → logprob: -3.265378952026367
    4. '=' → logprob: -3.390378952026367
    5. '```' → logprob: -3.515378952026367
    6. '\' → logprob: -4.140378952026367
    7. 'import' → logprob: -4.140378952026367
    8. '#' → logprob: -4.265378952026367
    9. ',' → logprob: -5.265378952026367
    10. '
' → logprob: -5.390378952026367

Token 7: ' R' (ID: 460)
  Prédit: 'server'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'server' → logprob: -0.31585660576820374
    2. '#' → logprob: -1.9408565759658813
    3. ' server' → logprob: -3.440856695175171
    4. 'import' → logprob: -4.065856456756592
    5. 'def' → logprob: -4.315856456756592
    6. ' #' → logprob: -4.440856456756592
    7. 'class' → logprob: -4.940856456756592
    8. ' import' → logprob: -4.940856456756592
    9. ' def' → logprob: -5.440856456756592
    10. 'try' → logprob: -5.565856456756592

Token 8: 'éc' (ID: 5675)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.05343480035662651
    2. 'e' → logprob: -3.0534348487854004
    3. '#' → logprob: -6.3034348487854
    4. 'EC' → logprob: -6.4284348487854
    5. 'ead' → logprob: -7.5534348487854
    6. ' E' → logprob: -9.303434371948242
    7. 'ec' → logprob: -9.553434371948242
    8. 'A' → logprob: -9.553434371948242
    9. 'O' → logprob: -10.053434371948242
    10. 'a' → logprob: -10.178434371948242

Token 9: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.015673227608203888
    2. 'import' → logprob: -5.1406731605529785
    3. 'u' → logprob: -5.5156731605529785
    4. '#' → logprob: -5.6406731605529785
    5. '```' → logprob: -7.8906731605529785
    6. 'e' → logprob: -8.015673637390137
    7. 'upt' → logprob: -8.140673637390137
    8. 'uper' → logprob: -8.890673637390137
    9. 'é' → logprob: -8.890673637390137
    10. 'cup' → logprob: -9.265673637390137

Token 10: 'ère' (ID: 4346)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.13456511497497559
    2. 'ération' → logprob: -2.2595651149749756
    3. 'é' → logprob: -4.009565353393555
    4. 'éer' → logprob: -6.634565353393555
    5. 'è' → logprob: -6.759565353393555
    6. 'ér' → logprob: -8.134565353393555
    7. 'érez' → logprob: -8.509565353393555
    8. 'érateur' → logprob: -9.509565353393555
    9. 'érir' → logprob: -9.634565353393555
    10. '#' → logprob: -10.259565353393555

Token 11: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6586174964904785
    2. ' ' → logprob: -0.7836174964904785
    3. ' l' → logprob: -4.6586174964904785
    4. 's' → logprob: -5.0336174964904785
    5. ' le' → logprob: -6.6586174964904785
    6. ' ' → logprob: -6.6586174964904785
    7. '_hostname' → logprob: -6.7836174964904785
    8. ' hostname' → logprob: -6.9086174964904785
    9. ' la' → logprob: -7.0336174964904785
    10. ' _' → logprob: -7.4086174964904785

Token 12: ' nom' (ID: 8080)
  Prédit: 'hostname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hostname' → logprob: -0.24298804998397827
    2. 'host' → logprob: -2.492988109588623
    3. ' hostname' → logprob: -2.492988109588623
    4. 'nom' → logprob: -3.992988109588623
    5. 's' → logprob: -4.242988109588623
    6. 'h' → logprob: -4.492988109588623
    7. '_hostname' → logprob: -6.242988109588623
    8. ' host' → logprob: -7.117988109588623
    9. ' nom' → logprob: -7.117988109588623
    10. ' ' → logprob: -7.492988109588623

Token 13: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07036930322647095
    2. ' de' → logprob: -3.195369243621826
    3. ' ' → logprob: -3.945369243621826
    4. ' d' → logprob: -6.445369243621826
    5. '_de' → logprob: -6.695369243621826
    6. 'de' → logprob: -6.945369243621826
    7. ' =' → logprob: -7.445369243621826
    8. ')' → logprob: -7.570369243621826
    9. '_hostname' → logprob: -7.570369243621826
    10. ' du' → logprob: -7.820369243621826

Token 14: ''h' (ID: 10612)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7621825337409973
    2. ''h' → logprob: -1.7621824741363525
    3. ''utilisateur' → logprob: -2.1371824741363525
    4. 'host' → logprob: -2.3871824741363525
    5. 'd' → logprob: -3.0121824741363525
    6. '_' → logprob: -3.6371824741363525
    7. 'ordinateur' → logprob: -4.637182712554932
    8. 'hostname' → logprob: -5.012182712554932
    9. '_h' → logprob: -5.012182712554932
    10. 'e' → logprob: -5.012182712554932

Token 15: 'ôte' (ID: 78753)
  Prédit: 'ôte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ôte' → logprob: -0.00024025145103223622
    2. 'ôtes' → logprob: -8.875240325927734
    3. 'ote' → logprob: -9.625240325927734
    4. '#' → logprob: -11.750240325927734
    5. 'ô' → logprob: -12.250240325927734
    6. '¶' → logprob: -12.375240325927734
    7. 'ôté' → logprob: -12.375240325927734
    8. '\xc2' → logprob: -12.875240325927734
    9. '?' → logprob: -13.375240325927734
    10. '�' → logprob: -13.500240325927734

Token 16: ' (' (ID: 350)
  Prédit: 'hostname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hostname' → logprob: -0.32351428270339966
    2. 'host' → logprob: -1.5735142230987549
    3. ' =' → logprob: -2.948514223098755
    4. ' hostname' → logprob: -5.073514461517334
    5. '=' → logprob: -5.573514461517334
    6. '_hostname' → logprob: -5.823514461517334
    7. 'h' → logprob: -7.198514461517334
    8. '_' → logprob: -7.323514461517334
    9. '_host' → logprob: -7.948514461517334
    10. '(host' → logprob: -8.073513984680176

Token 17: 'hostname' (ID: 67891)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042555343359708786
    2. 'host' → logprob: -4.667555332183838
    3. 'ordinateur' → logprob: -4.667555332183838
    4. 'socket' → logprob: -5.292555332183838
    5. 'hostname' → logprob: -5.417555332183838
    6. 'local' → logprob: -5.667555332183838
    7. 'machine' → logprob: -6.042555332183838
    8. '):' → logprob: -6.417555332183838
    9. ')local' → logprob: -7.292555332183838
    10. ' )' → logprob: -7.292555332183838

Token 18: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025895543512888253
    2. ')
' → logprob: -9.500259399414062
    3. '')' → logprob: -9.625259399414062
    4. ' )' → logprob: -10.000259399414062
    5. 'hostname' → logprob: -11.000259399414062
    6. '):' → logprob: -11.250259399414062
    7. 's' → logprob: -11.875259399414062
    8. 'import' → logprob: -12.250259399414062
    9. ')#' → logprob: -12.500259399414062
    10. 'def' → logprob: -12.500259399414062

Token 19: ' de' (ID: 334)
  Prédit: 'hostname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hostname' → logprob: -0.21204958856105804
    2. 'host' → logprob: -1.7120496034622192
    3. ' =' → logprob: -4.83704948425293
    4. '=' → logprob: -6.96204948425293
    5. 'nom' → logprob: -7.71204948425293
    6. 'h' → logprob: -7.96204948425293
    7. ' hostname' → logprob: -8.58704948425293
    8. '_hostname' → logprob: -8.58704948425293
    9. 'socket' → logprob: -9.83704948425293
    10. 'localhost' → logprob: -9.83704948425293

Token 20: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5843004584312439
    2. 'la' → logprob: -1.4593005180358887
    3. ' la' → logprob: -1.7093005180358887
    4. ' l' → logprob: -3.5843005180358887
    5. '```' → logprob: -7.834300518035889
    6. ' ' → logprob: -8.45930004119873
    7. 'localhost' → logprob: -9.20930004119873
    8. '	l' → logprob: -9.33430004119873
    9. 'le' → logprob: -9.45930004119873
    10. ' votre' → logprob: -9.70930004119873

Token 21: ' machine' (ID: 7342)
  Prédit: 'machine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'machine' → logprob: -0.00823606550693512
    2. ' machine' → logprob: -5.008235931396484
    3. '#' → logprob: -8.133235931396484
    4. '   ' → logprob: -8.133235931396484
    5. '```' → logprob: -8.383235931396484
    6. 'local' → logprob: -8.633235931396484
    7. ' ' → logprob: -8.883235931396484
    8. 'ma' → logprob: -9.008235931396484
    9. 'mach' → logprob: -9.508235931396484
    10. 'localhost' → logprob: -10.883235931396484

Token 22: ' locale' (ID: 28442)
  Prédit: 'hostname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hostname' → logprob: -0.025312935933470726
    2. 'host' → logprob: -3.775312900543213
    3. '
' → logprob: -7.275312900543213
    4. ' hostname' → logprob: -7.400312900543213
    5. '_hostname' → logprob: -7.650312900543213
    6. 'nom' → logprob: -9.400313377380371
    7. 'name' → logprob: -10.150313377380371
    8. ' =' → logprob: -11.025313377380371
    9. 'localhost' → logprob: -11.025313377380371
    10. '```' → logprob: -11.150313377380371

Token 23: '
' (ID: 198)
  Prédit: 'hostname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hostname' → logprob: -0.03816519305109978
    2. 'host' → logprob: -3.2881650924682617
    3. '_hostname' → logprob: -10.163165092468262
    4. ' hostname' → logprob: -10.663165092468262
    5. 'localhost' → logprob: -10.788165092468262
    6. 'local' → logprob: -11.163165092468262
    7. '
' → logprob: -12.038165092468262
    8. '```' → logprob: -12.288165092468262
    9. 'nom' → logprob: -12.413165092468262
    10. 'my' → logprob: -13.038165092468262

Token 24: 'hostname' (ID: 67891)
  Prédit: 'hostname'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hostname' → logprob: -0.0032493663020431995
    2. 'host' → logprob: -5.753249168395996
    3. ' hostname' → logprob: -10.128249168395996
    4. 'localhost' → logprob: -11.003249168395996
    5. 'local' → logprob: -11.378249168395996
    6. '```' → logprob: -13.628249168395996
    7. '_hostname' → logprob: -14.003249168395996
    8. 'my' → logprob: -14.878249168395996
    9. 'import' → logprob: -15.378249168395996
    10. 'nom' → logprob: -15.628249168395996

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31439104676246643
    2. '=' → logprob: -1.314391016960144
    3. '.' → logprob: -7.189391136169434
    4. ')' → logprob: -8.814391136169434
    5. ',' → logprob: -9.189391136169434
    6. 's' → logprob: -9.814391136169434
    7. ' =
' → logprob: -10.939391136169434
    8. '=sys' → logprob: -11.564391136169434
    9. 'import' → logprob: -11.814391136169434
    10. ']' → logprob: -12.564391136169434

Token 26: ' socket' (ID: 15114)
  Prédit: ' socket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' socket' → logprob: -0.1426803171634674
    2. 'socket' → logprob: -2.0176804065704346
    3. '(socket' → logprob: -13.017680168151855
    4. '	socket' → logprob: -13.267680168151855
    5. '.socket' → logprob: -14.642680168151855
    6. 'Socket' → logprob: -15.517680168151855
    7. ' ' → logprob: -16.142681121826172
    8. '_socket' → logprob: -16.267681121826172
    9. 's' → logprob: -16.767681121826172
    10. ' ' → logprob: -17.017681121826172

Token 27: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.03827683627605438
    2. '.' → logprob: -3.2882769107818604
    3. '.g' → logprob: -9.413276672363281
    4. '.hostname' → logprob: -10.913276672363281
    5. ' .' → logprob: -11.038276672363281
    6. '.ge' → logprob: -11.288276672363281
    7. '.getenv' → logprob: -11.413276672363281
    8. '.readline' → logprob: -11.663276672363281
    9. '.s' → logprob: -11.788276672363281
    10. '.socket' → logprob: -11.913276672363281

Token 28: 'hostname' (ID: 67891)
  Prédit: 'hostname'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hostname' → logprob: -0.0006435725372284651
    2. 'host' → logprob: -7.500643730163574
    3. 'fq' → logprob: -9.375643730163574
    4. '_hostname' → logprob: -12.125643730163574
    5. ' hostname' → logprob: -14.875643730163574
    6. '.hostname' → logprob: -17.000642776489258
    7. '_host' → logprob: -17.625642776489258
    8. 'localhost' → logprob: -17.750642776489258
    9. '-host' → logprob: -18.375642776489258
    10. 'Hostname' → logprob: -18.375642776489258

Token 29: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012091610115021467
    2. '(' → logprob: -6.751209259033203
    3. ' ()' → logprob: -11.751209259033203
    4. '`()' → logprob: -12.001209259033203
    5. '())' → logprob: -12.876209259033203
    6. '()
' → logprob: -13.001209259033203
    7. ')' → logprob: -13.001209259033203
    8. '```' → logprob: -13.126209259033203
    9. '|()
' → logprob: -13.251209259033203
    10. ']()' → logprob: -13.251209259033203

Token 30: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24858102202415466
    2. 'ip' → logprob: -1.873581051826477
    3. 'print' → logprob: -2.8735809326171875
    4. '\n' → logprob: -5.6235809326171875
    5. '\' → logprob: -6.2485809326171875
    6. '
' → logprob: -6.7485809326171875
    7. '_ip' → logprob: -6.8735809326171875
    8. 'IP' → logprob: -7.7485809326171875
    9. 'try' → logprob: -8.123580932617188
    10. '```' → logprob: -8.248580932617188

Token 31: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6356618404388428
    2. '#' → logprob: -1.3856618404388428
    3. 'ip' → logprob: -1.6356618404388428
    4. 'try' → logprob: -4.635662078857422
    5. ' ip' → logprob: -5.260662078857422
    6. 'host' → logprob: -5.510662078857422
    7. ' print' → logprob: -6.010662078857422
    8. 'address' → logprob: -7.260662078857422
    9. ' try' → logprob: -7.385662078857422
    10. 'IP' → logprob: -7.885662078857422

Token 32: ' le' (ID: 505)
  Prédit: ' hostname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hostname' → logprob: -0.157041996717453
    2. ' __' → logprob: -3.1570420265197754
    3. 'hostname' → logprob: -3.4070420265197754
    4. ' len' → logprob: -4.032042026519775
    5. ' socket' → logprob: -4.532042026519775
    6. ' sys' → logprob: -4.532042026519775
    7. ' not' → logprob: -4.657042026519775
    8. ' ' → logprob: -4.782042026519775
    9. ' '' → logprob: -6.032042026519775
    10. ' "' → logprob: -6.657042026519775

Token 33: ' programme' (ID: 18190)
  Prédit: ' hostname'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hostname' → logprob: -0.8185988068580627
    2. 'hostname' → logprob: -1.693598747253418
    3. ' __' → logprob: -2.068598747253418
    4. ' nom' → logprob: -2.818598747253418
    5. 'name' → logprob: -2.943598747253418
    6. 'nom' → logprob: -3.193598747253418
    7. ' sys' → logprob: -3.693598747253418
    8. '__' → logprob: -3.818598747253418
    9. 'host' → logprob: -5.068598747253418
    10. 'sys' → logprob: -5.068598747253418

Token 34: ' s' (ID: 265)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.055760156363248825
    2. '==' → logprob: -3.555760145187378
    3. ' __' → logprob: -4.430760383605957
    4. 'name' → logprob: -5.055760383605957
    5. '__' → logprob: -5.680760383605957
    6. ' est' → logprob: -6.930760383605957
    7. '_name' → logprob: -6.930760383605957
    8. 'est' → logprob: -7.180760383605957
    9. '=' → logprob: -8.305760383605957
    10. ' =' → logprob: -8.430760383605957

Token 35: ''ex' (ID: 23472)
  Prédit: 'uit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uit' → logprob: -1.0282808542251587
    2. 'ert' → logprob: -1.2782808542251587
    3. 'e' → logprob: -2.028280735015869
    4. ''ex' → logprob: -3.153280735015869
    5. 'uite' → logprob: -3.528280735015869
    6. 'erve' → logprob: -3.653280735015869
    7. 'uis' → logprob: -3.903280735015869
    8. ''é' → logprob: -3.903280735015869
    9. 'é' → logprob: -4.153280735015869
    10. 'er' → logprob: -4.903280735015869

Token 36: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.3768934905529022
    2. 'ecute' → logprob: -1.2518935203552246
    3. 'é' → logprob: -3.7518935203552246
    4. 'ec' → logprob: -5.876893520355225
    5. 'écut' → logprob: -7.376893520355225
    6. 'cute' → logprob: -7.376893520355225
    7. 'e' → logprob: -9.126893043518066
    8. '#' → logprob: -9.376893043518066
    9. 'è' → logprob: -9.376893043518066
    10. 'écution' → logprob: -10.251893043518066

Token 37: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -2.641841820150148e-05
    2. 'ecute' → logprob: -11.12502670288086
    3. 'cute' → logprob: -12.00002670288086
    4. 'uite' → logprob: -13.87502670288086
    5. 'utte' → logprob: -14.12502670288086
    6. 'ut' → logprob: -14.37502670288086
    7. 'oute' → logprob: -14.87502670288086
    8. ' ute' → logprob: -14.87502670288086
    9. 'ure' → logprob: -15.00002670288086
    10. 'uter' → logprob: -15.00002670288086

Token 38: ' sur' (ID: 1512)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3059230446815491
    2. 'en' → logprob: -1.8059229850769043
    3. 'direct' → logprob: -3.6809229850769043
    4. 'sur' → logprob: -3.8059229850769043
    5. ' __' → logprob: -4.055922985076904
    6. ' directement' → logprob: -4.430922985076904
    7. 'dans' → logprob: -4.680922985076904
    8. ' sur' → logprob: -5.430922985076904
    9. '__' → logprob: -5.555922985076904
    10. 'as' → logprob: -6.305922985076904

Token 39: ' une' (ID: 2463)
  Prédit: ' localhost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' localhost' → logprob: -0.9176058173179626
    2. ' une' → logprob: -1.4176058769226074
    3. 'localhost' → logprob: -2.4176058769226074
    4. ' un' → logprob: -2.5426058769226074
    5. ' la' → logprob: -2.6676058769226074
    6. ' Windows' → logprob: -3.5426058769226074
    7. ' l' → logprob: -4.167605876922607
    8. ' '' → logprob: -4.292605876922607
    9. ' ' → logprob: -5.042605876922607
    10. ' Linux' → logprob: -5.042605876922607

Token 40: ' machine' (ID: 7342)
  Prédit: ' machine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' machine' → logprob: -0.6880376935005188
    2. 'machine' → logprob: -0.9380376935005188
    3. 'ligne' → logprob: -2.688037633895874
    4. ' ligne' → logprob: -4.813037872314453
    5. ' autre' → logprob: -5.188037872314453
    6. ' plateforme' → logprob: -5.938037872314453
    7. ' Windows' → logprob: -6.063037872314453
    8. 'interface' → logprob: -6.313037872314453
    9. 'localhost' → logprob: -6.438037872314453
    10. 'Windows' → logprob: -6.688037872314453

Token 41: ' spécifique' (ID: 113170)
  Prédit: ' distante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distante' → logprob: -0.8184507489204407
    2. ' locale' → logprob: -1.318450689315796
    3. 'locale' → logprob: -2.318450689315796
    4. ' localhost' → logprob: -2.568450689315796
    5. 'localhost' → logprob: -2.693450689315796
    6. ' linux' → logprob: -4.318450927734375
    7. ' Linux' → logprob: -5.068450927734375
    8. ' local' → logprob: -5.068450927734375
    9. 'local' → logprob: -5.193450927734375
    10. 'linux' → logprob: -5.568450927734375

Token 42: ',' (ID: 11)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6076396107673645
    2. ':' → logprob: -0.9826396107673645
    3. ',' → logprob: -2.8576395511627197
    4. ' ,' → logprob: -4.107639789581299
    5. ' :
' → logprob: -5.357639789581299
    6. ' =' → logprob: -7.857639789581299
    7. ' ' → logprob: -7.982639789581299
    8. 'if' → logprob: -8.10763931274414
    9. ':
' → logprob: -8.10763931274414
    10. '_' → logprob: -8.48263931274414

Token 43: ' red' (ID: 3592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.79133540391922
    2. ' :' → logprob: -0.79133540391922
    3. ' localhost' → logprob: -3.916335344314575
    4. '   ' → logprob: -5.041335582733154
    5. ' ' → logprob: -5.041335582733154
    6. ' '' → logprob: -5.041335582733154
    7. ' #' → logprob: -5.166335582733154
    8. ' if' → logprob: -5.291335582733154
    9. 'hostname' → logprob: -5.416335582733154
    10. 'localhost' → logprob: -5.416335582733154

Token 44: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.10660476237535477
    2. 'irect' → logprob: -3.106604814529419
    3. 'irection' → logprob: -3.231604814529419
    4. 'ém' → logprob: -5.73160457611084
    5. 'dir' → logprob: -5.85660457611084
    6. '_dir' → logprob: -6.35660457611084
    7. 'i' → logprob: -6.60660457611084
    8. 'if' → logprob: -6.85660457611084
    9. 'd' → logprob: -6.85660457611084
    10. 'irections' → logprob: -7.10660457611084

Token 45: 'ige' (ID: 2609)
  Prédit: 'ige'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ige' → logprob: -0.011145791970193386
    2. 'iger' → logprob: -5.63614559173584
    3. 'ig' → logprob: -5.63614559173584
    4. 'i' → logprob: -6.13614559173584
    5. 'e' → logprob: -7.76114559173584
    6. '   ' → logprob: -8.13614559173584
    7. '#' → logprob: -9.01114559173584
    8. '_' → logprob: -9.38614559173584
    9. '	' → logprob: -9.38614559173584
    10. '       ' → logprob: -9.51114559173584

Token 46: ' l' (ID: 305)
  Prédit: ' vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.09658186882734299
    2. '_' → logprob: -3.3465819358825684
    3. ' l' → logprob: -4.221581935882568
    4. ' la' → logprob: -4.471581935882568
    5. ' sys' → logprob: -5.721581935882568
    6. 'le' → logprob: -5.846581935882568
    7. ' le' → logprob: -5.846581935882568
    8. ' ' → logprob: -5.971581935882568
    9. ' ' → logprob: -6.346581935882568
    10. '   ' → logprob: -6.346581935882568

Token 47: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7255682349205017
    2. 'es' → logprob: -1.3505682945251465
    3. 'e' → logprob: -1.7255682945251465
    4. ''' → logprob: -3.4755682945251465
    5. '_' → logprob: -3.9755682945251465
    6. ' a' → logprob: -4.9755682945251465
    7. ''import' → logprob: -4.9755682945251465
    8. ''utilisateur' → logprob: -5.6005682945251465
    9. ''a' → logprob: -5.7255682945251465
    10. 'ui' → logprob: -6.7255682945251465

Token 48: ' standard' (ID: 7024)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2659249305725098
    2. '_' → logprob: -1.5159249305725098
    3. '=sys' → logprob: -1.8909249305725098
    4. 'sys' → logprob: -2.6409249305725098
    5. '=' → logprob: -2.7659249305725098
    6. 'import' → logprob: -2.7659249305725098
    7. ' sys' → logprob: -2.7659249305725098
    8. '()' → logprob: -3.8909249305725098
    9. 'if' → logprob: -4.14092493057251
    10. 's' → logprob: -4.76592493057251

Token 49: ' depuis' (ID: 16277)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5374248623847961
    2. 'if' → logprob: -1.9124248027801514
    3. ' :' → logprob: -2.0374248027801514
    4. ' =' → logprob: -2.9124248027801514
    5. ' if' → logprob: -3.5374248027801514
    6. ' :
' → logprob: -4.2874250411987305
    7. ' ' → logprob: -4.7874250411987305
    8. ':
' → logprob: -5.1624250411987305
    9. 'import' → logprob: -5.4124250411987305
    10. ',' → logprob: -5.7874250411987305

Token 50: ' le' (ID: 505)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.05131705477833748
    2. ''' → logprob: -4.30131721496582
    3. ''s' → logprob: -4.42631721496582
    4. ''une' → logprob: -4.80131721496582
    5. 'sys' → logprob: -5.05131721496582
    6. 'un' → logprob: -5.80131721496582
    7. '"' → logprob: -5.80131721496582
    8. ''t' → logprob: -7.42631721496582
    9. ''f' → logprob: -7.55131721496582
    10. ' sys' → logprob: -7.67631721496582

Token 51: ' fichier' (ID: 69637)
  Prédit: ' fichier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fichier' → logprob: -0.5450485348701477
    2. 'f' → logprob: -0.9200485348701477
    3. ' f' → logprob: -5.295048713684082
    4. ''' → logprob: -5.920048713684082
    5. 'file' → logprob: -5.920048713684082
    6. ' file' → logprob: -6.295048713684082
    7. ''f' → logprob: -6.295048713684082
    8. ' '' → logprob: -7.045048713684082
    9. 'sys' → logprob: -7.170048713684082
    10. 'un' → logprob: -7.295048713684082

Token 52: ' '' (ID: 461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0387264490127563
    2. ' ' → logprob: -1.2887264490127563
    3. ' "' → logprob: -2.038726329803467
    4. ' '' → logprob: -2.413726329803467
    5. '"' → logprob: -3.163726329803467
    6. ''' → logprob: -3.413726329803467
    7. ' _' → logprob: -3.913726329803467
    8. 'input' → logprob: -4.413726329803467
    9. ' :' → logprob: -5.163726329803467
    10. '_input' → logprob: -5.413726329803467

Token 53: 'a' (ID: 64)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7086562514305115
    2. ' input' → logprob: -0.9586562514305115
    3. ' data' → logprob: -3.4586563110351562
    4. 'data' → logprob: -3.9586563110351562
    5. 'stdin' → logprob: -4.708656311035156
    6. 'config' → logprob: -4.958656311035156
    7. ' config' → logprob: -5.083656311035156
    8. ' test' → logprob: -5.208656311035156
    9. ' localhost' → logprob: -5.458656311035156
    10. ' local' → logprob: -5.708656311035156

Token 54: '1' (ID: 16)
  Prédit: '.in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.9959776401519775
    2. 'in' → logprob: -1.7459776401519775
    3. '_input' → logprob: -1.8709776401519775
    4. '_in' → logprob: -1.9959776401519775
    5. '.txt' → logprob: -2.6209776401519775
    6. 'input' → logprob: -3.1209776401519775
    7. '1' → logprob: -4.370977401733398
    8. '0' → logprob: -5.120977401733398
    9. '_' → logprob: -5.620977401733398
    10. 'a' → logprob: -5.870977401733398

Token 55: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.13380730152130127
    2. '.' → logprob: -2.6338071823120117
    3. '.txt' → logprob: -3.2588071823120117
    4. '_in' → logprob: -5.258807182312012
    5. 'in' → logprob: -6.133807182312012
    6. 'input' → logprob: -6.383807182312012
    7. '_input' → logprob: -6.508807182312012
    8. '.i' → logprob: -7.758807182312012
    9. 'a' → logprob: -7.883807182312012
    10. '.input' → logprob: -8.133807182312012

Token 56: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.022874336689710617
    2. '')' → logprob: -3.897874355316162
    3. 'put' → logprob: -6.897874355316162
    4. '"' → logprob: -7.647874355316162
    5. ''''' → logprob: -8.772873878479004
    6. '```' → logprob: -8.897873878479004
    7. '''' → logprob: -9.147873878479004
    8. ')' → logprob: -9.772873878479004
    9. 'file' → logprob: -10.272873878479004
    10. '`' → logprob: -10.272873878479004

Token 57: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.031475938856601715
    2. ' if' → logprob: -3.5314760208129883
    3. '
' → logprob: -6.406476020812988
    4. ' 
' → logprob: -10.531476020812988
    5. '```' → logprob: -11.156476020812988
    6. '\n' → logprob: -11.281476020812988
    7. 'import' → logprob: -12.031476020812988
    8. 'i' → logprob: -13.156476020812988
    9. '  
' → logprob: -13.156476020812988
    10. '\' → logprob: -13.281476020812988

Token 58: ' hostname' (ID: 64474)
  Prédit: ' hostname'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hostname' → logprob: -0.007269040681421757
    2. 'hostname' → logprob: -5.632268905639648
    3. ' '' → logprob: -6.507268905639648
    4. ' sys' → logprob: -7.007268905639648
    5. ' ' → logprob: -7.757268905639648
    6. ' "' → logprob: -8.507268905639648
    7. ' socket' → logprob: -8.507268905639648
    8. ' __' → logprob: -8.882268905639648
    9. '  ' → logprob: -9.757268905639648
    10. ' ' → logprob: -9.882268905639648

Token 59: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005489991512149572
    2. '==' → logprob: -5.255489826202393
    3. '.startswith' → logprob: -9.25549030303955
    4. ' ' → logprob: -10.25549030303955
    5. '=='' → logprob: -10.50549030303955
    6. '=="' → logprob: -10.75549030303955
    7. ' =="' → logprob: -10.75549030303955
    8. ' =='' → logprob: -11.00549030303955
    9. ' in' → logprob: -11.13049030303955
    10. '.endswith' → logprob: -11.88049030303955

Token 60: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5231677889823914
    2. ''' → logprob: -1.1481678485870361
    3. ' "' → logprob: -3.023167848587036
    4. '"' → logprob: -3.273167848587036
    5. ''a' → logprob: -6.273167610168457
    6. ''s' → logprob: -6.898167610168457
    7. '"a' → logprob: -9.148167610168457
    8. ' ' → logprob: -9.148167610168457
    9. ''t' → logprob: -9.523167610168457
    10. ''m' → logprob: -9.523167610168457

Token 61: 'F' (ID: 37)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.623557448387146
    2. 'your' → logprob: -2.2485575675964355
    3. 'specific' → logprob: -2.2485575675964355
    4. 'My' → logprob: -3.4985575675964355
    5. 'mon' → logprob: -3.4985575675964355
    6. ''' → logprob: -3.4985575675964355
    7. 'Mon' → logprob: -4.2485575675964355
    8. 'machine' → logprob: -4.3735575675964355
    9. 'some' → logprob: -4.4985575675964355
    10. 'localhost' → logprob: -4.6235575675964355

Token 62: '451' (ID: 37689)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -1.9545707702636719
    2. 'R' → logprob: -3.204570770263672
    3. 'r' → logprob: -3.329570770263672
    4. 'J' → logprob: -3.579570770263672
    5. 'L' → logprob: -3.579570770263672
    6. 'lor' → logprob: -3.704570770263672
    7. 'F' → logprob: -3.704570770263672
    8. 'C' → logprob: -3.704570770263672
    9. 'X' → logprob: -3.704570770263672
    10. 'P' → logprob: -3.954570770263672

Token 63: 'C' (ID: 34)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7076441049575806
    2. '9' → logprob: -1.7076441049575806
    3. '5' → logprob: -2.582643985748291
    4. '1' → logprob: -3.082643985748291
    5. '7' → logprob: -3.207643985748291
    6. '3' → logprob: -3.332643985748291
    7. '8' → logprob: -3.457643985748291
    8. '6' → logprob: -3.457643985748291
    9. '4' → logprob: -3.582643985748291
    10. '2' → logprob: -3.707643985748291

Token 64: '':
' (ID: 7669)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6751984357833862
    2. '2' → logprob: -2.550198554992676
    3. '1' → logprob: -2.925198554992676
    4. '9' → logprob: -2.925198554992676
    5. '8' → logprob: -2.925198554992676
    6. '7' → logprob: -3.050198554992676
    7. '3' → logprob: -3.050198554992676
    8. '5' → logprob: -3.175198554992676
    9. '4' → logprob: -3.175198554992676
    10. '6' → logprob: -3.300198554992676

Token 65: '   ' (ID: 271)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3742624819278717
    2. '
' → logprob: -1.7492624521255493
    3. '   ' → logprob: -2.499262571334839
    4. 'sys' → logprob: -3.874262571334839
    5. ' 
' → logprob: -4.49926233291626
    6. '    ' → logprob: -4.87426233291626
    7. '    
' → logprob: -5.12426233291626
    8. '	sys' → logprob: -5.74926233291626
    9. ' stdin' → logprob: -6.37426233291626
    10. ' ' → logprob: -7.24926233291626

Token 66: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.043607406318187714
    2. 'sys' (adapté à ' sys') → logprob: -3.168607473373413
    3. '   ' → logprob: -7.793607234954834
    4. '	sys' → logprob: -9.043607711791992
    5. 'import' → logprob: -10.418607711791992
    6. ' with' → logprob: -11.293607711791992
    7. '    ' → logprob: -11.293607711791992
    8. 'with' → logprob: -12.543607711791992
    9. '
' → logprob: -12.668607711791992
    10. '=sys' → logprob: -12.793607711791992

Token 67: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.006006828509271e-05
    2. '.stdout' → logprob: -10.500080108642578
    3. ' .' → logprob: -10.625080108642578
    4. '.' → logprob: -10.625080108642578
    5. '.std' → logprob: -13.875080108642578
    6. '.st' → logprob: -14.125080108642578
    7. 'stdin' → logprob: -14.375080108642578
    8. '.argv' → logprob: -14.375080108642578
    9. '.stderr' → logprob: -14.750080108642578
    10. ' stdin' → logprob: -15.375080108642578

Token 68: ' =' (ID: 314)
  Prédit: '=open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=open' → logprob: -0.5578429102897644
    2. '=' → logprob: -1.0578429698944092
    3. '.readline' → logprob: -3.432842969894409
    4. ' =' → logprob: -3.432842969894409
    5. '.' → logprob: -4.30784273147583
    6. '=sys' → logprob: -6.93284273147583
    7. '.=' → logprob: -7.93284273147583
    8. '.redirect' → logprob: -8.557843208312988
    9. '.open' → logprob: -8.682843208312988
    10. '.read' → logprob: -8.932843208312988

Token 69: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.313264399766922
    2. ' open' → logprob: -1.3132643699645996
    3. '	open' → logprob: -12.938264846801758
    4. ' ' → logprob: -16.438264846801758
    5. '(open' → logprob: -16.563264846801758
    6. '=open' → logprob: -17.188264846801758
    7. '```' → logprob: -18.188264846801758
    8. 'op' → logprob: -18.563264846801758
    9. '   ' → logprob: -18.813264846801758
    10. '  ' → logprob: -19.438264846801758

Token 70: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0004972710739821196
    2. '(' → logprob: -7.750497341156006
    3. '("' → logprob: -9.625496864318848
    4. '('./' → logprob: -14.750496864318848
    5. ' ('' → logprob: -16.625497817993164
    6. '('/' → logprob: -17.625497817993164
    7. ''' → logprob: -17.750497817993164
    8. '(('' → logprob: -18.125497817993164
    9. '()' → logprob: -18.750497817993164
    10. '(
' → logprob: -19.000497817993164

Token 71: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.253090865968261e-06
    2. ' a' → logprob: -11.750009536743164
    3. ''a' → logprob: -13.625009536743164
    4. '```' → logprob: -17.000009536743164
    5. '   ' → logprob: -17.500009536743164
    6. ' ' → logprob: -18.125009536743164
    7. '	a' → logprob: -18.625009536743164
    8. '"a' → logprob: -19.000009536743164
    9. ''' → logprob: -19.125009536743164
    10. 'а' → logprob: -19.875009536743164

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. 'a' → logprob: -14.125000953674316
    3. ' ' → logprob: -16.250001907348633
    4. '_' → logprob: -16.500001907348633
    5. '451' → logprob: -18.000001907348633
    6. '１' → logprob: -18.750001907348633
    7. '```' → logprob: -19.125001907348633
    8. '51' → logprob: -19.250001907348633
    9. '' → logprob: -19.625001907348633
    10. 'r' → logprob: -19.750001907348633

Token 73: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.00012654215970542282
    2. '.' → logprob: -9.000126838684082
    3. ' .' → logprob: -13.000126838684082
    4. '.py' → logprob: -15.000126838684082
    5. 'in' → logprob: -15.125126838684082
    6. '.out' → logprob: -15.625126838684082
    7. ' in' → logprob: -16.875125885009766
    8. '```' → logprob: -17.375125885009766
    9. '.inf' → logprob: -17.875125885009766
    10. ',in' → logprob: -18.125125885009766

Token 74: '')

' (ID: 9735)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.05918032303452492
    2. '')' → logprob: -3.05918025970459
    3. '','' → logprob: -4.80918025970459
    4. ''' → logprob: -6.05918025970459
    5. ')' → logprob: -10.18418025970459
    6. '',"' → logprob: -13.43418025970459
    7. ',' → logprob: -13.68418025970459
    8. ')',' → logprob: -13.80918025970459
    9. '",' → logprob: -13.93418025970459
    10. ''',' → logprob: -14.55918025970459

Token 75: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3177070617675781
    2. '
' → logprob: -1.3177070617675781
    3. '#' → logprob: -1.8177070617675781
    4. 'for' → logprob: -2.192707061767578
    5. '\n' → logprob: -2.442707061767578
    6. '<|end|>' → logprob: -3.317707061767578
    7. 'input' → logprob: -5.067707061767578
    8. ':
' → logprob: -5.067707061767578
    9. ' ' → logprob: -5.317707061767578
    10. ')' → logprob: -5.317707061767578

Token 76: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.02211925946176052
    2. ' my' → logprob: -5.147119045257568
    3. ' solve' → logprob: -5.272119045257568
    4. ' process' → logprob: -5.897119045257568
    5. ' calculate' → logprob: -6.022119045257568
    6. ' solution' → logprob: -6.397119045257568
    7. ' test' → logprob: -7.397119045257568
    8. ' ma' → logprob: -7.522119045257568
    9. ' hello' → logprob: -7.647119045257568
    10. ' ' → logprob: -8.147119522094727

Token 77: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.7208981513977051
    2. '()' → logprob: -1.345898151397705
    3. '_input' → logprob: -1.470898151397705
    4. 'line' → logprob: -3.970898151397705
    5. '_lines' → logprob: -6.470898151397705
    6. '():' → logprob: -6.845898151397705
    7. '_data' → logprob: -6.970898151397705
    8. '_' → logprob: -7.470898151397705
    9. ' ()' → logprob: -9.595897674560547
    10. 'input' → logprob: -9.595897674560547

Token 78: '_list' (ID: 4162)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0010550802107900381
    2. '()' → logprob: -7.1260552406311035
    3. ' ():' → logprob: -8.501054763793945
    4. '():
' → logprob: -10.376054763793945
    5. ' ()' → logprob: -11.751054763793945
    6. 's' → logprob: -12.251054763793945
    7. '(' → logprob: -14.126054763793945
    8. '():
' → logprob: -14.376054763793945
    9. '()*' → logprob: -14.501054763793945
    10. '()>' → logprob: -14.501054763793945

Token 79: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005088301841169596
    2. ' ():' → logprob: -7.625508785247803
    3. '()' → logprob: -11.250509262084961
    4. '(' → logprob: -12.625509262084961
    5. '():
' → logprob: -12.625509262084961
    6. ' ()' → logprob: -14.250509262084961
    7. ':' → logprob: -15.125509262084961
    8. '(prompt' → logprob: -16.00050926208496
    9. '():
' → logprob: -16.25050926208496
    10. '()>' → logprob: -17.37550926208496

Token 80: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.049544405192136765
    2. '()' → logprob: -3.049544334411621
    3. '   ' → logprob: -8.174544334411621
    4. ':' → logprob: -8.299544334411621
    5. '():
' → logprob: -8.424544334411621
    6. '(' → logprob: -9.049544334411621
    7. ' ():' → logprob: -10.049544334411621
    8. ' ()' → logprob: -10.549544334411621
    9. '[]' → logprob: -12.549544334411621
    10. '(
' → logprob: -12.674544334411621

Token 81: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05928143858909607
    2. ' return' → logprob: -3.059281349182129
    3. 'return' → logprob: -4.559281349182129
    4. '   ' → logprob: -9.434281349182129
    5. '   ' → logprob: -10.684281349182129
    6. '    ' → logprob: -11.184281349182129
    7. '       ' → logprob: -11.434281349182129
    8. ' line' → logprob: -11.809281349182129
    9. '    
' → logprob: -12.184281349182129
    10. '	return' → logprob: -12.309281349182129

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035177554935216904
    2. 'Reads' → logprob: -3.53517746925354
    3. '"""' → logprob: -6.285177707672119
    4. 'def' → logprob: -6.410177707672119
    5. 'return' → logprob: -7.910177707672119
    6. 'Returns' → logprob: -7.910177707672119
    7. 'Read' → logprob: -8.410177230834961
    8. 'Return' → logprob: -8.660177230834961
    9. '#' → logprob: -9.285177230834961
    10. 'Lire' → logprob: -9.410177230834961

Token 83: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06076641008257866
    2. 'return' → logprob: -3.3107664585113525
    3. ' return' → logprob: -3.8107664585113525
    4. '       ' → logprob: -9.310766220092773
    5. '    ' → logprob: -9.935766220092773
    6. ' line' → logprob: -10.060766220092773
    7. '"""' → logprob: -10.560766220092773
    8. 'line' → logprob: -10.685766220092773
    9. '    
' → logprob: -10.810766220092773
    10. '   ' → logprob: -11.310766220092773

Token 84: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005741207860410213
    2. ' ()' → logprob: -8.625574111938477
    3. '():' → logprob: -9.250574111938477
    4. '   ' → logprob: -9.625574111938477
    5. ' une' → logprob: -9.875574111938477
    6. '()
' → logprob: -10.750574111938477
    7. ' la' → logprob: -10.875574111938477
    8. ':' → logprob: -11.125574111938477
    9. ' ' → logprob: -11.125574111938477
    10. ' line' → logprob: -11.250574111938477

Token 85: ' ligne' (ID: 19583)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.48424601554870605
    2. ' ligne' → logprob: -1.234246015548706
    3. 'liste' → logprob: -2.984246015548706
    4. ' ' → logprob: -3.734246015548706
    5. 'ligne' → logprob: -4.484246253967285
    6. ' list' → logprob: -5.484246253967285
    7. ' line' → logprob: -6.859246253967285
    8. 'l' → logprob: -7.734246253967285
    9. 'list' → logprob: -7.734246253967285
    10. ' lign' → logprob: -8.609246253967285

Token 86: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.705086886882782
    2. '().' → logprob: -1.0800869464874268
    3. '   ' → logprob: -1.8300869464874268
    4. '.strip' → logprob: -6.455086708068848
    5. ' =' → logprob: -6.705086708068848
    6. '.' → logprob: -7.080086708068848
    7. 'de' → logprob: -7.955086708068848
    8. ' .' → logprob: -8.455086708068848
    9. '()
' → logprob: -8.455086708068848
    10. ',' → logprob: -8.830086708068848

Token 87: ' l' (ID: 305)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.7707837224006653
    2. ' code' → logprob: -2.0207836627960205
    3. 'ent' → logprob: -2.5207836627960205
    4. 'code' → logprob: -2.6457836627960205
    5. ' input' → logprob: -2.7707836627960205
    6. 'input' → logprob: -3.2707836627960205
    7. 'int' → logprob: -3.5207836627960205
    8. 'n' → logprob: -3.8957836627960205
    9. 'stdin' → logprob: -4.1457839012146
    10. ' texte' → logprob: -4.2707839012146

Token 88: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.7399769425392151
    2. ''entrée' → logprob: -1.3649768829345703
    3. 'input' → logprob: -2.3649768829345703
    4. ' input' → logprob: -2.6149768829345703
    5. 'stdin' → logprob: -2.6149768829345703
    6. ' entrée' → logprob: -4.73997688293457
    7. ' stdin' → logprob: -5.11497688293457
    8. 'sys' → logprob: -6.36497688293457
    9. ' sys' → logprob: -6.73997688293457
    10. 'a' → logprob: -6.73997688293457

Token 89: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.028537660837173462
    2. 'standard' → logprob: -4.028537750244141
    3. ' et' → logprob: -5.278537750244141
    4. '   ' → logprob: -5.903537750244141
    5. ' en' → logprob: -7.028537750244141
    6. ',' → logprob: -7.153537750244141
    7. 'Standard' → logprob: -8.77853775024414
    8. ' ' → logprob: -8.90353775024414
    9. ' stdin' → logprob: -9.77853775024414
    10. ' estándar' → logprob: -10.15353775024414

Token 90: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04899562895298004
    2. ' et' → logprob: -3.5489957332611084
    3. ',' → logprob: -4.048995494842529
    4. '()' → logprob: -7.548995494842529
    5. 'et' → logprob: -7.673995494842529
    6. ' ,' → logprob: -8.173995971679688
    7. ' en' → logprob: -9.298995971679688
    8. '    ' → logprob: -9.548995971679688
    9. ' and' → logprob: -9.548995971679688
    10. '  ' → logprob: -10.923995971679688

Token 91: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2366042137145996
    2. 'strip' → logprob: -2.7366042137145996
    3. ' strip' → logprob: -3.7366042137145996
    4. 'split' → logprob: -3.8616042137145996
    5. ' split' → logprob: -4.1116042137146
    6. ' et' → logprob: -4.3616042137146
    7. ' return' → logprob: -4.6116042137146
    8. '    ' → logprob: -4.8616042137146
    9. ' splits' → logprob: -4.8616042137146
    10. ' retourne' → logprob: -4.8616042137146

Token 92: ' sé' (ID: 7462)
  Prédit: ' transforme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' transforme' → logprob: -1.1891387701034546
    2. ' split' → logprob: -1.4391387701034546
    3. ' convert' → logprob: -1.8141387701034546
    4. 'split' → logprob: -1.9391387701034546
    5. 'convert' → logprob: -2.314138889312744
    6. 'spl' → logprob: -4.314138889312744
    7. 'strip' → logprob: -4.564138889312744
    8. ' dé' → logprob: -5.064138889312744
    9. ' map' → logprob: -5.314138889312744
    10. ' décou' → logprob: -5.439138889312744

Token 93: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.005671726074069738
    2. 'par' → logprob: -5.380671501159668
    3. 'parer' → logprob: -8.505671501159668
    4. 'paration' → logprob: -8.505671501159668
    5. 'quence' → logprob: -8.630671501159668
    6. 'parate' → logprob: -9.380671501159668
    7. 'pa' → logprob: -10.005671501159668
    8. 'Par' → logprob: -10.005671501159668
    9. 'parent' → logprob: -10.005671501159668
    10. 'p' → logprob: -10.255671501159668

Token 94: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1420573741197586
    2. ' en' → logprob: -2.642057418823242
    3. 'par' → logprob: -3.392057418823242
    4. '()' → logprob: -3.767057418823242
    5. 'en' → logprob: -6.017057418823242
    6. '   ' → logprob: -6.767057418823242
    7. ' ' → logprob: -7.892057418823242
    8. ' into' → logprob: -9.642057418823242
    9. ' by' → logprob: -10.017057418823242
    10. '    ' → logprob: -10.267057418823242

Token 95: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.05559880658984184
    2. 'des' → logprob: -3.555598735809326
    3. ' espaces' → logprob: -3.805598735809326
    4. 'esp' → logprob: -7.305598735809326
    5. 'les' → logprob: -7.680598735809326
    6. ' les' → logprob: -7.680598735809326
    7. ' espace' → logprob: -7.805598735809326
    8. ' ' → logprob: -7.805598735809326
    9. 'spaces' → logprob: -8.430599212646484
    10. ' un' → logprob: -9.305599212646484

Token 96: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.5264618992805481
    2. ' espaces' → logprob: -0.9014618992805481
    3. ''esp' → logprob: -6.276462078094482
    4. 'es' → logprob: -7.276462078094482
    5. 'spaces' → logprob: -7.526462078094482
    6. ''espace' → logprob: -9.776461601257324
    7. ' espace' → logprob: -10.026461601257324
    8. 'space' → logprob: -10.776461601257324
    9. ' ' → logprob: -11.026461601257324
    10. ' spaces' → logprob: -11.151461601257324

Token 97: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25773364305496216
    2. ',' → logprob: -1.5077335834503174
    3. ' et' → logprob: -6.0077338218688965
    4. ' ,' → logprob: -6.0077338218688965
    5. ')' → logprob: -8.132733345031738
    6. 'et' → logprob: -8.257733345031738
    7. ' )' → logprob: -9.632733345031738
    8. ' en' → logprob: -10.007733345031738
    9. ' and' → logprob: -10.257733345031738
    10. '    ' → logprob: -10.507733345031738

Token 98: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29055967926979065
    2. 'et' → logprob: -2.040559768676758
    3. ' et' → logprob: -3.040559768676758
    4. ' puis' → logprob: -3.665559768676758
    5. ' and' → logprob: -4.290559768676758
    6. 'p' → logprob: -4.415559768676758
    7. 'return' → logprob: -5.290559768676758
    8. 'and' → logprob: -5.415559768676758
    9. ' return' → logprob: -5.415559768676758
    10. ' convert' → logprob: -5.540559768676758

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27488309144973755
    2. 'et' → logprob: -1.5248830318450928
    3. ' et' → logprob: -4.399883270263672
    4. 'p' → logprob: -5.399883270263672
    5. 'return' → logprob: -6.149883270263672
    6. ' puis' → logprob: -6.399883270263672
    7. ' and' → logprob: -7.649883270263672
    8. 'and' → logprob: -7.649883270263672
    9. ' return' → logprob: -8.024883270263672
    10. ' retourne' → logprob: -8.524883270263672

Token 100: ' convert' (ID: 8452)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30282121896743774
    2. 'et' → logprob: -1.427821159362793
    3. 'p' → logprob: -4.927821159362793
    4. ' et' → logprob: -5.427821159362793
    5. 'return' → logprob: -6.052821159362793
    6. ' puis' → logprob: -6.052821159362793
    7. 'convert' (adapté à ' convert') → logprob: -6.052821159362793
    8. 'and' → logprob: -7.177821159362793
    9. ' retourne' → logprob: -7.927821159362793
    10. ' and' → logprob: -8.052821159362793

Token 101: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00028767617186531425
    2. ' it' → logprob: -9.000288009643555
    3. 'i' → logprob: -9.125288009643555
    4. 'et' → logprob: -10.875288009643555
    5. 't' → logprob: -11.000288009643555
    6. 'ie' → logprob: -11.875288009643555
    7. 'is' → logprob: -12.375288009643555
    8. 'ies' → logprob: -13.000288009643555
    9. 'iert' → logprob: -13.875288009643555
    10. '   ' → logprob: -14.125288009643555

Token 102: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.032905083149671555
    2. ' les' → logprob: -3.657905101776123
    3. ' each' → logprob: -5.532905101776123
    4. 'cha' → logprob: -7.032905101776123
    5. 'les' → logprob: -7.407905101776123
    6. ' chacune' → logprob: -8.032904624938965
    7. 'each' → logprob: -8.157904624938965
    8. ' chacun' → logprob: -8.407904624938965
    9. ' ' → logprob: -9.657904624938965
    10. ' en' → logprob: -9.782904624938965

Token 103: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.052302733063697815
    2. ' élément' → logprob: -3.052302837371826
    3. ' chaîne' → logprob: -6.052302837371826
    4. ' ' → logprob: -7.802302837371826
    5. 'element' → logprob: -8.677302360534668
    6. 'chaine' → logprob: -8.802302360534668
    7. ' morceau' → logprob: -8.802302360534668
    8. ' partie' → logprob: -9.177302360534668
    9. ' element' → logprob: -9.552302360534668
    10. ' chaine' → logprob: -9.677302360534668

Token 104: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0009338518721051514
    2. 'en' → logprob: -7.125933647155762
    3. ',' → logprob: -10.000933647155762
    4. ' ' → logprob: -10.750933647155762
    5. '   ' → logprob: -10.875933647155762
    6. ' à' → logprob: -11.375933647155762
    7. ' in' → logprob: -12.125933647155762
    8. ' into' → logprob: -12.125933647155762
    9. ' ,' → logprob: -12.375933647155762
    10. ' au' → logprob: -12.875933647155762

Token 105: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20698915421962738
    2. 'int' → logprob: -1.7069891691207886
    3. ' un' → logprob: -5.831989288330078
    4. ' entier' → logprob: -6.331989288330078
    5. 'ent' → logprob: -7.456989288330078
    6. ' integer' → logprob: -8.831989288330078
    7. ' ent' → logprob: -9.831989288330078
    8. ' ' → logprob: -11.081989288330078
    9. ' des' → logprob: -11.206989288330078
    10. '<int' → logprob: -11.331989288330078

Token 106: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04828491806983948
    2. ')' → logprob: -3.5482850074768066
    3. '   ' → logprob: -4.173285007476807
    4. ' ,' → logprob: -6.173285007476807
    5. ' )' → logprob: -8.298284530639648
    6. ' et' → logprob: -8.673284530639648
    7. '),' → logprob: -9.048284530639648
    8. '()' → logprob: -9.173284530639648
    9. 's' → logprob: -10.173284530639648
    10. ' ' → logprob: -10.298284530639648

Token 107: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.27715444564819336
    2. ' return' → logprob: -1.7771544456481934
    3. '   ' → logprob: -3.6521544456481934
    4. ' ren' → logprob: -3.7771544456481934
    5. 'return' → logprob: -4.027154445648193
    6. ' les' → logprob: -6.027154445648193
    7. ' returns' → logprob: -6.277154445648193
    8. '    ' → logprob: -7.527154445648193
    9. 'ret' → logprob: -8.027154922485352
    10. ' retour' → logprob: -8.152154922485352

Token 108: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.01259194128215313
    2. ' une' → logprob: -4.63759183883667
    3. ' a' → logprob: -7.01259183883667
    4. ' the' → logprob: -7.01259183883667
    5. ' ' → logprob: -8.262592315673828
    6. ' ' → logprob: -8.387592315673828
    7. ' le' → logprob: -9.137592315673828
    8. 'la' → logprob: -9.137592315673828
    9. ' list' → logprob: -9.512592315673828
    10. ' un' → logprob: -9.512592315673828

Token 109: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.16738396883010864
    2. ' list' → logprob: -1.9173839092254639
    3. 'liste' → logprob: -5.667384147644043
    4. 'list' → logprob: -6.042384147644043
    5. 's' → logprob: -7.292384147644043
    6. '```' → logprob: -8.792384147644043
    7. '_list' → logprob: -9.542384147644043
    8. '[' → logprob: -9.792384147644043
    9. ' listes' → logprob: -10.042384147644043
    10. '[]' → logprob: -10.167384147644043

Token 110: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.029978763312101364
    2. '[int' → logprob: -3.9049787521362305
    3. '   ' → logprob: -5.1549787521362305
    4. ' de' → logprob: -6.5299787521362305
    5. ' of' → logprob: -7.4049787521362305
    6. 'des' → logprob: -7.9049787521362305
    7. '<int' → logprob: -8.40497875213623
    8. ' d' → logprob: -8.77997875213623
    9. '```' → logprob: -8.77997875213623
    10. '[' → logprob: -8.90497875213623

Token 111: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.6819462180137634
    2. ' int' → logprob: -1.0569462776184082
    3. 'int' → logprob: -2.931946277618408
    4. ' integers' → logprob: -3.181946277618408
    5. 'ent' → logprob: -3.931946277618408
    6. ' nombres' → logprob: -3.931946277618408
    7. 'ints' → logprob: -5.681946277618408
    8. 'inte' → logprob: -5.806946277618408
    9. ' ints' → logprob: -5.806946277618408
    10. ' valeurs' → logprob: -6.181946277618408

Token 112: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -3.7146746763028204e-05
    2. 'ières' → logprob: -10.50003719329834
    3. 'i' → logprob: -11.87503719329834
    4. 'ires' → logprob: -13.75003719329834
    5. 'ités' → logprob: -15.00003719329834
    6. 'ers' → logprob: -15.50003719329834
    7. 'ier' → logprob: -15.50003719329834
    8. 't' → logprob: -15.62503719329834
    9. '```' → logprob: -15.75003719329834
    10. '   ' → logprob: -15.87503719329834

Token 113: ' lus' (ID: 54762)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004877808038145304
    2. '()' → logprob: -6.629878044128418
    3. '():' → logprob: -6.754878044128418
    4. ':' → logprob: -6.879878044128418
    5. ')' → logprob: -7.754878044128418
    6. '):' → logprob: -8.379878044128418
    7. '.' → logprob: -8.754878044128418
    8. ':
' → logprob: -9.754878044128418
    9. 'def' → logprob: -9.879878044128418
    10. ',' → logprob: -9.879878044128418

Token 114: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008944261819124222
    2. ':' → logprob: -5.633944034576416
    3. '):' → logprob: -6.008944034576416
    4. ')' → logprob: -6.508944034576416
    5. '():' → logprob: -7.133944034576416
    6. '.' → logprob: -9.008944511413574
    7. '):
' → logprob: -9.258944511413574
    8. ':
' → logprob: -9.508944511413574
    9. '()' → logprob: -9.758944511413574
    10. ',' → logprob: -9.758944511413574

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007913462817668915
    2. 'def' → logprob: -5.007913589477539
    3. ')' → logprob: -7.507913589477539
    4. '"""' → logprob: -8.007913589477539
    5. '"""
' → logprob: -9.382913589477539
    6. '):' → logprob: -9.757913589477539
    7. '```' → logprob: -9.757913589477539
    8. '):
' → logprob: -10.007913589477539
    9. '
' → logprob: -10.882913589477539
    10. '    
' → logprob: -11.007913589477539

Token 116: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002649855799973011
    2. 'return' → logprob: -6.627649784088135
    3. '"""' → logprob: -7.877649784088135
    4. 'line' → logprob: -8.377650260925293
    5. '"""
' → logprob: -8.627650260925293
    6. ' line' → logprob: -9.002650260925293
    7. ' return' → logprob: -9.877650260925293
    8. '    
' → logprob: -10.002650260925293
    9. '```' → logprob: -10.002650260925293
    10. 'input' → logprob: -10.127650260925293

Token 117: ':
' (ID: 734)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.658363401889801
    2. ':' → logprob: -1.0333633422851562
    3. ' :' → logprob: -3.0333633422851562
    4. 'List' → logprob: -3.1583633422851562
    5. ' list' → logprob: -4.283363342285156
    6. ':list' → logprob: -4.658363342285156
    7. '[List' → logprob: -4.783363342285156
    8. '[int' → logprob: -7.033363342285156
    9. '[]' → logprob: -7.658363342285156
    10. '_list' → logprob: -7.783363342285156

Token 118: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6783231496810913
    2. ' list' → logprob: -0.9283231496810913
    3. ' List' → logprob: -3.053323268890381
    4. 'List' → logprob: -3.178323268890381
    5. 'list' → logprob: -4.803323268890381
    6. '       ' → logprob: -8.428322792053223
    7. '    ' → logprob: -10.678322792053223
    8. '[List' → logprob: -12.553322792053223
    9. ' [' → logprob: -12.553322792053223
    10. '_list' → logprob: -13.428322792053223

Token 119: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.4998196065425873
    2. 'List' → logprob: -0.9998196363449097
    3. ' list' → logprob: -3.74981951713562
    4. ' List' → logprob: -6.749819755554199
    5. '   ' → logprob: -7.249819755554199
    6. '       ' → logprob: -11.7498197555542
    7. '[List' → logprob: -14.1248197555542
    8. '_list' → logprob: -14.4998197555542
    9. '    ' → logprob: -14.9998197555542
    10. '[list' → logprob: -15.1248197555542

Token 120: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00018947436183225363
    2. '<int' → logprob: -9.000189781188965
    3. ' of' → logprob: -9.875189781188965
    4. 'int' → logprob: -11.375189781188965
    5. '(int' → logprob: -13.125189781188965
    6. '```' → logprob: -14.875189781188965
    7. '[' → logprob: -15.875189781188965
    8. ':' → logprob: -15.875189781188965
    9. '[Int' → logprob: -15.875189781188965
    10. '<|end|>' → logprob: -16.00018882751465

Token 121: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02975570224225521
    2. ' int' → logprob: -3.5297555923461914
    3. 'ints' → logprob: -13.779755592346191
    4. ' ints' → logprob: -13.779755592346191
    5. '[int' → logprob: -13.904755592346191
    6. ' integers' → logprob: -14.529755592346191
    7. ':int' → logprob: -14.529755592346191
    8. '<int' → logprob: -14.654755592346191
    9. 'inte' → logprob: -15.279755592346191
    10. '	int' → logprob: -15.904755592346191

Token 122: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04767407849431038
    2. '[int' → logprob: -3.5476741790771484
    3. ':
' → logprob: -5.047674179077148
    4. '<|end|>' → logprob: -5.297674179077148
    5. '):' → logprob: -6.672674179077148
    6. '   ' → logprob: -6.672674179077148
    7. 'def' → logprob: -7.172674179077148
    8. 'int' → logprob: -7.422674179077148
    9. ')' → logprob: -7.672674179077148
    10. ' :' → logprob: -8.047674179077148

Token 123: ' Liste' (ID: 61030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08652541041374207
    2. '       ' → logprob: -3.3365254402160645
    3. '    ' → logprob: -4.7115254402160645
    4. 'List' → logprob: -4.8365254402160645
    5. '<|end|>' → logprob: -5.3365254402160645
    6. ' List' → logprob: -5.5865254402160645
    7. '[int' → logprob: -6.0865254402160645
    8. ' integers' → logprob: -6.2115254402160645
    9. '    
' → logprob: -6.3365254402160645
    10. ' La' → logprob: -6.4615254402160645

Token 124: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6716192364692688
    2. '[int' → logprob: -0.7966192364692688
    3. '<|end|>' → logprob: -3.796619176864624
    4. ' of' → logprob: -4.546619415283203
    5. 'des' → logprob: -6.546619415283203
    6. '<int' → logprob: -6.671619415283203
    7. ' d' → logprob: -7.296619415283203
    8. '[' → logprob: -7.421619415283203
    9. ' integers' → logprob: -7.796619415283203
    10. '[Int' → logprob: -8.421619415283203

Token 125: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.5994428396224976
    2. 'ent' → logprob: -0.8494428396224976
    3. ' integers' → logprob: -4.349442958831787
    4. 'int' → logprob: -5.099442958831787
    5. ' nombres' → logprob: -6.599442958831787
    6. 'inte' → logprob: -6.599442958831787
    7. 'ints' → logprob: -7.724442958831787
    8. ' int' → logprob: -7.849442958831787
    9. '_ent' → logprob: -8.849442481994629
    10. ''ent' → logprob: -9.099442481994629

Token 126: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.027168352156877518
    2. 't' → logprob: -3.6521682739257812
    3. 'ti' → logprob: -8.152168273925781
    4. 'ents' → logprob: -9.402168273925781
    5. 'ières' → logprob: -9.402168273925781
    6. '   ' → logprob: -9.902168273925781
    7. 'i' → logprob: -10.027168273925781
    8. 'ers' → logprob: -10.027168273925781
    9. 'ts' → logprob: -10.152168273925781
    10. 'ints' → logprob: -10.277168273925781

Token 127: ' obten' (ID: 28150)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.4749520421028137
    2. 'ue' → logprob: -0.9749520421028137
    3. 'u' → logprob: -7.224952220916748
    4. 'ues' → logprob: -9.09995174407959
    5. '   ' → logprob: -11.59995174407959
    6. '```' → logprob: -11.59995174407959
    7. '
' → logprob: -11.84995174407959
    8. 'ued' → logprob: -12.09995174407959
    9. '"""
' → logprob: -13.59995174407959
    10. 'is' → logprob: -14.97495174407959

Token 129: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011738005094230175
    2. 'from' → logprob: -5.636737823486328
    3. '```' → logprob: -6.386737823486328
    4. '"""' → logprob: -6.886737823486328
    5. 'def' → logprob: -7.011737823486328
    6. '"""
' → logprob: -7.261737823486328
    7. '()' → logprob: -7.261737823486328
    8. '       ' → logprob: -7.511737823486328
    9. ' from' → logprob: -7.511737823486328
    10. ')' → logprob: -8.011737823486328

Token 130: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4330933392047882
    2. ' l' → logprob: -1.6830933094024658
    3. ' la' → logprob: -2.308093309402466
    4. 'la' → logprob: -3.933093309402466
    5. '   ' → logprob: -4.183093547821045
    6. ' sys' → logprob: -4.558093547821045
    7. 'sys' → logprob: -5.058093547821045
    8. ' stdin' → logprob: -5.183093547821045
    9. ' input' → logprob: -5.308093547821045
    10. 'input' → logprob: -6.183093547821045

Token 131: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.38457754254341125
    2. 'input' → logprob: -1.5095775127410889
    3. 'a' → logprob: -2.634577512741089
    4. 'entrée' → logprob: -4.134577751159668
    5. 'stdin' → logprob: -5.634577751159668
    6. 'e' → logprob: -6.134577751159668
    7. ' input' → logprob: -6.134577751159668
    8. 'sys' → logprob: -6.634577751159668
    9. ''' → logprob: -8.259577751159668
    10. '’entrée' → logprob: -8.634577751159668

Token 132: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08816570043563843
    2. ' standard' → logprob: -3.213165760040283
    3. ')' → logprob: -4.338165760040283
    4. 'standard' → logprob: -5.713165760040283
    5. 'stdin' → logprob: -5.838165760040283
    6. '    ' → logprob: -5.963165760040283
    7. '    
' → logprob: -5.963165760040283
    8. ' stdin' → logprob: -5.963165760040283
    9. ',' → logprob: -6.213165760040283
    10. '  ' → logprob: -6.463165760040283

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033390752505511045
    2. '"""' → logprob: -5.8783392906188965
    3. ')' → logprob: -8.128338813781738
    4. ' """' → logprob: -9.753338813781738
    5. '"""
' → logprob: -9.878338813781738
    6. '```' → logprob: -10.003338813781738
    7. '    ' → logprob: -10.628338813781738
    8. '    
' → logprob: -11.003338813781738
    9. ' """
' → logprob: -11.253338813781738
    10. 'def' → logprob: -11.378338813781738

Token 134: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14780966937541962
    2. '"""' → logprob: -2.0228097438812256
    3. ' """' → logprob: -6.1478095054626465
    4. ')' → logprob: -6.2728095054626465
    5. '"""
' (adapté à ' """
') → logprob: -7.1478095054626465
    6. '```' → logprob: -9.147809982299805
    7. ' """
' → logprob: -9.522809982299805
    8. '""' → logprob: -10.147809982299805
    9. 'def' → logprob: -10.397809982299805
    10. '    ' → logprob: -10.772809982299805

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002880337997339666
    2. 'return' → logprob: -8.375288009643555
    3. 'line' → logprob: -10.500288009643555
    4. ' return' → logprob: -11.375288009643555
    5. ' line' → logprob: -11.875288009643555
    6. 'input' → logprob: -12.375288009643555
    7. '       ' → logprob: -13.375288009643555
    8. '    
' → logprob: -13.375288009643555
    9. 'data' → logprob: -13.875288009643555
    10. 'try' → logprob: -13.875288009643555

Token 136: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7928823232650757
    2. 'line' → logprob: -0.9178823232650757
    3. 'return' (adapté à ' return') → logprob: -1.9178823232650757
    4. ' line' → logprob: -7.167882442474365
    5. ' return' → logprob: -8.792881965637207
    6. 'ligne' → logprob: -9.042881965637207
    7. 'try' → logprob: -9.917881965637207
    8. 'input' → logprob: -10.667881965637207
    9. 'raw' → logprob: -11.167881965637207
    10. 's' → logprob: -11.417881965637207

Token 137: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.028417620807886124
    2. ' list' → logprob: -3.7784175872802734
    3. '[list' → logprob: -5.278417587280273
    4. '[' → logprob: -9.778417587280273
    5. ' [' → logprob: -14.278417587280273
    6. '[int' → logprob: -14.903417587280273
    7. 'map' → logprob: -15.403417587280273
    8. '	list' → logprob: -16.153417587280273
    9. '[List' → logprob: -16.528417587280273
    10. '   ' → logprob: -16.653417587280273

Token 138: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0024773201439529657
    2. '(' → logprob: -6.002477169036865
    3. '(
' → logprob: -14.377477645874023
    4. 'map' → logprob: -14.502477645874023
    5. '(int' → logprob: -14.627477645874023
    6. ' map' → logprob: -17.627477645874023
    7. ' (' → logprob: -18.252477645874023
    8. '(

' → logprob: -18.252477645874023
    9. '(m' → logprob: -18.502477645874023
    10. '	map' → logprob: -18.877477645874023

Token 139: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00040338258258998394
    2. 'int' → logprob: -8.00040340423584
    3. '(' → logprob: -9.75040340423584
    4. ' int' → logprob: -11.87540340423584
    5. '<int' → logprob: -13.50040340423584
    6. '=int' → logprob: -15.00040340423584
    7. ',int' → logprob: -15.25040340423584
    8. '[int' → logprob: -15.37540340423584
    9. '(
' → logprob: -15.87540340423584
    10. ' (' → logprob: -16.125402450561523

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007290700450539589
    2. '(sys' → logprob: -5.132290840148926
    3. 'sys' → logprob: -7.007290840148926
    4. ' sys' → logprob: -8.632290840148926
    5. ',input' → logprob: -8.632290840148926
    6. 'input' → logprob: -9.882290840148926
    7. ' ,' → logprob: -10.507290840148926
    8. '(' → logprob: -12.007290840148926
    9. '=sys' → logprob: -12.132290840148926
    10. '(input' → logprob: -12.507290840148926

Token 141: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.31183403730392456
    2. 'input' → logprob: -2.0618340969085693
    3. ' sys' → logprob: -2.0618340969085693
    4. ' input' → logprob: -4.31183385848999
    5. '   ' → logprob: -10.811834335327148
    6. '(sys' → logprob: -10.936834335327148
    7. '	sys' → logprob: -12.811834335327148
    8. '=sys' → logprob: -12.936834335327148
    9. ' ' → logprob: -13.061834335327148
    10. 'stdin' → logprob: -14.436834335327148

Token 142: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.41866585687967e-06
    2. '()' → logprob: -11.750008583068848
    3. ' ().' → logprob: -14.625008583068848
    4. '.split' → logprob: -18.00000762939453
    5. '()
' → logprob: -18.25000762939453
    6. '.strip' → logprob: -19.12500762939453
    7. '(' → logprob: -19.87500762939453
    8. ' .' → logprob: -20.50000762939453
    9. '.' → logprob: -20.87500762939453
    10. '   ' → logprob: -21.25000762939453

Token 143: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018150296062231064
    2. 'strip' → logprob: -4.018150329589844
    3. 'rstrip' → logprob: -15.518150329589844
    4. ' split' → logprob: -15.643150329589844
    5. '(split' → logprob: -17.518150329589844
    6. '.split' → logprob: -18.643150329589844
    7. ' strip' → logprob: -18.643150329589844
    8. 'spl' → logprob: -19.518150329589844
    9. '.strip' → logprob: -20.143150329589844
    10. '().' → logprob: -20.643150329589844

Token 144: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03030899353325367
    2. '()' → logprob: -3.530308961868286
    3. '))' → logprob: -8.280308723449707
    4. '())))' → logprob: -8.780308723449707
    5. '())' → logprob: -8.905308723449707
    6. '()))
' → logprob: -12.155308723449707
    7. '(' → logprob: -12.155308723449707
    8. '()));' → logprob: -13.530308723449707
    9. ')))' → logprob: -14.030308723449707
    10. '())).' → logprob: -14.030308723449707

Token 145: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029371803626418114
    2. '#' → logprob: -3.654371738433838
    3. '
' → logprob: -6.404371738433838
    4. '<|end|>' → logprob: -8.279372215270996
    5. 'n' → logprob: -8.779372215270996
    6. 'if' → logprob: -8.779372215270996
    7. '<|end|>' → logprob: -8.779372215270996
    8. '```' → logprob: -9.154372215270996
    9. 'data' → logprob: -9.279372215270996
    10. 'a' → logprob: -9.279372215270996

Token 146: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07793959230184555
    2. ' solve' → logprob: -2.827939510345459
    3. 'main' → logprob: -4.827939510345459
    4. 'solve' → logprob: -5.827939510345459
    5. ' read' → logprob: -6.452939510345459
    6. ' write' → logprob: -6.577939510345459
    7. ' sum' → logprob: -8.077939987182617
    8. ' process' → logprob: -8.202939987182617
    9. ' compute' → logprob: -8.327939987182617
    10. '_' → logprob: -8.577939987182617

Token 147: '_str' (ID: 6182)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.23623521625995636
    2. '_line' → logprob: -2.2362351417541504
    3. '_' → logprob: -2.8612351417541504
    4. '_str' → logprob: -4.23623514175415
    5. '_list' → logprob: -4.23623514175415
    6. '_string' → logprob: -4.61123514175415
    7. '_float' → logprob: -5.61123514175415
    8. 'int' → logprob: -7.36123514175415
    9. '_char' → logprob: -8.111235618591309
    10. '_single' → logprob: -8.111235618591309

Token 148: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.026614347472786903
    2. 'ing' → logprob: -4.026614189147949
    3. '()' → logprob: -5.026614189147949
    4. 'list' → logprob: -7.151614189147949
    5. 'ings' → logprob: -8.02661418914795
    6. '_line' → logprob: -8.27661418914795
    7. '():' → logprob: -8.77661418914795
    8. '():
' → logprob: -8.90161418914795
    9. 'List' → logprob: -9.77661418914795
    10. '_ing' → logprob: -10.15161418914795

Token 149: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0019751458894461393
    2. '():
' → logprob: -6.251975059509277
    3. '()' → logprob: -10.251975059509277
    4. ' ():' → logprob: -11.626975059509277
    5. '():
' → logprob: -13.376975059509277
    6. '():

' → logprob: -14.876975059509277
    7. '()>' → logprob: -15.626975059509277
    8. ':' → logprob: -16.876976013183594
    9. '()">' → logprob: -17.626976013183594
    10. 'def' → logprob: -18.001976013183594

Token 150: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02090771496295929
    2. '():
' → logprob: -4.520907878875732
    3. '   ' → logprob: -4.645907878875732
    4. ':' → logprob: -8.895907402038574
    5. '()' → logprob: -10.020907402038574
    6. ' ():' → logprob: -11.270907402038574
    7. '():
' → logprob: -11.895907402038574
    8. 'def' → logprob: -12.645907402038574
    9. '):' → logprob: -12.895907402038574
    10. ':
' → logprob: -13.145907402038574

Token 151: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03876043111085892
    2. 'return' → logprob: -3.2887604236602783
    3. ' return' → logprob: -7.538760662078857
    4. '"""
' (adapté à ' """
') → logprob: -8.9137601852417
    5. '"""' → logprob: -10.7887601852417
    6. '
' → logprob: -10.7887601852417
    7. 'def' → logprob: -12.7887601852417
    8. '	return' → logprob: -13.1637601852417
    9. '()' → logprob: -13.5387601852417
    10. '    
' → logprob: -13.9137601852417

Token 152: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.576621949672699
    2. '   ' → logprob: -0.826621949672699
    3. '"""' → logprob: -7.951622009277344
    4. '"
' → logprob: -8.826622009277344
    5. ' """
' → logprob: -9.326622009277344
    6. '
' → logprob: -10.326622009277344
    7. 'return' → logprob: -10.576622009277344
    8. '"' → logprob: -11.076622009277344
    9. '""' → logprob: -11.951622009277344
    10. 'def' → logprob: -12.201622009277344

Token 153: ' Lit' (ID: 45595)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.6467859745025635
    2. '   ' → logprob: -1.0217859745025635
    3. 'Lit' (adapté à ' Lit') → logprob: -2.3967859745025635
    4. 'Lire' → logprob: -4.146785736083984
    5. '"""' → logprob: -5.521785736083984
    6. 'Reads' → logprob: -6.146785736083984
    7. 'return' → logprob: -6.646785736083984
    8. '
' → logprob: -7.896785736083984
    9. 'Lecture' → logprob: -8.396785736083984
    10. ' """
' → logprob: -8.396785736083984

Token 154: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.007726464420557022
    2. 'une' → logprob: -4.882726669311523
    3. '()' → logprob: -9.632726669311523
    4. ' a' → logprob: -10.882726669311523
    5. ' ' → logprob: -11.382726669311523
    6. ' una' → logprob: -11.632726669311523
    7. 'a' → logprob: -12.007726669311523
    8. ' uma' → logprob: -13.132726669311523
    9. ' input' → logprob: -13.382726669311523
    10. 'input' → logprob: -13.632726669311523

Token 155: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.3489433228969574
    2. 'ligne' → logprob: -1.2239433526992798
    3. 'l' → logprob: -8.723943710327148
    4. 'line' → logprob: -8.973943710327148
    5. ' line' → logprob: -9.098943710327148
    6. 'e' → logprob: -10.598943710327148
    7. ' ' → logprob: -11.473943710327148
    8. 'une' → logprob: -11.723943710327148
    9. ' ' → logprob: -11.848943710327148
    10. '#' → logprob: -11.973943710327148

Token 156: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1494600474834442
    2. 'de' → logprob: -2.1494600772857666
    3. '   ' → logprob: -3.8994600772857666
    4. '()' → logprob: -7.1494598388671875
    5. 'from' → logprob: -7.3994598388671875
    6. ',' → logprob: -8.149459838867188
    7. 'def' → logprob: -8.899459838867188
    8. ' ' → logprob: -9.149459838867188
    9. '    ' → logprob: -10.524459838867188
    10. ')' → logprob: -11.024459838867188

Token 157: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3625164330005646
    2. ' l' → logprob: -1.2375164031982422
    3. 'input' → logprob: -4.362516403198242
    4. ' input' → logprob: -6.737516403198242
    5. 'entrée' → logprob: -10.862516403198242
    6. 'str' → logprob: -12.487516403198242
    7. 'stdin' → logprob: -12.987516403198242
    8. 'def' → logprob: -13.112516403198242
    9. ''entrée' → logprob: -13.237516403198242
    10. 's' → logprob: -13.737516403198242

Token 158: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.07895158976316452
    2. 'entrée' → logprob: -2.578951597213745
    3. 'input' → logprob: -10.578951835632324
    4. ' entrée' → logprob: -10.953951835632324
    5. '’entrée' → logprob: -11.453951835632324
    6. ''ent' → logprob: -12.828951835632324
    7. ''' → logprob: -13.203951835632324
    8. 'entrada' → logprob: -14.078951835632324
    9. '#' → logprob: -14.453951835632324
    10. '_input' → logprob: -14.953951835632324

Token 159: ' standard' (ID: 7024)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6201399564743042
    2. '()' → logprob: -0.9951399564743042
    3. 'standard' → logprob: -3.2451400756835938
    4. ' standard' → logprob: -3.6201400756835938
    5. '(),' → logprob: -4.120140075683594
    6. ',' → logprob: -4.870140075683594
    7. '   ' → logprob: -7.120140075683594
    8. '())' → logprob: -7.495140075683594
    9. '_standard' → logprob: -8.120140075683594
    10. ')' → logprob: -8.245140075683594

Token 160: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10943106561899185
    2. '()' → logprob: -2.984431028366089
    3. ',' → logprob: -3.109431028366089
    4. '   ' → logprob: -5.109431266784668
    5. '(),' → logprob: -6.484431266784668
    6. ')' → logprob: -8.109431266784668
    7. '.' → logprob: -8.359431266784668
    8. 'def' → logprob: -9.609431266784668
    9. ' ' → logprob: -9.734431266784668
    10. '(' → logprob: -10.109431266784668

Token 161: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.541908860206604
    2. ' return' → logprob: -1.541908860206604
    3. 'return' → logprob: -2.2919087409973145
    4. '   ' → logprob: -2.6669087409973145
    5. 'split' → logprob: -4.9169087409973145
    6. 'la' → logprob: -5.0419087409973145
    7. ' input' → logprob: -5.1669087409973145
    8. 'input' → logprob: -5.1669087409973145
    9. ' split' → logprob: -5.4169087409973145
    10. 'def' → logprob: -6.0419087409973145

Token 162: ' sé' (ID: 7462)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.031501345336437225
    2. 'strip' → logprob: -3.656501293182373
    3. ' split' → logprob: -5.281501293182373
    4. ' strip' → logprob: -9.406501770019531
    5. 'rstrip' → logprob: -11.281501770019531
    6. 'spl' → logprob: -12.156501770019531
    7. '.split' → logprob: -14.156501770019531
    8. '.strip' → logprob: -14.781501770019531
    9. 's' → logprob: -14.906501770019531
    10. 'replace' → logprob: -15.281501770019531

Token 163: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -1.0206720617134124e-05
    2. 'p' → logprob: -11.62501049041748
    3. 'part' → logprob: -14.75001049041748
    4. 'par' → logprob: -15.25001049041748
    5. 'pa' → logprob: -15.62501049041748
    6. 'parate' → logprob: -15.87501049041748
    7. 'parte' → logprob: -16.500009536743164
    8. 'Pare' → logprob: -16.875009536743164
    9. 'parer' → logprob: -17.000009536743164
    10. 'pares' → logprob: -17.750009536743164

Token 164: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.03353734686970711
    2. 'par' → logprob: -3.5335373878479004
    3. '()' → logprob: -6.1585373878479
    4. '   ' → logprob: -6.5335373878479
    5. '(par' → logprob: -9.408536911010742
    6. '('' → logprob: -9.658536911010742
    7. '	par' → logprob: -11.158536911010742
    8. ' by' → logprob: -11.283536911010742
    9. '_par' → logprob: -11.533536911010742
    10. ' ' → logprob: -11.908536911010742

Token 165: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.00488551938906312
    2. ' les' → logprob: -5.379885673522949
    3. 'spaces' → logprob: -9.25488567352295
    4. 'esp' → logprob: -9.87988567352295
    5. 'des' → logprob: -10.62988567352295
    6. 'es' → logprob: -10.75488567352295
    7. ' espaces' → logprob: -10.75488567352295
    8. ''' → logprob: -10.87988567352295
    9. '```' → logprob: -11.12988567352295
    10. 'l' → logprob: -11.50488567352295

Token 166: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.0215133186429739
    2. ' espaces' → logprob: -4.77151346206665
    3. 'spaces' → logprob: -4.89651346206665
    4. 'es' → logprob: -5.27151346206665
    5. ''esp' → logprob: -8.521512985229492
    6. '’esp' → logprob: -12.896512985229492
    7. ''espace' → logprob: -13.146512985229492
    8. 'paces' → logprob: -13.896512985229492
    9. 'space' → logprob: -14.271512985229492
    10. 's' → logprob: -14.771512985229492

Token 167: ' 
' (ID: 793)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0042865038849413395
    2. '   ' → logprob: -5.629286289215088
    3. ')' → logprob: -7.504286289215088
    4. 'def' → logprob: -9.879286766052246
    5. ',
' → logprob: -10.254286766052246
    6. '),' → logprob: -11.379286766052246
    7. ' ,' → logprob: -11.629286766052246
    8. 'return' → logprob: -12.004286766052246
    9. '(),' → logprob: -12.254286766052246
    10. '.' → logprob: -12.504286766052246

Token 168: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006535819848068058
    2. '   ' → logprob: -7.3756537437438965
    3. 'def' → logprob: -11.625653266906738
    4. ')' → logprob: -12.250653266906738
    5. ' ,' → logprob: -12.375653266906738
    6. '(),' → logprob: -12.625653266906738
    7. '),' → logprob: -12.750653266906738
    8. ',
' → logprob: -13.125653266906738
    9. '()' → logprob: -14.875653266906738
    10. 'return' → logprob: -15.625653266906738

Token 169: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002851729223039001
    2. '   ' → logprob: -8.375285148620605
    3. ',
' → logprob: -10.750285148620605
    4. ')' → logprob: -11.375285148620605
    5. 'def' → logprob: -11.625285148620605
    6. 'et' (adapté à ' et') → logprob: -12.625285148620605
    7. 'return' → logprob: -12.750285148620605
    8. '),' → logprob: -13.000285148620605
    9. ' ,' → logprob: -13.125285148620605
    10. 'and' → logprob: -13.500285148620605

Token 170: ' retourne' (ID: 178818)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.017343513667583466
    2. 'return' → logprob: -4.267343521118164
    3. ' retourne' → logprob: -5.767343521118164
    4. ' return' → logprob: -11.267343521118164
    5. 'ren' → logprob: -11.267343521118164
    6. '   ' → logprob: -11.517343521118164
    7. 'returns' → logprob: -11.892343521118164
    8. 'Retour' → logprob: -13.142343521118164
    9. ' ret' → logprob: -14.267343521118164
    10. ' retour' → logprob: -14.767343521118164

Token 171: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.016313884407281876
    2. ' list' → logprob: -4.5163140296936035
    3. 'la' → logprob: -5.7663140296936035
    4. ' une' → logprob: -7.0163140296936035
    5. ' input' → logprob: -7.5163140296936035
    6. 'input' → logprob: -8.141313552856445
    7. 'list' → logprob: -8.266313552856445
    8. ' l' → logprob: -9.641313552856445
    9. ' ' → logprob: -11.016313552856445
    10. ' ' → logprob: -11.016313552856445

Token 172: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.11995077133178711
    2. 'liste' → logprob: -2.619950771331787
    3. 'list' → logprob: -3.494950771331787
    4. ' list' → logprob: -4.619950771331787
    5. 's' → logprob: -11.244951248168945
    6. 'str' → logprob: -12.494951248168945
    7. 'Liste' → logprob: -13.119951248168945
    8. 'lista' → logprob: -13.244951248168945
    9. '   ' → logprob: -14.369951248168945
    10. 'lis' → logprob: -14.494951248168945

Token 173: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5370132327079773
    2. '(input' → logprob: -1.787013292312622
    3. '   ' → logprob: -2.162013292312622
    4. 'des' → logprob: -2.662013292312622
    5. ' of' → logprob: -3.787013292312622
    6. '(' → logprob: -4.037013053894043
    7. '(str' → logprob: -5.162013053894043
    8. '()' → logprob: -5.287013053894043
    9. 'of' → logprob: -6.162013053894043
    10. 'de' → logprob: -6.912013053894043

Token 174: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.17686058580875397
    2. 'cha' → logprob: -2.6768605709075928
    3. 'élé' → logprob: -3.3018605709075928
    4. 'chain' → logprob: -3.5518605709075928
    5. 'str' → logprob: -4.426860809326172
    6. ' chain' → logprob: -4.551860809326172
    7. 'strings' → logprob: -6.176860809326172
    8. ' éléments' → logprob: -6.301860809326172
    9. 'ch' → logprob: -7.551860809326172
    10. 'm' → logprob: -8.301860809326172

Token 175: ' obten' (ID: 28150)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.25254082679748535
    2. 'de' → logprob: -1.5025408267974854
    3. '   ' → logprob: -8.502540588378906
    4. ' caractères' → logprob: -8.877540588378906
    5. 'car' → logprob: -9.627540588378906
    6. '()' → logprob: -9.877540588378906
    7. '_de' → logprob: -10.252540588378906
    8. ',' → logprob: -10.752540588378906
    9. '_' → logprob: -11.002540588378906
    10. 'def' → logprob: -11.127540588378906

Token 176: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.00020270596724003553
    2. 'u' → logprob: -8.625203132629395
    3. 'us' → logprob: -11.375203132629395
    4. 'es' → logprob: -12.875203132629395
    5. '```' → logprob: -13.375203132629395
    6. '()' → logprob: -13.625203132629395
    7. 'v' → logprob: -14.250203132629395
    8. '   ' → logprob: -14.500203132629395
    9. 'du' → logprob: -14.500203132629395
    10. 'ant' → logprob: -14.500203132629395

Token 177: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8758222460746765
    2. '():' → logprob: -1.0008223056793213
    3. '()' → logprob: -1.6258223056793213
    4. '():
' → logprob: -4.500822067260742
    5. '().' → logprob: -5.625822067260742
    6. '.' → logprob: -5.750822067260742
    7. '):' → logprob: -8.125822067260742
    8. ':' → logprob: -8.250822067260742
    9. '()
' → logprob: -8.750822067260742
    10. 'def' → logprob: -8.875822067260742

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035561234690248966
    2. ')' → logprob: -5.753556251525879
    3. '):' → logprob: -8.253556251525879
    4. 'def' → logprob: -9.753556251525879
    5. '):
' → logprob: -10.878556251525879
    6. '```' → logprob: -11.128556251525879
    7. '"""' → logprob: -11.378556251525879
    8. ')
' → logprob: -12.378556251525879
    9. '
' → logprob: -12.878556251525879
    10. '")' → logprob: -13.253556251525879

Token 179: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007171963807195425
    2. '"""
' → logprob: -7.8757171630859375
    3. 'return' → logprob: -8.875717163085938
    4. '```' → logprob: -8.875717163085938
    5. '"""' → logprob: -10.375717163085938
    6. 'def' → logprob: -11.750717163085938
    7. '
' → logprob: -12.000717163085938
    8. 'Returns' (adapté à ' Returns') → logprob: -12.500717163085938
    9. ' return' → logprob: -13.125717163085938
    10. '       ' → logprob: -13.125717163085938

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5748292803764343
    2. ':
' → logprob: -0.9498292803764343
    3. '   ' → logprob: -3.074829339981079
    4. ':list' → logprob: -6.0748291015625
    5. '       ' → logprob: -6.8248291015625
    6. '[' → logprob: -8.6998291015625
    7. '):
' → logprob: -9.0748291015625
    8. ' of' → logprob: -9.3248291015625
    9. ' :' → logprob: -9.4498291015625
    10. 'def' → logprob: -9.6998291015625

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015240294160321355
    2. '   ' → logprob: -7.126523971557617
    3. ' list' → logprob: -7.626523971557617
    4. 'list' → logprob: -8.376523971557617
    5. 'List' → logprob: -14.626523971557617
    6. '      ' → logprob: -14.876523971557617
    7. '           ' → logprob: -15.126523971557617
    8. '     ' → logprob: -16.126523971557617
    9. '```' → logprob: -16.626523971557617
    10. '        ' → logprob: -16.751523971557617

Token 182: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.003323507495224476
    2. ' list' → logprob: -5.753323554992676
    3. '   ' → logprob: -9.003323554992676
    4. '       ' → logprob: -10.753323554992676
    5. 'List' → logprob: -13.503323554992676
    6. '	list' → logprob: -17.87832260131836
    7. '           ' → logprob: -18.75332260131836
    8. '  ' → logprob: -19.00332260131836
    9. '[list' → logprob: -19.00332260131836
    10. ' ' → logprob: -19.37832260131836

Token 183: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2532790005207062
    2. '[str' → logprob: -1.5032789707183838
    3. 'str' → logprob: -7.128279209136963
    4. 'of' → logprob: -7.628279209136963
    5. ' str' → logprob: -11.003278732299805
    6. '(str' → logprob: -11.128278732299805
    7. '```' → logprob: -11.628278732299805
    8. '   ' → logprob: -11.878278732299805
    9. ' ' → logprob: -12.253278732299805
    10. '[' → logprob: -12.753278732299805

Token 184: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0011706985533237457
    2. ' str' → logprob: -6.751170635223389
    3. '[str' → logprob: -15.001171112060547
    4. 'string' → logprob: -16.376171112060547
    5. '(str' → logprob: -17.626171112060547
    6. '```' → logprob: -18.751171112060547
    7. 'strings' → logprob: -18.876171112060547
    8. '	str' → logprob: -19.001171112060547
    9. ' ' → logprob: -19.126171112060547
    10. ' ' → logprob: -19.501171112060547

Token 185: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017063124105334282
    2. '):' → logprob: -4.142063140869141
    3. '<|end|>' → logprob: -8.26706314086914
    4. '   ' → logprob: -8.39206314086914
    5. ':
' → logprob: -8.76706314086914
    6. ')' → logprob: -9.26706314086914
    7. '):
' → logprob: -9.39206314086914
    8. ' :' → logprob: -9.51706314086914
    9. '```' → logprob: -10.76706314086914
    10. '<|end|>' → logprob: -11.51706314086914

Token 186: ' Liste' (ID: 61030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15240556001663208
    2. ' Liste' → logprob: -3.2774055004119873
    3. 'List' → logprob: -3.4024055004119873
    4. 'Liste' → logprob: -3.6524055004119873
    5. ' list' → logprob: -4.277405738830566
    6. ' La' → logprob: -4.777405738830566
    7. ' List' → logprob: -4.777405738830566
    8. 'La' → logprob: -5.152405738830566
    9. '    ' → logprob: -5.902405738830566
    10. ' liste' → logprob: -6.652405738830566

Token 187: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.027256403118371964
    2. 'des' → logprob: -4.277256488800049
    3. '[str' → logprob: -4.902256488800049
    4. ' of' → logprob: -6.027256488800049
    5. '<|end|>' → logprob: -6.277256488800049
    6. '   ' → logprob: -7.527256488800049
    7. '<string' → logprob: -8.65225601196289
    8. 's' → logprob: -8.90225601196289
    9. 'Des' → logprob: -9.40225601196289
    10. '(str' → logprob: -9.90225601196289

Token 188: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.013967919163405895
    2. 'str' → logprob: -5.263967990875244
    3. 'cha' → logprob: -5.263967990875244
    4. 'chain' → logprob: -6.263967990875244
    5. ' chain' → logprob: -6.763967990875244
    6. 'strings' → logprob: -8.388967514038086
    7. 'élé' → logprob: -9.638967514038086
    8. ' str' → logprob: -10.763967514038086
    9. ' strings' → logprob: -10.763967514038086
    10. ' éléments' → logprob: -10.888967514038086

Token 189: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.245766282081604
    2. ' obten' → logprob: -1.995766282081604
    3. 'obt' → logprob: -3.2457661628723145
    4. '<|end|>' → logprob: -4.1207661628723145
    5. 's' → logprob: -5.1207661628723145
    6. ' obtenu' → logprob: -5.7457661628723145
    7. '```' → logprob: -5.9957661628723145
    8. ' des' → logprob: -6.1207661628723145
    9. ' obtained' → logprob: -6.1207661628723145
    10. ' reç' → logprob: -6.7457661628723145

Token 190: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.00024037064576987177
    2. 'u' → logprob: -8.500240325927734
    3. 'ue' → logprob: -11.000240325927734
    4. 'us' → logprob: -11.625240325927734
    5. '```' → logprob: -12.000240325927734
    6. '
' → logprob: -13.875240325927734
    7. 'is' → logprob: -14.125240325927734
    8. '`' → logprob: -14.250240325927734
    9. '#' → logprob: -14.625240325927734
    10. 'istes' → logprob: -15.375240325927734

Token 191: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2850905954837799
    2. '()' → logprob: -1.5350905656814575
    3. 'def' → logprob: -4.910090446472168
    4. '.' → logprob: -4.910090446472168
    5. ')' → logprob: -5.285090446472168
    6. 'from' → logprob: -5.285090446472168
    7. '():' → logprob: -6.660090446472168
    8. '()
' → logprob: -6.910090446472168
    9. '().' → logprob: -6.910090446472168
    10. '():
' → logprob: -7.285090446472168

Token 192: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04871976748108864
    2. ' l' → logprob: -3.048719882965088
    3. 'input' → logprob: -9.17371940612793
    4. ' input' → logprob: -10.79871940612793
    5. '   ' → logprob: -13.17371940612793
    6. 'la' → logprob: -13.54871940612793
    7. ' ' → logprob: -13.67371940612793
    8. ' ' → logprob: -13.67371940612793
    9. '```' → logprob: -14.42371940612793
    10. '`' → logprob: -15.04871940612793

Token 193: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.005278703290969133
    2. 'entrée' → logprob: -5.255278587341309
    3. ' entrée' → logprob: -11.380278587341309
    4. ''' → logprob: -11.880278587341309
    5. '’entrée' → logprob: -12.005278587341309
    6. 'input' → logprob: -12.255278587341309
    7. 'a' → logprob: -12.380278587341309
    8. ''ent' → logprob: -12.755278587341309
    9. '#' → logprob: -13.255278587341309
    10. 'l' → logprob: -13.880278587341309

Token 194: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9159846305847168
    2. ')' → logprob: -1.2909846305847168
    3. '   ' → logprob: -1.2909846305847168
    4. '):
' → logprob: -3.040984630584717
    5. 'def' → logprob: -7.165984630584717
    6. '.' → logprob: -8.040985107421875
    7. ')
' → logprob: -8.165985107421875
    8. '()' → logprob: -8.665985107421875
    9. '()):
' → logprob: -10.165985107421875
    10. '
' → logprob: -10.165985107421875

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006228336598724127
    2. ')' → logprob: -5.256228446960449
    3. '"""' → logprob: -7.131228446960449
    4. '):' → logprob: -9.50622844696045
    5. 'def' → logprob: -10.75622844696045
    6. '"""
' → logprob: -11.00622844696045
    7. '```' → logprob: -11.00622844696045
    8. '
' → logprob: -11.13122844696045
    9. '""' → logprob: -11.38122844696045
    10. '):
' → logprob: -11.63122844696045

Token 196: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031461045145988464
    2. '"""' → logprob: -6.253146171569824
    3. ')' → logprob: -7.003146171569824
    4. '"""
' (adapté à ' """
') → logprob: -8.628146171569824
    5. 'def' → logprob: -10.253146171569824
    6. '```' → logprob: -10.378146171569824
    7. '
' → logprob: -10.878146171569824
    8. 'return' → logprob: -11.378146171569824
    9. '")' → logprob: -12.253146171569824
    10. ' return' → logprob: -12.378146171569824

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07892272621393204
    2. 'return' → logprob: -2.578922748565674
    3. ' return' → logprob: -10.328922271728516
    4. '```' → logprob: -15.703922271728516
    5. '	return' → logprob: -16.328922271728516
    6. '   ' → logprob: -16.578922271728516
    7. 'def' → logprob: -16.828922271728516
    8. '  ' → logprob: -18.578922271728516
    9. '
' → logprob: -18.703922271728516
    10. '       ' → logprob: -18.953922271728516

Token 198: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.1928003813372925e-05
    2. ' return' → logprob: -10.500051498413086
    3. '   ' → logprob: -10.625051498413086
    4. '	return' → logprob: -17.750051498413086
    5. '```' → logprob: -18.625051498413086
    6. '
' → logprob: -19.000051498413086
    7. 'def' → logprob: -20.375051498413086
    8. ' ' → logprob: -20.750051498413086
    9. 'Return' → logprob: -21.000051498413086
    10. '  ' → logprob: -21.375051498413086

Token 199: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038395460695028305
    2. ' input' → logprob: -3.288395404815674
    3. 'list' → logprob: -8.038395881652832
    4. ' list' → logprob: -10.413395881652832
    5. '[input' → logprob: -14.413395881652832
    6. '(input' → logprob: -14.913395881652832
    7. ' ' → logprob: -17.413394927978516
    8. '<input' → logprob: -17.788394927978516
    9. '   ' → logprob: -18.038394927978516
    10. 'line' → logprob: -18.163394927978516

Token 200: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001171652227640152
    2. '()' → logprob: -6.751171588897705
    3. ' ().' → logprob: -13.876172065734863
    4. '(' → logprob: -14.626172065734863
    5. ' ()' → logprob: -17.626171112060547
    6. '()
' → logprob: -18.876171112060547
    7. '())' → logprob: -19.376171112060547
    8. '.' → logprob: -19.376171112060547
    9. '()).' → logprob: -19.376171112060547
    10. '()`' → logprob: -19.501171112060547

Token 201: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011703446507453918
    2. 'strip' → logprob: -6.7511701583862305
    3. ' split' → logprob: -16.001171112060547
    4. 'rstrip' → logprob: -16.876171112060547
    5. '(split' → logprob: -19.001171112060547
    6. 'spl' → logprob: -19.251171112060547
    7. '_split' → logprob: -20.126171112060547
    8. '.split' → logprob: -21.126171112060547
    9. ' strip' → logprob: -21.876171112060547
    10. 'plit' → logprob: -23.376171112060547

Token 202: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001302374730585143
    2. '())' → logprob: -9.000130653381348
    3. '()`' → logprob: -13.250130653381348
    4. '(' → logprob: -13.375130653381348
    5. '()
' → logprob: -13.500130653381348
    6. '()]' → logprob: -13.875130653381348
    7. '()

' → logprob: -15.000130653381348
    8. ')' → logprob: -15.750130653381348
    9. '()[' → logprob: -15.750130653381348
    10. ' ()' → logprob: -16.25012969970703

Token 203: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08961354196071625
    2. 'n' → logprob: -2.714613437652588
    3. 'if' → logprob: -4.714613437652588
    4. '#' → logprob: -4.964613437652588
    5. 'class' → logprob: -6.089613437652588
    6. 'N' → logprob: -8.089613914489746
    7. 'a' → logprob: -8.464613914489746
    8. '\n' → logprob: -8.589613914489746
    9. '\' → logprob: -9.214613914489746
    10. 'num' → logprob: -9.214613914489746

Token 204: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06269380450248718
    2. 'main' → logprob: -2.9376938343048096
    3. ' solve' → logprob: -5.9376935958862305
    4. ' read' → logprob: -6.4376935958862305
    5. 'solve' → logprob: -6.5626935958862305
    6. 'read' → logprob: -7.4376935958862305
    7. ' factorial' → logprob: -7.4376935958862305
    8. 'factor' → logprob: -8.31269359588623
    9. ' is' → logprob: -8.81269359588623
    10. ' process' → logprob: -9.68769359588623

Token 205: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.36317747831344604
    2. '_line' → logprob: -1.7381775379180908
    3. '_' → logprob: -2.238177537918091
    4. '()' → logprob: -4.363177299499512
    5. 'int' → logprob: -5.613177299499512
    6. '_str' → logprob: -5.738177299499512
    7. ' _' → logprob: -7.738177299499512
    8. '_string' → logprob: -8.363177299499512
    9. '__' → logprob: -8.488177299499512
    10. '_uint' → logprob: -8.738177299499512

Token 206: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004914227407425642
    2. '_' → logprob: -6.004914283752441
    3. '_list' → logprob: -6.379914283752441
    4. '<|end|>' → logprob: -8.254914283752441
    5. '()>' → logprob: -9.129914283752441
    6. ']()' → logprob: -10.004914283752441
    7. '_line' → logprob: -10.129914283752441
    8. '()">' → logprob: -10.254914283752441
    9. '<|end|>' → logprob: -10.504914283752441
    10. '()?>' → logprob: -10.754914283752441

Token 207: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008405959815718234
    2. '()
' → logprob: -7.625840663909912
    3. ' ()' → logprob: -8.875840187072754
    4. 'int' → logprob: -9.500840187072754
    5. '   ' → logprob: -10.375840187072754
    6. '()>' → logprob: -11.125840187072754
    7. '<|end|>' → logprob: -11.250840187072754
    8. ' return' → logprob: -11.375840187072754
    9. '()<' → logprob: -11.500840187072754
    10. '():' → logprob: -11.625840187072754

Token 208: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0956992506980896
    2. '   ' → logprob: -2.5956993103027344
    3. ' return' → logprob: -4.095699310302734
    4. '
' → logprob: -11.720699310302734
    5. '	return' → logprob: -11.720699310302734
    6. '()' → logprob: -12.595699310302734
    7. 'int' → logprob: -13.345699310302734
    8. '()
' → logprob: -13.595699310302734
    9. 'def' → logprob: -14.470699310302734
    10. '"""' → logprob: -14.970699310302734

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005519635044038296
    2. '"""
' → logprob: -6.005519866943359
    3. '"""' → logprob: -6.380519866943359
    4. 'return' → logprob: -7.630519866943359
    5. ')' → logprob: -7.755519866943359
    6. '
' → logprob: -8.63051986694336
    7. '"' → logprob: -9.50551986694336
    8. '")' → logprob: -10.00551986694336
    9. ' return' → logprob: -10.25551986694336
    10. '""' → logprob: -10.38051986694336

Token 210: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04597072675824165
    2. '   ' → logprob: -3.7959706783294678
    3. ' return' → logprob: -3.7959706783294678
    4. '
' → logprob: -12.545970916748047
    5. '	return' → logprob: -13.670970916748047
    6. '"""' → logprob: -13.670970916748047
    7. ' ' → logprob: -13.795970916748047
    8. '  ' → logprob: -15.420970916748047
    9. 'def' → logprob: -15.670970916748047
    10. 'ret' → logprob: -15.920970916748047

Token 211: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0022320940624922514
    2. 'int' → logprob: -6.127232074737549
    3. '()
' → logprob: -11.127232551574707
    4. '   ' → logprob: -12.377232551574707
    5. ' int' → logprob: -12.377232551574707
    6. 'a' → logprob: -12.502232551574707
    7. ' a' → logprob: -12.627232551574707
    8. ')' → logprob: -12.877232551574707
    9. ' ()' → logprob: -12.877232551574707
    10. '(int' → logprob: -13.002232551574707

Token 212: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2864272892475128
    2. 'int' → logprob: -1.4114272594451904
    3. 'ligne' → logprob: -6.0364274978637695
    4. 'line' → logprob: -6.7864274978637695
    5. '().' → logprob: -7.6614274978637695
    6. '()
' → logprob: -8.28642749786377
    7. 'ent' → logprob: -8.41142749786377
    8. 'n' → logprob: -8.41142749786377
    9. ' ligne' → logprob: -8.91142749786377
    10. 'l' → logprob: -9.41142749786377

Token 213: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029716355726122856
    2. 'de' → logprob: -4.404716491699219
    3. ' de' → logprob: -4.904716491699219
    4. '().' → logprob: -5.154716491699219
    5. '   ' → logprob: -5.904716491699219
    6. '()
' → logprob: -7.154716491699219
    7. 'from' → logprob: -9.154716491699219
    8. ',' → logprob: -9.404716491699219
    9. '(),' → logprob: -10.154716491699219
    10. ' ()' → logprob: -10.904716491699219

Token 214: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09028055518865585
    2. ' l' → logprob: -2.465280532836914
    3. 'entrée' → logprob: -7.090280532836914
    4. 'input' → logprob: -8.340280532836914
    5. 'int' → logprob: -9.465280532836914
    6. 'code' → logprob: -9.590280532836914
    7. ' input' → logprob: -9.715280532836914
    8. ' code' → logprob: -10.090280532836914
    9. ' entrée' → logprob: -12.090280532836914
    10. 'ent' → logprob: -12.715280532836914

Token 215: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.14311102032661438
    2. 'entrée' → logprob: -2.018110990524292
    3. 'input' → logprob: -8.643111228942871
    4. '’entrée' → logprob: -9.393111228942871
    5. ' entrée' → logprob: -10.018111228942871
    6. '_input' → logprob: -10.018111228942871
    7. ''ent' → logprob: -10.393111228942871
    8. ''' → logprob: -11.643111228942871
    9. ' input' → logprob: -11.768111228942871
    10. 'ent' → logprob: -12.268111228942871

Token 216: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.5613316893577576
    2. '()' → logprob: -1.1863317489624023
    3. '().' → logprob: -2.6863317489624023
    4. ',' → logprob: -3.6863317489624023
    5. ' standard' → logprob: -4.061331748962402
    6. '(),' → logprob: -4.936331748962402
    7. '()
' → logprob: -5.311331748962402
    8. 'def' → logprob: -7.811331748962402
    9. '   ' → logprob: -8.311331748962402
    10. ')' → logprob: -8.686331748962402

Token 217: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.028002377599477768
    2. '().' → logprob: -3.6530022621154785
    3. '()
' → logprob: -7.2780022621154785
    4. ')' → logprob: -7.4030022621154785
    5. '   ' → logprob: -8.403002738952637
    6. ',' → logprob: -9.653002738952637
    7. 'def' → logprob: -10.653002738952637
    8. 'return' → logprob: -10.903002738952637
    9. '.' → logprob: -11.028002738952637
    10. '(),' → logprob: -11.403002738952637

Token 218: ' la' (ID: 557)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07467561215162277
    2. 'return' → logprob: -2.9496755599975586
    3. '   ' → logprob: -4.074675559997559
    4. ' retourne' → logprob: -6.199675559997559
    5. ' returns' → logprob: -8.074675559997559
    6. 'eturn' → logprob: -9.574675559997559
    7. '@return' → logprob: -10.324675559997559
    8. ' retour' → logprob: -10.699675559997559
    9. 'returns' → logprob: -10.699675559997559
    10. 'int' → logprob: -10.824675559997559

Token 219: ' convert' (ID: 8452)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.26855048537254333
    2. ' return' → logprob: -2.018550395965576
    3. 'return' → logprob: -2.893550395965576
    4. 'rstrip' → logprob: -3.893550395965576
    5. ' retourne' → logprob: -4.893550395965576
    6. '.strip' → logprob: -4.893550395965576
    7. ' ren' → logprob: -5.518550395965576
    8. 'int' → logprob: -6.018550395965576
    9. ' strip' → logprob: -6.268550395965576
    10. 'ren' → logprob: -6.643550395965576

Token 220: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.5928495486150496e-05
    2. 'i' → logprob: -12.000016212463379
    3. 'int' → logprob: -12.000016212463379
    4. 't' → logprob: -13.750016212463379
    5. 'ît' → logprob: -14.875016212463379
    6. '   ' → logprob: -15.000016212463379
    7. ' it' → logprob: -15.125016212463379
    8. 'is' → logprob: -15.250016212463379
    9. 'et' → logprob: -15.250016212463379
    10. 'ie' → logprob: -15.750016212463379

Token 221: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4208839535713196
    2. 'en' → logprob: -1.2958838939666748
    3. ' en' → logprob: -2.670883893966675
    4. '   ' → logprob: -7.545884132385254
    5. 'int' → logprob: -9.795884132385254
    6. ' ()' → logprob: -10.670884132385254
    7. 'def' → logprob: -11.045884132385254
    8. '()
' → logprob: -11.295884132385254
    9. '().' → logprob: -11.420884132385254
    10. '```' → logprob: -11.670884132385254

Token 222: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023315010592341423
    2. ' int' → logprob: -3.773314952850342
    3. ' un' → logprob: -10.3983154296875
    4. 'ent' → logprob: -11.0233154296875
    5. ' entier' → logprob: -11.3983154296875
    6. 'un' → logprob: -12.0233154296875
    7. '<int' → logprob: -12.8983154296875
    8. '=int' → logprob: -13.8983154296875
    9. 'integer' → logprob: -14.7733154296875
    10. ' ' → logprob: -15.0233154296875

Token 223: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01853267103433609
    2. '():' → logprob: -4.268532752990723
    3. ')' → logprob: -6.893532752990723
    4. '   ' → logprob: -7.018532752990723
    5. '().' → logprob: -7.018532752990723
    6. '.' → logprob: -7.018532752990723
    7. '()
' → logprob: -8.393532752990723
    8. '():
' → logprob: -8.768532752990723
    9. ':' → logprob: -8.893532752990723
    10. 'return' → logprob: -10.268532752990723

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0089421346783638
    2. ')' → logprob: -4.758942127227783
    3. 'return' → logprob: -8.633942604064941
    4. '    
' → logprob: -10.383942604064941
    5. '<|end|>' → logprob: -10.508942604064941
    6. ' return' → logprob: -11.008942604064941
    7. '()' → logprob: -11.633942604064941
    8. 'def' → logprob: -11.633942604064941
    9. '  
' → logprob: -11.883942604064941
    10. '  ' → logprob: -12.008942604064941

Token 225: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004252912010997534
    2. 'return' → logprob: -5.504252910614014
    3. ' return' → logprob: -8.754253387451172
    4. 'def' → logprob: -11.629253387451172
    5. '```' → logprob: -13.004253387451172
    6. '
' → logprob: -13.254253387451172
    7. ' ' → logprob: -13.754253387451172
    8. '  ' → logprob: -13.754253387451172
    9. '    ' → logprob: -14.754253387451172
    10. '       ' → logprob: -14.754253387451172

Token 226: ':
' (ID: 734)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7498499751091003
    2. ':int' → logprob: -1.4998500347137451
    3. '   ' → logprob: -2.499850034713745
    4. ' int' → logprob: -2.749850034713745
    5. ':' → logprob: -2.874850034713745
    6. '(int' → logprob: -3.374850034713745
    7. '<int' → logprob: -3.749850034713745
    8. '=int' → logprob: -3.999850034713745
    9. '[int' → logprob: -3.999850034713745
    10. '<|end|>' → logprob: -5.249849796295166

Token 227: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8693865537643433
    2. '   ' → logprob: -1.1193865537643433
    3. 'int' → logprob: -1.3693865537643433
    4. '    ' → logprob: -10.619386672973633
    5. '<int' → logprob: -12.119386672973633
    6. '=int' → logprob: -12.244386672973633
    7. '       ' → logprob: -12.494386672973633
    8. '  ' → logprob: -12.744386672973633
    9. '(int' → logprob: -12.744386672973633
    10. ':int' → logprob: -13.494386672973633

Token 228: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.125335693359375
    4. '(int' → logprob: -20.250335693359375
    5. '
' → logprob: -20.750335693359375
    6. '[int' → logprob: -21.000335693359375
    7. '=int' → logprob: -22.000335693359375
    8. ':int' → logprob: -22.375335693359375
    9. '<int' → logprob: -22.750335693359375
    10. '	int' → logprob: -23.125335693359375

Token 229: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03549377992749214
    2. '):' → logprob: -4.535493850708008
    3. '():' → logprob: -4.785493850708008
    4. ')' → logprob: -5.410493850708008
    5. '   ' → logprob: -5.410493850708008
    6. '<|end|>' → logprob: -6.410493850708008
    7. 'int' → logprob: -6.785493850708008
    8. '()' → logprob: -6.910493850708008
    9. ':
' → logprob: -7.035493850708008
    10. ':int' → logprob: -7.410493850708008

Token 230: ' L' (ID: 451)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0788925439119339
    2. 'int' → logprob: -2.578892469406128
    3. '   ' → logprob: -13.578892707824707
    4. '=int' → logprob: -14.203892707824707
    5. '(int' → logprob: -14.453892707824707
    6. '<int' → logprob: -15.578892707824707
    7. '[int' → logprob: -16.57889175415039
    8. ':int' → logprob: -16.82889175415039
    9. ' return' → logprob: -17.57889175415039
    10. '    ' → logprob: -17.82889175415039

Token 231: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.26410171389579773
    2. 'int' → logprob: -1.8891017436981201
    3. ''ent' → logprob: -3.76410174369812
    4. 'ecture' → logprob: -4.764101505279541
    5. 'ent' → logprob: -4.889101505279541
    6. ''int' → logprob: -5.014101505279541
    7. ' int' → logprob: -5.014101505279541
    8. 'es' → logprob: -5.139101505279541
    9. 'a' → logprob: -5.639101505279541
    10. 'ire' → logprob: -5.639101505279541

Token 232: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -4.763666947837919e-05
    2. 'iert' → logprob: -10.62504768371582
    3. 'iers' → logprob: -12.00004768371582
    4. 'ière' → logprob: -12.12504768371582
    5. 'iere' → logprob: -12.37504768371582
    6. 'i' → logprob: -13.25004768371582
    7. '   ' → logprob: -13.37504768371582
    8. 'er' → logprob: -14.00004768371582
    9. ' entier' → logprob: -14.12504768371582
    10. 'ierd' → logprob: -14.50004768371582

Token 233: ' lu' (ID: 8620)
  Prédit: 'lu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lu' → logprob: -0.35240310430526733
    2. ' lu' → logprob: -1.227403163909912
    3. '<|end|>' → logprob: -6.977403163909912
    4. ' obtenu' → logprob: -7.477403163909912
    5. 'lus' → logprob: -7.727403163909912
    6. 'import' → logprob: -8.227402687072754
    7. '```' → logprob: -8.477402687072754
    8. 'read' → logprob: -8.727402687072754
    9. '"""' → logprob: -8.852402687072754
    10. 'value' → logprob: -9.227402687072754

Token 234: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017366593703627586
    2. ')' → logprob: -4.142366409301758
    3. '()
' → logprob: -7.517366409301758
    4. '   ' → logprob: -8.017366409301758
    5. 'from' → logprob: -8.892366409301758
    6. '())' → logprob: -9.142366409301758
    7. '.' → logprob: -9.642366409301758
    8. '().' → logprob: -10.267366409301758
    9. '```' → logprob: -10.642366409301758
    10. '")' → logprob: -11.017366409301758

Token 235: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6590710878372192
    2. 'l' → logprob: -0.7840710878372192
    3. ' input' → logprob: -4.03407096862793
    4. ' l' → logprob: -5.03407096862793
    5. '   ' → logprob: -6.40907096862793
    6. ')' → logprob: -8.90907096862793
    7. '(input' → logprob: -9.78407096862793
    8. '```' → logprob: -10.90907096862793
    9. ' ' → logprob: -11.65907096862793
    10. 'entrée' → logprob: -11.90907096862793

Token 236: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.2591884136199951
    2. 'l' → logprob: -1.6341884136199951
    3. 'entrée' → logprob: -3.759188413619995
    4. ' l' → logprob: -4.759188652038574
    5. 'input' → logprob: -7.384188652038574
    6. ''l' → logprob: -9.009188652038574
    7. ''' → logprob: -9.259188652038574
    8. ' entrée' → logprob: -9.509188652038574
    9. 'e' → logprob: -9.634188652038574
    10. ' input' → logprob: -9.634188652038574

Token 237: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12066400051116943
    2. '()' → logprob: -2.370664119720459
    3. '   ' → logprob: -4.495664119720459
    4. '()
' → logprob: -5.620664119720459
    5. '())' → logprob: -5.745664119720459
    6. ')
' → logprob: -6.995664119720459
    7. '.' → logprob: -7.620664119720459
    8. '")' → logprob: -8.7456636428833
    9. '().' → logprob: -9.2456636428833
    10. '):' → logprob: -9.3706636428833

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020180940628051758
    2. '
' → logprob: -7.002017974853516
    3. ')' → logprob: -7.127017974853516
    4. '    
' → logprob: -8.627017974853516
    5. '\n' → logprob: -10.377017974853516
    6. '"""' → logprob: -10.627017974853516
    7. ' return' → logprob: -11.127017974853516
    8. ')
' → logprob: -11.627017974853516
    9. '```' → logprob: -11.752017974853516
    10. 'return' → logprob: -11.752017974853516

Token 239: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012465503998100758
    2. '"""' → logprob: -4.762465476989746
    3. '"""
' (adapté à ' """
') → logprob: -5.762465476989746
    4. ')' → logprob: -7.762465476989746
    5. '```' → logprob: -8.762465476989746
    6. '
' → logprob: -9.887465476989746
    7. '""' → logprob: -10.512465476989746
    8. ')
' → logprob: -11.387465476989746
    9. '    
' → logprob: -11.887465476989746
    10. '")' → logprob: -12.137465476989746

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005285103805363178
    2. 'return' → logprob: -5.255285263061523
    3. ' return' → logprob: -9.880285263061523
    4. '```' → logprob: -16.630285263061523
    5. '
' → logprob: -17.130285263061523
    6. '	return' → logprob: -17.755285263061523
    7. '       ' → logprob: -18.130285263061523
    8. '   ' → logprob: -18.255285263061523
    9. '  ' → logprob: -18.505285263061523
    10. '    ' → logprob: -18.630285263061523

Token 241: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.47495681833243e-05
    2. ' return' → logprob: -11.000024795532227
    3. '   ' → logprob: -12.375024795532227
    4. 'int' → logprob: -12.500024795532227
    5. '```' → logprob: -17.750024795532227
    6. 'try' → logprob: -18.625024795532227
    7. '	return' → logprob: -20.000024795532227
    8. '
' → logprob: -20.875024795532227
    9. 'def' → logprob: -22.125024795532227
    10. 'eturn' → logprob: -22.375024795532227

Token 242: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20141343772411346
    2. 'int' → logprob: -1.7014133930206299
    3. '(int' → logprob: -15.82641315460205
    4. '<int' → logprob: -18.076414108276367
    5. '[int' → logprob: -18.451414108276367
    6. '=int' → logprob: -18.576414108276367
    7. '	int' → logprob: -19.076414108276367
    8. ' ' → logprob: -19.451414108276367
    9. ' ' → logprob: -19.951414108276367
    10. ':int' → logprob: -20.326414108276367

Token 243: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0031803252641111612
    2. '(' → logprob: -5.753180503845215
    3. 'input' → logprob: -13.378180503845215
    4. ' (' → logprob: -13.878180503845215
    5. '()' → logprob: -16.6281795501709
    6. '(
' → logprob: -17.6281795501709
    7. '=input' → logprob: -18.0031795501709
    8. ' input' → logprob: -18.2531795501709
    9. '(inp' → logprob: -19.3781795501709
    10. '(Input' → logprob: -19.7531795501709

Token 244: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07923586666584015
    2. '()))' → logprob: -2.579235792160034
    3. '()' → logprob: -8.329236030578613
    4. '().' → logprob: -9.454236030578613
    5. ' ())' → logprob: -11.204236030578613
    6. ')' → logprob: -11.829236030578613
    7. '))' → logprob: -13.079236030578613
    8. '())
' → logprob: -13.454236030578613
    9. '()))
' → logprob: -14.329236030578613
    10. '(' → logprob: -15.079236030578613

Token 245: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019697926472872496
    2. '#' → logprob: -6.376969814300537
    3. 'n' → logprob: -8.876969337463379
    4. 'if' → logprob: -9.626969337463379
    5. 'class' → logprob: -10.376969337463379
    6. 'N' → logprob: -11.376969337463379
    7. '```' → logprob: -11.876969337463379
    8. 'import' → logprob: -12.251969337463379
    9. 'a' → logprob: -13.626969337463379
    10. 'from' → logprob: -14.001969337463379

Token 246: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3629550635814667
    2. ' read' → logprob: -1.612955093383789
    3. 'main' → logprob: -2.862955093383789
    4. 'read' → logprob: -3.737955093383789
    5. ' write' → logprob: -4.112955093383789
    6. 'write' → logprob: -5.987955093383789
    7. ' print' → logprob: -6.112955093383789
    8. 'print' → logprob: -7.112955093383789
    9. 'str' → logprob: -7.112955093383789
    10. ' str' → logprob: -7.612955093383789

Token 247: '_str' (ID: 6182)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.3671743869781494
    2. '_' → logprob: -1.7421743869781494
    3. '_str' → logprob: -2.1171743869781494
    4. '()' → logprob: -5.49217414855957
    5. '_string' → logprob: -6.11717414855957
    6. '_float' → logprob: -6.11717414855957
    7. '_list' → logprob: -7.36717414855957
    8. '_raw' → logprob: -7.36717414855957
    9. 'line' → logprob: -8.11717414855957
    10. '_char' → logprob: -8.36717414855957

Token 248: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007656319532543421
    2. '()' → logprob: -5.132656097412109
    3. '():
' → logprob: -6.382656097412109
    4. '():

' → logprob: -11.63265609741211
    5. '():
' → logprob: -11.75765609741211
    6. '()">' → logprob: -12.00765609741211
    7. ' ():' → logprob: -12.25765609741211
    8. '()>' → logprob: -12.75765609741211
    9. ' ()' → logprob: -13.75765609741211
    10. '()<' → logprob: -13.88265609741211

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045700959162786603
    2. '()' → logprob: -8.125456809997559
    3. 'return' → logprob: -10.000456809997559
    4. '():' → logprob: -10.375456809997559
    5. '
' → logprob: -10.500456809997559
    6. '()
' → logprob: -11.125456809997559
    7. ' return' → logprob: -11.250456809997559
    8. 'def' → logprob: -11.625456809997559
    9. '(' → logprob: -12.125456809997559
    10. '():
' → logprob: -12.375456809997559

Token 250: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03213725984096527
    2. 'return' → logprob: -3.532137155532837
    3. ' return' → logprob: -6.157137393951416
    4. '()' → logprob: -8.532136917114258
    5. '
' → logprob: -10.532136917114258
    6. '()
' → logprob: -11.532136917114258
    7. ' ' → logprob: -11.657136917114258
    8. '	return' → logprob: -12.032136917114258
    9. '  ' → logprob: -12.407136917114258
    10. '    
' → logprob: -13.157136917114258

Token 251: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.20928825438022614
    2. '   ' → logprob: -1.709288239479065
    3. '"""' → logprob: -5.334288120269775
    4. 'return' → logprob: -5.834288120269775
    5. '"
' → logprob: -10.584288597106934
    6. '""' → logprob: -10.709288597106934
    7. '
' → logprob: -11.084288597106934
    8. 'def' → logprob: -11.209288597106934
    9. ' return' → logprob: -12.209288597106934
    10. ''''
' → logprob: -12.334288597106934

Token 252: ' Lit' (ID: 45595)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.41101425886154175
    2. 'def' → logprob: -1.5360143184661865
    3. 'return' → logprob: -2.7860143184661865
    4. '   ' → logprob: -3.2860143184661865
    5. 'Reads' → logprob: -5.036014080047607
    6. '"""' → logprob: -5.286014080047607
    7. 'Lit' (adapté à ' Lit') → logprob: -5.411014080047607
    8. 'Lire' → logprob: -5.661014080047607
    9. '
' → logprob: -6.161014080047607
    10. ''''
' → logprob: -8.411014556884766

Token 253: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.04028048366308212
    2. 'une' → logprob: -3.91528058052063
    3. '()' → logprob: -4.165280342102051
    4. ' a' → logprob: -6.165280342102051
    5. 'a' → logprob: -7.540280342102051
    6. ' la' → logprob: -7.540280342102051
    7. ' una' → logprob: -8.54028034210205
    8. ' un' → logprob: -9.04028034210205
    9. '<|end|>' → logprob: -9.66528034210205
    10. ' ' → logprob: -9.79028034210205

Token 254: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.578023374080658
    2. 'ligne' → logprob: -0.828023374080658
    3. 'line' → logprob: -6.453023433685303
    4. ' line' → logprob: -7.828023433685303
    5. 'chaine' → logprob: -9.828022956848145
    6. ' chaîne' → logprob: -10.953022956848145
    7. 'str' → logprob: -11.203022956848145
    8. 'l' → logprob: -11.203022956848145
    9. 'string' → logprob: -12.578022956848145
    10. ' chaine' → logprob: -13.203022956848145

Token 255: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018943642498925328
    2. ' de' → logprob: -7.251894474029541
    3. '()
' → logprob: -7.376894474029541
    4. 'de' → logprob: -7.876894474029541
    5. 'def' → logprob: -9.751893997192383
    6. '   ' → logprob: -9.876893997192383
    7. '().' → logprob: -9.876893997192383
    8. '()

' → logprob: -11.876893997192383
    9. ' ()' → logprob: -12.876893997192383
    10. ' ' → logprob: -13.876893997192383

Token 256: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01833289861679077
    2. ' l' → logprob: -4.0183329582214355
    3. 'input' → logprob: -8.643332481384277
    4. ' input' → logprob: -12.268332481384277
    5. '_l' → logprob: -14.018332481384277
    6. '```' → logprob: -15.393332481384277
    7. '.l' → logprob: -15.643332481384277
    8. ''l' → logprob: -16.018333435058594
    9. 'sys' → logprob: -16.143333435058594
    10. '(l' → logprob: -16.393333435058594

Token 257: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.003260177094489336
    2. 'entrée' → logprob: -5.753260135650635
    3. 'input' → logprob: -10.628260612487793
    4. ''' → logprob: -11.253260612487793
    5. ''ent' → logprob: -11.378260612487793
    6. ' entrée' → logprob: -11.878260612487793
    7. '’entrée' → logprob: -12.003260612487793
    8. ''utilisateur' → logprob: -12.378260612487793
    9. ''espace' → logprob: -13.253260612487793
    10. '#' → logprob: -13.628260612487793

Token 258: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.12697850167751312
    2. 'standard' → logprob: -2.1269783973693848
    3. '   ' → logprob: -10.626978874206543
    4. 'def' → logprob: -11.376978874206543
    5. 'std' → logprob: -13.001978874206543
    6. '_standard' → logprob: -13.001978874206543
    7. 'Standard' → logprob: -13.251978874206543
    8. '.standard' → logprob: -13.376978874206543
    9. ' standart' → logprob: -13.376978874206543
    10. ' estándar' → logprob: -13.626978874206543

Token 259: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5441256165504456
    2. '()' → logprob: -1.0441255569458008
    3. '   ' → logprob: -3.669125556945801
    4. '()
' → logprob: -3.919125556945801
    5. '().' → logprob: -5.169125556945801
    6. 'return' → logprob: -5.544125556945801
    7. 'def' → logprob: -5.669125556945801
    8. '():' → logprob: -6.169125556945801
    9. '())' → logprob: -6.169125556945801
    10. '):' → logprob: -6.419125556945801

Token 260: ' la' (ID: 557)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03005395643413067
    2. 'return' → logprob: -4.280054092407227
    3. '   ' → logprob: -4.405054092407227
    4. ' retourne' → logprob: -6.030054092407227
    5. ' la' → logprob: -7.780054092407227
    6. ' returns' → logprob: -8.405054092407227
    7. ' def' → logprob: -8.655054092407227
    8. 'def' → logprob: -9.405054092407227
    9. ' ' → logprob: -9.530054092407227
    10. '    ' → logprob: -10.405054092407227

Token 261: ' retourne' (ID: 178818)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.17714811861515045
    2. 'return' → logprob: -2.3021481037139893
    3. ' return' → logprob: -3.0521481037139893
    4. 'rstrip' → logprob: -5.052148342132568
    5. 'split' → logprob: -5.427148342132568
    6. ' strip' → logprob: -5.677148342132568
    7. ' retourne' → logprob: -7.302148342132568
    8. 'decode' → logprob: -10.05214786529541
    9. ' split' → logprob: -10.92714786529541
    10. 'convert' → logprob: -10.92714786529541

Token 262: ' telle' (ID: 70904)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: ' quelle' (ID: 47442)
  Prédit: 'quelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quelle' → logprob: -0.0025498620234429836
    2. 'qu' → logprob: -6.127549648284912
    3. ' quelle' → logprob: -8.87755012512207
    4. 'quel' → logprob: -8.87755012512207
    5. 'quine' → logprob: -10.12755012512207
    6. 'que' → logprob: -10.87755012512207
    7. '```' → logprob: -11.12755012512207
    8. 'Quelle' → logprob: -12.00255012512207
    9. '   ' → logprob: -12.75255012512207
    10. 'q' → logprob: -13.50255012512207

Token 264: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8202993869781494
    2. '()' → logprob: -0.8202993869781494
    3. '   ' → logprob: -2.3202993869781494
    4. '().' → logprob: -4.94529914855957
    5. '()
' → logprob: -5.07029914855957
    6. 'return' → logprob: -6.07029914855957
    7. ')' → logprob: -6.19529914855957
    8. '.
' → logprob: -6.82029914855957
    9. 'def' → logprob: -7.32029914855957
    10. ',' → logprob: -7.32029914855957

Token 265: 'cha' (ID: 3836)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38865721225738525
    2. '   ' → logprob: -1.5136572122573853
    3. 'input' → logprob: -2.6386570930480957
    4. ')
' → logprob: -4.513657093048096
    5. ').' → logprob: -4.763657093048096
    6. ' input' → logprob: -5.263657093048096
    7. ' )' → logprob: -6.513657093048096
    8. '```' → logprob: -7.013657093048096
    9. '):
' → logprob: -7.388657093048096
    10. 'str' → logprob: -7.388657093048096

Token 266: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.007061549928039312
    2. 'ine' → logprob: -5.00706148147583
    3. 'ïne' → logprob: -9.132061958312988
    4. 'î' → logprob: -9.632061958312988
    5. '\' → logprob: -9.882061958312988
    6. '```' → logprob: -10.132061958312988
    7. 'ne' → logprob: -10.882061958312988
    8. '
' → logprob: -11.132061958312988
    9. 'que' → logprob: -11.257061958312988
    10. '   ' → logprob: -11.257061958312988

Token 267: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18321093916893005
    2. '   ' → logprob: -2.058210849761963
    3. '()' → logprob: -3.558210849761963
    4. '())' → logprob: -5.308210849761963
    5. '  ' → logprob: -7.183210849761963
    6. '    ' → logprob: -7.308210849761963
    7. ' entière' → logprob: -7.558210849761963
    8. ' )' → logprob: -7.683210849761963
    9. ' complète' → logprob: -7.683210849761963
    10. '')' → logprob: -7.933210849761963

Token 268: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.10207875072956085
    2. ' caractères' → logprob: -2.352078676223755
    3. ' caracteres' → logprob: -7.352078914642334
    4. 'chars' → logprob: -7.852078914642334
    5. 'texte' → logprob: -8.102078437805176
    6. ' caractère' → logprob: -8.352078437805176
    7. ' caract' → logprob: -9.352078437805176
    8. 'str' → logprob: -10.102078437805176
    9. 'l' → logprob: -10.352078437805176
    10. 'input' → logprob: -10.727078437805176

Token 269: ').

' (ID: 3991)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.3533627688884735
    2. ')' → logprob: -1.228362798690796
    3. '):' → logprob: -5.603362560272217
    4. '   ' → logprob: -7.728362560272217
    5. '):
' → logprob: -7.978362560272217
    6. ').
' → logprob: -8.353363037109375
    7. ')
' → logprob: -9.103363037109375
    8. '.' → logprob: -11.103363037109375
    9. '()' → logprob: -11.603363037109375
    10. 'def' → logprob: -11.728363037109375

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.082895273109898e-05
    2. 'def' → logprob: -10.500030517578125
    3. '```' → logprob: -13.625030517578125
    4. 'return' → logprob: -14.125030517578125
    5. ' return' → logprob: -14.500030517578125
    6. '    
' → logprob: -16.000030517578125
    7. '
' → logprob: -16.000030517578125
    8. '    ' → logprob: -16.250030517578125
    9. '<|end|>' → logprob: -16.250030517578125
    10. '  ' → logprob: -16.375030517578125

Token 271: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030197695014066994
    2. 'def' → logprob: -8.1253023147583
    3. '```' → logprob: -13.1253023147583
    4. '"""' → logprob: -13.5003023147583
    5. 'return' → logprob: -13.7503023147583
    6. '"""
' → logprob: -14.7503023147583
    7. '    ' → logprob: -15.2503023147583
    8. ' def' → logprob: -15.3753023147583
    9. '    
' → logprob: -15.5003023147583
    10. '
' → logprob: -15.7503023147583

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23764580488204956
    2. ':
' → logprob: -1.7376458644866943
    3. '   ' → logprob: -3.3626458644866943
    4. '       ' → logprob: -7.362645626068115
    5. 'def' → logprob: -9.362646102905273
    6. '):' → logprob: -9.737646102905273
    7. '```' → logprob: -10.362646102905273
    8. ':return' → logprob: -10.487646102905273
    9. '):
' → logprob: -10.612646102905273
    10. '[' → logprob: -11.487646102905273

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004149510990828276
    2. '   ' → logprob: -5.504149436950684
    3. ' str' → logprob: -10.004149436950684
    4. 'str' → logprob: -11.129149436950684
    5. '      ' → logprob: -12.629149436950684
    6. '
' → logprob: -12.879149436950684
    7. '    ' → logprob: -14.004149436950684
    8. '```' → logprob: -14.254149436950684
    9. ':' → logprob: -14.379149436950684
    10. '     ' → logprob: -14.504149436950684

Token 274: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.08910892903804779
    2. ' str' → logprob: -2.589108943939209
    3. '   ' → logprob: -4.589108943939209
    4. '       ' → logprob: -12.96410846710205
    5. '
' → logprob: -13.83910846710205
    6. 'string' → logprob: -14.33910846710205
    7. '	str' → logprob: -14.58910846710205
    8. '    ' → logprob: -15.21410846710205
    9. '```' → logprob: -15.96410846710205
    10. '  ' → logprob: -16.089109420776367

Token 275: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6708570122718811
    2. '):' → logprob: -0.7958570122718811
    3. ':
' → logprob: -4.295856952667236
    4. '   ' → logprob: -4.545856952667236
    5. '):
' → logprob: -5.045856952667236
    6. ')' → logprob: -5.295856952667236
    7. '():' → logprob: -6.920856952667236
    8. ':return' → logprob: -8.545857429504395
    9. ' :' → logprob: -8.795857429504395
    10. '<|end|>' → logprob: -8.920857429504395

Token 276: ' La' (ID: 3038)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07954593747854233
    2. '   ' → logprob: -3.2045459747314453
    3. 'input' → logprob: -3.3295459747314453
    4. ' str' → logprob: -9.829545974731445
    5. '    ' → logprob: -11.454545974731445
    6. 'Input' → logprob: -12.579545974731445
    7. ' ' → logprob: -13.079545974731445
    8. ' la' → logprob: -13.079545974731445
    9. 'str' → logprob: -13.954545974731445
    10. ' ' → logprob: -14.079545974731445

Token 277: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.2672155499458313
    2. 'chaine' → logprob: -2.0172154903411865
    3. ' ligne' → logprob: -2.6422154903411865
    4. ' chaine' → logprob: -4.142215728759766
    5. 'cha' → logprob: -5.142215728759766
    6. 'ligne' → logprob: -5.517215728759766
    7. ' input' → logprob: -6.017215728759766
    8. ' string' → logprob: -7.142215728759766
    9. 'input' → logprob: -7.892215728759766
    10. 'str' → logprob: -8.142215728759766

Token 278: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.01611214317381382
    2. '   ' → logprob: -5.141112327575684
    3. 'l' → logprob: -6.266112327575684
    4. ' read' → logprob: -6.391112327575684
    5. 'read' → logprob: -6.766112327575684
    6. 'lu' → logprob: -6.891112327575684
    7. ' lu' → logprob: -7.016112327575684
    8. '<|end|>' → logprob: -7.141112327575684
    9. '"""' → logprob: -7.391112327575684
    10. ' complète' → logprob: -7.391112327575684

Token 279: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -7.743758760625497e-05
    2. 'u' → logprob: -9.875077247619629
    3. 'ine' → logprob: -11.750077247619629
    4. 'ignée' → logprob: -11.875077247619629
    5. 'igne' → logprob: -12.875077247619629
    6. '#' → logprob: -13.250077247619629
    7. 'uée' → logprob: -13.375077247619629
    8. 'e' → logprob: -13.875077247619629
    9. 'inie' → logprob: -14.125077247619629
    10. 'us' → logprob: -14.125077247619629

Token 280: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.031441859900951385
    2. 'from' → logprob: -4.156441688537598
    3. '()
' → logprob: -4.906441688537598
    4. '   ' → logprob: -5.406441688537598
    5. '().' → logprob: -6.906441688537598
    6. '.' → logprob: -7.656441688537598
    7. ' depuis' → logprob: -7.781441688537598
    8. '<|end|>' → logprob: -7.781441688537598
    9. ')' → logprob: -7.906441688537598
    10. ' from' → logprob: -8.906441688537598

Token 281: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04086954519152641
    2. 'input' → logprob: -3.2908694744110107
    3. ' l' → logprob: -5.91586971282959
    4. ' input' → logprob: -9.04086971282959
    5. '(input' → logprob: -12.41586971282959
    6. '   ' → logprob: -12.79086971282959
    7. '```' → logprob: -14.04086971282959
    8. 'entrée' → logprob: -15.04086971282959
    9. '=input' → logprob: -15.04086971282959
    10. '	l' → logprob: -15.29086971282959

Token 282: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.0008082019630819559
    2. 'entrée' → logprob: -7.125808238983154
    3. '’entrée' → logprob: -13.750807762145996
    4. ''' → logprob: -14.500807762145996
    5. ''ent' → logprob: -14.750807762145996
    6. 'input' → logprob: -15.125807762145996
    7. ' entrée' → logprob: -15.500807762145996
    8. ''ouverture' → logprob: -15.500807762145996
    9. 'l' → logprob: -15.750807762145996
    10. ''utilisateur' → logprob: -16.250808715820312

Token 283: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16251897811889648
    2. '()' → logprob: -2.1625189781188965
    3. '   ' → logprob: -4.0375189781188965
    4. ').' → logprob: -4.9125189781188965
    5. ')
' → logprob: -5.9125189781188965
    6. '())' → logprob: -6.0375189781188965
    7. '.' → logprob: -6.2875189781188965
    8. '()
' → logprob: -6.9125189781188965
    9. '")' → logprob: -7.5375189781188965
    10. '```' → logprob: -7.6625189781188965

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004732102679554373
    2. '"""' → logprob: -8.500473022460938
    3. ')' → logprob: -9.500473022460938
    4. '```' → logprob: -9.500473022460938
    5. '"""
' → logprob: -9.750473022460938
    6. '<|end|>' → logprob: -10.125473022460938
    7. '
' → logprob: -12.000473022460938
    8. ')
' → logprob: -12.875473022460938
    9. 'return' → logprob: -13.250473022460938
    10. '    
' → logprob: -13.250473022460938

Token 285: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05175284296274185
    2. '"""' → logprob: -3.426752805709839
    3. '"""
' (adapté à ' """
') → logprob: -4.051753044128418
    4. '```' → logprob: -8.051753044128418
    5. '""' → logprob: -9.301753044128418
    6. ')' → logprob: -9.551753044128418
    7. ')
' → logprob: -10.176753044128418
    8. 'def' → logprob: -11.551753044128418
    9. '"' → logprob: -11.676753044128418
    10. 'return' → logprob: -12.676753044128418

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.5577775128767826e-06
    2. 'return' → logprob: -12.125005722045898
    3. ' return' → logprob: -16.0000057220459
    4. 'def' → logprob: -19.6250057220459
    5. '       ' → logprob: -19.7500057220459
    6. '
' → logprob: -19.8750057220459
    7. '   ' → logprob: -19.8750057220459
    8. '```' → logprob: -20.7500057220459
    9. '	return' → logprob: -22.1250057220459
    10. '    
' → logprob: -22.3750057220459

Token 287: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.6060808522743173e-05
    2. '   ' → logprob: -11.250025749206543
    3. ' return' → logprob: -11.250025749206543
    4. '
' → logprob: -20.50002670288086
    5. '	return' → logprob: -22.12502670288086
    6. '```' → logprob: -22.12502670288086
    7. 'eturn' → logprob: -23.50002670288086
    8. ' ' → logprob: -24.62502670288086
    9. ')return' → logprob: -24.75002670288086
    10. '{return' → logprob: -25.25002670288086

Token 288: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009114635176956654
    2. ' input' → logprob: -7.000911235809326
    3. 'str' → logprob: -19.375911712646484
    4. '(input' → logprob: -19.750911712646484
    5. '=input' → logprob: -21.125911712646484
    6. '	input' → logprob: -21.875911712646484
    7. 'int' → logprob: -22.125911712646484
    8. '<input' → logprob: -22.750911712646484
    9. ' ' → logprob: -22.875911712646484
    10. '.input' → logprob: -23.125911712646484

Token 289: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.643152740551159e-05
    2. '().' → logprob: -10.500036239624023
    3. ' ()' → logprob: -13.125036239624023
    4. '())' → logprob: -13.125036239624023
    5. '()
' → logprob: -13.250036239624023
    6. '()`' → logprob: -13.500036239624023
    7. '()]' → logprob: -14.375036239624023
    8. '()

' → logprob: -15.750036239624023
    9. '()<' → logprob: -15.875036239624023
    10. '`()' → logprob: -15.875036239624023

Token 290: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26615506410598755
    2. 'def' → logprob: -1.5161550045013428
    3. '<|end|>' → logprob: -4.516155242919922
    4. 'if' → logprob: -6.266155242919922
    5. '```' → logprob: -7.891155242919922
    6. '<|end|>' → logprob: -8.266155242919922
    7. 'print' → logprob: -9.016155242919922
    8. '\n' → logprob: -9.266155242919922
    9. '\' → logprob: -10.016155242919922
    10. '
' → logprob: -10.016155242919922

Token 291: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.007388213183730841
    2. ' solve' → logprob: -5.757388114929199
    3. 'main' → logprob: -6.757388114929199
    4. ' factorial' → logprob: -7.132388114929199
    5. ' write' → logprob: -7.507388114929199
    6. '_' → logprob: -7.882388114929199
    7. '_main' → logprob: -8.1323881149292
    8. ' read' → logprob: -8.2573881149292
    9. ' is' → logprob: -9.1323881149292
    10. ' sum' → logprob: -9.6323881149292

Token 292: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.226628895296017e-06
    2. ' ():' → logprob: -12.375007629394531
    3. '():
' → logprob: -12.875007629394531
    4. '()' → logprob: -14.875007629394531
    5. '():
' → logprob: -17.75000762939453
    6. '(' → logprob: -18.37500762939453
    7. '()>' → logprob: -19.25000762939453
    8. '_' → logprob: -19.75000762939453
    9. ':' → logprob: -20.62500762939453
    10. '():

' → logprob: -20.75000762939453

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5332478142227046e-05
    2. 'n' → logprob: -12.000015258789062
    3. '    
' → logprob: -12.625015258789062
    4. '(n' → logprob: -13.125015258789062
    5. '```' → logprob: -13.875015258789062
    6. '   ' → logprob: -14.000015258789062
    7. '
' → logprob: -14.625015258789062
    8. ' n' → logprob: -14.875015258789062
    9. '#' → logprob: -15.250015258789062
    10. '()' → logprob: -15.750015258789062

Token 294: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21334092319011688
    2. '   ' → logprob: -2.213340997695923
    3. ' n' → logprob: -2.588340997695923
    4. '#' → logprob: -5.588340759277344
    5. 't' → logprob: -6.338340759277344
    6. 'N' → logprob: -7.338340759277344
    7. ' #' → logprob: -7.588340759277344
    8. 'T' → logprob: -8.338340759277344
    9. ' t' → logprob: -8.463340759277344
    10. ' T' → logprob: -9.088340759277344

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013849768787622452
    2. '#' → logprob: -4.63884973526001
    3. 'n' → logprob: -6.13884973526001
    4. ' #' → logprob: -7.38884973526001
    5. ' n' → logprob: -7.51384973526001
    6. '    
' → logprob: -8.888850212097168
    7. '       ' → logprob: -9.763850212097168
    8. 'a' → logprob: -10.138850212097168
    9. '```' → logprob: -10.138850212097168
    10. 'int' → logprob: -10.263850212097168

Token 296: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7420296669006348
    2. '#' → logprob: -1.1170296669006348
    3. ' pass' → logprob: -2.1170296669006348
    4. ' #' → logprob: -3.1170296669006348
    5. 'pass' → logprob: -4.367029666900635
    6. ' lines' → logprob: -4.742029666900635
    7. ' n' → logprob: -5.992029666900635
    8. 'n' → logprob: -6.242029666900635
    9. 'import' → logprob: -7.117029666900635
    10. 'args' → logprob: -7.992029666900635

Token 297: ' principale' (ID: 68926)
  Prédit: ' principale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principale' → logprob: -0.6180592179298401
    2. '()' → logprob: -1.4930591583251953
    3. 'def' → logprob: -2.2430591583251953
    4. ' main' → logprob: -3.1180591583251953
    5. ' de' → logprob: -3.7430591583251953
    6. '   ' → logprob: -3.8680591583251953
    7. '():
' → logprob: -4.368059158325195
    8. 'de' → logprob: -4.743059158325195
    9. '():' → logprob: -5.368059158325195
    10. 'main' → logprob: -5.868059158325195

Token 298: ' du' (ID: 1462)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.009036177769303322
    2. '():
' → logprob: -5.009036064147949
    3. '   ' → logprob: -6.384036064147949
    4. ':' → logprob: -7.884036064147949
    5. 'def' → logprob: -8.88403606414795
    6. '()' → logprob: -9.13403606414795
    7. ':
' → logprob: -13.25903606414795
    8. '):' → logprob: -13.38403606414795
    9. ' ():' → logprob: -13.63403606414795
    10. '();' → logprob: -14.63403606414795

Token 299: ' programme' (ID: 18190)
  Prédit: ' programme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programme' → logprob: -0.18017858266830444
    2. 'programme' → logprob: -1.9301786422729492
    3. 'program' → logprob: -4.680178642272949
    4. ' program' → logprob: -5.305178642272949
    5. ' script' → logprob: -5.430178642272949
    6. ' code' → logprob: -7.055178642272949
    7. 'script' → logprob: -9.05517864227295
    8. 'code' → logprob: -9.93017864227295
    9. ' programma' → logprob: -11.05517864227295
    10. '_program' → logprob: -11.18017864227295

Token 300: '.
' (ID: 558)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06469909846782684
    2. ':' → logprob: -2.939699172973633
    3. '   ' → logprob: -5.064699172973633
    4. '():
' → logprob: -6.064699172973633
    5. '):' → logprob: -7.189699172973633
    6. ':
' → logprob: -8.814699172973633
    7. '()' → logprob: -9.189699172973633
    8. '.' → logprob: -9.689699172973633
    9. ' :' → logprob: -10.814699172973633
    10. ',' → logprob: -11.564699172973633

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032573307398706675
    2. '    
' → logprob: -6.2532572746276855
    3. '
' → logprob: -7.1282572746276855
    4. '    ' → logprob: -8.878257751464844
    5. '#' → logprob: -9.753257751464844
    6. ' 
' → logprob: -9.753257751464844
    7. '  
' → logprob: -10.253257751464844
    8. ')' → logprob: -10.503257751464844
    9. '\n' → logprob: -10.753257751464844
    10. '<|end|>' → logprob: -10.753257751464844

Token 302: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002202474744990468
    2. '    
' → logprob: -6.37720251083374
    3. '
' → logprob: -8.002202033996582
    4. '#' → logprob: -9.502202033996582
    5. '    ' → logprob: -9.752202033996582
    6. 'n' → logprob: -12.252202033996582
    7. 'import' → logprob: -12.377202033996582
    8. ' 
' → logprob: -12.502202033996582
    9. ' #' → logprob: -12.877202033996582
    10. '   
' → logprob: -13.127202033996582

Token 303: ' deux' (ID: 10301)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.309248447418213
    2. ' une' → logprob: -1.309248447418213
    3. ' la' → logprob: -1.434248447418213
    4. '   ' → logprob: -1.809248447418213
    5. ' un' → logprob: -4.059248447418213
    6. ' des' → logprob: -4.684248447418213
    7. '()' → logprob: -5.059248447418213
    8. ' l' → logprob: -5.309248447418213
    9. ' ' → logprob: -5.559248447418213
    10. ' le' → logprob: -5.809248447418213

Token 304: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.33326321840286255
    2. 'ent' → logprob: -1.8332631587982178
    3. ' nombres' → logprob: -2.3332631587982178
    4. ' integers' → logprob: -4.458263397216797
    5. ' listes' → logprob: -5.208263397216797
    6. ' lignes' → logprob: -5.333263397216797
    7. ' ' → logprob: -6.583263397216797
    8. ' entier' → logprob: -7.583263397216797
    9. 'int' → logprob: -7.583263397216797
    10. ' espaces' → logprob: -7.958263397216797

Token 305: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0020221394952386618
    2. 'ières' → logprob: -6.5020222663879395
    3. 'etes' → logprob: -8.252021789550781
    4. 'es' → logprob: -9.002021789550781
    5. 'ers' → logprob: -10.127021789550781
    6. 'ieres' → logprob: -10.377021789550781
    7. 'ier' → logprob: -11.002021789550781
    8. 'ies' → logprob: -11.127021789550781
    9. 'ées' → logprob: -12.127021789550781
    10. '   ' → logprob: -12.252021789550781

Token 306: ' H' (ID: 487)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25228050351142883
    2. 'n' → logprob: -2.2522804737091064
    3. ',' → logprob: -3.1272804737091064
    4. '()' → logprob: -3.5022804737091064
    5. 'a' → logprob: -4.0022807121276855
    6. ' a' → logprob: -4.2522807121276855
    7. ' N' → logprob: -5.3772807121276855
    8. '   ' → logprob: -6.2522807121276855
    9. '(n' → logprob: -6.6272807121276855
    10. '(),' → logprob: -7.2522807121276855

Token 307: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.433829159708694e-05
    2. ',W' → logprob: -10.50007438659668
    3. ' ,' → logprob: -11.25007438659668
    4. 'a' → logprob: -11.87507438659668
    5. 'and' → logprob: -12.37507438659668
    6. 'et' → logprob: -12.50007438659668
    7. '   ' → logprob: -12.75007438659668
    8. ' et' → logprob: -13.12507438659668
    9. ' and' → logprob: -13.37507438659668
    10. ',
' → logprob: -13.62507438659668

Token 308: ' A' (ID: 355)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.08280066400766373
    2. ' W' → logprob: -2.5828006267547607
    3. 'M' → logprob: -6.08280086517334
    4. '   ' → logprob: -7.08280086517334
    5. 'L' → logprob: -8.33280086517334
    6. ' ' → logprob: -8.83280086517334
    7. 'V' → logprob: -9.45780086517334
    8. 'N' → logprob: -9.70780086517334
    9. ' M' → logprob: -9.70780086517334
    10. 'T' → logprob: -9.95780086517334

Token 309: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18085908889770508
    2. ',' → logprob: -1.930859088897705
    3. ' =' → logprob: -3.930859088897705
    4. '=' → logprob: -8.180858612060547
    5. ':' → logprob: -8.805858612060547
    6. ',
' → logprob: -9.930858612060547
    7. '    
' → logprob: -10.430858612060547
    8. 'from' → logprob: -10.430858612060547
    9. 'def' → logprob: -10.430858612060547
    10. ' ,' → logprob: -10.430858612060547

Token 310: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09346470981836319
    2. 'input' → logprob: -2.5934646129608154
    3. '   ' → logprob: -5.4684648513793945
    4. ' input' → logprob: -5.4684648513793945
    5. ' l' → logprob: -5.9684648513793945
    6. 'la' → logprob: -6.4684648513793945
    7. 'une' → logprob: -6.7184648513793945
    8. '()' → logprob: -8.718464851379395
    9. '=input' → logprob: -8.843464851379395
    10. 'stdin' → logprob: -9.468464851379395

Token 311: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.13087505102157593
    2. 'entrée' → logprob: -2.1308751106262207
    3. 'input' → logprob: -6.130875110626221
    4. '   ' → logprob: -6.880875110626221
    5. 'a' → logprob: -8.630874633789062
    6. '’entrée' → logprob: -9.005874633789062
    7. 'e' → logprob: -9.255874633789062
    8. ' entrée' → logprob: -9.630874633789062
    9. 'entr' → logprob: -9.880874633789062
    10. 'stdin' → logprob: -10.005874633789062

Token 312: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15073642134666443
    2. '   ' → logprob: -2.0257363319396973
    3. '(),' → logprob: -6.400736331939697
    4. ' standard' → logprob: -6.400736331939697
    5. ':' → logprob: -6.775736331939697
    6. '.' → logprob: -6.900736331939697
    7. '()' → logprob: -7.150736331939697
    8. '():' → logprob: -8.275736808776855
    9. ' (' → logprob: -8.400736808776855
    10. ' =' → logprob: -8.400736808776855

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.860340752406046e-05
    2. '#' → logprob: -11.2500581741333
    3. '    ' → logprob: -11.2500581741333
    4. '    
' → logprob: -11.8750581741333
    5. ',' → logprob: -12.0000581741333
    6. ' puis' → logprob: -12.1250581741333
    7. '  ' → logprob: -12.2500581741333
    8. ' et' → logprob: -13.5000581741333
    9. 'def' → logprob: -13.7500581741333
    10. ' ' → logprob: -13.8750581741333

Token 314: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010068230039905757
    2. '    
' → logprob: -9.875101089477539
    3. '#' → logprob: -10.750101089477539
    4. '    ' → logprob: -11.750101089477539
    5. '
' → logprob: -12.125101089477539
    6. ' #' → logprob: -12.625101089477539
    7. '  ' → logprob: -12.875101089477539
    8. ' H' → logprob: -12.875101089477539
    9. '   ' → logprob: -13.875101089477539
    10. ' ' → logprob: -14.250101089477539

Token 315: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015188434161245823
    2. ' calculates' → logprob: -4.640188217163086
    3. 'def' → logprob: -6.890188217163086
    4. '#' → logprob: -7.765188217163086
    5. ' affiche' → logprob: -8.140188217163086
    6. ' H' → logprob: -8.515188217163086
    7. 'for' → logprob: -8.515188217163086
    8. 'if' → logprob: -8.640188217163086
    9. ' #' → logprob: -8.765188217163086
    10. 's' → logprob: -8.765188217163086

Token 316: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.6185691356658936
    2. 'ure' → logprob: -2.1185691356658936
    3. 'ite' → logprob: -2.1185691356658936
    4. 'ute' → logprob: -2.6185691356658936
    5. '   ' → logprob: -2.7435691356658936
    6. '#' → logprob: -4.368569374084473
    7. 'ulte' → logprob: -4.743569374084473
    8. 'ul' → logprob: -4.743569374084473
    9. 'rite' → logprob: -4.868569374084473
    10. 'it' → logprob: -4.993569374084473

Token 317: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11738615483045578
    2. '   ' → logprob: -2.4923861026763916
    3. ' le' → logprob: -4.492386341094971
    4. ' l' → logprob: -5.492386341094971
    5. ' et' → logprob: -5.867386341094971
    6. ' H' → logprob: -6.117386341094971
    7. 'le' → logprob: -6.867386341094971
    8. ' une' → logprob: -6.992386341094971
    9. ' leur' → logprob: -6.992386341094971
    10. ' ' → logprob: -7.117386341094971

Token 318: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.0868325233459473
    2. 'damage' → logprob: -1.3368325233459473
    3. ' nombre' → logprob: -1.8368325233459473
    4. 'd' → logprob: -2.4618325233459473
    5. ' damage' → logprob: -3.4618325233459473
    6. 'result' → logprob: -3.5868325233459473
    7. 'res' → logprob: -4.461832523345947
    8. 'score' → logprob: -4.461832523345947
    9. 'import' → logprob: -4.461832523345947
    10. 'max' → logprob: -4.711832523345947

Token 319: ' minimal' (ID: 19957)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.25606343150138855
    2. 'de' → logprob: -1.881063461303711
    3. ' d' → logprob: -3.881063461303711
    4. '   ' → logprob: -4.631063461303711
    5. 'd' → logprob: -4.756063461303711
    6. '_de' → logprob: -4.756063461303711
    7. ' ' → logprob: -5.256063461303711
    8. '_' → logprob: -5.506063461303711
    9. '  ' → logprob: -5.756063461303711
    10. ' initial' → logprob: -6.506063461303711

Token 320: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.18550953269004822
    2. ' d' → logprob: -2.060509443283081
    3. '   ' → logprob: -3.685509443283081
    4. ' ' → logprob: -4.81050968170166
    5. '_' → logprob: -5.81050968170166
    6. 'de' → logprob: -5.81050968170166
    7. '_de' → logprob: -7.18550968170166
    8. '  ' → logprob: -7.43550968170166
    9. '    ' → logprob: -8.06050968170166
    10. 'd' → logprob: -8.81050968170166

Token 321: ''op' (ID: 70747)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8164353370666504
    2. 'e' → logprob: -1.1914353370666504
    3. ''app' → logprob: -1.8164353370666504
    4. ' attaques' → logprob: -3.5664353370666504
    5. 'é' → logprob: -4.56643533706665
    6. ' tours' → logprob: -4.69143533706665
    7. 'es' → logprob: -4.94143533706665
    8. ''é' → logprob: -5.56643533706665
    9. '```' → logprob: -5.81643533706665
    10. '_iterations' → logprob: -6.06643533706665

Token 322: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.00022833107504993677
    2. 'ér' → logprob: -9.875227928161621
    3. 'er' → logprob: -10.500227928161621
    4. '#' → logprob: -10.625227928161621
    5. 'é' → logprob: -10.750227928161621
    6. '```' → logprob: -10.875227928161621
    7. 'ération' → logprob: -12.000227928161621
    8. 'p' → logprob: -12.125227928161621
    9. '1' → logprob: -12.125227928161621
    10. 'c' → logprob: -12.312727928161621

Token 323: ' nécessaires' (ID: 74402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7003510594367981
    2. ' nécessaires' → logprob: -0.8253510594367981
    3. ' nécessaire' → logprob: -3.2003509998321533
    4. ' pour' → logprob: -5.700351238250732
    5. ' necessary' → logprob: -5.825351238250732
    6. '    ' → logprob: -5.950351238250732
    7. '    
' → logprob: -5.950351238250732
    8. ' ' → logprob: -6.075351238250732
    9. ' necess' → logprob: -6.200351238250732
    10. ' needed' → logprob: -6.325351238250732

Token 324: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07075232267379761
    2. ' pour' → logprob: -3.0707523822784424
    3. '    
' → logprob: -4.195752143859863
    4. ' to' → logprob: -5.945752143859863
    5. 'pour' → logprob: -7.070752143859863
    6. '<|end|>' → logprob: -7.070752143859863
    7. '
' → logprob: -7.320752143859863
    8. ',' → logprob: -7.695752143859863
    9. '    ' → logprob: -7.820752143859863
    10. '  ' → logprob: -8.445752143859863

Token 325: ' réduire' (ID: 78295)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.6184906959533691
    2. '   ' → logprob: -2.368490695953369
    3. 'ré' → logprob: -3.118490695953369
    4. 'H' → logprob: -3.368490695953369
    5. ' que' → logprob: -3.493490695953369
    6. ' réduire' → logprob: -3.493490695953369
    7. ' H' → logprob: -3.493490695953369
    8. 'atte' → logprob: -3.618490695953369
    9. '```' → logprob: -3.618490695953369
    10. 'vain' → logprob: -3.743490695953369

Token 326: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1166582852602005
    2. ' H' → logprob: -2.2416582107543945
    3. 'l' → logprob: -6.6166582107543945
    4. 'le' → logprob: -7.3666582107543945
    5. 'la' → logprob: -7.3666582107543945
    6. ' la' → logprob: -7.4916582107543945
    7. ' le' → logprob: -8.491658210754395
    8. ' ' → logprob: -8.991658210754395
    9. ' l' → logprob: -8.991658210754395
    10. '   ' → logprob: -9.366658210754395

Token 327: '   ' (ID: 271)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.30551642179489136
    2. ' la' → logprob: -1.6805164813995361
    3. ' l' → logprob: -3.430516481399536
    4. ' ' → logprob: -4.180516242980957
    5. ' de' → logprob: -4.555516242980957
    6. '   ' → logprob: -5.055516242980957
    7. ' le' → logprob: -5.305516242980957
    8. 'H' → logprob: -5.680516242980957
    9. '(H' → logprob: -6.680516242980957
    10. 'la' → logprob: -7.430516242980957

Token 328: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.6598310470581055
    2. ' H' → logprob: -0.7848310470581055
    3. ' la' → logprob: -4.9098310470581055
    4. 'le' → logprob: -5.2848310470581055
    5. ' le' → logprob: -5.2848310470581055
    6. 'la' → logprob: -5.7848310470581055
    7. 'l' → logprob: -5.7848310470581055
    8. ' l' → logprob: -6.5348310470581055
    9. ' ' → logprob: -7.7848310470581055
    10. ' un' → logprob: -8.284831047058105

Token 329: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.643733561038971
    2. ' au' → logprob: -1.6437335014343262
    3. ' et' → logprob: -2.018733501434326
    4. ' de' → logprob: -2.768733501434326
    5. ',' → logprob: -3.143733501434326
    6. ' jusqu' → logprob: -4.143733501434326
    7. 'à' → logprob: -5.018733501434326
    8. 'au' → logprob: -5.393733501434326
    9. ' to' → logprob: -5.768733501434326
    10. '   ' → logprob: -5.768733501434326

Token 330: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010204474441707134
    2. '1' → logprob: -4.760204315185547
    3. ' ' → logprob: -7.010204315185547
    4. 'A' → logprob: -7.385204315185547
    5. ' A' → logprob: -11.260204315185547
    6. 'zero' → logprob: -11.260204315185547
    7. 'H' → logprob: -11.385204315185547
    8. 'au' → logprob: -12.260204315185547
    9. '<=' → logprob: -12.385204315185547
    10. '```' → logprob: -12.385204315185547

Token 331: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9990350604057312
    2. '0' → logprob: -1.749035120010376
    3. ' entier' → logprob: -2.124035120010376
    4. ' à' → logprob: -2.374035120010376
    5. ' ou' → logprob: -2.749035120010376
    6. '1' → logprob: -3.124035120010376
    7. ' or' → logprob: -3.624035120010376
    8. ' zéro' → logprob: -4.249034881591797
    9. ' minimum' → logprob: -4.624034881591797
    10. 'à' → logprob: -4.749034881591797

Token 332: ' inférieur' (ID: 191498)
  Prédit: ' inférieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inférieur' → logprob: -0.49914395809173584
    2. ' au' → logprob: -1.4991439580917358
    3. ' <=' → logprob: -3.2491440773010254
    4. '<=' → logprob: -3.7491440773010254
    5. ' supérieur' → logprob: -3.8741440773010254
    6. '   ' → logprob: -3.8741440773010254
    7. '>=' → logprob: -4.124144077301025
    8. ' >=' → logprob: -4.249144077301025
    9. 'au' → logprob: -4.624144077301025
    10. 'strict' → logprob: -4.999144077301025

Token 333: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -1.2362964153289795
    2. 'à' → logprob: -1.4862964153289795
    3. '   ' → logprob: -1.6112964153289795
    4. 'ou' → logprob: -1.7362964153289795
    5. ' à' → logprob: -2.3612964153289795
    6. 'strict' → logprob: -5.236296653747559
    7. ' strict' → logprob: -6.111296653747559
    8. 'au' → logprob: -6.486296653747559
    9. 'or' → logprob: -6.736296653747559
    10. '  ' → logprob: -7.111296653747559

Token 334: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.1317358911037445
    2. ' égal' → logprob: -2.1317358016967773
    3. '=' → logprob: -6.256735801696777
    4. 'à' → logprob: -6.631735801696777
    5. ' ég' → logprob: -7.381735801696777
    6. '#' → logprob: -8.381735801696777
    7. 'ou' → logprob: -8.631735801696777
    8. 'ég' → logprob: -9.006735801696777
    9. 'equal' → logprob: -9.256735801696777
    10. '```' → logprob: -9.381735801696777

Token 335: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07747073471546173
    2. 'à' → logprob: -2.7024707794189453
    3. '   ' → logprob: -4.952470779418945
    4. ' ' → logprob: -9.077470779418945
    5. 'a' → logprob: -9.702470779418945
    6. '0' → logprob: -9.827470779418945
    7. ''à' → logprob: -9.827470779418945
    8. ' ' → logprob: -10.077470779418945
    9. '  ' → logprob: -10.202470779418945
    10. '```' → logprob: -10.327470779418945

Token 336: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01873837783932686
    2. ' ' → logprob: -4.268738269805908
    3. 'A' → logprob: -5.518738269805908
    4. ' A' → logprob: -7.518738269805908
    5. 'a' → logprob: -13.143738746643066
    6. ' ' → logprob: -13.268738746643066
    7. '   ' → logprob: -13.518738746643066
    8. ' zero' → logprob: -13.768738746643066
    9. '
' → logprob: -13.893738746643066
    10. '1' → logprob: -14.143738746643066

Token 337: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1329886019229889
    2. ',' → logprob: -2.757988691329956
    3. '.' → logprob: -2.882988691329956
    4. ':' → logprob: -6.257988452911377
    5. '    
' → logprob: -6.507988452911377
    6. ',
' → logprob: -7.507988452911377
    7. '  ' → logprob: -8.382988929748535
    8. ' ' → logprob: -8.882988929748535
    9. '
' → logprob: -9.007988929748535
    10. ' (' → logprob: -9.132988929748535

Token 338: ' sou' (ID: 4069)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.4850986897945404
    2. '   ' → logprob: -2.8600986003875732
    3. 'def' → logprob: -3.1100986003875732
    4. ' faisant' → logprob: -3.3600986003875732
    5. 'while' → logprob: -3.3600986003875732
    6. ' continu' → logprob: -3.8600986003875732
    7. ' while' → logprob: -3.8600986003875732
    8. ' H' → logprob: -3.8600986003875732
    9. ' effect' → logprob: -4.485098838806152
    10. '```' → logprob: -4.735098838806152

Token 339: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.14040528237819672
    2. 'tr' → logprob: -2.1404051780700684
    3. 'tra' → logprob: -4.890405178070068
    4. 'stra' → logprob: -6.015405178070068
    5. 'stract' → logprob: -6.140405178070068
    6. '   ' → logprob: -8.390405654907227
    7. 'st' → logprob: -8.640405654907227
    8. 'b' → logprob: -9.265405654907227
    9. 'tract' → logprob: -9.265405654907227
    10. '```' → logprob: -9.265405654907227

Token 340: 'ayant' (ID: 130896)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9713446497917175
    2. 'tra' → logprob: -1.3463447093963623
    3. 'ayant' → logprob: -1.3463447093963623
    4. 'ait' → logprob: -4.471344470977783
    5. 'tr' → logprob: -4.471344470977783
    6. 'ant' → logprob: -4.596344470977783
    7. '   ' → logprob: -4.596344470977783
    8. 'aient' → logprob: -4.721344470977783
    9. 'trait' → logprob: -5.221344470977783
    10. '```' → logprob: -5.346344470977783

Token 341: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4331642687320709
    2. ' A' → logprob: -1.0581642389297485
    3. '   ' → logprob: -5.433164119720459
    4. '1' → logprob: -11.183164596557617
    5. ' ' → logprob: -11.183164596557617
    6. '    ' → logprob: -11.183164596557617
    7. '	A' → logprob: -11.433164596557617
    8. ' ' → logprob: -12.183164596557617
    9. '    
' → logprob: -12.308164596557617
    10. '  ' → logprob: -12.558164596557617

Token 342: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08149228990077972
    2. ' chaque' → logprob: -3.9564921855926514
    3. ' de' → logprob: -4.4564924240112305
    4. ',' → logprob: -4.4564924240112305
    5. '.' → logprob: -5.2064924240112305
    6. ' from' → logprob: -5.2064924240112305
    7. ' at' → logprob: -5.3314924240112305
    8. 'from' → logprob: -5.5814924240112305
    9. ' each' → logprob: -5.5814924240112305
    10. '   ' → logprob: -5.8314924240112305

Token 343: ' chaque' (ID: 21194)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.8367360234260559
    2. ' chaque' → logprob: -0.8367360234260559
    3. ' H' → logprob: -2.211735963821411
    4. 'each' → logprob: -4.33673620223999
    5. ' each' → logprob: -4.71173620223999
    6. 'ch' → logprob: -7.71173620223999
    7. ' chacune' → logprob: -8.086735725402832
    8. ' chacun' → logprob: -8.711735725402832
    9. '   ' → logprob: -8.836735725402832
    10. 'cha' → logprob: -9.211735725402832

Token 344: ' étape' (ID: 83661)
  Prédit: ' it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.58451908826828
    2. '
' → logprob: -1.5845191478729248
    3. '\n' → logprob: -3.209519147872925
    4. 'it' → logprob: -3.334519147872925
    5. 'appel' → logprob: -3.709519147872925
    6. 'op' → logprob: -3.959519147872925
    7. 'iteration' → logprob: -3.959519147872925
    8. ' étape' → logprob: -4.334518909454346
    9. 'fois' → logprob: -4.834518909454346
    10. ' ' → logprob: -5.084518909454346

Token 345: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5534918308258057
    2. '.' → logprob: -0.9284918308258057
    3. ',' → logprob: -3.5534918308258057
    4. '.
' → logprob: -8.053491592407227
    5. ',
' → logprob: -8.178491592407227
    6. '    
' → logprob: -8.178491592407227
    7. ':' → logprob: -8.178491592407227
    8. '
' → logprob: -9.803491592407227
    9. 'def' → logprob: -10.553491592407227
    10. '  ' → logprob: -11.428491592407227

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048703186213970184
    2. '
' → logprob: -3.173703193664551
    3. '    
' → logprob: -5.173703193664551
    4. '   
' → logprob: -11.42370319366455
    5. '  
' → logprob: -12.29870319366455
    6. ' 
' → logprob: -13.04870319366455
    7. '    ' → logprob: -13.54870319366455
    8. '```' → logprob: -13.92370319366455
    9. '\n' → logprob: -14.17370319366455
    10. '    
    
' → logprob: -14.42370319366455

Token 347: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23687081038951874
    2. '
' → logprob: -1.6118707656860352
    3. '    
' → logprob: -4.486870765686035
    4. ' 
' → logprob: -10.611870765686035
    5. '   
' → logprob: -10.736870765686035
    6. '#' → logprob: -10.986870765686035
    7. '  
' → logprob: -10.986870765686035
    8. '\n' → logprob: -11.611870765686035
    9. '
' → logprob: -11.736870765686035
    10. 'def' → logprob: -11.861870765686035

Token 348: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.011231496930122375
    2. 'fic' → logprob: -5.261231422424316
    3. 'ic' → logprob: -5.761231422424316
    4. 'icher' → logprob: -6.636231422424316
    5. 'f' → logprob: -7.261231422424316
    6. 'ich' → logprob: -8.886231422424316
    7. 'ichage' → logprob: -9.261231422424316
    8. '   ' → logprob: -9.386231422424316
    9. 'r' → logprob: -9.511231422424316
    10. '
' → logprob: -9.511231422424316

Token 349: ' ensuite' (ID: 39713)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.38351431488990784
    2. '(len' → logprob: -1.6335142850875854
    3. '(' → logprob: -2.383514404296875
    4. '   ' → logprob: -5.383514404296875
    5. 'len' → logprob: -5.508514404296875
    6. '(abs' → logprob: -5.508514404296875
    7. ' le' → logprob: -5.883514404296875
    8. '((' → logprob: -6.258514404296875
    9. ' la' → logprob: -6.383514404296875
    10. '(
' → logprob: -6.508514404296875

Token 350: ' le' (ID: 505)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.2189018428325653
    2. '(' → logprob: -1.8439018726348877
    3. ' le' → logprob: -3.8439018726348877
    4. '(len' → logprob: -4.968901634216309
    5. '(
' → logprob: -6.343901634216309
    6. '   ' → logprob: -6.593901634216309
    7. '(le' → logprob: -6.593901634216309
    8. ' la' → logprob: -6.843901634216309
    9. 'le' → logprob: -6.843901634216309
    10. '('' → logprob: -7.218901634216309

Token 351: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5492479801177979
    2. 'result' → logprob: -1.2992479801177979
    3. ' nombre' → logprob: -2.299247980117798
    4. 'rés' → logprob: -3.674247980117798
    5. ' résultat' → logprob: -4.924247741699219
    6. '(' → logprob: -5.174247741699219
    7. '(nombre' → logprob: -5.674247741699219
    8. ' result' → logprob: -6.174247741699219
    9. 'quot' → logprob: -6.924247741699219
    10. '(result' → logprob: -7.174247741699219

Token 352: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6173184514045715
    2. '(
' → logprob: -1.2423183917999268
    3. '   ' → logprob: -1.9923183917999268
    4. ' (' → logprob: -4.367318630218506
    5. ' ' → logprob: -4.617318630218506
    6. '
' → logprob: -5.367318630218506
    7. '((' → logprob: -6.367318630218506
    8. '(H' → logprob: -6.742318630218506
    9. '  ' → logprob: -6.867318630218506
    10. '()' → logprob: -7.367318630218506

Token 353: ''op' (ID: 70747)
  Prédit: ''op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''op' → logprob: -0.009845215827226639
    2. 'op' → logprob: -5.50984525680542
    3. ' opérations' → logprob: -6.13484525680542
    4. 'e' → logprob: -7.13484525680542
    5. ''ét' → logprob: -7.38484525680542
    6. ''' → logprob: -7.38484525680542
    7. 'é' → logprob: -7.75984525680542
    8. '’op' → logprob: -8.259844779968262
    9. ''é' → logprob: -8.384844779968262
    10. 'operations' → logprob: -9.384844779968262

Token 354: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.00012856863031629473
    2. 'é' → logprob: -10.000128746032715
    3. 'ér' → logprob: -10.500128746032715
    4. 'er' → logprob: -10.750128746032715
    5. '#' → logprob: -12.125128746032715
    6. 'r' → logprob: -12.750128746032715
    7. 'ations' → logprob: -12.750128746032715
    8. '\' → logprob: -12.875128746032715
    9. '
' → logprob: -13.125128746032715
    10. 'ération' → logprob: -13.250128746032715

Token 355: ' réalisées' (ID: 190971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2847537696361542
    2. ' nécessaires' → logprob: -1.7847537994384766
    3. ' nécessaire' → logprob: -2.7847537994384766
    4. 's' → logprob: -5.659753799438477
    5. '    
' → logprob: -6.034753799438477
    6. '.' → logprob: -6.159753799438477
    7. '
' → logprob: -6.159753799438477
    8. 'necess' → logprob: -6.909753799438477
    9. 'necessary' → logprob: -7.409753799438477
    10. '```' → logprob: -7.409753799438477

Token 356: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02149384468793869
    2. '.' → logprob: -4.271493911743164
    3. '.
' → logprob: -5.271493911743164
    4. '
' → logprob: -6.896493911743164
    5. '    
' → logprob: -7.521493911743164
    6. ',' → logprob: -8.271493911743164
    7. 'def' → logprob: -9.021493911743164
    8. ',
' → logprob: -9.396493911743164
    9. ')' → logprob: -10.146493911743164
    10. ')
' → logprob: -10.271493911743164

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03716421499848366
    2. '
' → logprob: -3.5371642112731934
    3. '    
' → logprob: -4.912164211273193
    4. '   
' → logprob: -11.662164688110352
    5. '  
' → logprob: -11.787164688110352
    6. ' 
' → logprob: -12.412164688110352
    7. '```' → logprob: -13.162164688110352
    8. '    ' → logprob: -13.537164688110352
    9. '\n' → logprob: -14.162164688110352
    10. '    
    
' → logprob: -14.287164688110352

Token 358: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00477804196998477
    2. '
' → logprob: -5.629777908325195
    3. '    
' → logprob: -6.754777908325195
    4. '```' → logprob: -12.254777908325195
    5. '\n' → logprob: -13.629777908325195
    6. '  
' → logprob: -14.129777908325195
    7. '    ' → logprob: -14.254777908325195
    8. 'def' → logprob: -14.379777908325195
    9. '   
' → logprob: -14.379777908325195
    10. '\' → logprob: -14.504777908325195

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.306760805164231e-05
    2. 'H' → logprob: -11.25001335144043
    3. ' H' → logprob: -17.00001335144043
    4. '   ' → logprob: -18.00001335144043
    5. 'h' → logprob: -18.25001335144043
    6. '
' → logprob: -18.62501335144043
    7. '	H' → logprob: -18.62501335144043
    8. '    
' → logprob: -18.62501335144043
    9. '```' → logprob: -18.75001335144043
    10. '       ' → logprob: -19.12501335144043

Token 360: ' #' (ID: 1069)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.020615696907043457
    2. '   ' → logprob: -3.895615577697754
    3. ' H' → logprob: -9.645615577697754
    4. 'h' → logprob: -11.895615577697754
    5. '#' (adapté à ' #') → logprob: -14.020615577697754
    6. '	H' → logprob: -14.145615577697754
    7. ' ' → logprob: -15.020615577697754
    8. '  ' → logprob: -15.145615577697754
    9. '_H' → logprob: -17.02061653137207
    10. '(H' → logprob: -17.14561653137207

Token 361: ' Lit' (ID: 45595)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0003777648089453578
    2. ' H' → logprob: -8.250377655029297
    3. '   ' → logprob: -9.125377655029297
    4. 'h' → logprob: -11.875377655029297
    5. '#' → logprob: -15.125377655029297
    6. '(H' → logprob: -16.125377655029297
    7. ' ' → logprob: -16.375377655029297
    8. '	H' → logprob: -16.625377655029297
    9. '       ' → logprob: -16.750377655029297
    10. '  ' → logprob: -17.000377655029297

Token 362: ' les' (ID: 1341)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.027738628908991814
    2. '   ' → logprob: -4.027738571166992
    3. ' H' → logprob: -4.652738571166992
    4. 'h' → logprob: -12.277738571166992
    5. ' ' → logprob: -13.902738571166992
    6. '(H' → logprob: -14.027738571166992
    7. '  ' → logprob: -14.527738571166992
    8. '	H' → logprob: -15.027738571166992
    9. '    ' → logprob: -16.902738571166992
    10. '       ' → logprob: -17.027738571166992

Token 363: ' valeurs' (ID: 73668)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.004022595472633839
    2. ' H' → logprob: -6.004022598266602
    3. 'ints' → logprob: -7.504022598266602
    4. '   ' → logprob: -8.004022598266602
    5. '(H' → logprob: -8.379022598266602
    6. 'val' → logprob: -9.379022598266602
    7. 'h' → logprob: -9.504022598266602
    8. 'inte' → logprob: -9.504022598266602
    9. '[' → logprob: -9.754022598266602
    10. 'values' → logprob: -10.254022598266602

Token 364: ' de' (ID: 334)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.230691596865654
    2. '   ' → logprob: -1.6056915521621704
    3. ' H' → logprob: -5.480691432952881
    4. '(H' → logprob: -6.855691432952881
    5. '(' → logprob: -11.480691909790039
    6. 'h' → logprob: -11.730691909790039
    7. ' (' → logprob: -11.855691909790039
    8. '  ' → logprob: -12.355691909790039
    9. '	H' → logprob: -12.355691909790039
    10. 'de' → logprob: -12.730691909790039

Token 365: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.029762184247374535
    2. ' H' → logprob: -3.5297622680664062
    3. ' ' → logprob: -11.529762268066406
    4. '   ' → logprob: -14.154762268066406
    5. '(H' → logprob: -14.779762268066406
    6. '	H' → logprob: -15.279762268066406
    7. ' ' → logprob: -15.654762268066406
    8. '_H' → logprob: -15.654762268066406
    9. '  ' → logprob: -16.154762268066406
    10. 'h' → logprob: -16.279762268066406

Token 366: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012201975914649665
    2. ' et' → logprob: -9.3751220703125
    3. 'et' → logprob: -10.7501220703125
    4. ' ,' → logprob: -11.8751220703125
    5. '   ' → logprob: -12.6251220703125
    6. ',H' → logprob: -12.8751220703125
    7. ' =' → logprob: -13.3751220703125
    8. ' and' → logprob: -14.2501220703125
    9. ' ' → logprob: -15.5001220703125
    10. ',A' → logprob: -15.6251220703125

Token 367: 's' (ID: 82)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036724306643009186
    2. ')' → logprob: -4.286724090576172
    3. 'et' → logprob: -4.286724090576172
    4. 'A' → logprob: -5.036724090576172
    5. ' et' → logprob: -6.911724090576172
    6. ',A' → logprob: -7.411724090576172
    7. 'H' → logprob: -8.786724090576172
    8. ' ' → logprob: -9.286724090576172
    9. ' A' → logprob: -9.661724090576172
    10. ',H' → logprob: -10.036724090576172

Token 368: 'ant' (ID: 493)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.2728026807308197
    2. ',' → logprob: -1.647802710533142
    3. ',H' → logprob: -3.3978025913238525
    4. 'H' → logprob: -5.022802829742432
    5. ')' → logprob: -6.397802829742432
    6. 'ur' → logprob: -6.522802829742432
    7. ' et' → logprob: -7.022802829742432
    8. 'e' → logprob: -7.647802829742432
    9. 't' → logprob: -7.647802829742432
    10. '   ' → logprob: -8.022802352905273

Token 369: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.001488792710006237
    2. 'e' → logprob: -6.75148868560791
    3. 'eté' → logprob: -8.75148868560791
    4. '   ' → logprob: -9.12648868560791
    5. 'ité' → logprob: -11.37648868560791
    6. '__' → logprob: -11.50148868560791
    7. 'até' → logprob: -12.00148868560791
    8. 'té' → logprob: -12.37648868560791
    9. 'été' → logprob: -13.00148868560791
    10. '=' → logprob: -13.25148868560791

Token 370: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4502732753753662
    2. ',' → logprob: -1.0752732753753662
    3. 'et' → logprob: -4.575273513793945
    4. ' et' → logprob: -4.825273513793945
    5. '   ' → logprob: -6.200273513793945
    6. ' )' → logprob: -7.575273513793945
    7. ' ,' → logprob: -8.200273513793945
    8. ' ' → logprob: -9.700273513793945
    9. ',)' → logprob: -10.200273513793945
    10. '),' → logprob: -11.075273513793945

Token 371: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17665641009807587
    2. ' =' → logprob: -2.301656484603882
    3. '   ' → logprob: -2.926656484603882
    4. '=' → logprob: -5.176656246185303
    5. ' et' → logprob: -6.426656246185303
    6. 'et' → logprob: -7.301656246185303
    7. ' ,' → logprob: -8.926656723022461
    8. ' and' → logprob: -9.676656723022461
    9. ',H' → logprob: -9.926656723022461
    10. '    ' → logprob: -11.176656723022461

Token 372: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004683118779212236
    2. ' A' → logprob: -5.379683017730713
    3. '   ' → logprob: -9.754683494567871
    4. ' ' → logprob: -12.504683494567871
    5. '  ' → logprob: -14.004683494567871
    6. ',' → logprob: -16.379682540893555
    7. '    ' → logprob: -16.504682540893555
    8. 'a' → logprob: -16.629682540893555
    9. '
' → logprob: -17.254682540893555
    10. '	A' → logprob: -17.504682540893555

Token 373: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4099721312522888
    2. '=' → logprob: -1.1599721908569336
    3. ',' → logprob: -3.7849721908569336
    4. '   ' → logprob: -9.409972190856934
    5. ' ' → logprob: -11.034972190856934
    6. '(' → logprob: -12.034972190856934
    7. '()' → logprob: -12.159972190856934
    8. ',H' → logprob: -12.909972190856934
    9. 'H' → logprob: -13.034972190856934
    10. '  ' → logprob: -13.159972190856934

Token 374: 'attaque' (ID: 153350)
  Prédit: 'attaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attaque' → logprob: -0.1450183093547821
    2. 'attack' → logprob: -2.1450183391571045
    3. 'att' → logprob: -4.770018100738525
    4. 'atta' → logprob: -6.270018100738525
    5. ')' → logprob: -6.395018100738525
    6. 'd' → logprob: -6.645018100738525
    7. 'atk' → logprob: -6.645018100738525
    8. ' attaque' → logprob: -6.770018100738525
    9. 'A' → logprob: -7.020018100738525
    10. 'damage' → logprob: -8.270018577575684

Token 375: ')' (ID: 8)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4476320445537567
    2. ')' → logprob: -1.072632074356079
    3. ' =' → logprob: -4.8226318359375
    4. '()' → logprob: -5.0726318359375
    5. ',' → logprob: -6.3226318359375
    6. ' )' → logprob: -7.3226318359375
    7. ' ' → logprob: -7.3226318359375
    8. '  ' → logprob: -8.3226318359375
    9. '    ' → logprob: -8.8226318359375
    10. '):' → logprob: -8.8226318359375

Token 376: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18207436800003052
    2. ' =' → logprob: -1.8070743083953857
    3. '=' → logprob: -6.307074546813965
    4. '(H' → logprob: -8.432074546813965
    5. 'H' → logprob: -9.057074546813965
    6. ',' → logprob: -9.807074546813965
    7. ' H' → logprob: -10.807074546813965
    8. ':' → logprob: -10.932074546813965
    9. '[' → logprob: -11.432074546813965
    10. '(' → logprob: -11.432074546813965

Token 377: ' l' (ID: 305)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.09446925669908524
    2. '()' → logprob: -2.7194693088531494
    3. '   ' → logprob: -4.84446907043457
    4. ' read' → logprob: -4.96946907043457
    5. 'l' → logprob: -6.21946907043457
    6. 'la' → logprob: -6.59446907043457
    7. 'input' → logprob: -7.21946907043457
    8. 'int' → logprob: -7.34446907043457
    9. '().' → logprob: -7.46946907043457
    10. ' ' → logprob: -7.46946907043457

Token 378: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.22578850388526917
    2. 'entrée' → logprob: -1.6007884740829468
    3. 'input' → logprob: -8.475788116455078
    4. 'a' → logprob: -9.850788116455078
    5. ' entrée' → logprob: -10.225788116455078
    6. 'import' → logprob: -10.850788116455078
    7. '’entrée' → logprob: -11.350788116455078
    8. 'stdin' → logprob: -11.350788116455078
    9. 'e' → logprob: -12.225788116455078
    10. 'entr' → logprob: -12.350788116455078

Token 379: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018925797194242477
    2. ' =' → logprob: -7.376892566680908
    3. ',' → logprob: -7.876892566680908
    4. 'H' → logprob: -8.001893043518066
    5. '
' → logprob: -8.626893043518066
    6. '(H' → logprob: -9.126893043518066
    7. '    
' → logprob: -9.251893043518066
    8. ' H' → logprob: -10.376893043518066
    9. '=' → logprob: -10.501893043518066
    10. ':' → logprob: -10.751893043518066

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013613052433356643
    2. 'H' → logprob: -6.62636137008667
    3. ' H' → logprob: -10.876360893249512
    4. ',' → logprob: -11.376360893249512
    5. ',H' → logprob: -12.876360893249512
    6. '	H' → logprob: -14.751360893249512
    7. 'h' → logprob: -14.876360893249512
    8. '  ' → logprob: -15.001360893249512
    9. '(H' → logprob: -15.126360893249512
    10. '
' → logprob: -15.251360893249512

Token 381: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.0003410647332202643
    2. '   ' → logprob: -8.000341415405273
    3. ' H' → logprob: -12.125341415405273
    4. 'h' → logprob: -15.625341415405273
    5. '	H' → logprob: -16.625341415405273
    6. '  ' → logprob: -18.250341415405273
    7. ' ' → logprob: -18.375341415405273
    8. '       ' → logprob: -19.750341415405273
    9. '#' → logprob: -20.125341415405273
    10. '(H' → logprob: -20.250341415405273

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.886803359724581e-05
    2. ',A' → logprob: -9.500079154968262
    3. ' ,' → logprob: -12.500079154968262
    4. '=' → logprob: -16.250078201293945
    5. ',H' → logprob: -17.000078201293945
    6. ',
' → logprob: -17.375078201293945
    7. 'A' → logprob: -17.500078201293945
    8. ' =' → logprob: -17.875078201293945
    9. ',a' → logprob: -18.375078201293945
    10. '=A' → logprob: -20.250078201293945

Token 383: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005234002135694027
    2. ' A' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.130233764648438
    4. '  ' → logprob: -17.130233764648438
    5. '=A' → logprob: -19.130233764648438
    6. '	A' → logprob: -19.630233764648438
    7. '    ' → logprob: -19.755233764648438
    8. '=' → logprob: -19.880233764648438
    9. '   ' → logprob: -19.880233764648438
    10. ' =' → logprob: -20.005233764648438

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326213479042053
    2. ' =' → logprob: -1.3132621049880981
    3. ')' → logprob: -16.188262939453125
    4. '   ' → logprob: -16.563262939453125
    5. ' ' → logprob: -16.813262939453125
    6. '=input' → logprob: -17.313262939453125
    7. '＝' → logprob: -17.563262939453125
    8. ',' → logprob: -17.813262939453125
    9. '=int' → logprob: -17.813262939453125
    10. '=get' → logprob: -17.938262939453125

Token 385: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.012517892755568027
    2. ' read' → logprob: -4.387517929077148
    3. 'map' → logprob: -12.012517929077148
    4. '	read' → logprob: -13.637517929077148
    5. ' ' → logprob: -14.762517929077148
    6. '   ' → logprob: -15.262517929077148
    7. '  ' → logprob: -15.512517929077148
    8. ' map' → logprob: -15.887517929077148
    9. '(read' → logprob: -17.88751792907715
    10. '    ' → logprob: -18.01251792907715

Token 386: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -8.77627644513268e-06
    2. 'int' → logprob: -11.750008583068848
    3. '_str' → logprob: -14.000008583068848
    4. 'Int' → logprob: -18.375009536743164
    5. '_' → logprob: -18.625009536743164
    6. '_in' → logprob: -19.125009536743164
    7. '
' → logprob: -19.500009536743164
    8. ' int' → logprob: -20.250009536743164
    9. '_INT' → logprob: -20.625009536743164
    10. '2' → logprob: -20.750009536743164

Token 387: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021489406004548073
    2. '_list' → logprob: -3.896489381790161
    3. '(),' → logprob: -7.14648962020874
    4. ' ()' → logprob: -9.771489143371582
    5. 's' → logprob: -10.396489143371582
    6. ',' → logprob: -10.646489143371582
    7. '().' → logprob: -11.771489143371582
    8. '_' → logprob: -12.021489143371582
    9. '())' → logprob: -12.271489143371582
    10. '_lists' → logprob: -12.521489143371582

Token 388: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018670023418962955
    2. '()
' → logprob: -6.376866817474365
    3. '   ' → logprob: -8.751867294311523
    4. '()

' → logprob: -13.001867294311523
    5. '()
' → logprob: -13.251867294311523
    6. '()\' → logprob: -14.376867294311523
    7. '();' → logprob: -14.501867294311523
    8. '())' → logprob: -15.001867294311523
    9. '()`' → logprob: -15.001867294311523
    10. ')' → logprob: -15.001867294311523

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06149306520819664
    2. '
' → logprob: -2.936493158340454
    3. '    
' → logprob: -5.061492919921875
    4. 'count' → logprob: -9.436492919921875
    5. 'n' → logprob: -9.561492919921875
    6. '   
' → logprob: -10.561492919921875
    7. 'num' → logprob: -11.061492919921875
    8. '  
' → logprob: -11.686492919921875
    9. '
' → logprob: -11.936492919921875
    10. 'operations' → logprob: -12.436492919921875

Token 390: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40509235858917236
    2. 'ops' → logprob: -2.155092239379883
    3. 'operations' → logprob: -2.530092239379883
    4. 'count' → logprob: -2.780092239379883
    5. 'import' → logprob: -2.905092239379883
    6. 'op' → logprob: -5.155092239379883
    7. 'result' → logprob: -5.530092239379883
    8. 'res' (adapté à ' res') → logprob: -6.030092239379883
    9. 'cnt' → logprob: -6.530092239379883
    10. 'steps' → logprob: -6.530092239379883

Token 391: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11005713790655136
    2. 'ult' → logprob: -2.3600571155548096
    3. '=' → logprob: -4.735057353973389
    4. '   ' → logprob: -7.485057353973389
    5. 'ults' → logprob: -7.860057353973389
    6. ' ' → logprob: -10.48505687713623
    7. 'ultat' → logprob: -10.73505687713623
    8. 'ul' → logprob: -11.86005687713623
    9. ' ult' → logprob: -12.48505687713623
    10. 'uls' → logprob: -12.73505687713623

Token 392: ' ' (ID: 220)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00047535591875202954
    2. '0' → logprob: -8.75047492980957
    3. ' (' → logprob: -9.12547492980957
    4. 'H' → logprob: -9.62547492980957
    5. '(' → logprob: -9.62547492980957
    6. '-' → logprob: -9.87547492980957
    7. '((' → logprob: -11.37547492980957
    8. '(-' → logprob: -12.62547492980957
    9. '-H' → logprob: -13.37547492980957
    10. ' ' → logprob: -13.37547492980957

Token 393: '0' (ID: 15)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -9.794061770662665e-05
    2. 'H' → logprob: -10.00009822845459
    3. '0' → logprob: -10.62509822845459
    4. '-' → logprob: -11.12509822845459
    5. '(' → logprob: -12.00009822845459
    6. '((' → logprob: -12.50009822845459
    7. '-(' → logprob: -14.00009822845459
    8. ' (' → logprob: -14.00009822845459
    9. '-H' → logprob: -14.25009822845459
    10. '(-' → logprob: -14.25009822845459

Token 394: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17210787534713745
    2. '   ' → logprob: -1.9221079349517822
    3. '    
' → logprob: -4.922107696533203
    4. ' 
' → logprob: -6.297107696533203
    5. ' while' → logprob: -6.297107696533203
    6. '
' → logprob: -8.172107696533203
    7. 'while' → logprob: -8.797107696533203
    8. '  
' → logprob: -8.922107696533203
    9. '<|end|>' → logprob: -9.172107696533203
    10. '   
' → logprob: -10.047107696533203

Token 395: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03498603031039238
    2. 'while' → logprob: -3.4099860191345215
    3. ' while' → logprob: -7.5349860191345215
    4. '   ' → logprob: -7.7849860191345215
    5. '    
' → logprob: -8.40998649597168
    6. '
' → logprob: -9.90998649597168
    7. '  
' → logprob: -10.65998649597168
    8. '+' → logprob: -10.65998649597168
    9. '   
' → logprob: -10.78498649597168
    10. ' 
' → logprob: -10.90998649597168

Token 396: ' Initialise' (ID: 179601)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5183659195899963
    2. ' (' → logprob: -1.8933658599853516
    3. '0' → logprob: -2.5183658599853516
    4. ' res' → logprob: -2.6433658599853516
    5. ' H' → logprob: -3.8933658599853516
    6. '(H' → logprob: -3.8933658599853516
    7. 'H' → logprob: -4.018365859985352
    8. '(res' → logprob: -4.518365859985352
    9. 'while' → logprob: -4.768365859985352
    10. ' while' → logprob: -4.893365859985352

Token 397: ' le' (ID: 505)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.31988537311553955
    2. '<|end|>' → logprob: -2.44488525390625
    3. ' ' → logprob: -2.94488525390625
    4. 'H' → logprob: -3.19488525390625
    5. ')' → logprob: -3.81988525390625
    6. '0' → logprob: -4.06988525390625
    7. '   ' → logprob: -4.19488525390625
    8. ' res' → logprob: -4.44488525390625
    9. ' H' → logprob: -4.69488525390625
    10. '<|end|>' → logprob: -5.19488525390625

Token 398: ' compteur' (ID: 163344)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.695824146270752
    2. 'res' → logprob: -0.695824146270752
    3. ' res' → logprob: -7.070824146270752
    4. ' ' → logprob: -7.570824146270752
    5. 'H' → logprob: -7.945824146270752
    6. 'result' → logprob: -8.320823669433594
    7. '#' → logprob: -8.695823669433594
    8. '
' → logprob: -9.070823669433594
    9. 'rés' → logprob: -9.195823669433594
    10. 'nombre' → logprob: -9.570823669433594

Token 399: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6692166328430176
    2. '
' → logprob: -1.1692166328430176
    3. '<|end|>' → logprob: -2.6692166328430176
    4. '    
' → logprob: -2.9192166328430176
    5. '<|end|>' → logprob: -4.044216632843018
    6. '  
' → logprob: -4.294216632843018
    7. 'res' → logprob: -4.544216632843018
    8. ' 
' → logprob: -5.544216632843018
    9. ' while' → logprob: -6.544216632843018
    10. '   
' → logprob: -6.669216632843018

Token 400: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5639141201972961
    2. ''op' → logprob: -1.3139140605926514
    3. 'éc' → logprob: -2.8139140605926514
    4. 'é' → logprob: -3.5639140605926514
    5. ' opérations' → logprob: -3.5639140605926514
    6. 'op' → logprob: -3.9389140605926514
    7. 'es' → logprob: -5.0639142990112305
    8. '_' → logprob: -5.5639142990112305
    9. 'rés' → logprob: -5.8139142990112305
    10. 'res' → logprob: -6.0639142990112305

Token 401: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -5.5861724831629544e-05
    2. 'er' → logprob: -10.000056266784668
    3. 'ér' → logprob: -12.250056266784668
    4. 'é' → logprob: -12.625056266784668
    5. '#' → logprob: -14.875056266784668
    6. 's' → logprob: -15.125056266784668
    7. 'ération' → logprob: -15.500056266784668
    8. '   ' → logprob: -15.750056266784668
    9. '```' → logprob: -15.750056266784668
    10. '{' → logprob: -16.25005531311035

Token 402: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0949663370847702
    2. '   ' → logprob: -2.469966411590576
    3. '    
' → logprob: -6.094966411590576
    4. ' while' → logprob: -6.219966411590576
    5. 'while' → logprob: -6.469966411590576
    6. '
' → logprob: -9.844965934753418
    7. '  
' → logprob: -9.969965934753418
    8. '<|end|>' → logprob: -10.094965934753418
    9. '   
' → logprob: -10.594965934753418
    10. ' 
' → logprob: -11.219965934753418

Token 403: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019343523308634758
    2. ' ' → logprob: -4.144343376159668
    3. ' (' → logprob: -6.644343376159668
    4. ' H' → logprob: -6.894343376159668
    5. '(H' → logprob: -7.394343376159668
    6. 'H' → logprob: -8.144343376159668
    7. 'res' → logprob: -10.519343376159668
    8. '1' → logprob: -11.019343376159668
    9. '(' → logprob: -11.144343376159668
    10. '(res' → logprob: -11.269343376159668

Token 404: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2510049045085907
    2. '
' → logprob: -1.626004934310913
    3. 'while' → logprob: -4.001004695892334
    4. '    
' → logprob: -5.501004695892334
    5. ' while' → logprob: -5.876004695892334
    6. '
' → logprob: -11.251005172729492
    7. '	while' → logprob: -11.376005172729492
    8. '   
' → logprob: -11.376005172729492
    9. '  
' → logprob: -11.501005172729492
    10. ' 
' → logprob: -12.126005172729492

Token 405: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.008710895664989948
    2. '   ' → logprob: -4.758710861206055
    3. 'res' → logprob: -9.508710861206055
    4. ' while' → logprob: -10.883710861206055
    5. '	while' → logprob: -13.258710861206055
    6. 'import' → logprob: -13.633710861206055
    7. 'While' → logprob: -14.758710861206055
    8. 'wh' → logprob: -16.508710861206055
    9. 'if' → logprob: -17.008710861206055
    10. '```' → logprob: -17.383710861206055

Token 406: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0007268482004292309
    2. 'res' → logprob: -7.250726699829102
    3. 'import' → logprob: -11.250726699829102
    4. ' while' → logprob: -13.125726699829102
    5. '   ' → logprob: -13.750726699829102
    6. 'from' → logprob: -14.875726699829102
    7. 'While' → logprob: -15.375726699829102
    8. '	while' → logprob: -16.1257266998291
    9. '#' (adapté à ' #') → logprob: -17.1257266998291
    10. 'if' → logprob: -17.3757266998291

Token 407: ' Ré' (ID: 27181)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004876027349382639
    2. 'res' → logprob: -5.504876136779785
    3. 'import' → logprob: -7.254876136779785
    4. 'from' → logprob: -9.879876136779785
    5. 'if' → logprob: -11.004876136779785
    6. ' while' → logprob: -11.129876136779785
    7. '#' → logprob: -12.129876136779785
    8. '   ' → logprob: -14.004876136779785
    9. 'While' → logprob: -14.004876136779785
    10. 'wh' → logprob: -14.629876136779785

Token 408: 'p' (ID: 79)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.5539347529411316
    2. '   ' → logprob: -1.0539348125457764
    3. 's' → logprob: -3.1789348125457764
    4. 'while' → logprob: -3.9289348125457764
    5. 'sum' → logprob: -4.928934574127197
    6. 'server' → logprob: -6.428934574127197
    7. 'duce' → logprob: -7.178934574127197
    8. 'duction' → logprob: -7.428934574127197
    9. 'd' → logprob: -7.678934574127197
    10. 'p' → logprob: -7.803934574127197

Token 409: 'ète' (ID: 28789)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2882083058357239
    2. 'it' → logprob: -2.413208246231079
    3. 'e' → logprob: -2.538208246231079
    4. 'eat' → logprob: -4.913208484649658
    5. 'et' → logprob: -5.038208484649658
    6. 'éter' → logprob: -5.163208484649658
    7. 'iter' → logprob: -5.288208484649658
    8. 'ite' → logprob: -5.413208484649658
    9. 'ut' → logprob: -5.413208484649658
    10. 'itere' → logprob: -5.413208484649658

Token 410: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7640231847763062
    2. 'while' → logprob: -1.0140231847763062
    3. ' while' → logprob: -1.7640231847763062
    4. '	while' → logprob: -9.639022827148438
    5. ' until' → logprob: -11.139022827148438
    6. '  ' → logprob: -11.889022827148438
    7. '    ' → logprob: -12.389022827148438
    8. 'tant' → logprob: -13.139022827148438
    9. 'until' → logprob: -13.389022827148438
    10. ' ' → logprob: -13.639022827148438

Token 411: ''op' (ID: 70747)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.21312278509140015
    2. 'while' → logprob: -1.713122844696045
    3. '   ' → logprob: -4.838122844696045
    4. 'e' → logprob: -6.463122844696045
    5. ' H' → logprob: -6.588122844696045
    6. ' tant' → logprob: -8.588122367858887
    7. ' until' → logprob: -8.838122367858887
    8. 'es' → logprob: -9.463122367858887
    9. 'H' → logprob: -9.588122367858887
    10. 'tant' → logprob: -9.588122367858887

Token 412: 'ération' (ID: 24977)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0225694179534912
    2. 'éter' → logprob: -1.3975694179534912
    3. 'ét' → logprob: -2.272569417953491
    4. 'r' → logprob: -2.897569417953491
    5. 'érer' → logprob: -3.022569417953491
    6. 'é' → logprob: -3.022569417953491
    7. 'ur' → logprob: -3.647569417953491
    8. 'while' → logprob: -4.39756965637207
    9. 'our' → logprob: -4.52256965637207
    10. 'lus' → logprob: -4.77256965637207

Token 413: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22013260424137115
    2. 'while' → logprob: -1.97013258934021
    3. ' while' → logprob: -2.84513258934021
    4. '	while' → logprob: -11.595132827758789
    5. ' until' → logprob: -12.095132827758789
    6. 'tant' → logprob: -13.345132827758789
    7. 'until' → logprob: -13.720132827758789
    8. '    ' → logprob: -14.345132827758789
    9. 't' → logprob: -14.470132827758789
    10. 'for' → logprob: -14.595132827758789

Token 414: ' sou' (ID: 4069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.012415111996233463
    2. 'H' → logprob: -4.512414932250977
    3. ' while' → logprob: -7.637414932250977
    4. 'if' → logprob: -8.762414932250977
    5. 'res' → logprob: -8.887414932250977
    6. '   ' → logprob: -9.012414932250977
    7. 'tant' → logprob: -9.137414932250977
    8. ' H' → logprob: -9.387414932250977
    9. '
' → logprob: -9.887414932250977
    10. 'rés' → logprob: -9.887414932250977

Token 415: 'straction' (ID: 79887)
  Prédit: 'straction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straction' → logprob: -0.20596696436405182
    2. 'stra' → logprob: -1.8309669494628906
    3. 'str' → logprob: -4.205966949462891
    4. 'tr' → logprob: -5.705966949462891
    5. 'traction' → logprob: -5.705966949462891
    6. 'stract' → logprob: -6.330966949462891
    7. 'tra' → logprob: -6.455966949462891
    8. 's' → logprob: -8.45596694946289
    9. 'h' → logprob: -8.58096694946289
    10. 'tract' → logprob: -8.95596694946289

Token 416: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1661836951971054
    2. ' while' → logprob: -1.9161837100982666
    3. 'while' → logprob: -5.1661834716796875
    4. '	while' → logprob: -9.166183471679688
    5. ' until' → logprob: -9.416183471679688
    6. ' jusqu' → logprob: -10.791183471679688
    7. ',' → logprob: -11.541183471679688
    8. '    ' → logprob: -12.416183471679688
    9. ' tant' → logprob: -12.541183471679688
    10. '   ' → logprob: -13.166183471679688

Token 417: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0009243228123523295
    2. ' A' → logprob: -7.000924110412598
    3. '   ' → logprob: -11.875924110412598
    4. '1' → logprob: -13.000924110412598
    5. 'H' → logprob: -13.375924110412598
    6. ' ' → logprob: -13.500924110412598
    7. 'a' → logprob: -15.875924110412598
    8. '```' → logprob: -16.000925064086914
    9. 'l' → logprob: -16.125925064086914
    10. '`' → logprob: -16.375925064086914

Token 418: ' à' (ID: 1221)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8144398927688599
    2. 'tant' → logprob: -1.1894398927688599
    3. '   ' → logprob: -1.9394398927688599
    4. ' while' → logprob: -2.9394397735595703
    5. ' tant' → logprob: -3.0644397735595703
    6. ' jusqu' → logprob: -5.06443977355957
    7. 'jus' → logprob: -7.06443977355957
    8. 't' → logprob: -7.31443977355957
    9. ' until' → logprob: -8.31443977355957
    10. 'until' → logprob: -8.43943977355957

Token 419: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.612634362885728e-05
    2. ' H' → logprob: -9.500076293945312
    3. '   ' → logprob: -15.000076293945312
    4. '`' → logprob: -15.250076293945312
    5. '#' → logprob: -15.625076293945312
    6. ' ' → logprob: -16.000076293945312
    7. '_H' → logprob: -16.250076293945312
    8. '>' → logprob: -16.625076293945312
    9. '	H' → logprob: -16.875076293945312
    10. ''H' → logprob: -17.000076293945312

Token 420: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026924921199679375
    2. ' while' → logprob: -4.151925086975098
    3. 'while' → logprob: -4.526925086975098
    4. '	while' → logprob: -11.901925086975098
    5. ',' → logprob: -12.526925086975098
    6. ' until' → logprob: -13.026925086975098
    7. '   ' → logprob: -14.151925086975098
    8. '
' → logprob: -14.401925086975098
    9. 'tant' → logprob: -14.526925086975098
    10. 'until' → logprob: -14.526925086975098

Token 421: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.0007970004808157682
    2. '’à' → logprob: -7.375796794891357
    3. '   ' → logprob: -9.375797271728516
    4. 'à' → logprob: -10.125797271728516
    5. ''au' → logprob: -10.125797271728516
    6. ' à' → logprob: -13.125797271728516
    7. ''' → logprob: -13.625797271728516
    8. ''a' → logprob: -14.250797271728516
    9. '#' → logprob: -14.375797271728516
    10. 'a' → logprob: -14.875797271728516

Token 422: ' ce' (ID: 2357)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.006178221665322781
    2. ' H' → logprob: -5.506178379058838
    3. ' ce' → logprob: -6.256178379058838
    4. 'ce' → logprob: -8.75617790222168
    5. '0' → logprob: -11.88117790222168
    6. '   ' → logprob: -12.38117790222168
    7. '(H' → logprob: -12.50617790222168
    8. ' ' → logprob: -13.25617790222168
    9. '```' → logprob: -13.63117790222168
    10. '#' → logprob: -14.25617790222168

Token 423: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.021753055974841118
    2. 'H' → logprob: -4.521752834320068
    3. 'que' → logprob: -4.771752834320068
    4. '   ' → logprob: -6.646752834320068
    5. ' H' → logprob: -7.896752834320068
    6. ' qu' → logprob: -8.396753311157227
    7. '#' → logprob: -10.021753311157227
    8. '(H' → logprob: -10.021753311157227
    9. 'qu' → logprob: -10.271753311157227
    10. '0' → logprob: -10.521753311157227

Token 424: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03809507563710213
    2. ' H' → logprob: -3.288094997406006
    3. '   ' → logprob: -9.913095474243164
    4. '	H' → logprob: -13.538095474243164
    5. ' ' → logprob: -13.788095474243164
    6. '  ' → logprob: -14.413095474243164
    7. 'h' → logprob: -14.913095474243164
    8. '0' → logprob: -15.413095474243164
    9. '(H' → logprob: -15.788095474243164
    10. ' ' → logprob: -15.913095474243164

Token 425: ' soit' (ID: 17293)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0037143307272344828
    2. '<=' → logprob: -5.628714561462402
    3. ' >' → logprob: -9.128714561462402
    4. '>' → logprob: -13.253714561462402
    5. 'le' → logprob: -13.378714561462402
    6. ' ' → logprob: -13.628714561462402
    7. '   ' → logprob: -14.128714561462402
    8. ' ' → logprob: -15.878714561462402
    9. ')<=' → logprob: -16.628713607788086
    10. '  ' → logprob: -17.378713607788086

Token 426: ' inférieur' (ID: 191498)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4531582295894623
    2. ' inférieur' → logprob: -1.4531582593917847
    3. 'inf' → logprob: -2.828158140182495
    4. ' <=' → logprob: -2.953158140182495
    5. '   ' → logprob: -4.703158378601074
    6. '0' → logprob: -5.703158378601074
    7. '>' → logprob: -6.203158378601074
    8. ' inf' → logprob: -6.328158378601074
    9. 'infer' → logprob: -6.828158378601074
    10. 'sup' → logprob: -7.953158378601074

Token 427: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.3977251350879669
    2. ' ou' → logprob: -1.5227251052856445
    3. '   ' → logprob: -2.3977251052856445
    4. 'or' → logprob: -4.3977251052856445
    5. ' or' → logprob: -6.3977251052856445
    6. '<=' → logprob: -6.5227251052856445
    7. 'à' → logprob: -6.7727251052856445
    8. 'au' → logprob: -7.3977251052856445
    9. '=' → logprob: -7.6477251052856445
    10. '0' → logprob: -8.022725105285645

Token 428: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4437243640422821
    2. 'égal' → logprob: -1.0687243938446045
    3. ' égal' → logprob: -5.068724155426025
    4. 'à' → logprob: -5.318724155426025
    5. 'equal' → logprob: -7.193724155426025
    6. '0' → logprob: -7.193724155426025
    7. 'ou' → logprob: -7.193724155426025
    8. 'egal' → logprob: -8.068724632263184
    9. 'é' → logprob: -8.318724632263184
    10. ' ég' → logprob: -8.568724632263184

Token 429: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15699124336242676
    2. 'à' → logprob: -2.4069912433624268
    3. ' à' → logprob: -3.0319912433624268
    4. '   ' → logprob: -5.031991004943848
    5. ' ' → logprob: -8.906991004943848
    6. 'to' → logprob: -9.031991004943848
    7. ' to' → logprob: -9.781991004943848
    8. 'a' → logprob: -10.531991004943848
    9. '```' → logprob: -10.531991004943848
    10. '  ' → logprob: -10.656991004943848

Token 430: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043126524542458355
    2. ' ' → logprob: -7.750431060791016
    3. '```' → logprob: -15.125431060791016
    4. 'zero' → logprob: -15.375431060791016
    5. ' ' → logprob: -17.125431060791016
    6. ' zéro' → logprob: -17.750431060791016
    7. ' zero' → logprob: -17.875431060791016
    8. '۰' → logprob: -19.000431060791016
    9. '   ' → logprob: -19.250431060791016
    10. '00' → logprob: -19.937931060791016

Token 431: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008305939263664186
    2. 'while' → logprob: -7.37583065032959
    3. ' while' → logprob: -8.50083065032959
    4. '
' → logprob: -14.37583065032959
    5. '	while' → logprob: -16.625829696655273
    6. '    
' → logprob: -17.250829696655273
    7. '```' → logprob: -18.000829696655273
    8. ',' → logprob: -18.500829696655273
    9. '   ' → logprob: -19.125829696655273
    10. 'While' → logprob: -19.375829696655273

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004938178462907672
    2. 'while' → logprob: -8.000494003295898
    3. ' while' → logprob: -8.750494003295898
    4. '	while' → logprob: -18.1254940032959
    5. '
' → logprob: -18.6254940032959
    6. '```' → logprob: -18.8754940032959
    7. '    
' → logprob: -20.6254940032959
    8. '   ' → logprob: -21.0004940032959
    9. '       ' → logprob: -21.1254940032959
    10. 'While' → logprob: -21.1254940032959

Token 433: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02366701513528824
    2. '   ' → logprob: -3.773667097091675
    3. ' while' → logprob: -7.773666858673096
    4. '	while' → logprob: -14.523667335510254
    5. '```' → logprob: -15.773667335510254
    6. 'While' → logprob: -16.398666381835938
    7. 'wh' → logprob: -18.148666381835938
    8. '
' → logprob: -19.023666381835938
    9. '    
' → logprob: -19.398666381835938
    10. '  ' → logprob: -19.398666381835938

Token 434: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10954015702009201
    2. ' _' → logprob: -2.8595402240753174
    3. '_i' → logprob: -3.4845402240753174
    4. 'i' → logprob: -4.734539985656738
    5. '_h' → logprob: -5.359539985656738
    6. ' i' → logprob: -6.609539985656738
    7. 'h' → logprob: -8.609539985656738
    8. '_x' → logprob: -8.859539985656738
    9. '_H' → logprob: -9.109539985656738
    10. '_step' → logprob: -9.609539985656738

Token 435: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036023214925080538
    2. 'in' → logprob: -5.753602504730225
    3. 's' → logprob: -8.253602027893066
    4. 'range' → logprob: -9.878602027893066
    5. '_' → logprob: -10.253602027893066
    6. ' ' → logprob: -10.378602027893066
    7. ' range' → logprob: -11.628602027893066
    8. 'n' → logprob: -11.878602027893066
    9. '_in' → logprob: -12.003602027893066
    10. ',' → logprob: -12.128602027893066

Token 436: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00034058792516589165
    2. ' range' → logprob: -8.000340461730957
    3. 'read' → logprob: -13.000340461730957
    4. '(range' → logprob: -13.875340461730957
    5. '[' → logprob: -14.375340461730957
    6. 'rang' → logprob: -15.125340461730957
    7. '	range' → logprob: -15.625340461730957
    8. '   ' → logprob: -15.875340461730957
    9. 'count' → logprob: -16.375341415405273
    10. 'r' → logprob: -16.375341415405273

Token 437: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0869995653629303
    2. '(' → logprob: -2.9619996547698975
    3. '(H' → logprob: -3.4619996547698975
    4. '(res' → logprob: -9.086999893188477
    5. '(((' → logprob: -9.461999893188477
    6. '(
' → logprob: -10.836999893188477
    7. '(-' → logprob: -11.711999893188477
    8. '(len' → logprob: -12.086999893188477
    9. '(int' → logprob: -12.961999893188477
    10. '   ' → logprob: -13.336999893188477

Token 438: '100' (ID: 1353)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.5671506524085999
    2. 'H' → logprob: -1.692150592803955
    3. '(' → logprob: -1.817150592803955
    4. '100' → logprob: -2.817150592803955
    5. '0' → logprob: -4.692150592803955
    6. '1' → logprob: -5.067150592803955
    7. '10' → logprob: -5.192150592803955
    8. '((' → logprob: -5.567150592803955
    9. ' (' → logprob: -7.942150592803955
    10. '(int' → logprob: -8.567151069641113

Token 439: '01' (ID: 2290)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3790324330329895
    2. '):' → logprob: -2.0040323734283447
    3. '0' → logprob: -2.3790323734283447
    4. '000' → logprob: -2.5040323734283447
    5. '00' → logprob: -5.254032611846924
    6. ' ):
' → logprob: -7.879032611846924
    7. ')' → logprob: -8.254032135009766
    8. ' ):' → logprob: -9.004032135009766
    9. '):
' → logprob: -9.254032135009766
    10. '1' → logprob: -9.504032135009766

Token 440: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003295228350907564
    2. '):' → logprob: -5.753295421600342
    3. '):
' → logprob: -9.503294944763184
    4. ' ):
' → logprob: -10.378294944763184
    5. '   ' → logprob: -12.378294944763184
    6. ')' → logprob: -12.628294944763184
    7. '0' → logprob: -13.253294944763184
    8. ':
' → logprob: -13.878294944763184
    9. ':' → logprob: -14.753294944763184
    10. '():
' → logprob: -15.378294944763184

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015109812375158072
    2. ' if' → logprob: -9.250150680541992
    3. '<|end|>' → logprob: -11.125150680541992
    4. '
' → logprob: -11.500150680541992
    5. ':' → logprob: -11.500150680541992
    6. '   ' → logprob: -11.750150680541992
    7. 'if' → logprob: -12.875150680541992
    8. '        
' → logprob: -13.375150680541992
    9. ',' → logprob: -13.625150680541992
    10. ':
' → logprob: -13.625150680541992

Token 442: ' H' (ID: 487)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30473390221595764
    2. '       ' → logprob: -1.4297338724136353
    3. 'H' (adapté à ' H') → logprob: -4.054733753204346
    4. ' if' → logprob: -5.304733753204346
    5. '   ' → logprob: -7.304733753204346
    6. 'res' → logprob: -8.179734230041504
    7. ' H' → logprob: -10.554734230041504
    8. '	if' → logprob: -12.304734230041504
    9. '    ' → logprob: -13.054734230041504
    10. 'h' → logprob: -13.179734230041504

Token 443: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.07171701639890671
    2. ' -=' → logprob: -2.6967170238494873
    3. '=' → logprob: -7.321716785430908
    4. '<=' → logprob: -7.571716785430908
    5. '-' → logprob: -7.571716785430908
    6. '   ' → logprob: -9.946717262268066
    7. ' =' → logprob: -11.196717262268066
    8. '    ' → logprob: -11.821717262268066
    9. '+=' → logprob: -12.071717262268066
    10. ' <=' → logprob: -12.946717262268066

Token 444: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00132976402528584
    2. ' H' → logprob: -6.6263298988342285
    3. '   ' → logprob: -13.12632942199707
    4. 'max' → logprob: -13.87632942199707
    5. '	H' → logprob: -14.25132942199707
    6. ' ' → logprob: -16.25132942199707
    7. '       ' → logprob: -17.12632942199707
    8. ' max' → logprob: -17.75132942199707
    9. '  ' → logprob: -17.75132942199707
    10. '(H' → logprob: -17.87632942199707

Token 445: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2547608017921448
    2. ' -' → logprob: -1.5047607421875
    3. '-A' → logprob: -5.8797607421875
    4. 'A' → logprob: -11.0047607421875
    5. ' ' → logprob: -12.3797607421875
    6. ' A' → logprob: -12.3797607421875
    7. '   ' → logprob: -12.7547607421875
    8. '-H' → logprob: -13.6297607421875
    9. '-=' → logprob: -13.6297607421875
    10. ' -=' → logprob: -14.7547607421875

Token 446: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0019300628919154406
    2. ' A' → logprob: -6.251930236816406
    3. '   ' → logprob: -13.626930236816406
    4. ' ' → logprob: -15.751930236816406
    5. '	A' → logprob: -17.001930236816406
    6. '       ' → logprob: -17.126930236816406
    7. '  ' → logprob: -17.376930236816406
    8. '    ' → logprob: -18.876930236816406
    9. ' ' → logprob: -18.876930236816406
    10. '           ' → logprob: -19.001930236816406

Token 447: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.452426608419046e-05
    2. 'if' → logprob: -10.50003433227539
    3. ' if' → logprob: -12.75003433227539
    4. '   ' → logprob: -12.75003433227539
    5. 'res' → logprob: -14.12503433227539
    6. '
' → logprob: -15.37503433227539
    7. ',' → logprob: -16.62503433227539
    8. ' res' → logprob: -17.12503433227539
    9. '      ' → logprob: -17.87503433227539
    10. '           ' → logprob: -18.00003433227539

Token 448: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001206423039548099
    2. 'if' → logprob: -7.251206398010254
    3. 'res' → logprob: -7.751206398010254
    4. '   ' → logprob: -10.751206398010254
    5. '
' → logprob: -10.876206398010254
    6. ' if' → logprob: -11.126206398010254
    7. ' res' → logprob: -11.501206398010254
    8. ',' → logprob: -15.251206398010254
    9. '```' → logprob: -15.626206398010254
    10. '        
' → logprob: -16.12620735168457

Token 449: ' Sou' (ID: 17228)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03104105032980442
    2. '       ' → logprob: -4.031041145324707
    3. ' res' → logprob: -4.656041145324707
    4. 'if' → logprob: -5.781041145324707
    5. '   ' → logprob: -9.406041145324707
    6. '
' → logprob: -9.531041145324707
    7. ' if' → logprob: -9.781041145324707
    8. '        
' → logprob: -13.656041145324707
    9. '           ' → logprob: -13.781041145324707
    10. '```' → logprob: -14.281041145324707

Token 450: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.0741463452577591
    2. 'stract' → logprob: -3.449146270751953
    3. 'straction' → logprob: -4.074146270751953
    4. 'b' → logprob: -4.574146270751953
    5. 'str' → logprob: -4.824146270751953
    6. 'tr' → logprob: -6.699146270751953
    7. 'st' → logprob: -6.824146270751953
    8. 'h' → logprob: -7.199146270751953
    9. 'tra' → logprob: -8.574146270751953
    10. 'H' → logprob: -8.574146270751953

Token 451: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.02800041064620018
    2. 'ct' → logprob: -3.6530003547668457
    3. 'ire' → logprob: -7.278000354766846
    4. '   ' → logprob: -8.653000831604004
    5. 'i' → logprob: -8.778000831604004
    6. 'ction' → logprob: -8.903000831604004
    7. 'is' → logprob: -9.028000831604004
    8. 't' → logprob: -9.153000831604004
    9. 'itre' → logprob: -10.028000831604004
    10. '```' → logprob: -10.528000831604004

Token 452: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07891016453504562
    2. ' A' → logprob: -2.5789101123809814
    3. '1' → logprob: -11.203909873962402
    4. '<|end|>' → logprob: -12.703909873962402
    5. ' ' → logprob: -12.828909873962402
    6. 'H' → logprob: -14.328909873962402
    7. ' ' → logprob: -16.32891082763672
    8. '   ' → logprob: -16.57891082763672
    9. '	A' → logprob: -16.95391082763672
    10. ' H' → logprob: -17.07891082763672

Token 453: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29421600699424744
    2. '
' → logprob: -1.9192160367965698
    3. '<|end|>' → logprob: -2.2942159175872803
    4. '        
' → logprob: -5.544216156005859
    5. '<|end|>' → logprob: -6.669216156005859
    6. '   ' → logprob: -8.04421615600586
    7. '  
' → logprob: -8.04421615600586
    8. ')' → logprob: -8.29421615600586
    9. ' 
' → logprob: -8.54421615600586
    10. '\n' → logprob: -8.91921615600586

Token 454: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.004620472434908152
    2. ' H' → logprob: -5.379620552062988
    3. '	H' → logprob: -15.629620552062988
    4. ' ' → logprob: -16.754619598388672
    5. '_H' → logprob: -18.254619598388672
    6. '   ' → logprob: -18.629619598388672
    7. ' ' → logprob: -18.879619598388672
    8. '  ' → logprob: -20.129619598388672
    9. '```' → logprob: -20.129619598388672
    10. ''H' → logprob: -20.254619598388672

Token 455: ' valeur' (ID: 41664)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.004642303101718426
    2. ' H' → logprob: -5.379642486572266
    3. 's' → logprob: -12.129642486572266
    4. '   ' → logprob: -12.754642486572266
    5. 'h' → logprob: -12.879642486572266
    6. 'variable' → logprob: -12.879642486572266
    7. ' ' → logprob: -13.379642486572266
    8. ' variable' → logprob: -13.754642486572266
    9. 'val' → logprob: -14.004642486572266
    10. '	H' → logprob: -14.379642486572266

Token 456: ' cour' (ID: 2871)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.691201388835907
    2. 'de' → logprob: -1.6912014484405518
    3. ' de' → logprob: -1.9412014484405518
    4. '   ' → logprob: -2.1912014484405518
    5. ' H' → logprob: -2.9412014484405518
    6. 'cour' → logprob: -6.066201210021973
    7. 'd' → logprob: -6.816201210021973
    8. ' ' → logprob: -7.191201210021973
    9. '       ' → logprob: -7.441201210021973
    10. 'current' → logprob: -7.941201210021973

Token 457: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.001741935731843114
    2. 'r' → logprob: -6.376741886138916
    3. 'ant' → logprob: -10.751742362976074
    4. '   ' → logprob: -11.501742362976074
    5. 'H' → logprob: -13.751742362976074
    6. '#' → logprob: -13.876742362976074
    7. 'antes' → logprob: -14.126742362976074
    8. '{' → logprob: -14.376742362976074
    9. '       ' → logprob: -14.376742362976074
    10. '[' → logprob: -14.626742362976074

Token 458: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004581942630466074
    2. 'if' → logprob: -8.375457763671875
    3. ' if' → logprob: -9.250457763671875
    4. 'res' → logprob: -9.750457763671875
    5. '   ' → logprob: -9.875457763671875
    6. ' res' → logprob: -11.625457763671875
    7. '
' → logprob: -11.875457763671875
    8. ',' → logprob: -12.500457763671875
    9. '        
' → logprob: -14.625457763671875
    10. ' ' → logprob: -15.125457763671875

Token 459: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -3.7697225252486533e-06
    2. ' H' → logprob: -12.500003814697266
    3. '`' → logprob: -18.625003814697266
    4. '```' → logprob: -20.000003814697266
    5. '	H' → logprob: -20.125003814697266
    6. '_H' → logprob: -20.500003814697266
    7. ''H' → logprob: -20.750003814697266
    8. '
' → logprob: -21.000003814697266
    9. '   ' → logprob: -21.125003814697266
    10. '<H' → logprob: -22.250003814697266

Token 460: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033796546631492674
    2. 'if' → logprob: -8.250337600708008
    3. ' if' → logprob: -10.375337600708008
    4. '   ' → logprob: -10.375337600708008
    5. 'res' → logprob: -11.500337600708008
    6. ' res' → logprob: -13.500337600708008
    7. '
' → logprob: -13.625337600708008
    8. ',' → logprob: -14.250337600708008
    9. '<|end|>' → logprob: -14.625337600708008
    10. '```' → logprob: -16.125337600708008

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004825081559829414
    2. 'if' → logprob: -7.875482559204102
    3. '   ' → logprob: -9.625482559204102
    4. ' if' → logprob: -10.250482559204102
    5. 'res' → logprob: -14.125482559204102
    6. ' res' → logprob: -16.5004825592041
    7. '           ' → logprob: -16.6254825592041
    8. '      ' → logprob: -17.1254825592041
    9. ' ' → logprob: -17.5004825592041
    10. '```' → logprob: -17.8754825592041

Token 462: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.33036211133003235
    2. '       ' → logprob: -1.33036208152771
    3. 'if' → logprob: -4.205362319946289
    4. ' res' → logprob: -6.330362319946289
    5. ' if' → logprob: -8.705362319946289
    6. '   ' → logprob: -9.330362319946289
    7. '           ' → logprob: -13.830362319946289
    8. ' ' → logprob: -14.330362319946289
    9. 'ress' → logprob: -14.455362319946289
    10. '```' → logprob: -14.830362319946289

Token 463: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10026200115680695
    2. ' +=' → logprob: -2.350261926651001
    3. '=' → logprob: -9.850261688232422
    4. ' =' → logprob: -12.975261688232422
    5. '   ' → logprob: -16.475261688232422
    6. '+' → logprob: -16.725261688232422
    7. '+=(' → logprob: -17.225261688232422
    8. ']+=' → logprob: -17.600261688232422
    9. '+='' → logprob: -18.975261688232422
    10. ' ' → logprob: -19.350261688232422

Token 464: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.750051498413086
    4. '```' → logprob: -18.875051498413086
    5. '  ' → logprob: -19.500051498413086
    6. ' ' → logprob: -19.875051498413086
    7. '       ' → logprob: -21.312551498413086
    8. '
' → logprob: -21.375051498413086
    9. '１' → logprob: -21.625051498413086
    10. '۱' → logprob: -21.812551498413086

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -20.625
    4. '```' → logprob: -22.5
    5. '100' → logprob: -22.875
    6. '
' → logprob: -23.125
    7. '﻿' → logprob: -23.25
    8. '<|end|>' → logprob: -23.5
    9. '۱' → logprob: -23.625
    10. '10' → logprob: -23.8125

Token 466: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14954277873039246
    2. '
' → logprob: -2.024542808532715
    3. '   ' → logprob: -5.024542808532715
    4. '<|end|>' → logprob: -9.274542808532715
    5. '        
' → logprob: -9.899542808532715
    6. ' ' → logprob: -10.274542808532715
    7. '  
' → logprob: -10.524542808532715
    8. '
' → logprob: -10.649542808532715
    9. '    
' → logprob: -11.274542808532715
    10. ' if' → logprob: -11.899542808532715

Token 467: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029580891132354736
    2. '   ' → logprob: -6.127958297729492
    3. '
' → logprob: -7.252958297729492
    4. '<|end|>' → logprob: -10.752958297729492
    5. ' ' → logprob: -11.002958297729492
    6. ' if' → logprob: -12.127958297729492
    7. '        
' → logprob: -13.002958297729492
    8. '	' → logprob: -13.002958297729492
    9. '
' → logprob: -13.002958297729492
    10. '           ' → logprob: -13.002958297729492

Token 468: ' In' (ID: 730)
  Prédit: 'Increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Increment' → logprob: -1.3183526992797852
    2. 'increment' → logprob: -1.6933526992797852
    3. ' incr' → logprob: -1.6933526992797852
    4. '   ' → logprob: -2.318352699279785
    5. 'In' → logprob: -2.568352699279785
    6. 'in' → logprob: -2.568352699279785
    7. ' In' → logprob: -3.318352699279785
    8. ' Increment' → logprob: -3.693352699279785
    9. ' increment' → logprob: -4.443352699279785
    10. ' incre' → logprob: -4.568352699279785

Token 469: 'cré' (ID: 125389)
  Prédit: 'crement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crement' → logprob: -0.13803885877132416
    2. 'cr' → logprob: -2.1380388736724854
    3. 'cre' → logprob: -5.263038635253906
    4. 'crease' → logprob: -6.263038635253906
    5. 'crements' → logprob: -6.513038635253906
    6. 'c' → logprob: -7.388038635253906
    7. 'CREMENT' → logprob: -7.513038635253906
    8. 'cré' → logprob: -7.763038635253906
    9. 'cer' → logprob: -8.138038635253906
    10. 'rement' → logprob: -9.263038635253906

Token 470: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.00982869602739811
    2. 'ment' → logprob: -4.634828567504883
    3. 'nte' → logprob: -11.009828567504883
    4. 'm' → logprob: -11.634828567504883
    5. 'ments' → logprob: -11.634828567504883
    6. 'r' → logprob: -11.759828567504883
    7. 'rement' → logprob: -11.759828567504883
    8. ' mente' → logprob: -11.884828567504883
    9. 'mentation' → logprob: -13.134828567504883
    10. 'emente' → logprob: -13.259828567504883

Token 471: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.058527443557977676
    2. ' compteur' → logprob: -3.1835274696350098
    3. 'res' → logprob: -4.80852746963501
    4. 'counter' → logprob: -5.30852746963501
    5. 'nombre' → logprob: -6.30852746963501
    6. 'rés' → logprob: -8.308526992797852
    7. 'count' → logprob: -9.308526992797852
    8. '1' → logprob: -10.308526992797852
    9. ' nombre' → logprob: -10.683526992797852
    10. ' counter' → logprob: -10.808526992797852

Token 473: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3826045095920563
    2. '
' → logprob: -1.2576044797897339
    3. '   ' → logprob: -3.7576045989990234
    4. '        
' → logprob: -5.007604598999023
    5. '    
' → logprob: -6.257604598999023
    6. '<|end|>' → logprob: -7.132604598999023
    7. '
' → logprob: -8.757604598999023
    8. '  
' → logprob: -8.882604598999023
    9. ' 
' → logprob: -9.507604598999023
    10. ' if' → logprob: -9.507604598999023

Token 474: ''op' (ID: 70747)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0908896923065186
    2. 'res' → logprob: -1.5908896923065186
    3. 'op' → logprob: -1.8408896923065186
    4. ' opérations' → logprob: -2.4658896923065186
    5. 'rés' → logprob: -2.5908896923065186
    6. ''op' → logprob: -3.0908896923065186
    7. 'operations' → logprob: -3.4658896923065186
    8. ' ' → logprob: -3.7158896923065186
    9. ' res' → logprob: -4.840889930725098
    10. 'érations' → logprob: -5.215889930725098

Token 475: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.00039623770862817764
    2. 'ération' → logprob: -8.375395774841309
    3. 'er' → logprob: -9.125395774841309
    4. 'ér' → logprob: -10.625395774841309
    5. 'é' → logprob: -11.375395774841309
    6. 'rés' → logprob: -12.000395774841309
    7. 's' → logprob: -12.250395774841309
    8. 'és' → logprob: -12.500395774841309
    9. 'érences' → logprob: -13.375395774841309
    10. 'res' → logprob: -13.875395774841309

Token 476: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008796204812824726
    2. '   ' → logprob: -5.133796215057373
    3. '
' → logprob: -5.883796215057373
    4. ' if' → logprob: -10.008795738220215
    5. 'if' → logprob: -11.633795738220215
    6. ' ' → logprob: -12.008795738220215
    7. '        
' → logprob: -12.258795738220215
    8. '    
' → logprob: -12.383795738220215
    9. '<|end|>' → logprob: -13.008795738220215
    10. '
' → logprob: -13.383795738220215

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005249768029898405
    2. '   ' → logprob: -5.505249977111816
    3. 'if' → logprob: -6.755249977111816
    4. ' if' → logprob: -12.130249977111816
    5. '```' → logprob: -15.130249977111816
    6. 'print' → logprob: -15.505249977111816
    7. 'import' → logprob: -17.2552490234375
    8. '           ' → logprob: -18.3802490234375
    9. ' ' → logprob: -18.6302490234375
    10. '	if' → logprob: -18.7552490234375

Token 478: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01863318495452404
    2. '       ' → logprob: -4.0186333656311035
    3. ' if' → logprob: -8.268632888793945
    4. '   ' → logprob: -8.393632888793945
    5. ' ' → logprob: -15.643632888793945
    6. '	if' → logprob: -15.643632888793945
    7. 'If' → logprob: -17.143632888793945
    8. '```' → logprob: -17.143632888793945
    9. '           ' → logprob: -17.518632888793945
    10. '  ' → logprob: -17.893632888793945

Token 479: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07890509814023972
    2. ' H' → logprob: -2.5789051055908203
    3. '   ' → logprob: -11.20390510559082
    4. ' ' → logprob: -14.20390510559082
    5. '	H' → logprob: -14.57890510559082
    6. '(H' → logprob: -14.95390510559082
    7. ' ' → logprob: -15.70390510559082
    8. '  ' → logprob: -16.07890510559082
    9. '       ' → logprob: -17.70390510559082
    10. '    ' → logprob: -17.82890510559082

Token 480: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.20141518115997314
    2. ' <=' → logprob: -1.7014151811599731
    3. ')<=' → logprob: -14.076415061950684
    4. ']<=' → logprob: -14.701415061950684
    5. '<' → logprob: -15.576415061950684
    6. ' ' → logprob: -15.576415061950684
    7. 'le' → logprob: -16.076416015625
    8. '[' → logprob: -17.201416015625
    9. ' <=",' → logprob: -17.326416015625
    10. '0' → logprob: -17.576416015625

Token 481: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -20.001171112060547
    4. '۰' → logprob: -20.001171112060547
    5. '  ' → logprob: -20.251171112060547
    6. '```' → logprob: -20.876171112060547
    7. ' ' → logprob: -21.126171112060547
    8. '00' → logprob: -21.501171112060547
    9. '<|end|>' → logprob: -21.626171112060547
    10. 'o' → logprob: -22.501171112060547

Token 482: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -19.500001907348633
    4. '00' → logprob: -20.375001907348633
    5. '```' → logprob: -21.125001907348633
    6. '０' → logprob: -21.250001907348633
    7. '٠' → logprob: -21.250001907348633
    8. '000' → logprob: -21.375001907348633
    9. '   ' → logprob: -21.625001907348633
    10. '  ' → logprob: -21.875001907348633

Token 483: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07914412766695023
    2. ':
' → logprob: -2.579144239425659
    3. '           ' → logprob: -8.829144477844238
    4. '       ' → logprob: -9.204144477844238
    5. ':return' → logprob: -13.204144477844238
    6. ':
' → logprob: -13.454144477844238
    7. ' :' → logprob: -13.579144477844238
    8. ' or' → logprob: -14.579144477844238
    9. ' :
' → logprob: -14.704144477844238
    10. '):
' → logprob: -14.704144477844238

Token 484: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.2729995988775045e-06
    2. ' break' → logprob: -12.750006675720215
    3. '       ' → logprob: -13.125006675720215
    4. '```' → logprob: -14.625006675720215
    5. 'break' → logprob: -15.250006675720215
    6. '		' → logprob: -15.875006675720215
    7. '          ' → logprob: -16.0000057220459
    8. '
' → logprob: -16.1250057220459
    9. '               ' → logprob: -17.1250057220459
    10. 'print' → logprob: -17.2500057220459

Token 485: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00947533268481493
    2. 'print' → logprob: -5.009475231170654
    3. 'break' (adapté à ' break') → logprob: -6.009475231170654
    4. ' break' → logprob: -8.509475708007812
    5. ' print' → logprob: -9.759475708007812
    6. 'return' → logprob: -10.384475708007812
    7. '       ' → logprob: -12.134475708007812
    8. '```' → logprob: -13.009475708007812
    9. ' return' → logprob: -13.509475708007812
    10. '		' → logprob: -14.009475708007812

Token 486: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008807430043816566
    2. '
' → logprob: -4.88380765914917
    3. 'print' → logprob: -7.00880765914917
    4. '    
' → logprob: -8.383807182312012
    5. ' print' → logprob: -10.258807182312012
    6. '```' → logprob: -10.383807182312012
    7. '  
' → logprob: -14.383807182312012
    8. '        
' → logprob: -14.758807182312012
    9. '   
' → logprob: -15.258807182312012
    10. '
' → logprob: -15.383807182312012

Token 487: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00831384863704443
    2. '
' → logprob: -5.0083136558532715
    3. 'print' → logprob: -6.7583136558532715
    4. '    
' → logprob: -7.7583136558532715
    5. ' print' → logprob: -12.25831413269043
    6. '```' → logprob: -12.88331413269043
    7. '  
' → logprob: -14.50831413269043
    8. '
' → logprob: -15.00831413269043
    9. '        
' → logprob: -15.13331413269043
    10. '   
' → logprob: -15.13331413269043

Token 488: ' Termine' (ID: 150192)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5318658351898193
    2. '   ' → logprob: -1.7818658351898193
    3. ' print' → logprob: -2.2818658351898193
    4. 'return' → logprob: -2.5318658351898193
    5. ' return' → logprob: -2.7818658351898193
    6. ' break' → logprob: -7.906866073608398
    7. 'break' → logprob: -8.406866073608398
    8. '       ' → logprob: -10.281866073608398
    9. '  ' → logprob: -12.406866073608398
    10. ' ' → logprob: -12.656866073608398

Token 489: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.1045873835682869
    2. 'loop' → logprob: -2.3545873165130615
    3. ' boucle' → logprob: -5.604587554931641
    4. 'for' → logprob: -8.22958755493164
    5. 'b' → logprob: -8.85458755493164
    6. '```' → logprob: -9.10458755493164
    7. '
' → logprob: -9.22958755493164
    8. 'bo' → logprob: -10.72958755493164
    9. 'Bou' → logprob: -11.10458755493164
    10. ' loop' → logprob: -11.22958755493164

Token 491: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2148931622505188
    2. '
' → logprob: -1.714893102645874
    3. '    
' → logprob: -4.339893341064453
    4. 'print' → logprob: -8.089893341064453
    5. '        
' → logprob: -11.339893341064453
    6. '  
' → logprob: -11.464893341064453
    7. '   
' → logprob: -11.714893341064453
    8. '
' → logprob: -12.589893341064453
    9. ' print' → logprob: -12.589893341064453
    10. '            
' → logprob: -13.089893341064453

Token 492: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.31359440088272095
    2. ' H' → logprob: -1.3135943412780762
    3. '<|end|>' → logprob: -8.938594818115234
    4. ' True' → logprob: -9.438594818115234
    5. 'True' → logprob: -9.438594818115234
    6. ' ' → logprob: -11.563594818115234
    7. '```' → logprob: -12.188594818115234
    8. ' ' → logprob: -12.313594818115234
    9. '   ' → logprob: -12.563594818115234
    10. ' condition' → logprob: -12.688594818115234

Token 493: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5051733255386353
    2. '<=' → logprob: -1.0051733255386353
    3. 'est' → logprob: -3.8801732063293457
    4. ' est' → logprob: -5.130173206329346
    5. ' devient' → logprob: -5.755173206329346
    6. ' is' → logprob: -8.005173683166504
    7. 'le' → logprob: -8.880173683166504
    8. 'a' → logprob: -9.630173683166504
    9. ' a' → logprob: -10.005173683166504
    10. 'is' → logprob: -10.005173683166504

Token 494: ' inférieur' (ID: 191498)
  Prédit: ' inférieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inférieur' → logprob: -0.7237670421600342
    2. 'inf' → logprob: -0.8487670421600342
    3. ' devenu' → logprob: -2.848767042160034
    4. '<=' → logprob: -4.348767280578613
    5. ' inf' → logprob: -4.848767280578613
    6. 'infer' → logprob: -6.098767280578613
    7. '```' → logprob: -6.223767280578613
    8. '0' → logprob: -7.098767280578613
    9. 'moins' → logprob: -8.098767280578613
    10. 'in' → logprob: -8.223767280578613

Token 495: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.0806756466627121
    2. ' ou' → logprob: -2.5806756019592285
    3. '           ' → logprob: -6.7056756019592285
    4. 'or' → logprob: -8.580676078796387
    5. 'à' → logprob: -8.705676078796387
    6. ' or' → logprob: -8.830676078796387
    7. '```' → logprob: -10.580676078796387
    8. 'au' → logprob: -11.205676078796387
    9. '          ' → logprob: -12.205676078796387
    10. '       ' → logprob: -12.830676078796387

Token 496: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.36339640617370605
    2. 'ou' → logprob: -2.113396406173706
    3. '=' → logprob: -2.238396406173706
    4. '0' → logprob: -2.613396406173706
    5. ' égal' → logprob: -6.863396644592285
    6. 'à' → logprob: -7.113396644592285
    7. 'ég' → logprob: -7.988396644592285
    8. 'equal' → logprob: -8.363396644592285
    9. 'égalité' → logprob: -8.488396644592285
    10. 'é' → logprob: -8.613396644592285

Token 497: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.2550843060016632
    2. ' à' → logprob: -1.5050842761993408
    3. '0' → logprob: -6.13008451461792
    4. '```' → logprob: -8.005084037780762
    5. '       ' → logprob: -8.130084037780762
    6. '   ' → logprob: -9.130084037780762
    7. '           ' → logprob: -9.380084037780762
    8. 'ou' → logprob: -10.005084037780762
    9. ''à' → logprob: -10.505084037780762
    10. 'a' → logprob: -10.505084037780762

Token 498: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'zero' → logprob: -19.87501335144043
    4. '```' → logprob: -20.50001335144043
    5. '۰' → logprob: -20.87501335144043
    6. '０' → logprob: -21.25001335144043
    7. ' zéro' → logprob: -21.37501335144043
    8. ' ' → logprob: -21.37501335144043
    9. '٠' → logprob: -22.75001335144043
    10. '  ' → logprob: -23.25001335144043

Token 499: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011469589546322823
    2. '
' → logprob: -4.51146936416626
    3. 'print' → logprob: -8.511469841003418
    4. '    
' → logprob: -8.511469841003418
    5. '```' → logprob: -11.261469841003418
    6. ' print' → logprob: -12.261469841003418
    7. '  
' → logprob: -14.636469841003418
    8. '
' → logprob: -15.011469841003418
    9. '        
' → logprob: -15.261469841003418
    10. '   
' → logprob: -15.261469841003418

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01816692017018795
    2. 'print' → logprob: -4.018167018890381
    3. '```' → logprob: -11.018166542053223
    4. ' print' → logprob: -14.268166542053223
    5. '``' → logprob: -18.76816749572754
    6. '       ' → logprob: -20.39316749572754
    7. '    
' → logprob: -20.89316749572754
    8. '	print' → logprob: -21.14316749572754
    9. 'printf' → logprob: -22.51816749572754
    10. '
' → logprob: -22.51816749572754

Token 501: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011729635298252106
    2. '   ' → logprob: -6.75117301940918
    3. '```' → logprob: -13.00117301940918
    4. ' print' → logprob: -14.50117301940918
    5. '``' → logprob: -19.37617301940918
    6. '    
' → logprob: -20.00117301940918
    7. '
' → logprob: -20.00117301940918
    8. '	print' → logprob: -20.62617301940918
    9. '#print' → logprob: -21.12617301940918
    10. '  ' → logprob: -21.37617301940918

Token 502: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -15.000000953674316
    3. ' print' → logprob: -15.500000953674316
    4. '```' → logprob: -21.0
    5. '#' → logprob: -21.625
    6. '#print' → logprob: -22.0
    7. '
' → logprob: -24.125
    8. '	print' → logprob: -24.25
    9. 'Print' → logprob: -24.5
    10. 'printf' → logprob: -24.5

Token 503: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.00021057340200059116
    2. 'ic' → logprob: -9.250210762023926
    3. 'icher' → logprob: -9.250210762023926
    4. '#' → logprob: -12.000210762023926
    5. '   ' → logprob: -12.375210762023926
    6. 'fic' → logprob: -12.750210762023926
    7. 'ichage' → logprob: -13.125210762023926
    8. 'che' → logprob: -13.125210762023926
    9. '
' → logprob: -15.750210762023926
    10. '  ' → logprob: -16.00020980834961

Token 504: ' le' (ID: 505)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.12694479525089264
    2. 'res' → logprob: -2.1269447803497314
    3. '   ' → logprob: -11.126944541931152
    4. ' res' → logprob: -13.876944541931152
    5. 'print' → logprob: -13.876944541931152
    6. '=res' → logprob: -17.62694549560547
    7. '(result' → logprob: -17.75194549560547
    8. 'result' → logprob: -18.00194549560547
    9. '(' → logprob: -18.25194549560547
    10. '_res' → logprob: -18.62694549560547

Token 505: ' nombre' (ID: 9733)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.08340710401535034
    2. 'result' → logprob: -2.583407163619995
    3. 'rés' → logprob: -6.083406925201416
    4. '(res' → logprob: -6.708406925201416
    5. 'nombre' → logprob: -7.333406925201416
    6. 'print' → logprob: -8.333407402038574
    7. ' res' → logprob: -9.708407402038574
    8. 'r' → logprob: -11.583407402038574
    9. 'resultado' → logprob: -11.583407402038574
    10. ' résultat' → logprob: -11.708407402038574

Token 506: ' total' (ID: 3609)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.11146937310695648
    2. '   ' → logprob: -2.736469268798828
    3. 'res' → logprob: -4.236469268798828
    4. '(' → logprob: -4.486469268798828
    5. 'de' → logprob: -4.861469268798828
    6. 'd' → logprob: -5.736469268798828
    7. ' de' → logprob: -6.736469268798828
    8. '(result' → logprob: -7.486469268798828
    9. 'minimal' → logprob: -7.611469268798828
    10. ' (' → logprob: -7.736469268798828

Token 507: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.30507373809814453
    2. '   ' → logprob: -2.4300737380981445
    3. '(res' → logprob: -2.4300737380981445
    4. 'print' → logprob: -3.1800737380981445
    5. 'des' → logprob: -4.3050737380981445
    6. 'res' → logprob: -4.5550737380981445
    7. ' d' → logprob: -5.0550737380981445
    8. 'de' → logprob: -5.1800737380981445
    9. '(d' → logprob: -5.5550737380981445
    10. '(' → logprob: -6.1800737380981445

Token 508: ''op' (ID: 70747)
  Prédit: ''op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''op' → logprob: -0.15315096080303192
    2. 'op' → logprob: -2.528151035308838
    3. ' opérations' → logprob: -3.153151035308838
    4. 'd' → logprob: -4.778151035308838
    5. 'operations' → logprob: -5.903151035308838
    6. ' d' → logprob: -6.028151035308838
    7. 'rés' → logprob: -6.403151035308838
    8. '(op' → logprob: -6.528151035308838
    9. '’op' → logprob: -7.028151035308838
    10. 'res' → logprob: -7.778151035308838

Token 509: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -5.180879816180095e-05
    2. 'é' → logprob: -10.750051498413086
    3. 'er' → logprob: -11.375051498413086
    4. 'ér' → logprob: -12.000051498413086
    5. 'r' → logprob: -12.250051498413086
    6. 'ération' → logprob: -13.125051498413086
    7. 'operations' → logprob: -13.625051498413086
    8. 'érences' → logprob: -13.750051498413086
    9. 'és' → logprob: -14.500051498413086
    10. '#' → logprob: -14.750051498413086

Token 510: ' effectu' (ID: 100880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0619816891849041
    2. 'print' → logprob: -2.811981678009033
    3. ' print' → logprob: -11.436982154846191
    4. '```' → logprob: -13.561982154846191
    5. '
' → logprob: -13.686982154846191
    6. '(print' → logprob: -14.811982154846191
    7. '(' → logprob: -15.686982154846191
    8. '	print' → logprob: -16.311981201171875
    9. '       ' → logprob: -16.936981201171875
    10. '`' → logprob: -18.061981201171875

Token 511: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.016249842941761017
    2. 'é' → logprob: -4.141249656677246
    3. 'es' → logprob: -8.766249656677246
    4. 'és' → logprob: -10.641249656677246
    5. 'ée' → logprob: -11.391249656677246
    6. '   ' → logprob: -11.391249656677246
    7. 'nées' → logprob: -12.391249656677246
    8. '#' → logprob: -13.016249656677246
    9. 'è' → logprob: -13.391249656677246
    10. 'e' → logprob: -13.641249656677246

Token 512: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04860304668545723
    2. 'print' → logprob: -3.048603057861328
    3. ' print' → logprob: -11.548603057861328
    4. '```' → logprob: -12.048603057861328
    5. '
' → logprob: -16.173603057861328
    6. '	print' → logprob: -18.173603057861328
    7. '       ' → logprob: -18.673603057861328
    8. '    
' → logprob: -19.048603057861328
    9. '``' → logprob: -19.548603057861328
    10. '`' → logprob: -20.173603057861328

Token 513: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5759977102279663
    2. '   ' → logprob: -0.8259977102279663
    3. ' print' → logprob: -10.325997352600098
    4. '```' → logprob: -10.575997352600098
    5. '	print' → logprob: -18.325998306274414
    6. '`' → logprob: -18.700998306274414
    7. '``' → logprob: -19.825998306274414
    8. '
' → logprob: -20.200998306274414
    9. 'println' → logprob: -21.075998306274414
    10. '       ' → logprob: -21.075998306274414

Token 514: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.5716304410016164e-05
    2. '   ' → logprob: -10.250035285949707
    3. '```' → logprob: -16.000036239624023
    4. ' print' → logprob: -16.250036239624023
    5. '``' → logprob: -22.625036239624023
    6. '	print' → logprob: -23.625036239624023
    7. '`' → logprob: -24.750036239624023
    8. '
' → logprob: -25.375036239624023
    9. 'printf' → logprob: -25.750036239624023
    10. '  ' → logprob: -25.750036239624023

Token 515: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.001929228543303907
    2. '(' → logprob: -6.25192928314209
    3. ' (' → logprob: -14.37692928314209
    4. 'res' → logprob: -17.626928329467773
    5. '(
' → logprob: -17.751928329467773
    6. '(result' → logprob: -18.501928329467773
    7. '(f' → logprob: -19.001928329467773
    8. '(r' → logprob: -19.001928329467773
    9. '()' → logprob: -19.126928329467773
    10. '(re' → logprob: -19.751928329467773

Token 516: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. ')
' → logprob: -17.0
    4. '())' → logprob: -18.0
    5. ')`' → logprob: -18.25
    6. '))' → logprob: -19.125
    7. '()' → logprob: -20.25
    8. ')}' → logprob: -20.5
    9. '')' → logprob: -20.875
    10. '）' → logprob: -21.375

Token 517: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007106438861228526
    2. '
' → logprob: -7.750710487365723
    3. '```' → logprob: -8.625710487365723
    4. '<|end|>' → logprob: -9.875710487365723
    5. ' if' → logprob: -10.250710487365723
    6. '\n' → logprob: -12.250710487365723
    7. '``' → logprob: -13.125710487365723
    8. '  
' → logprob: -13.625710487365723
    9. '\' → logprob: -13.875710487365723
    10. '#' → logprob: -14.000710487365723

Token 518: ' Ex' (ID: 1771)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.320199877838604e-07
    2. ' if' → logprob: -14.75
    3. '__' → logprob: -21.875
    4. 'main' → logprob: -21.875
    5. '#' → logprob: -22.25
    6. '```' → logprob: -22.875
    7. 'If' → logprob: -23.125
    8. '#if' → logprob: -24.0
    9. '
' → logprob: -24.5
    10. '

' → logprob: -24.875

Token 519: 'éc' (ID: 5675)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04548085108399391
    2. 'ecute' → logprob: -3.295480966567993
    3. 'ec' → logprob: -5.045480728149414
    4. 'ecut' → logprob: -8.045480728149414
    5. 'port' → logprob: -8.545480728149414
    6. 'ecution' → logprob: -8.670480728149414
    7. 'ecutable' → logprob: -9.170480728149414
    8. ' if' → logprob: -9.670480728149414
    9. 'ecu' → logprob: -10.420480728149414
    10. 'e' → logprob: -10.795480728149414

Token 520: 'ute' (ID: 1331)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47286128997802734
    2. 'ecute' → logprob: -1.2228612899780273
    3. 'ec' → logprob: -3.0978612899780273
    4. 'éc' → logprob: -3.3478612899780273
    5. 'ecut' → logprob: -7.347861289978027
    6. 'ecution' → logprob: -7.597861289978027
    7. 'écution' → logprob: -8.097861289978027
    8. 'écut' → logprob: -9.097861289978027
    9. 'e' → logprob: -9.347861289978027
    10. 'é' → logprob: -9.472861289978027

Token 521: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00024358915106859058
    2. ' if' → logprob: -8.375243186950684
    3. 'main' → logprob: -11.500243186950684
    4. '(main' → logprob: -13.750243186950684
    5. '```' → logprob: -14.500243186950684
    6. ' main' → logprob: -14.625243186950684
    7. '__' → logprob: -15.125243186950684
    8. 'the' → logprob: -15.375243186950684
    9. '
' → logprob: -15.750243186950684
    10. '_main' → logprob: -15.875243186950684

Token 522: ' fonction' (ID: 17610)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16440828144550323
    2. 'main' → logprob: -1.9144083261489868
    3. '__' → logprob: -5.664408206939697
    4. ' main' → logprob: -7.539408206939697
    5. '```' → logprob: -9.414408683776855
    6. ' if' → logprob: -9.664408683776855
    7. 'program' → logprob: -12.414408683776855
    8. 'script' → logprob: -12.664408683776855
    9. '(main' → logprob: -12.789408683776855
    10. 'programme' → logprob: -13.039408683776855

Token 523: ' principale' (ID: 68926)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0024813658092170954
    2. 'main' → logprob: -6.002481460571289
    3. ' if' → logprob: -12.252481460571289
    4. '__' → logprob: -14.627481460571289
    5. ' main' → logprob: -14.877481460571289
    6. '(main' → logprob: -16.87748146057129
    7. '```' → logprob: -17.25248146057129
    8. '_main' → logprob: -17.87748146057129
    9. '
' → logprob: -20.12748146057129
    10. '.main' → logprob: -20.37748146057129

Token 524: ' lorsque' (ID: 39361)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003184244269505143
    2. '
' → logprob: -5.7531843185424805
    3. '

' → logprob: -12.37818431854248
    4. ' if' → logprob: -13.62818431854248
    5. 'main' → logprob: -13.87818431854248
    6. '```' → logprob: -15.37818431854248
    7. ' 
' → logprob: -19.503183364868164
    8. '
' → logprob: -19.753183364868164
    9. '\
' → logprob: -20.003183364868164
    10. '  
' → logprob: -20.128183364868164

Token 525: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009188431431539357
    2. ' __' → logprob: -7.000918865203857
    3. 'if' → logprob: -12.0009183883667
    4. '```' → logprob: -14.5009183883667
    5. '/__' → logprob: -15.2509183883667
    6. 'name' → logprob: -15.5009183883667
    7. '   ' → logprob: -16.250919342041016
    8. 'the' → logprob: -16.875919342041016
    9. '(__' → logprob: -17.125919342041016
    10. '.__' → logprob: -18.125919342041016

Token 526: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02422209084033966
    2. ' __' → logprob: -4.024221897125244
    3. ' script' → logprob: -5.274221897125244
    4. 'name' → logprob: -7.274221897125244
    5. ' module' → logprob: -9.399222373962402
    6. 'module' → logprob: -10.274222373962402
    7. 'if' → logprob: -10.399222373962402
    8. ' nom' → logprob: -11.149222373962402
    9. 'is' → logprob: -11.524222373962402
    10. 'script' → logprob: -11.649222373962402

Token 527: ' est' (ID: 893)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3425008952617645
    2. 'is' → logprob: -2.092500925064087
    3. '__' → logprob: -2.217500925064087
    4. 'est' → logprob: -3.592500925064087
    5. 'if' → logprob: -3.717500925064087
    6. ' est' → logprob: -5.467500686645508
    7. '_is' → logprob: -7.342500686645508
    8. ' __' → logprob: -7.592500686645508
    9. 'name' → logprob: -9.217500686645508
    10. '==' → logprob: -9.592500686645508

Token 528: ' lancé' (ID: 104614)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10179951041936874
    2. 'execut' → logprob: -3.226799488067627
    3. ' exécut' → logprob: -3.851799488067627
    4. 'ex' → logprob: -4.726799488067627
    5. ' __' → logprob: -4.851799488067627
    6. 'le' → logprob: -5.726799488067627
    7. 'name' → logprob: -5.726799488067627
    8. 'nom' → logprob: -5.976799488067627
    9. 'run' → logprob: -6.226799488067627
    10. 'if' → logprob: -6.351799488067627

Token 529: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00248849974013865
    2. '
' → logprob: -6.002488613128662
    3. ' if' → logprob: -11.502488136291504
    4. '

' → logprob: -13.127488136291504
    5. '```' → logprob: -14.377488136291504
    6. '    
' → logprob: -17.62748908996582
    7. '  
' → logprob: -17.62748908996582
    8. '
' → logprob: -18.00248908996582
    9. ' 
' → logprob: -18.25248908996582
    10. '``' → logprob: -18.50248908996582

Token 530: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.128163257315464e-07
    2. ' if' → logprob: -15.25
    3. '
' → logprob: -19.75
    4. '```' → logprob: -20.75
    5. 'main' → logprob: -22.375
    6. '	if' → logprob: -25.125
    7. '#if' → logprob: -25.25
    8. 'If' → logprob: -25.625
    9. '

' → logprob: -26.25
    10. '    
' → logprob: -26.5

Token 531: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 529
Tokens correctement prédits (1ère position, stricte): 167
Tokens correctement prédits (1ère position, avec adaptation): 179
Tokens correctement prédits (top 10): 361
Précision stricte (1ère position): 31.57%
Précision adaptée (1ère position): 33.84%
Précision (top 10): 68.24%
================================================================================
