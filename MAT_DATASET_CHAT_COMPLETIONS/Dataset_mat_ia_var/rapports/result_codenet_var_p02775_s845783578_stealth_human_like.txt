================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# bon alors je prends l'input à l'envers, c'est plus pratique
s = input()
s = s[::-1]
# au cas où, pour éviter d'avoir une erreur plus tard, je mets un "4" à la fin
s = s + '4'

# on va garder une trace du compteur principal et un bonus je crois
a = 0
b = 0

taille = len(s) - 1  # petite correction, vu qu'on ajoute un "4"

for i in range(taille):
    v1 = int(s[i])
    v2 = int(s[i+1])
    # alors, si la somme va dépasser 6, on fait un truc spécial (règle un peu chelou)
    if v1+b >= 6 or (v1+b >= 5 and v2 >= 5):
        # une espèce de cap bizarre là
        a = a + (10 - v1 - b)
        b = 1
    else:
        a += (v1 + b)
        b = 0
    # pas besoin vraiment de else ici mais bon

# le total, je pense que c'est comme ça qu'il faut finir
print(a + b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' bon' (ID: 4846)
  → Token d'amorce (pas de prédiction)

Token 2: ' alors' (ID: 17971)
  → Token d'amorce (pas de prédiction)

Token 3: ' je' (ID: 1264)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0962213277816772
    2. '```' → logprob: -1.7212213277816772
    3. ',' → logprob: -1.9712213277816772
    4. ':' → logprob: -2.346221446990967
    5. '\n' → logprob: -2.846221446990967
    6. ' ' → logprob: -2.846221446990967
    7. '!' → logprob: -2.971221446990967
    8. '_' → logprob: -3.346221446990967
    9. '`' → logprob: -5.221221446990967
    10. '<|end|>' → logprob: -5.346221446990967

Token 4: ' prends' (ID: 151723)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.44917213916778564
    2. 'vais' → logprob: -1.9491721391677856
    3. 'veux' → logprob: -2.824172019958496
    4. ' continue' → logprob: -3.324172019958496
    5. ' ' → logprob: -3.574172019958496
    6. ' vais' → logprob: -3.824172019958496
    7. ' veux' → logprob: -4.074172019958496
    8. 'continue' → logprob: -4.449172019958496
    9. ' suis' → logprob: -4.574172019958496
    10. 'voud' → logprob: -5.199172019958496

Token 5: ' l' (ID: 305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2606618106365204
    2. ',' → logprob: -2.1356618404388428
    3. ' ' → logprob: -2.7606618404388428
    4. '.' → logprob: -3.5106618404388428
    5. ':' → logprob: -5.135661602020264
    6. '!' → logprob: -6.260661602020264
    7. '?' → logprob: -6.510661602020264
    8. ' ,' → logprob: -6.510661602020264
    9. '```' → logprob: -6.760661602020264
    10. '=' → logprob: -7.010661602020264

Token 6: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5422391295433044
    2. '_' → logprob: -1.4172391891479492
    3. 'a' → logprob: -2.292239189147949
    4. 'e' → logprob: -3.042239189147949
    5. ''espace' → logprob: -4.167239189147949
    6. 'u' → logprob: -5.042239189147949
    7. 'es' → logprob: -6.667239189147949
    8. '’' → logprob: -8.04223918914795
    9. 'm' → logprob: -8.04223918914795
    10. ' ' → logprob: -8.29223918914795

Token 7: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.4054702520370483
    2. 'objet' → logprob: -1.4054702520370483
    3. 'entrée' → logprob: -1.9054702520370483
    4. 'argument' → logprob: -2.280470371246338
    5. 'élé' → logprob: -3.655470371246338
    6. 'ar' → logprob: -4.030470371246338
    7. 'é' → logprob: -4.155470371246338
    8. 'a' → logprob: -4.155470371246338
    9. 'argent' → logprob: -4.155470371246338
    10. 'ex' → logprob: -4.155470371246338

Token 8: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3235714435577393
    2. ' =' → logprob: -1.5735714435577393
    3. 'user' → logprob: -1.8235714435577393
    4. '_' → logprob: -1.9485714435577393
    5. '#' → logprob: -2.5735714435577393
    6. ' ' → logprob: -3.5735714435577393
    7. 'x' → logprob: -3.9485714435577393
    8. '`' → logprob: -4.44857120513916
    9. '.' → logprob: -4.57357120513916
    10. 's' → logprob: -4.57357120513916

Token 9: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3491869866847992
    2. 'input' → logprob: -2.349186897277832
    3. 'user' → logprob: -3.224186897277832
    4. 'la' → logprob: -3.599186897277832
    5. 'u' → logprob: -3.599186897277832
    6. ' ' → logprob: -3.974186897277832
    7. '=' → logprob: -4.099186897277832
    8. '=input' → logprob: -4.224186897277832
    9. ' input' → logprob: -4.724186897277832
    10. ' la' → logprob: -4.974186897277832

Token 10: ''en' (ID: 16740)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015969032421708107
    2. 'u' → logprob: -5.3909687995910645
    3. 'e' → logprob: -5.5159687995910645
    4. ''utilisateur' → logprob: -5.7659687995910645
    5. ''entrée' → logprob: -6.8909687995910645
    6. ''' → logprob: -7.1409687995910645
    7. '')' → logprob: -7.3909687995910645
    8. 'entrée' → logprob: -7.5159687995910645
    9. 'input' → logprob: -8.765969276428223
    10. 'n' → logprob: -9.140969276428223

Token 11: 'vers' (ID: 3674)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5802610516548157
    2. 'd' → logprob: -0.8302610516548157
    3. 'tre' → logprob: -6.70526123046875
    4. 'tr' → logprob: -7.08026123046875
    5. 'ter' → logprob: -7.20526123046875
    6. '```' → logprob: -7.95526123046875
    7. 'v' → logprob: -8.20526123046875
    8. ',' → logprob: -8.58026123046875
    9. 'trer' → logprob: -8.95526123046875
    10. '#' → logprob: -9.45526123046875

Token 12: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9192647933959961
    2. '_' → logprob: -1.669264793395996
    3. '.' → logprob: -2.669264793395996
    4. 's' → logprob: -2.669264793395996
    5. '```' → logprob: -2.919264793395996
    6. ',' → logprob: -3.044264793395996
    7. '`' → logprob: -3.169264793395996
    8. ''' → logprob: -3.544264793395996
    9. ' ' → logprob: -3.794264793395996
    10. 'i' → logprob: -4.669264793395996

Token 13: ' c' (ID: 274)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0022902488708496
    2. ',' → logprob: -1.5022902488708496
    3. '.' → logprob: -2.1272902488708496
    4. ''' → logprob: -3.0022902488708496
    5. '`' → logprob: -3.3772902488708496
    6. 's' → logprob: -3.3772902488708496
    7. 'n' → logprob: -3.8772902488708496
    8. ' ' → logprob: -4.25229024887085
    9. '_' → logprob: -4.37729024887085
    10. '```' → logprob: -4.37729024887085

Token 14: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6355912089347839
    2. 'a' → logprob: -2.3855912685394287
    3. 'e' → logprob: -2.7605912685394287
    4. 'o' → logprob: -2.7605912685394287
    5. ' =' → logprob: -3.1355912685394287
    6. ''''' → logprob: -3.3855912685394287
    7. 'u' → logprob: -3.5105912685394287
    8. 'on' → logprob: -4.13559103012085
    9. ''est' → logprob: -4.13559103012085
    10. 'omme' → logprob: -4.26059103012085

Token 15: ' plus' (ID: 2932)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.3834325075149536
    2. '-à' → logprob: -2.133432388305664
    3. 'pas' → logprob: -2.758432388305664
    4. ' pas' → logprob: -2.758432388305664
    5. ' une' → logprob: -2.758432388305664
    6. 'v' → logprob: -3.508432388305664
    7. 'tout' → logprob: -3.758432388305664
    8. 'pour' → logprob: -4.008432388305664
    9. 'bien' → logprob: -4.008432388305664
    10. ' un' → logprob: -4.008432388305664

Token 16: ' pratique' (ID: 42780)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simple' → logprob: -0.6463175415992737
    2. ' simple' → logprob: -1.021317481994629
    3. ' facile' → logprob: -3.146317481994629
    4. 'fac' → logprob: -3.521317481994629
    5. 'pr' → logprob: -4.771317481994629
    6. ' logique' → logprob: -5.021317481994629
    7. 'int' → logprob: -5.521317481994629
    8. 'pro' → logprob: -5.521317481994629
    9. 'clair' → logprob: -5.896317481994629
    10. '```' → logprob: -6.021317481994629

Token 17: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14049871265888214
    2. 'n' → logprob: -4.015498638153076
    3. '.' → logprob: -4.140498638153076
    4. ',' → logprob: -4.140498638153076
    5. '```' → logprob: -4.140498638153076
    6. '`' → logprob: -4.515498638153076
    7. 'i' → logprob: -4.765498638153076
    8. 's' → logprob: -5.015498638153076
    9. '_' → logprob: -5.140498638153076
    10. 'e' → logprob: -5.390498638153076

Token 18: 's' (ID: 82)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.064923882484436
    2. ',' → logprob: -1.189923882484436
    3. '#' → logprob: -2.0649237632751465
    4. '_' → logprob: -3.0649237632751465
    5. ':' → logprob: -3.1899237632751465
    6. '=' → logprob: -3.8149237632751465
    7. 's' → logprob: -3.9399237632751465
    8. '```' → logprob: -4.0649237632751465
    9. ' =' → logprob: -4.1899237632751465
    10. 'e' → logprob: -4.8149237632751465

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6787639260292053
    2. '=' → logprob: -1.8037638664245605
    3. '_' → logprob: -2.0537638664245605
    4. ' ' → logprob: -2.3037638664245605
    5. 't' → logprob: -3.1787638664245605
    6. 'tr' → logprob: -4.1787638664245605
    7. 'e' → logprob: -4.6787638664245605
    8. '#' → logprob: -5.1787638664245605
    9. 'tring' → logprob: -5.1787638664245605
    10. 's' → logprob: -5.6787638664245605

Token 20: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5803511738777161
    2. 'input' → logprob: -0.8303511738777161
    3. ' s' → logprob: -6.20535135269165
    4. 's' → logprob: -6.33035135269165
    5. ' ' → logprob: -9.205350875854492
    6. 'raw' → logprob: -9.455350875854492
    7. 'str' → logprob: -9.705350875854492
    8. ' raw' → logprob: -9.830350875854492
    9. 're' → logprob: -10.267850875854492
    10. ' str' → logprob: -10.455350875854492

Token 21: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009986390359699726
    2. '()' → logprob: -4.634986400604248
    3. '(
' → logprob: -9.38498592376709
    4. ')' → logprob: -9.63498592376709
    5. '('' → logprob: -10.50998592376709
    6. '("("' → logprob: -11.38498592376709
    7. '```' → logprob: -11.88498592376709
    8. '(

' → logprob: -11.88498592376709
    9. '("")' → logprob: -12.00998592376709
    10. ' (' → logprob: -12.25998592376709

Token 22: 's' (ID: 82)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.007460858207195997
    2. '[' → logprob: -5.257461071014404
    3. '=' → logprob: -6.882461071014404
    4. 's' → logprob: -7.757461071014404
    5. ' =' → logprob: -8.257460594177246
    6. '[:]' → logprob: -8.382460594177246
    7. ' [' → logprob: -9.382460594177246
    8. '.reverse' → logprob: -9.507460594177246
    9. '_rev' → logprob: -10.382460594177246
    10. '_' → logprob: -10.632460594177246

Token 23: ' =' (ID: 314)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.1608436405658722
    2. '[' → logprob: -1.9108436107635498
    3. '[
' → logprob: -8.410843849182129
    4. '[:]' → logprob: -8.660843849182129
    5. ' [' → logprob: -9.410843849182129
    6. '[:' → logprob: -10.285843849182129
    7. '.' → logprob: -10.410843849182129
    8. 's' → logprob: -11.285843849182129
    9. '[s' → logprob: -11.785843849182129
    10. '.strip' → logprob: -12.160843849182129

Token 24: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11618154495954514
    2. 's' → logprob: -2.2411816120147705
    3. '[::-' → logprob: -5.741181373596191
    4. ' reversed' → logprob: -10.241181373596191
    5. '[' → logprob: -10.366181373596191
    6. '"' → logprob: -11.491181373596191
    7. ' ' → logprob: -11.491181373596191
    8. '[s' → logprob: -11.991181373596191
    9. ' reverse' → logprob: -11.991181373596191
    10. 're' → logprob: -12.116181373596191

Token 25: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.02365199476480484
    2. '[' → logprob: -3.7736520767211914
    3. ' [' → logprob: -8.148652076721191
    4. '[:]' → logprob: -9.773652076721191
    5. '.' → logprob: -10.898652076721191
    6. '[:' → logprob: -11.398652076721191
    7. '.lower' → logprob: -12.398652076721191
    8. '[:-' → logprob: -12.648652076721191
    9. '.strip' → logprob: -12.648652076721191
    10. '[
' → logprob: -12.898652076721191

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5717979669570923
    2. 'd' → logprob: -1.6967979669570923
    3. 'v' → logprob: -2.4467978477478027
    4. 't' → logprob: -2.5717978477478027
    5. 'r' → logprob: -3.8217978477478027
    6. 's' → logprob: -3.9467978477478027
    7. 'p' → logprob: -4.196797847747803
    8. 'ed' → logprob: -5.446797847747803
    9. 'ds' → logprob: -5.446797847747803
    10. 'dex' → logprob: -5.946797847747803

Token 27: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04431287199258804
    2. ']' → logprob: -3.1693129539489746
    3. '])' → logprob: -6.669312953948975
    4. ')]' → logprob: -10.294312477111816
    5. '）' → logprob: -12.669312477111816
    6. ')
' → logprob: -13.044312477111816
    7. ' )' → logprob: -13.169312477111816
    8. '))' → logprob: -13.919312477111816
    9. ')`' → logprob: -15.044312477111816
    10. '[' → logprob: -15.294312477111816

Token 28: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008474985137581825
    2. 'if' → logprob: -5.758474826812744
    3. 'for' → logprob: -6.133474826812744
    4. '.' → logprob: -7.133474826812744
    5. '#' → logprob: -7.383474826812744
    6. ')' → logprob: -7.883474826812744
    7. '
' → logprob: -8.008475303649902
    8. '#print' → logprob: -8.508475303649902
    9. '\n' → logprob: -9.008475303649902
    10. 'prin' → logprob: -9.133475303649902

Token 29: ' au' (ID: 2791)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13771118223667145
    2. 'if' → logprob: -2.7627112865448
    3. 'for' → logprob: -4.012711048126221
    4. 's' → logprob: -4.887711048126221
    5. '#' → logprob: -5.012711048126221
    6. ' if' → logprob: -5.137711048126221
    7. 'p' → logprob: -5.387711048126221
    8. ' ' → logprob: -5.387711048126221
    9. '.' → logprob: -5.512711048126221
    10. ')' → logprob: -5.762711048126221

Token 30: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.9590421319007874
    2. 'jourd' → logprob: -1.3340420722961426
    3. 'jour' → logprob: -2.5840420722961426
    4. ' cas' → logprob: -2.5840420722961426
    5. 'tour' → logprob: -2.9590420722961426
    6. ' passage' → logprob: -3.9590420722961426
    7. 'moins' → logprob: -4.209042072296143
    8. 's' → logprob: -4.334042072296143
    9. 'print' → logprob: -4.959042072296143
    10. 'final' → logprob: -4.959042072296143

Token 31: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.5011602640151978
    2. 'où' → logprob: -1.0011602640151978
    3. 's' → logprob: -4.126160144805908
    4. ' where' → logprob: -6.001160144805908
    5. 'ou' → logprob: -6.501160144805908
    6. ' de' → logprob: -7.251160144805908
    7. ' ou' → logprob: -7.251160144805908
    8. '#' → logprob: -7.251160144805908
    9. ' ' → logprob: -7.251160144805908
    10. 'd' → logprob: -7.251160144805908

Token 32: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3323938846588135
    2. 'if' → logprob: -1.4573938846588135
    3. ' ' → logprob: -1.7073938846588135
    4. ':' → logprob: -1.8323938846588135
    5. 's' → logprob: -2.0823938846588135
    6. ' :' → logprob: -5.082393646240234
    7. '<|end|>' → logprob: -5.082393646240234
    8. 'for' → logprob: -5.332393646240234
    9. ' for' → logprob: -5.707393646240234
    10. 'print' → logprob: -6.332393646240234

Token 33: ' pour' (ID: 1930)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6478216052055359
    2. 's' → logprob: -1.6478216648101807
    3. ' if' → logprob: -1.8978216648101807
    4. 'if' → logprob: -3.3978216648101807
    5. ' on' → logprob: -3.5228216648101807
    6. 'print' → logprob: -3.5228216648101807
    7. ' print' → logprob: -4.522821426391602
    8. ' while' → logprob: -4.772821426391602
    9. ' for' → logprob: -5.522821426391602
    10. 'while' → logprob: -5.772821426391602

Token 34: ' éviter' (ID: 64013)
  Prédit: ' éviter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -1.0885154008865356
    2. ' enlever' → logprob: -2.213515281677246
    3. ' s' → logprob: -2.338515281677246
    4. ' l' → logprob: -3.213515281677246
    5. ' le' → logprob: -3.338515281677246
    6. 'l' → logprob: -3.588515281677246
    7. ' la' → logprob: -3.713515281677246
    8. ' i' → logprob: -3.838515281677246
    9. ' supprimer' → logprob: -3.838515281677246
    10. ' garantir' → logprob: -3.963515281677246

Token 35: ' d' (ID: 272)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3493770956993103
    2. ' d' → logprob: -1.599377155303955
    3. 'les' → logprob: -3.349377155303955
    4. ' que' → logprob: -3.599377155303955
    5. ' de' → logprob: -5.099377155303955
    6. ' des' → logprob: -5.349377155303955
    7. 'd' → logprob: -5.474377155303955
    8. 's' → logprob: -5.599377155303955
    9. ' la' → logprob: -6.099377155303955
    10. ' un' → logprob: -6.349377155303955

Token 36: ''avoir' (ID: 55863)
  Prédit: ''é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''é' → logprob: -0.45724281668663025
    2. 'e' → logprob: -2.082242727279663
    3. ''er' → logprob: -3.082242727279663
    4. ''' → logprob: -3.082242727279663
    5. 'é' → logprob: -3.207242727279663
    6. ''une' → logprob: -3.457242727279663
    7. ''avoir' → logprob: -4.082242965698242
    8. ''un' → logprob: -4.332242965698242
    9. 'es' → logprob: -4.457242965698242
    10. 'er' → logprob: -4.582242965698242

Token 37: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.12013430148363113
    2. ' un' → logprob: -2.9951343536376953
    3. 'des' → logprob: -3.1201343536376953
    4. ' une' → logprob: -5.245134353637695
    5. ' les' → logprob: -5.620134353637695
    6. ' ' → logprob: -5.995134353637695
    7. 's' → logprob: -6.495134353637695
    8. 'un' → logprob: -6.745134353637695
    9. 'les' → logprob: -7.245134353637695
    10. ' d' → logprob: -7.245134353637695

Token 38: ' erreur' (ID: 102885)
  Prédit: ' problème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.46187373995780945
    2. ' ' → logprob: -2.336873769760132
    3. ' double' → logprob: -2.461873769760132
    4. ' espace' → logprob: -2.711873769760132
    5. 's' → logprob: -4.211873531341553
    6. ' doubl' → logprob: -4.336873531341553
    7. ' caractère' → logprob: -4.461873531341553
    8. ' maximum' → logprob: -4.711873531341553
    9. 'e' → logprob: -4.836873531341553
    10. ' d' → logprob: -4.836873531341553

Token 39: ' plus' (ID: 2932)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7784767150878906
    2. ' if' → logprob: -0.7784767150878906
    3. 'try' → logprob: -3.4034767150878906
    4. ' try' → logprob: -3.7784767150878906
    5. 's' → logprob: -4.153476715087891
    6. ':' → logprob: -5.153476715087891
    7. ' ' → logprob: -6.528476715087891
    8. '```' → logprob: -7.153476715087891
    9. ',' → logprob: -7.778476715087891
    10. 'i' → logprob: -7.903476715087891

Token 40: ' tard' (ID: 30225)
  Prédit: 'loin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loin' → logprob: -0.870281457901001
    2. 'd' → logprob: -1.620281457901001
    3. 't' → logprob: -2.245281457901001
    4. 'haut' → logprob: -2.370281457901001
    5. ' tard' → logprob: -2.870281457901001
    6. ' loin' → logprob: -3.495281457901001
    7. ' d' → logprob: -3.870281457901001
    8. 'bas' → logprob: -3.995281457901001
    9. 'de' → logprob: -3.995281457901001
    10. ' de' → logprob: -5.495281219482422

Token 41: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12856978178024292
    2. 'try' → logprob: -3.0035698413848877
    3. ' if' → logprob: -3.0035698413848877
    4. 's' → logprob: -4.378569602966309
    5. ':' → logprob: -6.253569602966309
    6. ',' → logprob: -6.503569602966309
    7. 'i' → logprob: -6.503569602966309
    8. ' try' → logprob: -6.503569602966309
    9. ':
' → logprob: -7.378569602966309
    10. ',
' → logprob: -7.628569602966309

Token 42: ' je' (ID: 1264)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11775953322649002
    2. 'if' → logprob: -2.4927594661712646
    3. 's' → logprob: -3.9927594661712646
    4. ' ' → logprob: -5.117759704589844
    5. ' s' → logprob: -5.992759704589844
    6. ' on' → logprob: -7.617759704589844
    7. ' i' → logprob: -8.492759704589844
    8. 'i' → logprob: -8.992759704589844
    9. ' #' → logprob: -9.492759704589844
    10. ' si' → logprob: -9.867759704589844

Token 43: ' mets' (ID: 87155)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2770709991455078
    2. 's' → logprob: -1.4020709991455078
    3. 'v' → logprob: -2.277070999145508
    4. ' continue' → logprob: -2.527070999145508
    5. 'm' → logprob: -2.777070999145508
    6. ' m' → logprob: -3.027070999145508
    7. 'aj' → logprob: -3.402070999145508
    8. 'continue' → logprob: -3.652070999145508
    9. 'try' → logprob: -4.027070999145508
    10. 'sup' → logprob: -4.152070999145508

Token 44: ' un' (ID: 537)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8922741413116455
    2. 'try' → logprob: -1.1422741413116455
    3. 'un' → logprob: -3.0172741413116455
    4. ' un' → logprob: -3.2672741413116455
    5. ':' → logprob: -3.3922741413116455
    6. ' try' → logprob: -3.8922741413116455
    7. ' s' → logprob: -3.8922741413116455
    8. 'une' → logprob: -4.267273902893066
    9. 'if' → logprob: -4.392273902893066
    10. 'le' → logprob: -4.392273902893066

Token 45: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.2679698467254639
    2. '_' → logprob: -1.3929698467254639
    3. 'es' → logprob: -1.8929698467254639
    4. ' ' → logprob: -2.767969846725464
    5. ''' → logprob: -3.267969846725464
    6. 'e' → logprob: -3.392969846725464
    7. 's' → logprob: -3.892969846725464
    8. '.' → logprob: -4.267970085144043
    9. '=' → logprob: -4.267970085144043
    10. 'a' → logprob: -4.392970085144043

Token 46: '4' (ID: 19)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0898694097995758
    2. '#' → logprob: -3.589869499206543
    3. ')' → logprob: -4.339869499206543
    4. '\' → logprob: -4.339869499206543
    5. 'e' → logprob: -5.339869499206543
    6. ''' → logprob: -5.589869499206543
    7. '")' → logprob: -5.589869499206543
    8. '\n' → logprob: -5.839869499206543
    9. '_' → logprob: -6.339869499206543
    10. '"""' → logprob: -6.464869499206543

Token 47: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12583477795124054
    2. ')' → logprob: -3.1258347034454346
    3. '0' → logprob: -4.250834941864014
    4. 'e' → logprob: -4.250834941864014
    5. ''' → logprob: -4.625834941864014
    6. '4' → logprob: -5.250834941864014
    7. '*' → logprob: -5.375834941864014
    8. '#' → logprob: -5.875834941864014
    9. ' "' → logprob: -5.875834941864014
    10. '+' → logprob: -6.125834941864014

Token 48: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6810988187789917
    2. '+' → logprob: -1.5560988187789917
    3. '.' → logprob: -2.0560989379882812
    4. '0' → logprob: -2.6810989379882812
    5. '*' → logprob: -4.056098937988281
    6. ')' → logprob: -4.806098937988281
    7. ' ' → logprob: -5.056098937988281
    8. '_' → logprob: -5.056098937988281
    9. ' s' → logprob: -5.181098937988281
    10. '#' → logprob: -5.306098937988281

Token 49: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7525514364242554
    2. 'la' → logprob: -0.7525514364242554
    3. 'l' → logprob: -3.252551555633545
    4. 's' → logprob: -4.752551555633545
    5. ' ' → logprob: -6.252551555633545
    6. 'a' → logprob: -6.752551555633545
    7. 'len' → logprob: -7.127551555633545
    8. 'f' → logprob: -7.377551555633545
    9. 'length' → logprob: -7.377551555633545
    10. ' l' → logprob: -7.752551555633545

Token 50: ' fin' (ID: 2131)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3200286626815796
    2. 'la' → logprob: -1.5700286626815796
    3. 'l' → logprob: -1.9450286626815796
    4. 'fin' → logprob: -2.195028781890869
    5. '0' → logprob: -3.320028781890869
    6. 'plus' → logprob: -3.445028781890869
    7. 'f' → logprob: -4.070028781890869
    8. '-' → logprob: -4.070028781890869
    9. 'place' → logprob: -4.195028781890869
    10. 'd' → logprob: -4.195028781890869

Token 51: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4128556251525879
    2. '+' → logprob: -2.037855625152588
    3. '4' → logprob: -2.287855625152588
    4. ' if' → logprob: -3.287855625152588
    5. '0' → logprob: -3.412855625152588
    6. 'if' → logprob: -4.162855625152588
    7. ' s' → logprob: -5.162855625152588
    8. ' ' → logprob: -5.662855625152588
    9. '_' → logprob: -5.912855625152588
    10. ' +' → logprob: -6.037855625152588

Token 52: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11846592277288437
    2. '4' → logprob: -2.3684659004211426
    3. 'if' → logprob: -4.868465900421143
    4. ' if' → logprob: -5.743465900421143
    5. '0' → logprob: -5.993465900421143
    6. '+' → logprob: -6.118465900421143
    7. ' ' → logprob: -6.618465900421143
    8. '.' → logprob: -7.743465900421143
    9. ' s' → logprob: -8.4934663772583
    10. '_' → logprob: -9.1184663772583

Token 53: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0028407759964466095
    2. ' +' → logprob: -5.877840995788574
    3. '[' → logprob: -11.002840995788574
    4. '4' → logprob: -11.377840995788574
    5. '+'' → logprob: -13.127840995788574
    6. '+
' → logprob: -13.627840995788574
    7. '+[' → logprob: -13.752840995788574
    8. '+"' → logprob: -14.377840995788574
    9. 's' → logprob: -14.502840995788574
    10. ' ' → logprob: -14.877840995788574

Token 54: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6937981247901917
    2. ' s' → logprob: -0.6937981247901917
    3. ''s' → logprob: -9.068798065185547
    4. '"s' → logprob: -9.068798065185547
    5. ' ' → logprob: -9.193798065185547
    6. '"' → logprob: -9.318798065185547
    7. '(s' → logprob: -9.568798065185547
    8. '4' → logprob: -9.943798065185547
    9. ''' → logprob: -10.693798065185547
    10. ' "' → logprob: -10.818798065185547

Token 55: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0052572377026081085
    2. ' +' → logprob: -5.2552571296691895
    3. '+'' → logprob: -11.255257606506348
    4. '+"' → logprob: -12.255257606506348
    5. '[:-' → logprob: -13.755257606506348
    6. '4' → logprob: -14.505257606506348
    7. 'if' → logprob: -14.505257606506348
    8. '[:' → logprob: -14.630257606506348
    9. '[' → logprob: -15.005257606506348
    10. ''' → logprob: -15.005257606506348

Token 56: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03554082289338112
    2. ''' → logprob: -3.410540819168091
    3. ' "' → logprob: -6.41054105758667
    4. ' '' → logprob: -8.910540580749512
    5. '4' → logprob: -9.160540580749512
    6. ' ' → logprob: -12.660540580749512
    7. ''"' → logprob: -12.785540580749512
    8. '`' → logprob: -13.410540580749512
    9. '   ' → logprob: -14.785540580749512
    10. '"""' → logprob: -14.785540580749512

Token 57: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.4855663721391466e-05
    2. ''' → logprob: -11.250015258789062
    3. '"' → logprob: -14.000015258789062
    4. ' ' → logprob: -14.125015258789062
    5. '```' → logprob: -16.375015258789062
    6. '' → logprob: -17.750015258789062
    7. '444' → logprob: -17.750015258789062
    8. '٤' → logprob: -17.875015258789062
    9. '432' → logprob: -18.000015258789062
    10. '   ' → logprob: -18.000015258789062

Token 58: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002901757834479213
    2. '')' → logprob: -9.125289916992188
    3. '"' → logprob: -9.375289916992188
    4. ')' → logprob: -9.750289916992188
    5. ''''' → logprob: -11.250289916992188
    6. ')'' → logprob: -11.500289916992188
    7. ''
' → logprob: -12.250289916992188
    8. '#' → logprob: -12.500289916992188
    9. '\n' → logprob: -13.625289916992188
    10. '```' → logprob: -14.250289916992188

Token 59: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1578257083892822
    2. '[' → logprob: -1.4078257083892822
    3. '.' → logprob: -1.9078257083892822
    4. ')' → logprob: -2.9078257083892822
    5. '
' → logprob: -2.9078257083892822
    6. 's' → logprob: -3.1578257083892822
    7. 'i' → logprob: -3.6578257083892822
    8. 'if' → logprob: -3.9078257083892822
    9. 'a' → logprob: -4.282825469970703
    10. 'n' → logprob: -4.532825469970703

Token 60: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9650270938873291
    2. 'i' → logprob: -1.090027093887329
    3. 'n' → logprob: -2.340027093887329
    4. 'a' → logprob: -3.965027093887329
    5. 'p' → logprob: -3.965027093887329
    6. 's' → logprob: -3.965027093887329
    7. ' ' → logprob: -4.21502685546875
    8. 'd' → logprob: -4.46502685546875
    9. 'if' → logprob: -4.46502685546875
    10. 'r' → logprob: -4.59002685546875

Token 61: ' va' (ID: 3423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6395143270492554
    2. '#' → logprob: -1.7645143270492554
    3. 'for' → logprob: -2.639514446258545
    4. 'f' → logprob: -3.139514446258545
    5. '=' → logprob: -3.264514446258545
    6. '_' → logprob: -3.389514446258545
    7. 'i' → logprob: -3.514514446258545
    8. ' =' → logprob: -3.889514446258545
    9. '.' → logprob: -4.389514446258545
    10. 'r' → logprob: -4.514514446258545

Token 62: ' garder' (ID: 63069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.691649317741394
    2. 'count' → logprob: -1.941649317741394
    3. ' compter' → logprob: -2.4416494369506836
    4. '#' → logprob: -2.6916494369506836
    5. 'p' → logprob: -2.9416494369506836
    6. ' for' → logprob: -2.9416494369506836
    7. 'v' → logprob: -3.0666494369506836
    8. 'comp' → logprob: -3.4416494369506836
    9. ' faire' → logprob: -3.4416494369506836
    10. ' ' → logprob: -3.5666494369506836

Token 63: ' une' (ID: 2463)
  Prédit: ' uniquement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' uniquement' → logprob: -1.2553634643554688
    2. ' ' → logprob: -1.7553634643554688
    3. ' les' → logprob: -2.2553634643554688
    4. ' s' → logprob: -2.5053634643554688
    5. 's' → logprob: -2.5053634643554688
    6. ' only' → logprob: -2.7553634643554688
    7. ' seulement' → logprob: -2.8803634643554688
    8. ' la' → logprob: -3.3803634643554688
    9. '_' → logprob: -3.8803634643554688
    10. ' le' → logprob: -4.005363464355469

Token 64: ' trace' (ID: 21523)
  Prédit: ' variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.7197926044464111
    2. ' liste' → logprob: -0.9697926044464111
    3. 'variable' → logprob: -2.594792604446411
    4. 'liste' → logprob: -4.219792366027832
    5. ' partie' → logprob: -4.969792366027832
    6. ' boucle' → logprob: -5.344792366027832
    7. ' chaîne' → logprob: -5.594792366027832
    8. ' chaine' → logprob: -5.719792366027832
    9. 'chaine' → logprob: -5.969792366027832
    10. ' longueur' → logprob: -5.969792366027832

Token 65: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2461811900138855
    2. '_' → logprob: -1.9961812496185303
    3. 's' → logprob: -2.6211812496185303
    4. '<|end|>' → logprob: -5.996181011199951
    5. ' des' → logprob: -6.496181011199951
    6. ' de' → logprob: -6.996181011199951
    7. ' _' → logprob: -6.996181011199951
    8. 'e' → logprob: -7.496181011199951
    9. 'd' → logprob: -7.746181011199951
    10. ' of' → logprob: -7.871181011199951

Token 66: ' compteur' (ID: 163344)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6036053895950317
    2. 'nombre' → logprob: -2.228605270385742
    3. 's' → logprob: -2.728605270385742
    4. ' maximum' → logprob: -3.353605270385742
    5. ' dernier' → logprob: -3.603605270385742
    6. ' compteur' → logprob: -3.853605270385742
    7. ' max' → logprob: -4.478605270385742
    8. ' code' → logprob: -4.478605270385742
    9. ' passage' → logprob: -4.603605270385742
    10. 'max' → logprob: -4.603605270385742

Token 67: ' principal' (ID: 10589)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8479181528091431
    2. 's' → logprob: -1.222918152809143
    3. ' =' → logprob: -2.9729180335998535
    4. ' compteur' → logprob: -3.2229180335998535
    5. ' ' → logprob: -3.3479180335998535
    6. 'count' → logprob: -3.4729180335998535
    7. '=' → logprob: -4.0979180335998535
    8. 'n' → logprob: -4.3479180335998535
    9. ',' → logprob: -4.4729180335998535
    10. 'c' → logprob: -4.8479180335998535

Token 68: ' et' (ID: 859)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6659563183784485
    2. ' compteur' → logprob: -1.9159562587738037
    3. 'count' → logprob: -2.1659562587738037
    4. '_' → logprob: -2.5409562587738037
    5. ',' → logprob: -3.6659562587738037
    6. 'counter' → logprob: -3.7909562587738037
    7. 'i' → logprob: -4.290956497192383
    8. 'n' → logprob: -4.290956497192383
    9. 's' → logprob: -4.415956497192383
    10. ' count' → logprob: -4.915956497192383

Token 69: ' un' (ID: 537)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.5977978706359863
    2. '#' → logprob: -2.2227978706359863
    3. 'de' → logprob: -3.2227978706359863
    4. 'du' → logprob: -3.3477978706359863
    5. ' de' → logprob: -3.4727978706359863
    6. 's' → logprob: -3.4727978706359863
    7. ' secondaire' → logprob: -3.4727978706359863
    8. ' un' → logprob: -3.8477978706359863
    9. ' des' → logprob: -4.097797870635986
    10. 'a' → logprob: -4.097797870635986

Token 70: ' bonus' (ID: 11181)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6334853172302246
    2. ' secondaire' → logprob: -1.2584853172302246
    3. ' compteur' → logprob: -2.3834853172302246
    4. ' ' → logprob: -3.7584853172302246
    5. '_second' → logprob: -4.883485317230225
    6. ' _' → logprob: -5.008485317230225
    7. 's' → logprob: -5.008485317230225
    8. 'e' → logprob: -5.258485317230225
    9. '=' → logprob: -5.508485317230225
    10. ' =' → logprob: -5.508485317230225

Token 71: ' je' (ID: 1264)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16282585263252258
    2. '_counter' → logprob: -2.7878258228302
    3. '_comp' → logprob: -3.5378258228302
    4. '_count' → logprob: -3.9128258228302
    5. 's' → logprob: -4.662826061248779
    6. ' =' → logprob: -5.162826061248779
    7. '_com' → logprob: -5.537826061248779
    8. '=' → logprob: -5.912826061248779
    9. ',' → logprob: -6.037826061248779
    10. '_c' → logprob: -6.162826061248779

Token 72: ' crois' (ID: 65485)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24546648561954498
    2. '_' → logprob: -2.495466470718384
    3. 'm' → logprob: -3.620466470718384
    4. ' ' → logprob: -3.745466470718384
    5. 's' → logprob: -3.995466470718384
    6. ''' → logprob: -4.870466709136963
    7. 'u' → logprob: -4.995466709136963
    8. 'g' → logprob: -5.120466709136963
    9. 't' → logprob: -5.120466709136963
    10. 'c' → logprob: -5.245466709136963

Token 73: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6634821891784668
    2. '_' → logprob: -0.9134821891784668
    3. ',' → logprob: -4.163482189178467
    4. 'n' → logprob: -4.413482189178467
    5. ' compteur' → logprob: -4.413482189178467
    6. ' ' → logprob: -4.913482189178467
    7. 's' → logprob: -5.038482189178467
    8. 'i' → logprob: -5.163482189178467
    9. ':' → logprob: -5.663482189178467
    10. 'count' → logprob: -5.788482189178467

Token 74: 'a' (ID: 64)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.32781824469566345
    2. 'n' → logprob: -2.4528181552886963
    3. 'count' → logprob: -3.0778181552886963
    4. ' compteur' → logprob: -3.4528181552886963
    5. 'counter' → logprob: -3.5778181552886963
    6. 'comp' → logprob: -3.8278181552886963
    7. 'i' → logprob: -3.9528181552886963
    8. '
' → logprob: -3.9528181552886963
    9. 'p' → logprob: -4.952818393707275
    10. '```' → logprob: -5.827818393707275

Token 75: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49192261695861816
    2. ' =' → logprob: -1.7419226169586182
    3. '_' → logprob: -2.491922616958618
    4. '=' → logprob: -2.741922616958618
    5. ' ' → logprob: -4.491922378540039
    6. '_c' → logprob: -4.616922378540039
    7. '_count' → logprob: -4.741922378540039
    8. '_comp' → logprob: -4.991922378540039
    9. '_counter' → logprob: -5.116922378540039
    10. 'c' → logprob: -5.741922378540039

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20149579644203186
    2. ' ' → logprob: -1.7014957666397095
    3. '1' → logprob: -10.326496124267578
    4. ' [' → logprob: -10.451496124267578
    5. '[' → logprob: -11.826496124267578
    6. '4' → logprob: -12.576496124267578
    7. '[]' → logprob: -13.201496124267578
    8. '10' → logprob: -13.826496124267578
    9. 'b' → logprob: -14.076496124267578
    10. '2' → logprob: -14.076496124267578

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021617230959236622
    2. '1' → logprob: -9.125216484069824
    3. ' ' → logprob: -9.625216484069824
    4. '[]' → logprob: -11.375216484069824
    5. '[' → logprob: -12.125216484069824
    6. '4' → logprob: -12.500216484069824
    7. 'b' → logprob: -12.750216484069824
    8. '2' → logprob: -12.875216484069824
    9. 's' → logprob: -13.125216484069824
    10. '-' → logprob: -13.250216484069824

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023110365495085716
    2. 'i' → logprob: -4.273110389709473
    3. 'c' → logprob: -5.773110389709473
    4. 'n' → logprob: -6.773110389709473
    5. 't' → logprob: -7.023110389709473
    6. 's' → logprob: -7.398110389709473
    7. '
' → logprob: -7.523110389709473
    8. 'for' → logprob: -7.648110389709473
    9. 'd' → logprob: -8.023110389709473
    10. ' b' → logprob: -8.148110389709473

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804412856698036
    2. '=' → logprob: -3.2880442142486572
    3. ' ' → logprob: -13.288043975830078
    4. ',' → logprob: -14.788043975830078
    5. 'a' → logprob: -15.538043975830078
    6. ' =
' → logprob: -15.788043975830078
    7. '.' → logprob: -16.413043975830078
    8. '0' → logprob: -17.038043975830078
    9. ')' → logprob: -17.288043975830078
    10. 's' → logprob: -17.413043975830078

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021384967491030693
    2. ' ' → logprob: -3.8963849544525146
    3. '1' → logprob: -7.271385192871094
    4. '4' → logprob: -9.396385192871094
    5. 'a' → logprob: -10.396385192871094
    6. '10' → logprob: -12.271385192871094
    7. '3' → logprob: -12.521385192871094
    8. 's' → logprob: -12.521385192871094
    9. '2' → logprob: -12.521385192871094
    10. '-' → logprob: -13.208885192871094

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005723327049054205
    2. ' ' → logprob: -7.875572204589844
    3. '1' → logprob: -9.125572204589844
    4. '4' → logprob: -9.875572204589844
    5. 'a' → logprob: -11.500572204589844
    6. '-' → logprob: -11.750572204589844
    7. '3' → logprob: -13.250572204589844
    8. '10' → logprob: -13.250572204589844
    9. '2' → logprob: -13.375572204589844
    10. 's' → logprob: -13.688072204589844

Token 83: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011921191588044167
    2. 'for' → logprob: -4.636921405792236
    3. '\n' → logprob: -7.386921405792236
    4. 'n' → logprob: -8.011920928955078
    5. ' for' → logprob: -8.261920928955078
    6. '' → logprob: -8.386920928955078
    7. ' 
' → logprob: -8.386920928955078
    8. 'i' → logprob: -9.386920928955078
    9. '
' → logprob: -9.636920928955078
    10. '

' → logprob: -9.886920928955078

Token 84: 'tail' (ID: 20472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21127931773662567
    2. 'for' → logprob: -1.836279273033142
    3. ':' → logprob: -4.586279392242432
    4. '\n' → logprob: -4.836279392242432
    5. 'i' → logprob: -5.211279392242432
    6. 'f' → logprob: -6.086279392242432
    7. ' for' → logprob: -6.586279392242432
    8. 'w' → logprob: -6.836279392242432
    9. 'n' → logprob: -7.211279392242432
    10. '' → logprob: -7.586279392242432

Token 85: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11835461854934692
    2. '(s' → logprob: -3.118354558944702
    3. '()' → logprob: -3.993354558944702
    4. '(' → logprob: -3.993354558944702
    5. 'en' → logprob: -4.368354797363281
    6. '(e' → logprob: -4.743354797363281
    7. '(en' → logprob: -6.368354797363281
    8. '(len' → logprob: -6.618354797363281
    9. '=' → logprob: -6.743354797363281
    10. '```' → logprob: -7.118354797363281

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19176428020000458
    2. '=' → logprob: -2.1917643547058105
    3. '_' → logprob: -2.9417643547058105
    4. 's' → logprob: -5.3167643547058105
    5. ' ' → logprob: -5.3167643547058105
    6. '_s' → logprob: -9.691763877868652
    7. '_=' → logprob: -10.941763877868652
    8. '=s' → logprob: -11.066763877868652
    9. ')' → logprob: -11.191763877868652
    10. '(' → logprob: -11.191763877868652

Token 87: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.04859236627817154
    2. 'len' → logprob: -3.0485923290252686
    3. '(len' → logprob: -12.423592567443848
    4. ' ' → logprob: -15.173592567443848
    5. ' int' → logprob: -15.423592567443848
    6. '[len' → logprob: -16.04859161376953
    7. '=len' → logprob: -16.17359161376953
    8. 'int' → logprob: -16.54859161376953
    9. '	len' → logprob: -16.54859161376953
    10. '10' → logprob: -16.79859161376953

Token 88: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0024868345353752375
    2. '(' → logprob: -6.002486705780029
    3. 's' → logprob: -11.502487182617188
    4. '(
' → logprob: -14.752487182617188
    5. ' (' → logprob: -15.002487182617188
    6. '(t' → logprob: -15.502487182617188
    7. '(a' → logprob: -17.627487182617188
    8. ')' → logprob: -17.877487182617188
    9. '(ss' → logprob: -17.877487182617188
    10. '(

' → logprob: -18.127487182617188

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ' )' → logprob: -12.375006675720215
    3. ')
' → logprob: -13.625006675720215
    4. '()' → logprob: -15.250006675720215
    5. '))' → logprob: -15.875006675720215
    6. '())' → logprob: -16.1250057220459
    7. ')s' → logprob: -16.7500057220459
    8. ')#' → logprob: -17.1250057220459
    9. '')' → logprob: -17.3750057220459
    10. ')

' → logprob: -17.5000057220459

Token 90: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004483054392039776
    2. 'for' → logprob: -6.129483222961426
    3. '\n' → logprob: -7.129483222961426
    4. ' for' → logprob: -7.379483222961426
    5. '
' → logprob: -7.879483222961426
    6. ' 
' → logprob: -8.629483222961426
    7. '' → logprob: -9.504483222961426
    8. '\' → logprob: -9.629483222961426
    9. '

' → logprob: -9.754483222961426
    10. 'n' → logprob: -10.254483222961426

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016370968660339713
    2. '2' → logprob: -6.626636981964111
    3. ' ' → logprob: -8.62663745880127
    4. '4' → logprob: -9.00163745880127
    5. '3' → logprob: -11.75163745880127
    6. '5' → logprob: -14.87663745880127
    7. '   ' → logprob: -15.75163745880127
    8. '10' → logprob: -16.376636505126953
    9. ''' → logprob: -17.001636505126953
    10. '14' → logprob: -17.251636505126953

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017290873220190406
    2. '2' → logprob: -6.3767290115356445
    3. ' ' → logprob: -11.126729011535645
    4. '4' → logprob: -11.751729011535645
    5. '3' → logprob: -12.751729011535645
    6. '14' → logprob: -14.751729011535645
    7. '5' → logprob: -15.376729011535645
    8. '   ' → logprob: -15.939229011535645
    9. '10' → logprob: -16.12672996520996
    10. '```' → logprob: -16.31422996520996

Token 93: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017446253448724747
    2. 'for' → logprob: -5.517446041107178
    3. ' 
' → logprob: -5.517446041107178
    4. '' → logprob: -6.017446041107178
    5. '\n' → logprob: -6.267446041107178
    6. '<|end|>' → logprob: -6.517446041107178
    7. ' for' → logprob: -7.517446041107178
    8. ':' → logprob: -7.642446041107178
    9. '  
' → logprob: -7.767446041107178
    10. '
' → logprob: -7.892446041107178

Token 94: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007974845357239246
    2. 'for' → logprob: -5.382974624633789
    3. '<|end|>' → logprob: -6.757974624633789
    4. '\n' → logprob: -7.507974624633789
    5. ' 
' → logprob: -7.507974624633789
    6. ' for' → logprob: -8.382974624633789
    7. '
' → logprob: -8.507974624633789
    8. '' → logprob: -8.757974624633789
    9. 'while' → logprob: -8.882974624633789
    10. 'n' → logprob: -9.132974624633789

Token 95: ' petite' (ID: 28119)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9809434413909912
    2. '1' → logprob: -1.3559434413909912
    3. ' for' → logprob: -1.9809434413909912
    4. 'i' → logprob: -2.355943441390991
    5. ' ' → logprob: -3.105943441390991
    6. '#' → logprob: -3.980943441390991
    7. 'while' → logprob: -4.35594367980957
    8. '4' → logprob: -4.35594367980957
    9. 's' → logprob: -4.48094367980957
    10. 'a' → logprob: -4.73094367980957

Token 96: ' correction' (ID: 43745)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.733108639717102
    2. '
' → logprob: -0.858108639717102
    3. ' boucle' → logprob: -4.1081085205078125
    4. '#' → logprob: -4.8581085205078125
    5. 'f' → logprob: -4.8581085205078125
    6. ' ' → logprob: -4.9831085205078125
    7. ' 
' → logprob: -4.9831085205078125
    8. '\n' → logprob: -5.3581085205078125
    9. 'i' → logprob: -5.6081085205078125
    10. 'r' → logprob: -5.8581085205078125

Token 97: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003202550346031785
    2. '
' → logprob: -7.003202438354492
    3. '\n' → logprob: -7.503202438354492
    4. '<|end|>' → logprob: -7.753202438354492
    5. ' 
' → logprob: -8.253202438354492
    6. ' for' → logprob: -8.253202438354492
    7. 'for' → logprob: -8.378202438354492
    8. '' → logprob: -8.503202438354492
    9. '

' → logprob: -9.003202438354492
    10. '```' → logprob: -9.253202438354492

Token 98: ' vu' (ID: 12005)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -1.109741449356079
    2. ' on' → logprob: -1.234741449356079
    3. ' because' → logprob: -2.484741449356079
    4. ' parce' → logprob: -2.484741449356079
    5. ' for' → logprob: -2.859741449356079
    6. 's' → logprob: -3.734741449356079
    7. ' #' → logprob: -4.1097412109375
    8. ' ' → logprob: -4.3597412109375
    9. '#' → logprob: -4.3597412109375
    10. ' je' → logprob: -4.6097412109375

Token 99: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.29168573021888733
    2. ' qu' → logprob: -1.666685700416565
    3. 'qu' → logprob: -4.291685581207275
    4. ' ' → logprob: -4.291685581207275
    5. 'que' → logprob: -4.666685581207275
    6. 'le' → logprob: -4.791685581207275
    7. ' that' → logprob: -4.916685581207275
    8. ' la' → logprob: -5.666685581207275
    9. ' l' → logprob: -6.291685581207275
    10. 'l' → logprob: -6.291685581207275

Token 100: ''on' (ID: 25812)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.038202166557312
    2. ' on' → logprob: -1.538202166557312
    3. ' s' → logprob: -1.913202166557312
    4. 's' → logprob: -2.5382022857666016
    5. ' qu' → logprob: -2.7882022857666016
    6. ' le' → logprob: -3.4132022857666016
    7. ' la' → logprob: -3.5382022857666016
    8. 'le' → logprob: -4.288202285766602
    9. ' l' → logprob: -4.538202285766602
    10. ''on' → logprob: -4.538202285766602

Token 101: ' ajoute' (ID: 91611)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9561977982521057
    2. ' commence' → logprob: -2.331197738647461
    3. 'comm' → logprob: -2.831197738647461
    4. 'aj' → logprob: -2.831197738647461
    5. 'part' → logprob: -2.831197738647461
    6. ' a' → logprob: -2.956197738647461
    7. ' utilise' → logprob: -2.956197738647461
    8. ' ajoute' → logprob: -3.206197738647461
    9. ' part' → logprob: -3.456197738647461
    10. 'va' → logprob: -4.081197738647461

Token 102: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3541510999202728
    2. ''un' → logprob: -1.4791511297225952
    3. ' '' → logprob: -3.1041510105133057
    4. ''s' → logprob: -4.604151248931885
    5. '4' → logprob: -4.854151248931885
    6. ' un' → logprob: -5.604151248931885
    7. ''d' → logprob: -6.854151248931885
    8. ' ' → logprob: -6.979151248931885
    9. ''a' → logprob: -7.729151248931885
    10. ''l' → logprob: -7.729151248931885

Token 103: ' "' (ID: 392)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6172123551368713
    2. '4' → logprob: -0.9922123551368713
    3. ''' → logprob: -2.9922122955322266
    4. ' caractère' → logprob: -3.9922122955322266
    5. '"' → logprob: -4.492212295532227
    6. 'token' → logprob: -4.992212295532227
    7. ' ' → logprob: -7.242212295532227
    8. 'char' → logprob: -7.492212295532227
    9. ' caract' → logprob: -7.617212295532227
    10. ' '' → logprob: -8.242212295532227

Token 104: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0013689270708709955
    2. '"' → logprob: -7.126368999481201
    3. ''' → logprob: -7.501368999481201
    4. ' ' → logprob: -12.001368522644043
    5. 'car' → logprob: -12.626368522644043
    6. 'a' → logprob: -15.376368522644043
    7. '```' → logprob: -15.376368522644043
    8. 'ch' → logprob: -15.626368522644043
    9. ''"' → logprob: -15.751368522644043
    10. ' '' → logprob: -15.751368522644043

Token 105: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6586542725563049
    2. '"' → logprob: -0.9086542725563049
    3. '")' → logprob: -2.90865421295166
    4. '')' → logprob: -4.65865421295166
    5. ''' → logprob: -4.78365421295166
    6. ')"' → logprob: -5.65865421295166
    7. ',' → logprob: -6.65865421295166
    8. '')"' → logprob: -7.78365421295166
    9. ')'' → logprob: -7.78365421295166
    10. ' à' → logprob: -8.40865421295166

Token 106: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07209397852420807
    2. 'for' → logprob: -2.697093963623047
    3. '\n' → logprob: -6.947093963623047
    4. ' for' → logprob: -6.947093963623047
    5. 'while' → logprob: -9.322093963623047
    6. 'i' → logprob: -10.072093963623047
    7. '
' → logprob: -10.447093963623047
    8. '<|end|>' → logprob: -11.322093963623047
    9. 'n' → logprob: -11.447093963623047
    10. '\' → logprob: -11.447093963623047

Token 107: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002378023462370038
    2. ' ' → logprob: -6.752377986907959
    3. 'i' → logprob: -7.127377986907959
    4. ' _' → logprob: -7.877377986907959
    5. ' c' → logprob: -12.127378463745117
    6. ' ' → logprob: -12.252378463745117
    7. '_' → logprob: -12.377378463745117
    8. '	i' → logprob: -12.377378463745117
    9. '  ' → logprob: -13.752378463745117
    10. '```' → logprob: -13.752378463745117

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0049291737377643585
    2. 'in' → logprob: -5.629929065704346
    3. ' ' → logprob: -6.629929065704346
    4. 's' → logprob: -13.379929542541504
    5. ' i' → logprob: -13.879929542541504
    6. 'range' → logprob: -13.879929542541504
    7. '  ' → logprob: -14.129929542541504
    8. '	in' → logprob: -14.129929542541504
    9. 'n' → logprob: -14.254929542541504
    10. '```' → logprob: -14.504929542541504

Token 109: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0110511165112257
    2. 'range' → logprob: -4.511051177978516
    3. ' s' → logprob: -13.261051177978516
    4. ' xrange' → logprob: -14.636051177978516
    5. '	range' → logprob: -14.761051177978516
    6. 's' → logprob: -15.136051177978516
    7. ' ' → logprob: -15.261051177978516
    8. ' rang' → logprob: -16.511051177978516
    9. '(range' → logprob: -17.011051177978516
    10. '```' → logprob: -17.386051177978516

Token 110: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.07899852097034454
    2. '(' → logprob: -2.578998565673828
    3. '(len' → logprob: -9.203998565673828
    4. '(
' → logprob: -12.578998565673828
    5. ' (' → logprob: -12.828998565673828
    6. '(s' → logprob: -14.203998565673828
    7. '(T' → logprob: -15.203998565673828
    8. 't' → logprob: -15.328998565673828
    9. '(n' → logprob: -15.328998565673828
    10. '(

' → logprob: -15.703998565673828

Token 111: 'aille' (ID: 44714)
  Prédit: 'aille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aille' → logprob: -0.0902826189994812
    2. 'ail' → logprob: -2.465282678604126
    3. 'a' → logprob: -6.715282440185547
    4. '[' → logprob: -10.340282440185547
    5. '(' → logprob: -10.715282440185547
    6. 'alle' → logprob: -11.465282440185547
    7. 'tail' → logprob: -11.715282440185547
    8. '-' → logprob: -11.840282440185547
    9. 'ai' → logprob: -12.215282440185547
    10. 'ile' → logprob: -12.215282440185547

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022263018414378166
    2. ' ):' → logprob: -4.397263050079346
    3. ')' → logprob: -4.647263050079346
    4. ' )' → logprob: -9.522262573242188
    5. '):
' → logprob: -10.772262573242188
    6. '+' → logprob: -11.147262573242188
    7. '-' → logprob: -12.772262573242188
    8. ':' → logprob: -13.272262573242188
    9. ' ' → logprob: -14.022262573242188
    10. ',' → logprob: -14.147262573242188

Token 113: '   ' (ID: 271)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.065339207649231
    2. '   ' → logprob: -1.190339207649231
    3. ':' → logprob: -1.565339207649231
    4. ' ' → logprob: -2.1903390884399414
    5. ' :
' → logprob: -4.315339088439941
    6. ' 
' → logprob: -5.190339088439941
    7. '    
' → logprob: -5.940339088439941
    8. '  ' → logprob: -5.940339088439941
    9. '    ' → logprob: -6.690339088439941
    10. '   
' → logprob: -6.940339088439941

Token 114: ' v' (ID: 323)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5465683937072754
    2. 'if' → logprob: -1.2965683937072754
    3. '   ' → logprob: -2.0465683937072754
    4. ' c' → logprob: -4.671568393707275
    5. 'c' → logprob: -4.796568393707275
    6. 'car' → logprob: -8.546567916870117
    7. ' caract' → logprob: -8.796567916870117
    8. ' ' → logprob: -9.421567916870117
    9. ' char' → logprob: -9.421567916870117
    10. 'char' → logprob: -9.671567916870117

Token 115: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.737413227558136
    2. '=' → logprob: -1.2374131679534912
    3. 'al' → logprob: -1.4874131679534912
    4. 'a' → logprob: -5.48741340637207
    5. '   ' → logprob: -7.61241340637207
    6. 'ale' → logprob: -8.36241340637207
    7. ' ' → logprob: -8.36241340637207
    8. 'alue' → logprob: -8.73741340637207
    9. 'e' → logprob: -9.73741340637207
    10. '=a' → logprob: -9.98741340637207

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03158081695437431
    2. '=' → logprob: -3.531580924987793
    3. ',' → logprob: -6.406580924987793
    4. ' ' → logprob: -9.031580924987793
    5. '=int' → logprob: -10.906580924987793
    6. ' ,' → logprob: -11.031580924987793
    7. ' =
' → logprob: -12.406580924987793
    8. ',v' → logprob: -12.531580924987793
    9. '   ' → logprob: -13.281580924987793
    10. ' +=' → logprob: -13.406580924987793

Token 117: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005853066686540842
    2. 'ord' → logprob: -5.505853176116943
    3. ' int' → logprob: -6.630853176116943
    4. 's' → logprob: -8.005852699279785
    5. '   ' → logprob: -9.880852699279785
    6. ' ord' → logprob: -10.255852699279785
    7. '1' → logprob: -12.130852699279785
    8. '0' → logprob: -12.630852699279785
    9. 'float' → logprob: -12.630852699279785
    10. ' s' → logprob: -12.755852699279785

Token 118: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007621031254529953
    2. '(' → logprob: -7.250761985778809
    3. 's' → logprob: -9.875761985778809
    4. '(
' → logprob: -14.625761985778809
    5. ' (' → logprob: -16.875762939453125
    6. '('' → logprob: -17.000762939453125
    7. '((' → logprob: -17.125762939453125
    8. '(t' → logprob: -18.125762939453125
    9. ' ' → logprob: -18.500762939453125
    10. '()' → logprob: -18.625762939453125

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.625003814697266
    3. '[v' → logprob: -16.750003814697266
    4. ' [' → logprob: -17.750003814697266
    5. ')' → logprob: -18.375003814697266
    6. '[
' → logprob: -18.500003814697266
    7. 'i' → logprob: -18.625003814697266
    8. '[I' → logprob: -18.625003814697266
    9. '[j' → logprob: -19.000003814697266
    10. ' ' → logprob: -19.750003814697266

Token 120: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0017923936247825623
    2. ']' → logprob: -7.2517924308776855
    3. ''])' → logprob: -7.5017924308776855
    4. ' ])' → logprob: -8.626791954040527
    5. ')' → logprob: -9.126791954040527
    6. '])+' → logprob: -9.251791954040527
    7. '])-' → logprob: -10.376791954040527
    8. '])
' → logprob: -10.626791954040527
    9. '+' → logprob: -10.626791954040527
    10. '"])' → logprob: -11.001791954040527

Token 121: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7320825457572937
    2. '   ' → logprob: -1.1070826053619385
    3. '+' → logprob: -2.3570826053619385
    4. 'if' → logprob: -3.2320826053619385
    5. ' if' → logprob: -3.4820826053619385
    6. ' +' → logprob: -5.607082366943359
    7. '+
' → logprob: -5.732082366943359
    8. '<|end|>' → logprob: -5.982082366943359
    9. ')' → logprob: -6.107082366943359
    10. ' ' → logprob: -6.232082366943359

Token 122: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.2653427720069885
    2. ' v' → logprob: -1.7653427124023438
    3. ' if' → logprob: -3.3903427124023438
    4. '   ' → logprob: -4.265342712402344
    5. 'if' → logprob: -5.515342712402344
    6. ' for' → logprob: -6.140342712402344
    7. ' ' → logprob: -6.390342712402344
    8. '+' → logprob: -6.515342712402344
    9. '	v' → logprob: -6.515342712402344
    10. '  ' → logprob: -7.015342712402344

Token 123: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23253758251667023
    2. '1' → logprob: -1.8575376272201538
    3. ' =' → logprob: -3.4825375080108643
    4. '=' → logprob: -4.482537746429443
    5. ' ' → logprob: -5.232537746429443
    6. '_' → logprob: -6.232537746429443
    7. '0' → logprob: -6.982537746429443
    8. '+' → logprob: -7.607537746429443
    9. '-' → logprob: -9.232537269592285
    10. '.' → logprob: -9.357537269592285

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054935093969106674
    2. '=' → logprob: -2.9299349784851074
    3. ' ' → logprob: -10.429935455322266
    4. '=int' → logprob: -10.804935455322266
    5. ' ' → logprob: -13.679935455322266
    6. 'int' → logprob: -13.929935455322266
    7. ',' → logprob: -15.179935455322266
    8. ')' → logprob: -15.429935455322266
    9. '  ' → logprob: -16.304935455322266
    10. '0' → logprob: -17.054935455322266

Token 125: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38688716292381287
    2. 'int' → logprob: -1.1368871927261353
    3. ' ' → logprob: -11.886887550354004
    4. '   ' → logprob: -13.261887550354004
    5. '0' → logprob: -13.386887550354004
    6. ' v' → logprob: -13.761887550354004
    7. 'v' → logprob: -14.136887550354004
    8. '	int' → logprob: -14.386887550354004
    9. '=int' → logprob: -14.511887550354004
    10. '(int' → logprob: -14.636887550354004

Token 126: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00014180023572407663
    2. '(' → logprob: -8.875142097473145
    3. ' (' → logprob: -14.000142097473145
    4. 's' → logprob: -14.000142097473145
    5. '(
' → logprob: -16.125141143798828
    6. '('' → logprob: -16.500141143798828
    7. '((' → logprob: -16.625141143798828
    8. '("("' → logprob: -18.875141143798828
    9. ' ' → logprob: -19.125141143798828
    10. '   ' → logprob: -19.750141143798828

Token 127: '[i' (ID: 1768)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0008165352046489716
    2. 's' → logprob: -8.000816345214844
    3. ' (' → logprob: -8.375816345214844
    4. '(' → logprob: -8.875816345214844
    5. '[s' → logprob: -9.500816345214844
    6. ')' → logprob: -11.250816345214844
    7. '[' → logprob: -12.500816345214844
    8. '   ' → logprob: -12.625816345214844
    9. ' s' → logprob: -13.000816345214844
    10. ' ' → logprob: -13.000816345214844

Token 128: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0380917489528656
    2. ' +' → logprob: -3.2880916595458984
    3. ' ' → logprob: -10.788091659545898
    4. '])' → logprob: -11.163091659545898
    5. '   ' → logprob: -12.038091659545898
    6. '-' → logprob: -12.163091659545898
    7. '1' → logprob: -13.913091659545898
    8. '+i' → logprob: -14.163091659545898
    9. '+
' → logprob: -14.413091659545898
    10. '  ' → logprob: -14.663091659545898

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.500011444091797
    3. '])' → logprob: -14.000011444091797
    4. '```' → logprob: -15.000011444091797
    5. '   ' → logprob: -16.875011444091797
    6. '`' → logprob: -16.875011444091797
    7. '``' → logprob: -17.000011444091797
    8. ']' → logprob: -17.125011444091797
    9. ')' → logprob: -17.375011444091797
    10. '2' → logprob: -17.875011444091797

Token 130: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002206047298386693
    2. ')' → logprob: -6.252205848693848
    3. '])
' → logprob: -8.252205848693848
    4. ']' → logprob: -11.752205848693848
    5. ')
' → logprob: -12.502205848693848
    6. '))' → logprob: -13.502205848693848
    7. ''])' → logprob: -13.627205848693848
    8. ')])' → logprob: -14.002205848693848
    9. ')]' → logprob: -14.502205848693848
    10. '])

' → logprob: -15.502205848693848

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03176940977573395
    2. ' if' → logprob: -4.281769275665283
    3. '
' → logprob: -5.531769275665283
    4. 'if' → logprob: -5.781769275665283
    5. '<|end|>' → logprob: -6.156769275665283
    6. '    
' → logprob: -6.281769275665283
    7. ' ' → logprob: -6.406769275665283
    8. ')' → logprob: -6.406769275665283
    9. '  ' → logprob: -6.656769275665283
    10. '  
' → logprob: -7.031769275665283

Token 132: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18639986217021942
    2. 'if' → logprob: -2.1863999366760254
    3. ' ' → logprob: -3.4363999366760254
    4. '   ' → logprob: -4.311399936676025
    5. ' 
' → logprob: -5.061399936676025
    6. '
' → logprob: -6.561399936676025
    7. ')' → logprob: -7.061399936676025
    8. '    
' → logprob: -7.061399936676025
    9. '  ' → logprob: -7.811399936676025
    10. '    ' → logprob: -7.811399936676025

Token 133: ' alors' (ID: 17971)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20152103900909424
    2. 'if' → logprob: -1.7015210390090942
    3. ' ' → logprob: -9.576520919799805
    4. '#' → logprob: -11.201520919799805
    5. ' #' → logprob: -11.951520919799805
    6. ' i' → logprob: -12.451520919799805
    7. '   ' → logprob: -12.451520919799805
    8. ' 
' → logprob: -13.201520919799805
    9. ' ' → logprob: -13.326520919799805
    10. 'i' → logprob: -13.701520919799805

Token 134: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7634305953979492
    2. ' if' → logprob: -0.8884305953979492
    3. '    ' → logprob: -3.388430595397949
    4. '   ' → logprob: -3.388430595397949
    5. '<|end|>' → logprob: -3.513430595397949
    6. 'if' → logprob: -4.763430595397949
    7. ',' → logprob: -4.888430595397949
    8. ' ,' → logprob: -6.138430595397949
    9. '  ' → logprob: -6.263430595397949
    10. ' 
' → logprob: -6.888430595397949

Token 135: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01859656162559986
    2. 'if' → logprob: -4.018596649169922
    3. ' ' → logprob: -8.018596649169922
    4. '    ' → logprob: -10.393596649169922
    5. ' ' → logprob: -10.393596649169922
    6. '   ' → logprob: -10.768596649169922
    7. '	if' → logprob: -11.393596649169922
    8. ' 
' → logprob: -11.768596649169922
    9. '  ' → logprob: -12.518596649169922
    10. ' si' → logprob: -12.643596649169922

Token 136: ' la' (ID: 557)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.057092346251010895
    2. 'v' → logprob: -2.9320924282073975
    3. ' (' → logprob: -7.057092189788818
    4. ' s' → logprob: -7.557092189788818
    5. ' ' → logprob: -7.807092189788818
    6. ' abs' → logprob: -8.682092666625977
    7. '(v' → logprob: -9.682092666625977
    8. 's' → logprob: -10.057092666625977
    9. ' b' → logprob: -10.307092666625977
    10. '  ' → logprob: -10.432092666625977

Token 137: ' somme' (ID: 64484)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.539934515953064
    2. 'v' → logprob: -1.789934515953064
    3. ' valeur' → logprob: -2.5399346351623535
    4. ' différence' → logprob: -2.7899346351623535
    5. ' somme' → logprob: -3.1649346351623535
    6. 's' → logprob: -3.6649346351623535
    7. ' s' → logprob: -3.7899346351623535
    8. ' ' → logprob: -5.9149346351623535
    9. ' diff' → logprob: -6.0399346351623535
    10. 'diff' → logprob: -6.1649346351623535

Token 138: ' va' (ID: 3423)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.4440648555755615
    2. ' ==' → logprob: -1.5690648555755615
    3. '(v' → logprob: -1.8190648555755615
    4. '==' → logprob: -2.0690648555755615
    5. '>=' → logprob: -2.0690648555755615
    6. '>' → logprob: -3.5690648555755615
    7. 'v' → logprob: -3.5690648555755615
    8. ' >' → logprob: -4.444065093994141
    9. ' des' → logprob: -4.569065093994141
    10. ' v' → logprob: -4.694065093994141

Token 139: ' dépasser' (ID: 187375)
  Prédit: ' dépasser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépasser' → logprob: -0.11916624009609222
    2. ' au' → logprob: -3.619166135787964
    3. 't' → logprob: -3.869166135787964
    4. 'ud' → logprob: -4.119166374206543
    5. ' ' → logprob: -4.744166374206543
    6. 'nt' → logprob: -5.119166374206543
    7. ' >' → logprob: -5.619166374206543
    8. 'int' → logprob: -5.744166374206543
    9. ' dépass' → logprob: -5.744166374206543
    10. 's' → logprob: -5.869166374206543

Token 140: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7032679915428162
    2. ' ' → logprob: -0.8282679915428162
    3. '10' → logprob: -2.703268051147461
    4. '4' → logprob: -7.578268051147461
    5. '1' → logprob: -8.203268051147461
    6. '6' → logprob: -9.953268051147461
    7. ' a' → logprob: -9.953268051147461
    8. '7' → logprob: -10.078268051147461
    9. '3' → logprob: -10.203268051147461
    10. '   ' → logprob: -10.578268051147461

Token 141: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.324926495552063
    2. '10' → logprob: -1.324926495552063
    3. ' ' → logprob: -4.699926376342773
    4. '4' → logprob: -6.699926376342773
    5. 'a' → logprob: -7.699926376342773
    6. '3' → logprob: -7.949926376342773
    7. '1' → logprob: -8.699926376342773
    8. ' a' → logprob: -9.574926376342773
    9. '   ' → logprob: -10.074926376342773
    10. '5' → logprob: -10.824926376342773

Token 142: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1746715009212494
    2. ' :' → logprob: -2.5496714115142822
    3. ',' → logprob: -3.0496714115142822
    4. '   ' → logprob: -3.6746714115142822
    5. ' if' → logprob: -6.049671649932861
    6. ' ' → logprob: -6.174671649932861
    7. ' ,' → logprob: -6.174671649932861
    8. '  ' → logprob: -7.049671649932861
    9. '    ' → logprob: -7.299671649932861
    10. '<|end|>' → logprob: -8.174671173095703

Token 143: ' on' (ID: 402)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7072810530662537
    2. '    ' → logprob: -1.5822811126708984
    3. '   ' → logprob: -1.9572811126708984
    4. 'b' → logprob: -2.5822811126708984
    5. ' a' → logprob: -3.2072811126708984
    6. ' ' → logprob: -4.332281112670898
    7. 'a' → logprob: -4.582281112670898
    8. '       ' → logprob: -5.332281112670898
    9. ' ' → logprob: -5.457281112670898
    10. ' on' → logprob: -6.082281112670898

Token 144: ' fait' (ID: 7473)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0656293630599976
    2. '    ' → logprob: -1.4406293630599976
    3. '   ' → logprob: -2.315629482269287
    4. ' a' → logprob: -2.940629482269287
    5. 'a' → logprob: -3.565629482269287
    6. ' ' → logprob: -3.565629482269287
    7. ' ajoute' → logprob: -3.565629482269287
    8. ' break' → logprob: -3.940629482269287
    9. ' ' → logprob: -4.190629482269287
    10. 's' → logprob: -4.190629482269287

Token 145: ' un' (ID: 537)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5928757190704346
    2. ' ' → logprob: -1.4678757190704346
    3. 'a' → logprob: -2.4678757190704346
    4. 'b' → logprob: -3.0928757190704346
    5. ' a' → logprob: -3.3428757190704346
    6. '   ' → logprob: -4.0928754806518555
    7. '  ' → logprob: -4.5928754806518555
    8. ' un' → logprob: -5.2178754806518555
    9. ' une' → logprob: -5.7178754806518555
    10. '+' → logprob: -6.4678754806518555

Token 146: ' truc' (ID: 58342)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.4364325702190399
    2. ' ' → logprob: -1.3114326000213623
    3. 'break' → logprob: -2.9364326000213623
    4. '+' → logprob: -5.061432361602783
    5. '  ' → logprob: -5.061432361602783
    6. '   ' → logprob: -5.811432361602783
    7. ' saut' → logprob: -5.811432361602783
    8. ' salto' → logprob: -6.311432361602783
    9. ' espace' → logprob: -6.811432361602783
    10. 's' → logprob: -7.186432361602783

Token 147: ' spécial' (ID: 40397)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6670923233032227
    2. ':' → logprob: -1.0420923233032227
    3. ' :' → logprob: -2.5420923233032227
    4. '    ' → logprob: -3.5420923233032227
    5. ' ' → logprob: -4.417092323303223
    6. ' if' → logprob: -5.542092323303223
    7. ',' → logprob: -5.792092323303223
    8. ' :
' → logprob: -6.417092323303223
    9. '  ' → logprob: -6.667092323303223
    10. '       ' → logprob: -7.042092323303223

Token 148: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21561399102210999
    2. ' :' → logprob: -2.090614080429077
    3. '   ' → logprob: -3.215614080429077
    4. ' ' → logprob: -4.340613842010498
    5. '<|end|>' → logprob: -4.715613842010498
    6. ',' → logprob: -6.090613842010498
    7. '  ' → logprob: -6.215613842010498
    8. ' if' → logprob: -6.590613842010498
    9. ' :
' → logprob: -7.215613842010498
    10. '    ' → logprob: -7.340613842010498

Token 149: 'r' (ID: 81)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6632744669914246
    2. '   ' → logprob: -1.6632745265960693
    3. '    ' → logprob: -2.1632745265960693
    4. ')' → logprob: -2.4132745265960693
    5. ' :' → logprob: -3.4132745265960693
    6. ' if' → logprob: -4.16327428817749
    7. ' ' → logprob: -4.16327428817749
    8. 'if' → logprob: -5.16327428817749
    9. '):' → logprob: -5.41327428817749
    10. '<|end|>' → logprob: -5.66327428817749

Token 150: 'è' (ID: 957)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24720579385757446
    2. ')' → logprob: -2.3722057342529297
    3. 'a' → logprob: -2.8722057342529297
    4. 'else' → logprob: -3.6222057342529297
    5. 'u' → logprob: -4.74720573425293
    6. 'elif' → logprob: -4.74720573425293
    7. 'eturn' → logprob: -5.99720573425293
    8. 'i' → logprob: -6.12220573425293
    9. 'emain' → logprob: -6.24720573425293
    10. 'ight' → logprob: -6.37220573425293

Token 151: 'gle' (ID: 6024)
  Prédit: 'gle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gle' → logprob: -0.5185818076133728
    2. 'le' → logprob: -1.5185818672180176
    3. 'lement' → logprob: -3.0185818672180176
    4. 'les' → logprob: -4.268581867218018
    5. 'ne' → logprob: -4.393581867218018
    6. 'e' → logprob: -4.518581867218018
    7. 'f' → logprob: -4.893581867218018
    8. 'ponse' → logprob: -4.893581867218018
    9. '#' → logprob: -4.893581867218018
    10. 'è' → logprob: -5.268581867218018

Token 152: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' peu' (ID: 9235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17866121232509613
    2. 'if' → logprob: -2.5536611080169678
    3. 'e' → logprob: -3.3036611080169678
    4. ' if' → logprob: -4.428661346435547
    5. ' )' → logprob: -4.553661346435547
    6. '')' → logprob: -4.803661346435547
    7. '   ' → logprob: -5.928661346435547
    8. 'u' → logprob: -6.803661346435547
    9. '=' → logprob: -6.928661346435547
    10. 'elif' → logprob: -7.053661346435547

Token 154: ' che' (ID: 1378)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4867822825908661
    2. ')' → logprob: -2.3617823123931885
    3. ' bizarre' → logprob: -2.3617823123931885
    4. ' différente' → logprob: -3.2367823123931885
    5. ' b' → logprob: -3.9867823123931885
    6. 'diff' → logprob: -4.111782073974609
    7. ' spéciale' → logprob: -4.111782073974609
    8. ' étrange' → logprob: -4.361782073974609
    9. ' particulière' → logprob: -4.736782073974609
    10. ' ' → logprob: -4.736782073974609

Token 155: 'lou' (ID: 133128)
  Prédit: 'lou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lou' → logprob: -0.05277225002646446
    2. 'l' → logprob: -3.052772283554077
    3. 'v' → logprob: -6.677772045135498
    4. 'z' → logprob: -7.177772045135498
    5. 'val' → logprob: -7.177772045135498
    6. 'at' → logprob: -7.802772045135498
    7. 't' → logprob: -7.927772045135498
    8. 'b' → logprob: -8.927772521972656
    9. 'vre' → logprob: -9.302772521972656
    10. 'vel' → logprob: -9.552772521972656

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16815991699695587
    2. '):' → logprob: -2.1681599617004395
    3. ':' → logprob: -3.5431599617004395
    4. '   ' → logprob: -4.9181599617004395
    5. ' )' → logprob: -6.0431599617004395
    6. '):
' → logprob: -7.7931599617004395
    7. ',' → logprob: -7.7931599617004395
    8. ' :' → logprob: -8.043159484863281
    9. ' ):' → logprob: -8.168159484863281
    10. ' ' → logprob: -9.543159484863281

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39850181341171265
    2. ':' → logprob: -1.5235018730163574
    3. '<|end|>' → logprob: -2.8985018730163574
    4. ' ' → logprob: -3.7735018730163574
    5. ' :' → logprob: -4.648501873016357
    6. ',' → logprob: -5.023501873016357
    7. '  ' → logprob: -5.398501873016357
    8. ' ,' → logprob: -6.398501873016357
    9. '    ' → logprob: -6.398501873016357
    10. ' 
' → logprob: -6.523501873016357

Token 158: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4422304332256317
    2. ' if' → logprob: -1.692230463027954
    3. ' ' → logprob: -2.317230463027954
    4. 'if' (adapté à ' if') → logprob: -3.067230463027954
    5. '  ' → logprob: -4.817230224609375
    6. '    ' → logprob: -5.567230224609375
    7. ' 
' → logprob: -5.567230224609375
    8. '<|end|>' → logprob: -5.567230224609375
    9. ':' → logprob: -6.067230224609375
    10. '    
' → logprob: -6.817230224609375

Token 159: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.0037940195761621
    2. ' ' → logprob: -6.378794193267822
    3. ' (' → logprob: -6.503794193267822
    4. 'v' → logprob: -7.503794193267822
    5. ' ' → logprob: -10.378793716430664
    6. '(v' → logprob: -12.003793716430664
    7. '(' → logprob: -13.253793716430664
    8. '	v' → logprob: -13.878793716430664
    9. '  ' → logprob: -14.378793716430664
    10. '   ' → logprob: -15.628793716430664

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.0625
    3. ' ' → logprob: -16.5625
    4. 'a' → logprob: -17.25
    5. '2' → logprob: -17.5625
    6. '' → logprob: -17.75
    7. ')' → logprob: -18.0
    8. '１' → logprob: -18.0625
    9. 's' → logprob: -18.375
    10. '[' → logprob: -18.375

Token 161: '+b' (ID: 76609)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602315455675125
    2. '+' → logprob: -1.910231590270996
    3. ' ' → logprob: -12.410231590270996
    4. ' ' → logprob: -13.535231590270996
    5. ' plus' → logprob: -13.660231590270996
    6. '>' → logprob: -15.785231590270996
    7. '[' → logprob: -16.16023063659668
    8. ' +
' → logprob: -16.66023063659668
    9. '   ' → logprob: -16.78523063659668
    10. '＋' → logprob: -16.91023063659668

Token 162: ' >=' (ID: 5064)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08919801563024521
    2. ' +' → logprob: -2.464198112487793
    3. '>' → logprob: -8.464198112487793
    4. ' >' → logprob: -11.214198112487793
    5. '+c' → logprob: -12.339198112487793
    6. '+s' → logprob: -12.339198112487793
    7. '+a' → logprob: -12.589198112487793
    8. '>=' → logprob: -12.714198112487793
    9. '+i' → logprob: -12.839198112487793
    10. '+b' → logprob: -12.839198112487793

Token 163: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.2549501061439514
    2. '6' → logprob: -1.5049500465393066
    3. ' ' → logprob: -5.879950046539307
    4. '4' → logprob: -8.879950523376465
    5. '5' → logprob: -10.004950523376465
    6. '3' → logprob: -11.629950523376465
    7. '2' → logprob: -11.879950523376465
    8. '10' → logprob: -12.379950523376465
    9. '1' → logprob: -12.442450523376465
    10. '(' → logprob: -12.442450523376465

Token 164: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.28133904933929443
    2. '6' → logprob: -1.4063390493392944
    3. '5' → logprob: -9.406338691711426
    4. ' ' → logprob: -9.531338691711426
    5. '4' → logprob: -10.406338691711426
    6. '3' → logprob: -14.406338691711426
    7. '2' → logprob: -14.656338691711426
    8. '10' → logprob: -14.656338691711426
    9. '```' → logprob: -15.218838691711426
    10. '(' → logprob: -15.531338691711426

Token 165: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003180921310558915
    2. ':
' → logprob: -6.003180980682373
    3. ' :' → logprob: -7.753180980682373
    4. ' and' → logprob: -8.503180503845215
    5. ' or' → logprob: -10.128180503845215
    6. ' :
' → logprob: -11.503180503845215
    7. '   ' → logprob: -12.128180503845215
    8. 'and' → logprob: -12.628180503845215
    9. '):' → logprob: -12.753180503845215
    10. ' ' → logprob: -13.128180503845215

Token 166: ' (' (ID: 350)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4318390488624573
    2. 'v' → logprob: -1.0568389892578125
    3. '(v' → logprob: -6.4318389892578125
    4. ' (' → logprob: -7.4318389892578125
    5. ' s' → logprob: -8.306838989257812
    6. ' ' → logprob: -8.556838989257812
    7. 's' → logprob: -8.556838989257812
    8. '   ' → logprob: -8.681838989257812
    9. '  ' → logprob: -10.681838989257812
    10. ' ' → logprob: -10.931838989257812

Token 167: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6975713968276978
    2. ' v' → logprob: -0.6975713968276978
    3. '(v' → logprob: -6.572571277618408
    4. ' s' → logprob: -7.072571277618408
    5. ' (' → logprob: -7.197571277618408
    6. 's' → logprob: -7.322571277618408
    7. ' i' → logprob: -8.822571754455566
    8. 'i' → logprob: -8.947571754455566
    9. ' ' → logprob: -9.072571754455566
    10. ' b' → logprob: -9.197571754455566

Token 168: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5761147141456604
    2. '1' → logprob: -0.8261147141456604
    3. ')' → logprob: -10.076114654541016
    4. '+' → logprob: -10.763614654541016
    5. ' ' → logprob: -11.326114654541016
    6. ' +' → logprob: -11.763614654541016
    7. 'a' → logprob: -11.951114654541016
    8. 's' → logprob: -11.951114654541016
    9. 'alue' → logprob: -12.013614654541016
    10. '[' → logprob: -12.326114654541016

Token 169: '+b' (ID: 76609)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6244080662727356
    2. '+' → logprob: -0.8744080662727356
    3. '+b' → logprob: -3.124408006668091
    4. '<|end|>' → logprob: -6.99940824508667
    5. ' ' → logprob: -7.12440824508667
    6. 'b' → logprob: -7.24940824508667
    7. '+s' → logprob: -9.374407768249512
    8. ' +
' → logprob: -9.374407768249512
    9. 'v' → logprob: -9.499407768249512
    10. '
' → logprob: -9.499407768249512

Token 170: ' >=' (ID: 5064)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9335138201713562
    2. '+' → logprob: -1.183513879776001
    3. '==' → logprob: -2.058513879776001
    4. ' ==' → logprob: -2.058513879776001
    5. ')' → logprob: -3.683513879776001
    6. '>' → logprob: -4.683513641357422
    7. ')+' → logprob: -6.058513641357422
    8. ' >' → logprob: -6.058513641357422
    9. '>=' → logprob: -6.308513641357422
    10. ' >=' → logprob: -6.433513641357422

Token 171: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5574691891670227
    2. '5' → logprob: -1.057469129562378
    3. '4' → logprob: -2.932469129562378
    4. '7' → logprob: -4.432469367980957
    5. '6' → logprob: -4.932469367980957
    6. '3' → logprob: -5.557469367980957
    7. '1' → logprob: -5.682469367980957
    8. '2' → logprob: -8.682469367980957
    9. ' v' → logprob: -10.307469367980957
    10. '10' → logprob: -10.432469367980957

Token 172: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5797129273414612
    2. '4' → logprob: -1.0797128677368164
    3. '3' → logprob: -2.9547128677368164
    4. ' ' → logprob: -3.4547128677368164
    5. '1' → logprob: -5.204712867736816
    6. '2' → logprob: -5.579712867736816
    7. '7' → logprob: -5.579712867736816
    8. '6' → logprob: -5.829712867736816
    9. '10' → logprob: -8.454712867736816
    10. '8' → logprob: -9.204712867736816

Token 173: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03442735597491264
    2. 'and' → logprob: -3.4094274044036865
    3. ')' → logprob: -7.784427165985107
    4. ' ' → logprob: -8.284427642822266
    5. ' )' → logprob: -9.534427642822266
    6. '   ' → logprob: -11.409427642822266
    7. ' or' → logprob: -12.159427642822266
    8. '    ' → logprob: -12.534427642822266
    9. '<|end|>' → logprob: -12.659427642822266
    10. '	and' → logprob: -13.159427642822266

Token 174: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20456334948539734
    2. ' v' → logprob: -1.7045633792877197
    3. '   ' → logprob: -7.329563140869141
    4. 's' → logprob: -7.329563140869141
    5. '(v' → logprob: -7.579563140869141
    6. ' s' → logprob: -7.829563140869141
    7. ' ' → logprob: -8.20456314086914
    8. '  ' → logprob: -8.82956314086914
    9. ' (' → logprob: -9.32956314086914
    10. 'i' → logprob: -9.32956314086914

Token 175: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005495758377946913
    2. '1' → logprob: -8.00054931640625
    3. 's' → logprob: -9.00054931640625
    4. ' ' → logprob: -10.37554931640625
    5. '+' → logprob: -11.62554931640625
    6. ' s' → logprob: -11.62554931640625
    7. '   ' → logprob: -12.25054931640625
    8. '==' → logprob: -12.68804931640625
    9. '[' → logprob: -12.87554931640625
    10. 'v' → logprob: -12.87554931640625

Token 176: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.243801474571228
    2. '==' → logprob: -1.493801474571228
    3. '>=' → logprob: -1.493801474571228
    4. ' ==' → logprob: -1.743801474571228
    5. '+' → logprob: -3.3688015937805176
    6. ' <=' → logprob: -4.368801593780518
    7. '<=' → logprob: -4.493801593780518
    8. '>' → logprob: -4.493801593780518
    9. ' >' → logprob: -4.868801593780518
    10. ' +' → logprob: -5.493801593780518

Token 177: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.605167031288147
    2. '5' → logprob: -1.230167031288147
    3. '4' → logprob: -2.2301669120788574
    4. '6' → logprob: -3.8551669120788574
    5. '3' → logprob: -4.480166912078857
    6. '2' → logprob: -4.730166912078857
    7. '1' → logprob: -4.855166912078857
    8. '7' → logprob: -5.480166912078857
    9. '8' → logprob: -7.355166912078857
    10. '9' → logprob: -8.605167388916016

Token 178: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08936776965856552
    2. '1' → logprob: -3.5893678665161133
    3. '4' → logprob: -3.9643678665161133
    4. '6' → logprob: -4.339367866516113
    5. '2' → logprob: -4.589367866516113
    6. '3' → logprob: -5.089367866516113
    7. '7' → logprob: -5.089367866516113
    8. '8' → logprob: -6.089367866516113
    9. '9' → logprob: -7.464367866516113
    10. ' ' → logprob: -8.464367866516113

Token 179: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013947462663054466
    2. ')' → logprob: -4.513947486877441
    3. ' ):' → logprob: -6.888947486877441
    4. '):
' → logprob: -7.013947486877441
    5. ':' → logprob: -7.263947486877441
    6. ' and' → logprob: -8.388947486877441
    7. ' )' → logprob: -10.763947486877441
    8. 'and' → logprob: -11.513947486877441
    9. '   ' → logprob: -12.013947486877441
    10. '):
' → logprob: -12.388947486877441

Token 180: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9066154956817627
    2. '       ' → logprob: -0.9066154956817627
    3. ':' → logprob: -2.1566154956817627
    4. '
' → logprob: -3.1566154956817627
    5. ':
' → logprob: -4.656615257263184
    6. 'b' → logprob: -4.781615257263184
    7. ' b' → logprob: -5.531615257263184
    8. '<|end|>' → logprob: -6.156615257263184
    9. '	b' → logprob: -6.406615257263184
    10. '    
' → logprob: -6.781615257263184

Token 181: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4318481981754303
    2. 'b' → logprob: -1.931848168373108
    3. ' b' → logprob: -1.931848168373108
    4. 'a' → logprob: -3.8068482875823975
    5. '	b' → logprob: -4.431848049163818
    6. '
' → logprob: -4.431848049163818
    7. ' a' → logprob: -4.681848049163818
    8. '	a' → logprob: -6.681848049163818
    9. '    
' → logprob: -6.806848049163818
    10. '       ' → logprob: -6.931848049163818

Token 182: ' une' (ID: 2463)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7092263102531433
    2. ' b' → logprob: -1.459226369857788
    3. 'a' → logprob: -1.584226369857788
    4. ' a' → logprob: -2.709226369857788
    5. '   ' → logprob: -6.709226131439209
    6. ' if' → logprob: -6.709226131439209
    7. 'if' → logprob: -7.334226131439209
    8. ' ' → logprob: -8.459226608276367
    9. 'v' → logprob: -8.834226608276367
    10. ' v' → logprob: -9.084226608276367

Token 183: ' esp' (ID: 7461)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.9321119785308838
    2. 'b' → logprob: -2.057111978530884
    3. '   ' → logprob: -2.057111978530884
    4. ' b' → logprob: -2.432111978530884
    5. ' =' → logprob: -2.557111978530884
    6. ' ' → logprob: -2.682111978530884
    7. '
' → logprob: -2.682111978530884
    8. '    
' → logprob: -3.557111978530884
    9. ' fois' → logprob: -3.557111978530884
    10. ' 
' → logprob: -3.807111978530884

Token 184: 'èce' (ID: 89498)
  Prédit: 'èce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èce' → logprob: -0.24991899728775024
    2. 'ce' → logprob: -1.6249189376831055
    3. 'ace' → logprob: -3.9999189376831055
    4. 'ère' → logprob: -6.8749189376831055
    5. 'r' → logprob: -7.1249189376831055
    6. 'è' → logprob: -7.6249189376831055
    7. 'ece' → logprob: -7.8749189376831055
    8. 'rance' → logprob: -8.124918937683105
    9. 'ée' → logprob: -8.374918937683105
    10. '`' → logprob: -8.374918937683105

Token 185: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.058973461389541626
    2. 'de' → logprob: -3.308973550796509
    3. ' d' → logprob: -4.30897331237793
    4. 'd' → logprob: -5.18397331237793
    5. '   ' → logprob: -7.30897331237793
    6. ' ' → logprob: -8.43397331237793
    7. '_de' → logprob: -8.80897331237793
    8. '  ' → logprob: -9.18397331237793
    9. '=' → logprob: -9.55897331237793
    10. '#' → logprob: -9.68397331237793

Token 186: ' cap' (ID: 2328)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2235246896743774
    2. ' b' → logprob: -1.8485246896743774
    3. '   ' → logprob: -1.8485246896743774
    4. ' ' → logprob: -2.723524570465088
    5. '
' → logprob: -3.098524570465088
    6. 'a' → logprob: -3.598524570465088
    7. ' break' → logprob: -3.598524570465088
    8. ' bonus' → logprob: -3.598524570465088
    9. ' a' → logprob: -3.723524570465088
    10. 's' → logprob: -4.598524570465088

Token 187: ' bizarre' (ID: 61150)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.673299252986908
    2. ' b' → logprob: -1.4232993125915527
    3. '           ' → logprob: -1.6732993125915527
    4. '       ' → logprob: -3.1732993125915527
    5. 'a' → logprob: -5.173299312591553
    6. '   ' → logprob: -5.673299312591553
    7. 'v' → logprob: -6.298299312591553
    8. '          ' → logprob: -6.548299312591553
    9. 's' → logprob: -6.798299312591553
    10. '        ' → logprob: -7.923299312591553

Token 188: ' là' (ID: 8052)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.658436119556427
    2. '   ' → logprob: -2.2834360599517822
    3. ':' → logprob: -2.4084360599517822
    4. ':
' → logprob: -2.6584360599517822
    5. 'b' → logprob: -2.9084360599517822
    6. ' :
' → logprob: -2.9084360599517822
    7. ' :' → logprob: -3.5334360599517822
    8. ',' → logprob: -3.7834360599517822
    9. ' ,' → logprob: -4.158436298370361
    10. '       ' → logprob: -4.283436298370361

Token 189: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0139483213424683
    2. ' :
' → logprob: -1.6389483213424683
    3. ':' → logprob: -2.388948440551758
    4. ' :' → logprob: -2.638948440551758
    5. '           ' → logprob: -2.763948440551758
    6. ':
' → logprob: -3.013948440551758
    7. '
' → logprob: -3.138948440551758
    8. '       ' → logprob: -3.138948440551758
    9. 'b' → logprob: -3.638948440551758
    10. ' ' → logprob: -4.388948440551758

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6071105599403381
    2. '           ' → logprob: -1.3571105003356934
    3. '   ' → logprob: -2.9821105003356934
    4. ':' → logprob: -3.3571105003356934
    5. ' :' → logprob: -3.4821105003356934
    6. 'b' → logprob: -4.232110500335693
    7. ' ' → logprob: -4.357110500335693
    8. ' b' → logprob: -5.107110500335693
    9. ' :
' → logprob: -5.107110500335693
    10. ',' → logprob: -5.232110500335693

Token 191: ' a' (ID: 261)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5418959856033325
    2. 'b' → logprob: -1.0418959856033325
    3. 'a' (adapté à ' a') → logprob: -3.416895866394043
    4. ' a' → logprob: -3.541895866394043
    5. '   ' → logprob: -5.791895866394043
    6. '       ' → logprob: -8.791895866394043
    7. ' if' → logprob: -9.166895866394043
    8. ' ' → logprob: -9.166895866394043
    9. '	b' → logprob: -9.291895866394043
    10. '    ' → logprob: -9.416895866394043

Token 192: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1134081557393074
    2. '+=' → logprob: -2.238408088684082
    3. '=' → logprob: -8.238408088684082
    4. ' =' → logprob: -8.363408088684082
    5. '+' → logprob: -9.863408088684082
    6. ' -=' → logprob: -11.113408088684082
    7. ' ' → logprob: -11.488408088684082
    8. '   ' → logprob: -12.988408088684082
    9. '	' → logprob: -13.363408088684082
    10. ']+=' → logprob: -13.363408088684082

Token 193: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5181103944778442
    2. '6' → logprob: -1.5181103944778442
    3. ' a' → logprob: -2.6431102752685547
    4. ' ' → logprob: -2.7681102752685547
    5. '7' → logprob: -3.8931102752685547
    6. '0' → logprob: -4.393110275268555
    7. '5' → logprob: -6.018110275268555
    8. '10' → logprob: -6.143110275268555
    9. 'v' → logprob: -6.268110275268555
    10. '1' → logprob: -6.643110275268555

Token 194: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5233224630355835
    2. ' +' → logprob: -0.8983224630355835
    3. ' ' → logprob: -9.523322105407715
    4. ' -' → logprob: -10.273322105407715
    5. '+b' → logprob: -10.398322105407715
    6. '-' → logprob: -11.023322105407715
    7. '+a' → logprob: -11.773322105407715
    8. ' plus' → logprob: -12.023322105407715
    9. 'a' → logprob: -12.648322105407715
    10. '+(' → logprob: -12.898322105407715

Token 195: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14045272767543793
    2. ' ' → logprob: -3.2654526233673096
    3. 'v' → logprob: -3.3904526233673096
    4. '6' → logprob: -3.7654526233673096
    5. '(' → logprob: -4.640452861785889
    6. '(v' → logprob: -5.015452861785889
    7. '7' → logprob: -5.390452861785889
    8. ' v' → logprob: -5.765452861785889
    9. ' (' → logprob: -6.015452861785889
    10. '2' → logprob: -6.140452861785889

Token 196: '10' (ID: 702)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7117355465888977
    2. '1' → logprob: -1.086735486984253
    3. '6' → logprob: -2.836735486984253
    4. '7' → logprob: -3.586735486984253
    5. '(' → logprob: -3.711735486984253
    6. '(v' → logprob: -3.711735486984253
    7. '0' → logprob: -3.961735486984253
    8. '10' → logprob: -5.336735725402832
    9. '9' → logprob: -5.586735725402832
    10. '4' → logprob: -6.336735725402832

Token 197: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3393966257572174
    2. '-' → logprob: -1.339396595954895
    3. '-v' → logprob: -3.7143967151641846
    4. '-(' → logprob: -6.9643964767456055
    5. ')' → logprob: -8.089396476745605
    6. ' -(' → logprob: -9.964396476745605
    7. ')-(' → logprob: -10.089396476745605
    8. ' ' → logprob: -10.339396476745605
    9. 'v' → logprob: -11.589396476745605
    10. '   ' → logprob: -11.714396476745605

Token 198: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0952792763710022
    2. 'v' → logprob: -2.8452792167663574
    3. ' (' → logprob: -3.4702792167663574
    4. ' v' → logprob: -6.595279216766357
    5. '(' → logprob: -8.470279693603516
    6. '(s' → logprob: -10.845279693603516
    7. '   ' → logprob: -11.470279693603516
    8. ' ' → logprob: -11.470279693603516
    9. '(int' → logprob: -12.345279693603516
    10. '	v' → logprob: -12.470279693603516

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.625000953674316
    3. '2' → logprob: -16.375
    4. ')' → logprob: -16.875
    5. '[i' → logprob: -16.875
    6. '[b' → logprob: -17.375
    7. '[u' → logprob: -17.625
    8. 'b' → logprob: -17.8125
    9. '[v' → logprob: -18.125
    10. ' ' → logprob: -18.1875

Token 200: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47096148133277893
    2. '-' → logprob: -1.5959614515304565
    3. ')' → logprob: -1.9709614515304565
    4. '-b' → logprob: -3.470961570739746
    5. ')-' → logprob: -6.970961570739746
    6. ' )' → logprob: -7.595961570739746
    7. '+b' → logprob: -7.845961570739746
    8. ')b' → logprob: -8.470961570739746
    9. '+' → logprob: -8.970961570739746
    10. ')+' → logprob: -9.095961570739746

Token 201: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007619756739586592
    2. ' b' → logprob: -4.882619857788086
    3. '1' → logprob: -12.882619857788086
    4. '-b' → logprob: -12.882619857788086
    5. ')b' → logprob: -12.882619857788086
    6. '	b' → logprob: -13.507619857788086
    7. ' ' → logprob: -13.632619857788086
    8. '+b' → logprob: -14.257619857788086
    9. ' -' → logprob: -14.382619857788086
    10. ')' → logprob: -14.382619857788086

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18364089727401733
    2. '-' → logprob: -2.683640956878662
    3. ' -' → logprob: -2.808640956878662
    4. ')
' → logprob: -3.433640956878662
    5. ' )' → logprob: -5.183640956878662
    6. ' )
' → logprob: -7.308640956878662
    7. '+' → logprob: -8.558640480041504
    8. ' +' → logprob: -9.058640480041504
    9. ')+' → logprob: -9.058640480041504
    10. ')
' → logprob: -9.808640480041504

Token 203: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6738963723182678
    2. '       ' → logprob: -1.173896312713623
    3. 'b' → logprob: -2.173896312713623
    4. '   ' → logprob: -3.173896312713623
    5. '        
' → logprob: -5.173896312713623
    6. ' b' → logprob: -5.298896312713623
    7. '    
' → logprob: -5.423896312713623
    8. '	b' → logprob: -5.673896312713623
    9. '
' → logprob: -5.798896312713623
    10. '           ' → logprob: -7.173896312713623

Token 204: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.5400235652923584
    2. '1' → logprob: -0.9150235652923584
    3. '       ' → logprob: -4.5400238037109375
    4. '   ' → logprob: -5.5400238037109375
    5. '           ' → logprob: -6.9150238037109375
    6. '-' → logprob: -8.415023803710938
    7. 'a' → logprob: -8.790023803710938
    8. '+' → logprob: -9.040023803710938
    9. ' b' → logprob: -9.415023803710938
    10. '0' → logprob: -9.540023803710938

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005300519522279501
    2. ' =' → logprob: -5.255300521850586
    3. '+=' → logprob: -9.755300521850586
    4. '1' → logprob: -12.130300521850586
    5. ' +=' → logprob: -13.380300521850586
    6. '=-' → logprob: -14.380300521850586
    7. '+' → logprob: -14.755300521850586
    8. ' ' → logprob: -15.505300521850586
    9. '=
' → logprob: -16.255300521850586
    10. '＝' → logprob: -16.380300521850586

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033039047848433256
    2. '-' → logprob: -6.0033040046691895
    3. ' ' → logprob: -7.6283040046691895
    4. '0' → logprob: -8.378303527832031
    5. ' -' → logprob: -10.003303527832031
    6. '2' → logprob: -10.378303527832031
    7. '4' → logprob: -10.753303527832031
    8. '   ' → logprob: -12.378303527832031
    9. '  ' → logprob: -13.003303527832031
    10. '3' → logprob: -13.253303527832031

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0061388881877064705
    2. '-' → logprob: -5.256138801574707
    3. '0' → logprob: -7.631138801574707
    4. '4' → logprob: -8.506138801574707
    5. '2' → logprob: -9.131138801574707
    6. ' -' → logprob: -10.131138801574707
    7. ' ' → logprob: -10.131138801574707
    8. '3' → logprob: -12.006138801574707
    9. '6' → logprob: -12.131138801574707
    10. '5' → logprob: -12.881138801574707

Token 208: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02574324980378151
    2. ' else' → logprob: -4.40074348449707
    3. '    
' → logprob: -5.15074348449707
    4. 'else' → logprob: -5.90074348449707
    5. '
' → logprob: -6.02574348449707
    6. '  
' → logprob: -7.15074348449707
    7. '   
' → logprob: -7.27574348449707
    8. ' 
' → logprob: -7.77574348449707
    9. '  ' → logprob: -9.27574348449707
    10. ' ' → logprob: -9.90074348449707

Token 209: '   ' (ID: 271)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6274974942207336
    2. '   ' → logprob: -0.8774974942207336
    3. 'else' → logprob: -3.002497434616089
    4. '    
' → logprob: -8.127497673034668
    5. '	else' → logprob: -8.752497673034668
    6. ' elif' → logprob: -10.752497673034668
    7. ' ' → logprob: -10.752497673034668
    8. ' 
' → logprob: -10.752497673034668
    9. ')' → logprob: -11.627497673034668
    10. '
' → logprob: -11.877497673034668

Token 210: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.45316505432128906
    2. '   ' → logprob: -1.703165054321289
    3. ' else' → logprob: -1.703165054321289
    4. '	else' → logprob: -8.703165054321289
    5. '    
' → logprob: -12.953165054321289
    6. '  ' → logprob: -13.578165054321289
    7. ' ' → logprob: -13.828165054321289
    8. 'elif' → logprob: -14.328165054321289
    9. '_else' → logprob: -14.453165054321289
    10. ':' → logprob: -14.453165054321289

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0493498332798481
    2. ':
' → logprob: -3.049349784851074
    3. '       ' → logprob: -7.924349784851074
    4. '   ' → logprob: -8.424349784851074
    5. ' :
' → logprob: -9.299349784851074
    6. ' :' → logprob: -9.674349784851074
    7. '    ' → logprob: -11.299349784851074
    8. '):
' → logprob: -12.924349784851074
    9. ':

' → logprob: -13.549349784851074
    10. ':
' → logprob: -13.799349784851074

Token 212: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3106723725795746
    2. '       ' → logprob: -1.560672402381897
    3. '   ' → logprob: -2.9356722831726074
    4. 'b' → logprob: -5.810672283172607
    5. ' a' → logprob: -7.435672283172607
    6. '    ' → logprob: -9.435672760009766
    7. '  ' → logprob: -10.060672760009766
    8. '      ' → logprob: -10.060672760009766
    9. '     ' → logprob: -10.060672760009766
    10. '        
' → logprob: -10.185672760009766

Token 213: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.028398049995303154
    2. ' a' → logprob: -3.653398036956787
    3. '   ' → logprob: -6.278398036956787
    4. '	a' → logprob: -9.153398513793945
    5. ' ' → logprob: -10.403398513793945
    6. '       ' → logprob: -10.653398513793945
    7. 'b' → logprob: -10.778398513793945
    8. '    ' → logprob: -10.903398513793945
    9. '  ' → logprob: -11.778398513793945
    10. ' b' → logprob: -12.403398513793945

Token 214: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2621488869190216
    2. ' +=' → logprob: -1.7621488571166992
    3. '=' → logprob: -2.887148857116699
    4. '+=' → logprob: -5.762148857116699
    5. ' ' → logprob: -10.7621488571167
    6. '+' → logprob: -11.2621488571167
    7. 'a' → logprob: -11.8871488571167
    8. '   ' → logprob: -12.6371488571167
    9. '    ' → logprob: -13.5121488571167
    10. ' +' → logprob: -14.2621488571167

Token 215: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0009370702900923789
    2. ' v' → logprob: -7.000936985015869
    3. '(v' → logprob: -10.875937461853027
    4. '   ' → logprob: -12.750937461853027
    5. '(' → logprob: -13.375937461853027
    6. '	v' → logprob: -13.875937461853027
    7. ' ' → logprob: -14.750937461853027
    8. ' (' → logprob: -15.375937461853027
    9. '1' → logprob: -15.375937461853027
    10. '  ' → logprob: -15.750937461853027

Token 216: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007133854669518769
    2. ' v' → logprob: -7.250713348388672
    3. '   ' → logprob: -13.250713348388672
    4. '	v' → logprob: -13.875713348388672
    5. '(v' → logprob: -15.375713348388672
    6. '  ' → logprob: -16.125713348388672
    7. ' ' → logprob: -16.125713348388672
    8. ')v' → logprob: -16.125713348388672
    9. '    ' → logprob: -16.375713348388672
    10. 'int' → logprob: -16.500713348388672

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.991464786347933e-05
    2. ' ' → logprob: -10.000060081481934
    3. ' v' → logprob: -12.250060081481934
    4. 'v' → logprob: -13.000060081481934
    5. '   ' → logprob: -13.375060081481934
    6. '2' → logprob: -13.500060081481934
    7. 'space' → logprob: -14.125060081481934
    8. 'b' → logprob: -14.250060081481934
    9. '_' → logprob: -14.625060081481934
    10. 'al' → logprob: -14.875060081481934

Token 218: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5850343108177185
    2. ' +' → logprob: -0.8350343108177185
    3. '+b' → logprob: -4.710034370422363
    4. ')' → logprob: -10.210034370422363
    5. ')+' → logprob: -12.210034370422363
    6. ' ' → logprob: -12.835034370422363
    7. '   ' → logprob: -13.960034370422363
    8. 'b' → logprob: -14.335034370422363
    9. ' ' → logprob: -14.335034370422363
    10. '+
' → logprob: -14.835034370422363

Token 219: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750484973192215
    2. ' b' → logprob: -3.5297505855560303
    3. ')b' → logprob: -18.02975082397461
    4. ' ' → logprob: -18.27975082397461
    5. '	b' → logprob: -18.90475082397461
    6. ')' → logprob: -20.02975082397461
    7. '   ' → logprob: -21.40475082397461
    8. '
' → logprob: -21.40475082397461
    9. '(b' → logprob: -21.65475082397461
    10. '+b' → logprob: -21.90475082397461

Token 220: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03947405517101288
    2. ')' → logprob: -3.2894740104675293
    3. '       ' → logprob: -7.539474010467529
    4. '   ' → logprob: -8.289474487304688
    5. ' )
' → logprob: -8.289474487304688
    6. '
' → logprob: -8.539474487304688
    7. ')
' → logprob: -8.789474487304688
    8. ')b' → logprob: -11.039474487304688
    9. 'b' → logprob: -11.539474487304688
    10. ' )' → logprob: -12.039474487304688

Token 221: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31225478649139404
    2. '   ' → logprob: -1.812254786491394
    3. '       ' → logprob: -2.3122549057006836
    4. ' b' → logprob: -5.437254905700684
    5. '	b' → logprob: -6.562254905700684
    6. '	' → logprob: -10.562254905700684
    7. '     ' → logprob: -11.062254905700684
    8. '    ' → logprob: -11.187254905700684
    9. ' ' → logprob: -11.562254905700684
    10. '	   ' → logprob: -11.562254905700684

Token 222: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.037941183894872665
    2. ' b' → logprob: -3.7879412174224854
    3. '   ' → logprob: -4.412940979003906
    4. '       ' → logprob: -6.037940979003906
    5. '	b' → logprob: -10.162940979003906
    6. '           ' → logprob: -10.912940979003906
    7. ' ' → logprob: -11.662940979003906
    8. '    ' → logprob: -12.162940979003906
    9. '  ' → logprob: -12.412940979003906
    10. '     ' → logprob: -12.787940979003906

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615161292254925
    2. ' =' → logprob: -4.758615016937256
    3. '0' → logprob: -14.633615493774414
    4. ' ' → logprob: -16.508615493774414
    5. '=
' → logprob: -17.383615493774414
    6. '=False' → logprob: -18.008615493774414
    7. '   ' → logprob: -19.008615493774414
    8. '<|end|>' → logprob: -19.133615493774414
    9. '＝' → logprob: -19.633615493774414
    10. '=

' → logprob: -20.133615493774414

Token 224: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.50004005432129
    4. '۰' → logprob: -18.81254005432129
    5. '00' → logprob: -19.12504005432129
    6. '  ' → logprob: -19.25004005432129
    7. '000' → logprob: -19.62504005432129
    8. '	' → logprob: -20.37504005432129
    9. ' ' → logprob: -20.37504005432129
    10. '<|end|>' → logprob: -20.43754005432129

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.375006675720215
    4. '00' → logprob: -17.5625057220459
    5. '۰' → logprob: -17.6250057220459
    6. '000' → logprob: -17.9375057220459
    7. '  ' → logprob: -18.5625057220459
    8. '       ' → logprob: -18.8750057220459
    9. '```' → logprob: -18.8750057220459
    10. '=' → logprob: -19.3125057220459

Token 226: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44789382815361023
    2. '<|end|>' → logprob: -1.9478938579559326
    3. '\n' → logprob: -3.0728938579559326
    4. '4' → logprob: -3.0728938579559326
    5. '
' → logprob: -3.3228938579559326
    6. '0' → logprob: -3.6978938579559326
    7. '```' → logprob: -4.1978936195373535
    8. '}' → logprob: -4.3228936195373535
    9. ']' → logprob: -4.4478936195373535
    10. '+' → logprob: -5.0728936195373535

Token 229: ' pas' (ID: 2173)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: ' besoin' (ID: 27703)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.045316360890865326
    2. ' s' → logprob: -4.295316219329834
    3. '<|end|>' → logprob: -5.545316219329834
    4. 's' → logprob: -5.920316219329834
    5. ' if' → logprob: -5.920316219329834
    6. ' a' → logprob: -6.045316219329834
    7. ' i' → logprob: -6.045316219329834
    8. ' return' → logprob: -6.045316219329834
    9. ' continuer' → logprob: -6.045316219329834
    10. ' for' → logprob: -6.420316219329834

Token 231: ' vraiment' (ID: 26637)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7154558300971985
    2. 'return' → logprob: -2.0904557704925537
    3. '<|end|>' → logprob: -2.7154557704925537
    4. 'continue' → logprob: -2.9654557704925537
    5. ' continue' → logprob: -3.2154557704925537
    6. '#' → logprob: -3.2154557704925537
    7. 'print' → logprob: -3.5904557704925537
    8. ' return' → logprob: -3.5904557704925537
    9. '
' → logprob: -3.9654557704925537
    10. '  
' → logprob: -4.090456008911133

Token 232: ' de' (ID: 334)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8660121560096741
    2. 'return' → logprob: -1.2410120964050293
    3. ' ' → logprob: -2.1160120964050293
    4. 'print' → logprob: -2.6160120964050293
    5. ' print' → logprob: -3.4910120964050293
    6. '
' → logprob: -4.616012096405029
    7. ' 
' → logprob: -4.866012096405029
    8. ' for' → logprob: -5.241012096405029
    9. ' a' → logprob: -5.366012096405029
    10. '   ' → logprob: -5.366012096405029

Token 233: ' else' (ID: 1203)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.27756935358047485
    2. 'print' → logprob: -1.90256929397583
    3. 'i' → logprob: -3.27756929397583
    4. 'contin' → logprob: -3.65256929397583
    5. ' continuer' → logprob: -4.65256929397583
    6. 'if' → logprob: -5.27756929397583
    7. ' continue' → logprob: -5.52756929397583
    8. 's' → logprob: -6.02756929397583
    9. 'pass' → logprob: -6.27756929397583
    10. 'continu' → logprob: -6.52756929397583

Token 234: ' ici' (ID: 27994)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ' bon' (ID: 4846)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3120113015174866
    2. 'continue' → logprob: -2.312011241912842
    3. ' ' → logprob: -3.187011241912842
    4. 'pass' → logprob: -3.312011241912842
    5. ' pass' → logprob: -3.437011241912842
    6. '   ' → logprob: -4.437011241912842
    7. '<|end|>' → logprob: -5.062011241912842
    8. ' s' → logprob: -5.437011241912842
    9. ' continuer' → logprob: -5.437011241912842
    10. '#' → logprob: -5.437011241912842

Token 237: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 238: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009244420798495412
    2. ' print' → logprob: -7.125924587249756
    3. 'return' → logprob: -9.250924110412598
    4. '\n' → logprob: -12.250924110412598
    5. ' return' → logprob: -12.375924110412598
    6. 'a' → logprob: -12.500924110412598
    7. '```' → logprob: -13.250924110412598
    8. '<|end|>' → logprob: -13.250924110412598
    9. '
' → logprob: -13.375924110412598
    10. '#print' → logprob: -13.625924110412598

Token 240: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017796645406633615
    2. 'return' → logprob: -7.126779556274414
    3. 'a' → logprob: -7.876779556274414
    4. 'prin' → logprob: -8.626779556274414
    5. ' print' → logprob: -8.876779556274414
    6. 'pr' → logprob: -8.876779556274414
    7. 'r' → logprob: -9.501779556274414
    8. 'p' → logprob: -10.751779556274414
    9. 'if' → logprob: -11.251779556274414
    10. 'pri' → logprob: -11.501779556274414

Token 241: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.995397365652025e-05
    2. ' print' → logprob: -9.500089645385742
    3. '
' → logprob: -11.125089645385742
    4. '```' → logprob: -15.625089645385742
    5. ')
' → logprob: -16.875089645385742
    6. ' 
' → logprob: -16.875089645385742
    7. '`
' → logprob: -18.500089645385742
    8. '``' → logprob: -18.500089645385742
    9. '\n' → logprob: -18.500089645385742
    10. '.print' → logprob: -19.125089645385742

Token 242: ' je' (ID: 1264)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2018510401248932
    2. ' print' → logprob: -1.7018510103225708
    3. 'a' → logprob: -8.326850891113281
    4. ' a' → logprob: -8.576850891113281
    5. ' return' → logprob: -12.951850891113281
    6. 'return' → logprob: -13.326850891113281
    7. ' if' → logprob: -14.076850891113281
    8. ' 
' → logprob: -14.826850891113281
    9. 'if' → logprob: -14.826850891113281
    10. '
' → logprob: -14.951850891113281

Token 243: ' pense' (ID: 29077)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07071567326784134
    2. ' print' → logprob: -2.6957156658172607
    3. '=' → logprob: -8.07071590423584
    4. ' =' → logprob: -9.57071590423584
    5. 'pr' → logprob: -9.69571590423584
    6. '#' → logprob: -9.69571590423584
    7. 's' → logprob: -9.82071590423584
    8. '+' → logprob: -10.57071590423584
    9. '.print' → logprob: -10.69571590423584
    10. 'prin' → logprob: -10.82071590423584

Token 244: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009431460639461875
    2. ' print' → logprob: -7.000943183898926
    3. 'a' → logprob: -10.875943183898926
    4. '
' → logprob: -11.375943183898926
    5. 'return' → logprob: -14.750943183898926
    6. '```' → logprob: -15.250943183898926
    7. ' 
' → logprob: -15.625943183898926
    8. ')
' → logprob: -15.750943183898926
    9. ' a' → logprob: -16.25094223022461
    10. ')' → logprob: -16.75094223022461

Token 245: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019480334594845772
    2. ' print' → logprob: -6.25194787979126
    3. 'a' → logprob: -11.001948356628418
    4. 'if' → logprob: -13.626948356628418
    5. ' a' → logprob: -14.626948356628418
    6. 'return' → logprob: -14.876948356628418
    7. '#' → logprob: -14.876948356628418
    8. '
' → logprob: -16.3769474029541
    9. ' if' → logprob: -16.5019474029541
    10. 's' → logprob: -16.8769474029541

Token 246: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.2223832905292511
    2. 'print' → logprob: -2.5973832607269287
    3. ''' → logprob: -3.4723832607269287
    4. 'est' → logprob: -3.8473832607269287
    5. '#' → logprob: -4.097383499145508
    6. ''s' → logprob: -4.347383499145508
    7. 's' → logprob: -4.847383499145508
    8. ''ai' → logprob: -5.097383499145508
    9. '=' → logprob: -5.222383499145508
    10. ' print' → logprob: -5.222383499145508

Token 247: ' comme' (ID: 7971)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6141352653503418
    2. 'print' → logprob: -1.1141352653503418
    3. ' a' → logprob: -2.364135265350342
    4. ' print' → logprob: -3.364135265350342
    5. 'str' → logprob: -6.864135265350342
    6. ' str' → logprob: -6.989135265350342
    7. ' ' → logprob: -9.7391357421875
    8. '   ' → logprob: -10.8641357421875
    9. ' ' → logprob: -12.1141357421875
    10. '(a' → logprob: -12.8641357421875

Token 248: ' ça' (ID: 13590)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5339042544364929
    2. 'print' → logprob: -1.0339043140411377
    3. ' print' → logprob: -3.5339043140411377
    4. ' a' → logprob: -4.158904075622559
    5. 's' → logprob: -4.908904075622559
    6. ' s' → logprob: -5.408904075622559
    7. ' ça' → logprob: -8.408904075622559
    8. '   ' → logprob: -8.658904075622559
    9. 'str' → logprob: -8.908904075622559
    10. ' ' → logprob: -9.033904075622559

Token 249: ' qu' (ID: 474)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.318681188422488e-05
    2. ' print' → logprob: -11.62501335144043
    3. '
' → logprob: -12.50001335144043
    4. 'return' → logprob: -15.25001335144043
    5. ')
' → logprob: -16.25001335144043
    6. 'a' → logprob: -16.75001335144043
    7. '```' → logprob: -17.12501335144043
    8. '(print' → logprob: -18.87501335144043
    9. '`
' → logprob: -19.37501335144043
    10. ')' → logprob: -19.50001335144043

Token 250: ''il' (ID: 14683)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.28690555691719055
    2. ' print' → logprob: -1.6619055271148682
    3. ' on' → logprob: -3.036905527114868
    4. 'on' → logprob: -5.286905765533447
    5. '   ' → logprob: -6.036905765533447
    6. ' ça' → logprob: -6.161905765533447
    7. ' ' → logprob: -7.411905765533447
    8. '#' → logprob: -7.411905765533447
    9. ' s' → logprob: -7.786905765533447
    10. ' tu' → logprob: -9.536905288696289

Token 251: ' faut' (ID: 17821)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2948652505874634
    2. 'f' → logprob: -1.6698652505874634
    3. 's' → logprob: -3.294865131378174
    4. ' faut' → logprob: -4.919865131378174
    5. ' print' → logprob: -4.919865131378174
    6. 'continue' → logprob: -5.794865131378174
    7. 'se' → logprob: -5.919865131378174
    8. ' s' → logprob: -6.044865131378174
    9. 'return' → logprob: -6.044865131378174
    10. 'est' → logprob: -6.544865131378174

Token 252: ' finir' (ID: 97022)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.159660890465602e-05
    2. ' print' → logprob: -9.75007152557373
    3. '
' → logprob: -11.25007152557373
    4. '```' → logprob: -16.375072479248047
    5. 'a' → logprob: -16.875072479248047
    6. ')
' → logprob: -17.000072479248047
    7. 'return' → logprob: -17.000072479248047
    8. ')' → logprob: -17.625072479248047
    9. '#print' → logprob: -18.250072479248047
    10. '#' → logprob: -18.250072479248047

Token 253: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013262155698612332
    2. '
' → logprob: -9.12513256072998
    3. ' print' → logprob: -10.75013256072998
    4. '```' → logprob: -13.50013256072998
    5. 'return' → logprob: -15.00013256072998
    6. ')
' → logprob: -15.37513256072998
    7. 'a' → logprob: -15.87513256072998
    8. '``' → logprob: -16.750133514404297
    9. ' 
' → logprob: -17.250133514404297
    10. '+
' → logprob: -17.750133514404297

Token 254: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012386832386255264
    2. '
' → logprob: -6.751238822937012
    3. ' print' → logprob: -9.626238822937012
    4. '```' → logprob: -14.001238822937012
    5. 'a' → logprob: -14.501238822937012
    6. 'return' → logprob: -14.876238822937012
    7. '
' → logprob: -15.001238822937012
    8. ' 
' → logprob: -16.251237869262695
    9. '

' → logprob: -16.376237869262695
    10. '  
' → logprob: -16.501237869262695

Token 255: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.005245260428637266
    2. '(' → logprob: -5.255245208740234
    3. 'a' → logprob: -12.130245208740234
    4. '()' → logprob: -13.255245208740234
    5. '('' → logprob: -13.505245208740234
    6. '(
' → logprob: -13.630245208740234
    7. '((' → logprob: -13.880245208740234
    8. '(sum' → logprob: -15.130245208740234
    9. ' (' → logprob: -15.505245208740234
    10. '(s' → logprob: -16.130245208740234

Token 256: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001490716531407088
    2. ' )' → logprob: -8.87514877319336
    3. '+' → logprob: -11.62514877319336
    4. '))' → logprob: -16.37514877319336
    5. ')#' → logprob: -16.87514877319336
    6. ' +' → logprob: -17.00014877319336
    7. ')
' → logprob: -17.37514877319336
    8. ')`' → logprob: -17.62514877319336
    9. '*' → logprob: -18.25014877319336
    10. '+)' → logprob: -18.37514877319336

Token 257: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01259076688438654
    2. ' b' → logprob: -4.3875908851623535
    3. 'v' → logprob: -10.137590408325195
    4. 's' → logprob: -11.512590408325195
    5. '4' → logprob: -11.887590408325195
    6. '(b' → logprob: -11.887590408325195
    7. '0' → logprob: -12.262590408325195
    8. ' ' → logprob: -12.762590408325195
    9. 'int' → logprob: -13.012590408325195
    10. ' v' → logprob: -13.137590408325195

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8193366486229934e-05
    2. ' )' → logprob: -11.000018119812012
    3. '))' → logprob: -14.625018119812012
    4. '`)' → logprob: -15.250018119812012
    5. '')' → logprob: -15.500018119812012
    6. ')`' → logprob: -15.750018119812012
    7. ')
' → logprob: -16.000019073486328
    8. '+' → logprob: -16.750019073486328
    9. ')#' → logprob: -17.500019073486328
    10. '4' → logprob: -17.625019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 256
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 153
Précision stricte (1ère position): 26.56%
Précision adaptée (1ère position): 28.52%
Précision (top 10): 59.77%
================================================================================
