================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from bisect import bisect as br
from collections import Counter

# Faster input reading for large data
readline = sys.stdin.readline

def check(A, B):
    """
    Effectue une série de vérifications sur deux séquences A et B pour déterminer 
    s'il est possible de transformer la séquence A en B sous certaines contraintes.

    Args:
        A (list of int): La première liste d'entiers.
        B (list of int): La seconde liste d'entiers.

    Returns:
        str: 'Yes' si la transformation est possible, 'No' sinon.
    """

    # On trie d'abord les deux listes pour faciliter la comparaison élément par élément
    SA = sorted(A)
    SB = sorted(B)

    # Première vérification : chaque élément de SA doit être <= correspondant dans SB
    # Si un élément de SA est strictement supérieur à SB, la transformation est impossible
    if any(a > b for a, b in zip(SA, SB)):
        return 'No'
    
    # Deuxième vérification : si A est déjà "inférieure ou égale" à B, c'est gagné
    # Cela vérifie la condition initiale sur les éléments correspondants
    if all(a <= b for a, b in zip(A, B)):
        return 'Yes'
    
    # Troisième vérification : on vérifie pour chaque position, si le nombre d'éléments
    # de SA <= SB[i] est strictement égal à i+1, sinon, transformation possible.
    # Cela teste une propriété de permutation.
    N = len(A)
    if any(br(SA, SB[i]) != i + 1 for i in range(N)):
        return 'Yes'
    
    # Quatrième vérification : si doublons dans A ou B, c'est possible
    if len(set(A)) != N or len(set(B)) != N:
        return 'Yes'

    # Cinquième vérification : on construit la permutation des indices reliant SA à SB via A/B
    # P[i] sera l'indice dans B qui correspond à l'élément trié position i de A
    # On mappe d'abord les valeurs de A et B à leurs indices finaux
    P = [None] * N
    Aidx = Counter()
    Bidx = Counter()

    # On enregistre pour chaque nombre de A (ou B) son dernier indice d'apparition
    for i in range(N):
        a = A[i]
        b = B[i]
        Aidx[a] = i
        Bidx[b] = i

    # On crée la permutation P en associant la position du i-ème élément trié de A à celle de B
    for i in range(N):
        sa = SA[i]
        sb = SB[i]
        P[Aidx[sa]] = Bidx[sb]

    # Parcours du cycle de permutations pour détecter si toute la permutation est cyclique
    # Si le cycle couvre toute la permutation (sans coupure), alors c'est 'No'
    # Sinon, c'est 'Yes'
    visited = set()
    vn = 0
    while vn not in visited:
        visited.add(vn)
        vn = P[vn]
    if len(visited) == N:
        return 'No'
    return 'Yes'

# Lecture des entrées standard
N = int(readline())
A = list(map(int, readline().split()))
B = list(map(int, readline().split()))

# Affichage du résultat selon le test sur A et B
print(check(A, B))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.021073132753372192
    2. 'os' → logprob: -4.021073341369629
    3. ' Py' → logprob: -7.271073341369629
    4. ' pathlib' → logprob: -7.521073341369629
    5. ' collections' → logprob: -7.646073341369629
    6. ' ' → logprob: -8.021073341369629
    7. ' math' → logprob: -8.521073341369629
    8. ' typing' → logprob: -8.896073341369629
    9. ' datetime' → logprob: -9.396073341369629
    10. 'collections' → logprob: -9.896073341369629

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.881560041918419e-05
    2. 'e' → logprob: -10.625039100646973
    3. 'ectl' → logprob: -12.250039100646973
    4. 'ected' → logprob: -12.750039100646973
    5. 'ector' → logprob: -13.250039100646973
    6. 'ec' → logprob: -13.375039100646973
    7. 't' → logprob: -13.750039100646973
    8. '>' → logprob: -14.500039100646973
    9. '```' → logprob: -15.000039100646973
    10. 'ection' → logprob: -15.125039100646973

Token 6: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04304109513759613
    2. 'import' → logprob: -3.1680409908294678
    3. '_import' → logprob: -10.918041229248047
    4. ' ' → logprob: -11.793041229248047
    5. '	import' → logprob: -11.918041229248047
    6. ' ' → logprob: -11.918041229248047
    7. '_' → logprob: -14.168041229248047
    8. '.' → logprob: -14.793041229248047
    9. ' impor' → logprob: -15.418041229248047
    10. ' importar' → logprob: -15.543041229248047

Token 7: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.32460281252861023
    2. 'bis' → logprob: -1.3246028423309326
    3. 'ins' → logprob: -4.5746026039123535
    4. ' ins' → logprob: -6.9496026039123535
    5. 'b' → logprob: -12.199603080749512
    6. 'in' → logprob: -14.074603080749512
    7. ' b' → logprob: -14.699603080749512
    8. 'is' → logprob: -14.824603080749512
    9. 'he' → logprob: -15.449603080749512
    10. '_ins' → logprob: -15.824603080749512

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00027575582498684525
    2. 'e' → logprob: -8.250275611877441
    3. 'ec' → logprob: -11.375275611877441
    4. 'ected' → logprob: -14.250275611877441
    5. 'ectl' → logprob: -14.500275611877441
    6. '{' → logprob: -15.125275611877441
    7. '```' → logprob: -15.250275611877441
    8. 'sect' → logprob: -15.375275611877441
    9. '#' → logprob: -15.500275611877441
    10. 'ecta' → logprob: -15.875275611877441

Token 9: ' as' (ID: 472)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4511723518371582
    2. '(' → logprob: -1.5761723518371582
    3. '.' → logprob: -2.451172351837158
    4. ' ' → logprob: -3.326172351837158
    5. 'import' → logprob: -4.451172351837158
    6. ',' → logprob: -5.951172351837158
    7. '' → logprob: -5.951172351837158
    8. ' (' → logprob: -6.076172351837158
    9. '_left' → logprob: -6.326172351837158
    10. '```' → logprob: -6.451172351837158

Token 10: ' br' (ID: 1294)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.38709473609924316
    2. '_right' → logprob: -1.3870947360992432
    3. ' bis' → logprob: -2.887094736099243
    4. '_' → logprob: -5.137094497680664
    5. 'bis' → logprob: -6.012094497680664
    6. ' _' → logprob: -6.262094497680664
    7. '_ins' → logprob: -6.637094497680664
    8. '_b' → logprob: -6.762094497680664
    9. 'ins' → logprob: -7.262094497680664
    10. ' b' → logprob: -7.512094497680664

Token 11: '
' (ID: 198)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.660971999168396
    2. '(' → logprob: -0.785971999168396
    3. '()' → logprob: -4.4109721183776855
    4. '```' → logprob: -5.7859721183776855
    5. '(e' → logprob: -6.1609721183776855
    6. ')' → logprob: -6.1609721183776855
    7. 'a' → logprob: -6.5359721183776855
    8. 'k' → logprob: -6.5359721183776855
    9. '[' → logprob: -6.5359721183776855
    10. '_' → logprob: -6.6609721183776855

Token 12: 'from' (ID: 2845)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6332589387893677
    2. '_' → logprob: -1.1332589387893677
    3. '(' → logprob: -2.133258819580078
    4. '.' → logprob: -5.008258819580078
    5. ',' → logprob: -6.008258819580078
    6. 't' → logprob: -6.008258819580078
    7. 'a' → logprob: -6.258258819580078
    8. '_r' → logprob: -7.133258819580078
    9. '._' → logprob: -7.133258819580078
    10. '' → logprob: -7.133258819580078

Token 13: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.2173999547958374
    2. 'math' → logprob: -1.4673999547958374
    3. ' math' → logprob: -1.8423999547958374
    4. ' itertools' → logprob: -2.217400074005127
    5. 'heap' → logprob: -2.342400074005127
    6. ' collections' → logprob: -2.592400074005127
    7. ' heap' → logprob: -4.092400074005127
    8. ' typing' → logprob: -5.217400074005127
    9. 'typing' → logprob: -5.217400074005127
    10. 'bis' → logprob: -6.342400074005127

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.545414924621582
    2. 'import' → logprob: -0.920414924621582
    3. '.' → logprob: -4.045414924621582
    4. '.Counter' → logprob: -5.545414924621582
    5. ' defaultdict' → logprob: -8.545414924621582
    6. '<|end|>' → logprob: -9.170414924621582
    7. '```' → logprob: -9.545414924621582
    8. '	import' → logprob: -9.795414924621582
    9. '_' → logprob: -9.920414924621582
    10. ' ' → logprob: -9.920414924621582

Token 15: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.36640968918800354
    2. ' defaultdict' → logprob: -1.3664096593856812
    3. 'default' → logprob: -3.6164097785949707
    4. ' deque' → logprob: -4.366409778594971
    5. 'abc' → logprob: -4.616409778594971
    6. 'named' → logprob: -6.991409778594971
    7. 'de' → logprob: -7.241409778594971
    8. 'Counter' → logprob: -7.616409778594971
    9. ' named' → logprob: -9.991409301757812
    10. ' abc' → logprob: -10.241409301757812

Token 16: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5883277654647827
    2. ',' → logprob: -1.8383277654647827
    3. '\n' → logprob: -2.7133278846740723
    4. '
' → logprob: -2.9633278846740723
    5. '(' → logprob: -3.2133278846740723
    6. '\' → logprob: -3.3383278846740723
    7. 'def' → logprob: -4.088327884674072
    8. '

' → logprob: -4.588327884674072
    9. 'newline' → logprob: -4.838327884674072
    10. 'print' → logprob: -4.963327884674072

Token 17: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3742311000823975
    2. 'def' → logprob: -1.4992311000823975
    3. ',' → logprob: -1.9992311000823975
    4. 'import' → logprob: -2.6242311000823975
    5. '\n' → logprob: -2.7492311000823975
    6. '
' → logprob: -2.9992311000823975
    7. '

' → logprob: -3.3742311000823975
    8. '(
' → logprob: -3.8742311000823975
    9. '```' → logprob: -3.9992311000823975
    10. '.' → logprob: -4.374231338500977

Token 18: ' Faster' (ID: 154922)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5785272717475891
    2. 'd' → logprob: -1.9535272121429443
    3. '_' → logprob: -2.0785272121429443
    4. 'def' → logprob: -2.7035272121429443
    5. 'n' → logprob: -3.4535272121429443
    6. ' def' → logprob: -4.078527450561523
    7. ' _' → logprob: -5.578527450561523
    8. ' 

' → logprob: -5.703527450561523
    9. ' #' → logprob: -5.828527450561523
    10. ' d' → logprob: -5.953527450561523

Token 19: ' input' (ID: 3422)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8024181127548218
    2. 'def' → logprob: -1.1774181127548218
    3. 'import' → logprob: -3.0524182319641113
    4. 'input' → logprob: -3.4274182319641113
    5. '_input' → logprob: -3.8024182319641113
    6. 'from' → logprob: -4.052418231964111
    7. ' =' → logprob: -4.052418231964111
    8. ' def' → logprob: -4.302418231964111
    9. '=' → logprob: -4.802418231964111
    10. '_counter' → logprob: -4.927418231964111

Token 20: ' reading' (ID: 6085)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11125840991735458
    2. 'input' → logprob: -3.3612585067749023
    3. 'import' → logprob: -4.236258506774902
    4. '_' → logprob: -4.236258506774902
    5. '(' → logprob: -4.486258506774902
    6. 'def' → logprob: -4.611258506774902
    7. ':' → logprob: -5.736258506774902
    8. '(input' → logprob: -5.861258506774902
    9. '\' → logprob: -6.236258506774902
    10. '_input' → logprob: -6.236258506774902

Token 21: ' for' (ID: 395)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10808134078979492
    2. 'input' → logprob: -3.358081340789795
    3. '_' → logprob: -4.358081340789795
    4. '\' → logprob: -4.733081340789795
    5. '_input' → logprob: -4.983081340789795
    6. 'def' → logprob: -4.983081340789795
    7. '\n' → logprob: -5.108081340789795
    8. '
' → logprob: -5.108081340789795
    9. 'newline' → logprob: -5.858081340789795
    10. 'sys' → logprob: -5.983081340789795

Token 22: ' large' (ID: 4410)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7337344288825989
    2. ' input' → logprob: -1.233734369277954
    3. ' stdin' → logprob: -2.983734369277954
    4. 'input' → logprob: -3.108734369277954
    5. 'sys' → logprob: -3.108734369277954
    6. '_' → logprob: -3.233734369277954
    7. 'stdin' → logprob: -3.983734369277954
    8. ' large' → logprob: -5.108734607696533
    9. ' python' → logprob: -5.358734607696533
    10. '_input' → logprob: -5.608734607696533

Token 23: ' data' (ID: 1238)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.19879929721355438
    2. ' inputs' → logprob: -2.4487993717193604
    3. 'input' → logprob: -2.9487993717193604
    4. ' data' → logprob: -3.3237993717193604
    5. 'inputs' → logprob: -6.198799133300781
    6. ' sys' → logprob: -6.198799133300781
    7. 'data' → logprob: -7.698799133300781
    8. '_input' → logprob: -8.448799133300781
    9. ' datasets' → logprob: -8.573799133300781
    10. 'sys' → logprob: -9.448799133300781

Token 24: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.24326083064079285
    2. 'input' → logprob: -1.8682608604431152
    3. '
' → logprob: -3.9932608604431152
    4. 'def' → logprob: -4.868260860443115
    5. 'sys' → logprob: -5.118260860443115
    6. '<|end|>' → logprob: -5.118260860443115
    7. '\' → logprob: -5.493260860443115
    8. ':' → logprob: -5.493260860443115
    9. '\n' → logprob: -5.868260860443115
    10. '```' → logprob: -6.493260860443115

Token 25: 'read' (ID: 1293)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2923017740249634
    2. 'import' → logprob: -1.5423017740249634
    3. ' input' → logprob: -4.042301654815674
    4. '_input' → logprob: -4.667301654815674
    5. '_' → logprob: -4.917301654815674
    6. 'def' → logprob: -6.667301654815674
    7. 'inp' → logprob: -7.292301654815674
    8. ' import' → logprob: -7.542301654815674
    9. 'sys' → logprob: -7.792301654815674
    10. 'n' → logprob: -7.792301654815674

Token 26: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0022719393018633127
    2. '_line' → logprob: -6.377272129058838
    3. ' =' → logprob: -8.12727165222168
    4. '=' → logprob: -8.75227165222168
    5. 'ine' → logprob: -10.00227165222168
    6. '=sys' → logprob: -10.75227165222168
    7. '_input' → logprob: -11.00227165222168
    8. 'lines' → logprob: -11.87727165222168
    9. 'ln' → logprob: -12.12727165222168
    10. '=line' → logprob: -12.12727165222168

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20220111310482025
    2. ' =' → logprob: -1.7022011280059814
    3. '=sys' → logprob: -8.327200889587402
    4. '()' → logprob: -8.452200889587402
    5. '=lambda' → logprob: -9.077200889587402
    6. '(' → logprob: -9.202200889587402
    7. ')' → logprob: -10.952200889587402
    8. '=input' → logprob: -11.077200889587402
    9. '=line' → logprob: -11.827200889587402
    10. ',' → logprob: -11.952200889587402

Token 28: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011049824766814709
    2. ' sys' → logprob: -4.511049747467041
    3. 'input' → logprob: -14.2610502243042
    4. '	sys' → logprob: -14.5110502243042
    5. '=sys' → logprob: -15.0110502243042
    6. 'lambda' → logprob: -15.1360502243042
    7. '(sys' → logprob: -15.5110502243042
    8. 'stdin' → logprob: -17.886049270629883
    9. '_sys' → logprob: -18.261049270629883
    10. 'system' → logprob: -19.261049270629883

Token 29: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.000192812061868608
    2. '.stdout' → logprob: -9.000192642211914
    3. '.' → logprob: -10.125192642211914
    4. '.readline' → logprob: -10.750192642211914
    5. '.argv' → logprob: -12.500192642211914
    6. '.std' → logprob: -12.625192642211914
    7. '.stderr' → logprob: -15.000192642211914
    8. '.version' → logprob: -16.000192642211914
    9. '.input' → logprob: -16.000192642211914
    10. ' .' → logprob: -16.125192642211914

Token 30: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.9650025428272784e-05
    2. '.buffer' → logprob: -11.000040054321289
    3. '.read' → logprob: -11.125040054321289
    4. '.' → logprob: -11.750040054321289
    5. '.readlines' → logprob: -15.500040054321289
    6. 'buffer' → logprob: -18.25004005432129
    7. 'read' → logprob: -19.00004005432129
    8. '.fast' → logprob: -19.12504005432129
    9. ' readline' → logprob: -19.25004005432129
    10. ' .' → logprob: -19.75004005432129

Token 31: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6929092407226562
    2. '

' → logprob: -0.9429092407226562
    3. 'def' → logprob: -2.8179092407226562
    4. '\n' → logprob: -3.8179092407226562
    5. 'n' → logprob: -4.942909240722656
    6. '```' → logprob: -5.817909240722656
    7. '\' → logprob: -5.942909240722656
    8. '' → logprob: -6.067909240722656
    9. 'newline' → logprob: -6.192909240722656
    10. '
' → logprob: -6.192909240722656

Token 32: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6306154131889343
    2. 'def' → logprob: -1.255615472793579
    3. '
' → logprob: -1.880615472793579
    4. '

' → logprob: -4.380615234375
    5. 'class' → logprob: -5.755615234375
    6. 'd' → logprob: -5.880615234375
    7. '\n' → logprob: -6.005615234375
    8. 's' → logprob: -6.880615234375
    9. 'data' → logprob: -6.880615234375
    10. 'a' → logprob: -7.005615234375

Token 33: ' check' (ID: 2371)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8150094747543335
    2. ' main' → logprob: -1.3150094747543335
    3. ' count' → logprob: -2.440009593963623
    4. ' two' → logprob: -3.065009593963623
    5. ' binary' → logprob: -3.315009593963623
    6. ' ' → logprob: -3.940009593963623
    7. ' process' → logprob: -4.065009593963623
    8. ' factorial' → logprob: -4.065009593963623
    9. ' frequency' → logprob: -4.190009593963623
    10. ' factor' → logprob: -4.690009593963623

Token 34: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008925003930926323
    2. '_' → logprob: -5.133924961090088
    3. ' (' → logprob: -7.508924961090088
    4. '_space' → logprob: -7.883924961090088
    5. '(x' → logprob: -8.633925437927246
    6. '_overlap' → logprob: -8.758925437927246
    7. '_valid' → logprob: -8.758925437927246
    8. '_parent' → logprob: -9.008925437927246
    9. '_in' → logprob: -9.133925437927246
    10. '_size' → logprob: -9.383925437927246

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7098451256752014
    2. '):' → logprob: -0.7098451256752014
    3. '[' → logprob: -5.084845066070557
    4. ')' → logprob: -5.209845066070557
    5. ' ,' → logprob: -6.334845066070557
    6. ':' → logprob: -6.834845066070557
    7. ' ):' → logprob: -6.959845066070557
    8. '[]):' → logprob: -8.459845542907715
    9. '[int' → logprob: -8.959845542907715
    10. '[i' → logprob: -9.834845542907715

Token 36: ' B' (ID: 418)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.7407695055007935
    2. 'x' → logprob: -2.240769386291504
    3. 'mid' → logprob: -2.240769386291504
    4. 'm' → logprob: -2.490769386291504
    5. ' mid' → logprob: -2.490769386291504
    6. 'M' → logprob: -2.615769386291504
    7. ' k' → logprob: -2.865769386291504
    8. ' x' → logprob: -2.865769386291504
    9. 'K' → logprob: -2.990769386291504
    10. ' M' → logprob: -2.990769386291504

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.351684033870697
    2. ',' → logprob: -1.2266840934753418
    3. ')' → logprob: -6.101684093475342
    4. ' ,' → logprob: -7.976684093475342
    5. ' ):' → logprob: -8.601683616638184
    6. ':' → logprob: -9.226683616638184
    7. '[' → logprob: -9.601683616638184
    8. '[]):' → logprob: -9.851683616638184
    9. '):
' → logprob: -10.101683616638184
    10. '):
' → logprob: -10.976683616638184

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061285994946956635
    2. ':' → logprob: -3.186285972595215
    3. '    
' → logprob: -4.561285972595215
    4. '    ' → logprob: -6.311285972595215
    5. '[]' → logprob: -7.061285972595215
    6. ':
' → logprob: -7.561285972595215
    7. '):' → logprob: -7.686285972595215
    8. '```' → logprob: -7.686285972595215
    9. ' (' → logprob: -7.811285972595215
    10. '(' → logprob: -7.811285972595215

Token 39: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11974477022886276
    2. ' n' → logprob: -3.6197447776794434
    3. ' return' → logprob: -3.8697447776794434
    4. 'n' → logprob: -4.369744777679443
    5. '    ' → logprob: -4.494744777679443
    6. ' for' → logprob: -4.744744777679443
    7. ' 
' → logprob: -4.744744777679443
    8. '    
' → logprob: -5.244744777679443
    9. ' if' → logprob: -6.119744777679443
    10. ' ' → logprob: -6.244744777679443

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0380261056125164
    2. '    ' → logprob: -4.288026332855225
    3. ' """' → logprob: -5.038026332855225
    4. ' ' → logprob: -5.663026332855225
    5. ' )' → logprob: -5.788026332855225
    6. 'n' → logprob: -6.038026332855225
    7. '"""' → logprob: -6.288026332855225
    8. ')' → logprob: -6.663026332855225
    9. ' n' → logprob: -7.288026332855225
    10. '  ' → logprob: -7.663026332855225

Token 41: ' Effect' (ID: 22448)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5748310089111328
    2. ')' → logprob: -1.4498310089111328
    3. ' """' → logprob: -2.699831008911133
    4. '    ' → logprob: -3.199831008911133
    5. ' )' → logprob: -3.699831008911133
    6. '"""' → logprob: -3.824831008911133
    7. ' """
' → logprob: -4.324831008911133
    8. ' ' → logprob: -5.074831008911133
    9. '\n' → logprob: -5.199831008911133
    10. ' if' → logprob: -5.824831008911133

Token 42: 'ue' (ID: 466)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4653315544128418
    2. 'iveness' → logprob: -1.4653315544128418
    3. ':' → logprob: -1.5903315544128418
    4. 'ively' → logprob: -2.090331554412842
    5. 'ive' → logprob: -3.090331554412842
    6. ' =' → logprob: -3.090331554412842
    7. '   ' → logprob: -3.715331554412842
    8. '):' → logprob: -4.090331554412842
    9. ' :' → logprob: -4.340331554412842
    10. ')' → logprob: -4.590331554412842

Token 43: ' une' (ID: 2463)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46426427364349365
    2. ' la' → logprob: -2.214264392852783
    3. ' ' → logprob: -2.339264392852783
    4. ' s' → logprob: -2.714264392852783
    5. ' un' → logprob: -3.089264392852783
    6. ' a' → logprob: -3.964264392852783
    7. ' l' → logprob: -4.214264392852783
    8. ' une' → logprob: -5.214264392852783
    9. 'r' → logprob: -5.714264392852783
    10. ' r' → logprob: -5.839264392852783

Token 44: ' série' (ID: 22079)
  Prédit: ' recherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.35118162631988525
    2. ' comparaison' → logprob: -2.4761815071105957
    3. ' copie' → logprob: -3.2261815071105957
    4. ' ' → logprob: -3.3511815071105957
    5. ' vér' → logprob: -3.7261815071105957
    6. ' somme' → logprob: -3.9761815071105957
    7. ' validation' → logprob: -4.476181507110596
    8. ' ' → logprob: -4.851181507110596
    9. 's' → logprob: -5.101181507110596
    10. ' différence' → logprob: -5.226181507110596

Token 45: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1447843313217163
    2. ' d' → logprob: -2.019784450531006
    3. ' ' → logprob: -6.519784450531006
    4. ' des' → logprob: -8.019783973693848
    5. 'de' → logprob: -9.394783973693848
    6. '  ' → logprob: -9.769783973693848
    7. 'd' → logprob: -9.894783973693848
    8. ' space' → logprob: -10.144783973693848
    9. ' of' → logprob: -11.269783973693848
    10. 'space' → logprob: -12.019783973693848

Token 46: ' vér' (ID: 42524)
  Prédit: ' tests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tests' → logprob: -0.07073644548654556
    2. ' vér' → logprob: -3.1957364082336426
    3. ' checks' → logprob: -4.320736408233643
    4. ' test' → logprob: -4.820736408233643
    5. 'tests' → logprob: -5.820736408233643
    6. 'v' → logprob: -7.320736408233643
    7. ' v' → logprob: -7.945736408233643
    8. ' ' → logprob: -8.0707368850708
    9. ' check' → logprob: -8.3207368850708
    10. ' calcul' → logprob: -8.9457368850708

Token 47: 'ifications' (ID: 9110)
  Prédit: 'ifications'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifications' → logprob: -0.010567734017968178
    2. 'ification' → logprob: -5.635567665100098
    3. 'if' → logprob: -5.760567665100098
    4. 'ifi' → logprob: -5.885567665100098
    5. 'i' → logprob: -7.135567665100098
    6. 'ifie' → logprob: -9.385567665100098
    7. '```' → logprob: -10.010567665100098
    8. 'ifica' → logprob: -10.260567665100098
    9. 'ifiés' → logprob: -10.885567665100098
    10. 'ifs' → logprob: -12.010567665100098

Token 48: ' sur' (ID: 1512)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6041208505630493
    2. '   ' → logprob: -1.2291208505630493
    3. '(' → logprob: -2.4791207313537598
    4. ' (' → logprob: -3.7291207313537598
    5. '  ' → logprob: -4.47912073135376
    6. ':' → logprob: -4.85412073135376
    7. ',' → logprob: -4.97912073135376
    8. '_' → logprob: -5.35412073135376
    9. ' de' → logprob: -5.72912073135376
    10. '    ' → logprob: -6.22912073135376

Token 49: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5752156972885132
    2. ' A' → logprob: -1.8252156972885132
    3. ' la' → logprob: -2.2002158164978027
    4. ' les' → logprob: -2.9502158164978027
    5. ' l' → logprob: -3.2002158164978027
    6. ' ' → logprob: -3.2002158164978027
    7. ' le' → logprob: -4.075215816497803
    8. 'A' → logprob: -4.700215816497803
    9. '  ' → logprob: -6.950215816497803
    10. ' un' → logprob: -7.575215816497803

Token 50: ' sé' (ID: 7462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7799054384231567
    2. ' tableaux' → logprob: -1.0299054384231567
    3. ' listes' → logprob: -3.154905319213867
    4. ' A' → logprob: -3.529905319213867
    5. ' )' → logprob: -4.279905319213867
    6. ' arrays' → logprob: -4.529905319213867
    7. ' paramètres' → logprob: -4.904905319213867
    8. ' espaces' → logprob: -5.029905319213867
    9. ')' → logprob: -5.154905319213867
    10. ' mots' → logprob: -5.404905319213867

Token 51: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.00019853383128065616
    2. 'ries' → logprob: -9.375198364257812
    3. '```' → logprob: -10.500198364257812
    4. 'quence' → logprob: -10.750198364257812
    5. 'q' → logprob: -10.875198364257812
    6. 'quent' → logprob: -10.875198364257812
    7. 'qu' → logprob: -11.125198364257812
    8. '   ' → logprob: -12.875198364257812
    9. 'rie' → logprob: -13.000198364257812
    10. 'ques' → logprob: -13.125198364257812

Token 52: ' A' (ID: 355)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.5736383199691772
    2. 'de' → logprob: -1.8236383199691772
    3. '   ' → logprob: -1.9486383199691772
    4. ',' → logprob: -2.198638439178467
    5. ' (' → logprob: -2.573638439178467
    6. ' ' → logprob: -3.073638439178467
    7. ')' → logprob: -3.323638439178467
    8. ' :' → logprob: -3.698638439178467
    9. ' )' → logprob: -3.948638439178467
    10. ':' → logprob: -4.073638439178467

Token 53: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03152121230959892
    2. ' ,' → logprob: -4.156521320343018
    3. ')' → logprob: -4.531521320343018
    4. ' et' → logprob: -6.156521320343018
    5. '):' → logprob: -7.406521320343018
    6. '[' → logprob: -7.656521320343018
    7. ' )' → logprob: -8.03152084350586
    8. '   ' → logprob: -8.40652084350586
    9. '<|end|>' → logprob: -8.40652084350586
    10. 'et' → logprob: -8.65652084350586

Token 54: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.062394145876169205
    2. 'B' → logprob: -2.812394142150879
    3. ' ' → logprob: -7.937394142150879
    4. ' ' → logprob: -9.687394142150879
    5. 's' → logprob: -13.812394142150879
    6. '	B' → logprob: -13.812394142150879
    7. '```' → logprob: -14.187394142150879
    8. '  ' → logprob: -14.187394142150879
    9. ' ' → logprob: -14.312394142150879
    10. '_B' → logprob: -14.687394142150879

Token 55: ' pour' (ID: 1930)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7589994072914124
    2. ':' → logprob: -1.6339993476867676
    3. ')' → logprob: -1.8839993476867676
    4. '   ' → logprob: -2.0089993476867676
    5. ',' → logprob: -3.5089993476867676
    6. '):
' → logprob: -5.258999347686768
    7. ' :' → logprob: -5.758999347686768
    8. '```' → logprob: -5.758999347686768
    9. '.' → logprob: -6.258999347686768
    10. ' ):' → logprob: -6.383999347686768

Token 56: ' déterminer' (ID: 122024)
  Prédit: ' déterminer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déterminer' → logprob: -0.11706618219614029
    2. ' voir' → logprob: -2.7420661449432373
    3. ' vérifier' → logprob: -4.242066383361816
    4. 'val' → logprob: -4.867066383361816
    5. 'voir' → logprob: -5.367066383361816
    6. ' assurer' → logprob: -5.617066383361816
    7. ' val' → logprob: -5.617066383361816
    8. 'determ' → logprob: -6.117066383361816
    9. ' s' → logprob: -6.242066383361816
    10. 's' → logprob: -6.242066383361816

Token 57: ' 
' (ID: 793)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.5427561402320862
    2. ' leur' → logprob: -2.0427560806274414
    3. ' if' → logprob: -2.0427560806274414
    4. ' ' → logprob: -3.1677560806274414
    5. ' l' → logprob: -3.1677560806274414
    6. ' la' → logprob: -3.2927560806274414
    7. 'leur' → logprob: -4.167756080627441
    8. ' s' → logprob: -5.542756080627441
    9. ' leurs' → logprob: -5.667756080627441
    10. ' their' → logprob: -5.917756080627441

Token 58: '   ' (ID: 271)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.13952817022800446
    2. ' if' → logprob: -3.389528274536133
    3. ' leur' → logprob: -3.389528274536133
    4. ' la' → logprob: -3.889528274536133
    5. ' s' → logprob: -4.014528274536133
    6. 'si' → logprob: -4.764528274536133
    7. 'leur' → logprob: -4.889528274536133
    8. ' ' → logprob: -6.139528274536133
    9. ' l' → logprob: -6.639528274536133
    10. '   ' → logprob: -6.639528274536133

Token 59: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0531162023544312
    2. ' leur' → logprob: -1.3031162023544312
    3. ' if' → logprob: -1.6781162023544312
    4. ' si' → logprob: -2.4281163215637207
    5. ' l' → logprob: -3.3031163215637207
    6. ' la' → logprob: -4.303116321563721
    7. ' le' → logprob: -4.553116321563721
    8. ' their' → logprob: -4.678116321563721
    9. ',' → logprob: -5.053116321563721
    10. ' ' → logprob: -5.303116321563721

Token 60: ''il' (ID: 14683)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006303326692432165
    2. ''il' → logprob: -5.506303310394287
    3. ''i' → logprob: -6.506303310394287
    4. 'si' → logprob: -8.381303787231445
    5. '```' → logprob: -8.506303787231445
    6. ''' → logprob: -9.131303787231445
    7. '`' → logprob: -10.256303787231445
    8. ''ils' → logprob: -10.506303787231445
    9. ''''' → logprob: -10.881303787231445
    10. 'e' → logprob: -11.506303787231445

Token 61: ' est' (ID: 893)
  Prédit: ' existe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' existe' → logprob: -0.6912544965744019
    2. ' y' → logprob: -1.5662544965744019
    3. 's' → logprob: -2.6912546157836914
    4. 'est' → logprob: -2.8162546157836914
    5. ' est' → logprob: -3.0662546157836914
    6. ' possible' → logprob: -3.6912546157836914
    7. ''il' → logprob: -3.6912546157836914
    8. ' faut' → logprob: -4.566254615783691
    9. ' il' → logprob: -4.816254615783691
    10. 'y' → logprob: -4.941254615783691

Token 62: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.002669472945854068
    2. 'possible' → logprob: -6.127669334411621
    3. ' poss' → logprob: -8.627669334411621
    4. '_possible' → logprob: -8.877669334411621
    5. ' posible' → logprob: -9.752669334411621
    6. ' valid' → logprob: -11.127669334411621
    7. 'poss' → logprob: -11.127669334411621
    8. ' pos' → logprob: -11.627669334411621
    9. ' plausible' → logprob: -11.752669334411621
    10. ' possibile' → logprob: -12.002669334411621

Token 63: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.734840989112854
    2. ' de' → logprob: -1.109840989112854
    3. ' ' → logprob: -1.734840989112854
    4. ' ' → logprob: -5.2348408699035645
    5. ' que' → logprob: -5.4848408699035645
    6. '<|end|>' → logprob: -5.7348408699035645
    7. 'de' → logprob: -7.6098408699035645
    8. 'd' → logprob: -7.8598408699035645
    9. '  ' → logprob: -8.359841346740723
    10. ',' → logprob: -9.484841346740723

Token 64: ' transformer' (ID: 59595)
  Prédit: ' transformer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transformer' → logprob: -0.5102593302726746
    2. 'transform' → logprob: -1.7602593898773193
    3. ' les' → logprob: -3.2602593898773193
    4. ' re' → logprob: -3.7602593898773193
    5. ' ' → logprob: -4.01025915145874
    6. ' transform' → logprob: -4.01025915145874
    7. ' perm' → logprob: -4.13525915145874
    8. ' réaliser' → logprob: -4.13525915145874
    9. ' construire' → logprob: -4.38525915145874
    10. ' obtenir' → logprob: -4.63525915145874

Token 65: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.039926834404468536
    2. 'A' → logprob: -3.289926767349243
    3. ' B' → logprob: -6.914927005767822
    4. ' l' → logprob: -8.039926528930664
    5. ' la' → logprob: -8.289926528930664
    6. '```' → logprob: -9.289926528930664
    7. ' ' → logprob: -9.664926528930664
    8. 'l' → logprob: -10.039926528930664
    9. '   ' → logprob: -10.164926528930664
    10. 'la' → logprob: -10.539926528930664

Token 66: ' sé' (ID: 7462)
  Prédit: ' premier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.8465918302536011
    2. 'A' → logprob: -2.4715919494628906
    3. 'prem' → logprob: -2.4715919494628906
    4. 's' → logprob: -2.5965919494628906
    5. ' première' → logprob: -2.8465919494628906
    6. ' A' → logprob: -3.4715919494628906
    7. ' ' → logprob: -3.7215919494628906
    8. '_' → logprob: -4.096591949462891
    9. ' first' → logprob: -4.221591949462891
    10. ' second' → logprob: -4.221591949462891

Token 67: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -1.9266199160483666e-05
    2. 'q' → logprob: -11.750019073486328
    3. 'rie' → logprob: -12.750019073486328
    4. 'quences' → logprob: -12.750019073486328
    5. 'QUENCE' → logprob: -13.500019073486328
    6. '```' → logprob: -13.750019073486328
    7. 'qu' → logprob: -14.000019073486328
    8. 'que' → logprob: -14.625019073486328
    9. '   ' → logprob: -14.750019073486328
    10. '`' → logprob: -15.125019073486328

Token 68: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0018076261039823294
    2. 'A' → logprob: -6.751807689666748
    3. ' B' → logprob: -8.00180721282959
    4. ' ' → logprob: -8.87680721282959
    5. ' `' → logprob: -9.62680721282959
    6. ' ' → logprob: -9.62680721282959
    7. ' suivante' → logprob: -11.25180721282959
    8. ' '' → logprob: -12.12680721282959
    9. ' "' → logprob: -13.25180721282959
    10. 's' → logprob: -13.37680721282959

Token 69: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.07203209400177002
    2. ' ' → logprob: -2.6970319747924805
    3. 'en' → logprob: -8.44703197479248
    4. '   ' → logprob: -8.44703197479248
    5. ' into' → logprob: -8.44703197479248
    6. ',' → logprob: -8.57203197479248
    7. ')' → logprob: -9.07203197479248
    8. '```' → logprob: -9.07203197479248
    9. ' )' → logprob: -9.32203197479248
    10. ' A' → logprob: -9.32203197479248

Token 70: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.04743537679314613
    2. 'B' → logprob: -4.172435283660889
    3. ' une' → logprob: -4.297435283660889
    4. ' ' → logprob: -4.672435283660889
    5. ' la' → logprob: -6.047435283660889
    6. 'une' → logprob: -6.297435283660889
    7. ' a' → logprob: -6.797435283660889
    8. '<|end|>' → logprob: -6.797435283660889
    9. ' sequence' → logprob: -7.672435283660889
    10. '<|end|>' → logprob: -8.172435760498047

Token 71: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.177229642868042
    2. ' en' → logprob: -1.677229642868042
    3. ' ' → logprob: -1.927229642868042
    4. ',' → logprob: -2.302229642868042
    5. ' par' → logprob: -2.552229642868042
    6. '.' → logprob: -2.677229642868042
    7. ' )' → logprob: -3.427229642868042
    8. ')' → logprob: -4.052229881286621
    9. '```' → logprob: -4.177229881286621
    10. ' avec' → logprob: -4.302229881286621

Token 72: ' certaines' (ID: 46662)
  Prédit: ' certaines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' certaines' → logprob: -0.05835270509123802
    2. 'certain' → logprob: -3.6833527088165283
    3. ' une' → logprob: -5.433352470397949
    4. '```' → logprob: -5.433352470397949
    5. 'une' → logprob: -5.558352470397949
    6. ' cert' → logprob: -5.558352470397949
    7. 'cert' → logprob: -5.683352470397949
    8. ' certe' → logprob: -5.683352470397949
    9. ' certain' → logprob: -5.683352470397949
    10. '   ' → logprob: -7.058352470397949

Token 73: ' contraintes' (ID: 167366)
  Prédit: ' conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.05013835430145264
    2. ' contraintes' → logprob: -3.550138473510742
    3. 'conditions' → logprob: -3.925138473510742
    4. '_conditions' → logprob: -9.175138473510742
    5. ' condition' → logprob: -9.300138473510742
    6. '```' → logprob: -9.675138473510742
    7. ' constraints' → logprob: -10.050138473510742
    8. ' condiciones' → logprob: -10.675138473510742
    9. ' ' → logprob: -11.050138473510742
    10. ' modalités' → logprob: -11.050138473510742

Token 74: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5288543105125427
    2. ':' → logprob: -1.1538543701171875
    3. '):' → logprob: -2.6538543701171875
    4. ')' → logprob: -4.6538543701171875
    5. ',' → logprob: -4.7788543701171875
    6. ' :' → logprob: -6.2788543701171875
    7. '.' → logprob: -6.7788543701171875
    8. '(' → logprob: -7.4038543701171875
    9. '    
' → logprob: -7.4038543701171875
    10. '    ' → logprob: -7.6538543701171875

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26258668303489685
    2. ')' → logprob: -2.6375865936279297
    3. '):' → logprob: -2.8875865936279297
    4. '
' → logprob: -3.0125865936279297
    5. ':' → logprob: -3.7625865936279297
    6. '```' → logprob: -4.63758659362793
    7. '    
' → logprob: -5.26258659362793
    8. '):
' → logprob: -5.38758659362793
    9. ' 
' → logprob: -6.01258659362793
    10. '  
' → logprob: -6.13758659362793

Token 76: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022885052487254143
    2. '    
' → logprob: -4.772884845733643
    3. ' 
' → logprob: -5.647884845733643
    4. '
' → logprob: -5.647884845733643
    5. 'n' → logprob: -6.147884845733643
    6. '  
' → logprob: -6.897884845733643
    7. '   
' → logprob: -7.022884845733643
    8. '    ' → logprob: -7.022884845733643
    9. '```' → logprob: -7.522884845733643
    10. '\n' → logprob: -8.0228853225708

Token 77: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023100698366761208
    2. '):' → logprob: -4.023100852966309
    3. ')' → logprob: -6.148100852966309
    4. ':' → logprob: -6.273100852966309
    5. '   ' → logprob: -8.648100852966309
    6. '(A' → logprob: -9.023100852966309
    7. '<|end|>' → logprob: -9.023100852966309
    8. ' ,' → logprob: -9.148100852966309
    9. ',A' → logprob: -9.148100852966309
    10. ' (' → logprob: -9.273100852966309

Token 78: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0418858528137207
    2. ' A' → logprob: -1.0418858528137207
    3. 'A' → logprob: -1.2918858528137207
    4. '```' → logprob: -4.916885852813721
    5. ',' → logprob: -5.416885852813721
    6. '    ' → logprob: -5.541885852813721
    7. ')' → logprob: -7.416885852813721
    8. ' def' → logprob: -7.666885852813721
    9. 'def' → logprob: -8.166885375976562
    10. 'n' → logprob: -8.291885375976562

Token 79: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.1424402892589569
    2. '   ' → logprob: -2.3924403190612793
    3. ' A' → logprob: -3.2674403190612793
    4. 'list' → logprob: -6.392440319061279
    5. ' list' → logprob: -7.517440319061279
    6. '       ' → logprob: -8.017439842224121
    7. '```' → logprob: -8.142439842224121
    8. '
' → logprob: -8.892439842224121
    9. 'List' → logprob: -9.142439842224121
    10. '`' → logprob: -9.892439842224121

Token 80: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036089823115617037
    2. ':' → logprob: -6.3786091804504395
    3. ' ,' → logprob: -6.6286091804504395
    4. '):' → logprob: -7.6286091804504395
    5. ' :' → logprob: -9.878608703613281
    6. ')' → logprob: -11.378608703613281
    7. ' ):' → logprob: -11.628608703613281
    8. '[' → logprob: -12.378608703613281
    9. ':list' → logprob: -12.503608703613281
    10. ',List' → logprob: -13.003608703613281

Token 81: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1904851496219635
    2. 'List' → logprob: -1.8154851198196411
    3. ':list' → logprob: -5.190485000610352
    4. ',' → logprob: -6.690485000610352
    5. ':' → logprob: -6.815485000610352
    6. ' list' → logprob: -6.940485000610352
    7. ')' → logprob: -7.815485000610352
    8. '[List' → logprob: -7.940485000610352
    9. '[list' → logprob: -7.940485000610352
    10. ' List' → logprob: -8.190485000610352

Token 82: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.004421097692102194
    2. '):' → logprob: -5.504421234130859
    3. ')' → logprob: -8.87942123413086
    4. ',' → logprob: -9.62942123413086
    5. '<int' → logprob: -9.62942123413086
    6. '[' → logprob: -10.12942123413086
    7. '[List' → logprob: -11.37942123413086
    8. '):
' → logprob: -12.25442123413086
    9. 'int' → logprob: -13.00442123413086
    10. '),' → logprob: -13.37942123413086

Token 83: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00038038729690015316
    2. 'str' → logprob: -8.500380516052246
    3. ' int' → logprob: -9.375380516052246
    4. 'list' → logprob: -10.125380516052246
    5. 'ints' → logprob: -10.625380516052246
    6. '[int' → logprob: -11.375380516052246
    7. ')' → logprob: -12.125380516052246
    8. 'tuple' → logprob: -12.500380516052246
    9. 'bool' → logprob: -13.500380516052246
    10. 'inte' → logprob: -14.000380516052246

Token 84: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5826793909072876
    2. ')' → logprob: -0.8326793909072876
    3. '[int' → logprob: -5.457679271697998
    4. '):
' → logprob: -6.707679271697998
    5. 's' → logprob: -7.832679271697998
    6. ']' → logprob: -8.832679748535156
    7. ' integers' → logprob: -8.957679748535156
    8. ']):' → logprob: -9.207679748535156
    9. '),' → logprob: -9.707679748535156
    10. '[' → logprob: -10.082679748535156

Token 85: ' La' (ID: 3038)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46952012181282043
    2. '    ' → logprob: -1.844520092010498
    3. '   ' → logprob: -3.094520092010498
    4. ' ' → logprob: -3.094520092010498
    5. '[int' → logprob: -3.594520092010498
    6. 'int' → logprob: -3.719520092010498
    7. ' The' → logprob: -3.969520092010498
    8. '<|end|>' → logprob: -4.844520092010498
    9. ' int' → logprob: -5.094520092010498
    10. ' A' → logprob: -5.344520092010498

Token 86: ' première' (ID: 23423)
  Prédit: ' sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.46491897106170654
    2. ' liste' → logprob: -1.5899189710617065
    3. ' première' → logprob: -2.089919090270996
    4. 'prem' → logprob: -3.964919090270996
    5. ' sequence' → logprob: -4.339919090270996
    6. 'sé' → logprob: -5.339919090270996
    7. 's' → logprob: -6.089919090270996
    8. 'liste' → logprob: -6.839919090270996
    9. 'sequence' → logprob: -6.964919090270996
    10. ' ' → logprob: -7.464919090270996

Token 87: ' liste' (ID: 31719)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.885259747505188
    2. ')' → logprob: -1.760259747505188
    3. ' ' → logprob: -1.885259747505188
    4. ' )' → logprob: -2.5102596282958984
    5. ',' → logprob: -3.0102596282958984
    6. ' ,' → logprob: -3.1352596282958984
    7. '<|end|>' → logprob: -4.135259628295898
    8. ' des' → logprob: -4.260259628295898
    9. 'sequence' → logprob: -4.260259628295898
    10. ' list' → logprob: -4.510259628295898

Token 88: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5521841645240784
    2. '<|end|>' → logprob: -1.4271841049194336
    3. '[int' → logprob: -2.9271841049194336
    4. ' )' → logprob: -3.1771841049194336
    5. ')' → logprob: -3.3021841049194336
    6. ' ,' → logprob: -3.8021841049194336
    7. ',' → logprob: -4.802184104919434
    8. ' de' → logprob: -5.052184104919434
    9. ' of' → logprob: -5.802184104919434
    10. '[' → logprob: -5.927184104919434

Token 89: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.1878747045993805
    2. ' ent' → logprob: -2.0628747940063477
    3. 'ent' → logprob: -3.4378747940063477
    4. '’ent' → logprob: -4.937874794006348
    5. ')' → logprob: -7.062874794006348
    6. ' integers' → logprob: -7.187874794006348
    7. ' entier' → logprob: -7.312874794006348
    8. ' nombres' → logprob: -7.437874794006348
    9. 'e' → logprob: -7.562874794006348
    10. ' des' → logprob: -8.187874794006348

Token 90: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00546414777636528
    2. 'ières' → logprob: -5.25546407699585
    3. 'i' → logprob: -8.880464553833008
    4. 'ier' → logprob: -9.755464553833008
    5. '```' → logprob: -10.755464553833008
    6. '   ' → logprob: -12.630464553833008
    7. 'ière' → logprob: -12.880464553833008
    8. 'ires' → logprob: -13.505464553833008
    9. 'ié' → logprob: -13.880464553833008
    10. 'riers' → logprob: -14.880464553833008

Token 91: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03196997195482254
    2. ',' → logprob: -4.281970024108887
    3. ' )' → logprob: -4.281970024108887
    4. '<|end|>' → logprob: -6.531970024108887
    5. '   ' → logprob: -6.781970024108887
    6. ' ,' → logprob: -7.531970024108887
    7. '[' → logprob: -8.156970024108887
    8. ']' → logprob: -9.406970024108887
    9. '<|end|>' → logprob: -9.531970024108887
    10. ' ' → logprob: -9.656970024108887

Token 92: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07477539032697678
    2. '   ' → logprob: -2.824775457382202
    3. ')
' → logprob: -5.574775218963623
    4. '       ' → logprob: -6.449775218963623
    5. ' )' → logprob: -6.449775218963623
    6. '):' → logprob: -6.574775218963623
    7. ' ' → logprob: -6.824775218963623
    8. ',' → logprob: -7.324775218963623
    9. '):
' → logprob: -7.574775218963623
    10. ' )
' → logprob: -8.324775695800781

Token 93: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.2306317687034607
    2. ' B' → logprob: -2.1056318283081055
    3. '   ' → logprob: -2.4806318283081055
    4. ' ' → logprob: -8.105631828308105
    5. ' ' → logprob: -9.605631828308105
    6. ')' → logprob: -9.855631828308105
    7. '       ' → logprob: -10.355631828308105
    8. '  ' → logprob: -10.855631828308105
    9. '    ' → logprob: -11.730631828308105
    10. ',' → logprob: -12.355631828308105

Token 94: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0022329248022288084
    2. ')' → logprob: -7.002233028411865
    3. ':' → logprob: -7.627233028411865
    4. ' :' → logprob: -8.502232551574707
    5. ' ' → logprob: -8.752232551574707
    6. '):' → logprob: -8.752232551574707
    7. ' )' → logprob: -9.002232551574707
    8. '(' → logprob: -9.502232551574707
    9. ' ):' → logprob: -10.502232551574707
    10. '(list' → logprob: -10.627232551574707

Token 95: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04861824959516525
    2. ' list' → logprob: -3.0486183166503906
    3. '[list' → logprob: -10.54861831665039
    4. ')' → logprob: -12.92361831665039
    5. ':list' → logprob: -14.54861831665039
    6. ' )' → logprob: -14.67361831665039
    7. '(list' → logprob: -14.67361831665039
    8. 'l' → logprob: -16.17361831665039
    9. ',list' → logprob: -16.17361831665039
    10. '	list' → logprob: -16.29861831665039

Token 96: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.00039825684507377446
    2. 'of' → logprob: -8.625398635864258
    3. '[int' → logprob: -8.750398635864258
    4. ')' → logprob: -10.250398635864258
    5. ' de' → logprob: -11.625398635864258
    6. '[' → logprob: -12.500398635864258
    7. 's' → logprob: -13.250398635864258
    8. '	of' → logprob: -13.375398635864258
    9. '```' → logprob: -13.500398635864258
    10. ',' → logprob: -13.625398635864258

Token 97: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.020551582798361778
    2. ' int' → logprob: -3.8955516815185547
    3. '[int' → logprob: -12.395551681518555
    4. '(int' → logprob: -13.270551681518555
    5. ')' → logprob: -13.895551681518555
    6. '<int' → logprob: -14.145551681518555
    7. ' ' → logprob: -15.145551681518555
    8. ']int' → logprob: -15.270551681518555
    9. ',int' → logprob: -15.520551681518555
    10. ':int' → logprob: -15.520551681518555

Token 98: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021838073153048754
    2. ']):' → logprob: -6.62718391418457
    3. '[int' → logprob: -7.75218391418457
    4. ')' → logprob: -8.37718391418457
    5. ']:' → logprob: -9.25218391418457
    6. ':' → logprob: -10.62718391418457
    7. ' ):' → logprob: -11.00218391418457
    8. '):
' → logprob: -11.50218391418457
    9. ')):' → logprob: -11.50218391418457
    10. '>):' → logprob: -11.62718391418457

Token 99: ' La' (ID: 3038)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.021194173023104668
    2. 'list' → logprob: -4.271193981170654
    3. ')' → logprob: -5.146193981170654
    4. ' la' → logprob: -7.646193981170654
    5. ' )' → logprob: -7.771193981170654
    6. ' ' → logprob: -9.146194458007812
    7. '   ' → logprob: -10.021194458007812
    8. '(list' → logprob: -10.396194458007812
    9. 'La' → logprob: -11.146194458007812
    10. ' La' → logprob: -11.271194458007812

Token 100: ' seconde' (ID: 66204)
  Prédit: ' deuxième'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deuxième' → logprob: -0.062083080410957336
    2. ' seconde' → logprob: -2.9370830059051514
    3. 'de' → logprob: -5.5620832443237305
    4. ' première' → logprob: -6.0620832443237305
    5. ' second' → logprob: -8.18708324432373
    6. ' ' → logprob: -8.68708324432373
    7. ' dernière' → logprob: -9.18708324432373
    8. ' deux' → logprob: -9.31208324432373
    9. ' ' → logprob: -9.81208324432373
    10. ' suivante' → logprob: -9.81208324432373

Token 101: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11907226592302322
    2. ' list' → logprob: -2.744072198867798
    3. ' )' → logprob: -3.494072198867798
    4. ' ,' → logprob: -4.994072437286377
    5. ')' → logprob: -5.244072437286377
    6. ' liste' → logprob: -6.994072437286377
    7. ' des' → logprob: -7.119072437286377
    8. '[list' → logprob: -7.494072437286377
    9. ',' → logprob: -7.619072437286377
    10. '[' → logprob: -7.744072437286377

Token 102: ' d' (ID: 272)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21566732227802277
    2. ')' → logprob: -3.215667247772217
    3. ' of' → logprob: -3.215667247772217
    4. '   ' → logprob: -3.715667247772217
    5. '[int' → logprob: -3.715667247772217
    6. '[' → logprob: -3.840667247772217
    7. ':' → logprob: -4.340667247772217
    8. ',' → logprob: -5.090667247772217
    9. '<|end|>' → logprob: -5.465667247772217
    10. ' ):' → logprob: -5.840667247772217

Token 103: ''ent' (ID: 53422)
  Prédit: ''int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''int' → logprob: -0.35909077525138855
    2. ''ent' → logprob: -1.984090805053711
    3. ''' → logprob: -2.734090805053711
    4. ',' → logprob: -3.609090805053711
    5. '[int' → logprob: -3.859090805053711
    6. 'int' → logprob: -3.984090805053711
    7. ''import' → logprob: -5.359090805053711
    8. '```' → logprob: -5.734090805053711
    9. ''entre' → logprob: -5.984090805053711
    10. ',int' → logprob: -5.984090805053711

Token 104: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.44063931703567505
    2. '```' → logprob: -2.1906392574310303
    3. 'ières' → logprob: -2.3156392574310303
    4. '   ' → logprob: -2.3156392574310303
    5. '       ' → logprob: -4.065639495849609
    6. 'ier' → logprob: -4.315639495849609
    7. 'ière' → logprob: -5.065639495849609
    8. 'i' → logprob: -5.690639495849609
    9. ')' → logprob: -7.190639495849609
    10. ']' → logprob: -7.690639495849609

Token 105: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12501811981201172
    2. ')' → logprob: -2.2500181198120117
    3. '):
' → logprob: -4.625018119812012
    4. '   ' → logprob: -6.125018119812012
    5. ',' → logprob: -10.375018119812012
    6. '):
' → logprob: -10.875018119812012
    7. '):

' → logprob: -10.875018119812012
    8. '```' → logprob: -11.375018119812012
    9. ')
' → logprob: -11.500018119812012
    10. '),' → logprob: -11.750018119812012

Token 106: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.598881721496582
    2. '   ' → logprob: -0.848881721496582
    3. '):' → logprob: -5.098881721496582
    4. '):
' → logprob: -5.348881721496582
    5. '"""' → logprob: -5.348881721496582
    6. '
' → logprob: -6.723881721496582
    7. '```' → logprob: -6.973881721496582
    8. '    
' → logprob: -6.973881721496582
    9. '"""
' → logprob: -7.098881721496582
    10. ')
' → logprob: -7.223881721496582

Token 107: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04980360344052315
    2. '
' → logprob: -3.4248034954071045
    3. '    
' → logprob: -5.174803733825684
    4. 'n' → logprob: -5.549803733825684
    5. ')' → logprob: -6.299803733825684
    6. ' 
' → logprob: -6.799803733825684
    7. '"""
' → logprob: -7.424803733825684
    8. '#' → logprob: -7.674803733825684
    9. '  
' → logprob: -7.799803733825684
    10. ' """
' → logprob: -8.174803733825684

Token 108: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.7766150236129761
    2. ':' → logprob: -1.401615023612976
    3. ' True' → logprob: -1.401615023612976
    4. ' ' → logprob: -4.026615142822266
    5. ' None' → logprob: -4.526615142822266
    6. ' bool' → logprob: -4.776615142822266
    7. 'True' → logprob: -5.526615142822266
    8. ' False' → logprob: -5.901615142822266
    9. '  ' → logprob: -7.276615142822266
    10. ' ):' → logprob: -7.526615142822266

Token 109: '       ' (ID: 309)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.582355797290802
    2. '   ' → logprob: -1.3323557376861572
    3. '"' → logprob: -2.5823557376861572
    4. 'True' → logprob: -2.9573557376861572
    5. '    ' → logprob: -4.207355976104736
    6. ' None' → logprob: -5.082355976104736
    7. ' bool' → logprob: -5.082355976104736
    8. ' False' → logprob: -5.082355976104736
    9. ' "' → logprob: -5.457355976104736
    10. ''' → logprob: -5.457355976104736

Token 110: ' str' (ID: 989)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.10095114260911942
    2. ' bool' → logprob: -2.3509511947631836
    3. 'str' (adapté à ' str') → logprob: -7.850951194763184
    4. '   ' → logprob: -8.850951194763184
    5. ' str' → logprob: -8.850951194763184
    6. 'int' → logprob: -10.975951194763184
    7. 'True' → logprob: -11.850951194763184
    8. 'list' → logprob: -11.850951194763184
    9. '(bool' → logprob: -11.975951194763184
    10. ' True' → logprob: -12.350951194763184

Token 111: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02280617319047451
    2. '":' → logprob: -4.147806167602539
    3. ' :' → logprob: -5.647806167602539
    4. ':
' → logprob: -6.272806167602539
    5. '"' → logprob: -7.147806167602539
    6. '':' → logprob: -8.147806167602539
    7. '):' → logprob: -10.147806167602539
    8. ''' → logprob: -10.397806167602539
    9. '":"' → logprob: -10.647806167602539
    10. ' ":' → logprob: -10.647806167602539

Token 112: ' '' (ID: 461)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.6715919971466064
    2. '"' → logprob: -0.7965919971466064
    3. ''' → logprob: -4.046591758728027
    4. ' '' → logprob: -4.546591758728027
    5. '"La' → logprob: -6.296591758728027
    6. '   ' → logprob: -6.421591758728027
    7. ' Possible' → logprob: -6.421591758728027
    8. ' True' → logprob: -6.796591758728027
    9. '"O' → logprob: -7.296591758728027
    10. 'Possible' → logprob: -7.796591758728027

Token 113: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.17226111888885498
    2. 'Yes' → logprob: -1.922261118888855
    3. '"' → logprob: -5.0472612380981445
    4. 'Possible' → logprob: -5.4222612380981445
    5. 'Oui' → logprob: -8.047261238098145
    6. ''' → logprob: -8.797261238098145
    7. 'possible' → logprob: -8.922261238098145
    8. 'yes' → logprob: -8.922261238098145
    9. 'NO' → logprob: -9.047261238098145
    10. 'oui' → logprob: -10.422261238098145

Token 114: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00030733743915334344
    2. '\n' → logprob: -8.125307083129883
    3. '"' → logprob: -12.000307083129883
    4. ''or' → logprob: -13.375307083129883
    5. 'Yes' → logprob: -13.500307083129883
    6. 'or' → logprob: -15.125307083129883
    7. '```' → logprob: -15.125307083129883
    8. ''\' → logprob: -15.500307083129883
    9. ' or' → logprob: -15.500307083129883
    10. ''
' → logprob: -15.750307083129883

Token 115: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15681731700897217
    2. ' or' → logprob: -2.4068174362182617
    3. ' ou' → logprob: -3.4068174362182617
    4. 'if' → logprob: -4.781817436218262
    5. ' si' → logprob: -4.781817436218262
    6. ''' → logprob: -6.031817436218262
    7. '   ' → logprob: -6.906817436218262
    8. '```' → logprob: -7.031817436218262
    9. '
' → logprob: -8.656817436218262
    10. ' ' → logprob: -8.906817436218262

Token 116: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0698857456445694
    2. ' possible' → logprob: -3.444885730743408
    3. ' '' → logprob: -3.944885730743408
    4. '"' → logprob: -4.819885730743408
    5. ' ' → logprob: -6.194885730743408
    6. ' il' → logprob: -6.694885730743408
    7. ''il' → logprob: -6.944885730743408
    8. ' la' → logprob: -7.069885730743408
    9. ' c' → logprob: -7.194885730743408
    10. ' ' → logprob: -7.444885730743408

Token 117: ' transformation' (ID: 26242)
  Prédit: ' transformation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transformation' → logprob: -0.058751385658979416
    2. 'trans' → logprob: -3.308751344680786
    3. ' transforme' → logprob: -5.058751583099365
    4. ' possible' → logprob: -6.058751583099365
    5. 'transform' → logprob: -6.308751583099365
    6. 'A' → logprob: -6.558751583099365
    7. ' transform' → logprob: -6.558751583099365
    8. 're' → logprob: -6.933751583099365
    9. 't' → logprob: -7.308751583099365
    10. 'r' → logprob: -7.433751583099365

Token 118: ' est' (ID: 893)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0290873050689697
    2. ' est' → logprob: -1.1540873050689697
    3. ' possible' → logprob: -1.4040873050689697
    4. ' is' → logprob: -3.1540873050689697
    5. 'possible' → logprob: -3.6540873050689697
    6. ' '' → logprob: -5.154087066650391
    7. ''est' → logprob: -5.904087066650391
    8. ' ' → logprob: -6.904087066650391
    9. 'Possible' → logprob: -7.029087066650391
    10. 'est' → logprob: -7.154087066650391

Token 119: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.0341489352285862
    2. 'possible' → logprob: -3.409148931503296
    3. '_possible' → logprob: -7.909149169921875
    4. '   ' → logprob: -10.409149169921875
    5. ' posible' → logprob: -11.034149169921875
    6. ' poss' → logprob: -11.409149169921875
    7. ' pos' → logprob: -11.409149169921875
    8. 'pos' → logprob: -11.534149169921875
    9. 'Possible' → logprob: -11.659149169921875
    10. ' possibile' → logprob: -11.659149169921875

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026177790015935898
    2. '   ' → logprob: -4.401177883148193
    3. '',' → logprob: -4.776177883148193
    4. ''' → logprob: -5.401177883148193
    5. ' ,' → logprob: -8.026177406311035
    6. '```' → logprob: -9.526177406311035
    7. ',
' → logprob: -9.776177406311035
    8. '\n' → logprob: -10.276177406311035
    9. ';' → logprob: -10.526177406311035
    10. ''\' → logprob: -10.776177406311035

Token 121: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014716806821525097
    2. ' '' → logprob: -4.389716625213623
    3. ''\' → logprob: -6.514716625213623
    4. '"' → logprob: -8.264717102050781
    5. ' '\' → logprob: -8.889717102050781
    6. '   ' → logprob: -9.264717102050781
    7. ' else' → logprob: -9.639717102050781
    8. ' 
' → logprob: -10.014717102050781
    9. '       ' → logprob: -10.514717102050781
    10. '\n' → logprob: -11.389717102050781

Token 122: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.028284480795264244
    2. ' No' → logprob: -4.153284549713135
    3. ''' → logprob: -4.778284549713135
    4. 'Non' → logprob: -5.653284549713135
    5. ' '' → logprob: -9.153284072875977
    6. 'Yes' → logprob: -10.278284072875977
    7. ' Non' → logprob: -10.528284072875977
    8. ' non' → logprob: -11.653284072875977
    9. '   ' → logprob: -11.903284072875977
    10. '"No' → logprob: -11.903284072875977

Token 123: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -7.052377623040229e-05
    2. ''
' → logprob: -10.375070571899414
    3. '')' → logprob: -10.375070571899414
    4. '"' → logprob: -12.250070571899414
    5. '',' → logprob: -14.125070571899414
    6. ')' → logprob: -14.375070571899414
    7. ' '' → logprob: -14.500070571899414
    8. ''''' → logprob: -15.125070571899414
    9. ')'' → logprob: -15.625070571899414
    10. ''
' → logprob: -16.250070571899414

Token 124: ' sinon' (ID: 52915)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004363659769296646
    2. ''
' → logprob: -5.629363536834717
    3. '"' → logprob: -8.629364013671875
    4. '
' → logprob: -9.254364013671875
    5. '```' → logprob: -9.254364013671875
    6. '',' → logprob: -9.379364013671875
    7. '   ' → logprob: -9.629364013671875
    8. ''''
' → logprob: -9.754364013671875
    9. '\n' → logprob: -9.879364013671875
    10. '')' → logprob: -10.254364013671875

Token 125: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07222729921340942
    2. ''' → logprob: -3.8222272396087646
    3. ')' → logprob: -3.8222272396087646
    4. '
' → logprob: -4.822227478027344
    5. '"' → logprob: -5.447227478027344
    6. '```' → logprob: -5.572227478027344
    7. 'def' → logprob: -5.697227478027344
    8. '"""' → logprob: -6.572227478027344
    9. ':' → logprob: -6.947227478027344
    10. '):' → logprob: -7.322227478027344

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08704971522092819
    2. '
' → logprob: -2.837049722671509
    3. '    
' → logprob: -4.71204948425293
    4. '"""' → logprob: -5.46204948425293
    5. ')' → logprob: -5.71204948425293
    6. '\n' → logprob: -6.33704948425293
    7. '```' → logprob: -6.58704948425293
    8. '  
' → logprob: -6.83704948425293
    9. '"""
' → logprob: -6.83704948425293
    10. ' 
' → logprob: -7.21204948425293

Token 127: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25222334265708923
    2. '
' → logprob: -1.7522233724594116
    3. '"""' → logprob: -4.002223491668701
    4. '```' → logprob: -4.627223491668701
    5. ')' → logprob: -5.252223491668701
    6. '"""
' → logprob: -5.627223491668701
    7. '\n' → logprob: -5.877223491668701
    8. '    
' → logprob: -5.877223491668701
    9. ''' → logprob: -6.252223491668701
    10. '"' → logprob: -6.627223491668701

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00499441334977746
    2. 'n' → logprob: -6.1299943923950195
    3. ' n' → logprob: -6.6299943923950195
    4. '    
' → logprob: -7.6299943923950195
    5. '#' → logprob: -7.8799943923950195
    6. ' if' → logprob: -8.62999439239502
    7. ' #' → logprob: -9.00499439239502
    8. '
' → logprob: -9.50499439239502
    9. 'if' → logprob: -9.62999439239502
    10. 'count' → logprob: -10.62999439239502

Token 129: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0104907751083374
    2. 'freq' → logprob: -1.7604907751083374
    3. 'n' → logprob: -1.8854907751083374
    4. 'if' → logprob: -2.135490894317627
    5. 'counter' → logprob: -2.885490894317627
    6. 'from' → logprob: -3.010490894317627
    7. '#' (adapté à ' #') → logprob: -3.385490894317627
    8. 'cnt' → logprob: -3.635490894317627
    9. 'counts' → logprob: -4.635490894317627
    10. 'c' → logprob: -5.260490894317627

Token 130: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6134386658668518
    2. 'count' → logprob: -2.113438606262207
    3. 'counter' → logprob: -2.488438606262207
    4. 'freq' → logprob: -2.988438606262207
    5. 'comp' → logprob: -3.113438606262207
    6. 'n' → logprob: -3.238438606262207
    7. 'cnt' → logprob: -3.488438606262207
    8. 'from' → logprob: -3.488438606262207
    9. ' if' → logprob: -3.863438606262207
    10. '#' → logprob: -3.988438606262207

Token 131: ' trie' (ID: 139428)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9138109087944031
    2. ' counter' → logprob: -1.6638109683990479
    3. 'n' → logprob: -2.913810968399048
    4. ' a' → logprob: -2.913810968399048
    5. ' freq' → logprob: -2.913810968399048
    6. ' c' → logprob: -3.038810968399048
    7. '   ' → logprob: -3.038810968399048
    8. ' count' → logprob: -3.663810968399048
    9. 'counter' → logprob: -4.163810729980469
    10. 'A' → logprob: -4.163810729980469

Token 132: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39694589376449585
    2. 'A' → logprob: -1.5219459533691406
    3. ' A' → logprob: -2.2719459533691406
    4. '(A' → logprob: -6.271945953369141
    5. 's' → logprob: -6.521945953369141
    6. '  ' → logprob: -7.521945953369141
    7. ' ' → logprob: -7.896945953369141
    8. 'a' → logprob: -8.39694595336914
    9. '    ' → logprob: -8.39694595336914
    10. '    
' → logprob: -8.39694595336914

Token 133: ''abord' (ID: 89989)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4536539614200592
    2. ' A' → logprob: -1.7036539316177368
    3. 'e' → logprob: -2.0786540508270264
    4. 'es' → logprob: -3.4536540508270264
    5. '(A' → logprob: -5.078653812408447
    6. '   ' → logprob: -5.328653812408447
    7. '`' → logprob: -5.828653812408447
    8. ' ' → logprob: -6.828653812408447
    9. 'u' → logprob: -6.953653812408447
    10. '(sorted' → logprob: -7.078653812408447

Token 134: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6908201575279236
    2. 'A' → logprob: -1.0658202171325684
    3. ' A' → logprob: -1.9408202171325684
    4. ' les' → logprob: -5.690820217132568
    5. 's' → logprob: -5.815820217132568
    6. '(A' → logprob: -6.565820217132568
    7. '	A' → logprob: -7.815820217132568
    8. ' ' → logprob: -8.19081974029541
    9. '    
' → logprob: -8.31581974029541
    10. ' B' → logprob: -8.44081974029541

Token 135: ' deux' (ID: 10301)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.44911500811576843
    2. ' A' → logprob: -1.1991150379180908
    3. ' indices' → logprob: -3.074115037918091
    4. 'indices' → logprob: -5.199114799499512
    5. ' B' → logprob: -5.449114799499512
    6. 'B' → logprob: -6.199114799499512
    7. ' copies' → logprob: -7.949114799499512
    8. ' ' → logprob: -8.199114799499512
    9. 'a' → logprob: -8.449114799499512
    10. ' deux' → logprob: -8.574114799499512

Token 136: ' listes' (ID: 179198)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.18663132190704346
    2. 'A' → logprob: -1.8116313219070435
    3. ' sequences' → logprob: -6.186631202697754
    4. ' lists' → logprob: -6.936631202697754
    5. '   ' → logprob: -7.311631202697754
    6. ' ' → logprob: -7.436631202697754
    7. ' listes' → logprob: -7.811631202697754
    8. ' arrays' → logprob: -8.061631202697754
    9. '(A' → logprob: -8.061631202697754
    10. 'list' → logprob: -8.686631202697754

Token 137: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07996168732643127
    2. 'A' → logprob: -2.8299617767333984
    3. ' A' → logprob: -4.954961776733398
    4. '
' → logprob: -4.954961776733398
    5. '    
' → logprob: -5.829961776733398
    6. '(A' → logprob: -8.454961776733398
    7. ',' → logprob: -9.704961776733398
    8. 'a' → logprob: -9.954961776733398
    9. '	A' → logprob: -10.079961776733398
    10. ' 
' → logprob: -10.079961776733398

Token 138: ' faciliter' (ID: 106284)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.790263295173645
    2. ' A' → logprob: -1.415263295173645
    3. ' s' → logprob: -2.2902631759643555
    4. '   ' → logprob: -2.4152631759643555
    5. ' les' → logprob: -3.1652631759643555
    6. 's' → logprob: -4.4152631759643555
    7. ' assurer' → logprob: -4.7902631759643555
    8. ' comparer' → logprob: -4.7902631759643555
    9. ' garantir' → logprob: -5.5402631759643555
    10. 'les' → logprob: -5.5402631759643555

Token 139: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7294409871101379
    2. '   ' → logprob: -1.3544409275054932
    3. 'A' → logprob: -2.104440927505493
    4. ' A' → logprob: -2.854440927505493
    5. ' ' → logprob: -3.479440927505493
    6. ' l' → logprob: -4.479441165924072
    7. ' for' → logprob: -4.604441165924072
    8. ' les' → logprob: -4.854441165924072
    9. 'for' → logprob: -5.354441165924072
    10. 'l' → logprob: -5.854441165924072

Token 140: ' comparaison' (ID: 170508)
  Prédit: ' comparaison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comparaison' → logprob: -0.6816407442092896
    2. 'compar' → logprob: -1.0566407442092896
    3. ' vér' → logprob: -3.056640625
    4. 'v' → logprob: -3.306640625
    5. ' compar' → logprob: -4.056640625
    6. 'comparison' → logprob: -4.181640625
    7. ' comparison' → logprob: -5.181640625
    8. ' traitement' → logprob: -5.806640625
    9. 'validation' → logprob: -6.056640625
    10. 'trait' → logprob: -6.181640625

Token 141: ' élément' (ID: 99627)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1207868680357933
    2. 'A' → logprob: -2.7457869052886963
    3. '    
' → logprob: -3.8707869052886963
    4. '
' → logprob: -3.9957869052886963
    5. ' A' → logprob: -4.745786666870117
    6. ',' → logprob: -7.995786666870117
    7. '   
' → logprob: -7.995786666870117
    8. '  
' → logprob: -8.370786666870117
    9. '.' → logprob: -8.620786666870117
    10. '  ' → logprob: -9.495786666870117

Token 142: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.3982785940170288
    2. ' by' → logprob: -1.2732785940170288
    3. 'par' → logprob: -3.8982787132263184
    4. ',' → logprob: -4.898278713226318
    5. ' à' → logprob: -4.898278713226318
    6. '-by' → logprob: -5.773278713226318
    7. 's' → logprob: -6.023278713226318
    8. 'by' → logprob: -6.148278713226318
    9. 'wise' → logprob: -6.648278713226318
    10. ' a' → logprob: -7.023278713226318

Token 143: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.005724235903471708
    2. '-' → logprob: -6.0057244300842285
    3. 'éc' → logprob: -7.6307244300842285
    4. 'él' → logprob: -7.6307244300842285
    5. 'lement' → logprob: -7.8807244300842285
    6. 'lemme' → logprob: -8.13072395324707
    7. 'el' → logprob: -8.75572395324707
    8. 'ordre' → logprob: -8.75572395324707
    9. '_' → logprob: -8.88072395324707
    10. '```' → logprob: -9.00572395324707

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03868691623210907
    2. '    
' → logprob: -4.038686752319336
    3. '
' → logprob: -4.788686752319336
    4. ',' → logprob: -5.663686752319336
    5. 'A' → logprob: -6.413686752319336
    6. '  
' → logprob: -6.538686752319336
    7. '   
' → logprob: -6.663686752319336
    8. '\n' → logprob: -6.913686752319336
    9. '.' → logprob: -6.913686752319336
    10. ' ' → logprob: -7.288686752319336

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054159823805093765
    2. '    
' → logprob: -3.6791598796844482
    3. '
' → logprob: -3.8041598796844482
    4. 'A' → logprob: -5.679159641265869
    5. '  
' → logprob: -7.679159641265869
    6. '   
' → logprob: -7.679159641265869
    7. ' A' → logprob: -8.304160118103027
    8. ',' → logprob: -8.679160118103027
    9. '```' → logprob: -9.429160118103027
    10. ' ' → logprob: -9.554160118103027

Token 146: ' SA' (ID: 19609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.934333324432373
    2. ' A' → logprob: -0.934333324432373
    3. 'A' → logprob: -1.559333324432373
    4. 'a' → logprob: -6.434333324432373
    5. ' a' → logprob: -7.309333324432373
    6. '    
' → logprob: -7.559333324432373
    7. ' ' → logprob: -7.559333324432373
    8. '
' → logprob: -8.934333801269531
    9. ' sorted' → logprob: -9.309333801269531
    10. '  ' → logprob: -9.559333801269531

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.698409914970398
    2. ' =' → logprob: -0.698409914970398
    3. '=A' → logprob: -5.8234100341796875
    4. 'A' → logprob: -6.3234100341796875
    5. ',' → logprob: -8.198410034179688
    6. '=S' → logprob: -9.448410034179688
    7. '_A' → logprob: -10.323410034179688
    8. '1' → logprob: -10.948410034179688
    9. '_' → logprob: -11.073410034179688
    10. '_sorted' → logprob: -11.073410034179688

Token 148: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.12693241238594055
    2. ' sorted' → logprob: -2.126932382583618
    3. '(sorted' → logprob: -13.126932144165039
    4. '   ' → logprob: -14.126932144165039
    5. ' ' → logprob: -14.376932144165039
    6. '.sorted' → logprob: -14.751932144165039
    7. 's' → logprob: -15.376932144165039
    8. 'Sorted' → logprob: -15.751932144165039
    9. 'sort' → logprob: -16.12693214416504
    10. '  ' → logprob: -16.62693214416504

Token 149: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0008278522291220725
    2. '(' → logprob: -7.125827789306641
    3. 'A' → logprob: -11.00082778930664
    4. '(
' → logprob: -12.62582778930664
    5. ' (' → logprob: -13.25082778930664
    6. ')' → logprob: -14.62582778930664
    7. '((' → logprob: -15.25082778930664
    8. ' A' → logprob: -15.37582778930664
    9. '(S' → logprob: -15.75082778930664
    10. '(B' → logprob: -15.87582778930664

Token 150: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47428950667381287
    2. ')' → logprob: -0.9742895364761353
    3. ' )
' → logprob: -8.974289894104004
    4. ')
' → logprob: -9.849289894104004
    5. ' )' → logprob: -10.849289894104004
    6. '   ' → logprob: -11.724289894104004
    7. ')

' → logprob: -12.849289894104004
    8. ',' → logprob: -13.974289894104004
    9. ')#' → logprob: -14.599289894104004
    10. ')`
' → logprob: -14.724289894104004

Token 151: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5214007496833801
    2. '   ' → logprob: -1.2714006900787354
    3. '    
' → logprob: -2.8964006900787354
    4. '  
' → logprob: -3.1464006900787354
    5. 'S' → logprob: -4.8964009284973145
    6. ' 
' → logprob: -5.5214009284973145
    7. '<|end|>' → logprob: -5.6464009284973145
    8. '   
' → logprob: -6.2714009284973145
    9. ',' → logprob: -6.3964009284973145
    10. '\n' → logprob: -6.6464009284973145

Token 152: ' SB' (ID: 41915)
  Prédit: 'SB'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SB' (adapté à ' SB') → logprob: -0.006777303759008646
    2. ' SB' → logprob: -5.006777286529541
    3. ' ' → logprob: -10.8817777633667
    4. 'S' → logprob: -11.2567777633667
    5. '   ' → logprob: -11.6317777633667
    6. '_SB' → logprob: -12.2567777633667
    7. '
' → logprob: -12.5067777633667
    8. 'sb' → logprob: -13.0067777633667
    9. '  
' → logprob: -13.1317777633667
    10. ' 
' → logprob: -13.6317777633667

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132671117782593
    2. ' =' → logprob: -1.3132671117782593
    3. '   ' → logprob: -13.06326675415039
    4. ')' → logprob: -13.68826675415039
    5. '=B' → logprob: -14.56326675415039
    6. '=s' → logprob: -15.06326675415039
    7. ' ' → logprob: -15.06326675415039
    8. '=b' → logprob: -15.56326675415039
    9. '=A' → logprob: -16.18826675415039
    10. 'A' → logprob: -16.43826675415039

Token 154: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.020583350211381912
    2. ' sorted' → logprob: -3.895583391189575
    3. '(sorted' → logprob: -10.145583152770996
    4. '.sorted' → logprob: -14.020583152770996
    5. 'Sorted' → logprob: -14.145583152770996
    6. '_sorted' → logprob: -15.395583152770996
    7. 's' → logprob: -15.645583152770996
    8. ' ' → logprob: -16.520584106445312
    9. '   ' → logprob: -16.645584106445312
    10. 'b' → logprob: -17.145584106445312

Token 155: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.125017166137695
    3. 'B' → logprob: -13.250017166137695
    4. '(
' → logprob: -16.500017166137695
    5. '(A' → logprob: -16.875017166137695
    6. '(S' → logprob: -18.375017166137695
    7. '(b' → logprob: -19.250017166137695
    8. ' (' → logprob: -19.250017166137695
    9. ')' → logprob: -20.375017166137695
    10. '((' → logprob: -20.500017166137695

Token 156: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001468067930545658
    2. ')
' → logprob: -9.125146865844727
    3. '   ' → logprob: -10.625146865844727
    4. ' )' → logprob: -11.375146865844727
    5. ')

' → logprob: -14.000146865844727
    6. ' ' → logprob: -15.250146865844727
    7. ',' → logprob: -15.625146865844727
    8. '
' → logprob: -15.875146865844727
    9. ')`' → logprob: -16.375146865844727
    10. ']' → logprob: -16.500146865844727

Token 157: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23156766593456268
    2. '   ' → logprob: -1.856567621231079
    3. '    
' → logprob: -3.481567621231079
    4. '  
' → logprob: -4.481567859649658
    5. ' 
' → logprob: -5.481567859649658
    6. '\n' → logprob: -5.981567859649658
    7. '   
' → logprob: -6.731567859649658
    8. ')
' → logprob: -9.1065673828125
    9. '<|end|>' → logprob: -9.6065673828125
    10. ')' → logprob: -9.8565673828125

Token 158: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21015861630439758
    2. 'if' → logprob: -2.085158586502075
    3. 'n' → logprob: -2.835158586502075
    4. '#' (adapté à ' #') → logprob: -5.460158824920654
    5. 'i' → logprob: -6.960158824920654
    6. '   ' → logprob: -7.335158824920654
    7. ' for' → logprob: -7.960158824920654
    8. 'm' → logprob: -8.960158348083496
    9. '
' → logprob: -9.585158348083496
    10. 'N' → logprob: -10.460158348083496

Token 159: ' Première' (ID: 179764)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12443188577890396
    2. 'if' → logprob: -2.624431848526001
    3. '#' → logprob: -3.249431848526001
    4. 'n' → logprob: -5.87443208694458
    5. ' for' → logprob: -6.24943208694458
    6. '   ' → logprob: -8.249431610107422
    7. 'prev' → logprob: -8.749431610107422
    8. ' if' → logprob: -8.749431610107422
    9. '
' → logprob: -9.124431610107422
    10. 'counter' → logprob: -10.249431610107422

Token 160: ' vér' (ID: 42524)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7273877859115601
    2. 'if' → logprob: -1.60238778591156
    3. ' for' → logprob: -1.72738778591156
    4. ' if' → logprob: -2.6023879051208496
    5. ' ' → logprob: -4.72738790512085
    6. 'ly' → logprob: -4.85238790512085
    7. ':' → logprob: -5.10238790512085
    8. ' ligne' → logprob: -5.22738790512085
    9. 'ment' → logprob: -5.35238790512085
    10. ',' → logprob: -5.60238790512085

Token 161: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.14371800422668457
    2. 'if' → logprob: -2.0187180042266846
    3. 'ifie' → logprob: -7.2687177658081055
    4. '#' → logprob: -8.518717765808105
    5. 'ifi' → logprob: -9.518717765808105
    6. 'i' → logprob: -10.643717765808105
    7. 'ication' → logprob: -11.268717765808105
    8. 'ifié' → logprob: -12.143717765808105
    9. 'ifica' → logprob: -12.768717765808105
    10. '   ' → logprob: -12.768717765808105

Token 162: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3375645577907562
    2. ':' → logprob: -1.7125645875930786
    3. ' if' → logprob: -2.962564468383789
    4. 'if' → logprob: -4.087564468383789
    5. ' for' → logprob: -4.087564468383789
    6. 'for' → logprob: -4.337564468383789
    7. '    
' → logprob: -5.587564468383789
    8. ' :' → logprob: -6.962564468383789
    9. '
' → logprob: -7.587564468383789
    10. ' ' → logprob: -7.712564468383789

Token 163: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5665057897567749
    2. 'if' → logprob: -0.9415057897567749
    3. ' for' → logprob: -3.5665059089660645
    4. ' if' → logprob: -4.3165059089660645
    5. '
' → logprob: -7.3165059089660645
    6. 'len' → logprob: -9.816505432128906
    7. '   ' → logprob: -10.316505432128906
    8. 'n' → logprob: -10.441505432128906
    9. ' ' → logprob: -11.066505432128906
    10. ' 
' → logprob: -11.316505432128906

Token 164: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.21847304701805115
    2. ' élément' → logprob: -1.7184730768203735
    3. 'element' → logprob: -5.093472957611084
    4. 'val' → logprob: -5.718472957611084
    5. ' element' → logprob: -5.968472957611084
    6. 'a' → logprob: -7.343472957611084
    7. 'elem' → logprob: -7.343472957611084
    8. ' valeur' → logprob: -7.468472957611084
    9. ' SA' → logprob: -8.093473434448242
    10. ' él' → logprob: -8.343473434448242

Token 165: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.031218424439430237
    2. ' of' → logprob: -4.031218528747559
    3. 'de' → logprob: -5.281218528747559
    4. ' in' → logprob: -5.781218528747559
    5. ' if' → logprob: -6.656218528747559
    6. 'if' → logprob: -7.031218528747559
    7. ' dans' → logprob: -7.656218528747559
    8. 's' → logprob: -8.031218528747559
    9. ' du' → logprob: -8.531218528747559
    10. ' for' → logprob: -8.531218528747559

Token 166: ' SA' (ID: 19609)
  Prédit: 'SA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SA' → logprob: -0.579196572303772
    2. 'SB' → logprob: -1.204196572303772
    3. ' SB' → logprob: -2.4541964530944824
    4. ' SA' → logprob: -2.9541964530944824
    5. 'S' → logprob: -7.329196453094482
    6. ' ' → logprob: -8.20419692993164
    7. ' ' → logprob: -8.51669692993164
    8. 's' → logprob: -9.32919692993164
    9. ' la' → logprob: -9.76669692993164
    10. 'A' → logprob: -10.07919692993164

Token 167: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.372653603553772
    2. '<=' → logprob: -1.747653603553772
    3. ' <=' → logprob: -2.7476534843444824
    4. 'do' → logprob: -2.9976534843444824
    5. ' est' → logprob: -5.497653484344482
    6. '[' → logprob: -5.497653484344482
    7. ' must' → logprob: -6.247653484344482
    8. '>=' → logprob: -6.247653484344482
    9. 'must' → logprob: -6.497653484344482
    10. ' ne' → logprob: -6.497653484344482

Token 168: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.26567432284355164
    2. 'être' → logprob: -1.515674352645874
    3. ' be' → logprob: -5.265674114227295
    4. ' etre' → logprob: -5.390674114227295
    5. ''être' → logprob: -6.890674114227295
    6. ' ' → logprob: -7.265674114227295
    7. '<=' → logprob: -8.015674591064453
    8. '’être' → logprob: -8.140674591064453
    9. ' <=' → logprob: -8.140674591064453
    10. ' ' → logprob: -8.890674591064453

Token 169: ' <=' (ID: 5017)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.03488818183541298
    2. '<=' → logprob: -3.78488826751709
    3. ' inférieur' → logprob: -4.65988826751709
    4. 'infer' → logprob: -6.65988826751709
    5. ' <=' → logprob: -8.03488826751709
    6. 'sup' → logprob: -8.65988826751709
    7. 'strict' → logprob: -9.53488826751709
    8. 'moins' → logprob: -9.90988826751709
    9. '>=' → logprob: -10.03488826751709
    10. ' inf' → logprob: -10.40988826751709

Token 170: ' correspondant' (ID: 146058)
  Prédit: 'cel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cel' → logprob: -1.0964210033416748
    2. 'à' → logprob: -1.4714210033416748
    3. 'l' → logprob: -1.8464210033416748
    4. ' à' → logprob: -2.971421003341675
    5. 'au' → logprob: -3.096421003341675
    6. ' son' → logprob: -3.221421003341675
    7. 'son' → logprob: -3.596421003341675
    8. ' l' → logprob: -3.721421003341675
    9. 'cor' → logprob: -3.971421003341675
    10. 'SB' → logprob: -3.971421003341675

Token 171: ' dans' (ID: 2671)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5720155239105225
    2. ' à' → logprob: -1.5720155239105225
    3. ' élément' → logprob: -2.0720155239105225
    4. 'element' → logprob: -3.0720155239105225
    5. 'à' → logprob: -3.5720155239105225
    6. ' element' → logprob: -4.322015762329102
    7. ' de' → logprob: -5.322015762329102
    8. 'lement' → logprob: -6.197015762329102
    9. ' ' → logprob: -6.447015762329102
    10. 'de' → logprob: -7.072015762329102

Token 172: ' SB' (ID: 41915)
  Prédit: 'SB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SB' → logprob: -0.12705326080322266
    2. ' SB' → logprob: -2.1270532608032227
    3. ' ' → logprob: -9.127053260803223
    4. '_SB' → logprob: -12.002053260803223
    5. ' ' → logprob: -12.127053260803223
    6. '`' → logprob: -14.314553260803223
    7. 'S' → logprob: -14.377053260803223
    8. '   ' → logprob: -14.564553260803223
    9. 'SA' → logprob: -14.814553260803223
    10. 'sb' → logprob: -14.877053260803223

Token 173: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027723560109734535
    2. '    
' → logprob: -4.902723789215088
    3. '\n' → logprob: -5.027723789215088
    4. ',' → logprob: -5.777723789215088
    5. ' for' → logprob: -6.277723789215088
    6. ' ' → logprob: -6.402723789215088
    7. ' 
' → logprob: -6.652723789215088
    8. '.' → logprob: -7.027723789215088
    9. '\' → logprob: -7.402723789215088
    10. '  
' → logprob: -7.527723789215088

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029389161616563797
    2. '    
' → logprob: -4.779389381408691
    3. ' for' → logprob: -5.029389381408691
    4. '\n' → logprob: -5.279389381408691
    5. ' 
' → logprob: -6.279389381408691
    6. '   
' → logprob: -6.904389381408691
    7. '  
' → logprob: -6.904389381408691
    8. ',' → logprob: -7.154389381408691
    9. ':' → logprob: -7.154389381408691
    10. ' ' → logprob: -7.404389381408691

Token 175: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9993243217468262
    2. 'for' → logprob: -0.9993243217468262
    3. '   ' → logprob: -1.7493243217468262
    4. '
' → logprob: -3.999324321746826
    5. ' ' → logprob: -3.999324321746826
    6. ' 
' → logprob: -4.124324321746826
    7. '\n' → logprob: -4.624324321746826
    8. '    
' → logprob: -4.749324321746826
    9. '  
' → logprob: -5.124324321746826
    10. ':' → logprob: -5.749324321746826

Token 176: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0632237046957016
    2. ' for' → logprob: -2.8132236003875732
    3. '   ' → logprob: -6.688223838806152
    4. '
' → logprob: -12.313223838806152
    5. 'if' → logprob: -12.813223838806152
    6. ' ' → logprob: -14.188223838806152
    7. '	for' → logprob: -14.438223838806152
    8. ' ' → logprob: -14.938223838806152
    9. '  ' → logprob: -15.313223838806152
    10. ' if' → logprob: -15.438223838806152

Token 177: ' un' (ID: 537)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.06468982994556427
    2. 'any' → logprob: -3.939689874649048
    3. ' not' → logprob: -4.314689636230469
    4. ' SA' → logprob: -4.439689636230469
    5. ' len' → logprob: -4.939689636230469
    6. 'SA' → logprob: -5.064689636230469
    7. ' ' → logprob: -7.064689636230469
    8. ' a' → logprob: -7.314689636230469
    9. ' for' → logprob: -7.439689636230469
    10. ' i' → logprob: -7.439689636230469

Token 178: ' élément' (ID: 99627)
  Prédit: ' SA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' SA' → logprob: -1.1170787811279297
    2. ' i' → logprob: -1.9920787811279297
    3. 'e' → logprob: -2.1170787811279297
    4. ' for' → logprob: -2.2420787811279297
    5. 'SA' → logprob: -2.4920787811279297
    6. 'i' → logprob: -2.4920787811279297
    7. 'elem' → logprob: -3.1170787811279297
    8. ' élément' → logprob: -3.6170787811279297
    9. ' element' → logprob: -3.7420787811279297
    10. ' elem' → logprob: -4.24207878112793

Token 179: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07425913214683533
    2. '>' → logprob: -3.949259042739868
    3. 'SA' → logprob: -4.324259281158447
    4. ' SA' → logprob: -4.449259281158447
    5. 'de' → logprob: -4.574259281158447
    6. ' >' → logprob: -5.199259281158447
    7. 's' → logprob: -5.824259281158447
    8. '   ' → logprob: -6.449259281158447
    9. ' in' → logprob: -7.199259281158447
    10. ' ' → logprob: -7.449259281158447

Token 180: ' SA' (ID: 19609)
  Prédit: 'SA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SA' → logprob: -0.0005199087900109589
    2. ' SA' → logprob: -7.750519752502441
    3. 'SB' → logprob: -10.000519752502441
    4. 'range' → logprob: -10.250519752502441
    5. ' range' → logprob: -12.375519752502441
    6. 'S' → logprob: -13.250519752502441
    7. ' ' → logprob: -14.000519752502441
    8. 'sa' → logprob: -14.125519752502441
    9. 's' → logprob: -15.500519752502441
    10. 'LA' → logprob: -16.625520706176758

Token 181: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.13208118081092834
    2. ' >' → logprob: -2.1320812702178955
    3. '[i' → logprob: -6.007081031799316
    4. '   ' → logprob: -6.757081031799316
    5. '[' → logprob: -7.132081031799316
    6. ' ' → logprob: -8.257081031799316
    7. ' est' → logprob: -10.007081031799316
    8. 'n' → logprob: -10.132081031799316
    9. '  ' → logprob: -10.257081031799316
    10. '    ' → logprob: -10.382081031799316

Token 182: ' strict' (ID: 12035)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15907809138298035
    2. ' >' → logprob: -2.0340781211853027
    3. 'strict' → logprob: -4.909078121185303
    4. ' greater' → logprob: -5.909078121185303
    5. 'greater' → logprob: -5.909078121185303
    6. ' supérieur' → logprob: -6.034078121185303
    7. 'super' → logprob: -8.534077644348145
    8. ' sup' → logprob: -8.784077644348145
    9. 'sup' → logprob: -8.784077644348145
    10. 'plus' → logprob: -9.034077644348145

Token 183: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.02000405639410019
    2. 'ly' → logprob: -4.0200042724609375
    3. 'lement' → logprob: -6.6450042724609375
    4. 'ment' → logprob: -8.395004272460938
    5. 'l' → logprob: -9.020004272460938
    6. 'ément' → logprob: -9.770004272460938
    7. 'e' → logprob: -10.770004272460938
    8. 'nement' → logprob: -10.895004272460938
    9. 'element' → logprob: -10.895004272460938
    10. '<' → logprob: -11.145004272460938

Token 184: ' supérieur' (ID: 98491)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'greater' → logprob: -0.5803542733192444
    2. 'sup' → logprob: -1.8303542137145996
    3. 'super' → logprob: -2.0803542137145996
    4. ' supérieur' → logprob: -2.3303542137145996
    5. 'plus' → logprob: -3.5803542137145996
    6. ' greater' → logprob: -4.0803542137146
    7. '>' → logprob: -4.7053542137146
    8. ' sup' → logprob: -6.2053542137146
    9. ' plus' → logprob: -6.8303542137146
    10. ' super' → logprob: -7.8303542137146

Token 185: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.052004680037498474
    2. ' ' → logprob: -3.30200457572937
    3. 'à' → logprob: -5.052004814147949
    4. ' au' → logprob: -5.677004814147949
    5. ' a' → logprob: -5.802004814147949
    6. 'au' → logprob: -7.427004814147949
    7. '  ' → logprob: -8.92700481414795
    8. ' ' → logprob: -9.67700481414795
    9. ')' → logprob: -10.05200481414795
    10. ''à' → logprob: -10.05200481414795

Token 186: ' SB' (ID: 41915)
  Prédit: 'SB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SB' → logprob: -0.08421450853347778
    2. 'l' → logprob: -3.459214448928833
    3. ' SB' → logprob: -3.459214448928833
    4. ' son' → logprob: -4.834214687347412
    5. 'son' → logprob: -5.084214687347412
    6. ' l' → logprob: -7.084214687347412
    7. 'un' → logprob: -7.209214687347412
    8. ' un' → logprob: -7.334214687347412
    9. ' ' → logprob: -7.834214687347412
    10. 'cor' → logprob: -8.209214210510254

Token 187: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02249651402235031
    2. '[' → logprob: -3.897496461868286
    3. '[j' → logprob: -7.397496700286865
    4. '[idx' → logprob: -8.397496223449707
    5. '[s' → logprob: -8.397496223449707
    6. '[pos' → logprob: -9.147496223449707
    7. ' [' → logprob: -9.147496223449707
    8. '[e' → logprob: -9.272496223449707
    9. '[index' → logprob: -9.522496223449707
    10. ':' → logprob: -9.522496223449707

Token 188: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8113425374031067
    2. '   ' → logprob: -1.061342477798462
    3. ' return' → logprob: -1.811342477798462
    4. '    ' → logprob: -4.186342716217041
    5. 'return' → logprob: -4.186342716217041
    6. '           ' → logprob: -6.311342716217041
    7. '     ' → logprob: -6.561342716217041
    8. ' ' → logprob: -6.561342716217041
    9. ' ' → logprob: -6.811342716217041
    10. ' 
' → logprob: -6.936342716217041

Token 189: ' transformation' (ID: 26242)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05801822617650032
    2. ' return' → logprob: -2.933018207550049
    3. '   ' → logprob: -5.933018207550049
    4. ' ' → logprob: -8.433018684387207
    5. 'eturn' → logprob: -10.058018684387207
    6. '
' → logprob: -10.183018684387207
    7. '       ' → logprob: -10.683018684387207
    8. 'ret' → logprob: -10.683018684387207
    9. ':return' → logprob: -10.808018684387207
    10. '	return' → logprob: -10.808018684387207

Token 190: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010819065384566784
    2. ' n' → logprob: -5.010818958282471
    3. ' return' → logprob: -6.385818958282471
    4. 'n' → logprob: -7.385818958282471
    5. ' s' → logprob: -8.385819435119629
    6. '  ' → logprob: -8.385819435119629
    7. ' est' → logprob: -8.510819435119629
    8. ' )' → logprob: -8.760819435119629
    9. ' '' → logprob: -8.885819435119629
    10. '   ' → logprob: -9.135819435119629

Token 191: ' impossible' (ID: 19786)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2079377174377441
    2. '"' → logprob: -1.4579377174377441
    3. 'No' → logprob: -1.9579377174377441
    4. '"No' → logprob: -1.9579377174377441
    5. '   ' → logprob: -2.707937717437744
    6. 'im' → logprob: -2.957937717437744
    7. 'Impossible' → logprob: -3.457937717437744
    8. ' impossible' → logprob: -3.832937717437744
    9. '       ' → logprob: -5.332937717437744
    10. 'return' → logprob: -5.707937717437744

Token 192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12470227479934692
    2. ':' → logprob: -3.374702215194702
    3. ',' → logprob: -3.999702215194702
    4. '       ' → logprob: -4.124702453613281
    5. '\n' → logprob: -4.249702453613281
    6. ' ' → logprob: -5.124702453613281
    7. ')' → logprob: -5.124702453613281
    8. '.' → logprob: -5.749702453613281
    9. ' for' → logprob: -5.749702453613281
    10. '    ' → logprob: -6.124702453613281

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01041178498417139
    2. ' for' → logprob: -5.135411739349365
    3. '    
' → logprob: -6.510411739349365
    4. '\n' → logprob: -6.510411739349365
    5. 'for' → logprob: -7.760411739349365
    6. '    ' → logprob: -8.385412216186523
    7. ' 
' → logprob: -8.635412216186523
    8. ':' → logprob: -9.135412216186523
    9. '  ' → logprob: -9.260412216186523
    10. ' ' → logprob: -9.260412216186523

Token 194: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3651837706565857
    2. ' for' → logprob: -1.2401838302612305
    3. 'for' → logprob: -4.1151838302612305
    4. '    
' → logprob: -9.24018383026123
    5. ' 
' → logprob: -9.86518383026123
    6. '	for' → logprob: -10.49018383026123
    7. '
' → logprob: -11.11518383026123
    8. ' ' → logprob: -11.11518383026123
    9. '    ' → logprob: -11.36518383026123
    10. '  ' → logprob: -11.49018383026123

Token 195: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.5925617814064026
    2. 'any' → logprob: -0.8425617814064026
    3. 'SA' → logprob: -4.592561721801758
    4. ' SA' → logprob: -5.092561721801758
    5. 'len' → logprob: -10.092561721801758
    6. ' ' → logprob: -10.092561721801758
    7. ' len' → logprob: -10.467561721801758
    8. ' not' → logprob: -10.717561721801758
    9. ' max' → logprob: -11.092561721801758
    10. '(any' → logprob: -11.342561721801758

Token 196: '(a' (ID: 6271)
  Prédit: '(sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -0.5476160049438477
    2. '(S' → logprob: -1.0476160049438477
    3. '(s' → logprob: -3.4226160049438477
    4. '(x' → logprob: -3.7976160049438477
    5. '(a' → logprob: -4.172616004943848
    6. '(' → logprob: -8.172616004943848
    7. 'a' → logprob: -9.297616004943848
    8. '((' → logprob: -11.047616004943848
    9. '(si' → logprob: -11.172616004943848
    10. '([' → logprob: -11.672616004943848

Token 197: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.026547245681285858
    2. '>' → logprob: -3.6515471935272217
    3. ' ' → logprob: -8.7765474319458
    4. '>S' → logprob: -10.6515474319458
    5. '>s' → logprob: -11.0265474319458
    6. '   ' → logprob: -11.2765474319458
    7. '>a' → logprob: -11.2765474319458
    8. 'a' → logprob: -11.9015474319458
    9. '  ' → logprob: -12.1515474319458
    10. 's' → logprob: -12.2765474319458

Token 198: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00018518301658332348
    2. ' b' → logprob: -9.250185012817383
    3. 'sb' → logprob: -9.375185012817383
    4. 's' → logprob: -12.625185012817383
    5. '   ' → logprob: -14.875185012817383
    6. ' ' → logprob: -15.375185012817383
    7. '  ' → logprob: -16.375185012817383
    8. '```' → logprob: -16.500185012817383
    9. '	b' → logprob: -17.125185012817383
    10. ' sb' → logprob: -17.250185012817383

Token 199: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014168326742947102
    2. 'for' → logprob: -4.2641682624816895
    3. ' ' → logprob: -12.514168739318848
    4. '   ' → logprob: -15.014168739318848
    5. '  ' → logprob: -15.264168739318848
    6. ' f' → logprob: -15.514168739318848
    7. 's' → logprob: -16.13916778564453
    8. '    ' → logprob: -16.88916778564453
    9. 'b' → logprob: -16.88916778564453
    10. ' in' → logprob: -17.01416778564453

Token 200: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06211176514625549
    2. ' a' → logprob: -2.8121118545532227
    3. ',' → logprob: -10.312111854553223
    4. 'sa' → logprob: -10.437111854553223
    5. '(a' → logprob: -10.562111854553223
    6. ',a' → logprob: -10.812111854553223
    7. '	a' → logprob: -11.562111854553223
    8. 'SA' → logprob: -11.562111854553223
    9. ' (' → logprob: -12.687111854553223
    10. '_a' → logprob: -12.937111854553223

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026692345272749662
    2. ',a' → logprob: -6.502669334411621
    3. ',b' → logprob: -6.877669334411621
    4. ' ,' → logprob: -9.377669334411621
    5. ',s' → logprob: -10.377669334411621
    6. 'a' → logprob: -11.252669334411621
    7. '_,' → logprob: -12.877669334411621
    8. ',_' → logprob: -13.752669334411621
    9. ' in' → logprob: -14.627669334411621
    10. 's' → logprob: -14.627669334411621

Token 202: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. ' ' → logprob: -19.125261306762695
    4. '	b' → logprob: -19.250261306762695
    5. '(b' → logprob: -20.250261306762695
    6. '```' → logprob: -21.000261306762695
    7. ',b' → logprob: -21.125261306762695
    8. ')b' → logprob: -21.250261306762695
    9. '  ' → logprob: -21.625261306762695
    10. '
' → logprob: -22.250261306762695

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12697598338127136
    2. 'in' → logprob: -2.1269760131835938
    3. ',' → logprob: -10.626976013183594
    4. ' ' → logprob: -11.501976013183594
    5. 's' → logprob: -12.626976013183594
    6. '  ' → logprob: -12.876976013183594
    7. ')' → logprob: -13.501976013183594
    8. '   ' → logprob: -13.751976013183594
    9. ' ,' → logprob: -14.376976013183594
    10. 'import' → logprob: -14.751976013183594

Token 204: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.1602262556552887
    2. ' zip' → logprob: -1.9102262258529663
    3. '(zip' → logprob: -13.535225868225098
    4. '_zip' → logprob: -15.035225868225098
    5. 'z' → logprob: -15.910225868225098
    6. '.zip' → logprob: -16.160226821899414
    7. ' ' → logprob: -16.285226821899414
    8. 'Zip' → logprob: -16.910226821899414
    9. 'pair' → logprob: -18.785226821899414
    10. ' z' → logprob: -18.785226821899414

Token 205: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.00017159747949335724
    2. 'SA' → logprob: -8.875171661376953
    3. '   ' → logprob: -11.875171661376953
    4. '(' → logprob: -12.000171661376953
    5. 'S' → logprob: -12.250171661376953
    6. ' (' → logprob: -12.375171661376953
    7. ')' → logprob: -12.625171661376953
    8. ' SA' → logprob: -13.250171661376953
    9. ' ' → logprob: -13.500171661376953
    10. '(sa' → logprob: -14.375171661376953

Token 206: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.512236498361744e-07
    2. 'B' → logprob: -16.0
    3. ' A' → logprob: -16.375
    4. 'А' → logprob: -16.5
    5. 'Ａ' → logprob: -17.0
    6. 'SA' → logprob: -17.375
    7. '(A' → logprob: -17.625
    8. 'Α' → logprob: -18.125
    9. '	A' → logprob: -18.125
    10. '```' → logprob: -18.125

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012578755617141724
    2. ' ,' → logprob: -4.387578964233398
    3. ',S' → logprob: -9.762578964233398
    4. ',B' → logprob: -12.387578964233398
    5. 'SB' → logprob: -12.637578964233398
    6. ',
' → logprob: -13.637578964233398
    7. '   ' → logprob: -13.887578964233398
    8. ',b' → logprob: -14.262578964233398
    9. ',s' → logprob: -14.387578964233398
    10. ' ' → logprob: -15.512578964233398

Token 208: ' SB' (ID: 41915)
  Prédit: 'SB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SB' → logprob: -0.005930813029408455
    2. ' SB' → logprob: -5.1309309005737305
    3. '_SB' → logprob: -13.63093090057373
    4. ' ' → logprob: -14.25593090057373
    5. '   ' → logprob: -15.75593090057373
    6. 'sb' → logprob: -16.505929946899414
    7. ')' → logprob: -17.130929946899414
    8. 'S' → logprob: -18.005929946899414
    9. '(S' → logprob: -18.505929946899414
    10. '  ' → logprob: -18.505929946899414

Token 209: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.010585073381662369
    2. '):' → logprob: -5.135585308074951
    3. '))' → logprob: -5.885585308074951
    4. ')):
' → logprob: -6.385585308074951
    5. ')' → logprob: -9.010584831237793
    6. '   ' → logprob: -10.510584831237793
    7. ')):
' → logprob: -11.010584831237793
    8. '):
' → logprob: -11.885584831237793
    9. '       ' → logprob: -13.260584831237793
    10. ' ' → logprob: -13.885584831237793

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037809512577950954
    2. ':' → logprob: -6.253780841827393
    3. '   ' → logprob: -7.253780841827393
    4. '\n' → logprob: -8.00378131866455
    5. ':
' → logprob: -8.37878131866455
    6. ' return' → logprob: -8.75378131866455
    7. ':return' → logprob: -9.12878131866455
    8. '):' → logprob: -9.37878131866455
    9. ')' → logprob: -9.62878131866455
    10. '):
' → logprob: -9.87878131866455

Token 211: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9373375177383423
    2. ' return' → logprob: -0.9373375177383423
    3. 'return' (adapté à ' return') → logprob: -1.5623375177383423
    4. '   ' → logprob: -5.062337398529053
    5. '	return' → logprob: -8.062337875366211
    6. ' ' → logprob: -8.687337875366211
    7. '    ' → logprob: -9.562337875366211
    8. '
' → logprob: -10.062337875366211
    9. '           ' → logprob: -10.562337875366211
    10. ' 
' → logprob: -11.187337875366211

Token 212: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0873715728521347
    2. '"No' → logprob: -3.462371587753296
    3. ' '' → logprob: -3.712371587753296
    4. ' "' → logprob: -4.212371349334717
    5. '"' → logprob: -4.337371349334717
    6. 'No' → logprob: -12.962371826171875
    7. ' ' → logprob: -13.587371826171875
    8. '   ' → logprob: -14.212371826171875
    9. '	' → logprob: -14.212371826171875
    10. ' No' → logprob: -14.337371826171875

Token 213: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -3.128163257315464e-07
    2. '"No' → logprob: -16.125
    3. ' No' → logprob: -16.25
    4. 'Yes' → logprob: -16.625
    5. ''' → logprob: -17.0
    6. 'NO' → logprob: -18.125
    7. 'N' → logprob: -18.125
    8. 'None' → logprob: -19.0
    9. 'no' → logprob: -19.875
    10. '_No' → logprob: -20.0

Token 214: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004033875651657581
    2. '')' → logprob: -5.629034042358398
    3. '   ' → logprob: -8.379034042358398
    4. ')' → logprob: -8.879034042358398
    5. ''
' → logprob: -10.004034042358398
    6. ')'' → logprob: -11.004034042358398
    7. '\n' → logprob: -13.879034042358398
    8. '"' → logprob: -14.629034042358398
    9. ' '' → logprob: -14.629034042358398
    10. '')
' → logprob: -15.129034042358398

Token 215: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7600240707397461
    2. '
' → logprob: -1.010024070739746
    3. '    
' → logprob: -2.135024070739746
    4. '  
' → logprob: -4.010024070739746
    5. '\n' → logprob: -4.260024070739746
    6. '<|end|>' → logprob: -5.010024070739746
    7. ' 
' → logprob: -5.135024070739746
    8. '   
' → logprob: -6.010024070739746
    9. ')' → logprob: -7.260024070739746
    10. '

' → logprob: -7.885024070739746

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17291684448719025
    2. '
' → logprob: -2.047916889190674
    3. '    
' → logprob: -3.797916889190674
    4. '#' → logprob: -5.047916889190674
    5. 'n' → logprob: -8.672916412353516
    6. 'for' → logprob: -9.047916412353516
    7. '        
' → logprob: -9.297916412353516
    8. 'if' → logprob: -9.922916412353516
    9. '  
' → logprob: -9.922916412353516
    10. '

' → logprob: -10.047916412353516

Token 217: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6589637994766235
    2. 'count' → logprob: -1.5339637994766235
    3. 'freq' → logprob: -2.408963680267334
    4. 'counts' → logprob: -3.158963680267334
    5. '   ' → logprob: -3.908963680267334
    6. 'if' → logprob: -4.158963680267334
    7. 'cnt' → logprob: -4.283963680267334
    8. 'for' → logprob: -4.658963680267334
    9. 'counter' → logprob: -4.658963680267334
    10. 'comp' → logprob: -4.908963680267334

Token 218: ' Deux' (ID: 92086)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8729473352432251
    2. 'freq' → logprob: -0.9979473352432251
    3. 'counter' → logprob: -2.9979472160339355
    4. '#' → logprob: -2.9979472160339355
    5. 'comp' → logprob: -2.9979472160339355
    6. 'counts' → logprob: -3.6229472160339355
    7. 'cnt' → logprob: -4.2479472160339355
    8. 'c' → logprob: -4.6229472160339355
    9. 'for' → logprob: -5.8729472160339355
    10. 'from' → logprob: -6.7479472160339355

Token 219: 'ième' (ID: 41126)
  Prédit: 'ième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ième' → logprob: -0.010540725663304329
    2. '#' → logprob: -4.885540962219238
    3. 'i' → logprob: -6.135540962219238
    4. 'ème' → logprob: -7.885540962219238
    5. 'ieme' → logprob: -8.385540962219238
    6. 'e' → logprob: -9.510540962219238
    7. 'ière' → logprob: -10.010540962219238
    8. '   ' → logprob: -10.760540962219238
    9. 'ié' → logprob: -11.260540962219238
    10. 'ie' → logprob: -13.760540962219238

Token 220: ' vér' (ID: 42524)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.9229467511177063
    2. ' vér' → logprob: -1.2979466915130615
    3. ' if' → logprob: -2.1729466915130615
    4. '   ' → logprob: -2.2979466915130615
    5. 'if' → logprob: -3.2979466915130615
    6. '#' → logprob: -4.047946929931641
    7. ' #' → logprob: -4.172946929931641
    8. ' for' → logprob: -5.297946929931641
    9. 'check' → logprob: -5.422946929931641
    10. '
' → logprob: -5.672946929931641

Token 221: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.001360593712888658
    2. 'if' → logprob: -6.7513604164123535
    3. '#' → logprob: -9.501360893249512
    4. 'ication' → logprob: -10.751360893249512
    5. '_' → logprob: -11.251360893249512
    6. 'ération' → logprob: -11.751360893249512
    7. '   ' → logprob: -11.751360893249512
    8. 'f' → logprob: -11.751360893249512
    9. '-' → logprob: -12.001360893249512
    10. 'ation' → logprob: -12.001360893249512

Token 222: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.27579939365386963
    2. ':' → logprob: -1.7757993936538696
    3. '   ' → logprob: -2.65079927444458
    4. ' ' → logprob: -8.150799751281738
    5. ' =' → logprob: -8.275799751281738
    6. ' if' → logprob: -9.025799751281738
    7. ' :
' → logprob: -9.025799751281738
    8. '    ' → logprob: -9.400799751281738
    9. ',' → logprob: -9.525799751281738
    10. '  ' → logprob: -10.150799751281738

Token 223: ' si' (ID: 1784)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6105540990829468
    2. 'count' → logprob: -1.7355540990829468
    3. ' c' → logprob: -2.8605542182922363
    4. 'counter' → logprob: -2.8605542182922363
    5. 'cnt' → logprob: -3.1105542182922363
    6. 'for' → logprob: -3.1105542182922363
    7. 'comp' → logprob: -4.235554218292236
    8. 'if' → logprob: -4.610554218292236
    9. 'freq' → logprob: -4.735554218292236
    10. ' count' → logprob: -4.860554218292236

Token 224: ' A' (ID: 355)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -1.2859255075454712
    2. 'len' → logprob: -1.6609255075454712
    3. ' Counter' → logprob: -1.7859255075454712
    4. ' len' → logprob: -1.9109255075454712
    5. ' any' → logprob: -3.0359253883361816
    6. ' not' → logprob: -3.1609253883361816
    7. 'A' → logprob: -3.4109253883361816
    8. ' A' → logprob: -4.035925388336182
    9. 'not' → logprob: -4.660925388336182
    10. 'any' → logprob: -4.660925388336182

Token 225: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8078980445861816
    2. '==' → logprob: -0.9328980445861816
    3. '[' → logprob: -2.9328980445861816
    4. ' and' → logprob: -4.182898044586182
    5. ' !=' → logprob: -4.307898044586182
    6. 'count' → logprob: -4.682898044586182
    7. ' has' → logprob: -4.807898044586182
    8. ' a' → logprob: -4.807898044586182
    9. '.count' → logprob: -5.182898044586182
    10. 'a' → logprob: -5.557898044586182

Token 226: ' déjà' (ID: 21229)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9957572817802429
    2. 'Counter' → logprob: -1.3707573413848877
    3. 'sorted' → logprob: -1.7457573413848877
    4. 'SA' → logprob: -3.3707573413848877
    5. '[]' → logprob: -3.3707573413848877
    6. ' A' → logprob: -3.6207573413848877
    7. 'equal' → logprob: -4.370757102966309
    8. 'len' → logprob: -4.495757102966309
    9. '[' → logprob: -4.495757102966309
    10. ' sorted' → logprob: -4.495757102966309

Token 227: ' "' (ID: 392)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.2737761735916138
    2. 'égal' → logprob: -1.5237761735916138
    3. ' ég' → logprob: -1.8987761735916138
    4. 'tri' → logprob: -2.148776054382324
    5. 'ident' → logprob: -2.898776054382324
    6. 'equal' → logprob: -3.398776054382324
    7. ' tri' → logprob: -3.398776054382324
    8. 'ég' → logprob: -3.398776054382324
    9. ' égal' → logprob: -3.898776054382324
    10. 'tr' → logprob: -4.023776054382324

Token 228: 'inf' (ID: 22226)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2931840419769287
    2. 'equal' → logprob: -1.9181840419769287
    3. 'sorted' → logprob: -2.4181840419769287
    4. ' B' → logprob: -4.543184280395508
    5. ' equal' → logprob: -5.543184280395508
    6. 'ident' → logprob: -7.543184280395508
    7. '==' → logprob: -7.668184280395508
    8. 'A' → logprob: -7.793184280395508
    9. ' sorted' → logprob: -7.793184280395508
    10. 'SB' → logprob: -7.918184280395508

Token 229: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.5485444664955139
    2. 'érieur' → logprob: -0.9235444664955139
    3. 'er' → logprob: -4.048544406890869
    4. 'é' → logprob: -5.423544406890869
    5. 'erie' → logprob: -7.423544406890869
    6. 'érie' → logprob: -7.923544406890869
    7. 'érieurs' → logprob: -8.173544883728027
    8. 'éri' → logprob: -8.798544883728027
    9. 'ér' → logprob: -9.048544883728027
    10. '<=' → logprob: -9.048544883728027

Token 230: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.21572035551071167
    2. ' ou' → logprob: -1.7157204151153564
    3. 'strict' → logprob: -5.590720176696777
    4. '_' → logprob: -5.840720176696777
    5. 'or' → logprob: -6.340720176696777
    6. 'e' → logprob: -6.465720176696777
    7. '"' → logprob: -6.965720176696777
    8. ' or' → logprob: -7.215720176696777
    9. 'à' → logprob: -7.590720176696777
    10. ' ' → logprob: -7.715720176696777

Token 231: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.005968492478132248
    2. 'égal' → logprob: -5.7559685707092285
    3. ' ég' → logprob: -6.2559685707092285
    4. 'eg' → logprob: -7.2559685707092285
    5. '=' → logprob: -10.38096809387207
    6. '```' → logprob: -10.38096809387207
    7. 'égalité' → logprob: -10.50596809387207
    8. 'strict' → logprob: -10.88096809387207
    9. 'à' → logprob: -11.25596809387207
    10. '   ' → logprob: -12.25596809387207

Token 232: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -6.945094355614856e-05
    2. 'al' → logprob: -9.875069618225098
    3. 'але' → logprob: -12.625069618225098
    4. 'a' → logprob: -13.125069618225098
    5. '```' → logprob: -13.250069618225098
    6. 'alle' → logprob: -13.625069618225098
    7. '`' → logprob: -13.750069618225098
    8. 'alee' → logprob: -13.875069618225098
    9. '"' → logprob: -14.000069618225098
    10. '   ' → logprob: -14.125069618225098

Token 233: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6197093725204468
    2. ' à' → logprob: -0.9947093725204468
    3. 'à' → logprob: -3.2447094917297363
    4. ' en' → logprob: -4.494709491729736
    5. 'strict' → logprob: -4.619709491729736
    6. 'en' → logprob: -5.119709491729736
    7. 'element' → logprob: -5.119709491729736
    8. '",' → logprob: -5.369709491729736
    9. ' ' → logprob: -5.869709491729736
    10. '   ' → logprob: -6.369709491729736

Token 234: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4273359477519989
    2. 'element' → logprob: -1.8023359775543213
    3. 'à' → logprob: -2.4273359775543213
    4. ' en' → logprob: -3.5523359775543213
    5. ' element' → logprob: -4.052335739135742
    6. '   ' → logprob: -4.177335739135742
    7. ' lex' → logprob: -5.052335739135742
    8. 'en' → logprob: -5.552335739135742
    9. ',' → logprob: -5.677335739135742
    10. ' aux' → logprob: -6.052335739135742

Token 235: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008630995638668537
    2. ' B' → logprob: -4.758631229400635
    3. ' ' → logprob: -11.758630752563477
    4. '   ' → logprob: -13.133630752563477
    5. ' ' → logprob: -13.883630752563477
    6. '	B' → logprob: -14.508630752563477
    7. 'l' → logprob: -14.508630752563477
    8. 'la' → logprob: -14.508630752563477
    9. '  ' → logprob: -14.633630752563477
    10. '`' → logprob: -14.883630752563477

Token 236: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.411062628030777
    2. ',' → logprob: -2.161062717437744
    3. ' en' → logprob: -2.661062717437744
    4. ' element' → logprob: -2.786062717437744
    5. ' in' → logprob: -3.536062717437744
    6. ' for' → logprob: -4.161062717437744
    7. 'en' → logprob: -4.786062717437744
    8. 'element' → logprob: -4.786062717437744
    9. ' dans' → logprob: -5.161062717437744
    10. ' (' → logprob: -5.161062717437744

Token 237: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22045491635799408
    2. '       ' → logprob: -1.9704549312591553
    3. 'return' → logprob: -3.0954549312591553
    4. ' return' → logprob: -4.345454692840576
    5. '  ' → logprob: -9.845455169677734
    6. '    ' → logprob: -10.095455169677734
    7. '      ' → logprob: -10.470455169677734
    8. '	return' → logprob: -10.595455169677734
    9. 'if' → logprob: -10.595455169677734
    10. ' ' → logprob: -10.970455169677734

Token 238: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.0809565857052803
    2. '   ' → logprob: -2.9559566974639893
    3. 'return' → logprob: -4.95595645904541
    4. 'on' → logprob: -4.95595645904541
    5. 'om' → logprob: -5.70595645904541
    6. 'eturn' → logprob: -6.45595645904541
    7. '  ' → logprob: -6.83095645904541
    8. '       ' → logprob: -7.20595645904541
    9. ''est' → logprob: -7.20595645904541
    10. '#' → logprob: -7.33095645904541

Token 239: ' gagné' (ID: 150990)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6627753376960754
    2. 'Yes' → logprob: -1.4127752780914307
    3. '   ' → logprob: -1.5377752780914307
    4. 'Oui' → logprob: -4.16277551651001
    5. 'return' → logprob: -6.28777551651001
    6. ''un' → logprob: -6.78777551651001
    7. ''O' → logprob: -7.16277551651001
    8. '"' → logprob: -7.16277551651001
    9. '       ' → logprob: -7.41277551651001
    10. ''ok' → logprob: -7.66277551651001

Token 240: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004531231243163347
    2. ' if' → logprob: -5.629531383514404
    3. 'if' → logprob: -7.129531383514404
    4. 'return' → logprob: -10.129530906677246
    5. '    
' → logprob: -10.629530906677246
    6. ' return' → logprob: -10.754530906677246
    7. '
' → logprob: -10.879530906677246
    8. '  ' → logprob: -11.754530906677246
    9. '       ' → logprob: -12.129530906677246
    10. '    ' → logprob: -12.754530906677246

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012738952413201332
    2. 'if' → logprob: -4.512739181518555
    3. ' if' → logprob: -6.387739181518555
    4. 'return' → logprob: -12.887739181518555
    5. '       ' → logprob: -13.512739181518555
    6. '    
' → logprob: -13.762739181518555
    7. '  ' → logprob: -14.387739181518555
    8. '    ' → logprob: -14.887739181518555
    9. '	if' → logprob: -14.887739181518555
    10. '
' → logprob: -14.887739181518555

Token 242: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04897213354706764
    2. '   ' → logprob: -3.6739721298217773
    3. ' if' → logprob: -3.7989721298217773
    4. '
' → logprob: -11.173972129821777
    5. 'for' → logprob: -12.798972129821777
    6. ' ' → logprob: -13.423972129821777
    7. '    
' → logprob: -14.423972129821777
    8. '  ' → logprob: -14.423972129821777
    9. 'return' → logprob: -14.423972129821777
    10. '	if' → logprob: -14.548972129821777

Token 243: ' Cela' (ID: 44403)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04744753986597061
    2. ' if' → logprob: -3.172447443008423
    3. '   ' → logprob: -5.422447681427002
    4. '
' → logprob: -11.547447204589844
    5. 'for' → logprob: -12.672447204589844
    6. '#' → logprob: -13.297447204589844
    7. ' ' → logprob: -13.422447204589844
    8. '    
' → logprob: -13.672447204589844
    9. 'return' → logprob: -14.047447204589844
    10. 'elif' → logprob: -14.672447204589844

Token 244: ' vér' (ID: 42524)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6495785713195801
    2. ' return' → logprob: -1.39957857131958
    3. 'return' → logprob: -1.64957857131958
    4. 'if' → logprob: -4.14957857131958
    5. '    
' → logprob: -4.52457857131958
    6. ' if' → logprob: -4.77457857131958
    7. '
' → logprob: -6.52457857131958
    8. ' retourne' → logprob: -8.274578094482422
    9. ' 
' → logprob: -8.399578094482422
    10. ' revient' → logprob: -8.649578094482422

Token 245: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0005766240647062659
    2. 'if' → logprob: -7.625576496124268
    3. 'ite' → logprob: -10.000576972961426
    4. 'ifies' → logprob: -11.375576972961426
    5. 'ifier' → logprob: -11.750576972961426
    6. 'ife' → logprob: -12.125576972961426
    7. 'rait' → logprob: -12.375576972961426
    8. 'ifiez' → logprob: -12.500576972961426
    9. 'ra' → logprob: -12.625576972961426
    10. 'ifié' → logprob: -13.500576972961426

Token 246: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9231022596359253
    2. ' if' → logprob: -0.9231022596359253
    3. ' si' → logprob: -1.7981022596359253
    4. ' que' → logprob: -4.673102378845215
    5. 'si' → logprob: -4.673102378845215
    6. ' all' → logprob: -5.048102378845215
    7. '   ' → logprob: -5.173102378845215
    8. 'all' → logprob: -5.423102378845215
    9. 'A' → logprob: -7.048102378845215
    10. 'not' → logprob: -7.423102378845215

Token 247: ' condition' (ID: 7060)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.007009698543697596
    2. 't' → logprob: -6.382009506225586
    3. 'True' → logprob: -6.507009506225586
    4. ' all' → logprob: -7.132009506225586
    5. 'len' → logprob: -7.757009506225586
    6. 'tout' → logprob: -7.882009506225586
    7. 'prem' → logprob: -8.257009506225586
    8. 'condition' → logprob: -8.507009506225586
    9. 'next' → logprob: -8.757009506225586
    10. 'not' → logprob: -8.882009506225586

Token 248: ' initial' (ID: 4871)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0244112014770508
    2. ' if' → logprob: -1.1494112014770508
    3. '   ' → logprob: -1.3994112014770508
    4. ' all' → logprob: -3.649411201477051
    5. 'all' → logprob: -3.899411201477051
    6. 'A' → logprob: -4.899411201477051
    7. ' si' → logprob: -5.399411201477051
    8. ' A' → logprob: -5.524411201477051
    9. ' que' → logprob: -6.024411201477051
    10. 'si' → logprob: -6.399411201477051

Token 249: 'e' (ID: 68)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2961015999317169
    2. 'if' → logprob: -1.6711015701293945
    3. ' if' → logprob: -3.2961015701293945
    4. 'e' → logprob: -4.6711015701293945
    5. 'ement' → logprob: -4.6711015701293945
    6. 'A' → logprob: -5.7961015701293945
    7. ' si' → logprob: -6.1711015701293945
    8. 'ation' → logprob: -6.7961015701293945
    9. ' suivante' → logprob: -6.7961015701293945
    10. '       ' → logprob: -6.9211015701293945

Token 250: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13968980312347412
    2. ' if' → logprob: -2.3896899223327637
    3. 'if' → logprob: -3.2646899223327637
    4. ' si' → logprob: -8.639689445495605
    5. 'si' → logprob: -9.764689445495605
    6. ' for' → logprob: -10.139689445495605
    7. 'for' → logprob: -10.139689445495605
    8. '  ' → logprob: -10.889689445495605
    9. '    ' → logprob: -10.889689445495605
    10. 's' → logprob: -11.202189445495605

Token 251: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0965256690979004
    2. 'les' → logprob: -1.2215256690979004
    3. 'l' → logprob: -2.0965256690979004
    4. 'la' → logprob: -2.5965256690979004
    5. 't' → logprob: -2.7215256690979004
    6. 'all' → logprob: -3.2215256690979004
    7. 'zip' → logprob: -3.5965256690979004
    8. 'le' → logprob: -4.5965256690979
    9. 'B' → logprob: -4.8465256690979
    10. 'len' → logprob: -5.5965256690979

Token 252: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.8217419385910034
    2. 'list' → logprob: -1.0717419385910034
    3. 'sé' → logprob: -2.696742057800293
    4. 'de' → logprob: -2.946742057800293
    5. 'val' → logprob: -3.321742057800293
    6. 'A' → logprob: -3.321742057800293
    7. 's' → logprob: -5.196742057800293
    8. 'lists' → logprob: -6.196742057800293
    9. 'liste' → logprob: -6.321742057800293
    10. 'original' → logprob: -6.571742057800293

Token 253: ' correspond' (ID: 11095)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038681644946336746
    2. ' if' → logprob: -3.913681745529175
    3. 'if' → logprob: -4.788681507110596
    4. ' for' → logprob: -5.288681507110596
    5. 'for' → logprob: -5.663681507110596
    6. ',' → logprob: -9.163681983947754
    7. 'A' → logprob: -9.413681983947754
    8. 'si' → logprob: -9.476181983947754
    9. '       ' → logprob: -9.601181983947754
    10. 's' → logprob: -9.788681983947754

Token 254: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.7988035678863525
    2. 'ant' → logprob: -0.9238035678863525
    3. 'ance' → logprob: -2.6738035678863525
    4. '   ' → logprob: -2.9238035678863525
    5. 'ents' → logprob: -4.923803329467773
    6. 'aux' → logprob: -4.923803329467773
    7. 's' → logprob: -5.548803329467773
    8. ' à' → logprob: -5.673803329467773
    9. '       ' → logprob: -6.173803329467773
    10. 'ence' → logprob: -6.298803329467773

Token 255: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012224358506500721
    2. 'if' → logprob: -4.762224197387695
    3. ' if' → logprob: -5.637224197387695
    4. 'for' → logprob: -11.262224197387695
    5. ' for' → logprob: -12.137224197387695
    6. '    
' → logprob: -12.262224197387695
    7. ',' → logprob: -12.637224197387695
    8. '
' → logprob: -12.762224197387695
    9. '    ' → logprob: -12.887224197387695
    10. '       ' → logprob: -13.387224197387695

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01160215400159359
    2. 'if' → logprob: -4.51160192489624
    3. ' if' → logprob: -7.51160192489624
    4. '    
' → logprob: -12.511602401733398
    5. '
' → logprob: -14.261602401733398
    6. '       ' → logprob: -14.386602401733398
    7. 'for' → logprob: -14.511602401733398
    8. '   ' → logprob: -14.636602401733398
    9. '    ' → logprob: -15.011602401733398
    10. '```' → logprob: -15.011602401733398

Token 257: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2754964232444763
    2. '   ' → logprob: -1.775496482849121
    3. ' if' → logprob: -2.650496482849121
    4. 'for' → logprob: -7.525496482849121
    5. '
' → logprob: -9.275496482849121
    6. ' for' → logprob: -9.525496482849121
    7. ' ' → logprob: -11.025496482849121
    8. '    
' → logprob: -11.025496482849121
    9. 'return' → logprob: -11.275496482849121
    10. '  ' → logprob: -11.400496482849121

Token 258: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2580002248287201
    2. 'A' → logprob: -1.8830002546310425
    3. ' all' → logprob: -3.258000135421753
    4. 'SA' → logprob: -3.383000135421753
    5. ' A' → logprob: -6.383000373840332
    6. ' SA' → logprob: -7.133000373840332
    7. 'any' → logprob: -9.133000373840332
    8. 'not' → logprob: -9.508000373840332
    9. ' ' → logprob: -10.445500373840332
    10. 'a' → logprob: -10.695500373840332

Token 259: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.4868770196917467e-05
    2. '(sa' → logprob: -11.875024795532227
    3. 'a' → logprob: -12.375024795532227
    4. '(A' → logprob: -12.500024795532227
    5. '(x' → logprob: -12.500024795532227
    6. '(' → logprob: -12.875024795532227
    7. '((' → logprob: -13.125024795532227
    8. '(s' → logprob: -14.000024795532227
    9. '(b' → logprob: -15.500024795532227
    10. '(ai' → logprob: -16.125024795532227

Token 260: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0041789524257183075
    2. '<=' → logprob: -5.629179000854492
    3. ' ==' → logprob: -7.754179000854492
    4. ' ' → logprob: -9.504179000854492
    5. ' <' → logprob: -11.129179000854492
    6. '==' → logprob: -11.504179000854492
    7. ' >=' → logprob: -11.629179000854492
    8. ')' → logprob: -11.754179000854492
    9. ' ≤' → logprob: -12.254179000854492
    10. '  ' → logprob: -12.504179000854492

Token 261: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019297054968774319
    2. ' b' → logprob: -6.251929759979248
    3. ' ' → logprob: -14.50192928314209
    4. '   ' → logprob: -15.50192928314209
    5. '	b' → logprob: -15.87692928314209
    6. '  ' → logprob: -16.001930236816406
    7. ' ' → logprob: -16.876930236816406
    8. ')b' → logprob: -17.001930236816406
    9. '    ' → logprob: -17.376930236816406
    10. 'a' → logprob: -17.439430236816406

Token 262: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016060879454016685
    2. 'for' → logprob: -4.141060829162598
    3. '    ' → logprob: -11.391060829162598
    4. '   ' → logprob: -12.391060829162598
    5. ' ' → logprob: -12.641060829162598
    6. ' and' → logprob: -12.891060829162598
    7. '	for' → logprob: -13.641060829162598
    8. ' f' → logprob: -14.391060829162598
    9. ' in' → logprob: -14.766060829162598
    10. ' or' → logprob: -14.766060829162598

Token 263: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3489086627960205
    2. ' a' → logprob: -1.2239086627960205
    3. ',' → logprob: -8.223908424377441
    4. '	a' → logprob: -9.973908424377441
    5. 'A' → logprob: -10.223908424377441
    6. ' ' → logprob: -10.848908424377441
    7. ',a' → logprob: -11.036408424377441
    8. 'SA' → logprob: -11.411408424377441
    9. ' A' → logprob: -11.473908424377441
    10. ' ,' → logprob: -11.661408424377441

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018546271603554487
    2. ',b' → logprob: -6.626854419708252
    3. ' ,' → logprob: -7.876854419708252
    4. 'a' → logprob: -10.00185489654541
    5. ',a' → logprob: -10.25185489654541
    6. ' in' → logprob: -10.50185489654541
    7. 'b' → logprob: -11.68935489654541
    8. ' b' → logprob: -12.00185489654541
    9. ' a' → logprob: -12.43935489654541
    10. ',s' → logprob: -12.62685489654541

Token 265: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889705896377563
    2. ' b' → logprob: -2.578896999359131
    3. 'a' → logprob: -13.078897476196289
    4. '	b' → logprob: -13.203897476196289
    5. ' zip' → logprob: -13.828897476196289
    6. 'zip' → logprob: -13.953897476196289
    7. '(b' → logprob: -14.328897476196289
    8. ' ' → logprob: -15.328897476196289
    9. ' a' → logprob: -15.578897476196289
    10. ',b' → logprob: -15.828897476196289

Token 266: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007472097873687744
    2. 'in' → logprob: -5.132472038269043
    3. ',' → logprob: -6.507472038269043
    4. ' ,' → logprob: -10.257472038269043
    5. ' zip' → logprob: -12.632472038269043
    6. ')' → logprob: -12.882472038269043
    7. 'zip' → logprob: -13.382472038269043
    8. ' ' → logprob: -13.382472038269043
    9. 's' → logprob: -13.507472038269043
    10. '   ' → logprob: -13.632472038269043

Token 267: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.2014191895723343
    2. ' zip' → logprob: -1.7014192342758179
    3. 'br' → logprob: -12.82641887664795
    4. '(zip' → logprob: -13.07641887664795
    5. '.zip' → logprob: -14.95141887664795
    6. '_zip' → logprob: -16.201419830322266
    7. ' ' → logprob: -16.326419830322266
    8. 'ip' → logprob: -16.451419830322266
    9. 'z' → logprob: -16.451419830322266
    10. '
' → logprob: -16.576419830322266

Token 268: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.001141526736319065
    2. '(S' → logprob: -7.126141548156738
    3. 'A' → logprob: -8.251141548156738
    4. '(' → logprob: -10.251141548156738
    5. '   ' → logprob: -11.001141548156738
    6. '(B' → logprob: -12.251141548156738
    7. '(a' → logprob: -12.751141548156738
    8. 'SA' → logprob: -13.376141548156738
    9. ' (' → logprob: -13.626141548156738
    10. '    ' → logprob: -13.688641548156738

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015761636896058917
    2. ' ,' → logprob: -6.501575946807861
    3. ',B' → logprob: -9.75157642364502
    4. ',b' → logprob: -12.00157642364502
    5. '   ' → logprob: -12.87657642364502
    6. ',
' → logprob: -12.87657642364502
    7. ' B' → logprob: -13.37657642364502
    8. 'B' → logprob: -13.37657642364502
    9. ',S' → logprob: -15.37657642364502
    10. '       ' → logprob: -15.93907642364502

Token 270: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11282816529273987
    2. ' B' → logprob: -2.237828254699707
    3. '   ' → logprob: -12.862828254699707
    4. ' ' → logprob: -12.862828254699707
    5. '  ' → logprob: -15.862828254699707
    6. '    ' → logprob: -15.987828254699707
    7. '       ' → logprob: -15.987828254699707
    8. 'b' → logprob: -16.11282730102539
    9. ')' → logprob: -16.48782730102539
    10. '	B' → logprob: -16.61282730102539

Token 271: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.39001575112342834
    2. ')):
' → logprob: -1.140015721321106
    3. '))' → logprob: -5.890015602111816
    4. '   ' → logprob: -9.140015602111816
    5. ')):
' → logprob: -9.140015602111816
    6. ')' → logprob: -9.515015602111816
    7. ' ' → logprob: -10.140015602111816
    8. '):' → logprob: -10.765015602111816
    9. '):
' → logprob: -11.765015602111816
    10. '       ' → logprob: -11.890015602111816

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007352970424108207
    2. ':' → logprob: -7.250735282897949
    3. ':
' → logprob: -11.62573528289795
    4. '   ' → logprob: -12.00073528289795
    5. '
' → logprob: -13.12573528289795
    6. '	' → logprob: -13.50073528289795
    7. '):' → logprob: -13.87573528289795
    8. ',' → logprob: -14.12573528289795
    9. ' return' → logprob: -14.25073528289795
    10. '):
' → logprob: -14.37573528289795

Token 273: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1845906525850296
    2. '       ' → logprob: -1.9345906972885132
    3. ' return' → logprob: -3.8095905780792236
    4. '   ' → logprob: -6.309590816497803
    5. '	return' → logprob: -9.684590339660645
    6. '           ' → logprob: -10.684590339660645
    7. ' ' → logprob: -12.684590339660645
    8. '
' → logprob: -12.684590339660645
    9. '  ' → logprob: -14.184590339660645
    10. ':return' → logprob: -14.434590339660645

Token 274: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04876233637332916
    2. ' '' → logprob: -3.048762321472168
    3. '"' → logprob: -8.923762321472168
    4. '   ' → logprob: -10.673762321472168
    5. '('' → logprob: -12.173762321472168
    6. ' "' → logprob: -12.548762321472168
    7. ' ' → logprob: -12.923762321472168
    8. '"'' → logprob: -13.673762321472168
    9. ''"' → logprob: -13.673762321472168
    10. ''s' → logprob: -14.548762321472168

Token 275: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0489688366651535
    2. ''' → logprob: -3.04896879196167
    3. '"' → logprob: -7.92396879196167
    4. ' Yes' → logprob: -11.798969268798828
    5. 'Oui' → logprob: -12.798969268798828
    6. 'No' → logprob: -12.923969268798828
    7. '   ' → logprob: -12.923969268798828
    8. 'YES' → logprob: -13.423969268798828
    9. ' '' → logprob: -13.798969268798828
    10. '“Yes' → logprob: -15.173969268798828

Token 276: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010180409997701645
    2. ')' → logprob: -4.635180473327637
    3. '    
' → logprob: -8.510180473327637
    4. '<|end|>' → logprob: -9.135180473327637
    5. '
' → logprob: -10.260180473327637
    6. '')' → logprob: -10.635180473327637
    7. '<|end|>' → logprob: -11.760180473327637
    8. '.' → logprob: -11.760180473327637
    9. '\n' → logprob: -11.885180473327637
    10. ' )' → logprob: -12.010180473327637

Token 277: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4585106372833252
    2. '    
' → logprob: -1.3335106372833252
    3. '   ' → logprob: -2.458510637283325
    4. '
    
' → logprob: -4.083510398864746
    5. '

' → logprob: -7.333510398864746
    6. '    
    
' → logprob: -7.708510398864746
    7. '  
' → logprob: -8.708510398864746
    8. '    

' → logprob: -9.333510398864746
    9. '   
' → logprob: -9.583510398864746
    10. '\n' → logprob: -9.708510398864746

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16220378875732422
    2. '#' → logprob: -2.537203788757324
    3. '    
' → logprob: -3.162203788757324
    4. 'freq' → logprob: -4.787203788757324
    5. 'count' → logprob: -5.412203788757324
    6. '
' → logprob: -5.412203788757324
    7. 'counts' → logprob: -5.412203788757324
    8. 'counter' → logprob: -6.162203788757324
    9. 'from' → logprob: -7.537203788757324
    10. 'c' → logprob: -7.662203788757324

Token 279: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1354800909757614
    2. 'count' → logprob: -3.0104801654815674
    3. 'freq' → logprob: -4.135479927062988
    4. 'from' → logprob: -4.260479927062988
    5. 'counter' → logprob: -4.885479927062988
    6. 'C' → logprob: -4.885479927062988
    7. 'counts' → logprob: -5.010479927062988
    8. 'comp' → logprob: -5.260479927062988
    9. 'cnt' → logprob: -5.635479927062988
    10. 'c' → logprob: -5.635479927062988

Token 280: ' Tro' (ID: 29037)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1919176578521729
    2. 'freq' → logprob: -1.3169176578521729
    3. '#' → logprob: -1.5669176578521729
    4. 'comp' → logprob: -3.316917657852173
    5. 'cnt' → logprob: -3.316917657852173
    6. 'counter' → logprob: -3.691917657852173
    7. 'from' → logprob: -3.691917657852173
    8. 'c' → logprob: -3.816917657852173
    9. 'counts' → logprob: -3.941917657852173
    10. 'diff' → logprob: -4.566917419433594

Token 281: 'isième' (ID: 70717)
  Prédit: 'isi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isi' → logprob: -0.027299789711833
    2. 'isième' → logprob: -3.7772998809814453
    3. 'is' → logprob: -5.527299880981445
    4. 'p' → logprob: -10.152299880981445
    5. 'i' → logprob: -11.152299880981445
    6. 'u' → logprob: -12.152299880981445
    7. 'izi' → logprob: -12.527299880981445
    8. 'd' → logprob: -13.527299880981445
    9. 'isini' → logprob: -13.777299880981445
    10. 'isie' → logprob: -14.027299880981445

Token 282: ' vér' (ID: 42524)
  Prédit: ' vér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.04311234876513481
    2. '#' → logprob: -4.543112277984619
    3. ' verification' → logprob: -4.543112277984619
    4. 'v' → logprob: -5.793112277984619
    5. ' check' → logprob: -5.918112277984619
    6. 'verification' → logprob: -6.043112277984619
    7. ' for' → logprob: -6.168112277984619
    8. ' partie' → logprob: -6.168112277984619
    9. ' étape' → logprob: -6.543112277984619
    10. 'for' → logprob: -6.543112277984619

Token 283: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.002057596342638135
    2. 'fic' → logprob: -7.0020575523376465
    3. ' vér' → logprob: -7.8770575523376465
    4. 'if' → logprob: -8.002058029174805
    5. 'ération' → logprob: -9.002058029174805
    6. 'ication' → logprob: -9.377058029174805
    7. 'f' → logprob: -9.752058029174805
    8. 'fi' → logprob: -10.252058029174805
    9. '#' → logprob: -10.627058029174805
    10. 'é' → logprob: -11.002058029174805

Token 284: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5374460816383362
    2. ' :' → logprob: -1.1624460220336914
    3. ':' → logprob: -2.2874460220336914
    4. ' if' → logprob: -7.537446022033691
    5. '    ' → logprob: -8.162446022033691
    6. ' #' → logprob: -9.037446022033691
    7. '  ' → logprob: -9.037446022033691
    8. '#' → logprob: -9.037446022033691
    9. 'if' → logprob: -9.162446022033691
    10. ' :
' → logprob: -10.162446022033691

Token 285: ' on' (ID: 402)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -1.9395095109939575
    2. 'count' → logprob: -2.064509391784668
    3. 'comp' → logprob: -2.189509391784668
    4. 'c' → logprob: -2.189509391784668
    5. 'counter' → logprob: -2.314509391784668
    6. ' c' → logprob: -2.439509391784668
    7. ' counter' → logprob: -2.689509391784668
    8. 'cnt' → logprob: -3.064509391784668
    9. '#' → logprob: -3.189509391784668
    10. ' freq' → logprob: -3.189509391784668

Token 286: ' vér' (ID: 42524)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7809091210365295
    2. ' compte' → logprob: -1.7809090614318848
    3. 'comp' → logprob: -1.9059090614318848
    4. ' vér' → logprob: -2.2809090614318848
    5. 'cherche' → logprob: -3.7809090614318848
    6. 'ver' → logprob: -4.530909061431885
    7. 'count' → logprob: -4.655909061431885
    8. ' regarde' → logprob: -4.780909061431885
    9. '   ' → logprob: -4.905909061431885
    10. 'continue' → logprob: -5.030909061431885

Token 287: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -8.244413766078651e-05
    2. 'if' → logprob: -10.125082015991211
    3. 'ife' → logprob: -10.125082015991211
    4. 'ifié' → logprob: -14.750082015991211
    5. 'ifi' → logprob: -15.000082015991211
    6. 'ifiez' → logprob: -15.375082015991211
    7. '   ' → logprob: -15.875082015991211
    8. '
' → logprob: -16.00008201599121
    9. 'o' → logprob: -16.12508201599121
    10. '```' → logprob: -16.12508201599121

Token 288: ' pour' (ID: 1930)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.4749842882156372
    2. ' la' → logprob: -1.5999842882156372
    3. ' if' → logprob: -2.7249841690063477
    4. ' que' → logprob: -3.2249841690063477
    5. ' les' → logprob: -3.7249841690063477
    6. ' l' → logprob: -3.8499841690063477
    7. ' s' → logprob: -4.599984169006348
    8. 'si' → logprob: -4.974984169006348
    9. ' ' → logprob: -5.974984169006348
    10. 'la' → logprob: -6.599984169006348

Token 289: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3907282054424286
    2. 'i' → logprob: -1.390728235244751
    3. ' chaque' → logprob: -3.015728235244751
    4. 't' → logprob: -6.015727996826172
    5. ' t' → logprob: -6.015727996826172
    6. '_' → logprob: -6.265727996826172
    7. ' idx' → logprob: -6.640727996826172
    8. ' val' → logprob: -6.640727996826172
    9. 'val' → logprob: -6.765727996826172
    10. 'tout' → logprob: -6.890727996826172

Token 290: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4627071022987366
    2. ' i' → logprob: -1.4627070426940918
    3. 'val' → logprob: -3.337707042694092
    4. 'index' → logprob: -4.337707042694092
    5. 'a' → logprob: -4.462707042694092
    6. 'élé' → logprob: -4.462707042694092
    7. 'indice' → logprob: -4.587707042694092
    8. 'b' → logprob: -4.712707042694092
    9. ' index' → logprob: -4.712707042694092
    10. 'element' → logprob: -4.962707042694092

Token 291: ',' (ID: 11)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09114150702953339
    2. 'i' → logprob: -2.46614146232605
    3. ' if' → logprob: -6.841141700744629
    4. ',' → logprob: -8.591141700744629
    5. '   ' → logprob: -8.591141700744629
    6. ' ' → logprob: -8.966141700744629
    7. ' in' → logprob: -9.591141700744629
    8. ' dans' → logprob: -9.591141700744629
    9. ' que' → logprob: -9.841141700744629
    10. ' that' → logprob: -9.841141700744629

Token 292: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5580973029136658
    2. '   ' → logprob: -1.6830973625183105
    3. ' si' → logprob: -2.3080973625183105
    4. ' for' → logprob: -3.6830973625183105
    5. ' i' → logprob: -4.0580973625183105
    6. ' ' → logprob: -4.1830973625183105
    7. 'if' → logprob: -4.1830973625183105
    8. 'si' → logprob: -4.6830973625183105
    9. 'for' → logprob: -4.8080973625183105
    10. ' s' → logprob: -4.9330973625183105

Token 293: ' le' (ID: 505)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.278385877609253
    2. ' B' → logprob: -1.278385877609253
    3. 'A' → logprob: -2.153385877609253
    4. 'B' → logprob: -2.153385877609253
    5. ' any' → logprob: -2.653385877609253
    6. ' i' → logprob: -4.278386116027832
    7. 'len' → logprob: -4.403386116027832
    8. ' SA' → logprob: -4.403386116027832
    9. ' len' → logprob: -4.403386116027832
    10. 'a' → logprob: -4.528386116027832

Token 294: ' nombre' (ID: 9733)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8805264830589294
    2. 'A' → logprob: -1.3805265426635742
    3. 'a' → logprob: -2.130526542663574
    4. ' B' → logprob: -2.880526542663574
    5. ' A' → logprob: -3.130526542663574
    6. 'b' → logprob: -3.255526542663574
    7. 'c' → logprob: -4.505526542663574
    8. 'count' → logprob: -4.880526542663574
    9. 'comp' → logprob: -4.880526542663574
    10. ' a' → logprob: -5.130526542663574

Token 295: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.2024245262145996
    2. 'd' → logprob: -1.5774245262145996
    3. ' de' → logprob: -1.8274245262145996
    4. 's' → logprob: -2.2024245262145996
    5. '   ' → logprob: -2.3274245262145996
    6. 'import' → logprob: -4.0774245262146
    7. ' d' → logprob: -4.2024245262146
    8. '#' → logprob: -4.5774245262146
    9. ' of' → logprob: -4.8274245262146
    10. 'from' → logprob: -4.8274245262146

Token 296: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6305402517318726
    2. 'A' → logprob: -1.7555402517318726
    3. ' a' → logprob: -1.7555402517318726
    4. ' A' → logprob: -1.7555402517318726
    5. ' occurrences' → logprob: -2.880540370941162
    6. ' B' → logprob: -3.130540370941162
    7. 'B' → logprob: -3.255540370941162
    8. ' b' → logprob: -4.130540370941162
    9. ' elements' → logprob: -4.130540370941162
    10. 'b' → logprob: -4.380540370941162

Token 297: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5706668496131897
    2. 'a' → logprob: -1.695666790008545
    3. ' occurrences' → logprob: -2.570666790008545
    4. ' éléments' → logprob: -3.445666790008545
    5. ' a' → logprob: -3.695666790008545
    6. 'x' → logprob: -3.945666790008545
    7. 'i' → logprob: -4.070666790008545
    8. 'occ' → logprob: -4.445666790008545
    9. 'occur' → logprob: -4.445666790008545
    10. '1' → logprob: -4.945666790008545

Token 298: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0004597439547069371
    2. 'ment' → logprob: -8.125459671020508
    3. '```' → logprob: -9.875459671020508
    4. 'm' → logprob: -10.625459671020508
    5. 'ents' → logprob: -11.250459671020508
    6. 'éments' → logprob: -11.625459671020508
    7. 'nts' → logprob: -11.750459671020508
    8. 'MENTS' → logprob: -12.375459671020508
    9. 'ements' → logprob: -12.375459671020508
    10. 'ts' → logprob: -12.500459671020508

Token 299: '
' (ID: 198)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3926793336868286
    2. 'de' → logprob: -1.5176793336868286
    3. 'from' → logprob: -1.8926793336868286
    4. ' man' → logprob: -2.142679214477539
    5. ' from' → logprob: -3.392679214477539
    6. 'A' → logprob: -3.392679214477539
    7. 'a' → logprob: -3.517679214477539
    8. 'diff' → logprob: -3.642679214477539
    9. '   ' → logprob: -4.517679214477539
    10. 'd' → logprob: -4.517679214477539

Token 300: '   ' (ID: 271)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.712276041507721
    2. 'de' → logprob: -1.9622759819030762
    3. '   ' → logprob: -2.337275981903076
    4. 'd' → logprob: -2.837275981903076
    5. '#' → logprob: -3.462275981903076
    6. 'a' → logprob: -4.087275981903076
    7. 'A' → logprob: -4.212275981903076
    8. 'sup' → logprob: -4.337275981903076
    9. ' dans' → logprob: -4.837275981903076
    10. 'dans' → logprob: -4.837275981903076

Token 301: ' #' (ID: 1069)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.087852954864502
    2. 'de' → logprob: -1.712852954864502
    3. '   ' → logprob: -2.462852954864502
    4. 'a' → logprob: -2.712852954864502
    5. 'd' → logprob: -2.712852954864502
    6. 'dans' → logprob: -3.337852954864502
    7. ' dans' → logprob: -3.837852954864502
    8. 'i' → logprob: -3.962852954864502
    9. ' plus' → logprob: -4.212852954864502
    10. ' a' → logprob: -4.462852954864502

Token 302: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2946951389312744
    2. 'a' → logprob: -1.7946951389312744
    3. 'de' → logprob: -1.7946951389312744
    4. 'A' → logprob: -2.6696951389312744
    5. 'B' → logprob: -2.9196951389312744
    6. ' a' → logprob: -3.6696951389312744
    7. '<=' → logprob: -3.7946951389312744
    8. 'from' → logprob: -3.9196951389312744
    9. 'inf' → logprob: -3.9196951389312744
    10. 'd' → logprob: -4.044694900512695

Token 303: ' SA' (ID: 19609)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.724822998046875
    2. 'B' → logprob: -1.224822998046875
    3. 'SA' → logprob: -2.474822998046875
    4. ' A' → logprob: -3.349822998046875
    5. 'SB' → logprob: -3.349822998046875
    6. ' B' → logprob: -3.349822998046875
    7. ' SB' → logprob: -4.974822998046875
    8. 'val' → logprob: -5.224822998046875
    9. 'la' → logprob: -5.599822998046875
    10. ' SA' → logprob: -5.849822998046875

Token 304: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.389747977256775
    2. ')' → logprob: -1.889747977256775
    3. '<=' → logprob: -2.1397480964660645
    4. '   ' → logprob: -2.2647480964660645
    5. ' dans' → logprob: -2.8897480964660645
    6. ' à' → logprob: -3.1397480964660645
    7. ',' → logprob: -3.5147480964660645
    8. 'dans' → logprob: -3.6397480964660645
    9. 'd' → logprob: -3.8897480964660645
    10. '[i' → logprob: -4.0147480964660645

Token 305: ' SB' (ID: 41915)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.346237301826477
    2. ' a' → logprob: -1.471237301826477
    3. ' b' → logprob: -1.971237301826477
    4. 'b' → logprob: -2.2212371826171875
    5. ' SB' → logprob: -3.0962371826171875
    6. ' A' → logprob: -3.2212371826171875
    7. 'A' → logprob: -3.2212371826171875
    8. 'SA' → logprob: -3.2212371826171875
    9. 'SB' → logprob: -3.4712371826171875
    10. ' B' → logprob: -3.8462371826171875

Token 306: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.326149582862854
    2. '   ' → logprob: -2.0761494636535645
    3. ' for' → logprob: -2.5761494636535645
    4. ' at' → logprob: -2.5761494636535645
    5. '[pos' → logprob: -2.5761494636535645
    6. ')' → logprob: -2.7011494636535645
    7. '[' → logprob: -2.8261494636535645
    8. '[j' → logprob: -2.9511494636535645
    9. '[position' → logprob: -3.9511494636535645
    10. '[b' → logprob: -3.9511494636535645

Token 307: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01688392460346222
    2. '[i' → logprob: -4.641883850097656
    3. '])' → logprob: -5.641883850097656
    4. ')' → logprob: -6.141883850097656
    5. ' ]' → logprob: -7.641883850097656
    6. '   ' → logprob: -8.141883850097656
    7. '[j' → logprob: -8.766883850097656
    8. '[:' → logprob: -9.516883850097656
    9. ']:
' → logprob: -9.766883850097656
    10. '[' → logprob: -10.141883850097656

Token 308: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5996789336204529
    2. ' <=' → logprob: -1.0996789932250977
    3. ' for' → logprob: -3.4746789932250977
    4. ' >' → logprob: -3.7246789932250977
    5. '<=' → logprob: -3.8496789932250977
    6. '    ' → logprob: -5.099678993225098
    7. ')' → logprob: -5.099678993225098
    8. ',' → logprob: -5.599678993225098
    9. 'for' → logprob: -5.724678993225098
    10. '       ' → logprob: -5.974678993225098

Token 309: ' strict' (ID: 12035)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.524469256401062
    2. ' i' → logprob: -1.649469256401062
    3. '   ' → logprob: -2.1494693756103516
    4. 'au' → logprob: -2.2744693756103516
    5. ' len' → logprob: -2.2744693756103516
    6. 'len' → logprob: -2.6494693756103516
    7. ' at' → logprob: -3.3994693756103516
    8. 'exact' → logprob: -3.6494693756103516
    9. '>=' → logprob: -3.8994693756103516
    10. ' au' → logprob: -4.024469375610352

Token 310: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.14742018282413483
    2. 'ly' → logprob: -2.1474201679229736
    3. 'ment' → logprob: -4.397420406341553
    4. '[' → logprob: -6.272420406341553
    5. '```' → logprob: -6.897420406341553
    6. 'rement' → logprob: -7.397420406341553
    7. '>' → logprob: -7.397420406341553
    8. 'lement' → logprob: -7.897420406341553
    9. 'y' → logprob: -8.022419929504395
    10. '
' → logprob: -8.022419929504395

Token 311: ' égal' (ID: 15059)
  Prédit: ' inférieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inférieur' → logprob: -0.7976397275924683
    2. ' supérieur' → logprob: -1.0476397275924683
    3. 'sup' → logprob: -2.422639846801758
    4. 'inf' → logprob: -3.172639846801758
    5. 'infer' → logprob: -3.797639846801758
    6. 'plus' → logprob: -4.422639846801758
    7. 'greater' → logprob: -5.172639846801758
    8. 'in' → logprob: -5.422639846801758
    9. 'moins' → logprob: -5.422639846801758
    10. ' less' → logprob: -5.672639846801758

Token 312: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2538623809814453
    2. '   ' → logprob: -2.3788623809814453
    3. ' au' → logprob: -2.8788623809814453
    4. ' len' → logprob: -3.1288623809814453
    5. ' aux' → logprob: -4.878862380981445
    6. ' to' → logprob: -5.003862380981445
    7. '    ' → logprob: -5.378862380981445
    8. 'à' → logprob: -5.503862380981445
    9. 'len' → logprob: -5.753862380981445
    10. ' a' → logprob: -7.003862380981445

Token 313: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3119834363460541
    2. ' i' → logprob: -1.5619834661483765
    3. 'len' → logprob: -3.561983346939087
    4. ' len' → logprob: -5.561983585357666
    5. 'br' → logprob: -5.686983585357666
    6. '   ' → logprob: -5.811983585357666
    7. ' la' → logprob: -6.061983585357666
    8. 'B' → logprob: -6.186983585357666
    9. 'SA' → logprob: -6.311983585357666
    10. 'A' → logprob: -6.436983585357666

Token 314: '+' (ID: 10)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42402705550193787
    2. ':' → logprob: -1.4240270853042603
    3. '+' → logprob: -3.1740269660949707
    4. ':
' → logprob: -4.049026966094971
    5. ' +' → logprob: -4.174026966094971
    6. ' for' → logprob: -4.924026966094971
    7. ' :' → logprob: -5.299026966094971
    8. ' :
' → logprob: -5.674026966094971
    9. '       ' → logprob: -6.299026966094971
    10. ' and' → logprob: -6.424026966094971

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036050593480467796
    2. ' ' → logprob: -5.628604888916016
    3. '
' → logprob: -13.128604888916016
    4. '+' → logprob: -13.878604888916016
    5. '   ' → logprob: -14.753604888916016
    6. 's' → logprob: -15.191104888916016
    7. '2' → logprob: -15.378604888916016
    8. '`' → logprob: -15.691104888916016
    9. '  ' → logprob: -16.191104888916016
    10. ' ' → logprob: -16.253604888916016

Token 316: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03615108132362366
    2. '
' → logprob: -3.661151170730591
    3. '    
' → logprob: -5.286150932312012
    4. ' for' → logprob: -6.161150932312012
    5. 'for' → logprob: -6.786150932312012
    6. ':' → logprob: -8.161150932312012
    7. 'def' → logprob: -8.411150932312012
    8. '   
' → logprob: -8.786150932312012
    9. '
' → logprob: -9.036150932312012
    10. ',' → logprob: -9.036150932312012

Token 317: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44282248616218567
    2. '       ' → logprob: -1.6928224563598633
    3. ' return' → logprob: -2.4428224563598633
    4. 'return' → logprob: -3.4428224563598633
    5. ' continue' → logprob: -3.9428224563598633
    6. 'continue' → logprob: -5.067822456359863
    7. ' continuer' → logprob: -5.442822456359863
    8. ':' → logprob: -5.692822456359863
    9. '    
' → logprob: -5.942822456359863
    10. ' on' → logprob: -6.317822456359863

Token 318: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5307167172431946
    2. 'return' → logprob: -1.1557166576385498
    3. ' return' → logprob: -2.65571665763855
    4. '   ' → logprob: -3.78071665763855
    5. '           ' → logprob: -5.780716896057129
    6. '	return' → logprob: -8.155716896057129
    7. ' ' → logprob: -8.905716896057129
    8. '  ' → logprob: -9.155716896057129
    9. ':return' → logprob: -9.655716896057129
    10. '    ' → logprob: -9.780716896057129

Token 319: ' transformation' (ID: 26242)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3632301986217499
    2. 'return' → logprob: -1.4882302284240723
    3. '       ' → logprob: -2.6132302284240723
    4. '   ' → logprob: -5.363230228424072
    5. '	return' → logprob: -7.613230228424072
    6. '           ' → logprob: -9.113229751586914
    7. ' ' → logprob: -9.863229751586914
    8. '    ' → logprob: -10.363229751586914
    9. ' ' → logprob: -10.363229751586914
    10. '  ' → logprob: -11.113229751586914

Token 320: ' possible' (ID: 4149)
  Prédit: ' impossible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impossible' → logprob: -0.04997360333800316
    2. ' possible' → logprob: -3.549973487854004
    3. '   ' → logprob: -5.049973487854004
    4. ' return' → logprob: -5.174973487854004
    5. 'possible' → logprob: -5.924973487854004
    6. ' est' → logprob: -6.049973487854004
    7. 'return' → logprob: -6.174973487854004
    8. ' n' → logprob: -9.049973487854004
    9. ' =' → logprob: -9.049973487854004
    10. 'est' → logprob: -9.174973487854004

Token 321: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012122021988034248
    2. ':' → logprob: -5.63712215423584
    3. '    
' → logprob: -5.88712215423584
    4. '.' → logprob: -6.38712215423584
    5. ' for' → logprob: -6.76212215423584
    6. '  
' → logprob: -7.51212215423584
    7. ',' → logprob: -8.01212215423584
    8. '
' → logprob: -8.13712215423584
    9. '   
' → logprob: -8.26212215423584
    10. '  ' → logprob: -8.26212215423584

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006224070675671101
    2. ' for' → logprob: -6.006224155426025
    3. 'for' → logprob: -6.506224155426025
    4. '
' → logprob: -6.881224155426025
    5. '    
' → logprob: -7.256224155426025
    6. '\n' → logprob: -7.756224155426025
    7. '   
' → logprob: -11.131223678588867
    8. '  
' → logprob: -11.256223678588867
    9. '	for' → logprob: -11.631223678588867
    10. ' 
' → logprob: -11.756223678588867

Token 323: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42820584774017334
    2. ' for' → logprob: -1.5532058477401733
    3. 'for' → logprob: -2.053205966949463
    4. 'n' → logprob: -5.053205966949463
    5. ' n' → logprob: -6.803205966949463
    6. '
' → logprob: -7.803205966949463
    7. '    
' → logprob: -7.928205966949463
    8. '  
' → logprob: -10.803205490112305
    9. '  ' → logprob: -11.053205490112305
    10. ' ' → logprob: -11.178205490112305

Token 324: ' Cela' (ID: 44403)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6165254712104797
    2. 'for' → logprob: -1.366525411605835
    3. '   ' → logprob: -2.491525411605835
    4. ' n' → logprob: -2.741525411605835
    5. 'n' → logprob: -2.866525411605835
    6. 'from' → logprob: -8.866525650024414
    7. ' counts' → logprob: -8.991525650024414
    8. ' from' → logprob: -9.241525650024414
    9. 'max' → logprob: -9.366525650024414
    10. 'counts' → logprob: -9.491525650024414

Token 325: ' teste' (ID: 62670)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16702936589717865
    2. ' n' → logprob: -3.54202938079834
    3. ' for' → logprob: -3.79202938079834
    4. 'n' → logprob: -4.04202938079834
    5. 'for' → logprob: -4.04202938079834
    6. 'return' → logprob: -4.29202938079834
    7. ' semble' → logprob: -4.54202938079834
    8. ' return' → logprob: -4.79202938079834
    9. ' est' → logprob: -5.04202938079834
    10. ' signifie' → logprob: -5.79202938079834

Token 326: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36341995000839233
    2. ' for' → logprob: -2.113420009613037
    3. 'for' → logprob: -2.363420009613037
    4. ' if' → logprob: -3.238420009613037
    5. ' la' → logprob: -3.988420009613037
    6. 'if' → logprob: -4.113420009613037
    7. ' si' → logprob: -4.863420009613037
    8. 'si' → logprob: -6.363420009613037
    9. ' les' → logprob: -7.238420009613037
    10. 'pour' → logprob: -7.363420009613037

Token 327: ' propriété' (ID: 87730)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.29402634501457214
    2. ' condition' → logprob: -2.4190263748168945
    3. '#' → logprob: -3.4190263748168945
    4. 'poss' → logprob: -3.6690263748168945
    5. 'contr' → logprob: -3.6690263748168945
    6. 'possible' → logprob: -4.0440263748168945
    7. 's' → logprob: -5.2940263748168945
    8. 'in' → logprob: -5.4190263748168945
    9. 'diff' → logprob: -5.4190263748168945
    10. 'log' → logprob: -5.6690263748168945

Token 328: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44046181440353394
    2. ' de' → logprob: -2.1904618740081787
    3. ' d' → logprob: -2.6904618740081787
    4. 'de' → logprob: -3.1904618740081787
    5. ' fondamentale' → logprob: -3.4404618740081787
    6. 'import' → logprob: -3.6904618740081787
    7. ' essentielle' → logprob: -3.8154618740081787
    8. ' importante' → logprob: -4.0654616355896
    9. 'd' → logprob: -4.4404616355896
    10. ' cruc' → logprob: -5.6904616355896

Token 329: ' permutation' (ID: 135200)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.5333545207977295
    2. 'mon' → logprob: -1.7833545207977295
    3. 'domin' → logprob: -2.4083545207977295
    4. 'pré' → logprob: -2.7833545207977295
    5. ' monot' → logprob: -3.0333545207977295
    6. 'la' → logprob: -3.6583545207977295
    7. 'prefix' → logprob: -3.7833545207977295
    8. 'lis' → logprob: -3.9083545207977295
    9. 'len' → logprob: -3.9083545207977295
    10. 'strict' → logprob: -3.9083545207977295

Token 330: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12494153529405594
    2. ':' → logprob: -2.87494158744812
    3. '.' → logprob: -4.249941349029541
    4. ' de' → logprob: -4.749941349029541
    5. ' for' → logprob: -5.249941349029541
    6. ' :' → logprob: -5.249941349029541
    7. ',' → logprob: -5.499941349029541
    8. '  ' → logprob: -5.999941349029541
    9. '    
' → logprob: -5.999941349029541
    10. ' possible' → logprob: -5.999941349029541

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05723150447010994
    2. ' for' → logprob: -3.5572314262390137
    3. 'for' → logprob: -3.6822314262390137
    4. 'n' → logprob: -6.682231426239014
    5. '    
' → logprob: -8.182231903076172
    6. '
' → logprob: -8.307231903076172
    7. ' n' → logprob: -9.557231903076172
    8. '\n' → logprob: -10.432231903076172
    9. '	for' → logprob: -11.432231903076172
    10. '  
' → logprob: -11.932231903076172

Token 332: ' N' (ID: 478)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6649522185325623
    2. 'for' → logprob: -1.164952278137207
    3. '   ' → logprob: -1.914952278137207
    4. 'n' → logprob: -4.164952278137207
    5. ' n' → logprob: -4.539952278137207
    6. ' N' → logprob: -10.664952278137207
    7. 'from' → logprob: -10.789952278137207
    8. '    
' → logprob: -10.789952278137207
    9. ' from' → logprob: -11.289952278137207
    10. ' counts' → logprob: -11.539952278137207

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11354821175336838
    2. '=' → logprob: -2.2385482788085938
    3. '=len' → logprob: -7.238548278808594
    4. '=int' → logprob: -12.863548278808594
    5. ',' → logprob: -12.988548278808594
    6. '=N' → logprob: -14.488548278808594
    7. ' ' → logprob: -14.613548278808594
    8. '=
' → logprob: -15.113548278808594
    9. '   ' → logprob: -15.238548278808594
    10. ' =
' → logprob: -15.238548278808594

Token 334: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.06197037547826767
    2. ' len' → logprob: -2.8119704723358154
    3. '   ' → logprob: -12.936970710754395
    4. '(len' → logprob: -15.811970710754395
    5. '	len' → logprob: -16.936969757080078
    6. '[len' → logprob: -17.686969757080078
    7. '=len' → logprob: -18.061969757080078
    8. ' ' → logprob: -19.436969757080078
    9. ',len' → logprob: -20.186969757080078
    10. '<len' → logprob: -20.686969757080078

Token 335: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.05650129169225693
    2. '(S' → logprob: -2.9315013885498047
    3. 'A' → logprob: -6.681501388549805
    4. '(B' → logprob: -8.056501388549805
    5. 'SA' → logprob: -10.306501388549805
    6. '(' → logprob: -11.931501388549805
    7. 'S' → logprob: -13.431501388549805
    8. ' A' → logprob: -13.806501388549805
    9. 'B' → logprob: -13.931501388549805
    10. ' (' → logprob: -14.056501388549805

Token 336: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062053948640823364
    2. ')
' → logprob: -2.812053918838501
    3. '   ' → logprob: -9.562053680419922
    4. ' )' → logprob: -11.937053680419922
    5. ')
' → logprob: -12.312053680419922
    6. ')

' → logprob: -13.187053680419922
    7. '
' → logprob: -13.937053680419922
    8. ' )
' → logprob: -14.312053680419922
    9. ' ' → logprob: -15.437053680419922
    10. '```' → logprob: -15.562053680419922

Token 337: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028646551072597504
    2. '   ' → logprob: -3.903646469116211
    3. '    
' → logprob: -5.653646469116211
    4. 'for' → logprob: -6.028646469116211
    5. ' for' → logprob: -7.028646469116211
    6. '\n' → logprob: -7.403646469116211
    7. '  
' → logprob: -8.778646469116211
    8. ' 
' → logprob: -8.778646469116211
    9. '
' → logprob: -9.778646469116211
    10. '```' → logprob: -9.778646469116211

Token 338: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25197818875312805
    2. '   ' → logprob: -2.3769781589508057
    3. ' for' → logprob: -3.1269781589508057
    4. 'count' → logprob: -3.2519781589508057
    5. 'counts' → logprob: -4.501978397369385
    6. 'prefix' → logprob: -4.876978397369385
    7. 'pos' → logprob: -5.251978397369385
    8. 'c' → logprob: -5.376978397369385
    9. 'from' → logprob: -5.626978397369385
    10. 'freq' → logprob: -5.751978397369385

Token 339: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.43044039607048035
    2. 'any' → logprob: -1.5554404258728027
    3. ' not' → logprob: -3.1804404258728027
    4. 'N' → logprob: -3.6804404258728027
    5. ' all' → logprob: -3.9304404258728027
    6. ' N' → logprob: -3.9304404258728027
    7. 'not' → logprob: -4.055440425872803
    8. 'all' → logprob: -4.430440425872803
    9. ' ' → logprob: -7.555440425872803
    10. 'len' → logprob: -7.930440425872803

Token 340: '(br' (ID: 65786)
  Prédit: '(br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(br' → logprob: -0.19276568293571472
    2. '(b' → logprob: -2.567765712738037
    3. '(S' → logprob: -2.942765712738037
    4. '(' → logprob: -3.817765712738037
    5. '((' → logprob: -3.942765712738037
    6. '(i' → logprob: -6.817765712738037
    7. '(
' → logprob: -7.192765712738037
    8. '(sum' → logprob: -7.817765712738037
    9. '(len' → logprob: -7.942765712738037
    10. '(not' → logprob: -8.442765235900879

Token 341: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0017162315780296922
    2. '(' → logprob: -7.376716136932373
    3. ' (' → logprob: -7.876716136932373
    4. ')' → logprob: -7.876716136932373
    5. '(
' → logprob: -8.751716613769531
    6. '   ' → logprob: -9.251716613769531
    7. '(B' → logprob: -11.251716613769531
    8. ')(' → logprob: -11.251716613769531
    9. ',' → logprob: -11.751716613769531
    10. ' ' → logprob: -12.001716613769531

Token 342: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07910557836294174
    2. 'B' → logprob: -2.5791056156158447
    3. 'BA' → logprob: -9.454105377197266
    4. 'SA' → logprob: -10.641605377197266
    5. '(A' → logprob: -11.204105377197266
    6. '(' → logprob: -11.266605377197266
    7. ' A' → logprob: -11.391605377197266
    8. ')' → logprob: -11.704105377197266
    9. 'AB' → logprob: -11.766605377197266
    10. '
' → logprob: -12.204105377197266

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001737539772875607
    2. 'SB' → logprob: -7.376737594604492
    3. ',S' → logprob: -7.626737594604492
    4. ' ,' → logprob: -7.751737594604492
    5. '(S' → logprob: -9.751737594604492
    6. '   ' → logprob: -10.376737594604492
    7. ',
' → logprob: -10.626737594604492
    8. ',B' → logprob: -10.876737594604492
    9. ' ' → logprob: -11.501737594604492
    10. ')' → logprob: -11.751737594604492

Token 344: ' SB' (ID: 41915)
  Prédit: 'SB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SB' → logprob: -0.012531783431768417
    2. ' SB' → logprob: -4.512531757354736
    3. 'sb' → logprob: -7.262531757354736
    4. 'b' → logprob: -7.387531757354736
    5. 'B' → logprob: -9.137532234191895
    6. '   ' → logprob: -10.887532234191895
    7. ' b' → logprob: -11.512532234191895
    8. ' ' → logprob: -12.012532234191895
    9. 'Sb' → logprob: -12.512532234191895
    10. '_SB' → logprob: -12.512532234191895

Token 345: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4021237802808173e-05
    2. '[' → logprob: -11.625014305114746
    3. 'i' → logprob: -12.750014305114746
    4. ')' → logprob: -14.000014305114746
    5. '[
' → logprob: -14.875014305114746
    6. ' [' → logprob: -15.375014305114746
    7. '[I' → logprob: -16.12501335144043
    8. '   ' → logprob: -16.25001335144043
    9. '[j' → logprob: -16.37501335144043
    10. ')[' → logprob: -16.37501335144043

Token 346: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004170406609773636
    2. ')+' → logprob: -6.3791704177856445
    3. '[i' → logprob: -7.0041704177856445
    4. ' )' → logprob: -7.1291704177856445
    5. ')<=' → logprob: -7.6291704177856445
    6. ')>' → logprob: -9.504170417785645
    7. ')<' → logprob: -10.129170417785645
    8. '   ' → logprob: -10.129170417785645
    9. 'i' → logprob: -11.004170417785645
    10. ',' → logprob: -11.504170417785645

Token 347: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7399210333824158
    2. ' <' → logprob: -1.2399210929870605
    3. ' <=' → logprob: -2.1149210929870605
    4. '!=' → logprob: -2.9899210929870605
    5. '<' → logprob: -3.4899210929870605
    6. '<=' → logprob: -3.7399210929870605
    7. '<i' → logprob: -5.6149210929870605
    8. ')' → logprob: -5.7399210929870605
    9. ' ' → logprob: -7.6149210929870605
    10. '<n' → logprob: -8.739920616149902

Token 348: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014269525185227394
    2. ' i' → logprob: -4.2642693519592285
    3. '   ' → logprob: -9.639269828796387
    4. '(i' → logprob: -10.889269828796387
    5. '	i' → logprob: -12.139269828796387
    6. ' (' → logprob: -12.514269828796387
    7. ' ' → logprob: -12.764269828796387
    8. '[i' → logprob: -13.139269828796387
    9. '  ' → logprob: -13.389269828796387
    10. '{i' → logprob: -13.389269828796387

Token 349: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06198807805776596
    2. ' +' → logprob: -2.811988115310669
    3. '+
' → logprob: -11.81198787689209
    4. '1' → logprob: -12.06198787689209
    5. ' +
' → logprob: -13.18698787689209
    6. ')+' → logprob: -13.93698787689209
    7. ' plus' → logprob: -14.18698787689209
    8. ')' → logprob: -14.31198787689209
    9. ' ' → logprob: -14.31198787689209
    10. '
' → logprob: -14.31198787689209

Token 350: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001097417771234177
    2. ' ' → logprob: -9.125109672546387
    3. '
' → logprob: -14.875109672546387
    4. '   ' → logprob: -15.375109672546387
    5. '```' → logprob: -15.750109672546387
    6. '[' → logprob: -18.312610626220703
    7. '`' → logprob: -18.375110626220703
    8. '2' → logprob: -18.375110626220703
    9. '  ' → logprob: -18.625110626220703
    10. '``' → logprob: -18.687610626220703

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.333223139634356e-05
    2. ' ' → logprob: -10.375033378601074
    3. '
' → logprob: -13.625033378601074
    4. '```' → logprob: -15.125033378601074
    5. '   ' → logprob: -15.562533378601074
    6. '`' → logprob: -16.875032424926758
    7. '  ' → logprob: -17.562532424926758
    8. '``' → logprob: -17.625032424926758
    9. '2' → logprob: -17.812532424926758
    10. '
' → logprob: -18.000032424926758

Token 352: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35379359126091003
    2. '       ' → logprob: -1.7287936210632324
    3. '):
' → logprob: -2.7287936210632324
    4. '):' → logprob: -3.8537936210632324
    5. '   ' → logprob: -4.103793621063232
    6. ')' → logprob: -4.853793621063232
    7. ':' → logprob: -5.353793621063232
    8. ':
' → logprob: -6.353793621063232
    9. 'for' → logprob: -6.853793621063232
    10. ' or' → logprob: -7.103793621063232

Token 353: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16024473309516907
    2. ' i' → logprob: -1.9102447032928467
    3. ' range' → logprob: -11.410244941711426
    4. 'range' → logprob: -12.035244941711426
    5. ' ' → logprob: -13.160244941711426
    6. '	i' → logprob: -14.160244941711426
    7. ' in' → logprob: -15.410244941711426
    8. '   ' → logprob: -15.785244941711426
    9. '  ' → logprob: -16.28524398803711
    10. '
' → logprob: -16.41024398803711

Token 354: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026371242478489876
    2. 'in' → logprob: -3.6513712406158447
    3. ')' → logprob: -10.026371002197266
    4. ' i' → logprob: -11.776371002197266
    5. ' ' → logprob: -12.401371002197266
    6. ',' → logprob: -12.526371002197266
    7. '	in' → logprob: -12.776371002197266
    8. 'n' → logprob: -13.776371002197266
    9. ' )' → logprob: -13.901371002197266
    10. '   ' → logprob: -14.401371002197266

Token 355: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0619683600962162
    2. ' range' → logprob: -2.8119683265686035
    3. ' ' → logprob: -14.811968803405762
    4. '	range' → logprob: -15.936968803405762
    5. '   ' → logprob: -16.936967849731445
    6. '
' → logprob: -17.561967849731445
    7. '  ' → logprob: -17.811967849731445
    8. ')' → logprob: -18.186967849731445
    9. '(range' → logprob: -18.811967849731445
    10. 'rang' → logprob: -19.311967849731445

Token 356: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.43048498034477234
    2. '(N' → logprob: -1.0554850101470947
    3. ' N' → logprob: -7.180484771728516
    4. '   ' → logprob: -7.180484771728516
    5. '(' → logprob: -9.180484771728516
    6. '	N' → logprob: -9.305484771728516
    7. '
' → logprob: -10.555484771728516
    8. ')' → logprob: -11.305484771728516
    9. ' (' → logprob: -11.680484771728516
    10. ',N' → logprob: -12.180484771728516

Token 357: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1065867617726326
    2. '):
' → logprob: -2.3565866947174072
    3. ')' → logprob: -5.106586933135986
    4. '   ' → logprob: -8.606586456298828
    5. ' ):' → logprob: -9.356586456298828
    6. ')):' → logprob: -11.606586456298828
    7. ' ):
' → logprob: -11.856586456298828
    8. '):
' → logprob: -12.106586456298828
    9. ':' → logprob: -12.606586456298828
    10. ')):
' → logprob: -13.231586456298828

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00731648551300168
    2. '
' → logprob: -5.257316589355469
    3. ':' → logprob: -6.757316589355469
    4. ':
' → logprob: -7.382316589355469
    5. '   ' → logprob: -8.882316589355469
    6. 'return' → logprob: -10.132316589355469
    7. ' return' → logprob: -10.507316589355469
    8. ':return' → logprob: -10.757316589355469
    9. '	' → logprob: -10.882316589355469
    10. '):
' → logprob: -11.132316589355469

Token 359: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4400523006916046
    2. ' return' → logprob: -1.5650522708892822
    3. 'return' (adapté à ' return') → logprob: -1.9400522708892822
    4. '   ' → logprob: -5.815052509307861
    5. ' ' → logprob: -9.190052032470703
    6. '           ' → logprob: -9.815052032470703
    7. '	return' → logprob: -10.440052032470703
    8. '    ' → logprob: -10.815052032470703
    9. '
' → logprob: -11.315052032470703
    10. '  ' → logprob: -12.065052032470703

Token 360: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00029470553272403777
    2. ' '' → logprob: -8.25029468536377
    3. '"' → logprob: -11.50029468536377
    4. '   ' → logprob: -11.62529468536377
    5. '"No' → logprob: -11.87529468536377
    6. ' ' → logprob: -12.75029468536377
    7. 'Yes' → logprob: -14.00029468536377
    8. '  ' → logprob: -14.25029468536377
    9. '
' → logprob: -14.25029468536377
    10. '('' → logprob: -14.87529468536377

Token 361: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.047384437173604965
    2. 'No' → logprob: -3.42238450050354
    3. ''' → logprob: -4.297384262084961
    4. '"' → logprob: -11.672384262084961
    5. 'YES' → logprob: -12.172384262084961
    6. ' Yes' → logprob: -12.172384262084961
    7. 'Oui' → logprob: -12.297384262084961
    8. '   ' → logprob: -13.172384262084961
    9. 'Ye' → logprob: -13.422384262084961
    10. '"No' → logprob: -13.547384262084961

Token 362: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025072861462831497
    2. '    
' → logprob: -6.252507209777832
    3. ')' → logprob: -8.002507209777832
    4. '
' → logprob: -9.002507209777832
    5. '<|end|>' → logprob: -9.377507209777832
    6. '  
' → logprob: -11.502507209777832
    7. 'return' → logprob: -12.252507209777832
    8. '')' → logprob: -12.252507209777832
    9. '<|end|>' → logprob: -13.002507209777832
    10. '  ' → logprob: -13.002507209777832

Token 363: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005271584261208773
    2. '    
' → logprob: -5.3802714347839355
    3. '
' → logprob: -8.755271911621094
    4. 'return' → logprob: -9.130271911621094
    5. '	return' → logprob: -9.255271911621094
    6. '<|end|>' → logprob: -9.255271911621094
    7. '  
' → logprob: -9.505271911621094
    8. '       ' → logprob: -11.130271911621094
    9. ' return' → logprob: -11.255271911621094
    10. ' 
' → logprob: -11.380271911621094

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03815222531557083
    2. 'return' → logprob: -3.2881522178649902
    3. '	return' → logprob: -9.788152694702148
    4. '
' → logprob: -10.663152694702148
    5. ' return' → logprob: -10.663152694702148
    6. '    
' → logprob: -12.163152694702148
    7. '```' → logprob: -13.538152694702148
    8. '       ' → logprob: -14.788152694702148
    9. '  ' → logprob: -15.413152694702148
    10. 'else' → logprob: -15.663152694702148

Token 365: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004167675971984863
    2. '   ' → logprob: -5.504167556762695
    3. ' return' → logprob: -9.379167556762695
    4. '
' → logprob: -13.879167556762695
    5. '```' → logprob: -14.004167556762695
    6. '	return' → logprob: -14.129167556762695
    7. 'else' → logprob: -14.129167556762695
    8. '#' (adapté à ' #') → logprob: -14.379167556762695
    9. '  ' → logprob: -14.754167556762695
    10. '    
' → logprob: -15.254167556762695

Token 366: ' Qu' (ID: 3106)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0002165299083571881
    2. '#' → logprob: -8.875216484069824
    3. '   ' → logprob: -9.875216484069824
    4. ' return' → logprob: -10.625216484069824
    5. '	return' → logprob: -15.500216484069824
    6. 'Return' → logprob: -15.500216484069824
    7. '    
' → logprob: -15.750216484069824
    8. '  ' → logprob: -16.12521743774414
    9. '
' → logprob: -16.25021743774414
    10. '```' → logprob: -17.00021743774414

Token 367: 'atrième' (ID: 144279)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.9565261006355286
    2. 'el' → logprob: -1.2065260410308838
    3. 'e' → logprob: -1.4565260410308838
    4. 'atrième' → logprob: -3.706526041030884
    5. 'atri' → logprob: -4.331526279449463
    6. 'return' → logprob: -4.706526279449463
    7. 'elif' → logprob: -4.831526279449463
    8. ''' → logprob: -5.206526279449463
    9. 'estion' → logprob: -5.206526279449463
    10. 'atre' → logprob: -5.706526279449463

Token 368: ' vér' (ID: 42524)
  Prédit: ' vér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.056604139506816864
    2. '   ' → logprob: -4.056603908538818
    3. '#' → logprob: -4.556603908538818
    4. 'verification' → logprob: -4.931603908538818
    5. ' verification' → logprob: -5.431603908538818
    6. ' #' → logprob: -6.056603908538818
    7. ':' → logprob: -6.181603908538818
    8. ' check' → logprob: -6.181603908538818
    9. '_ver' → logprob: -6.431603908538818
    10. 'if' → logprob: -6.431603908538818

Token 369: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.00013274075172375888
    2. 'ération' → logprob: -10.12513256072998
    3. 'if' → logprob: -10.25013256072998
    4. '#' → logprob: -10.50013256072998
    5. 'ication' → logprob: -11.25013256072998
    6. 'ér' → logprob: -12.00013256072998
    7. 'er' → logprob: -13.25013256072998
    8. '```' → logprob: -13.37513256072998
    9. '"' → logprob: -14.25013256072998
    10. 'ifikation' → logprob: -14.37513256072998

Token 370: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4475458264350891
    2. ':' → logprob: -1.0725457668304443
    3. ' :' → logprob: -4.197546005249023
    4. 'if' → logprob: -6.822546005249023
    5. ' if' → logprob: -7.447546005249023
    6. ':
' → logprob: -8.072546005249023
    7. '#' → logprob: -8.197546005249023
    8. '    
' → logprob: -8.322546005249023
    9. ':return' → logprob: -8.572546005249023
    10. '
' → logprob: -8.697546005249023

Token 371: ' si' (ID: 1784)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10221049189567566
    2. '   ' → logprob: -3.477210521697998
    3. '#' → logprob: -3.602210521697998
    4. 'for' → logprob: -3.977210521697998
    5. ' return' → logprob: -5.352210521697998
    6. 'counter' → logprob: -5.352210521697998
    7. 'if' → logprob: -5.477210521697998
    8. 'count' → logprob: -6.352210521697998
    9. 'cnt' → logprob: -6.852210521697998
    10. 'c' → logprob: -7.227210521697998

Token 372: ' doubl' (ID: 127992)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.42152664065361023
    2. 'not' → logprob: -2.2965266704559326
    3. ' all' → logprob: -2.5465266704559326
    4. 'any' → logprob: -3.4215266704559326
    5. 'True' → logprob: -3.5465266704559326
    6. ' not' → logprob: -3.5465266704559326
    7. ' toutes' → logprob: -4.6715264320373535
    8. ' any' → logprob: -4.7965264320373535
    9. 'none' → logprob: -4.9215264320373535
    10. ' aucune' → logprob: -4.9215264320373535

Token 373: 'ons' (ID: 1808)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3258609473705292
    2. 'e' → logprob: -1.9508609771728516
    3. 'ons' → logprob: -2.5758609771728516
    4. 'on' → logprob: -3.3258609771728516
    5. 'és' → logprob: -4.325860977172852
    6. 'é' → logprob: -4.825860977172852
    7. 'ée' → logprob: -7.950860977172852
    8. 'ique' → logprob: -8.763360977172852
    9. 'ure' → logprob: -8.888360977172852
    10. 'ées' → logprob: -9.013360977172852

Token 374: ' dans' (ID: 2671)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.4067436456680298
    2. ' dans' → logprob: -1.5317436456680298
    3. 'dans' → logprob: -1.6567436456680298
    4. 's' → logprob: -1.7817436456680298
    5. 'in' → logprob: -3.0317435264587402
    6. ' in' → logprob: -3.2817435264587402
    7. '(A' → logprob: -3.4067435264587402
    8. 'A' → logprob: -3.9067435264587402
    9. '(s' → logprob: -4.78174352645874
    10. 'import' → logprob: -5.28174352645874

Token 375: ' A' (ID: 355)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6949215531349182
    2. 'SB' → logprob: -0.8199215531349182
    3. 'SA' → logprob: -3.1949214935302734
    4. 'A' → logprob: -4.069921493530273
    5. 'Counter' → logprob: -6.569921493530273
    6. ' SB' → logprob: -7.694921493530273
    7. 'set' → logprob: -8.694921493530273
    8. ' B' → logprob: -8.944921493530273
    9. 'BA' → logprob: -10.194921493530273
    10. 'S' → logprob: -10.319921493530273

Token 376: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.23198501765727997
    2. ' and' → logprob: -2.106985092163086
    3. '   ' → logprob: -3.356985092163086
    4. 'or' → logprob: -3.481985092163086
    5. 'and' → logprob: -4.606985092163086
    6. ':' → logprob: -4.981985092163086
    7. ',' → logprob: -6.731985092163086
    8. ' ' → logprob: -8.106985092163086
    9. ':
' → logprob: -8.106985092163086
    10. ' ==' → logprob: -8.106985092163086

Token 377: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04301128908991814
    2. ' B' → logprob: -3.16801118850708
    3. ' ' → logprob: -12.293011665344238
    4. '   ' → logprob: -12.793011665344238
    5. 'len' → logprob: -14.293011665344238
    6. ' in' → logprob: -14.543011665344238
    7. '  ' → logprob: -14.543011665344238
    8. '#' → logprob: -14.543011665344238
    9. '
' → logprob: -14.793011665344238
    10. '```' → logprob: -14.793011665344238

Token 378: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5591438412666321
    2. ' and' → logprob: -1.1841437816619873
    3. ' or' → logprob: -3.1841437816619873
    4. ' if' → logprob: -3.4341437816619873
    5. 'and' → logprob: -4.059144020080566
    6. ':' → logprob: -4.309144020080566
    7. ',' → logprob: -4.559144020080566
    8. 'if' → logprob: -5.309144020080566
    9. 'or' → logprob: -7.184144020080566
    10. ':
' → logprob: -7.934144020080566

Token 379: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3045116066932678
    2. ' return' → logprob: -2.054511547088623
    3. 'return' → logprob: -2.304511547088623
    4. ' if' → logprob: -3.929511547088623
    5. 'if' → logprob: -4.304511547088623
    6. '#' → logprob: -7.804511547088623
    7. '    ' → logprob: -8.304512023925781
    8. '       ' → logprob: -8.929512023925781
    9. '
' → logprob: -9.054512023925781
    10. '  ' → logprob: -9.429512023925781

Token 380: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.12736323475837708
    2. 'return' → logprob: -2.8773632049560547
    3. ''est' → logprob: -3.1273632049560547
    4. ' return' → logprob: -5.627363204956055
    5. 'continue' → logprob: -5.752363204956055
    6. '```' → logprob: -6.002363204956055
    7. 'est' → logprob: -6.377363204956055
    8. '   ' → logprob: -6.502363204956055
    9. ''ont' → logprob: -6.627363204956055
    10. 'eturn' → logprob: -6.627363204956055

Token 381: ' possible' (ID: 4149)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17837749421596527
    2. 'Yes' → logprob: -1.9283775091171265
    3. ' '' → logprob: -4.803377628326416
    4. 'Oui' → logprob: -5.553377628326416
    5. 'No' → logprob: -6.303377628326416
    6. ' Yes' → logprob: -6.678377628326416
    7. ' possible' → logprob: -7.178377628326416
    8. 'possible' → logprob: -7.178377628326416
    9. '   ' → logprob: -8.053377151489258
    10. ''un' → logprob: -8.678377151489258

Token 382: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000683126098010689
    2. 'if' → logprob: -8.000682830810547
    3. '    
' → logprob: -8.750682830810547
    4. ' if' → logprob: -9.000682830810547
    5. '
' → logprob: -9.875682830810547
    6. 'for' → logprob: -12.250682830810547
    7. 'import' → logprob: -13.500682830810547
    8. '   
' → logprob: -13.500682830810547
    9. '```' → logprob: -13.750682830810547
    10. ',' → logprob: -13.750682830810547

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005762664368376136
    2. '    
' → logprob: -8.12557601928711
    3. 'if' → logprob: -8.62557601928711
    4. ' if' → logprob: -9.87557601928711
    5. '
' → logprob: -10.12557601928711
    6. 'for' → logprob: -13.12557601928711
    7. '   
' → logprob: -13.12557601928711
    8. '  
' → logprob: -13.87557601928711
    9. '    ' → logprob: -14.12557601928711
    10. 'import' → logprob: -14.25057601928711

Token 384: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3714800775051117
    2. '   ' → logprob: -1.746480107307434
    3. ' if' → logprob: -1.996480107307434
    4. '
' → logprob: -10.371479988098145
    5. '    
' → logprob: -11.121479988098145
    6. 'counter' → logprob: -11.371479988098145
    7. 'A' → logprob: -12.246479988098145
    8. ' ' → logprob: -12.746479988098145
    9. '```' → logprob: -12.746479988098145
    10. 'counts' → logprob: -12.746479988098145

Token 385: ' len' (ID: 4631)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.0506706237792969
    2. 'any' → logprob: -1.1756706237792969
    3. 'Counter' → logprob: -1.4256706237792969
    4. 'len' → logprob: -3.050670623779297
    5. ' len' → logprob: -4.050670623779297
    6. 'max' → logprob: -4.175670623779297
    7. ' Counter' → logprob: -4.175670623779297
    8. ' max' → logprob: -5.300670623779297
    9. '(C' → logprob: -8.300670623779297
    10. 'Any' → logprob: -8.550670623779297

Token 386: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.05727529898285866
    2. '(C' → logprob: -2.9322752952575684
    3. '(A' → logprob: -6.057275295257568
    4. 'A' → logprob: -11.432275772094727
    5. '(counter' → logprob: -11.557275772094727
    6. '(' → logprob: -11.557275772094727
    7. 'set' → logprob: -11.682275772094727
    8. '((' → logprob: -12.807275772094727
    9. 'Counter' → logprob: -12.932275772094727
    10. '(S' → logprob: -13.682275772094727

Token 387: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0006404805462807417
    2. 'A' → logprob: -7.375640392303467
    3. '(' → logprob: -12.500640869140625
    4. '(B' → logprob: -12.625640869140625
    5. '(S' → logprob: -12.875640869140625
    6. '(
' → logprob: -13.000640869140625
    7. ')' → logprob: -13.875640869140625
    8. ' A' → logprob: -14.875640869140625
    9. ' (' → logprob: -15.625640869140625
    10. '[A' → logprob: -16.750640869140625

Token 388: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003274087095633149
    2. '))' → logprob: -5.878273963928223
    3. ' )' → logprob: -7.753273963928223
    4. ')!=' → logprob: -10.503273963928223
    5. ')<' → logprob: -11.753273963928223
    6. '())' → logprob: -13.628273963928223
    7. ' ))' → logprob: -13.878273963928223
    8. '   ' → logprob: -14.128273963928223
    9. '])' → logprob: -14.128273963928223
    10. ')>' → logprob: -15.878273963928223

Token 389: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.008277319371700287
    2. ' <' → logprob: -5.133277416229248
    3. '!=' → logprob: -6.258277416229248
    4. ' !=' → logprob: -7.883277416229248
    5. ' ' → logprob: -10.63327693939209
    6. '   ' → logprob: -11.38327693939209
    7. '<len' → logprob: -12.38327693939209
    8. ')' → logprob: -12.63327693939209
    9. '<>' → logprob: -13.25827693939209
    10. '<int' → logprob: -14.00827693939209

Token 390: ' N' (ID: 478)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0003202114312443882
    2. 'N' → logprob: -8.500320434570312
    3. ' len' → logprob: -9.125320434570312
    4. '   ' → logprob: -13.125320434570312
    5. '	len' → logprob: -13.125320434570312
    6. '
' → logprob: -14.250320434570312
    7. 'n' → logprob: -14.375320434570312
    8. '=len' → logprob: -14.750320434570312
    9. '(len' → logprob: -15.000320434570312
    10. ' N' → logprob: -15.000320434570312

Token 391: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7008777856826782
    2. ' or' → logprob: -0.7008777856826782
    3. 'and' → logprob: -4.950877666473389
    4. '   ' → logprob: -8.325878143310547
    5. ')' → logprob: -8.700878143310547
    6. 'or' → logprob: -8.700878143310547
    7. ' ' → logprob: -10.700878143310547
    8. '	or' → logprob: -12.075878143310547
    9. ':
' → logprob: -12.200878143310547
    10. '  ' → logprob: -12.700878143310547

Token 392: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10023600608110428
    2. ' len' → logprob: -2.350235939025879
    3. '   ' → logprob: -10.725235939025879
    4. '	len' → logprob: -12.475235939025879
    5. '  ' → logprob: -13.350235939025879
    6. ' ' → logprob: -13.975235939025879
    7. '(len' → logprob: -14.350235939025879
    8. '    ' → logprob: -15.975235939025879
    9. ' ' → logprob: -16.475236892700195
    10. '[len' → logprob: -16.975236892700195

Token 393: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -8.73314929776825e-05
    2. 'set' → logprob: -9.50008773803711
    3. '(' → logprob: -11.37508773803711
    4. ' set' → logprob: -15.50008773803711
    5. '(B' → logprob: -15.50008773803711
    6. ' (' → logprob: -15.75008773803711
    7. '(
' → logprob: -15.87508773803711
    8. '=set' → logprob: -16.12508773803711
    9. '	set' → logprob: -16.37508773803711
    10. '   ' → logprob: -16.50008773803711

Token 394: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -1.4140441635390744e-05
    2. 'B' → logprob: -11.625014305114746
    3. '(' → logprob: -13.125014305114746
    4. '(
' → logprob: -13.500014305114746
    5. ' (' → logprob: -14.000014305114746
    6. '(set' → logprob: -15.000014305114746
    7. '(A' → logprob: -15.125014305114746
    8. 'set' → logprob: -16.25001335144043
    9. '   ' → logprob: -17.50001335144043
    10. ' B' → logprob: -17.62501335144043

Token 395: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016480287013109773
    2. ')!=' → logprob: -8.750164985656738
    3. ' )' → logprob: -12.375164985656738
    4. '())' → logprob: -14.625164985656738
    5. '   ' → logprob: -14.875164985656738
    6. '))' → logprob: -15.125164985656738
    7. '!=' → logprob: -15.250164985656738
    8. '）' → logprob: -15.625164985656738
    9. ' !=' → logprob: -16.000164031982422
    10. '`)' → logprob: -16.625164031982422

Token 396: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5238248109817505
    2. ' !=' → logprob: -0.8988248109817505
    3. ')!=' → logprob: -7.523824691772461
    4. '<|end|>' → logprob: -9.773824691772461
    5. '()!=' → logprob: -10.398824691772461
    6. ')' → logprob: -10.898824691772461
    7. '!' → logprob: -11.148824691772461
    8. ']!=' → logprob: -11.523824691772461
    9. ' ' → logprob: -11.773824691772461
    10. ' ' → logprob: -12.023824691772461

Token 397: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002613358374219388
    2. ' N' → logprob: -8.250261306762695
    3. '	N' → logprob: -17.000261306762695
    4. '<|end|>' → logprob: -17.625261306762695
    5. ' ' → logprob: -17.750261306762695
    6. '   ' → logprob: -18.500261306762695
    7. 'n' → logprob: -18.500261306762695
    8. '>N' → logprob: -19.000261306762695
    9. '<|end|>' → logprob: -19.500261306762695
    10. '<N' → logprob: -20.000261306762695

Token 398: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4775468111038208
    2. ':' → logprob: -0.9775468111038208
    3. '   ' → logprob: -6.102546691894531
    4. '):
' → logprob: -7.227546691894531
    5. '       ' → logprob: -8.477546691894531
    6. ':return' → logprob: -9.102546691894531
    7. '):' → logprob: -9.352546691894531
    8. ' or' → logprob: -9.852546691894531
    9. ')' → logprob: -10.977546691894531
    10. ' :
' → logprob: -11.977546691894531

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016833937261253595
    2. '
' → logprob: -7.001683235168457
    3. '   ' → logprob: -7.376683235168457
    4. '	' → logprob: -10.251683235168457
    5. 'return' → logprob: -10.501683235168457
    6. ':
' → logprob: -10.626683235168457
    7. ' return' → logprob: -11.626683235168457
    8. ':' → logprob: -11.751683235168457
    9. ')' → logprob: -12.251683235168457
    10. '        
' → logprob: -12.376683235168457

Token 400: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03957133740186691
    2. '       ' → logprob: -3.5395712852478027
    3. '   ' → logprob: -4.789571285247803
    4. ' return' → logprob: -6.539571285247803
    5. '	return' → logprob: -11.539571762084961
    6. '
' → logprob: -13.539571762084961
    7. ' ' → logprob: -15.789571762084961
    8. '  ' → logprob: -16.16457176208496
    9. '           ' → logprob: -16.16457176208496
    10. ':return' → logprob: -16.41457176208496

Token 401: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007278018747456372
    2. ' '' → logprob: -7.250727653503418
    3. 'Yes' → logprob: -11.500727653503418
    4. '"' → logprob: -12.750727653503418
    5. '   ' → logprob: -12.875727653503418
    6. ' ' → logprob: -13.750727653503418
    7. ' Yes' → logprob: -15.000727653503418
    8. '  ' → logprob: -15.375727653503418
    9. '	' → logprob: -15.875727653503418
    10. '`' → logprob: -16.000728607177734

Token 402: 'Yes' (ID: 13022)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07899168133735657
    2. 'Yes' → logprob: -2.578991651535034
    3. '"' → logprob: -10.078991889953613
    4. '   ' → logprob: -10.828991889953613
    5. ' '' → logprob: -10.828991889953613
    6. ' Yes' → logprob: -11.703991889953613
    7. 'YES' → logprob: -12.953991889953613
    8. '       ' → logprob: -13.328991889953613
    9. ' ' → logprob: -13.578991889953613
    10. '`' → logprob: -13.953991889953613

Token 403: ''

' (ID: 7497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2667434513568878
    2. '    
' → logprob: -1.7667434215545654
    3. '
' → logprob: -2.7667434215545654
    4. '
    
' → logprob: -9.016743659973145
    5. '<|end|>' → logprob: -9.391743659973145
    6. 'return' → logprob: -10.266743659973145
    7. '    
    
' → logprob: -10.266743659973145
    8. '  
' → logprob: -10.641743659973145
    9. '        
' → logprob: -10.766743659973145
    10. ')' → logprob: -10.766743659973145

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008846430107951164
    2. 'return' → logprob: -4.758846282958984
    3. '    
' → logprob: -8.883846282958984
    4. '
' → logprob: -9.508846282958984
    5. ' return' → logprob: -11.758846282958984
    6. '	return' → logprob: -11.758846282958984
    7. '```' → logprob: -12.758846282958984
    8. '       ' → logprob: -16.383846282958984
    9. '{return' → logprob: -16.633846282958984
    10. '        
' → logprob: -16.633846282958984

Token 405: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001946725882589817
    2. '   ' → logprob: -6.251946926116943
    3. '
' → logprob: -11.626946449279785
    4. ' return' → logprob: -11.876946449279785
    5. '    
' → logprob: -14.126946449279785
    6. '	return' → logprob: -14.626946449279785
    7. '#' (adapté à ' #') → logprob: -14.626946449279785
    8. '```' → logprob: -14.751946449279785
    9. 'if' → logprob: -16.6269474029541
    10. 'eturn' → logprob: -17.1269474029541

Token 406: ' Cin' (ID: 39047)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006587040261365473
    2. '#' → logprob: -7.5006585121154785
    3. '   ' → logprob: -9.375658988952637
    4. ' return' → logprob: -11.000658988952637
    5. '
' → logprob: -13.000658988952637
    6. 'if' → logprob: -14.000658988952637
    7. '    
' → logprob: -14.750658988952637
    8. '	return' → logprob: -15.625658988952637
    9. 'for' → logprob: -15.750658988952637
    10. '```' → logprob: -15.875658988952637

Token 407: 'qui' (ID: 22771)
  Prédit: 'qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qui' → logprob: -0.004532777238637209
    2. 'q' → logprob: -5.629532814025879
    3. 'qi' → logprob: -7.629532814025879
    4. 'qu' → logprob: -7.754532814025879
    5. 'què' → logprob: -12.004532814025879
    6. 'que' → logprob: -12.254532814025879
    7. '#' → logprob: -13.129532814025879
    8. '
' → logprob: -13.629532814025879
    9. 'qn' → logprob: -14.504532814025879
    10. '

' → logprob: -15.004532814025879

Token 408: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.018823660910129547
    2. 'me' → logprob: -4.143823623657227
    3. 'eme' → logprob: -7.393823623657227
    4. 'èm' → logprob: -7.393823623657227
    5. 'ième' → logprob: -7.518823623657227
    6. 'qui' → logprob: -8.393823623657227
    7. '#' → logprob: -8.643823623657227
    8. 'em' → logprob: -9.393823623657227
    9. 'ère' → logprob: -9.518823623657227
    10. 'n' → logprob: -10.018823623657227

Token 409: ' vér' (ID: 42524)
  Prédit: ' vér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.1625233292579651
    2. '#' → logprob: -3.0375232696533203
    3. ' #' → logprob: -3.0375232696533203
    4. ' verification' → logprob: -4.53752326965332
    5. '   ' → logprob: -4.78752326965332
    6. ' return' → logprob: -4.91252326965332
    7. ' check' → logprob: -5.03752326965332
    8. ' if' → logprob: -5.16252326965332
    9. 'verification' → logprob: -5.41252326965332
    10. 'v' → logprob: -6.41252326965332

Token 410: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.35362905263900757
    2. 'ération' → logprob: -1.7286291122436523
    3. 'ér' → logprob: -3.1036291122436523
    4. 'if' → logprob: -3.3536291122436523
    5. 'éf' → logprob: -4.478629112243652
    6. 'é' → logprob: -4.603629112243652
    7. 'fic' → logprob: -5.228629112243652
    8. 'f' → logprob: -5.228629112243652
    9. 'éré' → logprob: -6.728629112243652
    10. 'er' → logprob: -6.728629112243652

Token 411: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49648308753967285
    2. ' :' → logprob: -1.4964830875396729
    3. '   ' → logprob: -1.9964830875396729
    4. ' if' → logprob: -4.496482849121094
    5. 'if' → logprob: -4.871482849121094
    6. ':
' → logprob: -5.121482849121094
    7. ' =' → logprob: -5.746482849121094
    8. ' :
' → logprob: -6.871482849121094
    9. '#' → logprob: -7.121482849121094
    10. '=' → logprob: -7.996482849121094

Token 412: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01808883249759674
    2. '   ' → logprob: -4.7680888175964355
    3. ' return' → logprob: -4.8930888175964355
    4. '#' → logprob: -6.8930888175964355
    5. 'for' → logprob: -7.7680888175964355
    6. ''' → logprob: -8.518089294433594
    7. 'if' → logprob: -9.018089294433594
    8. '"' → logprob: -9.768089294433594
    9. '  ' → logprob: -11.518089294433594
    10. ' for' → logprob: -11.580589294433594

Token 413: ' construit' (ID: 119882)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14194682240486145
    2. ' return' → logprob: -2.141946792602539
    3. ' retourne' → logprob: -4.891946792602539
    4. '   ' → logprob: -5.141946792602539
    5. '#' → logprob: -7.391946792602539
    6. 'continue' → logprob: -8.016946792602539
    7. 'ret' → logprob: -8.391946792602539
    8. ' continue' → logprob: -10.141946792602539
    9. ' #' → logprob: -10.391946792602539
    10. '  ' → logprob: -10.641946792602539

Token 414: ' la' (ID: 557)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.1716300249099731
    2. 'freq' → logprob: -2.0466299057006836
    3. 'counter' → logprob: -2.2966299057006836
    4. 'c' → logprob: -2.4216299057006836
    5. ' un' → logprob: -2.7966299057006836
    6. 'count' → logprob: -2.9216299057006836
    7. 'comp' → logprob: -3.4216299057006836
    8. 'diff' → logprob: -3.5466299057006836
    9. 'cnt' → logprob: -3.7966299057006836
    10. 'a' → logprob: -3.9216299057006836

Token 415: ' permutation' (ID: 135200)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.4014785289764404
    2. 'Counter' → logprob: -1.5264785289764404
    3. 'freq' → logprob: -1.9014785289764404
    4. 'd' → logprob: -2.5264785289764404
    5. 'comp' → logprob: -2.7764785289764404
    6. 'pos' → logprob: -2.9014785289764404
    7. 'counter' → logprob: -3.0264785289764404
    8. 'c' → logprob: -4.0264787673950195
    9. 'graph' → logprob: -4.0264787673950195
    10. 'C' → logprob: -4.2764787673950195

Token 416: ' des' (ID: 731)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.6425923109054565
    2. ' P' → logprob: -1.3925923109054565
    3. 'p' → logprob: -2.392592430114746
    4. ' p' → logprob: -2.517592430114746
    5. 'perm' → logprob: -4.017592430114746
    6. ' perm' → logprob: -4.142592430114746
    7. 'import' → logprob: -5.767592430114746
    8. 'pi' → logprob: -6.017592430114746
    9. 'pos' → logprob: -6.517592430114746
    10. ' pos' → logprob: -6.642592430114746

Token 417: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.1380300372838974
    2. ' indices' → logprob: -3.2630300521850586
    3. 'indexes' → logprob: -3.6380300521850586
    4. 'range' → logprob: -4.013030052185059
    5. '[i' → logprob: -4.388030052185059
    6. 'positions' → logprob: -4.888030052185059
    7. 'index' → logprob: -5.388030052185059
    8. 'i' → logprob: -5.513030052185059
    9. 'indice' → logprob: -5.763030052185059
    10. 'A' → logprob: -6.138030052185059

Token 418: ' reliant' (ID: 156556)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3945009112358093
    2. ' P' → logprob: -2.519500970840454
    3. 'p' → logprob: -2.644500970840454
    4. 'P' → logprob: -2.894500970840454
    5. ' perm' → logprob: -3.144500970840454
    6. ' =' → logprob: -3.644500970840454
    7. ',' → logprob: -3.894500970840454
    8. '   ' → logprob: -4.894500732421875
    9. 'perm' → logprob: -5.394500732421875
    10. '
' → logprob: -5.894500732421875

Token 419: ' SA' (ID: 19609)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5744510889053345
    2. 'SA' → logprob: -1.6994510889053345
    3. ' A' → logprob: -2.074450969696045
    4. ' SA' → logprob: -2.449450969696045
    5. ' les' → logprob: -4.574450969696045
    6. 'B' → logprob: -5.074450969696045
    7. 'SB' → logprob: -5.074450969696045
    8. ' SB' → logprob: -5.449450969696045
    9. ' B' → logprob: -6.074450969696045
    10. 'S' → logprob: -6.074450969696045

Token 420: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1703047752380371
    2. ' et' → logprob: -3.045304775238037
    3. 'à' → logprob: -3.170304775238037
    4. 'et' → logprob: -3.920304775238037
    5. ' aux' → logprob: -4.545304775238037
    6. ',' → logprob: -4.920304775238037
    7. ' to' → logprob: -5.045304775238037
    8. ' and' → logprob: -5.045304775238037
    9. ' ' → logprob: -5.295304775238037
    10. '<|end|>' → logprob: -5.795304775238037

Token 421: ' SB' (ID: 41915)
  Prédit: 'SB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SB' → logprob: -0.01831112802028656
    2. ' SB' → logprob: -4.018311023712158
    3. 'B' → logprob: -10.143311500549316
    4. 'sb' → logprob: -10.268311500549316
    5. 'A' → logprob: -10.393311500549316
    6. 'S' → logprob: -11.018311500549316
    7. ' ' → logprob: -11.143311500549316
    8. '_SB' → logprob: -12.143311500549316
    9. ' B' → logprob: -12.643311500549316
    10. ' A' → logprob: -12.768311500549316

Token 422: ' via' (ID: 4493)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.460711807012558
    2. '   ' → logprob: -1.4607118368148804
    3. 'indices' → logprob: -2.710711717605591
    4. '    
' → logprob: -4.46071195602417
    5. 'pos' → logprob: -5.21071195602417
    6. ' indices' → logprob: -5.33571195602417
    7. 'mapping' → logprob: -5.46071195602417
    8. 'idx' → logprob: -5.58571195602417
    9. 'inverse' → logprob: -5.83571195602417
    10. 'perm' → logprob: -5.96071195602417

Token 423: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5841410160064697
    2. ' A' → logprob: -1.3341410160064697
    3. 'B' → logprob: -3.5841410160064697
    4. ' B' → logprob: -3.8341410160064697
    5. '[A' → logprob: -3.8341410160064697
    6. '[' → logprob: -4.084140777587891
    7. ' [' → logprob: -4.209140777587891
    8. 'br' → logprob: -4.584140777587891
    9. 'range' → logprob: -4.584140777587891
    10. 'SA' → logprob: -4.834140777587891

Token 424: '/B' (ID: 25217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3362487256526947
    2. 'indices' → logprob: -2.0862486362457275
    3. '
' → logprob: -2.2112486362457275
    4. ' indices' → logprob: -3.7112486362457275
    5. ',' → logprob: -4.961248874664307
    6. '    
' → logprob: -5.211248874664307
    7. 'idx' → logprob: -6.586248874664307
    8. 'index' → logprob: -6.711248874664307
    9. 'def' → logprob: -6.961248874664307
    10. '_indices' → logprob: -6.961248874664307

Token 425: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.642896831035614
    2. '   ' → logprob: -1.3928968906402588
    3. 'indices' → logprob: -3.142896890640259
    4. 'perm' → logprob: -3.142896890640259
    5. ' perm' → logprob: -3.142896890640259
    6. 'mapping' → logprob: -3.892896890640259
    7. ' permutation' → logprob: -4.26789665222168
    8. ' mapping' → logprob: -4.64289665222168
    9. ' indices' → logprob: -4.89289665222168
    10. 'idx' → logprob: -4.89289665222168

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07736028730869293
    2. '
' → logprob: -3.2023603916168213
    3. 'indices' → logprob: -3.9523603916168213
    4. ' indices' → logprob: -5.077360153198242
    5. '    
' → logprob: -5.577360153198242
    6. '```' → logprob: -6.452360153198242
    7. '  
' → logprob: -7.702360153198242
    8. 'idx' → logprob: -8.202360153198242
    9. ' ind' → logprob: -8.327360153198242
    10. 'def' → logprob: -8.327360153198242

Token 427: ' #' (ID: 1069)
  Prédit: ' perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' perm' → logprob: -1.287903904914856
    2. ' pos' → logprob: -1.662903904914856
    3. '   ' → logprob: -2.1629037857055664
    4. ' idx' → logprob: -2.6629037857055664
    5. ' A' → logprob: -3.1629037857055664
    6. ' index' → logprob: -3.1629037857055664
    7. 'A' → logprob: -3.1629037857055664
    8. ' indices' → logprob: -3.2879037857055664
    9. 'perm' → logprob: -3.6629037857055664
    10. ' permutation' → logprob: -3.9129037857055664

Token 428: ' P' (ID: 398)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6778098940849304
    2. ' pos' → logprob: -1.0528099536895752
    3. 'idx' → logprob: -3.802809953689575
    4. ' idx' → logprob: -3.927809953689575
    5. '   ' → logprob: -4.052809715270996
    6. 'index' → logprob: -4.302809715270996
    7. ' index' → logprob: -4.677809715270996
    8. 'from' → logprob: -4.802809715270996
    9. '#' → logprob: -5.052809715270996
    10. 'inv' → logprob: -5.177809715270996

Token 429: '[i' (ID: 1768)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3444209098815918
    2. '#' → logprob: -2.469420909881592
    3. 'erm' → logprob: -2.469420909881592
    4. 'ermut' → logprob: -3.094420909881592
    5. 'os' → logprob: -3.719420909881592
    6. 'osition' → logprob: -4.469420909881592
    7. ' A' → logprob: -4.844420909881592
    8. 'indices' → logprob: -5.469420909881592
    9. 'SA' → logprob: -5.719420909881592
    10. 'S' → logprob: -5.719420909881592

Token 430: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013488543219864368
    2. ' =' → logprob: -5.63848876953125
    3. ' ]' → logprob: -5.88848876953125
    4. '=' → logprob: -6.13848876953125
    5. ']=' → logprob: -6.38848876953125
    6. 's' → logprob: -6.88848876953125
    7. 'A' → logprob: -7.38848876953125
    8. ')' → logprob: -7.88848876953125
    9. ':]' → logprob: -8.88848876953125
    10. '_]' → logprob: -8.88848876953125

Token 431: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38716328144073486
    2. ' =' → logprob: -1.1371632814407349
    3. ']' → logprob: -8.762163162231445
    4. ',' → logprob: -9.512163162231445
    5. ')' → logprob: -11.137163162231445
    6. '[' → logprob: -11.512163162231445
    7. '=[' → logprob: -11.887163162231445
    8. '=[]' → logprob: -11.887163162231445
    9. 's' → logprob: -12.887163162231445
    10. ' =
' → logprob: -13.137163162231445

Token 432: ' l' (ID: 305)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06906147301197052
    2. '[]' → logprob: -3.444061517715454
    3. ' [' → logprob: -3.944061517715454
    4. '[i' → logprob: -5.569061279296875
    5. '[A' → logprob: -5.819061279296875
    6. '[-' → logprob: -5.944061279296875
    7. 'A' → logprob: -6.319061279296875
    8. '[S' → logprob: -6.444061279296875
    9. '[s' → logprob: -7.319061279296875
    10. '[len' → logprob: -7.694061279296875

Token 433: ''ind' (ID: 82245)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48025983572006226
    2. 'A' → logprob: -2.355259895324707
    3. '[' → logprob: -2.355259895324707
    4. 'erm' → logprob: -3.105259895324707
    5. ''' → logprob: -3.730259895324707
    6. '[]' → logprob: -3.730259895324707
    7. '[
' → logprob: -3.855259895324707
    8. 'ermut' → logprob: -4.105259895324707
    9. '[]
' → logprob: -4.230259895324707
    10. 'i' → logprob: -4.855259895324707

Token 434: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.13153380155563354
    2. 'ex' → logprob: -2.1315338611602783
    3. 'ices' → logprob: -6.006533622741699
    4. 'i' → logprob: -7.006533622741699
    5. 'ic' → logprob: -7.381533622741699
    6. '```' → logprob: -9.1315336227417
    7. 'ique' → logprob: -9.2565336227417
    8. '   ' → logprob: -10.5065336227417
    9. 'ixe' → logprob: -10.5065336227417
    10. '`' → logprob: -10.8815336227417

Token 435: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.7058671712875366
    2. ' dans' → logprob: -1.9558671712875366
    3. ' de' → logprob: -2.205867290496826
    4. 'i' → logprob: -2.955867290496826
    5. ' i' → logprob: -3.455867290496826
    6. 'de' → logprob: -3.455867290496826
    7. ' du' → logprob: -3.580867290496826
    8. ' of' → logprob: -3.955867290496826
    9. 'du' → logprob: -4.080867290496826
    10. 'd' → logprob: -4.080867290496826

Token 436: ' B' (ID: 418)
  Prédit: 'SB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SB' → logprob: -0.6416088938713074
    2. 'SA' → logprob: -0.8916088938713074
    3. 'B' → logprob: -3.141608953475952
    4. 'A' → logprob: -4.141608715057373
    5. ' SB' → logprob: -5.891608715057373
    6. ' SA' → logprob: -6.891608715057373
    7. ' B' → logprob: -8.391609191894531
    8. 'S' → logprob: -8.641609191894531
    9. 'range' → logprob: -9.141609191894531
    10. ' A' → logprob: -9.891609191894531

Token 437: ' qui' (ID: 2780)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7492337226867676
    2. 'où' → logprob: -1.9992337226867676
    3. 'de' → logprob: -2.1242337226867676
    4. 's' → logprob: -2.7492337226867676
    5. ' où' → logprob: -2.9992337226867676
    6. ' des' → logprob: -3.2492337226867676
    7. 'A' → logprob: -4.499233722686768
    8. 'of' → logprob: -4.499233722686768
    9. '```' → logprob: -4.874233722686768
    10. '[' → logprob: -4.874233722686768

Token 438: ' correspond' (ID: 11095)
  Prédit: 'cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.33224761486053467
    2. ' correspond' → logprob: -1.5822476148605347
    3. 'map' → logprob: -3.957247734069824
    4. '```' → logprob: -4.707247734069824
    5. 'assoc' → logprob: -5.082247734069824
    6. 's' → logprob: -5.082247734069824
    7. 'perm' → logprob: -5.832247734069824
    8. 'per' → logprob: -5.832247734069824
    9. 'a' → logprob: -6.082247734069824
    10. ' map' → logprob: -6.082247734069824

Token 439: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.01749393343925476
    2. '[i' → logprob: -4.642493724822998
    3. 'à' → logprob: -6.392493724822998
    4. ' au' → logprob: -6.517493724822998
    5. ' aux' → logprob: -6.642493724822998
    6. ' a' → logprob: -7.392493724822998
    7. '[' → logprob: -7.517493724822998
    8. ']' → logprob: -7.767493724822998
    9. ''à' → logprob: -7.767493724822998
    10. '   ' → logprob: -8.142494201660156

Token 440: ' l' (ID: 305)
  Prédit: 'SA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SA' → logprob: -0.843981146812439
    2. 'i' → logprob: -1.218981146812439
    3. 'SB' → logprob: -2.2189812660217285
    4. 'A' → logprob: -2.9689812660217285
    5. ' i' → logprob: -3.0939812660217285
    6. ' SA' → logprob: -3.3439812660217285
    7. ' SB' → logprob: -4.4689812660217285
    8. 'l' → logprob: -4.7189812660217285
    9. ' la' → logprob: -5.5939812660217285
    10. ' A' → logprob: -5.8439812660217285

Token 441: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2110859900712967
    2. ''i' → logprob: -2.8360860347747803
    3. 'A' → logprob: -2.9610860347747803
    4. 'a' → logprob: -3.8360860347747803
    5. ''' → logprob: -4.086085796356201
    6. 'e' → logprob: -4.336085796356201
    7. ' i' → logprob: -5.586085796356201
    8. '[i' → logprob: -5.711085796356201
    9. 'indice' → logprob: -5.711085796356201
    10. ''import' → logprob: -6.086085796356201

Token 442: 'élé' (ID: 15228)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0516817532479763
    2. 'SA' → logprob: -3.9266817569732666
    3. 'A' → logprob: -4.3016815185546875
    4. ' i' → logprob: -4.4266815185546875
    5. 'indice' → logprob: -6.8016815185546875
    6. 'élé' → logprob: -7.0516815185546875
    7. ''i' → logprob: -7.3016815185546875
    8. ' SA' → logprob: -7.5516815185546875
    9. 'S' → logprob: -7.5516815185546875
    10. 'index' → logprob: -8.426681518554688

Token 443: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0013621398247778416
    2. 'ément' → logprob: -7.501362323760986
    3. 'mé' → logprob: -8.501361846923828
    4. '```' → logprob: -8.626361846923828
    5. 'ement' → logprob: -9.251361846923828
    6. '`' → logprob: -10.001361846923828
    7. 'é' → logprob: -10.376361846923828
    8. ''' → logprob: -10.501361846923828
    9. 'i' → logprob: -10.501361846923828
    10. 'mentation' → logprob: -10.751361846923828

Token 444: ' tri' (ID: 12665)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5215609073638916
    2. 'i' → logprob: -1.1465609073638916
    3. ' de' → logprob: -3.2715609073638916
    4. '[i' → logprob: -4.2715606689453125
    5. ' dans' → logprob: -4.5215606689453125
    6. 'A' → logprob: -4.7715606689453125
    7. 'dans' → logprob: -4.8965606689453125
    8. 'de' → logprob: -5.3965606689453125
    9. ' A' → logprob: -6.7715606689453125
    10. '```' → logprob: -6.8965606689453125

Token 445: 'é' (ID: 377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42153024673461914
    2. 'é' → logprob: -2.546530246734619
    3. 's' → logprob: -3.296530246734619
    4. ' ' → logprob: -3.296530246734619
    5. ']' → logprob: -3.546530246734619
    6. 'A' → logprob: -3.921530246734619
    7. 'sorted' → logprob: -3.921530246734619
    8. '  ' → logprob: -4.171530246734619
    9. '       ' → logprob: -4.421530246734619
    10. 'SA' → logprob: -4.671530246734619

Token 446: ' position' (ID: 4010)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.48368415236473083
    2. 'SA' → logprob: -2.7336840629577637
    3. '_' → logprob: -3.1086840629577637
    4. '_A' → logprob: -3.2336840629577637
    5. 's' → logprob: -3.4836840629577637
    6. ' de' → logprob: -3.4836840629577637
    7. 'S' → logprob: -3.7336840629577637
    8. '(A' → logprob: -3.8586840629577637
    9. ' A' → logprob: -4.108684062957764
    10. 'de' → logprob: -4.233684062957764

Token 447: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.555697500705719
    2. 'i' → logprob: -1.0556974411010742
    3. '[i' → logprob: -2.930697441101074
    4. '   ' → logprob: -3.930697441101074
    5. ' ' → logprob: -6.680697441101074
    6. '=i' → logprob: -6.930697441101074
    7. '[' → logprob: -7.680697441101074
    8. '_i' → logprob: -7.930697441101074
    9. '  ' → logprob: -8.180697441101074
    10. ' de' → logprob: -8.430697441101074

Token 448: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11479736119508743
    2. '=' → logprob: -2.364797353744507
    3. '   ' → logprob: -5.614797592163086
    4. ' P' → logprob: -6.114797592163086
    5. 's' → logprob: -6.364797592163086
    6. 'P' → logprob: -6.364797592163086
    7. ' =
' → logprob: -6.739797592163086
    8. '[' → logprob: -6.864797592163086
    9. ',' → logprob: -7.114797592163086
    10. '=
' → logprob: -7.739797592163086

Token 449: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07483544945716858
    2. 'B' → logprob: -3.5748355388641357
    3. ' A' → logprob: -3.5748355388641357
    4. 'SA' → logprob: -4.574835300445557
    5. 'SB' → logprob: -5.824835300445557
    6. ' B' → logprob: -6.449835300445557
    7. ' SA' → logprob: -7.824835300445557
    8. ' SB' → logprob: -7.824835300445557
    9. 'S' → logprob: -8.949835777282715
    10. 'l' → logprob: -9.574835777282715

Token 450: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16290496289730072
    2. '   ' → logprob: -2.537904977798462
    3. ' P' → logprob: -3.412904977798462
    4. '=' → logprob: -4.287904739379883
    5. 'P' → logprob: -4.537904739379883
    6. ' =
' → logprob: -5.537904739379883
    7. '
' → logprob: -5.662904739379883
    8. '[' → logprob: -6.037904739379883
    9. ',' → logprob: -7.037904739379883
    10. '=
' → logprob: -7.787904739379883

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19590577483177185
    2. ' =' → logprob: -1.8209058046340942
    3. ' P' → logprob: -5.195905685424805
    4. '[' → logprob: -6.570905685424805
    5. 'def' → logprob: -6.570905685424805
    6. '    
' → logprob: -6.695905685424805
    7. '=' → logprob: -6.820905685424805
    8. '
' → logprob: -6.945905685424805
    9. 'P' → logprob: -7.070905685424805
    10. '```' → logprob: -7.320905685424805

Token 452: ' #' (ID: 1069)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.20515243709087372
    2. ' P' → logprob: -1.7051523923873901
    3. 'p' → logprob: -7.33015251159668
    4. 'A' → logprob: -7.33015251159668
    5. '   ' → logprob: -7.58015251159668
    6. ' =' → logprob: -8.20515251159668
    7. 'indices' → logprob: -8.83015251159668
    8. ' A' → logprob: -9.08015251159668
    9. 'pos' → logprob: -9.08015251159668
    10. 'mapping' → logprob: -9.33015251159668

Token 453: ' On' (ID: 2160)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.16357780992984772
    2. ' P' → logprob: -2.0385777950286865
    3. 'A' → logprob: -5.538578033447266
    4. 'pos' → logprob: -5.538578033447266
    5. 'p' → logprob: -6.413578033447266
    6. 'indices' → logprob: -6.413578033447266
    7. ' pos' → logprob: -6.663578033447266
    8. 'index' → logprob: -6.788578033447266
    9. 'from' → logprob: -7.288578033447266
    10. ' A' → logprob: -7.288578033447266

Token 454: ' map' (ID: 4014)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2891446352005005
    2. 'continue' → logprob: -1.9141446352005005
    3. 'P' → logprob: -3.039144515991211
    4. ' P' → logprob: -3.914144515991211
    5. ' try' → logprob: -4.789144515991211
    6. 'A' → logprob: -5.164144515991211
    7. ' A' → logprob: -6.164144515991211
    8. 'try' → logprob: -6.289144515991211
    9. '#' → logprob: -6.414144515991211
    10. 'p' → logprob: -6.414144515991211

Token 455: 'pe' (ID: 424)
  Prédit: 'ping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ping' → logprob: -0.33000683784484863
    2. 'p' → logprob: -1.7050068378448486
    3. 'pe' → logprob: -2.9550068378448486
    4. '   ' → logprob: -3.9550068378448486
    5. 'ped' → logprob: -4.8300065994262695
    6. 'ing' → logprob: -5.2050065994262695
    7. '       ' → logprob: -5.3300065994262695
    8. '=' → logprob: -6.3300065994262695
    9. 'per' → logprob: -6.8300065994262695
    10. ' =' → logprob: -7.3300065994262695

Token 456: ' d' (ID: 272)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7625994682312012
    2. ' =' → logprob: -1.6375994682312012
    3. 'SA' → logprob: -2.012599468231201
    4. '{' → logprob: -3.512599468231201
    5. 'indices' → logprob: -3.512599468231201
    6. ' indices' → logprob: -3.887599468231201
    7. ' A' → logprob: -4.387599468231201
    8. ' SA' → logprob: -4.512599468231201
    9. 'a' → logprob: -4.512599468231201
    10. ' {' → logprob: -4.762599468231201

Token 457: ''abord' (ID: 89989)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.43615588545799255
    2. 'A' → logprob: -2.0611557960510254
    3. 'ict' → logprob: -2.9361557960510254
    4. 'es' → logprob: -3.3111557960510254
    5. 'i' → logprob: -3.9361557960510254
    6. '{' → logprob: -4.311155796051025
    7. '{}' → logprob: -4.436155796051025
    8. ''abord' → logprob: -4.436155796051025
    9. ''A' → logprob: -4.561155796051025
    10. 'ef' → logprob: -4.561155796051025

Token 458: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6590790152549744
    2. 'indices' → logprob: -2.034079074859619
    3. ' indices' → logprob: -2.409079074859619
    4. '{' → logprob: -2.784079074859619
    5. ' A' → logprob: -3.159079074859619
    6. 'B' → logprob: -3.159079074859619
    7. ' {' → logprob: -3.909079074859619
    8. 'val' → logprob: -4.284079074859619
    9. 'a' → logprob: -4.409079074859619
    10. ' =' → logprob: -4.784079074859619

Token 459: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.330575555562973
    2. 'indices' → logprob: -2.080575466156006
    3. 'élé' → logprob: -3.330575466156006
    4. 'values' → logprob: -3.705575466156006
    5. 'positions' → logprob: -3.955575466156006
    6. ' val' → logprob: -4.330575466156006
    7. 'elements' → logprob: -4.455575466156006
    8. 'value' → logprob: -4.455575466156006
    9. ' valeurs' → logprob: -4.580575466156006
    10. 'A' → logprob: -4.955575466156006

Token 460: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2644044756889343
    2. 'from' → logprob: -2.639404535293579
    3. ' =' → logprob: -3.389404535293579
    4. 'de' → logprob: -3.514404535293579
    5. ' de' → logprob: -3.889404535293579
    6. 'B' → logprob: -4.014404296875
    7. '=' → logprob: -4.139404296875
    8. '_A' → logprob: -4.639404296875
    9. ',' → logprob: -4.889404296875
    10. '_a' → logprob: -5.514404296875

Token 461: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.31865930557250977
    2. 'SA' → logprob: -1.4436593055725098
    3. 'B' → logprob: -3.5686593055725098
    4. ' A' → logprob: -5.56865930557251
    5. 'SB' → logprob: -5.81865930557251
    6. ' SA' → logprob: -6.69365930557251
    7. ' B' → logprob: -8.193658828735352
    8. 'S' → logprob: -9.193658828735352
    9. ' SB' → logprob: -10.068658828735352
    10. 'sorted' → logprob: -11.256158828735352

Token 462: ' et' (ID: 859)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.7660483121871948
    2. '_indices' → logprob: -2.2660484313964844
    3. ',' → logprob: -2.3910484313964844
    4. ' =' → logprob: -2.3910484313964844
    5. 'to' → logprob: -3.1410484313964844
    6. '_positions' → logprob: -3.3910484313964844
    7. '_values' → logprob: -3.5160484313964844
    8. '_val' → logprob: -3.6410484313964844
    9. ')' → logprob: -3.8910484313964844
    10. ' to' → logprob: -4.016048431396484

Token 463: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07009860128164291
    2. ' B' → logprob: -2.695098638534546
    3. ' de' → logprob: -9.320098876953125
    4. 'de' → logprob: -10.695098876953125
    5. 'A' → logprob: -10.945098876953125
    6. ' leurs' → logprob: -11.945098876953125
    7. ' ' → logprob: -12.195098876953125
    8. '#' → logprob: -12.945098876953125
    9. ' leur' → logprob: -13.257598876953125
    10. 'leur' → logprob: -13.570098876953125

Token 464: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4429495334625244
    2. 'values' → logprob: -1.9429495334625244
    3. '_values' → logprob: -2.3179495334625244
    4. 'A' → logprob: -2.8179495334625244
    5. '_val' → logprob: -2.9429495334625244
    6. '_value' → logprob: -3.0679495334625244
    7. ',' → logprob: -3.1929495334625244
    8. ' to' → logprob: -3.1929495334625244
    9. 'indices' → logprob: -3.1929495334625244
    10. 'value' → logprob: -3.3179495334625244

Token 465: ' leurs' (ID: 16348)
  Prédit: 'leurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leurs' → logprob: -0.5571852326393127
    2. 'indices' → logprob: -1.682185173034668
    3. ' leurs' → logprob: -2.057185173034668
    4. 'des' → logprob: -3.182185173034668
    5. 'leur' → logprob: -3.932185173034668
    6. '{}' → logprob: -4.682185173034668
    7. '{' → logprob: -4.932185173034668
    8. 'list' → logprob: -5.307185173034668
    9. '[' → logprob: -5.557185173034668
    10. 'indexes' → logprob: -5.557185173034668

Token 466: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.2071022242307663
    2. 'positions' → logprob: -1.7071021795272827
    3. 'index' → logprob: -6.207102298736572
    4. 'val' → logprob: -6.582102298736572
    5. ' indices' → logprob: -7.082102298736572
    6. 'list' → logprob: -7.582102298736572
    7. 'indexes' → logprob: -7.832102298736572
    8. ' positions' → logprob: -8.582101821899414
    9. 'pos' → logprob: -8.707101821899414
    10. 'indice' → logprob: -10.707101821899414

Token 467: ' fin' (ID: 2131)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10452564060688019
    2. ' =' → logprob: -3.104525566101074
    3. ' A' → logprob: -3.604525566101074
    4. '=' → logprob: -5.229525566101074
    5. ',' → logprob: -5.354525566101074
    6. 'from' → logprob: -6.229525566101074
    7. ' in' → logprob: -6.229525566101074
    8. 's' → logprob: -6.354525566101074
    9. '_A' → logprob: -6.354525566101074
    10. 'indices' → logprob: -6.729525566101074

Token 468: 'aux' (ID: 5454)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.35337990522384644
    2. 'dex' → logprob: -1.9783799648284912
    3. 'des' → logprob: -3.478379964828491
    4. 'aux' → logprob: -3.603379964828491
    5. 'al' → logprob: -4.228379726409912
    6. '   ' → logprob: -4.478379726409912
    7. 'x' → logprob: -4.853379726409912
    8. 'ex' → logprob: -4.853379726409912
    9. '```' → logprob: -4.853379726409912
    10. 'dx' → logprob: -5.228379726409912

Token 469: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.152025818824768
    2. 'A' → logprob: -1.402025818824768
    3. ' from' → logprob: -1.652025818824768
    4. 'value' → logprob: -3.0270256996154785
    5. 'val' → logprob: -3.2770256996154785
    6. '   ' → logprob: -3.6520256996154785
    7. ' val' → logprob: -3.9020256996154785
    8. ' A' → logprob: -3.9020256996154785
    9. 'indices' → logprob: -4.0270256996154785
    10. ' value' → logprob: -4.4020256996154785

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04653298854827881
    2. 'indices' → logprob: -4.671533107757568
    3. 'A' → logprob: -4.796533107757568
    4. '```' → logprob: -5.171533107757568
    5. ' A' → logprob: -5.671533107757568
    6. ' indices' → logprob: -6.046533107757568
    7. 'val' → logprob: -6.046533107757568
    8. 'mapping' → logprob: -6.171533107757568
    9. ' val' → logprob: -6.296533107757568
    10. 'def' → logprob: -6.546533107757568

Token 471: ' P' (ID: 398)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9808825850486755
    2. 'index' → logprob: -2.2308826446533203
    3. 'val' → logprob: -2.3558826446533203
    4. ' pos' → logprob: -2.6058826446533203
    5. '   ' → logprob: -2.8558826446533203
    6. 'A' → logprob: -2.9808826446533203
    7. ' index' → logprob: -3.2308826446533203
    8. 'idx' → logprob: -3.3558826446533203
    9. 'value' → logprob: -3.4808826446533203
    10. ' idx' → logprob: -3.4808826446533203

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22549329698085785
    2. '=' → logprob: -1.600493311882019
    3. 'A' → logprob: -10.850493431091309
    4. '[' → logprob: -11.100493431091309
    5. '_' → logprob: -11.475493431091309
    6. 's' → logprob: -11.600493431091309
    7. '   ' → logprob: -11.725493431091309
    8. ',' → logprob: -12.350493431091309
    9. ' ' → logprob: -12.475493431091309
    10. ' =
' → logprob: -12.975493431091309

Token 473: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030116192996501923
    2. ' [' → logprob: -4.030116081237793
    3. '[]' → logprob: -4.655116081237793
    4. '[-' → logprob: -6.905116081237793
    5. '{}' → logprob: -7.280116081237793
    6. '[len' → logprob: -8.655116081237793
    7. '[list' → logprob: -9.030116081237793
    8. ' []' → logprob: -9.530116081237793
    9. '{' → logprob: -9.655116081237793
    10. '[A' → logprob: -9.780116081237793

Token 474: 'None' (ID: 8505)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04279899597167969
    2. '0' → logprob: -3.5427989959716797
    3. ' B' → logprob: -5.04279899597168
    4. 'A' → logprob: -6.29279899597168
    5. '-' → logprob: -6.54279899597168
    6. 'b' → logprob: -7.16779899597168
    7. 'None' → logprob: -7.29279899597168
    8. 'br' → logprob: -7.66779899597168
    9. 'SB' → logprob: -7.91779899597168
    10. 'BR' → logprob: -8.16779899597168

Token 475: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7972596883773804
    2. ']' → logprob: -0.9222596883773804
    3. 'for' → logprob: -1.9222596883773804
    4. ']*' → logprob: -5.42225980758667
    5. '   ' → logprob: -7.79725980758667
    6. '[' → logprob: -8.047259330749512
    7. ' ]' → logprob: -9.297259330749512
    8. ')' → logprob: -9.922259330749512
    9. ']*(' → logprob: -9.922259330749512
    10. '0' → logprob: -10.172259330749512

Token 476: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14797623455524445
    2. 'for' → logprob: -2.0229761600494385
    3. ']' → logprob: -5.522976398468018
    4. '<|end|>' → logprob: -7.772976398468018
    5. '
' → logprob: -8.77297592163086
    6. ']*' → logprob: -8.77297592163086
    7. '[' → logprob: -8.77297592163086
    8. '   ' → logprob: -9.27297592163086
    9. ')' → logprob: -9.64797592163086
    10. '0' → logprob: -10.27297592163086

Token 477: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5775095224380493
    2. 'len' → logprob: -0.8275095224380493
    3. '(len' → logprob: -7.82750940322876
    4. ' N' → logprob: -7.82750940322876
    5. ' len' → logprob: -8.202509880065918
    6. 'n' → logprob: -8.327509880065918
    7. '(N' → logprob: -9.577509880065918
    8. '   ' → logprob: -10.140009880065918
    9. '[len' → logprob: -10.827509880065918
    10. 'le' → logprob: -11.702509880065918

Token 478: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0033982445020228624
    2. '  
' → logprob: -6.753398418426514
    3. '<|end|>' → logprob: -6.753398418426514
    4. '[' → logprob: -7.753398418426514
    5. ' 
' → logprob: -9.128397941589355
    6. '[
' → logprob: -9.253397941589355
    7. '
' → logprob: -9.628397941589355
    8. '    
' → logprob: -9.753397941589355
    9. '```' → logprob: -9.753397941589355
    10. 'for' → logprob: -10.003397941589355

Token 479: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 480: ' A' (ID: 355)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03817667067050934
    2. 'idx' → logprob: -4.413176536560059
    3. 'index' → logprob: -4.413176536560059
    4. 'value' → logprob: -5.538176536560059
    5. 'val' → logprob: -5.913176536560059
    6. 'positions' → logprob: -6.413176536560059
    7. 'indices' → logprob: -6.413176536560059
    8. 'A' (adapté à ' A') → logprob: -7.038176536560059
    9. 'from' → logprob: -7.163176536560059
    10. ' pos' → logprob: -7.413176536560059

Token 481: 'idx' (ID: 13196)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.13144171237945557
    2. '_idx' → logprob: -3.381441593170166
    3. '_pos' → logprob: -3.631441593170166
    4. '_index' → logprob: -4.381441593170166
    5. '_val' → logprob: -4.381441593170166
    6. '_positions' → logprob: -4.881441593170166
    7. '_to' → logprob: -5.006441593170166
    8. '_map' → logprob: -5.256441593170166
    9. 'indices' → logprob: -5.506441593170166
    10. 'pos' → logprob: -5.881441593170166

Token 482: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4795384705066681
    2. ' =' → logprob: -0.9795384407043457
    3. 's' → logprob: -5.729538440704346
    4. '_map' → logprob: -6.604538440704346
    5. 'x' → logprob: -7.354538440704346
    6. '_indices' → logprob: -9.354538917541504
    7. ',' → logprob: -10.604538917541504
    8. 'indices' → logprob: -11.604538917541504
    9. 'ex' → logprob: -11.854538917541504
    10. '_to' → logprob: -11.854538917541504

Token 483: ' Counter' (ID: 32251)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.12266602367162704
    2. '{' → logprob: -2.372666120529175
    3. '{}
' → logprob: -3.872666120529175
    4. '[' → logprob: -7.497665882110596
    5. 'Counter' → logprob: -8.247666358947754
    6. 'default' → logprob: -8.247666358947754
    7. 'dict' → logprob: -8.497666358947754
    8. '{}

' → logprob: -9.747666358947754
    9. '{})' → logprob: -11.122666358947754
    10. 'sorted' → logprob: -11.122666358947754

Token 484: '()
' (ID: 1234)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.15723495185375214
    2. '()' → logprob: -2.2822349071502686
    3. '()
' → logprob: -3.5322349071502686
    4. '({' → logprob: -4.532235145568848
    5. 'A' → logprob: -6.032235145568848
    6. '([' → logprob: -8.282235145568848
    7. '((' → logprob: -8.282235145568848
    8. '{' → logprob: -8.657235145568848
    9. '(a' → logprob: -9.532235145568848
    10. '({
' → logprob: -9.532235145568848

Token 485: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: ' B' (ID: 418)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8760327100753784
    2. 'for' → logprob: -1.3760327100753784
    3. 'B' (adapté à ' B') → logprob: -1.5010327100753784
    4. '   ' → logprob: -2.501032829284668
    5. ' B' → logprob: -3.751032829284668
    6. 'A' → logprob: -7.251032829284668
    7. 'b' → logprob: -7.751032829284668
    8. ' ' → logprob: -8.751032829284668
    9. 'idx' → logprob: -9.126032829284668
    10. ' A' → logprob: -9.501032829284668

Token 487: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0019248253665864468
    2. ' =' → logprob: -6.376924991607666
    3. '=' → logprob: -8.501924514770508
    4. 'x' → logprob: -12.126924514770508
    5. 'index' → logprob: -12.626924514770508
    6. 'indices' → logprob: -13.001924514770508
    7. ' idx' → logprob: -13.251924514770508
    8. '_idx' → logprob: -13.251924514770508
    9. '   ' → logprob: -13.876924514770508
    10. 'Idx' → logprob: -14.126924514770508

Token 488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061987072229385376
    2. ' =' → logprob: -2.8119871616363525
    3. '()' → logprob: -11.311986923217773
    4. '(' → logprob: -12.936986923217773
    5. '={}' → logprob: -13.561986923217773
    6. ' ' → logprob: -14.061986923217773
    7. ')' → logprob: -14.686986923217773
    8. 'A' → logprob: -14.936986923217773
    9. '[' → logprob: -15.061986923217773
    10. '{' → logprob: -15.311986923217773

Token 489: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.1839238852262497
    2. ' Counter' → logprob: -1.9339238405227661
    3. '{}' → logprob: -4.058923721313477
    4. '{' → logprob: -5.433923721313477
    5. 'default' → logprob: -6.808923721313477
    6. '{}
' → logprob: -8.683923721313477
    7. ' defaultdict' → logprob: -8.683923721313477
    8. ' {}' → logprob: -8.933923721313477
    9. ' {' → logprob: -9.808923721313477
    10. 'dict' → logprob: -10.308923721313477

Token 490: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7955958247184753
    2. '<|end|>' → logprob: -0.7955958247184753
    3. '
' → logprob: -3.04559588432312
    4. '<|end|>' → logprob: -4.545595645904541
    5. '[' → logprob: -4.920595645904541
    6. '    
' → logprob: -5.295595645904541
    7. ' ' → logprob: -5.795595645904541
    8. '(' → logprob: -5.920595645904541
    9. '  
' → logprob: -5.920595645904541
    10. '(A' → logprob: -5.920595645904541

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32317686080932617
    2. ' for' → logprob: -2.573176860809326
    3. '<|end|>' → logprob: -2.948176860809326
    4. 'for' → logprob: -3.448176860809326
    5. '    
' → logprob: -3.573176860809326
    6. ' ' → logprob: -3.698176860809326
    7. ' 
' → logprob: -3.823176860809326
    8. '  
' → logprob: -4.948176860809326
    9. '[' → logprob: -5.073176860809326
    10. ')' → logprob: -5.073176860809326

Token 492: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8336762189865112
    2. ' for' → logprob: -0.9586762189865112
    3. '   ' → logprob: -1.7086762189865112
    4. ')' → logprob: -7.458676338195801
    5. '	for' → logprob: -8.9586763381958
    6. '```' → logprob: -9.2086763381958
    7. 'values' → logprob: -10.2086763381958
    8. 'i' → logprob: -10.5836763381958
    9. 'val' → logprob: -10.7086763381958
    10. 'A' → logprob: -10.7086763381958

Token 493: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24375982582569122
    2. ' for' → logprob: -1.8687598705291748
    3. 'pos' → logprob: -3.118759870529175
    4. ' pos' → logprob: -4.743759632110596
    5. '   ' → logprob: -5.993759632110596
    6. 'value' → logprob: -6.368759632110596
    7. 'positions' → logprob: -6.868759632110596
    8. ' positions' → logprob: -7.243759632110596
    9. ' value' → logprob: -7.743759632110596
    10. 'from' → logprob: -8.118760108947754

Token 494: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04345071315765381
    2. ' for' → logprob: -3.1684508323669434
    3. 'continue' → logprob: -8.043450355529785
    4. '   ' → logprob: -10.793450355529785
    5. '
' → logprob: -11.043450355529785
    6. '=' → logprob: -11.168450355529785
    7. ' continue' → logprob: -11.168450355529785
    8. 'def' → logprob: -11.668450355529785
    9. 'f' → logprob: -11.668450355529785
    10. ' =' → logprob: -12.543450355529785

Token 495: 'registre' (ID: 77466)
  Prédit: 'umer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umer' → logprob: -0.088330939412117
    2. 'for' → logprob: -2.8383309841156006
    3. 'um' → logprob: -5.0883307456970215
    4. 'numer' → logprob: -5.2133307456970215
    5. 'range' → logprob: -5.8383307456970215
    6. 't' → logprob: -5.9633307456970215
    7. '```' → logprob: -6.7133307456970215
    8. 'u' → logprob: -6.9633307456970215
    9. 'c' → logprob: -7.3383307456970215
    10. 'tre' → logprob: -7.5883307456970215

Token 496: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.945553719997406
    2. 'for' → logprob: -1.1955537796020508
    3. ' les' → logprob: -1.6955537796020508
    4. 'indices' → logprob: -3.445553779602051
    5. 'positions' → logprob: -3.820553779602051
    6. ' the' → logprob: -4.445553779602051
    7. ' indices' → logprob: -4.570553779602051
    8. ' positions' → logprob: -4.695553779602051
    9. 'A' → logprob: -4.695553779602051
    10. 'les' → logprob: -5.070553779602051

Token 497: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.037276029586792
    2. 'a' → logprob: -1.662276029586792
    3. 'i' → logprob: -1.662276029586792
    4. ' a' → logprob: -2.412276029586792
    5. ' val' → logprob: -2.412276029586792
    6. 'val' → logprob: -2.537276029586792
    7. 'value' → logprob: -6.287276268005371
    8. ' value' → logprob: -6.412276268005371
    9. 'v' → logprob: -7.162276268005371
    10. ' v' → logprob: -7.287276268005371

Token 498: ' nombre' (ID: 9733)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22624826431274414
    2. 'val' → logprob: -1.9762482643127441
    3. 'v' → logprob: -3.601248264312744
    4. 'i' → logprob: -3.601248264312744
    5. ' a' → logprob: -5.851248264312744
    6. 'x' → logprob: -6.226248264312744
    7. 'value' → logprob: -6.226248264312744
    8. ' val' → logprob: -6.351248264312744
    9. ' i' → logprob: -8.101247787475586
    10. ' v' → logprob: -8.976247787475586

Token 499: ' de' (ID: 334)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.6278905272483826
    2. ' de' → logprob: -1.1278905868530273
    3. 'dans' → logprob: -3.0028905868530273
    4. 'a' → logprob: -3.7528905868530273
    5. 'de' → logprob: -4.252890586853027
    6. 'A' → logprob: -4.252890586853027
    7. ' a' → logprob: -4.752890586853027
    8. ' la' → logprob: -5.127890586853027
    9. ' sa' → logprob: -5.377890586853027
    10. 'val' → logprob: -5.502890586853027

Token 500: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11196616291999817
    2. 'SA' → logprob: -2.361966133117676
    3. 'val' → logprob: -5.986966133117676
    4. 'range' → logprob: -6.111966133117676
    5. ' A' → logprob: -6.236966133117676
    6. 'a' → logprob: -6.986966133117676
    7. 'i' → logprob: -7.111966133117676
    8. ' SA' → logprob: -7.736966133117676
    9. '0' → logprob: -8.236966133117676
    10. 'B' → logprob: -8.361966133117676

Token 501: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6404290795326233
    2. ' la' → logprob: -1.3904290199279785
    3. ' dans' → logprob: -2.6404290199279785
    4. 'value' → logprob: -3.8904290199279785
    5. ' les' → logprob: -4.0154290199279785
    6. ' in' → logprob: -4.0154290199279785
    7. ':' → logprob: -4.2654290199279785
    8. 'A' → logprob: -4.5154290199279785
    9. ' the' → logprob: -4.6404290199279785
    10. ' ,' → logprob: -5.0154290199279785

Token 502: 'ou' (ID: 283)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1267104148864746
    2. 'A' → logprob: -1.3767104148864746
    3. ')' → logprob: -1.6267104148864746
    4. ' a' → logprob: -2.5017104148864746
    5. 'val' → logprob: -3.8767104148864746
    6. ' val' → logprob: -4.251710414886475
    7. '   ' → logprob: -4.501710414886475
    8. ' for' → logprob: -4.501710414886475
    9. ' )' → logprob: -4.626710414886475
    10. ' A' → logprob: -4.626710414886475

Token 503: ' B' (ID: 418)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8789010643959045
    2. 'B' → logprob: -1.0039010047912598
    3. ')' → logprob: -2.3789010047912598
    4. ' B' → logprob: -3.3789010047912598
    5. ' A' → logprob: -3.3789010047912598
    6. 'SA' → logprob: -4.37890100479126
    7. '   ' → logprob: -4.75390100479126
    8. ' ' → logprob: -5.00390100479126
    9. 'range' → logprob: -5.37890100479126
    10. 'a' → logprob: -6.37890100479126

Token 504: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16183771193027496
    2. '),' → logprob: -2.0368378162384033
    3. 'A' → logprob: -4.911837577819824
    4. ' )' → logprob: -5.411837577819824
    5. ',' → logprob: -6.411837577819824
    6. '):' → logprob: -7.036837577819824
    7. '   ' → logprob: -7.161837577819824
    8. 'dans' → logprob: -7.286837577819824
    9. ' dans' → logprob: -7.661837577819824
    10. '):
' → logprob: -7.786837577819824

Token 505: ' son' (ID: 2391)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4896566569805145
    2. ' les' → logprob: -1.739656686782837
    3. ' la' → logprob: -2.864656686782837
    4. ' the' → logprob: -2.864656686782837
    5. ' its' → logprob: -3.989656686782837
    6. 'les' → logprob: -4.114656448364258
    7. 'the' → logprob: -4.489656448364258
    8. ' ,' → logprob: -4.864656448364258
    9. 'A' → logprob: -5.614656448364258
    10. ')' → logprob: -5.614656448364258

Token 506: ' dernier' (ID: 27982)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.1211624145507812
    2. 'comp' → logprob: -1.6211624145507812
    3. 'occ' → logprob: -1.8711624145507812
    4. 'count' → logprob: -1.9961624145507812
    5. 'indice' → logprob: -2.9961624145507812
    6. 'index' → logprob: -3.3711624145507812
    7. 'position' → logprob: -3.6211624145507812
    8. 'occur' → logprob: -3.7461624145507812
    9. 'indices' → logprob: -4.496162414550781
    10. ' nombre' → logprob: -4.996162414550781

Token 507: ' indice' (ID: 90848)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.22717326879501343
    2. 'index' → logprob: -1.7271733283996582
    3. ' index' → logprob: -4.727173328399658
    4. ' indice' → logprob: -5.102173328399658
    5. 'occ' → logprob: -5.477173328399658
    6. 'occur' → logprob: -5.727173328399658
    7. 'idx' → logprob: -6.727173328399658
    8. 'indices' → logprob: -7.977173328399658
    9. 'ind' → logprob: -8.3521728515625
    10. '_index' → logprob: -8.3521728515625

Token 508: ' d' (ID: 272)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.3402356207370758
    2. ' in' → logprob: -1.8402355909347534
    3. 'dans' → logprob: -2.840235710144043
    4. ' =' → logprob: -4.090235710144043
    5. ' de' → logprob: -4.590235710144043
    6. ',' → logprob: -4.840235710144043
    7. 'in' → logprob: -4.840235710144043
    8. ' en' → logprob: -5.090235710144043
    9. 's' → logprob: -5.340235710144043
    10. ')' → logprob: -6.215235710144043

Token 509: ''appar' (ID: 195019)
  Prédit: ''appar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''appar' → logprob: -0.005508957430720329
    2. 'e' → logprob: -7.005508899688721
    3. 'appar' → logprob: -7.005508899688721
    4. ''origine' → logprob: -7.505508899688721
    5. '’appar' → logprob: -7.755508899688721
    6. ''arrivée' → logprob: -7.880508899688721
    7. 'occur' → logprob: -7.880508899688721
    8. 'occ' → logprob: -7.880508899688721
    9. ''' → logprob: -8.005509376525879
    10. 'appearance' → logprob: -8.755509376525879

Token 510: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.026906123384833336
    2. 'ence' → logprob: -3.6519060134887695
    3. 'a' → logprob: -8.77690601348877
    4. 'i' → logprob: -8.90190601348877
    5. 'it' → logprob: -9.02690601348877
    6. '```' → logprob: -9.52690601348877
    7. 'ent' → logprob: -10.65190601348877
    8. 'tion' → logprob: -11.02690601348877
    9. 'u' → logprob: -11.27690601348877
    10. 'ation' → logprob: -11.77690601348877

Token 511: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2914502620697021
    2. ' =' → logprob: -1.7914502620697021
    3. ' in' → logprob: -1.9164502620697021
    4. ' dans' → logprob: -1.9164502620697021
    5. ',' → logprob: -2.791450262069702
    6. 'in' → logprob: -2.916450262069702
    7. 'dans' → logprob: -2.916450262069702
    8. '.' → logprob: -4.291450500488281
    9. '=' → logprob: -4.291450500488281
    10. ' en' → logprob: -4.291450500488281

Token 512: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041313111782073975
    2. '    
' → logprob: -4.916313171386719
    3. 'for' → logprob: -4.916313171386719
    4. ' for' → logprob: -5.041313171386719
    5. '<|end|>' → logprob: -5.041313171386719
    6. ',' → logprob: -6.291313171386719
    7. '.' → logprob: -6.291313171386719
    8. ' in' → logprob: -6.416313171386719
    9. '
' → logprob: -6.541313171386719
    10. ':' → logprob: -6.916313171386719

Token 513: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24145694077014923
    2. ' for' → logprob: -1.7414569854736328
    3. 'for' (adapté à ' for') → logprob: -3.241456985473633
    4. ')' → logprob: -9.366456985473633
    5. '    
' → logprob: -10.616456985473633
    6. '
' → logprob: -11.491456985473633
    7. '```' → logprob: -12.866456985473633
    8. ',' → logprob: -12.866456985473633
    9. '	for' → logprob: -12.991456985473633
    10. '    ' → logprob: -13.616456985473633

Token 514: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029852071776986122
    2. ' i' → logprob: -3.5298521518707275
    3. 'a' → logprob: -10.279851913452148
    4. 'x' → logprob: -10.529851913452148
    5. 'v' → logprob: -11.404851913452148
    6. 'idx' → logprob: -11.904851913452148
    7. ' ' → logprob: -12.029851913452148
    8. 'val' → logprob: -12.779851913452148
    9. 'num' → logprob: -13.279851913452148
    10. '   ' → logprob: -13.279851913452148

Token 515: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022409329190850258
    2. 'in' → logprob: -4.397409439086914
    3. ',' → logprob: -4.647409439086914
    4. ' ,' → logprob: -8.897409439086914
    5. ' ' → logprob: -10.272409439086914
    6. 'A' → logprob: -10.647409439086914
    7. 'range' → logprob: -11.522409439086914
    8. '   ' → logprob: -11.772409439086914
    9. ',n' → logprob: -12.022409439086914
    10. '	in' → logprob: -12.022409439086914

Token 516: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007624611258506775
    2. ' range' → logprob: -4.882624626159668
    3. 'A' → logprob: -11.632624626159668
    4. '   ' → logprob: -12.382624626159668
    5. ' ' → logprob: -13.132624626159668
    6. 're' → logprob: -14.507624626159668
    7. '  ' → logprob: -14.632624626159668
    8. 'N' → logprob: -14.632624626159668
    9. '
' → logprob: -14.882624626159668
    10. '(range' → logprob: -15.007624626159668

Token 517: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0012020161375403404
    2. ' N' → logprob: -6.87620210647583
    3. '   ' → logprob: -8.876201629638672
    4. '(N' → logprob: -11.251201629638672
    5. '	N' → logprob: -12.376201629638672
    6. 'n' → logprob: -12.376201629638672
    7. '1' → logprob: -12.876201629638672
    8. ' ' → logprob: -13.501201629638672
    9. '
' → logprob: -13.751201629638672
    10. '0' → logprob: -14.001201629638672

Token 518: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012439602054655552
    2. '):' → logprob: -4.512439727783203
    3. '   ' → logprob: -6.762439727783203
    4. ')' → logprob: -9.137439727783203
    5. '):
' → logprob: -9.387439727783203
    6. ' ):
' → logprob: -11.137439727783203
    7. ':' → logprob: -11.762439727783203
    8. ':
' → logprob: -12.012439727783203
    9. ',' → logprob: -12.137439727783203
    10. '+' → logprob: -12.887439727783203

Token 519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007166040013544261
    2. '   ' → logprob: -7.625716686248779
    3. ' P' → logprob: -9.500716209411621
    4. 'A' → logprob: -9.625716209411621
    5. ' A' → logprob: -10.125716209411621
    6. 'P' → logprob: -10.750716209411621
    7. '```' → logprob: -10.875716209411621
    8. ' if' → logprob: -13.375716209411621
    9. '           ' → logprob: -14.125716209411621
    10. ',' → logprob: -14.250716209411621

Token 520: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18022456765174866
    2. ' A' → logprob: -2.555224657058716
    3. '   ' → logprob: -3.055224657058716
    4. 'P' → logprob: -4.055224418640137
    5. '       ' → logprob: -4.180224418640137
    6. ' P' → logprob: -5.680224418640137
    7. 'a' (adapté à ' a') → logprob: -6.305224418640137
    8. 'if' → logprob: -7.430224418640137
    9. ' if' → logprob: -7.930224418640137
    10. 'v' → logprob: -8.430224418640137

Token 521: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6216402649879456
    2. '_val' → logprob: -0.9966402649879456
    3. '=' → logprob: -2.746640205383301
    4. 'val' → logprob: -4.246640205383301
    5. '_idx' → logprob: -5.246640205383301
    6. '_value' → logprob: -5.996640205383301
    7. 'idx' → logprob: -6.246640205383301
    8. 'v' → logprob: -6.621640205383301
    9. '=A' → logprob: -6.746640205383301
    10. '_' → logprob: -6.996640205383301

Token 522: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10582372546195984
    2. 'SA' → logprob: -2.3558237552642822
    3. ' A' → logprob: -5.355823516845703
    4. ' SA' → logprob: -7.105823516845703
    5. 'S' → logprob: -11.355823516845703
    6. ' ' → logprob: -11.605823516845703
    7. '   ' → logprob: -11.730823516845703
    8. 'SB' → logprob: -11.980823516845703
    9. 'B' → logprob: -12.293323516845703
    10. '	A' → logprob: -12.418323516845703

Token 523: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00033534664544276893
    2. '   ' → logprob: -9.000335693359375
    3. '       ' → logprob: -9.625335693359375
    4. '[A' → logprob: -9.875335693359375
    5. '[' → logprob: -10.500335693359375
    6. '[a' → logprob: -11.000335693359375
    7. '[idx' → logprob: -11.375335693359375
    8. '[P' → logprob: -11.625335693359375
    9. 'A' → logprob: -12.125335693359375
    10. '[I' → logprob: -12.625335693359375

Token 524: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.697635293006897
    2. ']
' → logprob: -0.697635293006897
    3. '       ' → logprob: -5.822635173797607
    4. '   ' → logprob: -8.072635650634766
    5. ')' → logprob: -8.322635650634766
    6. ')
' → logprob: -8.447635650634766
    7. '];' → logprob: -8.572635650634766
    8. ']
' → logprob: -8.822635650634766
    9. ' ]' → logprob: -9.072635650634766
    10. ' ]
' → logprob: -9.322635650634766

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022590341046452522
    2. '   ' → logprob: -3.897590398788452
    3. ' A' → logprob: -7.272590160369873
    4. 'A' → logprob: -7.272590160369873
    5. '        
' → logprob: -9.022590637207031
    6. '	A' → logprob: -9.647590637207031
    7. ' B' → logprob: -9.772590637207031
    8. 'a' → logprob: -9.897590637207031
    9. 'B' → logprob: -9.897590637207031
    10. '	   ' → logprob: -10.147590637207031

Token 526: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.3121538460254669
    2. 'A' → logprob: -1.9371538162231445
    3. 'B' → logprob: -2.9371538162231445
    4. '   ' → logprob: -3.4371538162231445
    5. '       ' → logprob: -3.5621538162231445
    6. 'P' → logprob: -5.1871538162231445
    7. 'a' → logprob: -5.8121538162231445
    8. ' b' → logprob: -6.8121538162231445
    9. ' A' → logprob: -7.8121538162231445
    10. ' B' → logprob: -8.562153816223145

Token 527: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144939422607422
    2. '=' → logprob: -1.7014493942260742
    3. '       ' → logprob: -11.201449394226074
    4. 'b' → logprob: -11.326449394226074
    5. '   ' → logprob: -12.701449394226074
    6. '=B' → logprob: -12.701449394226074
    7. 'B' → logprob: -13.701449394226074
    8. '        ' → logprob: -14.326449394226074
    9. ' ' → logprob: -14.326449394226074
    10. '    ' → logprob: -14.576449394226074

Token 528: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04300091043114662
    2. ' B' → logprob: -3.1680009365081787
    3. '   ' → logprob: -13.668001174926758
    4. '	B' → logprob: -15.918001174926758
    5. ' ' → logprob: -16.043001174926758
    6. '       ' → logprob: -16.168001174926758
    7. 'b' → logprob: -16.668001174926758
    8. '  ' → logprob: -17.293001174926758
    9. '>B' → logprob: -17.668001174926758
    10. '=B' → logprob: -17.668001174926758

Token 529: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.093505099765025e-05
    2. '       ' → logprob: -11.750020980834961
    3. '   ' → logprob: -12.000020980834961
    4. 'i' → logprob: -13.375020980834961
    5. ' =' → logprob: -13.375020980834961
    6. '[' → logprob: -13.500020980834961
    7. ' [' → logprob: -14.125020980834961
    8. 'b' → logprob: -14.500020980834961
    9. '[j' → logprob: -15.000020980834961
    10. ' i' → logprob: -15.125020980834961

Token 530: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2708043158054352
    2. ']
' → logprob: -1.5208042860031128
    3. '       ' → logprob: -4.270804405212402
    4. ')' → logprob: -5.895804405212402
    5. ')
' → logprob: -7.145804405212402
    6. '   ' → logprob: -8.270804405212402
    7. ']

' → logprob: -8.395804405212402
    8. ' ]' → logprob: -8.645804405212402
    9. '<|end|>' → logprob: -8.770804405212402
    10. ']
' → logprob: -9.145804405212402

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008051830343902111
    2. '
' → logprob: -5.008051872253418
    3. '   ' → logprob: -7.258051872253418
    4. '        
' → logprob: -7.883051872253418
    5. 'A' → logprob: -9.008051872253418
    6. '  
' → logprob: -10.383051872253418
    7. ' 
' → logprob: -10.758051872253418
    8. '    
' → logprob: -11.133051872253418
    9. ' A' → logprob: -11.383051872253418
    10. '<|end|>' → logprob: -11.508051872253418

Token 532: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.7165583968162537
    2. '       ' → logprob: -1.2165584564208984
    3. '   ' → logprob: -1.7165584564208984
    4. ' A' → logprob: -3.3415584564208984
    5. ' ' → logprob: -9.216558456420898
    6. 'a' → logprob: -10.216558456420898
    7. '  ' → logprob: -10.716558456420898
    8. '	A' → logprob: -10.966558456420898
    9. '    ' → logprob: -11.091558456420898
    10. ' a' → logprob: -11.341558456420898

Token 533: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -9.088346359931165e-07
    2. '[idx' → logprob: -15.375000953674316
    3. 'index' → logprob: -15.500000953674316
    4. '=' → logprob: -16.75
    5. '_idx' → logprob: -16.875
    6. 'id' → logprob: -16.875
    7. 'x' → logprob: -17.0
    8. 'a' → logprob: -17.25
    9. '[' → logprob: -17.25
    10. ' =' → logprob: -17.625

Token 534: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.200166469876422e-06
    2. 'a' → logprob: -12.375004768371582
    3. '[' → logprob: -14.125004768371582
    4. '[A' → logprob: -16.2500057220459
    5. '[b' → logprob: -17.1250057220459
    6. ' [' → logprob: -17.5000057220459
    7. '
' → logprob: -17.8750057220459
    8. '[
' → logprob: -18.6250057220459
    9. '.update' → logprob: -19.0000057220459
    10. '\[' → logprob: -19.5000057220459

Token 535: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7215577363967896
    2. '+=' → logprob: -1.7215577363967896
    3. ' +=' → logprob: -1.7215577363967896
    4. ']+=' → logprob: -2.4715576171875
    5. '=' → logprob: -3.0965576171875
    6. ' =' → logprob: -3.8465576171875
    7. ']=' → logprob: -5.4715576171875
    8. '[' → logprob: -7.7215576171875
    9. ' ]' → logprob: -8.0965576171875
    10. '+' → logprob: -9.0965576171875

Token 536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5696472525596619
    2. ' =' → logprob: -1.6946473121643066
    3. '+=' → logprob: -1.8196473121643066
    4. ' +=' → logprob: -2.4446473121643066
    5. '=a' → logprob: -6.569647312164307
    6. '[a' → logprob: -9.069646835327148
    7. '=i' → logprob: -9.069646835327148
    8. '[' → logprob: -9.944646835327148
    9. ']+=' → logprob: -10.694646835327148
    10. '[i' → logprob: -10.819646835327148

Token 537: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00011319868644932285
    2. 'A' → logprob: -9.750113487243652
    3. 'a' → logprob: -10.750113487243652
    4. 'max' → logprob: -11.000113487243652
    5. ' i' → logprob: -11.500113487243652
    6. '   ' → logprob: -13.375113487243652
    7. 'len' → logprob: -13.375113487243652
    8. 'b' → logprob: -14.500113487243652
    9. 'N' → logprob: -14.500113487243652
    10. 'B' → logprob: -14.500113487243652

Token 538: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024277472868561745
    2. '
' → logprob: -4.024277687072754
    3. 'b' → logprob: -5.899277687072754
    4. '   ' → logprob: -6.149277687072754
    5. '<|end|>' → logprob: -8.024277687072754
    6. ' b' → logprob: -8.399277687072754
    7. '  
' → logprob: -8.399277687072754
    8. ' ' → logprob: -8.774277687072754
    9. '        
' → logprob: -9.899277687072754
    10. ' 
' → logprob: -10.024277687072754

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006565583753399551
    2. 'b' → logprob: -7.875656604766846
    3. '   ' → logprob: -9.125656127929688
    4. 'B' → logprob: -9.625656127929688
    5. ' b' → logprob: -9.875656127929688
    6. ' ' → logprob: -11.000656127929688
    7. ' B' → logprob: -11.000656127929688
    8. '<|end|>' → logprob: -12.000656127929688
    9. ' ' → logprob: -13.125656127929688
    10. '           ' → logprob: -13.625656127929688

Token 540: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.019007660448551178
    2. '   ' → logprob: -4.269007682800293
    3. ' B' → logprob: -5.769007682800293
    4. 'b' → logprob: -6.769007682800293
    5. '       ' → logprob: -7.519007682800293
    6. ' ' → logprob: -11.269007682800293
    7. '  ' → logprob: -13.019007682800293
    8. '           ' → logprob: -13.769007682800293
    9. '	B' → logprob: -14.019007682800293
    10. ' b' → logprob: -14.394007682800293

Token 541: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1411541998386383
    2. 'b' → logprob: -2.1411542892456055
    3. '[b' → logprob: -4.2661542892456055
    4. '[idx' → logprob: -10.141154289245605
    5. '   ' → logprob: -10.766154289245605
    6. ' b' → logprob: -11.766154289245605
    7. ' idx' → logprob: -12.266154289245605
    8. '```' → logprob: -12.391154289245605
    9. 'a' → logprob: -13.641154289245605
    10. '       ' → logprob: -13.891154289245605

Token 542: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0007101670489646494
    2. 'b' → logprob: -7.2507100105285645
    3. '[' → logprob: -16.125709533691406
    4. ' b' → logprob: -17.375709533691406
    5. '	b' → logprob: -17.625709533691406
    6. '[a' → logprob: -18.125709533691406
    7. ' [' → logprob: -18.375709533691406
    8. '[B' → logprob: -18.500709533691406
    9. '(b' → logprob: -18.625709533691406
    10. '=b' → logprob: -19.000709533691406

Token 543: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6596789360046387
    2. '=' → logprob: -1.1596789360046387
    3. ' =' → logprob: -1.7846789360046387
    4. ']=' → logprob: -6.659678936004639
    5. ')' → logprob: -9.159679412841797
    6. ' ]' → logprob: -9.284679412841797
    7. '   ' → logprob: -10.534679412841797
    8. '=i' → logprob: -10.909679412841797
    9. '}' → logprob: -12.284679412841797
    10. '       ' → logprob: -12.784679412841797

Token 544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20154958963394165
    2. ' =' → logprob: -1.7015495300292969
    3. '=i' → logprob: -9.076549530029297
    4. '   ' → logprob: -11.451549530029297
    5. ')' → logprob: -11.951549530029297
    6. '=b' → logprob: -14.076549530029297
    7. '       ' → logprob: -14.076549530029297
    8. '=
' → logprob: -14.326549530029297
    9. ']' → logprob: -14.576549530029297
    10. '[i' → logprob: -14.826549530029297

Token 545: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010914575977949426
    2. ' i' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.25010871887207
    4. ' ' → logprob: -17.37510871887207
    5. '	i' → logprob: -18.25010871887207
    6. '  ' → logprob: -19.50010871887207
    7. '    ' → logprob: -21.37510871887207
    8. '_i' → logprob: -21.50010871887207
    9. '     ' → logprob: -21.87510871887207
    10. '```' → logprob: -22.12510871887207

Token 546: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4786815345287323
    2. '<|end|>' → logprob: -1.1036815643310547
    3. ' for' → logprob: -4.228681564331055
    4. '    
' → logprob: -4.728681564331055
    5. 'for' → logprob: -4.853681564331055
    6. '
' → logprob: -4.853681564331055
    7. '```' → logprob: -5.603681564331055
    8. '  
' → logprob: -6.228681564331055
    9. ')' → logprob: -6.478681564331055
    10. '<|end|>' → logprob: -6.978681564331055

Token 548: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.803229808807373
    2. 'for' → logprob: -0.803229808807373
    3. ' for' → logprob: -2.303229808807373
    4. ')' → logprob: -6.303229808807373
    5. '    
' → logprob: -7.178229808807373
    6. '```' → logprob: -7.178229808807373
    7. '
' → logprob: -8.053230285644531
    8. '#' (adapté à ' #') → logprob: -9.053230285644531
    9. '	for' → logprob: -9.053230285644531
    10. 'indices' → logprob: -9.678230285644531

Token 549: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01551220566034317
    2. ' for' → logprob: -4.890511989593506
    3. 'try' → logprob: -5.265511989593506
    4. '   ' → logprob: -7.390511989593506
    5. 'pos' → logprob: -7.640511989593506
    6. 'perm' → logprob: -7.765511989593506
    7. 'indices' → logprob: -7.890511989593506
    8. 'from' → logprob: -8.890512466430664
    9. 'positions' → logprob: -9.140512466430664
    10. 'mapping' → logprob: -9.390512466430664

Token 550: ' crée' (ID: 102256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005688680335879326
    2. ' for' → logprob: -5.380688667297363
    3. 'try' → logprob: -7.630688667297363
    4. 'continue' → logprob: -8.130688667297363
    5. '=' → logprob: -9.630688667297363
    6. '
' → logprob: -10.005688667297363
    7. '   ' → logprob: -10.380688667297363
    8. '#' → logprob: -10.505688667297363
    9. '```' → logprob: -11.130688667297363
    10. 'fill' → logprob: -11.255688667297363

Token 551: ' la' (ID: 557)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.0281903743743896
    2. 'val' → logprob: -1.1531903743743896
    3. 'for' → logprob: -2.5281903743743896
    4. 'pos' → logprob: -2.9031903743743896
    5. 'a' → logprob: -3.1531903743743896
    6. ' a' → logprob: -3.6531903743743896
    7. 'mapping' → logprob: -4.028190612792969
    8. 'une' → logprob: -4.278190612792969
    9. 'inv' → logprob: -4.403190612792969
    10. ' value' → logprob: -4.403190612792969

Token 552: ' permutation' (ID: 135200)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.18924668431282043
    2. 'for' → logprob: -2.689246654510498
    3. 'val' → logprob: -3.439246654510498
    4. 'mapping' → logprob: -3.814246654510498
    5. 'value' → logprob: -3.939246654510498
    6. 'position' → logprob: -4.189246654510498
    7. 'positions' → logprob: -5.064246654510498
    8. 'inv' → logprob: -5.814246654510498
    9. 'P' → logprob: -6.689246654510498
    10. 'index' → logprob: -7.314246654510498

Token 553: ' P' (ID: 398)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0529347658157349
    2. '   ' → logprob: -1.1779347658157349
    3. ' for' → logprob: -1.3029347658157349
    4. '
' → logprob: -3.5529346466064453
    5. ' =' → logprob: -3.8029346466064453
    6. '<|end|>' → logprob: -4.802934646606445
    7. '    
' → logprob: -6.302934646606445
    8. '[' → logprob: -6.427934646606445
    9. '  
' → logprob: -6.427934646606445
    10. '=' → logprob: -6.427934646606445

Token 555: ' associ' (ID: 5516)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04992189258337021
    2. '[i' → logprob: -4.049921989440918
    3. '[' → logprob: -4.299921989440918
    4. 'for' → logprob: -4.424921989440918
    5. ' range' → logprob: -5.799921989440918
    6. 'enumer' → logprob: -6.299921989440918
    7. '   ' → logprob: -8.799921989440918
    8. '[
' → logprob: -9.174921989440918
    9. '[P' → logprob: -9.299921989440918
    10. ' [' → logprob: -9.549921989440918

Token 556: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0019600363448262215
    2. 'nt' → logprob: -6.376959800720215
    3. 'ent' → logprob: -9.876959800720215
    4. 't' → logprob: -10.251959800720215
    5. 'ng' → logprob: -10.501959800720215
    6. 'a' → logprob: -10.751959800720215
    7. 'nant' → logprob: -11.001959800720215
    8. 'e' → logprob: -11.126959800720215
    9. 'ont' → logprob: -11.126959800720215
    10. '#' → logprob: -11.376959800720215

Token 557: ' la' (ID: 557)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.2440447807312012
    2. 'i' → logprob: -1.4940447807312012
    3. '[i' → logprob: -1.7440447807312012
    4. 'A' → logprob: -2.244044780731201
    5. '[' → logprob: -2.869044780731201
    6. 'for' → logprob: -3.369044780731201
    7. ' P' → logprob: -3.369044780731201
    8. 'B' → logprob: -3.869044780731201
    9. ' for' → logprob: -4.619044780731201
    10. ' i' → logprob: -4.744044780731201

Token 558: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.14576256275177
    2. 'SA' → logprob: -1.52076256275177
    3. 'for' → logprob: -2.7707624435424805
    4. 'A' → logprob: -2.8957624435424805
    5. 'SB' → logprob: -2.8957624435424805
    6. ' i' → logprob: -3.1457624435424805
    7. ' for' → logprob: -3.2707624435424805
    8. 'B' → logprob: -3.3957624435424805
    9. 'val' → logprob: -3.8957624435424805
    10. ' SA' → logprob: -4.0207624435424805

Token 559: ' du' (ID: 1462)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8192780017852783
    2. 'i' → logprob: -1.4442780017852783
    3. ' de' → logprob: -1.8192780017852783
    4. '[i' → logprob: -2.8192780017852783
    5. ' dans' → logprob: -3.0692780017852783
    6. ' in' → logprob: -4.194277763366699
    7. ' des' → logprob: -5.069277763366699
    8. '[' → logprob: -5.319277763366699
    9. 's' → logprob: -5.444277763366699
    10. 'dans' → logprob: -5.444277763366699

Token 560: ' i' (ID: 575)
  Prédit: 'SA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SA' → logprob: -0.20567519962787628
    2. 'A' → logprob: -2.9556751251220703
    3. 'SB' → logprob: -2.9556751251220703
    4. 'i' → logprob: -3.2056751251220703
    5. 'a' → logprob: -3.9556751251220703
    6. ' SA' → logprob: -4.95567512512207
    7. 'B' → logprob: -5.70567512512207
    8. ' A' → logprob: -6.20567512512207
    9. ' SB' → logprob: -6.70567512512207
    10. 'élé' → logprob: -6.70567512512207

Token 561: '-' (ID: 12)
  Prédit: 'ème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.8886399269104004
    2. 'ième' → logprob: -1.1386399269104004
    3. ']' → logprob: -2.3886399269104004
    4. 'i' → logprob: -3.1386399269104004
    5. '-th' → logprob: -3.6386399269104004
    6. 'th' → logprob: -4.1386399269104
    7. 'e' → logprob: -4.2636399269104
    8. '-' → logprob: -4.5136399269104
    9. ' i' → logprob: -4.8886399269104
    10. '_sorted' → logprob: -5.2636399269104

Token 562: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.7512526512145996
    2. 'ième' → logprob: -0.7512526512145996
    3. 'i' → logprob: -3.2512526512145996
    4. 'è' → logprob: -4.3762526512146
    5. 'e' → logprob: -6.6262526512146
    6. 'é' → logprob: -7.1262526512146
    7. 'ié' → logprob: -7.5012526512146
    8. 'ieme' → logprob: -7.8762526512146
    9. '```' → logprob: -8.126253128051758
    10. 'th' → logprob: -8.251253128051758

Token 563: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.02195308357477188
    2. ' élément' → logprob: -4.146953105926514
    3. 'element' → logprob: -5.646953105926514
    4. 'a' → logprob: -7.646953105926514
    5. 'SA' → logprob: -7.646953105926514
    6. ' SA' → logprob: -8.146952629089355
    7. 'val' → logprob: -8.146952629089355
    8. ' element' → logprob: -8.146952629089355
    9. 'é' → logprob: -9.146952629089355
    10. 'i' → logprob: -9.146952629089355

Token 564: ' tri' (ID: 12665)
  Prédit: ' tri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.16294962167739868
    2. ' dans' → logprob: -2.537949562072754
    3. 'tri' → logprob: -3.162949562072754
    4. ' de' → logprob: -4.287949562072754
    5. 'dans' → logprob: -4.787949562072754
    6. 'de' → logprob: -6.662949562072754
    7. ' sorted' → logprob: -6.787949562072754
    8. 'tr' → logprob: -7.037949562072754
    9. 'tris' → logprob: -7.037949562072754
    10. 'sorted' → logprob: -7.412949562072754

Token 565: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.26201480627059937
    2. 'ée' → logprob: -1.5120148658752441
    3. 'e' → logprob: -5.887014865875244
    4. 'ed' → logprob: -6.012014865875244
    5. '   ' → logprob: -6.762014865875244
    6. 'SA' → logprob: -7.012014865875244
    7. 'd' → logprob: -8.137014389038086
    8. 'éd' → logprob: -8.262014389038086
    9. 'née' → logprob: -8.387014389038086
    10. 'ang' → logprob: -8.512014389038086

Token 566: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.30485495924949646
    2. ' de' → logprob: -2.1798548698425293
    3. 'SA' → logprob: -2.5548548698425293
    4. '(S' → logprob: -4.054854869842529
    5. 'A' → logprob: -4.054854869842529
    6. 'd' → logprob: -4.554854869842529
    7. 'dans' → logprob: -4.804854869842529
    8. '(A' → logprob: -5.429854869842529
    9. 'in' → logprob: -5.679854869842529
    10. ' dans' → logprob: -5.929854869842529

Token 567: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6335033178329468
    2. 'SA' → logprob: -0.7585033178329468
    3. ' A' → logprob: -7.758503437042236
    4. ' SA' → logprob: -8.383502960205078
    5. 'S' → logprob: -10.258502960205078
    6. 'l' → logprob: -10.258502960205078
    7. '`' → logprob: -10.883502960205078
    8. 'a' → logprob: -10.946002960205078
    9. '```' → logprob: -11.008502960205078
    10. '(A' → logprob: -11.133502960205078

Token 568: ' à' (ID: 1221)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.0754435062408447
    2. ' dans' → logprob: -1.5754435062408447
    3. 'in' → logprob: -1.8254435062408447
    4. ' in' → logprob: -2.4504435062408447
    5. ' à' → logprob: -2.9504435062408447
    6. '[i' → logprob: -4.075443267822266
    7. 'à' → logprob: -4.075443267822266
    8. 'au' → logprob: -4.075443267822266
    9. ',' → logprob: -4.325443267822266
    10. 'SA' → logprob: -4.950443267822266

Token 569: ' celle' (ID: 31790)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12924997508525848
    2. ' B' → logprob: -2.2542500495910645
    3. 'A' → logprob: -4.8792500495910645
    4. ' celle' → logprob: -5.6292500495910645
    5. ' la' → logprob: -6.5042500495910645
    6. 'la' → logprob: -7.0042500495910645
    7. 'l' → logprob: -7.1292500495910645
    8. ' ' → logprob: -7.5042500495910645
    9. ' A' → logprob: -7.8792500495910645
    10. 'celle' → logprob: -8.379249572753906

Token 570: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7803515791893005
    2. ' de' → logprob: -1.4053516387939453
    3. 'dans' → logprob: -2.5303516387939453
    4. 'du' → logprob: -3.1553516387939453
    5. ' du' → logprob: -3.4053516387939453
    6. 'SB' → logprob: -3.7803516387939453
    7. '   ' → logprob: -3.9053516387939453
    8. ' dans' → logprob: -3.9053516387939453
    9. 'in' → logprob: -4.030351638793945
    10. ' of' → logprob: -4.030351638793945

Token 571: ' B' (ID: 418)
  Prédit: 'SB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SB' → logprob: -0.10351467877626419
    2. ' SB' → logprob: -2.8535146713256836
    3. 'B' → logprob: -3.6035146713256836
    4. 'SA' → logprob: -4.853514671325684
    5. ' B' → logprob: -6.478514671325684
    6. 'la' → logprob: -7.103514671325684
    7. 'br' → logprob: -7.478514671325684
    8. 'sorted' → logprob: -7.603514671325684
    9. ' la' → logprob: -7.853514671325684
    10. 'sb' → logprob: -8.103514671325684

Token 572: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1010597944259644
    2. ' for' → logprob: -1.3510597944259644
    3. '   ' → logprob: -2.226059913635254
    4. ' =' → logprob: -2.476059913635254
    5. '[i' → logprob: -2.726059913635254
    6. '
' → logprob: -3.476059913635254
    7. ' in' → logprob: -3.601059913635254
    8. 'in' → logprob: -4.226059913635254
    9. '[' → logprob: -4.476059913635254
    10. '(S' → logprob: -4.851059913635254

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.96132892370224
    2. 'for' → logprob: -1.4613289833068848
    3. ' for' → logprob: -1.5863289833068848
    4. '    
' → logprob: -2.9613289833068848
    5. '
' → logprob: -3.0863289833068848
    6. '  
' → logprob: -3.7113289833068848
    7. '```' → logprob: -4.336328983306885
    8. '[i' → logprob: -4.711328983306885
    9. '[' → logprob: -4.961328983306885
    10. '<|end|>' → logprob: -5.211328983306885

Token 574: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3881646692752838
    2. ' for' → logprob: -1.2631646394729614
    3. '   ' → logprob: -3.263164758682251
    4. '    
' → logprob: -8.888164520263672
    5. 'A' → logprob: -9.263164520263672
    6. '[i' → logprob: -9.638164520263672
    7. '	for' → logprob: -10.513164520263672
    8. ' 
' → logprob: -10.513164520263672
    9. ' A' → logprob: -10.638164520263672
    10. ']' → logprob: -10.638164520263672

Token 575: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048587486147880554
    2. ' i' → logprob: -3.0485875606536865
    3. '	i' → logprob: -16.798587799072266
    4. ' ' → logprob: -17.548587799072266
    5. '   ' → logprob: -18.048587799072266
    6. ',i' → logprob: -18.673587799072266
    7. ',' → logprob: -19.048587799072266
    8. '_i' → logprob: -19.173587799072266
    9. '(i' → logprob: -19.923587799072266
    10. 'I' → logprob: -19.923587799072266

Token 576: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038240812718868256
    2. 'in' → logprob: -3.288240909576416
    3. ' ' → logprob: -9.163240432739258
    4. ',' → logprob: -9.538240432739258
    5. '	in' → logprob: -11.788240432739258
    6. ' ,' → logprob: -12.788240432739258
    7. 'n' → logprob: -13.413240432739258
    8. 'In' → logprob: -13.663240432739258
    9. '_in' → logprob: -13.788240432739258
    10. '   ' → logprob: -13.788240432739258

Token 577: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.542423165636137e-05
    2. ' range' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.250085830688477
    4. ' ' → logprob: -16.125085830688477
    5. 'N' → logprob: -17.125085830688477
    6. '  ' → logprob: -17.375085830688477
    7. '
' → logprob: -17.500085830688477
    8. '(range' → logprob: -17.500085830688477
    9. '```' → logprob: -17.875085830688477
    10. '	range' → logprob: -18.250085830688477

Token 578: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.16045615077018738
    2. 'N' → logprob: -1.9104561805725098
    3. '   ' → logprob: -8.535455703735352
    4. '(' → logprob: -11.285455703735352
    5. 'len' → logprob: -12.410455703735352
    6. '	N' → logprob: -12.910455703735352
    7. '1' → logprob: -13.160455703735352
    8. 'n' → logprob: -13.160455703735352
    9. ' N' → logprob: -13.285455703735352
    10. 'def' → logprob: -13.285455703735352

Token 579: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018362628296017647
    2. '):' → logprob: -4.018362522125244
    3. '):
' → logprob: -9.268362998962402
    4. '   ' → logprob: -9.768362998962402
    5. ':
' → logprob: -10.893362998962402
    6. ')' → logprob: -11.018362998962402
    7. ' ):
' → logprob: -11.143362998962402
    8. ':' → logprob: -12.768362998962402
    9. '):

' → logprob: -13.268362998962402
    10. '+' → logprob: -13.643362998962402

Token 580: '       ' (ID: 309)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.7988114356994629
    2. '       ' → logprob: -0.9238114356994629
    3. '   ' → logprob: -2.423811435699463
    4. 'P' → logprob: -2.798811435699463
    5. 'a' → logprob: -6.923811435699463
    6. '    ' → logprob: -7.923811435699463
    7. '```' → logprob: -8.298810958862305
    8. ' a' → logprob: -8.423810958862305
    9. '[P' → logprob: -8.423810958862305
    10. 'A' → logprob: -8.423810958862305

Token 581: ' sa' (ID: 880)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.08578422665596008
    2. 'a' → logprob: -2.7107841968536377
    3. '       ' → logprob: -5.085784435272217
    4. 'val' → logprob: -5.585784435272217
    5. ' P' → logprob: -6.085784435272217
    6. 'p' → logprob: -6.960784435272217
    7. '   ' → logprob: -7.210784435272217
    8. 'v' → logprob: -7.460784435272217
    9. 'A' → logprob: -7.585784435272217
    10. 'x' → logprob: -8.335783958435059

Token 582: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2815967798233032
    2. ' =' → logprob: -1.4065967798233032
    3. '_val' → logprob: -8.906597137451172
    4. 'x' → logprob: -9.656597137451172
    5. 'i' → logprob: -9.656597137451172
    6. '_idx' → logprob: -10.531597137451172
    7. '=
' → logprob: -10.656597137451172
    8. '=i' → logprob: -10.656597137451172
    9. ']' → logprob: -10.781597137451172
    10. 'val' → logprob: -11.656597137451172

Token 583: ' SA' (ID: 19609)
  Prédit: 'SA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SA' → logprob: -0.0009115827269852161
    2. ' SA' → logprob: -7.000911712646484
    3. 'S' → logprob: -17.500911712646484
    4. ' ' → logprob: -17.625911712646484
    5. '   ' → logprob: -18.375911712646484
    6. '-SA' → logprob: -19.500911712646484
    7. '(S' → logprob: -20.625911712646484
    8. '  ' → logprob: -21.250911712646484
    9. 'SB' → logprob: -21.500911712646484
    10. 'sa' → logprob: -21.875911712646484

Token 584: '[i' (ID: 1768)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.0546363592147827
    2. '=' → logprob: -1.4296363592147827
    3. ' =' → logprob: -1.4296363592147827
    4. 'idx' → logprob: -2.8046364784240723
    5. 'A' → logprob: -3.4296364784240723
    6. '_index' → logprob: -3.8046364784240723
    7. '_pos' → logprob: -4.304636478424072
    8. '_i' → logprob: -5.179636478424072
    9. 'i' → logprob: -5.179636478424072
    10. '=A' → logprob: -5.179636478424072

Token 585: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1437011957168579
    2. ']' → logprob: -2.0187010765075684
    3. ']
' → logprob: -7.393701076507568
    4. '       ' → logprob: -8.768701553344727
    5. ']

' → logprob: -9.643701553344727
    6. ')
' → logprob: -9.768701553344727
    7. ' ]
' → logprob: -9.893701553344727
    8. '   ' → logprob: -10.018701553344727
    9. ')' → logprob: -10.768701553344727
    10. ' ]' → logprob: -11.768701553344727

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2519908845424652
    2. ' =' → logprob: -1.8769909143447876
    3. ' P' → logprob: -3.001990795135498
    4. '=' → logprob: -5.001990795135498
    5. 'P' → logprob: -5.251990795135498
    6. '   ' → logprob: -5.376990795135498
    7. '=P' → logprob: -6.501990795135498
    8. 'p' → logprob: -8.501991271972656
    9. '        
' → logprob: -8.626991271972656
    10. ' 
' → logprob: -8.626991271972656

Token 587: ' sb' (ID: 12170)
  Prédit: 'sb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sb' (adapté à ' sb') → logprob: -0.4802795648574829
    2. 'P' → logprob: -1.480279564857483
    3. 'pb' → logprob: -2.6052794456481934
    4. ' P' → logprob: -3.1052794456481934
    5. 'b' → logprob: -3.8552794456481934
    6. ' sb' → logprob: -4.605279445648193
    7. 'p' → logprob: -5.855279445648193
    8. ' pb' → logprob: -7.855279445648193
    9. ' b' → logprob: -8.230279922485352
    10. 'a' → logprob: -8.730279922485352

Token 588: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741158187389374
    2. '=' → logprob: -0.9741158485412598
    3. ' ' → logprob: -10.974115371704102
    4. ']' → logprob: -11.724115371704102
    5. ')' → logprob: -12.474115371704102
    6. '   ' → logprob: -13.224115371704102
    7. '[' → logprob: -13.349115371704102
    8. ' =
' → logprob: -13.349115371704102
    9. '=
' → logprob: -14.099115371704102
    10. '    ' → logprob: -14.099115371704102

Token 589: ' SB' (ID: 41915)
  Prédit: 'SB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SB' → logprob: -0.0024756586644798517
    2. ' SB' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.37747573852539
    4. '_SB' → logprob: -17.37747573852539
    5. '   ' → logprob: -18.12747573852539
    6. 'S' → logprob: -18.75247573852539
    7. 'sb' → logprob: -18.87747573852539
    8. 'Sb' → logprob: -20.75247573852539
    9. '  ' → logprob: -20.87747573852539
    10. 'B' → logprob: -21.25247573852539

Token 590: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013802863657474518
    2. ' =' → logprob: -5.263803005218506
    3. 'i' → logprob: -5.888803005218506
    4. '[' → logprob: -6.263803005218506
    5. '=' → logprob: -6.763803005218506
    6. '[P' → logprob: -7.263803005218506
    7. '   ' → logprob: -7.638803005218506
    8. ']' → logprob: -8.263802528381348
    9. ')' → logprob: -8.513802528381348
    10. '_i' → logprob: -8.638802528381348

Token 591: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.523982048034668
    2. ']' → logprob: -0.898982048034668
    3. ']
' → logprob: -8.273982048034668
    4. ']

' → logprob: -8.648982048034668
    5. ' ]
' → logprob: -8.773982048034668
    6. ' ]' → logprob: -9.523982048034668
    7. ')' → logprob: -9.773982048034668
    8. ')
' → logprob: -9.898982048034668
    9. '   ' → logprob: -10.023982048034668
    10. '       ' → logprob: -10.648982048034668

Token 592: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5051014423370361
    2. '       ' → logprob: -1.6301014423370361
    3. '   ' → logprob: -3.255101442337036
    4. '  
' → logprob: -3.380101442337036
    5. '<|end|>' → logprob: -3.880101442337036
    6. ' 
' → logprob: -4.130101203918457
    7. '        
' → logprob: -4.130101203918457
    8. '    
' → logprob: -4.130101203918457
    9. ' P' → logprob: -4.505101203918457
    10. ' =' → logprob: -5.130101203918457

Token 593: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.0481005534529686
    2. ' P' → logprob: -3.548100471496582
    3. 'if' → logprob: -4.548100471496582
    4. '       ' → logprob: -5.673100471496582
    5. ' if' → logprob: -6.048100471496582
    6. 'p' → logprob: -6.673100471496582
    7. '   ' → logprob: -8.548100471496582
    8. 'a' → logprob: -8.923100471496582
    9. 'A' → logprob: -9.173100471496582
    10. 'idx' → logprob: -10.548100471496582

Token 594: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.5285815596580505
    2. '[i' → logprob: -0.9035815596580505
    3. '[P' → logprob: -5.778581619262695
    4. '[' → logprob: -6.778581619262695
    5. 'A' → logprob: -7.278581619262695
    6. 'i' → logprob: -8.278581619262695
    7. '=A' → logprob: -9.403581619262695
    8. '=' → logprob: -9.403581619262695
    9. ' =' → logprob: -10.528581619262695
    10. ' [' → logprob: -10.653581619262695

Token 595: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.8889261304575484e-06
    2. 'index' → logprob: -14.375003814697266
    3. '[' → logprob: -14.500003814697266
    4. ' idx' → logprob: -14.500003814697266
    5. '_idx' → logprob: -14.500003814697266
    6. ']' → logprob: -14.750003814697266
    7. '[idx' → logprob: -14.875003814697266
    8. 'id' → logprob: -15.375003814697266
    9. 'i' → logprob: -16.125003814697266
    10. '=' → logprob: -16.375003814697266

Token 596: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. '][' → logprob: -12.625005722045898
    3. ']' → logprob: -13.625005722045898
    4. '[s' → logprob: -15.000005722045898
    5. ' [' → logprob: -15.625005722045898
    6. '[
' → logprob: -15.875005722045898
    7. '   ' → logprob: -15.875005722045898
    8. 'sa' → logprob: -16.5000057220459
    9. '(sa' → logprob: -16.8750057220459
    10. '
' → logprob: -17.0000057220459

Token 597: 'sa' (ID: 4578)
  Prédit: 'sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sa' → logprob: -0.00044675805838778615
    2. '[' → logprob: -7.750446796417236
    3. '(sa' → logprob: -11.250446319580078
    4. 's' → logprob: -13.375446319580078
    5. ' sa' → logprob: -15.000446319580078
    6. 'SA' → logprob: -15.125446319580078
    7. 'a' → logprob: -15.500446319580078
    8. '   ' → logprob: -15.750446319580078
    9. '
' → logprob: -15.750446319580078
    10. ']' → logprob: -16.125446319580078

Token 598: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007378002628684044
    2. ']=' → logprob: -7.75073766708374
    3. ']]' → logprob: -9.500738143920898
    4. '],' → logprob: -9.625738143920898
    5. ' ]' → logprob: -10.125738143920898
    6. ']-' → logprob: -10.125738143920898
    7. ']+' → logprob: -10.500738143920898
    8. ']
' → logprob: -11.000738143920898
    9. '])' → logprob: -11.625738143920898
    10. ')]' → logprob: -12.500738143920898

Token 599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024783893022686243
    2. ' =' → logprob: -6.00247859954834
    3. '=B' → logprob: -12.87747859954834
    4. '=b' → logprob: -16.877477645874023
    5. ',' → logprob: -17.627477645874023
    6. ')' → logprob: -17.877477645874023
    7. '=}' → logprob: -18.127477645874023
    8. ']' → logprob: -18.252477645874023
    9. '=
' → logprob: -18.252477645874023
    10. '=s' → logprob: -18.877477645874023

Token 600: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -6.392202976712724e-06
    2. ' B' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.875006675720215
    4. 'b' → logprob: -17.7500057220459
    5. ' ' → logprob: -17.8750057220459
    6. '	B' → logprob: -18.0000057220459
    7. '  ' → logprob: -19.0000057220459
    8. '           ' → logprob: -19.8750057220459
    9. '       ' → logprob: -20.1250057220459
    10. '(B' → logprob: -20.6250057220459

Token 601: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -9.088346359931165e-07
    2. '[s' → logprob: -15.000000953674316
    3. '[idx' → logprob: -15.500000953674316
    4. 'sb' → logprob: -15.625000953674316
    5. '[' → logprob: -15.875000953674316
    6. ' idx' → logprob: -18.625
    7. '[B' → logprob: -19.0
    8. 'b' → logprob: -19.125
    9. 'id' → logprob: -19.375
    10. '[b' → logprob: -19.625

Token 602: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00015872348740231246
    2. 'sb' → logprob: -9.250158309936523
    3. '[' → logprob: -9.750158309936523
    4. '(sb' → logprob: -13.375158309936523
    5. 'b' → logprob: -13.625158309936523
    6. '[
' → logprob: -14.625158309936523
    7. '(s' → logprob: -15.375158309936523
    8. '	sb' → logprob: -15.625158309936523
    9. '```' → logprob: -15.625158309936523
    10. ' sb' → logprob: -16.000158309936523

Token 603: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0011610541259869933
    2. '[s' → logprob: -7.001161098480225
    3. 'a' → logprob: -8.751160621643066
    4. '[' → logprob: -10.501160621643066
    5. '[b' → logprob: -10.626160621643066
    6. 'B' → logprob: -10.876160621643066
    7. 'sb' → logprob: -12.126160621643066
    8. '(sb' → logprob: -12.126160621643066
    9. '(s' → logprob: -13.376160621643066
    10. 'bs' → logprob: -14.001160621643066

Token 604: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28299427032470703
    2. '<|end|>' → logprob: -1.907994270324707
    3. ']' → logprob: -2.657994270324707
    4. '   ' → logprob: -3.782994270324707
    5. '<|end|>' → logprob: -6.032994270324707
    6. '       ' → logprob: -7.657994270324707
    7. '    
' → logprob: -7.907994270324707
    8. ' )' → logprob: -8.157994270324707
    9. '
' → logprob: -8.157994270324707
    10. '}' → logprob: -8.282994270324707

Token 605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5810620784759521
    2. '<|end|>' → logprob: -1.2060620784759521
    3. '
' → logprob: -2.706062078475952
    4. '```' → logprob: -3.706062078475952
    5. ')' → logprob: -3.831062078475952
    6. '    
' → logprob: -4.081062316894531
    7. '\n' → logprob: -5.456062316894531
    8. '  
' → logprob: -5.831062316894531
    9. ' return' → logprob: -7.581062316894531
    10. 'return' → logprob: -7.581062316894531

Token 606: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2805785536766052
    2. ')' → logprob: -1.90557861328125
    3. 'for' → logprob: -3.40557861328125
    4. 'from' → logprob: -4.28057861328125
    5. 'return' → logprob: -4.40557861328125
    6. '    
' → logprob: -4.78057861328125
    7. ')
' → logprob: -4.90557861328125
    8. '```' → logprob: -5.53057861328125
    9. '#' (adapté à ' #') → logprob: -5.78057861328125
    10. 'def' → logprob: -6.03057861328125

Token 607: ' Parc' (ID: 68618)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03171951696276665
    2. '#' → logprob: -4.53171968460083
    3. 'vis' → logprob: -5.03171968460083
    4. 'used' → logprob: -5.65671968460083
    5. 'from' → logprob: -5.78171968460083
    6. 'seen' → logprob: -6.28171968460083
    7. ' visited' → logprob: -6.53171968460083
    8. 'for' → logprob: -6.65671968460083
    9. 'def' → logprob: -6.90671968460083
    10. 'cycles' → logprob: -7.53171968460083

Token 608: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.6997998356819153
    2. 'ours' → logprob: -0.6997998356819153
    3. '#' → logprob: -6.07480001449585
    4. 'ourt' → logprob: -6.07480001449585
    5. 'or' → logprob: -7.57480001449585
    6. 'oure' → logprob: -7.94980001449585
    7. 'ourse' → logprob: -8.074799537658691
    8. '_' → logprob: -9.074799537658691
    9. 'ount' → logprob: -9.199799537658691
    10. 'urr' → logprob: -9.574799537658691

Token 609: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2711453437805176
    2. ' i' → logprob: -1.8961453437805176
    3. ' for' → logprob: -3.5211453437805176
    4. ' des' → logprob: -3.6461453437805176
    5. 'i' → logprob: -4.146145343780518
    6. 'for' → logprob: -5.021145343780518
    7. 'visited' → logprob: -5.896145343780518
    8. ' de' → logprob: -6.271145343780518
    9. ' du' → logprob: -6.521145343780518
    10. ' visited' → logprob: -6.771145343780518

Token 610: ' cycle' (ID: 15839)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.3776096701622009
    2. ' P' → logprob: -1.3776097297668457
    3. 'range' → logprob: -3.7526097297668457
    4. ' cycle' → logprob: -4.127609729766846
    5. 'cycle' → logprob: -4.627609729766846
    6. ' range' → logprob: -5.252609729766846
    7. 'perm' → logprob: -6.752609729766846
    8. '[' → logprob: -7.127609729766846
    9. ' code' → logprob: -7.252609729766846
    10. 'code' → logprob: -7.377609729766846

Token 611: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7876747846603394
    2. 's' → logprob: -1.1626747846603394
    3. 'for' → logprob: -1.5376747846603394
    4. '   ' → logprob: -4.287674903869629
    5. ' i' → logprob: -6.912674903869629
    6. ' in' → logprob: -7.162674903869629
    7. ' de' → logprob: -7.912674903869629
    8. '(s' → logprob: -8.412674903869629
    9. 'de' → logprob: -8.412674903869629
    10. 'visited' → logprob: -8.537674903869629

Token 612: ' permutations' (ID: 174595)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.04972919821739197
    2. ' P' → logprob: -3.174729108810425
    3. 'la' → logprob: -6.049729347229004
    4. 's' → logprob: -6.299729347229004
    5. 'i' → logprob: -7.299729347229004
    6. ' la' → logprob: -7.424729347229004
    7. 'per' → logprob: -8.049729347229004
    8. 'perm' → logprob: -8.424729347229004
    9. ' permutation' → logprob: -8.549729347229004
    10. 'len' → logprob: -9.049729347229004

Token 613: ' pour' (ID: 1930)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5772848129272461
    2. '   ' → logprob: -0.9522848129272461
    3. ' visited' → logprob: -3.202284812927246
    4. ' for' → logprob: -5.077284812927246
    5. 'for' → logprob: -6.077284812927246
    6. 'used' → logprob: -6.702284812927246
    7. ' used' → logprob: -6.952284812927246
    8. '
' → logprob: -8.077284812927246
    9. '    
' → logprob: -8.577284812927246
    10. 'seen' → logprob: -8.577284812927246

Token 614: ' détect' (ID: 118715)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8713860511779785
    2. 'i' → logprob: -1.1213860511779785
    3. ' vérifier' → logprob: -2.6213860511779785
    4. 'visited' → logprob: -2.8713860511779785
    5. ' détect' → logprob: -2.9963860511779785
    6. 'detect' → logprob: -4.2463860511779785
    7. 'dé' → logprob: -4.4963860511779785
    8. ' trouver' → logprob: -4.8713860511779785
    9. 'v' → logprob: -4.8713860511779785
    10. ' identifier' → logprob: -5.3713860511779785

Token 615: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.010225122794508934
    2. 'ter' → logprob: -4.760225296020508
    3. 'rer' → logprob: -8.135225296020508
    4. 'ver' → logprob: -8.385225296020508
    5. 'trer' → logprob: -8.510225296020508
    6. 'uter' → logprob: -9.135225296020508
    7. 'eter' → logprob: -9.510225296020508
    8. 'iter' → logprob: -9.510225296020508
    9. 'ection' → logprob: -9.635225296020508
    10. 'érer' → logprob: -9.635225296020508

Token 616: ' si' (ID: 1784)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.094720721244812
    2. ' les' → logprob: -1.219720721244812
    3. ' un' → logprob: -2.4697208404541016
    4. ' cycles' → logprob: -2.9697208404541016
    5. ' any' → logprob: -3.0947208404541016
    6. 's' → logprob: -3.0947208404541016
    7. 'i' → logprob: -3.3447208404541016
    8. ' des' → logprob: -3.9697208404541016
    9. ' la' → logprob: -4.219720840454102
    10. ' une' → logprob: -4.469720840454102

Token 617: ' toute' (ID: 16825)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.07096432894468307
    2. 'any' → logprob: -4.195964336395264
    3. ' un' → logprob: -4.320964336395264
    4. ' toute' → logprob: -4.570964336395264
    5. ' une' → logprob: -4.695964336395264
    6. ' len' → logprob: -5.070964336395264
    7. ' P' → logprob: -6.320964336395264
    8. ' not' → logprob: -6.570964336395264
    9. ' la' → logprob: -6.695964336395264
    10. 'len' → logprob: -6.695964336395264

Token 618: ' la' (ID: 557)
  Prédit: ' permutation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutation' → logprob: -0.6220431923866272
    2. 's' → logprob: -1.9970431327819824
    3. 'cycle' → logprob: -2.4970431327819824
    4. 'la' → logprob: -2.4970431327819824
    5. 'fois' → logprob: -3.2470431327819824
    6. ' cycle' → logprob: -3.6220431327819824
    7. 'une' → logprob: -3.8720431327819824
    8. 'l' → logprob: -4.122043132781982
    9. ' la' → logprob: -4.622043132781982
    10. 'position' → logprob: -4.872043132781982

Token 619: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.014559975825250149
    2. ' permutation' → logprob: -4.514559745788574
    3. 'perm' → logprob: -6.264559745788574
    4. 'cycle' → logprob: -7.264559745788574
    5. 'P' → logprob: -8.514559745788574
    6. 'fonction' → logprob: -8.889559745788574
    7. ' perm' → logprob: -9.014559745788574
    8. 'suite' → logprob: -9.889559745788574
    9. 'position' → logprob: -10.014559745788574
    10. 'com' → logprob: -10.139559745788574

Token 620: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.08312663435935974
    2. 'est' → logprob: -3.0831265449523926
    3. ' contient' → logprob: -4.583126544952393
    4. ' a' → logprob: -4.833126544952393
    5. ' possède' → logprob: -6.083126544952393
    6. 'a' → logprob: -6.083126544952393
    7. ' comporte' → logprob: -6.083126544952393
    8. ' des' → logprob: -6.333126544952393
    9. 'cont' → logprob: -6.458126544952393
    10. ' is' → logprob: -6.583126544952393

Token 621: ' cycl' (ID: 27789)
  Prédit: ' composée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' composée' → logprob: -1.180953025817871
    2. ' un' → logprob: -1.305953025817871
    3. 'un' → logprob: -2.430953025817871
    4. 'une' → logprob: -2.930953025817871
    5. ' une' → logprob: -3.305953025817871
    6. 'dé' → logprob: -3.555953025817871
    7. '[]' → logprob: -3.930953025817871
    8. 'identity' → logprob: -4.180953025817871
    9. ' identity' → logprob: -4.305953025817871
    10. 'de' → logprob: -4.430953025817871

Token 622: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.12380169332027435
    2. 'e' → logprob: -2.2488017082214355
    3. 'i' → logprob: -5.2488017082214355
    4. '\' → logprob: -6.9988017082214355
    5. '[' → logprob: -7.2488017082214355
    6. 'iq' → logprob: -7.3738017082214355
    7. 'iqu' → logprob: -7.6238017082214355
    8. 'que' → logprob: -7.9988017082214355
    9. '#' → logprob: -8.248801231384277
    10. '%' → logprob: -8.748801231384277

Token 623: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27067258954048157
    2. 'visited' → logprob: -1.8956725597381592
    3. '
' → logprob: -2.520672559738159
    4. ' visited' → logprob: -5.395672798156738
    5. '    
' → logprob: -6.645672798156738
    6. '  
' → logprob: -9.145672798156738
    7. ' for' → logprob: -9.895672798156738
    8. 'def' → logprob: -9.895672798156738
    9. 'for' → logprob: -10.020672798156738
    10. 'i' → logprob: -10.020672798156738

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04772556573152542
    2. 'visited' → logprob: -3.4227256774902344
    3. '
' → logprob: -4.672725677490234
    4. ' visited' → logprob: -5.797725677490234
    5. '    
' → logprob: -7.047725677490234
    6. 'i' → logprob: -8.797725677490234
    7. ' for' → logprob: -9.047725677490234
    8. 'for' → logprob: -9.297725677490234
    9. '```' → logprob: -9.547725677490234
    10. ' i' → logprob: -9.547725677490234

Token 625: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6734987497329712
    2. ' visited' → logprob: -1.2984987497329712
    3. '   ' → logprob: -1.5484987497329712
    4. ' used' → logprob: -6.423498630523682
    5. 'used' → logprob: -6.673498630523682
    6. 'vis' → logprob: -7.798498630523682
    7. '    
' → logprob: -8.17349910736084
    8. ' seen' → logprob: -8.67349910736084
    9. 'v' → logprob: -8.67349910736084
    10. ' vis' → logprob: -8.92349910736084

Token 626: ' Si' (ID: 7832)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.02301064319908619
    2. ' visited' → logprob: -4.273010730743408
    3. '   ' → logprob: -5.148010730743408
    4. 'vis' → logprob: -6.773010730743408
    5. 'used' → logprob: -6.898010730743408
    6. 'seen' → logprob: -7.398010730743408
    7. 'v' → logprob: -9.89801025390625
    8. 'for' → logprob: -10.14801025390625
    9. '
' → logprob: -10.64801025390625
    10. ' seen' → logprob: -10.77301025390625

Token 627: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5788525342941284
    2. 'any' → logprob: -1.5788525342941284
    3. 'all' → logprob: -1.8288525342941284
    4. ' any' → logprob: -3.328852653503418
    5. ' len' → logprob: -4.703852653503418
    6. 'min' → logprob: -4.953852653503418
    7. ' all' → logprob: -5.203852653503418
    8. 'P' → logprob: -5.578852653503418
    9. 'max' → logprob: -5.578852653503418
    10. 'not' → logprob: -5.828852653503418

Token 628: ' cycle' (ID: 15839)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.06737185269594193
    2. 'P' → logprob: -4.567371845245361
    3. 'max' → logprob: -4.692371845245361
    4. 'all' → logprob: -4.692371845245361
    5. 'cycle' → logprob: -4.692371845245361
    6. 'set' → logprob: -4.817371845245361
    7. ' len' → logprob: -5.567371845245361
    8. ' P' → logprob: -5.692371845245361
    9. 'any' → logprob: -6.192371845245361
    10. 'min' → logprob: -6.567371845245361

Token 629: ' couvre' (ID: 137218)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9318994283676147
    2. ' complet' → logprob: -1.4318994283676147
    3. 'com' → logprob: -1.8068994283676147
    4. ' n' → logprob: -2.5568995475769043
    5. 'est' → logprob: -3.1818995475769043
    6. 'len' → logprob: -4.681899547576904
    7. 'n' → logprob: -4.931899547576904
    8. 's' → logprob: -4.931899547576904
    9. 'length' → logprob: -4.931899547576904
    10. ' a' → logprob: -5.181899547576904

Token 630: ' toute' (ID: 16825)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.47892582416534424
    2. 'tout' → logprob: -1.4789258241653442
    3. ' tout' → logprob: -3.4789257049560547
    4. 'all' → logprob: -3.6039257049560547
    5. ' toute' → logprob: -3.7289257049560547
    6. 'ent' → logprob: -3.8539257049560547
    7. 'l' → logprob: -3.8539257049560547
    8. 'N' → logprob: -4.228925704956055
    9. ' l' → logprob: -5.978925704956055
    10. ' N' → logprob: -6.103925704956055

Token 631: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1851331740617752
    2. ' la' → logprob: -1.8101332187652588
    3. 'N' → logprob: -6.06013298034668
    4. 'range' → logprob: -6.68513298034668
    5. 'le' → logprob: -7.18513298034668
    6. 'l' → logprob: -7.93513298034668
    7. 'len' → logprob: -8.18513298034668
    8. ' range' → logprob: -8.68513298034668
    9. ' N' → logprob: -8.68513298034668
    10. ' ' → logprob: -11.68513298034668

Token 632: ' permutation' (ID: 135200)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6256282925605774
    2. 'range' → logprob: -1.7506282329559326
    3. 'tail' → logprob: -2.6256282329559326
    4. 'n' → logprob: -2.8756282329559326
    5. 'long' → logprob: -3.5006282329559326
    6. ' longueur' → logprob: -3.6256282329559326
    7. 'liste' → logprob: -3.7506282329559326
    8. ' plage' → logprob: -4.375628471374512
    9. ' liste' → logprob: -4.375628471374512
    10. ' taille' → logprob: -4.500628471374512

Token 633: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6205452084541321
    2. ':' → logprob: -0.8705452084541321
    3. ':
' → logprob: -4.120545387268066
    4. '   ' → logprob: -4.370545387268066
    5. ' and' → logprob: -4.495545387268066
    6. ' or' → logprob: -7.120545387268066
    7. 'and' → logprob: -7.370545387268066
    8. ',
' → logprob: -7.495545387268066
    9. ' (' → logprob: -8.245545387268066
    10. ' ,' → logprob: -8.370545387268066

Token 634: 'sans' (ID: 106726)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18674923479557037
    2. ' N' → logprob: -2.436749219894409
    3. 'len' → logprob: -3.436749219894409
    4. '   ' → logprob: -3.811749219894409
    5. 'True' → logprob: -5.186749458312988
    6. 'i' → logprob: -5.436749458312988
    7. ')' → logprob: -5.686749458312988
    8. 'return' → logprob: -5.811749458312988
    9. ' return' → logprob: -5.936749458312988
    10. ' True' → logprob: -6.061749458312988

Token 635: ' coup' (ID: 25465)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5808568000793457
    2. 'break' → logprob: -1.7058568000793457
    3. 'ré' → logprob: -2.2058568000793457
    4. 'ret' → logprob: -3.3308568000793457
    5. 'vis' → logprob: -4.330856800079346
    6. ' répét' → logprob: -4.455856800079346
    7. 'visited' → logprob: -4.580856800079346
    8. 'None' → logprob: -4.955856800079346
    9. 'cycle' → logprob: -4.955856800079346
    10. 's' → logprob: -4.955856800079346

Token 636: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.002573163714259863
    2. 'ures' → logprob: -6.502573013305664
    3. 'er' → logprob: -7.127573013305664
    4. 'e' → logprob: -8.377573013305664
    5. 're' → logprob: -11.502573013305664
    6. '```' → logprob: -12.002573013305664
    7. 'é' → logprob: -12.377573013305664
    8. 'de' → logprob: -12.877573013305664
    9. 'ur' → logprob: -13.252573013305664
    10. '**' → logprob: -13.627573013305664

Token 637: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04965591803193092
    2. ' ),' → logprob: -3.1746559143066406
    3. ',' → logprob: -5.799655914306641
    4. ')' → logprob: -5.924655914306641
    5. ' )' → logprob: -8.17465591430664
    6. 's' → logprob: -8.29965591430664
    7. ' de' → logprob: -9.42465591430664
    8. ' ,' → logprob: -9.54965591430664
    9. '_),' → logprob: -10.29965591430664
    10. '),
' → logprob: -10.42465591430664

Token 638: ' alors' (ID: 17971)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03437863290309906
    2. 'return' → logprob: -3.4093785285949707
    3. '   ' → logprob: -7.284378528594971
    4. ' for' → logprob: -11.409379005432129
    5. ' on' → logprob: -12.409379005432129
    6. '	return' → logprob: -12.409379005432129
    7. ' ' → logprob: -12.659379005432129
    8. ' i' → logprob: -12.659379005432129
    9. ' visited' → logprob: -13.034379005432129
    10. ' ' → logprob: -13.284379005432129

Token 639: ' c' (ID: 274)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19029653072357178
    2. ' return' → logprob: -1.8152965307235718
    3. '   ' → logprob: -4.690296649932861
    4. ''' → logprob: -6.815296649932861
    5. '
' → logprob: -10.065296173095703
    6. '"' → logprob: -10.315296173095703
    7. '```' → logprob: -10.565296173095703
    8. ''s' → logprob: -10.940296173095703
    9. ' '' → logprob: -10.940296173095703
    10. '	return' → logprob: -11.065296173095703

Token 640: ''est' (ID: 6616)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6788821220397949
    2. ''' → logprob: -1.303882122039795
    3. ''est' → logprob: -2.428882122039795
    4. 'return' → logprob: -2.928882122039795
    5. '   ' → logprob: -3.928882122039795
    6. ' '' → logprob: -4.178882122039795
    7. 'e' → logprob: -4.428882122039795
    8. '#' → logprob: -4.803882122039795
    9. ''s' → logprob: -5.428882122039795
    10. 'a' → logprob: -6.428882122039795

Token 641: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01964421197772026
    2. 'Yes' → logprob: -4.269644260406494
    3. ' '' → logprob: -6.144644260406494
    4. '   ' → logprob: -7.144644260406494
    5. '"' → logprob: -7.519644260406494
    6. 'No' → logprob: -7.769644260406494
    7. 'Oui' → logprob: -8.019643783569336
    8. ''O' → logprob: -8.394643783569336
    9. 'possible' → logprob: -8.894643783569336
    10. ' possible' → logprob: -9.144643783569336

Token 642: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.5256769061088562
    2. 'Yes' → logprob: -0.9006769061088562
    3. ' No' → logprob: -6.650676727294922
    4. ' Yes' → logprob: -6.900676727294922
    5. ''' → logprob: -8.900676727294922
    6. 'Oui' → logprob: -9.650676727294922
    7. '"No' → logprob: -11.900676727294922
    8. 'Non' → logprob: -12.025676727294922
    9. 'YES' → logprob: -12.275676727294922
    10. ' '' → logprob: -12.275676727294922

Token 643: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5033181309700012
    2. '
' → logprob: -1.5033180713653564
    3. '\n' → logprob: -2.8783180713653564
    4. 'return' → logprob: -3.0033180713653564
    5. '.' → logprob: -3.5033180713653564
    6. ''
' → logprob: -4.1283183097839355
    7. ' return' → logprob: -5.2533183097839355
    8. 'def' → logprob: -5.3783183097839355
    9. '.
' → logprob: -6.3783183097839355
    10. '  
' → logprob: -7.0033183097839355

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029898587614297867
    2. '
' → logprob: -3.7798986434936523
    3. '    
' → logprob: -5.779898643493652
    4. ' visited' → logprob: -6.779898643493652
    5. 'visited' → logprob: -7.279898643493652
    6. ' i' → logprob: -7.529898643493652
    7. '  
' → logprob: -8.404898643493652
    8. '```' → logprob: -8.529898643493652
    9. ' pos' → logprob: -8.779898643493652
    10. ' cycle' → logprob: -9.154898643493652

Token 645: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.18747135996818542
    2. ' visited' → logprob: -1.9374713897705078
    3. '   ' → logprob: -3.687471389770508
    4. 'used' → logprob: -7.687471389770508
    5. 'vis' → logprob: -7.937471389770508
    6. 'seen' → logprob: -8.187471389770508
    7. ' used' → logprob: -8.687471389770508
    8. '    
' → logprob: -8.812471389770508
    9. ' seen' → logprob: -8.812471389770508
    10. 'i' → logprob: -9.937471389770508

Token 646: ' Sinon' (ID: 154924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20309287309646606
    2. ' visited' → logprob: -2.4530928134918213
    3. 'visited' → logprob: -3.0780928134918213
    4. '
' → logprob: -3.2030928134918213
    5. '    
' → logprob: -5.3280930519104
    6. ' i' → logprob: -6.3280930519104
    7. ' pos' → logprob: -6.4530930519104
    8. 'pos' → logprob: -7.0780930519104
    9. ' cycle' → logprob: -7.4530930519104
    10. 'i' → logprob: -8.203092575073242

Token 647: ',' (ID: 11)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.18273670971393585
    2. 'visited' → logprob: -1.8077367544174194
    3. '   ' → logprob: -6.057736873626709
    4. '
' → logprob: -8.55773639678955
    5. ' seen' → logprob: -9.18273639678955
    6. ' vis' → logprob: -9.43273639678955
    7. '    
' → logprob: -9.68273639678955
    8. 'vis' → logprob: -9.80773639678955
    9. ' used' → logprob: -10.05773639678955
    10. ' cycle' → logprob: -11.18273639678955

Token 648: ' c' (ID: 274)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.19111213088035583
    2. ' visited' → logprob: -1.8161121606826782
    3. 'for' → logprob: -5.941112041473389
    4. 'vis' → logprob: -6.441112041473389
    5. 'seen' → logprob: -6.566112041473389
    6. ' seen' → logprob: -6.691112041473389
    7. ' for' → logprob: -6.816112041473389
    8. 'return' → logprob: -6.941112041473389
    9. '   ' → logprob: -7.441112041473389
    10. ' return' → logprob: -7.691112041473389

Token 649: ''est' (ID: 6616)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16448725759983063
    2. 'eturn' → logprob: -2.164487361907959
    3. ' return' → logprob: -3.414487361907959
    4. '   ' → logprob: -6.039487361907959
    5. 'for' → logprob: -7.914487361907959
    6. '```' → logprob: -8.0394868850708
    7. '
' → logprob: -8.1644868850708
    8. '#' → logprob: -8.6644868850708
    9. 'et' → logprob: -9.4144868850708
    10. ''est' → logprob: -10.0394868850708

Token 650: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0026250008959323168
    2. ' '' → logprob: -6.002624988555908
    3. '   ' → logprob: -9.752625465393066
    4. 'Yes' → logprob: -10.752625465393066
    5. '
' → logprob: -10.877625465393066
    6. ' ' → logprob: -11.627625465393066
    7. ' Yes' → logprob: -11.627625465393066
    8. '  ' → logprob: -11.877625465393066
    9. '  
' → logprob: -12.002625465393066
    10. '    
' → logprob: -12.127625465393066

Token 651: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.009763410314917564
    2. ''' → logprob: -4.634763240814209
    3. ' Yes' → logprob: -12.134763717651367
    4. 'Oui' → logprob: -14.009763717651367
    5. 'YES' → logprob: -14.759763717651367
    6. '"' → logprob: -15.634763717651367
    7. 'Ye' → logprob: -16.009763717651367
    8. 'yes' → logprob: -16.259763717651367
    9. '```' → logprob: -16.384763717651367
    10. '   ' → logprob: -16.384763717651367

Token 652: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31725019216537476
    2. '
' → logprob: -1.3172502517700195
    3. '    
' → logprob: -5.5672502517700195
    4. '  
' → logprob: -9.69225025177002
    5. '   
' → logprob: -10.69225025177002
    6. '.
' → logprob: -11.19225025177002
    7. 'def' → logprob: -11.31725025177002
    8. ')
' → logprob: -11.44225025177002
    9. '
' → logprob: -11.69225025177002
    10. '
    
' → logprob: -12.06725025177002

Token 653: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020647816359996796
    2. '
' → logprob: -5.020648002624512
    3. 'visited' → logprob: -5.770648002624512
    4. '    
' → logprob: -6.020648002624512
    5. ' i' → logprob: -6.270648002624512
    6. ' visited' → logprob: -6.395648002624512
    7. 'pos' → logprob: -6.895648002624512
    8. ' cycle' → logprob: -6.895648002624512
    9. 'i' → logprob: -7.270648002624512
    10. ' pos' → logprob: -7.395648002624512

Token 654: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0339023657143116
    2. '   ' → logprob: -4.158902168273926
    3. ' visited' → logprob: -4.158902168273926
    4. 'used' → logprob: -7.033902168273926
    5. '
' → logprob: -7.908902168273926
    6. 'vis' → logprob: -8.033902168273926
    7. '    
' → logprob: -8.658902168273926
    8. 'seen' → logprob: -8.658902168273926
    9. 'v' → logprob: -9.533902168273926
    10. ' used' → logprob: -10.658902168273926

Token 655: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326842308044434
    2. '=' → logprob: -1.3132684230804443
    3. '[' → logprob: -12.188268661499023
    4. ' ' → logprob: -14.563268661499023
    5. '=[' → logprob: -14.688268661499023
    6. '=set' → logprob: -15.938268661499023
    7. ')' → logprob: -16.063268661499023
    8. ' =[' → logprob: -16.188268661499023
    9. '=[]' → logprob: -16.813268661499023
    10. ',' → logprob: -16.938268661499023

Token 656: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002788551209960133
    2. ' [' → logprob: -8.50027847290039
    3. 'set' → logprob: -9.50027847290039
    4. ' set' → logprob: -15.00027847290039
    5. '[N' → logprob: -16.37527847290039
    6. '{' → logprob: -17.12527847290039
    7. '[n' → logprob: -18.00027847290039
    8. '[s' → logprob: -18.37527847290039
    9. '[start' → logprob: -19.00027847290039
    10. '[a' → logprob: -19.12527847290039

Token 657: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.038083940744400024
    2. '()
' → logprob: -3.288084030151367
    3. '()

' → logprob: -10.663084030151367
    4. '()
' → logprob: -11.788084030151367
    5. '()\' → logprob: -12.163084030151367
    6. '(' → logprob: -12.663084030151367
    7. '()</' → logprob: -14.538084030151367
    8. '(P' → logprob: -14.538084030151367
    9. '()`' → logprob: -14.663084030151367
    10. '()"' → logprob: -14.913084030151367

Token 658: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5191535949707031
    2. 'for' → logprob: -1.0191535949707031
    3. 'i' → logprob: -3.769153594970703
    4. ' i' → logprob: -4.394153594970703
    5. '   ' → logprob: -4.769153594970703
    6. ' stack' → logprob: -10.394153594970703
    7. '```' → logprob: -10.394153594970703
    8. '
' → logprob: -10.644153594970703
    9. ' cycle' → logprob: -10.769153594970703
    10. '    
' → logprob: -10.769153594970703

Token 659: ' vn' (ID: 88772)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05579071491956711
    2. 'for' → logprob: -3.555790662765503
    3. 'cycle' → logprob: -4.430790901184082
    4. 'current' → logprob: -5.805790901184082
    5. ' i' → logprob: -6.305790901184082
    6. '   ' → logprob: -6.305790901184082
    7. 'pos' → logprob: -6.430790901184082
    8. 'if' → logprob: -6.555790901184082
    9. ' for' → logprob: -6.930790901184082
    10. ' cycle' → logprob: -7.180790901184082

Token 660: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10208714753389359
    2. ' =' → logprob: -2.3520872592926025
    3. 'is' → logprob: -6.477087020874023
    4. 'isted' → logprob: -8.977087020874023
    5. 'al' → logprob: -9.352087020874023
    6. 'isit' → logprob: -10.852087020874023
    7. 'alid' → logprob: -11.227087020874023
    8. '   ' → logprob: -11.477087020874023
    9. '=[]' → logprob: -11.727087020874023
    10. '=set' → logprob: -11.727087020874023

Token 661: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009163398644886911
    2. ' ' → logprob: -7.000916481018066
    3. 'P' → logprob: -13.125916481018066
    4. 'N' → logprob: -13.750916481018066
    5. '[]' → logprob: -14.250916481018066
    6. '1' → logprob: -15.250916481018066
    7. 'len' → logprob: -15.250916481018066
    8. ' P' → logprob: -16.00091552734375
    9. '{' → logprob: -16.12591552734375
    10. '{}' → logprob: -16.37591552734375

Token 662: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00611459743231535
    2. 'P' → logprob: -5.131114482879639
    3. 'N' → logprob: -9.256114959716797
    4. 'len' → logprob: -10.131114959716797
    5. ' ' → logprob: -10.381114959716797
    6. '{' → logprob: -11.506114959716797
    7. '1' → logprob: -12.881114959716797
    8. ' P' → logprob: -13.006114959716797
    9. 'set' → logprob: -13.881114959716797
    10. '{}' → logprob: -13.881114959716797

Token 663: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18590891361236572
    2. 'i' → logprob: -2.185908794403076
    3. 'while' → logprob: -3.810908794403076
    4. ' i' → logprob: -4.935908794403076
    5. 'current' → logprob: -4.935908794403076
    6. ' while' → logprob: -5.310908794403076
    7. 'v' → logprob: -5.810908794403076
    8. 'for' → logprob: -6.310908794403076
    9. '  
' → logprob: -6.310908794403076
    10. ' 
' → logprob: -6.560908794403076

Token 664: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.103745698928833
    2. ' i' → logprob: -1.478745698928833
    3. '   ' → logprob: -2.228745698928833
    4. 'current' → logprob: -2.728745698928833
    5. 'pos' → logprob: -3.478745698928833
    6. ' current' → logprob: -3.478745698928833
    7. 'while' → logprob: -3.478745698928833
    8. ' while' → logprob: -3.728745698928833
    9. 'for' → logprob: -3.728745698928833
    10. '
' → logprob: -3.853745698928833

Token 665: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5822759866714478
    2. 'i' → logprob: -1.0822759866714478
    3. 'for' → logprob: -2.332275867462158
    4. 'current' → logprob: -6.207275867462158
    5. ' while' → logprob: -6.582275867462158
    6. 'cur' → logprob: -7.207275867462158
    7. 'start' → logprob: -7.957275867462158
    8. ' i' → logprob: -7.957275867462158
    9. ' for' → logprob: -8.832276344299316
    10. 'u' → logprob: -9.082276344299316

Token 666: ' vn' (ID: 88772)
  Prédit: 'vn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vn' → logprob: -0.024473629891872406
    2. 'len' → logprob: -3.7744736671447754
    3. ' vn' → logprob: -6.774473667144775
    4. ' len' → logprob: -9.899473190307617
    5. 'True' → logprob: -11.024473190307617
    6. 'v' → logprob: -11.524473190307617
    7. 'visited' → logprob: -13.649473190307617
    8. '   ' → logprob: -13.774473190307617
    9. '(len' → logprob: -14.149473190307617
    10. 'vl' → logprob: -14.274473190307617

Token 667: ' not' (ID: 625)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9155515432357788
    2. ' <' → logprob: -1.4155515432357788
    3. ' not' → logprob: -1.6655515432357788
    4. '<N' → logprob: -2.6655516624450684
    5. '<len' → logprob: -3.2905516624450684
    6. '<n' → logprob: -3.5405516624450684
    7. 'not' → logprob: -3.6655516624450684
    8. 'in' → logprob: -5.915551662445068
    9. ' in' → logprob: -6.040551662445068
    10. '<P' → logprob: -8.04055118560791

Token 668: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22605915367603302
    2. ' in' → logprob: -1.6010591983795166
    3. 'visited' → logprob: -7.7260589599609375
    4. '   ' → logprob: -8.976058959960938
    5. 'not' → logprob: -10.726058959960938
    6. '  ' → logprob: -11.351058959960938
    7. ' visited' → logprob: -11.476058959960938
    8. 'v' → logprob: -12.101058959960938
    9. '=' → logprob: -12.476058959960938
    10. ' ' → logprob: -12.476058959960938

Token 669: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0031777136027812958
    2. ' visited' → logprob: -5.753177642822266
    3. 'vis' → logprob: -18.753177642822266
    4. '
' → logprob: -18.878177642822266
    5. 'visit' → logprob: -18.878177642822266
    6. ' ' → logprob: -19.503177642822266
    7. 'Visited' → logprob: -20.003177642822266
    8. 'v' → logprob: -20.378177642822266
    9. '   ' → logprob: -20.628177642822266
    10. 'vist' → logprob: -21.253177642822266

Token 670: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08004949986934662
    2. ':' → logprob: -2.580049514770508
    3. '   ' → logprob: -7.455049514770508
    4. '):
' → logprob: -7.705049514770508
    5. '       ' → logprob: -9.955049514770508
    6. ' and' → logprob: -10.455049514770508
    7. ' :
' → logprob: -10.830049514770508
    8. '):' → logprob: -11.580049514770508
    9. ':
' → logprob: -12.330049514770508
    10. '():
' → logprob: -12.455049514770508

Token 671: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5112181305885315
    2. '       ' → logprob: -1.1362180709838867
    3. 'visited' → logprob: -3.0112180709838867
    4. ' visited' → logprob: -3.5112180709838867
    5. '	' → logprob: -10.136218070983887
    6. '   ' → logprob: -11.136218070983887
    7. '    ' → logprob: -11.511218070983887
    8. '	   ' → logprob: -11.511218070983887
    9. '    
' → logprob: -11.886218070983887
    10. '        
' → logprob: -12.386218070983887

Token 672: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.00011629798245849088
    2. ' visited' → logprob: -9.250116348266602
    3. '   ' → logprob: -11.250116348266602
    4. '       ' → logprob: -11.875116348266602
    5. '
' → logprob: -17.0001163482666
    6. '```' → logprob: -17.3751163482666
    7. 'visit' → logprob: -17.8751163482666
    8. 'v' → logprob: -18.5001163482666
    9. 'visi' → logprob: -19.1251163482666
    10. '    
' → logprob: -19.1251163482666

Token 673: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00023774817236699164
    2. '.' → logprob: -8.500237464904785
    3. 'add' → logprob: -10.375237464904785
    4. ' .' → logprob: -12.875237464904785
    5. '=' → logprob: -15.500237464904785
    6. ',' → logprob: -16.3752384185791
    7. '.=' → logprob: -16.6252384185791
    8. '
' → logprob: -17.3752384185791
    9. ' add' → logprob: -17.3752384185791
    10. '.
' → logprob: -17.5002384185791

Token 674: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.47829899191856384
    2. 'vn' → logprob: -0.9782990217208862
    3. ' vn' → logprob: -6.603299140930176
    4. 'P' → logprob: -6.603299140930176
    5. '(P' → logprob: -6.978299140930176
    6. 'v' → logprob: -7.603299140930176
    7. '(' → logprob: -10.228299140930176
    8. 'VN' → logprob: -11.853299140930176
    9. ' P' → logprob: -12.603299140930176
    10. '(V' → logprob: -12.603299140930176

Token 675: 'n' (ID: 77)
  Prédit: 'vn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vn' → logprob: -0.47504448890686035
    2. 'n' → logprob: -0.9750444889068604
    3. ' vn' → logprob: -7.100044250488281
    4. 'N' → logprob: -9.600044250488281
    5. 'P' → logprob: -10.850044250488281
    6. ')' → logprob: -10.975044250488281
    7. 'VN' → logprob: -11.475044250488281
    8. 'Pn' → logprob: -11.850044250488281
    9. 'v' → logprob: -12.225044250488281
    10. '.vn' → logprob: -12.475044250488281

Token 676: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004138599149882793
    2. ')' → logprob: -5.504138469696045
    3. ')
' → logprob: -10.004138946533203
    4. '       ' → logprob: -11.379138946533203
    5. ')v' → logprob: -13.879138946533203
    6. 'vn' → logprob: -14.004138946533203
    7. ' )
' → logprob: -14.004138946533203
    8. '   ' → logprob: -14.629138946533203
    9. 'v' → logprob: -16.254138946533203
    10. ')

' → logprob: -16.504138946533203

Token 677: '       ' (ID: 309)
  Prédit: 'vn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vn' → logprob: -0.0009956525173038244
    2. '       ' → logprob: -7.375995635986328
    3. '   ' → logprob: -8.375995635986328
    4. ' vn' → logprob: -9.625995635986328
    5. '
' → logprob: -10.250995635986328
    6. 'v' → logprob: -10.750995635986328
    7. 'n' → logprob: -11.875995635986328
    8. '	v' → logprob: -13.375995635986328
    9. ',v' → logprob: -13.375995635986328
    10. 'vq' → logprob: -13.500995635986328

Token 678: ' vn' (ID: 88772)
  Prédit: 'vn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vn' (adapté à ' vn') → logprob: -1.1472419600977446e-06
    2. ' vn' → logprob: -14.375000953674316
    3. 'v' → logprob: -15.000000953674316
    4. '   ' → logprob: -16.375001907348633
    5. '       ' → logprob: -16.500001907348633
    6. 'P' → logprob: -17.500001907348633
    7. 'vq' → logprob: -17.500001907348633
    8. '
' → logprob: -18.250001907348633
    9. 'pn' → logprob: -19.125001907348633
    10. 'von' → logprob: -19.750001907348633

Token 679: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001584850688232109
    2. ' =' → logprob: -8.750158309936523
    3. '=P' → logprob: -16.875158309936523
    4. '.=' → logprob: -19.750158309936523
    5. '=}' → logprob: -21.625158309936523
    6. '+=' → logprob: -22.375158309936523
    7. '*=' → logprob: -22.375158309936523
    8. '＝' → logprob: -22.875158309936523
    9. '_=' → logprob: -23.750158309936523
    10. '=

' → logprob: -23.750158309936523

Token 680: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -5.512236498361744e-07
    2. ' P' → logprob: -14.625000953674316
    3. '	P' → logprob: -21.125
    4. '[P' → logprob: -21.375
    5. '=P' → logprob: -21.5
    6. '   ' → logprob: -21.875
    7. '\P' → logprob: -22.0
    8. 'p' → logprob: -22.125
    9. '"P' → logprob: -22.25
    10. '>P' → logprob: -22.375

Token 681: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.204720582696609e-05
    2. 'vn' → logprob: -9.875052452087402
    3. '\[' → logprob: -16.000051498413086
    4. '[
' → logprob: -16.125051498413086
    5. '[' → logprob: -16.250051498413086
    6. '(v' → logprob: -16.625051498413086
    7. '_v' → logprob: -17.375051498413086
    8. '	v' → logprob: -17.500051498413086
    9. '```' → logprob: -17.500051498413086
    10. 'v' → logprob: -17.500051498413086

Token 682: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009201543871313334
    2. '[n' → logprob: -7.375920295715332
    3. '[' → logprob: -8.375920295715332
    4. '[v' → logprob: -9.875920295715332
    5. 'nv' → logprob: -13.500920295715332
    6. 'vn' → logprob: -13.625920295715332
    7. 'N' → logprob: -13.875920295715332
    8. 'nt' → logprob: -13.875920295715332
    9. 'v' → logprob: -14.125920295715332
    10. 'isted' → logprob: -14.375920295715332

Token 683: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01456572487950325
    2. ')' → logprob: -4.264565944671631
    3. '])' → logprob: -8.514565467834473
    4. ')]' → logprob: -9.514565467834473
    5. ' ]' → logprob: -9.514565467834473
    6. ']+' → logprob: -10.639565467834473
    7. '}' → logprob: -11.389565467834473
    8. '+' → logprob: -12.389565467834473
    9. '']' → logprob: -12.639565467834473
    10. '<|end|>' → logprob: -13.139565467834473

Token 684: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22319793701171875
    2. '   ' → logprob: -1.8481979370117188
    3. '    
' → logprob: -3.3481979370117188
    4. '\n' → logprob: -5.848197937011719
    5. ' 
' → logprob: -6.348197937011719
    6. '  
' → logprob: -6.598197937011719
    7. '<|end|>' → logprob: -7.723197937011719
    8. ' if' → logprob: -8.223197937011719
    9. '   
' → logprob: -8.973197937011719
    10. 'if' → logprob: -8.973197937011719

Token 685: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11826512962579727
    2. '
' → logprob: -2.618265151977539
    3. '    
' → logprob: -3.368265151977539
    4. 'if' (adapté à ' if') → logprob: -6.493265151977539
    5. ' if' → logprob: -6.868265151977539
    6. ' 
' → logprob: -7.243265151977539
    7. '\n' → logprob: -8.118265151977539
    8. 'return' → logprob: -8.868265151977539
    9. '  
' → logprob: -8.993265151977539
    10. '   
' → logprob: -9.993265151977539

Token 686: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10089985281229019
    2. ' len' → logprob: -2.3508999347686768
    3. 'vn' → logprob: -7.350899696350098
    4. ' vn' → logprob: -10.225899696350098
    5. 'visited' → logprob: -11.975899696350098
    6. ' ' → logprob: -12.725899696350098
    7. '(len' → logprob: -12.850899696350098
    8. '	len' → logprob: -13.600899696350098
    9. '   ' → logprob: -14.475899696350098
    10. '  ' → logprob: -15.100899696350098

Token 687: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. 'visited' → logprob: -14.125001907348633
    3. '(vis' → logprob: -14.750001907348633
    4. '(P' → logprob: -14.750001907348633
    5. '(
' → logprob: -15.625001907348633
    6. ' (' → logprob: -15.875001907348633
    7. '(set' → logprob: -16.125001907348633
    8. '(v' → logprob: -16.750001907348633
    9. '(visitor' → logprob: -17.500001907348633
    10. '(S' → logprob: -17.750001907348633

Token 688: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -8.180258191714529e-06
    2. 'P' → logprob: -12.125008583068848
    3. ' visited' → logprob: -13.625008583068848
    4. 'set' → logprob: -13.875008583068848
    5. 'A' → logprob: -14.875008583068848
    6. '(' → logprob: -16.12500762939453
    7. 'visit' → logprob: -17.50000762939453
    8. 'SA' → logprob: -17.87500762939453
    9. 'Visited' → logprob: -17.87500762939453
    10. 'vis' → logprob: -18.87500762939453

Token 689: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6405060887336731
    2. '!=' → logprob: -1.0155060291290283
    3. '<' → logprob: -2.7655060291290283
    4. ' !=' → logprob: -3.1405060291290283
    5. '==' → logprob: -5.640506267547607
    6. ')!=' → logprob: -8.01550579071045
    7. '<len' → logprob: -9.14050579071045
    8. '```' → logprob: -9.39050579071045
    9. ' <' → logprob: -9.51550579071045
    10. ' ==' → logprob: -9.64050579071045

Token 690: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11911977827548981
    2. '<' → logprob: -2.619119882583618
    3. ' !=' → logprob: -3.494119882583618
    4. '==' → logprob: -4.744119644165039
    5. ' ==' → logprob: -9.119119644165039
    6. ' <' → logprob: -9.244119644165039
    7. '<len' → logprob: -9.994119644165039
    8. '<int' → logprob: -10.244119644165039
    9. '=' → logprob: -11.119119644165039
    10. '()!=' → logprob: -11.994119644165039

Token 691: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.941850526549388e-06
    2. ' N' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.000007629394531
    4. 'n' → logprob: -15.000007629394531
    5. 'len' → logprob: -15.500007629394531
    6. '	N' → logprob: -17.37500762939453
    7. '```' → logprob: -18.25000762939453
    8. ' ' → logprob: -18.50000762939453
    9. '  ' → logprob: -19.62500762939453
    10. '
' → logprob: -20.37500762939453

Token 692: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08835276961326599
    2. '==' → logprob: -2.838352680206299
    3. ':
' → logprob: -4.088352680206299
    4. ':return' → logprob: -5.088352680206299
    5. ' ==' → logprob: -6.338352680206299
    6. '   ' → logprob: -6.713352680206299
    7. '       ' → logprob: -10.588353157043457
    8. ' return' → logprob: -10.963353157043457
    9. '=' → logprob: -11.088353157043457
    10. 'return' → logprob: -11.213353157043457

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4619167149066925
    2. '   ' → logprob: -1.0869166851043701
    3. 'return' → logprob: -3.71191668510437
    4. '
' → logprob: -5.461916923522949
    5. ' return' → logprob: -5.586916923522949
    6. '	return' → logprob: -9.21191692352295
    7. ':return' → logprob: -10.33691692352295
    8. ':
' → logprob: -10.46191692352295
    9. ''' → logprob: -10.83691692352295
    10. '```' → logprob: -11.33691692352295

Token 694: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012749963207170367
    2. '   ' → logprob: -6.751275062561035
    3. '       ' → logprob: -9.751275062561035
    4. ' return' → logprob: -10.001275062561035
    5. ''' → logprob: -14.626275062561035
    6. '	return' → logprob: -14.751275062561035
    7. '
' → logprob: -16.00127410888672
    8. '           ' → logprob: -16.12627410888672
    9. '```' → logprob: -16.87627410888672
    10. '`' → logprob: -17.25127410888672

Token 695: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3902033970225602e-05
    2. ' '' → logprob: -11.375014305114746
    3. '"No' → logprob: -13.125014305114746
    4. '   ' → logprob: -15.250014305114746
    5. '	' → logprob: -16.37501335144043
    6. 'No' → logprob: -17.00001335144043
    7. '"' → logprob: -17.87501335144043
    8. ' ' → logprob: -18.00001335144043
    9. '('' → logprob: -19.00001335144043
    10. '`' → logprob: -19.00001335144043

Token 696: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -2.7848862373502925e-05
    2. ''' → logprob: -10.500027656555176
    3. 'Yes' → logprob: -15.500027656555176
    4. 'N' → logprob: -17.000028610229492
    5. '"No' → logprob: -17.250028610229492
    6. ''N' → logprob: -18.750028610229492
    7. ' No' → logprob: -19.000028610229492
    8. '_No' → logprob: -20.625028610229492
    9. 'Nos' → logprob: -21.125028610229492
    10. 'NO' → logprob: -21.250028610229492

Token 697: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06525954604148865
    2. '
' → logprob: -2.9402594566345215
    3. '    
' → logprob: -4.6902594566345215
    4. 'return' → logprob: -6.8152594566345215
    5. '  
' → logprob: -11.56525993347168
    6. '        
' → logprob: -11.69025993347168
    7. ' return' → logprob: -12.06525993347168
    8. ' 
' → logprob: -12.31525993347168
    9. 'else' → logprob: -12.44025993347168
    10. '   
' → logprob: -12.81525993347168

Token 698: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07909753173589706
    2. 'return' → logprob: -2.5790975093841553
    3. '    
' → logprob: -9.329097747802734
    4. '
' → logprob: -9.829097747802734
    5. ' return' → logprob: -10.079097747802734
    6. '	return' → logprob: -11.579097747802734
    7. 'else' → logprob: -11.954097747802734
    8. '```' → logprob: -12.204097747802734
    9. '       ' → logprob: -13.954097747802734
    10. '  
' → logprob: -14.704097747802734

Token 699: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002130633220076561
    2. '   ' → logprob: -6.502130508422852
    3. '
' → logprob: -7.502130508422852
    4. ' return' → logprob: -10.252130508422852
    5. '    
' → logprob: -10.752130508422852
    6. 'else' → logprob: -11.252130508422852
    7. '```' → logprob: -12.502130508422852
    8. '  
' → logprob: -13.502130508422852
    9. '	return' → logprob: -14.002130508422852
    10. '   
' → logprob: -15.752130508422852

Token 700: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5759701132774353
    2. ' '' → logprob: -0.8259701132774353
    3. ' ' → logprob: -10.575969696044922
    4. '"' → logprob: -12.450969696044922
    5. ' ' → logprob: -14.575969696044922
    6. ' "' → logprob: -15.450969696044922
    7. '	' → logprob: -16.200969696044922
    8. '('' → logprob: -16.325969696044922
    9. ''s' → logprob: -16.575969696044922
    10. '`' → logprob: -17.075969696044922

Token 701: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.9361264946837764e-07
    2. ''' → logprob: -16.5
    3. ' Yes' → logprob: -17.5
    4. 'No' → logprob: -21.5
    5. 'Oui' → logprob: -21.5
    6. 'YES' → logprob: -22.125
    7. 'Ye' → logprob: -23.0
    8. 'True' → logprob: -24.875
    9. 'Sure' → logprob: -24.875
    10. '"' → logprob: -25.875

Token 702: ''

' (ID: 7497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 703: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42314761877059937
    2. '<|end|>' → logprob: -1.2981476783752441
    3. '```' → logprob: -3.798147678375244
    4. '#' → logprob: -3.798147678375244
    5. '
' → logprob: -4.673147678375244
    6. ':' → logprob: -5.673147678375244
    7. '\n' → logprob: -5.673147678375244
    8. '(' → logprob: -6.048147678375244
    9. '<|end|>' → logprob: -6.173147678375244
    10. ''' → logprob: -6.798147678375244

Token 704: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5445683002471924
    2. '<|end|>' → logprob: -0.9195683002471924
    3. '```' → logprob: -4.294568061828613
    4. 'def' → logprob: -5.044568061828613
    5. '<|end|>' → logprob: -7.919568061828613
    6. 'import' → logprob: -8.544568061828613
    7. '[' → logprob: -8.794568061828613
    8. '
' → logprob: -9.294568061828613
    9. 'if' → logprob: -10.294568061828613
    10. '...' → logprob: -10.294568061828613

Token 705: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.365333080291748
    2. 'n' → logprob: -1.365333080291748
    3. ' =' → logprob: -1.615333080291748
    4. 't' → logprob: -1.740333080291748
    5. '()' → logprob: -2.740333080291748
    6. 'def' → logprob: -4.365333080291748
    7. 'for' → logprob: -4.865333080291748
    8. 'input' → logprob: -5.365333080291748
    9. '(n' → logprob: -5.365333080291748
    10. 'if' → logprob: -5.990333080291748

Token 706: ' entr' (ID: 7072)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.779384195804596
    2. 'test' → logprob: -2.029384136199951
    3. ' t' → logprob: -2.404384136199951
    4. 'T' → logprob: -2.404384136199951
    5. ' test' → logprob: -2.529384136199951
    6. 'input' → logprob: -2.654384136199951
    7. ' T' → logprob: -3.779384136199951
    8. ' input' → logprob: -4.029384136199951
    9. 'cases' → logprob: -4.779384136199951
    10. 'inputs' → logprob: -5.029384136199951

Token 707: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.3931117653846741
    2. 'ries' → logprob: -2.1431117057800293
    3. 'ees' → logprob: -2.2681117057800293
    4. 'rees' → logprob: -2.7681117057800293
    5. 'r' → logprob: -3.5181117057800293
    6. 'ée' → logprob: -5.643111705780029
    7. 'ies' → logprob: -6.393111705780029
    8. 'ree' → logprob: -6.393111705780029
    9. 'rée' → logprob: -6.393111705780029
    10. '#' → logprob: -6.768111705780029

Token 708: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6614876389503479
    2. '
' → logprob: -0.9114876389503479
    3. 'def' → logprob: -3.661487579345703
    4. 't' → logprob: -3.911487579345703
    5. 'N' → logprob: -4.161487579345703
    6. 'for' → logprob: -5.161487579345703
    7. 'T' → logprob: -5.411487579345703
    8. 'if' → logprob: -6.161487579345703
    9. '\n' → logprob: -6.411487579345703
    10. ' n' → logprob: -6.661487579345703

Token 709: '
' (ID: 198)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.9273899793624878
    2. 't' → logprob: -0.9273899793624878
    3. 'n' → logprob: -1.6773899793624878
    4. 'N' → logprob: -4.177390098571777
    5. 'for' → logprob: -5.302390098571777
    6. 'def' → logprob: -7.427390098571777
    7. ' T' → logprob: -7.802390098571777
    8. 'input' → logprob: -8.302390098571777
    9. 'import' → logprob: -9.302390098571777
    10. 'if' → logprob: -9.677390098571777

Token 710: 'N' (ID: 45)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.48188644647598267
    2. 'T' → logprob: -0.9818864464759827
    3. 'n' → logprob: -5.481886386871338
    4. 'def' → logprob: -5.731886386871338
    5. 'for' → logprob: -8.481886863708496
    6. 'input' → logprob: -9.356886863708496
    7. 'N' → logprob: -10.481886863708496
    8. ' T' → logprob: -10.606886863708496
    9. ' t' → logprob: -11.481886863708496
    10. 'Q' → logprob: -11.606886863708496

Token 711: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19638095796108246
    2. '=' → logprob: -1.8213809728622437
    3. ',' → logprob: -4.196381092071533
    4. '=int' → logprob: -6.571381092071533
    5. ' ,' → logprob: -11.071380615234375
    6. '=input' → logprob: -11.946380615234375
    7. ',int' → logprob: -11.946380615234375
    8. ',n' → logprob: -12.321380615234375
    9. ',N' → logprob: -12.571380615234375
    10. ' ' → logprob: -13.071380615234375

Token 712: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02975071594119072
    2. ' int' → logprob: -3.5297508239746094
    3. ' ' → logprob: -16.27975082397461
    4. '[int' → logprob: -17.40475082397461
    5. '10' → logprob: -17.65475082397461
    6. '	int' → logprob: -17.65475082397461
    7. '(int' → logprob: -17.90475082397461
    8. '<int' → logprob: -17.90475082397461
    9. '=int' → logprob: -17.90475082397461
    10. '0' → logprob: -18.02975082397461

Token 713: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.17866110801696777
    2. '(' → logprob: -1.9286611080169678
    3. '(input' → logprob: -4.678661346435547
    4. '(sys' → logprob: -5.303661346435547
    5. 'read' → logprob: -5.678661346435547
    6. '()' → logprob: -8.053661346435547
    7. ' (' → logprob: -8.553661346435547
    8. 'input' → logprob: -11.053661346435547
    9. '(
' → logprob: -11.178661346435547
    10. ' readline' → logprob: -11.428661346435547

Token 714: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00016766376211307943
    2. '()' → logprob: -9.500167846679688
    3. '())' → logprob: -9.875167846679688
    4. 'ine' → logprob: -10.875167846679688
    5. '().' → logprob: -11.750167846679688
    6. 'lin' → logprob: -12.250167846679688
    7. 'lines' → logprob: -12.375167846679688
    8. 'input' → logprob: -13.250167846679688
    9. '_line' → logprob: -14.125167846679688
    10. 'in' → logprob: -14.375167846679688

Token 715: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.049905676394701004
    2. '()' → logprob: -3.049905776977539
    3. '().' → logprob: -6.674905776977539
    4. ')' → logprob: -10.299905776977539
    5. '())
' → logprob: -11.549905776977539
    6. ' ())' → logprob: -12.174905776977539
    7. '(' → logprob: -12.549905776977539
    8. '()
' → logprob: -13.549905776977539
    9. '();)' → logprob: -14.924905776977539
    10. '())

' → logprob: -15.174905776977539

Token 716: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0002067588793579489
    2. ' A' → logprob: -8.50020694732666
    3. 'for' → logprob: -13.00020694732666
    4. 'B' → logprob: -15.25020694732666
    5. '_A' → logprob: -15.62520694732666
    6. '```' → logprob: -16.250205993652344
    7. 'a' → logprob: -16.500205993652344
    8. '	A' → logprob: -16.750205993652344
    9. ' for' → logprob: -17.250205993652344
    10. ' 
' → logprob: -17.250205993652344

Token 717: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023340050131082535
    2. '=' → logprob: -3.7733399868011475
    3. ',' → logprob: -9.398340225219727
    4. ' =[' → logprob: -11.773340225219727
    5. '[' → logprob: -13.523340225219727
    6. '=[]' → logprob: -14.148340225219727
    7. ' ,' → logprob: -15.023340225219727
    8. '_' → logprob: -15.023340225219727
    9. ' ' → logprob: -15.398340225219727
    10. '=[' → logprob: -15.398340225219727

Token 718: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25463956594467163
    2. ' list' → logprob: -1.5046396255493164
    3. '[list' → logprob: -6.004639625549316
    4. '[' → logprob: -8.504639625549316
    5. ' [' → logprob: -10.379639625549316
    6. '=list' → logprob: -13.879639625549316
    7. '(list' → logprob: -14.004639625549316
    8. '[int' → logprob: -14.129639625549316
    9. 'lis' → logprob: -14.254639625549316
    10. '[]' → logprob: -14.254639625549316

Token 719: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0015081972815096378
    2. '(' → logprob: -6.5015082359313965
    3. '(int' → logprob: -12.876507759094238
    4. '()' → logprob: -12.876507759094238
    5. 'map' → logprob: -14.376507759094238
    6. '(range' → logprob: -16.376508712768555
    7. '(m' → logprob: -16.751508712768555
    8. ' map' → logprob: -17.376508712768555
    9. '(ma' → logprob: -17.376508712768555
    10. '(
' → logprob: -17.751508712768555

Token 720: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00017350474081467837
    2. 'int' → logprob: -8.750173568725586
    3. '(' → logprob: -11.250173568725586
    4. ',int' → logprob: -14.000173568725586
    5. ' int' → logprob: -14.625173568725586
    6. '<int' → logprob: -15.625173568725586
    7. '[int' → logprob: -15.625173568725586
    8. '(
' → logprob: -16.125173568725586
    9. '(in' → logprob: -16.375173568725586
    10. '=int' → logprob: -16.750173568725586

Token 721: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.003120318055152893
    2. ',' → logprob: -5.878120422363281
    3. 'read' → logprob: -8.878120422363281
    4. '(),' → logprob: -9.378120422363281
    5. '(' → logprob: -9.753120422363281
    6. ' ,' → logprob: -11.503120422363281
    7. '(
' → logprob: -12.003120422363281
    8. ' (' → logprob: -12.378120422363281
    9. '.readline' → logprob: -12.503120422363281
    10. ' readline' → logprob: -12.628120422363281

Token 722: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -3.650518920039758e-06
    2. ' readline' → logprob: -12.750003814697266
    3. '(read' → logprob: -14.250003814697266
    4. ' read' → logprob: -16.125003814697266
    5. '.readline' → logprob: -18.000003814697266
    6. '	read' → logprob: -18.500003814697266
    7. 'readonly' → logprob: -20.625003814697266
    8. ' ' → logprob: -21.625003814697266
    9. '_read' → logprob: -21.625003814697266
    10. '.read' → logprob: -22.125003814697266

Token 723: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.47495681833243e-05
    2. '()' → logprob: -10.625024795532227
    3. ' ().' → logprob: -15.750024795532227
    4. '())' → logprob: -16.500024795532227
    5. '(' → logprob: -16.875024795532227
    6. '()))' → logprob: -17.000024795532227
    7. '()
' → logprob: -17.625024795532227
    8. '()?.' → logprob: -18.750024795532227
    9. '().'' → logprob: -19.000024795532227
    10. 'split' → logprob: -19.125024795532227

Token 724: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5807963013648987
    2. 'strip' → logprob: -0.8307963013648987
    3. 'rstrip' → logprob: -5.330796241760254
    4. 'read' → logprob: -12.455796241760254
    5. ' strip' → logprob: -15.205796241760254
    6. ' split' → logprob: -15.330796241760254
    7. '(split' → logprob: -15.705796241760254
    8. 'rs' → logprob: -16.08079719543457
    9. '().' → logprob: -16.45579719543457
    10. '.strip' → logprob: -17.70579719543457

Token 725: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009093358181416988
    2. '()' → logprob: -4.759093284606934
    3. '))' → logprob: -8.009093284606934
    4. '()))
' → logprob: -9.134093284606934
    5. '(' → logprob: -11.009093284606934
    6. '())' → logprob: -11.009093284606934
    7. '()));' → logprob: -13.384093284606934
    8. '(),' → logprob: -13.634093284606934
    9. '()))

' → logprob: -14.009093284606934
    10. '()))
' → logprob: -14.884093284606934

Token 726: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -6.2729995988775045e-06
    2. ' B' → logprob: -12.000006675720215
    3. 'b' → logprob: -17.6250057220459
    4. 'A' → logprob: -19.5000057220459
    5. '```' → logprob: -20.0000057220459
    6. ' 
' → logprob: -20.5000057220459
    7. '`' → logprob: -21.5000057220459
    8. '<|end|>' → logprob: -21.8750057220459
    9. '#' → logprob: -22.7500057220459
    10. ' ' → logprob: -23.0000057220459

Token 727: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. '=list' → logprob: -16.876928329467773
    4. '(' → logprob: -17.126928329467773
    5. ')' → logprob: -17.251928329467773
    6. '＝' → logprob: -17.626928329467773
    7. '()' → logprob: -18.126928329467773
    8. ' ' → logprob: -18.501928329467773
    9. ' ' → logprob: -19.001928329467773
    10. '_' → logprob: -19.001928329467773

Token 728: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.493430894101039e-05
    2. ' list' → logprob: -9.500075340270996
    3. 'map' → logprob: -19.37507438659668
    4. '(list' → logprob: -22.37507438659668
    5. 'List' → logprob: -24.00007438659668
    6. '=list' → logprob: -24.50007438659668
    7. '   ' → logprob: -24.75007438659668
    8. '	list' → logprob: -25.37507438659668
    9. '[list' → logprob: -25.75007438659668
    10. '[' → logprob: -26.87507438659668

Token 729: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007195804500952363
    2. '(int' → logprob: -7.2507195472717285
    3. 'map' → logprob: -12.000720024108887
    4. '(' → logprob: -12.625720024108887
    5. '(list' → logprob: -16.37571907043457
    6. ' map' → logprob: -17.75071907043457
    7. '(
' → logprob: -18.12571907043457
    8. '.map' → logprob: -18.12571907043457
    9. ' (' → logprob: -18.25071907043457
    10. '(m' → logprob: -18.50071907043457

Token 730: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011724866926670074
    2. 'int' → logprob: -6.7511725425720215
    3. '=int' → logprob: -14.001172065734863
    4. '[int' → logprob: -14.126172065734863
    5. '<int' → logprob: -15.376172065734863
    6. ',int' → logprob: -15.501172065734863
    7. '(' → logprob: -15.876172065734863
    8. ' int' → logprob: -16.12617301940918
    9. ']int' → logprob: -17.37617301940918
    10. ':int' → logprob: -17.87617301940918

Token 731: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001698094274615869
    2. 'int' → logprob: -8.75016975402832
    3. '(' → logprob: -11.87516975402832
    4. '=int' → logprob: -13.75016975402832
    5. '[int' → logprob: -13.87516975402832
    6. ',int' → logprob: -13.87516975402832
    7. '<int' → logprob: -14.25016975402832
    8. '(read' → logprob: -15.50016975402832
    9. '(),' → logprob: -16.12516975402832
    10. ' (' → logprob: -16.25016975402832

Token 732: ' readline' (ID: 179561)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00027813989436253905
    2. 'read' → logprob: -8.25027847290039
    3. ' int' → logprob: -11.50027847290039
    4. '(int' → logprob: -12.00027847290039
    5. '[int' → logprob: -15.12527847290039
    6. 'map' → logprob: -15.75027847290039
    7. 'ints' → logprob: -16.25027847290039
    8. 'stdin' → logprob: -17.50027847290039
    9. 'input' → logprob: -17.87527847290039
    10. '<int' → logprob: -18.00027847290039

Token 733: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.319370302458992e-06
    2. '()' → logprob: -12.625005722045898
    3. '()))' → logprob: -13.250005722045898
    4. ' ().' → logprob: -16.2500057220459
    5. '()[' → logprob: -17.1250057220459
    6. '())' → logprob: -18.3750057220459
    7. '()));' → logprob: -18.6250057220459
    8. '())).' → logprob: -19.1250057220459
    9. '.split' → logprob: -19.1250057220459
    10. '))' → logprob: -19.3750057220459

Token 734: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011391390580683947
    2. '().' → logprob: -9.250113487243652
    3. '.split' → logprob: -11.125113487243652
    4. 'strip' → logprob: -13.875113487243652
    5. '(split' → logprob: -14.250113487243652
    6. ' split' → logprob: -14.375113487243652
    7. '))' → logprob: -15.000113487243652
    8. ')' → logprob: -15.500113487243652
    9. '()' → logprob: -16.12511444091797
    10. '))
' → logprob: -16.75011444091797

Token 735: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04895884916186333
    2. '))' → logprob: -3.0489587783813477
    3. '()' → logprob: -8.548958778381348
    4. '())' → logprob: -9.048958778381348
    5. '()))
' → logprob: -9.798958778381348
    6. '(' → logprob: -13.298958778381348
    7. '()));' → logprob: -13.798958778381348
    8. ')' → logprob: -14.423958778381348
    9. '()))

' → logprob: -14.798958778381348
    10. '()))
' → logprob: -15.298958778381348

Token 736: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'result' → logprob: -17.375
    3. '
' → logprob: -17.5
    4. '```' → logprob: -18.875
    5. ' print' → logprob: -20.375
    6. 'pr' → logprob: -20.375
    7. 'prin' → logprob: -21.125
    8. 'for' → logprob: -22.625
    9. 'answer' → logprob: -23.0
    10. '#print' → logprob: -23.125

Token 737: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005542247672565281
    2. 'result' → logprob: -7.500554084777832
    3. 'res' → logprob: -14.000554084777832
    4. 'pr' → logprob: -15.875554084777832
    5. 'answer' → logprob: -16.00055503845215
    6. 'output' → logprob: -16.62555503845215
    7. 'prin' → logprob: -16.62555503845215
    8. 'for' → logprob: -17.50055503845215
    9. ' print' → logprob: -17.62555503845215
    10. 'if' → logprob: -18.87555503845215

Token 738: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.021066591143608093
    2. 'ichage' → logprob: -4.271066665649414
    3. 'iche' → logprob: -5.021066665649414
    4. 'ich' → logprob: -8.396066665649414
    5. 'ic' → logprob: -10.521066665649414
    6. '#' → logprob: -10.771066665649414
    7. 'ichier' → logprob: -12.146066665649414
    8. 'ichert' → logprob: -13.896066665649414
    9. 'iché' → logprob: -14.521066665649414
    10. '```' → logprob: -15.521066665649414

Token 739: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -14.875000953674316
    3. ' print' → logprob: -16.0
    4. '(print' → logprob: -17.875
    5. '
' → logprob: -18.125
    6. 'pr' → logprob: -20.0
    7. '``' → logprob: -20.25
    8. 'prin' → logprob: -21.125
    9. 'result' → logprob: -21.625
    10. '(' → logprob: -22.0

Token 740: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5776860184123507e-06
    2. 'result' → logprob: -13.25000286102295
    3. ' print' → logprob: -14.62500286102295
    4. 'check' → logprob: -15.37500286102295
    5. 'output' → logprob: -16.875001907348633
    6. '(print' → logprob: -17.125001907348633
    7. 'pr' → logprob: -17.625001907348633
    8. 'answer' → logprob: -18.250001907348633
    9. 'println' → logprob: -19.000001907348633
    10. '```' → logprob: -19.750001907348633

Token 741: ' selon' (ID: 27571)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.0
    3. '```' → logprob: -16.875
    4. ' print' → logprob: -18.25
    5. 'result' → logprob: -20.25
    6. 'pr' → logprob: -20.875
    7. '(print' → logprob: -21.0
    8. '#print' → logprob: -21.75
    9. '``' → logprob: -22.375
    10. 'prin' → logprob: -22.625

Token 742: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10032033175230026
    2. 'check' → logprob: -2.350320339202881
    3. '(check' → logprob: -9.350319862365723
    4. ' check' → logprob: -10.975319862365723
    5. ' print' → logprob: -12.100319862365723
    6. '(print' → logprob: -12.600319862365723
    7. '```' → logprob: -14.600319862365723
    8. 'result' → logprob: -15.975319862365723
    9. '   ' → logprob: -16.72532081604004
    10. '
' → logprob: -17.97532081604004

Token 743: ' test' (ID: 1746)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08321187645196915
    2. 'check' → logprob: -2.708211898803711
    3. 'result' → logprob: -4.333211898803711
    4. ' check' → logprob: -10.583211898803711
    5. ' print' → logprob: -11.083211898803711
    6. 'rés' → logprob: -11.833211898803711
    7. ' résultat' → logprob: -12.458211898803711
    8. 'res' → logprob: -13.333211898803711
    9. 'answer' → logprob: -13.583211898803711
    10. 'resultado' → logprob: -13.708211898803711

Token 744: ' sur' (ID: 1512)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -13.875001907348633
    3. '
' → logprob: -14.000001907348633
    4. '(print' → logprob: -16.000001907348633
    5. 'result' → logprob: -16.875001907348633
    6. ' print' → logprob: -17.125001907348633
    7. '``' → logprob: -18.625001907348633
    8. '`
' → logprob: -20.875001907348633
    9. '`' → logprob: -20.875001907348633
    10. '(' → logprob: -20.875001907348633

Token 745: ' A' (ID: 355)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.04358549788594246
    2. 'A' → logprob: -3.1685855388641357
    3. ' check' → logprob: -7.668585300445557
    4. '(check' → logprob: -9.918585777282715
    5. ' A' → logprob: -10.168585777282715
    6. '(A' → logprob: -11.293585777282715
    7. 'B' → logprob: -11.418585777282715
    8. 'print' → logprob: -11.918585777282715
    9. 'result' → logprob: -15.668585777282715
    10. '	check' → logprob: -16.0435848236084

Token 746: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025008674710989
    2. ',' → logprob: -6.377501010894775
    3. '(print' → logprob: -7.252501010894775
    4. '=' → logprob: -10.627500534057617
    5. ' print' → logprob: -10.877500534057617
    6. '(' → logprob: -11.502500534057617
    7. ',
' → logprob: -12.002500534057617
    8. ')' → logprob: -12.127500534057617
    9. ' =' → logprob: -12.127500534057617
    10. '
' → logprob: -12.502500534057617

Token 747: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0024756586644798517
    2. ' B' → logprob: -6.002475738525391
    3. ' ' → logprob: -20.50247573852539
    4. 'b' → logprob: -21.00247573852539
    5. '
' → logprob: -21.37747573852539
    6. '>B' → logprob: -21.75247573852539
    7. '```' → logprob: -21.87747573852539
    8. '"B' → logprob: -22.62747573852539
    9. '(B' → logprob: -22.75247573852539
    10. '	B' → logprob: -22.75247573852539

Token 748: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -14.75
    3. '```' → logprob: -17.0
    4. ' print' → logprob: -19.625
    5. '``' → logprob: -21.625
    6. 'pr' → logprob: -22.5
    7. '(print' → logprob: -22.875
    8. 'result' → logprob: -23.0
    9. '`
' → logprob: -23.625
    10. '`' → logprob: -23.875

Token 749: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.5
    3. '
' → logprob: -20.25
    4. ' print' → logprob: -21.125
    5. 'result' → logprob: -23.125
    6. 'pr' → logprob: -24.125
    7. '``' → logprob: -24.875
    8. 'prin' → logprob: -25.0
    9. '`' → logprob: -26.0
    10. '#print' → logprob: -26.125

Token 750: '(check' (ID: 40506)
  Prédit: '(check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.00015979631280060858
    2. '(' → logprob: -8.750160217285156
    3. '('' → logprob: -14.375160217285156
    4. 'check' → logprob: -15.000160217285156
    5. '((' → logprob: -15.375160217285156
    6. '(f' → logprob: -16.625160217285156
    7. '(call' → logprob: -16.875160217285156
    8. '("("' → logprob: -16.875160217285156
    9. '(Check' → logprob: -17.375160217285156
    10. '(
' → logprob: -17.500160217285156

Token 751: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0009276605560444295
    2. '(' → logprob: -7.000927448272705
    3. ' (' → logprob: -11.125927925109863
    4. '(
' → logprob: -13.750927925109863
    5. ')' → logprob: -15.375927925109863
    6. '((' → logprob: -16.250926971435547
    7. '(`' → logprob: -17.750926971435547
    8. '(

' → logprob: -17.875926971435547
    9. ')(' → logprob: -18.000926971435547
    10. '(B' → logprob: -18.375926971435547

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010545044642640278
    2. ',B' → logprob: -9.250105857849121
    3. ' ,' → logprob: -11.625105857849121
    4. ',
' → logprob: -15.625105857849121
    5. ',b' → logprob: -17.000104904174805
    6. 'B' → logprob: -17.500104904174805
    7. ')' → logprob: -17.625104904174805
    8. '，' → logprob: -18.375104904174805
    9. ' ' → logprob: -18.500104904174805
    10. '',' → logprob: -19.375104904174805

Token 753: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01416350994259119
    2. ' B' → logprob: -4.264163494110107
    3. ' ' → logprob: -20.389163970947266
    4. '	B' → logprob: -20.389163970947266
    5. ' ' → logprob: -20.764163970947266
    6. ')' → logprob: -20.764163970947266
    7. 'b' → logprob: -20.889163970947266
    8. '   ' → logprob: -22.389163970947266
    9. '_B' → logprob: -22.514163970947266
    10. '>B' → logprob: -22.514163970947266

Token 754: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0620013028383255
    2. ')' → logprob: -2.8120012283325195
    3. ',' → logprob: -10.43700122833252
    4. '()))' → logprob: -13.56200122833252
    5. ')))' → logprob: -14.31200122833252
    6. '))
' → logprob: -14.43700122833252
    7. ',B' → logprob: -14.56200122833252
    8. '())' → logprob: -14.81200122833252
    9. ' ))' → logprob: -14.81200122833252
    10. '()' → logprob: -15.56200122833252


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 752
Tokens correctement prédits (1ère position, stricte): 235
Tokens correctement prédits (1ère position, avec adaptation): 256
Tokens correctement prédits (top 10): 525
Précision stricte (1ère position): 31.25%
Précision adaptée (1ère position): 34.04%
Précision (top 10): 69.81%
================================================================================
