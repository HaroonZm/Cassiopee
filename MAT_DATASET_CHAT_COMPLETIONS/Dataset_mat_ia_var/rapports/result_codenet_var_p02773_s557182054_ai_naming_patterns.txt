================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_count = int(input())
string_count_dict = {}
for index in range(input_count):
    input_string = input()
    if input_string not in string_count_dict:
        string_count_dict[input_string] = 1
    else:
        string_count_dict[input_string] += 1

most_frequent_strings = []
maximum_count = max(string_count_dict.values())
for string_key, count_value in string_count_dict.items():
    if count_value == maximum_count:
        most_frequent_strings.append(string_key)

most_frequent_strings.sort()
for string_item in most_frequent_strings:
    print(string_item)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11491064727306366
    2. '0' → logprob: -2.23991060256958
    3. '1' → logprob: -6.73991060256958
    4. ' int' → logprob: -8.614911079406738
    5. ' len' → logprob: -8.739911079406738
    6. '4' → logprob: -9.239911079406738
    7. 'input' → logprob: -9.239911079406738
    8. ' input' → logprob: -9.364911079406738
    9. '10' → logprob: -9.614911079406738
    10. 'int' → logprob: -9.864911079406738

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00030733743915334344
    2. '```' → logprob: -9.375307083129883
    3. '()' → logprob: -9.875307083129883
    4. '('' → logprob: -10.125307083129883
    5. ''' → logprob: -10.250307083129883
    6. '(input' → logprob: -10.875307083129883
    7. '[' → logprob: -11.250307083129883
    8. '("("' → logprob: -11.500307083129883
    9. '`' → logprob: -11.625307083129883
    10. ' (' → logprob: -11.875307083129883

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04423190653324127
    2. ')' → logprob: -3.91923189163208
    3. '()' → logprob: -3.91923189163208
    4. '())' → logprob: -5.79423189163208
    5. '('' → logprob: -9.294232368469238
    6. '(
' → logprob: -9.544232368469238
    7. '(()' → logprob: -9.919232368469238
    8. '(""))' → logprob: -9.919232368469238
    9. '```' → logprob: -10.044232368469238
    10. '("("' → logprob: -10.294232368469238

Token 6: 'string' (ID: 1655)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0326802730560303
    2. 'for' → logprob: -1.4076802730560303
    3. '\n' → logprob: -2.1576802730560303
    4. '+' → logprob: -2.5326802730560303
    5. '```' → logprob: -3.2826802730560303
    6. '*' → logprob: -3.4076802730560303
    7. ')' → logprob: -3.6576802730560303
    8. ' if' → logprob: -3.7826802730560303
    9. ' for' → logprob: -4.282680511474609
    10. '>' → logprob: -4.282680511474609

Token 7: '_count' (ID: 7536)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4744260609149933
    2. '_' → logprob: -1.599426031112671
    3. 's' → logprob: -2.474426031112671
    4. '.' → logprob: -3.474426031112671
    5. '(' → logprob: -3.849426031112671
    6. '()' → logprob: -4.84942626953125
    7. '[]' → logprob: -5.22442626953125
    8. ')' → logprob: -5.47442626953125
    9. '_length' → logprob: -5.97442626953125
    10. '[:]' → logprob: -6.09942626953125

Token 8: '_dict' (ID: 11295)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6345840692520142
    2. '_' → logprob: -0.8845840692520142
    3. ' =' → logprob: -3.3845839500427246
    4. '=' → logprob: -4.384583950042725
    5. '_s' → logprob: -5.259583950042725
    6. '[' → logprob: -6.134583950042725
    7. ' ' → logprob: -7.259583950042725
    8. '[]' → logprob: -7.759583950042725
    9. ' _' → logprob: -8.134584426879883
    10. ')' → logprob: -8.384584426879883

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001588654238730669
    2. '=' → logprob: -7.501588821411133
    3. '.setdefault' → logprob: -7.876588821411133
    4. '[string' → logprob: -8.751588821411133
    5. ' =' → logprob: -8.876588821411133
    6. '[input' → logprob: -9.126588821411133
    7. '\[' → logprob: -9.501588821411133
    8. '['' → logprob: -10.376588821411133
    9. '[]' → logprob: -10.501588821411133
    10. '[token' → logprob: -10.876588821411133

Token 10: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.04867888614535332
    2. ' {}' → logprob: -3.0486788749694824
    3. '{' → logprob: -9.67367935180664
    4. ' ' → logprob: -11.29867935180664
    5. ' defaultdict' → logprob: -11.92367935180664
    6. 'dict' → logprob: -12.17367935180664
    7. ' {' → logprob: -12.79867935180664
    8. ' dict' → logprob: -14.42367935180664
    9. 'default' → logprob: -14.54867935180664
    10. ' ' → logprob: -15.79867935180664

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010313807288184762
    2. '
' → logprob: -7.251031398773193
    3. '\n' → logprob: -9.001030921936035
    4. 'f' → logprob: -9.501030921936035
    5. ' for' → logprob: -9.751030921936035
    6. '```' → logprob: -10.001030921936035
    7. ' 
' → logprob: -12.501030921936035
    8. '' → logprob: -12.501030921936035
    9. '\' → logprob: -12.751030921936035
    10. '`' → logprob: -13.001030921936035

Token 12: ' index' (ID: 3472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017008038237690926
    2. ' i' → logprob: -4.517007827758789
    3. '  ' → logprob: -5.267007827758789
    4. '_' → logprob: -8.142007827758789
    5. ' _' → logprob: -8.767007827758789
    6. ' item' → logprob: -9.392007827758789
    7. ' token' → logprob: -9.392007827758789
    8. ' ‌' → logprob: -10.142007827758789
    9. ' input' → logprob: -10.642007827758789
    10. 'i' → logprob: -10.892007827758789

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.041730184108018875
    2. 'in' → logprob: -3.4167301654815674
    3. '[' → logprob: -5.0417304039001465
    4. ' ' → logprob: -7.4167304039001465
    5. '_' → logprob: -8.541729927062988
    6. '```' → logprob: -8.666729927062988
    7. '[in' → logprob: -9.166729927062988
    8. ',' → logprob: -9.416729927062988
    9. '<|end|>' → logprob: -10.041729927062988
    10. '[]' → logprob: -10.166729927062988

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06197037547826767
    2. 'range' → logprob: -2.8119704723358154
    3. '	range' → logprob: -13.686970710754395
    4. '(range' → logprob: -14.686970710754395
    5. ' input' → logprob: -14.811970710754395
    6. ' ' → logprob: -14.811970710754395
    7. '```' → logprob: -15.936970710754395
    8. ' in' → logprob: -16.186969757080078
    9. '_range' → logprob: -16.811969757080078
    10. ')' → logprob: -16.936969757080078

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4743676781654358
    2. '(input' → logprob: -0.9743676781654358
    3. '(len' → logprob: -8.84936809539795
    4. ' (' → logprob: -9.09936809539795
    5. '(in' → logprob: -11.34936809539795
    6. '(
' → logprob: -11.59936809539795
    7. '(n' → logprob: -12.09936809539795
    8. 'input' → logprob: -13.47436809539795
    9. '(

' → logprob: -13.47436809539795
    10. '(length' → logprob: -13.72436809539795

Token 16: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -14.000001907348633
    3. '_c' → logprob: -14.375001907348633
    4. '_counts' → logprob: -15.125001907348633
    5. ')' → logprob: -15.500001907348633
    6. ')_' → logprob: -16.750001907348633
    7. '```' → logprob: -16.875001907348633
    8. '_)' → logprob: -17.125001907348633
    9. '_COUNT' → logprob: -17.625001907348633
    10. '_length' → logprob: -18.250001907348633

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00859022606164217
    2. '+' → logprob: -5.133590221405029
    3. ')' → logprob: -6.133590221405029
    4. ' ):' → logprob: -8.258590698242188
    5. '):
' → logprob: -9.508590698242188
    6. ':' → logprob: -9.508590698242188
    7. ' +' → logprob: -10.008590698242188
    8. '   ' → logprob: -11.383590698242188
    9. '+:' → logprob: -12.008590698242188
    10. ' ' → logprob: -12.258590698242188

Token 18: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6879520416259766
    2. '    ' → logprob: -0.9379520416259766
    3. '   ' → logprob: -3.0629520416259766
    4. ' string' → logprob: -3.5629520416259766
    5. ' input' → logprob: -4.562952041625977
    6. '     
' → logprob: -4.562952041625977
    7. 'input' → logprob: -6.437952041625977
    8. ' s' → logprob: -6.687952041625977
    9. '  ' → logprob: -6.812952041625977
    10. 'string' → logprob: -7.062952041625977

Token 19: ' input' (ID: 3422)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.6935326457023621
    2. ' ' → logprob: -1.4435327053070068
    3. '    ' → logprob: -2.068532705307007
    4. ' input' → logprob: -2.318532705307007
    5. '   ' → logprob: -4.693532466888428
    6. ' )' → logprob: -4.943532466888428
    7. 'input' (adapté à ' input') → logprob: -5.193532466888428
    8. 'string' → logprob: -5.443532466888428
    9. ' s' → logprob: -5.943532466888428
    10. '     
' → logprob: -6.568532466888428

Token 20: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.6555250883102417
    2. '_' → logprob: -1.4055250883102417
    3. '_line' → logprob: -2.0305252075195312
    4. '_str' → logprob: -2.4055252075195312
    5. '_text' → logprob: -4.530525207519531
    6. '()' → logprob: -7.280525207519531
    7. '_data' → logprob: -7.405525207519531
    8. 's' → logprob: -7.780525207519531
    9. '_value' → logprob: -7.780525207519531
    10. '_s' → logprob: -8.530525207519531

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16104276478290558
    2. '=' → logprob: -1.9110428094863892
    3. '[' → logprob: -8.161043167114258
    4. ' ' → logprob: -8.661043167114258
    5. '_' → logprob: -9.411043167114258
    6. 's' → logprob: -9.786043167114258
    7. '_tokens' → logprob: -9.911043167114258
    8. '```' → logprob: -10.536043167114258
    9. '()' → logprob: -10.786043167114258
    10. '   ' → logprob: -10.911043167114258

Token 22: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.026313764974474907
    2. 'input' → logprob: -3.6513137817382812
    3. '=input' → logprob: -12.401313781738281
    4. '(input' → logprob: -12.526313781738281
    5. ' str' → logprob: -13.026313781738281
    6. ' ' → logprob: -13.651313781738281
    7. 'str' → logprob: -14.901313781738281
    8. '	input' → logprob: -15.026313781738281
    9. ' ' → logprob: -15.026313781738281
    10. '   ' → logprob: -15.838813781738281

Token 23: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00019018957391381264
    2. '())' → logprob: -8.875189781188965
    3. '().' → logprob: -11.000189781188965
    4. ')' → logprob: -11.750189781188965
    5. '```' → logprob: -12.125189781188965
    6. '`()' → logprob: -12.375189781188965
    7. '()`' → logprob: -12.625189781188965
    8. '()]' → logprob: -12.750189781188965
    9. '(' → logprob: -12.875189781188965
    10. '_string' → logprob: -13.500189781188965

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016655333340168
    2. '
' → logprob: -5.141655445098877
    3. '    
' → logprob: -5.641655445098877
    4. ' if' → logprob: -5.891655445098877
    5. '<|end|>' → logprob: -6.391655445098877
    6. '  
' → logprob: -7.516655445098877
    7. '   
' → logprob: -8.016654968261719
    8. ' ' → logprob: -8.016654968261719
    9. ' 
' → logprob: -8.141654968261719
    10. 'if' → logprob: -8.266654968261719

Token 25: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6103167533874512
    2. '   ' → logprob: -1.1103167533874512
    3. 'if' (adapté à ' if') → logprob: -2.110316753387451
    4. 'string' → logprob: -5.860316753387451
    5. ' string' → logprob: -6.860316753387451
    6. ' ' → logprob: -7.360316753387451
    7. '    
' → logprob: -7.735316753387451
    8. '    ' → logprob: -7.985316753387451
    9. '```' → logprob: -7.985316753387451
    10. '  ' → logprob: -9.48531723022461

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.020573072135448456
    2. 'input' → logprob: -3.895573139190674
    3. ' not' → logprob: -10.770572662353516
    4. ' ' → logprob: -12.395572662353516
    5. ' ' → logprob: -13.645572662353516
    6. ' in' → logprob: -13.645572662353516
    7. '_input' → logprob: -13.895572662353516
    8. '(input' → logprob: -14.270572662353516
    9. '"' → logprob: -14.770572662353516
    10. ' (' → logprob: -15.145572662353516

Token 27: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -3.047134305234067e-05
    2. '_' → logprob: -10.625030517578125
    3. '_strings' → logprob: -12.375030517578125
    4. 'string' → logprob: -14.500030517578125
    5. 'String' → logprob: -14.625030517578125
    6. '_str' → logprob: -15.000030517578125
    7. '_s' → logprob: -15.750030517578125
    8. '_STRING' → logprob: -16.375030517578125
    9. '```' → logprob: -16.375030517578125
    10. '_String' → logprob: -17.125030517578125

Token 28: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05008688196539879
    2. ' not' → logprob: -3.5500869750976562
    3. 'in' → logprob: -3.9250869750976562
    4. 'not' → logprob: -7.925086975097656
    5. ' ' → logprob: -10.550086975097656
    6. ')' → logprob: -14.800086975097656
    7. '<|end|>' → logprob: -14.800086975097656
    8. '   ' → logprob: -15.050086975097656
    9. ' n' → logprob: -15.550086975097656
    10. '	in' → logprob: -15.800086975097656

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15070906281471252
    2. 'in' → logprob: -2.0257091522216797
    3. '<|end|>' → logprob: -5.15070915222168
    4. '_' → logprob: -8.02570915222168
    5. '<|end|>' → logprob: -8.15070915222168
    6. ')' → logprob: -8.40070915222168
    7. ' string' → logprob: -8.77570915222168
    8. '   ' → logprob: -8.90070915222168
    9. '    ' → logprob: -9.15070915222168
    10. 'string' → logprob: -9.27570915222168

Token 30: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.693147599697113
    2. 'string' → logprob: -0.693147599697113
    3. ' ' → logprob: -16.443147659301758
    4. '<string' → logprob: -16.818147659301758
    5. '_string' → logprob: -16.818147659301758
    6. '(string' → logprob: -17.068147659301758
    7. '	string' → logprob: -17.318147659301758
    8. '[string' → logprob: -17.443147659301758
    9. 'String' → logprob: -17.568147659301758
    10. 'tring' → logprob: -18.193147659301758

Token 31: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.226628895296017e-06
    2. '_counts' → logprob: -12.000007629394531
    3. ' _' → logprob: -15.375007629394531
    4. '_' → logprob: -15.625007629394531
    5. '_c' → logprob: -16.25000762939453
    6. '_to' → logprob: -16.25000762939453
    7. '_counter' → logprob: -16.62500762939453
    8. '}_' → logprob: -16.87500762939453
    9. ')_' → logprob: -16.87500762939453
    10. '_string' → logprob: -17.25000762939453

Token 32: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -9.960946772480384e-05
    2. '_d' → logprob: -10.375099182128906
    3. '_dic' → logprob: -10.500099182128906
    4. 's' → logprob: -10.625099182128906
    5. '_' → logprob: -11.625099182128906
    6. '```' → logprob: -13.500099182128906
    7. '_dictionary' → logprob: -13.750099182128906
    8. ' _' → logprob: -14.250099182128906
    9. '_s' → logprob: -14.375099182128906
    10. '_df' → logprob: -14.375099182128906

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.3120038501219824e-05
    2. ':
' → logprob: -10.375053405761719
    3. ']:' → logprob: -11.250053405761719
    4. '):' → logprob: -12.750053405761719
    5. ' :' → logprob: -12.875053405761719
    6. '=' → logprob: -14.125053405761719
    7. '   ' → logprob: -14.125053405761719
    8. '[' → logprob: -14.625053405761719
    9. ']' → logprob: -14.750053405761719
    10. '：' → logprob: -16.00005340576172

Token 34: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007369395345449448
    2. '       ' → logprob: -5.257369518280029
    3. ' :' → logprob: -7.007369518280029
    4. '   ' → logprob: -7.382369518280029
    5. '=' → logprob: -8.007369041442871
    6. ' =' → logprob: -8.882369041442871
    7. '):' → logprob: -10.257369041442871
    8. '[' → logprob: -10.382369041442871
    9. ':
' → logprob: -11.007369041442871
    10. '    ' → logprob: -11.382369041442871

Token 35: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.5208499431610107
    2. 'string' (adapté à ' string') → logprob: -1.0208499431610107
    3. '   ' → logprob: -3.2708499431610107
    4. '       ' → logprob: -5.64585018157959
    5. '           ' → logprob: -6.02085018157959
    6. '    ' → logprob: -7.77085018157959
    7. '[string' → logprob: -7.89585018157959
    8. ' ' → logprob: -8.39585018157959
    9. '```' → logprob: -8.64585018157959
    10. '	string' → logprob: -9.27085018157959

Token 36: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.384836888173595e-05
    2. '_string' → logprob: -10.6250638961792
    3. '_counts' → logprob: -10.8750638961792
    4. '_' → logprob: -11.5000638961792
    5. '```' → logprob: -13.6250638961792
    6. '_counter' → logprob: -14.0000638961792
    7. '"_' → logprob: -14.1250638961792
    8. '}_' → logprob: -14.3750638961792
    9. ']_' → logprob: -14.5000638961792
    10. '##_' → logprob: -14.5000638961792

Token 37: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -2.339278580620885e-06
    2. 'dict' → logprob: -14.000001907348633
    3. '_' → logprob: -14.375001907348633
    4. 's' → logprob: -15.375001907348633
    5. '_DICT' → logprob: -16.000001907348633
    6. '[' → logprob: -16.250001907348633
    7. 'Dict' → logprob: -16.500001907348633
    8. '_d' → logprob: -16.625001907348633
    9. '```' → logprob: -17.375001907348633
    10. '_count' → logprob: -17.375001907348633

Token 38: '[input' (ID: 157156)
  Prédit: '[input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.00043162284418940544
    2. '[' → logprob: -7.750431537628174
    3. '[string' → logprob: -14.625432014465332
    4. ' [' → logprob: -15.250432014465332
    5. '[in' → logprob: -16.125431060791016
    6. '\[' → logprob: -16.875431060791016
    7. '[data' → logprob: -17.875431060791016
    8. '[token' → logprob: -18.000431060791016
    9. '```' → logprob: -18.125431060791016
    10. '[index' → logprob: -18.875431060791016

Token 39: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -2.3199920178740285e-05
    2. '_' → logprob: -10.875022888183594
    3. ')_' → logprob: -14.125022888183594
    4. '_str' → logprob: -14.375022888183594
    5. '_String' → logprob: -14.375022888183594
    6. ' _' → logprob: -14.750022888183594
    7. '_strings' → logprob: -14.875022888183594
    8. '```' → logprob: -15.000022888183594
    9. '_STRING' → logprob: -15.125022888183594
    10. '__' → logprob: -15.500022888183594

Token 40: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005282496102154255
    2. ' ]' → logprob: -5.380282402038574
    3. ']=' → logprob: -7.380282402038574
    4. ' =' → logprob: -10.505282402038574
    5. '=' → logprob: -11.755282402038574
    6. '"]' → logprob: -13.505282402038574
    7. '']' → logprob: -13.630282402038574
    8. ']+=' → logprob: -14.755282402038574
    9. ')' → logprob: -16.63028335571289
    10. '']=' → logprob: -16.88028335571289

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269378662109375
    2. '=' → logprob: -2.1269378662109375
    3. ']' → logprob: -12.126937866210938
    4. ' +=' → logprob: -13.376937866210938
    5. '[' → logprob: -14.501937866210938
    6. '<|end|>' → logprob: -14.876937866210938
    7. ' ' → logprob: -15.001937866210938
    8. ']=' → logprob: -15.126937866210938
    9. ' =
' → logprob: -15.251937866210938
    10. ')' → logprob: -15.251937866210938

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005318781826645136
    2. ' ' → logprob: -5.255318641662598
    3. '0' → logprob: -9.380318641662598
    4. '   ' → logprob: -15.130318641662598
    5. ' ' → logprob: -16.192819595336914
    6. '```' → logprob: -17.255319595336914
    7. '`' → logprob: -17.630319595336914
    8. 'int' → logprob: -18.005319595336914
    9. '１' → logprob: -18.630319595336914
    10. '' → logprob: -18.692819595336914

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030281138606369495
    2. ' ' → logprob: -8.125303268432617
    3. '0' → logprob: -12.000303268432617
    4. '   ' → logprob: -14.500303268432617
    5. '```' → logprob: -18.125303268432617
    6. '`' → logprob: -18.937803268432617
    7. '       ' → logprob: -19.187803268432617
    8. '    ' → logprob: -19.437803268432617
    9. ' ' → logprob: -19.437803268432617
    10. '  ' → logprob: -19.562803268432617

Token 44: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3509630262851715
    2. '   ' → logprob: -1.8509629964828491
    3. ' else' → logprob: -1.9759629964828491
    4. '	else' → logprob: -8.47596263885498
    5. '    
' → logprob: -10.60096263885498
    6. '```' → logprob: -11.60096263885498
    7. 'e' → logprob: -11.85096263885498
    8. ' ' → logprob: -11.97596263885498
    9. '_else' → logprob: -11.97596263885498
    10. '  ' → logprob: -13.10096263885498

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6626462340354919
    2. 'else' → logprob: -0.7876462340354919
    3. ' else' → logprob: -3.5376462936401367
    4. '	else' → logprob: -8.162646293640137
    5. '    
' → logprob: -9.162646293640137
    6. '       ' → logprob: -9.537646293640137
    7. '```' → logprob: -11.287646293640137
    8. '_else' → logprob: -11.537646293640137
    9. '<|end|>' → logprob: -11.662646293640137
    10. '   ' → logprob: -12.662646293640137

Token 46: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03207387775182724
    2. ' else' → logprob: -4.032073974609375
    3. '   ' → logprob: -4.282073974609375
    4. '	else' → logprob: -11.532073974609375
    5. '```' → logprob: -13.282073974609375
    6. ' ' → logprob: -13.782073974609375
    7. '_else' → logprob: -14.907073974609375
    8. '       ' → logprob: -15.782073974609375
    9. 'elif' → logprob: -16.032073974609375
    10. '    
' → logprob: -16.157073974609375

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09397942572832108
    2. '       ' → logprob: -2.9689793586730957
    3. '    ' → logprob: -4.093979358673096
    4. ' :' → logprob: -5.093979358673096
    5. '   ' → logprob: -5.343979358673096
    6. '<|end|>' → logprob: -5.718979358673096
    7. '        ' → logprob: -6.343979358673096
    8. ' +=' → logprob: -6.718979358673096
    9. '[' → logprob: -7.468979358673096
    10. '=' → logprob: -7.468979358673096

Token 48: '       ' (ID: 309)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.6559298038482666
    2. 'string' → logprob: -1.1559298038482666
    3. '       ' → logprob: -2.6559298038482666
    4. '    ' → logprob: -2.9059298038482666
    5. '1' → logprob: -4.5309295654296875
    6. '   ' → logprob: -4.7809295654296875
    7. '+' → logprob: -4.9059295654296875
    8. '        ' → logprob: -5.4059295654296875
    9. ' ' → logprob: -5.4059295654296875
    10. ' ' → logprob: -7.0309295654296875

Token 49: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.42851731181144714
    2. 'string' (adapté à ' string') → logprob: -1.3035173416137695
    3. ' ' → logprob: -2.6785173416137695
    4. '    ' → logprob: -5.9285173416137695
    5. '<|end|>' → logprob: -5.9285173416137695
    6. '1' → logprob: -6.8035173416137695
    7. ' ' → logprob: -7.9285173416137695
    8. '_string' → logprob: -8.55351734161377
    9. ' )' → logprob: -8.55351734161377
    10. 's' → logprob: -8.55351734161377

Token 50: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.6240566083070007e-06
    2. '_string' → logprob: -14.750001907348633
    3. '_counts' → logprob: -14.875001907348633
    4. '```' → logprob: -15.000001907348633
    5. ''_' → logprob: -16.500001907348633
    6. '_' → logprob: -16.625001907348633
    7. '"_' → logprob: -16.875001907348633
    8. '\' → logprob: -17.125001907348633
    9. ')_' → logprob: -17.250001907348633
    10. '##_' → logprob: -17.500001907348633

Token 51: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0004236435634084046
    2. '_count' → logprob: -7.875423431396484
    3. '_string' → logprob: -10.125423431396484
    4. '_counts' → logprob: -13.375423431396484
    5. '```' → logprob: -14.875423431396484
    6. '_strings' → logprob: -15.000423431396484
    7. '[string' → logprob: -15.500423431396484
    8. '_DICT' → logprob: -15.875423431396484
    9. '_d' → logprob: -16.000423431396484
    10. '_str' → logprob: -16.000423431396484

Token 52: '[input' (ID: 157156)
  Prédit: '[input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -9.198043699143454e-05
    2. '[' → logprob: -9.875091552734375
    3. '[string' → logprob: -10.125091552734375
    4. '[in' → logprob: -16.125091552734375
    5. '```' → logprob: -16.250091552734375
    6. '[String' → logprob: -16.500091552734375
    7. '[...]' → logprob: -17.000091552734375
    8. '[str' → logprob: -17.500091552734375
    9. ' [' → logprob: -17.750091552734375
    10. '[
' → logprob: -17.875091552734375

Token 53: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -2.696889623621246e-06
    2. 'string' → logprob: -13.50000286102295
    3. '_strings' → logprob: -14.50000286102295
    4. 'String' → logprob: -14.87500286102295
    5. '```' → logprob: -15.75000286102295
    6. '_STRING' → logprob: -16.000001907348633
    7. '_' → logprob: -16.625001907348633
    8. '_String' → logprob: -16.750001907348633
    9. '[string' → logprob: -16.875001907348633
    10. '_count' → logprob: -17.250001907348633

Token 54: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08040442317724228
    2. ' +=' → logprob: -3.33040452003479
    3. '+=' → logprob: -3.83040452003479
    4. ' +' → logprob: -3.95540452003479
    5. ')' → logprob: -8.455404281616211
    6. ']+=' → logprob: -8.580404281616211
    7. ')+' → logprob: -9.330404281616211
    8. ']' → logprob: -9.330404281616211
    9. ']+' → logprob: -10.330404281616211
    10. '<|end|>' → logprob: -11.830404281616211

Token 55: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5764666795730591
    2. ' +=' → logprob: -0.8264666795730591
    3. '=' → logprob: -7.7014665603637695
    4. '+' → logprob: -10.57646656036377
    5. ']+=' → logprob: -10.95146656036377
    6. ' =' → logprob: -11.32646656036377
    7. '[' → logprob: -12.32646656036377
    8. '   ' → logprob: -12.32646656036377
    9. '+='' → logprob: -12.32646656036377
    10. '    ' → logprob: -13.20146656036377

Token 56: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759395956993103
    2. ' ' → logprob: -0.8259395956993103
    3. ' ' → logprob: -15.950939178466797
    4. '```' → logprob: -17.200939178466797
    5. '   ' → logprob: -17.575939178466797
    6. '0' → logprob: -18.825939178466797
    7. '`' → logprob: -19.513439178466797
    8. ' `' → logprob: -19.763439178466797
    9. '2' → logprob: -19.950939178466797
    10. '１' → logprob: -20.013439178466797

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -18.62500762939453
    4. '   ' → logprob: -19.12500762939453
    5. '１' → logprob: -20.87500762939453
    6. '`' → logprob: -21.37500762939453
    7. '۱' → logprob: -22.06250762939453
    8. '  ' → logprob: -22.18750762939453
    9. '       ' → logprob: -22.25000762939453
    10. '१' → logprob: -22.50000762939453

Token 58: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6339759230613708
    2. 'for' → logprob: -1.6339759826660156
    3. 'max' → logprob: -2.2589759826660156
    4. 'print' → logprob: -2.8839759826660156
    5. 'result' → logprob: -3.3839759826660156
    6. '\n' → logprob: -4.133975982666016
    7. '#' → logprob: -4.383975982666016
    8. 'output' → logprob: -4.633975982666016
    9. '<|end|>' → logprob: -4.758975982666016
    10. '  
' → logprob: -5.008975982666016

Token 59: 'most' (ID: 5309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08337277919054031
    2. 'for' → logprob: -3.9583728313446045
    3. 'most' → logprob: -4.208372592926025
    4. 'm' → logprob: -4.333372592926025
    5. 'result' → logprob: -4.458372592926025
    6. 'print' → logprob: -5.333372592926025
    7. '
' → logprob: -5.458372592926025
    8. '#' → logprob: -5.708372592926025
    9. 'sorted' → logprob: -5.958372592926025
    10. 'maximum' → logprob: -6.708372592926025

Token 60: '_f' (ID: 1337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005717485677450895
    2. '_common' → logprob: -5.2557172775268555
    3. '_f' → logprob: -8.755717277526855
    4. '_oc' → logprob: -9.505717277526855
    5. '_occ' → logprob: -10.630717277526855
    6. '_string' → logprob: -10.755717277526855
    7. '_space' → logprob: -10.880717277526855
    8. ' _' → logprob: -11.005717277526855
    9. '_key' → logprob: -11.005717277526855
    10. '_freq' → logprob: -11.130717277526855

Token 61: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -0.1162254810333252
    2. 'req' → logprob: -2.241225481033325
    3. 'requency' → logprob: -6.116225242614746
    4. 'requ' → logprob: -7.116225242614746
    5. 're' → logprob: -8.991225242614746
    6. 'requently' → logprob: -9.241225242614746
    7. 'request' → logprob: -10.116225242614746
    8. 'irst' → logprob: -10.991225242614746
    9. 'inal' → logprob: -11.116225242614746
    10. 'or' → logprob: -11.241225242614746

Token 62: '_strings' (ID: 87251)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023749446496367455
    2. '_string' → logprob: -3.773749351501465
    3. '_strings' → logprob: -9.273749351501465
    4. '_key' → logprob: -9.773749351501465
    5. '_str' → logprob: -10.023749351501465
    6. '_word' → logprob: -10.273749351501465
    7. '_token' → logprob: -10.273749351501465
    8. '_a' → logprob: -10.648749351501465
    9. '_s' → logprob: -10.773749351501465
    10. '_name' → logprob: -10.898749351501465

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030382659286260605
    2. '_' → logprob: -4.1553826332092285
    3. '=' → logprob: -4.2803826332092285
    4. '.' → logprob: -9.280383110046387
    5. '_space' → logprob: -10.280383110046387
    6. '[' → logprob: -10.280383110046387
    7. ',' → logprob: -10.405383110046387
    8. '(' → logprob: -10.530383110046387
    9. '_items' → logprob: -10.530383110046387
    10. ' ' → logprob: -10.655383110046387

Token 64: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.0103784799575806
    2. ' [' → logprob: -1.3853784799575806
    3. '[max' → logprob: -2.010378360748291
    4. '[' → logprob: -2.260378360748291
    5. '[]' → logprob: -2.635378360748291
    6. ' {' → logprob: -3.635378360748291
    7. '{' → logprob: -3.760378360748291
    8. ' sorted' → logprob: -4.510378360748291
    9. '{}' → logprob: -5.385378360748291
    10. '[key' → logprob: -5.635378360748291

Token 65: 'maximum' (ID: 78601)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.012335642240941525
    2. ' max' → logprob: -4.512335777282715
    3. 'maximum' → logprob: -7.512335777282715
    4. 'highest' → logprob: -8.387335777282715
    5. 'most' → logprob: -8.512335777282715
    6. '_max' → logprob: -8.887335777282715
    7. 'for' → logprob: -10.262335777282715
    8. 'count' → logprob: -10.512335777282715
    9. ' maximum' → logprob: -10.637335777282715
    10. 'current' → logprob: -10.887335777282715

Token 66: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.05797109380364418
    2. '_' → logprob: -2.9329710006713867
    3. '_frequency' → logprob: -6.432971000671387
    4. '_value' → logprob: -6.807971000671387
    5. '_counts' → logprob: -9.307971000671387
    6. ' =' → logprob: -9.432971000671387
    7. '_space' → logprob: -10.057971000671387
    8. '=' → logprob: -10.182971000671387
    9. '_occ' → logprob: -10.307971000671387
    10. '_freq' → logprob: -10.307971000671387

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023249903693795204
    2. '=' → logprob: -3.773249864578247
    3. '_' → logprob: -13.023249626159668
    4. ' ' → logprob: -13.648249626159668
    5. ' =
' → logprob: -14.898249626159668
    6. '_space' → logprob: -15.273249626159668
    7. ' ==' → logprob: -15.773249626159668
    8. 'space' → logprob: -16.648250579833984
    9. '=int' → logprob: -17.148250579833984
    10. ' ' → logprob: -17.398250579833984

Token 68: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27268895506858826
    2. ' ' → logprob: -1.8976889848709106
    3. ' max' → logprob: -2.647688865661621
    4. 'max' → logprob: -4.022688865661621
    5. ' -' → logprob: -10.397688865661621
    6. '-' → logprob: -13.022688865661621
    7. '1' → logprob: -13.897688865661621
    8. '   ' → logprob: -14.272688865661621
    9. '(max' → logprob: -14.522688865661621
    10. ' ' → logprob: -15.022688865661621

Token 69: '(string' (ID: 8003)
  Prédit: '(string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(string' → logprob: -0.00671809446066618
    2. '(' → logprob: -5.006718158721924
    3. 'string' → logprob: -13.381717681884766
    4. '(
' → logprob: -14.506717681884766
    5. '(strings' → logprob: -15.256717681884766
    6. ' (' → logprob: -15.631717681884766
    7. '(list' → logprob: -15.881717681884766
    8. ' string' → logprob: -15.881717681884766
    9. '(object' → logprob: -17.256717681884766
    10. '(s' → logprob: -17.381717681884766

Token 70: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00010402000043541193
    2. '_string' → logprob: -9.375103950500488
    3. '_' → logprob: -12.250103950500488
    4. '_counts' → logprob: -12.250103950500488
    5. 'string' → logprob: -13.250103950500488
    6. ')_' → logprob: -13.750103950500488
    7. '```' → logprob: -13.750103950500488
    8. '_strings' → logprob: -14.000103950500488
    9. '_counter' → logprob: -14.125103950500488
    10. ')' → logprob: -14.375103950500488

Token 71: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.00019364648323971778
    2. 'dict' → logprob: -8.62519359588623
    3. 'string' → logprob: -11.62519359588623
    4. '_string' → logprob: -13.25019359588623
    5. ')' → logprob: -13.75019359588623
    6. '_str' → logprob: -14.50019359588623
    7. '_strings' → logprob: -14.62519359588623
    8. 's' → logprob: -15.50019359588623
    9. '_' → logprob: -15.75019359588623
    10. '_dic' → logprob: -16.000194549560547

Token 72: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0019397038267925382
    2. '.' → logprob: -6.25193977355957
    3. 'values' → logprob: -12.25193977355957
    4. '.value' → logprob: -13.12693977355957
    5. ' .' → logprob: -13.37693977355957
    6. ').' → logprob: -14.12693977355957
    7. '.Values' → logprob: -14.12693977355957
    8. ' values' → logprob: -14.25193977355957
    9. ')' → logprob: -14.25193977355957
    10. '().' → logprob: -17.62693977355957

Token 73: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06218458339571953
    2. '()' → logprob: -2.8121845722198486
    3. ')' → logprob: -8.56218433380127
    4. ' ())' → logprob: -11.18718433380127
    5. '()]' → logprob: -12.68718433380127
    6. '(),' → logprob: -13.06218433380127
    7. '())
' → logprob: -13.43718433380127
    8. '(' → logprob: -13.81218433380127
    9. '()))' → logprob: -13.93718433380127
    10. '()
' → logprob: -14.31218433380127

Token 74: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06765443831682205
    2. '
' → logprob: -2.8176543712615967
    3. ' for' → logprob: -5.192654609680176
    4. '<|end|>' → logprob: -10.067654609680176
    5. ' 
' → logprob: -10.317654609680176
    6. '  
' → logprob: -11.442654609680176
    7. '

' → logprob: -11.567654609680176
    8. '```' → logprob: -11.942654609680176
    9. '\n' → logprob: -12.067654609680176
    10. '
' → logprob: -13.192654609680176

Token 75: ' string' (ID: 1621)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.07540560513734818
    2. ' string' → logprob: -3.2004055976867676
    3. 'key' → logprob: -4.075405597686768
    4. 'string' → logprob: -4.325405597686768
    5. ' input' → logprob: -7.200405597686768
    6. ' s' → logprob: -7.325405597686768
    7. 'input' → logprob: -9.075406074523926
    8. 's' → logprob: -9.825406074523926
    9. ' ' → logprob: -10.575406074523926
    10. ' k' → logprob: -10.950406074523926

Token 76: '_key' (ID: 6724)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030105771496891975
    2. ',' → logprob: -4.0301055908203125
    3. '_' → logprob: -4.9051055908203125
    4. 'in' → logprob: -5.9051055908203125
    5. ' ' → logprob: -7.1551055908203125
    6. ' ,' → logprob: -7.7801055908203125
    7. '_in' → logprob: -8.280105590820312
    8. 's' → logprob: -9.780105590820312
    9. ' _' → logprob: -9.905105590820312
    10. '	in' → logprob: -9.905105590820312

Token 77: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014129536226391792
    2. 'in' → logprob: -4.514129638671875
    3. ',' → logprob: -6.639129638671875
    4. ' ' → logprob: -6.639129638671875
    5. ' ,' → logprob: -7.764129638671875
    6. '	in' → logprob: -11.139129638671875
    7. ' i' → logprob: -12.139129638671875
    8. 's' → logprob: -12.514129638671875
    9. '  ' → logprob: -12.889129638671875
    10. ',in' → logprob: -12.889129638671875

Token 78: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5333536863327026
    2. ' count' → logprob: -1.9083536863327026
    3. ' string' → logprob: -1.9083536863327026
    4. 'string' → logprob: -2.158353805541992
    5. 'value' → logprob: -7.533353805541992
    6. 'frequency' → logprob: -8.533353805541992
    7. ' frequency' → logprob: -8.658353805541992
    8. 'occ' → logprob: -8.908353805541992
    9. ' value' → logprob: -9.658353805541992
    10. ' occurrence' → logprob: -10.033353805541992

Token 79: '_value' (ID: 6734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008720459416508675
    2. 'in' → logprob: -4.758720397949219
    3. ',' → logprob: -9.758720397949219
    4. ' ' → logprob: -11.008720397949219
    5. '<|end|>' → logprob: -11.258720397949219
    6. '	in' → logprob: -11.758720397949219
    7. 's' → logprob: -12.258720397949219
    8. ' ,' → logprob: -13.633720397949219
    9. '_in' → logprob: -13.883720397949219
    10. '  ' → logprob: -14.133720397949219

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023300914093852043
    2. 'in' → logprob: -3.773300886154175
    3. ' ' → logprob: -10.523301124572754
    4. ',' → logprob: -11.023301124572754
    5. '	in' → logprob: -11.773301124572754
    6. ' i' → logprob: -14.023301124572754
    7. '<|end|>' → logprob: -14.273301124572754
    8. ' ,' → logprob: -14.398301124572754
    9. 's' → logprob: -14.523301124572754
    10. '  ' → logprob: -15.148301124572754

Token 81: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.029753733426332474
    2. 'string' → logprob: -3.5297536849975586
    3. ' space' → logprob: -13.529753684997559
    4. 'space' → logprob: -14.779753684997559
    5. ' strings' → logprob: -15.154753684997559
    6. '(string' → logprob: -15.279753684997559
    7. '[string' → logprob: -15.404753684997559
    8. '_string' → logprob: -15.404753684997559
    9. 'String' → logprob: -16.029754638671875
    10. 'tring' → logprob: -16.404754638671875

Token 82: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.03544705733656883
    2. '_dict' → logprob: -3.785447120666504
    3. '_items' → logprob: -5.535447120666504
    4. '_string' → logprob: -5.660447120666504
    5. '```' → logprob: -6.285447120666504
    6. '_' → logprob: -7.160447120666504
    7. 's' → logprob: -7.660447120666504
    8. '.items' → logprob: -8.035447120666504
    9. '._' → logprob: -8.285447120666504
    10. 'string' → logprob: -8.410447120666504

Token 83: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.006454586051404476
    2. 'dict' → logprob: -5.1314544677734375
    3. 'items' → logprob: -8.256454467773438
    4. 'ict' → logprob: -8.881454467773438
    5. '.items' → logprob: -10.506454467773438
    6. '_items' → logprob: -10.631454467773438
    7. 'value' → logprob: -11.381454467773438
    8. '_DICT' → logprob: -11.756454467773438
    9. 'Dict' → logprob: -12.006454467773438
    10. 'edict' → logprob: -12.006454467773438

Token 84: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.07007481157779694
    2. '.' → logprob: -2.6950747966766357
    3. '.iteritems' → logprob: -9.070075035095215
    4. ' .' → logprob: -11.445075035095215
    5. 'items' → logprob: -11.945075035095215
    6. '.Items' → logprob: -12.820075035095215
    7. '.values' → logprob: -13.320075035095215
    8. '<|end|>' → logprob: -14.820075035095215
    9. '```' → logprob: -15.445075035095215
    10. '_items' → logprob: -15.445075035095215

Token 85: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007045681122690439
    2. ' (' → logprob: -8.125704765319824
    3. '()' → logprob: -9.000704765319824
    4. ':' → logprob: -9.500704765319824
    5. '<|end|>' → logprob: -10.000704765319824
    6. '(
' → logprob: -10.125704765319824
    7. ')' → logprob: -10.250704765319824
    8. '('' → logprob: -10.875704765319824
    9. ' ' → logprob: -11.375704765319824
    10. '():' → logprob: -11.750704765319824

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09584029763936996
    2. ' ' → logprob: -3.2208402156829834
    3. ' 
' → logprob: -4.0958404541015625
    4. '    ' → logprob: -4.2208404541015625
    5. '<|end|>' → logprob: -4.4708404541015625
    6. '    
' → logprob: -5.2208404541015625
    7. ' if' → logprob: -6.9708404541015625
    8. '  ' → logprob: -7.3458404541015625
    9. '  
' → logprob: -7.9708404541015625
    10. ':' → logprob: -7.9708404541015625

Token 87: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7943514585494995
    2. ' 
' → logprob: -1.4193514585494995
    3. '<|end|>' → logprob: -1.7943514585494995
    4. ' ' → logprob: -2.794351577758789
    5. '    ' → logprob: -3.169351577758789
    6. '    
' → logprob: -4.044351577758789
    7. ' if' → logprob: -4.544351577758789
    8. '<|end|>' → logprob: -6.794351577758789
    9. 'if' (adapté à ' if') → logprob: -6.919351577758789
    10. '```' → logprob: -7.044351577758789

Token 88: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.018173357471823692
    2. 'count' → logprob: -4.0181732177734375
    3. ' ' → logprob: -11.768173217773438
    4. '	count' → logprob: -11.893173217773438
    5. '(count' → logprob: -12.268173217773438
    6. ' ' → logprob: -13.018173217773438
    7. '[count' → logprob: -13.893173217773438
    8. ' space' → logprob: -15.143173217773438
    9. '<count' → logprob: -15.393173217773438
    10. '$count' → logprob: -16.268173217773438

Token 89: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.018188927322626114
    2. '_' → logprob: -4.018188953399658
    3. ' _' → logprob: -10.5181884765625
    4. '_val' → logprob: -11.8931884765625
    5. '__' → logprob: -13.5181884765625
    6. '_Value' → logprob: -13.8931884765625
    7. ' ==' → logprob: -14.3931884765625
    8. '```' → logprob: -14.5181884765625
    9. '==' → logprob: -14.7681884765625
    10. '   ' → logprob: -14.8931884765625

Token 90: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00035512709291651845
    2. '==' → logprob: -8.000354766845703
    3. ' >=' → logprob: -11.250354766845703
    4. ' ' → logprob: -12.250354766845703
    5. ' ' → logprob: -14.375354766845703
    6. ' =' → logprob: -14.375354766845703
    7. ' >' → logprob: -14.750354766845703
    8. '=' → logprob: -16.125354766845703
    9. ' ==
' → logprob: -16.875354766845703
    10. ' ===' → logprob: -17.000354766845703

Token 91: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.00020973898062948138
    2. 'maximum' → logprob: -8.50020980834961
    3. ' ' → logprob: -12.75020980834961
    4. ' most' → logprob: -13.37520980834961
    5. ' max' → logprob: -14.12520980834961
    6. ' ' → logprob: -14.37520980834961
    7. '.maximum' → logprob: -15.37520980834961
    8. 'max' → logprob: -16.37520980834961
    9. ' maksimum' → logprob: -17.00020980834961
    10. ' space' → logprob: -17.37520980834961

Token 92: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00011868205183418468
    2. '_' → logprob: -9.125118255615234
    3. ' _' → logprob: -12.375118255615234
    4. '_max' → logprob: -13.750118255615234
    5. '_c' → logprob: -14.125118255615234
    6. '_counts' → logprob: -14.125118255615234
    7. '_value' → logprob: -14.375118255615234
    8. '_co' → logprob: -14.375118255615234
    9. '_cont' → logprob: -15.000118255615234
    10. ':' → logprob: -15.250118255615234

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002812363440170884
    2. ':
' → logprob: -5.877812385559082
    3. '):' → logprob: -12.627812385559082
    4. '       ' → logprob: -13.377812385559082
    5. '   ' → logprob: -14.002812385559082
    6. '):
' → logprob: -14.502812385559082
    7. ':
' → logprob: -15.252812385559082
    8. ':

' → logprob: -15.502812385559082
    9. ' :' → logprob: -15.752812385559082
    10. ')' → logprob: -15.877812385559082

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018968826159834862
    2. '
' → logprob: -4.7689690589904785
    3. ' most' → logprob: -5.7689690589904785
    4. '        
' → logprob: -6.3939690589904785
    5. '\n' → logprob: -6.5189690589904785
    6. '   ' → logprob: -6.8939690589904785
    7. ' 
' → logprob: -7.0189690589904785
    8. ':' → logprob: -7.3939690589904785
    9. '    
' → logprob: -7.5189690589904785
    10. '    ' → logprob: -8.64396858215332

Token 95: ' most' (ID: 1645)
  Prédit: ' most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' most' → logprob: -0.516838550567627
    2. '       ' → logprob: -1.516838550567627
    3. '   ' → logprob: -1.891838550567627
    4. '
' → logprob: -4.016838550567627
    5. 'most' (adapté à ' most') → logprob: -4.516838550567627
    6. '           ' → logprob: -5.766838550567627
    7. '```' → logprob: -7.891838550567627
    8. '    
' → logprob: -8.016838073730469
    9. ' 
' → logprob: -8.516838073730469
    10. '        
' → logprob: -8.891838073730469

Token 96: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.4140441635390744e-05
    2. '_' → logprob: -11.375014305114746
    3. '_frequency' → logprob: -13.125014305114746
    4. ' _' → logprob: -15.625014305114746
    5. '_freq' → logprob: -16.00001335144043
    6. '_m' → logprob: -16.25001335144043
    7. '_F' → logprob: -17.37501335144043
    8. 'requent' → logprob: -17.37501335144043
    9. ' frequent' → logprob: -17.75001335144043
    10. '_s' → logprob: -17.75001335144043

Token 97: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -0.00026085900026373565
    2. 'requ' → logprob: -8.625261306762695
    3. 're' → logprob: -9.750261306762695
    4. 'requently' → logprob: -11.500261306762695
    5. 'req' → logprob: -12.500261306762695
    6. 'requency' → logprob: -12.625261306762695
    7. 'request' → logprob: -12.750261306762695
    8. 'reu' → logprob: -13.000261306762695
    9. 'r' → logprob: -14.375261306762695
    10. 'require' → logprob: -16.500261306762695

Token 98: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -1.8193366486229934e-05
    2. '_' → logprob: -11.625018119812012
    3. '_string' → logprob: -12.375018119812012
    4. '_s' → logprob: -12.875018119812012
    5. '_str' → logprob: -13.250018119812012
    6. 'Strings' → logprob: -15.125018119812012
    7. 'strings' → logprob: -16.125019073486328
    8. ' _' → logprob: -16.250019073486328
    9. '```' → logprob: -16.250019073486328
    10. 's' → logprob: -17.250019073486328

Token 99: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011058080941438675
    2. '.' → logprob: -4.5110578536987305
    3. '.app' → logprob: -12.88605785369873
    4. '.add' → logprob: -13.26105785369873
    5. ' .' → logprob: -13.63605785369873
    6. '.Append' → logprob: -13.76105785369873
    7. '.ap' → logprob: -13.88605785369873
    8. '.setdefault' → logprob: -13.88605785369873
    9. '.extend' → logprob: -14.26105785369873
    10. '.push' → logprob: -14.76105785369873

Token 100: '(string' (ID: 8003)
  Prédit: '(string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(string' → logprob: -0.0485982745885849
    2. '(' → logprob: -3.048598289489746
    3. '(
' → logprob: -11.798598289489746
    4. '(str' → logprob: -13.798598289489746
    5. '(s' → logprob: -14.548598289489746
    6. '((' → logprob: -14.923598289489746
    7. '('' → logprob: -14.923598289489746
    8. '(strings' → logprob: -15.298598289489746
    9. '(

' → logprob: -15.548598289489746
    10. ' (' → logprob: -15.548598289489746

Token 101: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -1.4974866644479334e-05
    2. '_string' → logprob: -11.125015258789062
    3. 'string' → logprob: -15.875015258789062
    4. 'key' → logprob: -17.375015258789062
    5. ')' → logprob: -18.000015258789062
    6. ')_' → logprob: -18.375015258789062
    7. 'Key' → logprob: -19.125015258789062
    8. '_KEY' → logprob: -19.125015258789062
    9. '_keys' → logprob: -19.750015258789062
    10. '_Key' → logprob: -19.875015258789062

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008164160535670817
    2. ')
' → logprob: -7.125816345214844
    3. '
' → logprob: -12.375816345214844
    4. ')

' → logprob: -12.625816345214844
    5. ' )' → logprob: -13.125816345214844
    6. ')return' → logprob: -14.625816345214844
    7. '   ' → logprob: -15.000816345214844
    8. '<|end|>' → logprob: -15.000816345214844
    9. '```' → logprob: -15.375816345214844
    10. '[' → logprob: -15.625816345214844

Token 103: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.46532246470451355
    2. 'print' → logprob: -1.340322494506836
    3. 'for' → logprob: -2.215322494506836
    4. '
' → logprob: -6.965322494506836
    5. '```' → logprob: -9.090322494506836
    6. 'if' → logprob: -9.965322494506836
    7. '    
' → logprob: -10.340322494506836
    8. 'sorted' → logprob: -11.340322494506836
    9. '  
' → logprob: -12.340322494506836
    10. ' most' → logprob: -12.340322494506836

Token 104: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0015291442396119237
    2. '_' → logprob: -6.501529216766357
    3. '_frequency' → logprob: -11.2515287399292
    4. '_m' → logprob: -12.0015287399292
    5. '_freq' → logprob: -12.5015287399292
    6. 'fre' → logprob: -14.5015287399292
    7. ' _' → logprob: -14.6265287399292
    8. '_F' → logprob: -15.1265287399292
    9. ')' → logprob: -15.2515287399292
    10. '_final' → logprob: -15.3765287399292

Token 105: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -1.4259644558478612e-05
    2. 'quent' → logprob: -12.000014305114746
    3. 'requ' → logprob: -12.625014305114746
    4. 're' → logprob: -12.875014305114746
    5. 'req' → logprob: -14.125014305114746
    6. 'requently' → logprob: -14.625014305114746
    7. 'or' → logprob: -15.125014305114746
    8. 'requency' → logprob: -15.500014305114746
    9. 'reu' → logprob: -15.625014305114746
    10. 'request' → logprob: -16.00001335144043

Token 106: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -1.0921942703134846e-05
    2. '_' → logprob: -11.62501049041748
    3. 'Strings' → logprob: -14.50001049041748
    4. '_s' → logprob: -14.62501049041748
    5. '_string' → logprob: -14.75001049041748
    6. '_str' → logprob: -14.87501049041748
    7. 'strings' → logprob: -16.625011444091797
    8. ' _' → logprob: -16.750011444091797
    9. '```' → logprob: -18.250011444091797
    10. '_arrays' → logprob: -19.000011444091797

Token 107: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00690990686416626
    2. '(' → logprob: -5.0069098472595215
    3. '()
' → logprob: -8.63191032409668
    4. '(
' → logprob: -11.88191032409668
    5. '()

' → logprob: -12.63191032409668
    6. '()`' → logprob: -13.63191032409668
    7. '('' → logprob: -13.88191032409668
    8. ' ()' → logprob: -14.13191032409668
    9. '()\' → logprob: -14.25691032409668
    10. '();' → logprob: -15.00691032409668

Token 109: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10035472363233566
    2. 'print' → logprob: -2.3503546714782715
    3. 'if' → logprob: -8.97535514831543
    4. '
' → logprob: -11.72535514831543
    5. ' for' → logprob: -11.97535514831543
    6. '```' → logprob: -12.60035514831543
    7. '[' → logprob: -13.60035514831543
    8. '#print' → logprob: -14.60035514831543
    9. '#' → logprob: -14.85035514831543
    10. '<|end|>' → logprob: -14.85035514831543

Token 110: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.0210284236818552
    2. 'string' → logprob: -4.521028518676758
    3. ' s' → logprob: -4.771028518676758
    4. ' most' → logprob: -6.896028518676758
    5. ' ' → logprob: -8.521028518676758
    6. ' word' → logprob: -9.646028518676758
    7. 'most' → logprob: -10.646028518676758
    8. ' item' → logprob: -10.646028518676758
    9. 's' → logprob: -10.771028518676758
    10. ' i' → logprob: -11.146028518676758

Token 111: '_item' (ID: 12070)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1324370950460434
    2. '_key' → logprob: -2.507436990737915
    3. '_string' → logprob: -3.382436990737915
    4. ' in' → logprob: -5.007437229156494
    5. '_in' → logprob: -6.507437229156494
    6. ' _' → logprob: -9.132436752319336
    7. ' ' → logprob: -9.507436752319336
    8. 'in' → logprob: -9.882436752319336
    9. '_str' → logprob: -10.007436752319336
    10. '_strings' → logprob: -10.632436752319336

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018072325736284256
    2. 'in' → logprob: -4.143072128295898
    3. '<|end|>' → logprob: -6.518072128295898
    4. ':' → logprob: -8.393072128295898
    5. '<|end|>' → logprob: -9.393072128295898
    6. ')' → logprob: -9.768072128295898
    7. ' :' → logprob: -9.893072128295898
    8. ' ' → logprob: -10.018072128295898
    9. '	in' → logprob: -10.518072128295898
    10. '_in' → logprob: -10.893072128295898

Token 113: ' most' (ID: 1645)
  Prédit: ' most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' most' → logprob: -0.0040785204619169235
    2. 'most' → logprob: -5.504078388214111
    3. ' ' → logprob: -17.879077911376953
    4. 'Most' → logprob: -18.504077911376953
    5. ' range' → logprob: -19.254077911376953
    6. ' ' → logprob: -19.504077911376953
    7. ' mo' → logprob: -19.879077911376953
    8. 'm' → logprob: -20.004077911376953
    9. '-most' → logprob: -20.129077911376953
    10. ' 
' → logprob: -20.379077911376953

Token 114: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.8550976164988242e-05
    2. 'fre' → logprob: -11.375018119812012
    3. '_' → logprob: -12.000018119812012
    4. 'f' → logprob: -14.500018119812012
    5. '_freq' → logprob: -16.625019073486328
    6. '_frequency' → logprob: -17.000019073486328
    7. ' frequent' → logprob: -17.375019073486328
    8. '_common' → logprob: -17.375019073486328
    9. 'requent' → logprob: -17.500019073486328
    10. 'Fre' → logprob: -17.625019073486328

Token 115: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -0.0009382586576975882
    2. 'quent' → logprob: -7.000938415527344
    3. 'req' → logprob: -11.500938415527344
    4. 'uent' → logprob: -11.875938415527344
    5. 're' → logprob: -12.750938415527344
    6. 'luent' → logprob: -13.000938415527344
    7. 'rent' → logprob: -13.875938415527344
    8. 'requ' → logprob: -14.375938415527344
    9. 'u' → logprob: -14.750938415527344
    10. 'r' → logprob: -14.875938415527344

Token 116: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -1.2664456789934775e-06
    2. '_str' → logprob: -15.000000953674316
    3. '_s' → logprob: -15.250000953674316
    4. '_' → logprob: -15.375000953674316
    5. '_items' → logprob: -15.500000953674316
    6. 'strings' → logprob: -16.125001907348633
    7. '_string' → logprob: -16.375001907348633
    8. 'Strings' → logprob: -16.750001907348633
    9. 's' → logprob: -17.500001907348633
    10. '```' → logprob: -19.875001907348633

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018254246562719345
    2. ':
' → logprob: -4.018254280090332
    3. 'print' → logprob: -9.643254280090332
    4. '
' → logprob: -11.768254280090332
    5. '):
' → logprob: -12.018254280090332
    6. '<|end|>' → logprob: -12.143254280090332
    7. ')' → logprob: -12.268254280090332
    8. '):' → logprob: -13.268254280090332
    9. '[' → logprob: -13.268254280090332
    10. '.print' → logprob: -13.518254280090332

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07384413480758667
    2. 'print' → logprob: -3.0738441944122314
    3. ' print' → logprob: -3.6988441944122314
    4. '    
' → logprob: -9.448843955993652
    5. '
' → logprob: -9.948843955993652
    6. '	print' → logprob: -10.448843955993652
    7. ' 
' → logprob: -10.948843955993652
    8. '```' → logprob: -11.823843955993652
    9. '    ' → logprob: -12.823843955993652
    10. '   ' → logprob: -13.323843955993652

Token 119: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.0
    3. '
' → logprob: -17.125
    4. '```' → logprob: -17.125
    5. '   ' → logprob: -18.0
    6. 'pr' → logprob: -19.0
    7. 'prin' → logprob: -19.25
    8. '#print' → logprob: -20.0
    9. '	print' → logprob: -20.625
    10. 'prit' → logprob: -20.875

Token 120: '(string' (ID: 8003)
  Prédit: '(string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(string' → logprob: -0.018207184970378876
    2. '(' → logprob: -4.01820707321167
    3. '(f' → logprob: -9.893207550048828
    4. '("("' → logprob: -13.018207550048828
    5. '('' → logprob: -13.143207550048828
    6. '(str' → logprob: -14.268207550048828
    7. 'string' → logprob: -14.393207550048828
    8. '("' → logprob: -14.518207550048828
    9. ' (' → logprob: -15.518207550048828
    10. '()' → logprob: -15.643207550048828

Token 121: '_item' (ID: 12070)
  Prédit: '_item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_item' → logprob: -4.024604277219623e-05
    2. '_' → logprob: -11.000040054321289
    3. ')_' → logprob: -11.250040054321289
    4. '_string' → logprob: -12.750040054321289
    5. '_it' → logprob: -13.000040054321289
    6. ')' → logprob: -13.500040054321289
    7. '_items' → logprob: -13.750040054321289
    8. '_Item' → logprob: -14.500040054321289
    9. '_)' → logprob: -14.625040054321289
    10. ' _' → logprob: -14.750040054321289

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -13.000004768371582
    3. ')
' → logprob: -13.125004768371582
    4. '()' → logprob: -15.375004768371582
    5. '())' → logprob: -16.625003814697266
    6. ')`' → logprob: -16.625003814697266
    7. '))' → logprob: -17.375003814697266
    8. '`)' → logprob: -17.875003814697266
    9. '```' → logprob: -18.500003814697266
    10. '')' → logprob: -18.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 120
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 104
Précision stricte (1ère position): 60.83%
Précision adaptée (1ère position): 62.50%
Précision (top 10): 86.67%
================================================================================
