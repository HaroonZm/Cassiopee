================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict
from collections import deque
from heapq import heappush, heappop
import sys
import math
import bisect
import random
import itertools
sys.setrecursionlimit(10**5)
stdin = sys.stdin
bisect_left = bisect.bisect_left
bisect_right = bisect.bisect_right
mod = 1000000007
inf = float('INF')

# Lecture plate
# Liens directs vers méthodes courtes
# Fonctions remplacées par des blocs
# Solve (seulement C() lancé)

if True:
    # On réduit tout au cas C
    # Read input
    n_and_x = stdin.readline().split()
    while len(n_and_x) < 2:
        n_and_x += stdin.readline().split()
    n = int(n_and_x[0])
    x = int(n_and_x[1])
    xn = []
    count = 0
    while len(xn) < n:
        line = stdin.readline()
        if not line:
            break
        xn += list(map(int, line.strip().split()))
    xn.append(x)
    xn.sort()
    # GCD sans fonction
    a = xn[1] - xn[0]
    for i in range(1, n):
        m = max(a, xn[i + 1] - xn[i])
        mi = min(a, xn[i + 1] - xn[i])
        while mi:
            m, mi = mi, m % mi
        a = m
    print(a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007142632734030485
    2. '(
' → logprob: -5.632142543792725
    3. '\' → logprob: -7.132142543792725
    4. '\(' → logprob: -7.382142543792725
    5. '```' → logprob: -7.882142543792725
    6. 'newline' → logprob: -8.007143020629883
    7. '\n' → logprob: -8.382143020629883
    8. '[' → logprob: -8.507143020629883
    9. '
' → logprob: -9.132143020629883
    10. 'def' → logprob: -9.257143020629883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3513121008872986
    2. '
' → logprob: -2.2263121604919434
    3. '\n' → logprob: -2.8513121604919434
    4. '(
' → logprob: -3.3513121604919434
    5. '```' → logprob: -4.101312160491943
    6. '\' → logprob: -4.351312160491943
    7. '' → logprob: -4.476312160491943
    8. '

' → logprob: -4.476312160491943
    9. 'd' → logprob: -5.101312160491943
    10. 'import' → logprob: -5.226312160491943

Token 6: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.7581465840339661
    2. ' os' → logprob: -1.3831465244293213
    3. ' itertools' → logprob: -1.8831465244293213
    4. ' ' → logprob: -2.7581465244293213
    5. ' sys' → logprob: -4.2581467628479
    6. ' math' → logprob: -4.3831467628479
    7. ' json' → logprob: -4.8831467628479
    8. ' typing' → logprob: -5.0081467628479
    9. ' functools' → logprob: -5.2581467628479
    10. ' re' → logprob: -5.2581467628479

Token 7: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2712775766849518
    2. ' import' → logprob: -2.021277666091919
    3. '.' → logprob: -2.271277666091919
    4. '.import' → logprob: -7.39627742767334
    5. 'from' → logprob: -8.02127742767334
    6. '```' → logprob: -8.27127742767334
    7. ' .' → logprob: -8.89627742767334
    8. '_' → logprob: -9.39627742767334
    9. ')' → logprob: -9.39627742767334
    10. '_import' → logprob: -9.77127742767334

Token 8: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.001435589394532144
    2. 'default' → logprob: -7.25143575668335
    3. ' ' → logprob: -8.001435279846191
    4. ' default' → logprob: -8.126435279846191
    5. ' ' → logprob: -9.751435279846191
    6. ' abc' → logprob: -11.376435279846191
    7. ' itertools' → logprob: -11.876435279846191
    8. ' _' → logprob: -12.126435279846191
    9. ' def' → logprob: -13.001435279846191
    10. ' deque' → logprob: -13.501435279846191

Token 9: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4404360353946686
    2. '
' → logprob: -1.1904360055923462
    3. 'import' → logprob: -4.190435886383057
    4. '\' → logprob: -4.815435886383057
    5. '

' → logprob: -4.940435886383057
    6. '<|end|>' → logprob: -5.065435886383057
    7. '```' → logprob: -5.440435886383057
    8. ',' → logprob: -5.565435886383057
    9. '`' → logprob: -6.940435886383057
    10. '#' → logprob: -6.940435886383057

Token 10: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41250333189964294
    2. '\n' → logprob: -2.537503242492676
    3. '

' → logprob: -2.537503242492676
    4. 'import' → logprob: -2.662503242492676
    5. 'd' → logprob: -3.662503242492676
    6. 'from' → logprob: -3.787503242492676
    7. '\' → logprob: -4.162503242492676
    8. '```' → logprob: -4.287503242492676
    9. ',' → logprob: -5.037503242492676
    10. '
' → logprob: -5.287503242492676

Token 11: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.31027865409851074
    2. ' heap' → logprob: -1.8102786540985107
    3. ' collections' → logprob: -3.0602786540985107
    4. ' queue' → logprob: -3.4352786540985107
    5. ' os' → logprob: -5.06027889251709
    6. ' threading' → logprob: -5.43527889251709
    7. ' sys' → logprob: -5.81027889251709
    8. 'collections' → logprob: -5.93527889251709
    9. 'heap' → logprob: -6.31027889251709
    10. ' typing' → logprob: -6.43527889251709

Token 12: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.407366916188039e-05
    2. '.' → logprob: -10.250054359436035
    3. 'import' → logprob: -11.750054359436035
    4. 'space' → logprob: -12.250054359436035
    5. '_' → logprob: -12.750054359436035
    6. 's' → logprob: -13.375054359436035
    7. 'u' → logprob: -14.000054359436035
    8. 'o' → logprob: -16.00005340576172
    9. 'from' → logprob: -16.12505340576172
    10. 'queue' → logprob: -16.12505340576172

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02745174802839756
    2. 'import' → logprob: -3.652451753616333
    3. '.' → logprob: -6.902451515197754
    4. ' ' → logprob: -10.027451515197754
    5. '.import' → logprob: -10.152451515197754
    6. ' .' → logprob: -10.277451515197754
    7. '<|end|>' → logprob: -11.152451515197754
    8. '	import' → logprob: -12.652451515197754
    9. '_import' → logprob: -12.777451515197754
    10. ' imports' → logprob: -13.902451515197754

Token 14: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.10119939595460892
    2. 'he' → logprob: -2.3511993885040283
    3. ' heap' → logprob: -8.10119915008545
    4. 'heap' → logprob: -8.10119915008545
    5. ' n' → logprob: -8.47619915008545
    6. ' ' → logprob: -9.35119915008545
    7. 'n' → logprob: -10.35119915008545
    8. '.he' → logprob: -10.97619915008545
    9. 'nl' → logprob: -11.22619915008545
    10. '```' → logprob: -11.60119915008545

Token 15: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0011714138090610504
    2. 'ap' → logprob: -6.751171588897705
    3. 'a' → logprob: -13.751171112060547
    4. 'appen' → logprob: -16.626171112060547
    5. 'appa' → logprob: -18.376171112060547
    6. 'append' → logprob: -18.626171112060547
    7. 'appt' → logprob: -18.626171112060547
    8. 'ап' → logprob: -18.751171112060547
    9. 'aq' → logprob: -19.126171112060547
    10. 'apl' → logprob: -19.251171112060547

Token 16: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.07889275997877121
    2. 'op' → logprob: -2.578892707824707
    3. 'us' → logprob: -13.578892707824707
    4. 'o' → logprob: -14.078892707824707
    5. 'u' → logprob: -15.078892707824707
    6. '[' → logprob: -15.828892707824707
    7. '```' → logprob: -16.203893661499023
    8. 'opleft' → logprob: -16.453893661499023
    9. '   ' → logprob: -16.703893661499023
    10. 'ut' → logprob: -17.078893661499023

Token 17: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007369658560492098
    2. ' (' → logprob: -8.000737190246582
    3. 'he' → logprob: -8.500737190246582
    4. '(
' → logprob: -9.375737190246582
    5. ')' → logprob: -10.375737190246582
    6. ',' → logprob: -10.750737190246582
    7. '(heap' → logprob: -11.375737190246582
    8. ''' → logprob: -12.000737190246582
    9. '(
' → logprob: -12.125737190246582
    10. '(

' → logprob: -12.375737190246582

Token 18: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.029873017221689224
    2. ' he' → logprob: -3.5298731327056885
    3. 'heap' → logprob: -9.02987289428711
    4. ' heap' → logprob: -13.77987289428711
    5. ' ' → logprob: -14.90487289428711
    6. '.he' → logprob: -15.02987289428711
    7. 'hep' → logprob: -15.77987289428711
    8. 'hew' → logprob: -16.02987289428711
    9. '```' → logprob: -16.02987289428711
    10. 'h' → logprob: -16.27987289428711

Token 19: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.061054359131958e-06
    2. 'ap' → logprob: -11.750007629394531
    3. ' app' → logprob: -16.62500762939453
    4. 'pp' → logprob: -16.87500762939453
    5. 'appen' → logprob: -18.00000762939453
    6. '_app' → logprob: -18.50000762939453
    7. 'appt' → logprob: -18.50000762939453
    8. 'App' → logprob: -18.62500762939453
    9. '.app' → logprob: -18.75000762939453
    10. 'APP' → logprob: -18.87500762939453

Token 20: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -7.44574936106801e-05
    2. 'ush' → logprob: -9.87507438659668
    3. 'o' → logprob: -11.25007438659668
    4. 'p' → logprob: -12.25007438659668
    5. 'opleft' → logprob: -13.00007438659668
    6. 'opp' → logprob: -13.87507438659668
    7. 'pop' → logprob: -14.37507438659668
    8. 'app' → logprob: -14.62507438659668
    9. 'opl' → logprob: -14.87507438659668
    10. 'pp' → logprob: -16.12507438659668

Token 21: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3904370367527008
    2. 'def' → logprob: -2.265437126159668
    3. '' → logprob: -2.640437126159668
    4. '\' → logprob: -3.265437126159668
    5. '
' → logprob: -3.390437126159668
    6. '```' → logprob: -4.015437126159668
    7. '#' → logprob: -4.140437126159668
    8. '`' → logprob: -4.515437126159668
    9. '(' → logprob: -4.515437126159668
    10. '\n' → logprob: -5.015437126159668

Token 22: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.532001256942749
    2. 'd' → logprob: -1.407001256942749
    3. '
' → logprob: -3.032001256942749
    4. '```' → logprob: -3.032001256942749
    5. 'import' → logprob: -3.407001256942749
    6. 'class' → logprob: -4.657001495361328
    7. '\' → logprob: -4.782001495361328
    8. '' → logprob: -5.157001495361328
    9. '#' → logprob: -5.532001495361328
    10. 'from' → logprob: -5.782001495361328

Token 23: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7682453393936157
    2. ' os' → logprob: -1.2682453393936157
    3. ' collections' → logprob: -2.518245220184326
    4. ' itertools' → logprob: -2.768245220184326
    5. ' math' → logprob: -3.018245220184326
    6. ' ' → logprob: -3.518245220184326
    7. ' heap' → logprob: -3.768245220184326
    8. ' re' → logprob: -5.393245220184326
    9. ' space' → logprob: -6.393245220184326
    10. ' random' → logprob: -7.018245220184326

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.799172580242157
    2. '\n' → logprob: -1.0491726398468018
    3. '\' → logprob: -1.7991726398468018
    4. '

' → logprob: -4.424172401428223
    5. '' → logprob: -4.924172401428223
    6. 'newline' → logprob: -5.299172401428223
    7. 'n' → logprob: -5.924172401428223
    8. 'import' → logprob: -6.049172401428223
    9. 'def' → logprob: -6.299172401428223
    10. '```' → logprob: -6.799172401428223

Token 25: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5987564921379089
    2. '\' → logprob: -1.4737565517425537
    3. '\n' → logprob: -2.0987565517425537
    4. 'def' → logprob: -3.3487565517425537
    5. '' → logprob: -3.5987565517425537
    6. 'd' → logprob: -4.348756313323975
    7. '

' → logprob: -4.473756313323975
    8. 'n' → logprob: -4.973756313323975
    9. '#' → logprob: -6.848756313323975
    10. '```' → logprob: -6.973756313323975

Token 26: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.10168170183897018
    2. ' math' → logprob: -3.226681709289551
    3. ' threading' → logprob: -3.226681709289551
    4. ' itertools' → logprob: -4.476681709289551
    5. ' collections' → logprob: -5.976681709289551
    6. ' heap' → logprob: -6.226681709289551
    7. ' io' → logprob: -6.851681709289551
    8. 'os' → logprob: -8.85168170928955
    9. ' time' → logprob: -9.35168170928955
    10. 'collections' → logprob: -10.47668170928955

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32192519307136536
    2. '\' → logprob: -2.571925163269043
    3. '\n' → logprob: -2.571925163269043
    4. '

' → logprob: -2.946925163269043
    5. '' → logprob: -3.321925163269043
    6. 'def' → logprob: -4.571925163269043
    7. 'd' → logprob: -4.571925163269043
    8. '#' → logprob: -5.321925163269043
    9. '```' → logprob: -5.821925163269043
    10. 'n' → logprob: -6.196925163269043

Token 28: 'import' (ID: 561)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.3339177370071411
    2. 'def' → logprob: -1.3339177370071411
    3. '
' → logprob: -1.8339177370071411
    4. 'd' → logprob: -1.9589177370071411
    5. '#' → logprob: -2.8339176177978516
    6. '' → logprob: -3.4589176177978516
    7. '\n' → logprob: -3.4589176177978516
    8. '```' → logprob: -3.7089176177978516
    9. '

' → logprob: -4.833917617797852
    10. '`' → logprob: -4.833917617797852

Token 29: ' bis' (ID: 7204)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.13037428259849548
    2. ' bis' → logprob: -3.1303741931915283
    3. ' random' → logprob: -3.6303741931915283
    4. ' heap' → logprob: -3.8803741931915283
    5. ' threading' → logprob: -4.255374431610107
    6. ' os' → logprob: -4.380374431610107
    7. 'random' → logprob: -6.130374431610107
    8. ' functools' → logprob: -7.505374431610107
    9. 'bis' → logprob: -7.630374431610107
    10. ' collections' → logprob: -8.13037395477295

Token 30: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.141186450899113e-05
    2. 't' → logprob: -10.875020980834961
    3. 'ected' → logprob: -13.250020980834961
    4. 'e' → logprob: -15.375020980834961
    5. 'ection' → logprob: -15.875020980834961
    6. 'ectl' → logprob: -16.37502098083496
    7. 'ects' → logprob: -16.75002098083496
    8. 'ector' → logprob: -16.75002098083496
    9. 'ec' → logprob: -17.00002098083496
    10. '```' → logprob: -17.25002098083496

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40335291624069214
    2. '

' → logprob: -1.528352975845337
    3. '\n' → logprob: -2.403352975845337
    4. '' → logprob: -5.028352737426758
    5. '\' → logprob: -5.153352737426758
    6. '#' → logprob: -5.653352737426758
    7. 'n' → logprob: -5.778352737426758
    8. 'def' → logprob: -6.403352737426758
    9. '```' → logprob: -7.153352737426758
    10. 'import' → logprob: -7.278352737426758

Token 32: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2834334075450897
    2. '

' → logprob: -2.283433437347412
    3. '\n' → logprob: -2.908433437347412
    4. '' → logprob: -3.783433437347412
    5. '\' → logprob: -3.908433437347412
    6. 'def' → logprob: -4.283433437347412
    7. '#' → logprob: -4.408433437347412
    8. 'd' → logprob: -5.158433437347412
    9. 'n' → logprob: -5.283433437347412
    10. 'import' → logprob: -5.783433437347412

Token 33: ' random' (ID: 7526)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.007245129905641079
    2. ' heap' → logprob: -5.757245063781738
    3. 'it' → logprob: -7.007245063781738
    4. 'random' → logprob: -7.132245063781738
    5. ' random' → logprob: -7.382245063781738
    6. ' functools' → logprob: -7.507245063781738
    7. 'heap' → logprob: -8.007245063781738
    8. ' threading' → logprob: -8.132245063781738
    9. 'collections' → logprob: -8.257245063781738
    10. ' collections' → logprob: -9.382245063781738

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3241879940032959
    2. '

' → logprob: -1.699187994003296
    3. '\n' → logprob: -2.699187994003296
    4. '#' → logprob: -4.824188232421875
    5. '' → logprob: -4.824188232421875
    6. '\' → logprob: -5.449188232421875
    7. '<|end|>' → logprob: -6.199188232421875
    8. '```' → logprob: -6.824188232421875
    9. 'import' → logprob: -7.074188232421875
    10. 'n' → logprob: -7.199188232421875

Token 35: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36174169182777405
    2. '

' → logprob: -2.111741781234741
    3. '\n' → logprob: -3.111741781234741
    4. '' → logprob: -3.236741781234741
    5. 'd' → logprob: -3.486741781234741
    6. '#' → logprob: -3.486741781234741
    7. '\' → logprob: -4.236741542816162
    8. 'n' → logprob: -4.736741542816162
    9. 'def' → logprob: -4.986741542816162
    10. 'import' → logprob: -6.486741542816162

Token 36: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.12801887094974518
    2. ' time' → logprob: -2.628018856048584
    3. 'time' → logprob: -3.878018856048584
    4. ' string' → logprob: -4.503018856048584
    5. ' os' → logprob: -5.628018856048584
    6. 'string' → logprob: -6.003018856048584
    7. 'it' → logprob: -6.003018856048584
    8. ' threading' → logprob: -6.378018856048584
    9. ' re' → logprob: -6.628018856048584
    10. 're' → logprob: -6.753018856048584

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19243571162223816
    2. '

' → logprob: -2.4424357414245605
    3. '\n' → logprob: -3.1924357414245605
    4. '' → logprob: -3.8174357414245605
    5. '\' → logprob: -4.8174357414245605
    6. 'import' → logprob: -5.3174357414245605
    7. '#' → logprob: -5.4424357414245605
    8. 'n' → logprob: -6.1924357414245605
    9. '<|end|>' → logprob: -6.6924357414245605
    10. '
' → logprob: -6.6924357414245605

Token 38: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44814079999923706
    2. '

' → logprob: -1.4481408596038818
    3. '\n' → logprob: -2.823140859603882
    4. 'import' → logprob: -3.573140859603882
    5. '#' → logprob: -4.448140621185303
    6. '' → logprob: -4.573140621185303
    7. '\' → logprob: -5.573140621185303
    8. 'n' → logprob: -5.948140621185303
    9. 'def' → logprob: -5.948140621185303
    10. '<|end|>' → logprob: -6.073140621185303

Token 39: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.976922744186595e-05
    2. '.stdout' → logprob: -11.750040054321289
    3. '.exit' → logprob: -11.875040054321289
    4. '.stdin' → logprob: -12.250040054321289
    5. '.readline' → logprob: -12.500040054321289
    6. '.user' → logprob: -12.500040054321289
    7. ' .' → logprob: -13.375040054321289
    8. '.argv' → logprob: -13.500040054321289
    9. '.stderr' → logprob: -13.500040054321289
    10. '.`' → logprob: -13.875040054321289

Token 40: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.00014168102643452585
    2. 'limit' → logprob: -9.125142097473145
    3. '_rec' → logprob: -11.500142097473145
    4. 're' → logprob: -12.625142097473145
    5. 'execution' → logprob: -12.750142097473145
    6. 'set' → logprob: -12.875142097473145
    7. 'ursion' → logprob: -12.875142097473145
    8. 'attr' → logprob: -13.375142097473145
    9. 'trace' → logprob: -13.750142097473145
    10. '_' → logprob: -14.250142097473145

Token 41: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0006164124351926148
    2. 'ursive' → logprob: -8.500616073608398
    3. 'urs' → logprob: -8.750616073608398
    4. 'limit' → logprob: -9.125616073608398
    5. 'ursor' → logprob: -9.750616073608398
    6. 'ur' → logprob: -9.750616073608398
    7. 'set' → logprob: -12.375616073608398
    8. 'ut' → logprob: -12.500616073608398
    9. '_limit' → logprob: -12.625616073608398
    10. '_' → logprob: -13.000616073608398

Token 42: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.004108796361833811
    2. '_limit' → logprob: -5.504108905792236
    3. 'lim' → logprob: -11.129108428955078
    4. ' limit' → logprob: -11.254108428955078
    5. 'depth' → logprob: -13.879108428955078
    6. '_depth' → logprob: -14.754108428955078
    7. '(limit' → logprob: -15.004108428955078
    8. '_LIMIT' → logprob: -15.004108428955078
    9. '-limit' → logprob: -15.254108428955078
    10. '_lim' → logprob: -15.379108428955078

Token 43: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.630610641877865e-06
    2. '((' → logprob: -13.000006675720215
    3. ' (' → logprob: -13.500006675720215
    4. '("("' → logprob: -14.000006675720215
    5. '(
' → logprob: -14.250006675720215
    6. '40' → logprob: -14.750006675720215
    7. '(

' → logprob: -15.250006675720215
    8. '()' → logprob: -15.625006675720215
    9. '```' → logprob: -15.875006675720215
    10. '(None' → logprob: -16.1250057220459

Token 44: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009119403548538685
    2. '100' → logprob: -7.000911712646484
    3. '200' → logprob: -15.750911712646484
    4. '1' → logprob: -16.125911712646484
    5. '300' → logprob: -16.500911712646484
    6. ' ' → logprob: -17.125911712646484
    7. '999' → logprob: -17.250911712646484
    8. '500' → logprob: -18.000911712646484
    9. 'int' → logprob: -18.125911712646484
    10. 'pow' → logprob: -18.500911712646484

Token 45: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.2098565697669983
    2. '000' → logprob: -1.9598565101623535
    3. '6' → logprob: -3.3348565101623535
    4. '**' → logprob: -4.8348565101623535
    5. '00' → logprob: -5.4598565101623535
    6. '07' → logprob: -8.209856986999512
    7. '8' → logprob: -8.959856986999512
    8. '0' → logprob: -9.334856986999512
    9. '5' → logprob: -9.334856986999512
    10. '007' → logprob: -11.834856986999512

Token 46: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00016396844875998795
    2. '9' → logprob: -8.750164031982422
    3. '8' → logprob: -12.125164031982422
    4. '6' → logprob: -15.875164031982422
    5. '```' → logprob: -20.750164031982422
    6. ' ' → logprob: -22.250164031982422
    7. '**' → logprob: -22.250164031982422
    8. '۷' → logprob: -23.375164031982422
    9. '７' → logprob: -23.500164031982422
    10. '٧' → logprob: -24.250164031982422

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -12.625003814697266
    3. '))' → logprob: -15.250003814697266
    4. ')
' → logprob: -17.000003814697266
    5. '0' → logprob: -17.500003814697266
    6. '+' → logprob: -18.125003814697266
    7. '),' → logprob: -18.375003814697266
    8. '6' → logprob: -18.625003814697266
    9. ')))' → logprob: -19.125003814697266
    10. '**' → logprob: -19.375003814697266

Token 48: 'stdin' (ID: 132953)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41307616233825684
    2. '

' → logprob: -1.1630761623382568
    3. 'def' → logprob: -4.538076400756836
    4. '
' → logprob: -5.413076400756836
    5. 'class' → logprob: -5.663076400756836
    6. '\n' → logprob: -5.913076400756836
    7. 'n' → logprob: -6.663076400756836
    8. '' → logprob: -7.038076400756836
    9. '#' → logprob: -7.038076400756836
    10. '\' → logprob: -8.163076400756836

Token 49: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00426928885281086
    2. '.readline' → logprob: -5.754269123077393
    3. '.read' → logprob: -7.129269123077393
    4. '=' → logprob: -9.12926959991455
    5. '.=' → logprob: -9.12926959991455
    6. '.stdin' → logprob: -10.75426959991455
    7. ' =' → logprob: -11.62926959991455
    8. '.​' → logprob: -11.62926959991455
    9. '​.' → logprob: -12.37926959991455
    10. '.Read' → logprob: -12.37926959991455

Token 50: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16022798418998718
    2. ' sys' → logprob: -1.9102280139923096
    3. '=sys' → logprob: -12.78522777557373
    4. '	sys' → logprob: -14.53522777557373
    5. 'open' → logprob: -14.91022777557373
    6. '(sys' → logprob: -16.160228729248047
    7. 'input' → logprob: -17.410228729248047
    8. '```' → logprob: -18.160228729248047
    9. 'system' → logprob: -18.285228729248047
    10. ' open' → logprob: -18.410228729248047

Token 51: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.019067315384745598
    2. '.' → logprob: -4.019067287445068
    3. '.readline' → logprob: -7.269067287445068
    4. '.std' → logprob: -9.269067764282227
    5. '.stdout' → logprob: -10.019067764282227
    6. '.input' → logprob: -10.394067764282227
    7. '.read' → logprob: -10.894067764282227
    8. '.standard' → logprob: -11.519067764282227
    9. '.argv' → logprob: -12.519067764282227
    10. '.__' → logprob: -12.769067764282227

Token 52: '
' (ID: 198)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.02859686128795147
    2. '.read' → logprob: -3.778596878051758
    3. 'read' → logprob: -6.403596878051758
    4. '_read' → logprob: -6.653596878051758
    5. '<|end|>' → logprob: -7.028596878051758
    6. '.' → logprob: -7.653596878051758
    7. '_reader' → logprob: -7.778596878051758
    8. '.readlines' → logprob: -8.653596878051758
    9. '.buffer' → logprob: -8.903596878051758
    10. '.Read' → logprob: -9.528596878051758

Token 53: 'bis' (ID: 38042)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.45680925250053406
    2. '=' → logprob: -1.7068092823028564
    3. '.' → logprob: -2.4568092823028564
    4. 'input' → logprob: -2.8318092823028564
    5. 'read' → logprob: -3.5818092823028564
    6. 'def' → logprob: -5.331809043884277
    7. '.read' → logprob: -5.581809043884277
    8. ' =' → logprob: -6.331809043884277
    9. '=input' → logprob: -7.456809043884277
    10. '.=' → logprob: -8.456809043884277

Token 54: 'ect' (ID: 534)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07025551050901413
    2. 'ect' → logprob: -2.9452555179595947
    3. ' .' → logprob: -4.945255279541016
    4. '.ext' → logprob: -6.070255279541016
    5. 'dict' → logprob: -6.945255279541016
    6. '```' → logprob: -7.070255279541016
    7. '.c' → logprob: -7.570255279541016
    8. '.right' → logprob: -7.695255279541016
    9. '.ex' → logprob: -8.195255279541016
    10. 'ct' → logprob: -8.195255279541016

Token 55: '_left' (ID: 22189)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -7.24310302757658e-05
    2. '.b' → logprob: -10.875072479248047
    3. ' .' → logprob: -11.875072479248047
    4. '.​' → logprob: -12.250072479248047
    5. '.`' → logprob: -12.625072479248047
    6. '.period' → logprob: -12.625072479248047
    7. '."""' → logprob: -12.625072479248047
    8. '.e' → logprob: -13.250072479248047
    9. '.c' → logprob: -13.500072479248047
    10. '.<' → logprob: -13.500072479248047

Token 56: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -7.433829159708694e-05
    2. '<|end|>' → logprob: -10.62507438659668
    3. ' (' → logprob: -11.37507438659668
    4. '()' → logprob: -11.62507438659668
    5. '(
' → logprob: -11.75007438659668
    6. ')' → logprob: -11.87507438659668
    7. ',' → logprob: -13.37507438659668
    8. '(paren' → logprob: -13.62507438659668
    9. '(

' → logprob: -13.62507438659668
    10. '(b' → logprob: -13.62507438659668

Token 57: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.023259920999407768
    2. ' bis' → logprob: -3.7732598781585693
    3. 'b' → logprob: -11.273260116577148
    4. '	b' → logprob: -13.773260116577148
    5. 'bs' → logprob: -15.398260116577148
    6. '```' → logprob: -16.02326011657715
    7. 'stdin' → logprob: -16.64826011657715
    8. ' ' → logprob: -16.77326011657715
    9. '.b' → logprob: -17.39826011657715
    10. '(b' → logprob: -17.89826011657715

Token 58: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.03903275355696678
    2. 's' → logprob: -3.2890326976776123
    3. 'с' → logprob: -7.289032936096191
    4. 'ct' → logprob: -8.789032936096191
    5. 'st' → logprob: -9.539032936096191
    6. '```' → logprob: -10.539032936096191
    7. 'so' → logprob: -11.664032936096191
    8. 'ect' → logprob: -11.664032936096191
    9. 'sects' → logprob: -12.039032936096191
    10. 'se' → logprob: -12.289032936096191

Token 59: '.b' (ID: 1292)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07438815385103226
    2. '.b' → logprob: -2.699388265609741
    3. '._' → logprob: -5.824388027191162
    4. '.left' → logprob: -7.699388027191162
    5. '_left' → logprob: -7.699388027191162
    6. '.setdefault' → logprob: -9.07438850402832
    7. ' .' → logprob: -9.82438850402832
    8. '.readline' → logprob: -10.44938850402832
    9. '.loc' → logprob: -10.69938850402832
    10. '.groupby' → logprob: -10.69938850402832

Token 60: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -4.961759259458631e-06
    2. 'isc' → logprob: -13.500004768371582
    3. 'iselect' → logprob: -14.000004768371582
    4. 'isce' → logprob: -14.375004768371582
    5. 'isl' → logprob: -15.125004768371582
    6. 's' → logprob: -15.375004768371582
    7. 'ise' → logprob: -15.625004768371582
    8. 'sect' → logprob: -15.625004768371582
    9. '_' → logprob: -16.0000057220459
    10. '```' → logprob: -16.0000057220459

Token 61: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.12446577847003937
    2. 'sect' → logprob: -2.3744657039642334
    3. 'ect' → logprob: -4.3744659423828125
    4. 's' → logprob: -5.2494659423828125
    5. 'с' → logprob: -5.2494659423828125
    6. 'c' → logprob: -8.249465942382812
    7. 'n' → logprob: -8.374465942382812
    8. 'ce' → logprob: -9.249465942382812
    9. '```' → logprob: -9.624465942382812
    10. '_ct' → logprob: -10.249465942382812

Token 62: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -2.8325677703833207e-05
    2. '_le' → logprob: -11.500028610229492
    3. '_right' → logprob: -11.875028610229492
    4. 'left' → logprob: -12.125028610229492
    5. '_l' → logprob: -12.875028610229492
    6. '_' → logprob: -13.250028610229492
    7. '_LEFT' → logprob: -15.000028610229492
    8. '_Left' → logprob: -15.375028610229492
    9. '_lower' → logprob: -16.125028610229492
    10. '_end' → logprob: -16.125028610229492

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2646770477294922
    2. 'newline' → logprob: -2.014677047729492
    3. 'def' → logprob: -4.264677047729492
    4. '<|end|>' → logprob: -4.389677047729492
    5. '\n' → logprob: -4.514677047729492
    6. '_' → logprob: -4.639677047729492
    7. '' → logprob: -4.639677047729492
    8. '(
' → logprob: -5.014677047729492
    9. '(' → logprob: -5.139677047729492
    10. '(b' → logprob: -5.389677047729492

Token 64: 'bis' (ID: 38042)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4175357818603516
    2. 'newline' → logprob: -1.4175357818603516
    3. 'bis' → logprob: -1.7925357818603516
    4. '_' → logprob: -2.5425357818603516
    5. '_b' → logprob: -3.2925357818603516
    6. '=' → logprob: -3.2925357818603516
    7. '(b' → logprob: -3.5425357818603516
    8. 'def' → logprob: -3.6675357818603516
    9. '```' → logprob: -3.9175357818603516
    10. 'b' → logprob: -3.9175357818603516

Token 65: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.06322202831506729
    2. 'sect' → logprob: -2.8132219314575195
    3. 'ct' → logprob: -6.9382219314575195
    4. 'с' → logprob: -9.68822193145752
    5. 'ject' → logprob: -9.68822193145752
    6. 'ects' → logprob: -10.31322193145752
    7. 's' → logprob: -10.56322193145752
    8. 'es' → logprob: -11.18822193145752
    9. 'is' → logprob: -11.43822193145752
    10. 'est' → logprob: -11.43822193145752

Token 66: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.08633308857679367
    2. '_' → logprob: -2.9613330364227295
    3. '_left' → logprob: -3.7113330364227295
    4. '.' → logprob: -5.836333274841309
    5. '._' → logprob: -6.086333274841309
    6. '_lower' → logprob: -9.586333274841309
    7. '_write' → logprob: -9.836333274841309
    8. 'underscore' → logprob: -9.836333274841309
    9. '_suffix' → logprob: -9.961333274841309
    10. '_out' → logprob: -10.086333274841309

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018151231110095978
    2. '=' → logprob: -4.01815128326416
    3. '=b' → logprob: -14.26815128326416
    4. ' ' → logprob: -14.51815128326416
    5. ' =
' → logprob: -16.268150329589844
    6. '(space' → logprob: -17.893150329589844
    7. 'space' → logprob: -18.268150329589844
    8. ' ' → logprob: -18.268150329589844
    9. ' bis' → logprob: -18.643150329589844
    10. '<|end|>' → logprob: -18.768150329589844

Token 68: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.07889331132173538
    2. 'bis' → logprob: -2.5788934230804443
    3. 'b' → logprob: -12.828893661499023
    4. '	b' → logprob: -15.078893661499023
    5. ' ' → logprob: -16.203893661499023
    6. ' b' → logprob: -16.453893661499023
    7. ' ' → logprob: -16.828893661499023
    8. '(b' → logprob: -16.953893661499023
    9. 'Bis' → logprob: -16.953893661499023
    10. 'bs' → logprob: -17.328893661499023

Token 69: 'ect' (ID: 534)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.0822803974151611
    2. 'sect' → logprob: -1.3322803974151611
    3. 'ist' → logprob: -1.7072803974151611
    4. 'ect' → logprob: -1.8322803974151611
    5. 'bis' → logprob: -3.332280397415161
    6. 'ct' → logprob: -4.582280158996582
    7. 's' → logprob: -5.957280158996582
    8. 'st' → logprob: -6.082280158996582
    9. '.b' → logprob: -6.457280158996582
    10. 'set' → logprob: -7.332280158996582

Token 70: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0032562583219259977
    2. '.' → logprob: -5.753256320953369
    3. ' .' → logprob: -10.628255844116211
    4. '.right' → logprob: -10.628255844116211
    5. '.б' → logprob: -11.753255844116211
    6. '​.' → logprob: -12.753255844116211
    7. '.​' → logprob: -13.503255844116211
    8. '._' → logprob: -13.503255844116211
    9. '```' → logprob: -13.628255844116211
    10. '.pyplot' → logprob: -13.628255844116211

Token 71: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -6.229872087715194e-05
    2. 'sect' → logprob: -10.750061988830566
    3. 'ist' → logprob: -11.375061988830566
    4. 'ise' → logprob: -11.750061988830566
    5. 'r' → logprob: -12.250061988830566
    6. 'iset' → logprob: -12.500061988830566
    7. 'isc' → logprob: -12.875061988830566
    8. 'bis' → logprob: -13.000061988830566
    9. 'iss' → logprob: -13.500061988830566
    10. 's' → logprob: -13.625061988830566

Token 72: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.0275932215154171
    2. 'ct' → logprob: -4.02759313583374
    3. 's' → logprob: -5.27759313583374
    4. 'st' → logprob: -6.27759313583374
    5. 'с' → logprob: -6.65259313583374
    6. 'ect' → logprob: -7.27759313583374
    7. '```' → logprob: -8.402593612670898
    8. 'section' → logprob: -10.527593612670898
    9. 'set' → logprob: -10.777593612670898
    10. 'sc' → logprob: -11.152593612670898

Token 73: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00012868782505393028
    2. '_left' → logprob: -9.250128746032715
    3. '_' → logprob: -10.625128746032715
    4. '_r' → logprob: -12.500128746032715
    5. 'right' → logprob: -12.625128746032715
    6. '__' → logprob: -15.125128746032715
    7. '_RIGHT' → logprob: -15.750128746032715
    8. '_Right' → logprob: -15.750128746032715
    9. '_
' → logprob: -16.0001277923584
    10. ' _' → logprob: -16.5001277923584

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3425396680831909
    2. '

' → logprob: -1.342539668083191
    3. 'def' → logprob: -4.3425397872924805
    4. '' → logprob: -5.4675397872924805
    5. '#' → logprob: -5.9675397872924805
    6. '\n' → logprob: -6.0925397872924805
    7. '
' → logprob: -6.3425397872924805
    8. 'newline' → logprob: -6.5925397872924805
    9. '
    
' → logprob: -7.3425397872924805
    10. '\' → logprob: -7.8425397872924805

Token 75: 'mod' (ID: 4847)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37460237741470337
    2. 'def' → logprob: -2.1246023178100586
    3. '

' → logprob: -2.4996023178100586
    4. '\n' → logprob: -2.7496023178100586
    5. '' → logprob: -4.374602317810059
    6. '#' → logprob: -4.749602317810059
    7. '\' → logprob: -4.999602317810059
    8. '
' → logprob: -5.499602317810059
    9. 'newline' → logprob: -5.624602317810059
    10. '=' → logprob: -5.874602317810059

Token 76: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37904122471809387
    2. ' =' → logprob: -1.2540411949157715
    3. ' ' → logprob: -3.8790411949157715
    4. '_' → logprob: -4.7540411949157715
    5. '.' → logprob: -8.50404167175293
    6. '<|end|>' → logprob: -8.50404167175293
    7. ')' → logprob: -9.00404167175293
    8. ',' → logprob: -9.12904167175293
    9. '  ' → logprob: -10.62904167175293
    10. ' ' → logprob: -10.75404167175293

Token 77: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.047470495104789734
    2. ' ' → logprob: -3.2974705696105957
    3. '100' → logprob: -4.672470569610596
    4. '998' → logprob: -10.672470092773438
    5. '1' → logprob: -11.422470092773438
    6. ' (' → logprob: -14.922470092773438
    7. '(' → logprob: -15.047470092773438
    8. 'int' → logprob: -15.422470092773438
    9. ' ' → logprob: -15.547470092773438
    10. '`' → logprob: -16.172470092773438

Token 78: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.030759574845433235
    2. '100' → logprob: -3.530759572982788
    3. '998' → logprob: -6.905759811401367
    4. '1' → logprob: -12.405759811401367
    5. ' ' → logprob: -13.655759811401367
    6. '(' → logprob: -14.405759811401367
    7. 'int' → logprob: -14.530759811401367
    8. '999' → logprob: -16.155759811401367
    9. '```' → logprob: -16.780759811401367
    10. '１０' → logprob: -17.030759811401367

Token 79: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00386801571585238
    2. '9' → logprob: -6.253868103027344
    3. '07' → logprob: -7.003868103027344
    4. '7' → logprob: -7.503868103027344
    5. '007' → logprob: -9.003868103027344
    6. '0' → logprob: -9.128868103027344
    7. '09' → logprob: -9.378868103027344
    8. '+' → logprob: -9.753868103027344
    9. '003' → logprob: -10.253868103027344
    10. '00' → logprob: -10.503868103027344

Token 80: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.06353754550218582
    2. '7' → logprob: -2.93853759765625
    3. '+' → logprob: -5.56353759765625
    4. '007' → logprob: -5.81353759765625
    5. '19' → logprob: -7.18853759765625
    6. '07' → logprob: -7.18853759765625
    7. '0' → logprob: -8.56353759765625
    8. '9' → logprob: -10.06353759765625
    9. '00' → logprob: -10.68853759765625
    10. ' ' → logprob: -11.31353759765625

Token 81: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.3856492842023727e-06
    2. '07' → logprob: -13.750000953674316
    3. '+' → logprob: -16.375001907348633
    4. '9' → logprob: -16.625001907348633
    5. ' ' → logprob: -18.750001907348633
    6. '97' → logprob: -20.250001907348633
    7. '37' → logprob: -21.000001907348633
    8. '```' → logprob: -21.125001907348633
    9. '17' → logprob: -21.375001907348633
    10. ' +' → logprob: -21.750001907348633

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0818692222237587
    2. '\n' → logprob: -3.331869125366211
    3. 'def' → logprob: -4.456869125366211
    4. '

' → logprob: -4.831869125366211
    5. 'newline' → logprob: -5.456869125366211
    6. 'n' → logprob: -5.581869125366211
    7. '#' → logprob: -5.581869125366211
    8. '' → logprob: -6.081869125366211
    9. '<|end|>' → logprob: -6.081869125366211
    10. '\' → logprob: -6.081869125366211

Token 83: 'inf' (ID: 22226)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15698575973510742
    2. '\n' → logprob: -2.5319857597351074
    3. '

' → logprob: -4.031985759735107
    4. 'def' → logprob: -4.281985759735107
    5. '\' → logprob: -5.031985759735107
    6. '
' → logprob: -5.031985759735107
    7. '#' → logprob: -5.156985759735107
    8. '' → logprob: -5.281985759735107
    9. 'newline' → logprob: -5.906985759735107
    10. 'n' → logprob: -6.281985759735107

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11510191112756729
    2. '=' → logprob: -2.2401018142700195
    3. '<|end|>' → logprob: -7.1151018142700195
    4. ' ' → logprob: -7.4901018142700195
    5. ')' → logprob: -7.6151018142700195
    6. ',' → logprob: -8.24010181427002
    7. '.' → logprob: -9.74010181427002
    8. '_' → logprob: -10.74010181427002
    9. ' ,' → logprob: -11.61510181427002
    10. '<|end|>' → logprob: -11.74010181427002

Token 85: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19701765477657318
    2. ' float' → logprob: -2.3220176696777344
    3. '10' → logprob: -2.6970176696777344
    4. 'float' → logprob: -4.322017669677734
    5. '1' → logprob: -10.947017669677734
    6. ' int' → logprob: -11.322017669677734
    7. 'int' → logprob: -11.697017669677734
    8. ' ' → logprob: -11.822017669677734
    9. ' inf' → logprob: -12.197017669677734
    10. ' math' → logprob: -12.322017669677734

Token 86: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001648399163968861
    2. ''' → logprob: -6.876648426055908
    3. '(' → logprob: -8.00164794921875
    4. ''in' → logprob: -8.50164794921875
    5. '("' → logprob: -11.00164794921875
    6. ''t' → logprob: -11.75164794921875
    7. ''a' → logprob: -11.87664794921875
    8. '"' → logprob: -12.62664794921875
    9. '32' → logprob: -12.75164794921875
    10. '('-' → logprob: -12.75164794921875

Token 87: 'INF' (ID: 64358)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.03883577138185501
    2. ''in' → logprob: -3.2888357639312744
    3. ''' → logprob: -7.6638360023498535
    4. 'in' → logprob: -9.288835525512695
    5. ''i' → logprob: -9.913835525512695
    6. 'info' → logprob: -10.663835525512695
    7. '123' → logprob: -10.788835525512695
    8. ''ins' → logprob: -11.038835525512695
    9. '"' → logprob: -11.413835525512695
    10. 'i' → logprob: -11.538835525512695

Token 88: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004107015673071146
    2. ')' → logprob: -5.5041069984436035
    3. '')
' → logprob: -11.004107475280762
    4. '")' → logprob: -12.254107475280762
    5. ''' → logprob: -12.504107475280762
    6. ' ')' → logprob: -14.004107475280762
    7. '')

' → logprob: -14.129107475280762
    8. '('' → logprob: -14.879107475280762
    9. '')"' → logprob: -14.879107475280762
    10. '')
' → logprob: -15.129107475280762

Token 89: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2516234517097473
    2. '#' → logprob: -2.2516233921051025
    3. 'def' → logprob: -3.2516233921051025
    4. 'n' → logprob: -4.126623630523682
    5. '' → logprob: -4.251623630523682
    6. '\' → logprob: -4.251623630523682
    7. 'd' → logprob: -4.876623630523682
    8. '_' → logprob: -5.501623630523682
    9. '

' → logprob: -5.501623630523682
    10. '\n' → logprob: -5.876623630523682

Token 90: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.709874153137207
    2. '#' → logprob: -2.209874153137207
    3. '_' → logprob: -2.334874153137207
    4. ' ' → logprob: -2.334874153137207
    5. 'd' → logprob: -2.959874153137207
    6. '-' → logprob: -3.584874153137207
    7. 'n' → logprob: -3.834874153137207
    8. 'a' → logprob: -3.959874153137207
    9. ' def' → logprob: -4.334874153137207
    10. ')' → logprob: -4.584874153137207

Token 91: ' plate' (ID: 14651)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15714652836322784
    2. '_notes' → logprob: -3.157146453857422
    3. ' =' → logprob: -3.907146453857422
    4. '_' → logprob: -4.032146453857422
    5. 'Notes' → logprob: -4.532146453857422
    6. 's' → logprob: -4.532146453857422
    7. ' ' → logprob: -4.782146453857422
    8. ''s' → logprob: -4.782146453857422
    9. 'S' → logprob: -5.282146453857422
    10. 'def' → logprob: -5.407146453857422

Token 92: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0372573658823967
    2. 'n' → logprob: -3.537257432937622
    3. 'form' → logprob: -5.662257194519043
    4. 'num' → logprob: -7.412257194519043
    5. 'number' → logprob: -7.787257194519043
    6. '_number' → logprob: -7.787257194519043
    7. 'Number' → logprob: -8.412257194519043
    8. 'au' → logprob: -8.537257194519043
    9. 'nt' → logprob: -8.912257194519043
    10. '_count' → logprob: -9.037257194519043

Token 93: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05728532373905182
    2. ' =' → logprob: -3.6822853088378906
    3. '=' → logprob: -3.9322853088378906
    4. ':' → logprob: -5.307285308837891
    5. 'def' → logprob: -6.807285308837891
    6. 'n' → logprob: -6.932285308837891
    7. '=[]' → logprob: -7.307285308837891
    8. ',' → logprob: -8.05728530883789
    9. '.' → logprob: -8.30728530883789
    10. 'class' → logprob: -8.93228530883789

Token 94: ' Li' (ID: 17850)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7737491726875305
    2. 'def' → logprob: -1.0237491130828857
    3. ' =' → logprob: -2.2737491130828857
    4. '=' → logprob: -3.6487491130828857
    5. 'n' → logprob: -4.398749351501465
    6. ':' → logprob: -4.398749351501465
    7. '_' → logprob: -4.898749351501465
    8. ' ' → logprob: -5.648749351501465
    9. ',' → logprob: -5.773749351501465
    10. ')' → logprob: -6.523749351501465

Token 95: 'ens' (ID: 696)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6639829277992249
    2. 'ne' → logprob: -1.78898286819458
    3. 'st' → logprob: -2.03898286819458
    4. 'nes' → logprob: -2.16398286819458
    5. 's' → logprob: -3.53898286819458
    6. ' =' → logprob: -3.66398286819458
    7. '=' → logprob: -4.91398286819458
    8. 'sts' → logprob: -5.91398286819458
    9. 'nen' → logprob: -6.28898286819458
    10. '#' → logprob: -6.66398286819458

Token 96: ' directs' (ID: 104758)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9243118166923523
    2. ':' → logprob: -1.799311876296997
    3. '=' → logprob: -2.174311876296997
    4. '#' → logprob: -2.174311876296997
    5. ' =' → logprob: -2.174311876296997
    6. 'n' → logprob: -2.924311876296997
    7. 'r' → logprob: -4.424311637878418
    8. '\n' → logprob: -5.799311637878418
    9. '[' → logprob: -5.924311637878418
    10. '.' → logprob: -5.924311637878418

Token 97: ' vers' (ID: 3640)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7723998427391052
    2. ':' → logprob: -1.02239990234375
    3. ' =' → logprob: -3.27239990234375
    4. '=' → logprob: -3.52239990234375
    5. ',' → logprob: -3.52239990234375
    6. '<|end|>' → logprob: -4.52239990234375
    7. '<|end|>' → logprob: -4.52239990234375
    8. '.' → logprob: -4.77239990234375
    9. 'def' → logprob: -4.77239990234375
    10. '\n' → logprob: -4.89739990234375

Token 98: ' méthodes' (ID: 95130)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9257503151893616
    2. 'le' → logprob: -1.1757502555847168
    3. 'la' → logprob: -2.175750255584717
    4. 'l' → logprob: -3.175750255584717
    5. 'https' → logprob: -3.800750255584717
    6. '#' → logprob: -4.175750255584717
    7. 'une' → logprob: -4.300750255584717
    8. ' la' → logprob: -4.425750255584717
    9. 'des' → logprob: -4.550750255584717
    10. ' les' → logprob: -5.050750255584717

Token 99: ' cour' (ID: 2871)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5297009944915771
    2. ':' → logprob: -2.154700994491577
    3. '<|end|>' → logprob: -2.279700994491577
    4. 's' → logprob: -2.779700994491577
    5. 'def' → logprob: -3.779700994491577
    6. '.' → logprob: -3.904700994491577
    7. '\n' → logprob: -4.154701232910156
    8. '
' → logprob: -4.529701232910156
    9. '<|end|>' → logprob: -4.654701232910156
    10. '\' → logprob: -4.904701232910156

Token 100: 'tes' (ID: 2822)
  Prédit: 'antes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.07478943467140198
    2. 'tes' → logprob: -3.199789524078369
    3. 'ant' → logprob: -3.824789524078369
    4. 'r' → logprob: -5.574789524078369
    5. 'ante' → logprob: -6.074789524078369
    6. 'ants' → logprob: -6.949789524078369
    7. 's' → logprob: -7.074789524078369
    8. 'amment' → logprob: -7.449789524078369
    9. 'a' → logprob: -8.074789047241211
    10. '#' → logprob: -8.574789047241211

Token 101: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17580334842205048
    2. '
' → logprob: -3.0508034229278564
    3. ':' → logprob: -3.6758034229278564
    4. 's' → logprob: -3.8008034229278564
    5. '<|end|>' → logprob: -4.050803184509277
    6. '\n' → logprob: -4.300803184509277
    7. 'def' → logprob: -4.425803184509277
    8. '<|end|>' → logprob: -5.675803184509277
    9. '\' → logprob: -5.925803184509277
    10. '#
' → logprob: -6.550803184509277

Token 102: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05854419618844986
    2. ':' → logprob: -3.433544158935547
    3. 'def' → logprob: -4.308544158935547
    4. ',' → logprob: -5.933544158935547
    5. '=' → logprob: -6.433544158935547
    6. 'class' → logprob: -6.558544158935547
    7. '.' → logprob: -7.433544158935547
    8. '[' → logprob: -7.558544158935547
    9. '[]' → logprob: -7.558544158935547
    10. '\n' → logprob: -7.683544158935547

Token 103: ' Fon' (ID: 83815)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7495763301849365
    2. 'def' → logprob: -0.7495763301849365
    3. 'd' → logprob: -4.249576568603516
    4. 'from' → logprob: -4.374576568603516
    5. '[]' → logprob: -5.624576568603516
    6. '=' → logprob: -5.999576568603516
    7. 'import' → logprob: -6.124576568603516
    8. 'L' → logprob: -6.249576568603516
    9. 'deque' → logprob: -6.249576568603516
    10. 'class' → logprob: -6.499576568603516

Token 104: 'ctions' (ID: 2620)
  Prédit: 'ctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctions' → logprob: -0.2998393177986145
    2. 'ction' → logprob: -1.5498392581939697
    3. 't' → logprob: -3.5498392581939697
    4. 'ct' → logprob: -4.174839496612549
    5. 'def' → logprob: -7.049839496612549
    6. '#' → logprob: -7.299839496612549
    7. 'c' → logprob: -7.424839496612549
    8. 'd' → logprob: -8.04983901977539
    9. '```' → logprob: -9.29983901977539
    10. 'de' → logprob: -10.42483901977539

Token 105: ' remplac' (ID: 140149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2485216110944748
    2. ':' → logprob: -1.7485215663909912
    3. ' def' → logprob: -3.998521566390991
    4. '_' → logprob: -4.99852180480957
    5. ' de' → logprob: -5.62352180480957
    6. '=' → logprob: -5.99852180480957
    7. ' =' → logprob: -6.12352180480957
    8. ':def' → logprob: -6.24852180480957
    9. ',' → logprob: -6.49852180480957
    10. 'de' → logprob: -6.74852180480957

Token 106: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.1444213092327118
    2. 'ant' → logprob: -2.144421339035034
    3. 'é' → logprob: -5.269421100616455
    4. 'er' → logprob: -5.394421100616455
    5. 'ée' → logprob: -5.894421100616455
    6. 'ement' → logprob: -7.019421100616455
    7. 'ees' → logprob: -7.144421100616455
    8. 'és' → logprob: -7.269421100616455
    9. 'ent' → logprob: -7.394421100616455
    10. 'es' → logprob: -7.519421100616455

Token 107: ' par' (ID: 686)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2293113470077515
    2. '=' → logprob: -1.3543113470077515
    3. 'def' → logprob: -1.3543113470077515
    4. '#' → logprob: -2.229311466217041
    5. ' =' → logprob: -3.979311466217041
    6. '
' → logprob: -4.104311466217041
    7. ',' → logprob: -4.479311466217041
    8. ':
' → logprob: -4.729311466217041
    9. '<|end|>' → logprob: -4.854311466217041
    10. ')' → logprob: -5.729311466217041

Token 108: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.8002707958221436
    2. ' des' → logprob: -1.6752707958221436
    3. 'lambda' → logprob: -1.6752707958221436
    4. ' lambda' → logprob: -3.3002707958221436
    5. 'leurs' → logprob: -3.4252707958221436
    6. ' leurs' → logprob: -3.9252707958221436
    7. 'l' → logprob: -4.300271034240723
    8. 'def' → logprob: -4.425271034240723
    9. 'd' → logprob: -4.925271034240723
    10. 'pass' → logprob: -5.050271034240723

Token 109: ' blocs' (ID: 182599)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5648395419120789
    2. 'express' → logprob: -1.4398396015167236
    3. 'l' → logprob: -3.4398396015167236
    4. 'variables' → logprob: -3.5648396015167236
    5. '#' → logprob: -4.0648393630981445
    6. ' lambda' → logprob: -4.5648393630981445
    7. ' lamb' → logprob: -4.5648393630981445
    8. 'lam' → logprob: -4.8148393630981445
    9. 'com' → logprob: -4.9398393630981445
    10. 'li' → logprob: -4.9398393630981445

Token 110: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4998719096183777
    2. '#' → logprob: -1.3748719692230225
    3. '

' → logprob: -3.2498719692230225
    4. '\n' → logprob: -3.7498719692230225
    5. '<|end|>' → logprob: -3.9998719692230225
    6. ':' → logprob: -4.249871730804443
    7. 'def' → logprob: -4.749871730804443
    8. '_' → logprob: -5.124871730804443
    9. '<|end|>' → logprob: -5.249871730804443
    10. ' ' → logprob: -5.374871730804443

Token 111: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19288256764411926
    2. '#' → logprob: -2.442882537841797
    3. '

' → logprob: -2.942882537841797
    4. ':' → logprob: -4.692882537841797
    5. '\n' → logprob: -4.942882537841797
    6. 'def' → logprob: -5.317882537841797
    7. '_' → logprob: -5.942882537841797
    8. '<|end|>' → logprob: -6.192882537841797
    9. '' → logprob: -6.442882537841797
    10. '\' → logprob: -6.567882537841797

Token 112: ' Solve' (ID: 116151)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8250126838684082
    2. '
' → logprob: -1.3250126838684082
    3. '_' → logprob: -2.325012683868408
    4. ' ' → logprob: -2.825012683868408
    5. 'def' → logprob: -2.950012683868408
    6. ' 
' → logprob: -3.700012683868408
    7. '\' → logprob: -4.325012683868408
    8. '\n' → logprob: -4.575012683868408
    9. '=' → logprob: -5.200012683868408
    10. '

' → logprob: -5.325012683868408

Token 113: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48883265256881714
    2. '(' → logprob: -1.363832712173462
    3. 'def' → logprob: -2.488832712173462
    4. '():' → logprob: -3.113832712173462
    5. ':' → logprob: -6.238832473754883
    6. '(
' → logprob: -7.488832473754883
    7. '_' → logprob: -7.988832473754883
    8. '```' → logprob: -8.863832473754883
    9. '()
' → logprob: -9.488832473754883
    10. ' ()' → logprob: -9.738832473754883

Token 114: 'se' (ID: 344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45869308710098267
    2. '):' → logprob: -1.083693027496338
    3. '():' → logprob: -4.333693027496338
    4. '()' → logprob: -4.458693027496338
    5. ' ):' → logprob: -6.208693027496338
    6. ' )' → logprob: -6.333693027496338
    7. '):
' → logprob: -7.333693027496338
    8. '())' → logprob: -9.083693504333496
    9. 'def' → logprob: -9.208693504333496
    10. '):

' → logprob: -10.333693504333496

Token 115: 'u' (ID: 84)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.03264967352151871
    2. 't' → logprob: -4.407649517059326
    3. 'r' → logprob: -4.907649517059326
    4. 'arch' → logprob: -5.657649517059326
    5. 'def' → logprob: -6.282649517059326
    6. 'lect' → logprob: -7.407649517059326
    7. 'd' → logprob: -7.782649517059326
    8. 'ss' → logprob: -7.782649517059326
    9. 'ction' → logprob: -7.782649517059326
    10. 'arching' → logprob: -8.032649993896484

Token 116: 'lement' (ID: 1254)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2794923186302185
    2. 'lement' → logprob: -1.9044923782348633
    3. 'def' → logprob: -3.2794923782348633
    4. 'per' → logprob: -5.029492378234863
    5. 'p' → logprob: -5.154492378234863
    6. 'rie' → logprob: -5.404492378234863
    7. 'dl' → logprob: -5.404492378234863
    8. 'do' → logprob: -5.654492378234863
    9. '```' → logprob: -5.654492378234863
    10. 'rement' → logprob: -5.779492378234863

Token 117: ' C' (ID: 363)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16865000128746033
    2. ' pour' → logprob: -3.293649911880493
    3. ' )' → logprob: -3.543649911880493
    4. 'pour' → logprob: -3.668649911880493
    5. ' for' → logprob: -4.168650150299072
    6. ' les' → logprob: -4.293650150299072
    7. 'def' → logprob: -4.668650150299072
    8. 'le' → logprob: -5.543650150299072
    9. 'for' → logprob: -5.793650150299072
    10. ' le' → logprob: -5.793650150299072

Token 118: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10060624778270721
    2. '):' → logprob: -3.1006062030792236
    3. '++)' → logprob: -4.850606441497803
    4. '++' → logprob: -4.975606441497803
    5. '#' → logprob: -5.100606441497803
    6. 'P' → logprob: -5.225606441497803
    7. 'ont' → logprob: -5.600606441497803
    8. ' )' → logprob: -5.600606441497803
    9. '+' → logprob: -6.350606441497803
    10. ':' → logprob: -6.475606441497803

Token 119: ' lancé' (ID: 104614)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041625555604696274
    2. '):' → logprob: -3.416625499725342
    3. 'def' → logprob: -5.541625499725342
    4. '()' → logprob: -6.416625499725342
    5. ' )' → logprob: -7.416625499725342
    6. ')
' → logprob: -8.0416259765625
    7. '())' → logprob: -8.0416259765625
    8. ':' → logprob: -8.5416259765625
    9. '():' → logprob: -8.5416259765625
    10. '#' → logprob: -8.7916259765625

Token 120: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024514105170965195
    2. '):' → logprob: -4.774514198303223
    3. 'def' → logprob: -4.899514198303223
    4. '()' → logprob: -5.524514198303223
    5. ')
' → logprob: -6.399514198303223
    6. ':' → logprob: -7.524514198303223
    7. '())' → logprob: -8.024514198303223
    8. '():' → logprob: -8.024514198303223
    9. '
' → logprob: -8.399514198303223
    10. ' )' → logprob: -8.399514198303223

Token 121: 'if' (ID: 366)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7714752554893494
    2. '
' → logprob: -1.1464753150939941
    3. ':' → logprob: -2.771475315093994
    4. '(' → logprob: -3.021475315093994
    5. '\' → logprob: -3.521475315093994
    6. 'd' → logprob: -3.771475315093994
    7. '#' → logprob: -3.896475315093994
    8. '

' → logprob: -4.896475315093994
    9. '\n' → logprob: -5.271475315093994
    10. '(
' → logprob: -5.396475315093994

Token 122: ' True' (ID: 6432)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012880063615739346
    2. '__' → logprob: -4.387879848480225
    3. ' True' → logprob: -8.262880325317383
    4. ' ' → logprob: -10.262880325317383
    5. ' ' → logprob: -10.387880325317383
    6. '_' → logprob: -10.637880325317383
    7. ' _' → logprob: -11.012880325317383
    8. ' False' → logprob: -13.387880325317383
    9. ' len' → logprob: -14.137880325317383
    10. 'True' → logprob: -14.262880325317383

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.491498531133402e-06
    2. ' :' → logprob: -12.250009536743164
    3. ':
' → logprob: -12.875009536743164
    4. ':**' → logprob: -13.375009536743164
    5. '():' → logprob: -15.250009536743164
    6. ':def' → logprob: -16.500009536743164
    7. '):' → logprob: -16.625009536743164
    8. ':return' → logprob: -17.375009536743164
    9. ',:' → logprob: -17.625009536743164
    10. ',' → logprob: -17.875009536743164

Token 124: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38497671484947205
    2. '   ' → logprob: -1.2599767446517944
    3. '    
' → logprob: -4.134976863861084
    4. '    ' → logprob: -5.009976863861084
    5. '
' → logprob: -5.384976863861084
    6. ' :' → logprob: -5.634976863861084
    7. '\n' → logprob: -7.134976863861084
    8. ':
' → logprob: -7.134976863861084
    9. '\' → logprob: -7.634976863861084
    10. '<|end|>' → logprob: -7.634976863861084

Token 125: ' #' (ID: 1069)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5107349753379822
    2. 'def' → logprob: -1.135735034942627
    3. '    ' → logprob: -3.510735034942627
    4. ' ' → logprob: -4.010735034942627
    5. ' n' → logprob: -4.385735034942627
    6. '   ' → logprob: -5.510735034942627
    7. 'n' → logprob: -5.760735034942627
    8. ' input' → logprob: -5.760735034942627
    9. 'input' → logprob: -6.385735034942627
    10. 'from' → logprob: -7.260735034942627

Token 126: ' On' (ID: 2160)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7136746644973755
    2. 'n' → logprob: -1.5886746644973755
    3. ' input' → logprob: -2.338674545288086
    4. ' def' → logprob: -2.713674545288086
    5. 'def' → logprob: -2.963674545288086
    6. 'input' → logprob: -3.588674545288086
    7. '    ' → logprob: -4.588674545288086
    8. ' N' → logprob: -4.963674545288086
    9. 'from' → logprob: -5.338674545288086
    10. ' class' → logprob: -5.588674545288086

Token 127: ' réduit' (ID: 120775)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1162471771240234
    2. ' =' → logprob: -1.4912471771240234
    3. 'def' → logprob: -1.8662471771240234
    4. 'n' → logprob: -2.4912471771240234
    5. ' def' → logprob: -3.2412471771240234
    6. ' n' → logprob: -4.116247177124023
    7. 's' → logprob: -4.491247177124023
    8. ' ' → logprob: -4.491247177124023
    9. ' range' → logprob: -4.616247177124023
    10. '_' → logprob: -4.741247177124023

Token 128: ' tout' (ID: 5501)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8798361420631409
    2. ' la' → logprob: -1.379836082458496
    3. '   ' → logprob: -2.254836082458496
    4. 'l' → logprob: -3.004836082458496
    5. ' les' → logprob: -3.129836082458496
    6. ' le' → logprob: -3.379836082458496
    7. 'le' → logprob: -3.629836082458496
    8. '    ' → logprob: -4.254836082458496
    9. 'range' → logprob: -4.254836082458496
    10. ' ' → logprob: -4.879836082458496

Token 129: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2523041069507599
    2. '    ' → logprob: -2.0023040771484375
    3. ' ' → logprob: -4.0023040771484375
    4. ' de' → logprob: -5.0023040771484375
    5. 'def' → logprob: -5.1273040771484375
    6. ' l' → logprob: -5.1273040771484375
    7. '  ' → logprob: -5.1273040771484375
    8. ' les' → logprob: -5.1273040771484375
    9. ' la' → logprob: -5.2523040771484375
    10. '<|end|>' → logprob: -5.3773040771484375

Token 130: ' cas' (ID: 2108)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.15505950152873993
    2. 'maximum' → logprob: -2.905059576034546
    3. 'max' → logprob: -3.030059576034546
    4. 'min' → logprob: -3.280059576034546
    5. 'nombre' → logprob: -7.780059337615967
    6. 'plus' → logprob: -7.905059337615967
    7. 'moins' → logprob: -7.905059337615967
    8. 'strict' → logprob: -8.030059814453125
    9. 'len' → logprob: -8.530059814453125
    10. 'minimal' → logprob: -8.780059814453125

Token 131: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8117848634719849
    2. ' test' → logprob: -1.9367848634719849
    3. ' par' → logprob: -2.3117847442626953
    4. ' particulier' → logprob: -2.3117847442626953
    5. 's' → logprob: -2.4367847442626953
    6. ' e' → logprob: -3.0617847442626953
    7. '  ' → logprob: -3.1867847442626953
    8. ' standard' → logprob: -3.4367847442626953
    9. 'e' → logprob: -3.6867847442626953
    10. ' ' → logprob: -3.8117847442626953

Token 132: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.047549400478601456
    2. '   ' → logprob: -3.1725494861602783
    3. ' :' → logprob: -5.797549247741699
    4. ':
' → logprob: -7.672549247741699
    5. '    ' → logprob: -8.1725492477417
    6. '  ' → logprob: -8.6725492477417
    7. '    
' → logprob: -9.2975492477417
    8. 'def' → logprob: -9.2975492477417
    9. ',' → logprob: -9.5475492477417
    10. '
' → logprob: -9.7975492477417

Token 133: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.278030127286911
    2. '   ' → logprob: -1.5280301570892334
    3. ' :' → logprob: -3.7780301570892334
    4. '    
' → logprob: -7.153029918670654
    5. ',' → logprob: -7.403029918670654
    6. '    ' → logprob: -8.028030395507812
    7. '
' → logprob: -8.528030395507812
    8. '  ' → logprob: -8.778030395507812
    9. 'def' → logprob: -8.903030395507812
    10. ' ' → logprob: -8.903030395507812

Token 134: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5855370163917542
    2. ' def' → logprob: -0.9605370163917542
    3. '   ' → logprob: -3.5855369567871094
    4. ' input' → logprob: -4.460536956787109
    5. 'class' → logprob: -5.335536956787109
    6. ' class' → logprob: -5.585536956787109
    7. ' n' → logprob: -5.585536956787109
    8. 'input' → logprob: -5.710536956787109
    9. 'n' → logprob: -5.960536956787109
    10. 'import' → logprob: -7.210536956787109

Token 135: ' Read' (ID: 5405)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1741146594285965
    2. ' def' → logprob: -2.29911470413208
    3. 'class' → logprob: -3.42411470413208
    4. '   ' → logprob: -4.29911470413208
    5. ' class' → logprob: -5.54911470413208
    6. ' n' → logprob: -6.17411470413208
    7. 'input' → logprob: -6.17411470413208
    8. 'n' → logprob: -6.17411470413208
    9. ' input' → logprob: -6.42411470413208
    10. '    ' → logprob: -7.67411470413208

Token 136: ' input' (ID: 3422)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.598606288433075
    2. '()' → logprob: -1.2236063480377197
    3. ' ' → logprob: -2.5986063480377197
    4. '(' → logprob: -3.5986063480377197
    5. '  ' → logprob: -4.973606109619141
    6. '_' → logprob: -4.973606109619141
    7. 'input' → logprob: -5.098606109619141
    8. '   ' → logprob: -5.473606109619141
    9. '    ' → logprob: -5.598606109619141
    10. ' input' → logprob: -5.598606109619141

Token 137: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09360116720199585
    2. ':' → logprob: -4.093601226806641
    3. '()' → logprob: -4.093601226806641
    4. ' =' → logprob: -4.343601226806641
    5. 'n' → logprob: -4.468601226806641
    6. ',' → logprob: -5.218601226806641
    7. 'input' → logprob: -5.468601226806641
    8. ' ' → logprob: -5.968601226806641
    9. '
' → logprob: -6.218601226806641
    10. '(' → logprob: -6.218601226806641

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2283964902162552
    2. '()' → logprob: -2.103396415710449
    3. ':' → logprob: -3.353396415710449
    4. '(' → logprob: -3.853396415710449
    5. '():' → logprob: -4.978396415710449
    6. ' =' → logprob: -5.478396415710449
    7. ',' → logprob: -5.853396415710449
    8. ' ' → logprob: -6.478396415710449
    9. '\n' → logprob: -6.603396415710449
    10. '    
' → logprob: -6.728396415710449

Token 139: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3371181786060333
    2. 'n' (adapté à ' n') → logprob: -2.212118148803711
    3. '   ' → logprob: -2.962118148803711
    4. 'input' → logprob: -3.087118148803711
    5. ' n' → logprob: -4.587118148803711
    6. ' 
' → logprob: -4.712118148803711
    7. '(' → logprob: -4.712118148803711
    8. '    ' → logprob: -4.837118148803711
    9. 'x' → logprob: -4.837118148803711
    10. 'def' → logprob: -5.212118148803711

Token 140: '_and' (ID: 18645)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12164423614740372
    2. ',' → logprob: -2.2466442584991455
    3. '=' → logprob: -4.871644020080566
    4. ' ,' → logprob: -7.246644020080566
    5. '=int' → logprob: -8.496644020080566
    6. ' ' → logprob: -9.121644020080566
    7. ')' → logprob: -10.371644020080566
    8. '=input' → logprob: -10.871644020080566
    9. ',n' → logprob: -11.371644020080566
    10. ',int' → logprob: -11.871644020080566

Token 141: '_x' (ID: 7054)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.9955805540084839
    2. '_m' → logprob: -1.4955805540084839
    3. 'k' → logprob: -2.6205806732177734
    4. 'm' → logprob: -2.7455806732177734
    5. '_data' → logprob: -3.1205806732177734
    6. '_' → logprob: -3.3705806732177734
    7. '_q' → logprob: -3.3705806732177734
    8. ' =' → logprob: -3.6205806732177734
    9. '_rest' → logprob: -3.7455806732177734
    10. '_a' → logprob: -4.120580673217773

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4319833219051361
    2. '=' → logprob: -1.0569833517074585
    3. ',' → logprob: -5.806983470916748
    4. 's' → logprob: -9.55698299407959
    5. '=input' → logprob: -9.93198299407959
    6. ')' → logprob: -9.93198299407959
    7. '_' → logprob: -10.18198299407959
    8. 'input' → logprob: -11.55698299407959
    9. '_input' → logprob: -11.68198299407959
    10. '[' → logprob: -11.93198299407959

Token 143: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.1691513955593109
    2. 'input' → logprob: -2.4191513061523438
    3. 'list' → logprob: -2.9191513061523438
    4. 'sys' → logprob: -4.794151306152344
    5. ' stdin' → logprob: -6.044151306152344
    6. ' input' → logprob: -7.544151306152344
    7. '(stdin' → logprob: -7.669151306152344
    8. 'map' → logprob: -8.419151306152344
    9. '.stdin' → logprob: -8.544151306152344
    10. 'tuple' → logprob: -8.919151306152344

Token 144: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002028923248872161
    2. '.' → logprob: -6.252028942108154
    3. '.read' → logprob: -9.252028465270996
    4. '.readlines' → logprob: -12.377028465270996
    5. '().' → logprob: -16.877029418945312
    6. ' readline' → logprob: -17.127029418945312
    7. '.buffer' → logprob: -17.627029418945312
    8. '.rstrip' → logprob: -18.252029418945312
    9. ' .' → logprob: -18.377029418945312
    10. ').' → logprob: -18.377029418945312

Token 145: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5759742856025696
    2. '()' → logprob: -0.8259742856025696
    3. '(' → logprob: -10.450974464416504
    4. '())' → logprob: -12.700974464416504
    5. ' ()' → logprob: -14.200974464416504
    6. '()`' → logprob: -14.575974464416504
    7. '()
' → logprob: -14.950974464416504
    8. ' ().' → logprob: -15.450974464416504
    9. '()).' → logprob: -15.575974464416504
    10. '（）' → logprob: -15.575974464416504

Token 146: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0005806732806377113
    2. 'rstrip' → logprob: -7.500580787658691
    3. 'split' → logprob: -10.500580787658691
    4. ' strip' → logprob: -15.875580787658691
    5. '(strip' → logprob: -17.875579833984375
    6. 'decode' → logprob: -19.250579833984375
    7. '.strip' → logprob: -19.875579833984375
    8. '_strip' → logprob: -20.625579833984375
    9. 'stripe' → logprob: -21.125579833984375
    10. 'read' → logprob: -21.250579833984375

Token 147: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03818298876285553
    2. '(' → logprob: -3.2881829738616943
    3. '('' → logprob: -9.288183212280273
    4. '(
' → logprob: -11.538183212280273
    5. '()]' → logprob: -11.788183212280273
    6. '()
' → logprob: -11.913183212280273
    7. '("("' → logprob: -12.038183212280273
    8. '())' → logprob: -12.663183212280273
    9. '()[' → logprob: -12.913183212280273
    10. '();' → logprob: -13.163183212280273

Token 148: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11437608301639557
    2. ' ' → logprob: -3.7393760681152344
    3. '<|end|>' → logprob: -3.8643760681152344
    4. ')' → logprob: -4.364376068115234
    5. '\n' → logprob: -4.364376068115234
    6. '(' → logprob: -4.489376068115234
    7. '()' → logprob: -5.114376068115234
    8. '[n' → logprob: -5.364376068115234
    9. '0' → logprob: -6.239376068115234
    10. '   ' → logprob: -6.364376068115234

Token 149: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012216001749038696
    2. '[n' → logprob: -5.762216091156006
    3. ' n' → logprob: -5.887216091156006
    4. '[' → logprob: -6.137216091156006
    5. 'x' → logprob: -6.637216091156006
    6. '\n' → logprob: -7.012216091156006
    7. '0' → logprob: -7.387216091156006
    8. '   ' → logprob: -8.387215614318848
    9. '[
' → logprob: -8.387215614318848
    10. '['' → logprob: -9.262215614318848

Token 150: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2504788041114807
    2. ' len' → logprob: -2.500478744506836
    3. 'len' → logprob: -2.625478744506836
    4. 'not' → logprob: -3.000478744506836
    5. ' n' → logprob: -4.625478744506836
    6. 'n' → logprob: -5.000478744506836
    7. ' True' → logprob: -7.625478744506836
    8. 'True' → logprob: -8.750478744506836
    9. '(len' → logprob: -9.875478744506836
    10. ' ' → logprob: -10.000478744506836

Token 151: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005966123193502426
    2. '(' → logprob: -5.1309661865234375
    3. 'n' → logprob: -10.505966186523438
    4. ' n' → logprob: -12.380966186523438
    5. ' (' → logprob: -13.005966186523438
    6. '(
' → logprob: -13.755966186523438
    7. '()' → logprob: -14.505966186523438
    8. ')n' → logprob: -15.005966186523438
    9. '(next' → logprob: -15.630966186523438
    10. '<n' → logprob: -15.630966186523438

Token 152: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -4.263011578586884e-05
    2. '_' → logprob: -10.375042915344238
    3. '_n' → logprob: -12.625042915344238
    4. 'and' → logprob: -13.125042915344238
    5. '_or' → logprob: -13.625042915344238
    6. '>' → logprob: -14.250042915344238
    7. ')' → logprob: -14.375042915344238
    8. '_an' → logprob: -14.500042915344238
    9. '_a' → logprob: -15.250042915344238
    10. ' and' → logprob: -15.375042915344238

Token 153: '_x' (ID: 7054)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007169385906308889
    2. '_x' → logprob: -5.132169246673584
    3. 'n' → logprob: -6.757169246673584
    4. ' x' → logprob: -9.757169723510742
    5. '_n' → logprob: -12.132169723510742
    6. '_' → logprob: -12.757169723510742
    7. ' n' → logprob: -13.632169723510742
    8. '_and' → logprob: -13.632169723510742
    9. '
' → logprob: -13.882169723510742
    10. '```' → logprob: -14.007169723510742

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018252136185765266
    2. ')<' → logprob: -4.018252372741699
    3. ' )' → logprob: -9.5182523727417
    4. ')==' → logprob: -11.1432523727417
    5. '<' → logprob: -11.6432523727417
    6. ' <' → logprob: -13.2682523727417
    7. ')<=' → logprob: -13.3932523727417
    8. ')!=' → logprob: -14.7682523727417
    9. '<n' → logprob: -15.0182523727417
    10. '[' → logprob: -15.0182523727417

Token 155: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3874209523200989
    2. '<' → logprob: -1.137420892715454
    3. '<n' → logprob: -8.012420654296875
    4. '<len' → logprob: -9.387420654296875
    5. '==' → logprob: -10.262420654296875
    6. ' ==' → logprob: -10.762420654296875
    7. ' <=' → logprob: -11.262420654296875
    8. '<int' → logprob: -11.637420654296875
    9. '<=' → logprob: -11.762420654296875
    10. '<size' → logprob: -11.887420654296875

Token 156: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026303434744477272
    2. ' ' → logprob: -3.65130352973938
    3. '1' → logprob: -13.2763032913208
    4. '3' → logprob: -14.8388032913208
    5. ' ' → logprob: -15.6513032913208
    6. '   ' → logprob: -15.7763032913208
    7. '```' → logprob: -16.588804244995117
    8. '>' → logprob: -16.713804244995117
    9. '  ' → logprob: -16.713804244995117
    10. ')' → logprob: -16.713804244995117

Token 157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015062130114529282
    2. ' ' → logprob: -8.875150680541992
    3. '1' → logprob: -11.500150680541992
    4. '3' → logprob: -14.875150680541992
    5. '   ' → logprob: -16.687650680541992
    6. '
' → logprob: -16.812650680541992
    7. ')' → logprob: -17.125150680541992
    8. '```' → logprob: -17.312650680541992
    9. ' ' → logprob: -17.750150680541992
    10. '

' → logprob: -17.875150680541992

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006916888058185577
    2. ':
' → logprob: -5.7569169998168945
    3. ' :' → logprob: -6.1319169998168945
    4. ' or' → logprob: -6.6319169998168945
    5. '   ' → logprob: -9.631916999816895
    6. ' and' → logprob: -9.631916999816895
    7. '):' → logprob: -10.256916999816895
    8. ' :
' → logprob: -10.506916999816895
    9. 'and' → logprob: -11.381916999816895
    10. 'or' → logprob: -11.506916999816895

Token 159: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.748310387134552
    2. ' n' → logprob: -1.1233103275299072
    3. 'n' → logprob: -1.8733103275299072
    4. '    ' → logprob: -3.1233103275299072
    5. ' 
' → logprob: -7.498310565948486
    6. '     
' → logprob: -7.498310565948486
    7. ' ' → logprob: -7.748310565948486
    8. '    
' → logprob: -7.998310565948486
    9. ' stdin' → logprob: -7.998310565948486
    10. ' readline' → logprob: -8.248310089111328

Token 160: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.07284027338027954
    2. ' n' → logprob: -2.6978402137756348
    3. '   ' → logprob: -5.947840213775635
    4. '    ' → logprob: -8.697840690612793
    5. '	n' → logprob: -9.447840690612793
    6. 'line' → logprob: -11.447840690612793
    7. '       ' → logprob: -11.947840690612793
    8. ' line' → logprob: -12.447840690612793
    9. ' ' → logprob: -12.572840690612793
    10. '    
' → logprob: -12.697840690612793

Token 161: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.00023274161503650248
    2. '_' → logprob: -8.500232696533203
    3. 'and' → logprob: -11.500232696533203
    4. '._' → logprob: -12.000232696533203
    5. '_or' → logprob: -12.625232696533203
    6. '.append' → logprob: -13.500232696533203
    7. '_
' → logprob: -14.000232696533203
    8. 'n' → logprob: -14.375232696533203
    9. '_for' → logprob: -14.500232696533203
    10. '_AND' → logprob: -14.500232696533203

Token 162: '_x' (ID: 7054)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5760735869407654
    2. '_x' → logprob: -0.8260735869407654
    3. '_and' → logprob: -9.57607364654541
    4. 'and' → logprob: -10.32607364654541
    5. '_' → logprob: -11.57607364654541
    6. 'n' → logprob: -12.20107364654541
    7. ' x' → logprob: -12.57607364654541
    8. '(x' → logprob: -12.82607364654541
    9. '+x' → logprob: -13.45107364654541
    10. 'X' → logprob: -13.95107364654541

Token 163: ' +=' (ID: 2757)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.4175589680671692
    2. '+=' → logprob: -1.1675589084625244
    3. ' +=' → logprob: -3.6675589084625244
    4. '.append' → logprob: -5.7925591468811035
    5. '+' → logprob: -7.1675591468811035
    6. '=' → logprob: -7.7925591468811035
    7. 'extend' → logprob: -9.167558670043945
    8. '.' → logprob: -9.417558670043945
    9. ' =' → logprob: -9.667558670043945
    10. ' ' → logprob: -10.292558670043945

Token 164: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.02333609201014042
    2. ' stdin' → logprob: -3.773336172103882
    3. '(stdin' → logprob: -9.523336410522461
    4. 'stdout' → logprob: -11.398336410522461
    5. '.stdin' → logprob: -12.398336410522461
    6. 'st' → logprob: -14.398336410522461
    7. ' ' → logprob: -14.648336410522461
    8. 'sys' → logprob: -15.148336410522461
    9. 'list' → logprob: -15.273336410522461
    10. 'stderr' → logprob: -15.398336410522461

Token 165: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.9361264946837764e-07
    2. '.read' → logprob: -15.875
    3. '.' → logprob: -18.375
    4. ' readline' → logprob: -18.5
    5. '.readlines' → logprob: -18.625
    6. '().' → logprob: -18.625
    7. 'read' → logprob: -21.125
    8. ' .' → logprob: -21.375
    9. '.stdin' → logprob: -23.375
    10. '_read' → logprob: -23.625

Token 166: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.339278580620885e-06
    2. '()' → logprob: -13.000001907348633
    3. ' ().' → logprob: -18.000001907348633
    4. '().'' → logprob: -20.000001907348633
    5. '(' → logprob: -20.250001907348633
    6. '.readline' → logprob: -20.500001907348633
    7. '()).' → logprob: -21.000001907348633
    8. '('').' → logprob: -21.000001907348633
    9. '()
' → logprob: -21.125001907348633
    10. '()?.' → logprob: -21.875001907348633

Token 167: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.632542913896032e-05
    2. 'strip' → logprob: -10.000046730041504
    3. ' split' → logprob: -14.500046730041504
    4. 'rstrip' → logprob: -14.750046730041504
    5. '(split' → logprob: -19.125045776367188
    6. 'spl' → logprob: -19.750045776367188
    7. '.split' → logprob: -20.000045776367188
    8. 'read' → logprob: -20.125045776367188
    9. '_split' → logprob: -22.250045776367188
    10. 'decode' → logprob: -22.375045776367188

Token 168: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01700487732887268
    2. ')' → logprob: -4.51700496673584
    3. '
' → logprob: -6.26700496673584
    4. '[' → logprob: -7.14200496673584
    5. '    
' → logprob: -7.39200496673584
    6. 'n' → logprob: -7.76700496673584
    7. '(n' → logprob: -8.26700496673584
    8. '    ' → logprob: -8.26700496673584
    9. 'newline' → logprob: -8.51700496673584
    10. '#' → logprob: -8.89200496673584

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09017740190029144
    2. '    
' → logprob: -3.340177297592163
    3. 'n' → logprob: -4.465177536010742
    4. ' 
' → logprob: -4.590177536010742
    5. ' ' → logprob: -5.090177536010742
    6. '[' → logprob: -5.090177536010742
    7. '   
' → logprob: -5.715177536010742
    8. ')' → logprob: -5.965177536010742
    9. '    ' → logprob: -6.215177536010742
    10. '  
' → logprob: -6.465177536010742

Token 170: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.052248984575271606
    2. ' n' → logprob: -3.052248954772949
    3. ')' → logprob: -6.302248954772949
    4. '   ' → logprob: -7.302248954772949
    5. '0' → logprob: -8.42724895477295
    6. ' )' → logprob: -8.92724895477295
    7. ' ' → logprob: -9.05224895477295
    8. ',' → logprob: -9.30224895477295
    9. ')n' → logprob: -9.42724895477295
    10. 'x' → logprob: -9.55224895477295

Token 171: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014703769236803055
    2. ' =' → logprob: -4.764703750610352
    3. ' ,' → logprob: -6.014703750610352
    4. '=' → logprob: -6.014703750610352
    5. ',n' → logprob: -7.514703750610352
    6. '=int' → logprob: -8.264703750610352
    7. ',int' → logprob: -8.764703750610352
    8. ',x' → logprob: -9.514703750610352
    9. '_,' → logprob: -9.764703750610352
    10. ',
' → logprob: -11.014703750610352

Token 172: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3132667541503906
    2. ' int' → logprob: -1.3132667541503906
    3. ' n' → logprob: -12.68826675415039
    4. 'n' → logprob: -13.68826675415039
    5. '(int' → logprob: -15.18826675415039
    6. '=int' → logprob: -15.93826675415039
    7. '   ' → logprob: -16.06326675415039
    8. '	int' → logprob: -16.18826675415039
    9. '[int' → logprob: -16.43826675415039
    10. '    ' → logprob: -16.43826675415039

Token 173: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005234002135694027
    2. '(' → logprob: -5.2552337646484375
    3. 'n' → logprob: -16.380233764648438
    4. '(
' → logprob: -17.380233764648438
    5. ' (' → logprob: -17.505233764648438
    6. '('' → logprob: -17.505233764648438
    7. '(

' → logprob: -18.505233764648438
    8. '((' → logprob: -20.130233764648438
    9. '(x' → logprob: -20.255233764648438
    10. '("' → logprob: -20.630233764648438

Token 174: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -9.088346359931165e-07
    2. '(n' → logprob: -14.750000953674316
    3. 'and' → logprob: -15.625000953674316
    4. '[n' → logprob: -16.625
    5. '_n' → logprob: -16.875
    6. '[' → logprob: -17.5
    7. 'n' → logprob: -17.75
    8. ')' → logprob: -18.125
    9. '_or' → logprob: -18.25
    10. '_AND' → logprob: -18.375

Token 175: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.01825377531349659
    2. 'x' → logprob: -4.143253803253174
    3. '_and' → logprob: -6.643253803253174
    4. 'and' → logprob: -7.143253803253174
    5. '_' → logprob: -9.768253326416016
    6. '_n' → logprob: -11.268253326416016
    7. ')' → logprob: -11.643253326416016
    8. '[x' → logprob: -11.893253326416016
    9. '(x' → logprob: -12.143253326416016
    10. 'n' → logprob: -12.393253326416016

Token 176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.703443770878948e-06
    2. ' [' → logprob: -12.000007629394531
    3. '0' → logprob: -14.375007629394531
    4. ')' → logprob: -14.750007629394531
    5. '   ' → logprob: -15.500007629394531
    6. '1' → logprob: -15.750007629394531
    7. ' ' → logprob: -18.00000762939453
    8. '[
' → logprob: -18.25000762939453
    9. '
' → logprob: -19.50000762939453
    10. ')[' → logprob: -19.62500762939453

Token 177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.875003814697266
    3. ' ' → logprob: -13.875003814697266
    4. '   ' → logprob: -18.250003814697266
    5. '1' → logprob: -21.000003814697266
    6. ')' → logprob: -21.250003814697266
    7. '(' → logprob: -21.750003814697266
    8. '00' → logprob: -21.750003814697266
    9. '  ' → logprob: -21.875003814697266
    10. ' [' → logprob: -22.500003814697266

Token 178: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004141449462622404
    2. ')
' → logprob: -5.504141330718994
    3. ' )' → logprob: -10.004141807556152
    4. '])' → logprob: -11.504141807556152
    5. ' )
' → logprob: -12.629141807556152
    6. ')

' → logprob: -13.629141807556152
    7. ']' → logprob: -13.879141807556152
    8. '),' → logprob: -14.629141807556152
    9. ');' → logprob: -15.004141807556152
    10. ')
' → logprob: -15.629141807556152

Token 179: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14185558259487152
    2. '<|end|>' → logprob: -2.891855478286743
    3. 'n' → logprob: -3.891855478286743
    4. '   ' → logprob: -4.266855716705322
    5. ' )' → logprob: -4.641855716705322
    6. '  ' → logprob: -4.641855716705322
    7. 'x' → logprob: -4.891855716705322
    8. ')' → logprob: -4.891855716705322
    9. '    ' → logprob: -5.891855716705322
    10. ' n' → logprob: -6.391855716705322

Token 180: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.01110394112765789
    2. ' x' → logprob: -4.511104106903076
    3. 'int' → logprob: -10.886103630065918
    4. '   ' → logprob: -11.636103630065918
    5. ' ' → logprob: -11.761103630065918
    6. 'X' → logprob: -11.886103630065918
    7. 'n' → logprob: -12.386103630065918
    8. ')' → logprob: -14.136103630065918
    9. '    
' → logprob: -14.323603630065918
    10. '    ' → logprob: -14.448603630065918

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760025382041931
    2. '=' → logprob: -0.8260025382041931
    3. '=int' → logprob: -10.07600212097168
    4. ' ' → logprob: -11.20100212097168
    5. ')' → logprob: -12.32600212097168
    6. '_' → logprob: -14.70100212097168
    7. ' ' → logprob: -14.70100212097168
    8. ',' → logprob: -14.82600212097168
    9. '=
' → logprob: -15.20100212097168
    10. 'x' → logprob: -15.70100212097168

Token 182: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16023662686347961
    2. ' int' → logprob: -1.9102365970611572
    3. 'float' → logprob: -11.910236358642578
    4. ' float' → logprob: -13.035236358642578
    5. ' ' → logprob: -14.160236358642578
    6. ' n' → logprob: -14.410236358642578
    7. '(int' → logprob: -14.410236358642578
    8. '   ' → logprob: -14.785236358642578
    9. 'n' → logprob: -15.035236358642578
    10. '[int' → logprob: -15.285236358642578

Token 183: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015095012495294213
    2. '(' → logprob: -6.751509666442871
    3. ' (' → logprob: -8.001509666442871
    4. ')' → logprob: -12.876509666442871
    5. 'n' → logprob: -13.876509666442871
    6. '(x' → logprob: -15.626509666442871
    7. ' n' → logprob: -15.751509666442871
    8. ' )' → logprob: -16.001508712768555
    9. ' ' → logprob: -16.251508712768555
    10. ')(' → logprob: -17.376508712768555

Token 184: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.7432603272027336e-06
    2. 'and' → logprob: -13.375001907348633
    3. '_AND' → logprob: -16.875001907348633
    4. ' and' → logprob: -17.875001907348633
    5. '[' → logprob: -18.375001907348633
    6. ')' → logprob: -18.375001907348633
    7. 'n' → logprob: -18.500001907348633
    8. '_or' → logprob: -18.625001907348633
    9. 'And' → logprob: -19.125001907348633
    10. '[n' → logprob: -19.625001907348633

Token 185: '_x' (ID: 7054)
  Prédit: '_and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.06296998262405396
    2. 'and' → logprob: -3.562969923019409
    3. 'x' → logprob: -3.687969923019409
    4. '_x' → logprob: -5.187970161437988
    5. 'n' → logprob: -6.312970161437988
    6. '(n' → logprob: -10.312970161437988
    7. '[' → logprob: -10.562970161437988
    8. 'And' → logprob: -10.687970161437988
    9. '(x' → logprob: -10.937970161437988
    10. 'a' → logprob: -11.062970161437988

Token 186: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02840939164161682
    2. '_and' → logprob: -3.653409481048584
    3. '_' → logprob: -6.903409481048584
    4. '1' → logprob: -7.778409481048584
    5. 'and' → logprob: -8.528409004211426
    6. '_x' → logprob: -8.903409004211426
    7. '_[' → logprob: -9.653409004211426
    8. ')' → logprob: -9.903409004211426
    9. '_n' → logprob: -10.153409004211426
    10. '
' → logprob: -10.528409004211426

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.790129555156454e-05
    2. ' ' → logprob: -9.875067710876465
    3. '[' → logprob: -12.937567710876465
    4. '0' → logprob: -13.125067710876465
    5. '
' → logprob: -13.187567710876465
    6. '   ' → logprob: -13.250067710876465
    7. '```' → logprob: -13.375067710876465
    8. '])' → logprob: -13.437567710876465
    9. ']' → logprob: -13.687567710876465
    10. '2' → logprob: -14.000067710876465

Token 188: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. ')
' → logprob: -10.625028610229492
    3. ' )' → logprob: -12.875028610229492
    4. '   ' → logprob: -14.000028610229492
    5. '))' → logprob: -15.500028610229492
    6. '),' → logprob: -15.750028610229492
    7. '')' → logprob: -16.125028610229492
    8. ')

' → logprob: -16.250028610229492
    9. '}' → logprob: -16.375028610229492
    10. '})' → logprob: -16.625028610229492

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020549481734633446
    2. '    
' → logprob: -5.270549297332764
    3. ')' → logprob: -5.395549297332764
    4. 'data' → logprob: -5.895549297332764
    5. 'a' → logprob: -6.145549297332764
    6. 'n' → logprob: -6.520549297332764
    7. '
' → logprob: -7.145549297332764
    8. 's' → logprob: -7.520549297332764
    9. ',' → logprob: -8.270549774169922
    10. 'array' → logprob: -8.395549774169922

Token 190: ' xn' (ID: 125478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08824625611305237
    2. 'arr' → logprob: -3.0882463455200195
    3. 'A' → logprob: -4.3382463455200195
    4. 'weights' → logprob: -5.8382463455200195
    5. 'cards' → logprob: -6.0882463455200195
    6. '   ' → logprob: -6.0882463455200195
    7. 'coins' → logprob: -6.0882463455200195
    8. 'numbers' → logprob: -6.2132463455200195
    9. 'w' → logprob: -6.5882463455200195
    10. 's' → logprob: -6.7132463455200195

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5551176071166992
    2. 's' → logprob: -1.4301176071166992
    3. '=' → logprob: -2.055117607116699
    4. '_' → logprob: -3.680117607116699
    5. '_list' → logprob: -4.180117607116699
    6. '_values' → logprob: -4.930117607116699
    7. '_arr' → logprob: -7.055117607116699
    8. 'umbers' → logprob: -7.055117607116699
    9. '_numbers' → logprob: -7.055117607116699
    10. 'a' → logprob: -7.180117607116699

Token 192: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.19811123609542847
    2. '[x' → logprob: -2.4481112957000732
    3. 'x' → logprob: -3.3231112957000732
    4. ' []' → logprob: -4.573111057281494
    5. 'stdin' → logprob: -4.573111057281494
    6. ' [' → logprob: -4.698111057281494
    7. '[' → logprob: -4.698111057281494
    8. '[n' → logprob: -5.323111057281494
    9. '[int' → logprob: -5.573111057281494
    10. 'list' → logprob: -5.948111057281494

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8939108848571777
    2. 'for' → logprob: -1.1439108848571777
    3. 'while' → logprob: -1.3939108848571777
    4. ' while' → logprob: -4.518910884857178
    5. ' for' → logprob: -4.643910884857178
    6. '	while' → logprob: -7.518910884857178
    7. 'x' → logprob: -7.768910884857178
    8. '    
' → logprob: -7.893910884857178
    9. '[' → logprob: -8.018911361694336
    10. '	for' → logprob: -8.393911361694336

Token 194: ' count' (ID: 3605)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4891275465488434
    2. 'for' → logprob: -0.989127516746521
    3. 'count' (adapté à ' count') → logprob: -4.6141276359558105
    4. 'cnt' → logprob: -5.8641276359558105
    5. 'idx' → logprob: -6.8641276359558105
    6. 'line' → logprob: -8.614127159118652
    7. 'tokens' → logprob: -8.989127159118652
    8. 'read' → logprob: -8.989127159118652
    9. ' while' → logprob: -9.114127159118652
    10. 'i' → logprob: -9.489127159118652

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4390449821949005
    2. ' =' → logprob: -1.0640449523925781
    3. 's' → logprob: -5.064044952392578
    4. '_' → logprob: -5.939044952392578
    5. '(' → logprob: -8.189044952392578
    6. '[' → logprob: -8.564044952392578
    7. '=[]' → logprob: -8.689044952392578
    8. '   ' → logprob: -9.314044952392578
    9. '_=' → logprob: -9.564044952392578
    10. ']' → logprob: -9.814044952392578

Token 196: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001959678716957569
    2. ' ' → logprob: -6.751959800720215
    3. '{}' → logprob: -7.751959800720215
    4. '[' → logprob: -8.251959800720215
    5. 'default' → logprob: -10.376959800720215
    6. '[]' → logprob: -10.501959800720215
    7. ' [' → logprob: -11.626959800720215
    8. '{' → logprob: -11.751959800720215
    9. '[n' → logprob: -11.751959800720215
    10. ' defaultdict' → logprob: -11.876959800720215

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.056387949734926224
    2. 'default' → logprob: -3.3063879013061523
    3. '[' → logprob: -4.056387901306152
    4. '{}' → logprob: -7.306387901306152
    5. ' ' → logprob: -9.431387901306152
    6. '{' → logprob: -10.056387901306152
    7. '[]' → logprob: -10.931387901306152
    8. ' defaultdict' → logprob: -11.181387901306152
    9. ' [' → logprob: -11.556387901306152
    10. '[n' → logprob: -11.681387901306152

Token 198: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.660625159740448
    2. '   ' → logprob: -1.0356252193450928
    3. '<|end|>' → logprob: -2.6606252193450928
    4. ' 
' → logprob: -3.7856252193450928
    5. '    
' → logprob: -4.910624980926514
    6. '  
' → logprob: -5.410624980926514
    7. ' ' → logprob: -5.535624980926514
    8. 'while' → logprob: -5.785624980926514
    9. '<|end|>' → logprob: -5.785624980926514
    10. ' for' → logprob: -5.910624980926514

Token 199: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4338688254356384
    2. 'for' → logprob: -1.0588688850402832
    3. ' while' → logprob: -5.808868885040283
    4. '   ' → logprob: -6.933868885040283
    5. ' for' → logprob: -7.058868885040283
    6. 'line' → logprob: -9.933868408203125
    7. 'n' → logprob: -10.183868408203125
    8. 'x' → logprob: -10.308868408203125
    9. '	while' → logprob: -10.308868408203125
    10. '[' → logprob: -10.683868408203125

Token 201: ' len' (ID: 4631)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03561088815331459
    2. ' count' → logprob: -3.5356109142303467
    3. 'len' → logprob: -5.285610675811768
    4. ' len' → logprob: -7.160610675811768
    5. '	count' → logprob: -13.660611152648926
    6. ' ' → logprob: -14.660611152648926
    7. '   ' → logprob: -14.660611152648926
    8. '(count' → logprob: -14.910611152648926
    9. '  ' → logprob: -16.53561019897461
    10. 'True' → logprob: -16.78561019897461

Token 202: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0019524219678714871
    2. 'xn' → logprob: -6.876952648162842
    3. '(' → logprob: -7.751952648162842
    4. ' xn' → logprob: -8.001952171325684
    5. '(n' → logprob: -9.626952171325684
    6. ' (' → logprob: -10.001952171325684
    7. 'x' → logprob: -10.626952171325684
    8. ' x' → logprob: -12.126952171325684
    9. '(nx' → logprob: -12.501952171325684
    10. '(
' → logprob: -12.876952171325684

Token 203: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011474833445390686
    2. '_n' → logprob: -9.500114440917969
    3. '[n' → logprob: -11.500114440917969
    4. ')n' → logprob: -12.125114440917969
    5. '_and' → logprob: -12.625114440917969
    6. '<n' → logprob: -12.875114440917969
    7. 'and' → logprob: -12.875114440917969
    8. ')' → logprob: -12.875114440917969
    9. ' n' → logprob: -13.500114440917969
    10. '	n' → logprob: -13.625114440917969

Token 204: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6950160264968872
    2. ')' → logprob: -1.0700160264968872
    3. '<' → logprob: -1.9450160264968872
    4. ')<' → logprob: -4.945015907287598
    5. '<n' → logprob: -5.320015907287598
    6. '<x' → logprob: -6.695015907287598
    7. '<len' → logprob: -7.695015907287598
    8. '   ' → logprob: -8.445015907287598
    9. '()<' → logprob: -8.695015907287598
    10. '()' → logprob: -9.195015907287598

Token 205: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.43124061822891235
    2. '<' → logprob: -1.0562405586242676
    3. '<n' → logprob: -6.181240558624268
    4. '<x' → logprob: -8.431241035461426
    5. '<len' → logprob: -9.181241035461426
    6. ' ' → logprob: -9.806241035461426
    7. '<count' → logprob: -10.806241035461426
    8. '<num' → logprob: -11.181241035461426
    9. '<class' → logprob: -11.681241035461426
    10. '<size' → logprob: -11.806241035461426

Token 206: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02652600221335888
    2. ' n' → logprob: -3.6515259742736816
    3. '2' → logprob: -8.52652645111084
    4. ' ' → logprob: -11.27652645111084
    5. '	n' → logprob: -11.65152645111084
    6. '[n' → logprob: -13.90152645111084
    7. 'x' → logprob: -14.02652645111084
    8. '3' → logprob: -14.15152645111084
    9. '(n' → logprob: -14.52652645111084
    10. '4' → logprob: -14.77652645111084

Token 207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22945807874202728
    2. ':
' → logprob: -1.6044580936431885
    3. '   ' → logprob: -5.604457855224609
    4. '       ' → logprob: -8.97945785522461
    5. ' :' → logprob: -9.97945785522461
    6. '):
' → logprob: -10.22945785522461
    7. ' or' → logprob: -10.35445785522461
    8. '):' → logprob: -10.72945785522461
    9. ' :
' → logprob: -10.97945785522461
    10. 'n' → logprob: -11.22945785522461

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005083025433123112
    2. '   ' → logprob: -5.505083084106445
    3. 'xn' → logprob: -7.380083084106445
    4. '	   ' → logprob: -8.255083084106445
    5. 'n' → logprob: -10.255083084106445
    6. 'x' → logprob: -10.380083084106445
    7. ' xn' → logprob: -11.255083084106445
    8. '    ' → logprob: -11.755083084106445
    9. '	x' → logprob: -12.130083084106445
    10. '      ' → logprob: -12.130083084106445

Token 209: ' line' (ID: 2543)
  Prédit: 'xn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xn' → logprob: -0.0025529502891004086
    2. '   ' → logprob: -6.5025529861450195
    3. ' xn' → logprob: -7.3775529861450195
    4. '       ' → logprob: -8.00255298614502
    5. ' ' → logprob: -10.12755298614502
    6. '  ' → logprob: -10.62755298614502
    7. 'x' → logprob: -11.12755298614502
    8. '
' → logprob: -12.25255298614502
    9. '     ' → logprob: -13.25255298614502
    10. '    ' → logprob: -14.00255298614502

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14327600598335266
    2. '=' → logprob: -2.0182759761810303
    3. '_tokens' → logprob: -8.14327621459961
    4. 'tokens' → logprob: -8.76827621459961
    5. '=line' → logprob: -9.51827621459961
    6. '   ' → logprob: -10.39327621459961
    7. 's' → logprob: -11.64327621459961
    8. ' +=' → logprob: -11.76827621459961
    9. '+=' → logprob: -11.76827621459961
    10. ' ' → logprob: -12.26827621459961

Token 211: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.014216749928891659
    2. ' stdin' → logprob: -4.264216899871826
    3. '(stdin' → logprob: -10.764216423034668
    4. 'list' → logprob: -10.889216423034668
    5. '.stdin' → logprob: -12.139216423034668
    6. 'stdout' → logprob: -12.139216423034668
    7. '   ' → logprob: -13.389216423034668
    8. ' list' → logprob: -15.139216423034668
    9. 'stderr' → logprob: -15.264216423034668
    10. 'st' → logprob: -15.389216423034668

Token 212: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.057743949990254e-05
    2. '.' → logprob: -11.375020980834961
    3. '().' → logprob: -11.625020980834961
    4. '.readlines' → logprob: -16.37502098083496
    5. '.read' → logprob: -17.25002098083496
    6. ' readline' → logprob: -17.75002098083496
    7. ' .' → logprob: -18.00002098083496
    8. ').' → logprob: -20.12502098083496
    9. '].' → logprob: -20.25002098083496
    10. '.rstrip' → logprob: -20.75002098083496

Token 213: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004307884373702109
    2. '()' → logprob: -7.750430583953857
    3. '()
' → logprob: -16.375431060791016
    4. '(' → logprob: -17.500431060791016
    5. '()).' → logprob: -17.750431060791016
    6. '().'' → logprob: -18.000431060791016
    7. ' ().' → logprob: -18.375431060791016
    8. '.split' → logprob: -18.500431060791016
    9. '()

' → logprob: -19.500431060791016
    10. '()?.' → logprob: -19.625431060791016

Token 214: '       ' (ID: 309)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07628562301397324
    2. '.split' → logprob: -2.7012856006622314
    3. '       ' → logprob: -5.7012858390808105
    4. '.strip' → logprob: -6.4512858390808105
    5. ' .' → logprob: -7.3262858390808105
    6. '.' → logprob: -7.5762858390808105
    7. '.rstrip' → logprob: -8.576285362243652
    8. 'split' → logprob: -11.451285362243652
    9. '.Split' → logprob: -12.076285362243652
    10. '   ' → logprob: -12.076285362243652

Token 215: ' if' (ID: 538)
  Prédit: 'xn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xn' → logprob: -0.6967991590499878
    2. '       ' → logprob: -1.4467991590499878
    3. ' xn' → logprob: -1.4467991590499878
    4. ' if' → logprob: -4.571799278259277
    5. 'if' (adapté à ' if') → logprob: -4.946799278259277
    6. '   ' → logprob: -5.196799278259277
    7. ' parts' → logprob: -6.196799278259277
    8. 'tokens' → logprob: -6.821799278259277
    9. 'numbers' → logprob: -6.946799278259277
    10. ' numbers' → logprob: -7.071799278259277

Token 216: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4784272015094757
    2. ' not' → logprob: -0.9784271717071533
    3. 'line' → logprob: -5.603427410125732
    4. ' line' → logprob: -7.353427410125732
    5. '   ' → logprob: -11.978426933288574
    6. ' ' → logprob: -12.353426933288574
    7. 'len' → logprob: -13.978426933288574
    8. '=line' → logprob: -13.978426933288574
    9. '	not' → logprob: -14.353426933288574
    10. '
' → logprob: -14.478426933288574

Token 217: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04858794063329697
    2. ' line' → logprob: -3.0485880374908447
    3. '	line' → logprob: -15.298587799072266
    4. ' ' → logprob: -15.673587799072266
    5. '(line' → logprob: -16.798587799072266
    6. '#line' → logprob: -16.798587799072266
    7. 'len' → logprob: -17.798587799072266
    8. '[line' → logprob: -17.923587799072266
    9. '=line' → logprob: -18.048587799072266
    10. '
' → logprob: -18.423587799072266

Token 218: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5775853395462036
    2. ':
' → logprob: -0.8275853395462036
    3. '.strip' → logprob: -6.452585220336914
    4. ' :' → logprob: -10.952585220336914
    5. '   ' → logprob: -10.952585220336914
    6. ':return' → logprob: -11.202585220336914
    7. '       ' → logprob: -11.952585220336914
    8. '.' → logprob: -12.327585220336914
    9. '):
' → logprob: -13.327585220336914
    10. ' :
' → logprob: -13.327585220336914

Token 219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05008631572127342
    2. ' break' → logprob: -3.425086259841919
    3. ':
' → logprob: -4.675086498260498
    4. ':' → logprob: -5.675086498260498
    5. '       ' → logprob: -6.175086498260498
    6. '
' → logprob: -7.800086498260498
    7. 'break' → logprob: -8.80008602142334
    8. '   ' → logprob: -9.05008602142334
    9. '	break' → logprob: -9.05008602142334
    10. ',' → logprob: -9.55008602142334

Token 220: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.1537768542766571
    2. '       ' → logprob: -2.0287768840789795
    3. 'break' (adapté à ' break') → logprob: -4.6537766456604
    4. '	break' → logprob: -7.0287766456604
    5. '   ' → logprob: -7.6537766456604
    6. ' continue' → logprob: -9.778777122497559
    7. '           ' → logprob: -10.028777122497559
    8. '    ' → logprob: -11.028777122497559
    9. ' ' → logprob: -11.278777122497559
    10. 'continue' → logprob: -11.903777122497559

Token 221: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027165452484041452
    2. '
' → logprob: -6.252716541290283
    3. '<|end|>' → logprob: -7.502716541290283
    4. '        
' → logprob: -9.502717018127441
    5. ',' → logprob: -9.877717018127441
    6. '   ' → logprob: -10.002717018127441
    7. '<|end|>' → logprob: -11.252717018127441
    8. '  
' → logprob: -11.252717018127441
    9. '    
' → logprob: -11.377717018127441
    10. ' 
' → logprob: -12.002717018127441

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039657242596149445
    2. '   ' → logprob: -6.378965854644775
    3. '        
' → logprob: -7.503965854644775
    4. '<|end|>' → logprob: -7.503965854644775
    5. '    
' → logprob: -8.253965377807617
    6. '
' → logprob: -8.378965377807617
    7. ' 
' → logprob: -8.378965377807617
    8. '    ' → logprob: -8.878965377807617
    9. '  
' → logprob: -9.503965377807617
    10. '        ' → logprob: -10.378965377807617

Token 223: ' xn' (ID: 125478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.837570309638977
    2. '       ' → logprob: -1.212570309638977
    3. ' xn' → logprob: -1.712570309638977
    4. 'xn' (adapté à ' xn') → logprob: -2.4625701904296875
    5. ' parts' → logprob: -6.8375701904296875
    6. ' x' → logprob: -7.0875701904296875
    7. 'x' → logprob: -7.2125701904296875
    8. 'n' → logprob: -7.5875701904296875
    9. ' ' → logprob: -8.837570190429688
    10. '    ' → logprob: -8.962570190429688

Token 224: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.09779023379087448
    2. ' +=' → logprob: -2.597790241241455
    3. '.extend' → logprob: -4.097790241241455
    4. '.' → logprob: -6.347790241241455
    5. '+' → logprob: -8.347789764404297
    6. ' .' → logprob: -9.972789764404297
    7. ']+=' → logprob: -10.722789764404297
    8. '.+' → logprob: -11.597789764404297
    9. '   ' → logprob: -11.597789764404297
    10. '+="' → logprob: -11.847789764404297

Token 225: ' list' (ID: 1562)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.292868047952652
    2. 'list' → logprob: -1.5428680181503296
    3. '[line' → logprob: -3.917868137359619
    4. 'map' → logprob: -4.417868137359619
    5. ' line' → logprob: -5.042868137359619
    6. ' list' → logprob: -6.542868137359619
    7. ' map' → logprob: -8.792867660522461
    8. '(line' → logprob: -9.542867660522461
    9. '[' → logprob: -10.792867660522461
    10. '[list' → logprob: -11.042867660522461

Token 226: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -10.250036239624023
    3. '(int' → logprob: -15.500036239624023
    4. 'map' → logprob: -16.250036239624023
    5. '(
' → logprob: -16.500036239624023
    6. ',map' → logprob: -17.375036239624023
    7. '
' → logprob: -17.625036239624023
    8. '	map' → logprob: -17.875036239624023
    9. ' map' → logprob: -18.375036239624023
    10. '.map' → logprob: -18.750036239624023

Token 227: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.364928700961173e-05
    2. 'int' → logprob: -9.625093460083008
    3. '(' → logprob: -10.625093460083008
    4. ' int' → logprob: -13.875093460083008
    5. ',int' → logprob: -14.125093460083008
    6. '=int' → logprob: -14.875093460083008
    7. ')' → logprob: -15.125093460083008
    8. '(
' → logprob: -15.500093460083008
    9. '[int' → logprob: -15.625093460083008
    10. '   ' → logprob: -16.000093460083008

Token 228: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.04830571264028549
    2. ',' → logprob: -3.7983057498931885
    3. ',line' → logprob: -4.673305511474609
    4. '(stdin' → logprob: -4.673305511474609
    5. '(' → logprob: -5.298305511474609
    6. 'stdin' → logprob: -7.798305511474609
    7. ')' → logprob: -8.79830551147461
    8. '(
' → logprob: -9.04830551147461
    9. '#line' → logprob: -9.79830551147461
    10. ')(' → logprob: -9.79830551147461

Token 229: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04305753856897354
    2. ' line' → logprob: -3.168057441711426
    3. '(line' → logprob: -10.043057441711426
    4. '   ' → logprob: -12.668057441711426
    5. '#line' → logprob: -12.918057441711426
    6. '	line' → logprob: -13.043057441711426
    7. ',line' → logprob: -13.043057441711426
    8. '=line' → logprob: -13.043057441711426
    9. ' ' → logprob: -13.793057441711426
    10. '[line' → logprob: -14.293057441711426

Token 230: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001860174525063485
    2. '.strip' → logprob: -8.7501859664917
    3. '.split' → logprob: -11.0001859664917
    4. '.' → logprob: -11.8751859664917
    5. '()' → logprob: -12.7501859664917
    6. ' .' → logprob: -14.6251859664917
    7. ' ().' → logprob: -15.6251859664917
    8. '.readline' → logprob: -16.250186920166016
    9. '.rstrip' → logprob: -16.375186920166016
    10. 'strip' → logprob: -16.875186920166016

Token 231: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '()' → logprob: -12.87500286102295
    3. ' ().' → logprob: -16.500001907348633
    4. '.split' → logprob: -16.625001907348633
    5. '().'' → logprob: -17.875001907348633
    6. '('').' → logprob: -19.250001907348633
    7. 'split' → logprob: -19.375001907348633
    8. '.' → logprob: -19.375001907348633
    9. '('' → logprob: -19.375001907348633
    10. '()
' → logprob: -19.375001907348633

Token 232: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.7697225252486533e-06
    2. ' split' → logprob: -12.500003814697266
    3. '(split' → logprob: -17.625003814697266
    4. '.split' → logprob: -17.875003814697266
    5. 'rstrip' → logprob: -20.750003814697266
    6. 'strip' → logprob: -21.125003814697266
    7. 'spl' → logprob: -21.250003814697266
    8. ')' → logprob: -21.250003814697266
    9. ' ' → logprob: -21.375003814697266
    10. '   ' → logprob: -22.375003814697266

Token 233: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3187982439994812
    2. '()))' → logprob: -1.318798303604126
    3. ')))' → logprob: -5.818798065185547
    4. '()' → logprob: -6.568798065185547
    5. '(' → logprob: -7.943798065185547
    6. '()))
' → logprob: -8.443798065185547
    7. ')' → logprob: -8.568798065185547
    8. '())' → logprob: -8.818798065185547
    9. '))
' → logprob: -9.068798065185547
    10. '())))' → logprob: -9.318798065185547

Token 234: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' xn' (ID: 125478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9614183902740479
    2. '#' → logprob: -2.211418390274048
    3. '   ' → logprob: -2.211418390274048
    4. '
' → logprob: -2.711418390274048
    5. 'if' → logprob: -3.086418390274048
    6. 's' → logprob: -3.086418390274048
    7. 'x' → logprob: -3.336418390274048
    8. 'sum' → logprob: -3.461418390274048
    9. ')' → logprob: -3.586418390274048
    10. 'dp' → logprob: -4.086418151855469

Token 236: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6375713348388672
    2. '(' → logprob: -0.7625713348388672
    3. '(-' → logprob: -5.637571334838867
    4. '((' → logprob: -7.012571334838867
    5. '(in' → logprob: -8.637571334838867
    6. '(None' → logprob: -8.887571334838867
    7. '(random' → logprob: -9.637571334838867
    8. '(
' → logprob: -10.637571334838867
    9. '(float' → logprob: -11.387571334838867
    10. '()' → logprob: -11.637571334838867

Token 238: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019722258730325848
    2. ' )' → logprob: -8.875197410583496
    3. ')
' → logprob: -10.000197410583496
    4. '))' → logprob: -12.375197410583496
    5. ')#' → logprob: -13.250197410583496
    6. ')`' → logprob: -14.250197410583496
    7. '+' → logprob: -14.500197410583496
    8. '-' → logprob: -14.500197410583496
    9. '*' → logprob: -14.500197410583496
    10. '[' → logprob: -14.875197410583496

Token 239: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35940855741500854
    2. '<|end|>' → logprob: -1.2344086170196533
    3. '    
' → logprob: -5.984408378601074
    4. '   ' → logprob: -6.359408378601074
    5. '\n' → logprob: -6.609408378601074
    6. '<|end|>' → logprob: -6.734408378601074
    7. '  
' → logprob: -7.109408378601074
    8. ')' → logprob: -7.359408378601074
    9. ',' → logprob: -7.609408378601074
    10. '

' → logprob: -8.109408378601074

Token 240: ' xn' (ID: 125478)
  Prédit: 'xn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xn' (adapté à ' xn') → logprob: -0.020342279225587845
    2. 'n' → logprob: -5.3953423500061035
    3. 'x' → logprob: -5.8953423500061035
    4. '   ' → logprob: -6.1453423500061035
    5. '
' → logprob: -6.2703423500061035
    6. 'for' → logprob: -6.8953423500061035
    7. '    
' → logprob: -6.8953423500061035
    8. '#' → logprob: -7.1453423500061035
    9. ')' → logprob: -7.2703423500061035
    10. 'if' → logprob: -7.3953423500061035

Token 241: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013136344961822033
    2. '   ' → logprob: -5.013136386871338
    3. '<|end|>' → logprob: -6.138136386871338
    4. '    
' → logprob: -6.388136386871338
    5. ')' → logprob: -6.638136386871338
    6. 'for' → logprob: -8.76313591003418
    7. ' for' → logprob: -9.13813591003418
    8. ')
' → logprob: -9.26313591003418
    9. '  
' → logprob: -9.26313591003418
    10. '

' → logprob: -9.38813591003418

Token 243: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5081155300140381
    2. 'idx' → logprob: -1.758115530014038
    3. 'pos' → logprob: -3.508115530014038
    4. 'index' → logprob: -3.508115530014038
    5. 'for' → logprob: -3.633115530014038
    6. '
' → logprob: -3.758115530014038
    7. 'prev' → logprob: -4.008115768432617
    8. 'if' → logprob: -4.133115768432617
    9. '   ' → logprob: -4.633115768432617
    10. '#' → logprob: -4.633115768432617

Token 244: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.021296501159668
    2. 'idx' → logprob: -1.771296501159668
    3. 'ans' → logprob: -2.021296501159668
    4. 'pos' → logprob: -2.396296501159668
    5. 'i' → logprob: -2.896296501159668
    6. 'prev' → logprob: -3.021296501159668
    7. 'res' → logprob: -3.146296501159668
    8. 'answer' → logprob: -3.896296501159668
    9. 'index' → logprob: -3.896296501159668
    10. 'dp' → logprob: -4.396296501159668

Token 245: ' G' (ID: 499)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2018336057662964
    2. 'i' → logprob: -1.5768336057662964
    3. 'idx' → logprob: -1.7018336057662964
    4. 'prev' → logprob: -2.326833724975586
    5. 'pos' → logprob: -2.451833724975586
    6. 'ans' → logprob: -3.451833724975586
    7. 'p' → logprob: -3.951833724975586
    8. 'diff' → logprob: -4.701833724975586
    9. 'res' → logprob: -4.826833724975586
    10. 'dp' → logprob: -4.951833724975586

Token 246: 'CD' (ID: 8257)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.6526845693588257
    2. 'aps' → logprob: -0.9026845693588257
    3. '#' → logprob: -3.4026846885681152
    4. 'for' → logprob: -4.027684688568115
    5. 'raph' → logprob: -5.527684688568115
    6. 'from' → logprob: -5.652684688568115
    7. 'count' → logprob: -6.652684688568115
    8. 'prev' → logprob: -6.652684688568115
    9. 'roups' → logprob: -6.902684688568115
    10. 'a' → logprob: -7.152684688568115

Token 247: ' sans' (ID: 9828)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.5773984789848328
    2. '_' → logprob: -1.7023985385894775
    3. '_value' → logprob: -2.0773985385894775
    4. ' =' → logprob: -2.8273985385894775
    5. '_=' → logprob: -3.9523985385894775
    6. '=' → logprob: -4.327398300170898
    7. 'val' → logprob: -4.577398300170898
    8. 's' → logprob: -5.327398300170898
    9. '_current' → logprob: -5.327398300170898
    10. 'def' → logprob: -5.702398300170898

Token 248: ' fonction' (ID: 17610)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.657738447189331
    2. 'math' → logprob: -1.282738447189331
    3. 'def' → logprob: -2.157738447189331
    4. 'from' → logprob: -3.282738447189331
    5. ' math' → logprob: -3.657738447189331
    6. '0' → logprob: -4.90773868560791
    7. '<|end|>' → logprob: -6.03273868560791
    8. '1' → logprob: -6.15773868560791
    9. 'l' → logprob: -6.28273868560791
    10. ' import' → logprob: -6.40773868560791

Token 249: '
' (ID: 198)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.16812466084957123
    2. 'current' → logprob: -2.4181246757507324
    3. 'def' → logprob: -3.9181246757507324
    4. 'for' → logprob: -4.918124675750732
    5. 'result' → logprob: -5.293124675750732
    6. 'cur' → logprob: -5.418124675750732
    7. 'res' → logprob: -5.543124675750732
    8. 'prev' → logprob: -5.543124675750732
    9. ' current' → logprob: -5.918124675750732
    10. '   ' → logprob: -6.043124675750732

Token 250: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0223711729049683
    2. '   ' → logprob: -1.1473711729049683
    3. ' for' → logprob: -1.8973711729049683
    4. 'i' → logprob: -2.522371292114258
    5. 'g' → logprob: -3.147371292114258
    6. 'def' → logprob: -4.397371292114258
    7. ' i' → logprob: -4.397371292114258
    8. 'prev' → logprob: -5.022371292114258
    9. ' gcd' → logprob: -6.022371292114258
    10. 'd' → logprob: -6.397371292114258

Token 251: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1049833297729492
    2. 'g' → logprob: -1.2299833297729492
    3. 'for' → logprob: -1.3549833297729492
    4. 'res' → logprob: -3.354983329772949
    5. 'i' → logprob: -3.604983329772949
    6. 'from' → logprob: -3.729983329772949
    7. 'a' (adapté à ' a') → logprob: -4.354983329772949
    8. 'result' → logprob: -5.354983329772949
    9. 'while' → logprob: -5.604983329772949
    10. 'current' → logprob: -5.729983329772949

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4810308516025543
    2. '=' → logprob: -0.9810308218002319
    3. '=b' → logprob: -5.4810309410095215
    4. ',' → logprob: -6.4810309410095215
    5. ',b' → logprob: -7.9810309410095215
    6. '=n' → logprob: -8.231030464172363
    7. ' ' → logprob: -8.606030464172363
    8. '=a' → logprob: -8.606030464172363
    9. 'b' → logprob: -9.106030464172363
    10. '_=' → logprob: -10.731030464172363

Token 253: ' xn' (ID: 125478)
  Prédit: 'xn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xn' → logprob: -0.07372210174798965
    2. '0' → logprob: -2.6987221240997314
    3. 'abs' → logprob: -5.823721885681152
    4. 'x' → logprob: -8.198721885681152
    5. '1' → logprob: -8.698721885681152
    6. ' xn' → logprob: -8.823721885681152
    7. ' ' → logprob: -9.198721885681152
    8. '   ' → logprob: -10.198721885681152
    9. 'xi' → logprob: -11.073721885681152
    10. 'xr' → logprob: -11.698721885681152

Token 254: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017755765293259174
    2. '0' → logprob: -8.875177383422852
    3. '1' → logprob: -11.125177383422852
    4. '[-' → logprob: -11.375177383422852
    5. '2' → logprob: -12.250177383422852
    6. '
' → logprob: -12.500177383422852
    7. '[:-' → logprob: -14.875177383422852
    8. '[n' → logprob: -15.375177383422852
    9. '   ' → logprob: -15.375177383422852
    10. '.pop' → logprob: -15.625177383422852

Token 255: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011336666066199541
    2. '1' → logprob: -7.001133441925049
    3. '-' → logprob: -8.626133918762207
    4. ' ' → logprob: -10.251133918762207
    5. '   ' → logprob: -13.126133918762207
    6. '
' → logprob: -13.251133918762207
    7. ' -' → logprob: -13.313633918762207
    8. '[' → logprob: -14.876133918762207
    9. ']' → logprob: -15.188633918762207
    10. '2' → logprob: -15.563633918762207

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017890848219394684
    2. ']-' → logprob: -4.267890930175781
    3. ']
' → logprob: -5.642890930175781
    4. ' ]' → logprob: -9.517890930175781
    5. '-' → logprob: -9.892890930175781
    6. '],' → logprob: -11.642890930175781
    7. ']

' → logprob: -12.017890930175781
    8. ' -' → logprob: -12.392890930175781
    9. ']%' → logprob: -12.392890930175781
    10. '
' → logprob: -12.642890930175781

Token 257: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010292379185557365
    2. ' -' → logprob: -4.6352925300598145
    3. '<|end|>' → logprob: -7.6352925300598145
    4. ' ' → logprob: -11.135292053222656
    5. '-n' → logprob: -11.885292053222656
    6. '-x' → logprob: -12.385292053222656
    7. '-a' → logprob: -12.760292053222656
    8. '
' → logprob: -12.885292053222656
    9. '-b' → logprob: -13.260292053222656
    10. 'minus' → logprob: -13.385292053222656

Token 258: ' xn' (ID: 125478)
  Prédit: 'xn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xn' → logprob: -0.00015550498210359365
    2. ' xn' → logprob: -9.000155448913574
    3. 'x' → logprob: -10.500155448913574
    4. '1' → logprob: -14.000155448913574
    5. 'xm' → logprob: -14.250155448913574
    6. ' ' → logprob: -14.375155448913574
    7. '0' → logprob: -14.750155448913574
    8. '  ' → logprob: -15.000155448913574
    9. '   ' → logprob: -15.125155448913574
    10. '
' → logprob: -15.250155448913574

Token 259: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005612540990114212
    2. '0' → logprob: -7.875561237335205
    3. 's' → logprob: -8.625561714172363
    4. '1' → logprob: -15.250561714172363
    5. '[
' → logprob: -15.250561714172363
    6. '[s' → logprob: -15.250561714172363
    7. 'x' → logprob: -15.750561714172363
    8. 'a' → logprob: -15.750561714172363
    9. ' [' → logprob: -15.875561714172363
    10. '[-' → logprob: -16.125560760498047

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '[' → logprob: -15.750009536743164
    4. '   ' → logprob: -16.750009536743164
    5. '
' → logprob: -17.750009536743164
    6. '  ' → logprob: -18.312509536743164
    7. '۰' → logprob: -18.562509536743164
    8. '０' → logprob: -18.875009536743164
    9. 'x' → logprob: -19.125009536743164
    10. '=' → logprob: -19.562509536743164

Token 261: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06779369711875916
    2. '<|end|>' → logprob: -2.942793607711792
    3. '
' → logprob: -4.817793846130371
    4. ']' → logprob: -5.817793846130371
    5. ')
' → logprob: -7.567793846130371
    6. ' )' → logprob: -7.692793846130371
    7. '<|end|>' → logprob: -8.442793846130371
    8. 'for' → logprob: -8.817793846130371
    9. '])' → logprob: -9.192793846130371
    10. '   ' → logprob: -9.442793846130371

Token 262: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01112091913819313
    2. ' for' → logprob: -4.636120796203613
    3. 'i' → logprob: -6.636120796203613
    4. '1' → logprob: -11.386120796203613
    5. '   ' → logprob: -11.511120796203613
    6. ')' → logprob: -11.636120796203613
    7. '
' → logprob: -11.636120796203613
    8. ' i' → logprob: -12.136120796203613
    9. '	for' → logprob: -13.011120796203613
    10. '```' → logprob: -14.136120796203613

Token 264: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008619185537099838
    2. ' i' → logprob: -4.75861930847168
    3. '	i' → logprob: -12.63361930847168
    4. '_i' → logprob: -14.25861930847168
    5. 'k' → logprob: -14.63361930847168
    6. ' ' → logprob: -15.25861930847168
    7. 'j' → logprob: -17.13361930847168
    8. '   ' → logprob: -17.13361930847168
    9. ' ' → logprob: -17.38361930847168
    10. '
' → logprob: -18.13361930847168

Token 265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021789096295833588
    2. 'in' → logprob: -3.896789073944092
    3. ' ' → logprob: -6.896789073944092
    4. ' range' → logprob: -9.02178955078125
    5. 'range' → logprob: -9.39678955078125
    6. '  ' → logprob: -10.64678955078125
    7. '   ' → logprob: -12.02178955078125
    8. '	in' → logprob: -14.14678955078125
    9. '    ' → logprob: -15.52178955078125
    10. ',' → logprob: -15.52178955078125

Token 266: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150994554162025
    2. ' range' → logprob: -4.018150806427002
    3. '	range' → logprob: -15.01815128326416
    4. ' xrange' → logprob: -15.26815128326416
    5. '   ' → logprob: -15.51815128326416
    6. ' ' → logprob: -15.76815128326416
    7. '  ' → logprob: -16.518150329589844
    8. '(range' → logprob: -16.518150329589844
    9. 'ran' → logprob: -17.268150329589844
    10. '
' → logprob: -18.143150329589844

Token 267: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004755972418934107
    2. '2' → logprob: -5.379755973815918
    3. ' ' → logprob: -9.129755973815918
    4. '1' → logprob: -10.754755973815918
    5. '   ' → logprob: -12.254755973815918
    6. ',' → logprob: -14.754755973815918
    7. ' (' → logprob: -14.754755973815918
    8. '  ' → logprob: -15.379755973815918
    9. '[' → logprob: -15.629755973815918
    10. '	' → logprob: -16.1297550201416

Token 268: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.612634362885728e-05
    2. ' ' → logprob: -9.500076293945312
    3. '1' → logprob: -13.875076293945312
    4. '   ' → logprob: -15.375076293945312
    5. 'len' → logprob: -17.750076293945312
    6. '  ' → logprob: -18.250076293945312
    7. '
' → logprob: -18.625076293945312
    8. '２' → logprob: -18.875076293945312
    9. '    ' → logprob: -20.000076293945312
    10. '۲' → logprob: -20.125076293945312

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005662479437887669
    2. ',n' → logprob: -5.880662441253662
    3. ',len' → logprob: -6.005662441253662
    4. ' ,' → logprob: -7.880662441253662
    5. 'n' → logprob: -11.88066291809082
    6. ' ' → logprob: -13.88066291809082
    7. ',length' → logprob: -14.50566291809082
    8. '+' → logprob: -14.88066291809082
    9. '   ' → logprob: -14.88066291809082
    10. ',num' → logprob: -15.00566291809082

Token 270: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02586255595088005
    2. 'n' → logprob: -4.025862693786621
    3. ' len' → logprob: -4.900862693786621
    4. ' n' → logprob: -8.400862693786621
    5. '   ' → logprob: -11.150862693786621
    6. ' ' → logprob: -13.150862693786621
    7. '(len' → logprob: -14.275862693786621
    8. '	len' → logprob: -14.900862693786621
    9. '  ' → logprob: -15.025862693786621
    10. '
' → logprob: -15.775862693786621

Token 271: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013166937977075577
    2. '):' → logprob: -5.138166904449463
    3. '):
' → logprob: -5.138166904449463
    4. ' +' → logprob: -6.638166904449463
    5. ')' → logprob: -11.263167381286621
    6. '   ' → logprob: -12.138167381286621
    7. '):

' → logprob: -12.263167381286621
    8. '+
' → logprob: -13.138167381286621
    9. '
' → logprob: -13.513167381286621
    10. '):
' → logprob: -13.763167381286621

Token 272: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021989816799759865
    2. '       ' → logprob: -3.8969898223876953
    3. 'a' → logprob: -7.396989822387695
    4. ':' → logprob: -8.771989822387695
    5. 'b' → logprob: -8.896989822387695
    6. '    
' → logprob: -8.896989822387695
    7. '    ' → logprob: -9.396989822387695
    8. ' a' → logprob: -9.521989822387695
    9. ',' → logprob: -9.646989822387695
    10. ' b' → logprob: -10.521989822387695

Token 273: ' m' (ID: 284)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1771477311849594
    2. '   ' → logprob: -2.177147626876831
    3. 'diff' → logprob: -3.677147626876831
    4. 'd' → logprob: -4.55214786529541
    5. 'b' → logprob: -4.55214786529541
    6. ' a' → logprob: -6.30214786529541
    7. 'delta' → logprob: -8.80214786529541
    8. ' diff' → logprob: -9.42714786529541
    9. ' b' → logprob: -9.42714786529541
    10. '	a' → logprob: -9.80214786529541

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3101431727409363
    2. ' =' → logprob: -1.560143232345581
    3. 'a' → logprob: -3.310143232345581
    4. '=a' → logprob: -4.435142993927002
    5. '=m' → logprob: -6.185142993927002
    6. 'm' → logprob: -6.310142993927002
    7. '=g' → logprob: -6.935142993927002
    8. 'temp' → logprob: -7.560142993927002
    9. '   ' → logprob: -7.810142993927002
    10. 'diff' → logprob: -8.06014347076416

Token 275: ' max' (ID: 2999)
  Prédit: 'xn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xn' → logprob: -0.0023932484909892082
    2. 'abs' → logprob: -6.6273932456970215
    3. ' xn' → logprob: -6.8773932456970215
    4. ' ' → logprob: -11.50239372253418
    5. 'x' → logprob: -11.62739372253418
    6. '   ' → logprob: -12.00239372253418
    7. '  ' → logprob: -12.25239372253418
    8. ' abs' → logprob: -13.00239372253418
    9. '(x' → logprob: -14.00239372253418
    10. '    ' → logprob: -14.37739372253418

Token 276: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0271977037191391
    2. '(x' → logprob: -3.7771975994110107
    3. '(' → logprob: -6.27719783782959
    4. 'a' → logprob: -6.65219783782959
    5. '(abs' → logprob: -7.27719783782959
    6. 'abs' → logprob: -10.02719783782959
    7. 'xn' → logprob: -11.02719783782959
    8. '((' → logprob: -11.52719783782959
    9. 'x' → logprob: -12.15219783782959
    10. '1' → logprob: -13.65219783782959

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056886062026023865
    2. ' ,' → logprob: -3.3068859577178955
    3. ',x' → logprob: -4.306886196136475
    4. ',n' → logprob: -5.806886196136475
    5. '%n' → logprob: -7.056886196136475
    6. '%x' → logprob: -7.556886196136475
    7. ' %' → logprob: -7.681886196136475
    8. '%' → logprob: -9.181885719299316
    9. ',
' → logprob: -9.306885719299316
    10. ',a' → logprob: -10.056885719299316

Token 278: ' xn' (ID: 125478)
  Prédit: 'xn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xn' → logprob: -0.004242704715579748
    2. ' xn' → logprob: -5.504242897033691
    3. '   ' → logprob: -9.254242897033691
    4. ' ' → logprob: -10.004242897033691
    5. '  ' → logprob: -11.754242897033691
    6. 'a' → logprob: -12.629242897033691
    7. 'x' → logprob: -12.879242897033691
    8. '    ' → logprob: -13.129242897033691
    9. '(x' → logprob: -13.129242897033691
    10. 'abs' → logprob: -13.379242897033691

Token 279: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.749814019713085e-06
    2. 'i' → logprob: -12.000006675720215
    3. '[' → logprob: -15.250006675720215
    4. '
' → logprob: -15.875006675720215
    5. '   ' → logprob: -17.12500762939453
    6. ' i' → logprob: -17.25000762939453
    7. '[
' → logprob: -18.12500762939453
    8. '	i' → logprob: -18.25000762939453
    9. '(i' → logprob: -18.37500762939453
    10. '{i' → logprob: -18.37500762939453

Token 280: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.060754965990781784
    2. ']-' → logprob: -3.0607550144195557
    3. '-' → logprob: -5.310754776000977
    4. '+' → logprob: -5.435754776000977
    5. '],' → logprob: -6.060754776000977
    6. ' -' → logprob: -8.685754776000977
    7. ' ]' → logprob: -8.810754776000977
    8. '   ' → logprob: -10.060754776000977
    9. ']+' → logprob: -10.560754776000977
    10. '])-' → logprob: -11.060754776000977

Token 281: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -11.375021934509277
    3. 'i' → logprob: -12.375021934509277
    4. '0' → logprob: -12.375021934509277
    5. '   ' → logprob: -13.375021934509277
    6. '
' → logprob: -16.37502098083496
    7. '-' → logprob: -16.37502098083496
    8. '  ' → logprob: -17.87502098083496
    9. ']' → logprob: -18.25002098083496
    10. '```' → logprob: -18.25002098083496

Token 282: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37337905168533325
    2. '1' → logprob: -1.2483789920806885
    3. ']' → logprob: -3.8733789920806885
    4. ' ' → logprob: -6.373379230499268
    5. '-' → logprob: -6.873379230499268
    6. '   ' → logprob: -7.373379230499268
    7. ']-' → logprob: -8.49837875366211
    8. ' i' → logprob: -10.12337875366211
    9. '
' → logprob: -10.12337875366211
    10. ' -' → logprob: -10.49837875366211

Token 283: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8239538073539734
    2. ']' → logprob: -0.8239538073539734
    3. ' -' → logprob: -2.198953866958618
    4. ')' → logprob: -4.698953628540039
    5. ']-' → logprob: -6.073953628540039
    6. ')-' → logprob: -9.823953628540039
    7. ' ' → logprob: -10.073953628540039
    8. ' ]' → logprob: -10.198953628540039
    9. '}' → logprob: -10.948953628540039
    10. ' ' → logprob: -11.073953628540039

Token 284: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5236362814903259
    2. ' -' → logprob: -0.8986362814903259
    3. ')' → logprob: -8.023635864257812
    4. '-x' → logprob: -9.023635864257812
    5. ' ' → logprob: -11.023635864257812
    6. '-
' → logprob: -11.773635864257812
    7. '-n' → logprob: -11.898635864257812
    8. '%' → logprob: -12.273635864257812
    9. ',' → logprob: -12.398635864257812
    10. '
' → logprob: -12.648635864257812

Token 285: ' xn' (ID: 125478)
  Prédit: 'xn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xn' → logprob: -0.0007880675257183611
    2. 'x' → logprob: -7.87578821182251
    3. ' xn' → logprob: -7.87578821182251
    4. 'xi' → logprob: -11.500787734985352
    5. '   ' → logprob: -11.500787734985352
    6. '  ' → logprob: -12.625787734985352
    7. '	x' → logprob: -13.500787734985352
    8. '
' → logprob: -14.375787734985352
    9. ' ' → logprob: -14.750787734985352
    10. 'xm' → logprob: -15.500787734985352

Token 286: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038147639483213425
    2. '[i' → logprob: -3.2881476879119873
    3. ' i' → logprob: -9.288147926330566
    4. '	i' → logprob: -12.288147926330566
    5. '   ' → logprob: -12.663147926330566
    6. '[' → logprob: -12.913147926330566
    7. '```' → logprob: -14.663147926330566
    8. '
' → logprob: -14.788147926330566
    9. ')i' → logprob: -15.038147926330566
    10. 'x' → logprob: -15.163147926330566

Token 287: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18463216722011566
    2. ')
' → logprob: -1.8096321821212769
    3. ' )' → logprob: -6.309632301330566
    4. ')a' → logprob: -6.309632301330566
    5. ' )
' → logprob: -6.809632301330566
    6. ')#' → logprob: -10.184632301330566
    7. ')

' → logprob: -10.434632301330566
    8. ')
' → logprob: -10.559632301330566
    9. ')m' → logprob: -11.559632301330566
    10. ')b' → logprob: -12.059632301330566

Token 288: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05205119028687477
    2. 'a' → logprob: -3.427051305770874
    3. '       ' → logprob: -4.927051067352295
    4. ' a' → logprob: -5.552051067352295
    5. ',' → logprob: -6.302051067352295
    6. 'g' → logprob: -6.927051067352295
    7. ',a' → logprob: -7.302051067352295
    8. ')' → logprob: -7.552051067352295
    9. 'b' → logprob: -7.552051067352295
    10. '    
' → logprob: -7.802051067352295

Token 289: ' mi' (ID: 3997)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7023435831069946
    2. '   ' → logprob: -0.9523435831069946
    3. 'while' → logprob: -2.827343463897705
    4. 'min' → logprob: -3.952343463897705
    5. 'd' → logprob: -4.327343463897705
    6. 'b' → logprob: -4.952343463897705
    7. '    
' → logprob: -5.077343463897705
    8. 'c' → logprob: -5.827343463897705
    9. 's' → logprob: -5.952343463897705
    10. 'm' → logprob: -6.202343463897705

Token 290: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007212492637336254
    2. '=' → logprob: -7.375721454620361
    3. ' =' → logprob: -9.500720977783203
    4. '=n' → logprob: -12.625720977783203
    5. '=
' → logprob: -12.875720977783203
    6. 'ni' → logprob: -13.375720977783203
    7. '   ' → logprob: -13.375720977783203
    8. '
' → logprob: -13.375720977783203
    9. '	n' → logprob: -13.875720977783203
    10. 'nu' → logprob: -14.375720977783203

Token 291: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01084265299141407
    2. ' min' → logprob: -5.010842800140381
    3. 'a' → logprob: -5.510842800140381
    4. ' a' → logprob: -10.385842323303223
    5. '	min' → logprob: -11.010842323303223
    6. '   ' → logprob: -11.385842323303223
    7. ' ' → logprob: -12.135842323303223
    8. '(min' → logprob: -12.635842323303223
    9. 'max' → logprob: -13.010842323303223
    10. 'math' → logprob: -14.010842323303223

Token 292: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.6166903151315637e-05
    2. '(m' → logprob: -11.500016212463379
    3. 'a' → logprob: -12.375016212463379
    4. '(' → logprob: -13.625016212463379
    5. 'm' → logprob: -15.500016212463379
    6. '(mi' → logprob: -15.750016212463379
    7. ' (' → logprob: -16.750015258789062
    8. '(
' → logprob: -16.750015258789062
    9. '(ai' → logprob: -17.500015258789062
    10. 'mi' → logprob: -17.875015258789062

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022815766278654337
    2. ',m' → logprob: -6.377281665802002
    3. ' ,' → logprob: -7.502281665802002
    4. 'm' → logprob: -11.502281188964844
    5. ',
' → logprob: -11.502281188964844
    6. ')' → logprob: -13.127281188964844
    7. ' m' → logprob: -13.627281188964844
    8. ',n' → logprob: -14.127281188964844
    9. 'a' → logprob: -14.252281188964844
    10. ',a' → logprob: -14.377281188964844

Token 294: ' xn' (ID: 125478)
  Prédit: 'xn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xn' → logprob: -0.09878948330879211
    2. ' xn' → logprob: -2.4737894535064697
    3. 'm' → logprob: -4.973789691925049
    4. ' m' → logprob: -6.473789691925049
    5. '   ' → logprob: -7.848789691925049
    6. 'x' → logprob: -8.22378921508789
    7. '    ' → logprob: -8.47378921508789
    8. 'a' → logprob: -8.84878921508789
    9. ' ' → logprob: -9.22378921508789
    10. ' x' → logprob: -10.22378921508789

Token 295: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.898723561083898e-05
    2. 'i' → logprob: -9.625079154968262
    3. '[' → logprob: -11.375079154968262
    4. '(i' → logprob: -14.750079154968262
    5. '{i' → logprob: -15.625079154968262
    6. ',i' → logprob: -15.750079154968262
    7. '[m' → logprob: -15.750079154968262
    8. '[n' → logprob: -16.250078201293945
    9. '[
' → logprob: -16.250078201293945
    10. ' i' → logprob: -16.750078201293945

Token 296: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03475290164351463
    2. ' +' → logprob: -3.40975284576416
    3. '[i' → logprob: -6.90975284576416
    4. 'i' → logprob: -10.28475284576416
    5. '+i' → logprob: -10.40975284576416
    6. '   ' → logprob: -10.65975284576416
    7. '[' → logprob: -12.03475284576416
    8. ']' → logprob: -12.28475284576416
    9. '+
' → logprob: -13.28475284576416
    10. '(i' → logprob: -14.03475284576416

Token 297: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005132370279170573
    2. ' ' → logprob: -7.625513076782227
    3. '   ' → logprob: -11.250513076782227
    4. 'i' → logprob: -11.625513076782227
    5. '[i' → logprob: -14.000513076782227
    6. '+' → logprob: -14.375513076782227
    7. '  ' → logprob: -14.750513076782227
    8. 'n' → logprob: -15.000513076782227
    9. '    ' → logprob: -15.625513076782227
    10. '     ' → logprob: -15.750513076782227

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001873189932666719
    2. 'i' → logprob: -6.876873016357422
    3. '+' → logprob: -7.376873016357422
    4. ' ' → logprob: -9.126873016357422
    5. '[i' → logprob: -9.501873016357422
    6. '(i' → logprob: -11.126873016357422
    7. '   ' → logprob: -12.251873016357422
    8. ' +' → logprob: -13.001873016357422
    9. '```' → logprob: -13.001873016357422
    10. ' i' → logprob: -13.376873016357422

Token 299: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2029903084039688
    2. '-' → logprob: -1.7029902935028076
    3. ']' → logprob: -6.702990531921387
    4. ')' → logprob: -8.327990531921387
    5. ' ' → logprob: -9.577990531921387
    6. '[' → logprob: -11.202990531921387
    7. '   ' → logprob: -12.077990531921387
    8. ' ' → logprob: -12.827990531921387
    9. '#' → logprob: -12.952990531921387
    10. ' ]' → logprob: -13.515490531921387

Token 300: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31331050395965576
    2. '-' → logprob: -1.3133105039596558
    3. ')' → logprob: -10.313310623168945
    4. ' ' → logprob: -11.813310623168945
    5. '[' → logprob: -12.688310623168945
    6. ' ' → logprob: -13.438310623168945
    7. ' -
' → logprob: -14.563310623168945
    8. '-x' → logprob: -14.938310623168945
    9. '   ' → logprob: -15.188310623168945
    10. '<|end|>' → logprob: -15.313310623168945

Token 301: ' xn' (ID: 125478)
  Prédit: 'xn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xn' → logprob: -4.4418171455617994e-05
    2. ' xn' → logprob: -10.500044822692871
    3. 'x' → logprob: -11.750044822692871
    4. 'xi' → logprob: -12.000044822692871
    5. 'i' → logprob: -14.375044822692871
    6. 'a' → logprob: -14.750044822692871
    7. '   ' → logprob: -14.750044822692871
    8. 'xo' → logprob: -15.125044822692871
    9. '
' → logprob: -15.625044822692871
    10. ' ' → logprob: -15.875044822692871

Token 302: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029806962236762047
    2. '[i' → logprob: -3.5298068523406982
    3. ')' → logprob: -10.279807090759277
    4. ' i' → logprob: -11.279807090759277
    5. '```' → logprob: -12.779807090759277
    6. '   ' → logprob: -13.154807090759277
    7. '_i' → logprob: -13.779807090759277
    8. '	i' → logprob: -13.779807090759277
    9. ')i' → logprob: -14.529807090759277
    10. ']' → logprob: -14.529807090759277

Token 303: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023252001032233238
    2. ')
' → logprob: -3.773252010345459
    3. ')
' → logprob: -12.7732515335083
    4. '       ' → logprob: -13.6482515335083
    5. '   ' → logprob: -14.1482515335083
    6. ')

' → logprob: -14.2732515335083
    7. ')`' → logprob: -15.2732515335083
    8. ' )' → logprob: -15.5232515335083
    9. '```' → logprob: -16.023252487182617
    10. ')`
' → logprob: -16.398252487182617

Token 304: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6059558391571045
    2. '   ' → logprob: -0.8559558391571045
    3. 'while' → logprob: -3.7309558391571045
    4. '
' → logprob: -5.855956077575684
    5. '    
' → logprob: -6.980956077575684
    6. ' while' → logprob: -6.980956077575684
    7. ' a' → logprob: -8.105956077575684
    8. '  ' → logprob: -8.980956077575684
    9. 'r' → logprob: -9.855956077575684
    10. 't' → logprob: -9.980956077575684

Token 305: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6092953681945801
    2. 'a' → logprob: -0.8592953681945801
    3. 'r' → logprob: -4.10929536819458
    4. '   ' → logprob: -4.35929536819458
    5. '    
' → logprob: -6.73429536819458
    6. ' while' → logprob: -7.35929536819458
    7. '
' → logprob: -7.73429536819458
    8. '       ' → logprob: -7.98429536819458
    9. '        
' → logprob: -7.98429536819458
    10. 'd' → logprob: -8.984294891357422

Token 306: ' mi' (ID: 3997)
  Prédit: 'mi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mi' → logprob: -5.741137283621356e-05
    2. ' mi' → logprob: -9.875057220458984
    3. '(mi' → logprob: -12.250057220458984
    4. 'm' → logprob: -14.000057220458984
    5. 'ma' → logprob: -16.625057220458984
    6. '   ' → logprob: -16.875057220458984
    7. 'mo' → logprob: -18.375057220458984
    8. 'mu' → logprob: -18.750057220458984
    9. '  ' → logprob: -19.250057220458984
    10. ' ' → logprob: -19.250057220458984

Token 307: ':
' (ID: 734)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6892147660255432
    2. '>' → logprob: -0.8142147660255432
    3. ':
' → logprob: -3.5642147064208984
    4. ':' → logprob: -3.8142147064208984
    5. ' !=' → logprob: -5.689214706420898
    6. 'and' → logprob: -8.064214706420898
    7. 'm' → logprob: -8.064214706420898
    8. ' >' → logprob: -9.189214706420898
    9. 'is' → logprob: -9.439214706420898
    10. '!==' → logprob: -9.439214706420898

Token 308: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0035434053279459476
    2. 'temp' → logprob: -6.378543376922607
    3. 'tmp' → logprob: -6.878543376922607
    4. ' a' → logprob: -7.628543376922607
    5. 't' → logprob: -9.003543853759766
    6. 'm' → logprob: -9.378543853759766
    7. '       ' → logprob: -10.253543853759766
    8. '	a' → logprob: -10.878543853759766
    9. '           ' → logprob: -10.878543853759766
    10. 'r' → logprob: -11.003543853759766

Token 309: ' m' (ID: 284)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004742831224575639
    2. 'temp' → logprob: -8.500473976135254
    3. 'tmp' → logprob: -8.625473976135254
    4. 'm' (adapté à ' m') → logprob: -10.500473976135254
    5. 't' → logprob: -10.625473976135254
    6. ' a' → logprob: -10.875473976135254
    7. 'r' → logprob: -10.875473976135254
    8. '```' → logprob: -14.500473976135254
    9. '           ' → logprob: -15.625473976135254
    10. '	a' → logprob: -15.625473976135254

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056896429508924484
    2. '%=' → logprob: -2.931896448135376
    3. '=' → logprob: -7.056896209716797
    4. '%' → logprob: -7.431896209716797
    5. ',m' → logprob: -8.431896209716797
    6. ' ,' → logprob: -8.931896209716797
    7. ',a' → logprob: -9.306896209716797
    8. 'm' → logprob: -10.056896209716797
    9. ' %=' → logprob: -10.806896209716797
    10. '%,' → logprob: -11.056896209716797

Token 311: ' mi' (ID: 3997)
  Prédit: 'mi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mi' → logprob: -0.0037591091822832823
    2. 'a' → logprob: -5.753758907318115
    3. '=' → logprob: -7.628758907318115
    4. ' mi' → logprob: -10.003759384155273
    5. ' a' → logprob: -11.003759384155273
    6. '(mi' → logprob: -11.628759384155273
    7. 'ai' → logprob: -11.753759384155273
    8. ' =' → logprob: -12.003759384155273
    9. 'm' → logprob: -12.628759384155273
    10. '<|end|>' → logprob: -13.628759384155273

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014165272004902363
    2. ' =' → logprob: -4.26416540145874
    3. '=m' → logprob: -14.139164924621582
    4. '%=' → logprob: -14.264164924621582
    5. '=
' → logprob: -16.2641658782959
    6. '<|end|>' → logprob: -16.3891658782959
    7. '.=' → logprob: -16.8891658782959
    8. '=int' → logprob: -17.0141658782959
    9. ',' → logprob: -17.0141658782959
    10. '=}' → logprob: -17.6391658782959

Token 313: ' mi' (ID: 3997)
  Prédit: 'mi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mi' → logprob: -0.00726513983681798
    2. ' mi' → logprob: -5.007265090942383
    3. '(mi' → logprob: -7.507265090942383
    4. '(' → logprob: -15.382265090942383
    5. '.mi' → logprob: -16.257265090942383
    6. ' (' → logprob: -16.257265090942383
    7. ' ' → logprob: -17.007265090942383
    8. '   ' → logprob: -18.007265090942383
    9. 'me' → logprob: -18.632265090942383
    10. 'ми' → logprob: -19.007265090942383

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022704441100358963
    2. 'm' → logprob: -3.8977043628692627
    3. ',m' → logprob: -6.397704601287842
    4. ' m' → logprob: -7.647704601287842
    5. ' ,' → logprob: -11.022704124450684
    6. 'mod' → logprob: -14.522704124450684
    7. ' ' → logprob: -15.272704124450684
    8. '%m' → logprob: -15.522704124450684
    9. ' mod' → logprob: -16.397705078125
    10. 'a' → logprob: -16.522705078125

Token 315: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006715370807796717
    2. ' m' → logprob: -5.006715297698975
    3. '[m' → logprob: -17.756715774536133
    4. '	m' → logprob: -18.256715774536133
    5. '
' → logprob: -18.881715774536133
    6. ' ' → logprob: -19.131715774536133
    7. '[' → logprob: -19.506715774536133
    8. '(m' → logprob: -19.506715774536133
    9. '%m' → logprob: -19.631715774536133
    10. 'м' → logprob: -20.006715774536133

Token 316: ' %' (ID: 1851)
  Prédit: '%m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%m' → logprob: -0.10971686244010925
    2. ' %' → logprob: -2.7347168922424316
    3. 'm' → logprob: -3.7347168922424316
    4. '%' → logprob: -4.234716892242432
    5. '%i' → logprob: -7.984716892242432
    6. ' m' → logprob: -8.359716415405273
    7. 'mod' → logprob: -10.734716415405273
    8. '%s' → logprob: -11.484716415405273
    9. '%d' → logprob: -11.609716415405273
    10. '%n' → logprob: -11.984716415405273

Token 317: ' mi' (ID: 3997)
  Prédit: 'mi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mi' → logprob: -1.6240566083070007e-06
    2. ' mi' → logprob: -13.375001907348633
    3. 'm' → logprob: -18.375001907348633
    4. '(mi' → logprob: -21.875001907348633
    5. ' ' → logprob: -22.375001907348633
    6. 'mo' → logprob: -23.125001907348633
    7. 'ma' → logprob: -23.375001907348633
    8. 'ми' → logprob: -23.375001907348633
    9. '.mi' → logprob: -23.875001907348633
    10. 'vi' → logprob: -24.500001907348633

Token 318: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6358023285865784
    2. 'a' → logprob: -0.7608023285865784
    3. ' a' → logprob: -5.885802268981934
    4. '       ' → logprob: -8.385802268981934
    5. '  ' → logprob: -10.010802268981934
    6. '<|end|>' → logprob: -10.135802268981934
    7. '
' → logprob: -10.635802268981934
    8. ' ' → logprob: -10.885802268981934
    9. 'm' → logprob: -11.385802268981934
    10. '    
' → logprob: -11.510802268981934

Token 319: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06322471052408218
    2. '   ' → logprob: -2.8132247924804688
    3. '       ' → logprob: -6.938224792480469
    4. ' a' → logprob: -8.188224792480469
    5. '  ' → logprob: -12.813224792480469
    6. ' ' → logprob: -13.188224792480469
    7. '           ' → logprob: -13.313224792480469
    8. '	a' → logprob: -14.063224792480469
    9. '
' → logprob: -14.563224792480469
    10. '    ' → logprob: -15.813224792480469

Token 320: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00045498309191316366
    2. ' a' → logprob: -7.875454902648926
    3. '   ' → logprob: -9.500454902648926
    4. ' ' → logprob: -16.875455856323242
    5. '  ' → logprob: -16.875455856323242
    6. '	a' → logprob: -17.375455856323242
    7. '       ' → logprob: -17.750455856323242
    8. '
' → logprob: -18.000455856323242
    9. '    
' → logprob: -18.375455856323242
    10. '    ' → logprob: -19.500455856323242

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020828247070312
    2. '=' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.350208282470703
    4. ',' → logprob: -14.975208282470703
    5. ' +=' → logprob: -15.350208282470703
    6. ' =
' → logprob: -15.850208282470703
    7. ' |=' → logprob: -16.475208282470703
    8. ' =)' → logprob: -16.850208282470703
    9. '＝' → logprob: -16.975208282470703
    10. ' ' → logprob: -17.100208282470703

Token 322: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0024756586644798517
    2. ' m' → logprob: -6.002475738525391
    3. '	m' → logprob: -19.50247573852539
    4. '<|end|>' → logprob: -19.75247573852539
    5. ' ' → logprob: -20.37747573852539
    6. '0' → logprob: -22.87747573852539
    7. ')m' → logprob: -22.87747573852539
    8. ' м' → logprob: -23.00247573852539
    9. '   ' → logprob: -23.12747573852539
    10. '
' → logprob: -23.25247573852539

Token 323: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025969420094043016
    2. ' print' → logprob: -6.377596855163574
    3. '<|end|>' → logprob: -7.252596855163574
    4. '   ' → logprob: -9.127596855163574
    5. '
' → logprob: -10.252596855163574
    6. ')' → logprob: -11.127596855163574
    7. '```' → logprob: -11.502596855163574
    8. '#' → logprob: -11.877596855163574
    9. '#print' → logprob: -12.252596855163574
    10. '(print' → logprob: -13.502596855163574

Token 325: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.625
    3. ' print' → logprob: -17.25
    4. '#print' → logprob: -19.5
    5. 'pr' → logprob: -20.875
    6. ')' → logprob: -21.25
    7. '    
' → logprob: -21.25
    8. '```' → logprob: -21.25
    9. 'printf' → logprob: -21.625
    10. 'result' → logprob: -22.125

Token 326: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.845798710244708e-05
    2. 'a' → logprob: -10.625038146972656
    3. '(' → logprob: -11.375038146972656
    4. ' (' → logprob: -13.375038146972656
    5. '(abs' → logprob: -13.875038146972656
    6. '(ans' → logprob: -17.250038146972656
    7. ' a' → logprob: -17.375038146972656
    8. '()' → logprob: -17.500038146972656
    9. '((' → logprob: -17.625038146972656
    10. '(
' → logprob: -17.750038146972656

Token 327: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')
' → logprob: -16.000001907348633
    4. '))' → logprob: -18.500001907348633
    5. ')`' → logprob: -18.625001907348633
    6. '')' → logprob: -18.875001907348633
    7. ')#' → logprob: -20.000001907348633
    8. ')}' → logprob: -20.875001907348633
    9. ')a' → logprob: -20.875001907348633
    10. '`)' → logprob: -20.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 325
Tokens correctement prédits (1ère position, stricte): 107
Tokens correctement prédits (1ère position, avec adaptation): 116
Tokens correctement prédits (top 10): 247
Précision stricte (1ère position): 32.92%
Précision adaptée (1ère position): 35.69%
Précision (top 10): 76.00%
================================================================================
